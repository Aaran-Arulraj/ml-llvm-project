; ModuleID = 'sel-sched.c'
source_filename = "sel-sched.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.VEC_sel_global_bb_info_def_heap = type { %struct.VEC_sel_global_bb_info_def_base }
%struct.VEC_sel_global_bb_info_def_base = type { i32, i32, [1 x %struct.sel_global_bb_info_def] }
%struct.sel_global_bb_info_def = type { %struct.bitmap_head_def*, i8 }
%struct.VEC_sel_insn_data_def_heap = type { %struct.VEC_sel_insn_data_def_base }
%struct.VEC_sel_insn_data_def_base = type { i32, i32, [1 x %struct._sel_insn_data] }
%struct._sel_insn_data = type { %struct._expr, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.htab*, %struct.deps, %struct.rtx_def*, i32, i32, i32, i8 }
%struct._expr = type { %struct.vinsn_def*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.VEC_expr_history_def_heap*, i8, i8 }
%struct.vinsn_def = type { %struct.rtx_def*, %struct.idata_def, i32, i32, i32, i32, i8 }
%struct.idata_def = type { i32, %struct.rtx_def*, %struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_expr_history_def_heap = type { %struct.VEC_expr_history_def_base }
%struct.VEC_expr_history_def_base = type { i32, i32, [1 x %struct.expr_history_def_1] }
%struct.expr_history_def_1 = type { i32, %struct.vinsn_def*, %struct.vinsn_def*, i32, i32 }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.deps = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, %struct.deps_reg*, %struct.bitmap_head_def, %struct.bitmap_head_def, i32, i8 }
%struct.deps_reg = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.code_motion_path_driver_info_def = type { i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)*, void (%struct.rtx_def*, %struct._expr*, %struct.cmpd_local_params*, i8*)*, i8 (%struct.rtx_def*, %struct._list_node*, i8*)*, void (%struct.rtx_def*, %struct.rtx_def*, i32, %struct.cmpd_local_params*, i8*)*, void (%struct.cmpd_local_params*, i8*)*, void (%struct.rtx_def*, i8*)*, void (%struct.rtx_def*, %struct.cmpd_local_params*, i8*)*, i32, i8* }
%struct.cmpd_local_params = type { %struct.edge_def*, %struct.edge_def*, %struct._expr*, %struct._expr*, %struct._list_node*, i8 }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct._list_node = type { %struct._list_node*, %union.anon.0 }
%union.anon.0 = type { %struct._fence }
%struct._fence = type { %struct.rtx_def*, i8*, i32, i32, %struct._list_node*, %struct.deps*, i8*, %struct.VEC_rtx_gc*, i32*, i32, %struct.rtx_def*, i32, %struct.rtx_def*, i8 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.spec_info_def = type { i32, %struct._IO_FILE*, i32, i32, i32 }
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.VEC_insn_t_heap = type { %struct.VEC_insn_t_base }
%struct.VEC_insn_t_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_sel_region_bb_info_def_heap = type { %struct.VEC_sel_region_bb_info_def_base }
%struct.VEC_sel_region_bb_info_def_base = type { i32, i32, [1 x %struct.sel_region_bb_info_def] }
%struct.sel_region_bb_info_def = type { %struct.rtx_def*, %struct._list_node*, i32 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.VEC_vinsn_t_heap = type { %struct.VEC_vinsn_t_base }
%struct.VEC_vinsn_t_base = type { i32, i32, [1 x %struct.vinsn_def*] }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.ready_list = type { %struct.rtx_def**, i32, i32, i32, i32 }
%struct.VEC_expr_t_heap = type { %struct.VEC_expr_t_base }
%struct.VEC_expr_t_base = type { i32, i32, [1 x %struct._expr*] }
%struct.reg_rename = type { i64, i64, i8 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.hard_regs_data = type { [87 x i64], [87 x i8], [53 x i64], [87 x i64], i64, i64 }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [14 x %struct.rtx_def**], [14 x i8], i8, i8, i8, [30 x i8], %struct.rtx_def* }
%struct.operand_alternative = type { i8*, i32, i32, i32, i32, i8 }
%struct.reg_info_t = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.haifa_sched_info = type { void ()*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8 (%struct.rtx_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, i32 }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.moveop_static_params = type { %struct.rtx_def*, %struct._expr*, i32, i8 }
%struct.fur_static_params = type { %struct.bitmap_head_def*, %struct._list_node**, i8 }
%struct._def = type { %struct.rtx_def*, i8 }
%struct._list_iterator = type { %struct._list_node**, i8, i8 }
%struct.VEC_basic_block_heap = type { %struct.VEC_basic_block_base }
%struct.VEC_rtx_heap = type { %struct.VEC_rtx_base }
%struct.flist_tail_def = type { %struct._list_node*, %struct._list_node** }
%struct.succ_iterator = type { i8, %struct.edge_def*, %struct.edge_def*, %struct.edge_iterator, %struct.basic_block_def*, i16, i16, i32, %struct.VEC_edge_heap* }
%struct.VEC_edge_heap = type { %struct.VEC_edge_base }
%struct.transformed_insns = type { %struct.vinsn_def*, %struct.vinsn_def*, i32, i32, i8 }
%struct.rtx_search_arg = type { %struct.rtx_def*, i32 }
%struct.succs_info = type { i16, %struct.VEC_rtx_heap*, %struct.VEC_int_heap*, %struct.VEC_rtx_heap*, i32, i32, i32 }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct._bnd = type { %struct.rtx_def*, %struct._list_node*, %struct._list_node*, %struct._list_node*, %struct.deps* }
%struct.hard_reg_set_iterator = type { i64*, i16, i16, i64 }

@_forced_ebb_heads = internal global %struct.bitmap_head_def zeroinitializer, align 8, !dbg !0
@forced_ebb_heads = dso_local global %struct.bitmap_head_def* @_forced_ebb_heads, align 8, !dbg !2283
@blocks_to_reschedule = dso_local global %struct.bitmap_head_def* null, align 8, !dbg !2286
@ignore_first = internal global i8 0, align 1, !dbg !2350
@sel_global_bb_info = external dso_local global %struct.VEC_sel_global_bb_info_def_heap*, align 8
@.str = private unnamed_addr constant [12 x i8] c"sel-sched.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@s_i_d = external dso_local global %struct.VEC_sel_insn_data_def_heap*, align 8
@sched_luids = external dso_local global %struct.VEC_int_heap*, align 8
@sched_verbose = external dso_local global i32, align 4
@sched_dump_to_dot_p = external dso_local global i8, align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"sel_add_to_insn_priority: insn %d, by %d (now %d+%d).\0A\00", align 1
@sched_dump = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"move_op\00", align 1
@move_op_hooks = dso_local global %struct.code_motion_path_driver_info_def { i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)* @move_op_on_enter, void (%struct.rtx_def*, %struct._expr*, %struct.cmpd_local_params*, i8*)* @move_op_orig_expr_found, i8 (%struct.rtx_def*, %struct._list_node*, i8*)* @move_op_orig_expr_not_found, void (%struct.rtx_def*, %struct.rtx_def*, i32, %struct.cmpd_local_params*, i8*)* @move_op_merge_succs, void (%struct.cmpd_local_params*, i8*)* @move_op_after_merge_succs, void (%struct.rtx_def*, i8*)* @move_op_ascend, void (%struct.rtx_def*, %struct.cmpd_local_params*, i8*)* @move_op_at_first_insn, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0) }, align 8, !dbg !2288
@.str.5 = private unnamed_addr constant [15 x i8] c"find_used_regs\00", align 1
@fur_hooks = dso_local global %struct.code_motion_path_driver_info_def { i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)* @fur_on_enter, void (%struct.rtx_def*, %struct._expr*, %struct.cmpd_local_params*, i8*)* @fur_orig_expr_found, i8 (%struct.rtx_def*, %struct._list_node*, i8*)* @fur_orig_expr_not_found, void (%struct.rtx_def*, %struct.rtx_def*, i32, %struct.cmpd_local_params*, i8*)* @fur_merge_succs, void (%struct.cmpd_local_params*, i8*)* null, void (%struct.rtx_def*, i8*)* null, void (%struct.rtx_def*, %struct.cmpd_local_params*, i8*)* @fur_at_first_insn, i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0) }, align 8, !dbg !2332
@.str.6 = private unnamed_addr constant [22 x i8] c"Scheduling region %d\0A\00", align 1
@pipelining_p = common dso_local global i8 0, align 1, !dbg !2334
@cfun = external dso_local global %struct.function*, align 8
@nr_regions = external dso_local global i32, align 4
@bookkeeping_p = common dso_local global i8 0, align 1, !dbg !2336
@max_insns_to_rename = common dso_local global i32 0, align 4, !dbg !2338
@code_motion_path_driver_info = common dso_local global %struct.code_motion_path_driver_info_def* null, align 8, !dbg !2340
@sched_emulate_haifa_p = common dso_local global i32 0, align 4, !dbg !2343
@global_level = common dso_local global i32 0, align 4, !dbg !2345
@fences = common dso_local global %struct._list_node* null, align 8, !dbg !2347
@.str.7 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@nop_pattern = external dso_local global %struct.rtx_def*, align 8
@current_originators = internal global %struct.bitmap_head_def* null, align 8, !dbg !2352
@current_copies = internal global %struct.bitmap_head_def* null, align 8, !dbg !2354
@first_emitted_uid = internal global i32 0, align 4, !dbg !2356
@num_insns_scheduled = internal global i32 0, align 4, !dbg !2358
@max_uid_before_move_op = internal global i32 0, align 4, !dbg !2360
@stat_bookkeeping_copies = internal global i32 0, align 4, !dbg !2362
@targetm = external dso_local global %struct.gcc_target, align 8
@spec_info = external dso_local global %struct.spec_info_def*, align 8
@vec_temp_moveop_nops = internal global %struct.VEC_insn_t_heap* null, align 8, !dbg !2364
@.str.8 = private unnamed_addr constant [8 x i8] c"Moving \00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c" through %d: \00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"removed\0A\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"unchanged\0A\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"unchanged (as RHS)\0A\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"changed: \00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"removed (cached)\0A\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"unchanged (cached)\0A\00", align 1
@.str.17 = private unnamed_addr constant [47 x i8] c"unchanged (as RHS, cached, inside insn group)\0A\00", align 1
@enable_schedule_as_rhs_p = internal global i8 0, align 1, !dbg !2366
@.str.18 = private unnamed_addr constant [28 x i8] c"unchanged (as RHS, cached)\0A\00", align 1
@.str.19 = private unnamed_addr constant [55 x i8] c"removed (cached as RHS, but renaming is now disabled)\0A\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"changed (cached): \00", align 1
@was_target_conflict = internal global i8 0, align 1, !dbg !2368
@.str.21 = private unnamed_addr constant [26 x i8] c"no bookkeeping required: \00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"only one pred edge: \00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"found existing block: \00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"would create bookkeeping block: \00", align 1
@hard_regno_nregs = external dso_local global [53 x [87 x i8]], align 16
@.str.25 = private unnamed_addr constant [38 x i8] c"Generating bookkeeping insn (%d->%d)\0A\00", align 1
@.str.26 = private unnamed_addr constant [50 x i8] c"New block is %i, split from bookkeeping block %i\0A\00", align 1
@.str.27 = private unnamed_addr constant [38 x i8] c"Pre-existing bookkeeping block is %i\0A\00", align 1
@current_loop_nest = external dso_local global %struct.loop*, align 8
@sched_split_block = external dso_local global %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, align 8
@sel_region_bb_info = external dso_local global %struct.VEC_sel_region_bb_info_def_heap*, align 8
@flag_var_tracking_assignments = external dso_local global i32, align 4
@.str.28 = private unnamed_addr constant [30 x i8] c"Swapping block ids %i and %i\0A\00", align 1
@block_to_bb = external dso_local global i32*, align 8
@containing_rgn = external dso_local global i32*, align 8
@current_nr_blocks = external dso_local global i32, align 4
@rgn_bb_table = external dso_local global i32*, align 8
@ebb_head = external dso_local global i32*, align 8
@code_motion_visited_blocks = internal global %struct.bitmap_head_def* null, align 8, !dbg !2370
@.str.29 = private unnamed_addr constant [32 x i8] c"Swapping code labels %i and %i\0A\00", align 1
@reg_rename_this_tick = internal global i32 0, align 4, !dbg !2372
@reg_rename_tick = internal global [53 x i32] zeroinitializer, align 16, !dbg !2374
@.str.30 = private unnamed_addr constant [33 x i8] c"Insn %d is ineligible_successor\0A\00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"Insn %d has a valid av set: \00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"Insn %d has a valid empty av set\0A\00", align 1
@max_ws = internal global i32 0, align 4, !dbg !2379
@.str.33 = private unnamed_addr constant [54 x i8] c"Insn %d is beyond the software lookahead window size\0A\00", align 1
@.str.34 = private unnamed_addr constant [30 x i8] c"Computed av set for insn %d: \00", align 1
@sched_lists_pool = external dso_local global %struct.alloc_pool_def*, align 8
@.str.35 = private unnamed_addr constant [28 x i8] c"successors of bb end (%d): \00", align 1
@.str.36 = private unnamed_addr constant [25 x i8] c"real successors num: %d\0A\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"av_succs (%d): \00", align 1
@vec_bookkeeping_blocked_vinsns = internal global %struct.VEC_vinsn_t_heap* null, align 8, !dbg !2381
@.str.38 = private unnamed_addr constant [17 x i8] c"./sel-sched-ir.h\00", align 1
@flag_sel_sched_pipelining_outer_loops = external dso_local global i32, align 4
@after_recovery = external dso_local global %struct.basic_block_def*, align 8
@exit_insn = external dso_local global %struct.rtx_def*, align 8
@flag_sel_sched_pipelining = external dso_local global i32, align 4
@preheader_removed = external dso_local global i8, align 1
@compiler_params = external dso_local global %struct.param_info*, align 8
@sched_max_luid = external dso_local global i32, align 4
@issue_rate = external dso_local global i32, align 4
@cur_seqno = internal global i32 0, align 4, !dbg !2384
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@stat_insns_needed_bookkeeping = internal global i32 0, align 4, !dbg !2386
@stat_renamed_scheduled = internal global i32 0, align 4, !dbg !2388
@stat_substitutions_total = internal global i32 0, align 4, !dbg !2390
@.str.39 = private unnamed_addr constant [102 x i8] c"Scheduled %d bookkeeping copies, %d insns needed bookkeeping, %d insns renamed, %d insns substituted\0A\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"\0AScheduling on fences: \00", align 1
@scheduled_something_on_previous_fence = internal global i8 0, align 1, !dbg !2392
@vec_target_unavailable_vinsns = internal global %struct.VEC_vinsn_t_heap* null, align 8, !dbg !2441
@.str.41 = private unnamed_addr constant [43 x i8] c"Starting fill_insns for insn %d, cycle %d\0A\00", align 1
@can_issue_more = internal global i32 0, align 4, !dbg !2394
@target_bb = external dso_local global i32, align 4
@.str.42 = private unnamed_addr constant [13 x i8] c"Boundaries: \00", align 1
@.str.43 = private unnamed_addr constant [30 x i8] c"Available exprs (vliw form): \00", align 1
@.str.44 = private unnamed_addr constant [44 x i8] c"Moving expressions up in the insn group...\0A\00", align 1
@.str.45 = private unnamed_addr constant [76 x i8] c"Expr %d removed because it would need bookkeeping, which cannot be created\0A\00", align 1
@ready = external dso_local global %struct.ready_list, align 8
@.str.46 = private unnamed_addr constant [30 x i8] c"Best expression (vliw form): \00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"; cycle %d\0A\00", align 1
@.str.48 = private unnamed_addr constant [21 x i8] c"No best expr found!\0A\00", align 1
@fill_vec_av_set.av_max_prio = internal global i32 0, align 4, !dbg !2396
@fill_vec_av_set.est_ticks_till_branch = internal global i32 0, align 4, !dbg !2405
@vec_av_set = internal global %struct.VEC_expr_t_heap* null, align 8, !dbg !2407
@.str.49 = private unnamed_addr constant [52 x i8] c"Expr %d is blocked by bookkeeping inserted earlier\0A\00", align 1
@.str.50 = private unnamed_addr constant [41 x i8] c"Expr %d has no suitable target register\0A\00", align 1
@.str.51 = private unnamed_addr constant [44 x i8] c"Pipelining expr %d will likely cause stall\0A\00", align 1
@.str.52 = private unnamed_addr constant [51 x i8] c"Delaying speculation check %d until its first use\0A\00", align 1
@.str.53 = private unnamed_addr constant [46 x i8] c"Expr %d is not ready until cycle %d (cached)\0A\00", align 1
@.str.54 = private unnamed_addr constant [41 x i8] c"Expr %d is not ready yet until cycle %d\0A\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"Expr %d is ok\0A\00", align 1
@.str.56 = private unnamed_addr constant [36 x i8] c"Total ready exprs: %d, stalled: %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [21 x i8] c"Sorted av set (%d): \00", align 1
@.str.58 = private unnamed_addr constant [51 x i8] c"sel_target_adjust_priority: insn %d,  %d+%d = %d.\0A\00", align 1
@find_best_reg_for_expr.reg_rename_data = internal global %struct.reg_rename zeroinitializer, align 8, !dbg !2409
@reload_completed = external dso_local global i32, align 4
@.str.59 = private unnamed_addr constant [39 x i8] c"Best expression(s) (sequential form): \00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"%s (\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.63 = private unnamed_addr constant [33 x i8] c"Insn %d is ineligible successor\0A\00", align 1
@.str.64 = private unnamed_addr constant [49 x i8] c"Returned from block %d as it had invalid av set\0A\00", align 1
@.str.65 = private unnamed_addr constant [44 x i8] c"Block %d already visited in this traversal\0A\00", align 1
@.str.66 = private unnamed_addr constant [41 x i8] c"No intersection with av set of block %d\0A\00", align 1
@.str.67 = private unnamed_addr constant [37 x i8] c"Found original operation at insn %d\0A\00", align 1
@.str.68 = private unnamed_addr constant [41 x i8] c"Expr %d removed due to use/set conflict\0A\00", align 1
@fixed_regs = external dso_local global [53 x i8], align 16
@global_regs = external dso_local global [53 x i8], align 16
@x_rtl = external dso_local global %struct.rtl_data, align 8
@sel_hrd = internal global %struct.hard_regs_data zeroinitializer, align 8, !dbg !2419
@call_used_reg_set = external dso_local global i64, align 8
@reg_class_contents = external dso_local global [27 x i64], align 16
@which_alternative = external dso_local global i32, align 4
@recog_data = external dso_local global %struct.recog_data, align 8
@recog_op_alt = external dso_local global [30 x [30 x %struct.operand_alternative]], align 16
@reg_info_p = external dso_local global %struct.reg_info_t*, align 8
@max_regno = external dso_local global i32, align 4
@max_issue_size = internal global i32 0, align 4, !dbg !2434
@ready_try = external dso_local global i8*, align 8
@.str.69 = private unnamed_addr constant [22 x i8] c"ready after reorder: \00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c":%d; \00", align 1
@.str.71 = private unnamed_addr constant [37 x i8] c"privileged_n: %d insns with SPEC %d\0A\00", align 1
@dfa_lookahead = external dso_local global i32, align 4
@cycle_issued_insns = external dso_local global i32, align 4
@.str.72 = private unnamed_addr constant [56 x i8] c"max_issue: we can issue %d insns, already did %d insns\0A\00", align 1
@.str.73 = private unnamed_addr constant [37 x i8] c"using %dth insn from the ready list\0A\00", align 1
@estimate_insn_cost.temp = internal global i8* null, align 8, !dbg !2436
@dfa_state_size = external dso_local global i64, align 8
@curr_state = external dso_local global i8*, align 8
@.str.74 = private unnamed_addr constant [39 x i8] c"Finished a cycle.  Current cycle = %d\0A\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"state (%u):\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.77 = private unnamed_addr constant [16 x i8] c"Moving jump %d\0A\00", align 1
@.str.78 = private unnamed_addr constant [18 x i8] c"Scheduling insn: \00", align 1
@.str.79 = private unnamed_addr constant [35 x i8] c"Updating fence insn from %i to %i\0A\00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"Fence %d[%d] has not changed\0A\00", align 1
@.str.81 = private unnamed_addr constant [47 x i8] c"Fence %d continues as %d[%d] (state continue)\0A\00", align 1
@.str.82 = private unnamed_addr constant [41 x i8] c"Fence %d continues as %d[%d] (state %s)\0A\00", align 1
@.str.83 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@current_sched_info = external dso_local global %struct.haifa_sched_info*, align 8
@.str.85 = private unnamed_addr constant [28 x i8] c"Finishing schedule in bbs: \00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"%d; \00", align 1
@.str.87 = private unnamed_addr constant [34 x i8] c"advance_state (state_transition)\0A\00", align 1
@.str.88 = private unnamed_addr constant [28 x i8] c"Haifa cost for insn %d: %d\0A\00", align 1
@.str.89 = private unnamed_addr constant [31 x i8] c"advance_state (dfa_new_cycle)\0A\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"Cost for insn %d is %d\0A\00", align 1
@call_used_regs = external dso_local global [53 x i8], align 16

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %insn) #0 !dbg !2447 {
entry:
  %retval = alloca %struct.bitmap_head_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %final = alloca %struct.rtx_def*, align 8
  %temp = alloca %struct.rtx_def*, align 8
  %lv = alloca %struct.bitmap_head_def*, align 8
  %src = alloca %struct.bitmap_head_def*, align 8
  %bb225 = alloca %struct.basic_block_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2450, metadata !DIExpression()), !dbg !2451
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !2452, metadata !DIExpression()), !dbg !2453
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2454
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !2454
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2454
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !2454
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !2454
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !2454
  store %struct.basic_block_def* %1, %struct.basic_block_def** %bb, align 8, !dbg !2453
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %final, metadata !2455, metadata !DIExpression()), !dbg !2456
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %temp, metadata !2457, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %lv, metadata !2459, metadata !DIExpression()), !dbg !2460
  %2 = load i8, i8* @ignore_first, align 1, !dbg !2461
  %tobool = icmp ne i8 %2, 0, !dbg !2461
  br i1 %tobool, label %if.end97, label %if.then, !dbg !2463

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %src, metadata !2464, metadata !DIExpression()), !dbg !2466
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %src, align 8, !dbg !2466
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2467
  %call = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %3), !dbg !2469
  %conv = zext i8 %call to i32, !dbg !2469
  %tobool1 = icmp ne i32 %conv, 0, !dbg !2469
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !2470

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2471
  %tobool2 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %4, null, !dbg !2471
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !2471

cond.true:                                        ; preds = %land.lhs.true
  %5 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2471
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %5, i32 0, i32 0, !dbg !2471
  br label %cond.end, !dbg !2471

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !2471

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_global_bb_info_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !2471
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2471
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i32 0, i32 9, !dbg !2471
  %7 = load i32, i32* %index, align 8, !dbg !2471
  %call3 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond, i32 %7), !dbg !2471
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call3, i32 0, i32 1, !dbg !2471
  %8 = load i8, i8* %lv_set_valid_p, align 8, !dbg !2471
  %conv4 = zext i8 %8 to i32, !dbg !2471
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !2471
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !2472

if.then6:                                         ; preds = %cond.end
  %9 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2473
  %tobool7 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %9, null, !dbg !2473
  br i1 %tobool7, label %cond.true8, label %cond.false10, !dbg !2473

cond.true8:                                       ; preds = %if.then6
  %10 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2473
  %base9 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %10, i32 0, i32 0, !dbg !2473
  br label %cond.end11, !dbg !2473

cond.false10:                                     ; preds = %if.then6
  br label %cond.end11, !dbg !2473

cond.end11:                                       ; preds = %cond.false10, %cond.true8
  %cond12 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base9, %cond.true8 ], [ null, %cond.false10 ], !dbg !2473
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2473
  %index13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i32 0, i32 9, !dbg !2473
  %12 = load i32, i32* %index13, align 8, !dbg !2473
  %call14 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond12, i32 %12), !dbg !2473
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call14, i32 0, i32 0, !dbg !2473
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !2473
  store %struct.bitmap_head_def* %13, %struct.bitmap_head_def** %src, align 8, !dbg !2474
  br label %if.end58, !dbg !2475

if.else:                                          ; preds = %cond.end, %if.then
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2476
  %call15 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %14), !dbg !2476
  %tobool16 = icmp ne i8 %call15, 0, !dbg !2476
  br i1 %tobool16, label %cond.false18, label %cond.true17, !dbg !2476

cond.true17:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3069, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2476
  br label %cond.end19, !dbg !2476

cond.false18:                                     ; preds = %if.else
  br label %cond.end19, !dbg !2476

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond20 = phi i32 [ 0, %cond.true17 ], [ 0, %cond.false18 ], !dbg !2476
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2478
  %tobool21 = icmp ne %struct.VEC_sel_insn_data_def_heap* %15, null, !dbg !2478
  br i1 %tobool21, label %cond.true22, label %cond.false24, !dbg !2478

cond.true22:                                      ; preds = %cond.end19
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2478
  %base23 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %16, i32 0, i32 0, !dbg !2478
  br label %cond.end25, !dbg !2478

cond.false24:                                     ; preds = %cond.end19
  br label %cond.end25, !dbg !2478

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi %struct.VEC_sel_insn_data_def_base* [ %base23, %cond.true22 ], [ null, %cond.false24 ], !dbg !2478
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2478
  %tobool27 = icmp ne %struct.VEC_int_heap* %17, null, !dbg !2478
  br i1 %tobool27, label %cond.true28, label %cond.false30, !dbg !2478

cond.true28:                                      ; preds = %cond.end25
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2478
  %base29 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i32 0, i32 0, !dbg !2478
  br label %cond.end31, !dbg !2478

cond.false30:                                     ; preds = %cond.end25
  br label %cond.end31, !dbg !2478

cond.end31:                                       ; preds = %cond.false30, %cond.true28
  %cond32 = phi %struct.VEC_int_base* [ %base29, %cond.true28 ], [ null, %cond.false30 ], !dbg !2478
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2478
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !2478
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !2478
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !2478
  %rt_int = bitcast %union.rtunion_def* %arrayidx35 to i32*, !dbg !2478
  %20 = load i32, i32* %rt_int, align 8, !dbg !2478
  %call36 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond32, i32 %20), !dbg !2478
  %call37 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond26, i32 %call36), !dbg !2478
  %live_valid_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call37, i32 0, i32 13, !dbg !2478
  %bf.load = load i8, i8* %live_valid_p, align 4, !dbg !2478
  %bf.clear = and i8 %bf.load, 1, !dbg !2478
  %bf.cast = zext i8 %bf.clear to i32, !dbg !2478
  %tobool38 = icmp ne i32 %bf.cast, 0, !dbg !2478
  br i1 %tobool38, label %if.then39, label %if.end, !dbg !2480

if.then39:                                        ; preds = %cond.end31
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2481
  %tobool40 = icmp ne %struct.VEC_sel_insn_data_def_heap* %21, null, !dbg !2481
  br i1 %tobool40, label %cond.true41, label %cond.false43, !dbg !2481

cond.true41:                                      ; preds = %if.then39
  %22 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2481
  %base42 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %22, i32 0, i32 0, !dbg !2481
  br label %cond.end44, !dbg !2481

cond.false43:                                     ; preds = %if.then39
  br label %cond.end44, !dbg !2481

cond.end44:                                       ; preds = %cond.false43, %cond.true41
  %cond45 = phi %struct.VEC_sel_insn_data_def_base* [ %base42, %cond.true41 ], [ null, %cond.false43 ], !dbg !2481
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2481
  %tobool46 = icmp ne %struct.VEC_int_heap* %23, null, !dbg !2481
  br i1 %tobool46, label %cond.true47, label %cond.false49, !dbg !2481

cond.true47:                                      ; preds = %cond.end44
  %24 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2481
  %base48 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %24, i32 0, i32 0, !dbg !2481
  br label %cond.end50, !dbg !2481

cond.false49:                                     ; preds = %cond.end44
  br label %cond.end50, !dbg !2481

cond.end50:                                       ; preds = %cond.false49, %cond.true47
  %cond51 = phi %struct.VEC_int_base* [ %base48, %cond.true47 ], [ null, %cond.false49 ], !dbg !2481
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2481
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !2481
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !2481
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 0, !dbg !2481
  %rt_int55 = bitcast %union.rtunion_def* %arrayidx54 to i32*, !dbg !2481
  %26 = load i32, i32* %rt_int55, align 8, !dbg !2481
  %call56 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond51, i32 %26), !dbg !2481
  %call57 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond45, i32 %call56), !dbg !2481
  %live = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call57, i32 0, i32 3, !dbg !2481
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !2481
  store %struct.bitmap_head_def* %27, %struct.bitmap_head_def** %src, align 8, !dbg !2482
  br label %if.end, !dbg !2483

if.end:                                           ; preds = %cond.end50, %cond.end31
  br label %if.end58

if.end58:                                         ; preds = %if.end, %cond.end11
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %src, align 8, !dbg !2484
  %tobool59 = icmp ne %struct.bitmap_head_def* %28, null, !dbg !2484
  br i1 %tobool59, label %if.then60, label %if.end96, !dbg !2486

if.then60:                                        ; preds = %if.end58
  %call61 = call %struct.bitmap_head_def* @get_regset_from_pool(), !dbg !2487
  store %struct.bitmap_head_def* %call61, %struct.bitmap_head_def** %lv, align 8, !dbg !2489
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2490
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %src, align 8, !dbg !2490
  call void @bitmap_copy(%struct.bitmap_head_def* %29, %struct.bitmap_head_def* %30), !dbg !2490
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2491
  %call62 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %31), !dbg !2493
  %conv63 = zext i8 %call62 to i32, !dbg !2493
  %tobool64 = icmp ne i32 %conv63, 0, !dbg !2493
  br i1 %tobool64, label %land.lhs.true65, label %if.end95, !dbg !2494

land.lhs.true65:                                  ; preds = %if.then60
  %32 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2495
  %tobool66 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %32, null, !dbg !2495
  br i1 %tobool66, label %cond.true67, label %cond.false69, !dbg !2495

cond.true67:                                      ; preds = %land.lhs.true65
  %33 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2495
  %base68 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %33, i32 0, i32 0, !dbg !2495
  br label %cond.end70, !dbg !2495

cond.false69:                                     ; preds = %land.lhs.true65
  br label %cond.end70, !dbg !2495

cond.end70:                                       ; preds = %cond.false69, %cond.true67
  %cond71 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base68, %cond.true67 ], [ null, %cond.false69 ], !dbg !2495
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2495
  %index72 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %34, i32 0, i32 9, !dbg !2495
  %35 = load i32, i32* %index72, align 8, !dbg !2495
  %call73 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond71, i32 %35), !dbg !2495
  %lv_set_valid_p74 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call73, i32 0, i32 1, !dbg !2495
  %36 = load i8, i8* %lv_set_valid_p74, align 8, !dbg !2495
  %tobool75 = icmp ne i8 %36, 0, !dbg !2495
  br i1 %tobool75, label %if.end95, label %if.then76, !dbg !2496

if.then76:                                        ; preds = %cond.end70
  %37 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2497
  %tobool77 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %37, null, !dbg !2497
  br i1 %tobool77, label %cond.true78, label %cond.false80, !dbg !2497

cond.true78:                                      ; preds = %if.then76
  %38 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2497
  %base79 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %38, i32 0, i32 0, !dbg !2497
  br label %cond.end81, !dbg !2497

cond.false80:                                     ; preds = %if.then76
  br label %cond.end81, !dbg !2497

cond.end81:                                       ; preds = %cond.false80, %cond.true78
  %cond82 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base79, %cond.true78 ], [ null, %cond.false80 ], !dbg !2497
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2497
  %index83 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i32 0, i32 9, !dbg !2497
  %40 = load i32, i32* %index83, align 8, !dbg !2497
  %call84 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond82, i32 %40), !dbg !2497
  %lv_set85 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call84, i32 0, i32 0, !dbg !2497
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set85, align 8, !dbg !2497
  %42 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2497
  call void @bitmap_copy(%struct.bitmap_head_def* %41, %struct.bitmap_head_def* %42), !dbg !2497
  %43 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2499
  %tobool86 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %43, null, !dbg !2499
  br i1 %tobool86, label %cond.true87, label %cond.false89, !dbg !2499

cond.true87:                                      ; preds = %cond.end81
  %44 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2499
  %base88 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %44, i32 0, i32 0, !dbg !2499
  br label %cond.end90, !dbg !2499

cond.false89:                                     ; preds = %cond.end81
  br label %cond.end90, !dbg !2499

cond.end90:                                       ; preds = %cond.false89, %cond.true87
  %cond91 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base88, %cond.true87 ], [ null, %cond.false89 ], !dbg !2499
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2499
  %index92 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i32 0, i32 9, !dbg !2499
  %46 = load i32, i32* %index92, align 8, !dbg !2499
  %call93 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond91, i32 %46), !dbg !2499
  %lv_set_valid_p94 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call93, i32 0, i32 1, !dbg !2499
  store i8 1, i8* %lv_set_valid_p94, align 8, !dbg !2500
  br label %if.end95, !dbg !2501

if.end95:                                         ; preds = %cond.end90, %cond.end70, %if.then60
  %47 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2502
  call void @return_regset_to_pool(%struct.bitmap_head_def* %47), !dbg !2503
  %48 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2504
  store %struct.bitmap_head_def* %48, %struct.bitmap_head_def** %retval, align 8, !dbg !2505
  br label %return, !dbg !2505

if.end96:                                         ; preds = %if.end58
  br label %if.end97, !dbg !2506

if.end97:                                         ; preds = %if.end96, %entry
  store i8 0, i8* @ignore_first, align 1, !dbg !2507
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2508
  %call98 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %49), !dbg !2508
  %tobool99 = icmp ne i8 %call98, 0, !dbg !2508
  br i1 %tobool99, label %cond.false101, label %cond.true100, !dbg !2508

cond.true100:                                     ; preds = %if.end97
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3092, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2508
  br label %cond.end102, !dbg !2508

cond.false101:                                    ; preds = %if.end97
  br label %cond.end102, !dbg !2508

cond.end102:                                      ; preds = %cond.false101, %cond.true100
  %cond103 = phi i32 [ 0, %cond.true100 ], [ 0, %cond.false101 ], !dbg !2508
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2509
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !2509
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !2509
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 2, !dbg !2509
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !2509
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2509
  store %struct.rtx_def* %51, %struct.rtx_def** %temp, align 8, !dbg !2510
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2511
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %52, i32 0, i32 7, !dbg !2511
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2511
  %53 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2511
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %53, i32 0, i32 1, !dbg !2511
  %54 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2511
  %u107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !2511
  %fld108 = bitcast %union.u* %u107 to [1 x %union.rtunion_def]*, !dbg !2511
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i64 0, i64 2, !dbg !2511
  %rt_rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**, !dbg !2511
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx110, align 8, !dbg !2511
  store %struct.rtx_def* %55, %struct.rtx_def** %final, align 8, !dbg !2512
  br label %while.cond, !dbg !2513

while.cond:                                       ; preds = %while.body, %cond.end102
  %56 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2514
  %57 = load %struct.rtx_def*, %struct.rtx_def** %final, align 8, !dbg !2515
  %cmp = icmp ne %struct.rtx_def* %56, %57, !dbg !2516
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2517

land.rhs:                                         ; preds = %while.cond
  %58 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2518
  %tobool112 = icmp ne %struct.VEC_sel_insn_data_def_heap* %58, null, !dbg !2518
  br i1 %tobool112, label %cond.true113, label %cond.false115, !dbg !2518

cond.true113:                                     ; preds = %land.rhs
  %59 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2518
  %base114 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %59, i32 0, i32 0, !dbg !2518
  br label %cond.end116, !dbg !2518

cond.false115:                                    ; preds = %land.rhs
  br label %cond.end116, !dbg !2518

cond.end116:                                      ; preds = %cond.false115, %cond.true113
  %cond117 = phi %struct.VEC_sel_insn_data_def_base* [ %base114, %cond.true113 ], [ null, %cond.false115 ], !dbg !2518
  %60 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2518
  %tobool118 = icmp ne %struct.VEC_int_heap* %60, null, !dbg !2518
  br i1 %tobool118, label %cond.true119, label %cond.false121, !dbg !2518

cond.true119:                                     ; preds = %cond.end116
  %61 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2518
  %base120 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %61, i32 0, i32 0, !dbg !2518
  br label %cond.end122, !dbg !2518

cond.false121:                                    ; preds = %cond.end116
  br label %cond.end122, !dbg !2518

cond.end122:                                      ; preds = %cond.false121, %cond.true119
  %cond123 = phi %struct.VEC_int_base* [ %base120, %cond.true119 ], [ null, %cond.false121 ], !dbg !2518
  %62 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2518
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !2518
  %fld125 = bitcast %union.u* %u124 to [1 x %union.rtunion_def]*, !dbg !2518
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 0, !dbg !2518
  %rt_int127 = bitcast %union.rtunion_def* %arrayidx126 to i32*, !dbg !2518
  %63 = load i32, i32* %rt_int127, align 8, !dbg !2518
  %call128 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond123, i32 %63), !dbg !2518
  %call129 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond117, i32 %call128), !dbg !2518
  %live_valid_p130 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call129, i32 0, i32 13, !dbg !2518
  %bf.load131 = load i8, i8* %live_valid_p130, align 4, !dbg !2518
  %bf.clear132 = and i8 %bf.load131, 1, !dbg !2518
  %bf.cast133 = zext i8 %bf.clear132 to i32, !dbg !2518
  %tobool134 = icmp ne i32 %bf.cast133, 0, !dbg !2519
  %lnot = xor i1 %tobool134, true, !dbg !2519
  br label %land.end

land.end:                                         ; preds = %cond.end122, %while.cond
  %64 = phi i1 [ false, %while.cond ], [ %lnot, %cond.end122 ], !dbg !2520
  br i1 %64, label %while.body, label %while.end, !dbg !2513

while.body:                                       ; preds = %land.end
  %65 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2521
  %u135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !2521
  %fld136 = bitcast %union.u* %u135 to [1 x %union.rtunion_def]*, !dbg !2521
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i64 0, i64 2, !dbg !2521
  %rt_rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**, !dbg !2521
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx138, align 8, !dbg !2521
  store %struct.rtx_def* %66, %struct.rtx_def** %temp, align 8, !dbg !2522
  br label %while.cond, !dbg !2513, !llvm.loop !2523

while.end:                                        ; preds = %land.end
  %67 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2524
  %68 = load %struct.rtx_def*, %struct.rtx_def** %final, align 8, !dbg !2526
  %cmp139 = icmp eq %struct.rtx_def* %67, %68, !dbg !2527
  br i1 %cmp139, label %if.then141, label %if.else147, !dbg !2528

if.then141:                                       ; preds = %while.end
  %69 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2529
  %call142 = call %struct.bitmap_head_def* @compute_live_after_bb(%struct.basic_block_def* %69), !dbg !2531
  store %struct.bitmap_head_def* %call142, %struct.bitmap_head_def** %lv, align 8, !dbg !2532
  %70 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2533
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !2533
  %fld144 = bitcast %union.u* %u143 to [1 x %union.rtunion_def]*, !dbg !2533
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i64 0, i64 1, !dbg !2533
  %rt_rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**, !dbg !2533
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx146, align 8, !dbg !2533
  store %struct.rtx_def* %71, %struct.rtx_def** %temp, align 8, !dbg !2534
  br label %if.end168, !dbg !2535

if.else147:                                       ; preds = %while.end
  %call148 = call %struct.bitmap_head_def* @get_regset_from_pool(), !dbg !2536
  store %struct.bitmap_head_def* %call148, %struct.bitmap_head_def** %lv, align 8, !dbg !2538
  %72 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2539
  %73 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2539
  %tobool149 = icmp ne %struct.VEC_sel_insn_data_def_heap* %73, null, !dbg !2539
  br i1 %tobool149, label %cond.true150, label %cond.false152, !dbg !2539

cond.true150:                                     ; preds = %if.else147
  %74 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2539
  %base151 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %74, i32 0, i32 0, !dbg !2539
  br label %cond.end153, !dbg !2539

cond.false152:                                    ; preds = %if.else147
  br label %cond.end153, !dbg !2539

cond.end153:                                      ; preds = %cond.false152, %cond.true150
  %cond154 = phi %struct.VEC_sel_insn_data_def_base* [ %base151, %cond.true150 ], [ null, %cond.false152 ], !dbg !2539
  %75 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2539
  %tobool155 = icmp ne %struct.VEC_int_heap* %75, null, !dbg !2539
  br i1 %tobool155, label %cond.true156, label %cond.false158, !dbg !2539

cond.true156:                                     ; preds = %cond.end153
  %76 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2539
  %base157 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %76, i32 0, i32 0, !dbg !2539
  br label %cond.end159, !dbg !2539

cond.false158:                                    ; preds = %cond.end153
  br label %cond.end159, !dbg !2539

cond.end159:                                      ; preds = %cond.false158, %cond.true156
  %cond160 = phi %struct.VEC_int_base* [ %base157, %cond.true156 ], [ null, %cond.false158 ], !dbg !2539
  %77 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2539
  %u161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !2539
  %fld162 = bitcast %union.u* %u161 to [1 x %union.rtunion_def]*, !dbg !2539
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i64 0, i64 0, !dbg !2539
  %rt_int164 = bitcast %union.rtunion_def* %arrayidx163 to i32*, !dbg !2539
  %78 = load i32, i32* %rt_int164, align 8, !dbg !2539
  %call165 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond160, i32 %78), !dbg !2539
  %call166 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond154, i32 %call165), !dbg !2539
  %live167 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call166, i32 0, i32 3, !dbg !2539
  %79 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live167, align 8, !dbg !2539
  call void @bitmap_copy(%struct.bitmap_head_def* %72, %struct.bitmap_head_def* %79), !dbg !2539
  br label %if.end168

if.end168:                                        ; preds = %cond.end159, %if.then141
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2540
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !2540
  %fld170 = bitcast %union.u* %u169 to [1 x %union.rtunion_def]*, !dbg !2540
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 1, !dbg !2540
  %rt_rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**, !dbg !2540
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !2540
  store %struct.rtx_def* %81, %struct.rtx_def** %final, align 8, !dbg !2541
  br label %while.cond173, !dbg !2542

while.cond173:                                    ; preds = %cond.end206, %if.end168
  %82 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2543
  %83 = load %struct.rtx_def*, %struct.rtx_def** %final, align 8, !dbg !2544
  %cmp174 = icmp ne %struct.rtx_def* %82, %83, !dbg !2545
  br i1 %cmp174, label %while.body176, label %while.end221, !dbg !2542

while.body176:                                    ; preds = %while.cond173
  %84 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2546
  %85 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2548
  call void @propagate_lv_set(%struct.bitmap_head_def* %84, %struct.rtx_def* %85), !dbg !2549
  %86 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2550
  %tobool177 = icmp ne %struct.VEC_sel_insn_data_def_heap* %86, null, !dbg !2550
  br i1 %tobool177, label %cond.true178, label %cond.false180, !dbg !2550

cond.true178:                                     ; preds = %while.body176
  %87 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2550
  %base179 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %87, i32 0, i32 0, !dbg !2550
  br label %cond.end181, !dbg !2550

cond.false180:                                    ; preds = %while.body176
  br label %cond.end181, !dbg !2550

cond.end181:                                      ; preds = %cond.false180, %cond.true178
  %cond182 = phi %struct.VEC_sel_insn_data_def_base* [ %base179, %cond.true178 ], [ null, %cond.false180 ], !dbg !2550
  %88 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2550
  %tobool183 = icmp ne %struct.VEC_int_heap* %88, null, !dbg !2550
  br i1 %tobool183, label %cond.true184, label %cond.false186, !dbg !2550

cond.true184:                                     ; preds = %cond.end181
  %89 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2550
  %base185 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %89, i32 0, i32 0, !dbg !2550
  br label %cond.end187, !dbg !2550

cond.false186:                                    ; preds = %cond.end181
  br label %cond.end187, !dbg !2550

cond.end187:                                      ; preds = %cond.false186, %cond.true184
  %cond188 = phi %struct.VEC_int_base* [ %base185, %cond.true184 ], [ null, %cond.false186 ], !dbg !2550
  %90 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2550
  %u189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1, !dbg !2550
  %fld190 = bitcast %union.u* %u189 to [1 x %union.rtunion_def]*, !dbg !2550
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i64 0, i64 0, !dbg !2550
  %rt_int192 = bitcast %union.rtunion_def* %arrayidx191 to i32*, !dbg !2550
  %91 = load i32, i32* %rt_int192, align 8, !dbg !2550
  %call193 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond188, i32 %91), !dbg !2550
  %call194 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond182, i32 %call193), !dbg !2550
  %live195 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call194, i32 0, i32 3, !dbg !2550
  %92 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live195, align 8, !dbg !2550
  %93 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2550
  call void @bitmap_copy(%struct.bitmap_head_def* %92, %struct.bitmap_head_def* %93), !dbg !2550
  %94 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2551
  %tobool196 = icmp ne %struct.VEC_sel_insn_data_def_heap* %94, null, !dbg !2551
  br i1 %tobool196, label %cond.true197, label %cond.false199, !dbg !2551

cond.true197:                                     ; preds = %cond.end187
  %95 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2551
  %base198 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %95, i32 0, i32 0, !dbg !2551
  br label %cond.end200, !dbg !2551

cond.false199:                                    ; preds = %cond.end187
  br label %cond.end200, !dbg !2551

cond.end200:                                      ; preds = %cond.false199, %cond.true197
  %cond201 = phi %struct.VEC_sel_insn_data_def_base* [ %base198, %cond.true197 ], [ null, %cond.false199 ], !dbg !2551
  %96 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2551
  %tobool202 = icmp ne %struct.VEC_int_heap* %96, null, !dbg !2551
  br i1 %tobool202, label %cond.true203, label %cond.false205, !dbg !2551

cond.true203:                                     ; preds = %cond.end200
  %97 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2551
  %base204 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %97, i32 0, i32 0, !dbg !2551
  br label %cond.end206, !dbg !2551

cond.false205:                                    ; preds = %cond.end200
  br label %cond.end206, !dbg !2551

cond.end206:                                      ; preds = %cond.false205, %cond.true203
  %cond207 = phi %struct.VEC_int_base* [ %base204, %cond.true203 ], [ null, %cond.false205 ], !dbg !2551
  %98 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2551
  %u208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1, !dbg !2551
  %fld209 = bitcast %union.u* %u208 to [1 x %union.rtunion_def]*, !dbg !2551
  %arrayidx210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld209, i64 0, i64 0, !dbg !2551
  %rt_int211 = bitcast %union.rtunion_def* %arrayidx210 to i32*, !dbg !2551
  %99 = load i32, i32* %rt_int211, align 8, !dbg !2551
  %call212 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond207, i32 %99), !dbg !2551
  %call213 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond201, i32 %call212), !dbg !2551
  %live_valid_p214 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call213, i32 0, i32 13, !dbg !2551
  %bf.load215 = load i8, i8* %live_valid_p214, align 4, !dbg !2552
  %bf.clear216 = and i8 %bf.load215, -2, !dbg !2552
  %bf.set = or i8 %bf.clear216, 1, !dbg !2552
  store i8 %bf.set, i8* %live_valid_p214, align 4, !dbg !2552
  %100 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !2553
  %u217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1, !dbg !2553
  %fld218 = bitcast %union.u* %u217 to [1 x %union.rtunion_def]*, !dbg !2553
  %arrayidx219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld218, i64 0, i64 1, !dbg !2553
  %rt_rtx220 = bitcast %union.rtunion_def* %arrayidx219 to %struct.rtx_def**, !dbg !2553
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx220, align 8, !dbg !2553
  store %struct.rtx_def* %101, %struct.rtx_def** %temp, align 8, !dbg !2554
  br label %while.cond173, !dbg !2542, !llvm.loop !2555

while.end221:                                     ; preds = %while.cond173
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2557
  %call222 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %102), !dbg !2559
  %tobool223 = icmp ne i8 %call222, 0, !dbg !2559
  br i1 %tobool223, label %if.then224, label %if.end248, !dbg !2560

if.then224:                                       ; preds = %while.end221
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb225, metadata !2561, metadata !DIExpression()), !dbg !2563
  %103 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2564
  %u226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !2564
  %fld227 = bitcast %union.u* %u226 to [1 x %union.rtunion_def]*, !dbg !2564
  %arrayidx228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld227, i64 0, i64 3, !dbg !2564
  %rt_bb229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.basic_block_def**, !dbg !2564
  %104 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb229, align 8, !dbg !2564
  store %struct.basic_block_def* %104, %struct.basic_block_def** %bb225, align 8, !dbg !2563
  %105 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2565
  %tobool230 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %105, null, !dbg !2565
  br i1 %tobool230, label %cond.true231, label %cond.false233, !dbg !2565

cond.true231:                                     ; preds = %if.then224
  %106 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2565
  %base232 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %106, i32 0, i32 0, !dbg !2565
  br label %cond.end234, !dbg !2565

cond.false233:                                    ; preds = %if.then224
  br label %cond.end234, !dbg !2565

cond.end234:                                      ; preds = %cond.false233, %cond.true231
  %cond235 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base232, %cond.true231 ], [ null, %cond.false233 ], !dbg !2565
  %107 = load %struct.basic_block_def*, %struct.basic_block_def** %bb225, align 8, !dbg !2565
  %index236 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %107, i32 0, i32 9, !dbg !2565
  %108 = load i32, i32* %index236, align 8, !dbg !2565
  %call237 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond235, i32 %108), !dbg !2565
  %lv_set238 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call237, i32 0, i32 0, !dbg !2565
  %109 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set238, align 8, !dbg !2565
  %110 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2565
  call void @bitmap_copy(%struct.bitmap_head_def* %109, %struct.bitmap_head_def* %110), !dbg !2565
  %111 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2566
  %tobool239 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %111, null, !dbg !2566
  br i1 %tobool239, label %cond.true240, label %cond.false242, !dbg !2566

cond.true240:                                     ; preds = %cond.end234
  %112 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2566
  %base241 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %112, i32 0, i32 0, !dbg !2566
  br label %cond.end243, !dbg !2566

cond.false242:                                    ; preds = %cond.end234
  br label %cond.end243, !dbg !2566

cond.end243:                                      ; preds = %cond.false242, %cond.true240
  %cond244 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base241, %cond.true240 ], [ null, %cond.false242 ], !dbg !2566
  %113 = load %struct.basic_block_def*, %struct.basic_block_def** %bb225, align 8, !dbg !2566
  %index245 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %113, i32 0, i32 9, !dbg !2566
  %114 = load i32, i32* %index245, align 8, !dbg !2566
  %call246 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond244, i32 %114), !dbg !2566
  %lv_set_valid_p247 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call246, i32 0, i32 1, !dbg !2566
  store i8 1, i8* %lv_set_valid_p247, align 8, !dbg !2567
  br label %if.end248, !dbg !2568

if.end248:                                        ; preds = %cond.end243, %while.end221
  %115 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2569
  call void @return_regset_to_pool(%struct.bitmap_head_def* %115), !dbg !2570
  %116 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2571
  store %struct.bitmap_head_def* %116, %struct.bitmap_head_def** %retval, align 8, !dbg !2572
  br label %return, !dbg !2572

return:                                           ; preds = %if.end248, %if.end95
  %117 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %retval, align 8, !dbg !2573
  ret %struct.bitmap_head_def* %117, !dbg !2573
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local zeroext i8 @sel_bb_head_p(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %vec_, i32 %ix_) #0 !dbg !2574 {
entry:
  %vec_.addr = alloca %struct.VEC_sel_global_bb_info_def_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_sel_global_bb_info_def_base* %vec_, %struct.VEC_sel_global_bb_info_def_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_sel_global_bb_info_def_base** %vec_.addr, metadata !2591, metadata !DIExpression()), !dbg !2592
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !2593, metadata !DIExpression()), !dbg !2592
  %0 = load %struct.VEC_sel_global_bb_info_def_base*, %struct.VEC_sel_global_bb_info_def_base** %vec_.addr, align 8, !dbg !2592
  %tobool = icmp ne %struct.VEC_sel_global_bb_info_def_base* %0, null, !dbg !2592
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2592

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !2592
  %2 = load %struct.VEC_sel_global_bb_info_def_base*, %struct.VEC_sel_global_bb_info_def_base** %vec_.addr, align 8, !dbg !2592
  %num = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_base, %struct.VEC_sel_global_bb_info_def_base* %2, i32 0, i32 0, !dbg !2592
  %3 = load i32, i32* %num, align 8, !dbg !2592
  %cmp = icmp ult i32 %1, %3, !dbg !2592
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !2594
  %land.ext = zext i1 %4 to i32, !dbg !2592
  %5 = load %struct.VEC_sel_global_bb_info_def_base*, %struct.VEC_sel_global_bb_info_def_base** %vec_.addr, align 8, !dbg !2592
  %vec = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_base, %struct.VEC_sel_global_bb_info_def_base* %5, i32 0, i32 2, !dbg !2592
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !2592
  %idxprom = zext i32 %6 to i64, !dbg !2592
  %arrayidx = getelementptr inbounds [1 x %struct.sel_global_bb_info_def], [1 x %struct.sel_global_bb_info_def]* %vec, i64 0, i64 %idxprom, !dbg !2592
  ret %struct.sel_global_bb_info_def* %arrayidx, !dbg !2592
}

declare dso_local zeroext i8 @in_current_region_p(%struct.basic_block_def*) #2

declare dso_local void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %vec_, i32 %ix_) #0 !dbg !2595 {
entry:
  %vec_.addr = alloca %struct.VEC_sel_insn_data_def_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_sel_insn_data_def_base* %vec_, %struct.VEC_sel_insn_data_def_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_sel_insn_data_def_base** %vec_.addr, metadata !2626, metadata !DIExpression()), !dbg !2627
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !2628, metadata !DIExpression()), !dbg !2627
  %0 = load %struct.VEC_sel_insn_data_def_base*, %struct.VEC_sel_insn_data_def_base** %vec_.addr, align 8, !dbg !2627
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_base* %0, null, !dbg !2627
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2627

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !2627
  %2 = load %struct.VEC_sel_insn_data_def_base*, %struct.VEC_sel_insn_data_def_base** %vec_.addr, align 8, !dbg !2627
  %num = getelementptr inbounds %struct.VEC_sel_insn_data_def_base, %struct.VEC_sel_insn_data_def_base* %2, i32 0, i32 0, !dbg !2627
  %3 = load i32, i32* %num, align 8, !dbg !2627
  %cmp = icmp ult i32 %1, %3, !dbg !2627
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !2629
  %land.ext = zext i1 %4 to i32, !dbg !2627
  %5 = load %struct.VEC_sel_insn_data_def_base*, %struct.VEC_sel_insn_data_def_base** %vec_.addr, align 8, !dbg !2627
  %vec = getelementptr inbounds %struct.VEC_sel_insn_data_def_base, %struct.VEC_sel_insn_data_def_base* %5, i32 0, i32 2, !dbg !2627
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !2627
  %idxprom = zext i32 %6 to i64, !dbg !2627
  %arrayidx = getelementptr inbounds [1 x %struct._sel_insn_data], [1 x %struct._sel_insn_data]* %vec, i64 0, i64 %idxprom, !dbg !2627
  ret %struct._sel_insn_data* %arrayidx, !dbg !2627
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_int_base_index(%struct.VEC_int_base* %vec_, i32 %ix_) #0 !dbg !2630 {
entry:
  %vec_.addr = alloca %struct.VEC_int_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_int_base* %vec_, %struct.VEC_int_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_int_base** %vec_.addr, metadata !2642, metadata !DIExpression()), !dbg !2643
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !2644, metadata !DIExpression()), !dbg !2643
  %0 = load %struct.VEC_int_base*, %struct.VEC_int_base** %vec_.addr, align 8, !dbg !2643
  %tobool = icmp ne %struct.VEC_int_base* %0, null, !dbg !2643
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2643

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !2643
  %2 = load %struct.VEC_int_base*, %struct.VEC_int_base** %vec_.addr, align 8, !dbg !2643
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %2, i32 0, i32 0, !dbg !2643
  %3 = load i32, i32* %num, align 4, !dbg !2643
  %cmp = icmp ult i32 %1, %3, !dbg !2643
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !2645
  %land.ext = zext i1 %4 to i32, !dbg !2643
  %5 = load %struct.VEC_int_base*, %struct.VEC_int_base** %vec_.addr, align 8, !dbg !2643
  %vec = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %5, i32 0, i32 2, !dbg !2643
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !2643
  %idxprom = zext i32 %6 to i64, !dbg !2643
  %arrayidx = getelementptr inbounds [1 x i32], [1 x i32]* %vec, i64 0, i64 %idxprom, !dbg !2643
  %7 = load i32, i32* %arrayidx, align 4, !dbg !2643
  ret i32 %7, !dbg !2643
}

declare dso_local %struct.bitmap_head_def* @get_regset_from_pool() #2

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local void @return_regset_to_pool(%struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.bitmap_head_def* @compute_live_after_bb(%struct.basic_block_def* %bb) #0 !dbg !2646 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %lv = alloca %struct.bitmap_head_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !2649, metadata !DIExpression()), !dbg !2650
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !2651, metadata !DIExpression()), !dbg !2652
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !2653, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %lv, metadata !2661, metadata !DIExpression()), !dbg !2662
  %call = call %struct.bitmap_head_def* @get_clear_regset_from_pool(), !dbg !2663
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %lv, align 8, !dbg !2662
  %0 = load i8, i8* @ignore_first, align 1, !dbg !2664
  %tobool = icmp ne i8 %0, 0, !dbg !2664
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2664

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3031, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2664
  br label %cond.end, !dbg !2664

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2664

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2664
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !2665
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 1, !dbg !2665
  %call1 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs), !dbg !2665
  %2 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !2665
  %3 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %2, i32 0, i32 0, !dbg !2665
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 0, !dbg !2665
  store i32 %4, i32* %3, align 8, !dbg !2665
  %5 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %2, i32 0, i32 1, !dbg !2665
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 1, !dbg !2665
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !2665
  %7 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2665
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false), !dbg !2665
  br label %for.cond, !dbg !2665

for.cond:                                         ; preds = %for.inc, %cond.end
  %9 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !2667
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !2667
  %11 = load i32, i32* %10, align 8, !dbg !2667
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !2667
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !2667
  %call2 = call zeroext i8 @ei_cond(i32 %11, %struct.VEC_edge_gc** %13, %struct.edge_def** %e), !dbg !2667
  %tobool3 = icmp ne i8 %call2, 0, !dbg !2665
  br i1 %tobool3, label %for.body, label %for.end, !dbg !2665

for.body:                                         ; preds = %for.cond
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2669
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i32 0, i32 1, !dbg !2671
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2671
  %call4 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %15), !dbg !2672
  %tobool5 = icmp ne i8 %call4, 0, !dbg !2672
  br i1 %tobool5, label %if.then, label %if.else, !dbg !2673

if.then:                                          ; preds = %for.body
  %16 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2674
  %tobool6 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %16, null, !dbg !2674
  br i1 %tobool6, label %cond.true7, label %cond.false8, !dbg !2674

cond.true7:                                       ; preds = %if.then
  %17 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2674
  %base = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %17, i32 0, i32 0, !dbg !2674
  br label %cond.end9, !dbg !2674

cond.false8:                                      ; preds = %if.then
  br label %cond.end9, !dbg !2674

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base, %cond.true7 ], [ null, %cond.false8 ], !dbg !2674
  %18 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2674
  %dest11 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %18, i32 0, i32 1, !dbg !2674
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest11, align 8, !dbg !2674
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i32 0, i32 9, !dbg !2674
  %20 = load i32, i32* %index, align 8, !dbg !2674
  %call12 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond10, i32 %20), !dbg !2674
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call12, i32 0, i32 1, !dbg !2674
  %21 = load i8, i8* %lv_set_valid_p, align 8, !dbg !2674
  %tobool13 = icmp ne i8 %21, 0, !dbg !2674
  br i1 %tobool13, label %if.end, label %if.then14, !dbg !2677

if.then14:                                        ; preds = %cond.end9
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3038, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2678
  %22 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2680
  %tobool15 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %22, null, !dbg !2680
  br i1 %tobool15, label %cond.true16, label %cond.false18, !dbg !2680

cond.true16:                                      ; preds = %if.then14
  %23 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2680
  %base17 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %23, i32 0, i32 0, !dbg !2680
  br label %cond.end19, !dbg !2680

cond.false18:                                     ; preds = %if.then14
  br label %cond.end19, !dbg !2680

cond.end19:                                       ; preds = %cond.false18, %cond.true16
  %cond20 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base17, %cond.true16 ], [ null, %cond.false18 ], !dbg !2680
  %24 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2680
  %dest21 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i32 0, i32 1, !dbg !2680
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %dest21, align 8, !dbg !2680
  %index22 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i32 0, i32 9, !dbg !2680
  %26 = load i32, i32* %index22, align 8, !dbg !2680
  %call23 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond20, i32 %26), !dbg !2680
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call23, i32 0, i32 0, !dbg !2680
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !2680
  %cmp = icmp eq %struct.bitmap_head_def* %27, null, !dbg !2680
  br i1 %cmp, label %cond.false25, label %cond.true24, !dbg !2680

cond.true24:                                      ; preds = %cond.end19
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3039, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2680
  br label %cond.end26, !dbg !2680

cond.false25:                                     ; preds = %cond.end19
  br label %cond.end26, !dbg !2680

cond.end26:                                       ; preds = %cond.false25, %cond.true24
  %cond27 = phi i32 [ 0, %cond.true24 ], [ 0, %cond.false25 ], !dbg !2680
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2681
  %dest28 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i32 0, i32 1, !dbg !2682
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %dest28, align 8, !dbg !2682
  %call29 = call %struct.bitmap_head_def* @compute_live_after_bb(%struct.basic_block_def* %29), !dbg !2683
  %30 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2684
  %tobool30 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %30, null, !dbg !2684
  br i1 %tobool30, label %cond.true31, label %cond.false33, !dbg !2684

cond.true31:                                      ; preds = %cond.end26
  %31 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2684
  %base32 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %31, i32 0, i32 0, !dbg !2684
  br label %cond.end34, !dbg !2684

cond.false33:                                     ; preds = %cond.end26
  br label %cond.end34, !dbg !2684

cond.end34:                                       ; preds = %cond.false33, %cond.true31
  %cond35 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base32, %cond.true31 ], [ null, %cond.false33 ], !dbg !2684
  %32 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2684
  %dest36 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i32 0, i32 1, !dbg !2684
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %dest36, align 8, !dbg !2684
  %index37 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i32 0, i32 9, !dbg !2684
  %34 = load i32, i32* %index37, align 8, !dbg !2684
  %call38 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond35, i32 %34), !dbg !2684
  %lv_set39 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call38, i32 0, i32 0, !dbg !2684
  store %struct.bitmap_head_def* %call29, %struct.bitmap_head_def** %lv_set39, align 8, !dbg !2685
  %35 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2686
  %tobool40 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %35, null, !dbg !2686
  br i1 %tobool40, label %cond.true41, label %cond.false43, !dbg !2686

cond.true41:                                      ; preds = %cond.end34
  %36 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2686
  %base42 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %36, i32 0, i32 0, !dbg !2686
  br label %cond.end44, !dbg !2686

cond.false43:                                     ; preds = %cond.end34
  br label %cond.end44, !dbg !2686

cond.end44:                                       ; preds = %cond.false43, %cond.true41
  %cond45 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base42, %cond.true41 ], [ null, %cond.false43 ], !dbg !2686
  %37 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2686
  %dest46 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %37, i32 0, i32 1, !dbg !2686
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %dest46, align 8, !dbg !2686
  %index47 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i32 0, i32 9, !dbg !2686
  %39 = load i32, i32* %index47, align 8, !dbg !2686
  %call48 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond45, i32 %39), !dbg !2686
  %lv_set_valid_p49 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call48, i32 0, i32 1, !dbg !2686
  store i8 1, i8* %lv_set_valid_p49, align 8, !dbg !2687
  br label %if.end, !dbg !2688

if.end:                                           ; preds = %cond.end44, %cond.end9
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2689
  %41 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2689
  %tobool50 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %41, null, !dbg !2689
  br i1 %tobool50, label %cond.true51, label %cond.false53, !dbg !2689

cond.true51:                                      ; preds = %if.end
  %42 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !2689
  %base52 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %42, i32 0, i32 0, !dbg !2689
  br label %cond.end54, !dbg !2689

cond.false53:                                     ; preds = %if.end
  br label %cond.end54, !dbg !2689

cond.end54:                                       ; preds = %cond.false53, %cond.true51
  %cond55 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base52, %cond.true51 ], [ null, %cond.false53 ], !dbg !2689
  %43 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2689
  %dest56 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %43, i32 0, i32 1, !dbg !2689
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %dest56, align 8, !dbg !2689
  %index57 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %44, i32 0, i32 9, !dbg !2689
  %45 = load i32, i32* %index57, align 8, !dbg !2689
  %call58 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond55, i32 %45), !dbg !2689
  %lv_set59 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call58, i32 0, i32 0, !dbg !2689
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set59, align 8, !dbg !2689
  %call60 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %40, %struct.bitmap_head_def* %46), !dbg !2689
  br label %if.end65, !dbg !2690

if.else:                                          ; preds = %for.body
  %47 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2691
  %48 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2691
  %dest61 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %48, i32 0, i32 1, !dbg !2691
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %dest61, align 8, !dbg !2691
  %call62 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %49), !dbg !2691
  %call63 = call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %call62), !dbg !2691
  %call64 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %47, %struct.bitmap_head_def* %call63), !dbg !2691
  br label %if.end65

if.end65:                                         ; preds = %if.else, %cond.end54
  br label %for.inc, !dbg !2692

for.inc:                                          ; preds = %if.end65
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !2667
  br label %for.cond, !dbg !2667, !llvm.loop !2693

for.end:                                          ; preds = %for.cond
  %50 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv, align 8, !dbg !2695
  ret %struct.bitmap_head_def* %50, !dbg !2696
}

; Function Attrs: noinline nounwind uwtable
define internal void @propagate_lv_set(%struct.bitmap_head_def* %lv, %struct.rtx_def* %insn) #0 !dbg !2697 {
entry:
  %lv.addr = alloca %struct.bitmap_head_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.bitmap_head_def* %lv, %struct.bitmap_head_def** %lv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %lv.addr, metadata !2700, metadata !DIExpression()), !dbg !2701
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2702, metadata !DIExpression()), !dbg !2703
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2704
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2704
  %bf.load = load i32, i32* %1, align 8, !dbg !2704
  %bf.clear = and i32 %bf.load, 65535, !dbg !2704
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !2704
  br i1 %cmp, label %cond.false, label %lor.lhs.false, !dbg !2704

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2704
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !2704
  %bf.load1 = load i32, i32* %3, align 8, !dbg !2704
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2704
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !2704
  br i1 %cmp3, label %cond.false, label %lor.lhs.false4, !dbg !2704

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2704
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !2704
  %bf.load5 = load i32, i32* %5, align 8, !dbg !2704
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !2704
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !2704
  br i1 %cmp7, label %cond.false, label %lor.lhs.false8, !dbg !2704

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2704
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !2704
  %bf.load9 = load i32, i32* %7, align 8, !dbg !2704
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !2704
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !2704
  br i1 %cmp11, label %cond.false, label %cond.true, !dbg !2704

cond.true:                                        ; preds = %lor.lhs.false8
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3015, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2704
  br label %cond.end, !dbg !2704

cond.false:                                       ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  br label %cond.end, !dbg !2704

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2704
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2705
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !2705
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2705
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !2705
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2705
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2705
  %10 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !2705
  %cmp12 = icmp eq %struct.rtx_def* %9, %10, !dbg !2705
  br i1 %cmp12, label %if.then, label %if.end, !dbg !2707

if.then:                                          ; preds = %cond.end
  br label %return, !dbg !2708

if.end:                                           ; preds = %cond.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2709
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !2709
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !2709
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 3, !dbg !2709
  %rt_bb = bitcast %union.rtunion_def* %arrayidx15 to %struct.basic_block_def**, !dbg !2709
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !2709
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2710
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv.addr, align 8, !dbg !2711
  call void @df_simulate_one_insn_backwards(%struct.basic_block_def* %12, %struct.rtx_def* %13, %struct.bitmap_head_def* %14), !dbg !2712
  br label %return, !dbg !2713

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2713
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sel_add_to_insn_priority(%struct.rtx_def* %insn, i32 %amount) #0 !dbg !2714 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %amount.addr = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2717, metadata !DIExpression()), !dbg !2718
  store i32 %amount, i32* %amount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %amount.addr, metadata !2719, metadata !DIExpression()), !dbg !2720
  %0 = load i32, i32* %amount.addr, align 4, !dbg !2721
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2722
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %1, null, !dbg !2722
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2722

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2722
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %2, i32 0, i32 0, !dbg !2722
  br label %cond.end, !dbg !2722

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2722

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !2722
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2722
  %tobool1 = icmp ne %struct.VEC_int_heap* %3, null, !dbg !2722
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !2722

cond.true2:                                       ; preds = %cond.end
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2722
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i32 0, i32 0, !dbg !2722
  br label %cond.end5, !dbg !2722

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !2722

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !2722
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2722
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !2722
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2722
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2722
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2722
  %6 = load i32, i32* %rt_int, align 8, !dbg !2722
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %6), !dbg !2722
  %call7 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !2722
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i32 0, i32 0, !dbg !2722
  %priority_adj = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 4, !dbg !2722
  %7 = load i32, i32* %priority_adj, align 4, !dbg !2723
  %add = add nsw i32 %7, %0, !dbg !2723
  store i32 %add, i32* %priority_adj, align 4, !dbg !2723
  %8 = load i32, i32* @sched_verbose, align 4, !dbg !2724
  %cmp = icmp sge i32 %8, 2, !dbg !2726
  br i1 %cmp, label %if.then, label %if.end150, !dbg !2727

if.then:                                          ; preds = %cond.end5
  br label %do.body, !dbg !2728

do.body:                                          ; preds = %if.then
  %9 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !2729
  %tobool8 = icmp ne i8 %9, 0, !dbg !2729
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !2732

if.then9:                                         ; preds = %do.body
  br label %do.body10, !dbg !2729

do.body10:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !2733, metadata !DIExpression()), !dbg !2735
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2735
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !2735
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !2735
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !2735
  %rt_int14 = bitcast %union.rtunion_def* %arrayidx13 to i32*, !dbg !2735
  %11 = load i32, i32* %rt_int14, align 8, !dbg !2735
  %12 = load i32, i32* %amount.addr, align 4, !dbg !2735
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2735
  %tobool15 = icmp ne %struct.VEC_sel_insn_data_def_heap* %13, null, !dbg !2735
  br i1 %tobool15, label %cond.true16, label %cond.false18, !dbg !2735

cond.true16:                                      ; preds = %do.body10
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2735
  %base17 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %14, i32 0, i32 0, !dbg !2735
  br label %cond.end19, !dbg !2735

cond.false18:                                     ; preds = %do.body10
  br label %cond.end19, !dbg !2735

cond.end19:                                       ; preds = %cond.false18, %cond.true16
  %cond20 = phi %struct.VEC_sel_insn_data_def_base* [ %base17, %cond.true16 ], [ null, %cond.false18 ], !dbg !2735
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2735
  %tobool21 = icmp ne %struct.VEC_int_heap* %15, null, !dbg !2735
  br i1 %tobool21, label %cond.true22, label %cond.false24, !dbg !2735

cond.true22:                                      ; preds = %cond.end19
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2735
  %base23 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i32 0, i32 0, !dbg !2735
  br label %cond.end25, !dbg !2735

cond.false24:                                     ; preds = %cond.end19
  br label %cond.end25, !dbg !2735

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi %struct.VEC_int_base* [ %base23, %cond.true22 ], [ null, %cond.false24 ], !dbg !2735
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2735
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !2735
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !2735
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 0, !dbg !2735
  %rt_int30 = bitcast %union.rtunion_def* %arrayidx29 to i32*, !dbg !2735
  %18 = load i32, i32* %rt_int30, align 8, !dbg !2735
  %call31 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond26, i32 %18), !dbg !2735
  %call32 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond20, i32 %call31), !dbg !2735
  %expr33 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call32, i32 0, i32 0, !dbg !2735
  %priority = getelementptr inbounds %struct._expr, %struct._expr* %expr33, i32 0, i32 3, !dbg !2735
  %19 = load i32, i32* %priority, align 8, !dbg !2735
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2735
  %tobool34 = icmp ne %struct.VEC_sel_insn_data_def_heap* %20, null, !dbg !2735
  br i1 %tobool34, label %cond.true35, label %cond.false37, !dbg !2735

cond.true35:                                      ; preds = %cond.end25
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2735
  %base36 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i32 0, i32 0, !dbg !2735
  br label %cond.end38, !dbg !2735

cond.false37:                                     ; preds = %cond.end25
  br label %cond.end38, !dbg !2735

cond.end38:                                       ; preds = %cond.false37, %cond.true35
  %cond39 = phi %struct.VEC_sel_insn_data_def_base* [ %base36, %cond.true35 ], [ null, %cond.false37 ], !dbg !2735
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2735
  %tobool40 = icmp ne %struct.VEC_int_heap* %22, null, !dbg !2735
  br i1 %tobool40, label %cond.true41, label %cond.false43, !dbg !2735

cond.true41:                                      ; preds = %cond.end38
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2735
  %base42 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i32 0, i32 0, !dbg !2735
  br label %cond.end44, !dbg !2735

cond.false43:                                     ; preds = %cond.end38
  br label %cond.end44, !dbg !2735

cond.end44:                                       ; preds = %cond.false43, %cond.true41
  %cond45 = phi %struct.VEC_int_base* [ %base42, %cond.true41 ], [ null, %cond.false43 ], !dbg !2735
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2735
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !2735
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !2735
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !2735
  %rt_int49 = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !2735
  %25 = load i32, i32* %rt_int49, align 8, !dbg !2735
  %call50 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond45, i32 %25), !dbg !2735
  %call51 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond39, i32 %call50), !dbg !2735
  %expr52 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call51, i32 0, i32 0, !dbg !2735
  %priority_adj53 = getelementptr inbounds %struct._expr, %struct._expr* %expr52, i32 0, i32 4, !dbg !2735
  %26 = load i32, i32* %priority_adj53, align 4, !dbg !2735
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 %11, i32 %12, i32 %19, i32 %26), !dbg !2735
  %mul = mul nsw i32 2, %call54, !dbg !2735
  %add55 = add nsw i32 1, %mul, !dbg !2735
  store i32 %add55, i32* %__j, align 4, !dbg !2735
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !2736, metadata !DIExpression()), !dbg !2735
  %27 = load i32, i32* %__j, align 4, !dbg !2735
  %conv = sext i32 %27 to i64, !dbg !2735
  %mul56 = mul i64 1, %conv, !dbg !2735
  %28 = alloca i8, i64 %mul56, align 16, !dbg !2735
  store i8* %28, i8** %__s, align 8, !dbg !2735
  %29 = load i8*, i8** %__s, align 8, !dbg !2735
  %30 = load i32, i32* %__j, align 4, !dbg !2735
  %conv57 = sext i32 %30 to i64, !dbg !2735
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2735
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !2735
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !2735
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 0, !dbg !2735
  %rt_int61 = bitcast %union.rtunion_def* %arrayidx60 to i32*, !dbg !2735
  %32 = load i32, i32* %rt_int61, align 8, !dbg !2735
  %33 = load i32, i32* %amount.addr, align 4, !dbg !2735
  %34 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2735
  %tobool62 = icmp ne %struct.VEC_sel_insn_data_def_heap* %34, null, !dbg !2735
  br i1 %tobool62, label %cond.true63, label %cond.false65, !dbg !2735

cond.true63:                                      ; preds = %cond.end44
  %35 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2735
  %base64 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %35, i32 0, i32 0, !dbg !2735
  br label %cond.end66, !dbg !2735

cond.false65:                                     ; preds = %cond.end44
  br label %cond.end66, !dbg !2735

cond.end66:                                       ; preds = %cond.false65, %cond.true63
  %cond67 = phi %struct.VEC_sel_insn_data_def_base* [ %base64, %cond.true63 ], [ null, %cond.false65 ], !dbg !2735
  %36 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2735
  %tobool68 = icmp ne %struct.VEC_int_heap* %36, null, !dbg !2735
  br i1 %tobool68, label %cond.true69, label %cond.false71, !dbg !2735

cond.true69:                                      ; preds = %cond.end66
  %37 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2735
  %base70 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %37, i32 0, i32 0, !dbg !2735
  br label %cond.end72, !dbg !2735

cond.false71:                                     ; preds = %cond.end66
  br label %cond.end72, !dbg !2735

cond.end72:                                       ; preds = %cond.false71, %cond.true69
  %cond73 = phi %struct.VEC_int_base* [ %base70, %cond.true69 ], [ null, %cond.false71 ], !dbg !2735
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2735
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !2735
  %fld75 = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !2735
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i64 0, i64 0, !dbg !2735
  %rt_int77 = bitcast %union.rtunion_def* %arrayidx76 to i32*, !dbg !2735
  %39 = load i32, i32* %rt_int77, align 8, !dbg !2735
  %call78 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond73, i32 %39), !dbg !2735
  %call79 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond67, i32 %call78), !dbg !2735
  %expr80 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call79, i32 0, i32 0, !dbg !2735
  %priority81 = getelementptr inbounds %struct._expr, %struct._expr* %expr80, i32 0, i32 3, !dbg !2735
  %40 = load i32, i32* %priority81, align 8, !dbg !2735
  %41 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2735
  %tobool82 = icmp ne %struct.VEC_sel_insn_data_def_heap* %41, null, !dbg !2735
  br i1 %tobool82, label %cond.true83, label %cond.false85, !dbg !2735

cond.true83:                                      ; preds = %cond.end72
  %42 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2735
  %base84 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %42, i32 0, i32 0, !dbg !2735
  br label %cond.end86, !dbg !2735

cond.false85:                                     ; preds = %cond.end72
  br label %cond.end86, !dbg !2735

cond.end86:                                       ; preds = %cond.false85, %cond.true83
  %cond87 = phi %struct.VEC_sel_insn_data_def_base* [ %base84, %cond.true83 ], [ null, %cond.false85 ], !dbg !2735
  %43 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2735
  %tobool88 = icmp ne %struct.VEC_int_heap* %43, null, !dbg !2735
  br i1 %tobool88, label %cond.true89, label %cond.false91, !dbg !2735

cond.true89:                                      ; preds = %cond.end86
  %44 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2735
  %base90 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %44, i32 0, i32 0, !dbg !2735
  br label %cond.end92, !dbg !2735

cond.false91:                                     ; preds = %cond.end86
  br label %cond.end92, !dbg !2735

cond.end92:                                       ; preds = %cond.false91, %cond.true89
  %cond93 = phi %struct.VEC_int_base* [ %base90, %cond.true89 ], [ null, %cond.false91 ], !dbg !2735
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2735
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !2735
  %fld95 = bitcast %union.u* %u94 to [1 x %union.rtunion_def]*, !dbg !2735
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i64 0, i64 0, !dbg !2735
  %rt_int97 = bitcast %union.rtunion_def* %arrayidx96 to i32*, !dbg !2735
  %46 = load i32, i32* %rt_int97, align 8, !dbg !2735
  %call98 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond93, i32 %46), !dbg !2735
  %call99 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond87, i32 %call98), !dbg !2735
  %expr100 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call99, i32 0, i32 0, !dbg !2735
  %priority_adj101 = getelementptr inbounds %struct._expr, %struct._expr* %expr100, i32 0, i32 4, !dbg !2735
  %47 = load i32, i32* %priority_adj101, align 4, !dbg !2735
  %call102 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %29, i64 %conv57, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 %32, i32 %33, i32 %40, i32 %47), !dbg !2735
  %48 = load i8*, i8** %__s, align 8, !dbg !2735
  call void @sel_prepare_string_for_dot_label(i8* %48), !dbg !2735
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !2735
  %50 = load i8*, i8** %__s, align 8, !dbg !2735
  %call103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %50), !dbg !2735
  br label %do.end, !dbg !2735

do.end:                                           ; preds = %cond.end92
  br label %if.end, !dbg !2735

if.else:                                          ; preds = %do.body
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !2729
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2729
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !2729
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !2729
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 0, !dbg !2729
  %rt_int107 = bitcast %union.rtunion_def* %arrayidx106 to i32*, !dbg !2729
  %53 = load i32, i32* %rt_int107, align 8, !dbg !2729
  %54 = load i32, i32* %amount.addr, align 4, !dbg !2729
  %55 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2729
  %tobool108 = icmp ne %struct.VEC_sel_insn_data_def_heap* %55, null, !dbg !2729
  br i1 %tobool108, label %cond.true109, label %cond.false111, !dbg !2729

cond.true109:                                     ; preds = %if.else
  %56 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2729
  %base110 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %56, i32 0, i32 0, !dbg !2729
  br label %cond.end112, !dbg !2729

cond.false111:                                    ; preds = %if.else
  br label %cond.end112, !dbg !2729

cond.end112:                                      ; preds = %cond.false111, %cond.true109
  %cond113 = phi %struct.VEC_sel_insn_data_def_base* [ %base110, %cond.true109 ], [ null, %cond.false111 ], !dbg !2729
  %57 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2729
  %tobool114 = icmp ne %struct.VEC_int_heap* %57, null, !dbg !2729
  br i1 %tobool114, label %cond.true115, label %cond.false117, !dbg !2729

cond.true115:                                     ; preds = %cond.end112
  %58 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2729
  %base116 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %58, i32 0, i32 0, !dbg !2729
  br label %cond.end118, !dbg !2729

cond.false117:                                    ; preds = %cond.end112
  br label %cond.end118, !dbg !2729

cond.end118:                                      ; preds = %cond.false117, %cond.true115
  %cond119 = phi %struct.VEC_int_base* [ %base116, %cond.true115 ], [ null, %cond.false117 ], !dbg !2729
  %59 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2729
  %u120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !2729
  %fld121 = bitcast %union.u* %u120 to [1 x %union.rtunion_def]*, !dbg !2729
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i64 0, i64 0, !dbg !2729
  %rt_int123 = bitcast %union.rtunion_def* %arrayidx122 to i32*, !dbg !2729
  %60 = load i32, i32* %rt_int123, align 8, !dbg !2729
  %call124 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond119, i32 %60), !dbg !2729
  %call125 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond113, i32 %call124), !dbg !2729
  %expr126 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call125, i32 0, i32 0, !dbg !2729
  %priority127 = getelementptr inbounds %struct._expr, %struct._expr* %expr126, i32 0, i32 3, !dbg !2729
  %61 = load i32, i32* %priority127, align 8, !dbg !2729
  %62 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2729
  %tobool128 = icmp ne %struct.VEC_sel_insn_data_def_heap* %62, null, !dbg !2729
  br i1 %tobool128, label %cond.true129, label %cond.false131, !dbg !2729

cond.true129:                                     ; preds = %cond.end118
  %63 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2729
  %base130 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %63, i32 0, i32 0, !dbg !2729
  br label %cond.end132, !dbg !2729

cond.false131:                                    ; preds = %cond.end118
  br label %cond.end132, !dbg !2729

cond.end132:                                      ; preds = %cond.false131, %cond.true129
  %cond133 = phi %struct.VEC_sel_insn_data_def_base* [ %base130, %cond.true129 ], [ null, %cond.false131 ], !dbg !2729
  %64 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2729
  %tobool134 = icmp ne %struct.VEC_int_heap* %64, null, !dbg !2729
  br i1 %tobool134, label %cond.true135, label %cond.false137, !dbg !2729

cond.true135:                                     ; preds = %cond.end132
  %65 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2729
  %base136 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %65, i32 0, i32 0, !dbg !2729
  br label %cond.end138, !dbg !2729

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138, !dbg !2729

cond.end138:                                      ; preds = %cond.false137, %cond.true135
  %cond139 = phi %struct.VEC_int_base* [ %base136, %cond.true135 ], [ null, %cond.false137 ], !dbg !2729
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2729
  %u140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !2729
  %fld141 = bitcast %union.u* %u140 to [1 x %union.rtunion_def]*, !dbg !2729
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i64 0, i64 0, !dbg !2729
  %rt_int143 = bitcast %union.rtunion_def* %arrayidx142 to i32*, !dbg !2729
  %67 = load i32, i32* %rt_int143, align 8, !dbg !2729
  %call144 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond139, i32 %67), !dbg !2729
  %call145 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond133, i32 %call144), !dbg !2729
  %expr146 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call145, i32 0, i32 0, !dbg !2729
  %priority_adj147 = getelementptr inbounds %struct._expr, %struct._expr* %expr146, i32 0, i32 4, !dbg !2729
  %68 = load i32, i32* %priority_adj147, align 4, !dbg !2729
  %call148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 %53, i32 %54, i32 %61, i32 %68), !dbg !2729
  br label %if.end

if.end:                                           ; preds = %cond.end138, %do.end
  br label %do.end149, !dbg !2732

do.end149:                                        ; preds = %if.end
  br label %if.end150, !dbg !2732

if.end150:                                        ; preds = %do.end149, %cond.end5
  ret void, !dbg !2737
}

declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

declare dso_local void @sel_prepare_string_for_dot_label(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @move_op_on_enter(%struct.rtx_def* %insn, %struct.cmpd_local_params* %local_params, i8* %static_params, i8 zeroext %visited_p) #0 !dbg !2738 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %local_params.addr = alloca %struct.cmpd_local_params*, align 8
  %static_params.addr = alloca i8*, align 8
  %visited_p.addr = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2739, metadata !DIExpression()), !dbg !2740
  store %struct.cmpd_local_params* %local_params, %struct.cmpd_local_params** %local_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params** %local_params.addr, metadata !2741, metadata !DIExpression()), !dbg !2742
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !2743, metadata !DIExpression()), !dbg !2744
  store i8 %visited_p, i8* %visited_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %visited_p.addr, metadata !2745, metadata !DIExpression()), !dbg !2746
  %0 = load i8, i8* %visited_p.addr, align 1, !dbg !2747
  %tobool = icmp ne i8 %0, 0, !dbg !2747
  br i1 %tobool, label %if.then, label %if.end, !dbg !2749

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !2750
  br label %return, !dbg !2750

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !2751
  br label %return, !dbg !2751

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !2752
  ret i32 %1, !dbg !2752
}

; Function Attrs: noinline nounwind uwtable
define internal void @move_op_orig_expr_found(%struct.rtx_def* %insn, %struct._expr* %expr, %struct.cmpd_local_params* %lparams, i8* %static_params) #0 !dbg !2753 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %struct._expr*, align 8
  %lparams.addr = alloca %struct.cmpd_local_params*, align 8
  %static_params.addr = alloca i8*, align 8
  %only_disconnect = alloca i8, align 1
  %insn_emitted = alloca i8, align 1
  %params = alloca %struct.moveop_static_params*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2754, metadata !DIExpression()), !dbg !2755
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !2756, metadata !DIExpression()), !dbg !2757
  store %struct.cmpd_local_params* %lparams, %struct.cmpd_local_params** %lparams.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params** %lparams.addr, metadata !2758, metadata !DIExpression()), !dbg !2759
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !2760, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.declare(metadata i8* %only_disconnect, metadata !2762, metadata !DIExpression()), !dbg !2763
  call void @llvm.dbg.declare(metadata i8* %insn_emitted, metadata !2764, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.declare(metadata %struct.moveop_static_params** %params, metadata !2766, metadata !DIExpression()), !dbg !2767
  %0 = load i8*, i8** %static_params.addr, align 8, !dbg !2768
  %1 = bitcast i8* %0 to %struct.moveop_static_params*, !dbg !2769
  store %struct.moveop_static_params* %1, %struct.moveop_static_params** %params, align 8, !dbg !2767
  %2 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params, align 8, !dbg !2770
  %c_expr = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %2, i32 0, i32 1, !dbg !2771
  %3 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !2771
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2772
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %4, null, !dbg !2772
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2772

cond.true:                                        ; preds = %entry
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !2772
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i32 0, i32 0, !dbg !2772
  br label %cond.end, !dbg !2772

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2772

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !2772
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2772
  %tobool1 = icmp ne %struct.VEC_int_heap* %6, null, !dbg !2772
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !2772

cond.true2:                                       ; preds = %cond.end
  %7 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2772
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %7, i32 0, i32 0, !dbg !2772
  br label %cond.end5, !dbg !2772

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !2772

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !2772
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2772
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !2772
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2772
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2772
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2772
  %9 = load i32, i32* %rt_int, align 8, !dbg !2772
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %9), !dbg !2772
  %call7 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !2772
  %expr8 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i32 0, i32 0, !dbg !2772
  call void @copy_expr_onside(%struct._expr* %3, %struct._expr* %expr8), !dbg !2773
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2774
  call void @track_scheduled_insns_and_blocks(%struct.rtx_def* %10), !dbg !2775
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2776
  %12 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !2777
  %13 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params, align 8, !dbg !2778
  %call9 = call zeroext i8 @handle_emitting_transformations(%struct.rtx_def* %11, %struct._expr* %12, %struct.moveop_static_params* %13), !dbg !2779
  store i8 %call9, i8* %insn_emitted, align 1, !dbg !2780
  %14 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params, align 8, !dbg !2781
  %uid = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %14, i32 0, i32 2, !dbg !2782
  %15 = load i32, i32* %uid, align 8, !dbg !2782
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2783
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !2783
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !2783
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, !dbg !2783
  %rt_int13 = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !2783
  %17 = load i32, i32* %rt_int13, align 8, !dbg !2783
  %cmp = icmp eq i32 %15, %17, !dbg !2784
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !2785

land.lhs.true:                                    ; preds = %cond.end5
  %18 = load i8, i8* %insn_emitted, align 1, !dbg !2786
  %tobool14 = icmp ne i8 %18, 0, !dbg !2786
  br i1 %tobool14, label %land.end, label %land.rhs, !dbg !2787

land.rhs:                                         ; preds = %land.lhs.true
  %19 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !2788
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %19, i32 0, i32 10, !dbg !2788
  %20 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %history_of_changes, align 8, !dbg !2788
  %tobool15 = icmp ne %struct.VEC_expr_history_def_heap* %20, null, !dbg !2788
  br i1 %tobool15, label %cond.true16, label %cond.false19, !dbg !2788

cond.true16:                                      ; preds = %land.rhs
  %21 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !2788
  %history_of_changes17 = getelementptr inbounds %struct._expr, %struct._expr* %21, i32 0, i32 10, !dbg !2788
  %22 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %history_of_changes17, align 8, !dbg !2788
  %base18 = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %22, i32 0, i32 0, !dbg !2788
  br label %cond.end20, !dbg !2788

cond.false19:                                     ; preds = %land.rhs
  br label %cond.end20, !dbg !2788

cond.end20:                                       ; preds = %cond.false19, %cond.true16
  %cond21 = phi %struct.VEC_expr_history_def_base* [ %base18, %cond.true16 ], [ null, %cond.false19 ], !dbg !2788
  %call22 = call i32 @VEC_expr_history_def_base_length(%struct.VEC_expr_history_def_base* %cond21), !dbg !2788
  %cmp23 = icmp ugt i32 %call22, 0, !dbg !2788
  %lnot = xor i1 %cmp23, true, !dbg !2789
  br label %land.end

land.end:                                         ; preds = %cond.end20, %land.lhs.true, %cond.end5
  %23 = phi i1 [ false, %land.lhs.true ], [ false, %cond.end5 ], [ %lnot, %cond.end20 ], !dbg !2790
  %land.ext = zext i1 %23 to i32, !dbg !2787
  %conv = trunc i32 %land.ext to i8, !dbg !2791
  store i8 %conv, i8* %only_disconnect, align 1, !dbg !2792
  %24 = load i8, i8* %only_disconnect, align 1, !dbg !2793
  %tobool24 = icmp ne i8 %24, 0, !dbg !2793
  br i1 %tobool24, label %if.then, label %if.end, !dbg !2795

if.then:                                          ; preds = %land.end
  %25 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params, align 8, !dbg !2796
  %uid25 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %25, i32 0, i32 2, !dbg !2797
  store i32 -1, i32* %uid25, align 8, !dbg !2798
  br label %if.end, !dbg !2796

if.end:                                           ; preds = %if.then, %land.end
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2799
  %27 = load i8, i8* %only_disconnect, align 1, !dbg !2800
  call void @remove_insn_from_stream(%struct.rtx_def* %26, i8 zeroext %27), !dbg !2801
  ret void, !dbg !2802
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @move_op_orig_expr_not_found(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, i8* %static_params) #0 !dbg !2803 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %static_params.addr = alloca i8*, align 8
  %sparams = alloca %struct.moveop_static_params*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2804, metadata !DIExpression()), !dbg !2805
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %orig_ops.addr, metadata !2806, metadata !DIExpression()), !dbg !2807
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !2808, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.declare(metadata %struct.moveop_static_params** %sparams, metadata !2810, metadata !DIExpression()), !dbg !2811
  %0 = load i8*, i8** %static_params.addr, align 8, !dbg !2812
  %1 = bitcast i8* %0 to %struct.moveop_static_params*, !dbg !2813
  store %struct.moveop_static_params* %1, %struct.moveop_static_params** %sparams, align 8, !dbg !2811
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2814
  %3 = load %struct.moveop_static_params*, %struct.moveop_static_params** %sparams, align 8, !dbg !2816
  %dest = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %3, i32 0, i32 0, !dbg !2817
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !2817
  %call = call zeroext i8 @lhs_of_insn_equals_to_dest_p(%struct.rtx_def* %2, %struct.rtx_def* %4), !dbg !2818
  %tobool = icmp ne i8 %call, 0, !dbg !2818
  br i1 %tobool, label %if.then, label %if.end, !dbg !2819

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !2820
  br label %return, !dbg !2820

if.end:                                           ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !2821
  br label %return, !dbg !2821

return:                                           ; preds = %if.end, %if.then
  %5 = load i8, i8* %retval, align 1, !dbg !2822
  ret i8 %5, !dbg !2822
}

; Function Attrs: noinline nounwind uwtable
define internal void @move_op_merge_succs(%struct.rtx_def* %insn, %struct.rtx_def* %succ, i32 %moveop_drv_call_res, %struct.cmpd_local_params* %lparams, i8* %static_params) #0 !dbg !2823 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %succ.addr = alloca %struct.rtx_def*, align 8
  %moveop_drv_call_res.addr = alloca i32, align 4
  %lparams.addr = alloca %struct.cmpd_local_params*, align 8
  %static_params.addr = alloca i8*, align 8
  %sparams = alloca %struct.moveop_static_params*, align 8
  %old_times = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2824, metadata !DIExpression()), !dbg !2825
  store %struct.rtx_def* %succ, %struct.rtx_def** %succ.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %succ.addr, metadata !2826, metadata !DIExpression()), !dbg !2827
  store i32 %moveop_drv_call_res, i32* %moveop_drv_call_res.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %moveop_drv_call_res.addr, metadata !2828, metadata !DIExpression()), !dbg !2829
  store %struct.cmpd_local_params* %lparams, %struct.cmpd_local_params** %lparams.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params** %lparams.addr, metadata !2830, metadata !DIExpression()), !dbg !2831
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !2832, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.declare(metadata %struct.moveop_static_params** %sparams, metadata !2834, metadata !DIExpression()), !dbg !2835
  %0 = load i8*, i8** %static_params.addr, align 8, !dbg !2836
  %1 = bitcast i8* %0 to %struct.moveop_static_params*, !dbg !2837
  store %struct.moveop_static_params* %1, %struct.moveop_static_params** %sparams, align 8, !dbg !2835
  %2 = load i32, i32* %moveop_drv_call_res.addr, align 4, !dbg !2838
  %cmp = icmp ne i32 %2, 1, !dbg !2840
  br i1 %cmp, label %if.then, label %if.end, !dbg !2841

if.then:                                          ; preds = %entry
  br label %if.end15, !dbg !2842

if.end:                                           ; preds = %entry
  %3 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2843
  %c_expr_merged = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %3, i32 0, i32 2, !dbg !2845
  %4 = load %struct._expr*, %struct._expr** %c_expr_merged, align 8, !dbg !2845
  %tobool = icmp ne %struct._expr* %4, null, !dbg !2843
  br i1 %tobool, label %if.else, label %if.then1, !dbg !2846

if.then1:                                         ; preds = %if.end
  %5 = load %struct.moveop_static_params*, %struct.moveop_static_params** %sparams, align 8, !dbg !2847
  %c_expr = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %5, i32 0, i32 1, !dbg !2849
  %6 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !2849
  %7 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2850
  %c_expr_merged2 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %7, i32 0, i32 2, !dbg !2851
  store %struct._expr* %6, %struct._expr** %c_expr_merged2, align 8, !dbg !2852
  %8 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2853
  %c_expr_local = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %8, i32 0, i32 3, !dbg !2854
  %9 = load %struct._expr*, %struct._expr** %c_expr_local, align 8, !dbg !2854
  %10 = load %struct.moveop_static_params*, %struct.moveop_static_params** %sparams, align 8, !dbg !2855
  %c_expr3 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %10, i32 0, i32 1, !dbg !2856
  store %struct._expr* %9, %struct._expr** %c_expr3, align 8, !dbg !2857
  br label %if.end15, !dbg !2858

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %old_times, metadata !2859, metadata !DIExpression()), !dbg !2861
  %11 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2862
  %c_expr_merged4 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %11, i32 0, i32 2, !dbg !2862
  %12 = load %struct._expr*, %struct._expr** %c_expr_merged4, align 8, !dbg !2862
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %12, i32 0, i32 5, !dbg !2862
  %13 = load i32, i32* %sched_times, align 8, !dbg !2862
  store i32 %13, i32* %old_times, align 4, !dbg !2861
  %14 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2863
  %c_expr_merged5 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %14, i32 0, i32 2, !dbg !2864
  %15 = load %struct._expr*, %struct._expr** %c_expr_merged5, align 8, !dbg !2864
  %16 = load %struct.moveop_static_params*, %struct.moveop_static_params** %sparams, align 8, !dbg !2865
  %c_expr6 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %16, i32 0, i32 1, !dbg !2866
  %17 = load %struct._expr*, %struct._expr** %c_expr6, align 8, !dbg !2866
  call void @merge_expr_data(%struct._expr* %15, %struct._expr* %17, %struct.rtx_def* null), !dbg !2867
  %18 = load %struct.moveop_static_params*, %struct.moveop_static_params** %sparams, align 8, !dbg !2868
  %c_expr7 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %18, i32 0, i32 1, !dbg !2868
  %19 = load %struct._expr*, %struct._expr** %c_expr7, align 8, !dbg !2868
  %sched_times8 = getelementptr inbounds %struct._expr, %struct._expr* %19, i32 0, i32 5, !dbg !2868
  %20 = load i32, i32* %sched_times8, align 8, !dbg !2868
  %cmp9 = icmp eq i32 %20, 0, !dbg !2870
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !2871

if.then10:                                        ; preds = %if.else
  %21 = load i32, i32* %old_times, align 4, !dbg !2872
  %22 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2873
  %c_expr_merged11 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %22, i32 0, i32 2, !dbg !2873
  %23 = load %struct._expr*, %struct._expr** %c_expr_merged11, align 8, !dbg !2873
  %sched_times12 = getelementptr inbounds %struct._expr, %struct._expr* %23, i32 0, i32 5, !dbg !2873
  store i32 %21, i32* %sched_times12, align 8, !dbg !2874
  br label %if.end13, !dbg !2873

if.end13:                                         ; preds = %if.then10, %if.else
  %24 = load %struct.moveop_static_params*, %struct.moveop_static_params** %sparams, align 8, !dbg !2875
  %c_expr14 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %24, i32 0, i32 1, !dbg !2876
  %25 = load %struct._expr*, %struct._expr** %c_expr14, align 8, !dbg !2876
  call void @clear_expr(%struct._expr* %25), !dbg !2877
  br label %if.end15

if.end15:                                         ; preds = %if.then, %if.end13, %if.then1
  ret void, !dbg !2878
}

; Function Attrs: noinline nounwind uwtable
define internal void @move_op_after_merge_succs(%struct.cmpd_local_params* %lp, i8* %sparams) #0 !dbg !2879 {
entry:
  %lp.addr = alloca %struct.cmpd_local_params*, align 8
  %sparams.addr = alloca i8*, align 8
  %sp = alloca %struct.moveop_static_params*, align 8
  store %struct.cmpd_local_params* %lp, %struct.cmpd_local_params** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params** %lp.addr, metadata !2880, metadata !DIExpression()), !dbg !2881
  store i8* %sparams, i8** %sparams.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sparams.addr, metadata !2882, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.declare(metadata %struct.moveop_static_params** %sp, metadata !2884, metadata !DIExpression()), !dbg !2885
  %0 = load i8*, i8** %sparams.addr, align 8, !dbg !2886
  %1 = bitcast i8* %0 to %struct.moveop_static_params*, !dbg !2887
  store %struct.moveop_static_params* %1, %struct.moveop_static_params** %sp, align 8, !dbg !2885
  %2 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lp.addr, align 8, !dbg !2888
  %c_expr_merged = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %2, i32 0, i32 2, !dbg !2889
  %3 = load %struct._expr*, %struct._expr** %c_expr_merged, align 8, !dbg !2889
  %4 = load %struct.moveop_static_params*, %struct.moveop_static_params** %sp, align 8, !dbg !2890
  %c_expr = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %4, i32 0, i32 1, !dbg !2891
  store %struct._expr* %3, %struct._expr** %c_expr, align 8, !dbg !2892
  ret void, !dbg !2893
}

; Function Attrs: noinline nounwind uwtable
define internal void @move_op_ascend(%struct.rtx_def* %insn, i8* %static_params) #0 !dbg !2894 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %static_params.addr = alloca i8*, align 8
  %res = alloca i32, align 4
  %sparams = alloca %struct.moveop_static_params*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2895, metadata !DIExpression()), !dbg !2896
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !2897, metadata !DIExpression()), !dbg !2898
  call void @llvm.dbg.declare(metadata i32* %res, metadata !2899, metadata !DIExpression()), !dbg !2900
  call void @llvm.dbg.declare(metadata %struct.moveop_static_params** %sparams, metadata !2901, metadata !DIExpression()), !dbg !2902
  %0 = load i8*, i8** %static_params.addr, align 8, !dbg !2903
  %1 = bitcast i8* %0 to %struct.moveop_static_params*, !dbg !2904
  store %struct.moveop_static_params* %1, %struct.moveop_static_params** %sparams, align 8, !dbg !2902
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2905
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !2905
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2905
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !2905
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2905
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2905
  %4 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !2905
  %cmp = icmp eq %struct.rtx_def* %3, %4, !dbg !2905
  br i1 %cmp, label %if.end, label %if.then, !dbg !2907

if.then:                                          ; preds = %entry
  %5 = load %struct.moveop_static_params*, %struct.moveop_static_params** %sparams, align 8, !dbg !2908
  %c_expr = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %5, i32 0, i32 1, !dbg !2910
  %6 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !2910
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2911
  %call = call i32 @moveup_expr_cached(%struct._expr* %6, %struct.rtx_def* %7, i8 zeroext 0), !dbg !2912
  store i32 %call, i32* %res, align 4, !dbg !2913
  %8 = load i32, i32* %res, align 4, !dbg !2914
  %cmp1 = icmp ne i32 %8, 2, !dbg !2914
  br i1 %cmp1, label %cond.false, label %cond.true, !dbg !2914

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6142, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2914
  br label %cond.end, !dbg !2914

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !2914

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2914
  br label %if.end, !dbg !2915

if.end:                                           ; preds = %cond.end, %entry
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2916
  call void @update_liveness_on_insn(%struct.rtx_def* %9), !dbg !2917
  ret void, !dbg !2918
}

; Function Attrs: noinline nounwind uwtable
define internal void @move_op_at_first_insn(%struct.rtx_def* %insn, %struct.cmpd_local_params* %lparams, i8* %static_params) #0 !dbg !2919 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %lparams.addr = alloca %struct.cmpd_local_params*, align 8
  %static_params.addr = alloca i8*, align 8
  %sparams = alloca %struct.moveop_static_params*, align 8
  %book_block = alloca %struct.basic_block_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2920, metadata !DIExpression()), !dbg !2921
  store %struct.cmpd_local_params* %lparams, %struct.cmpd_local_params** %lparams.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params** %lparams.addr, metadata !2922, metadata !DIExpression()), !dbg !2923
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !2924, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.declare(metadata %struct.moveop_static_params** %sparams, metadata !2926, metadata !DIExpression()), !dbg !2927
  %0 = load i8*, i8** %static_params.addr, align 8, !dbg !2928
  %1 = bitcast i8* %0 to %struct.moveop_static_params*, !dbg !2929
  store %struct.moveop_static_params* %1, %struct.moveop_static_params** %sparams, align 8, !dbg !2927
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %book_block, metadata !2930, metadata !DIExpression()), !dbg !2931
  store %struct.basic_block_def* null, %struct.basic_block_def** %book_block, align 8, !dbg !2931
  %2 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2932
  %removed_last_insn = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %2, i32 0, i32 5, !dbg !2934
  %bf.load = load i8, i8* %removed_last_insn, align 8, !dbg !2934
  %bf.clear = and i8 %bf.load, 1, !dbg !2934
  %bf.cast = zext i8 %bf.clear to i32, !dbg !2934
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !2932
  br i1 %tobool, label %if.end9, label %land.lhs.true, !dbg !2935

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2936
  %e1 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %3, i32 0, i32 0, !dbg !2937
  %4 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !2937
  %tobool1 = icmp ne %struct.edge_def* %4, null, !dbg !2936
  br i1 %tobool1, label %land.lhs.true2, label %if.end9, !dbg !2938

land.lhs.true2:                                   ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2939
  %call = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %5), !dbg !2940
  %conv = zext i8 %call to i32, !dbg !2940
  %tobool3 = icmp ne i32 %conv, 0, !dbg !2940
  br i1 %tobool3, label %if.then, label %if.end9, !dbg !2941

if.then:                                          ; preds = %land.lhs.true2
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2942
  %call4 = call zeroext i8 @sel_num_cfg_preds_gt_1(%struct.rtx_def* %6), !dbg !2945
  %tobool5 = icmp ne i8 %call4, 0, !dbg !2945
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !2946

if.then6:                                         ; preds = %if.then
  %7 = load %struct.moveop_static_params*, %struct.moveop_static_params** %sparams, align 8, !dbg !2947
  %c_expr = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %7, i32 0, i32 1, !dbg !2948
  %8 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !2948
  %9 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2949
  %e17 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %9, i32 0, i32 0, !dbg !2950
  %10 = load %struct.edge_def*, %struct.edge_def** %e17, align 8, !dbg !2950
  %11 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2951
  %e2 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %11, i32 0, i32 1, !dbg !2952
  %12 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !2952
  %call8 = call %struct.basic_block_def* @generate_bookkeeping_insn(%struct._expr* %8, %struct.edge_def* %10, %struct.edge_def* %12), !dbg !2953
  store %struct.basic_block_def* %call8, %struct.basic_block_def** %book_block, align 8, !dbg !2954
  br label %if.end, !dbg !2955

if.end:                                           ; preds = %if.then6, %if.then
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2956
  call void @update_data_sets(%struct.rtx_def* %13), !dbg !2957
  br label %if.end9, !dbg !2958

if.end9:                                          ; preds = %if.end, %land.lhs.true2, %land.lhs.true, %entry
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !2959
  %tobool10 = icmp ne %struct.basic_block_def* %14, null, !dbg !2959
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !2961

if.then11:                                        ; preds = %if.end9
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !2962
  call void @update_and_record_unavailable_insns(%struct.basic_block_def* %15), !dbg !2963
  br label %if.end12, !dbg !2963

if.end12:                                         ; preds = %if.then11, %if.end9
  %16 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2964
  %removed_last_insn13 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %16, i32 0, i32 5, !dbg !2966
  %bf.load14 = load i8, i8* %removed_last_insn13, align 8, !dbg !2966
  %bf.clear15 = and i8 %bf.load14, 1, !dbg !2966
  %bf.cast16 = zext i8 %bf.clear15 to i32, !dbg !2966
  %tobool17 = icmp ne i32 %bf.cast16, 0, !dbg !2964
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !2967

if.then18:                                        ; preds = %if.end12
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2968
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !2968
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2968
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !2968
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2968
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2968
  store %struct.rtx_def* %18, %struct.rtx_def** %insn.addr, align 8, !dbg !2969
  br label %if.end19, !dbg !2970

if.end19:                                         ; preds = %if.then18, %if.end12
  %19 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %lparams.addr, align 8, !dbg !2971
  %e120 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %19, i32 0, i32 0, !dbg !2973
  %20 = load %struct.edge_def*, %struct.edge_def** %e120, align 8, !dbg !2973
  %tobool21 = icmp ne %struct.edge_def* %20, null, !dbg !2971
  br i1 %tobool21, label %if.then22, label %if.end27, !dbg !2974

if.then22:                                        ; preds = %if.end19
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2975
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !2975
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !2975
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 3, !dbg !2975
  %rt_bb = bitcast %union.rtunion_def* %arrayidx25 to %struct.basic_block_def**, !dbg !2975
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !2975
  %call26 = call zeroext i8 @tidy_control_flow(%struct.basic_block_def* %22, i8 zeroext 1), !dbg !2976
  br label %if.end27, !dbg !2976

if.end27:                                         ; preds = %if.then22, %if.end19
  ret void, !dbg !2977
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fur_on_enter(%struct.rtx_def* %insn, %struct.cmpd_local_params* %local_params, i8* %static_params, i8 zeroext %visited_p) #0 !dbg !2978 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %local_params.addr = alloca %struct.cmpd_local_params*, align 8
  %static_params.addr = alloca i8*, align 8
  %visited_p.addr = alloca i8, align 1
  %sparams = alloca %struct.fur_static_params*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2979, metadata !DIExpression()), !dbg !2980
  store %struct.cmpd_local_params* %local_params, %struct.cmpd_local_params** %local_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params** %local_params.addr, metadata !2981, metadata !DIExpression()), !dbg !2982
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !2983, metadata !DIExpression()), !dbg !2984
  store i8 %visited_p, i8* %visited_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %visited_p.addr, metadata !2985, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.declare(metadata %struct.fur_static_params** %sparams, metadata !2987, metadata !DIExpression()), !dbg !2988
  %0 = load i8*, i8** %static_params.addr, align 8, !dbg !2989
  %1 = bitcast i8* %0 to %struct.fur_static_params*, !dbg !2990
  store %struct.fur_static_params* %1, %struct.fur_static_params** %sparams, align 8, !dbg !2988
  %2 = load i8, i8* %visited_p.addr, align 1, !dbg !2991
  %tobool = icmp ne i8 %2, 0, !dbg !2991
  br i1 %tobool, label %if.then, label %if.else, !dbg !2993

if.then:                                          ; preds = %entry
  %3 = load %struct.fur_static_params*, %struct.fur_static_params** %sparams, align 8, !dbg !2994
  %original_insns = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %3, i32 0, i32 1, !dbg !2994
  %4 = load %struct._list_node**, %struct._list_node*** %original_insns, align 8, !dbg !2994
  %5 = load %struct._list_node*, %struct._list_node** %4, align 8, !dbg !2994
  %tobool1 = icmp ne %struct._list_node* %5, null, !dbg !2994
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !2994

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6162, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2994
  br label %cond.end, !dbg !2994

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !2994

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2994
  %6 = load %struct.fur_static_params*, %struct.fur_static_params** %sparams, align 8, !dbg !2996
  %crosses_call = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %6, i32 0, i32 2, !dbg !2997
  %7 = load i8, i8* %crosses_call, align 8, !dbg !2997
  %conv = zext i8 %7 to i32, !dbg !2996
  %8 = load %struct.fur_static_params*, %struct.fur_static_params** %sparams, align 8, !dbg !2998
  %original_insns2 = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %8, i32 0, i32 1, !dbg !2998
  %9 = load %struct._list_node**, %struct._list_node*** %original_insns2, align 8, !dbg !2998
  %10 = load %struct._list_node*, %struct._list_node** %9, align 8, !dbg !2998
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %10, i32 0, i32 1, !dbg !2998
  %def = bitcast %union.anon.0* %u to %struct._def*, !dbg !2998
  %crosses_call3 = getelementptr inbounds %struct._def, %struct._def* %def, i32 0, i32 1, !dbg !2999
  %11 = load i8, i8* %crosses_call3, align 8, !dbg !3000
  %conv4 = zext i8 %11 to i32, !dbg !3000
  %or = or i32 %conv4, %conv, !dbg !3000
  %conv5 = trunc i32 %or to i8, !dbg !3000
  store i8 %conv5, i8* %crosses_call3, align 8, !dbg !3000
  br label %if.end, !dbg !3001

if.else:                                          ; preds = %entry
  %12 = load %struct.fur_static_params*, %struct.fur_static_params** %sparams, align 8, !dbg !3002
  %original_insns6 = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %12, i32 0, i32 1, !dbg !3003
  %13 = load %struct._list_node**, %struct._list_node*** %original_insns6, align 8, !dbg !3003
  %14 = load %struct._list_node*, %struct._list_node** %13, align 8, !dbg !3004
  %15 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %local_params.addr, align 8, !dbg !3005
  %old_original_insns = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %15, i32 0, i32 4, !dbg !3006
  store %struct._list_node* %14, %struct._list_node** %old_original_insns, align 8, !dbg !3007
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  ret i32 1, !dbg !3008
}

; Function Attrs: noinline nounwind uwtable
define internal void @fur_orig_expr_found(%struct.rtx_def* %insn, %struct._expr* %expr, %struct.cmpd_local_params* %lparams, i8* %static_params) #0 !dbg !3009 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %struct._expr*, align 8
  %lparams.addr = alloca %struct.cmpd_local_params*, align 8
  %static_params.addr = alloca i8*, align 8
  %params = alloca %struct.fur_static_params*, align 8
  %tmp = alloca %struct.bitmap_head_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3010, metadata !DIExpression()), !dbg !3011
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !3012, metadata !DIExpression()), !dbg !3013
  store %struct.cmpd_local_params* %lparams, %struct.cmpd_local_params** %lparams.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params** %lparams.addr, metadata !3014, metadata !DIExpression()), !dbg !3015
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !3016, metadata !DIExpression()), !dbg !3017
  call void @llvm.dbg.declare(metadata %struct.fur_static_params** %params, metadata !3018, metadata !DIExpression()), !dbg !3019
  %0 = load i8*, i8** %static_params.addr, align 8, !dbg !3020
  %1 = bitcast i8* %0 to %struct.fur_static_params*, !dbg !3021
  store %struct.fur_static_params* %1, %struct.fur_static_params** %params, align 8, !dbg !3019
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %tmp, metadata !3022, metadata !DIExpression()), !dbg !3023
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3024
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !3024
  %bf.load = load i32, i32* %3, align 8, !dbg !3024
  %bf.clear = and i32 %bf.load, 65535, !dbg !3024
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !3024
  br i1 %cmp, label %if.then, label %if.end, !dbg !3026

if.then:                                          ; preds = %entry
  %4 = load %struct.fur_static_params*, %struct.fur_static_params** %params, align 8, !dbg !3027
  %crosses_call = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %4, i32 0, i32 2, !dbg !3028
  store i8 1, i8* %crosses_call, align 8, !dbg !3029
  br label %if.end, !dbg !3027

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.fur_static_params*, %struct.fur_static_params** %params, align 8, !dbg !3030
  %original_insns = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %5, i32 0, i32 1, !dbg !3031
  %6 = load %struct._list_node**, %struct._list_node*** %original_insns, align 8, !dbg !3031
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3032
  %8 = load %struct.fur_static_params*, %struct.fur_static_params** %params, align 8, !dbg !3033
  %crosses_call1 = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %8, i32 0, i32 2, !dbg !3034
  %9 = load i8, i8* %crosses_call1, align 8, !dbg !3034
  call void @def_list_add(%struct._list_node** %6, %struct.rtx_def* %7, i8 zeroext %9), !dbg !3035
  %call = call %struct.bitmap_head_def* @get_clear_regset_from_pool(), !dbg !3036
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %tmp, align 8, !dbg !3037
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3038
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !3039
  call void @compute_live_below_insn(%struct.rtx_def* %10, %struct.bitmap_head_def* %11), !dbg !3040
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !3041
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3041
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %13, null, !dbg !3041
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3041

cond.true:                                        ; preds = %if.end
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3041
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %14, i32 0, i32 0, !dbg !3041
  br label %cond.end, !dbg !3041

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !3041

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3041
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3041
  %tobool2 = icmp ne %struct.VEC_int_heap* %15, null, !dbg !3041
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !3041

cond.true3:                                       ; preds = %cond.end
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3041
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i32 0, i32 0, !dbg !3041
  br label %cond.end6, !dbg !3041

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !3041

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi %struct.VEC_int_base* [ %base4, %cond.true3 ], [ null, %cond.false5 ], !dbg !3041
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3041
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3041
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3041
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3041
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3041
  %18 = load i32, i32* %rt_int, align 8, !dbg !3041
  %call8 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond7, i32 %18), !dbg !3041
  %call9 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call8), !dbg !3041
  %expr10 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call9, i32 0, i32 0, !dbg !3041
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr10, i32 0, i32 0, !dbg !3041
  %19 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !3041
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %19, i32 0, i32 1, !dbg !3041
  %reg_sets = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 3, !dbg !3041
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !3041
  %call11 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %12, %struct.bitmap_head_def* %20), !dbg !3041
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !3042
  %22 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3042
  %tobool12 = icmp ne %struct.VEC_sel_insn_data_def_heap* %22, null, !dbg !3042
  br i1 %tobool12, label %cond.true13, label %cond.false15, !dbg !3042

cond.true13:                                      ; preds = %cond.end6
  %23 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3042
  %base14 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %23, i32 0, i32 0, !dbg !3042
  br label %cond.end16, !dbg !3042

cond.false15:                                     ; preds = %cond.end6
  br label %cond.end16, !dbg !3042

cond.end16:                                       ; preds = %cond.false15, %cond.true13
  %cond17 = phi %struct.VEC_sel_insn_data_def_base* [ %base14, %cond.true13 ], [ null, %cond.false15 ], !dbg !3042
  %24 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3042
  %tobool18 = icmp ne %struct.VEC_int_heap* %24, null, !dbg !3042
  br i1 %tobool18, label %cond.true19, label %cond.false21, !dbg !3042

cond.true19:                                      ; preds = %cond.end16
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3042
  %base20 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %25, i32 0, i32 0, !dbg !3042
  br label %cond.end22, !dbg !3042

cond.false21:                                     ; preds = %cond.end16
  br label %cond.end22, !dbg !3042

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi %struct.VEC_int_base* [ %base20, %cond.true19 ], [ null, %cond.false21 ], !dbg !3042
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3042
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !3042
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !3042
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !3042
  %rt_int27 = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !3042
  %27 = load i32, i32* %rt_int27, align 8, !dbg !3042
  %call28 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond23, i32 %27), !dbg !3042
  %call29 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond17, i32 %call28), !dbg !3042
  %expr30 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call29, i32 0, i32 0, !dbg !3042
  %vinsn31 = getelementptr inbounds %struct._expr, %struct._expr* %expr30, i32 0, i32 0, !dbg !3042
  %28 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn31, align 8, !dbg !3042
  %id32 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %28, i32 0, i32 1, !dbg !3042
  %reg_clobbers = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id32, i32 0, i32 4, !dbg !3042
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !3042
  %call33 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %21, %struct.bitmap_head_def* %29), !dbg !3042
  %30 = load %struct.fur_static_params*, %struct.fur_static_params** %params, align 8, !dbg !3043
  %used_regs = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %30, i32 0, i32 0, !dbg !3043
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !3043
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !3043
  %call34 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %31, %struct.bitmap_head_def* %32), !dbg !3043
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !3044
  call void @return_regset_to_pool(%struct.bitmap_head_def* %33), !dbg !3045
  %34 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3046
  %tobool35 = icmp ne %struct.VEC_sel_insn_data_def_heap* %34, null, !dbg !3046
  br i1 %tobool35, label %cond.true36, label %cond.false38, !dbg !3046

cond.true36:                                      ; preds = %cond.end22
  %35 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3046
  %base37 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %35, i32 0, i32 0, !dbg !3046
  br label %cond.end39, !dbg !3046

cond.false38:                                     ; preds = %cond.end22
  br label %cond.end39, !dbg !3046

cond.end39:                                       ; preds = %cond.false38, %cond.true36
  %cond40 = phi %struct.VEC_sel_insn_data_def_base* [ %base37, %cond.true36 ], [ null, %cond.false38 ], !dbg !3046
  %36 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3046
  %tobool41 = icmp ne %struct.VEC_int_heap* %36, null, !dbg !3046
  br i1 %tobool41, label %cond.true42, label %cond.false44, !dbg !3046

cond.true42:                                      ; preds = %cond.end39
  %37 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3046
  %base43 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %37, i32 0, i32 0, !dbg !3046
  br label %cond.end45, !dbg !3046

cond.false44:                                     ; preds = %cond.end39
  br label %cond.end45, !dbg !3046

cond.end45:                                       ; preds = %cond.false44, %cond.true42
  %cond46 = phi %struct.VEC_int_base* [ %base43, %cond.true42 ], [ null, %cond.false44 ], !dbg !3046
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3046
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !3046
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !3046
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 0, !dbg !3046
  %rt_int50 = bitcast %union.rtunion_def* %arrayidx49 to i32*, !dbg !3046
  %39 = load i32, i32* %rt_int50, align 8, !dbg !3046
  %call51 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond46, i32 %39), !dbg !3046
  %call52 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond40, i32 %call51), !dbg !3046
  %expr53 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call52, i32 0, i32 0, !dbg !3046
  %vinsn54 = getelementptr inbounds %struct._expr, %struct._expr* %expr53, i32 0, i32 0, !dbg !3046
  %40 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn54, align 8, !dbg !3046
  %id55 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %40, i32 0, i32 1, !dbg !3046
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id55, i32 0, i32 0, !dbg !3046
  %41 = load i32, i32* %type, align 8, !dbg !3046
  %cmp56 = icmp eq i32 %41, 23, !dbg !3046
  br i1 %cmp56, label %lor.lhs.false, label %cond.false82, !dbg !3046

lor.lhs.false:                                    ; preds = %cond.end45
  %42 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3046
  %tobool57 = icmp ne %struct.VEC_sel_insn_data_def_heap* %42, null, !dbg !3046
  br i1 %tobool57, label %cond.true58, label %cond.false60, !dbg !3046

cond.true58:                                      ; preds = %lor.lhs.false
  %43 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3046
  %base59 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %43, i32 0, i32 0, !dbg !3046
  br label %cond.end61, !dbg !3046

cond.false60:                                     ; preds = %lor.lhs.false
  br label %cond.end61, !dbg !3046

cond.end61:                                       ; preds = %cond.false60, %cond.true58
  %cond62 = phi %struct.VEC_sel_insn_data_def_base* [ %base59, %cond.true58 ], [ null, %cond.false60 ], !dbg !3046
  %44 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3046
  %tobool63 = icmp ne %struct.VEC_int_heap* %44, null, !dbg !3046
  br i1 %tobool63, label %cond.true64, label %cond.false66, !dbg !3046

cond.true64:                                      ; preds = %cond.end61
  %45 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3046
  %base65 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %45, i32 0, i32 0, !dbg !3046
  br label %cond.end67, !dbg !3046

cond.false66:                                     ; preds = %cond.end61
  br label %cond.end67, !dbg !3046

cond.end67:                                       ; preds = %cond.false66, %cond.true64
  %cond68 = phi %struct.VEC_int_base* [ %base65, %cond.true64 ], [ null, %cond.false66 ], !dbg !3046
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3046
  %u69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !3046
  %fld70 = bitcast %union.u* %u69 to [1 x %union.rtunion_def]*, !dbg !3046
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i64 0, i64 0, !dbg !3046
  %rt_int72 = bitcast %union.rtunion_def* %arrayidx71 to i32*, !dbg !3046
  %47 = load i32, i32* %rt_int72, align 8, !dbg !3046
  %call73 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond68, i32 %47), !dbg !3046
  %call74 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond62, i32 %call73), !dbg !3046
  %expr75 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call74, i32 0, i32 0, !dbg !3046
  %vinsn76 = getelementptr inbounds %struct._expr, %struct._expr* %expr75, i32 0, i32 0, !dbg !3046
  %48 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn76, align 8, !dbg !3046
  %id77 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %48, i32 0, i32 1, !dbg !3046
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id77, i32 0, i32 1, !dbg !3046
  %49 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !3046
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !3046
  %bf.load78 = load i32, i32* %50, align 8, !dbg !3046
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !3046
  %cmp80 = icmp eq i32 %bf.clear79, 43, !dbg !3046
  br i1 %cmp80, label %cond.true81, label %cond.false82, !dbg !3046

cond.true81:                                      ; preds = %cond.end67
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6034, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3046
  br label %cond.end83, !dbg !3046

cond.false82:                                     ; preds = %cond.end67, %cond.end45
  br label %cond.end83, !dbg !3046

cond.end83:                                       ; preds = %cond.false82, %cond.true81
  %cond84 = phi i32 [ 0, %cond.true81 ], [ 0, %cond.false82 ], !dbg !3046
  ret void, !dbg !3047
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @fur_orig_expr_not_found(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, i8* %static_params) #0 !dbg !3048 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %static_params.addr = alloca i8*, align 8
  %mutexed = alloca i8, align 1
  %r = alloca %struct._expr*, align 8
  %avi = alloca %struct._list_iterator, align 8
  %sparams = alloca %struct.fur_static_params*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3049, metadata !DIExpression()), !dbg !3050
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %orig_ops.addr, metadata !3051, metadata !DIExpression()), !dbg !3052
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !3053, metadata !DIExpression()), !dbg !3054
  call void @llvm.dbg.declare(metadata i8* %mutexed, metadata !3055, metadata !DIExpression()), !dbg !3056
  call void @llvm.dbg.declare(metadata %struct._expr** %r, metadata !3057, metadata !DIExpression()), !dbg !3058
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %avi, metadata !3059, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.declare(metadata %struct.fur_static_params** %sparams, metadata !3069, metadata !DIExpression()), !dbg !3070
  %0 = load i8*, i8** %static_params.addr, align 8, !dbg !3071
  %1 = bitcast i8* %0 to %struct.fur_static_params*, !dbg !3072
  store %struct.fur_static_params* %1, %struct.fur_static_params** %sparams, align 8, !dbg !3070
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3073
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !3073
  %bf.load = load i32, i32* %3, align 8, !dbg !3073
  %bf.clear = and i32 %bf.load, 65535, !dbg !3073
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !3073
  br i1 %cmp, label %if.then, label %if.else, !dbg !3075

if.then:                                          ; preds = %entry
  %4 = load %struct.fur_static_params*, %struct.fur_static_params** %sparams, align 8, !dbg !3076
  %crosses_call = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %4, i32 0, i32 2, !dbg !3077
  store i8 1, i8* %crosses_call, align 8, !dbg !3078
  br label %if.end5, !dbg !3076

if.else:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3079
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !3079
  %bf.load1 = load i32, i32* %6, align 8, !dbg !3079
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3079
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !3079
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !3081

if.then4:                                         ; preds = %if.else
  store i8 1, i8* %retval, align 1, !dbg !3082
  br label %return, !dbg !3082

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  store i8 1, i8* %mutexed, align 1, !dbg !3083
  call void @_list_iter_start(%struct._list_iterator* %avi, %struct._list_node** %orig_ops.addr, i8 zeroext 0), !dbg !3084
  br label %for.cond, !dbg !3084

for.cond:                                         ; preds = %for.inc, %if.end5
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %avi, i32 0, i32 0, !dbg !3086
  %7 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !3086
  %8 = load %struct._list_node*, %struct._list_node** %7, align 8, !dbg !3086
  %call = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %8, %struct._expr** %r), !dbg !3086
  %tobool = icmp ne i8 %call, 0, !dbg !3084
  br i1 %tobool, label %for.body, label %for.end, !dbg !3084

for.body:                                         ; preds = %for.cond
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3088
  %10 = load %struct._expr*, %struct._expr** %r, align 8, !dbg !3090
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %10, i32 0, i32 0, !dbg !3090
  %11 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !3090
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %11, i32 0, i32 0, !dbg !3090
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !3090
  %call6 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %9, %struct.rtx_def* %12), !dbg !3091
  %tobool7 = icmp ne i8 %call6, 0, !dbg !3091
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !3092

if.then8:                                         ; preds = %for.body
  store i8 0, i8* %mutexed, align 1, !dbg !3093
  br label %for.end, !dbg !3095

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !3096

for.inc:                                          ; preds = %if.end9
  call void @_list_iter_next(%struct._list_iterator* %avi), !dbg !3086
  br label %for.cond, !dbg !3086, !llvm.loop !3097

for.end:                                          ; preds = %if.then8, %for.cond
  %13 = load i8, i8* %mutexed, align 1, !dbg !3099
  %tobool10 = icmp ne i8 %13, 0, !dbg !3099
  br i1 %tobool10, label %if.end69, label %if.then11, !dbg !3101

if.then11:                                        ; preds = %for.end
  %14 = load %struct.fur_static_params*, %struct.fur_static_params** %sparams, align 8, !dbg !3102
  %used_regs = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %14, i32 0, i32 0, !dbg !3102
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !3102
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3102
  %tobool12 = icmp ne %struct.VEC_sel_insn_data_def_heap* %16, null, !dbg !3102
  br i1 %tobool12, label %cond.true, label %cond.false, !dbg !3102

cond.true:                                        ; preds = %if.then11
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3102
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i32 0, i32 0, !dbg !3102
  br label %cond.end, !dbg !3102

cond.false:                                       ; preds = %if.then11
  br label %cond.end, !dbg !3102

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3102
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3102
  %tobool13 = icmp ne %struct.VEC_int_heap* %18, null, !dbg !3102
  br i1 %tobool13, label %cond.true14, label %cond.false16, !dbg !3102

cond.true14:                                      ; preds = %cond.end
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3102
  %base15 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i32 0, i32 0, !dbg !3102
  br label %cond.end17, !dbg !3102

cond.false16:                                     ; preds = %cond.end
  br label %cond.end17, !dbg !3102

cond.end17:                                       ; preds = %cond.false16, %cond.true14
  %cond18 = phi %struct.VEC_int_base* [ %base15, %cond.true14 ], [ null, %cond.false16 ], !dbg !3102
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3102
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !3102
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3102
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3102
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3102
  %21 = load i32, i32* %rt_int, align 8, !dbg !3102
  %call19 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond18, i32 %21), !dbg !3102
  %call20 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call19), !dbg !3102
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call20, i32 0, i32 0, !dbg !3102
  %vinsn21 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 0, !dbg !3102
  %22 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn21, align 8, !dbg !3102
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %22, i32 0, i32 1, !dbg !3102
  %reg_sets = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 3, !dbg !3102
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !3102
  %call22 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %15, %struct.bitmap_head_def* %23), !dbg !3102
  %24 = load %struct.fur_static_params*, %struct.fur_static_params** %sparams, align 8, !dbg !3104
  %used_regs23 = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %24, i32 0, i32 0, !dbg !3104
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs23, align 8, !dbg !3104
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3104
  %tobool24 = icmp ne %struct.VEC_sel_insn_data_def_heap* %26, null, !dbg !3104
  br i1 %tobool24, label %cond.true25, label %cond.false27, !dbg !3104

cond.true25:                                      ; preds = %cond.end17
  %27 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3104
  %base26 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %27, i32 0, i32 0, !dbg !3104
  br label %cond.end28, !dbg !3104

cond.false27:                                     ; preds = %cond.end17
  br label %cond.end28, !dbg !3104

cond.end28:                                       ; preds = %cond.false27, %cond.true25
  %cond29 = phi %struct.VEC_sel_insn_data_def_base* [ %base26, %cond.true25 ], [ null, %cond.false27 ], !dbg !3104
  %28 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3104
  %tobool30 = icmp ne %struct.VEC_int_heap* %28, null, !dbg !3104
  br i1 %tobool30, label %cond.true31, label %cond.false33, !dbg !3104

cond.true31:                                      ; preds = %cond.end28
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3104
  %base32 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %29, i32 0, i32 0, !dbg !3104
  br label %cond.end34, !dbg !3104

cond.false33:                                     ; preds = %cond.end28
  br label %cond.end34, !dbg !3104

cond.end34:                                       ; preds = %cond.false33, %cond.true31
  %cond35 = phi %struct.VEC_int_base* [ %base32, %cond.true31 ], [ null, %cond.false33 ], !dbg !3104
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3104
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !3104
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !3104
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 0, !dbg !3104
  %rt_int39 = bitcast %union.rtunion_def* %arrayidx38 to i32*, !dbg !3104
  %31 = load i32, i32* %rt_int39, align 8, !dbg !3104
  %call40 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond35, i32 %31), !dbg !3104
  %call41 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond29, i32 %call40), !dbg !3104
  %expr42 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call41, i32 0, i32 0, !dbg !3104
  %vinsn43 = getelementptr inbounds %struct._expr, %struct._expr* %expr42, i32 0, i32 0, !dbg !3104
  %32 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn43, align 8, !dbg !3104
  %id44 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %32, i32 0, i32 1, !dbg !3104
  %reg_uses = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id44, i32 0, i32 5, !dbg !3104
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !3104
  %call45 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %25, %struct.bitmap_head_def* %33), !dbg !3104
  %34 = load %struct.fur_static_params*, %struct.fur_static_params** %sparams, align 8, !dbg !3105
  %used_regs46 = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %34, i32 0, i32 0, !dbg !3105
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs46, align 8, !dbg !3105
  %36 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3105
  %tobool47 = icmp ne %struct.VEC_sel_insn_data_def_heap* %36, null, !dbg !3105
  br i1 %tobool47, label %cond.true48, label %cond.false50, !dbg !3105

cond.true48:                                      ; preds = %cond.end34
  %37 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3105
  %base49 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %37, i32 0, i32 0, !dbg !3105
  br label %cond.end51, !dbg !3105

cond.false50:                                     ; preds = %cond.end34
  br label %cond.end51, !dbg !3105

cond.end51:                                       ; preds = %cond.false50, %cond.true48
  %cond52 = phi %struct.VEC_sel_insn_data_def_base* [ %base49, %cond.true48 ], [ null, %cond.false50 ], !dbg !3105
  %38 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3105
  %tobool53 = icmp ne %struct.VEC_int_heap* %38, null, !dbg !3105
  br i1 %tobool53, label %cond.true54, label %cond.false56, !dbg !3105

cond.true54:                                      ; preds = %cond.end51
  %39 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3105
  %base55 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %39, i32 0, i32 0, !dbg !3105
  br label %cond.end57, !dbg !3105

cond.false56:                                     ; preds = %cond.end51
  br label %cond.end57, !dbg !3105

cond.end57:                                       ; preds = %cond.false56, %cond.true54
  %cond58 = phi %struct.VEC_int_base* [ %base55, %cond.true54 ], [ null, %cond.false56 ], !dbg !3105
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3105
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !3105
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !3105
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 0, !dbg !3105
  %rt_int62 = bitcast %union.rtunion_def* %arrayidx61 to i32*, !dbg !3105
  %41 = load i32, i32* %rt_int62, align 8, !dbg !3105
  %call63 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond58, i32 %41), !dbg !3105
  %call64 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond52, i32 %call63), !dbg !3105
  %expr65 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call64, i32 0, i32 0, !dbg !3105
  %vinsn66 = getelementptr inbounds %struct._expr, %struct._expr* %expr65, i32 0, i32 0, !dbg !3105
  %42 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn66, align 8, !dbg !3105
  %id67 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %42, i32 0, i32 1, !dbg !3105
  %reg_clobbers = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id67, i32 0, i32 4, !dbg !3105
  %43 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !3105
  %call68 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %35, %struct.bitmap_head_def* %43), !dbg !3105
  br label %if.end69, !dbg !3106

if.end69:                                         ; preds = %cond.end57, %for.end
  store i8 1, i8* %retval, align 1, !dbg !3107
  br label %return, !dbg !3107

return:                                           ; preds = %if.end69, %if.then4
  %44 = load i8, i8* %retval, align 1, !dbg !3108
  ret i8 %44, !dbg !3108
}

; Function Attrs: noinline nounwind uwtable
define internal void @fur_merge_succs(%struct.rtx_def* %insn, %struct.rtx_def* %succ, i32 %moveop_drv_call_res, %struct.cmpd_local_params* %lparams, i8* %static_params) #0 !dbg !3109 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %succ.addr = alloca %struct.rtx_def*, align 8
  %moveop_drv_call_res.addr = alloca i32, align 4
  %lparams.addr = alloca %struct.cmpd_local_params*, align 8
  %static_params.addr = alloca i8*, align 8
  %succ_live = alloca %struct.bitmap_head_def*, align 8
  %sparams = alloca %struct.fur_static_params*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3110, metadata !DIExpression()), !dbg !3111
  store %struct.rtx_def* %succ, %struct.rtx_def** %succ.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %succ.addr, metadata !3112, metadata !DIExpression()), !dbg !3113
  store i32 %moveop_drv_call_res, i32* %moveop_drv_call_res.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %moveop_drv_call_res.addr, metadata !3114, metadata !DIExpression()), !dbg !3115
  store %struct.cmpd_local_params* %lparams, %struct.cmpd_local_params** %lparams.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params** %lparams.addr, metadata !3116, metadata !DIExpression()), !dbg !3117
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !3118, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %succ_live, metadata !3120, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.declare(metadata %struct.fur_static_params** %sparams, metadata !3122, metadata !DIExpression()), !dbg !3123
  %0 = load i8*, i8** %static_params.addr, align 8, !dbg !3124
  %1 = bitcast i8* %0 to %struct.fur_static_params*, !dbg !3125
  store %struct.fur_static_params* %1, %struct.fur_static_params** %sparams, align 8, !dbg !3123
  %2 = load i32, i32* %moveop_drv_call_res.addr, align 4, !dbg !3126
  %cmp = icmp ne i32 %2, 0, !dbg !3128
  br i1 %cmp, label %if.then, label %if.end, !dbg !3129

if.then:                                          ; preds = %entry
  br label %return, !dbg !3130

if.end:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8, !dbg !3131
  %call = call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %3), !dbg !3132
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %succ_live, align 8, !dbg !3133
  %4 = load %struct.fur_static_params*, %struct.fur_static_params** %sparams, align 8, !dbg !3134
  %used_regs = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %4, i32 0, i32 0, !dbg !3134
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !3134
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %succ_live, align 8, !dbg !3134
  %call1 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %5, %struct.bitmap_head_def* %6), !dbg !3134
  br label %return, !dbg !3135

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3135
}

; Function Attrs: noinline nounwind uwtable
define internal void @fur_at_first_insn(%struct.rtx_def* %insn, %struct.cmpd_local_params* %lparams, i8* %static_params) #0 !dbg !3136 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %lparams.addr = alloca %struct.cmpd_local_params*, align 8
  %static_params.addr = alloca i8*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3137, metadata !DIExpression()), !dbg !3138
  store %struct.cmpd_local_params* %lparams, %struct.cmpd_local_params** %lparams.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params** %lparams.addr, metadata !3139, metadata !DIExpression()), !dbg !3140
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3143
  %call = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %0), !dbg !3143
  %tobool = icmp ne i8 %call, 0, !dbg !3143
  br i1 %tobool, label %lor.lhs.false, label %cond.false, !dbg !3143

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3143
  %call1 = call i32 @get_av_level(%struct.rtx_def* %1), !dbg !3143
  %2 = load i32, i32* @global_level, align 4, !dbg !3143
  %cmp = icmp eq i32 %call1, %2, !dbg !3143
  br i1 %cmp, label %cond.false, label %lor.lhs.false2, !dbg !3143

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3143
  %call3 = call i32 @get_av_level(%struct.rtx_def* %3), !dbg !3143
  %cmp4 = icmp eq i32 %call3, -1, !dbg !3143
  br i1 %cmp4, label %cond.false, label %cond.true, !dbg !3143

cond.true:                                        ; preds = %lor.lhs.false2
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6128, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3143
  br label %cond.end, !dbg !3143

cond.false:                                       ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  br label %cond.end, !dbg !3143

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3143
  ret void, !dbg !3144
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sel_sched_region(i32 %rgn) #0 !dbg !3145 {
entry:
  %rgn.addr = alloca i32, align 4
  %schedule_p = alloca i8, align 1
  %reset_sched_cycles_p = alloca i8, align 1
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store i32 %rgn, i32* %rgn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rgn.addr, metadata !3148, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.declare(metadata i8* %schedule_p, metadata !3150, metadata !DIExpression()), !dbg !3151
  call void @llvm.dbg.declare(metadata i8* %reset_sched_cycles_p, metadata !3152, metadata !DIExpression()), !dbg !3153
  %0 = load i32, i32* %rgn.addr, align 4, !dbg !3154
  %call = call zeroext i8 @sel_region_init(i32 %0), !dbg !3156
  %tobool = icmp ne i8 %call, 0, !dbg !3156
  br i1 %tobool, label %if.then, label %if.end, !dbg !3157

if.then:                                          ; preds = %entry
  br label %return, !dbg !3158

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !3159
  %cmp = icmp sge i32 %1, 1, !dbg !3161
  br i1 %cmp, label %if.then1, label %if.end13, !dbg !3162

if.then1:                                         ; preds = %if.end
  br label %do.body, !dbg !3163

do.body:                                          ; preds = %if.then1
  %2 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !3164
  %tobool2 = icmp ne i8 %2, 0, !dbg !3164
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !3167

if.then3:                                         ; preds = %do.body
  br label %do.body4, !dbg !3164

do.body4:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !3168, metadata !DIExpression()), !dbg !3170
  %3 = load i32, i32* %rgn.addr, align 4, !dbg !3170
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i32 %3), !dbg !3170
  %mul = mul nsw i32 2, %call5, !dbg !3170
  %add = add nsw i32 1, %mul, !dbg !3170
  store i32 %add, i32* %__j, align 4, !dbg !3170
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !3171, metadata !DIExpression()), !dbg !3170
  %4 = load i32, i32* %__j, align 4, !dbg !3170
  %conv = sext i32 %4 to i64, !dbg !3170
  %mul6 = mul i64 1, %conv, !dbg !3170
  %5 = alloca i8, i64 %mul6, align 16, !dbg !3170
  store i8* %5, i8** %__s, align 8, !dbg !3170
  %6 = load i8*, i8** %__s, align 8, !dbg !3170
  %7 = load i32, i32* %__j, align 4, !dbg !3170
  %conv7 = sext i32 %7 to i64, !dbg !3170
  %8 = load i32, i32* %rgn.addr, align 4, !dbg !3170
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 %conv7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i32 %8), !dbg !3170
  %9 = load i8*, i8** %__s, align 8, !dbg !3170
  call void @sel_prepare_string_for_dot_label(i8* %9), !dbg !3170
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3170
  %11 = load i8*, i8** %__s, align 8, !dbg !3170
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %11), !dbg !3170
  br label %do.end, !dbg !3170

do.end:                                           ; preds = %do.body4
  br label %if.end11, !dbg !3170

if.else:                                          ; preds = %do.body
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3164
  %13 = load i32, i32* %rgn.addr, align 4, !dbg !3164
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i32 %13), !dbg !3164
  br label %if.end11

if.end11:                                         ; preds = %if.else, %do.end
  br label %do.end12, !dbg !3167

do.end12:                                         ; preds = %if.end11
  br label %if.end13, !dbg !3167

if.end13:                                         ; preds = %do.end12, %if.end
  %call14 = call zeroext i8 @sched_is_disabled_for_current_region_p(), !dbg !3172
  %tobool15 = icmp ne i8 %call14, 0, !dbg !3172
  br i1 %tobool15, label %land.end, label %land.rhs, !dbg !3173

land.rhs:                                         ; preds = %if.end13
  %call16 = call zeroext i8 @dbg_cnt(i32 32), !dbg !3174
  %conv17 = zext i8 %call16 to i32, !dbg !3174
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !3173
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end13
  %14 = phi i1 [ false, %if.end13 ], [ %tobool18, %land.rhs ], !dbg !3175
  %land.ext = zext i1 %14 to i32, !dbg !3173
  %conv19 = trunc i32 %land.ext to i8, !dbg !3176
  store i8 %conv19, i8* %schedule_p, align 1, !dbg !3177
  %15 = load i8, i8* @pipelining_p, align 1, !dbg !3178
  store i8 %15, i8* %reset_sched_cycles_p, align 1, !dbg !3179
  %16 = load i8, i8* %schedule_p, align 1, !dbg !3180
  %tobool20 = icmp ne i8 %16, 0, !dbg !3180
  br i1 %tobool20, label %if.then21, label %if.else22, !dbg !3182

if.then21:                                        ; preds = %land.end
  call void @sel_sched_region_1(), !dbg !3183
  br label %if.end23, !dbg !3183

if.else22:                                        ; preds = %land.end
  store i8 1, i8* %reset_sched_cycles_p, align 1, !dbg !3184
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then21
  %17 = load i8, i8* %reset_sched_cycles_p, align 1, !dbg !3185
  call void @sel_region_finish(i8 zeroext %17), !dbg !3186
  br label %return, !dbg !3187

return:                                           ; preds = %if.end23, %if.then
  ret void, !dbg !3187
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sel_region_init(i32 %rgn) #0 !dbg !3188 {
entry:
  %retval = alloca i8, align 1
  %rgn.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %bbs = alloca %struct.VEC_basic_block_heap*, align 8
  %header = alloca i32, align 4
  store i32 %rgn, i32* %rgn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rgn.addr, metadata !3191, metadata !DIExpression()), !dbg !3192
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3193, metadata !DIExpression()), !dbg !3194
  call void @llvm.dbg.declare(metadata %struct.VEC_basic_block_heap** %bbs, metadata !3195, metadata !DIExpression()), !dbg !3197
  %0 = load i32, i32* %rgn.addr, align 4, !dbg !3198
  call void @rgn_setup_region(i32 %0), !dbg !3199
  %call = call zeroext i8 @current_region_empty_p(), !dbg !3200
  %tobool = icmp ne i8 %call, 0, !dbg !3200
  br i1 %tobool, label %if.then, label %if.end, !dbg !3202

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !3203
  br label %return, !dbg !3203

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @flag_sel_sched_pipelining, align 4, !dbg !3204
  %tobool1 = icmp ne i32 %1, 0, !dbg !3204
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !3206

if.then2:                                         ; preds = %if.end
  %2 = load i32, i32* %rgn.addr, align 4, !dbg !3207
  call void @setup_current_loop_nest(i32 %2), !dbg !3208
  br label %if.end3, !dbg !3208

if.end3:                                          ; preds = %if.then2, %if.end
  call void @sel_setup_region_sched_flags(), !dbg !3209
  %3 = load i32, i32* @current_nr_blocks, align 4, !dbg !3210
  %call4 = call %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %3), !dbg !3210
  store %struct.VEC_basic_block_heap* %call4, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !3211
  store i32 0, i32* %i, align 4, !dbg !3212
  br label %for.cond, !dbg !3214

for.cond:                                         ; preds = %for.inc, %if.end3
  %4 = load i32, i32* %i, align 4, !dbg !3215
  %5 = load i32, i32* @current_nr_blocks, align 4, !dbg !3217
  %cmp = icmp slt i32 %4, %5, !dbg !3218
  br i1 %cmp, label %for.body, label %for.end, !dbg !3219

for.body:                                         ; preds = %for.cond
  %6 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !3220
  %tobool5 = icmp ne %struct.VEC_basic_block_heap* %6, null, !dbg !3220
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !3220

cond.true:                                        ; preds = %for.body
  %7 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !3220
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %7, i32 0, i32 0, !dbg !3220
  br label %cond.end, !dbg !3220

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !3220

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3220
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3220
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, !dbg !3220
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3220
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3220
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i32 0, i32 2, !dbg !3220
  %10 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3220
  %tobool6 = icmp ne %struct.VEC_basic_block_gc* %10, null, !dbg !3220
  br i1 %tobool6, label %cond.true7, label %cond.false12, !dbg !3220

cond.true7:                                       ; preds = %cond.end
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3220
  %add.ptr8 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, !dbg !3220
  %cfg9 = getelementptr inbounds %struct.function, %struct.function* %add.ptr8, i32 0, i32 1, !dbg !3220
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9, align 8, !dbg !3220
  %x_basic_block_info10 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i32 0, i32 2, !dbg !3220
  %13 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info10, align 8, !dbg !3220
  %base11 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %13, i32 0, i32 0, !dbg !3220
  br label %cond.end13, !dbg !3220

cond.false12:                                     ; preds = %cond.end
  br label %cond.end13, !dbg !3220

cond.end13:                                       ; preds = %cond.false12, %cond.true7
  %cond14 = phi %struct.VEC_basic_block_base* [ %base11, %cond.true7 ], [ null, %cond.false12 ], !dbg !3220
  %14 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3220
  %15 = load i32*, i32** @ebb_head, align 8, !dbg !3220
  %16 = load i32, i32* %i, align 4, !dbg !3220
  %idxprom = sext i32 %16 to i64, !dbg !3220
  %arrayidx = getelementptr inbounds i32, i32* %15, i64 %idxprom, !dbg !3220
  %17 = load i32, i32* %arrayidx, align 4, !dbg !3220
  %idxprom15 = sext i32 %17 to i64, !dbg !3220
  %arrayidx16 = getelementptr inbounds i32, i32* %14, i64 %idxprom15, !dbg !3220
  %18 = load i32, i32* %arrayidx16, align 4, !dbg !3220
  %call17 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond14, i32 %18), !dbg !3220
  %call18 = call %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %cond, %struct.basic_block_def* %call17), !dbg !3220
  br label %for.inc, !dbg !3220

for.inc:                                          ; preds = %cond.end13
  %19 = load i32, i32* %i, align 4, !dbg !3221
  %inc = add nsw i32 %19, 1, !dbg !3221
  store i32 %inc, i32* %i, align 4, !dbg !3221
  br label %for.cond, !dbg !3222, !llvm.loop !3223

for.end:                                          ; preds = %for.cond
  %20 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !3225
  call void @sel_init_bbs(%struct.VEC_basic_block_heap* %20, %struct.basic_block_def* null), !dbg !3226
  %21 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !3227
  call void @sched_init_luids(%struct.VEC_basic_block_heap* %21, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null), !dbg !3228
  call void @sched_deps_init(i8 zeroext 0), !dbg !3229
  call void @rgn_setup_sched_infos(), !dbg !3230
  call void @sel_set_sched_flags(), !dbg !3231
  %22 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !3232
  call void @haifa_init_h_i_d(%struct.VEC_basic_block_heap* %22, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null), !dbg !3233
  %23 = load i32, i32* %rgn.addr, align 4, !dbg !3234
  call void @sel_compute_priorities(i32 %23), !dbg !3235
  call void @init_deps_global(), !dbg !3236
  call void @sel_setup_sched_infos(), !dbg !3237
  %24 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !3238
  call void @sel_init_global_and_expr(%struct.VEC_basic_block_heap* %24), !dbg !3239
  call void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %bbs), !dbg !3240
  %call19 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !3241
  store %struct.bitmap_head_def* %call19, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3242
  %25 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !3243
  %tobool20 = icmp ne %struct.loop* %25, null, !dbg !3243
  br i1 %tobool20, label %if.then21, label %if.end63, !dbg !3245

if.then21:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %header, metadata !3246, metadata !DIExpression()), !dbg !3248
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3249
  %add.ptr22 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, !dbg !3249
  %cfg23 = getelementptr inbounds %struct.function, %struct.function* %add.ptr22, i32 0, i32 1, !dbg !3249
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg23, align 8, !dbg !3249
  %x_basic_block_info24 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i32 0, i32 2, !dbg !3249
  %28 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info24, align 8, !dbg !3249
  %tobool25 = icmp ne %struct.VEC_basic_block_gc* %28, null, !dbg !3249
  br i1 %tobool25, label %cond.true26, label %cond.false31, !dbg !3249

cond.true26:                                      ; preds = %if.then21
  %29 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3249
  %add.ptr27 = getelementptr inbounds %struct.function, %struct.function* %29, i64 0, !dbg !3249
  %cfg28 = getelementptr inbounds %struct.function, %struct.function* %add.ptr27, i32 0, i32 1, !dbg !3249
  %30 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg28, align 8, !dbg !3249
  %x_basic_block_info29 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %30, i32 0, i32 2, !dbg !3249
  %31 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info29, align 8, !dbg !3249
  %base30 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %31, i32 0, i32 0, !dbg !3249
  br label %cond.end32, !dbg !3249

cond.false31:                                     ; preds = %if.then21
  br label %cond.end32, !dbg !3249

cond.end32:                                       ; preds = %cond.false31, %cond.true26
  %cond33 = phi %struct.VEC_basic_block_base* [ %base30, %cond.true26 ], [ null, %cond.false31 ], !dbg !3249
  %32 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3249
  %33 = load i32*, i32** @ebb_head, align 8, !dbg !3249
  %arrayidx34 = getelementptr inbounds i32, i32* %33, i64 0, !dbg !3249
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !3249
  %idxprom35 = sext i32 %34 to i64, !dbg !3249
  %arrayidx36 = getelementptr inbounds i32, i32* %32, i64 %idxprom35, !dbg !3249
  %35 = load i32, i32* %arrayidx36, align 4, !dbg !3249
  %call37 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond33, i32 %35), !dbg !3249
  %call38 = call zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def* %call37), !dbg !3250
  %conv = zext i8 %call38 to i32, !dbg !3250
  %tobool39 = icmp ne i32 %conv, 0, !dbg !3250
  %36 = zext i1 %tobool39 to i64, !dbg !3250
  %cond40 = select i1 %tobool39, i32 1, i32 0, !dbg !3250
  store i32 %cond40, i32* %header, align 4, !dbg !3248
  %37 = load i32, i32* @current_nr_blocks, align 4, !dbg !3251
  %38 = load i32, i32* %header, align 4, !dbg !3253
  %add = add nsw i32 %38, 1, !dbg !3254
  %cmp41 = icmp eq i32 %37, %add, !dbg !3255
  br i1 %cmp41, label %if.then43, label %if.end62, !dbg !3256

if.then43:                                        ; preds = %cond.end32
  %39 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3257
  %add.ptr44 = getelementptr inbounds %struct.function, %struct.function* %39, i64 0, !dbg !3257
  %cfg45 = getelementptr inbounds %struct.function, %struct.function* %add.ptr44, i32 0, i32 1, !dbg !3257
  %40 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg45, align 8, !dbg !3257
  %x_basic_block_info46 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %40, i32 0, i32 2, !dbg !3257
  %41 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info46, align 8, !dbg !3257
  %tobool47 = icmp ne %struct.VEC_basic_block_gc* %41, null, !dbg !3257
  br i1 %tobool47, label %cond.true48, label %cond.false53, !dbg !3257

cond.true48:                                      ; preds = %if.then43
  %42 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3257
  %add.ptr49 = getelementptr inbounds %struct.function, %struct.function* %42, i64 0, !dbg !3257
  %cfg50 = getelementptr inbounds %struct.function, %struct.function* %add.ptr49, i32 0, i32 1, !dbg !3257
  %43 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg50, align 8, !dbg !3257
  %x_basic_block_info51 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %43, i32 0, i32 2, !dbg !3257
  %44 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info51, align 8, !dbg !3257
  %base52 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %44, i32 0, i32 0, !dbg !3257
  br label %cond.end54, !dbg !3257

cond.false53:                                     ; preds = %if.then43
  br label %cond.end54, !dbg !3257

cond.end54:                                       ; preds = %cond.false53, %cond.true48
  %cond55 = phi %struct.VEC_basic_block_base* [ %base52, %cond.true48 ], [ null, %cond.false53 ], !dbg !3257
  %45 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3257
  %46 = load i32*, i32** @ebb_head, align 8, !dbg !3257
  %47 = load i32, i32* %header, align 4, !dbg !3257
  %idxprom56 = sext i32 %47 to i64, !dbg !3257
  %arrayidx57 = getelementptr inbounds i32, i32* %46, i64 %idxprom56, !dbg !3257
  %48 = load i32, i32* %arrayidx57, align 4, !dbg !3257
  %idxprom58 = sext i32 %48 to i64, !dbg !3257
  %arrayidx59 = getelementptr inbounds i32, i32* %45, i64 %idxprom58, !dbg !3257
  %49 = load i32, i32* %arrayidx59, align 4, !dbg !3257
  %call60 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond55, i32 %49), !dbg !3257
  %call61 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %call60), !dbg !3258
  call void @update_liveness_on_insn(%struct.rtx_def* %call61), !dbg !3259
  br label %if.end62, !dbg !3259

if.end62:                                         ; preds = %cond.end54, %cond.end32
  br label %if.end63, !dbg !3260

if.end63:                                         ; preds = %if.end62, %for.end
  call void @sel_register_cfg_hooks(), !dbg !3261
  %50 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 4), align 8, !dbg !3262
  %tobool64 = icmp ne void (%struct._IO_FILE*, i32, i32)* %50, null, !dbg !3264
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !3265

if.then65:                                        ; preds = %if.end63
  %51 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 4), align 8, !dbg !3266
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !3267
  %53 = load i32, i32* @sched_verbose, align 4, !dbg !3268
  call void %51(%struct._IO_FILE* %52, i32 %53, i32 -1), !dbg !3269
  br label %if.end66, !dbg !3269

if.end66:                                         ; preds = %if.then65, %if.end63
  %call67 = call i32 @get_max_uid(), !dbg !3270
  %add68 = add nsw i32 %call67, 1, !dbg !3271
  store i32 %add68, i32* @first_emitted_uid, align 4, !dbg !3272
  store i8 0, i8* @preheader_removed, align 1, !dbg !3273
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([53 x i32]* @reg_rename_tick to i8*), i8 0, i64 212, i1 false), !dbg !3274
  store i32 0, i32* @reg_rename_this_tick, align 4, !dbg !3275
  %54 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !3276
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %54, %struct.bitmap_obstack* null), !dbg !3276
  %55 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !3277
  call void @bitmap_clear(%struct.bitmap_head_def* %55), !dbg !3278
  call void @setup_nop_vinsn(), !dbg !3279
  %call69 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !3280
  store %struct.bitmap_head_def* %call69, %struct.bitmap_head_def** @current_copies, align 8, !dbg !3281
  %call70 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !3282
  store %struct.bitmap_head_def* %call70, %struct.bitmap_head_def** @current_originators, align 8, !dbg !3283
  %call71 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !3284
  store %struct.bitmap_head_def* %call71, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !3285
  store i8 0, i8* %retval, align 1, !dbg !3286
  br label %return, !dbg !3286

return:                                           ; preds = %if.end66, %if.then
  %56 = load i8, i8* %retval, align 1, !dbg !3287
  ret i8 %56, !dbg !3287
}

declare dso_local zeroext i8 @sched_is_disabled_for_current_region_p() #2

declare dso_local zeroext i8 @dbg_cnt(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sel_sched_region_1() #0 !dbg !3288 {
entry:
  %number_of_insns = alloca i32, align 4
  %orig_max_seqno = alloca i32, align 4
  %i = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %_new_fences = alloca %struct.flist_tail_def, align 8
  %new_fences = alloca %struct.flist_tail_def*, align 8
  %do_p = alloca i8, align 1
  %bb44 = alloca %struct.basic_block_def*, align 8
  call void @llvm.dbg.declare(metadata i32* %number_of_insns, metadata !3291, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.declare(metadata i32* %orig_max_seqno, metadata !3293, metadata !DIExpression()), !dbg !3294
  %0 = load i32, i32* @sched_max_luid, align 4, !dbg !3295
  %sub = sub nsw i32 %0, 1, !dbg !3296
  store i32 %sub, i32* %number_of_insns, align 4, !dbg !3297
  call void @purge_empty_blocks(), !dbg !3298
  %1 = load i32, i32* %number_of_insns, align 4, !dbg !3299
  %call = call i32 @init_seqno(i32 %1, %struct.bitmap_head_def* null, %struct.basic_block_def* null), !dbg !3300
  store i32 %call, i32* %orig_max_seqno, align 4, !dbg !3301
  %2 = load i32, i32* %orig_max_seqno, align 4, !dbg !3302
  %cmp = icmp sge i32 %2, 1, !dbg !3302
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !3302

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7444, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3302
  br label %cond.end, !dbg !3302

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3302

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3302
  store %struct._list_node* null, %struct._list_node** @fences, align 8, !dbg !3303
  %3 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !3304
  %tobool = icmp ne %struct.loop* %3, null, !dbg !3304
  br i1 %tobool, label %if.then, label %if.else, !dbg !3306

if.then:                                          ; preds = %cond.end
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3307
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !3307
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3307
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3307
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 2, !dbg !3307
  %6 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3307
  %tobool1 = icmp ne %struct.VEC_basic_block_gc* %6, null, !dbg !3307
  br i1 %tobool1, label %cond.true2, label %cond.false6, !dbg !3307

cond.true2:                                       ; preds = %if.then
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3307
  %add.ptr3 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, !dbg !3307
  %cfg4 = getelementptr inbounds %struct.function, %struct.function* %add.ptr3, i32 0, i32 1, !dbg !3307
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4, align 8, !dbg !3307
  %x_basic_block_info5 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i32 0, i32 2, !dbg !3307
  %9 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info5, align 8, !dbg !3307
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %9, i32 0, i32 0, !dbg !3307
  br label %cond.end7, !dbg !3307

cond.false6:                                      ; preds = %if.then
  br label %cond.end7, !dbg !3307

cond.end7:                                        ; preds = %cond.false6, %cond.true2
  %cond8 = phi %struct.VEC_basic_block_base* [ %base, %cond.true2 ], [ null, %cond.false6 ], !dbg !3307
  %10 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3307
  %11 = load i32*, i32** @ebb_head, align 8, !dbg !3307
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 0, !dbg !3307
  %12 = load i32, i32* %arrayidx, align 4, !dbg !3307
  %idxprom = sext i32 %12 to i64, !dbg !3307
  %arrayidx9 = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !3307
  %13 = load i32, i32* %arrayidx9, align 4, !dbg !3307
  %call10 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond8, i32 %13), !dbg !3307
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call10, i32 0, i32 7, !dbg !3307
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3307
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3307
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i32 0, i32 1, !dbg !3307
  %15 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3307
  call void @init_fences(%struct.rtx_def* %15), !dbg !3308
  br label %if.end, !dbg !3308

if.else:                                          ; preds = %cond.end
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3309
  %add.ptr11 = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, !dbg !3309
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %add.ptr11, i32 0, i32 1, !dbg !3309
  %17 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !3309
  %x_basic_block_info13 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i32 0, i32 2, !dbg !3309
  %18 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info13, align 8, !dbg !3309
  %tobool14 = icmp ne %struct.VEC_basic_block_gc* %18, null, !dbg !3309
  br i1 %tobool14, label %cond.true15, label %cond.false20, !dbg !3309

cond.true15:                                      ; preds = %if.else
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3309
  %add.ptr16 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, !dbg !3309
  %cfg17 = getelementptr inbounds %struct.function, %struct.function* %add.ptr16, i32 0, i32 1, !dbg !3309
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17, align 8, !dbg !3309
  %x_basic_block_info18 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i32 0, i32 2, !dbg !3309
  %21 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info18, align 8, !dbg !3309
  %base19 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %21, i32 0, i32 0, !dbg !3309
  br label %cond.end21, !dbg !3309

cond.false20:                                     ; preds = %if.else
  br label %cond.end21, !dbg !3309

cond.end21:                                       ; preds = %cond.false20, %cond.true15
  %cond22 = phi %struct.VEC_basic_block_base* [ %base19, %cond.true15 ], [ null, %cond.false20 ], !dbg !3309
  %22 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3309
  %23 = load i32*, i32** @ebb_head, align 8, !dbg !3309
  %arrayidx23 = getelementptr inbounds i32, i32* %23, i64 0, !dbg !3309
  %24 = load i32, i32* %arrayidx23, align 4, !dbg !3309
  %idxprom24 = sext i32 %24 to i64, !dbg !3309
  %arrayidx25 = getelementptr inbounds i32, i32* %22, i64 %idxprom24, !dbg !3309
  %25 = load i32, i32* %arrayidx25, align 4, !dbg !3309
  %call26 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond22, i32 %25), !dbg !3309
  %call27 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %call26), !dbg !3310
  call void @init_fences(%struct.rtx_def* %call27), !dbg !3311
  br label %if.end

if.end:                                           ; preds = %cond.end21, %cond.end7
  store i32 1, i32* @global_level, align 4, !dbg !3312
  %26 = load i32, i32* %orig_max_seqno, align 4, !dbg !3313
  call void @sel_sched_region_2(i32 %26), !dbg !3314
  %27 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !3315
  %cmp28 = icmp eq %struct._list_node* %27, null, !dbg !3315
  br i1 %cmp28, label %cond.false30, label %cond.true29, !dbg !3315

cond.true29:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7457, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3315
  br label %cond.end31, !dbg !3315

cond.false30:                                     ; preds = %if.end
  br label %cond.end31, !dbg !3315

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond32 = phi i32 [ 0, %cond.true29 ], [ 0, %cond.false30 ], !dbg !3315
  %28 = load i8, i8* @pipelining_p, align 1, !dbg !3316
  %tobool33 = icmp ne i8 %28, 0, !dbg !3316
  br i1 %tobool33, label %if.then34, label %if.end185, !dbg !3318

if.then34:                                        ; preds = %cond.end31
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3319, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3322, metadata !DIExpression()), !dbg !3323
  call void @llvm.dbg.declare(metadata %struct.flist_tail_def* %_new_fences, metadata !3324, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.declare(metadata %struct.flist_tail_def** %new_fences, metadata !3331, metadata !DIExpression()), !dbg !3334
  store %struct.flist_tail_def* %_new_fences, %struct.flist_tail_def** %new_fences, align 8, !dbg !3334
  call void @llvm.dbg.declare(metadata i8* %do_p, metadata !3335, metadata !DIExpression()), !dbg !3336
  store i8 1, i8* %do_p, align 1, !dbg !3336
  store i8 0, i8* @pipelining_p, align 1, !dbg !3337
  %29 = load i32, i32* @max_ws, align 4, !dbg !3338
  %30 = load i32, i32* @issue_rate, align 4, !dbg !3338
  %mul = mul nsw i32 %30, 3, !dbg !3338
  %div = sdiv i32 %mul, 2, !dbg !3338
  %cmp35 = icmp slt i32 %29, %div, !dbg !3338
  br i1 %cmp35, label %cond.true36, label %cond.false37, !dbg !3338

cond.true36:                                      ; preds = %if.then34
  %31 = load i32, i32* @max_ws, align 4, !dbg !3338
  br label %cond.end40, !dbg !3338

cond.false37:                                     ; preds = %if.then34
  %32 = load i32, i32* @issue_rate, align 4, !dbg !3338
  %mul38 = mul nsw i32 %32, 3, !dbg !3338
  %div39 = sdiv i32 %mul38, 2, !dbg !3338
  br label %cond.end40, !dbg !3338

cond.end40:                                       ; preds = %cond.false37, %cond.true36
  %cond41 = phi i32 [ %31, %cond.true36 ], [ %div39, %cond.false37 ], !dbg !3338
  store i32 %cond41, i32* @max_ws, align 4, !dbg !3339
  store i8 0, i8* @bookkeeping_p, align 1, !dbg !3340
  store i8 0, i8* @enable_schedule_as_rhs_p, align 1, !dbg !3341
  store i8 1, i8* %do_p, align 1, !dbg !3342
  br label %while.cond, !dbg !3343

while.cond:                                       ; preds = %for.end184, %cond.end40
  %33 = load i8, i8* %do_p, align 1, !dbg !3344
  %tobool42 = icmp ne i8 %33, 0, !dbg !3343
  br i1 %tobool42, label %while.body, label %while.end, !dbg !3343

while.body:                                       ; preds = %while.cond
  store i8 0, i8* %do_p, align 1, !dbg !3345
  store i32 0, i32* %i, align 4, !dbg !3347
  br label %for.cond, !dbg !3349

for.cond:                                         ; preds = %for.inc, %while.body
  %34 = load i32, i32* %i, align 4, !dbg !3350
  %35 = load i32, i32* @current_nr_blocks, align 4, !dbg !3352
  %cmp43 = icmp slt i32 %34, %35, !dbg !3353
  br i1 %cmp43, label %for.body, label %for.end, !dbg !3354

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb44, metadata !3355, metadata !DIExpression()), !dbg !3357
  %36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3358
  %add.ptr45 = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, !dbg !3358
  %cfg46 = getelementptr inbounds %struct.function, %struct.function* %add.ptr45, i32 0, i32 1, !dbg !3358
  %37 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg46, align 8, !dbg !3358
  %x_basic_block_info47 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %37, i32 0, i32 2, !dbg !3358
  %38 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info47, align 8, !dbg !3358
  %tobool48 = icmp ne %struct.VEC_basic_block_gc* %38, null, !dbg !3358
  br i1 %tobool48, label %cond.true49, label %cond.false54, !dbg !3358

cond.true49:                                      ; preds = %for.body
  %39 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3358
  %add.ptr50 = getelementptr inbounds %struct.function, %struct.function* %39, i64 0, !dbg !3358
  %cfg51 = getelementptr inbounds %struct.function, %struct.function* %add.ptr50, i32 0, i32 1, !dbg !3358
  %40 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg51, align 8, !dbg !3358
  %x_basic_block_info52 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %40, i32 0, i32 2, !dbg !3358
  %41 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info52, align 8, !dbg !3358
  %base53 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %41, i32 0, i32 0, !dbg !3358
  br label %cond.end55, !dbg !3358

cond.false54:                                     ; preds = %for.body
  br label %cond.end55, !dbg !3358

cond.end55:                                       ; preds = %cond.false54, %cond.true49
  %cond56 = phi %struct.VEC_basic_block_base* [ %base53, %cond.true49 ], [ null, %cond.false54 ], !dbg !3358
  %42 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3358
  %43 = load i32*, i32** @ebb_head, align 8, !dbg !3358
  %44 = load i32, i32* %i, align 4, !dbg !3358
  %idxprom57 = sext i32 %44 to i64, !dbg !3358
  %arrayidx58 = getelementptr inbounds i32, i32* %43, i64 %idxprom57, !dbg !3358
  %45 = load i32, i32* %arrayidx58, align 4, !dbg !3358
  %idxprom59 = sext i32 %45 to i64, !dbg !3358
  %arrayidx60 = getelementptr inbounds i32, i32* %42, i64 %idxprom59, !dbg !3358
  %46 = load i32, i32* %arrayidx60, align 4, !dbg !3358
  %call61 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond56, i32 %46), !dbg !3358
  store %struct.basic_block_def* %call61, %struct.basic_block_def** %bb44, align 8, !dbg !3357
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3359
  %call62 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %47), !dbg !3361
  %tobool63 = icmp ne i8 %call62, 0, !dbg !3361
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !3362

if.then64:                                        ; preds = %cond.end55
  %48 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3363
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3365
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i32 0, i32 9, !dbg !3366
  %50 = load i32, i32* %index, align 8, !dbg !3366
  %call65 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %48, i32 %50), !dbg !3367
  br label %for.inc, !dbg !3368

if.end66:                                         ; preds = %cond.end55
  %51 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3369
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3371
  %index67 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %52, i32 0, i32 9, !dbg !3372
  %53 = load i32, i32* %index67, align 8, !dbg !3372
  %call68 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %51, i32 %53), !dbg !3373
  %tobool69 = icmp ne i32 %call68, 0, !dbg !3373
  br i1 %tobool69, label %if.then70, label %if.else116, !dbg !3374

if.then70:                                        ; preds = %if.end66
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3375
  call void @clear_outdated_rtx_info(%struct.basic_block_def* %54), !dbg !3377
  %55 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3378
  %il71 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %55, i32 0, i32 7, !dbg !3378
  %rtl72 = bitcast %union.basic_block_il_dependent* %il71 to %struct.rtl_bb_info**, !dbg !3378
  %56 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl72, align 8, !dbg !3378
  %end_73 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %56, i32 0, i32 1, !dbg !3378
  %57 = load %struct.rtx_def*, %struct.rtx_def** %end_73, align 8, !dbg !3378
  %call74 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %57), !dbg !3380
  %conv = zext i8 %call74 to i32, !dbg !3380
  %tobool75 = icmp ne i32 %conv, 0, !dbg !3380
  br i1 %tobool75, label %land.lhs.true, label %if.end115, !dbg !3381

land.lhs.true:                                    ; preds = %if.then70
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3382
  %il76 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %58, i32 0, i32 7, !dbg !3382
  %rtl77 = bitcast %union.basic_block_il_dependent* %il76 to %struct.rtl_bb_info**, !dbg !3382
  %59 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl77, align 8, !dbg !3382
  %end_78 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %59, i32 0, i32 1, !dbg !3382
  %60 = load %struct.rtx_def*, %struct.rtx_def** %end_78, align 8, !dbg !3382
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !3382
  %bf.load = load i32, i32* %61, align 8, !dbg !3382
  %bf.clear = and i32 %bf.load, 65535, !dbg !3382
  %cmp79 = icmp eq i32 %bf.clear, 9, !dbg !3382
  br i1 %cmp79, label %if.then81, label %if.end115, !dbg !3383

if.then81:                                        ; preds = %land.lhs.true
  %62 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3384
  %63 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3385
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %63, i32 0, i32 1, !dbg !3385
  %64 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3385
  %tobool82 = icmp ne %struct.VEC_edge_gc* %64, null, !dbg !3385
  br i1 %tobool82, label %cond.true83, label %cond.false86, !dbg !3385

cond.true83:                                      ; preds = %if.then81
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3385
  %succs84 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %65, i32 0, i32 1, !dbg !3385
  %66 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs84, align 8, !dbg !3385
  %base85 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %66, i32 0, i32 0, !dbg !3385
  br label %cond.end87, !dbg !3385

cond.false86:                                     ; preds = %if.then81
  br label %cond.end87, !dbg !3385

cond.end87:                                       ; preds = %cond.false86, %cond.true83
  %cond88 = phi %struct.VEC_edge_base* [ %base85, %cond.true83 ], [ null, %cond.false86 ], !dbg !3385
  %call89 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond88, i32 0), !dbg !3385
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call89, i32 0, i32 7, !dbg !3385
  %67 = load i32, i32* %flags, align 8, !dbg !3385
  %and = and i32 %67, 1, !dbg !3385
  %tobool90 = icmp ne i32 %and, 0, !dbg !3385
  br i1 %tobool90, label %cond.true91, label %cond.false101, !dbg !3385

cond.true91:                                      ; preds = %cond.end87
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3385
  %succs92 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %68, i32 0, i32 1, !dbg !3385
  %69 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs92, align 8, !dbg !3385
  %tobool93 = icmp ne %struct.VEC_edge_gc* %69, null, !dbg !3385
  br i1 %tobool93, label %cond.true94, label %cond.false97, !dbg !3385

cond.true94:                                      ; preds = %cond.true91
  %70 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3385
  %succs95 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %70, i32 0, i32 1, !dbg !3385
  %71 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs95, align 8, !dbg !3385
  %base96 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %71, i32 0, i32 0, !dbg !3385
  br label %cond.end98, !dbg !3385

cond.false97:                                     ; preds = %cond.true91
  br label %cond.end98, !dbg !3385

cond.end98:                                       ; preds = %cond.false97, %cond.true94
  %cond99 = phi %struct.VEC_edge_base* [ %base96, %cond.true94 ], [ null, %cond.false97 ], !dbg !3385
  %call100 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond99, i32 1), !dbg !3385
  br label %cond.end111, !dbg !3385

cond.false101:                                    ; preds = %cond.end87
  %72 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3385
  %succs102 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %72, i32 0, i32 1, !dbg !3385
  %73 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs102, align 8, !dbg !3385
  %tobool103 = icmp ne %struct.VEC_edge_gc* %73, null, !dbg !3385
  br i1 %tobool103, label %cond.true104, label %cond.false107, !dbg !3385

cond.true104:                                     ; preds = %cond.false101
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3385
  %succs105 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %74, i32 0, i32 1, !dbg !3385
  %75 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs105, align 8, !dbg !3385
  %base106 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %75, i32 0, i32 0, !dbg !3385
  br label %cond.end108, !dbg !3385

cond.false107:                                    ; preds = %cond.false101
  br label %cond.end108, !dbg !3385

cond.end108:                                      ; preds = %cond.false107, %cond.true104
  %cond109 = phi %struct.VEC_edge_base* [ %base106, %cond.true104 ], [ null, %cond.false107 ], !dbg !3385
  %call110 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond109, i32 0), !dbg !3385
  br label %cond.end111, !dbg !3385

cond.end111:                                      ; preds = %cond.end108, %cond.end98
  %cond112 = phi %struct.edge_def* [ %call100, %cond.end98 ], [ %call110, %cond.end108 ], !dbg !3385
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond112, i32 0, i32 1, !dbg !3386
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3386
  %index113 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %76, i32 0, i32 9, !dbg !3387
  %77 = load i32, i32* %index113, align 8, !dbg !3387
  %call114 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %62, i32 %77), !dbg !3388
  br label %if.end115, !dbg !3388

if.end115:                                        ; preds = %cond.end111, %land.lhs.true, %if.then70
  br label %if.end139, !dbg !3389

if.else116:                                       ; preds = %if.end66
  %78 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3390
  %tobool117 = icmp ne %struct.VEC_sel_insn_data_def_heap* %78, null, !dbg !3390
  br i1 %tobool117, label %cond.true118, label %cond.false120, !dbg !3390

cond.true118:                                     ; preds = %if.else116
  %79 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3390
  %base119 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %79, i32 0, i32 0, !dbg !3390
  br label %cond.end121, !dbg !3390

cond.false120:                                    ; preds = %if.else116
  br label %cond.end121, !dbg !3390

cond.end121:                                      ; preds = %cond.false120, %cond.true118
  %cond122 = phi %struct.VEC_sel_insn_data_def_base* [ %base119, %cond.true118 ], [ null, %cond.false120 ], !dbg !3390
  %80 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3390
  %tobool123 = icmp ne %struct.VEC_int_heap* %80, null, !dbg !3390
  br i1 %tobool123, label %cond.true124, label %cond.false126, !dbg !3390

cond.true124:                                     ; preds = %cond.end121
  %81 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3390
  %base125 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %81, i32 0, i32 0, !dbg !3390
  br label %cond.end127, !dbg !3390

cond.false126:                                    ; preds = %cond.end121
  br label %cond.end127, !dbg !3390

cond.end127:                                      ; preds = %cond.false126, %cond.true124
  %cond128 = phi %struct.VEC_int_base* [ %base125, %cond.true124 ], [ null, %cond.false126 ], !dbg !3390
  %82 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3390
  %call129 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %82), !dbg !3390
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call129, i32 0, i32 1, !dbg !3390
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3390
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3390
  %rt_int = bitcast %union.rtunion_def* %arrayidx130 to i32*, !dbg !3390
  %83 = load i32, i32* %rt_int, align 8, !dbg !3390
  %call131 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond128, i32 %83), !dbg !3390
  %call132 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond122, i32 %call131), !dbg !3390
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call132, i32 0, i32 0, !dbg !3390
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 5, !dbg !3390
  %84 = load i32, i32* %sched_times, align 8, !dbg !3390
  %cmp133 = icmp sle i32 %84, 0, !dbg !3392
  br i1 %cmp133, label %if.then135, label %if.end138, !dbg !3393

if.then135:                                       ; preds = %cond.end127
  %85 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3394
  %86 = load %struct.basic_block_def*, %struct.basic_block_def** %bb44, align 8, !dbg !3395
  %index136 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %86, i32 0, i32 9, !dbg !3396
  %87 = load i32, i32* %index136, align 8, !dbg !3396
  %call137 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %85, i32 %87), !dbg !3397
  br label %if.end138, !dbg !3397

if.end138:                                        ; preds = %if.then135, %cond.end127
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.end115
  br label %for.inc, !dbg !3398

for.inc:                                          ; preds = %if.end139, %if.then64
  %88 = load i32, i32* %i, align 4, !dbg !3399
  %inc = add nsw i32 %88, 1, !dbg !3399
  store i32 %inc, i32* %i, align 4, !dbg !3399
  br label %for.cond, !dbg !3400, !llvm.loop !3401

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3403
  br label %for.cond140, !dbg !3405

for.cond140:                                      ; preds = %for.inc182, %for.end
  %89 = load i32, i32* %i, align 4, !dbg !3406
  %90 = load i32, i32* @current_nr_blocks, align 4, !dbg !3408
  %cmp141 = icmp slt i32 %89, %90, !dbg !3409
  br i1 %cmp141, label %for.body143, label %for.end184, !dbg !3410

for.body143:                                      ; preds = %for.cond140
  %91 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3411
  %add.ptr144 = getelementptr inbounds %struct.function, %struct.function* %91, i64 0, !dbg !3411
  %cfg145 = getelementptr inbounds %struct.function, %struct.function* %add.ptr144, i32 0, i32 1, !dbg !3411
  %92 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg145, align 8, !dbg !3411
  %x_basic_block_info146 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %92, i32 0, i32 2, !dbg !3411
  %93 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info146, align 8, !dbg !3411
  %tobool147 = icmp ne %struct.VEC_basic_block_gc* %93, null, !dbg !3411
  br i1 %tobool147, label %cond.true148, label %cond.false153, !dbg !3411

cond.true148:                                     ; preds = %for.body143
  %94 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3411
  %add.ptr149 = getelementptr inbounds %struct.function, %struct.function* %94, i64 0, !dbg !3411
  %cfg150 = getelementptr inbounds %struct.function, %struct.function* %add.ptr149, i32 0, i32 1, !dbg !3411
  %95 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg150, align 8, !dbg !3411
  %x_basic_block_info151 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %95, i32 0, i32 2, !dbg !3411
  %96 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info151, align 8, !dbg !3411
  %base152 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %96, i32 0, i32 0, !dbg !3411
  br label %cond.end154, !dbg !3411

cond.false153:                                    ; preds = %for.body143
  br label %cond.end154, !dbg !3411

cond.end154:                                      ; preds = %cond.false153, %cond.true148
  %cond155 = phi %struct.VEC_basic_block_base* [ %base152, %cond.true148 ], [ null, %cond.false153 ], !dbg !3411
  %97 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3411
  %98 = load i32*, i32** @ebb_head, align 8, !dbg !3411
  %99 = load i32, i32* %i, align 4, !dbg !3411
  %idxprom156 = sext i32 %99 to i64, !dbg !3411
  %arrayidx157 = getelementptr inbounds i32, i32* %98, i64 %idxprom156, !dbg !3411
  %100 = load i32, i32* %arrayidx157, align 4, !dbg !3411
  %idxprom158 = sext i32 %100 to i64, !dbg !3411
  %arrayidx159 = getelementptr inbounds i32, i32* %97, i64 %idxprom158, !dbg !3411
  %101 = load i32, i32* %arrayidx159, align 4, !dbg !3411
  %call160 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond155, i32 %101), !dbg !3411
  store %struct.basic_block_def* %call160, %struct.basic_block_def** %bb, align 8, !dbg !3413
  %102 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3414
  %call161 = call zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def* %102), !dbg !3416
  %tobool162 = icmp ne i8 %call161, 0, !dbg !3416
  br i1 %tobool162, label %if.then163, label %if.end164, !dbg !3417

if.then163:                                       ; preds = %cond.end154
  %103 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3418
  call void @clear_outdated_rtx_info(%struct.basic_block_def* %103), !dbg !3420
  br label %for.inc182, !dbg !3421

if.end164:                                        ; preds = %cond.end154
  %104 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3422
  %105 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3424
  %index165 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %105, i32 0, i32 9, !dbg !3425
  %106 = load i32, i32* %index165, align 8, !dbg !3425
  %call166 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %104, i32 %106), !dbg !3426
  %tobool167 = icmp ne i32 %call166, 0, !dbg !3426
  br i1 %tobool167, label %if.then168, label %if.end181, !dbg !3427

if.then168:                                       ; preds = %if.end164
  %107 = load %struct.flist_tail_def*, %struct.flist_tail_def** %new_fences, align 8, !dbg !3428
  call void @flist_tail_init(%struct.flist_tail_def* %107), !dbg !3430
  %108 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3431
  %109 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3432
  %call169 = call i32 @init_seqno(i32 0, %struct.bitmap_head_def* %108, %struct.basic_block_def* %109), !dbg !3433
  store i32 %call169, i32* %orig_max_seqno, align 4, !dbg !3434
  %110 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !3435
  %111 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3436
  %index170 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %111, i32 0, i32 9, !dbg !3437
  %112 = load i32, i32* %index170, align 8, !dbg !3437
  %call171 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %110, i32 %112), !dbg !3438
  %113 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3439
  %114 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3440
  %index172 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %114, i32 0, i32 9, !dbg !3441
  %115 = load i32, i32* %index172, align 8, !dbg !3441
  %call173 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %113, i32 %115), !dbg !3442
  %116 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !3443
  %cmp174 = icmp eq %struct._list_node* %116, null, !dbg !3443
  br i1 %cmp174, label %cond.false177, label %cond.true176, !dbg !3443

cond.true176:                                     ; preds = %if.then168
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7525, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3443
  br label %cond.end178, !dbg !3443

cond.false177:                                    ; preds = %if.then168
  br label %cond.end178, !dbg !3443

cond.end178:                                      ; preds = %cond.false177, %cond.true176
  %cond179 = phi i32 [ 0, %cond.true176 ], [ 0, %cond.false177 ], !dbg !3443
  %117 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3444
  %call180 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %117), !dbg !3445
  call void @init_fences(%struct.rtx_def* %call180), !dbg !3446
  %118 = load i32, i32* %orig_max_seqno, align 4, !dbg !3447
  call void @sel_sched_region_2(i32 %118), !dbg !3448
  store i8 1, i8* %do_p, align 1, !dbg !3449
  br label %for.end184, !dbg !3450

if.end181:                                        ; preds = %if.end164
  br label %for.inc182, !dbg !3451

for.inc182:                                       ; preds = %if.end181, %if.then163
  %119 = load i32, i32* %i, align 4, !dbg !3452
  %inc183 = add nsw i32 %119, 1, !dbg !3452
  store i32 %inc183, i32* %i, align 4, !dbg !3452
  br label %for.cond140, !dbg !3453, !llvm.loop !3454

for.end184:                                       ; preds = %cond.end178, %for.cond140
  br label %while.cond, !dbg !3343, !llvm.loop !3456

while.end:                                        ; preds = %while.cond
  br label %if.end185, !dbg !3458

if.end185:                                        ; preds = %while.end, %cond.end31
  ret void, !dbg !3459
}

; Function Attrs: noinline nounwind uwtable
define internal void @sel_region_finish(i8 zeroext %reset_sched_cycles_p) #0 !dbg !3460 {
entry:
  %reset_sched_cycles_p.addr = alloca i8, align 1
  %si = alloca %struct.succ_iterator, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  store i8 %reset_sched_cycles_p, i8* %reset_sched_cycles_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reset_sched_cycles_p.addr, metadata !3463, metadata !DIExpression()), !dbg !3464
  call void @simplify_changed_insns(), !dbg !3465
  call void @sched_finish_ready_list(), !dbg !3466
  call void @free_nop_pool(), !dbg !3467
  %0 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !3468
  %tobool = icmp ne %struct.VEC_expr_t_heap* %0, null, !dbg !3468
  br i1 %tobool, label %if.then, label %if.end, !dbg !3470

if.then:                                          ; preds = %entry
  call void @VEC_expr_t_heap_free(%struct.VEC_expr_t_heap** @vec_av_set), !dbg !3471
  br label %if.end, !dbg !3471

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !3472
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %1), !dbg !3472
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @current_copies, align 8, !dbg !3472
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_originators, align 8, !dbg !3473
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %2), !dbg !3473
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @current_originators, align 8, !dbg !3473
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !3474
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %3), !dbg !3474
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !3474
  call void @vinsn_vec_free(%struct.VEC_vinsn_t_heap** @vec_bookkeeping_blocked_vinsns), !dbg !3475
  call void @vinsn_vec_free(%struct.VEC_vinsn_t_heap** @vec_target_unavailable_vinsns), !dbg !3476
  call void @llvm.dbg.declare(metadata %struct.succ_iterator* %si, metadata !3477, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !3493, metadata !DIExpression()), !dbg !3494
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3495
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !3495
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3495
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3495
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 2, !dbg !3495
  %6 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3495
  %tobool1 = icmp ne %struct.VEC_basic_block_gc* %6, null, !dbg !3495
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !3495

cond.true:                                        ; preds = %if.end
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3495
  %add.ptr2 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, !dbg !3495
  %cfg3 = getelementptr inbounds %struct.function, %struct.function* %add.ptr2, i32 0, i32 1, !dbg !3495
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3, align 8, !dbg !3495
  %x_basic_block_info4 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i32 0, i32 2, !dbg !3495
  %9 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info4, align 8, !dbg !3495
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %9, i32 0, i32 0, !dbg !3495
  br label %cond.end, !dbg !3495

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !3495

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3495
  %10 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3495
  %11 = load i32*, i32** @ebb_head, align 8, !dbg !3495
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 0, !dbg !3495
  %12 = load i32, i32* %arrayidx, align 4, !dbg !3495
  %idxprom = sext i32 %12 to i64, !dbg !3495
  %arrayidx5 = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !3495
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !3495
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %13), !dbg !3495
  %call6 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %call), !dbg !3495
  call void @_succ_iter_start(%struct.succ_iterator* sret %tmp, %struct.rtx_def** %insn, %struct.rtx_def* %call6, i32 9), !dbg !3495
  %14 = bitcast %struct.succ_iterator* %si to i8*, !dbg !3495
  %15 = bitcast %struct.succ_iterator* %tmp to i8*, !dbg !3495
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 64, i1 false), !dbg !3495
  br label %for.cond, !dbg !3495

for.cond:                                         ; preds = %for.inc, %cond.end
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3497
  %add.ptr7 = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, !dbg !3497
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %add.ptr7, i32 0, i32 1, !dbg !3497
  %17 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !3497
  %x_basic_block_info9 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i32 0, i32 2, !dbg !3497
  %18 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info9, align 8, !dbg !3497
  %tobool10 = icmp ne %struct.VEC_basic_block_gc* %18, null, !dbg !3497
  br i1 %tobool10, label %cond.true11, label %cond.false16, !dbg !3497

cond.true11:                                      ; preds = %for.cond
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3497
  %add.ptr12 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, !dbg !3497
  %cfg13 = getelementptr inbounds %struct.function, %struct.function* %add.ptr12, i32 0, i32 1, !dbg !3497
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg13, align 8, !dbg !3497
  %x_basic_block_info14 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i32 0, i32 2, !dbg !3497
  %21 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info14, align 8, !dbg !3497
  %base15 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %21, i32 0, i32 0, !dbg !3497
  br label %cond.end17, !dbg !3497

cond.false16:                                     ; preds = %for.cond
  br label %cond.end17, !dbg !3497

cond.end17:                                       ; preds = %cond.false16, %cond.true11
  %cond18 = phi %struct.VEC_basic_block_base* [ %base15, %cond.true11 ], [ null, %cond.false16 ], !dbg !3497
  %22 = load i32*, i32** @rgn_bb_table, align 8, !dbg !3497
  %23 = load i32*, i32** @ebb_head, align 8, !dbg !3497
  %arrayidx19 = getelementptr inbounds i32, i32* %23, i64 0, !dbg !3497
  %24 = load i32, i32* %arrayidx19, align 4, !dbg !3497
  %idxprom20 = sext i32 %24 to i64, !dbg !3497
  %arrayidx21 = getelementptr inbounds i32, i32* %22, i64 %idxprom20, !dbg !3497
  %25 = load i32, i32* %arrayidx21, align 4, !dbg !3497
  %call22 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond18, i32 %25), !dbg !3497
  %call23 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %call22), !dbg !3497
  %call24 = call zeroext i8 @_succ_iter_cond(%struct.succ_iterator* %si, %struct.rtx_def** %insn, %struct.rtx_def* %call23, i8 (%struct.edge_def*, %struct.succ_iterator*)* @_eligible_successor_edge_p), !dbg !3497
  %tobool25 = icmp ne i8 %call24, 0, !dbg !3495
  br i1 %tobool25, label %for.body, label %for.end, !dbg !3495

for.body:                                         ; preds = %cond.end17
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3499, metadata !DIExpression()), !dbg !3501
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3502
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !3502
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3502
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !3502
  %rt_bb = bitcast %union.rtunion_def* %arrayidx26 to %struct.basic_block_def**, !dbg !3502
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3502
  store %struct.basic_block_def* %27, %struct.basic_block_def** %bb, align 8, !dbg !3501
  %28 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !3503
  %tobool27 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %28, null, !dbg !3503
  br i1 %tobool27, label %cond.true28, label %cond.false30, !dbg !3503

cond.true28:                                      ; preds = %for.body
  %29 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !3503
  %base29 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %29, i32 0, i32 0, !dbg !3503
  br label %cond.end31, !dbg !3503

cond.false30:                                     ; preds = %for.body
  br label %cond.end31, !dbg !3503

cond.end31:                                       ; preds = %cond.false30, %cond.true28
  %cond32 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base29, %cond.true28 ], [ null, %cond.false30 ], !dbg !3503
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3503
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i32 0, i32 9, !dbg !3503
  %31 = load i32, i32* %index, align 8, !dbg !3503
  %call33 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond32, i32 %31), !dbg !3503
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call33, i32 0, i32 1, !dbg !3503
  %32 = load i8, i8* %lv_set_valid_p, align 8, !dbg !3503
  %tobool34 = icmp ne i8 %32, 0, !dbg !3503
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !3505

if.then35:                                        ; preds = %cond.end31
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3506
  %call36 = call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %33), !dbg !3507
  br label %if.end37, !dbg !3507

if.end37:                                         ; preds = %if.then35, %cond.end31
  br label %for.inc, !dbg !3508

for.inc:                                          ; preds = %if.end37
  call void @_succ_iter_next(%struct.succ_iterator* %si), !dbg !3497
  br label %for.cond, !dbg !3497, !llvm.loop !3509

for.end:                                          ; preds = %cond.end17
  %34 = load i32, i32* @reload_completed, align 4, !dbg !3511
  %tobool38 = icmp ne i32 %34, 0, !dbg !3511
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !3513

if.then39:                                        ; preds = %for.end
  %35 = load i8, i8* %reset_sched_cycles_p.addr, align 1, !dbg !3514
  call void @sel_region_target_finish(i8 zeroext %35), !dbg !3515
  br label %if.end40, !dbg !3515

if.end40:                                         ; preds = %if.then39, %for.end
  call void @sel_finish_global_and_expr(), !dbg !3516
  %36 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !3517
  call void @bitmap_clear(%struct.bitmap_head_def* %36), !dbg !3518
  call void @free_nop_vinsn(), !dbg !3519
  call void @finish_deps_global(), !dbg !3520
  call void @sched_finish_luids(), !dbg !3521
  call void @sel_finish_bbs(), !dbg !3522
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3523
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %37), !dbg !3523
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3523
  call void @sel_unregister_cfg_hooks(), !dbg !3524
  store i32 0, i32* @max_issue_size, align 4, !dbg !3525
  ret void, !dbg !3526
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @maybe_skip_selective_scheduling() #0 !dbg !3527 {
entry:
  %call = call zeroext i8 @dbg_cnt(i32 31), !dbg !3530
  %tobool = icmp ne i8 %call, 0, !dbg !3531
  %lnot = xor i1 %tobool, true, !dbg !3531
  %lnot.ext = zext i1 %lnot to i32, !dbg !3531
  %conv = trunc i32 %lnot.ext to i8, !dbg !3531
  ret i8 %conv, !dbg !3532
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @run_selective_scheduling() #0 !dbg !3533 {
entry:
  %rgn = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rgn, metadata !3534, metadata !DIExpression()), !dbg !3535
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3536
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !3536
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3536
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3536
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 3, !dbg !3536
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !3536
  %cmp = icmp eq i32 %2, 2, !dbg !3538
  br i1 %cmp, label %if.then, label %if.end, !dbg !3539

if.then:                                          ; preds = %entry
  br label %return, !dbg !3540

if.end:                                           ; preds = %entry
  call void @sel_global_init(), !dbg !3541
  store i32 0, i32* %rgn, align 4, !dbg !3542
  br label %for.cond, !dbg !3544

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %rgn, align 4, !dbg !3545
  %4 = load i32, i32* @nr_regions, align 4, !dbg !3547
  %cmp1 = icmp slt i32 %3, %4, !dbg !3548
  br i1 %cmp1, label %for.body, label %for.end, !dbg !3549

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %rgn, align 4, !dbg !3550
  call void @sel_sched_region(i32 %5), !dbg !3551
  br label %for.inc, !dbg !3551

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %rgn, align 4, !dbg !3552
  %inc = add nsw i32 %6, 1, !dbg !3552
  store i32 %inc, i32* %rgn, align 4, !dbg !3552
  br label %for.cond, !dbg !3553, !llvm.loop !3554

for.end:                                          ; preds = %for.cond
  call void @sel_global_finish(), !dbg !3556
  br label %return, !dbg !3557

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !3557
}

; Function Attrs: noinline nounwind uwtable
define internal void @sel_global_init() #0 !dbg !3558 {
entry:
  call void @calculate_dominance_info(i32 1), !dbg !3559
  call void @alloc_sched_pools(), !dbg !3560
  call void @sel_setup_sched_infos(), !dbg !3561
  call void @setup_sched_dump(), !dbg !3562
  call void @sched_rgn_init(i8 zeroext 0), !dbg !3563
  call void @sched_init(), !dbg !3564
  call void @sched_init_bbs(), !dbg !3565
  store %struct.basic_block_def* null, %struct.basic_block_def** @after_recovery, align 8, !dbg !3566
  %0 = load i32, i32* @issue_rate, align 4, !dbg !3567
  store i32 %0, i32* @can_issue_more, align 4, !dbg !3568
  call void @sched_extend_target(), !dbg !3569
  call void @sched_deps_init(i8 zeroext 1), !dbg !3570
  call void @setup_nop_and_exit_insns(), !dbg !3571
  call void @sel_extend_global_bb_info(), !dbg !3572
  call void @init_lv_sets(), !dbg !3573
  call void @init_hard_regs_data(), !dbg !3574
  ret void, !dbg !3575
}

; Function Attrs: noinline nounwind uwtable
define internal void @sel_global_finish() #0 !dbg !3576 {
entry:
  call void @free_bb_note_pool(), !dbg !3577
  call void @free_lv_sets(), !dbg !3578
  call void @sel_finish_global_bb_info(), !dbg !3579
  call void @free_regset_pool(), !dbg !3580
  call void @free_nop_and_exit_insns(), !dbg !3581
  call void @sched_rgn_finish(), !dbg !3582
  call void @sched_deps_finish(), !dbg !3583
  call void @sched_finish(), !dbg !3584
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3585
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !3585
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 4, !dbg !3585
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3585
  %tobool = icmp ne %struct.loops* %1, null, !dbg !3585
  br i1 %tobool, label %if.then, label %if.end, !dbg !3587

if.then:                                          ; preds = %entry
  call void @sel_finish_pipelining(), !dbg !3588
  br label %if.end, !dbg !3588

if.end:                                           ; preds = %if.then, %entry
  call void @free_sched_pools(), !dbg !3589
  call void @free_dominance_info(i32 1), !dbg !3590
  ret void, !dbg !3591
}

declare dso_local %struct.bitmap_head_def* @get_clear_regset_from_pool() #2

; Function Attrs: noinline nounwind uwtable
define internal { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) #0 !dbg !3592 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  %ev.addr = alloca %struct.VEC_edge_gc**, align 8
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %ev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_gc*** %ev.addr, metadata !3595, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %retval, metadata !3597, metadata !DIExpression()), !dbg !3598
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 0, !dbg !3599
  store i32 0, i32* %index, align 8, !dbg !3600
  %0 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %ev.addr, align 8, !dbg !3601
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 1, !dbg !3602
  store %struct.VEC_edge_gc** %0, %struct.VEC_edge_gc*** %container, align 8, !dbg !3603
  %1 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !3604
  %2 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, align 8, !dbg !3604
  ret { i32, %struct.VEC_edge_gc** } %2, !dbg !3604
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) #0 !dbg !3605 {
entry:
  %retval = alloca i8, align 1
  %ei = alloca %struct.edge_iterator, align 8
  %p.addr = alloca %struct.edge_def**, align 8
  %0 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %ei.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %ei.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !3609, metadata !DIExpression()), !dbg !3610
  store %struct.edge_def** %p, %struct.edge_def*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def*** %p.addr, metadata !3611, metadata !DIExpression()), !dbg !3612
  %3 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !3613
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !3613
  %5 = load i32, i32* %4, align 8, !dbg !3613
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !3613
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !3613
  %call = call zeroext i8 @ei_end_p(i32 %5, %struct.VEC_edge_gc** %7), !dbg !3613
  %tobool = icmp ne i8 %call, 0, !dbg !3613
  br i1 %tobool, label %if.else, label %if.then, !dbg !3615

if.then:                                          ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !3616
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !3616
  %10 = load i32, i32* %9, align 8, !dbg !3616
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !3616
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !3616
  %call1 = call %struct.edge_def* @ei_edge(i32 %10, %struct.VEC_edge_gc** %12), !dbg !3616
  %13 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !3618
  store %struct.edge_def* %call1, %struct.edge_def** %13, align 8, !dbg !3619
  store i8 1, i8* %retval, align 1, !dbg !3620
  br label %return, !dbg !3620

if.else:                                          ; preds = %entry
  %14 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !3621
  store %struct.edge_def* null, %struct.edge_def** %14, align 8, !dbg !3623
  store i8 0, i8* %retval, align 1, !dbg !3624
  br label %return, !dbg !3624

return:                                           ; preds = %if.else, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !3625
  ret i8 %15, !dbg !3625
}

declare dso_local zeroext i8 @sel_bb_empty_p(%struct.basic_block_def*) #2

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local %struct.rtx_def* @sel_bb_head(%struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ei_next(%struct.edge_iterator* %i) #0 !dbg !3626 {
entry:
  %i.addr = alloca %struct.edge_iterator*, align 8
  store %struct.edge_iterator* %i, %struct.edge_iterator** %i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator** %i.addr, metadata !3630, metadata !DIExpression()), !dbg !3631
  %0 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !3632
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %0, i32 0, i32 0, !dbg !3632
  %1 = load i32, i32* %index, align 8, !dbg !3632
  %2 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !3632
  %3 = bitcast %struct.edge_iterator* %2 to { i32, %struct.VEC_edge_gc** }*, !dbg !3632
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !3632
  %5 = load i32, i32* %4, align 8, !dbg !3632
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !3632
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !3632
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !3632
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !3632
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3632

cond.true:                                        ; preds = %entry
  %8 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !3632
  %9 = bitcast %struct.edge_iterator* %8 to { i32, %struct.VEC_edge_gc** }*, !dbg !3632
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !3632
  %11 = load i32, i32* %10, align 8, !dbg !3632
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !3632
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !3632
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !3632
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !3632
  br label %cond.end, !dbg !3632

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3632

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3632
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !3632
  %cmp = icmp ult i32 %1, %call2, !dbg !3632
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !3632

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3632
  br label %cond.end5, !dbg !3632

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !3632

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !3632
  %14 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !3633
  %index7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %14, i32 0, i32 0, !dbg !3634
  %15 = load i32, i32* %index7, align 8, !dbg !3635
  %inc = add i32 %15, 1, !dbg !3635
  store i32 %inc, i32* %index7, align 8, !dbg !3635
  ret void, !dbg !3636
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !3637 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !3640, metadata !DIExpression()), !dbg !3641
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !3642
  %3 = load i32, i32* %index, align 8, !dbg !3642
  %4 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !3643
  %5 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 0, !dbg !3643
  %6 = load i32, i32* %5, align 8, !dbg !3643
  %7 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 1, !dbg !3643
  %8 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %7, align 8, !dbg !3643
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %6, %struct.VEC_edge_gc** %8), !dbg !3643
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !3643
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3643

cond.true:                                        ; preds = %entry
  %9 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !3643
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !3643
  %11 = load i32, i32* %10, align 8, !dbg !3643
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !3643
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !3643
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !3643
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !3643
  br label %cond.end, !dbg !3643

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3643

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3643
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !3643
  %cmp = icmp eq i32 %3, %call2, !dbg !3644
  %conv = zext i1 %cmp to i32, !dbg !3644
  %conv3 = trunc i32 %conv to i8, !dbg !3645
  ret i8 %conv3, !dbg !3646
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !3647 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !3650, metadata !DIExpression()), !dbg !3651
  %3 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !3652
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !3652
  %5 = load i32, i32* %4, align 8, !dbg !3652
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !3652
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !3652
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !3652
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !3652
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3652

cond.true:                                        ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !3652
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !3652
  %10 = load i32, i32* %9, align 8, !dbg !3652
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !3652
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !3652
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %10, %struct.VEC_edge_gc** %12), !dbg !3652
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !3652
  br label %cond.end, !dbg !3652

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3652

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3652
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !3652
  %13 = load i32, i32* %index, align 8, !dbg !3652
  %call2 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %13), !dbg !3652
  ret %struct.edge_def* %call2, !dbg !3653
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) #0 !dbg !3654 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !3659, metadata !DIExpression()), !dbg !3660
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !3660
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !3660
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3660

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !3660
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %1, i32 0, i32 0, !dbg !3660
  %2 = load i32, i32* %num, align 8, !dbg !3660
  br label %cond.end, !dbg !3660

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3660

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !3660
  ret i32 %cond, !dbg !3660
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !3661 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !3664, metadata !DIExpression()), !dbg !3665
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !3666
  %3 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container, align 8, !dbg !3666
  %tobool = icmp ne %struct.VEC_edge_gc** %3, null, !dbg !3666
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3666

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3666
  br label %cond.end, !dbg !3666

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3666

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3666
  %container1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !3667
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container1, align 8, !dbg !3667
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %4, align 8, !dbg !3668
  ret %struct.VEC_edge_gc* %5, !dbg !3669
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) #0 !dbg !3670 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !3673, metadata !DIExpression()), !dbg !3674
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !3675, metadata !DIExpression()), !dbg !3674
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !3674
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !3674
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3674

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !3674
  %2 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !3674
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %2, i32 0, i32 0, !dbg !3674
  %3 = load i32, i32* %num, align 8, !dbg !3674
  %cmp = icmp ult i32 %1, %3, !dbg !3674
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !3676
  %land.ext = zext i1 %4 to i32, !dbg !3674
  %5 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !3674
  %vec = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %5, i32 0, i32 2, !dbg !3674
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !3674
  %idxprom = zext i32 %6 to i64, !dbg !3674
  %arrayidx = getelementptr inbounds [1 x %struct.edge_def*], [1 x %struct.edge_def*]* %vec, i64 0, i64 %idxprom, !dbg !3674
  %7 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !3674
  ret %struct.edge_def* %7, !dbg !3674
}

declare dso_local void @df_simulate_one_insn_backwards(%struct.basic_block_def*, %struct.rtx_def*, %struct.bitmap_head_def*) #2

declare dso_local void @copy_expr_onside(%struct._expr*, %struct._expr*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @track_scheduled_insns_and_blocks(%struct.rtx_def* %insn) #0 !dbg !3677 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3680, metadata !DIExpression()), !dbg !3681
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_originators, align 8, !dbg !3682
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3683
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !3683
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3683
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3683
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3683
  %2 = load i32, i32* %rt_int, align 8, !dbg !3683
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %2), !dbg !3684
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !3685
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3687
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !3687
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !3687
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !3687
  %rt_int4 = bitcast %union.rtunion_def* %arrayidx3 to i32*, !dbg !3687
  %5 = load i32, i32* %rt_int4, align 8, !dbg !3687
  %call5 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %3, i32 %5), !dbg !3688
  %tobool = icmp ne i32 %call5, 0, !dbg !3688
  br i1 %tobool, label %if.else32, label %if.then, !dbg !3689

if.then:                                          ; preds = %entry
  %6 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3690
  %tobool6 = icmp ne %struct.VEC_sel_insn_data_def_heap* %6, null, !dbg !3690
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !3690

cond.true:                                        ; preds = %if.then
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3690
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %7, i32 0, i32 0, !dbg !3690
  br label %cond.end, !dbg !3690

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !3690

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3690
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3690
  %tobool7 = icmp ne %struct.VEC_int_heap* %8, null, !dbg !3690
  br i1 %tobool7, label %cond.true8, label %cond.false10, !dbg !3690

cond.true8:                                       ; preds = %cond.end
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3690
  %base9 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i32 0, i32 0, !dbg !3690
  br label %cond.end11, !dbg !3690

cond.false10:                                     ; preds = %cond.end
  br label %cond.end11, !dbg !3690

cond.end11:                                       ; preds = %cond.false10, %cond.true8
  %cond12 = phi %struct.VEC_int_base* [ %base9, %cond.true8 ], [ null, %cond.false10 ], !dbg !3690
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3690
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !3690
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !3690
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 0, !dbg !3690
  %rt_int16 = bitcast %union.rtunion_def* %arrayidx15 to i32*, !dbg !3690
  %11 = load i32, i32* %rt_int16, align 8, !dbg !3690
  %call17 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond12, i32 %11), !dbg !3690
  %call18 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call17), !dbg !3690
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call18, i32 0, i32 0, !dbg !3690
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 5, !dbg !3690
  %12 = load i32, i32* %sched_times, align 8, !dbg !3690
  %cmp = icmp sgt i32 %12, 0, !dbg !3693
  br i1 %cmp, label %if.then19, label %if.else, !dbg !3694

if.then19:                                        ; preds = %cond.end11
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_reschedule, align 8, !dbg !3695
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3696
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !3696
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !3696
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 3, !dbg !3696
  %rt_bb = bitcast %union.rtunion_def* %arrayidx22 to %struct.basic_block_def**, !dbg !3696
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3696
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i32 0, i32 9, !dbg !3697
  %16 = load i32, i32* %index, align 8, !dbg !3697
  %call23 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %13, i32 %16), !dbg !3698
  br label %if.end31, !dbg !3698

if.else:                                          ; preds = %cond.end11
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3699
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3699
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !3699
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !3699
  %rt_int27 = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !3699
  %18 = load i32, i32* %rt_int27, align 8, !dbg !3699
  %19 = load i32, i32* @first_emitted_uid, align 4, !dbg !3701
  %cmp28 = icmp slt i32 %18, %19, !dbg !3702
  br i1 %cmp28, label %land.lhs.true, label %if.end, !dbg !3703

land.lhs.true:                                    ; preds = %if.else
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3704
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !3704
  %bf.load = load i32, i32* %21, align 8, !dbg !3704
  %bf.clear = and i32 %bf.load, 65535, !dbg !3704
  %cmp29 = icmp eq i32 %bf.clear, 7, !dbg !3704
  br i1 %cmp29, label %if.end, label %if.then30, !dbg !3705

if.then30:                                        ; preds = %land.lhs.true
  %22 = load i32, i32* @num_insns_scheduled, align 4, !dbg !3706
  %inc = add nsw i32 %22, 1, !dbg !3706
  store i32 %inc, i32* @num_insns_scheduled, align 4, !dbg !3706
  br label %if.end, !dbg !3707

if.end:                                           ; preds = %if.then30, %land.lhs.true, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then19
  br label %if.end38, !dbg !3708

if.else32:                                        ; preds = %entry
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !3709
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3710
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !3710
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !3710
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !3710
  %rt_int36 = bitcast %union.rtunion_def* %arrayidx35 to i32*, !dbg !3710
  %25 = load i32, i32* %rt_int36, align 8, !dbg !3710
  %call37 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %23, i32 %25), !dbg !3711
  br label %if.end38

if.end38:                                         ; preds = %if.else32, %if.end31
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3712
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !3712
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !3712
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 0, !dbg !3712
  %rt_int42 = bitcast %union.rtunion_def* %arrayidx41 to i32*, !dbg !3712
  %27 = load i32, i32* %rt_int42, align 8, !dbg !3712
  %28 = load i32, i32* @max_uid_before_move_op, align 4, !dbg !3714
  %cmp43 = icmp sgt i32 %27, %28, !dbg !3715
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !3716

if.then44:                                        ; preds = %if.end38
  %29 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !3717
  %dec = add nsw i32 %29, -1, !dbg !3717
  store i32 %dec, i32* @stat_bookkeeping_copies, align 4, !dbg !3717
  br label %if.end45, !dbg !3718

if.end45:                                         ; preds = %if.then44, %if.end38
  ret void, !dbg !3719
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @handle_emitting_transformations(%struct.rtx_def* %insn, %struct._expr* %expr, %struct.moveop_static_params* %params) #0 !dbg !3720 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %struct._expr*, align 8
  %params.addr = alloca %struct.moveop_static_params*, align 8
  %insn_emitted = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3723, metadata !DIExpression()), !dbg !3724
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !3725, metadata !DIExpression()), !dbg !3726
  store %struct.moveop_static_params* %params, %struct.moveop_static_params** %params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moveop_static_params** %params.addr, metadata !3727, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.declare(metadata i8* %insn_emitted, metadata !3729, metadata !DIExpression()), !dbg !3730
  store i8 0, i8* %insn_emitted, align 1, !dbg !3730
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3731
  %1 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3732
  %call = call zeroext i8 @maybe_emit_renaming_copy(%struct.rtx_def* %0, %struct.moveop_static_params* %1), !dbg !3733
  store i8 %call, i8* %insn_emitted, align 1, !dbg !3734
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3735
  %3 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !3736
  %4 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3737
  %call1 = call zeroext i8 @maybe_emit_speculative_check(%struct.rtx_def* %2, %struct._expr* %3, %struct.moveop_static_params* %4), !dbg !3738
  %conv = zext i8 %call1 to i32, !dbg !3738
  %5 = load i8, i8* %insn_emitted, align 1, !dbg !3739
  %conv2 = zext i8 %5 to i32, !dbg !3739
  %or = or i32 %conv2, %conv, !dbg !3739
  %conv3 = trunc i32 %or to i8, !dbg !3739
  store i8 %conv3, i8* %insn_emitted, align 1, !dbg !3739
  %6 = load i8, i8* %insn_emitted, align 1, !dbg !3740
  ret i8 %6, !dbg !3741
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_expr_history_def_base_length(%struct.VEC_expr_history_def_base* %vec_) #0 !dbg !3742 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_history_def_base*, align 8
  store %struct.VEC_expr_history_def_base* %vec_, %struct.VEC_expr_history_def_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_history_def_base** %vec_.addr, metadata !3747, metadata !DIExpression()), !dbg !3748
  %0 = load %struct.VEC_expr_history_def_base*, %struct.VEC_expr_history_def_base** %vec_.addr, align 8, !dbg !3748
  %tobool = icmp ne %struct.VEC_expr_history_def_base* %0, null, !dbg !3748
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3748

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_expr_history_def_base*, %struct.VEC_expr_history_def_base** %vec_.addr, align 8, !dbg !3748
  %num = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %1, i32 0, i32 0, !dbg !3748
  %2 = load i32, i32* %num, align 8, !dbg !3748
  br label %cond.end, !dbg !3748

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3748

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !3748
  ret i32 %cond, !dbg !3748
}

; Function Attrs: noinline nounwind uwtable
define internal void @remove_insn_from_stream(%struct.rtx_def* %insn, i8 zeroext %only_disconnect) #0 !dbg !3749 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %only_disconnect.addr = alloca i8, align 1
  %nop = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3752, metadata !DIExpression()), !dbg !3753
  store i8 %only_disconnect, i8* %only_disconnect.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %only_disconnect.addr, metadata !3754, metadata !DIExpression()), !dbg !3755
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3756
  %call = call zeroext i8 @need_nop_to_preserve_insn_bb(%struct.rtx_def* %0), !dbg !3758
  %tobool = icmp ne i8 %call, 0, !dbg !3758
  br i1 %tobool, label %if.then, label %if.end, !dbg !3759

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %nop, metadata !3760, metadata !DIExpression()), !dbg !3762
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3763
  %call1 = call %struct.rtx_def* @get_nop_from_pool(%struct.rtx_def* %1), !dbg !3764
  store %struct.rtx_def* %call1, %struct.rtx_def** %nop, align 8, !dbg !3762
  %2 = load %struct.rtx_def*, %struct.rtx_def** %nop, align 8, !dbg !3765
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !3765
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3765
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !3765
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3765
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3765
  %4 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !3765
  %cmp = icmp eq %struct.rtx_def* %3, %4, !dbg !3765
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !3765

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5961, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3765
  br label %cond.end, !dbg !3765

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !3765

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3765
  %5 = load %struct.rtx_def*, %struct.rtx_def** %nop, align 8, !dbg !3766
  %call2 = call %struct.rtx_def** @VEC_insn_t_heap_safe_push(%struct.VEC_insn_t_heap** @vec_temp_moveop_nops, %struct.rtx_def* %5), !dbg !3766
  br label %if.end, !dbg !3767

if.end:                                           ; preds = %cond.end, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3768
  %7 = load i8, i8* %only_disconnect.addr, align 1, !dbg !3769
  %call3 = call zeroext i8 @sel_remove_insn(%struct.rtx_def* %6, i8 zeroext %7, i8 zeroext 0), !dbg !3770
  ret void, !dbg !3771
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #2

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @maybe_emit_renaming_copy(%struct.rtx_def* %insn, %struct.moveop_static_params* %params) #0 !dbg !3772 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %params.addr = alloca %struct.moveop_static_params*, align 8
  %insn_emitted = alloca i8, align 1
  %cur_reg = alloca %struct.rtx_def*, align 8
  %reg_move_insn = alloca %struct.rtx_def*, align 8
  %reg_move_insn_rtx = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3775, metadata !DIExpression()), !dbg !3776
  store %struct.moveop_static_params* %params, %struct.moveop_static_params** %params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moveop_static_params** %params.addr, metadata !3777, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.declare(metadata i8* %insn_emitted, metadata !3779, metadata !DIExpression()), !dbg !3780
  store i8 0, i8* %insn_emitted, align 1, !dbg !3780
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cur_reg, metadata !3781, metadata !DIExpression()), !dbg !3782
  %0 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3783
  %c_expr = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %0, i32 0, i32 1, !dbg !3783
  %1 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !3783
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %1, i32 0, i32 0, !dbg !3783
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !3783
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %2, i32 0, i32 1, !dbg !3783
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !3783
  %3 = load i32, i32* %type, align 8, !dbg !3783
  %cmp = icmp eq i32 %3, 23, !dbg !3783
  br i1 %cmp, label %if.end, label %if.then, !dbg !3785

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3786
  br label %return, !dbg !3786

if.end:                                           ; preds = %entry
  %4 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3787
  %c_expr1 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %4, i32 0, i32 1, !dbg !3788
  %5 = load %struct._expr*, %struct._expr** %c_expr1, align 8, !dbg !3788
  %call = call %struct.rtx_def* @expr_dest_reg(%struct._expr* %5), !dbg !3789
  store %struct.rtx_def* %call, %struct.rtx_def** %cur_reg, align 8, !dbg !3790
  %6 = load %struct.rtx_def*, %struct.rtx_def** %cur_reg, align 8, !dbg !3791
  %tobool = icmp ne %struct.rtx_def* %6, null, !dbg !3791
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !3791

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3791
  %dest = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %7, i32 0, i32 0, !dbg !3791
  %8 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3791
  %tobool2 = icmp ne %struct.rtx_def* %8, null, !dbg !3791
  br i1 %tobool2, label %land.lhs.true3, label %cond.true, !dbg !3791

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3791
  %dest4 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %9, i32 0, i32 0, !dbg !3791
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dest4, align 8, !dbg !3791
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !3791
  %bf.load = load i32, i32* %11, align 8, !dbg !3791
  %bf.clear = and i32 %bf.load, 65535, !dbg !3791
  %cmp5 = icmp eq i32 %bf.clear, 37, !dbg !3791
  br i1 %cmp5, label %cond.false, label %cond.true, !dbg !3791

cond.true:                                        ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5835, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3791
  br label %cond.end, !dbg !3791

cond.false:                                       ; preds = %land.lhs.true3
  br label %cond.end, !dbg !3791

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3791
  %12 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3792
  %dest6 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %12, i32 0, i32 0, !dbg !3792
  %13 = load %struct.rtx_def*, %struct.rtx_def** %dest6, align 8, !dbg !3792
  %call7 = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !3792
  %14 = load %struct.rtx_def*, %struct.rtx_def** %cur_reg, align 8, !dbg !3794
  %call8 = call i32 @rhs_regno(%struct.rtx_def* %14), !dbg !3794
  %cmp9 = icmp ne i32 %call7, %call8, !dbg !3795
  br i1 %cmp9, label %if.then10, label %if.end86, !dbg !3796

if.then10:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg_move_insn, metadata !3797, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg_move_insn_rtx, metadata !3800, metadata !DIExpression()), !dbg !3801
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3802
  %tobool11 = icmp ne %struct.VEC_sel_insn_data_def_heap* %15, null, !dbg !3802
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !3802

cond.true12:                                      ; preds = %if.then10
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3802
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %16, i32 0, i32 0, !dbg !3802
  br label %cond.end14, !dbg !3802

cond.false13:                                     ; preds = %if.then10
  br label %cond.end14, !dbg !3802

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true12 ], [ null, %cond.false13 ], !dbg !3802
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3802
  %tobool16 = icmp ne %struct.VEC_int_heap* %17, null, !dbg !3802
  br i1 %tobool16, label %cond.true17, label %cond.false19, !dbg !3802

cond.true17:                                      ; preds = %cond.end14
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3802
  %base18 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i32 0, i32 0, !dbg !3802
  br label %cond.end20, !dbg !3802

cond.false19:                                     ; preds = %cond.end14
  br label %cond.end20, !dbg !3802

cond.end20:                                       ; preds = %cond.false19, %cond.true17
  %cond21 = phi %struct.VEC_int_base* [ %base18, %cond.true17 ], [ null, %cond.false19 ], !dbg !3802
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3802
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !3802
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3802
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3802
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3802
  %20 = load i32, i32* %rt_int, align 8, !dbg !3802
  %call22 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond21, i32 %20), !dbg !3802
  %call23 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond15, i32 %call22), !dbg !3802
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call23, i32 0, i32 0, !dbg !3802
  %vinsn24 = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 0, !dbg !3802
  %21 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn24, align 8, !dbg !3802
  %22 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3803
  %dest25 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %22, i32 0, i32 0, !dbg !3804
  %23 = load %struct.rtx_def*, %struct.rtx_def** %dest25, align 8, !dbg !3804
  %call26 = call %struct.rtx_def* @create_insn_rtx_with_rhs(%struct.vinsn_def* %21, %struct.rtx_def* %23), !dbg !3805
  store %struct.rtx_def* %call26, %struct.rtx_def** %reg_move_insn_rtx, align 8, !dbg !3806
  %24 = load %struct.rtx_def*, %struct.rtx_def** %reg_move_insn_rtx, align 8, !dbg !3807
  %25 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3808
  %tobool27 = icmp ne %struct.VEC_sel_insn_data_def_heap* %25, null, !dbg !3808
  br i1 %tobool27, label %cond.true28, label %cond.false30, !dbg !3808

cond.true28:                                      ; preds = %cond.end20
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3808
  %base29 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %26, i32 0, i32 0, !dbg !3808
  br label %cond.end31, !dbg !3808

cond.false30:                                     ; preds = %cond.end20
  br label %cond.end31, !dbg !3808

cond.end31:                                       ; preds = %cond.false30, %cond.true28
  %cond32 = phi %struct.VEC_sel_insn_data_def_base* [ %base29, %cond.true28 ], [ null, %cond.false30 ], !dbg !3808
  %27 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3808
  %tobool33 = icmp ne %struct.VEC_int_heap* %27, null, !dbg !3808
  br i1 %tobool33, label %cond.true34, label %cond.false36, !dbg !3808

cond.true34:                                      ; preds = %cond.end31
  %28 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3808
  %base35 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %28, i32 0, i32 0, !dbg !3808
  br label %cond.end37, !dbg !3808

cond.false36:                                     ; preds = %cond.end31
  br label %cond.end37, !dbg !3808

cond.end37:                                       ; preds = %cond.false36, %cond.true34
  %cond38 = phi %struct.VEC_int_base* [ %base35, %cond.true34 ], [ null, %cond.false36 ], !dbg !3808
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3808
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !3808
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !3808
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 0, !dbg !3808
  %rt_int42 = bitcast %union.rtunion_def* %arrayidx41 to i32*, !dbg !3808
  %30 = load i32, i32* %rt_int42, align 8, !dbg !3808
  %call43 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond38, i32 %30), !dbg !3808
  %call44 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond32, i32 %call43), !dbg !3808
  %expr45 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call44, i32 0, i32 0, !dbg !3808
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3809
  %tobool46 = icmp ne %struct.VEC_sel_insn_data_def_heap* %31, null, !dbg !3809
  br i1 %tobool46, label %cond.true47, label %cond.false49, !dbg !3809

cond.true47:                                      ; preds = %cond.end37
  %32 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3809
  %base48 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %32, i32 0, i32 0, !dbg !3809
  br label %cond.end50, !dbg !3809

cond.false49:                                     ; preds = %cond.end37
  br label %cond.end50, !dbg !3809

cond.end50:                                       ; preds = %cond.false49, %cond.true47
  %cond51 = phi %struct.VEC_sel_insn_data_def_base* [ %base48, %cond.true47 ], [ null, %cond.false49 ], !dbg !3809
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3809
  %tobool52 = icmp ne %struct.VEC_int_heap* %33, null, !dbg !3809
  br i1 %tobool52, label %cond.true53, label %cond.false55, !dbg !3809

cond.true53:                                      ; preds = %cond.end50
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3809
  %base54 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %34, i32 0, i32 0, !dbg !3809
  br label %cond.end56, !dbg !3809

cond.false55:                                     ; preds = %cond.end50
  br label %cond.end56, !dbg !3809

cond.end56:                                       ; preds = %cond.false55, %cond.true53
  %cond57 = phi %struct.VEC_int_base* [ %base54, %cond.true53 ], [ null, %cond.false55 ], !dbg !3809
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3809
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !3809
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !3809
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 0, !dbg !3809
  %rt_int61 = bitcast %union.rtunion_def* %arrayidx60 to i32*, !dbg !3809
  %36 = load i32, i32* %rt_int61, align 8, !dbg !3809
  %call62 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond57, i32 %36), !dbg !3809
  %call63 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond51, i32 %call62), !dbg !3809
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call63, i32 0, i32 2, !dbg !3809
  %37 = load i32, i32* %seqno, align 4, !dbg !3809
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3810
  %call64 = call %struct.rtx_def* @sel_gen_insn_from_rtx_after(%struct.rtx_def* %24, %struct._expr* %expr45, i32 %37, %struct.rtx_def* %38), !dbg !3811
  store %struct.rtx_def* %call64, %struct.rtx_def** %reg_move_insn, align 8, !dbg !3812
  %39 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3813
  %tobool65 = icmp ne %struct.VEC_sel_insn_data_def_heap* %39, null, !dbg !3813
  br i1 %tobool65, label %cond.true66, label %cond.false68, !dbg !3813

cond.true66:                                      ; preds = %cond.end56
  %40 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3813
  %base67 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %40, i32 0, i32 0, !dbg !3813
  br label %cond.end69, !dbg !3813

cond.false68:                                     ; preds = %cond.end56
  br label %cond.end69, !dbg !3813

cond.end69:                                       ; preds = %cond.false68, %cond.true66
  %cond70 = phi %struct.VEC_sel_insn_data_def_base* [ %base67, %cond.true66 ], [ null, %cond.false68 ], !dbg !3813
  %41 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3813
  %tobool71 = icmp ne %struct.VEC_int_heap* %41, null, !dbg !3813
  br i1 %tobool71, label %cond.true72, label %cond.false74, !dbg !3813

cond.true72:                                      ; preds = %cond.end69
  %42 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3813
  %base73 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %42, i32 0, i32 0, !dbg !3813
  br label %cond.end75, !dbg !3813

cond.false74:                                     ; preds = %cond.end69
  br label %cond.end75, !dbg !3813

cond.end75:                                       ; preds = %cond.false74, %cond.true72
  %cond76 = phi %struct.VEC_int_base* [ %base73, %cond.true72 ], [ null, %cond.false74 ], !dbg !3813
  %43 = load %struct.rtx_def*, %struct.rtx_def** %reg_move_insn, align 8, !dbg !3813
  %u77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !3813
  %fld78 = bitcast %union.u* %u77 to [1 x %union.rtunion_def]*, !dbg !3813
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i64 0, i64 0, !dbg !3813
  %rt_int80 = bitcast %union.rtunion_def* %arrayidx79 to i32*, !dbg !3813
  %44 = load i32, i32* %rt_int80, align 8, !dbg !3813
  %call81 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond76, i32 %44), !dbg !3813
  %call82 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond70, i32 %call81), !dbg !3813
  %expr83 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call82, i32 0, i32 0, !dbg !3813
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr83, i32 0, i32 7, !dbg !3813
  store i32 0, i32* %spec_done_ds, align 8, !dbg !3814
  %45 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3815
  %c_expr84 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %45, i32 0, i32 1, !dbg !3816
  %46 = load %struct._expr*, %struct._expr** %c_expr84, align 8, !dbg !3816
  %47 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3817
  %dest85 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %47, i32 0, i32 0, !dbg !3818
  %48 = load %struct.rtx_def*, %struct.rtx_def** %dest85, align 8, !dbg !3818
  call void @replace_dest_with_reg_in_expr(%struct._expr* %46, %struct.rtx_def* %48), !dbg !3819
  store i8 1, i8* %insn_emitted, align 1, !dbg !3820
  %49 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3821
  %was_renamed = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %49, i32 0, i32 3, !dbg !3822
  store i8 1, i8* %was_renamed, align 4, !dbg !3823
  br label %if.end86, !dbg !3824

if.end86:                                         ; preds = %cond.end75, %cond.end
  %50 = load i8, i8* %insn_emitted, align 1, !dbg !3825
  store i8 %50, i8* %retval, align 1, !dbg !3826
  br label %return, !dbg !3826

return:                                           ; preds = %if.end86, %if.then
  %51 = load i8, i8* %retval, align 1, !dbg !3827
  ret i8 %51, !dbg !3827
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @maybe_emit_speculative_check(%struct.rtx_def* %insn, %struct._expr* %expr, %struct.moveop_static_params* %params) #0 !dbg !3828 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %struct._expr*, align 8
  %params.addr = alloca %struct.moveop_static_params*, align 8
  %insn_emitted = alloca i8, align 1
  %x = alloca %struct.rtx_def*, align 8
  %check_ds = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3829, metadata !DIExpression()), !dbg !3830
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !3831, metadata !DIExpression()), !dbg !3832
  store %struct.moveop_static_params* %params, %struct.moveop_static_params** %params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moveop_static_params** %params.addr, metadata !3833, metadata !DIExpression()), !dbg !3834
  call void @llvm.dbg.declare(metadata i8* %insn_emitted, metadata !3835, metadata !DIExpression()), !dbg !3836
  store i8 0, i8* %insn_emitted, align 1, !dbg !3836
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !3837, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.declare(metadata i32* %check_ds, metadata !3839, metadata !DIExpression()), !dbg !3840
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3841
  %1 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !3842
  %call = call i32 @get_spec_check_type_for_insn(%struct.rtx_def* %0, %struct._expr* %1), !dbg !3843
  store i32 %call, i32* %check_ds, align 4, !dbg !3844
  %2 = load i32, i32* %check_ds, align 4, !dbg !3845
  %cmp = icmp ne i32 %2, 0, !dbg !3847
  br i1 %cmp, label %if.then, label %if.else, !dbg !3848

if.then:                                          ; preds = %entry
  %3 = load %struct.moveop_static_params*, %struct.moveop_static_params** %params.addr, align 8, !dbg !3849
  %c_expr = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %3, i32 0, i32 1, !dbg !3851
  %4 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !3851
  %5 = load i32, i32* %check_ds, align 4, !dbg !3852
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3853
  %call1 = call %struct.rtx_def* @create_speculation_check(%struct._expr* %4, i32 %5, %struct.rtx_def* %6), !dbg !3854
  store %struct.rtx_def* %call1, %struct.rtx_def** %x, align 8, !dbg !3855
  store i8 1, i8* %insn_emitted, align 1, !dbg !3856
  br label %if.end, !dbg !3857

if.else:                                          ; preds = %entry
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3858
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %7, null, !dbg !3858
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3858

cond.true:                                        ; preds = %if.else
  %8 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3858
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %8, i32 0, i32 0, !dbg !3858
  br label %cond.end, !dbg !3858

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !3858

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3858
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3858
  %tobool2 = icmp ne %struct.VEC_int_heap* %9, null, !dbg !3858
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !3858

cond.true3:                                       ; preds = %cond.end
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3858
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i32 0, i32 0, !dbg !3858
  br label %cond.end6, !dbg !3858

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !3858

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi %struct.VEC_int_base* [ %base4, %cond.true3 ], [ null, %cond.false5 ], !dbg !3858
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3858
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !3858
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3858
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3858
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3858
  %12 = load i32, i32* %rt_int, align 8, !dbg !3858
  %call8 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond7, i32 %12), !dbg !3858
  %call9 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call8), !dbg !3858
  %expr10 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call9, i32 0, i32 0, !dbg !3858
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr10, i32 0, i32 7, !dbg !3858
  store i32 0, i32* %spec_done_ds, align 8, !dbg !3860
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3861
  store %struct.rtx_def* %13, %struct.rtx_def** %x, align 8, !dbg !3862
  br label %if.end

if.end:                                           ; preds = %cond.end6, %if.then
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3863
  %tobool11 = icmp ne %struct.VEC_sel_insn_data_def_heap* %14, null, !dbg !3863
  br i1 %tobool11, label %cond.true12, label %cond.false14, !dbg !3863

cond.true12:                                      ; preds = %if.end
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3863
  %base13 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i32 0, i32 0, !dbg !3863
  br label %cond.end15, !dbg !3863

cond.false14:                                     ; preds = %if.end
  br label %cond.end15, !dbg !3863

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi %struct.VEC_sel_insn_data_def_base* [ %base13, %cond.true12 ], [ null, %cond.false14 ], !dbg !3863
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3863
  %tobool17 = icmp ne %struct.VEC_int_heap* %16, null, !dbg !3863
  br i1 %tobool17, label %cond.true18, label %cond.false20, !dbg !3863

cond.true18:                                      ; preds = %cond.end15
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3863
  %base19 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %17, i32 0, i32 0, !dbg !3863
  br label %cond.end21, !dbg !3863

cond.false20:                                     ; preds = %cond.end15
  br label %cond.end21, !dbg !3863

cond.end21:                                       ; preds = %cond.false20, %cond.true18
  %cond22 = phi %struct.VEC_int_base* [ %base19, %cond.true18 ], [ null, %cond.false20 ], !dbg !3863
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !3863
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !3863
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !3863
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !3863
  %rt_int26 = bitcast %union.rtunion_def* %arrayidx25 to i32*, !dbg !3863
  %19 = load i32, i32* %rt_int26, align 8, !dbg !3863
  %call27 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond22, i32 %19), !dbg !3863
  %call28 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond16, i32 %call27), !dbg !3863
  %expr29 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call28, i32 0, i32 0, !dbg !3863
  %spec_done_ds30 = getelementptr inbounds %struct._expr, %struct._expr* %expr29, i32 0, i32 7, !dbg !3863
  %20 = load i32, i32* %spec_done_ds30, align 8, !dbg !3863
  %cmp31 = icmp eq i32 %20, 0, !dbg !3863
  br i1 %cmp31, label %land.lhs.true, label %cond.true52, !dbg !3863

land.lhs.true:                                    ; preds = %cond.end21
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3863
  %tobool32 = icmp ne %struct.VEC_sel_insn_data_def_heap* %21, null, !dbg !3863
  br i1 %tobool32, label %cond.true33, label %cond.false35, !dbg !3863

cond.true33:                                      ; preds = %land.lhs.true
  %22 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3863
  %base34 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %22, i32 0, i32 0, !dbg !3863
  br label %cond.end36, !dbg !3863

cond.false35:                                     ; preds = %land.lhs.true
  br label %cond.end36, !dbg !3863

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi %struct.VEC_sel_insn_data_def_base* [ %base34, %cond.true33 ], [ null, %cond.false35 ], !dbg !3863
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3863
  %tobool38 = icmp ne %struct.VEC_int_heap* %23, null, !dbg !3863
  br i1 %tobool38, label %cond.true39, label %cond.false41, !dbg !3863

cond.true39:                                      ; preds = %cond.end36
  %24 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3863
  %base40 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %24, i32 0, i32 0, !dbg !3863
  br label %cond.end42, !dbg !3863

cond.false41:                                     ; preds = %cond.end36
  br label %cond.end42, !dbg !3863

cond.end42:                                       ; preds = %cond.false41, %cond.true39
  %cond43 = phi %struct.VEC_int_base* [ %base40, %cond.true39 ], [ null, %cond.false41 ], !dbg !3863
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !3863
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !3863
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !3863
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 0, !dbg !3863
  %rt_int47 = bitcast %union.rtunion_def* %arrayidx46 to i32*, !dbg !3863
  %26 = load i32, i32* %rt_int47, align 8, !dbg !3863
  %call48 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond43, i32 %26), !dbg !3863
  %call49 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond37, i32 %call48), !dbg !3863
  %expr50 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call49, i32 0, i32 0, !dbg !3863
  %spec_to_check_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr50, i32 0, i32 8, !dbg !3863
  %27 = load i32, i32* %spec_to_check_ds, align 4, !dbg !3863
  %cmp51 = icmp eq i32 %27, 0, !dbg !3863
  br i1 %cmp51, label %cond.false53, label %cond.true52, !dbg !3863

cond.true52:                                      ; preds = %cond.end42, %cond.end21
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5885, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3863
  br label %cond.end54, !dbg !3863

cond.false53:                                     ; preds = %cond.end42
  br label %cond.end54, !dbg !3863

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i32 [ 0, %cond.true52 ], [ 0, %cond.false53 ], !dbg !3863
  %28 = load i8, i8* %insn_emitted, align 1, !dbg !3864
  ret i8 %28, !dbg !3865
}

declare dso_local %struct.rtx_def* @expr_dest_reg(%struct._expr*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @rhs_regno(%struct.rtx_def* %x) #0 !dbg !3866 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !3872, metadata !DIExpression()), !dbg !3873
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3874
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !3874
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3874
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3874
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3874
  %1 = load i32, i32* %rt_uint, align 8, !dbg !3874
  ret i32 %1, !dbg !3875
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @create_insn_rtx_with_rhs(%struct.vinsn_def* %vi, %struct.rtx_def* %rhs_rtx) #0 !dbg !3876 {
entry:
  %vi.addr = alloca %struct.vinsn_def*, align 8
  %rhs_rtx.addr = alloca %struct.rtx_def*, align 8
  %lhs_rtx = alloca %struct.rtx_def*, align 8
  %pattern = alloca %struct.rtx_def*, align 8
  %insn_rtx = alloca %struct.rtx_def*, align 8
  store %struct.vinsn_def* %vi, %struct.vinsn_def** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vi.addr, metadata !3879, metadata !DIExpression()), !dbg !3880
  store %struct.rtx_def* %rhs_rtx, %struct.rtx_def** %rhs_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %rhs_rtx.addr, metadata !3881, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %lhs_rtx, metadata !3883, metadata !DIExpression()), !dbg !3884
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pattern, metadata !3885, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn_rtx, metadata !3887, metadata !DIExpression()), !dbg !3888
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vi.addr, align 8, !dbg !3889
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i32 0, i32 1, !dbg !3889
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 1, !dbg !3889
  %1 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !3889
  %call = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1), !dbg !3890
  store %struct.rtx_def* %call, %struct.rtx_def** %lhs_rtx, align 8, !dbg !3891
  %2 = load %struct.rtx_def*, %struct.rtx_def** %lhs_rtx, align 8, !dbg !3892
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rhs_rtx.addr, align 8, !dbg !3892
  %call1 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %3), !dbg !3892
  store %struct.rtx_def* %call1, %struct.rtx_def** %pattern, align 8, !dbg !3893
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !3894
  %call2 = call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %4, %struct.rtx_def* null), !dbg !3895
  store %struct.rtx_def* %call2, %struct.rtx_def** %insn_rtx, align 8, !dbg !3896
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !3897
  ret %struct.rtx_def* %5, !dbg !3898
}

declare dso_local %struct.rtx_def* @sel_gen_insn_from_rtx_after(%struct.rtx_def*, %struct._expr*, i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @replace_dest_with_reg_in_expr(%struct._expr* %expr, %struct.rtx_def* %new_reg) #0 !dbg !3899 {
entry:
  %expr.addr = alloca %struct._expr*, align 8
  %new_reg.addr = alloca %struct.rtx_def*, align 8
  %insn_rtx = alloca %struct.rtx_def*, align 8
  %vinsn = alloca %struct.vinsn_def*, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !3902, metadata !DIExpression()), !dbg !3903
  store %struct.rtx_def* %new_reg, %struct.rtx_def** %new_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_reg.addr, metadata !3904, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn_rtx, metadata !3906, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vinsn, metadata !3908, metadata !DIExpression()), !dbg !3909
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !3910
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !3910
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !3910
  %2 = load %struct.rtx_def*, %struct.rtx_def** %new_reg.addr, align 8, !dbg !3911
  %call = call %struct.rtx_def* @create_insn_rtx_with_lhs(%struct.vinsn_def* %1, %struct.rtx_def* %2), !dbg !3912
  store %struct.rtx_def* %call, %struct.rtx_def** %insn_rtx, align 8, !dbg !3913
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !3914
  %call2 = call %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def* %3, i8 zeroext 0), !dbg !3915
  store %struct.vinsn_def* %call2, %struct.vinsn_def** %vinsn, align 8, !dbg !3916
  %4 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !3917
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !3918
  call void @change_vinsn_in_expr(%struct._expr* %4, %struct.vinsn_def* %5), !dbg !3919
  %6 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !3920
  %was_renamed = getelementptr inbounds %struct._expr, %struct._expr* %6, i32 0, i32 12, !dbg !3920
  %bf.load = load i8, i8* %was_renamed, align 1, !dbg !3921
  %bf.clear = and i8 %bf.load, -5, !dbg !3921
  %bf.set = or i8 %bf.clear, 4, !dbg !3921
  store i8 %bf.set, i8* %was_renamed, align 1, !dbg !3921
  %7 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !3922
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 11, !dbg !3922
  store i8 1, i8* %target_available, align 8, !dbg !3923
  ret void, !dbg !3924
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @create_insn_rtx_with_lhs(%struct.vinsn_def* %vi, %struct.rtx_def* %lhs_rtx) #0 !dbg !3925 {
entry:
  %vi.addr = alloca %struct.vinsn_def*, align 8
  %lhs_rtx.addr = alloca %struct.rtx_def*, align 8
  %rhs_rtx = alloca %struct.rtx_def*, align 8
  %pattern = alloca %struct.rtx_def*, align 8
  %insn_rtx = alloca %struct.rtx_def*, align 8
  store %struct.vinsn_def* %vi, %struct.vinsn_def** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vi.addr, metadata !3926, metadata !DIExpression()), !dbg !3927
  store %struct.rtx_def* %lhs_rtx, %struct.rtx_def** %lhs_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %lhs_rtx.addr, metadata !3928, metadata !DIExpression()), !dbg !3929
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %rhs_rtx, metadata !3930, metadata !DIExpression()), !dbg !3931
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pattern, metadata !3932, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn_rtx, metadata !3934, metadata !DIExpression()), !dbg !3935
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vi.addr, align 8, !dbg !3936
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i32 0, i32 1, !dbg !3936
  %rhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 2, !dbg !3936
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !3936
  %call = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1), !dbg !3937
  store %struct.rtx_def* %call, %struct.rtx_def** %rhs_rtx, align 8, !dbg !3938
  %2 = load %struct.rtx_def*, %struct.rtx_def** %lhs_rtx.addr, align 8, !dbg !3939
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rhs_rtx, align 8, !dbg !3939
  %call1 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %3), !dbg !3939
  store %struct.rtx_def* %call1, %struct.rtx_def** %pattern, align 8, !dbg !3940
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !3941
  %call2 = call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %4, %struct.rtx_def* null), !dbg !3942
  store %struct.rtx_def* %call2, %struct.rtx_def** %insn_rtx, align 8, !dbg !3943
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !3944
  ret %struct.rtx_def* %5, !dbg !3945
}

declare dso_local %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def*, i8 zeroext) #2

declare dso_local void @change_vinsn_in_expr(%struct._expr*, %struct.vinsn_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_spec_check_type_for_insn(%struct.rtx_def* %insn, %struct._expr* %expr) #0 !dbg !3946 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %struct._expr*, align 8
  %to_check_ds = alloca i32, align 4
  %already_checked_ds = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3949, metadata !DIExpression()), !dbg !3950
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !3951, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.declare(metadata i32* %to_check_ds, metadata !3953, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.declare(metadata i32* %already_checked_ds, metadata !3955, metadata !DIExpression()), !dbg !3956
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3957
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %0, null, !dbg !3957
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3957

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !3957
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i32 0, i32 0, !dbg !3957
  br label %cond.end, !dbg !3957

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3957

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3957
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3957
  %tobool1 = icmp ne %struct.VEC_int_heap* %2, null, !dbg !3957
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !3957

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3957
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i32 0, i32 0, !dbg !3957
  br label %cond.end5, !dbg !3957

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !3957

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !3957
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3957
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !3957
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3957
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3957
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3957
  %5 = load i32, i32* %rt_int, align 8, !dbg !3957
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %5), !dbg !3957
  %call7 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !3957
  %expr8 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i32 0, i32 0, !dbg !3957
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr8, i32 0, i32 7, !dbg !3957
  %6 = load i32, i32* %spec_done_ds, align 8, !dbg !3957
  store i32 %6, i32* %already_checked_ds, align 4, !dbg !3956
  %7 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !3958
  %spec_to_check_ds = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 8, !dbg !3958
  %8 = load i32, i32* %spec_to_check_ds, align 4, !dbg !3958
  store i32 %8, i32* %to_check_ds, align 4, !dbg !3959
  %9 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 34), align 8, !dbg !3960
  %tobool9 = icmp ne i32 (%struct.rtx_def*)* %9, null, !dbg !3962
  br i1 %tobool9, label %if.then, label %if.end, !dbg !3963

if.then:                                          ; preds = %cond.end5
  %10 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 34), align 8, !dbg !3964
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3965
  %call10 = call i32 %10(%struct.rtx_def* %11), !dbg !3966
  %12 = load i32, i32* %already_checked_ds, align 4, !dbg !3967
  %or = or i32 %12, %call10, !dbg !3967
  store i32 %or, i32* %already_checked_ds, align 4, !dbg !3967
  br label %if.end, !dbg !3968

if.end:                                           ; preds = %if.then, %cond.end5
  %13 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !3969
  %cmp = icmp ne %struct.spec_info_def* %13, null, !dbg !3971
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !3972

land.lhs.true:                                    ; preds = %if.end
  %14 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !3973
  %flags = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %14, i32 0, i32 4, !dbg !3974
  %15 = load i32, i32* %flags, align 8, !dbg !3974
  %and = and i32 %15, 8, !dbg !3975
  %tobool11 = icmp ne i32 %and, 0, !dbg !3975
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !3976

if.then12:                                        ; preds = %land.lhs.true
  %16 = load i32, i32* %already_checked_ds, align 4, !dbg !3977
  %or13 = or i32 %16, 258048, !dbg !3977
  store i32 %or13, i32* %already_checked_ds, align 4, !dbg !3977
  br label %if.end14, !dbg !3978

if.end14:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %17 = load i32, i32* %already_checked_ds, align 4, !dbg !3979
  %call15 = call i32 @ds_get_speculation_types(i32 %17), !dbg !3980
  store i32 %call15, i32* %already_checked_ds, align 4, !dbg !3981
  %18 = load i32, i32* %already_checked_ds, align 4, !dbg !3982
  %neg = xor i32 %18, -1, !dbg !3983
  %19 = load i32, i32* %to_check_ds, align 4, !dbg !3984
  %and16 = and i32 %19, %neg, !dbg !3984
  store i32 %and16, i32* %to_check_ds, align 4, !dbg !3984
  %20 = load i32, i32* %to_check_ds, align 4, !dbg !3985
  ret i32 %20, !dbg !3986
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @create_speculation_check(%struct._expr* %c_expr, i32 %check_ds, %struct.rtx_def* %orig_insn) #0 !dbg !3987 {
entry:
  %c_expr.addr = alloca %struct._expr*, align 8
  %check_ds.addr = alloca i32, align 4
  %orig_insn.addr = alloca %struct.rtx_def*, align 8
  %check_pattern = alloca %struct.rtx_def*, align 8
  %insn_rtx = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %recovery_block = alloca %struct.basic_block_def*, align 8
  %label = alloca %struct.rtx_def*, align 8
  %twin_rtx = alloca %struct.rtx_def*, align 8
  store %struct._expr* %c_expr, %struct._expr** %c_expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %c_expr.addr, metadata !3990, metadata !DIExpression()), !dbg !3991
  store i32 %check_ds, i32* %check_ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %check_ds.addr, metadata !3992, metadata !DIExpression()), !dbg !3993
  store %struct.rtx_def* %orig_insn, %struct.rtx_def** %orig_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %orig_insn.addr, metadata !3994, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %check_pattern, metadata !3996, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn_rtx, metadata !3998, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !4000, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %recovery_block, metadata !4002, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %label, metadata !4004, metadata !DIExpression()), !dbg !4005
  %0 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 29), align 8, !dbg !4006
  %1 = load i32, i32* %check_ds.addr, align 4, !dbg !4008
  %call = call zeroext i8 %0(i32 %1), !dbg !4009
  %conv = zext i8 %call to i32, !dbg !4009
  %tobool = icmp ne i32 %conv, 0, !dbg !4009
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4010

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4011
  %tobool1 = icmp ne %struct.VEC_sel_insn_data_def_heap* %2, null, !dbg !4011
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !4011

cond.true:                                        ; preds = %lor.lhs.false
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4011
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i32 0, i32 0, !dbg !4011
  br label %cond.end, !dbg !4011

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !4011

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4011
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4011
  %tobool2 = icmp ne %struct.VEC_int_heap* %4, null, !dbg !4011
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !4011

cond.true3:                                       ; preds = %cond.end
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4011
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i32 0, i32 0, !dbg !4011
  br label %cond.end6, !dbg !4011

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !4011

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi %struct.VEC_int_base* [ %base4, %cond.true3 ], [ null, %cond.false5 ], !dbg !4011
  %6 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn.addr, align 8, !dbg !4011
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !4011
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4011
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4011
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4011
  %7 = load i32, i32* %rt_int, align 8, !dbg !4011
  %call8 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond7, i32 %7), !dbg !4011
  %call9 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call8), !dbg !4011
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call9, i32 0, i32 0, !dbg !4011
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 7, !dbg !4011
  %8 = load i32, i32* %spec_done_ds, align 8, !dbg !4011
  %cmp = icmp ne i32 %8, 0, !dbg !4012
  br i1 %cmp, label %if.then, label %if.else, !dbg !4013

if.then:                                          ; preds = %cond.end6, %entry
  %9 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn.addr, align 8, !dbg !4014
  %call11 = call %struct.basic_block_def* @sel_create_recovery_block(%struct.rtx_def* %9), !dbg !4016
  store %struct.basic_block_def* %call11, %struct.basic_block_def** %recovery_block, align 8, !dbg !4017
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !4018
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i32 0, i32 7, !dbg !4018
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4018
  %11 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4018
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %11, i32 0, i32 0, !dbg !4018
  %12 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4018
  store %struct.rtx_def* %12, %struct.rtx_def** %label, align 8, !dbg !4019
  br label %if.end, !dbg !4020

if.else:                                          ; preds = %cond.end6
  store %struct.basic_block_def* null, %struct.basic_block_def** %recovery_block, align 8, !dbg !4021
  store %struct.rtx_def* null, %struct.rtx_def** %label, align 8, !dbg !4023
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 30), align 8, !dbg !4024
  %14 = load %struct._expr*, %struct._expr** %c_expr.addr, align 8, !dbg !4025
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %14, i32 0, i32 0, !dbg !4025
  %15 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4025
  %insn_rtx12 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %15, i32 0, i32 0, !dbg !4025
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx12, align 8, !dbg !4025
  %17 = load %struct.rtx_def*, %struct.rtx_def** %label, align 8, !dbg !4026
  %18 = load i32, i32* %check_ds.addr, align 4, !dbg !4027
  %call13 = call %struct.rtx_def* %13(%struct.rtx_def* %16, %struct.rtx_def* %17, i32 %18), !dbg !4028
  store %struct.rtx_def* %call13, %struct.rtx_def** %check_pattern, align 8, !dbg !4029
  %19 = load %struct.rtx_def*, %struct.rtx_def** %check_pattern, align 8, !dbg !4030
  %cmp14 = icmp ne %struct.rtx_def* %19, null, !dbg !4030
  br i1 %cmp14, label %cond.false17, label %cond.true16, !dbg !4030

cond.true16:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1847, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4030
  br label %cond.end18, !dbg !4030

cond.false17:                                     ; preds = %if.end
  br label %cond.end18, !dbg !4030

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i32 [ 0, %cond.true16 ], [ 0, %cond.false17 ], !dbg !4030
  %20 = load %struct.rtx_def*, %struct.rtx_def** %check_pattern, align 8, !dbg !4031
  %21 = load %struct.rtx_def*, %struct.rtx_def** %label, align 8, !dbg !4032
  %call20 = call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %20, %struct.rtx_def* %21), !dbg !4033
  store %struct.rtx_def* %call20, %struct.rtx_def** %insn_rtx, align 8, !dbg !4034
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4035
  %23 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4036
  %tobool21 = icmp ne %struct.VEC_sel_insn_data_def_heap* %23, null, !dbg !4036
  br i1 %tobool21, label %cond.true22, label %cond.false24, !dbg !4036

cond.true22:                                      ; preds = %cond.end18
  %24 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4036
  %base23 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %24, i32 0, i32 0, !dbg !4036
  br label %cond.end25, !dbg !4036

cond.false24:                                     ; preds = %cond.end18
  br label %cond.end25, !dbg !4036

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi %struct.VEC_sel_insn_data_def_base* [ %base23, %cond.true22 ], [ null, %cond.false24 ], !dbg !4036
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4036
  %tobool27 = icmp ne %struct.VEC_int_heap* %25, null, !dbg !4036
  br i1 %tobool27, label %cond.true28, label %cond.false30, !dbg !4036

cond.true28:                                      ; preds = %cond.end25
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4036
  %base29 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %26, i32 0, i32 0, !dbg !4036
  br label %cond.end31, !dbg !4036

cond.false30:                                     ; preds = %cond.end25
  br label %cond.end31, !dbg !4036

cond.end31:                                       ; preds = %cond.false30, %cond.true28
  %cond32 = phi %struct.VEC_int_base* [ %base29, %cond.true28 ], [ null, %cond.false30 ], !dbg !4036
  %27 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn.addr, align 8, !dbg !4036
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !4036
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !4036
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !4036
  %rt_int36 = bitcast %union.rtunion_def* %arrayidx35 to i32*, !dbg !4036
  %28 = load i32, i32* %rt_int36, align 8, !dbg !4036
  %call37 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond32, i32 %28), !dbg !4036
  %call38 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond26, i32 %call37), !dbg !4036
  %expr39 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call38, i32 0, i32 0, !dbg !4036
  %29 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4037
  %tobool40 = icmp ne %struct.VEC_sel_insn_data_def_heap* %29, null, !dbg !4037
  br i1 %tobool40, label %cond.true41, label %cond.false43, !dbg !4037

cond.true41:                                      ; preds = %cond.end31
  %30 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4037
  %base42 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %30, i32 0, i32 0, !dbg !4037
  br label %cond.end44, !dbg !4037

cond.false43:                                     ; preds = %cond.end31
  br label %cond.end44, !dbg !4037

cond.end44:                                       ; preds = %cond.false43, %cond.true41
  %cond45 = phi %struct.VEC_sel_insn_data_def_base* [ %base42, %cond.true41 ], [ null, %cond.false43 ], !dbg !4037
  %31 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4037
  %tobool46 = icmp ne %struct.VEC_int_heap* %31, null, !dbg !4037
  br i1 %tobool46, label %cond.true47, label %cond.false49, !dbg !4037

cond.true47:                                      ; preds = %cond.end44
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4037
  %base48 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %32, i32 0, i32 0, !dbg !4037
  br label %cond.end50, !dbg !4037

cond.false49:                                     ; preds = %cond.end44
  br label %cond.end50, !dbg !4037

cond.end50:                                       ; preds = %cond.false49, %cond.true47
  %cond51 = phi %struct.VEC_int_base* [ %base48, %cond.true47 ], [ null, %cond.false49 ], !dbg !4037
  %33 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn.addr, align 8, !dbg !4037
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !4037
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !4037
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 0, !dbg !4037
  %rt_int55 = bitcast %union.rtunion_def* %arrayidx54 to i32*, !dbg !4037
  %34 = load i32, i32* %rt_int55, align 8, !dbg !4037
  %call56 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond51, i32 %34), !dbg !4037
  %call57 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond45, i32 %call56), !dbg !4037
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call57, i32 0, i32 2, !dbg !4037
  %35 = load i32, i32* %seqno, align 4, !dbg !4037
  %36 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn.addr, align 8, !dbg !4038
  %call58 = call %struct.rtx_def* @sel_gen_insn_from_rtx_after(%struct.rtx_def* %22, %struct._expr* %expr39, i32 %35, %struct.rtx_def* %36), !dbg !4039
  store %struct.rtx_def* %call58, %struct.rtx_def** %insn, align 8, !dbg !4040
  %37 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4041
  %tobool59 = icmp ne %struct.VEC_sel_insn_data_def_heap* %37, null, !dbg !4041
  br i1 %tobool59, label %cond.true60, label %cond.false62, !dbg !4041

cond.true60:                                      ; preds = %cond.end50
  %38 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4041
  %base61 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %38, i32 0, i32 0, !dbg !4041
  br label %cond.end63, !dbg !4041

cond.false62:                                     ; preds = %cond.end50
  br label %cond.end63, !dbg !4041

cond.end63:                                       ; preds = %cond.false62, %cond.true60
  %cond64 = phi %struct.VEC_sel_insn_data_def_base* [ %base61, %cond.true60 ], [ null, %cond.false62 ], !dbg !4041
  %39 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4041
  %tobool65 = icmp ne %struct.VEC_int_heap* %39, null, !dbg !4041
  br i1 %tobool65, label %cond.true66, label %cond.false68, !dbg !4041

cond.true66:                                      ; preds = %cond.end63
  %40 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4041
  %base67 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %40, i32 0, i32 0, !dbg !4041
  br label %cond.end69, !dbg !4041

cond.false68:                                     ; preds = %cond.end63
  br label %cond.end69, !dbg !4041

cond.end69:                                       ; preds = %cond.false68, %cond.true66
  %cond70 = phi %struct.VEC_int_base* [ %base67, %cond.true66 ], [ null, %cond.false68 ], !dbg !4041
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4041
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !4041
  %fld72 = bitcast %union.u* %u71 to [1 x %union.rtunion_def]*, !dbg !4041
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i64 0, i64 0, !dbg !4041
  %rt_int74 = bitcast %union.rtunion_def* %arrayidx73 to i32*, !dbg !4041
  %42 = load i32, i32* %rt_int74, align 8, !dbg !4041
  %call75 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond70, i32 %42), !dbg !4041
  %call76 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond64, i32 %call75), !dbg !4041
  %expr77 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call76, i32 0, i32 0, !dbg !4041
  %spec_done_ds78 = getelementptr inbounds %struct._expr, %struct._expr* %expr77, i32 0, i32 7, !dbg !4041
  store i32 0, i32* %spec_done_ds78, align 8, !dbg !4042
  %43 = load i32, i32* %check_ds.addr, align 4, !dbg !4043
  %44 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4044
  %tobool79 = icmp ne %struct.VEC_sel_insn_data_def_heap* %44, null, !dbg !4044
  br i1 %tobool79, label %cond.true80, label %cond.false82, !dbg !4044

cond.true80:                                      ; preds = %cond.end69
  %45 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4044
  %base81 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %45, i32 0, i32 0, !dbg !4044
  br label %cond.end83, !dbg !4044

cond.false82:                                     ; preds = %cond.end69
  br label %cond.end83, !dbg !4044

cond.end83:                                       ; preds = %cond.false82, %cond.true80
  %cond84 = phi %struct.VEC_sel_insn_data_def_base* [ %base81, %cond.true80 ], [ null, %cond.false82 ], !dbg !4044
  %46 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4044
  %tobool85 = icmp ne %struct.VEC_int_heap* %46, null, !dbg !4044
  br i1 %tobool85, label %cond.true86, label %cond.false88, !dbg !4044

cond.true86:                                      ; preds = %cond.end83
  %47 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4044
  %base87 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %47, i32 0, i32 0, !dbg !4044
  br label %cond.end89, !dbg !4044

cond.false88:                                     ; preds = %cond.end83
  br label %cond.end89, !dbg !4044

cond.end89:                                       ; preds = %cond.false88, %cond.true86
  %cond90 = phi %struct.VEC_int_base* [ %base87, %cond.true86 ], [ null, %cond.false88 ], !dbg !4044
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4044
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !4044
  %fld92 = bitcast %union.u* %u91 to [1 x %union.rtunion_def]*, !dbg !4044
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i64 0, i64 0, !dbg !4044
  %rt_int94 = bitcast %union.rtunion_def* %arrayidx93 to i32*, !dbg !4044
  %49 = load i32, i32* %rt_int94, align 8, !dbg !4044
  %call95 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond90, i32 %49), !dbg !4044
  %call96 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond84, i32 %call95), !dbg !4044
  %spec_checked_ds = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call96, i32 0, i32 12, !dbg !4044
  store i32 %43, i32* %spec_checked_ds, align 8, !dbg !4045
  %50 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4046
  %tobool97 = icmp ne %struct.VEC_sel_insn_data_def_heap* %50, null, !dbg !4046
  br i1 %tobool97, label %cond.true98, label %cond.false100, !dbg !4046

cond.true98:                                      ; preds = %cond.end89
  %51 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4046
  %base99 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %51, i32 0, i32 0, !dbg !4046
  br label %cond.end101, !dbg !4046

cond.false100:                                    ; preds = %cond.end89
  br label %cond.end101, !dbg !4046

cond.end101:                                      ; preds = %cond.false100, %cond.true98
  %cond102 = phi %struct.VEC_sel_insn_data_def_base* [ %base99, %cond.true98 ], [ null, %cond.false100 ], !dbg !4046
  %52 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4046
  %tobool103 = icmp ne %struct.VEC_int_heap* %52, null, !dbg !4046
  br i1 %tobool103, label %cond.true104, label %cond.false106, !dbg !4046

cond.true104:                                     ; preds = %cond.end101
  %53 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4046
  %base105 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %53, i32 0, i32 0, !dbg !4046
  br label %cond.end107, !dbg !4046

cond.false106:                                    ; preds = %cond.end101
  br label %cond.end107, !dbg !4046

cond.end107:                                      ; preds = %cond.false106, %cond.true104
  %cond108 = phi %struct.VEC_int_base* [ %base105, %cond.true104 ], [ null, %cond.false106 ], !dbg !4046
  %54 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn.addr, align 8, !dbg !4046
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !4046
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !4046
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 0, !dbg !4046
  %rt_int112 = bitcast %union.rtunion_def* %arrayidx111 to i32*, !dbg !4046
  %55 = load i32, i32* %rt_int112, align 8, !dbg !4046
  %call113 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond108, i32 %55), !dbg !4046
  %call114 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond102, i32 %call113), !dbg !4046
  %expr115 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call114, i32 0, i32 0, !dbg !4046
  %vinsn116 = getelementptr inbounds %struct._expr, %struct._expr* %expr115, i32 0, i32 0, !dbg !4046
  %56 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn116, align 8, !dbg !4046
  %call117 = call i32 @sel_vinsn_cost(%struct.vinsn_def* %56), !dbg !4047
  %57 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4048
  %tobool118 = icmp ne %struct.VEC_sel_insn_data_def_heap* %57, null, !dbg !4048
  br i1 %tobool118, label %cond.true119, label %cond.false121, !dbg !4048

cond.true119:                                     ; preds = %cond.end107
  %58 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4048
  %base120 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %58, i32 0, i32 0, !dbg !4048
  br label %cond.end122, !dbg !4048

cond.false121:                                    ; preds = %cond.end107
  br label %cond.end122, !dbg !4048

cond.end122:                                      ; preds = %cond.false121, %cond.true119
  %cond123 = phi %struct.VEC_sel_insn_data_def_base* [ %base120, %cond.true119 ], [ null, %cond.false121 ], !dbg !4048
  %59 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4048
  %tobool124 = icmp ne %struct.VEC_int_heap* %59, null, !dbg !4048
  br i1 %tobool124, label %cond.true125, label %cond.false127, !dbg !4048

cond.true125:                                     ; preds = %cond.end122
  %60 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4048
  %base126 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %60, i32 0, i32 0, !dbg !4048
  br label %cond.end128, !dbg !4048

cond.false127:                                    ; preds = %cond.end122
  br label %cond.end128, !dbg !4048

cond.end128:                                      ; preds = %cond.false127, %cond.true125
  %cond129 = phi %struct.VEC_int_base* [ %base126, %cond.true125 ], [ null, %cond.false127 ], !dbg !4048
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4048
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !4048
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !4048
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 0, !dbg !4048
  %rt_int133 = bitcast %union.rtunion_def* %arrayidx132 to i32*, !dbg !4048
  %62 = load i32, i32* %rt_int133, align 8, !dbg !4048
  %call134 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond129, i32 %62), !dbg !4048
  %call135 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond123, i32 %call134), !dbg !4048
  %expr136 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call135, i32 0, i32 0, !dbg !4048
  %vinsn137 = getelementptr inbounds %struct._expr, %struct._expr* %expr136, i32 0, i32 0, !dbg !4048
  %63 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn137, align 8, !dbg !4048
  %call138 = call i32 @sel_vinsn_cost(%struct.vinsn_def* %63), !dbg !4049
  %sub = sub nsw i32 %call117, %call138, !dbg !4050
  %64 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4051
  %tobool139 = icmp ne %struct.VEC_sel_insn_data_def_heap* %64, null, !dbg !4051
  br i1 %tobool139, label %cond.true140, label %cond.false142, !dbg !4051

cond.true140:                                     ; preds = %cond.end128
  %65 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4051
  %base141 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %65, i32 0, i32 0, !dbg !4051
  br label %cond.end143, !dbg !4051

cond.false142:                                    ; preds = %cond.end128
  br label %cond.end143, !dbg !4051

cond.end143:                                      ; preds = %cond.false142, %cond.true140
  %cond144 = phi %struct.VEC_sel_insn_data_def_base* [ %base141, %cond.true140 ], [ null, %cond.false142 ], !dbg !4051
  %66 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4051
  %tobool145 = icmp ne %struct.VEC_int_heap* %66, null, !dbg !4051
  br i1 %tobool145, label %cond.true146, label %cond.false148, !dbg !4051

cond.true146:                                     ; preds = %cond.end143
  %67 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4051
  %base147 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %67, i32 0, i32 0, !dbg !4051
  br label %cond.end149, !dbg !4051

cond.false148:                                    ; preds = %cond.end143
  br label %cond.end149, !dbg !4051

cond.end149:                                      ; preds = %cond.false148, %cond.true146
  %cond150 = phi %struct.VEC_int_base* [ %base147, %cond.true146 ], [ null, %cond.false148 ], !dbg !4051
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4051
  %u151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !4051
  %fld152 = bitcast %union.u* %u151 to [1 x %union.rtunion_def]*, !dbg !4051
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i64 0, i64 0, !dbg !4051
  %rt_int154 = bitcast %union.rtunion_def* %arrayidx153 to i32*, !dbg !4051
  %69 = load i32, i32* %rt_int154, align 8, !dbg !4051
  %call155 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond150, i32 %69), !dbg !4051
  %call156 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond144, i32 %call155), !dbg !4051
  %expr157 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call156, i32 0, i32 0, !dbg !4051
  %priority = getelementptr inbounds %struct._expr, %struct._expr* %expr157, i32 0, i32 3, !dbg !4051
  %70 = load i32, i32* %priority, align 8, !dbg !4052
  %sub158 = sub nsw i32 %70, %sub, !dbg !4052
  store i32 %sub158, i32* %priority, align 8, !dbg !4052
  %71 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !4053
  %cmp159 = icmp ne %struct.basic_block_def* %71, null, !dbg !4055
  br i1 %cmp159, label %if.then161, label %if.end209, !dbg !4056

if.then161:                                       ; preds = %cond.end149
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %twin_rtx, metadata !4057, metadata !DIExpression()), !dbg !4059
  %72 = load %struct._expr*, %struct._expr** %c_expr.addr, align 8, !dbg !4060
  %vinsn162 = getelementptr inbounds %struct._expr, %struct._expr* %72, i32 0, i32 0, !dbg !4060
  %73 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn162, align 8, !dbg !4060
  %insn_rtx163 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %73, i32 0, i32 0, !dbg !4060
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx163, align 8, !dbg !4060
  %u164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1, !dbg !4060
  %fld165 = bitcast %union.u* %u164 to [1 x %union.rtunion_def]*, !dbg !4060
  %arrayidx166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld165, i64 0, i64 5, !dbg !4060
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx166 to %struct.rtx_def**, !dbg !4060
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4060
  %call167 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %75), !dbg !4061
  store %struct.rtx_def* %call167, %struct.rtx_def** %twin_rtx, align 8, !dbg !4062
  %76 = load %struct.rtx_def*, %struct.rtx_def** %twin_rtx, align 8, !dbg !4063
  %call168 = call %struct.rtx_def* @create_insn_rtx_from_pattern(%struct.rtx_def* %76, %struct.rtx_def* null), !dbg !4064
  store %struct.rtx_def* %call168, %struct.rtx_def** %twin_rtx, align 8, !dbg !4065
  %77 = load %struct.rtx_def*, %struct.rtx_def** %twin_rtx, align 8, !dbg !4066
  %78 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4067
  %tobool169 = icmp ne %struct.VEC_sel_insn_data_def_heap* %78, null, !dbg !4067
  br i1 %tobool169, label %cond.true170, label %cond.false172, !dbg !4067

cond.true170:                                     ; preds = %if.then161
  %79 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4067
  %base171 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %79, i32 0, i32 0, !dbg !4067
  br label %cond.end173, !dbg !4067

cond.false172:                                    ; preds = %if.then161
  br label %cond.end173, !dbg !4067

cond.end173:                                      ; preds = %cond.false172, %cond.true170
  %cond174 = phi %struct.VEC_sel_insn_data_def_base* [ %base171, %cond.true170 ], [ null, %cond.false172 ], !dbg !4067
  %80 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4067
  %tobool175 = icmp ne %struct.VEC_int_heap* %80, null, !dbg !4067
  br i1 %tobool175, label %cond.true176, label %cond.false178, !dbg !4067

cond.true176:                                     ; preds = %cond.end173
  %81 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4067
  %base177 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %81, i32 0, i32 0, !dbg !4067
  br label %cond.end179, !dbg !4067

cond.false178:                                    ; preds = %cond.end173
  br label %cond.end179, !dbg !4067

cond.end179:                                      ; preds = %cond.false178, %cond.true176
  %cond180 = phi %struct.VEC_int_base* [ %base177, %cond.true176 ], [ null, %cond.false178 ], !dbg !4067
  %82 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn.addr, align 8, !dbg !4067
  %u181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1, !dbg !4067
  %fld182 = bitcast %union.u* %u181 to [1 x %union.rtunion_def]*, !dbg !4067
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i64 0, i64 0, !dbg !4067
  %rt_int184 = bitcast %union.rtunion_def* %arrayidx183 to i32*, !dbg !4067
  %83 = load i32, i32* %rt_int184, align 8, !dbg !4067
  %call185 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond180, i32 %83), !dbg !4067
  %call186 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond174, i32 %call185), !dbg !4067
  %expr187 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call186, i32 0, i32 0, !dbg !4067
  %84 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4068
  %tobool188 = icmp ne %struct.VEC_sel_insn_data_def_heap* %84, null, !dbg !4068
  br i1 %tobool188, label %cond.true189, label %cond.false191, !dbg !4068

cond.true189:                                     ; preds = %cond.end179
  %85 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4068
  %base190 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %85, i32 0, i32 0, !dbg !4068
  br label %cond.end192, !dbg !4068

cond.false191:                                    ; preds = %cond.end179
  br label %cond.end192, !dbg !4068

cond.end192:                                      ; preds = %cond.false191, %cond.true189
  %cond193 = phi %struct.VEC_sel_insn_data_def_base* [ %base190, %cond.true189 ], [ null, %cond.false191 ], !dbg !4068
  %86 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4068
  %tobool194 = icmp ne %struct.VEC_int_heap* %86, null, !dbg !4068
  br i1 %tobool194, label %cond.true195, label %cond.false197, !dbg !4068

cond.true195:                                     ; preds = %cond.end192
  %87 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4068
  %base196 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %87, i32 0, i32 0, !dbg !4068
  br label %cond.end198, !dbg !4068

cond.false197:                                    ; preds = %cond.end192
  br label %cond.end198, !dbg !4068

cond.end198:                                      ; preds = %cond.false197, %cond.true195
  %cond199 = phi %struct.VEC_int_base* [ %base196, %cond.true195 ], [ null, %cond.false197 ], !dbg !4068
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4068
  %u200 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1, !dbg !4068
  %fld201 = bitcast %union.u* %u200 to [1 x %union.rtunion_def]*, !dbg !4068
  %arrayidx202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld201, i64 0, i64 0, !dbg !4068
  %rt_int203 = bitcast %union.rtunion_def* %arrayidx202 to i32*, !dbg !4068
  %89 = load i32, i32* %rt_int203, align 8, !dbg !4068
  %call204 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond199, i32 %89), !dbg !4068
  %call205 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond193, i32 %call204), !dbg !4068
  %seqno206 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call205, i32 0, i32 2, !dbg !4068
  %90 = load i32, i32* %seqno206, align 4, !dbg !4068
  %91 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !4069
  %call207 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %91), !dbg !4070
  %call208 = call %struct.rtx_def* @sel_gen_recovery_insn_from_rtx_after(%struct.rtx_def* %77, %struct._expr* %expr187, i32 %90, %struct.rtx_def* %call207), !dbg !4071
  br label %if.end209, !dbg !4072

if.end209:                                        ; preds = %cond.end198, %cond.end149
  %92 = load i32, i32* %check_ds.addr, align 4, !dbg !4073
  %call210 = call i32 @ds_get_max_dep_weak(i32 %92), !dbg !4074
  store i32 %call210, i32* %check_ds.addr, align 4, !dbg !4075
  %93 = load %struct._expr*, %struct._expr** %c_expr.addr, align 8, !dbg !4076
  %94 = load i32, i32* %check_ds.addr, align 4, !dbg !4077
  %call211 = call i32 @speculate_expr(%struct._expr* %93, i32 %94), !dbg !4078
  %95 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4079
  ret %struct.rtx_def* %95, !dbg !4080
}

declare dso_local i32 @ds_get_speculation_types(i32) #2

declare dso_local %struct.basic_block_def* @sel_create_recovery_block(%struct.rtx_def*) #2

declare dso_local i32 @sel_vinsn_cost(%struct.vinsn_def*) #2

declare dso_local %struct.rtx_def* @sel_gen_recovery_insn_from_rtx_after(%struct.rtx_def*, %struct._expr*, i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @bb_note(%struct.basic_block_def*) #2

declare dso_local i32 @ds_get_max_dep_weak(i32) #2

declare dso_local i32 @speculate_expr(%struct._expr*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @need_nop_to_preserve_insn_bb(%struct.rtx_def* %insn) #0 !dbg !4081 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %bb_head = alloca %struct.rtx_def*, align 8
  %bb_end = alloca %struct.rtx_def*, align 8
  %bb_next = alloca %struct.rtx_def*, align 8
  %in_next = alloca %struct.rtx_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4084, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %bb_head, metadata !4086, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %bb_end, metadata !4088, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %bb_next, metadata !4090, metadata !DIExpression()), !dbg !4091
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in_next, metadata !4092, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !4094, metadata !DIExpression()), !dbg !4095
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4096
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4096
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4096
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !4096
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !4096
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4096
  store %struct.basic_block_def* %1, %struct.basic_block_def** %bb, align 8, !dbg !4095
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4097
  %call = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %2), !dbg !4098
  store %struct.rtx_def* %call, %struct.rtx_def** %bb_head, align 8, !dbg !4099
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4100
  %call1 = call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %3), !dbg !4101
  store %struct.rtx_def* %call1, %struct.rtx_def** %bb_end, align 8, !dbg !4102
  %4 = load %struct.rtx_def*, %struct.rtx_def** %bb_head, align 8, !dbg !4103
  %5 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !4105
  %cmp = icmp eq %struct.rtx_def* %4, %5, !dbg !4106
  br i1 %cmp, label %if.then, label %if.end, !dbg !4107

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !4108
  br label %return, !dbg !4108

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !4109

while.cond:                                       ; preds = %while.body, %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %bb_head, align 8, !dbg !4110
  %7 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !4111
  %cmp2 = icmp ne %struct.rtx_def* %6, %7, !dbg !4112
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !4113

land.rhs:                                         ; preds = %while.cond
  %8 = load %struct.rtx_def*, %struct.rtx_def** %bb_head, align 8, !dbg !4114
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !4114
  %bf.load = load i32, i32* %9, align 8, !dbg !4114
  %bf.clear = and i32 %bf.load, 65535, !dbg !4114
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4114
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ], !dbg !4115
  br i1 %10, label %while.body, label %while.end, !dbg !4109

while.body:                                       ; preds = %land.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %bb_head, align 8, !dbg !4116
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !4116
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !4116
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 2, !dbg !4116
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !4116
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4116
  store %struct.rtx_def* %12, %struct.rtx_def** %bb_head, align 8, !dbg !4117
  br label %while.cond, !dbg !4109, !llvm.loop !4118

while.end:                                        ; preds = %land.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %bb_head, align 8, !dbg !4119
  %14 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !4121
  %cmp7 = icmp eq %struct.rtx_def* %13, %14, !dbg !4122
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4123

if.then8:                                         ; preds = %while.end
  store i8 1, i8* %retval, align 1, !dbg !4124
  br label %return, !dbg !4124

if.end9:                                          ; preds = %while.end
  br label %while.cond10, !dbg !4125

while.cond10:                                     ; preds = %while.body17, %if.end9
  %15 = load %struct.rtx_def*, %struct.rtx_def** %bb_head, align 8, !dbg !4126
  %16 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !4127
  %cmp11 = icmp ne %struct.rtx_def* %15, %16, !dbg !4128
  br i1 %cmp11, label %land.rhs12, label %land.end16, !dbg !4129

land.rhs12:                                       ; preds = %while.cond10
  %17 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !4130
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !4130
  %bf.load13 = load i32, i32* %18, align 8, !dbg !4130
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !4130
  %cmp15 = icmp eq i32 %bf.clear14, 7, !dbg !4130
  br label %land.end16

land.end16:                                       ; preds = %land.rhs12, %while.cond10
  %19 = phi i1 [ false, %while.cond10 ], [ %cmp15, %land.rhs12 ], !dbg !4115
  br i1 %19, label %while.body17, label %while.end22, !dbg !4125

while.body17:                                     ; preds = %land.end16
  %20 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !4131
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !4131
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !4131
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 1, !dbg !4131
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !4131
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !4131
  store %struct.rtx_def* %21, %struct.rtx_def** %bb_end, align 8, !dbg !4132
  br label %while.cond10, !dbg !4125, !llvm.loop !4133

while.end22:                                      ; preds = %land.end16
  %22 = load %struct.rtx_def*, %struct.rtx_def** %bb_head, align 8, !dbg !4134
  %23 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !4136
  %cmp23 = icmp eq %struct.rtx_def* %22, %23, !dbg !4137
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !4138

if.then24:                                        ; preds = %while.end22
  store i8 1, i8* %retval, align 1, !dbg !4139
  br label %return, !dbg !4139

if.end25:                                         ; preds = %while.end22
  %24 = load %struct.rtx_def*, %struct.rtx_def** %bb_head, align 8, !dbg !4140
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !4140
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !4140
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 2, !dbg !4140
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !4140
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !4140
  store %struct.rtx_def* %25, %struct.rtx_def** %bb_next, align 8, !dbg !4141
  br label %while.cond30, !dbg !4142

while.cond30:                                     ; preds = %while.body37, %if.end25
  %26 = load %struct.rtx_def*, %struct.rtx_def** %bb_next, align 8, !dbg !4143
  %27 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !4144
  %cmp31 = icmp ne %struct.rtx_def* %26, %27, !dbg !4145
  br i1 %cmp31, label %land.rhs32, label %land.end36, !dbg !4146

land.rhs32:                                       ; preds = %while.cond30
  %28 = load %struct.rtx_def*, %struct.rtx_def** %bb_next, align 8, !dbg !4147
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !4147
  %bf.load33 = load i32, i32* %29, align 8, !dbg !4147
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !4147
  %cmp35 = icmp eq i32 %bf.clear34, 7, !dbg !4147
  br label %land.end36

land.end36:                                       ; preds = %land.rhs32, %while.cond30
  %30 = phi i1 [ false, %while.cond30 ], [ %cmp35, %land.rhs32 ], !dbg !4115
  br i1 %30, label %while.body37, label %while.end42, !dbg !4142

while.body37:                                     ; preds = %land.end36
  %31 = load %struct.rtx_def*, %struct.rtx_def** %bb_next, align 8, !dbg !4148
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !4148
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !4148
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 2, !dbg !4148
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !4148
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !4148
  store %struct.rtx_def* %32, %struct.rtx_def** %bb_next, align 8, !dbg !4149
  br label %while.cond30, !dbg !4142, !llvm.loop !4150

while.end42:                                      ; preds = %land.end36
  %33 = load %struct.rtx_def*, %struct.rtx_def** %bb_next, align 8, !dbg !4151
  %34 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !4153
  %cmp43 = icmp eq %struct.rtx_def* %33, %34, !dbg !4154
  br i1 %cmp43, label %land.lhs.true, label %if.end48, !dbg !4155

land.lhs.true:                                    ; preds = %while.end42
  %35 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !4156
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !4156
  %bf.load44 = load i32, i32* %36, align 8, !dbg !4156
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !4156
  %cmp46 = icmp eq i32 %bf.clear45, 9, !dbg !4156
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !4157

if.then47:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !4158
  br label %return, !dbg !4158

if.end48:                                         ; preds = %land.lhs.true, %while.end42
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4159
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !4159
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !4159
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 2, !dbg !4159
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !4159
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !4159
  store %struct.rtx_def* %38, %struct.rtx_def** %in_next, align 8, !dbg !4160
  br label %while.cond53, !dbg !4161

while.cond53:                                     ; preds = %while.body57, %if.end48
  %39 = load %struct.rtx_def*, %struct.rtx_def** %in_next, align 8, !dbg !4162
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !4162
  %bf.load54 = load i32, i32* %40, align 8, !dbg !4162
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !4162
  %cmp56 = icmp eq i32 %bf.clear55, 7, !dbg !4162
  br i1 %cmp56, label %while.body57, label %while.end62, !dbg !4161

while.body57:                                     ; preds = %while.cond53
  %41 = load %struct.rtx_def*, %struct.rtx_def** %in_next, align 8, !dbg !4163
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !4163
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !4163
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 2, !dbg !4163
  %rt_rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**, !dbg !4163
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !4163
  store %struct.rtx_def* %42, %struct.rtx_def** %in_next, align 8, !dbg !4164
  br label %while.cond53, !dbg !4161, !llvm.loop !4165

while.end62:                                      ; preds = %while.cond53
  %43 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !4166
  %44 = load %struct.rtx_def*, %struct.rtx_def** %in_next, align 8, !dbg !4166
  %call63 = call %struct._fence* @flist_lookup(%struct._list_node* %43, %struct.rtx_def* %44), !dbg !4166
  %cmp64 = icmp ne %struct._fence* %call63, null, !dbg !4166
  br i1 %cmp64, label %if.then65, label %if.end66, !dbg !4168

if.then65:                                        ; preds = %while.end62
  store i8 1, i8* %retval, align 1, !dbg !4169
  br label %return, !dbg !4169

if.end66:                                         ; preds = %while.end62
  store i8 0, i8* %retval, align 1, !dbg !4170
  br label %return, !dbg !4170

return:                                           ; preds = %if.end66, %if.then65, %if.then47, %if.then24, %if.then8, %if.then
  %45 = load i8, i8* %retval, align 1, !dbg !4171
  ret i8 %45, !dbg !4171
}

declare dso_local %struct.rtx_def* @get_nop_from_pool(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def** @VEC_insn_t_heap_safe_push(%struct.VEC_insn_t_heap** %vec_, %struct.rtx_def* %obj_) #0 !dbg !4172 {
entry:
  %vec_.addr = alloca %struct.VEC_insn_t_heap**, align 8
  %obj_.addr = alloca %struct.rtx_def*, align 8
  store %struct.VEC_insn_t_heap** %vec_, %struct.VEC_insn_t_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_insn_t_heap*** %vec_.addr, metadata !4177, metadata !DIExpression()), !dbg !4178
  store %struct.rtx_def* %obj_, %struct.rtx_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %obj_.addr, metadata !4179, metadata !DIExpression()), !dbg !4178
  %0 = load %struct.VEC_insn_t_heap**, %struct.VEC_insn_t_heap*** %vec_.addr, align 8, !dbg !4178
  %call = call i32 @VEC_insn_t_heap_reserve(%struct.VEC_insn_t_heap** %0, i32 1), !dbg !4178
  %1 = load %struct.VEC_insn_t_heap**, %struct.VEC_insn_t_heap*** %vec_.addr, align 8, !dbg !4178
  %2 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** %1, align 8, !dbg !4178
  %tobool = icmp ne %struct.VEC_insn_t_heap* %2, null, !dbg !4178
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4178

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_insn_t_heap**, %struct.VEC_insn_t_heap*** %vec_.addr, align 8, !dbg !4178
  %4 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** %3, align 8, !dbg !4178
  %base = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %4, i32 0, i32 0, !dbg !4178
  br label %cond.end, !dbg !4178

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4178

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_insn_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4178
  %5 = load %struct.rtx_def*, %struct.rtx_def** %obj_.addr, align 8, !dbg !4178
  %call1 = call %struct.rtx_def** @VEC_insn_t_base_quick_push(%struct.VEC_insn_t_base* %cond, %struct.rtx_def* %5), !dbg !4178
  ret %struct.rtx_def** %call1, !dbg !4178
}

declare dso_local zeroext i8 @sel_remove_insn(%struct.rtx_def*, i8 zeroext, i8 zeroext) #2

declare dso_local %struct.rtx_def* @sel_bb_end(%struct.basic_block_def*) #2

declare dso_local %struct._fence* @flist_lookup(%struct._list_node*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_insn_t_heap_reserve(%struct.VEC_insn_t_heap** %vec_, i32 %alloc_) #0 !dbg !4180 {
entry:
  %vec_.addr = alloca %struct.VEC_insn_t_heap**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_insn_t_heap** %vec_, %struct.VEC_insn_t_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_insn_t_heap*** %vec_.addr, metadata !4183, metadata !DIExpression()), !dbg !4184
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !4185, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !4186, metadata !DIExpression()), !dbg !4184
  %0 = load %struct.VEC_insn_t_heap**, %struct.VEC_insn_t_heap*** %vec_.addr, align 8, !dbg !4184
  %1 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** %0, align 8, !dbg !4184
  %tobool = icmp ne %struct.VEC_insn_t_heap* %1, null, !dbg !4184
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4184

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_insn_t_heap**, %struct.VEC_insn_t_heap*** %vec_.addr, align 8, !dbg !4184
  %3 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** %2, align 8, !dbg !4184
  %base = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %3, i32 0, i32 0, !dbg !4184
  br label %cond.end, !dbg !4184

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4184

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_insn_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4184
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !4184
  %call = call i32 @VEC_insn_t_base_space(%struct.VEC_insn_t_base* %cond, i32 %4), !dbg !4184
  %tobool1 = icmp ne i32 %call, 0, !dbg !4184
  %lnot = xor i1 %tobool1, true, !dbg !4184
  %lnot.ext = zext i1 %lnot to i32, !dbg !4184
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !4184
  %5 = load i32, i32* %extend, align 4, !dbg !4187
  %tobool2 = icmp ne i32 %5, 0, !dbg !4187
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4184

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_insn_t_heap**, %struct.VEC_insn_t_heap*** %vec_.addr, align 8, !dbg !4187
  %7 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** %6, align 8, !dbg !4187
  %8 = bitcast %struct.VEC_insn_t_heap* %7 to i8*, !dbg !4187
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !4187
  %call3 = call i8* @vec_heap_p_reserve(i8* %8, i32 %9), !dbg !4187
  %10 = bitcast i8* %call3 to %struct.VEC_insn_t_heap*, !dbg !4187
  %11 = load %struct.VEC_insn_t_heap**, %struct.VEC_insn_t_heap*** %vec_.addr, align 8, !dbg !4187
  store %struct.VEC_insn_t_heap* %10, %struct.VEC_insn_t_heap** %11, align 8, !dbg !4187
  br label %if.end, !dbg !4187

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !4184
  ret i32 %12, !dbg !4184
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def** @VEC_insn_t_base_quick_push(%struct.VEC_insn_t_base* %vec_, %struct.rtx_def* %obj_) #0 !dbg !4189 {
entry:
  %vec_.addr = alloca %struct.VEC_insn_t_base*, align 8
  %obj_.addr = alloca %struct.rtx_def*, align 8
  %slot_ = alloca %struct.rtx_def**, align 8
  store %struct.VEC_insn_t_base* %vec_, %struct.VEC_insn_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_insn_t_base** %vec_.addr, metadata !4193, metadata !DIExpression()), !dbg !4194
  store %struct.rtx_def* %obj_, %struct.rtx_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %obj_.addr, metadata !4195, metadata !DIExpression()), !dbg !4194
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %slot_, metadata !4196, metadata !DIExpression()), !dbg !4194
  %0 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !4194
  %num = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %0, i32 0, i32 0, !dbg !4194
  %1 = load i32, i32* %num, align 8, !dbg !4194
  %2 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !4194
  %alloc = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %2, i32 0, i32 1, !dbg !4194
  %3 = load i32, i32* %alloc, align 4, !dbg !4194
  %cmp = icmp ult i32 %1, %3, !dbg !4194
  %conv = zext i1 %cmp to i32, !dbg !4194
  %4 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !4194
  %vec = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %4, i32 0, i32 2, !dbg !4194
  %5 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !4194
  %num1 = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %5, i32 0, i32 0, !dbg !4194
  %6 = load i32, i32* %num1, align 8, !dbg !4194
  %inc = add i32 %6, 1, !dbg !4194
  store i32 %inc, i32* %num1, align 8, !dbg !4194
  %idxprom = zext i32 %6 to i64, !dbg !4194
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %vec, i64 0, i64 %idxprom, !dbg !4194
  store %struct.rtx_def** %arrayidx, %struct.rtx_def*** %slot_, align 8, !dbg !4194
  %7 = load %struct.rtx_def*, %struct.rtx_def** %obj_.addr, align 8, !dbg !4194
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %slot_, align 8, !dbg !4194
  store %struct.rtx_def* %7, %struct.rtx_def** %8, align 8, !dbg !4194
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %slot_, align 8, !dbg !4194
  ret %struct.rtx_def** %9, !dbg !4194
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_insn_t_base_space(%struct.VEC_insn_t_base* %vec_, i32 %alloc_) #0 !dbg !4197 {
entry:
  %vec_.addr = alloca %struct.VEC_insn_t_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_insn_t_base* %vec_, %struct.VEC_insn_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_insn_t_base** %vec_.addr, metadata !4200, metadata !DIExpression()), !dbg !4201
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !4202, metadata !DIExpression()), !dbg !4201
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !4201
  %cmp = icmp sge i32 %0, 0, !dbg !4201
  %conv = zext i1 %cmp to i32, !dbg !4201
  %1 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !4201
  %tobool = icmp ne %struct.VEC_insn_t_base* %1, null, !dbg !4201
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4201

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !4201
  %alloc = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %2, i32 0, i32 1, !dbg !4201
  %3 = load i32, i32* %alloc, align 4, !dbg !4201
  %4 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !4201
  %num = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %4, i32 0, i32 0, !dbg !4201
  %5 = load i32, i32* %num, align 8, !dbg !4201
  %sub = sub i32 %3, %5, !dbg !4201
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !4201
  %cmp1 = icmp uge i32 %sub, %6, !dbg !4201
  %conv2 = zext i1 %cmp1 to i32, !dbg !4201
  br label %cond.end, !dbg !4201

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !4201
  %tobool3 = icmp ne i32 %7, 0, !dbg !4201
  %lnot = xor i1 %tobool3, true, !dbg !4201
  %lnot.ext = zext i1 %lnot to i32, !dbg !4201
  br label %cond.end, !dbg !4201

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !4201
  ret i32 %cond, !dbg !4201
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) #2

declare dso_local zeroext i8 @lhs_of_insn_equals_to_dest_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local void @merge_expr_data(%struct._expr*, %struct._expr*, %struct.rtx_def*) #2

declare dso_local void @clear_expr(%struct._expr*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @moveup_expr_cached(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext %inside_insn_group) #0 !dbg !4203 {
entry:
  %expr.addr = alloca %struct._expr*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %inside_insn_group.addr = alloca i8, align 1
  %res = alloca i32, align 4
  %got_answer = alloca i8, align 1
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j13 = alloca i32, align 4
  %__s17 = alloca i8*, align 8
  %expr_old_vinsn = alloca %struct.vinsn_def*, align 8
  %expr_old_spec_ds = alloca i32, align 4
  %expr_uid = alloca i32, align 4
  %unique_p = alloca i8, align 1
  %trans_type = alloca i32, align 4
  %__j91 = alloca i32, align 4
  %__s95 = alloca i8*, align 8
  %__j115 = alloca i32, align 4
  %__s119 = alloca i8*, align 8
  %__j142 = alloca i32, align 4
  %__s146 = alloca i8*, align 8
  %__j187 = alloca i32, align 4
  %__s191 = alloca i8*, align 8
  %__j206 = alloca i32, align 4
  %__s210 = alloca i8*, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !4206, metadata !DIExpression()), !dbg !4207
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4208, metadata !DIExpression()), !dbg !4209
  store i8 %inside_insn_group, i8* %inside_insn_group.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %inside_insn_group.addr, metadata !4210, metadata !DIExpression()), !dbg !4211
  call void @llvm.dbg.declare(metadata i32* %res, metadata !4212, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.declare(metadata i8* %got_answer, metadata !4214, metadata !DIExpression()), !dbg !4215
  store i8 0, i8* %got_answer, align 1, !dbg !4215
  %0 = load i32, i32* @sched_verbose, align 4, !dbg !4216
  %cmp = icmp sge i32 %0, 6, !dbg !4218
  br i1 %cmp, label %if.then, label %if.end36, !dbg !4219

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !4220

do.body:                                          ; preds = %if.then
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4222
  %tobool = icmp ne i8 %1, 0, !dbg !4222
  br i1 %tobool, label %if.then1, label %if.else, !dbg !4225

if.then1:                                         ; preds = %do.body
  br label %do.body2, !dbg !4222

do.body2:                                         ; preds = %if.then1
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !4226, metadata !DIExpression()), !dbg !4228
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)), !dbg !4228
  %mul = mul nsw i32 2, %call, !dbg !4228
  %add = add nsw i32 1, %mul, !dbg !4228
  store i32 %add, i32* %__j, align 4, !dbg !4228
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !4229, metadata !DIExpression()), !dbg !4228
  %2 = load i32, i32* %__j, align 4, !dbg !4228
  %conv = sext i32 %2 to i64, !dbg !4228
  %mul3 = mul i64 1, %conv, !dbg !4228
  %3 = alloca i8, i64 %mul3, align 16, !dbg !4228
  store i8* %3, i8** %__s, align 8, !dbg !4228
  %4 = load i8*, i8** %__s, align 8, !dbg !4228
  %5 = load i32, i32* %__j, align 4, !dbg !4228
  %conv4 = sext i32 %5 to i64, !dbg !4228
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %4, i64 %conv4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)), !dbg !4228
  %6 = load i8*, i8** %__s, align 8, !dbg !4228
  call void @sel_prepare_string_for_dot_label(i8* %6), !dbg !4228
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4228
  %8 = load i8*, i8** %__s, align 8, !dbg !4228
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %8), !dbg !4228
  br label %do.end, !dbg !4228

do.end:                                           ; preds = %do.body2
  br label %if.end, !dbg !4228

if.else:                                          ; preds = %do.body
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4222
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)), !dbg !4222
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end8, !dbg !4225

do.end8:                                          ; preds = %if.end
  %10 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4230
  call void @dump_expr(%struct._expr* %10), !dbg !4231
  br label %do.body9, !dbg !4232

do.body9:                                         ; preds = %do.end8
  %11 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4233
  %tobool10 = icmp ne i8 %11, 0, !dbg !4233
  br i1 %tobool10, label %if.then11, label %if.else28, !dbg !4236

if.then11:                                        ; preds = %do.body9
  br label %do.body12, !dbg !4233

do.body12:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i32* %__j13, metadata !4237, metadata !DIExpression()), !dbg !4239
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4239
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !4239
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4239
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4239
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4239
  %13 = load i32, i32* %rt_int, align 8, !dbg !4239
  %call14 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i32 %13), !dbg !4239
  %mul15 = mul nsw i32 2, %call14, !dbg !4239
  %add16 = add nsw i32 1, %mul15, !dbg !4239
  store i32 %add16, i32* %__j13, align 4, !dbg !4239
  call void @llvm.dbg.declare(metadata i8** %__s17, metadata !4240, metadata !DIExpression()), !dbg !4239
  %14 = load i32, i32* %__j13, align 4, !dbg !4239
  %conv18 = sext i32 %14 to i64, !dbg !4239
  %mul19 = mul i64 1, %conv18, !dbg !4239
  %15 = alloca i8, i64 %mul19, align 16, !dbg !4239
  store i8* %15, i8** %__s17, align 8, !dbg !4239
  %16 = load i8*, i8** %__s17, align 8, !dbg !4239
  %17 = load i32, i32* %__j13, align 4, !dbg !4239
  %conv20 = sext i32 %17 to i64, !dbg !4239
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4239
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !4239
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !4239
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 0, !dbg !4239
  %rt_int24 = bitcast %union.rtunion_def* %arrayidx23 to i32*, !dbg !4239
  %19 = load i32, i32* %rt_int24, align 8, !dbg !4239
  %call25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %16, i64 %conv20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i32 %19), !dbg !4239
  %20 = load i8*, i8** %__s17, align 8, !dbg !4239
  call void @sel_prepare_string_for_dot_label(i8* %20), !dbg !4239
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4239
  %22 = load i8*, i8** %__s17, align 8, !dbg !4239
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %22), !dbg !4239
  br label %do.end27, !dbg !4239

do.end27:                                         ; preds = %do.body12
  br label %if.end34, !dbg !4239

if.else28:                                        ; preds = %do.body9
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4233
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4233
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !4233
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !4233
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !4233
  %rt_int32 = bitcast %union.rtunion_def* %arrayidx31 to i32*, !dbg !4233
  %25 = load i32, i32* %rt_int32, align 8, !dbg !4233
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i32 %25), !dbg !4233
  br label %if.end34

if.end34:                                         ; preds = %if.else28, %do.end27
  br label %do.end35, !dbg !4236

do.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !4241

if.end36:                                         ; preds = %do.end35, %entry
  %26 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4242
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %26, i32 0, i32 0, !dbg !4242
  %27 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4242
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %27, i32 0, i32 0, !dbg !4242
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4242
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !4242
  %bf.load = load i32, i32* %29, align 8, !dbg !4242
  %bf.clear = and i32 %bf.load, 65535, !dbg !4242
  %cmp37 = icmp eq i32 %bf.clear, 7, !dbg !4242
  br i1 %cmp37, label %land.lhs.true, label %if.else50, !dbg !4244

land.lhs.true:                                    ; preds = %if.end36
  %30 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4245
  %vinsn39 = getelementptr inbounds %struct._expr, %struct._expr* %30, i32 0, i32 0, !dbg !4245
  %31 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn39, align 8, !dbg !4245
  %insn_rtx40 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %31, i32 0, i32 0, !dbg !4245
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx40, align 8, !dbg !4245
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !4245
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !4245
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 3, !dbg !4245
  %rt_bb = bitcast %union.rtunion_def* %arrayidx43 to %struct.basic_block_def**, !dbg !4245
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4245
  %call44 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %33), !dbg !4246
  %34 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4247
  %vinsn45 = getelementptr inbounds %struct._expr, %struct._expr* %34, i32 0, i32 0, !dbg !4247
  %35 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn45, align 8, !dbg !4247
  %insn_rtx46 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %35, i32 0, i32 0, !dbg !4247
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx46, align 8, !dbg !4247
  %cmp47 = icmp eq %struct.rtx_def* %call44, %36, !dbg !4248
  br i1 %cmp47, label %if.then49, label %if.else50, !dbg !4249

if.then49:                                        ; preds = %land.lhs.true
  br label %if.end64, !dbg !4249

if.else50:                                        ; preds = %land.lhs.true, %if.end36
  %37 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4250
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4252
  %39 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4253
  %call51 = call zeroext i8 @try_bitmap_cache(%struct._expr* %37, %struct.rtx_def* %38, i8 zeroext %39, i32* %res), !dbg !4254
  %tobool52 = icmp ne i8 %call51, 0, !dbg !4254
  br i1 %tobool52, label %if.then53, label %if.else58, !dbg !4255

if.then53:                                        ; preds = %if.else50
  %40 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4256
  %tobool54 = icmp ne i8 %40, 0, !dbg !4256
  br i1 %tobool54, label %lor.rhs, label %lor.end, !dbg !4257

lor.rhs:                                          ; preds = %if.then53
  %41 = load i32, i32* %res, align 4, !dbg !4258
  %cmp55 = icmp ne i32 %41, 2, !dbg !4259
  br label %lor.end, !dbg !4257

lor.end:                                          ; preds = %lor.rhs, %if.then53
  %42 = phi i1 [ true, %if.then53 ], [ %cmp55, %lor.rhs ]
  %lor.ext = zext i1 %42 to i32, !dbg !4257
  %conv57 = trunc i32 %lor.ext to i8, !dbg !4260
  store i8 %conv57, i8* %got_answer, align 1, !dbg !4261
  br label %if.end63, !dbg !4262

if.else58:                                        ; preds = %if.else50
  %43 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4263
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4265
  %call59 = call zeroext i8 @try_transformation_cache(%struct._expr* %43, %struct.rtx_def* %44, i32* %res), !dbg !4266
  %tobool60 = icmp ne i8 %call59, 0, !dbg !4266
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !4267

if.then61:                                        ; preds = %if.else58
  store i8 1, i8* %got_answer, align 1, !dbg !4268
  br label %if.end62, !dbg !4269

if.end62:                                         ; preds = %if.then61, %if.else58
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %lor.end
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then49
  %45 = load i8, i8* %got_answer, align 1, !dbg !4270
  %tobool65 = icmp ne i8 %45, 0, !dbg !4270
  br i1 %tobool65, label %if.end222, label %if.then66, !dbg !4272

if.then66:                                        ; preds = %if.end64
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %expr_old_vinsn, metadata !4273, metadata !DIExpression()), !dbg !4275
  %46 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4276
  %vinsn67 = getelementptr inbounds %struct._expr, %struct._expr* %46, i32 0, i32 0, !dbg !4276
  %47 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn67, align 8, !dbg !4276
  store %struct.vinsn_def* %47, %struct.vinsn_def** %expr_old_vinsn, align 8, !dbg !4275
  call void @llvm.dbg.declare(metadata i32* %expr_old_spec_ds, metadata !4277, metadata !DIExpression()), !dbg !4278
  %48 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4279
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %48, i32 0, i32 7, !dbg !4279
  %49 = load i32, i32* %spec_done_ds, align 8, !dbg !4279
  store i32 %49, i32* %expr_old_spec_ds, align 4, !dbg !4278
  call void @llvm.dbg.declare(metadata i32* %expr_uid, metadata !4280, metadata !DIExpression()), !dbg !4281
  %50 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_old_vinsn, align 8, !dbg !4282
  %insn_rtx68 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %50, i32 0, i32 0, !dbg !4282
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx68, align 8, !dbg !4282
  %u69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !4282
  %fld70 = bitcast %union.u* %u69 to [1 x %union.rtunion_def]*, !dbg !4282
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i64 0, i64 0, !dbg !4282
  %rt_int72 = bitcast %union.rtunion_def* %arrayidx71 to i32*, !dbg !4282
  %52 = load i32, i32* %rt_int72, align 8, !dbg !4282
  store i32 %52, i32* %expr_uid, align 4, !dbg !4281
  call void @llvm.dbg.declare(metadata i8* %unique_p, metadata !4283, metadata !DIExpression()), !dbg !4284
  %53 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_old_vinsn, align 8, !dbg !4285
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %53, i32 0, i32 1, !dbg !4285
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !4285
  %54 = load i32, i32* %type, align 8, !dbg !4285
  %cmp73 = icmp eq i32 %54, 23, !dbg !4285
  br i1 %cmp73, label %lor.end80, label %lor.rhs75, !dbg !4285

lor.rhs75:                                        ; preds = %if.then66
  %55 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_old_vinsn, align 8, !dbg !4285
  %id76 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %55, i32 0, i32 1, !dbg !4285
  %type77 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id76, i32 0, i32 0, !dbg !4285
  %56 = load i32, i32* %type77, align 8, !dbg !4285
  %cmp78 = icmp eq i32 %56, 24, !dbg !4285
  br label %lor.end80, !dbg !4285

lor.end80:                                        ; preds = %lor.rhs75, %if.then66
  %57 = phi i1 [ true, %if.then66 ], [ %cmp78, %lor.rhs75 ]
  %lnot = xor i1 %57, true, !dbg !4285
  %lnot.ext = zext i1 %lnot to i32, !dbg !4285
  %conv82 = trunc i32 %lnot.ext to i8, !dbg !4285
  store i8 %conv82, i8* %unique_p, align 1, !dbg !4284
  call void @llvm.dbg.declare(metadata i32* %trans_type, metadata !4286, metadata !DIExpression()), !dbg !4287
  store i32 0, i32* %trans_type, align 4, !dbg !4287
  %58 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_old_vinsn, align 8, !dbg !4288
  call void @vinsn_attach(%struct.vinsn_def* %58), !dbg !4289
  %59 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4290
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4291
  %61 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4292
  %call83 = call i32 @moveup_expr(%struct._expr* %59, %struct.rtx_def* %60, i8 zeroext %61, i32* %trans_type), !dbg !4293
  store i32 %call83, i32* %res, align 4, !dbg !4294
  %62 = load i32, i32* %res, align 4, !dbg !4295
  switch i32 %62, label %sw.default [
    i32 2, label %sw.bb
    i32 0, label %sw.bb107
    i32 1, label %sw.bb131
    i32 3, label %sw.bb158
  ], !dbg !4296

sw.bb:                                            ; preds = %lor.end80
  %63 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4297
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4299
  %65 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4300
  %66 = load i32, i32* %res, align 4, !dbg !4301
  call void @update_bitmap_cache(%struct._expr* %63, %struct.rtx_def* %64, i8 zeroext %65, i32 %66), !dbg !4302
  %67 = load i32, i32* @sched_verbose, align 4, !dbg !4303
  %cmp84 = icmp sge i32 %67, 6, !dbg !4305
  br i1 %cmp84, label %if.then86, label %if.end106, !dbg !4306

if.then86:                                        ; preds = %sw.bb
  br label %do.body87, !dbg !4307

do.body87:                                        ; preds = %if.then86
  %68 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4308
  %tobool88 = icmp ne i8 %68, 0, !dbg !4308
  br i1 %tobool88, label %if.then89, label %if.else102, !dbg !4311

if.then89:                                        ; preds = %do.body87
  br label %do.body90, !dbg !4308

do.body90:                                        ; preds = %if.then89
  call void @llvm.dbg.declare(metadata i32* %__j91, metadata !4312, metadata !DIExpression()), !dbg !4314
  %call92 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)), !dbg !4314
  %mul93 = mul nsw i32 2, %call92, !dbg !4314
  %add94 = add nsw i32 1, %mul93, !dbg !4314
  store i32 %add94, i32* %__j91, align 4, !dbg !4314
  call void @llvm.dbg.declare(metadata i8** %__s95, metadata !4315, metadata !DIExpression()), !dbg !4314
  %69 = load i32, i32* %__j91, align 4, !dbg !4314
  %conv96 = sext i32 %69 to i64, !dbg !4314
  %mul97 = mul i64 1, %conv96, !dbg !4314
  %70 = alloca i8, i64 %mul97, align 16, !dbg !4314
  store i8* %70, i8** %__s95, align 8, !dbg !4314
  %71 = load i8*, i8** %__s95, align 8, !dbg !4314
  %72 = load i32, i32* %__j91, align 4, !dbg !4314
  %conv98 = sext i32 %72 to i64, !dbg !4314
  %call99 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %71, i64 %conv98, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)), !dbg !4314
  %73 = load i8*, i8** %__s95, align 8, !dbg !4314
  call void @sel_prepare_string_for_dot_label(i8* %73), !dbg !4314
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4314
  %75 = load i8*, i8** %__s95, align 8, !dbg !4314
  %call100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %75), !dbg !4314
  br label %do.end101, !dbg !4314

do.end101:                                        ; preds = %do.body90
  br label %if.end104, !dbg !4314

if.else102:                                       ; preds = %do.body87
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4308
  %call103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)), !dbg !4308
  br label %if.end104

if.end104:                                        ; preds = %if.else102, %do.end101
  br label %do.end105, !dbg !4311

do.end105:                                        ; preds = %if.end104
  br label %if.end106, !dbg !4311

if.end106:                                        ; preds = %do.end105, %sw.bb
  br label %sw.epilog, !dbg !4316

sw.bb107:                                         ; preds = %lor.end80
  %77 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4317
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4318
  %79 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4319
  %80 = load i32, i32* %res, align 4, !dbg !4320
  call void @update_bitmap_cache(%struct._expr* %77, %struct.rtx_def* %78, i8 zeroext %79, i32 %80), !dbg !4321
  %81 = load i32, i32* @sched_verbose, align 4, !dbg !4322
  %cmp108 = icmp sge i32 %81, 6, !dbg !4324
  br i1 %cmp108, label %if.then110, label %if.end130, !dbg !4325

if.then110:                                       ; preds = %sw.bb107
  br label %do.body111, !dbg !4326

do.body111:                                       ; preds = %if.then110
  %82 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4327
  %tobool112 = icmp ne i8 %82, 0, !dbg !4327
  br i1 %tobool112, label %if.then113, label %if.else126, !dbg !4330

if.then113:                                       ; preds = %do.body111
  br label %do.body114, !dbg !4327

do.body114:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i32* %__j115, metadata !4331, metadata !DIExpression()), !dbg !4333
  %call116 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)), !dbg !4333
  %mul117 = mul nsw i32 2, %call116, !dbg !4333
  %add118 = add nsw i32 1, %mul117, !dbg !4333
  store i32 %add118, i32* %__j115, align 4, !dbg !4333
  call void @llvm.dbg.declare(metadata i8** %__s119, metadata !4334, metadata !DIExpression()), !dbg !4333
  %83 = load i32, i32* %__j115, align 4, !dbg !4333
  %conv120 = sext i32 %83 to i64, !dbg !4333
  %mul121 = mul i64 1, %conv120, !dbg !4333
  %84 = alloca i8, i64 %mul121, align 16, !dbg !4333
  store i8* %84, i8** %__s119, align 8, !dbg !4333
  %85 = load i8*, i8** %__s119, align 8, !dbg !4333
  %86 = load i32, i32* %__j115, align 4, !dbg !4333
  %conv122 = sext i32 %86 to i64, !dbg !4333
  %call123 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %85, i64 %conv122, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)), !dbg !4333
  %87 = load i8*, i8** %__s119, align 8, !dbg !4333
  call void @sel_prepare_string_for_dot_label(i8* %87), !dbg !4333
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4333
  %89 = load i8*, i8** %__s119, align 8, !dbg !4333
  %call124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %89), !dbg !4333
  br label %do.end125, !dbg !4333

do.end125:                                        ; preds = %do.body114
  br label %if.end128, !dbg !4333

if.else126:                                       ; preds = %do.body111
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4327
  %call127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)), !dbg !4327
  br label %if.end128

if.end128:                                        ; preds = %if.else126, %do.end125
  br label %do.end129, !dbg !4330

do.end129:                                        ; preds = %if.end128
  br label %if.end130, !dbg !4330

if.end130:                                        ; preds = %do.end129, %sw.bb107
  br label %sw.epilog, !dbg !4335

sw.bb131:                                         ; preds = %lor.end80
  %91 = load i8, i8* %unique_p, align 1, !dbg !4336
  %tobool132 = icmp ne i8 %91, 0, !dbg !4336
  br i1 %tobool132, label %lor.lhs.false, label %cond.false, !dbg !4336

lor.lhs.false:                                    ; preds = %sw.bb131
  %92 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4336
  %conv133 = zext i8 %92 to i32, !dbg !4336
  %tobool134 = icmp ne i32 %conv133, 0, !dbg !4336
  br i1 %tobool134, label %cond.false, label %cond.true, !dbg !4336

cond.true:                                        ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2547, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4336
  br label %cond.end, !dbg !4336

cond.false:                                       ; preds = %lor.lhs.false, %sw.bb131
  br label %cond.end, !dbg !4336

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4336
  %93 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4337
  %94 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4338
  %95 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4339
  %96 = load i32, i32* %res, align 4, !dbg !4340
  call void @update_bitmap_cache(%struct._expr* %93, %struct.rtx_def* %94, i8 zeroext %95, i32 %96), !dbg !4341
  %97 = load i32, i32* @sched_verbose, align 4, !dbg !4342
  %cmp135 = icmp sge i32 %97, 6, !dbg !4344
  br i1 %cmp135, label %if.then137, label %if.end157, !dbg !4345

if.then137:                                       ; preds = %cond.end
  br label %do.body138, !dbg !4346

do.body138:                                       ; preds = %if.then137
  %98 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4347
  %tobool139 = icmp ne i8 %98, 0, !dbg !4347
  br i1 %tobool139, label %if.then140, label %if.else153, !dbg !4350

if.then140:                                       ; preds = %do.body138
  br label %do.body141, !dbg !4347

do.body141:                                       ; preds = %if.then140
  call void @llvm.dbg.declare(metadata i32* %__j142, metadata !4351, metadata !DIExpression()), !dbg !4353
  %call143 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)), !dbg !4353
  %mul144 = mul nsw i32 2, %call143, !dbg !4353
  %add145 = add nsw i32 1, %mul144, !dbg !4353
  store i32 %add145, i32* %__j142, align 4, !dbg !4353
  call void @llvm.dbg.declare(metadata i8** %__s146, metadata !4354, metadata !DIExpression()), !dbg !4353
  %99 = load i32, i32* %__j142, align 4, !dbg !4353
  %conv147 = sext i32 %99 to i64, !dbg !4353
  %mul148 = mul i64 1, %conv147, !dbg !4353
  %100 = alloca i8, i64 %mul148, align 16, !dbg !4353
  store i8* %100, i8** %__s146, align 8, !dbg !4353
  %101 = load i8*, i8** %__s146, align 8, !dbg !4353
  %102 = load i32, i32* %__j142, align 4, !dbg !4353
  %conv149 = sext i32 %102 to i64, !dbg !4353
  %call150 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %101, i64 %conv149, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)), !dbg !4353
  %103 = load i8*, i8** %__s146, align 8, !dbg !4353
  call void @sel_prepare_string_for_dot_label(i8* %103), !dbg !4353
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4353
  %105 = load i8*, i8** %__s146, align 8, !dbg !4353
  %call151 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %104, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %105), !dbg !4353
  br label %do.end152, !dbg !4353

do.end152:                                        ; preds = %do.body141
  br label %if.end155, !dbg !4353

if.else153:                                       ; preds = %do.body138
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4347
  %call154 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %106, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)), !dbg !4347
  br label %if.end155

if.end155:                                        ; preds = %if.else153, %do.end152
  br label %do.end156, !dbg !4350

do.end156:                                        ; preds = %if.end155
  br label %if.end157, !dbg !4350

if.end157:                                        ; preds = %do.end156, %cond.end
  br label %sw.epilog, !dbg !4355

sw.bb158:                                         ; preds = %lor.end80
  %107 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4356
  %vinsn159 = getelementptr inbounds %struct._expr, %struct._expr* %107, i32 0, i32 0, !dbg !4356
  %108 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn159, align 8, !dbg !4356
  %insn_rtx160 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %108, i32 0, i32 0, !dbg !4356
  %109 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx160, align 8, !dbg !4356
  %u161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1, !dbg !4356
  %fld162 = bitcast %union.u* %u161 to [1 x %union.rtunion_def]*, !dbg !4356
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i64 0, i64 0, !dbg !4356
  %rt_int164 = bitcast %union.rtunion_def* %arrayidx163 to i32*, !dbg !4356
  %110 = load i32, i32* %rt_int164, align 8, !dbg !4356
  %111 = load i32, i32* %expr_uid, align 4, !dbg !4356
  %cmp165 = icmp ne i32 %110, %111, !dbg !4356
  br i1 %cmp165, label %cond.false172, label %lor.lhs.false167, !dbg !4356

lor.lhs.false167:                                 ; preds = %sw.bb158
  %112 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4356
  %spec_done_ds168 = getelementptr inbounds %struct._expr, %struct._expr* %112, i32 0, i32 7, !dbg !4356
  %113 = load i32, i32* %spec_done_ds168, align 8, !dbg !4356
  %114 = load i32, i32* %expr_old_spec_ds, align 4, !dbg !4356
  %cmp169 = icmp ne i32 %113, %114, !dbg !4356
  br i1 %cmp169, label %cond.false172, label %cond.true171, !dbg !4356

cond.true171:                                     ; preds = %lor.lhs.false167
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2555, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4356
  br label %cond.end173, !dbg !4356

cond.false172:                                    ; preds = %lor.lhs.false167, %sw.bb158
  br label %cond.end173, !dbg !4356

cond.end173:                                      ; preds = %cond.false172, %cond.true171
  %cond174 = phi i32 [ 0, %cond.true171 ], [ 0, %cond.false172 ], !dbg !4356
  %115 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4357
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %115, i32 0, i32 10, !dbg !4357
  %116 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4358
  %u175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1, !dbg !4358
  %fld176 = bitcast %union.u* %u175 to [1 x %union.rtunion_def]*, !dbg !4358
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i64 0, i64 0, !dbg !4358
  %rt_int178 = bitcast %union.rtunion_def* %arrayidx177 to i32*, !dbg !4358
  %117 = load i32, i32* %rt_int178, align 8, !dbg !4358
  %118 = load i32, i32* %trans_type, align 4, !dbg !4359
  %119 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_old_vinsn, align 8, !dbg !4360
  %120 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4361
  %vinsn179 = getelementptr inbounds %struct._expr, %struct._expr* %120, i32 0, i32 0, !dbg !4361
  %121 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn179, align 8, !dbg !4361
  %122 = load i32, i32* %expr_old_spec_ds, align 4, !dbg !4362
  call void @insert_in_history_vect(%struct.VEC_expr_history_def_heap** %history_of_changes, i32 %117, i32 %118, %struct.vinsn_def* %119, %struct.vinsn_def* %121, i32 %122), !dbg !4363
  %123 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4364
  %124 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4365
  %125 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4366
  %126 = load i32, i32* %trans_type, align 4, !dbg !4367
  %127 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_old_vinsn, align 8, !dbg !4368
  call void @update_transformation_cache(%struct._expr* %123, %struct.rtx_def* %124, i8 zeroext %125, i32 %126, %struct.vinsn_def* %127), !dbg !4369
  %128 = load i32, i32* @sched_verbose, align 4, !dbg !4370
  %cmp180 = icmp sge i32 %128, 6, !dbg !4372
  br i1 %cmp180, label %if.then182, label %if.end221, !dbg !4373

if.then182:                                       ; preds = %cond.end173
  br label %do.body183, !dbg !4374

do.body183:                                       ; preds = %if.then182
  %129 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4376
  %tobool184 = icmp ne i8 %129, 0, !dbg !4376
  br i1 %tobool184, label %if.then185, label %if.else198, !dbg !4379

if.then185:                                       ; preds = %do.body183
  br label %do.body186, !dbg !4376

do.body186:                                       ; preds = %if.then185
  call void @llvm.dbg.declare(metadata i32* %__j187, metadata !4380, metadata !DIExpression()), !dbg !4382
  %call188 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)), !dbg !4382
  %mul189 = mul nsw i32 2, %call188, !dbg !4382
  %add190 = add nsw i32 1, %mul189, !dbg !4382
  store i32 %add190, i32* %__j187, align 4, !dbg !4382
  call void @llvm.dbg.declare(metadata i8** %__s191, metadata !4383, metadata !DIExpression()), !dbg !4382
  %130 = load i32, i32* %__j187, align 4, !dbg !4382
  %conv192 = sext i32 %130 to i64, !dbg !4382
  %mul193 = mul i64 1, %conv192, !dbg !4382
  %131 = alloca i8, i64 %mul193, align 16, !dbg !4382
  store i8* %131, i8** %__s191, align 8, !dbg !4382
  %132 = load i8*, i8** %__s191, align 8, !dbg !4382
  %133 = load i32, i32* %__j187, align 4, !dbg !4382
  %conv194 = sext i32 %133 to i64, !dbg !4382
  %call195 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %132, i64 %conv194, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)), !dbg !4382
  %134 = load i8*, i8** %__s191, align 8, !dbg !4382
  call void @sel_prepare_string_for_dot_label(i8* %134), !dbg !4382
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4382
  %136 = load i8*, i8** %__s191, align 8, !dbg !4382
  %call196 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %135, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %136), !dbg !4382
  br label %do.end197, !dbg !4382

do.end197:                                        ; preds = %do.body186
  br label %if.end200, !dbg !4382

if.else198:                                       ; preds = %do.body183
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4376
  %call199 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %137, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)), !dbg !4376
  br label %if.end200

if.end200:                                        ; preds = %if.else198, %do.end197
  br label %do.end201, !dbg !4379

do.end201:                                        ; preds = %if.end200
  %138 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4384
  call void @dump_expr(%struct._expr* %138), !dbg !4385
  br label %do.body202, !dbg !4386

do.body202:                                       ; preds = %do.end201
  %139 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4387
  %tobool203 = icmp ne i8 %139, 0, !dbg !4387
  br i1 %tobool203, label %if.then204, label %if.else217, !dbg !4390

if.then204:                                       ; preds = %do.body202
  br label %do.body205, !dbg !4387

do.body205:                                       ; preds = %if.then204
  call void @llvm.dbg.declare(metadata i32* %__j206, metadata !4391, metadata !DIExpression()), !dbg !4393
  %call207 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !4393
  %mul208 = mul nsw i32 2, %call207, !dbg !4393
  %add209 = add nsw i32 1, %mul208, !dbg !4393
  store i32 %add209, i32* %__j206, align 4, !dbg !4393
  call void @llvm.dbg.declare(metadata i8** %__s210, metadata !4394, metadata !DIExpression()), !dbg !4393
  %140 = load i32, i32* %__j206, align 4, !dbg !4393
  %conv211 = sext i32 %140 to i64, !dbg !4393
  %mul212 = mul i64 1, %conv211, !dbg !4393
  %141 = alloca i8, i64 %mul212, align 16, !dbg !4393
  store i8* %141, i8** %__s210, align 8, !dbg !4393
  %142 = load i8*, i8** %__s210, align 8, !dbg !4393
  %143 = load i32, i32* %__j206, align 4, !dbg !4393
  %conv213 = sext i32 %143 to i64, !dbg !4393
  %call214 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %142, i64 %conv213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !4393
  %144 = load i8*, i8** %__s210, align 8, !dbg !4393
  call void @sel_prepare_string_for_dot_label(i8* %144), !dbg !4393
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4393
  %146 = load i8*, i8** %__s210, align 8, !dbg !4393
  %call215 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %145, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %146), !dbg !4393
  br label %do.end216, !dbg !4393

do.end216:                                        ; preds = %do.body205
  br label %if.end219, !dbg !4393

if.else217:                                       ; preds = %do.body202
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4387
  %call218 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %147, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !4387
  br label %if.end219

if.end219:                                        ; preds = %if.else217, %do.end216
  br label %do.end220, !dbg !4390

do.end220:                                        ; preds = %if.end219
  br label %if.end221, !dbg !4395

if.end221:                                        ; preds = %do.end220, %cond.end173
  br label %sw.epilog, !dbg !4396

sw.default:                                       ; preds = %lor.end80
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2570, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4397
  br label %sw.epilog, !dbg !4398

sw.epilog:                                        ; preds = %sw.default, %if.end221, %if.end157, %if.end130, %if.end106
  %148 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_old_vinsn, align 8, !dbg !4399
  call void @vinsn_detach(%struct.vinsn_def* %148), !dbg !4400
  br label %if.end222, !dbg !4401

if.end222:                                        ; preds = %sw.epilog, %if.end64
  %149 = load i32, i32* %res, align 4, !dbg !4402
  ret i32 %149, !dbg !4403
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_liveness_on_insn(%struct.rtx_def* %insn) #0 !dbg !4404 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4405, metadata !DIExpression()), !dbg !4406
  store i8 1, i8* @ignore_first, align 1, !dbg !4407
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4408
  %call = call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %0), !dbg !4409
  ret void, !dbg !4410
}

declare dso_local void @dump_expr(%struct._expr*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @try_bitmap_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext %inside_insn_group, i32* %res) #0 !dbg !4411 {
entry:
  %retval = alloca i8, align 1
  %expr.addr = alloca %struct._expr*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %inside_insn_group.addr = alloca i8, align 1
  %res.addr = alloca i32*, align 8
  %expr_uid = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j55 = alloca i32, align 4
  %__s59 = alloca i8*, align 8
  %__j103 = alloca i32, align 4
  %__s107 = alloca i8*, align 8
  %__j130 = alloca i32, align 4
  %__s134 = alloca i8*, align 8
  %__j154 = alloca i32, align 4
  %__s158 = alloca i8*, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !4415, metadata !DIExpression()), !dbg !4416
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4417, metadata !DIExpression()), !dbg !4418
  store i8 %inside_insn_group, i8* %inside_insn_group.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %inside_insn_group.addr, metadata !4419, metadata !DIExpression()), !dbg !4420
  store i32* %res, i32** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %res.addr, metadata !4421, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.declare(metadata i32* %expr_uid, metadata !4423, metadata !DIExpression()), !dbg !4424
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4425
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !4425
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4425
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i32 0, i32 0, !dbg !4425
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4425
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !4425
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4425
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4425
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4425
  %3 = load i32, i32* %rt_int, align 8, !dbg !4425
  store i32 %3, i32* %expr_uid, align 4, !dbg !4424
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4426
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %4, null, !dbg !4426
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4426

cond.true:                                        ; preds = %entry
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4426
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %5, i32 0, i32 0, !dbg !4426
  br label %cond.end, !dbg !4426

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4426

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4426
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4426
  %tobool1 = icmp ne %struct.VEC_int_heap* %6, null, !dbg !4426
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !4426

cond.true2:                                       ; preds = %cond.end
  %7 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4426
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %7, i32 0, i32 0, !dbg !4426
  br label %cond.end5, !dbg !4426

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !4426

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !4426
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4426
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !4426
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !4426
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 0, !dbg !4426
  %rt_int10 = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !4426
  %9 = load i32, i32* %rt_int10, align 8, !dbg !4426
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %9), !dbg !4426
  %call11 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !4426
  %analyzed_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call11, i32 0, i32 4, !dbg !4426
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps, align 8, !dbg !4426
  %11 = load i32, i32* %expr_uid, align 4, !dbg !4428
  %call12 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %10, i32 %11), !dbg !4429
  %tobool13 = icmp ne i32 %call12, 0, !dbg !4429
  br i1 %tobool13, label %if.then, label %if.else71, !dbg !4430

if.then:                                          ; preds = %cond.end5
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4431
  %tobool14 = icmp ne %struct.VEC_sel_insn_data_def_heap* %12, null, !dbg !4431
  br i1 %tobool14, label %cond.true15, label %cond.false17, !dbg !4431

cond.true15:                                      ; preds = %if.then
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4431
  %base16 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %13, i32 0, i32 0, !dbg !4431
  br label %cond.end18, !dbg !4431

cond.false17:                                     ; preds = %if.then
  br label %cond.end18, !dbg !4431

cond.end18:                                       ; preds = %cond.false17, %cond.true15
  %cond19 = phi %struct.VEC_sel_insn_data_def_base* [ %base16, %cond.true15 ], [ null, %cond.false17 ], !dbg !4431
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4431
  %tobool20 = icmp ne %struct.VEC_int_heap* %14, null, !dbg !4431
  br i1 %tobool20, label %cond.true21, label %cond.false23, !dbg !4431

cond.true21:                                      ; preds = %cond.end18
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4431
  %base22 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %15, i32 0, i32 0, !dbg !4431
  br label %cond.end24, !dbg !4431

cond.false23:                                     ; preds = %cond.end18
  br label %cond.end24, !dbg !4431

cond.end24:                                       ; preds = %cond.false23, %cond.true21
  %cond25 = phi %struct.VEC_int_base* [ %base22, %cond.true21 ], [ null, %cond.false23 ], !dbg !4431
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4431
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !4431
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !4431
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 0, !dbg !4431
  %rt_int29 = bitcast %union.rtunion_def* %arrayidx28 to i32*, !dbg !4431
  %17 = load i32, i32* %rt_int29, align 8, !dbg !4431
  %call30 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond25, i32 %17), !dbg !4431
  %call31 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond19, i32 %call30), !dbg !4431
  %found_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call31, i32 0, i32 5, !dbg !4431
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps, align 8, !dbg !4431
  %19 = load i32, i32* %expr_uid, align 4, !dbg !4434
  %call32 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %18, i32 %19), !dbg !4435
  %tobool33 = icmp ne i32 %call32, 0, !dbg !4435
  br i1 %tobool33, label %if.then34, label %if.else47, !dbg !4436

if.then34:                                        ; preds = %cond.end24
  %20 = load i32, i32* @sched_verbose, align 4, !dbg !4437
  %cmp = icmp sge i32 %20, 6, !dbg !4440
  br i1 %cmp, label %if.then35, label %if.end46, !dbg !4441

if.then35:                                        ; preds = %if.then34
  br label %do.body, !dbg !4442

do.body:                                          ; preds = %if.then35
  %21 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4443
  %tobool36 = icmp ne i8 %21, 0, !dbg !4443
  br i1 %tobool36, label %if.then37, label %if.else, !dbg !4446

if.then37:                                        ; preds = %do.body
  br label %do.body38, !dbg !4443

do.body38:                                        ; preds = %if.then37
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !4447, metadata !DIExpression()), !dbg !4449
  %call39 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0)), !dbg !4449
  %mul = mul nsw i32 2, %call39, !dbg !4449
  %add = add nsw i32 1, %mul, !dbg !4449
  store i32 %add, i32* %__j, align 4, !dbg !4449
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !4450, metadata !DIExpression()), !dbg !4449
  %22 = load i32, i32* %__j, align 4, !dbg !4449
  %conv = sext i32 %22 to i64, !dbg !4449
  %mul40 = mul i64 1, %conv, !dbg !4449
  %23 = alloca i8, i64 %mul40, align 16, !dbg !4449
  store i8* %23, i8** %__s, align 8, !dbg !4449
  %24 = load i8*, i8** %__s, align 8, !dbg !4449
  %25 = load i32, i32* %__j, align 4, !dbg !4449
  %conv41 = sext i32 %25 to i64, !dbg !4449
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %24, i64 %conv41, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0)), !dbg !4449
  %26 = load i8*, i8** %__s, align 8, !dbg !4449
  call void @sel_prepare_string_for_dot_label(i8* %26), !dbg !4449
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4449
  %28 = load i8*, i8** %__s, align 8, !dbg !4449
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %28), !dbg !4449
  br label %do.end, !dbg !4449

do.end:                                           ; preds = %do.body38
  br label %if.end, !dbg !4449

if.else:                                          ; preds = %do.body
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4443
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0)), !dbg !4443
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end45, !dbg !4446

do.end45:                                         ; preds = %if.end
  br label %if.end46, !dbg !4446

if.end46:                                         ; preds = %do.end45, %if.then34
  %30 = load i32*, i32** %res.addr, align 8, !dbg !4451
  store i32 2, i32* %30, align 4, !dbg !4452
  store i8 1, i8* %retval, align 1, !dbg !4453
  br label %return, !dbg !4453

if.else47:                                        ; preds = %cond.end24
  %31 = load i32, i32* @sched_verbose, align 4, !dbg !4454
  %cmp48 = icmp sge i32 %31, 6, !dbg !4457
  br i1 %cmp48, label %if.then50, label %if.end70, !dbg !4458

if.then50:                                        ; preds = %if.else47
  br label %do.body51, !dbg !4459

do.body51:                                        ; preds = %if.then50
  %32 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4460
  %tobool52 = icmp ne i8 %32, 0, !dbg !4460
  br i1 %tobool52, label %if.then53, label %if.else66, !dbg !4463

if.then53:                                        ; preds = %do.body51
  br label %do.body54, !dbg !4460

do.body54:                                        ; preds = %if.then53
  call void @llvm.dbg.declare(metadata i32* %__j55, metadata !4464, metadata !DIExpression()), !dbg !4466
  %call56 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)), !dbg !4466
  %mul57 = mul nsw i32 2, %call56, !dbg !4466
  %add58 = add nsw i32 1, %mul57, !dbg !4466
  store i32 %add58, i32* %__j55, align 4, !dbg !4466
  call void @llvm.dbg.declare(metadata i8** %__s59, metadata !4467, metadata !DIExpression()), !dbg !4466
  %33 = load i32, i32* %__j55, align 4, !dbg !4466
  %conv60 = sext i32 %33 to i64, !dbg !4466
  %mul61 = mul i64 1, %conv60, !dbg !4466
  %34 = alloca i8, i64 %mul61, align 16, !dbg !4466
  store i8* %34, i8** %__s59, align 8, !dbg !4466
  %35 = load i8*, i8** %__s59, align 8, !dbg !4466
  %36 = load i32, i32* %__j55, align 4, !dbg !4466
  %conv62 = sext i32 %36 to i64, !dbg !4466
  %call63 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %35, i64 %conv62, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)), !dbg !4466
  %37 = load i8*, i8** %__s59, align 8, !dbg !4466
  call void @sel_prepare_string_for_dot_label(i8* %37), !dbg !4466
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4466
  %39 = load i8*, i8** %__s59, align 8, !dbg !4466
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %39), !dbg !4466
  br label %do.end65, !dbg !4466

do.end65:                                         ; preds = %do.body54
  br label %if.end68, !dbg !4466

if.else66:                                        ; preds = %do.body51
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4460
  %call67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)), !dbg !4460
  br label %if.end68

if.end68:                                         ; preds = %if.else66, %do.end65
  br label %do.end69, !dbg !4463

do.end69:                                         ; preds = %if.end68
  br label %if.end70, !dbg !4463

if.end70:                                         ; preds = %do.end69, %if.else47
  %41 = load i32*, i32** %res.addr, align 8, !dbg !4468
  store i32 0, i32* %41, align 4, !dbg !4469
  store i8 1, i8* %retval, align 1, !dbg !4470
  br label %return, !dbg !4470

if.else71:                                        ; preds = %cond.end5
  %42 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4471
  %tobool72 = icmp ne %struct.VEC_sel_insn_data_def_heap* %42, null, !dbg !4471
  br i1 %tobool72, label %cond.true73, label %cond.false75, !dbg !4471

cond.true73:                                      ; preds = %if.else71
  %43 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4471
  %base74 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %43, i32 0, i32 0, !dbg !4471
  br label %cond.end76, !dbg !4471

cond.false75:                                     ; preds = %if.else71
  br label %cond.end76, !dbg !4471

cond.end76:                                       ; preds = %cond.false75, %cond.true73
  %cond77 = phi %struct.VEC_sel_insn_data_def_base* [ %base74, %cond.true73 ], [ null, %cond.false75 ], !dbg !4471
  %44 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4471
  %tobool78 = icmp ne %struct.VEC_int_heap* %44, null, !dbg !4471
  br i1 %tobool78, label %cond.true79, label %cond.false81, !dbg !4471

cond.true79:                                      ; preds = %cond.end76
  %45 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4471
  %base80 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %45, i32 0, i32 0, !dbg !4471
  br label %cond.end82, !dbg !4471

cond.false81:                                     ; preds = %cond.end76
  br label %cond.end82, !dbg !4471

cond.end82:                                       ; preds = %cond.false81, %cond.true79
  %cond83 = phi %struct.VEC_int_base* [ %base80, %cond.true79 ], [ null, %cond.false81 ], !dbg !4471
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4471
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !4471
  %fld85 = bitcast %union.u* %u84 to [1 x %union.rtunion_def]*, !dbg !4471
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 0, !dbg !4471
  %rt_int87 = bitcast %union.rtunion_def* %arrayidx86 to i32*, !dbg !4471
  %47 = load i32, i32* %rt_int87, align 8, !dbg !4471
  %call88 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond83, i32 %47), !dbg !4471
  %call89 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond77, i32 %call88), !dbg !4471
  %found_deps90 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call89, i32 0, i32 5, !dbg !4471
  %48 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps90, align 8, !dbg !4471
  %49 = load i32, i32* %expr_uid, align 4, !dbg !4473
  %call91 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %48, i32 %49), !dbg !4474
  %tobool92 = icmp ne i32 %call91, 0, !dbg !4474
  br i1 %tobool92, label %if.then93, label %if.end170, !dbg !4475

if.then93:                                        ; preds = %cond.end82
  %50 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4476
  %tobool94 = icmp ne i8 %50, 0, !dbg !4476
  br i1 %tobool94, label %if.then95, label %if.else119, !dbg !4479

if.then95:                                        ; preds = %if.then93
  %51 = load i32, i32* @sched_verbose, align 4, !dbg !4480
  %cmp96 = icmp sge i32 %51, 6, !dbg !4483
  br i1 %cmp96, label %if.then98, label %if.end118, !dbg !4484

if.then98:                                        ; preds = %if.then95
  br label %do.body99, !dbg !4485

do.body99:                                        ; preds = %if.then98
  %52 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4486
  %tobool100 = icmp ne i8 %52, 0, !dbg !4486
  br i1 %tobool100, label %if.then101, label %if.else114, !dbg !4489

if.then101:                                       ; preds = %do.body99
  br label %do.body102, !dbg !4486

do.body102:                                       ; preds = %if.then101
  call void @llvm.dbg.declare(metadata i32* %__j103, metadata !4490, metadata !DIExpression()), !dbg !4492
  %call104 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.17, i64 0, i64 0)), !dbg !4492
  %mul105 = mul nsw i32 2, %call104, !dbg !4492
  %add106 = add nsw i32 1, %mul105, !dbg !4492
  store i32 %add106, i32* %__j103, align 4, !dbg !4492
  call void @llvm.dbg.declare(metadata i8** %__s107, metadata !4493, metadata !DIExpression()), !dbg !4492
  %53 = load i32, i32* %__j103, align 4, !dbg !4492
  %conv108 = sext i32 %53 to i64, !dbg !4492
  %mul109 = mul i64 1, %conv108, !dbg !4492
  %54 = alloca i8, i64 %mul109, align 16, !dbg !4492
  store i8* %54, i8** %__s107, align 8, !dbg !4492
  %55 = load i8*, i8** %__s107, align 8, !dbg !4492
  %56 = load i32, i32* %__j103, align 4, !dbg !4492
  %conv110 = sext i32 %56 to i64, !dbg !4492
  %call111 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %55, i64 %conv110, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.17, i64 0, i64 0)), !dbg !4492
  %57 = load i8*, i8** %__s107, align 8, !dbg !4492
  call void @sel_prepare_string_for_dot_label(i8* %57), !dbg !4492
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4492
  %59 = load i8*, i8** %__s107, align 8, !dbg !4492
  %call112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %59), !dbg !4492
  br label %do.end113, !dbg !4492

do.end113:                                        ; preds = %do.body102
  br label %if.end116, !dbg !4492

if.else114:                                       ; preds = %do.body99
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4486
  %call115 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.17, i64 0, i64 0)), !dbg !4486
  br label %if.end116

if.end116:                                        ; preds = %if.else114, %do.end113
  br label %do.end117, !dbg !4489

do.end117:                                        ; preds = %if.end116
  br label %if.end118, !dbg !4489

if.end118:                                        ; preds = %do.end117, %if.then95
  %61 = load i32*, i32** %res.addr, align 8, !dbg !4494
  store i32 0, i32* %61, align 4, !dbg !4495
  store i8 1, i8* %retval, align 1, !dbg !4496
  br label %return, !dbg !4496

if.else119:                                       ; preds = %if.then93
  %62 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4497
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %62, i32 0, i32 11, !dbg !4497
  store i8 0, i8* %target_available, align 8, !dbg !4498
  br label %if.end120

if.end120:                                        ; preds = %if.else119
  %63 = load i8, i8* @enable_schedule_as_rhs_p, align 1, !dbg !4499
  %tobool121 = icmp ne i8 %63, 0, !dbg !4499
  br i1 %tobool121, label %if.then122, label %if.else146, !dbg !4501

if.then122:                                       ; preds = %if.end120
  %64 = load i32, i32* @sched_verbose, align 4, !dbg !4502
  %cmp123 = icmp sge i32 %64, 6, !dbg !4505
  br i1 %cmp123, label %if.then125, label %if.end145, !dbg !4506

if.then125:                                       ; preds = %if.then122
  br label %do.body126, !dbg !4507

do.body126:                                       ; preds = %if.then125
  %65 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4508
  %tobool127 = icmp ne i8 %65, 0, !dbg !4508
  br i1 %tobool127, label %if.then128, label %if.else141, !dbg !4511

if.then128:                                       ; preds = %do.body126
  br label %do.body129, !dbg !4508

do.body129:                                       ; preds = %if.then128
  call void @llvm.dbg.declare(metadata i32* %__j130, metadata !4512, metadata !DIExpression()), !dbg !4514
  %call131 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0)), !dbg !4514
  %mul132 = mul nsw i32 2, %call131, !dbg !4514
  %add133 = add nsw i32 1, %mul132, !dbg !4514
  store i32 %add133, i32* %__j130, align 4, !dbg !4514
  call void @llvm.dbg.declare(metadata i8** %__s134, metadata !4515, metadata !DIExpression()), !dbg !4514
  %66 = load i32, i32* %__j130, align 4, !dbg !4514
  %conv135 = sext i32 %66 to i64, !dbg !4514
  %mul136 = mul i64 1, %conv135, !dbg !4514
  %67 = alloca i8, i64 %mul136, align 16, !dbg !4514
  store i8* %67, i8** %__s134, align 8, !dbg !4514
  %68 = load i8*, i8** %__s134, align 8, !dbg !4514
  %69 = load i32, i32* %__j130, align 4, !dbg !4514
  %conv137 = sext i32 %69 to i64, !dbg !4514
  %call138 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %68, i64 %conv137, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0)), !dbg !4514
  %70 = load i8*, i8** %__s134, align 8, !dbg !4514
  call void @sel_prepare_string_for_dot_label(i8* %70), !dbg !4514
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4514
  %72 = load i8*, i8** %__s134, align 8, !dbg !4514
  %call139 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %72), !dbg !4514
  br label %do.end140, !dbg !4514

do.end140:                                        ; preds = %do.body129
  br label %if.end143, !dbg !4514

if.else141:                                       ; preds = %do.body126
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4508
  %call142 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0)), !dbg !4508
  br label %if.end143

if.end143:                                        ; preds = %if.else141, %do.end140
  br label %do.end144, !dbg !4511

do.end144:                                        ; preds = %if.end143
  br label %if.end145, !dbg !4511

if.end145:                                        ; preds = %do.end144, %if.then122
  %74 = load i32*, i32** %res.addr, align 8, !dbg !4516
  store i32 1, i32* %74, align 4, !dbg !4517
  store i8 1, i8* %retval, align 1, !dbg !4518
  br label %return, !dbg !4518

if.else146:                                       ; preds = %if.end120
  %75 = load i32, i32* @sched_verbose, align 4, !dbg !4519
  %cmp147 = icmp sge i32 %75, 6, !dbg !4522
  br i1 %cmp147, label %if.then149, label %if.end169, !dbg !4523

if.then149:                                       ; preds = %if.else146
  br label %do.body150, !dbg !4524

do.body150:                                       ; preds = %if.then149
  %76 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4525
  %tobool151 = icmp ne i8 %76, 0, !dbg !4525
  br i1 %tobool151, label %if.then152, label %if.else165, !dbg !4528

if.then152:                                       ; preds = %do.body150
  br label %do.body153, !dbg !4525

do.body153:                                       ; preds = %if.then152
  call void @llvm.dbg.declare(metadata i32* %__j154, metadata !4529, metadata !DIExpression()), !dbg !4531
  %call155 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0)), !dbg !4531
  %mul156 = mul nsw i32 2, %call155, !dbg !4531
  %add157 = add nsw i32 1, %mul156, !dbg !4531
  store i32 %add157, i32* %__j154, align 4, !dbg !4531
  call void @llvm.dbg.declare(metadata i8** %__s158, metadata !4532, metadata !DIExpression()), !dbg !4531
  %77 = load i32, i32* %__j154, align 4, !dbg !4531
  %conv159 = sext i32 %77 to i64, !dbg !4531
  %mul160 = mul i64 1, %conv159, !dbg !4531
  %78 = alloca i8, i64 %mul160, align 16, !dbg !4531
  store i8* %78, i8** %__s158, align 8, !dbg !4531
  %79 = load i8*, i8** %__s158, align 8, !dbg !4531
  %80 = load i32, i32* %__j154, align 4, !dbg !4531
  %conv161 = sext i32 %80 to i64, !dbg !4531
  %call162 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %79, i64 %conv161, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0)), !dbg !4531
  %81 = load i8*, i8** %__s158, align 8, !dbg !4531
  call void @sel_prepare_string_for_dot_label(i8* %81), !dbg !4531
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4531
  %83 = load i8*, i8** %__s158, align 8, !dbg !4531
  %call163 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %83), !dbg !4531
  br label %do.end164, !dbg !4531

do.end164:                                        ; preds = %do.body153
  br label %if.end167, !dbg !4531

if.else165:                                       ; preds = %do.body150
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4525
  %call166 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0)), !dbg !4525
  br label %if.end167

if.end167:                                        ; preds = %if.else165, %do.end164
  br label %do.end168, !dbg !4528

do.end168:                                        ; preds = %if.end167
  br label %if.end169, !dbg !4528

if.end169:                                        ; preds = %do.end168, %if.else146
  %85 = load i32*, i32** %res.addr, align 8, !dbg !4533
  store i32 2, i32* %85, align 4, !dbg !4534
  store i8 1, i8* %retval, align 1, !dbg !4535
  br label %return, !dbg !4535

if.end170:                                        ; preds = %cond.end82
  br label %if.end171

if.end171:                                        ; preds = %if.end170
  store i8 0, i8* %retval, align 1, !dbg !4536
  br label %return, !dbg !4536

return:                                           ; preds = %if.end171, %if.end169, %if.end145, %if.end118, %if.end70, %if.end46
  %86 = load i8, i8* %retval, align 1, !dbg !4537
  ret i8 %86, !dbg !4537
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @try_transformation_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i32* %res) #0 !dbg !4538 {
entry:
  %retval = alloca i8, align 1
  %expr.addr = alloca %struct._expr*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %res.addr = alloca i32*, align 8
  %pti = alloca %struct.transformed_insns*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j64 = alloca i32, align 4
  %__s68 = alloca i8*, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !4541, metadata !DIExpression()), !dbg !4542
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4543, metadata !DIExpression()), !dbg !4544
  store i32* %res, i32** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %res.addr, metadata !4545, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.declare(metadata %struct.transformed_insns** %pti, metadata !4547, metadata !DIExpression()), !dbg !4548
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4549
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %0, null, !dbg !4549
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4549

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4549
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i32 0, i32 0, !dbg !4549
  br label %cond.end, !dbg !4549

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4549

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4549
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4549
  %tobool1 = icmp ne %struct.VEC_int_heap* %2, null, !dbg !4549
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !4549

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4549
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i32 0, i32 0, !dbg !4549
  br label %cond.end5, !dbg !4549

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !4549

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !4549
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4549
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !4549
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4549
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4549
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4549
  %5 = load i32, i32* %rt_int, align 8, !dbg !4549
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %5), !dbg !4549
  %call7 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !4549
  %transformed_insns = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i32 0, i32 7, !dbg !4549
  %6 = load %struct.htab*, %struct.htab** %transformed_insns, align 8, !dbg !4549
  %7 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4550
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 0, !dbg !4550
  %8 = bitcast %struct.vinsn_def** %vinsn to i8*, !dbg !4551
  %9 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4552
  %vinsn8 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 0, !dbg !4552
  %10 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn8, align 8, !dbg !4552
  %hash_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %10, i32 0, i32 3, !dbg !4552
  %11 = load i32, i32* %hash_rtx, align 4, !dbg !4552
  %call9 = call i8* @htab_find_with_hash(%struct.htab* %6, i8* %8, i32 %11), !dbg !4553
  %12 = bitcast i8* %call9 to %struct.transformed_insns*, !dbg !4554
  store %struct.transformed_insns* %12, %struct.transformed_insns** %pti, align 8, !dbg !4548
  %13 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4555
  %tobool10 = icmp ne %struct.transformed_insns* %13, null, !dbg !4555
  br i1 %tobool10, label %if.then, label %if.end80, !dbg !4557

if.then:                                          ; preds = %cond.end5
  %14 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4558
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %14, i32 0, i32 10, !dbg !4558
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4560
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !4560
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !4560
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !4560
  %rt_int14 = bitcast %union.rtunion_def* %arrayidx13 to i32*, !dbg !4560
  %16 = load i32, i32* %rt_int14, align 8, !dbg !4560
  %17 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4561
  %type = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %17, i32 0, i32 3, !dbg !4562
  %18 = load i32, i32* %type, align 4, !dbg !4562
  %19 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4563
  %vinsn_old = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %19, i32 0, i32 0, !dbg !4564
  %20 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_old, align 8, !dbg !4564
  %21 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4565
  %vinsn_new = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %21, i32 0, i32 1, !dbg !4566
  %22 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_new, align 8, !dbg !4566
  %23 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4567
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %23, i32 0, i32 7, !dbg !4567
  %24 = load i32, i32* %spec_done_ds, align 8, !dbg !4567
  call void @insert_in_history_vect(%struct.VEC_expr_history_def_heap** %history_of_changes, i32 %16, i32 %18, %struct.vinsn_def* %20, %struct.vinsn_def* %22, i32 %24), !dbg !4568
  %25 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4569
  %vinsn_new15 = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %25, i32 0, i32 1, !dbg !4569
  %26 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_new15, align 8, !dbg !4569
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %26, i32 0, i32 0, !dbg !4569
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4569
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !4569
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !4569
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 1, !dbg !4569
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !4569
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4569
  %tobool19 = icmp ne %struct.rtx_def* %28, null, !dbg !4569
  br i1 %tobool19, label %land.lhs.true, label %if.end, !dbg !4569

land.lhs.true:                                    ; preds = %if.then
  %29 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4569
  %vinsn_new20 = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %29, i32 0, i32 1, !dbg !4569
  %30 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_new20, align 8, !dbg !4569
  %insn_rtx21 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %30, i32 0, i32 0, !dbg !4569
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx21, align 8, !dbg !4569
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !4569
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !4569
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 2, !dbg !4569
  %rt_rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !4569
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !4569
  %tobool26 = icmp ne %struct.rtx_def* %32, null, !dbg !4569
  br i1 %tobool26, label %if.then27, label %if.end, !dbg !4571

if.then27:                                        ; preds = %land.lhs.true
  %33 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4572
  %vinsn_new28 = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %33, i32 0, i32 1, !dbg !4573
  %34 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_new28, align 8, !dbg !4573
  %call29 = call %struct.vinsn_def* @vinsn_copy(%struct.vinsn_def* %34, i8 zeroext 1), !dbg !4574
  %35 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4575
  %vinsn_new30 = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %35, i32 0, i32 1, !dbg !4576
  store %struct.vinsn_def* %call29, %struct.vinsn_def** %vinsn_new30, align 8, !dbg !4577
  br label %if.end, !dbg !4575

if.end:                                           ; preds = %if.then27, %land.lhs.true, %if.then
  %36 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4578
  %37 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4579
  %vinsn_new31 = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %37, i32 0, i32 1, !dbg !4580
  %38 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_new31, align 8, !dbg !4580
  call void @change_vinsn_in_expr(%struct._expr* %36, %struct.vinsn_def* %38), !dbg !4581
  %39 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4582
  %was_target_conflict = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %39, i32 0, i32 4, !dbg !4584
  %bf.load = load i8, i8* %was_target_conflict, align 8, !dbg !4584
  %bf.clear = and i8 %bf.load, 1, !dbg !4584
  %bf.cast = zext i8 %bf.clear to i32, !dbg !4584
  %tobool32 = icmp ne i32 %bf.cast, 0, !dbg !4582
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !4585

if.then33:                                        ; preds = %if.end
  %40 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4586
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %40, i32 0, i32 11, !dbg !4586
  store i8 0, i8* %target_available, align 8, !dbg !4587
  br label %if.end34, !dbg !4586

if.end34:                                         ; preds = %if.then33, %if.end
  %41 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4588
  %type35 = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %41, i32 0, i32 3, !dbg !4590
  %42 = load i32, i32* %type35, align 4, !dbg !4590
  %cmp = icmp eq i32 %42, 1, !dbg !4591
  br i1 %cmp, label %if.then36, label %if.end46, !dbg !4592

if.then36:                                        ; preds = %if.end34
  %43 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4593
  %ds = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %43, i32 0, i32 2, !dbg !4595
  %44 = load i32, i32* %ds, align 8, !dbg !4595
  %45 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4596
  %spec_done_ds37 = getelementptr inbounds %struct._expr, %struct._expr* %45, i32 0, i32 7, !dbg !4596
  store i32 %44, i32* %spec_done_ds37, align 8, !dbg !4597
  %46 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4598
  %needs_check = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %46, i32 0, i32 4, !dbg !4599
  %bf.load38 = load i8, i8* %needs_check, align 8, !dbg !4599
  %bf.lshr = lshr i8 %bf.load38, 1, !dbg !4599
  %bf.clear39 = and i8 %bf.lshr, 1, !dbg !4599
  %bf.cast40 = zext i8 %bf.clear39 to i32, !dbg !4599
  %47 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4600
  %needs_spec_check_p = getelementptr inbounds %struct._expr, %struct._expr* %47, i32 0, i32 12, !dbg !4600
  %bf.load41 = load i8, i8* %needs_spec_check_p, align 1, !dbg !4601
  %bf.clear42 = and i8 %bf.load41, 1, !dbg !4601
  %bf.cast43 = zext i8 %bf.clear42 to i32, !dbg !4601
  %or = or i32 %bf.cast43, %bf.cast40, !dbg !4601
  %48 = trunc i32 %or to i8, !dbg !4601
  %bf.load44 = load i8, i8* %needs_spec_check_p, align 1, !dbg !4601
  %bf.value = and i8 %48, 1, !dbg !4601
  %bf.clear45 = and i8 %bf.load44, -2, !dbg !4601
  %bf.set = or i8 %bf.clear45, %bf.value, !dbg !4601
  store i8 %bf.set, i8* %needs_spec_check_p, align 1, !dbg !4601
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !4601
  br label %if.end46, !dbg !4602

if.end46:                                         ; preds = %if.then36, %if.end34
  %49 = load i32, i32* @sched_verbose, align 4, !dbg !4603
  %cmp47 = icmp sge i32 %49, 6, !dbg !4605
  br i1 %cmp47, label %if.then48, label %if.end79, !dbg !4606

if.then48:                                        ; preds = %if.end46
  br label %do.body, !dbg !4607

do.body:                                          ; preds = %if.then48
  %50 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4609
  %tobool49 = icmp ne i8 %50, 0, !dbg !4609
  br i1 %tobool49, label %if.then50, label %if.else, !dbg !4612

if.then50:                                        ; preds = %do.body
  br label %do.body51, !dbg !4609

do.body51:                                        ; preds = %if.then50
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !4613, metadata !DIExpression()), !dbg !4615
  %call52 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0)), !dbg !4615
  %mul = mul nsw i32 2, %call52, !dbg !4615
  %add = add nsw i32 1, %mul, !dbg !4615
  store i32 %add, i32* %__j, align 4, !dbg !4615
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !4616, metadata !DIExpression()), !dbg !4615
  %51 = load i32, i32* %__j, align 4, !dbg !4615
  %conv = sext i32 %51 to i64, !dbg !4615
  %mul53 = mul i64 1, %conv, !dbg !4615
  %52 = alloca i8, i64 %mul53, align 16, !dbg !4615
  store i8* %52, i8** %__s, align 8, !dbg !4615
  %53 = load i8*, i8** %__s, align 8, !dbg !4615
  %54 = load i32, i32* %__j, align 4, !dbg !4615
  %conv54 = sext i32 %54 to i64, !dbg !4615
  %call55 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %53, i64 %conv54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0)), !dbg !4615
  %55 = load i8*, i8** %__s, align 8, !dbg !4615
  call void @sel_prepare_string_for_dot_label(i8* %55), !dbg !4615
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4615
  %57 = load i8*, i8** %__s, align 8, !dbg !4615
  %call56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %57), !dbg !4615
  br label %do.end, !dbg !4615

do.end:                                           ; preds = %do.body51
  br label %if.end58, !dbg !4615

if.else:                                          ; preds = %do.body
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4609
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0)), !dbg !4609
  br label %if.end58

if.end58:                                         ; preds = %if.else, %do.end
  br label %do.end59, !dbg !4612

do.end59:                                         ; preds = %if.end58
  %59 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4617
  call void @dump_expr(%struct._expr* %59), !dbg !4618
  br label %do.body60, !dbg !4619

do.body60:                                        ; preds = %do.end59
  %60 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !4620
  %tobool61 = icmp ne i8 %60, 0, !dbg !4620
  br i1 %tobool61, label %if.then62, label %if.else75, !dbg !4623

if.then62:                                        ; preds = %do.body60
  br label %do.body63, !dbg !4620

do.body63:                                        ; preds = %if.then62
  call void @llvm.dbg.declare(metadata i32* %__j64, metadata !4624, metadata !DIExpression()), !dbg !4626
  %call65 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !4626
  %mul66 = mul nsw i32 2, %call65, !dbg !4626
  %add67 = add nsw i32 1, %mul66, !dbg !4626
  store i32 %add67, i32* %__j64, align 4, !dbg !4626
  call void @llvm.dbg.declare(metadata i8** %__s68, metadata !4627, metadata !DIExpression()), !dbg !4626
  %61 = load i32, i32* %__j64, align 4, !dbg !4626
  %conv69 = sext i32 %61 to i64, !dbg !4626
  %mul70 = mul i64 1, %conv69, !dbg !4626
  %62 = alloca i8, i64 %mul70, align 16, !dbg !4626
  store i8* %62, i8** %__s68, align 8, !dbg !4626
  %63 = load i8*, i8** %__s68, align 8, !dbg !4626
  %64 = load i32, i32* %__j64, align 4, !dbg !4626
  %conv71 = sext i32 %64 to i64, !dbg !4626
  %call72 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %63, i64 %conv71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !4626
  %65 = load i8*, i8** %__s68, align 8, !dbg !4626
  call void @sel_prepare_string_for_dot_label(i8* %65), !dbg !4626
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4626
  %67 = load i8*, i8** %__s68, align 8, !dbg !4626
  %call73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %67), !dbg !4626
  br label %do.end74, !dbg !4626

do.end74:                                         ; preds = %do.body63
  br label %if.end77, !dbg !4626

if.else75:                                        ; preds = %do.body60
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4620
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !4620
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %do.end74
  br label %do.end78, !dbg !4623

do.end78:                                         ; preds = %if.end77
  br label %if.end79, !dbg !4628

if.end79:                                         ; preds = %do.end78, %if.end46
  %69 = load i32*, i32** %res.addr, align 8, !dbg !4629
  store i32 3, i32* %69, align 4, !dbg !4630
  store i8 1, i8* %retval, align 1, !dbg !4631
  br label %return, !dbg !4631

if.end80:                                         ; preds = %cond.end5
  store i8 0, i8* %retval, align 1, !dbg !4632
  br label %return, !dbg !4632

return:                                           ; preds = %if.end80, %if.end79
  %70 = load i8, i8* %retval, align 1, !dbg !4633
  ret i8 %70, !dbg !4633
}

declare dso_local void @vinsn_attach(%struct.vinsn_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @moveup_expr(%struct._expr* %expr, %struct.rtx_def* %through_insn, i8 zeroext %inside_insn_group, i32* %ptrans_type) #0 !dbg !4634 {
entry:
  %retval = alloca i32, align 4
  %expr.addr = alloca %struct._expr*, align 8
  %through_insn.addr = alloca %struct.rtx_def*, align 8
  %inside_insn_group.addr = alloca i8, align 1
  %ptrans_type.addr = alloca i32*, align 8
  %vi = alloca %struct.vinsn_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %was_changed = alloca i8, align 1
  %as_rhs = alloca i8, align 1
  %has_dep_p = alloca i32*, align 8
  %full_ds = alloca i32, align 4
  %fallthru_bb = alloca %struct.basic_block_def*, align 8
  %res = alloca i32, align 4
  %rhs_dsp = alloca i32*, align 8
  %res168 = alloca i32, align 4
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !4638, metadata !DIExpression()), !dbg !4639
  store %struct.rtx_def* %through_insn, %struct.rtx_def** %through_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %through_insn.addr, metadata !4640, metadata !DIExpression()), !dbg !4641
  store i8 %inside_insn_group, i8* %inside_insn_group.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %inside_insn_group.addr, metadata !4642, metadata !DIExpression()), !dbg !4643
  store i32* %ptrans_type, i32** %ptrans_type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ptrans_type.addr, metadata !4644, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vi, metadata !4646, metadata !DIExpression()), !dbg !4647
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4648
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !4648
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4648
  store %struct.vinsn_def* %1, %struct.vinsn_def** %vi, align 8, !dbg !4647
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !4649, metadata !DIExpression()), !dbg !4650
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !4651
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %2, i32 0, i32 0, !dbg !4651
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4651
  store %struct.rtx_def* %3, %struct.rtx_def** %insn, align 8, !dbg !4650
  call void @llvm.dbg.declare(metadata i8* %was_changed, metadata !4652, metadata !DIExpression()), !dbg !4653
  store i8 0, i8* %was_changed, align 1, !dbg !4653
  call void @llvm.dbg.declare(metadata i8* %as_rhs, metadata !4654, metadata !DIExpression()), !dbg !4655
  store i8 0, i8* %as_rhs, align 1, !dbg !4655
  call void @llvm.dbg.declare(metadata i32** %has_dep_p, metadata !4656, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.declare(metadata i32* %full_ds, metadata !4659, metadata !DIExpression()), !dbg !4660
  %4 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4661
  %tobool = icmp ne i8 %4, 0, !dbg !4661
  br i1 %tobool, label %if.then, label %if.end, !dbg !4663

if.then:                                          ; preds = %entry
  %5 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4664
  %6 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4665
  %call = call i32 @moveup_expr_inside_insn_group(%struct._expr* %5, %struct.rtx_def* %6), !dbg !4666
  store i32 %call, i32* %retval, align 4, !dbg !4667
  br label %return, !dbg !4667

if.end:                                           ; preds = %entry
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !4668
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i32 0, i32 1, !dbg !4668
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !4668
  %8 = load i32, i32* %type, align 8, !dbg !4668
  %cmp = icmp eq i32 %8, 23, !dbg !4668
  br i1 %cmp, label %if.else, label %lor.lhs.false, !dbg !4668

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !4668
  %id1 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %9, i32 0, i32 1, !dbg !4668
  %type2 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id1, i32 0, i32 0, !dbg !4668
  %10 = load i32, i32* %type2, align 8, !dbg !4668
  %cmp3 = icmp eq i32 %10, 24, !dbg !4668
  br i1 %cmp3, label %if.else, label %if.then4, !dbg !4670

if.then4:                                         ; preds = %lor.lhs.false
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4671
  %call5 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %11), !dbg !4674
  %tobool6 = icmp ne i8 %call5, 0, !dbg !4674
  br i1 %tobool6, label %if.then7, label %if.end37, !dbg !4675

if.then7:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %fallthru_bb, metadata !4676, metadata !DIExpression()), !dbg !4678
  %12 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4679
  %call8 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %12), !dbg !4681
  %conv = zext i8 %call8 to i32, !dbg !4681
  %tobool9 = icmp ne i32 %conv, 0, !dbg !4681
  br i1 %tobool9, label %if.then14, label %lor.lhs.false10, !dbg !4682

lor.lhs.false10:                                  ; preds = %if.then7
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4683
  %call11 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %13), !dbg !4684
  %conv12 = zext i8 %call11 to i32, !dbg !4684
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !4684
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !4685

if.then14:                                        ; preds = %lor.lhs.false10, %if.then7
  store i32 2, i32* %retval, align 4, !dbg !4686
  br label %return, !dbg !4686

if.end15:                                         ; preds = %lor.lhs.false10
  %14 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4687
  %call16 = call zeroext i8 @bookkeeping_can_be_created_if_moved_through_p(%struct.rtx_def* %14), !dbg !4689
  %tobool17 = icmp ne i8 %call16, 0, !dbg !4689
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !4690

if.then18:                                        ; preds = %if.end15
  store i32 2, i32* %retval, align 4, !dbg !4691
  br label %return, !dbg !4691

if.end19:                                         ; preds = %if.end15
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4692
  %call20 = call %struct.basic_block_def* @fallthru_bb_of_jump(%struct.rtx_def* %15), !dbg !4694
  store %struct.basic_block_def* %call20, %struct.basic_block_def** %fallthru_bb, align 8, !dbg !4695
  %cmp21 = icmp eq %struct.basic_block_def* %call20, null, !dbg !4696
  br i1 %cmp21, label %if.then26, label %lor.lhs.false23, !dbg !4697

lor.lhs.false23:                                  ; preds = %if.end19
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %fallthru_bb, align 8, !dbg !4698
  %call24 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %16), !dbg !4699
  %tobool25 = icmp ne i8 %call24, 0, !dbg !4699
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !4700

if.then26:                                        ; preds = %lor.lhs.false23, %if.end19
  store i32 2, i32* %retval, align 4, !dbg !4701
  br label %return, !dbg !4701

if.end27:                                         ; preds = %lor.lhs.false23
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4702
  %call28 = call i32 @any_uncondjump_p(%struct.rtx_def* %17), !dbg !4704
  %tobool29 = icmp ne i32 %call28, 0, !dbg !4704
  br i1 %tobool29, label %if.end36, label %land.lhs.true, !dbg !4705

land.lhs.true:                                    ; preds = %if.end27
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4706
  %19 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4707
  %call30 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %18, %struct.rtx_def* %19), !dbg !4708
  %tobool31 = icmp ne i8 %call30, 0, !dbg !4708
  br i1 %tobool31, label %if.end36, label %land.lhs.true32, !dbg !4709

land.lhs.true32:                                  ; preds = %land.lhs.true
  %20 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4710
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !4710
  %bf.load = load i32, i32* %21, align 8, !dbg !4710
  %bf.clear = and i32 %bf.load, 65535, !dbg !4710
  %cmp33 = icmp eq i32 %bf.clear, 7, !dbg !4710
  br i1 %cmp33, label %if.end36, label %if.then35, !dbg !4711

if.then35:                                        ; preds = %land.lhs.true32
  store i32 2, i32* %retval, align 4, !dbg !4712
  br label %return, !dbg !4712

if.end36:                                         ; preds = %land.lhs.true32, %land.lhs.true, %if.end27
  br label %if.end37, !dbg !4713

if.end37:                                         ; preds = %if.end36, %if.then4
  %22 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4714
  %cant_move = getelementptr inbounds %struct._expr, %struct._expr* %22, i32 0, i32 12, !dbg !4714
  %bf.load38 = load i8, i8* %cant_move, align 1, !dbg !4714
  %bf.lshr = lshr i8 %bf.load38, 3, !dbg !4714
  %bf.clear39 = and i8 %bf.lshr, 1, !dbg !4714
  %bf.cast = zext i8 %bf.clear39 to i32, !dbg !4714
  %tobool40 = icmp ne i32 %bf.cast, 0, !dbg !4714
  br i1 %tobool40, label %land.lhs.true41, label %if.end49, !dbg !4716

land.lhs.true41:                                  ; preds = %if.end37
  %23 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4717
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !4717
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4717
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !4717
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !4717
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4717
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4718
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !4718
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !4718
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 3, !dbg !4718
  %rt_bb45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.basic_block_def**, !dbg !4718
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb45, align 8, !dbg !4718
  %cmp46 = icmp ne %struct.basic_block_def* %24, %26, !dbg !4719
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !4720

if.then48:                                        ; preds = %land.lhs.true41
  store i32 2, i32* %retval, align 4, !dbg !4721
  br label %return, !dbg !4721

if.end49:                                         ; preds = %land.lhs.true41, %if.end37
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4722
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !4722
  %bf.load50 = load i32, i32* %28, align 8, !dbg !4722
  %bf.lshr51 = lshr i32 %bf.load50, 28, !dbg !4722
  %bf.clear52 = and i32 %bf.lshr51, 1, !dbg !4722
  %tobool53 = icmp ne i32 %bf.clear52, 0, !dbg !4722
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !4724

if.then54:                                        ; preds = %if.end49
  store i32 2, i32* %retval, align 4, !dbg !4725
  br label %return, !dbg !4725

if.end55:                                         ; preds = %if.end49
  br label %if.end58, !dbg !4726

if.else:                                          ; preds = %lor.lhs.false, %if.end
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4727
  %call56 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %29), !dbg !4727
  %tobool57 = icmp ne i8 %call56, 0, !dbg !4727
  br i1 %tobool57, label %cond.true, label %cond.false, !dbg !4727

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2192, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4727
  br label %cond.end, !dbg !4727

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !4727

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4727
  br label %if.end58

if.end58:                                         ; preds = %cond.end, %if.end55
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4728
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !4728
  %bf.load59 = load i32, i32* %31, align 8, !dbg !4728
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !4728
  %cmp61 = icmp eq i32 %bf.clear60, 7, !dbg !4728
  br i1 %cmp61, label %land.lhs.true63, label %if.end79, !dbg !4730

land.lhs.true63:                                  ; preds = %if.end58
  %32 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4731
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !4731
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !4731
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 3, !dbg !4731
  %rt_bb67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.basic_block_def**, !dbg !4731
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb67, align 8, !dbg !4731
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4732
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !4732
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !4732
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 3, !dbg !4732
  %rt_bb71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.basic_block_def**, !dbg !4732
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb71, align 8, !dbg !4732
  %cmp72 = icmp ne %struct.basic_block_def* %33, %35, !dbg !4733
  br i1 %cmp72, label %land.lhs.true74, label %if.end79, !dbg !4734

land.lhs.true74:                                  ; preds = %land.lhs.true63
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4735
  %37 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4736
  %call75 = call zeroext i8 @moving_insn_creates_bookkeeping_block_p(%struct.rtx_def* %36, %struct.rtx_def* %37), !dbg !4737
  %conv76 = zext i8 %call75 to i32, !dbg !4737
  %tobool77 = icmp ne i32 %conv76, 0, !dbg !4737
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !4738

if.then78:                                        ; preds = %land.lhs.true74
  store i32 2, i32* %retval, align 4, !dbg !4739
  br label %return, !dbg !4739

if.end79:                                         ; preds = %land.lhs.true74, %land.lhs.true63, %if.end58
  store i8 0, i8* @was_target_conflict, align 1, !dbg !4740
  %38 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4741
  %39 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4742
  %call80 = call i32 @has_dependence_p(%struct._expr* %38, %struct.rtx_def* %39, i32** %has_dep_p), !dbg !4743
  store i32 %call80, i32* %full_ds, align 4, !dbg !4744
  %40 = load i32, i32* %full_ds, align 4, !dbg !4745
  %cmp81 = icmp eq i32 %40, 0, !dbg !4747
  br i1 %cmp81, label %if.then83, label %if.else95, !dbg !4748

if.then83:                                        ; preds = %if.end79
  %41 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4749
  %vinsn84 = getelementptr inbounds %struct._expr, %struct._expr* %41, i32 0, i32 0, !dbg !4749
  %42 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn84, align 8, !dbg !4749
  %may_trap_p = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %42, i32 0, i32 6, !dbg !4749
  %43 = load i8, i8* %may_trap_p, align 8, !dbg !4749
  %conv85 = zext i8 %43 to i32, !dbg !4749
  %tobool86 = icmp ne i32 %conv85, 0, !dbg !4749
  br i1 %tobool86, label %land.lhs.true87, label %if.then93, !dbg !4749

land.lhs.true87:                                  ; preds = %if.then83
  %44 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4749
  %call88 = call zeroext i8 @sel_insn_has_single_succ_p(%struct.rtx_def* %44, i32 7), !dbg !4749
  %tobool89 = icmp ne i8 %call88, 0, !dbg !4749
  br i1 %tobool89, label %if.then93, label %land.lhs.true90, !dbg !4749

land.lhs.true90:                                  ; preds = %land.lhs.true87
  %45 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4749
  %call91 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %45), !dbg !4749
  %tobool92 = icmp ne i8 %call91, 0, !dbg !4749
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !4752

if.then93:                                        ; preds = %land.lhs.true90, %land.lhs.true87, %if.then83
  store i32 0, i32* %retval, align 4, !dbg !4753
  br label %return, !dbg !4753

if.end94:                                         ; preds = %land.lhs.true90
  br label %if.end107, !dbg !4754

if.else95:                                        ; preds = %if.end79
  %46 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !4755
  %id96 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %46, i32 0, i32 1, !dbg !4755
  %type97 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id96, i32 0, i32 0, !dbg !4755
  %47 = load i32, i32* %type97, align 8, !dbg !4755
  %cmp98 = icmp eq i32 %47, 23, !dbg !4755
  br i1 %cmp98, label %if.end106, label %lor.lhs.false100, !dbg !4755

lor.lhs.false100:                                 ; preds = %if.else95
  %48 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !4755
  %id101 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %48, i32 0, i32 1, !dbg !4755
  %type102 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id101, i32 0, i32 0, !dbg !4755
  %49 = load i32, i32* %type102, align 8, !dbg !4755
  %cmp103 = icmp eq i32 %49, 24, !dbg !4755
  br i1 %cmp103, label %if.end106, label %if.then105, !dbg !4758

if.then105:                                       ; preds = %lor.lhs.false100
  store i32 2, i32* %retval, align 4, !dbg !4759
  br label %return, !dbg !4759

if.end106:                                        ; preds = %lor.lhs.false100, %if.else95
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end94
  %50 = load i32, i32* %full_ds, align 4, !dbg !4760
  %cmp108 = icmp ne i32 %50, 0, !dbg !4762
  br i1 %cmp108, label %land.lhs.true110, label %if.end130, !dbg !4763

land.lhs.true110:                                 ; preds = %if.end107
  %51 = load i32, i32* %full_ds, align 4, !dbg !4764
  %call111 = call zeroext i8 @can_speculate_dep_p(i32 %51), !dbg !4765
  %conv112 = zext i8 %call111 to i32, !dbg !4765
  %tobool113 = icmp ne i32 %conv112, 0, !dbg !4765
  br i1 %tobool113, label %if.then114, label %if.end130, !dbg !4766

if.then114:                                       ; preds = %land.lhs.true110
  call void @llvm.dbg.declare(metadata i32* %res, metadata !4767, metadata !DIExpression()), !dbg !4769
  %52 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4770
  %53 = load i32, i32* %full_ds, align 4, !dbg !4771
  %call115 = call i32 @speculate_expr(%struct._expr* %52, i32 %53), !dbg !4772
  store i32 %call115, i32* %res, align 4, !dbg !4773
  %54 = load i32, i32* %res, align 4, !dbg !4774
  %cmp116 = icmp sge i32 %54, 0, !dbg !4776
  br i1 %cmp116, label %if.then118, label %if.end129, !dbg !4777

if.then118:                                       ; preds = %if.then114
  store i32 0, i32* %full_ds, align 4, !dbg !4778
  %55 = load i32, i32* %res, align 4, !dbg !4780
  %cmp119 = icmp sgt i32 %55, 0, !dbg !4781
  %conv120 = zext i1 %cmp119 to i32, !dbg !4781
  %conv121 = trunc i32 %conv120 to i8, !dbg !4782
  store i8 %conv121, i8* %was_changed, align 1, !dbg !4783
  %56 = load i32, i32* %res, align 4, !dbg !4784
  %cmp122 = icmp eq i32 %56, 2, !dbg !4786
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !4787

if.then124:                                       ; preds = %if.then118
  store i8 1, i8* @was_target_conflict, align 1, !dbg !4788
  br label %if.end125, !dbg !4789

if.end125:                                        ; preds = %if.then124, %if.then118
  %57 = load i32*, i32** %ptrans_type.addr, align 8, !dbg !4790
  %tobool126 = icmp ne i32* %57, null, !dbg !4790
  br i1 %tobool126, label %if.then127, label %if.end128, !dbg !4792

if.then127:                                       ; preds = %if.end125
  %58 = load i32*, i32** %ptrans_type.addr, align 8, !dbg !4793
  store i32 1, i32* %58, align 4, !dbg !4794
  br label %if.end128, !dbg !4795

if.end128:                                        ; preds = %if.then127, %if.end125
  call void @sel_clear_has_dependence(), !dbg !4796
  br label %if.end129, !dbg !4797

if.end129:                                        ; preds = %if.end128, %if.then114
  br label %if.end130, !dbg !4798

if.end130:                                        ; preds = %if.end129, %land.lhs.true110, %if.end107
  %59 = load i32*, i32** %has_dep_p, align 8, !dbg !4799
  %arrayidx131 = getelementptr inbounds i32, i32* %59, i64 0, !dbg !4799
  %60 = load i32, i32* %arrayidx131, align 4, !dbg !4799
  %tobool132 = icmp ne i32 %60, 0, !dbg !4799
  br i1 %tobool132, label %if.then133, label %if.end134, !dbg !4801

if.then133:                                       ; preds = %if.end130
  store i32 2, i32* %retval, align 4, !dbg !4802
  br label %return, !dbg !4802

if.end134:                                        ; preds = %if.end130
  %61 = load i32*, i32** %has_dep_p, align 8, !dbg !4803
  %arrayidx135 = getelementptr inbounds i32, i32* %61, i64 1, !dbg !4803
  %62 = load i32, i32* %arrayidx135, align 4, !dbg !4803
  %tobool136 = icmp ne i32 %62, 0, !dbg !4803
  br i1 %tobool136, label %if.then137, label %if.end147, !dbg !4805

if.then137:                                       ; preds = %if.end134
  %63 = load i8, i8* @enable_schedule_as_rhs_p, align 1, !dbg !4806
  %tobool138 = icmp ne i8 %63, 0, !dbg !4806
  br i1 %tobool138, label %lor.lhs.false139, label %if.then145, !dbg !4809

lor.lhs.false139:                                 ; preds = %if.then137
  %64 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4810
  %vinsn140 = getelementptr inbounds %struct._expr, %struct._expr* %64, i32 0, i32 0, !dbg !4810
  %65 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn140, align 8, !dbg !4810
  %id141 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %65, i32 0, i32 1, !dbg !4810
  %type142 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id141, i32 0, i32 0, !dbg !4810
  %66 = load i32, i32* %type142, align 8, !dbg !4810
  %cmp143 = icmp eq i32 %66, 23, !dbg !4810
  br i1 %cmp143, label %if.end146, label %if.then145, !dbg !4811

if.then145:                                       ; preds = %lor.lhs.false139, %if.then137
  store i32 2, i32* %retval, align 4, !dbg !4812
  br label %return, !dbg !4812

if.end146:                                        ; preds = %lor.lhs.false139
  %67 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4813
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %67, i32 0, i32 11, !dbg !4813
  store i8 0, i8* %target_available, align 8, !dbg !4814
  store i8 1, i8* @was_target_conflict, align 1, !dbg !4815
  store i8 1, i8* %as_rhs, align 1, !dbg !4816
  br label %if.end147, !dbg !4817

if.end147:                                        ; preds = %if.end146, %if.end134
  %68 = load i32*, i32** %has_dep_p, align 8, !dbg !4818
  %arrayidx148 = getelementptr inbounds i32, i32* %68, i64 2, !dbg !4818
  %69 = load i32, i32* %arrayidx148, align 4, !dbg !4818
  %tobool149 = icmp ne i32 %69, 0, !dbg !4818
  br i1 %tobool149, label %if.then150, label %if.end207, !dbg !4820

if.then150:                                       ; preds = %if.end147
  call void @llvm.dbg.declare(metadata i32** %rhs_dsp, metadata !4821, metadata !DIExpression()), !dbg !4823
  %70 = load i32*, i32** %has_dep_p, align 8, !dbg !4824
  %arrayidx151 = getelementptr inbounds i32, i32* %70, i64 2, !dbg !4824
  store i32* %arrayidx151, i32** %rhs_dsp, align 8, !dbg !4823
  %71 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !4825
  %id152 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %71, i32 0, i32 1, !dbg !4825
  %type153 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id152, i32 0, i32 0, !dbg !4825
  %72 = load i32, i32* %type153, align 8, !dbg !4825
  %cmp154 = icmp eq i32 %72, 23, !dbg !4825
  br i1 %cmp154, label %cond.false162, label %lor.lhs.false156, !dbg !4825

lor.lhs.false156:                                 ; preds = %if.then150
  %73 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !4825
  %id157 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %73, i32 0, i32 1, !dbg !4825
  %type158 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id157, i32 0, i32 0, !dbg !4825
  %74 = load i32, i32* %type158, align 8, !dbg !4825
  %cmp159 = icmp eq i32 %74, 24, !dbg !4825
  br i1 %cmp159, label %cond.false162, label %cond.true161, !dbg !4825

cond.true161:                                     ; preds = %lor.lhs.false156
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2271, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4825
  br label %cond.end163, !dbg !4825

cond.false162:                                    ; preds = %lor.lhs.false156, %if.then150
  br label %cond.end163, !dbg !4825

cond.end163:                                      ; preds = %cond.false162, %cond.true161
  %cond164 = phi i32 [ 0, %cond.true161 ], [ 0, %cond.false162 ], !dbg !4825
  %75 = load i32*, i32** %rhs_dsp, align 8, !dbg !4826
  %76 = load i32, i32* %75, align 4, !dbg !4828
  %call165 = call zeroext i8 @can_speculate_dep_p(i32 %76), !dbg !4829
  %tobool166 = icmp ne i8 %call165, 0, !dbg !4829
  br i1 %tobool166, label %if.then167, label %if.else185, !dbg !4830

if.then167:                                       ; preds = %cond.end163
  call void @llvm.dbg.declare(metadata i32* %res168, metadata !4831, metadata !DIExpression()), !dbg !4833
  %77 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4834
  %78 = load i32*, i32** %rhs_dsp, align 8, !dbg !4835
  %79 = load i32, i32* %78, align 4, !dbg !4836
  %call169 = call i32 @speculate_expr(%struct._expr* %77, i32 %79), !dbg !4837
  store i32 %call169, i32* %res168, align 4, !dbg !4838
  %80 = load i32, i32* %res168, align 4, !dbg !4839
  %cmp170 = icmp sge i32 %80, 0, !dbg !4841
  br i1 %cmp170, label %if.then172, label %if.else183, !dbg !4842

if.then172:                                       ; preds = %if.then167
  %81 = load i32*, i32** %rhs_dsp, align 8, !dbg !4843
  store i32 0, i32* %81, align 4, !dbg !4845
  %82 = load i32, i32* %res168, align 4, !dbg !4846
  %cmp173 = icmp sgt i32 %82, 0, !dbg !4847
  %conv174 = zext i1 %cmp173 to i32, !dbg !4847
  %conv175 = trunc i32 %conv174 to i8, !dbg !4848
  store i8 %conv175, i8* %was_changed, align 1, !dbg !4849
  %83 = load i32, i32* %res168, align 4, !dbg !4850
  %cmp176 = icmp eq i32 %83, 2, !dbg !4852
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !4853

if.then178:                                       ; preds = %if.then172
  store i8 1, i8* @was_target_conflict, align 1, !dbg !4854
  br label %if.end179, !dbg !4855

if.end179:                                        ; preds = %if.then178, %if.then172
  %84 = load i32*, i32** %ptrans_type.addr, align 8, !dbg !4856
  %tobool180 = icmp ne i32* %84, null, !dbg !4856
  br i1 %tobool180, label %if.then181, label %if.end182, !dbg !4858

if.then181:                                       ; preds = %if.end179
  %85 = load i32*, i32** %ptrans_type.addr, align 8, !dbg !4859
  store i32 1, i32* %85, align 4, !dbg !4860
  br label %if.end182, !dbg !4861

if.end182:                                        ; preds = %if.then181, %if.end179
  br label %if.end184, !dbg !4862

if.else183:                                       ; preds = %if.then167
  store i32 2, i32* %retval, align 4, !dbg !4863
  br label %return, !dbg !4863

if.end184:                                        ; preds = %if.end182
  br label %if.end206, !dbg !4864

if.else185:                                       ; preds = %cond.end163
  %86 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4865
  %87 = load i32*, i32** %rhs_dsp, align 8, !dbg !4867
  %88 = load i32, i32* %87, align 4, !dbg !4868
  %call186 = call zeroext i8 @can_substitute_through_p(%struct.rtx_def* %86, i32 %88), !dbg !4869
  %conv187 = zext i8 %call186 to i32, !dbg !4869
  %tobool188 = icmp ne i32 %conv187, 0, !dbg !4869
  br i1 %tobool188, label %land.lhs.true189, label %if.else204, !dbg !4870

land.lhs.true189:                                 ; preds = %if.else185
  %89 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4871
  %90 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4872
  %call190 = call zeroext i8 @substitute_reg_in_expr(%struct._expr* %89, %struct.rtx_def* %90, i8 zeroext 0), !dbg !4873
  %conv191 = zext i8 %call190 to i32, !dbg !4873
  %tobool192 = icmp ne i32 %conv191, 0, !dbg !4873
  br i1 %tobool192, label %if.then193, label %if.else204, !dbg !4874

if.then193:                                       ; preds = %land.lhs.true189
  %91 = load i8, i8* %was_changed, align 1, !dbg !4875
  %tobool194 = icmp ne i8 %91, 0, !dbg !4875
  br i1 %tobool194, label %cond.true195, label %cond.false196, !dbg !4875

cond.true195:                                     ; preds = %if.then193
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2297, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4875
  br label %cond.end197, !dbg !4875

cond.false196:                                    ; preds = %if.then193
  br label %cond.end197, !dbg !4875

cond.end197:                                      ; preds = %cond.false196, %cond.true195
  %cond198 = phi i32 [ 0, %cond.true195 ], [ 0, %cond.false196 ], !dbg !4875
  store i8 1, i8* %was_changed, align 1, !dbg !4877
  %92 = load i32*, i32** %ptrans_type.addr, align 8, !dbg !4878
  %tobool199 = icmp ne i32* %92, null, !dbg !4878
  br i1 %tobool199, label %if.then200, label %if.end201, !dbg !4880

if.then200:                                       ; preds = %cond.end197
  %93 = load i32*, i32** %ptrans_type.addr, align 8, !dbg !4881
  store i32 0, i32* %93, align 4, !dbg !4882
  br label %if.end201, !dbg !4883

if.end201:                                        ; preds = %if.then200, %cond.end197
  %94 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4884
  %was_substituted = getelementptr inbounds %struct._expr, %struct._expr* %94, i32 0, i32 12, !dbg !4884
  %bf.load202 = load i8, i8* %was_substituted, align 1, !dbg !4885
  %bf.clear203 = and i8 %bf.load202, -3, !dbg !4885
  %bf.set = or i8 %bf.clear203, 2, !dbg !4885
  store i8 %bf.set, i8* %was_substituted, align 1, !dbg !4885
  br label %if.end205, !dbg !4886

if.else204:                                       ; preds = %land.lhs.true189, %if.else185
  store i32 2, i32* %retval, align 4, !dbg !4887
  br label %return, !dbg !4887

if.end205:                                        ; preds = %if.end201
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.end184
  br label %if.end207, !dbg !4888

if.end207:                                        ; preds = %if.end206, %if.end147
  %95 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4889
  %vinsn208 = getelementptr inbounds %struct._expr, %struct._expr* %95, i32 0, i32 0, !dbg !4889
  %96 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn208, align 8, !dbg !4889
  %may_trap_p209 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %96, i32 0, i32 6, !dbg !4889
  %97 = load i8, i8* %may_trap_p209, align 8, !dbg !4889
  %conv210 = zext i8 %97 to i32, !dbg !4889
  %tobool211 = icmp ne i32 %conv210, 0, !dbg !4889
  br i1 %tobool211, label %land.lhs.true212, label %if.end219, !dbg !4889

land.lhs.true212:                                 ; preds = %if.end207
  %98 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4889
  %call213 = call zeroext i8 @sel_insn_has_single_succ_p(%struct.rtx_def* %98, i32 7), !dbg !4889
  %tobool214 = icmp ne i8 %call213, 0, !dbg !4889
  br i1 %tobool214, label %if.end219, label %land.lhs.true215, !dbg !4889

land.lhs.true215:                                 ; preds = %land.lhs.true212
  %99 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !4889
  %call216 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %99), !dbg !4889
  %tobool217 = icmp ne i8 %call216, 0, !dbg !4889
  br i1 %tobool217, label %if.end219, label %if.then218, !dbg !4891

if.then218:                                       ; preds = %land.lhs.true215
  store i32 2, i32* %retval, align 4, !dbg !4892
  br label %return, !dbg !4892

if.end219:                                        ; preds = %land.lhs.true215, %land.lhs.true212, %if.end207
  %100 = load i8, i8* %was_changed, align 1, !dbg !4893
  %conv220 = zext i8 %100 to i32, !dbg !4893
  %tobool221 = icmp ne i32 %conv220, 0, !dbg !4893
  br i1 %tobool221, label %cond.true222, label %cond.false223, !dbg !4893

cond.true222:                                     ; preds = %if.end219
  br label %cond.end227, !dbg !4893

cond.false223:                                    ; preds = %if.end219
  %101 = load i8, i8* %as_rhs, align 1, !dbg !4894
  %conv224 = zext i8 %101 to i32, !dbg !4894
  %tobool225 = icmp ne i32 %conv224, 0, !dbg !4894
  %102 = zext i1 %tobool225 to i64, !dbg !4894
  %cond226 = select i1 %tobool225, i32 1, i32 0, !dbg !4894
  br label %cond.end227, !dbg !4893

cond.end227:                                      ; preds = %cond.false223, %cond.true222
  %cond228 = phi i32 [ 3, %cond.true222 ], [ %cond226, %cond.false223 ], !dbg !4893
  store i32 %cond228, i32* %retval, align 4, !dbg !4895
  br label %return, !dbg !4895

return:                                           ; preds = %cond.end227, %if.then218, %if.else204, %if.else183, %if.then145, %if.then133, %if.then105, %if.then93, %if.then78, %if.then54, %if.then48, %if.then35, %if.then26, %if.then18, %if.then14, %if.then
  %103 = load i32, i32* %retval, align 4, !dbg !4896
  ret i32 %103, !dbg !4896
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_bitmap_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext %inside_insn_group, i32 %res) #0 !dbg !4897 {
entry:
  %expr.addr = alloca %struct._expr*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %inside_insn_group.addr = alloca i8, align 1
  %res.addr = alloca i32, align 4
  %expr_uid = alloca i32, align 4
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !4900, metadata !DIExpression()), !dbg !4901
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4902, metadata !DIExpression()), !dbg !4903
  store i8 %inside_insn_group, i8* %inside_insn_group.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %inside_insn_group.addr, metadata !4904, metadata !DIExpression()), !dbg !4905
  store i32 %res, i32* %res.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %res.addr, metadata !4906, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.declare(metadata i32* %expr_uid, metadata !4908, metadata !DIExpression()), !dbg !4909
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4910
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !4910
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4910
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i32 0, i32 0, !dbg !4910
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !4910
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !4910
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4910
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4910
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4910
  %3 = load i32, i32* %rt_int, align 8, !dbg !4910
  store i32 %3, i32* %expr_uid, align 4, !dbg !4909
  %4 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4911
  %tobool = icmp ne i8 %4, 0, !dbg !4911
  br i1 %tobool, label %if.then, label %if.end, !dbg !4913

if.then:                                          ; preds = %entry
  br label %if.end122, !dbg !4914

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %res.addr, align 4, !dbg !4915
  %cmp = icmp eq i32 %5, 2, !dbg !4917
  br i1 %cmp, label %if.then1, label %if.else, !dbg !4918

if.then1:                                         ; preds = %if.end
  %6 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4919
  %tobool2 = icmp ne %struct.VEC_sel_insn_data_def_heap* %6, null, !dbg !4919
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !4919

cond.true:                                        ; preds = %if.then1
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4919
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %7, i32 0, i32 0, !dbg !4919
  br label %cond.end, !dbg !4919

cond.false:                                       ; preds = %if.then1
  br label %cond.end, !dbg !4919

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4919
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4919
  %tobool3 = icmp ne %struct.VEC_int_heap* %8, null, !dbg !4919
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !4919

cond.true4:                                       ; preds = %cond.end
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4919
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i32 0, i32 0, !dbg !4919
  br label %cond.end7, !dbg !4919

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !4919

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi %struct.VEC_int_base* [ %base5, %cond.true4 ], [ null, %cond.false6 ], !dbg !4919
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4919
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !4919
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !4919
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !4919
  %rt_int12 = bitcast %union.rtunion_def* %arrayidx11 to i32*, !dbg !4919
  %11 = load i32, i32* %rt_int12, align 8, !dbg !4919
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond8, i32 %11), !dbg !4919
  %call13 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !4919
  %analyzed_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call13, i32 0, i32 4, !dbg !4919
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps, align 8, !dbg !4919
  %13 = load i32, i32* %expr_uid, align 4, !dbg !4921
  %call14 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %12, i32 %13), !dbg !4922
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4923
  %tobool15 = icmp ne %struct.VEC_sel_insn_data_def_heap* %14, null, !dbg !4923
  br i1 %tobool15, label %cond.true16, label %cond.false18, !dbg !4923

cond.true16:                                      ; preds = %cond.end7
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4923
  %base17 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i32 0, i32 0, !dbg !4923
  br label %cond.end19, !dbg !4923

cond.false18:                                     ; preds = %cond.end7
  br label %cond.end19, !dbg !4923

cond.end19:                                       ; preds = %cond.false18, %cond.true16
  %cond20 = phi %struct.VEC_sel_insn_data_def_base* [ %base17, %cond.true16 ], [ null, %cond.false18 ], !dbg !4923
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4923
  %tobool21 = icmp ne %struct.VEC_int_heap* %16, null, !dbg !4923
  br i1 %tobool21, label %cond.true22, label %cond.false24, !dbg !4923

cond.true22:                                      ; preds = %cond.end19
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4923
  %base23 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %17, i32 0, i32 0, !dbg !4923
  br label %cond.end25, !dbg !4923

cond.false24:                                     ; preds = %cond.end19
  br label %cond.end25, !dbg !4923

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi %struct.VEC_int_base* [ %base23, %cond.true22 ], [ null, %cond.false24 ], !dbg !4923
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4923
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !4923
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !4923
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 0, !dbg !4923
  %rt_int30 = bitcast %union.rtunion_def* %arrayidx29 to i32*, !dbg !4923
  %19 = load i32, i32* %rt_int30, align 8, !dbg !4923
  %call31 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond26, i32 %19), !dbg !4923
  %call32 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond20, i32 %call31), !dbg !4923
  %found_deps = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call32, i32 0, i32 5, !dbg !4923
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps, align 8, !dbg !4923
  %21 = load i32, i32* %expr_uid, align 4, !dbg !4924
  %call33 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %20, i32 %21), !dbg !4925
  br label %if.end122, !dbg !4926

if.else:                                          ; preds = %if.end
  %22 = load i32, i32* %res.addr, align 4, !dbg !4927
  %cmp34 = icmp eq i32 %22, 0, !dbg !4929
  br i1 %cmp34, label %if.then35, label %if.else76, !dbg !4930

if.then35:                                        ; preds = %if.else
  %23 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4931
  %tobool36 = icmp ne %struct.VEC_sel_insn_data_def_heap* %23, null, !dbg !4931
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !4931

cond.true37:                                      ; preds = %if.then35
  %24 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4931
  %base38 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %24, i32 0, i32 0, !dbg !4931
  br label %cond.end40, !dbg !4931

cond.false39:                                     ; preds = %if.then35
  br label %cond.end40, !dbg !4931

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi %struct.VEC_sel_insn_data_def_base* [ %base38, %cond.true37 ], [ null, %cond.false39 ], !dbg !4931
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4931
  %tobool42 = icmp ne %struct.VEC_int_heap* %25, null, !dbg !4931
  br i1 %tobool42, label %cond.true43, label %cond.false45, !dbg !4931

cond.true43:                                      ; preds = %cond.end40
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4931
  %base44 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %26, i32 0, i32 0, !dbg !4931
  br label %cond.end46, !dbg !4931

cond.false45:                                     ; preds = %cond.end40
  br label %cond.end46, !dbg !4931

cond.end46:                                       ; preds = %cond.false45, %cond.true43
  %cond47 = phi %struct.VEC_int_base* [ %base44, %cond.true43 ], [ null, %cond.false45 ], !dbg !4931
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4931
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !4931
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !4931
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !4931
  %rt_int51 = bitcast %union.rtunion_def* %arrayidx50 to i32*, !dbg !4931
  %28 = load i32, i32* %rt_int51, align 8, !dbg !4931
  %call52 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond47, i32 %28), !dbg !4931
  %call53 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond41, i32 %call52), !dbg !4931
  %analyzed_deps54 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call53, i32 0, i32 4, !dbg !4931
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps54, align 8, !dbg !4931
  %30 = load i32, i32* %expr_uid, align 4, !dbg !4933
  %call55 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %29, i32 %30), !dbg !4934
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4935
  %tobool56 = icmp ne %struct.VEC_sel_insn_data_def_heap* %31, null, !dbg !4935
  br i1 %tobool56, label %cond.true57, label %cond.false59, !dbg !4935

cond.true57:                                      ; preds = %cond.end46
  %32 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4935
  %base58 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %32, i32 0, i32 0, !dbg !4935
  br label %cond.end60, !dbg !4935

cond.false59:                                     ; preds = %cond.end46
  br label %cond.end60, !dbg !4935

cond.end60:                                       ; preds = %cond.false59, %cond.true57
  %cond61 = phi %struct.VEC_sel_insn_data_def_base* [ %base58, %cond.true57 ], [ null, %cond.false59 ], !dbg !4935
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4935
  %tobool62 = icmp ne %struct.VEC_int_heap* %33, null, !dbg !4935
  br i1 %tobool62, label %cond.true63, label %cond.false65, !dbg !4935

cond.true63:                                      ; preds = %cond.end60
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4935
  %base64 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %34, i32 0, i32 0, !dbg !4935
  br label %cond.end66, !dbg !4935

cond.false65:                                     ; preds = %cond.end60
  br label %cond.end66, !dbg !4935

cond.end66:                                       ; preds = %cond.false65, %cond.true63
  %cond67 = phi %struct.VEC_int_base* [ %base64, %cond.true63 ], [ null, %cond.false65 ], !dbg !4935
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4935
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !4935
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !4935
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 0, !dbg !4935
  %rt_int71 = bitcast %union.rtunion_def* %arrayidx70 to i32*, !dbg !4935
  %36 = load i32, i32* %rt_int71, align 8, !dbg !4935
  %call72 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond67, i32 %36), !dbg !4935
  %call73 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond61, i32 %call72), !dbg !4935
  %found_deps74 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call73, i32 0, i32 5, !dbg !4935
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps74, align 8, !dbg !4935
  %38 = load i32, i32* %expr_uid, align 4, !dbg !4936
  %call75 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %37, i32 %38), !dbg !4937
  br label %if.end121, !dbg !4938

if.else76:                                        ; preds = %if.else
  %39 = load i32, i32* %res.addr, align 4, !dbg !4939
  %cmp77 = icmp eq i32 %39, 1, !dbg !4941
  br i1 %cmp77, label %if.then78, label %if.else119, !dbg !4942

if.then78:                                        ; preds = %if.else76
  %40 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4943
  %tobool79 = icmp ne %struct.VEC_sel_insn_data_def_heap* %40, null, !dbg !4943
  br i1 %tobool79, label %cond.true80, label %cond.false82, !dbg !4943

cond.true80:                                      ; preds = %if.then78
  %41 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4943
  %base81 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %41, i32 0, i32 0, !dbg !4943
  br label %cond.end83, !dbg !4943

cond.false82:                                     ; preds = %if.then78
  br label %cond.end83, !dbg !4943

cond.end83:                                       ; preds = %cond.false82, %cond.true80
  %cond84 = phi %struct.VEC_sel_insn_data_def_base* [ %base81, %cond.true80 ], [ null, %cond.false82 ], !dbg !4943
  %42 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4943
  %tobool85 = icmp ne %struct.VEC_int_heap* %42, null, !dbg !4943
  br i1 %tobool85, label %cond.true86, label %cond.false88, !dbg !4943

cond.true86:                                      ; preds = %cond.end83
  %43 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4943
  %base87 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %43, i32 0, i32 0, !dbg !4943
  br label %cond.end89, !dbg !4943

cond.false88:                                     ; preds = %cond.end83
  br label %cond.end89, !dbg !4943

cond.end89:                                       ; preds = %cond.false88, %cond.true86
  %cond90 = phi %struct.VEC_int_base* [ %base87, %cond.true86 ], [ null, %cond.false88 ], !dbg !4943
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4943
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !4943
  %fld92 = bitcast %union.u* %u91 to [1 x %union.rtunion_def]*, !dbg !4943
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i64 0, i64 0, !dbg !4943
  %rt_int94 = bitcast %union.rtunion_def* %arrayidx93 to i32*, !dbg !4943
  %45 = load i32, i32* %rt_int94, align 8, !dbg !4943
  %call95 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond90, i32 %45), !dbg !4943
  %call96 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond84, i32 %call95), !dbg !4943
  %analyzed_deps97 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call96, i32 0, i32 4, !dbg !4943
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %analyzed_deps97, align 8, !dbg !4943
  %47 = load i32, i32* %expr_uid, align 4, !dbg !4945
  %call98 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %46, i32 %47), !dbg !4946
  %48 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4947
  %tobool99 = icmp ne %struct.VEC_sel_insn_data_def_heap* %48, null, !dbg !4947
  br i1 %tobool99, label %cond.true100, label %cond.false102, !dbg !4947

cond.true100:                                     ; preds = %cond.end89
  %49 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !4947
  %base101 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %49, i32 0, i32 0, !dbg !4947
  br label %cond.end103, !dbg !4947

cond.false102:                                    ; preds = %cond.end89
  br label %cond.end103, !dbg !4947

cond.end103:                                      ; preds = %cond.false102, %cond.true100
  %cond104 = phi %struct.VEC_sel_insn_data_def_base* [ %base101, %cond.true100 ], [ null, %cond.false102 ], !dbg !4947
  %50 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4947
  %tobool105 = icmp ne %struct.VEC_int_heap* %50, null, !dbg !4947
  br i1 %tobool105, label %cond.true106, label %cond.false108, !dbg !4947

cond.true106:                                     ; preds = %cond.end103
  %51 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4947
  %base107 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %51, i32 0, i32 0, !dbg !4947
  br label %cond.end109, !dbg !4947

cond.false108:                                    ; preds = %cond.end103
  br label %cond.end109, !dbg !4947

cond.end109:                                      ; preds = %cond.false108, %cond.true106
  %cond110 = phi %struct.VEC_int_base* [ %base107, %cond.true106 ], [ null, %cond.false108 ], !dbg !4947
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4947
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !4947
  %fld112 = bitcast %union.u* %u111 to [1 x %union.rtunion_def]*, !dbg !4947
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i64 0, i64 0, !dbg !4947
  %rt_int114 = bitcast %union.rtunion_def* %arrayidx113 to i32*, !dbg !4947
  %53 = load i32, i32* %rt_int114, align 8, !dbg !4947
  %call115 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond110, i32 %53), !dbg !4947
  %call116 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond104, i32 %call115), !dbg !4947
  %found_deps117 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call116, i32 0, i32 5, !dbg !4947
  %54 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %found_deps117, align 8, !dbg !4947
  %55 = load i32, i32* %expr_uid, align 4, !dbg !4948
  %call118 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %54, i32 %55), !dbg !4949
  br label %if.end120, !dbg !4950

if.else119:                                       ; preds = %if.else76
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2459, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4951
  br label %if.end120

if.end120:                                        ; preds = %if.else119, %cond.end109
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %cond.end66
  br label %if.end122

if.end122:                                        ; preds = %if.then, %if.end121, %cond.end25
  ret void, !dbg !4952
}

declare dso_local void @insert_in_history_vect(%struct.VEC_expr_history_def_heap**, i32, i32, %struct.vinsn_def*, %struct.vinsn_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @update_transformation_cache(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext %inside_insn_group, i32 %trans_type, %struct.vinsn_def* %expr_old_vinsn) #0 !dbg !4953 {
entry:
  %expr.addr = alloca %struct._expr*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %inside_insn_group.addr = alloca i8, align 1
  %trans_type.addr = alloca i32, align 4
  %expr_old_vinsn.addr = alloca %struct.vinsn_def*, align 8
  %pti = alloca %struct.transformed_insns*, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !4956, metadata !DIExpression()), !dbg !4957
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4958, metadata !DIExpression()), !dbg !4959
  store i8 %inside_insn_group, i8* %inside_insn_group.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %inside_insn_group.addr, metadata !4960, metadata !DIExpression()), !dbg !4961
  store i32 %trans_type, i32* %trans_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trans_type.addr, metadata !4962, metadata !DIExpression()), !dbg !4963
  store %struct.vinsn_def* %expr_old_vinsn, %struct.vinsn_def** %expr_old_vinsn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %expr_old_vinsn.addr, metadata !4964, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.declare(metadata %struct.transformed_insns** %pti, metadata !4966, metadata !DIExpression()), !dbg !4967
  %0 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !4968
  %tobool = icmp ne i8 %0, 0, !dbg !4968
  br i1 %tobool, label %if.then, label %if.end, !dbg !4970

if.then:                                          ; preds = %entry
  br label %return, !dbg !4971

if.end:                                           ; preds = %entry
  %call = call i8* @xmalloc(i64 32), !dbg !4972
  %1 = bitcast i8* %call to %struct.transformed_insns*, !dbg !4972
  store %struct.transformed_insns* %1, %struct.transformed_insns** %pti, align 8, !dbg !4973
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_old_vinsn.addr, align 8, !dbg !4974
  %3 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4975
  %vinsn_old = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %3, i32 0, i32 0, !dbg !4976
  store %struct.vinsn_def* %2, %struct.vinsn_def** %vinsn_old, align 8, !dbg !4977
  %4 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4978
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i32 0, i32 0, !dbg !4978
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !4978
  %6 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4979
  %vinsn_new = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %6, i32 0, i32 1, !dbg !4980
  store %struct.vinsn_def* %5, %struct.vinsn_def** %vinsn_new, align 8, !dbg !4981
  %7 = load i32, i32* %trans_type.addr, align 4, !dbg !4982
  %8 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4983
  %type = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %8, i32 0, i32 3, !dbg !4984
  store i32 %7, i32* %type, align 4, !dbg !4985
  %9 = load i8, i8* @was_target_conflict, align 1, !dbg !4986
  %conv = zext i8 %9 to i32, !dbg !4986
  %10 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4987
  %was_target_conflict = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %10, i32 0, i32 4, !dbg !4988
  %11 = trunc i32 %conv to i8, !dbg !4989
  %bf.load = load i8, i8* %was_target_conflict, align 8, !dbg !4989
  %bf.value = and i8 %11, 1, !dbg !4989
  %bf.clear = and i8 %bf.load, -2, !dbg !4989
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !4989
  store i8 %bf.set, i8* %was_target_conflict, align 8, !dbg !4989
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !4989
  %12 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4990
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %12, i32 0, i32 7, !dbg !4990
  %13 = load i32, i32* %spec_done_ds, align 8, !dbg !4990
  %14 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4991
  %ds = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %14, i32 0, i32 2, !dbg !4992
  store i32 %13, i32* %ds, align 8, !dbg !4993
  %15 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !4994
  %needs_spec_check_p = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 12, !dbg !4994
  %bf.load1 = load i8, i8* %needs_spec_check_p, align 1, !dbg !4994
  %bf.clear2 = and i8 %bf.load1, 1, !dbg !4994
  %bf.cast = zext i8 %bf.clear2 to i32, !dbg !4994
  %16 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4995
  %needs_check = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %16, i32 0, i32 4, !dbg !4996
  %17 = trunc i32 %bf.cast to i8, !dbg !4997
  %bf.load3 = load i8, i8* %needs_check, align 8, !dbg !4997
  %bf.value4 = and i8 %17, 1, !dbg !4997
  %bf.shl = shl i8 %bf.value4, 1, !dbg !4997
  %bf.clear5 = and i8 %bf.load3, -3, !dbg !4997
  %bf.set6 = or i8 %bf.clear5, %bf.shl, !dbg !4997
  store i8 %bf.set6, i8* %needs_check, align 8, !dbg !4997
  %bf.result.cast7 = zext i8 %bf.value4 to i32, !dbg !4997
  %18 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !4998
  %vinsn_old8 = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %18, i32 0, i32 0, !dbg !4999
  %19 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_old8, align 8, !dbg !4999
  call void @vinsn_attach(%struct.vinsn_def* %19), !dbg !5000
  %20 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !5001
  %vinsn_new9 = getelementptr inbounds %struct.transformed_insns, %struct.transformed_insns* %20, i32 0, i32 1, !dbg !5002
  %21 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_new9, align 8, !dbg !5002
  call void @vinsn_attach(%struct.vinsn_def* %21), !dbg !5003
  %22 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !5004
  %23 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5005
  %tobool10 = icmp ne %struct.VEC_sel_insn_data_def_heap* %23, null, !dbg !5005
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !5005

cond.true:                                        ; preds = %if.end
  %24 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5005
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %24, i32 0, i32 0, !dbg !5005
  br label %cond.end, !dbg !5005

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !5005

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5005
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5005
  %tobool11 = icmp ne %struct.VEC_int_heap* %25, null, !dbg !5005
  br i1 %tobool11, label %cond.true12, label %cond.false14, !dbg !5005

cond.true12:                                      ; preds = %cond.end
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5005
  %base13 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %26, i32 0, i32 0, !dbg !5005
  br label %cond.end15, !dbg !5005

cond.false14:                                     ; preds = %cond.end
  br label %cond.end15, !dbg !5005

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi %struct.VEC_int_base* [ %base13, %cond.true12 ], [ null, %cond.false14 ], !dbg !5005
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5005
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !5005
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5005
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5005
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5005
  %28 = load i32, i32* %rt_int, align 8, !dbg !5005
  %call17 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond16, i32 %28), !dbg !5005
  %call18 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call17), !dbg !5005
  %transformed_insns = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call18, i32 0, i32 7, !dbg !5005
  %29 = load %struct.htab*, %struct.htab** %transformed_insns, align 8, !dbg !5005
  %30 = load %struct.transformed_insns*, %struct.transformed_insns** %pti, align 8, !dbg !5006
  %31 = bitcast %struct.transformed_insns* %30 to i8*, !dbg !5006
  %32 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_old_vinsn.addr, align 8, !dbg !5007
  %hash_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %32, i32 0, i32 3, !dbg !5007
  %33 = load i32, i32* %hash_rtx, align 4, !dbg !5007
  %call19 = call i8** @htab_find_slot_with_hash(%struct.htab* %29, i8* %31, i32 %33, i32 1), !dbg !5008
  %34 = bitcast i8** %call19 to %struct.transformed_insns**, !dbg !5009
  store %struct.transformed_insns* %22, %struct.transformed_insns** %34, align 8, !dbg !5010
  br label %return, !dbg !5011

return:                                           ; preds = %cond.end15, %if.then
  ret void, !dbg !5011
}

declare dso_local void @vinsn_detach(%struct.vinsn_def*) #2

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) #2

declare dso_local %struct.vinsn_def* @vinsn_copy(%struct.vinsn_def*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @moveup_expr_inside_insn_group(%struct._expr* %expr, %struct.rtx_def* %through_insn) #0 !dbg !5012 {
entry:
  %retval = alloca i32, align 4
  %expr.addr = alloca %struct._expr*, align 8
  %through_insn.addr = alloca %struct.rtx_def*, align 8
  %vi = alloca %struct.vinsn_def*, align 8
  %has_dep_p = alloca i32*, align 8
  %full_ds = alloca i32, align 4
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !5015, metadata !DIExpression()), !dbg !5016
  store %struct.rtx_def* %through_insn, %struct.rtx_def** %through_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %through_insn.addr, metadata !5017, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vi, metadata !5019, metadata !DIExpression()), !dbg !5020
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !5021
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !5021
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5021
  store %struct.vinsn_def* %1, %struct.vinsn_def** %vi, align 8, !dbg !5020
  call void @llvm.dbg.declare(metadata i32** %has_dep_p, metadata !5022, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.declare(metadata i32* %full_ds, metadata !5024, metadata !DIExpression()), !dbg !5025
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5026
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %2, null, !dbg !5026
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5026

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5026
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i32 0, i32 0, !dbg !5026
  br label %cond.end, !dbg !5026

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5026

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5026
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5026
  %tobool1 = icmp ne %struct.VEC_int_heap* %4, null, !dbg !5026
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !5026

cond.true2:                                       ; preds = %cond.end
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5026
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i32 0, i32 0, !dbg !5026
  br label %cond.end5, !dbg !5026

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !5026

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !5026
  %6 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !5026
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !5026
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5026
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5026
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5026
  %7 = load i32, i32* %rt_int, align 8, !dbg !5026
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %7), !dbg !5026
  %call7 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !5026
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i32 0, i32 10, !dbg !5026
  %8 = load i32, i32* %sched_cycle, align 8, !dbg !5026
  %cmp = icmp sgt i32 %8, 0, !dbg !5026
  br i1 %cmp, label %cond.false9, label %cond.true8, !dbg !5026

cond.true8:                                       ; preds = %cond.end5
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2026, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5026
  br label %cond.end10, !dbg !5026

cond.false9:                                      ; preds = %cond.end5
  br label %cond.end10, !dbg !5026

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32 [ 0, %cond.true8 ], [ 0, %cond.false9 ], !dbg !5026
  %9 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !5027
  %10 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !5028
  %call12 = call i32 @has_dependence_p(%struct._expr* %9, %struct.rtx_def* %10, i32** %has_dep_p), !dbg !5029
  store i32 %call12, i32* %full_ds, align 4, !dbg !5030
  %11 = load i32, i32* %full_ds, align 4, !dbg !5031
  %cmp13 = icmp eq i32 %11, 0, !dbg !5033
  br i1 %cmp13, label %if.then, label %if.end, !dbg !5034

if.then:                                          ; preds = %cond.end10
  store i32 0, i32* %retval, align 4, !dbg !5035
  br label %return, !dbg !5035

if.end:                                           ; preds = %cond.end10
  %12 = load i32*, i32** %has_dep_p, align 8, !dbg !5036
  %arrayidx14 = getelementptr inbounds i32, i32* %12, i64 2, !dbg !5036
  %13 = load i32, i32* %arrayidx14, align 4, !dbg !5036
  %tobool15 = icmp ne i32 %13, 0, !dbg !5036
  br i1 %tobool15, label %if.then16, label %if.end33, !dbg !5038

if.then16:                                        ; preds = %if.end
  %14 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !5039
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %14, i32 0, i32 1, !dbg !5039
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !5039
  %15 = load i32, i32* %type, align 8, !dbg !5039
  %cmp17 = icmp eq i32 %15, 23, !dbg !5039
  br i1 %cmp17, label %cond.false22, label %lor.lhs.false, !dbg !5039

lor.lhs.false:                                    ; preds = %if.then16
  %16 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !5039
  %id18 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %16, i32 0, i32 1, !dbg !5039
  %type19 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id18, i32 0, i32 0, !dbg !5039
  %17 = load i32, i32* %type19, align 8, !dbg !5039
  %cmp20 = icmp eq i32 %17, 24, !dbg !5039
  br i1 %cmp20, label %cond.false22, label %cond.true21, !dbg !5039

cond.true21:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2036, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5039
  br label %cond.end23, !dbg !5039

cond.false22:                                     ; preds = %lor.lhs.false, %if.then16
  br label %cond.end23, !dbg !5039

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32 [ 0, %cond.true21 ], [ 0, %cond.false22 ], !dbg !5039
  %18 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !5041
  %19 = load i32*, i32** %has_dep_p, align 8, !dbg !5043
  %arrayidx25 = getelementptr inbounds i32, i32* %19, i64 2, !dbg !5043
  %20 = load i32, i32* %arrayidx25, align 4, !dbg !5043
  %call26 = call zeroext i8 @can_substitute_through_p(%struct.rtx_def* %18, i32 %20), !dbg !5044
  %conv = zext i8 %call26 to i32, !dbg !5044
  %tobool27 = icmp ne i32 %conv, 0, !dbg !5044
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !5045

land.lhs.true:                                    ; preds = %cond.end23
  %21 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !5046
  %22 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !5047
  %call28 = call zeroext i8 @substitute_reg_in_expr(%struct._expr* %21, %struct.rtx_def* %22, i8 zeroext 0), !dbg !5048
  %conv29 = zext i8 %call28 to i32, !dbg !5048
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !5048
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !5049

if.then31:                                        ; preds = %land.lhs.true
  %23 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !5050
  %was_substituted = getelementptr inbounds %struct._expr, %struct._expr* %23, i32 0, i32 12, !dbg !5050
  %bf.load = load i8, i8* %was_substituted, align 1, !dbg !5052
  %bf.clear = and i8 %bf.load, -3, !dbg !5052
  %bf.set = or i8 %bf.clear, 2, !dbg !5052
  store i8 %bf.set, i8* %was_substituted, align 1, !dbg !5052
  store i32 3, i32* %retval, align 4, !dbg !5053
  br label %return, !dbg !5053

if.end32:                                         ; preds = %land.lhs.true, %cond.end23
  store i32 0, i32* %retval, align 4, !dbg !5054
  br label %return, !dbg !5054

if.end33:                                         ; preds = %if.end
  %24 = load i32*, i32** %has_dep_p, align 8, !dbg !5055
  %arrayidx34 = getelementptr inbounds i32, i32* %24, i64 0, !dbg !5055
  %25 = load i32, i32* %arrayidx34, align 4, !dbg !5055
  %tobool35 = icmp ne i32 %25, 0, !dbg !5055
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !5057

if.then36:                                        ; preds = %if.end33
  store i32 2, i32* %retval, align 4, !dbg !5058
  br label %return, !dbg !5058

if.end37:                                         ; preds = %if.end33
  %26 = load i32*, i32** %has_dep_p, align 8, !dbg !5059
  %arrayidx38 = getelementptr inbounds i32, i32* %26, i64 1, !dbg !5059
  %27 = load i32, i32* %arrayidx38, align 4, !dbg !5059
  %tobool39 = icmp ne i32 %27, 0, !dbg !5059
  br i1 %tobool39, label %cond.false41, label %cond.true40, !dbg !5059

cond.true40:                                      ; preds = %if.end37
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2058, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5059
  br label %cond.end42, !dbg !5059

cond.false41:                                     ; preds = %if.end37
  br label %cond.end42, !dbg !5059

cond.end42:                                       ; preds = %cond.false41, %cond.true40
  %cond43 = phi i32 [ 0, %cond.true40 ], [ 0, %cond.false41 ], !dbg !5059
  store i32 1, i32* %retval, align 4, !dbg !5060
  br label %return, !dbg !5060

return:                                           ; preds = %cond.end42, %if.then36, %if.end32, %if.then31, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !5061
  ret i32 %28, !dbg !5061
}

declare dso_local zeroext i8 @control_flow_insn_p(%struct.rtx_def*) #2

declare dso_local zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def*) #2

declare dso_local zeroext i8 @bookkeeping_can_be_created_if_moved_through_p(%struct.rtx_def*) #2

declare dso_local %struct.basic_block_def* @fallthru_bb_of_jump(%struct.rtx_def*) #2

declare dso_local i32 @any_uncondjump_p(%struct.rtx_def*) #2

declare dso_local zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @moving_insn_creates_bookkeeping_block_p(%struct.rtx_def* %insn, %struct.rtx_def* %through_insn) #0 !dbg !5062 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %through_insn.addr = alloca %struct.rtx_def*, align 8
  %bbi = alloca %struct.basic_block_def*, align 8
  %bbt = alloca %struct.basic_block_def*, align 8
  %e1 = alloca %struct.edge_def*, align 8
  %e2 = alloca %struct.edge_def*, align 8
  %ei1 = alloca %struct.edge_iterator, align 8
  %ei2 = alloca %struct.edge_iterator, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j27 = alloca i32, align 4
  %__s31 = alloca i8*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp51 = alloca %struct.edge_iterator, align 8
  %__j68 = alloca i32, align 4
  %__s72 = alloca i8*, align 8
  %__j94 = alloca i32, align 4
  %__s98 = alloca i8*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5065, metadata !DIExpression()), !dbg !5066
  store %struct.rtx_def* %through_insn, %struct.rtx_def** %through_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %through_insn.addr, metadata !5067, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bbi, metadata !5069, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bbt, metadata !5071, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e1, metadata !5073, metadata !DIExpression()), !dbg !5074
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e2, metadata !5075, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei1, metadata !5077, metadata !DIExpression()), !dbg !5078
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei2, metadata !5079, metadata !DIExpression()), !dbg !5080
  %0 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !5081
  %call = call zeroext i8 @bookkeeping_can_be_created_if_moved_through_p(%struct.rtx_def* %0), !dbg !5083
  %tobool = icmp ne i8 %call, 0, !dbg !5083
  br i1 %tobool, label %if.end13, label %if.then, !dbg !5084

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !5085
  %cmp = icmp sge i32 %1, 9, !dbg !5088
  br i1 %cmp, label %if.then1, label %if.end12, !dbg !5089

if.then1:                                         ; preds = %if.then
  br label %do.body, !dbg !5090

do.body:                                          ; preds = %if.then1
  %2 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5091
  %tobool2 = icmp ne i8 %2, 0, !dbg !5091
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !5094

if.then3:                                         ; preds = %do.body
  br label %do.body4, !dbg !5091

do.body4:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !5095, metadata !DIExpression()), !dbg !5097
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)), !dbg !5097
  %mul = mul nsw i32 2, %call5, !dbg !5097
  %add = add nsw i32 1, %mul, !dbg !5097
  store i32 %add, i32* %__j, align 4, !dbg !5097
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !5098, metadata !DIExpression()), !dbg !5097
  %3 = load i32, i32* %__j, align 4, !dbg !5097
  %conv = sext i32 %3 to i64, !dbg !5097
  %mul6 = mul i64 1, %conv, !dbg !5097
  %4 = alloca i8, i64 %mul6, align 16, !dbg !5097
  store i8* %4, i8** %__s, align 8, !dbg !5097
  %5 = load i8*, i8** %__s, align 8, !dbg !5097
  %6 = load i32, i32* %__j, align 4, !dbg !5097
  %conv7 = sext i32 %6 to i64, !dbg !5097
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 %conv7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)), !dbg !5097
  %7 = load i8*, i8** %__s, align 8, !dbg !5097
  call void @sel_prepare_string_for_dot_label(i8* %7), !dbg !5097
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5097
  %9 = load i8*, i8** %__s, align 8, !dbg !5097
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %9), !dbg !5097
  br label %do.end, !dbg !5097

do.end:                                           ; preds = %do.body4
  br label %if.end, !dbg !5097

if.else:                                          ; preds = %do.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5091
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)), !dbg !5091
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end11, !dbg !5094

do.end11:                                         ; preds = %if.end
  br label %if.end12, !dbg !5094

if.end12:                                         ; preds = %do.end11, %if.then
  store i8 0, i8* %retval, align 1, !dbg !5099
  br label %return, !dbg !5099

if.end13:                                         ; preds = %entry
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5100
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !5100
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5100
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !5100
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !5100
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5100
  store %struct.basic_block_def* %12, %struct.basic_block_def** %bbi, align 8, !dbg !5101
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bbi, align 8, !dbg !5102
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 0, !dbg !5102
  %14 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5102
  %tobool14 = icmp ne %struct.VEC_edge_gc* %14, null, !dbg !5102
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !5102

cond.true:                                        ; preds = %if.end13
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %bbi, align 8, !dbg !5102
  %preds15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i32 0, i32 0, !dbg !5102
  %16 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds15, align 8, !dbg !5102
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %16, i32 0, i32 0, !dbg !5102
  br label %cond.end, !dbg !5102

cond.false:                                       ; preds = %if.end13
  br label %cond.end, !dbg !5102

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5102
  %call16 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !5102
  %cmp17 = icmp eq i32 %call16, 1, !dbg !5104
  br i1 %cmp17, label %if.then19, label %if.end43, !dbg !5105

if.then19:                                        ; preds = %cond.end
  %17 = load i32, i32* @sched_verbose, align 4, !dbg !5106
  %cmp20 = icmp sge i32 %17, 9, !dbg !5109
  br i1 %cmp20, label %if.then22, label %if.end42, !dbg !5110

if.then22:                                        ; preds = %if.then19
  br label %do.body23, !dbg !5111

do.body23:                                        ; preds = %if.then22
  %18 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5112
  %tobool24 = icmp ne i8 %18, 0, !dbg !5112
  br i1 %tobool24, label %if.then25, label %if.else38, !dbg !5115

if.then25:                                        ; preds = %do.body23
  br label %do.body26, !dbg !5112

do.body26:                                        ; preds = %if.then25
  call void @llvm.dbg.declare(metadata i32* %__j27, metadata !5116, metadata !DIExpression()), !dbg !5118
  %call28 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0)), !dbg !5118
  %mul29 = mul nsw i32 2, %call28, !dbg !5118
  %add30 = add nsw i32 1, %mul29, !dbg !5118
  store i32 %add30, i32* %__j27, align 4, !dbg !5118
  call void @llvm.dbg.declare(metadata i8** %__s31, metadata !5119, metadata !DIExpression()), !dbg !5118
  %19 = load i32, i32* %__j27, align 4, !dbg !5118
  %conv32 = sext i32 %19 to i64, !dbg !5118
  %mul33 = mul i64 1, %conv32, !dbg !5118
  %20 = alloca i8, i64 %mul33, align 16, !dbg !5118
  store i8* %20, i8** %__s31, align 8, !dbg !5118
  %21 = load i8*, i8** %__s31, align 8, !dbg !5118
  %22 = load i32, i32* %__j27, align 4, !dbg !5118
  %conv34 = sext i32 %22 to i64, !dbg !5118
  %call35 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %21, i64 %conv34, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0)), !dbg !5118
  %23 = load i8*, i8** %__s31, align 8, !dbg !5118
  call void @sel_prepare_string_for_dot_label(i8* %23), !dbg !5118
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5118
  %25 = load i8*, i8** %__s31, align 8, !dbg !5118
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %25), !dbg !5118
  br label %do.end37, !dbg !5118

do.end37:                                         ; preds = %do.body26
  br label %if.end40, !dbg !5118

if.else38:                                        ; preds = %do.body23
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5112
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0)), !dbg !5112
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %do.end37
  br label %do.end41, !dbg !5115

do.end41:                                         ; preds = %if.end40
  br label %if.end42, !dbg !5115

if.end42:                                         ; preds = %do.end41, %if.then19
  store i8 1, i8* %retval, align 1, !dbg !5120
  br label %return, !dbg !5120

if.end43:                                         ; preds = %cond.end
  %27 = load %struct.rtx_def*, %struct.rtx_def** %through_insn.addr, align 8, !dbg !5121
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !5121
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !5121
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 3, !dbg !5121
  %rt_bb47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.basic_block_def**, !dbg !5121
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb47, align 8, !dbg !5121
  store %struct.basic_block_def* %28, %struct.basic_block_def** %bbt, align 8, !dbg !5122
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %bbt, align 8, !dbg !5123
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i32 0, i32 1, !dbg !5123
  %call48 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs), !dbg !5123
  %30 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !5123
  %31 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %30, i32 0, i32 0, !dbg !5123
  %32 = extractvalue { i32, %struct.VEC_edge_gc** } %call48, 0, !dbg !5123
  store i32 %32, i32* %31, align 8, !dbg !5123
  %33 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %30, i32 0, i32 1, !dbg !5123
  %34 = extractvalue { i32, %struct.VEC_edge_gc** } %call48, 1, !dbg !5123
  store %struct.VEC_edge_gc** %34, %struct.VEC_edge_gc*** %33, align 8, !dbg !5123
  %35 = bitcast %struct.edge_iterator* %ei1 to i8*, !dbg !5123
  %36 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5123
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !5123
  br label %for.cond, !dbg !5123

for.cond:                                         ; preds = %for.inc85, %if.end43
  %37 = bitcast %struct.edge_iterator* %ei1 to { i32, %struct.VEC_edge_gc** }*, !dbg !5125
  %38 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %37, i32 0, i32 0, !dbg !5125
  %39 = load i32, i32* %38, align 8, !dbg !5125
  %40 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %37, i32 0, i32 1, !dbg !5125
  %41 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %40, align 8, !dbg !5125
  %call49 = call zeroext i8 @ei_cond(i32 %39, %struct.VEC_edge_gc** %41, %struct.edge_def** %e1), !dbg !5125
  %tobool50 = icmp ne i8 %call49, 0, !dbg !5123
  br i1 %tobool50, label %for.body, label %for.end86, !dbg !5123

for.body:                                         ; preds = %for.cond
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %bbi, align 8, !dbg !5127
  %preds52 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i32 0, i32 0, !dbg !5127
  %call53 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds52), !dbg !5127
  %43 = bitcast %struct.edge_iterator* %tmp51 to { i32, %struct.VEC_edge_gc** }*, !dbg !5127
  %44 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %43, i32 0, i32 0, !dbg !5127
  %45 = extractvalue { i32, %struct.VEC_edge_gc** } %call53, 0, !dbg !5127
  store i32 %45, i32* %44, align 8, !dbg !5127
  %46 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %43, i32 0, i32 1, !dbg !5127
  %47 = extractvalue { i32, %struct.VEC_edge_gc** } %call53, 1, !dbg !5127
  store %struct.VEC_edge_gc** %47, %struct.VEC_edge_gc*** %46, align 8, !dbg !5127
  %48 = bitcast %struct.edge_iterator* %ei2 to i8*, !dbg !5127
  %49 = bitcast %struct.edge_iterator* %tmp51 to i8*, !dbg !5127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 16, i1 false), !dbg !5127
  br label %for.cond54, !dbg !5127

for.cond54:                                       ; preds = %for.inc, %for.body
  %50 = bitcast %struct.edge_iterator* %ei2 to { i32, %struct.VEC_edge_gc** }*, !dbg !5130
  %51 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %50, i32 0, i32 0, !dbg !5130
  %52 = load i32, i32* %51, align 8, !dbg !5130
  %53 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %50, i32 0, i32 1, !dbg !5130
  %54 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %53, align 8, !dbg !5130
  %call55 = call zeroext i8 @ei_cond(i32 %52, %struct.VEC_edge_gc** %54, %struct.edge_def** %e2), !dbg !5130
  %tobool56 = icmp ne i8 %call55, 0, !dbg !5127
  br i1 %tobool56, label %for.body57, label %for.end, !dbg !5127

for.body57:                                       ; preds = %for.cond54
  %55 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !5132
  %56 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !5135
  %call58 = call %struct.basic_block_def* @find_block_for_bookkeeping(%struct.edge_def* %55, %struct.edge_def* %56, i8 zeroext 1), !dbg !5136
  %tobool59 = icmp ne %struct.basic_block_def* %call58, null, !dbg !5136
  br i1 %tobool59, label %if.then60, label %if.end84, !dbg !5137

if.then60:                                        ; preds = %for.body57
  %57 = load i32, i32* @sched_verbose, align 4, !dbg !5138
  %cmp61 = icmp sge i32 %57, 9, !dbg !5141
  br i1 %cmp61, label %if.then63, label %if.end83, !dbg !5142

if.then63:                                        ; preds = %if.then60
  br label %do.body64, !dbg !5143

do.body64:                                        ; preds = %if.then63
  %58 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5144
  %tobool65 = icmp ne i8 %58, 0, !dbg !5144
  br i1 %tobool65, label %if.then66, label %if.else79, !dbg !5147

if.then66:                                        ; preds = %do.body64
  br label %do.body67, !dbg !5144

do.body67:                                        ; preds = %if.then66
  call void @llvm.dbg.declare(metadata i32* %__j68, metadata !5148, metadata !DIExpression()), !dbg !5150
  %call69 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)), !dbg !5150
  %mul70 = mul nsw i32 2, %call69, !dbg !5150
  %add71 = add nsw i32 1, %mul70, !dbg !5150
  store i32 %add71, i32* %__j68, align 4, !dbg !5150
  call void @llvm.dbg.declare(metadata i8** %__s72, metadata !5151, metadata !DIExpression()), !dbg !5150
  %59 = load i32, i32* %__j68, align 4, !dbg !5150
  %conv73 = sext i32 %59 to i64, !dbg !5150
  %mul74 = mul i64 1, %conv73, !dbg !5150
  %60 = alloca i8, i64 %mul74, align 16, !dbg !5150
  store i8* %60, i8** %__s72, align 8, !dbg !5150
  %61 = load i8*, i8** %__s72, align 8, !dbg !5150
  %62 = load i32, i32* %__j68, align 4, !dbg !5150
  %conv75 = sext i32 %62 to i64, !dbg !5150
  %call76 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %61, i64 %conv75, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)), !dbg !5150
  %63 = load i8*, i8** %__s72, align 8, !dbg !5150
  call void @sel_prepare_string_for_dot_label(i8* %63), !dbg !5150
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5150
  %65 = load i8*, i8** %__s72, align 8, !dbg !5150
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %65), !dbg !5150
  br label %do.end78, !dbg !5150

do.end78:                                         ; preds = %do.body67
  br label %if.end81, !dbg !5150

if.else79:                                        ; preds = %do.body64
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5144
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)), !dbg !5144
  br label %if.end81

if.end81:                                         ; preds = %if.else79, %do.end78
  br label %do.end82, !dbg !5147

do.end82:                                         ; preds = %if.end81
  br label %if.end83, !dbg !5147

if.end83:                                         ; preds = %do.end82, %if.then60
  store i8 0, i8* %retval, align 1, !dbg !5152
  br label %return, !dbg !5152

if.end84:                                         ; preds = %for.body57
  br label %for.inc, !dbg !5153

for.inc:                                          ; preds = %if.end84
  call void @ei_next(%struct.edge_iterator* %ei2), !dbg !5130
  br label %for.cond54, !dbg !5130, !llvm.loop !5154

for.end:                                          ; preds = %for.cond54
  br label %for.inc85, !dbg !5156

for.inc85:                                        ; preds = %for.end
  call void @ei_next(%struct.edge_iterator* %ei1), !dbg !5125
  br label %for.cond, !dbg !5125, !llvm.loop !5157

for.end86:                                        ; preds = %for.cond
  %67 = load i32, i32* @sched_verbose, align 4, !dbg !5159
  %cmp87 = icmp sge i32 %67, 9, !dbg !5161
  br i1 %cmp87, label %if.then89, label %if.end109, !dbg !5162

if.then89:                                        ; preds = %for.end86
  br label %do.body90, !dbg !5163

do.body90:                                        ; preds = %if.then89
  %68 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5164
  %tobool91 = icmp ne i8 %68, 0, !dbg !5164
  br i1 %tobool91, label %if.then92, label %if.else105, !dbg !5167

if.then92:                                        ; preds = %do.body90
  br label %do.body93, !dbg !5164

do.body93:                                        ; preds = %if.then92
  call void @llvm.dbg.declare(metadata i32* %__j94, metadata !5168, metadata !DIExpression()), !dbg !5170
  %call95 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0)), !dbg !5170
  %mul96 = mul nsw i32 2, %call95, !dbg !5170
  %add97 = add nsw i32 1, %mul96, !dbg !5170
  store i32 %add97, i32* %__j94, align 4, !dbg !5170
  call void @llvm.dbg.declare(metadata i8** %__s98, metadata !5171, metadata !DIExpression()), !dbg !5170
  %69 = load i32, i32* %__j94, align 4, !dbg !5170
  %conv99 = sext i32 %69 to i64, !dbg !5170
  %mul100 = mul i64 1, %conv99, !dbg !5170
  %70 = alloca i8, i64 %mul100, align 16, !dbg !5170
  store i8* %70, i8** %__s98, align 8, !dbg !5170
  %71 = load i8*, i8** %__s98, align 8, !dbg !5170
  %72 = load i32, i32* %__j94, align 4, !dbg !5170
  %conv101 = sext i32 %72 to i64, !dbg !5170
  %call102 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %71, i64 %conv101, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0)), !dbg !5170
  %73 = load i8*, i8** %__s98, align 8, !dbg !5170
  call void @sel_prepare_string_for_dot_label(i8* %73), !dbg !5170
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5170
  %75 = load i8*, i8** %__s98, align 8, !dbg !5170
  %call103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %75), !dbg !5170
  br label %do.end104, !dbg !5170

do.end104:                                        ; preds = %do.body93
  br label %if.end107, !dbg !5170

if.else105:                                       ; preds = %do.body90
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5164
  %call106 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0)), !dbg !5164
  br label %if.end107

if.end107:                                        ; preds = %if.else105, %do.end104
  br label %do.end108, !dbg !5167

do.end108:                                        ; preds = %if.end107
  br label %if.end109, !dbg !5167

if.end109:                                        ; preds = %do.end108, %for.end86
  store i8 1, i8* %retval, align 1, !dbg !5172
  br label %return, !dbg !5172

return:                                           ; preds = %if.end109, %if.end83, %if.end42, %if.end12
  %77 = load i8, i8* %retval, align 1, !dbg !5173
  ret i8 %77, !dbg !5173
}

declare dso_local i32 @has_dependence_p(%struct._expr*, %struct.rtx_def*, i32**) #2

declare dso_local zeroext i8 @sel_insn_has_single_succ_p(%struct.rtx_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @can_speculate_dep_p(i32 %ds) #0 !dbg !5174 {
entry:
  %retval = alloca i8, align 1
  %ds.addr = alloca i32, align 4
  %spec_mask = alloca i32, align 4
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !5177, metadata !DIExpression()), !dbg !5178
  %0 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !5179
  %cmp = icmp eq %struct.spec_info_def* %0, null, !dbg !5181
  br i1 %cmp, label %if.then, label %if.end, !dbg !5182

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5183
  br label %return, !dbg !5183

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %ds.addr, align 4, !dbg !5184
  %and = and i32 %1, 16777215, !dbg !5184
  store i32 %and, i32* %ds.addr, align 4, !dbg !5184
  %2 = load i32, i32* %ds.addr, align 4, !dbg !5185
  %cmp1 = icmp eq i32 %2, 0, !dbg !5187
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5188

if.then2:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !5189
  br label %return, !dbg !5189

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %spec_mask, metadata !5190, metadata !DIExpression()), !dbg !5192
  %3 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !5193
  %mask = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %3, i32 0, i32 0, !dbg !5194
  %4 = load i32, i32* %mask, align 8, !dbg !5194
  store i32 %4, i32* %spec_mask, align 4, !dbg !5192
  %5 = load i32, i32* %ds.addr, align 4, !dbg !5195
  %6 = load i32, i32* %spec_mask, align 4, !dbg !5197
  %and4 = and i32 %5, %6, !dbg !5198
  %7 = load i32, i32* %ds.addr, align 4, !dbg !5199
  %cmp5 = icmp ne i32 %and4, %7, !dbg !5200
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5201

if.then6:                                         ; preds = %if.end3
  store i8 0, i8* %retval, align 1, !dbg !5202
  br label %return, !dbg !5202

if.end7:                                          ; preds = %if.end3
  %8 = load i32, i32* %ds.addr, align 4, !dbg !5203
  %call = call i32 @ds_weak(i32 %8), !dbg !5205
  %9 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !5206
  %data_weakness_cutoff = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %9, i32 0, i32 2, !dbg !5207
  %10 = load i32, i32* %data_weakness_cutoff, align 8, !dbg !5207
  %cmp8 = icmp slt i32 %call, %10, !dbg !5208
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5209

if.then9:                                         ; preds = %if.end7
  store i8 0, i8* %retval, align 1, !dbg !5210
  br label %return, !dbg !5210

if.end10:                                         ; preds = %if.end7
  store i8 1, i8* %retval, align 1, !dbg !5211
  br label %return, !dbg !5211

return:                                           ; preds = %if.end10, %if.then9, %if.then6, %if.then2, %if.then
  %11 = load i8, i8* %retval, align 1, !dbg !5212
  ret i8 %11, !dbg !5212
}

declare dso_local void @sel_clear_has_dependence() #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @can_substitute_through_p(%struct.rtx_def* %insn, i32 %ds) #0 !dbg !5213 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %ds.addr = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5216, metadata !DIExpression()), !dbg !5217
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !5218, metadata !DIExpression()), !dbg !5219
  %0 = load i32, i32* %ds.addr, align 4, !dbg !5220
  %and = and i32 %0, 33554432, !dbg !5222
  %tobool = icmp ne i32 %and, 0, !dbg !5222
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5223

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %ds.addr, align 4, !dbg !5224
  %and1 = and i32 %1, 67108864, !dbg !5225
  %tobool2 = icmp ne i32 %and1, 0, !dbg !5225
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !5226

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5227
  %tobool4 = icmp ne %struct.VEC_sel_insn_data_def_heap* %2, null, !dbg !5227
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !5227

cond.true:                                        ; preds = %lor.lhs.false3
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5227
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i32 0, i32 0, !dbg !5227
  br label %cond.end, !dbg !5227

cond.false:                                       ; preds = %lor.lhs.false3
  br label %cond.end, !dbg !5227

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5227
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5227
  %tobool5 = icmp ne %struct.VEC_int_heap* %4, null, !dbg !5227
  br i1 %tobool5, label %cond.true6, label %cond.false8, !dbg !5227

cond.true6:                                       ; preds = %cond.end
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5227
  %base7 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i32 0, i32 0, !dbg !5227
  br label %cond.end9, !dbg !5227

cond.false8:                                      ; preds = %cond.end
  br label %cond.end9, !dbg !5227

cond.end9:                                        ; preds = %cond.false8, %cond.true6
  %cond10 = phi %struct.VEC_int_base* [ %base7, %cond.true6 ], [ null, %cond.false8 ], !dbg !5227
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5227
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !5227
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5227
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5227
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5227
  %7 = load i32, i32* %rt_int, align 8, !dbg !5227
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond10, i32 %7), !dbg !5227
  %call11 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !5227
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call11, i32 0, i32 0, !dbg !5227
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 0, !dbg !5227
  %8 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5227
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i32 0, i32 1, !dbg !5227
  %rhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 2, !dbg !5227
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !5227
  %tobool12 = icmp ne %struct.rtx_def* %9, null, !dbg !5227
  br i1 %tobool12, label %lor.lhs.false13, label %if.then, !dbg !5228

lor.lhs.false13:                                  ; preds = %cond.end9
  %10 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5229
  %tobool14 = icmp ne %struct.VEC_sel_insn_data_def_heap* %10, null, !dbg !5229
  br i1 %tobool14, label %cond.true15, label %cond.false17, !dbg !5229

cond.true15:                                      ; preds = %lor.lhs.false13
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5229
  %base16 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %11, i32 0, i32 0, !dbg !5229
  br label %cond.end18, !dbg !5229

cond.false17:                                     ; preds = %lor.lhs.false13
  br label %cond.end18, !dbg !5229

cond.end18:                                       ; preds = %cond.false17, %cond.true15
  %cond19 = phi %struct.VEC_sel_insn_data_def_base* [ %base16, %cond.true15 ], [ null, %cond.false17 ], !dbg !5229
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5229
  %tobool20 = icmp ne %struct.VEC_int_heap* %12, null, !dbg !5229
  br i1 %tobool20, label %cond.true21, label %cond.false23, !dbg !5229

cond.true21:                                      ; preds = %cond.end18
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5229
  %base22 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i32 0, i32 0, !dbg !5229
  br label %cond.end24, !dbg !5229

cond.false23:                                     ; preds = %cond.end18
  br label %cond.end24, !dbg !5229

cond.end24:                                       ; preds = %cond.false23, %cond.true21
  %cond25 = phi %struct.VEC_int_base* [ %base22, %cond.true21 ], [ null, %cond.false23 ], !dbg !5229
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5229
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !5229
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !5229
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 0, !dbg !5229
  %rt_int29 = bitcast %union.rtunion_def* %arrayidx28 to i32*, !dbg !5229
  %15 = load i32, i32* %rt_int29, align 8, !dbg !5229
  %call30 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond25, i32 %15), !dbg !5229
  %call31 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond19, i32 %call30), !dbg !5229
  %expr32 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call31, i32 0, i32 0, !dbg !5229
  %vinsn33 = getelementptr inbounds %struct._expr, %struct._expr* %expr32, i32 0, i32 0, !dbg !5229
  %16 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn33, align 8, !dbg !5229
  %id34 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %16, i32 0, i32 1, !dbg !5229
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id34, i32 0, i32 1, !dbg !5229
  %17 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !5229
  %tobool35 = icmp ne %struct.rtx_def* %17, null, !dbg !5229
  br i1 %tobool35, label %if.end, label %if.then, !dbg !5230

if.then:                                          ; preds = %cond.end24, %cond.end9, %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !5231
  br label %return, !dbg !5231

if.end:                                           ; preds = %cond.end24
  %18 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5232
  %tobool36 = icmp ne %struct.VEC_sel_insn_data_def_heap* %18, null, !dbg !5232
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !5232

cond.true37:                                      ; preds = %if.end
  %19 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5232
  %base38 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %19, i32 0, i32 0, !dbg !5232
  br label %cond.end40, !dbg !5232

cond.false39:                                     ; preds = %if.end
  br label %cond.end40, !dbg !5232

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi %struct.VEC_sel_insn_data_def_base* [ %base38, %cond.true37 ], [ null, %cond.false39 ], !dbg !5232
  %20 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5232
  %tobool42 = icmp ne %struct.VEC_int_heap* %20, null, !dbg !5232
  br i1 %tobool42, label %cond.true43, label %cond.false45, !dbg !5232

cond.true43:                                      ; preds = %cond.end40
  %21 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5232
  %base44 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %21, i32 0, i32 0, !dbg !5232
  br label %cond.end46, !dbg !5232

cond.false45:                                     ; preds = %cond.end40
  br label %cond.end46, !dbg !5232

cond.end46:                                       ; preds = %cond.false45, %cond.true43
  %cond47 = phi %struct.VEC_int_base* [ %base44, %cond.true43 ], [ null, %cond.false45 ], !dbg !5232
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5232
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !5232
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !5232
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !5232
  %rt_int51 = bitcast %union.rtunion_def* %arrayidx50 to i32*, !dbg !5232
  %23 = load i32, i32* %rt_int51, align 8, !dbg !5232
  %call52 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond47, i32 %23), !dbg !5232
  %call53 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond41, i32 %call52), !dbg !5232
  %expr54 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call53, i32 0, i32 0, !dbg !5232
  %vinsn55 = getelementptr inbounds %struct._expr, %struct._expr* %expr54, i32 0, i32 0, !dbg !5232
  %24 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn55, align 8, !dbg !5232
  %id56 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %24, i32 0, i32 1, !dbg !5232
  %lhs57 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id56, i32 0, i32 1, !dbg !5232
  %25 = load %struct.rtx_def*, %struct.rtx_def** %lhs57, align 8, !dbg !5232
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !5232
  %bf.load = load i32, i32* %26, align 8, !dbg !5232
  %bf.clear = and i32 %bf.load, 65535, !dbg !5232
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5232
  br i1 %cmp, label %land.lhs.true, label %if.end84, !dbg !5234

land.lhs.true:                                    ; preds = %cond.end46
  %27 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5235
  %tobool58 = icmp ne %struct.VEC_sel_insn_data_def_heap* %27, null, !dbg !5235
  br i1 %tobool58, label %cond.true59, label %cond.false61, !dbg !5235

cond.true59:                                      ; preds = %land.lhs.true
  %28 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5235
  %base60 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %28, i32 0, i32 0, !dbg !5235
  br label %cond.end62, !dbg !5235

cond.false61:                                     ; preds = %land.lhs.true
  br label %cond.end62, !dbg !5235

cond.end62:                                       ; preds = %cond.false61, %cond.true59
  %cond63 = phi %struct.VEC_sel_insn_data_def_base* [ %base60, %cond.true59 ], [ null, %cond.false61 ], !dbg !5235
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5235
  %tobool64 = icmp ne %struct.VEC_int_heap* %29, null, !dbg !5235
  br i1 %tobool64, label %cond.true65, label %cond.false67, !dbg !5235

cond.true65:                                      ; preds = %cond.end62
  %30 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5235
  %base66 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %30, i32 0, i32 0, !dbg !5235
  br label %cond.end68, !dbg !5235

cond.false67:                                     ; preds = %cond.end62
  br label %cond.end68, !dbg !5235

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi %struct.VEC_int_base* [ %base66, %cond.true65 ], [ null, %cond.false67 ], !dbg !5235
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5235
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !5235
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !5235
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 0, !dbg !5235
  %rt_int73 = bitcast %union.rtunion_def* %arrayidx72 to i32*, !dbg !5235
  %32 = load i32, i32* %rt_int73, align 8, !dbg !5235
  %call74 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond69, i32 %32), !dbg !5235
  %call75 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond63, i32 %call74), !dbg !5235
  %expr76 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call75, i32 0, i32 0, !dbg !5235
  %vinsn77 = getelementptr inbounds %struct._expr, %struct._expr* %expr76, i32 0, i32 0, !dbg !5235
  %33 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn77, align 8, !dbg !5235
  %id78 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %33, i32 0, i32 1, !dbg !5235
  %rhs79 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id78, i32 0, i32 2, !dbg !5235
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rhs79, align 8, !dbg !5235
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !5235
  %bf.load80 = load i32, i32* %35, align 8, !dbg !5235
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !5235
  %cmp82 = icmp eq i32 %bf.clear81, 37, !dbg !5235
  br i1 %cmp82, label %if.then83, label %if.end84, !dbg !5236

if.then83:                                        ; preds = %cond.end68
  store i8 1, i8* %retval, align 1, !dbg !5237
  br label %return, !dbg !5237

if.end84:                                         ; preds = %cond.end68, %cond.end46
  store i8 0, i8* %retval, align 1, !dbg !5238
  br label %return, !dbg !5238

return:                                           ; preds = %if.end84, %if.then83, %if.then
  %36 = load i8, i8* %retval, align 1, !dbg !5239
  ret i8 %36, !dbg !5239
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @substitute_reg_in_expr(%struct._expr* %expr, %struct.rtx_def* %insn, i8 zeroext %undo) #0 !dbg !5240 {
entry:
  %retval = alloca i8, align 1
  %expr.addr = alloca %struct._expr*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %undo.addr = alloca i8, align 1
  %where = alloca %struct.rtx_def**, align 8
  %new_insn_valid = alloca i8, align 1
  %vi = alloca %struct.vinsn_def**, align 8
  %has_rhs = alloca i8, align 1
  %old = alloca %struct.rtx_def*, align 8
  %new_rtx = alloca %struct.rtx_def*, align 8
  %new_insn = alloca %struct.rtx_def*, align 8
  %where_replace = alloca %struct.rtx_def**, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !5243, metadata !DIExpression()), !dbg !5244
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5245, metadata !DIExpression()), !dbg !5246
  store i8 %undo, i8* %undo.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %undo.addr, metadata !5247, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %where, metadata !5249, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata i8* %new_insn_valid, metadata !5252, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.declare(metadata %struct.vinsn_def*** %vi, metadata !5254, metadata !DIExpression()), !dbg !5256
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !5257
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !5257
  store %struct.vinsn_def** %vinsn, %struct.vinsn_def*** %vi, align 8, !dbg !5256
  call void @llvm.dbg.declare(metadata i8* %has_rhs, metadata !5258, metadata !DIExpression()), !dbg !5259
  %1 = load %struct.vinsn_def**, %struct.vinsn_def*** %vi, align 8, !dbg !5260
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %1, align 8, !dbg !5260
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %2, i32 0, i32 1, !dbg !5260
  %rhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 2, !dbg !5260
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !5260
  %cmp = icmp ne %struct.rtx_def* %3, null, !dbg !5261
  %conv = zext i1 %cmp to i32, !dbg !5261
  %conv1 = trunc i32 %conv to i8, !dbg !5260
  store i8 %conv1, i8* %has_rhs, align 1, !dbg !5259
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old, metadata !5262, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !5264, metadata !DIExpression()), !dbg !5265
  %4 = load i8, i8* %has_rhs, align 1, !dbg !5266
  %conv2 = zext i8 %4 to i32, !dbg !5266
  %tobool = icmp ne i32 %conv2, 0, !dbg !5266
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5266

cond.true:                                        ; preds = %entry
  %5 = load %struct.vinsn_def**, %struct.vinsn_def*** %vi, align 8, !dbg !5267
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %5, align 8, !dbg !5267
  %id3 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %6, i32 0, i32 1, !dbg !5267
  %rhs4 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id3, i32 0, i32 2, !dbg !5267
  br label %cond.end, !dbg !5266

cond.false:                                       ; preds = %entry
  %7 = load %struct.vinsn_def**, %struct.vinsn_def*** %vi, align 8, !dbg !5268
  %8 = load %struct.vinsn_def*, %struct.vinsn_def** %7, align 8, !dbg !5268
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i32 0, i32 0, !dbg !5268
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !5268
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !5268
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5268
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !5268
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5268
  br label %cond.end, !dbg !5266

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def** [ %rhs4, %cond.true ], [ %rt_rtx, %cond.false ], !dbg !5266
  store %struct.rtx_def** %cond, %struct.rtx_def*** %where, align 8, !dbg !5269
  %10 = load i8, i8* %undo.addr, align 1, !dbg !5270
  %conv5 = zext i8 %10 to i32, !dbg !5270
  %tobool6 = icmp ne i32 %conv5, 0, !dbg !5270
  br i1 %tobool6, label %cond.true7, label %cond.false27, !dbg !5270

cond.true7:                                       ; preds = %cond.end
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5271
  %tobool8 = icmp ne %struct.VEC_sel_insn_data_def_heap* %11, null, !dbg !5271
  br i1 %tobool8, label %cond.true9, label %cond.false10, !dbg !5271

cond.true9:                                       ; preds = %cond.true7
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5271
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %12, i32 0, i32 0, !dbg !5271
  br label %cond.end11, !dbg !5271

cond.false10:                                     ; preds = %cond.true7
  br label %cond.end11, !dbg !5271

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond12 = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true9 ], [ null, %cond.false10 ], !dbg !5271
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5271
  %tobool13 = icmp ne %struct.VEC_int_heap* %13, null, !dbg !5271
  br i1 %tobool13, label %cond.true14, label %cond.false16, !dbg !5271

cond.true14:                                      ; preds = %cond.end11
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5271
  %base15 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i32 0, i32 0, !dbg !5271
  br label %cond.end17, !dbg !5271

cond.false16:                                     ; preds = %cond.end11
  br label %cond.end17, !dbg !5271

cond.end17:                                       ; preds = %cond.false16, %cond.true14
  %cond18 = phi %struct.VEC_int_base* [ %base15, %cond.true14 ], [ null, %cond.false16 ], !dbg !5271
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5271
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !5271
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !5271
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 0, !dbg !5271
  %rt_int = bitcast %union.rtunion_def* %arrayidx21 to i32*, !dbg !5271
  %16 = load i32, i32* %rt_int, align 8, !dbg !5271
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond18, i32 %16), !dbg !5271
  %call22 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond12, i32 %call), !dbg !5271
  %expr23 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call22, i32 0, i32 0, !dbg !5271
  %vinsn24 = getelementptr inbounds %struct._expr, %struct._expr* %expr23, i32 0, i32 0, !dbg !5271
  %17 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn24, align 8, !dbg !5271
  %id25 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %17, i32 0, i32 1, !dbg !5271
  %rhs26 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id25, i32 0, i32 2, !dbg !5271
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rhs26, align 8, !dbg !5271
  br label %cond.end49, !dbg !5270

cond.false27:                                     ; preds = %cond.end
  %19 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5272
  %tobool28 = icmp ne %struct.VEC_sel_insn_data_def_heap* %19, null, !dbg !5272
  br i1 %tobool28, label %cond.true29, label %cond.false31, !dbg !5272

cond.true29:                                      ; preds = %cond.false27
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5272
  %base30 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %20, i32 0, i32 0, !dbg !5272
  br label %cond.end32, !dbg !5272

cond.false31:                                     ; preds = %cond.false27
  br label %cond.end32, !dbg !5272

cond.end32:                                       ; preds = %cond.false31, %cond.true29
  %cond33 = phi %struct.VEC_sel_insn_data_def_base* [ %base30, %cond.true29 ], [ null, %cond.false31 ], !dbg !5272
  %21 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5272
  %tobool34 = icmp ne %struct.VEC_int_heap* %21, null, !dbg !5272
  br i1 %tobool34, label %cond.true35, label %cond.false37, !dbg !5272

cond.true35:                                      ; preds = %cond.end32
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5272
  %base36 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %22, i32 0, i32 0, !dbg !5272
  br label %cond.end38, !dbg !5272

cond.false37:                                     ; preds = %cond.end32
  br label %cond.end38, !dbg !5272

cond.end38:                                       ; preds = %cond.false37, %cond.true35
  %cond39 = phi %struct.VEC_int_base* [ %base36, %cond.true35 ], [ null, %cond.false37 ], !dbg !5272
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5272
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !5272
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !5272
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 0, !dbg !5272
  %rt_int43 = bitcast %union.rtunion_def* %arrayidx42 to i32*, !dbg !5272
  %24 = load i32, i32* %rt_int43, align 8, !dbg !5272
  %call44 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond39, i32 %24), !dbg !5272
  %call45 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond33, i32 %call44), !dbg !5272
  %expr46 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call45, i32 0, i32 0, !dbg !5272
  %vinsn47 = getelementptr inbounds %struct._expr, %struct._expr* %expr46, i32 0, i32 0, !dbg !5272
  %25 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn47, align 8, !dbg !5272
  %id48 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %25, i32 0, i32 1, !dbg !5272
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id48, i32 0, i32 1, !dbg !5272
  %26 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !5272
  br label %cond.end49, !dbg !5270

cond.end49:                                       ; preds = %cond.end38, %cond.end17
  %cond50 = phi %struct.rtx_def* [ %18, %cond.end17 ], [ %26, %cond.end38 ], !dbg !5270
  store %struct.rtx_def* %cond50, %struct.rtx_def** %old, align 8, !dbg !5273
  %27 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !5274
  %28 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8, !dbg !5276
  %29 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8, !dbg !5277
  %call51 = call zeroext i8 @rtx_ok_for_substitution_p(%struct.rtx_def* %27, %struct.rtx_def* %29), !dbg !5278
  %tobool52 = icmp ne i8 %call51, 0, !dbg !5278
  br i1 %tobool52, label %if.then, label %if.else136, !dbg !5279

if.then:                                          ; preds = %cond.end49
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_insn, metadata !5280, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %where_replace, metadata !5283, metadata !DIExpression()), !dbg !5284
  %30 = load i8, i8* %undo.addr, align 1, !dbg !5285
  %conv53 = zext i8 %30 to i32, !dbg !5285
  %tobool54 = icmp ne i32 %conv53, 0, !dbg !5285
  br i1 %tobool54, label %cond.true55, label %cond.false78, !dbg !5285

cond.true55:                                      ; preds = %if.then
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5286
  %tobool56 = icmp ne %struct.VEC_sel_insn_data_def_heap* %31, null, !dbg !5286
  br i1 %tobool56, label %cond.true57, label %cond.false59, !dbg !5286

cond.true57:                                      ; preds = %cond.true55
  %32 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5286
  %base58 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %32, i32 0, i32 0, !dbg !5286
  br label %cond.end60, !dbg !5286

cond.false59:                                     ; preds = %cond.true55
  br label %cond.end60, !dbg !5286

cond.end60:                                       ; preds = %cond.false59, %cond.true57
  %cond61 = phi %struct.VEC_sel_insn_data_def_base* [ %base58, %cond.true57 ], [ null, %cond.false59 ], !dbg !5286
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5286
  %tobool62 = icmp ne %struct.VEC_int_heap* %33, null, !dbg !5286
  br i1 %tobool62, label %cond.true63, label %cond.false65, !dbg !5286

cond.true63:                                      ; preds = %cond.end60
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5286
  %base64 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %34, i32 0, i32 0, !dbg !5286
  br label %cond.end66, !dbg !5286

cond.false65:                                     ; preds = %cond.end60
  br label %cond.end66, !dbg !5286

cond.end66:                                       ; preds = %cond.false65, %cond.true63
  %cond67 = phi %struct.VEC_int_base* [ %base64, %cond.true63 ], [ null, %cond.false65 ], !dbg !5286
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5286
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !5286
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !5286
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 0, !dbg !5286
  %rt_int71 = bitcast %union.rtunion_def* %arrayidx70 to i32*, !dbg !5286
  %36 = load i32, i32* %rt_int71, align 8, !dbg !5286
  %call72 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond67, i32 %36), !dbg !5286
  %call73 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond61, i32 %call72), !dbg !5286
  %expr74 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call73, i32 0, i32 0, !dbg !5286
  %vinsn75 = getelementptr inbounds %struct._expr, %struct._expr* %expr74, i32 0, i32 0, !dbg !5286
  %37 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn75, align 8, !dbg !5286
  %id76 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %37, i32 0, i32 1, !dbg !5286
  %lhs77 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id76, i32 0, i32 1, !dbg !5286
  %38 = load %struct.rtx_def*, %struct.rtx_def** %lhs77, align 8, !dbg !5286
  br label %cond.end101, !dbg !5285

cond.false78:                                     ; preds = %if.then
  %39 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5287
  %tobool79 = icmp ne %struct.VEC_sel_insn_data_def_heap* %39, null, !dbg !5287
  br i1 %tobool79, label %cond.true80, label %cond.false82, !dbg !5287

cond.true80:                                      ; preds = %cond.false78
  %40 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5287
  %base81 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %40, i32 0, i32 0, !dbg !5287
  br label %cond.end83, !dbg !5287

cond.false82:                                     ; preds = %cond.false78
  br label %cond.end83, !dbg !5287

cond.end83:                                       ; preds = %cond.false82, %cond.true80
  %cond84 = phi %struct.VEC_sel_insn_data_def_base* [ %base81, %cond.true80 ], [ null, %cond.false82 ], !dbg !5287
  %41 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5287
  %tobool85 = icmp ne %struct.VEC_int_heap* %41, null, !dbg !5287
  br i1 %tobool85, label %cond.true86, label %cond.false88, !dbg !5287

cond.true86:                                      ; preds = %cond.end83
  %42 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5287
  %base87 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %42, i32 0, i32 0, !dbg !5287
  br label %cond.end89, !dbg !5287

cond.false88:                                     ; preds = %cond.end83
  br label %cond.end89, !dbg !5287

cond.end89:                                       ; preds = %cond.false88, %cond.true86
  %cond90 = phi %struct.VEC_int_base* [ %base87, %cond.true86 ], [ null, %cond.false88 ], !dbg !5287
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5287
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !5287
  %fld92 = bitcast %union.u* %u91 to [1 x %union.rtunion_def]*, !dbg !5287
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i64 0, i64 0, !dbg !5287
  %rt_int94 = bitcast %union.rtunion_def* %arrayidx93 to i32*, !dbg !5287
  %44 = load i32, i32* %rt_int94, align 8, !dbg !5287
  %call95 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond90, i32 %44), !dbg !5287
  %call96 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond84, i32 %call95), !dbg !5287
  %expr97 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call96, i32 0, i32 0, !dbg !5287
  %vinsn98 = getelementptr inbounds %struct._expr, %struct._expr* %expr97, i32 0, i32 0, !dbg !5287
  %45 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn98, align 8, !dbg !5287
  %id99 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %45, i32 0, i32 1, !dbg !5287
  %rhs100 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id99, i32 0, i32 2, !dbg !5287
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rhs100, align 8, !dbg !5287
  br label %cond.end101, !dbg !5285

cond.end101:                                      ; preds = %cond.end89, %cond.end66
  %cond102 = phi %struct.rtx_def* [ %38, %cond.end66 ], [ %46, %cond.end89 ], !dbg !5285
  %call103 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %cond102), !dbg !5288
  store %struct.rtx_def* %call103, %struct.rtx_def** %new_rtx, align 8, !dbg !5289
  %47 = load %struct.vinsn_def**, %struct.vinsn_def*** %vi, align 8, !dbg !5290
  %48 = load %struct.vinsn_def*, %struct.vinsn_def** %47, align 8, !dbg !5290
  %insn_rtx104 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %48, i32 0, i32 0, !dbg !5290
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx104, align 8, !dbg !5290
  %call105 = call %struct.rtx_def* @create_copy_of_insn_rtx(%struct.rtx_def* %49), !dbg !5291
  store %struct.rtx_def* %call105, %struct.rtx_def** %new_insn, align 8, !dbg !5292
  %50 = load i8, i8* %has_rhs, align 1, !dbg !5293
  %conv106 = zext i8 %50 to i32, !dbg !5293
  %tobool107 = icmp ne i32 %conv106, 0, !dbg !5293
  br i1 %tobool107, label %cond.true108, label %cond.false117, !dbg !5293

cond.true108:                                     ; preds = %cond.end101
  %51 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !5294
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !5294
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !5294
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 5, !dbg !5294
  %rt_rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**, !dbg !5294
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx112, align 8, !dbg !5294
  %u113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !5294
  %fld114 = bitcast %union.u* %u113 to [1 x %union.rtunion_def]*, !dbg !5294
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i64 0, i64 1, !dbg !5294
  %rt_rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**, !dbg !5294
  br label %cond.end122, !dbg !5293

cond.false117:                                    ; preds = %cond.end101
  %53 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !5295
  %u118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !5295
  %fld119 = bitcast %union.u* %u118 to [1 x %union.rtunion_def]*, !dbg !5295
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i64 0, i64 5, !dbg !5295
  %rt_rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**, !dbg !5295
  br label %cond.end122, !dbg !5293

cond.end122:                                      ; preds = %cond.false117, %cond.true108
  %cond123 = phi %struct.rtx_def** [ %rt_rtx116, %cond.true108 ], [ %rt_rtx121, %cond.false117 ], !dbg !5293
  store %struct.rtx_def** %cond123, %struct.rtx_def*** %where_replace, align 8, !dbg !5296
  %54 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !5297
  %55 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !5298
  %56 = load %struct.rtx_def**, %struct.rtx_def*** %where_replace, align 8, !dbg !5299
  %57 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !5300
  %call124 = call i32 @validate_replace_rtx_part_nosimplify(%struct.rtx_def* %54, %struct.rtx_def* %55, %struct.rtx_def** %56, %struct.rtx_def* %57), !dbg !5301
  %conv125 = trunc i32 %call124 to i8, !dbg !5301
  store i8 %conv125, i8* %new_insn_valid, align 1, !dbg !5302
  %58 = load i8, i8* %new_insn_valid, align 1, !dbg !5303
  %tobool126 = icmp ne i8 %58, 0, !dbg !5303
  br i1 %tobool126, label %if.then127, label %if.else, !dbg !5305

if.then127:                                       ; preds = %cond.end122
  %59 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !5306
  %60 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !5308
  %call128 = call %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def* %60, i8 zeroext 0), !dbg !5309
  call void @change_vinsn_in_expr(%struct._expr* %59, %struct.vinsn_def* %call128), !dbg !5310
  %61 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !5311
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %61, i32 0, i32 7, !dbg !5311
  %62 = load i32, i32* %spec_done_ds, align 8, !dbg !5311
  %and = and i32 %62, 16777215, !dbg !5313
  %tobool129 = icmp ne i32 %and, 0, !dbg !5313
  br i1 %tobool129, label %land.lhs.true, label %if.end, !dbg !5314

land.lhs.true:                                    ; preds = %if.then127
  %63 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !5315
  %vinsn130 = getelementptr inbounds %struct._expr, %struct._expr* %63, i32 0, i32 0, !dbg !5315
  %64 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn130, align 8, !dbg !5315
  %id131 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %64, i32 0, i32 1, !dbg !5315
  %reg_uses = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id131, i32 0, i32 5, !dbg !5315
  %65 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !5315
  %66 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !5316
  %call132 = call i32 @expr_dest_regno(%struct._expr* %66), !dbg !5317
  %call133 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %65, i32 %call132), !dbg !5318
  %tobool134 = icmp ne i32 %call133, 0, !dbg !5318
  br i1 %tobool134, label %if.then135, label %if.end, !dbg !5319

if.then135:                                       ; preds = %land.lhs.true
  %67 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !5320
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %67, i32 0, i32 11, !dbg !5320
  store i8 0, i8* %target_available, align 8, !dbg !5321
  br label %if.end, !dbg !5320

if.end:                                           ; preds = %if.then135, %land.lhs.true, %if.then127
  store i8 1, i8* %retval, align 1, !dbg !5322
  br label %return, !dbg !5322

if.else:                                          ; preds = %cond.end122
  store i8 0, i8* %retval, align 1, !dbg !5323
  br label %return, !dbg !5323

if.else136:                                       ; preds = %cond.end49
  store i8 0, i8* %retval, align 1, !dbg !5324
  br label %return, !dbg !5324

return:                                           ; preds = %if.else136, %if.else, %if.end
  %68 = load i8, i8* %retval, align 1, !dbg !5325
  ret i8 %68, !dbg !5325
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @find_block_for_bookkeeping(%struct.edge_def* %e1, %struct.edge_def* %e2, i8 zeroext %lax) #0 !dbg !5326 {
entry:
  %retval = alloca %struct.basic_block_def*, align 8
  %e1.addr = alloca %struct.edge_def*, align 8
  %e2.addr = alloca %struct.edge_def*, align 8
  %lax.addr = alloca i8, align 1
  %candidate_block = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  store %struct.edge_def* %e1, %struct.edge_def** %e1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e1.addr, metadata !5329, metadata !DIExpression()), !dbg !5330
  store %struct.edge_def* %e2, %struct.edge_def** %e2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e2.addr, metadata !5331, metadata !DIExpression()), !dbg !5332
  store i8 %lax, i8* %lax.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lax.addr, metadata !5333, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %candidate_block, metadata !5335, metadata !DIExpression()), !dbg !5336
  store %struct.basic_block_def* null, %struct.basic_block_def** %candidate_block, align 8, !dbg !5336
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !5337, metadata !DIExpression()), !dbg !5338
  %0 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5339
  store %struct.edge_def* %0, %struct.edge_def** %e, align 8, !dbg !5341
  br label %for.cond, !dbg !5342

for.cond:                                         ; preds = %cond.end99, %entry
  %1 = load i8, i8* %lax.addr, align 1, !dbg !5343
  %tobool = icmp ne i8 %1, 0, !dbg !5343
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !5345

lor.rhs:                                          ; preds = %for.cond
  %2 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5346
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %2, i32 0, i32 1, !dbg !5347
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5347
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5348
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !5348
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !5348
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5348
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 1, !dbg !5348
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5348
  %cmp = icmp ne %struct.basic_block_def* %3, %6, !dbg !5349
  br label %lor.end, !dbg !5345

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %7 = phi i1 [ true, %for.cond ], [ %cmp, %lor.rhs ]
  br i1 %7, label %for.body, label %for.end, !dbg !5350

for.body:                                         ; preds = %lor.end
  %8 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5351
  %dest1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %8, i32 0, i32 1, !dbg !5351
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !5351
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 0, !dbg !5351
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5351
  %tobool2 = icmp ne %struct.VEC_edge_gc* %10, null, !dbg !5351
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !5351

cond.true:                                        ; preds = %for.body
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5351
  %dest3 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i32 0, i32 1, !dbg !5351
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest3, align 8, !dbg !5351
  %preds4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i32 0, i32 0, !dbg !5351
  %13 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds4, align 8, !dbg !5351
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %13, i32 0, i32 0, !dbg !5351
  br label %cond.end, !dbg !5351

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5351
  %call = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !5351
  %cmp5 = icmp eq i32 %call, 2, !dbg !5354
  br i1 %cmp5, label %if.then, label %if.else47, !dbg !5355

if.then:                                          ; preds = %cond.end
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %candidate_block, align 8, !dbg !5356
  %cmp6 = icmp eq %struct.basic_block_def* %14, null, !dbg !5359
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !5360

if.then7:                                         ; preds = %if.then
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5361
  %dest8 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i32 0, i32 1, !dbg !5361
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest8, align 8, !dbg !5361
  %preds9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i32 0, i32 0, !dbg !5361
  %17 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds9, align 8, !dbg !5361
  %tobool10 = icmp ne %struct.VEC_edge_gc* %17, null, !dbg !5361
  br i1 %tobool10, label %cond.true11, label %cond.false15, !dbg !5361

cond.true11:                                      ; preds = %if.then7
  %18 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5361
  %dest12 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %18, i32 0, i32 1, !dbg !5361
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest12, align 8, !dbg !5361
  %preds13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i32 0, i32 0, !dbg !5361
  %20 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds13, align 8, !dbg !5361
  %base14 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %20, i32 0, i32 0, !dbg !5361
  br label %cond.end16, !dbg !5361

cond.false15:                                     ; preds = %if.then7
  br label %cond.end16, !dbg !5361

cond.end16:                                       ; preds = %cond.false15, %cond.true11
  %cond17 = phi %struct.VEC_edge_base* [ %base14, %cond.true11 ], [ null, %cond.false15 ], !dbg !5361
  %call18 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond17, i32 0), !dbg !5361
  %21 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5362
  %cmp19 = icmp eq %struct.edge_def* %call18, %21, !dbg !5363
  br i1 %cmp19, label %cond.true20, label %cond.false32, !dbg !5361

cond.true20:                                      ; preds = %cond.end16
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5364
  %dest21 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i32 0, i32 1, !dbg !5364
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %dest21, align 8, !dbg !5364
  %preds22 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i32 0, i32 0, !dbg !5364
  %24 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds22, align 8, !dbg !5364
  %tobool23 = icmp ne %struct.VEC_edge_gc* %24, null, !dbg !5364
  br i1 %tobool23, label %cond.true24, label %cond.false28, !dbg !5364

cond.true24:                                      ; preds = %cond.true20
  %25 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5364
  %dest25 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i32 0, i32 1, !dbg !5364
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %dest25, align 8, !dbg !5364
  %preds26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i32 0, i32 0, !dbg !5364
  %27 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds26, align 8, !dbg !5364
  %base27 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %27, i32 0, i32 0, !dbg !5364
  br label %cond.end29, !dbg !5364

cond.false28:                                     ; preds = %cond.true20
  br label %cond.end29, !dbg !5364

cond.end29:                                       ; preds = %cond.false28, %cond.true24
  %cond30 = phi %struct.VEC_edge_base* [ %base27, %cond.true24 ], [ null, %cond.false28 ], !dbg !5364
  %call31 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond30, i32 1), !dbg !5364
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call31, i32 0, i32 0, !dbg !5365
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5365
  br label %cond.end45, !dbg !5361

cond.false32:                                     ; preds = %cond.end16
  %29 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5366
  %dest33 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %29, i32 0, i32 1, !dbg !5366
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %dest33, align 8, !dbg !5366
  %preds34 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i32 0, i32 0, !dbg !5366
  %31 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds34, align 8, !dbg !5366
  %tobool35 = icmp ne %struct.VEC_edge_gc* %31, null, !dbg !5366
  br i1 %tobool35, label %cond.true36, label %cond.false40, !dbg !5366

cond.true36:                                      ; preds = %cond.false32
  %32 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5366
  %dest37 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i32 0, i32 1, !dbg !5366
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %dest37, align 8, !dbg !5366
  %preds38 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i32 0, i32 0, !dbg !5366
  %34 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds38, align 8, !dbg !5366
  %base39 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %34, i32 0, i32 0, !dbg !5366
  br label %cond.end41, !dbg !5366

cond.false40:                                     ; preds = %cond.false32
  br label %cond.end41, !dbg !5366

cond.end41:                                       ; preds = %cond.false40, %cond.true36
  %cond42 = phi %struct.VEC_edge_base* [ %base39, %cond.true36 ], [ null, %cond.false40 ], !dbg !5366
  %call43 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond42, i32 0), !dbg !5366
  %src44 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call43, i32 0, i32 0, !dbg !5367
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %src44, align 8, !dbg !5367
  br label %cond.end45, !dbg !5361

cond.end45:                                       ; preds = %cond.end41, %cond.end29
  %cond46 = phi %struct.basic_block_def* [ %28, %cond.end29 ], [ %35, %cond.end41 ], !dbg !5361
  store %struct.basic_block_def* %cond46, %struct.basic_block_def** %candidate_block, align 8, !dbg !5368
  br label %if.end, !dbg !5369

if.else:                                          ; preds = %if.then
  store %struct.basic_block_def* null, %struct.basic_block_def** %retval, align 8, !dbg !5370
  br label %return, !dbg !5370

if.end:                                           ; preds = %cond.end45
  br label %if.end62, !dbg !5371

if.else47:                                        ; preds = %cond.end
  %36 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5372
  %dest48 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %36, i32 0, i32 1, !dbg !5372
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %dest48, align 8, !dbg !5372
  %preds49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i32 0, i32 0, !dbg !5372
  %38 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds49, align 8, !dbg !5372
  %tobool50 = icmp ne %struct.VEC_edge_gc* %38, null, !dbg !5372
  br i1 %tobool50, label %cond.true51, label %cond.false55, !dbg !5372

cond.true51:                                      ; preds = %if.else47
  %39 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5372
  %dest52 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %39, i32 0, i32 1, !dbg !5372
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %dest52, align 8, !dbg !5372
  %preds53 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i32 0, i32 0, !dbg !5372
  %41 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds53, align 8, !dbg !5372
  %base54 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %41, i32 0, i32 0, !dbg !5372
  br label %cond.end56, !dbg !5372

cond.false55:                                     ; preds = %if.else47
  br label %cond.end56, !dbg !5372

cond.end56:                                       ; preds = %cond.false55, %cond.true51
  %cond57 = phi %struct.VEC_edge_base* [ %base54, %cond.true51 ], [ null, %cond.false55 ], !dbg !5372
  %call58 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond57), !dbg !5372
  %cmp59 = icmp ugt i32 %call58, 2, !dbg !5374
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !5375

if.then60:                                        ; preds = %cond.end56
  store %struct.basic_block_def* null, %struct.basic_block_def** %retval, align 8, !dbg !5376
  br label %return, !dbg !5376

if.end61:                                         ; preds = %cond.end56
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end
  %42 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5377
  %43 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5379
  %cmp63 = icmp eq %struct.edge_def* %42, %43, !dbg !5380
  br i1 %cmp63, label %if.then64, label %if.end73, !dbg !5381

if.then64:                                        ; preds = %if.end62
  %44 = load i8, i8* %lax.addr, align 1, !dbg !5382
  %tobool65 = icmp ne i8 %44, 0, !dbg !5382
  br i1 %tobool65, label %lor.lhs.false, label %land.lhs.true, !dbg !5383

lor.lhs.false:                                    ; preds = %if.then64
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %candidate_block, align 8, !dbg !5384
  %tobool66 = icmp ne %struct.basic_block_def* %45, null, !dbg !5384
  br i1 %tobool66, label %land.lhs.true, label %cond.false70, !dbg !5385

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then64
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %candidate_block, align 8, !dbg !5386
  %call67 = call zeroext i8 @block_valid_for_bookkeeping_p(%struct.basic_block_def* %46), !dbg !5387
  %conv = zext i8 %call67 to i32, !dbg !5387
  %tobool68 = icmp ne i32 %conv, 0, !dbg !5387
  br i1 %tobool68, label %cond.true69, label %cond.false70, !dbg !5388

cond.true69:                                      ; preds = %land.lhs.true
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %candidate_block, align 8, !dbg !5389
  br label %cond.end71, !dbg !5388

cond.false70:                                     ; preds = %land.lhs.true, %lor.lhs.false
  br label %cond.end71, !dbg !5388

cond.end71:                                       ; preds = %cond.false70, %cond.true69
  %cond72 = phi %struct.basic_block_def* [ %47, %cond.true69 ], [ null, %cond.false70 ], !dbg !5388
  store %struct.basic_block_def* %cond72, %struct.basic_block_def** %retval, align 8, !dbg !5390
  br label %return, !dbg !5390

if.end73:                                         ; preds = %if.end62
  %48 = load i8, i8* %lax.addr, align 1, !dbg !5391
  %conv74 = zext i8 %48 to i32, !dbg !5391
  %tobool75 = icmp ne i32 %conv74, 0, !dbg !5391
  br i1 %tobool75, label %land.lhs.true76, label %if.end90, !dbg !5393

land.lhs.true76:                                  ; preds = %if.end73
  %49 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5394
  %dest77 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %49, i32 0, i32 1, !dbg !5394
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %dest77, align 8, !dbg !5394
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %50, i32 0, i32 1, !dbg !5394
  %51 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5394
  %tobool78 = icmp ne %struct.VEC_edge_gc* %51, null, !dbg !5394
  br i1 %tobool78, label %cond.true79, label %cond.false83, !dbg !5394

cond.true79:                                      ; preds = %land.lhs.true76
  %52 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5394
  %dest80 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %52, i32 0, i32 1, !dbg !5394
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %dest80, align 8, !dbg !5394
  %succs81 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %53, i32 0, i32 1, !dbg !5394
  %54 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs81, align 8, !dbg !5394
  %base82 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %54, i32 0, i32 0, !dbg !5394
  br label %cond.end84, !dbg !5394

cond.false83:                                     ; preds = %land.lhs.true76
  br label %cond.end84, !dbg !5394

cond.end84:                                       ; preds = %cond.false83, %cond.true79
  %cond85 = phi %struct.VEC_edge_base* [ %base82, %cond.true79 ], [ null, %cond.false83 ], !dbg !5394
  %call86 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond85), !dbg !5394
  %cmp87 = icmp ne i32 %call86, 1, !dbg !5395
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !5396

if.then89:                                        ; preds = %cond.end84
  store %struct.basic_block_def* null, %struct.basic_block_def** %retval, align 8, !dbg !5397
  br label %return, !dbg !5397

if.end90:                                         ; preds = %cond.end84, %if.end73
  br label %for.inc, !dbg !5398

for.inc:                                          ; preds = %if.end90
  %55 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5399
  %dest91 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %55, i32 0, i32 1, !dbg !5399
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %dest91, align 8, !dbg !5399
  %succs92 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %56, i32 0, i32 1, !dbg !5399
  %57 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs92, align 8, !dbg !5399
  %tobool93 = icmp ne %struct.VEC_edge_gc* %57, null, !dbg !5399
  br i1 %tobool93, label %cond.true94, label %cond.false98, !dbg !5399

cond.true94:                                      ; preds = %for.inc
  %58 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5399
  %dest95 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %58, i32 0, i32 1, !dbg !5399
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %dest95, align 8, !dbg !5399
  %succs96 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %59, i32 0, i32 1, !dbg !5399
  %60 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs96, align 8, !dbg !5399
  %base97 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %60, i32 0, i32 0, !dbg !5399
  br label %cond.end99, !dbg !5399

cond.false98:                                     ; preds = %for.inc
  br label %cond.end99, !dbg !5399

cond.end99:                                       ; preds = %cond.false98, %cond.true94
  %cond100 = phi %struct.VEC_edge_base* [ %base97, %cond.true94 ], [ null, %cond.false98 ], !dbg !5399
  %call101 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond100, i32 0), !dbg !5399
  store %struct.edge_def* %call101, %struct.edge_def** %e, align 8, !dbg !5400
  br label %for.cond, !dbg !5401, !llvm.loop !5402

for.end:                                          ; preds = %lor.end
  %61 = load i8, i8* %lax.addr, align 1, !dbg !5404
  %tobool102 = icmp ne i8 %61, 0, !dbg !5404
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !5406

if.then103:                                       ; preds = %for.end
  store %struct.basic_block_def* null, %struct.basic_block_def** %retval, align 8, !dbg !5407
  br label %return, !dbg !5407

if.end104:                                        ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4529, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5408
  store %struct.basic_block_def* null, %struct.basic_block_def** %retval, align 8, !dbg !5409
  br label %return, !dbg !5409

return:                                           ; preds = %if.end104, %if.then103, %if.then89, %cond.end71, %if.then60, %if.else
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %retval, align 8, !dbg !5410
  ret %struct.basic_block_def* %62, !dbg !5410
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @block_valid_for_bookkeeping_p(%struct.basic_block_def* %bb) #0 !dbg !5411 {
entry:
  %retval = alloca i8, align 1
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %bb_end = alloca %struct.rtx_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !5414, metadata !DIExpression()), !dbg !5415
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %bb_end, metadata !5416, metadata !DIExpression()), !dbg !5417
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !5418
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 7, !dbg !5418
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5418
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5418
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i32 0, i32 1, !dbg !5418
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5418
  store %struct.rtx_def* %2, %struct.rtx_def** %bb_end, align 8, !dbg !5417
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !5419
  %call = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %3), !dbg !5421
  %tobool = icmp ne i8 %call, 0, !dbg !5421
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5422

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !5423
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i32 0, i32 1, !dbg !5423
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5423
  %tobool1 = icmp ne %struct.VEC_edge_gc* %5, null, !dbg !5423
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !5423

cond.true:                                        ; preds = %lor.lhs.false
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !5423
  %succs2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i32 0, i32 1, !dbg !5423
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs2, align 8, !dbg !5423
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i32 0, i32 0, !dbg !5423
  br label %cond.end, !dbg !5423

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !5423

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5423
  %call3 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !5423
  %cmp = icmp ugt i32 %call3, 1, !dbg !5424
  br i1 %cmp, label %if.then, label %if.end, !dbg !5425

if.then:                                          ; preds = %cond.end, %entry
  store i8 0, i8* %retval, align 1, !dbg !5426
  br label %return, !dbg !5426

if.end:                                           ; preds = %cond.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !5427
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !5427
  %bf.load = load i32, i32* %9, align 8, !dbg !5427
  %bf.clear = and i32 %bf.load, 65535, !dbg !5427
  %cmp4 = icmp eq i32 %bf.clear, 8, !dbg !5427
  br i1 %cmp4, label %if.then17, label %lor.lhs.false5, !dbg !5427

lor.lhs.false5:                                   ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !5427
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !5427
  %bf.load6 = load i32, i32* %11, align 8, !dbg !5427
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !5427
  %cmp8 = icmp eq i32 %bf.clear7, 7, !dbg !5427
  br i1 %cmp8, label %if.then17, label %lor.lhs.false9, !dbg !5427

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %12 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !5427
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !5427
  %bf.load10 = load i32, i32* %13, align 8, !dbg !5427
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !5427
  %cmp12 = icmp eq i32 %bf.clear11, 9, !dbg !5427
  br i1 %cmp12, label %if.then17, label %lor.lhs.false13, !dbg !5427

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %14 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !5427
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !5427
  %bf.load14 = load i32, i32* %15, align 8, !dbg !5427
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !5427
  %cmp16 = icmp eq i32 %bf.clear15, 10, !dbg !5427
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !5429

if.then17:                                        ; preds = %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false5, %if.end
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5430
  %tobool18 = icmp ne %struct.VEC_sel_insn_data_def_heap* %16, null, !dbg !5430
  br i1 %tobool18, label %cond.true19, label %cond.false21, !dbg !5430

cond.true19:                                      ; preds = %if.then17
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5430
  %base20 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i32 0, i32 0, !dbg !5430
  br label %cond.end22, !dbg !5430

cond.false21:                                     ; preds = %if.then17
  br label %cond.end22, !dbg !5430

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi %struct.VEC_sel_insn_data_def_base* [ %base20, %cond.true19 ], [ null, %cond.false21 ], !dbg !5430
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5430
  %tobool24 = icmp ne %struct.VEC_int_heap* %18, null, !dbg !5430
  br i1 %tobool24, label %cond.true25, label %cond.false27, !dbg !5430

cond.true25:                                      ; preds = %cond.end22
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5430
  %base26 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i32 0, i32 0, !dbg !5430
  br label %cond.end28, !dbg !5430

cond.false27:                                     ; preds = %cond.end22
  br label %cond.end28, !dbg !5430

cond.end28:                                       ; preds = %cond.false27, %cond.true25
  %cond29 = phi %struct.VEC_int_base* [ %base26, %cond.true25 ], [ null, %cond.false27 ], !dbg !5430
  %20 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !5430
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !5430
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5430
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5430
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5430
  %21 = load i32, i32* %rt_int, align 8, !dbg !5430
  %call30 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond29, i32 %21), !dbg !5430
  %call31 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond23, i32 %call30), !dbg !5430
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call31, i32 0, i32 0, !dbg !5430
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 5, !dbg !5430
  %22 = load i32, i32* %sched_times, align 8, !dbg !5430
  %cmp32 = icmp sgt i32 %22, 0, !dbg !5433
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !5434

if.then33:                                        ; preds = %cond.end28
  store i8 0, i8* %retval, align 1, !dbg !5435
  br label %return, !dbg !5435

if.end34:                                         ; preds = %cond.end28
  br label %if.end47, !dbg !5436

if.else:                                          ; preds = %lor.lhs.false13
  %23 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !5437
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !5437
  %bf.load35 = load i32, i32* %24, align 8, !dbg !5437
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !5437
  %cmp37 = icmp eq i32 %bf.clear36, 13, !dbg !5437
  br i1 %cmp37, label %land.lhs.true, label %cond.true43, !dbg !5437

land.lhs.true:                                    ; preds = %if.else
  %25 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !5437
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !5437
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !5437
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 5, !dbg !5437
  %rt_int41 = bitcast %union.rtunion_def* %arrayidx40 to i32*, !dbg !5437
  %26 = load i32, i32* %rt_int41, align 8, !dbg !5437
  %cmp42 = icmp eq i32 %26, 10, !dbg !5437
  br i1 %cmp42, label %cond.false44, label %cond.true43, !dbg !5437

cond.true43:                                      ; preds = %land.lhs.true, %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4482, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5437
  br label %cond.end45, !dbg !5437

cond.false44:                                     ; preds = %land.lhs.true
  br label %cond.end45, !dbg !5437

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond46 = phi i32 [ 0, %cond.true43 ], [ 0, %cond.false44 ], !dbg !5437
  br label %if.end47

if.end47:                                         ; preds = %cond.end45, %if.end34
  store i8 1, i8* %retval, align 1, !dbg !5438
  br label %return, !dbg !5438

return:                                           ; preds = %if.end47, %if.then33, %if.then
  %27 = load i8, i8* %retval, align 1, !dbg !5439
  ret i8 %27, !dbg !5439
}

declare dso_local i32 @ds_weak(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rtx_ok_for_substitution_p(%struct.rtx_def* %what, %struct.rtx_def* %where) #0 !dbg !5440 {
entry:
  %what.addr = alloca %struct.rtx_def*, align 8
  %where.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %what, %struct.rtx_def** %what.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %what.addr, metadata !5443, metadata !DIExpression()), !dbg !5444
  store %struct.rtx_def* %where, %struct.rtx_def** %where.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %where.addr, metadata !5445, metadata !DIExpression()), !dbg !5446
  %0 = load %struct.rtx_def*, %struct.rtx_def** %what.addr, align 8, !dbg !5447
  %1 = load %struct.rtx_def*, %struct.rtx_def** %where.addr, align 8, !dbg !5448
  %call = call i32 @count_occurrences_equiv(%struct.rtx_def* %0, %struct.rtx_def* %1), !dbg !5449
  %cmp = icmp sgt i32 %call, 0, !dbg !5450
  %conv = zext i1 %cmp to i32, !dbg !5450
  %conv1 = trunc i32 %conv to i8, !dbg !5451
  ret i8 %conv1, !dbg !5452
}

declare dso_local %struct.rtx_def* @create_copy_of_insn_rtx(%struct.rtx_def*) #2

declare dso_local i32 @validate_replace_rtx_part_nosimplify(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*) #2

declare dso_local i32 @expr_dest_regno(%struct._expr*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @count_occurrences_equiv(%struct.rtx_def* %what, %struct.rtx_def* %where) #0 !dbg !5453 {
entry:
  %what.addr = alloca %struct.rtx_def*, align 8
  %where.addr = alloca %struct.rtx_def*, align 8
  %arg = alloca %struct.rtx_search_arg, align 8
  store %struct.rtx_def* %what, %struct.rtx_def** %what.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %what.addr, metadata !5456, metadata !DIExpression()), !dbg !5457
  store %struct.rtx_def* %where, %struct.rtx_def** %where.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %where.addr, metadata !5458, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.declare(metadata %struct.rtx_search_arg* %arg, metadata !5460, metadata !DIExpression()), !dbg !5461
  %0 = load %struct.rtx_def*, %struct.rtx_def** %what.addr, align 8, !dbg !5462
  %x = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %arg, i32 0, i32 0, !dbg !5463
  store %struct.rtx_def* %0, %struct.rtx_def** %x, align 8, !dbg !5464
  %n = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %arg, i32 0, i32 1, !dbg !5465
  store i32 0, i32* %n, align 8, !dbg !5466
  %1 = bitcast %struct.rtx_search_arg* %arg to i8*, !dbg !5467
  %call = call i32 @for_each_rtx(%struct.rtx_def** %where.addr, i32 (%struct.rtx_def**, i8*)* @count_occurrences_1, i8* %1), !dbg !5468
  %n1 = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %arg, i32 0, i32 1, !dbg !5469
  %2 = load i32, i32* %n1, align 8, !dbg !5469
  ret i32 %2, !dbg !5470
}

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @count_occurrences_1(%struct.rtx_def** %cur_rtx, i8* %arg) #0 !dbg !5471 {
entry:
  %retval = alloca i32, align 4
  %cur_rtx.addr = alloca %struct.rtx_def**, align 8
  %arg.addr = alloca i8*, align 8
  %p = alloca %struct.rtx_search_arg*, align 8
  store %struct.rtx_def** %cur_rtx, %struct.rtx_def*** %cur_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %cur_rtx.addr, metadata !5474, metadata !DIExpression()), !dbg !5475
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5476, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.declare(metadata %struct.rtx_search_arg** %p, metadata !5478, metadata !DIExpression()), !dbg !5479
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5480
  %1 = bitcast i8* %0 to %struct.rtx_search_arg*, !dbg !5481
  store %struct.rtx_search_arg* %1, %struct.rtx_search_arg** %p, align 8, !dbg !5479
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %cur_rtx.addr, align 8, !dbg !5482
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !5484
  %4 = load %struct.rtx_search_arg*, %struct.rtx_search_arg** %p, align 8, !dbg !5485
  %x = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %4, i32 0, i32 0, !dbg !5486
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5486
  %call = call i32 @exp_equiv_p(%struct.rtx_def* %3, %struct.rtx_def* %5, i32 0, i8 zeroext 1), !dbg !5487
  %tobool = icmp ne i32 %call, 0, !dbg !5487
  br i1 %tobool, label %if.then, label %if.end13, !dbg !5488

if.then:                                          ; preds = %entry
  %6 = load %struct.rtx_def**, %struct.rtx_def*** %cur_rtx.addr, align 8, !dbg !5489
  %7 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8, !dbg !5489
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !5489
  %bf.load = load i32, i32* %8, align 8, !dbg !5489
  %bf.clear = and i32 %bf.load, 65535, !dbg !5489
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5489
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5492

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %cur_rtx.addr, align 8, !dbg !5493
  %10 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8, !dbg !5493
  %call1 = call i32 @rhs_regno(%struct.rtx_def* %10), !dbg !5493
  %cmp2 = icmp ult i32 %call1, 53, !dbg !5493
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !5494

land.lhs.true3:                                   ; preds = %land.lhs.true
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %cur_rtx.addr, align 8, !dbg !5495
  %12 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8, !dbg !5495
  %call4 = call i32 @rhs_regno(%struct.rtx_def* %12), !dbg !5495
  %idxprom = zext i32 %call4 to i64, !dbg !5496
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !5496
  %13 = load %struct.rtx_def**, %struct.rtx_def*** %cur_rtx.addr, align 8, !dbg !5497
  %14 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8, !dbg !5497
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !5497
  %bf.load5 = load i32, i32* %15, align 8, !dbg !5497
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !5497
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !5497
  %idxprom7 = zext i32 %bf.clear6 to i64, !dbg !5496
  %arrayidx8 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom7, !dbg !5496
  %16 = load i8, i8* %arrayidx8, align 1, !dbg !5496
  %conv = zext i8 %16 to i32, !dbg !5496
  %cmp9 = icmp sgt i32 %conv, 1, !dbg !5498
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !5499

if.then11:                                        ; preds = %land.lhs.true3
  %17 = load %struct.rtx_search_arg*, %struct.rtx_search_arg** %p, align 8, !dbg !5500
  %n = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %17, i32 0, i32 1, !dbg !5502
  store i32 0, i32* %n, align 8, !dbg !5503
  store i32 1, i32* %retval, align 4, !dbg !5504
  br label %return, !dbg !5504

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %if.then
  %18 = load %struct.rtx_search_arg*, %struct.rtx_search_arg** %p, align 8, !dbg !5505
  %n12 = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %18, i32 0, i32 1, !dbg !5506
  %19 = load i32, i32* %n12, align 8, !dbg !5507
  %inc = add nsw i32 %19, 1, !dbg !5507
  store i32 %inc, i32* %n12, align 8, !dbg !5507
  store i32 -1, i32* %retval, align 4, !dbg !5508
  br label %return, !dbg !5508

if.end13:                                         ; preds = %entry
  %20 = load %struct.rtx_def**, %struct.rtx_def*** %cur_rtx.addr, align 8, !dbg !5509
  %21 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8, !dbg !5509
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !5509
  %bf.load14 = load i32, i32* %22, align 8, !dbg !5509
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !5509
  %cmp16 = icmp eq i32 %bf.clear15, 39, !dbg !5511
  br i1 %cmp16, label %land.lhs.true18, label %if.end33, !dbg !5512

land.lhs.true18:                                  ; preds = %if.end13
  %23 = load %struct.rtx_search_arg*, %struct.rtx_search_arg** %p, align 8, !dbg !5513
  %x19 = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %23, i32 0, i32 0, !dbg !5513
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x19, align 8, !dbg !5513
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !5513
  %bf.load20 = load i32, i32* %25, align 8, !dbg !5513
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !5513
  %cmp22 = icmp eq i32 %bf.clear21, 37, !dbg !5513
  br i1 %cmp22, label %land.lhs.true24, label %if.end33, !dbg !5514

land.lhs.true24:                                  ; preds = %land.lhs.true18
  %26 = load %struct.rtx_def**, %struct.rtx_def*** %cur_rtx.addr, align 8, !dbg !5515
  %27 = load %struct.rtx_def*, %struct.rtx_def** %26, align 8, !dbg !5515
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !5515
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5515
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5515
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !5515
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5515
  %call26 = call i32 @rhs_regno(%struct.rtx_def* %28), !dbg !5515
  %29 = load %struct.rtx_search_arg*, %struct.rtx_search_arg** %p, align 8, !dbg !5516
  %x27 = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %29, i32 0, i32 0, !dbg !5516
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x27, align 8, !dbg !5516
  %call28 = call i32 @rhs_regno(%struct.rtx_def* %30), !dbg !5516
  %cmp29 = icmp eq i32 %call26, %call28, !dbg !5517
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !5518

if.then31:                                        ; preds = %land.lhs.true24
  %31 = load %struct.rtx_search_arg*, %struct.rtx_search_arg** %p, align 8, !dbg !5519
  %n32 = getelementptr inbounds %struct.rtx_search_arg, %struct.rtx_search_arg* %31, i32 0, i32 1, !dbg !5521
  store i32 0, i32* %n32, align 8, !dbg !5522
  store i32 1, i32* %retval, align 4, !dbg !5523
  br label %return, !dbg !5523

if.end33:                                         ; preds = %land.lhs.true24, %land.lhs.true18, %if.end13
  store i32 0, i32* %retval, align 4, !dbg !5524
  br label %return, !dbg !5524

return:                                           ; preds = %if.end33, %if.then31, %if.end, %if.then11
  %32 = load i32, i32* %retval, align 4, !dbg !5525
  ret i32 %32, !dbg !5525
}

declare dso_local i32 @exp_equiv_p(%struct.rtx_def*, %struct.rtx_def*, i32, i8 zeroext) #2

declare dso_local i8* @xmalloc(i64) #2

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) #2

declare dso_local zeroext i8 @sel_num_cfg_preds_gt_1(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @generate_bookkeeping_insn(%struct._expr* %c_expr, %struct.edge_def* %e1, %struct.edge_def* %e2) #0 !dbg !5526 {
entry:
  %retval = alloca %struct.basic_block_def*, align 8
  %c_expr.addr = alloca %struct._expr*, align 8
  %e1.addr = alloca %struct.edge_def*, align 8
  %e2.addr = alloca %struct.edge_def*, align 8
  %join_point = alloca %struct.rtx_def*, align 8
  %place_to_insert = alloca %struct.rtx_def*, align 8
  %new_insn = alloca %struct.rtx_def*, align 8
  %new_seqno = alloca i32, align 4
  %need_to_exchange_data_sets = alloca i8, align 1
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store %struct._expr* %c_expr, %struct._expr** %c_expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %c_expr.addr, metadata !5529, metadata !DIExpression()), !dbg !5530
  store %struct.edge_def* %e1, %struct.edge_def** %e1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e1.addr, metadata !5531, metadata !DIExpression()), !dbg !5532
  store %struct.edge_def* %e2, %struct.edge_def** %e2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e2.addr, metadata !5533, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %join_point, metadata !5535, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %place_to_insert, metadata !5537, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_insn, metadata !5539, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.declare(metadata i32* %new_seqno, metadata !5541, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.declare(metadata i8* %need_to_exchange_data_sets, metadata !5543, metadata !DIExpression()), !dbg !5544
  %0 = load i32, i32* @sched_verbose, align 4, !dbg !5545
  %cmp = icmp sge i32 %0, 4, !dbg !5547
  br i1 %cmp, label %if.then, label %if.end18, !dbg !5548

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5549

do.body:                                          ; preds = %if.then
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5550
  %tobool = icmp ne i8 %1, 0, !dbg !5550
  br i1 %tobool, label %if.then1, label %if.else, !dbg !5553

if.then1:                                         ; preds = %do.body
  br label %do.body2, !dbg !5550

do.body2:                                         ; preds = %if.then1
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !5554, metadata !DIExpression()), !dbg !5556
  %2 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5556
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %2, i32 0, i32 0, !dbg !5556
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5556
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 9, !dbg !5556
  %4 = load i32, i32* %index, align 8, !dbg !5556
  %5 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5556
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %5, i32 0, i32 1, !dbg !5556
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5556
  %index3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i32 0, i32 9, !dbg !5556
  %7 = load i32, i32* %index3, align 8, !dbg !5556
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0), i32 %4, i32 %7), !dbg !5556
  %mul = mul nsw i32 2, %call, !dbg !5556
  %add = add nsw i32 1, %mul, !dbg !5556
  store i32 %add, i32* %__j, align 4, !dbg !5556
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !5557, metadata !DIExpression()), !dbg !5556
  %8 = load i32, i32* %__j, align 4, !dbg !5556
  %conv = sext i32 %8 to i64, !dbg !5556
  %mul4 = mul i64 1, %conv, !dbg !5556
  %9 = alloca i8, i64 %mul4, align 16, !dbg !5556
  store i8* %9, i8** %__s, align 8, !dbg !5556
  %10 = load i8*, i8** %__s, align 8, !dbg !5556
  %11 = load i32, i32* %__j, align 4, !dbg !5556
  %conv5 = sext i32 %11 to i64, !dbg !5556
  %12 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5556
  %src6 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %12, i32 0, i32 0, !dbg !5556
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %src6, align 8, !dbg !5556
  %index7 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 9, !dbg !5556
  %14 = load i32, i32* %index7, align 8, !dbg !5556
  %15 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5556
  %dest8 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i32 0, i32 1, !dbg !5556
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest8, align 8, !dbg !5556
  %index9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i32 0, i32 9, !dbg !5556
  %17 = load i32, i32* %index9, align 8, !dbg !5556
  %call10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %10, i64 %conv5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0), i32 %14, i32 %17), !dbg !5556
  %18 = load i8*, i8** %__s, align 8, !dbg !5556
  call void @sel_prepare_string_for_dot_label(i8* %18), !dbg !5556
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5556
  %20 = load i8*, i8** %__s, align 8, !dbg !5556
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %20), !dbg !5556
  br label %do.end, !dbg !5556

do.end:                                           ; preds = %do.body2
  br label %if.end, !dbg !5556

if.else:                                          ; preds = %do.body
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5550
  %22 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5550
  %src12 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i32 0, i32 0, !dbg !5550
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %src12, align 8, !dbg !5550
  %index13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i32 0, i32 9, !dbg !5550
  %24 = load i32, i32* %index13, align 8, !dbg !5550
  %25 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5550
  %dest14 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i32 0, i32 1, !dbg !5550
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %dest14, align 8, !dbg !5550
  %index15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i32 0, i32 9, !dbg !5550
  %27 = load i32, i32* %index15, align 8, !dbg !5550
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0), i32 %24, i32 %27), !dbg !5550
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end17, !dbg !5553

do.end17:                                         ; preds = %if.end
  br label %if.end18, !dbg !5553

if.end18:                                         ; preds = %do.end17, %entry
  %28 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5558
  %dest19 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i32 0, i32 1, !dbg !5559
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %dest19, align 8, !dbg !5559
  %call20 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %29), !dbg !5560
  store %struct.rtx_def* %call20, %struct.rtx_def** %join_point, align 8, !dbg !5561
  %30 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5562
  %31 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5563
  %call21 = call %struct.rtx_def* @find_place_for_bookkeeping(%struct.edge_def* %30, %struct.edge_def* %31), !dbg !5564
  store %struct.rtx_def* %call21, %struct.rtx_def** %place_to_insert, align 8, !dbg !5565
  %32 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5566
  %tobool22 = icmp ne %struct.rtx_def* %32, null, !dbg !5566
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !5568

if.then23:                                        ; preds = %if.end18
  store %struct.basic_block_def* null, %struct.basic_block_def** %retval, align 8, !dbg !5569
  br label %return, !dbg !5569

if.end24:                                         ; preds = %if.end18
  %33 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5570
  %34 = load %struct.rtx_def*, %struct.rtx_def** %join_point, align 8, !dbg !5571
  %call25 = call i32 @find_seqno_for_bookkeeping(%struct.rtx_def* %33, %struct.rtx_def* %34), !dbg !5572
  store i32 %call25, i32* %new_seqno, align 4, !dbg !5573
  %35 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5574
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !5574
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5574
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !5574
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !5574
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5574
  %call26 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %36), !dbg !5575
  store i8 %call26, i8* %need_to_exchange_data_sets, align 1, !dbg !5576
  %37 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5577
  %38 = load %struct._expr*, %struct._expr** %c_expr.addr, align 8, !dbg !5578
  %39 = load i32, i32* %new_seqno, align 4, !dbg !5579
  %call27 = call %struct.rtx_def* @emit_bookkeeping_insn(%struct.rtx_def* %37, %struct._expr* %38, i32 %39), !dbg !5580
  store %struct.rtx_def* %call27, %struct.rtx_def** %new_insn, align 8, !dbg !5581
  %40 = load i8, i8* %need_to_exchange_data_sets, align 1, !dbg !5582
  %tobool28 = icmp ne i8 %40, 0, !dbg !5582
  br i1 %tobool28, label %if.then29, label %if.end38, !dbg !5584

if.then29:                                        ; preds = %if.end24
  %41 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !5585
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !5585
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !5585
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 3, !dbg !5585
  %rt_bb33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.basic_block_def**, !dbg !5585
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb33, align 8, !dbg !5585
  %43 = load %struct.rtx_def*, %struct.rtx_def** %join_point, align 8, !dbg !5586
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !5586
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !5586
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 3, !dbg !5586
  %rt_bb37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.basic_block_def**, !dbg !5586
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb37, align 8, !dbg !5586
  call void @exchange_data_sets(%struct.basic_block_def* %42, %struct.basic_block_def* %44), !dbg !5587
  br label %if.end38, !dbg !5587

if.end38:                                         ; preds = %if.then29, %if.end24
  %45 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !5588
  %inc = add nsw i32 %45, 1, !dbg !5588
  store i32 %inc, i32* @stat_bookkeeping_copies, align 4, !dbg !5588
  %46 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !5589
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !5589
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !5589
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 3, !dbg !5589
  %rt_bb42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.basic_block_def**, !dbg !5589
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb42, align 8, !dbg !5589
  store %struct.basic_block_def* %47, %struct.basic_block_def** %retval, align 8, !dbg !5590
  br label %return, !dbg !5590

return:                                           ; preds = %if.end38, %if.then23
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %retval, align 8, !dbg !5591
  ret %struct.basic_block_def* %48, !dbg !5591
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_data_sets(%struct.rtx_def* %insn) #0 !dbg !5592 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5593, metadata !DIExpression()), !dbg !5594
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5595
  call void @update_liveness_on_insn(%struct.rtx_def* %0), !dbg !5596
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5597
  %call = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %1), !dbg !5599
  %tobool = icmp ne i8 %call, 0, !dbg !5599
  br i1 %tobool, label %if.then, label %if.end, !dbg !5600

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5601
  %call1 = call i32 @get_av_level(%struct.rtx_def* %2), !dbg !5601
  %cmp = icmp ne i32 %call1, 0, !dbg !5601
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !5601

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3163, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5601
  br label %cond.end, !dbg !5601

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !5601

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5601
  %3 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5603
  %tobool2 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %3, null, !dbg !5603
  br i1 %tobool2, label %cond.true3, label %cond.false4, !dbg !5603

cond.true3:                                       ; preds = %cond.end
  %4 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5603
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %4, i32 0, i32 0, !dbg !5603
  br label %cond.end5, !dbg !5603

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !5603

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base, %cond.true3 ], [ null, %cond.false4 ], !dbg !5603
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5603
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !5603
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5603
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !5603
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !5603
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5603
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i32 0, i32 9, !dbg !5603
  %7 = load i32, i32* %index, align 8, !dbg !5603
  %call7 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond6, i32 %7), !dbg !5603
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call7, i32 0, i32 2, !dbg !5603
  store i32 -1, i32* %av_level, align 8, !dbg !5604
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5605
  %call8 = call %struct._list_node* @compute_av_set(%struct.rtx_def* %8, %struct._list_node* null, i32 0, i8 zeroext 0), !dbg !5606
  br label %if.end, !dbg !5607

if.end:                                           ; preds = %cond.end5, %entry
  ret void, !dbg !5608
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_and_record_unavailable_insns(%struct.basic_block_def* %book_block) #0 !dbg !5609 {
entry:
  %book_block.addr = alloca %struct.basic_block_def*, align 8
  %i = alloca %struct._list_iterator, align 8
  %old_av_set = alloca %struct._list_node*, align 8
  %cur_expr = alloca %struct._expr*, align 8
  %bb_end = alloca %struct.rtx_def*, align 8
  %new_expr = alloca %struct._expr*, align 8
  store %struct.basic_block_def* %book_block, %struct.basic_block_def** %book_block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %book_block.addr, metadata !5612, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %i, metadata !5614, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.declare(metadata %struct._list_node** %old_av_set, metadata !5616, metadata !DIExpression()), !dbg !5617
  store %struct._list_node* null, %struct._list_node** %old_av_set, align 8, !dbg !5617
  call void @llvm.dbg.declare(metadata %struct._expr** %cur_expr, metadata !5618, metadata !DIExpression()), !dbg !5619
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %bb_end, metadata !5620, metadata !DIExpression()), !dbg !5621
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block.addr, align 8, !dbg !5622
  %call = call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %0), !dbg !5623
  store %struct.rtx_def* %call, %struct.rtx_def** %bb_end, align 8, !dbg !5621
  %1 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !5624
  call void @update_liveness_on_insn(%struct.rtx_def* %1), !dbg !5625
  %2 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !5626
  %call1 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %2), !dbg !5628
  %tobool = icmp ne i8 %call1, 0, !dbg !5628
  br i1 %tobool, label %if.then, label %if.end, !dbg !5629

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !5630
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !5630
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5630
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !5630
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5630
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5630
  call void @update_liveness_on_insn(%struct.rtx_def* %4), !dbg !5631
  br label %if.end, !dbg !5631

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block.addr, align 8, !dbg !5632
  %call2 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %5), !dbg !5632
  %call3 = call i32 @get_av_level(%struct.rtx_def* %call2), !dbg !5632
  %6 = load i32, i32* @global_level, align 4, !dbg !5632
  %cmp = icmp eq i32 %call3, %6, !dbg !5632
  br i1 %cmp, label %if.then4, label %if.end28, !dbg !5634

if.then4:                                         ; preds = %if.end
  %7 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5635
  %tobool5 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %7, null, !dbg !5635
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !5635

cond.true:                                        ; preds = %if.then4
  %8 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5635
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %8, i32 0, i32 0, !dbg !5635
  br label %cond.end, !dbg !5635

cond.false:                                       ; preds = %if.then4
  br label %cond.end, !dbg !5635

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_region_bb_info_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5635
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block.addr, align 8, !dbg !5635
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 9, !dbg !5635
  %10 = load i32, i32* %index, align 8, !dbg !5635
  %call6 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond, i32 %10), !dbg !5635
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call6, i32 0, i32 1, !dbg !5635
  %11 = load %struct._list_node*, %struct._list_node** %av_set, align 8, !dbg !5635
  %call7 = call %struct._list_node* @av_set_copy(%struct._list_node* %11), !dbg !5637
  store %struct._list_node* %call7, %struct._list_node** %old_av_set, align 8, !dbg !5638
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block.addr, align 8, !dbg !5639
  %call8 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %12), !dbg !5640
  call void @update_data_sets(%struct.rtx_def* %call8), !dbg !5641
  call void @_list_iter_start(%struct._list_iterator* %i, %struct._list_node** %old_av_set, i8 zeroext 0), !dbg !5642
  br label %for.cond, !dbg !5642

for.cond:                                         ; preds = %for.inc, %cond.end
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i32 0, i32 0, !dbg !5644
  %13 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !5644
  %14 = load %struct._list_node*, %struct._list_node** %13, align 8, !dbg !5644
  %call9 = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %14, %struct._expr** %cur_expr), !dbg !5644
  %tobool10 = icmp ne i8 %call9, 0, !dbg !5642
  br i1 %tobool10, label %for.body, label %for.end, !dbg !5642

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._expr** %new_expr, metadata !5646, metadata !DIExpression()), !dbg !5648
  %15 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5649
  %tobool11 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %15, null, !dbg !5649
  br i1 %tobool11, label %cond.true12, label %cond.false14, !dbg !5649

cond.true12:                                      ; preds = %for.body
  %16 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5649
  %base13 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %16, i32 0, i32 0, !dbg !5649
  br label %cond.end15, !dbg !5649

cond.false14:                                     ; preds = %for.body
  br label %cond.end15, !dbg !5649

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base13, %cond.true12 ], [ null, %cond.false14 ], !dbg !5649
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block.addr, align 8, !dbg !5649
  %index17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i32 0, i32 9, !dbg !5649
  %18 = load i32, i32* %index17, align 8, !dbg !5649
  %call18 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond16, i32 %18), !dbg !5649
  %av_set19 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call18, i32 0, i32 1, !dbg !5649
  %19 = load %struct._list_node*, %struct._list_node** %av_set19, align 8, !dbg !5649
  %20 = load %struct._expr*, %struct._expr** %cur_expr, align 8, !dbg !5650
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %20, i32 0, i32 0, !dbg !5650
  %21 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5650
  %call20 = call %struct._expr* @av_set_lookup(%struct._list_node* %19, %struct.vinsn_def* %21), !dbg !5651
  store %struct._expr* %call20, %struct._expr** %new_expr, align 8, !dbg !5648
  %22 = load %struct._expr*, %struct._expr** %new_expr, align 8, !dbg !5652
  %tobool21 = icmp ne %struct._expr* %22, null, !dbg !5652
  br i1 %tobool21, label %lor.lhs.false, label %if.then26, !dbg !5654

lor.lhs.false:                                    ; preds = %cond.end15
  %23 = load %struct._expr*, %struct._expr** %new_expr, align 8, !dbg !5655
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %23, i32 0, i32 11, !dbg !5655
  %24 = load i8, i8* %target_available, align 8, !dbg !5655
  %conv = sext i8 %24 to i32, !dbg !5655
  %25 = load %struct._expr*, %struct._expr** %cur_expr, align 8, !dbg !5656
  %target_available22 = getelementptr inbounds %struct._expr, %struct._expr* %25, i32 0, i32 11, !dbg !5656
  %26 = load i8, i8* %target_available22, align 8, !dbg !5656
  %conv23 = sext i8 %26 to i32, !dbg !5656
  %cmp24 = icmp ne i32 %conv, %conv23, !dbg !5657
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !5658

if.then26:                                        ; preds = %lor.lhs.false, %cond.end15
  %27 = load %struct._expr*, %struct._expr** %cur_expr, align 8, !dbg !5659
  call void @vinsn_vec_add(%struct.VEC_vinsn_t_heap** @vec_bookkeeping_blocked_vinsns, %struct._expr* %27), !dbg !5660
  br label %if.end27, !dbg !5660

if.end27:                                         ; preds = %if.then26, %lor.lhs.false
  br label %for.inc, !dbg !5661

for.inc:                                          ; preds = %if.end27
  call void @_list_iter_next(%struct._list_iterator* %i), !dbg !5644
  br label %for.cond, !dbg !5644, !llvm.loop !5662

for.end:                                          ; preds = %for.cond
  call void @av_set_clear(%struct._list_node** %old_av_set), !dbg !5664
  br label %if.end28, !dbg !5665

if.end28:                                         ; preds = %for.end, %if.end
  ret void, !dbg !5666
}

declare dso_local zeroext i8 @tidy_control_flow(%struct.basic_block_def*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @find_place_for_bookkeeping(%struct.edge_def* %e1, %struct.edge_def* %e2) #0 !dbg !5667 {
entry:
  %e1.addr = alloca %struct.edge_def*, align 8
  %e2.addr = alloca %struct.edge_def*, align 8
  %place_to_insert = alloca %struct.rtx_def*, align 8
  %book_block = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j70 = alloca i32, align 4
  %__s75 = alloca i8*, align 8
  store %struct.edge_def* %e1, %struct.edge_def** %e1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e1.addr, metadata !5670, metadata !DIExpression()), !dbg !5671
  store %struct.edge_def* %e2, %struct.edge_def** %e2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e2.addr, metadata !5672, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %place_to_insert, metadata !5674, metadata !DIExpression()), !dbg !5675
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %book_block, metadata !5676, metadata !DIExpression()), !dbg !5677
  %0 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5678
  %1 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5679
  %call = call %struct.basic_block_def* @find_block_for_bookkeeping(%struct.edge_def* %0, %struct.edge_def* %1, i8 zeroext 0), !dbg !5680
  store %struct.basic_block_def* %call, %struct.basic_block_def** %book_block, align 8, !dbg !5677
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5681
  %tobool = icmp ne %struct.basic_block_def* %2, null, !dbg !5681
  br i1 %tobool, label %if.then, label %if.end13, !dbg !5683

if.then:                                          ; preds = %entry
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5684
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 7, !dbg !5684
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5684
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5684
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i32 0, i32 1, !dbg !5684
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5684
  store %struct.rtx_def* %5, %struct.rtx_def** %place_to_insert, align 8, !dbg !5686
  %6 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5687
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !5687
  %bf.load = load i32, i32* %7, align 8, !dbg !5687
  %bf.clear = and i32 %bf.load, 65535, !dbg !5687
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !5687
  br i1 %cmp, label %if.then1, label %if.end12, !dbg !5689

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !5690, metadata !DIExpression()), !dbg !5692
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5693
  %call2 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %8), !dbg !5694
  store %struct.rtx_def* %call2, %struct.rtx_def** %insn, align 8, !dbg !5692
  br label %while.cond, !dbg !5695

while.cond:                                       ; preds = %while.body, %if.then1
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5696
  %10 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5697
  %cmp3 = icmp ne %struct.rtx_def* %9, %10, !dbg !5698
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !5699

land.rhs:                                         ; preds = %while.cond
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5700
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !5700
  %bf.load4 = load i32, i32* %12, align 8, !dbg !5700
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !5700
  %cmp6 = icmp eq i32 %bf.clear5, 7, !dbg !5700
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !5701

lor.rhs:                                          ; preds = %land.rhs
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5702
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !5702
  %bf.load7 = load i32, i32* %14, align 8, !dbg !5702
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !5702
  %cmp9 = icmp eq i32 %bf.clear8, 13, !dbg !5702
  br label %lor.end, !dbg !5701

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %15 = phi i1 [ true, %land.rhs ], [ %cmp9, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %16 = phi i1 [ false, %while.cond ], [ %15, %lor.end ], !dbg !5703
  br i1 %16, label %while.body, label %while.end, !dbg !5695

while.body:                                       ; preds = %land.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5704
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !5704
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5704
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !5704
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5704
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5704
  store %struct.rtx_def* %18, %struct.rtx_def** %insn, align 8, !dbg !5705
  br label %while.cond, !dbg !5695, !llvm.loop !5706

while.end:                                        ; preds = %land.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5707
  %20 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5709
  %cmp10 = icmp eq %struct.rtx_def* %19, %20, !dbg !5710
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !5711

if.then11:                                        ; preds = %while.end
  store %struct.basic_block_def* null, %struct.basic_block_def** %book_block, align 8, !dbg !5712
  br label %if.end, !dbg !5713

if.end:                                           ; preds = %if.then11, %while.end
  br label %if.end12, !dbg !5714

if.end12:                                         ; preds = %if.end, %if.then
  br label %if.end13, !dbg !5715

if.end13:                                         ; preds = %if.end12, %entry
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5716
  %tobool14 = icmp ne %struct.basic_block_def* %21, null, !dbg !5716
  br i1 %tobool14, label %if.else62, label %if.then15, !dbg !5718

if.then15:                                        ; preds = %if.end13
  %22 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5719
  %23 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5721
  %call16 = call %struct.basic_block_def* @create_block_for_bookkeeping(%struct.edge_def* %22, %struct.edge_def* %23), !dbg !5722
  store %struct.basic_block_def* %call16, %struct.basic_block_def** %book_block, align 8, !dbg !5723
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5724
  %il17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i32 0, i32 7, !dbg !5724
  %rtl18 = bitcast %union.basic_block_il_dependent* %il17 to %struct.rtl_bb_info**, !dbg !5724
  %25 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl18, align 8, !dbg !5724
  %end_19 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %25, i32 0, i32 1, !dbg !5724
  %26 = load %struct.rtx_def*, %struct.rtx_def** %end_19, align 8, !dbg !5724
  store %struct.rtx_def* %26, %struct.rtx_def** %place_to_insert, align 8, !dbg !5725
  %27 = load i32, i32* @sched_verbose, align 4, !dbg !5726
  %cmp20 = icmp sge i32 %27, 9, !dbg !5728
  br i1 %cmp20, label %if.then21, label %if.end61, !dbg !5729

if.then21:                                        ; preds = %if.then15
  br label %do.body, !dbg !5730

do.body:                                          ; preds = %if.then21
  %28 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5731
  %tobool22 = icmp ne i8 %28, 0, !dbg !5731
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !5734

if.then23:                                        ; preds = %do.body
  br label %do.body24, !dbg !5731

do.body24:                                        ; preds = %if.then23
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !5735, metadata !DIExpression()), !dbg !5737
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5737
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i32 0, i32 1, !dbg !5737
  %30 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5737
  %tobool25 = icmp ne %struct.VEC_edge_gc* %30, null, !dbg !5737
  br i1 %tobool25, label %cond.true, label %cond.false, !dbg !5737

cond.true:                                        ; preds = %do.body24
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5737
  %succs26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i32 0, i32 1, !dbg !5737
  %32 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs26, align 8, !dbg !5737
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %32, i32 0, i32 0, !dbg !5737
  br label %cond.end, !dbg !5737

cond.false:                                       ; preds = %do.body24
  br label %cond.end, !dbg !5737

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5737
  %call27 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0), !dbg !5737
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call27, i32 0, i32 1, !dbg !5737
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5737
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i32 0, i32 9, !dbg !5737
  %34 = load i32, i32* %index, align 8, !dbg !5737
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5737
  %index28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i32 0, i32 9, !dbg !5737
  %36 = load i32, i32* %index28, align 8, !dbg !5737
  %call29 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.26, i64 0, i64 0), i32 %34, i32 %36), !dbg !5737
  %mul = mul nsw i32 2, %call29, !dbg !5737
  %add = add nsw i32 1, %mul, !dbg !5737
  store i32 %add, i32* %__j, align 4, !dbg !5737
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !5738, metadata !DIExpression()), !dbg !5737
  %37 = load i32, i32* %__j, align 4, !dbg !5737
  %conv = sext i32 %37 to i64, !dbg !5737
  %mul30 = mul i64 1, %conv, !dbg !5737
  %38 = alloca i8, i64 %mul30, align 16, !dbg !5737
  store i8* %38, i8** %__s, align 8, !dbg !5737
  %39 = load i8*, i8** %__s, align 8, !dbg !5737
  %40 = load i32, i32* %__j, align 4, !dbg !5737
  %conv31 = sext i32 %40 to i64, !dbg !5737
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5737
  %succs32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i32 0, i32 1, !dbg !5737
  %42 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs32, align 8, !dbg !5737
  %tobool33 = icmp ne %struct.VEC_edge_gc* %42, null, !dbg !5737
  br i1 %tobool33, label %cond.true34, label %cond.false37, !dbg !5737

cond.true34:                                      ; preds = %cond.end
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5737
  %succs35 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %43, i32 0, i32 1, !dbg !5737
  %44 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs35, align 8, !dbg !5737
  %base36 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %44, i32 0, i32 0, !dbg !5737
  br label %cond.end38, !dbg !5737

cond.false37:                                     ; preds = %cond.end
  br label %cond.end38, !dbg !5737

cond.end38:                                       ; preds = %cond.false37, %cond.true34
  %cond39 = phi %struct.VEC_edge_base* [ %base36, %cond.true34 ], [ null, %cond.false37 ], !dbg !5737
  %call40 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond39, i32 0), !dbg !5737
  %dest41 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call40, i32 0, i32 1, !dbg !5737
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %dest41, align 8, !dbg !5737
  %index42 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i32 0, i32 9, !dbg !5737
  %46 = load i32, i32* %index42, align 8, !dbg !5737
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5737
  %index43 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %47, i32 0, i32 9, !dbg !5737
  %48 = load i32, i32* %index43, align 8, !dbg !5737
  %call44 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %39, i64 %conv31, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.26, i64 0, i64 0), i32 %46, i32 %48), !dbg !5737
  %49 = load i8*, i8** %__s, align 8, !dbg !5737
  call void @sel_prepare_string_for_dot_label(i8* %49), !dbg !5737
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5737
  %51 = load i8*, i8** %__s, align 8, !dbg !5737
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %51), !dbg !5737
  br label %do.end, !dbg !5737

do.end:                                           ; preds = %cond.end38
  br label %if.end59, !dbg !5737

if.else:                                          ; preds = %do.body
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5731
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5731
  %succs46 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %53, i32 0, i32 1, !dbg !5731
  %54 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs46, align 8, !dbg !5731
  %tobool47 = icmp ne %struct.VEC_edge_gc* %54, null, !dbg !5731
  br i1 %tobool47, label %cond.true48, label %cond.false51, !dbg !5731

cond.true48:                                      ; preds = %if.else
  %55 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5731
  %succs49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %55, i32 0, i32 1, !dbg !5731
  %56 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs49, align 8, !dbg !5731
  %base50 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %56, i32 0, i32 0, !dbg !5731
  br label %cond.end52, !dbg !5731

cond.false51:                                     ; preds = %if.else
  br label %cond.end52, !dbg !5731

cond.end52:                                       ; preds = %cond.false51, %cond.true48
  %cond53 = phi %struct.VEC_edge_base* [ %base50, %cond.true48 ], [ null, %cond.false51 ], !dbg !5731
  %call54 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond53, i32 0), !dbg !5731
  %dest55 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call54, i32 0, i32 1, !dbg !5731
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %dest55, align 8, !dbg !5731
  %index56 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %57, i32 0, i32 9, !dbg !5731
  %58 = load i32, i32* %index56, align 8, !dbg !5731
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5731
  %index57 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %59, i32 0, i32 9, !dbg !5731
  %60 = load i32, i32* %index57, align 8, !dbg !5731
  %call58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.26, i64 0, i64 0), i32 %58, i32 %60), !dbg !5731
  br label %if.end59

if.end59:                                         ; preds = %cond.end52, %do.end
  br label %do.end60, !dbg !5734

do.end60:                                         ; preds = %if.end59
  br label %if.end61, !dbg !5734

if.end61:                                         ; preds = %do.end60, %if.then15
  br label %if.end89, !dbg !5739

if.else62:                                        ; preds = %if.end13
  %61 = load i32, i32* @sched_verbose, align 4, !dbg !5740
  %cmp63 = icmp sge i32 %61, 9, !dbg !5743
  br i1 %cmp63, label %if.then65, label %if.end88, !dbg !5744

if.then65:                                        ; preds = %if.else62
  br label %do.body66, !dbg !5745

do.body66:                                        ; preds = %if.then65
  %62 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5746
  %tobool67 = icmp ne i8 %62, 0, !dbg !5746
  br i1 %tobool67, label %if.then68, label %if.else83, !dbg !5749

if.then68:                                        ; preds = %do.body66
  br label %do.body69, !dbg !5746

do.body69:                                        ; preds = %if.then68
  call void @llvm.dbg.declare(metadata i32* %__j70, metadata !5750, metadata !DIExpression()), !dbg !5752
  %63 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5752
  %index71 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %63, i32 0, i32 9, !dbg !5752
  %64 = load i32, i32* %index71, align 8, !dbg !5752
  %call72 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0), i32 %64), !dbg !5752
  %mul73 = mul nsw i32 2, %call72, !dbg !5752
  %add74 = add nsw i32 1, %mul73, !dbg !5752
  store i32 %add74, i32* %__j70, align 4, !dbg !5752
  call void @llvm.dbg.declare(metadata i8** %__s75, metadata !5753, metadata !DIExpression()), !dbg !5752
  %65 = load i32, i32* %__j70, align 4, !dbg !5752
  %conv76 = sext i32 %65 to i64, !dbg !5752
  %mul77 = mul i64 1, %conv76, !dbg !5752
  %66 = alloca i8, i64 %mul77, align 16, !dbg !5752
  store i8* %66, i8** %__s75, align 8, !dbg !5752
  %67 = load i8*, i8** %__s75, align 8, !dbg !5752
  %68 = load i32, i32* %__j70, align 4, !dbg !5752
  %conv78 = sext i32 %68 to i64, !dbg !5752
  %69 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5752
  %index79 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %69, i32 0, i32 9, !dbg !5752
  %70 = load i32, i32* %index79, align 8, !dbg !5752
  %call80 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %67, i64 %conv78, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0), i32 %70), !dbg !5752
  %71 = load i8*, i8** %__s75, align 8, !dbg !5752
  call void @sel_prepare_string_for_dot_label(i8* %71), !dbg !5752
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5752
  %73 = load i8*, i8** %__s75, align 8, !dbg !5752
  %call81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %73), !dbg !5752
  br label %do.end82, !dbg !5752

do.end82:                                         ; preds = %do.body69
  br label %if.end86, !dbg !5752

if.else83:                                        ; preds = %do.body66
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5746
  %75 = load %struct.basic_block_def*, %struct.basic_block_def** %book_block, align 8, !dbg !5746
  %index84 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %75, i32 0, i32 9, !dbg !5746
  %76 = load i32, i32* %index84, align 8, !dbg !5746
  %call85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0), i32 %76), !dbg !5746
  br label %if.end86

if.end86:                                         ; preds = %if.else83, %do.end82
  br label %do.end87, !dbg !5749

do.end87:                                         ; preds = %if.end86
  br label %if.end88, !dbg !5749

if.end88:                                         ; preds = %do.end87, %if.else62
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end61
  %77 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5754
  %78 = bitcast %struct.rtx_def* %77 to i32*, !dbg !5754
  %bf.load90 = load i32, i32* %78, align 8, !dbg !5754
  %bf.clear91 = and i32 %bf.load90, 65535, !dbg !5754
  %cmp92 = icmp eq i32 %bf.clear91, 8, !dbg !5754
  br i1 %cmp92, label %land.lhs.true, label %lor.lhs.false, !dbg !5754

lor.lhs.false:                                    ; preds = %if.end89
  %79 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5754
  %80 = bitcast %struct.rtx_def* %79 to i32*, !dbg !5754
  %bf.load94 = load i32, i32* %80, align 8, !dbg !5754
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !5754
  %cmp96 = icmp eq i32 %bf.clear95, 7, !dbg !5754
  br i1 %cmp96, label %land.lhs.true, label %lor.lhs.false98, !dbg !5754

lor.lhs.false98:                                  ; preds = %lor.lhs.false
  %81 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5754
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !5754
  %bf.load99 = load i32, i32* %82, align 8, !dbg !5754
  %bf.clear100 = and i32 %bf.load99, 65535, !dbg !5754
  %cmp101 = icmp eq i32 %bf.clear100, 9, !dbg !5754
  br i1 %cmp101, label %land.lhs.true, label %lor.lhs.false103, !dbg !5754

lor.lhs.false103:                                 ; preds = %lor.lhs.false98
  %83 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5754
  %84 = bitcast %struct.rtx_def* %83 to i32*, !dbg !5754
  %bf.load104 = load i32, i32* %84, align 8, !dbg !5754
  %bf.clear105 = and i32 %bf.load104, 65535, !dbg !5754
  %cmp106 = icmp eq i32 %bf.clear105, 10, !dbg !5754
  br i1 %cmp106, label %land.lhs.true, label %if.end116, !dbg !5756

land.lhs.true:                                    ; preds = %lor.lhs.false103, %lor.lhs.false98, %lor.lhs.false, %if.end89
  %85 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5757
  %call108 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %85), !dbg !5758
  %conv109 = zext i8 %call108 to i32, !dbg !5758
  %tobool110 = icmp ne i32 %conv109, 0, !dbg !5758
  br i1 %tobool110, label %if.then111, label %if.end116, !dbg !5759

if.then111:                                       ; preds = %land.lhs.true
  %86 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5760
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !5760
  %fld113 = bitcast %union.u* %u112 to [1 x %union.rtunion_def]*, !dbg !5760
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i64 0, i64 1, !dbg !5760
  %rt_rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**, !dbg !5760
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx115, align 8, !dbg !5760
  store %struct.rtx_def* %87, %struct.rtx_def** %place_to_insert, align 8, !dbg !5761
  br label %if.end116, !dbg !5762

if.end116:                                        ; preds = %if.then111, %land.lhs.true, %lor.lhs.false103
  %88 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !5763
  ret %struct.rtx_def* %88, !dbg !5764
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @find_seqno_for_bookkeeping(%struct.rtx_def* %place_to_insert, %struct.rtx_def* %join_point) #0 !dbg !5765 {
entry:
  %place_to_insert.addr = alloca %struct.rtx_def*, align 8
  %join_point.addr = alloca %struct.rtx_def*, align 8
  %seqno = alloca i32, align 4
  %next = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %place_to_insert, %struct.rtx_def** %place_to_insert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %place_to_insert.addr, metadata !5768, metadata !DIExpression()), !dbg !5769
  store %struct.rtx_def* %join_point, %struct.rtx_def** %join_point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %join_point.addr, metadata !5770, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.declare(metadata i32* %seqno, metadata !5772, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !5774, metadata !DIExpression()), !dbg !5775
  %0 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert.addr, align 8, !dbg !5776
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !5776
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5776
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !5776
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5776
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5776
  store %struct.rtx_def* %1, %struct.rtx_def** %next, align 8, !dbg !5777
  %2 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !5778
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !5778
  %bf.load = load i32, i32* %3, align 8, !dbg !5778
  %bf.clear = and i32 %bf.load, 65535, !dbg !5778
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5778
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5778

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !5778
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !5778
  %bf.load1 = load i32, i32* %5, align 8, !dbg !5778
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !5778
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !5778
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !5778

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %6 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !5778
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !5778
  %bf.load5 = load i32, i32* %7, align 8, !dbg !5778
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !5778
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !5778
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !5778

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !5778
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !5778
  %bf.load9 = load i32, i32* %9, align 8, !dbg !5778
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !5778
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !5778
  br i1 %cmp11, label %land.lhs.true, label %if.else, !dbg !5780

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !5781
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !5781
  %bf.load12 = load i32, i32* %11, align 8, !dbg !5781
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !5781
  %cmp14 = icmp eq i32 %bf.clear13, 9, !dbg !5781
  br i1 %cmp14, label %land.lhs.true15, label %if.else, !dbg !5782

land.lhs.true15:                                  ; preds = %land.lhs.true
  %12 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !5783
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !5783
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !5783
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 3, !dbg !5783
  %rt_bb = bitcast %union.rtunion_def* %arrayidx18 to %struct.basic_block_def**, !dbg !5783
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5783
  %14 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert.addr, align 8, !dbg !5784
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !5784
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !5784
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 3, !dbg !5784
  %rt_bb22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.basic_block_def**, !dbg !5784
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb22, align 8, !dbg !5784
  %cmp23 = icmp eq %struct.basic_block_def* %13, %15, !dbg !5785
  br i1 %cmp23, label %if.then, label %if.else, !dbg !5786

if.then:                                          ; preds = %land.lhs.true15
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5787
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %16, null, !dbg !5787
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5787

cond.true:                                        ; preds = %if.then
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5787
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i32 0, i32 0, !dbg !5787
  br label %cond.end, !dbg !5787

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !5787

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5787
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5787
  %tobool24 = icmp ne %struct.VEC_int_heap* %18, null, !dbg !5787
  br i1 %tobool24, label %cond.true25, label %cond.false27, !dbg !5787

cond.true25:                                      ; preds = %cond.end
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5787
  %base26 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i32 0, i32 0, !dbg !5787
  br label %cond.end28, !dbg !5787

cond.false27:                                     ; preds = %cond.end
  br label %cond.end28, !dbg !5787

cond.end28:                                       ; preds = %cond.false27, %cond.true25
  %cond29 = phi %struct.VEC_int_base* [ %base26, %cond.true25 ], [ null, %cond.false27 ], !dbg !5787
  %20 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !5787
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !5787
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !5787
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 0, !dbg !5787
  %rt_int = bitcast %union.rtunion_def* %arrayidx32 to i32*, !dbg !5787
  %21 = load i32, i32* %rt_int, align 8, !dbg !5787
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond29, i32 %21), !dbg !5787
  %call33 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !5787
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call33, i32 0, i32 0, !dbg !5787
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 5, !dbg !5787
  %22 = load i32, i32* %sched_times, align 8, !dbg !5787
  %cmp34 = icmp eq i32 %22, 0, !dbg !5787
  br i1 %cmp34, label %cond.false36, label %cond.true35, !dbg !5787

cond.true35:                                      ; preds = %cond.end28
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4740, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5787
  br label %cond.end37, !dbg !5787

cond.false36:                                     ; preds = %cond.end28
  br label %cond.end37, !dbg !5787

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi i32 [ 0, %cond.true35 ], [ 0, %cond.false36 ], !dbg !5787
  %23 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5789
  %tobool39 = icmp ne %struct.VEC_sel_insn_data_def_heap* %23, null, !dbg !5789
  br i1 %tobool39, label %cond.true40, label %cond.false42, !dbg !5789

cond.true40:                                      ; preds = %cond.end37
  %24 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5789
  %base41 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %24, i32 0, i32 0, !dbg !5789
  br label %cond.end43, !dbg !5789

cond.false42:                                     ; preds = %cond.end37
  br label %cond.end43, !dbg !5789

cond.end43:                                       ; preds = %cond.false42, %cond.true40
  %cond44 = phi %struct.VEC_sel_insn_data_def_base* [ %base41, %cond.true40 ], [ null, %cond.false42 ], !dbg !5789
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5789
  %tobool45 = icmp ne %struct.VEC_int_heap* %25, null, !dbg !5789
  br i1 %tobool45, label %cond.true46, label %cond.false48, !dbg !5789

cond.true46:                                      ; preds = %cond.end43
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5789
  %base47 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %26, i32 0, i32 0, !dbg !5789
  br label %cond.end49, !dbg !5789

cond.false48:                                     ; preds = %cond.end43
  br label %cond.end49, !dbg !5789

cond.end49:                                       ; preds = %cond.false48, %cond.true46
  %cond50 = phi %struct.VEC_int_base* [ %base47, %cond.true46 ], [ null, %cond.false48 ], !dbg !5789
  %27 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !5789
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !5789
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !5789
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 0, !dbg !5789
  %rt_int54 = bitcast %union.rtunion_def* %arrayidx53 to i32*, !dbg !5789
  %28 = load i32, i32* %rt_int54, align 8, !dbg !5789
  %call55 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond50, i32 %28), !dbg !5789
  %call56 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond44, i32 %call55), !dbg !5789
  %seqno57 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call56, i32 0, i32 2, !dbg !5789
  %29 = load i32, i32* %seqno57, align 4, !dbg !5789
  store i32 %29, i32* %seqno, align 4, !dbg !5790
  br label %if.end108, !dbg !5791

if.else:                                          ; preds = %land.lhs.true15, %land.lhs.true, %lor.lhs.false8
  %30 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5792
  %tobool58 = icmp ne %struct.VEC_sel_insn_data_def_heap* %30, null, !dbg !5792
  br i1 %tobool58, label %cond.true59, label %cond.false61, !dbg !5792

cond.true59:                                      ; preds = %if.else
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5792
  %base60 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %31, i32 0, i32 0, !dbg !5792
  br label %cond.end62, !dbg !5792

cond.false61:                                     ; preds = %if.else
  br label %cond.end62, !dbg !5792

cond.end62:                                       ; preds = %cond.false61, %cond.true59
  %cond63 = phi %struct.VEC_sel_insn_data_def_base* [ %base60, %cond.true59 ], [ null, %cond.false61 ], !dbg !5792
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5792
  %tobool64 = icmp ne %struct.VEC_int_heap* %32, null, !dbg !5792
  br i1 %tobool64, label %cond.true65, label %cond.false67, !dbg !5792

cond.true65:                                      ; preds = %cond.end62
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5792
  %base66 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %33, i32 0, i32 0, !dbg !5792
  br label %cond.end68, !dbg !5792

cond.false67:                                     ; preds = %cond.end62
  br label %cond.end68, !dbg !5792

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi %struct.VEC_int_base* [ %base66, %cond.true65 ], [ null, %cond.false67 ], !dbg !5792
  %34 = load %struct.rtx_def*, %struct.rtx_def** %join_point.addr, align 8, !dbg !5792
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !5792
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !5792
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 0, !dbg !5792
  %rt_int73 = bitcast %union.rtunion_def* %arrayidx72 to i32*, !dbg !5792
  %35 = load i32, i32* %rt_int73, align 8, !dbg !5792
  %call74 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond69, i32 %35), !dbg !5792
  %call75 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond63, i32 %call74), !dbg !5792
  %seqno76 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call75, i32 0, i32 2, !dbg !5792
  %36 = load i32, i32* %seqno76, align 4, !dbg !5792
  %cmp77 = icmp sgt i32 %36, 0, !dbg !5794
  br i1 %cmp77, label %if.then78, label %if.else98, !dbg !5795

if.then78:                                        ; preds = %cond.end68
  %37 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5796
  %tobool79 = icmp ne %struct.VEC_sel_insn_data_def_heap* %37, null, !dbg !5796
  br i1 %tobool79, label %cond.true80, label %cond.false82, !dbg !5796

cond.true80:                                      ; preds = %if.then78
  %38 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5796
  %base81 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %38, i32 0, i32 0, !dbg !5796
  br label %cond.end83, !dbg !5796

cond.false82:                                     ; preds = %if.then78
  br label %cond.end83, !dbg !5796

cond.end83:                                       ; preds = %cond.false82, %cond.true80
  %cond84 = phi %struct.VEC_sel_insn_data_def_base* [ %base81, %cond.true80 ], [ null, %cond.false82 ], !dbg !5796
  %39 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5796
  %tobool85 = icmp ne %struct.VEC_int_heap* %39, null, !dbg !5796
  br i1 %tobool85, label %cond.true86, label %cond.false88, !dbg !5796

cond.true86:                                      ; preds = %cond.end83
  %40 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5796
  %base87 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %40, i32 0, i32 0, !dbg !5796
  br label %cond.end89, !dbg !5796

cond.false88:                                     ; preds = %cond.end83
  br label %cond.end89, !dbg !5796

cond.end89:                                       ; preds = %cond.false88, %cond.true86
  %cond90 = phi %struct.VEC_int_base* [ %base87, %cond.true86 ], [ null, %cond.false88 ], !dbg !5796
  %41 = load %struct.rtx_def*, %struct.rtx_def** %join_point.addr, align 8, !dbg !5796
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !5796
  %fld92 = bitcast %union.u* %u91 to [1 x %union.rtunion_def]*, !dbg !5796
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i64 0, i64 0, !dbg !5796
  %rt_int94 = bitcast %union.rtunion_def* %arrayidx93 to i32*, !dbg !5796
  %42 = load i32, i32* %rt_int94, align 8, !dbg !5796
  %call95 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond90, i32 %42), !dbg !5796
  %call96 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond84, i32 %call95), !dbg !5796
  %seqno97 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call96, i32 0, i32 2, !dbg !5796
  %43 = load i32, i32* %seqno97, align 4, !dbg !5796
  store i32 %43, i32* %seqno, align 4, !dbg !5797
  br label %if.end107, !dbg !5798

if.else98:                                        ; preds = %cond.end68
  %44 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert.addr, align 8, !dbg !5799
  %call99 = call i32 @get_seqno_by_preds(%struct.rtx_def* %44), !dbg !5801
  store i32 %call99, i32* %seqno, align 4, !dbg !5802
  %45 = load i32, i32* %seqno, align 4, !dbg !5803
  %cmp100 = icmp slt i32 %45, 0, !dbg !5805
  br i1 %cmp100, label %if.then101, label %if.end, !dbg !5806

if.then101:                                       ; preds = %if.else98
  %46 = load i8, i8* @pipelining_p, align 1, !dbg !5807
  %tobool102 = icmp ne i8 %46, 0, !dbg !5807
  br i1 %tobool102, label %cond.false104, label %cond.true103, !dbg !5807

cond.true103:                                     ; preds = %if.then101
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4756, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5807
  br label %cond.end105, !dbg !5807

cond.false104:                                    ; preds = %if.then101
  br label %cond.end105, !dbg !5807

cond.end105:                                      ; preds = %cond.false104, %cond.true103
  %cond106 = phi i32 [ 0, %cond.true103 ], [ 0, %cond.false104 ], !dbg !5807
  store i32 1, i32* %seqno, align 4, !dbg !5809
  br label %if.end, !dbg !5810

if.end:                                           ; preds = %cond.end105, %if.else98
  br label %if.end107

if.end107:                                        ; preds = %if.end, %cond.end89
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %cond.end49
  %47 = load i32, i32* %seqno, align 4, !dbg !5811
  %cmp109 = icmp sgt i32 %47, 0, !dbg !5811
  br i1 %cmp109, label %cond.false111, label %cond.true110, !dbg !5811

cond.true110:                                     ; preds = %if.end108
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4761, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5811
  br label %cond.end112, !dbg !5811

cond.false111:                                    ; preds = %if.end108
  br label %cond.end112, !dbg !5811

cond.end112:                                      ; preds = %cond.false111, %cond.true110
  %cond113 = phi i32 [ 0, %cond.true110 ], [ 0, %cond.false111 ], !dbg !5811
  %48 = load i32, i32* %seqno, align 4, !dbg !5812
  ret i32 %48, !dbg !5813
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @emit_bookkeeping_insn(%struct.rtx_def* %place_to_insert, %struct._expr* %c_expr, i32 %new_seqno) #0 !dbg !5814 {
entry:
  %place_to_insert.addr = alloca %struct.rtx_def*, align 8
  %c_expr.addr = alloca %struct._expr*, align 8
  %new_seqno.addr = alloca i32, align 4
  %new_insn_rtx = alloca %struct.rtx_def*, align 8
  %new_vinsn = alloca %struct.vinsn_def*, align 8
  %new_insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %place_to_insert, %struct.rtx_def** %place_to_insert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %place_to_insert.addr, metadata !5817, metadata !DIExpression()), !dbg !5818
  store %struct._expr* %c_expr, %struct._expr** %c_expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %c_expr.addr, metadata !5819, metadata !DIExpression()), !dbg !5820
  store i32 %new_seqno, i32* %new_seqno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_seqno.addr, metadata !5821, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_insn_rtx, metadata !5823, metadata !DIExpression()), !dbg !5824
  %0 = load %struct._expr*, %struct._expr** %c_expr.addr, align 8, !dbg !5825
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !5825
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !5825
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i32 0, i32 0, !dbg !5825
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !5825
  %call = call %struct.rtx_def* @create_copy_of_insn_rtx(%struct.rtx_def* %2), !dbg !5826
  store %struct.rtx_def* %call, %struct.rtx_def** %new_insn_rtx, align 8, !dbg !5824
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %new_vinsn, metadata !5827, metadata !DIExpression()), !dbg !5828
  %3 = load %struct.rtx_def*, %struct.rtx_def** %new_insn_rtx, align 8, !dbg !5829
  %4 = load %struct._expr*, %struct._expr** %c_expr.addr, align 8, !dbg !5830
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %4, i32 0, i32 0, !dbg !5830
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !5830
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i32 0, i32 1, !dbg !5830
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !5830
  %6 = load i32, i32* %type, align 8, !dbg !5830
  %cmp = icmp eq i32 %6, 23, !dbg !5830
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5830

lor.rhs:                                          ; preds = %entry
  %7 = load %struct._expr*, %struct._expr** %c_expr.addr, align 8, !dbg !5830
  %vinsn2 = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 0, !dbg !5830
  %8 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn2, align 8, !dbg !5830
  %id3 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i32 0, i32 1, !dbg !5830
  %type4 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id3, i32 0, i32 0, !dbg !5830
  %9 = load i32, i32* %type4, align 8, !dbg !5830
  %cmp5 = icmp eq i32 %9, 24, !dbg !5830
  br label %lor.end, !dbg !5830

lor.end:                                          ; preds = %lor.rhs, %entry
  %10 = phi i1 [ true, %entry ], [ %cmp5, %lor.rhs ]
  %lnot = xor i1 %10, true, !dbg !5830
  %lnot.ext = zext i1 %lnot to i32, !dbg !5830
  %conv = trunc i32 %lnot.ext to i8, !dbg !5830
  %call6 = call %struct.vinsn_def* @create_vinsn_from_insn_rtx(%struct.rtx_def* %3, i8 zeroext %conv), !dbg !5831
  store %struct.vinsn_def* %call6, %struct.vinsn_def** %new_vinsn, align 8, !dbg !5828
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_insn, metadata !5832, metadata !DIExpression()), !dbg !5833
  %11 = load %struct._expr*, %struct._expr** %c_expr.addr, align 8, !dbg !5834
  %12 = load %struct.vinsn_def*, %struct.vinsn_def** %new_vinsn, align 8, !dbg !5835
  %13 = load i32, i32* %new_seqno.addr, align 4, !dbg !5836
  %14 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert.addr, align 8, !dbg !5837
  %call7 = call %struct.rtx_def* @emit_insn_from_expr_after(%struct._expr* %11, %struct.vinsn_def* %12, i32 %13, %struct.rtx_def* %14), !dbg !5838
  store %struct.rtx_def* %call7, %struct.rtx_def** %new_insn, align 8, !dbg !5833
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5839
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %15, null, !dbg !5839
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5839

cond.true:                                        ; preds = %lor.end
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !5839
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %16, i32 0, i32 0, !dbg !5839
  br label %cond.end, !dbg !5839

cond.false:                                       ; preds = %lor.end
  br label %cond.end, !dbg !5839

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5839
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5839
  %tobool8 = icmp ne %struct.VEC_int_heap* %17, null, !dbg !5839
  br i1 %tobool8, label %cond.true9, label %cond.false11, !dbg !5839

cond.true9:                                       ; preds = %cond.end
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5839
  %base10 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i32 0, i32 0, !dbg !5839
  br label %cond.end12, !dbg !5839

cond.false11:                                     ; preds = %cond.end
  br label %cond.end12, !dbg !5839

cond.end12:                                       ; preds = %cond.false11, %cond.true9
  %cond13 = phi %struct.VEC_int_base* [ %base10, %cond.true9 ], [ null, %cond.false11 ], !dbg !5839
  %19 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !5839
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !5839
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5839
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5839
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5839
  %20 = load i32, i32* %rt_int, align 8, !dbg !5839
  %call14 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond13, i32 %20), !dbg !5839
  %call15 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call14), !dbg !5839
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call15, i32 0, i32 0, !dbg !5839
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 5, !dbg !5839
  store i32 0, i32* %sched_times, align 8, !dbg !5840
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !5841
  %22 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !5842
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !5842
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !5842
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 0, !dbg !5842
  %rt_int19 = bitcast %union.rtunion_def* %arrayidx18 to i32*, !dbg !5842
  %23 = load i32, i32* %rt_int19, align 8, !dbg !5842
  %call20 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %21, i32 %23), !dbg !5843
  %24 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !5844
  ret %struct.rtx_def* %24, !dbg !5845
}

declare dso_local void @exchange_data_sets(%struct.basic_block_def*, %struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @create_block_for_bookkeeping(%struct.edge_def* %e1, %struct.edge_def* %e2) #0 !dbg !5846 {
entry:
  %e1.addr = alloca %struct.edge_def*, align 8
  %e2.addr = alloca %struct.edge_def*, align 8
  %new_bb = alloca %struct.basic_block_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %latch = alloca %struct.basic_block_def*, align 8
  %succ = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %last = alloca %struct.rtx_def*, align 8
  %gbi = alloca %struct.sel_global_bb_info_def, align 8
  %rbi = alloca %struct.sel_region_bb_info_def, align 8
  %i = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j436 = alloca i32, align 4
  %__s454 = alloca i8*, align 8
  store %struct.edge_def* %e1, %struct.edge_def** %e1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e1.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  store %struct.edge_def* %e2, %struct.edge_def** %e2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e2.addr, metadata !5851, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %new_bb, metadata !5853, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !5855, metadata !DIExpression()), !dbg !5856
  %0 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5857
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %0, i32 0, i32 1, !dbg !5858
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5858
  store %struct.basic_block_def* %1, %struct.basic_block_def** %bb, align 8, !dbg !5856
  %2 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !5859
  %tobool = icmp ne %struct.loop* %2, null, !dbg !5859
  br i1 %tobool, label %if.then, label %if.end, !dbg !5861

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %latch, metadata !5862, metadata !DIExpression()), !dbg !5864
  %3 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !5865
  %latch1 = getelementptr inbounds %struct.loop, %struct.loop* %3, i32 0, i32 3, !dbg !5866
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %latch1, align 8, !dbg !5866
  store %struct.basic_block_def* %4, %struct.basic_block_def** %latch, align 8, !dbg !5864
  %5 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5867
  %dest2 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %5, i32 0, i32 1, !dbg !5867
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest2, align 8, !dbg !5867
  %7 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !5867
  %header = getelementptr inbounds %struct.loop, %struct.loop* %7, i32 0, i32 2, !dbg !5867
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !5867
  %cmp = icmp ne %struct.basic_block_def* %6, %8, !dbg !5867
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !5867

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4548, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5867
  br label %cond.end, !dbg !5867

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !5867

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5867
  %9 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5868
  %dest3 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %9, i32 0, i32 1, !dbg !5868
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %dest3, align 8, !dbg !5868
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !5868
  %cmp4 = icmp ne %struct.basic_block_def* %10, %11, !dbg !5868
  br i1 %cmp4, label %cond.false10, label %lor.lhs.false, !dbg !5868

lor.lhs.false:                                    ; preds = %cond.end
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !5868
  %call = call zeroext i8 @single_pred_p(%struct.basic_block_def* %12), !dbg !5868
  %tobool5 = icmp ne i8 %call, 0, !dbg !5868
  br i1 %tobool5, label %lor.lhs.false6, label %cond.false10, !dbg !5868

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %13 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5868
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !5868
  %call7 = call %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %14), !dbg !5868
  %cmp8 = icmp ne %struct.edge_def* %13, %call7, !dbg !5868
  br i1 %cmp8, label %cond.false10, label %cond.true9, !dbg !5868

cond.true9:                                       ; preds = %lor.lhs.false6
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4553, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5868
  br label %cond.end11, !dbg !5868

cond.false10:                                     ; preds = %lor.lhs.false6, %lor.lhs.false, %cond.end
  br label %cond.end11, !dbg !5868

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond12 = phi i32 [ 0, %cond.true9 ], [ 0, %cond.false10 ], !dbg !5868
  br label %if.end, !dbg !5869

if.end:                                           ; preds = %cond.end11, %entry
  %15 = load %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** @sched_split_block, align 8, !dbg !5870
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5871
  %call13 = call %struct.basic_block_def* %15(%struct.basic_block_def* %16, %struct.rtx_def* null), !dbg !5870
  store %struct.basic_block_def* %call13, %struct.basic_block_def** %new_bb, align 8, !dbg !5872
  %17 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5873
  %tobool14 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %17, null, !dbg !5873
  br i1 %tobool14, label %cond.true15, label %cond.false16, !dbg !5873

cond.true15:                                      ; preds = %if.end
  %18 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5873
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %18, i32 0, i32 0, !dbg !5873
  br label %cond.end17, !dbg !5873

cond.false16:                                     ; preds = %if.end
  br label %cond.end17, !dbg !5873

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond18 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base, %cond.true15 ], [ null, %cond.false16 ], !dbg !5873
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5873
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i32 0, i32 9, !dbg !5873
  %20 = load i32, i32* %index, align 8, !dbg !5873
  %call19 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond18, i32 %20), !dbg !5873
  %note_list = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call19, i32 0, i32 0, !dbg !5873
  %21 = load %struct.rtx_def*, %struct.rtx_def** %note_list, align 8, !dbg !5873
  %cmp20 = icmp eq %struct.rtx_def* %21, null, !dbg !5873
  br i1 %cmp20, label %cond.false22, label %cond.true21, !dbg !5873

cond.true21:                                      ; preds = %cond.end17
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4560, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5873
  br label %cond.end23, !dbg !5873

cond.false22:                                     ; preds = %cond.end17
  br label %cond.end23, !dbg !5873

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32 [ 0, %cond.true21 ], [ 0, %cond.false22 ], !dbg !5873
  %22 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5874
  %tobool25 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %22, null, !dbg !5874
  br i1 %tobool25, label %cond.true26, label %cond.false28, !dbg !5874

cond.true26:                                      ; preds = %cond.end23
  %23 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5874
  %base27 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %23, i32 0, i32 0, !dbg !5874
  br label %cond.end29, !dbg !5874

cond.false28:                                     ; preds = %cond.end23
  br label %cond.end29, !dbg !5874

cond.end29:                                       ; preds = %cond.false28, %cond.true26
  %cond30 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base27, %cond.true26 ], [ null, %cond.false28 ], !dbg !5874
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5874
  %index31 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i32 0, i32 9, !dbg !5874
  %25 = load i32, i32* %index31, align 8, !dbg !5874
  %call32 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond30, i32 %25), !dbg !5874
  %note_list33 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call32, i32 0, i32 0, !dbg !5874
  %26 = load %struct.rtx_def*, %struct.rtx_def** %note_list33, align 8, !dbg !5874
  %27 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5875
  %tobool34 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %27, null, !dbg !5875
  br i1 %tobool34, label %cond.true35, label %cond.false37, !dbg !5875

cond.true35:                                      ; preds = %cond.end29
  %28 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5875
  %base36 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %28, i32 0, i32 0, !dbg !5875
  br label %cond.end38, !dbg !5875

cond.false37:                                     ; preds = %cond.end29
  br label %cond.end38, !dbg !5875

cond.end38:                                       ; preds = %cond.false37, %cond.true35
  %cond39 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base36, %cond.true35 ], [ null, %cond.false37 ], !dbg !5875
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5875
  %index40 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i32 0, i32 9, !dbg !5875
  %30 = load i32, i32* %index40, align 8, !dbg !5875
  %call41 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond39, i32 %30), !dbg !5875
  %note_list42 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call41, i32 0, i32 0, !dbg !5875
  store %struct.rtx_def* %26, %struct.rtx_def** %note_list42, align 8, !dbg !5876
  %31 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5877
  %tobool43 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %31, null, !dbg !5877
  br i1 %tobool43, label %cond.true44, label %cond.false46, !dbg !5877

cond.true44:                                      ; preds = %cond.end38
  %32 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5877
  %base45 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %32, i32 0, i32 0, !dbg !5877
  br label %cond.end47, !dbg !5877

cond.false46:                                     ; preds = %cond.end38
  br label %cond.end47, !dbg !5877

cond.end47:                                       ; preds = %cond.false46, %cond.true44
  %cond48 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base45, %cond.true44 ], [ null, %cond.false46 ], !dbg !5877
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5877
  %index49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i32 0, i32 9, !dbg !5877
  %34 = load i32, i32* %index49, align 8, !dbg !5877
  %call50 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond48, i32 %34), !dbg !5877
  %note_list51 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call50, i32 0, i32 0, !dbg !5877
  store %struct.rtx_def* null, %struct.rtx_def** %note_list51, align 8, !dbg !5878
  %35 = load %struct.edge_def*, %struct.edge_def** %e2.addr, align 8, !dbg !5879
  %dest52 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %35, i32 0, i32 1, !dbg !5879
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %dest52, align 8, !dbg !5879
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5879
  %cmp53 = icmp eq %struct.basic_block_def* %36, %37, !dbg !5879
  br i1 %cmp53, label %cond.false55, label %cond.true54, !dbg !5879

cond.true54:                                      ; preds = %cond.end47
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4564, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5879
  br label %cond.end56, !dbg !5879

cond.false55:                                     ; preds = %cond.end47
  br label %cond.end56, !dbg !5879

cond.end56:                                       ; preds = %cond.false55, %cond.true54
  %cond57 = phi i32 [ 0, %cond.true54 ], [ 0, %cond.false55 ], !dbg !5879
  %38 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5880
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i32 0, i32 7, !dbg !5882
  %39 = load i32, i32* %flags, align 8, !dbg !5882
  %and = and i32 %39, 1, !dbg !5883
  %tobool58 = icmp ne i32 %and, 0, !dbg !5883
  br i1 %tobool58, label %if.then59, label %if.else, !dbg !5884

if.then59:                                        ; preds = %cond.end56
  %40 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5885
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5886
  call void @sel_redirect_edge_and_branch_force(%struct.edge_def* %40, %struct.basic_block_def* %41), !dbg !5887
  br label %if.end61, !dbg !5887

if.else:                                          ; preds = %cond.end56
  %42 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5888
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5889
  %call60 = call zeroext i8 @sel_redirect_edge_and_branch(%struct.edge_def* %42, %struct.basic_block_def* %43), !dbg !5890
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then59
  %44 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !5891
  %dest62 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %44, i32 0, i32 1, !dbg !5891
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %dest62, align 8, !dbg !5891
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5891
  %cmp63 = icmp eq %struct.basic_block_def* %45, %46, !dbg !5891
  br i1 %cmp63, label %cond.false65, label %cond.true64, !dbg !5891

cond.true64:                                      ; preds = %if.end61
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4572, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5891
  br label %cond.end66, !dbg !5891

cond.false65:                                     ; preds = %if.end61
  br label %cond.end66, !dbg !5891

cond.end66:                                       ; preds = %cond.false65, %cond.true64
  %cond67 = phi i32 [ 0, %cond.true64 ], [ 0, %cond.false65 ], !dbg !5891
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5892
  %call68 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %47), !dbg !5892
  %tobool69 = icmp ne i8 %call68, 0, !dbg !5892
  br i1 %tobool69, label %cond.false71, label %cond.true70, !dbg !5892

cond.true70:                                      ; preds = %cond.end66
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4573, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5892
  br label %cond.end72, !dbg !5892

cond.false71:                                     ; preds = %cond.end66
  br label %cond.end72, !dbg !5892

cond.end72:                                       ; preds = %cond.false71, %cond.true70
  %cond73 = phi i32 [ 0, %cond.true70 ], [ 0, %cond.false71 ], !dbg !5892
  %48 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5893
  %tobool74 = icmp ne i32 %48, 0, !dbg !5893
  br i1 %tobool74, label %if.then75, label %if.end524, !dbg !5895

if.then75:                                        ; preds = %cond.end72
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %succ, metadata !5896, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !5899, metadata !DIExpression()), !dbg !5900
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5901
  %call76 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %49), !dbg !5902
  store %struct.rtx_def* %call76, %struct.rtx_def** %insn, align 8, !dbg !5900
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last, metadata !5903, metadata !DIExpression()), !dbg !5904
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5905
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !5905
  %bf.load = load i32, i32* %51, align 8, !dbg !5905
  %bf.clear = and i32 %bf.load, 65535, !dbg !5905
  %cmp77 = icmp eq i32 %bf.clear, 7, !dbg !5905
  br i1 %cmp77, label %land.lhs.true, label %if.end523, !dbg !5907

land.lhs.true:                                    ; preds = %if.then75
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5908
  %call78 = call zeroext i8 @single_succ_p(%struct.basic_block_def* %52), !dbg !5909
  %conv = zext i8 %call78 to i32, !dbg !5909
  %tobool79 = icmp ne i32 %conv, 0, !dbg !5909
  br i1 %tobool79, label %land.lhs.true80, label %if.end523, !dbg !5910

land.lhs.true80:                                  ; preds = %land.lhs.true
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5911
  %call81 = call %struct.basic_block_def* @single_succ(%struct.basic_block_def* %53), !dbg !5912
  store %struct.basic_block_def* %call81, %struct.basic_block_def** %succ, align 8, !dbg !5913
  %tobool82 = icmp ne %struct.basic_block_def* %call81, null, !dbg !5913
  br i1 %tobool82, label %land.lhs.true83, label %if.end523, !dbg !5914

land.lhs.true83:                                  ; preds = %land.lhs.true80
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5915
  %55 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5916
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %55, i64 0, !dbg !5916
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !5916
  %56 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5916
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %56, i32 0, i32 1, !dbg !5916
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5916
  %cmp84 = icmp ne %struct.basic_block_def* %54, %57, !dbg !5917
  br i1 %cmp84, label %land.lhs.true86, label %if.end523, !dbg !5918

land.lhs.true86:                                  ; preds = %land.lhs.true83
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5919
  %call87 = call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %58), !dbg !5919
  store %struct.rtx_def* %call87, %struct.rtx_def** %last, align 8, !dbg !5919
  %59 = bitcast %struct.rtx_def* %call87 to i32*, !dbg !5919
  %bf.load88 = load i32, i32* %59, align 8, !dbg !5919
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !5919
  %cmp90 = icmp eq i32 %bf.clear89, 7, !dbg !5919
  br i1 %cmp90, label %if.then92, label %if.end523, !dbg !5920

if.then92:                                        ; preds = %land.lhs.true86
  br label %while.cond, !dbg !5921

while.cond:                                       ; preds = %while.body, %if.then92
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5923
  %61 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !5924
  %cmp93 = icmp ne %struct.rtx_def* %60, %61, !dbg !5925
  br i1 %cmp93, label %land.rhs, label %land.end, !dbg !5926

land.rhs:                                         ; preds = %while.cond
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5927
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !5927
  %bf.load95 = load i32, i32* %63, align 8, !dbg !5927
  %bf.clear96 = and i32 %bf.load95, 65535, !dbg !5927
  %cmp97 = icmp eq i32 %bf.clear96, 7, !dbg !5927
  br i1 %cmp97, label %lor.end, label %lor.rhs, !dbg !5928

lor.rhs:                                          ; preds = %land.rhs
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5929
  %65 = bitcast %struct.rtx_def* %64 to i32*, !dbg !5929
  %bf.load99 = load i32, i32* %65, align 8, !dbg !5929
  %bf.clear100 = and i32 %bf.load99, 65535, !dbg !5929
  %cmp101 = icmp eq i32 %bf.clear100, 13, !dbg !5929
  br label %lor.end, !dbg !5928

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %66 = phi i1 [ true, %land.rhs ], [ %cmp101, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %67 = phi i1 [ false, %while.cond ], [ %66, %lor.end ], !dbg !5930
  br i1 %67, label %while.body, label %while.end, !dbg !5921

while.body:                                       ; preds = %land.end
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5931
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !5931
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5931
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !5931
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5931
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5931
  store %struct.rtx_def* %69, %struct.rtx_def** %insn, align 8, !dbg !5932
  br label %while.cond, !dbg !5921, !llvm.loop !5933

while.end:                                        ; preds = %land.end
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5934
  %71 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !5936
  %cmp103 = icmp eq %struct.rtx_def* %70, %71, !dbg !5937
  br i1 %cmp103, label %if.then105, label %if.end522, !dbg !5938

if.then105:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata %struct.sel_global_bb_info_def* %gbi, metadata !5939, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.declare(metadata %struct.sel_region_bb_info_def* %rbi, metadata !5942, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5950, metadata !DIExpression()), !dbg !5951
  %72 = load i32, i32* @sched_verbose, align 4, !dbg !5952
  %cmp106 = icmp sge i32 %72, 2, !dbg !5954
  br i1 %cmp106, label %if.then108, label %if.end128, !dbg !5955

if.then108:                                       ; preds = %if.then105
  br label %do.body, !dbg !5956

do.body:                                          ; preds = %if.then108
  %73 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !5957
  %tobool109 = icmp ne i8 %73, 0, !dbg !5957
  br i1 %tobool109, label %if.then110, label %if.else122, !dbg !5960

if.then110:                                       ; preds = %do.body
  br label %do.body111, !dbg !5957

do.body111:                                       ; preds = %if.then110
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !5961, metadata !DIExpression()), !dbg !5963
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5963
  %index112 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %74, i32 0, i32 9, !dbg !5963
  %75 = load i32, i32* %index112, align 8, !dbg !5963
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5963
  %index113 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %76, i32 0, i32 9, !dbg !5963
  %77 = load i32, i32* %index113, align 8, !dbg !5963
  %call114 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0), i32 %75, i32 %77), !dbg !5963
  %mul = mul nsw i32 2, %call114, !dbg !5963
  %add = add nsw i32 1, %mul, !dbg !5963
  store i32 %add, i32* %__j, align 4, !dbg !5963
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !5964, metadata !DIExpression()), !dbg !5963
  %78 = load i32, i32* %__j, align 4, !dbg !5963
  %conv115 = sext i32 %78 to i64, !dbg !5963
  %mul116 = mul i64 1, %conv115, !dbg !5963
  %79 = alloca i8, i64 %mul116, align 16, !dbg !5963
  store i8* %79, i8** %__s, align 8, !dbg !5963
  %80 = load i8*, i8** %__s, align 8, !dbg !5963
  %81 = load i32, i32* %__j, align 4, !dbg !5963
  %conv117 = sext i32 %81 to i64, !dbg !5963
  %82 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5963
  %index118 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %82, i32 0, i32 9, !dbg !5963
  %83 = load i32, i32* %index118, align 8, !dbg !5963
  %84 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5963
  %index119 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %84, i32 0, i32 9, !dbg !5963
  %85 = load i32, i32* %index119, align 8, !dbg !5963
  %call120 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %80, i64 %conv117, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0), i32 %83, i32 %85), !dbg !5963
  %86 = load i8*, i8** %__s, align 8, !dbg !5963
  call void @sel_prepare_string_for_dot_label(i8* %86), !dbg !5963
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5963
  %88 = load i8*, i8** %__s, align 8, !dbg !5963
  %call121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %88), !dbg !5963
  br label %do.end, !dbg !5963

do.end:                                           ; preds = %do.body111
  br label %if.end126, !dbg !5963

if.else122:                                       ; preds = %do.body
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5957
  %90 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5957
  %index123 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %90, i32 0, i32 9, !dbg !5957
  %91 = load i32, i32* %index123, align 8, !dbg !5957
  %92 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5957
  %index124 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %92, i32 0, i32 9, !dbg !5957
  %93 = load i32, i32* %index124, align 8, !dbg !5957
  %call125 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0), i32 %91, i32 %93), !dbg !5957
  br label %if.end126

if.end126:                                        ; preds = %if.else122, %do.end
  br label %do.end127, !dbg !5960

do.end127:                                        ; preds = %if.end126
  br label %if.end128, !dbg !5960

if.end128:                                        ; preds = %do.end127, %if.then105
  %94 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5965
  %index129 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %94, i32 0, i32 9, !dbg !5966
  %95 = load i32, i32* %index129, align 8, !dbg !5966
  store i32 %95, i32* %i, align 4, !dbg !5967
  %96 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5968
  %index130 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %96, i32 0, i32 9, !dbg !5969
  %97 = load i32, i32* %index130, align 8, !dbg !5969
  %98 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5970
  %index131 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %98, i32 0, i32 9, !dbg !5971
  store i32 %97, i32* %index131, align 8, !dbg !5972
  %99 = load i32, i32* %i, align 4, !dbg !5973
  %100 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5974
  %index132 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %100, i32 0, i32 9, !dbg !5975
  store i32 %99, i32* %index132, align 8, !dbg !5976
  %101 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5977
  %add.ptr133 = getelementptr inbounds %struct.function, %struct.function* %101, i64 0, !dbg !5977
  %cfg134 = getelementptr inbounds %struct.function, %struct.function* %add.ptr133, i32 0, i32 1, !dbg !5977
  %102 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg134, align 8, !dbg !5977
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %102, i32 0, i32 2, !dbg !5977
  %103 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !5977
  %tobool135 = icmp ne %struct.VEC_basic_block_gc* %103, null, !dbg !5977
  br i1 %tobool135, label %cond.true136, label %cond.false141, !dbg !5977

cond.true136:                                     ; preds = %if.end128
  %104 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5977
  %add.ptr137 = getelementptr inbounds %struct.function, %struct.function* %104, i64 0, !dbg !5977
  %cfg138 = getelementptr inbounds %struct.function, %struct.function* %add.ptr137, i32 0, i32 1, !dbg !5977
  %105 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg138, align 8, !dbg !5977
  %x_basic_block_info139 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %105, i32 0, i32 2, !dbg !5977
  %106 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info139, align 8, !dbg !5977
  %base140 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %106, i32 0, i32 0, !dbg !5977
  br label %cond.end142, !dbg !5977

cond.false141:                                    ; preds = %if.end128
  br label %cond.end142, !dbg !5977

cond.end142:                                      ; preds = %cond.false141, %cond.true136
  %cond143 = phi %struct.VEC_basic_block_base* [ %base140, %cond.true136 ], [ null, %cond.false141 ], !dbg !5977
  %107 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5977
  %index144 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %107, i32 0, i32 9, !dbg !5977
  %108 = load i32, i32* %index144, align 8, !dbg !5977
  %109 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5977
  %call145 = call %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond143, i32 %108, %struct.basic_block_def* %109), !dbg !5977
  %110 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5978
  %add.ptr146 = getelementptr inbounds %struct.function, %struct.function* %110, i64 0, !dbg !5978
  %cfg147 = getelementptr inbounds %struct.function, %struct.function* %add.ptr146, i32 0, i32 1, !dbg !5978
  %111 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg147, align 8, !dbg !5978
  %x_basic_block_info148 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %111, i32 0, i32 2, !dbg !5978
  %112 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info148, align 8, !dbg !5978
  %tobool149 = icmp ne %struct.VEC_basic_block_gc* %112, null, !dbg !5978
  br i1 %tobool149, label %cond.true150, label %cond.false155, !dbg !5978

cond.true150:                                     ; preds = %cond.end142
  %113 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5978
  %add.ptr151 = getelementptr inbounds %struct.function, %struct.function* %113, i64 0, !dbg !5978
  %cfg152 = getelementptr inbounds %struct.function, %struct.function* %add.ptr151, i32 0, i32 1, !dbg !5978
  %114 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg152, align 8, !dbg !5978
  %x_basic_block_info153 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %114, i32 0, i32 2, !dbg !5978
  %115 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info153, align 8, !dbg !5978
  %base154 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %115, i32 0, i32 0, !dbg !5978
  br label %cond.end156, !dbg !5978

cond.false155:                                    ; preds = %cond.end142
  br label %cond.end156, !dbg !5978

cond.end156:                                      ; preds = %cond.false155, %cond.true150
  %cond157 = phi %struct.VEC_basic_block_base* [ %base154, %cond.true150 ], [ null, %cond.false155 ], !dbg !5978
  %116 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5978
  %index158 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %116, i32 0, i32 9, !dbg !5978
  %117 = load i32, i32* %index158, align 8, !dbg !5978
  %118 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5978
  %call159 = call %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond157, i32 %117, %struct.basic_block_def* %118), !dbg !5978
  %119 = bitcast %struct.sel_global_bb_info_def* %gbi to i8*, !dbg !5979
  %120 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5980
  %tobool160 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %120, null, !dbg !5980
  br i1 %tobool160, label %cond.true161, label %cond.false163, !dbg !5980

cond.true161:                                     ; preds = %cond.end156
  %121 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5980
  %base162 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %121, i32 0, i32 0, !dbg !5980
  br label %cond.end164, !dbg !5980

cond.false163:                                    ; preds = %cond.end156
  br label %cond.end164, !dbg !5980

cond.end164:                                      ; preds = %cond.false163, %cond.true161
  %cond165 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base162, %cond.true161 ], [ null, %cond.false163 ], !dbg !5980
  %122 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5980
  %index166 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %122, i32 0, i32 9, !dbg !5980
  %123 = load i32, i32* %index166, align 8, !dbg !5980
  %call167 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond165, i32 %123), !dbg !5980
  %124 = bitcast %struct.sel_global_bb_info_def* %call167 to i8*, !dbg !5979
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %124, i64 16, i1 false), !dbg !5979
  %125 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5981
  %tobool168 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %125, null, !dbg !5981
  br i1 %tobool168, label %cond.true169, label %cond.false171, !dbg !5981

cond.true169:                                     ; preds = %cond.end164
  %126 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5981
  %base170 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %126, i32 0, i32 0, !dbg !5981
  br label %cond.end172, !dbg !5981

cond.false171:                                    ; preds = %cond.end164
  br label %cond.end172, !dbg !5981

cond.end172:                                      ; preds = %cond.false171, %cond.true169
  %cond173 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base170, %cond.true169 ], [ null, %cond.false171 ], !dbg !5981
  %127 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5981
  %index174 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %127, i32 0, i32 9, !dbg !5981
  %128 = load i32, i32* %index174, align 8, !dbg !5981
  %call175 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond173, i32 %128), !dbg !5981
  %129 = bitcast %struct.sel_global_bb_info_def* %call175 to i8*, !dbg !5982
  %130 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5983
  %tobool176 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %130, null, !dbg !5983
  br i1 %tobool176, label %cond.true177, label %cond.false179, !dbg !5983

cond.true177:                                     ; preds = %cond.end172
  %131 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5983
  %base178 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %131, i32 0, i32 0, !dbg !5983
  br label %cond.end180, !dbg !5983

cond.false179:                                    ; preds = %cond.end172
  br label %cond.end180, !dbg !5983

cond.end180:                                      ; preds = %cond.false179, %cond.true177
  %cond181 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base178, %cond.true177 ], [ null, %cond.false179 ], !dbg !5983
  %132 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5983
  %index182 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %132, i32 0, i32 9, !dbg !5983
  %133 = load i32, i32* %index182, align 8, !dbg !5983
  %call183 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond181, i32 %133), !dbg !5983
  %134 = bitcast %struct.sel_global_bb_info_def* %call183 to i8*, !dbg !5982
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %134, i64 16, i1 false), !dbg !5982
  %135 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5984
  %tobool184 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %135, null, !dbg !5984
  br i1 %tobool184, label %cond.true185, label %cond.false187, !dbg !5984

cond.true185:                                     ; preds = %cond.end180
  %136 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !5984
  %base186 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %136, i32 0, i32 0, !dbg !5984
  br label %cond.end188, !dbg !5984

cond.false187:                                    ; preds = %cond.end180
  br label %cond.end188, !dbg !5984

cond.end188:                                      ; preds = %cond.false187, %cond.true185
  %cond189 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base186, %cond.true185 ], [ null, %cond.false187 ], !dbg !5984
  %137 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5984
  %index190 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %137, i32 0, i32 9, !dbg !5984
  %138 = load i32, i32* %index190, align 8, !dbg !5984
  %call191 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond189, i32 %138), !dbg !5984
  %139 = bitcast %struct.sel_global_bb_info_def* %call191 to i8*, !dbg !5985
  %140 = bitcast %struct.sel_global_bb_info_def* %gbi to i8*, !dbg !5985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 16, i1 false), !dbg !5985
  %141 = bitcast %struct.sel_region_bb_info_def* %rbi to i8*, !dbg !5986
  %142 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5987
  %tobool192 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %142, null, !dbg !5987
  br i1 %tobool192, label %cond.true193, label %cond.false195, !dbg !5987

cond.true193:                                     ; preds = %cond.end188
  %143 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5987
  %base194 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %143, i32 0, i32 0, !dbg !5987
  br label %cond.end196, !dbg !5987

cond.false195:                                    ; preds = %cond.end188
  br label %cond.end196, !dbg !5987

cond.end196:                                      ; preds = %cond.false195, %cond.true193
  %cond197 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base194, %cond.true193 ], [ null, %cond.false195 ], !dbg !5987
  %144 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5987
  %index198 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %144, i32 0, i32 9, !dbg !5987
  %145 = load i32, i32* %index198, align 8, !dbg !5987
  %call199 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond197, i32 %145), !dbg !5987
  %146 = bitcast %struct.sel_region_bb_info_def* %call199 to i8*, !dbg !5986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %146, i64 24, i1 false), !dbg !5986
  %147 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5988
  %tobool200 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %147, null, !dbg !5988
  br i1 %tobool200, label %cond.true201, label %cond.false203, !dbg !5988

cond.true201:                                     ; preds = %cond.end196
  %148 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5988
  %base202 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %148, i32 0, i32 0, !dbg !5988
  br label %cond.end204, !dbg !5988

cond.false203:                                    ; preds = %cond.end196
  br label %cond.end204, !dbg !5988

cond.end204:                                      ; preds = %cond.false203, %cond.true201
  %cond205 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base202, %cond.true201 ], [ null, %cond.false203 ], !dbg !5988
  %149 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5988
  %index206 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %149, i32 0, i32 9, !dbg !5988
  %150 = load i32, i32* %index206, align 8, !dbg !5988
  %call207 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond205, i32 %150), !dbg !5988
  %151 = bitcast %struct.sel_region_bb_info_def* %call207 to i8*, !dbg !5989
  %152 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5990
  %tobool208 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %152, null, !dbg !5990
  br i1 %tobool208, label %cond.true209, label %cond.false211, !dbg !5990

cond.true209:                                     ; preds = %cond.end204
  %153 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5990
  %base210 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %153, i32 0, i32 0, !dbg !5990
  br label %cond.end212, !dbg !5990

cond.false211:                                    ; preds = %cond.end204
  br label %cond.end212, !dbg !5990

cond.end212:                                      ; preds = %cond.false211, %cond.true209
  %cond213 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base210, %cond.true209 ], [ null, %cond.false211 ], !dbg !5990
  %154 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5990
  %index214 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %154, i32 0, i32 9, !dbg !5990
  %155 = load i32, i32* %index214, align 8, !dbg !5990
  %call215 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond213, i32 %155), !dbg !5990
  %156 = bitcast %struct.sel_region_bb_info_def* %call215 to i8*, !dbg !5989
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %156, i64 24, i1 false), !dbg !5989
  %157 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5991
  %tobool216 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %157, null, !dbg !5991
  br i1 %tobool216, label %cond.true217, label %cond.false219, !dbg !5991

cond.true217:                                     ; preds = %cond.end212
  %158 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !5991
  %base218 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %158, i32 0, i32 0, !dbg !5991
  br label %cond.end220, !dbg !5991

cond.false219:                                    ; preds = %cond.end212
  br label %cond.end220, !dbg !5991

cond.end220:                                      ; preds = %cond.false219, %cond.true217
  %cond221 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base218, %cond.true217 ], [ null, %cond.false219 ], !dbg !5991
  %159 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5991
  %index222 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %159, i32 0, i32 9, !dbg !5991
  %160 = load i32, i32* %index222, align 8, !dbg !5991
  %call223 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond221, i32 %160), !dbg !5991
  %161 = bitcast %struct.sel_region_bb_info_def* %call223 to i8*, !dbg !5992
  %162 = bitcast %struct.sel_region_bb_info_def* %rbi to i8*, !dbg !5992
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 24, i1 false), !dbg !5992
  %163 = load i32*, i32** @block_to_bb, align 8, !dbg !5993
  %164 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5993
  %index224 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %164, i32 0, i32 9, !dbg !5993
  %165 = load i32, i32* %index224, align 8, !dbg !5993
  %idxprom = sext i32 %165 to i64, !dbg !5993
  %arrayidx225 = getelementptr inbounds i32, i32* %163, i64 %idxprom, !dbg !5993
  %166 = load i32, i32* %arrayidx225, align 4, !dbg !5993
  store i32 %166, i32* %i, align 4, !dbg !5994
  %167 = load i32*, i32** @block_to_bb, align 8, !dbg !5995
  %168 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5995
  %index226 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %168, i32 0, i32 9, !dbg !5995
  %169 = load i32, i32* %index226, align 8, !dbg !5995
  %idxprom227 = sext i32 %169 to i64, !dbg !5995
  %arrayidx228 = getelementptr inbounds i32, i32* %167, i64 %idxprom227, !dbg !5995
  %170 = load i32, i32* %arrayidx228, align 4, !dbg !5995
  %171 = load i32*, i32** @block_to_bb, align 8, !dbg !5996
  %172 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !5996
  %index229 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %172, i32 0, i32 9, !dbg !5996
  %173 = load i32, i32* %index229, align 8, !dbg !5996
  %idxprom230 = sext i32 %173 to i64, !dbg !5996
  %arrayidx231 = getelementptr inbounds i32, i32* %171, i64 %idxprom230, !dbg !5996
  store i32 %170, i32* %arrayidx231, align 4, !dbg !5997
  %174 = load i32, i32* %i, align 4, !dbg !5998
  %175 = load i32*, i32** @block_to_bb, align 8, !dbg !5999
  %176 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !5999
  %index232 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %176, i32 0, i32 9, !dbg !5999
  %177 = load i32, i32* %index232, align 8, !dbg !5999
  %idxprom233 = sext i32 %177 to i64, !dbg !5999
  %arrayidx234 = getelementptr inbounds i32, i32* %175, i64 %idxprom233, !dbg !5999
  store i32 %174, i32* %arrayidx234, align 4, !dbg !6000
  %178 = load i32*, i32** @containing_rgn, align 8, !dbg !6001
  %179 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6001
  %index235 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %179, i32 0, i32 9, !dbg !6001
  %180 = load i32, i32* %index235, align 8, !dbg !6001
  %idxprom236 = sext i32 %180 to i64, !dbg !6001
  %arrayidx237 = getelementptr inbounds i32, i32* %178, i64 %idxprom236, !dbg !6001
  %181 = load i32, i32* %arrayidx237, align 4, !dbg !6001
  store i32 %181, i32* %i, align 4, !dbg !6002
  %182 = load i32*, i32** @containing_rgn, align 8, !dbg !6003
  %183 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6003
  %index238 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %183, i32 0, i32 9, !dbg !6003
  %184 = load i32, i32* %index238, align 8, !dbg !6003
  %idxprom239 = sext i32 %184 to i64, !dbg !6003
  %arrayidx240 = getelementptr inbounds i32, i32* %182, i64 %idxprom239, !dbg !6003
  %185 = load i32, i32* %arrayidx240, align 4, !dbg !6003
  %186 = load i32*, i32** @containing_rgn, align 8, !dbg !6004
  %187 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6004
  %index241 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %187, i32 0, i32 9, !dbg !6004
  %188 = load i32, i32* %index241, align 8, !dbg !6004
  %idxprom242 = sext i32 %188 to i64, !dbg !6004
  %arrayidx243 = getelementptr inbounds i32, i32* %186, i64 %idxprom242, !dbg !6004
  store i32 %185, i32* %arrayidx243, align 4, !dbg !6005
  %189 = load i32, i32* %i, align 4, !dbg !6006
  %190 = load i32*, i32** @containing_rgn, align 8, !dbg !6007
  %191 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6007
  %index244 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %191, i32 0, i32 9, !dbg !6007
  %192 = load i32, i32* %index244, align 8, !dbg !6007
  %idxprom245 = sext i32 %192 to i64, !dbg !6007
  %arrayidx246 = getelementptr inbounds i32, i32* %190, i64 %idxprom245, !dbg !6007
  store i32 %189, i32* %arrayidx246, align 4, !dbg !6008
  store i32 0, i32* %i, align 4, !dbg !6009
  br label %for.cond, !dbg !6011

for.cond:                                         ; preds = %for.inc, %cond.end220
  %193 = load i32, i32* %i, align 4, !dbg !6012
  %194 = load i32, i32* @current_nr_blocks, align 4, !dbg !6014
  %cmp247 = icmp slt i32 %193, %194, !dbg !6015
  br i1 %cmp247, label %for.body, label %for.end, !dbg !6016

for.body:                                         ; preds = %for.cond
  %195 = load i32*, i32** @rgn_bb_table, align 8, !dbg !6017
  %196 = load i32*, i32** @ebb_head, align 8, !dbg !6017
  %197 = load i32, i32* %i, align 4, !dbg !6017
  %idxprom249 = sext i32 %197 to i64, !dbg !6017
  %arrayidx250 = getelementptr inbounds i32, i32* %196, i64 %idxprom249, !dbg !6017
  %198 = load i32, i32* %arrayidx250, align 4, !dbg !6017
  %idxprom251 = sext i32 %198 to i64, !dbg !6017
  %arrayidx252 = getelementptr inbounds i32, i32* %195, i64 %idxprom251, !dbg !6017
  %199 = load i32, i32* %arrayidx252, align 4, !dbg !6017
  %200 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6019
  %index253 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %200, i32 0, i32 9, !dbg !6020
  %201 = load i32, i32* %index253, align 8, !dbg !6020
  %cmp254 = icmp eq i32 %199, %201, !dbg !6021
  br i1 %cmp254, label %if.then256, label %if.else262, !dbg !6022

if.then256:                                       ; preds = %for.body
  %202 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6023
  %index257 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %202, i32 0, i32 9, !dbg !6024
  %203 = load i32, i32* %index257, align 8, !dbg !6024
  %204 = load i32*, i32** @rgn_bb_table, align 8, !dbg !6025
  %205 = load i32*, i32** @ebb_head, align 8, !dbg !6025
  %206 = load i32, i32* %i, align 4, !dbg !6025
  %idxprom258 = sext i32 %206 to i64, !dbg !6025
  %arrayidx259 = getelementptr inbounds i32, i32* %205, i64 %idxprom258, !dbg !6025
  %207 = load i32, i32* %arrayidx259, align 4, !dbg !6025
  %idxprom260 = sext i32 %207 to i64, !dbg !6025
  %arrayidx261 = getelementptr inbounds i32, i32* %204, i64 %idxprom260, !dbg !6025
  store i32 %203, i32* %arrayidx261, align 4, !dbg !6026
  br label %if.end277, !dbg !6025

if.else262:                                       ; preds = %for.body
  %208 = load i32*, i32** @rgn_bb_table, align 8, !dbg !6027
  %209 = load i32*, i32** @ebb_head, align 8, !dbg !6027
  %210 = load i32, i32* %i, align 4, !dbg !6027
  %idxprom263 = sext i32 %210 to i64, !dbg !6027
  %arrayidx264 = getelementptr inbounds i32, i32* %209, i64 %idxprom263, !dbg !6027
  %211 = load i32, i32* %arrayidx264, align 4, !dbg !6027
  %idxprom265 = sext i32 %211 to i64, !dbg !6027
  %arrayidx266 = getelementptr inbounds i32, i32* %208, i64 %idxprom265, !dbg !6027
  %212 = load i32, i32* %arrayidx266, align 4, !dbg !6027
  %213 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6029
  %index267 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %213, i32 0, i32 9, !dbg !6030
  %214 = load i32, i32* %index267, align 8, !dbg !6030
  %cmp268 = icmp eq i32 %212, %214, !dbg !6031
  br i1 %cmp268, label %if.then270, label %if.end276, !dbg !6032

if.then270:                                       ; preds = %if.else262
  %215 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6033
  %index271 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %215, i32 0, i32 9, !dbg !6034
  %216 = load i32, i32* %index271, align 8, !dbg !6034
  %217 = load i32*, i32** @rgn_bb_table, align 8, !dbg !6035
  %218 = load i32*, i32** @ebb_head, align 8, !dbg !6035
  %219 = load i32, i32* %i, align 4, !dbg !6035
  %idxprom272 = sext i32 %219 to i64, !dbg !6035
  %arrayidx273 = getelementptr inbounds i32, i32* %218, i64 %idxprom272, !dbg !6035
  %220 = load i32, i32* %arrayidx273, align 4, !dbg !6035
  %idxprom274 = sext i32 %220 to i64, !dbg !6035
  %arrayidx275 = getelementptr inbounds i32, i32* %217, i64 %idxprom274, !dbg !6035
  store i32 %216, i32* %arrayidx275, align 4, !dbg !6036
  br label %if.end276, !dbg !6035

if.end276:                                        ; preds = %if.then270, %if.else262
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %if.then256
  br label %for.inc, !dbg !6020

for.inc:                                          ; preds = %if.end277
  %221 = load i32, i32* %i, align 4, !dbg !6037
  %inc = add nsw i32 %221, 1, !dbg !6037
  store i32 %inc, i32* %i, align 4, !dbg !6037
  br label %for.cond, !dbg !6038, !llvm.loop !6039

for.end:                                          ; preds = %for.cond
  %222 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6041
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %222, i32 0, i32 7, !dbg !6041
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6041
  %223 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6041
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %223, i32 0, i32 0, !dbg !6041
  %224 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6041
  store %struct.rtx_def* %224, %struct.rtx_def** %insn, align 8, !dbg !6041
  br label %for.cond278, !dbg !6041

for.cond278:                                      ; preds = %for.inc330, %for.end
  %225 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6043
  %tobool279 = icmp ne %struct.rtx_def* %225, null, !dbg !6043
  br i1 %tobool279, label %land.rhs280, label %land.end289, !dbg !6043

land.rhs280:                                      ; preds = %for.cond278
  %226 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6043
  %227 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6043
  %il281 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %227, i32 0, i32 7, !dbg !6043
  %rtl282 = bitcast %union.basic_block_il_dependent* %il281 to %struct.rtl_bb_info**, !dbg !6043
  %228 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl282, align 8, !dbg !6043
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %228, i32 0, i32 1, !dbg !6043
  %229 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6043
  %u283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1, !dbg !6043
  %fld284 = bitcast %union.u* %u283 to [1 x %union.rtunion_def]*, !dbg !6043
  %arrayidx285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld284, i64 0, i64 2, !dbg !6043
  %rt_rtx286 = bitcast %union.rtunion_def* %arrayidx285 to %struct.rtx_def**, !dbg !6043
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx286, align 8, !dbg !6043
  %cmp287 = icmp ne %struct.rtx_def* %226, %230, !dbg !6043
  br label %land.end289

land.end289:                                      ; preds = %land.rhs280, %for.cond278
  %231 = phi i1 [ false, %for.cond278 ], [ %cmp287, %land.rhs280 ], !dbg !6045
  br i1 %231, label %for.body290, label %for.end335, !dbg !6041

for.body290:                                      ; preds = %land.end289
  %232 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6046
  %233 = bitcast %struct.rtx_def* %232 to i32*, !dbg !6046
  %bf.load291 = load i32, i32* %233, align 8, !dbg !6046
  %bf.clear292 = and i32 %bf.load291, 65535, !dbg !6046
  %cmp293 = icmp eq i32 %bf.clear292, 8, !dbg !6046
  br i1 %cmp293, label %if.then310, label %lor.lhs.false295, !dbg !6046

lor.lhs.false295:                                 ; preds = %for.body290
  %234 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6046
  %235 = bitcast %struct.rtx_def* %234 to i32*, !dbg !6046
  %bf.load296 = load i32, i32* %235, align 8, !dbg !6046
  %bf.clear297 = and i32 %bf.load296, 65535, !dbg !6046
  %cmp298 = icmp eq i32 %bf.clear297, 7, !dbg !6046
  br i1 %cmp298, label %if.then310, label %lor.lhs.false300, !dbg !6046

lor.lhs.false300:                                 ; preds = %lor.lhs.false295
  %236 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6046
  %237 = bitcast %struct.rtx_def* %236 to i32*, !dbg !6046
  %bf.load301 = load i32, i32* %237, align 8, !dbg !6046
  %bf.clear302 = and i32 %bf.load301, 65535, !dbg !6046
  %cmp303 = icmp eq i32 %bf.clear302, 9, !dbg !6046
  br i1 %cmp303, label %if.then310, label %lor.lhs.false305, !dbg !6046

lor.lhs.false305:                                 ; preds = %lor.lhs.false300
  %238 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6046
  %239 = bitcast %struct.rtx_def* %238 to i32*, !dbg !6046
  %bf.load306 = load i32, i32* %239, align 8, !dbg !6046
  %bf.clear307 = and i32 %bf.load306, 65535, !dbg !6046
  %cmp308 = icmp eq i32 %bf.clear307, 10, !dbg !6046
  br i1 %cmp308, label %if.then310, label %if.end329, !dbg !6048

if.then310:                                       ; preds = %lor.lhs.false305, %lor.lhs.false300, %lor.lhs.false295, %for.body290
  %240 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6049
  %index311 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %240, i32 0, i32 9, !dbg !6050
  %241 = load i32, i32* %index311, align 8, !dbg !6050
  %242 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6051
  %tobool312 = icmp ne %struct.VEC_sel_insn_data_def_heap* %242, null, !dbg !6051
  br i1 %tobool312, label %cond.true313, label %cond.false315, !dbg !6051

cond.true313:                                     ; preds = %if.then310
  %243 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6051
  %base314 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %243, i32 0, i32 0, !dbg !6051
  br label %cond.end316, !dbg !6051

cond.false315:                                    ; preds = %if.then310
  br label %cond.end316, !dbg !6051

cond.end316:                                      ; preds = %cond.false315, %cond.true313
  %cond317 = phi %struct.VEC_sel_insn_data_def_base* [ %base314, %cond.true313 ], [ null, %cond.false315 ], !dbg !6051
  %244 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6051
  %tobool318 = icmp ne %struct.VEC_int_heap* %244, null, !dbg !6051
  br i1 %tobool318, label %cond.true319, label %cond.false321, !dbg !6051

cond.true319:                                     ; preds = %cond.end316
  %245 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6051
  %base320 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %245, i32 0, i32 0, !dbg !6051
  br label %cond.end322, !dbg !6051

cond.false321:                                    ; preds = %cond.end316
  br label %cond.end322, !dbg !6051

cond.end322:                                      ; preds = %cond.false321, %cond.true319
  %cond323 = phi %struct.VEC_int_base* [ %base320, %cond.true319 ], [ null, %cond.false321 ], !dbg !6051
  %246 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6051
  %u324 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %246, i32 0, i32 1, !dbg !6051
  %fld325 = bitcast %union.u* %u324 to [1 x %union.rtunion_def]*, !dbg !6051
  %arrayidx326 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld325, i64 0, i64 0, !dbg !6051
  %rt_int = bitcast %union.rtunion_def* %arrayidx326 to i32*, !dbg !6051
  %247 = load i32, i32* %rt_int, align 8, !dbg !6051
  %call327 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond323, i32 %247), !dbg !6051
  %call328 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond317, i32 %call327), !dbg !6051
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call328, i32 0, i32 0, !dbg !6051
  %orig_bb_index = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 6, !dbg !6051
  store i32 %241, i32* %orig_bb_index, align 4, !dbg !6052
  br label %if.end329, !dbg !6051

if.end329:                                        ; preds = %cond.end322, %lor.lhs.false305
  br label %for.inc330, !dbg !6046

for.inc330:                                       ; preds = %if.end329
  %248 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6043
  %u331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %248, i32 0, i32 1, !dbg !6043
  %fld332 = bitcast %union.u* %u331 to [1 x %union.rtunion_def]*, !dbg !6043
  %arrayidx333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld332, i64 0, i64 2, !dbg !6043
  %rt_rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**, !dbg !6043
  %249 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx334, align 8, !dbg !6043
  store %struct.rtx_def* %249, %struct.rtx_def** %insn, align 8, !dbg !6043
  br label %for.cond278, !dbg !6043, !llvm.loop !6053

for.end335:                                       ; preds = %land.end289
  %250 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6055
  %il336 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %250, i32 0, i32 7, !dbg !6055
  %rtl337 = bitcast %union.basic_block_il_dependent* %il336 to %struct.rtl_bb_info**, !dbg !6055
  %251 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl337, align 8, !dbg !6055
  %head_338 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %251, i32 0, i32 0, !dbg !6055
  %252 = load %struct.rtx_def*, %struct.rtx_def** %head_338, align 8, !dbg !6055
  store %struct.rtx_def* %252, %struct.rtx_def** %insn, align 8, !dbg !6055
  br label %for.cond339, !dbg !6055

for.cond339:                                      ; preds = %for.inc395, %for.end335
  %253 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6057
  %tobool340 = icmp ne %struct.rtx_def* %253, null, !dbg !6057
  br i1 %tobool340, label %land.rhs341, label %land.end351, !dbg !6057

land.rhs341:                                      ; preds = %for.cond339
  %254 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6057
  %255 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6057
  %il342 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %255, i32 0, i32 7, !dbg !6057
  %rtl343 = bitcast %union.basic_block_il_dependent* %il342 to %struct.rtl_bb_info**, !dbg !6057
  %256 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl343, align 8, !dbg !6057
  %end_344 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %256, i32 0, i32 1, !dbg !6057
  %257 = load %struct.rtx_def*, %struct.rtx_def** %end_344, align 8, !dbg !6057
  %u345 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %257, i32 0, i32 1, !dbg !6057
  %fld346 = bitcast %union.u* %u345 to [1 x %union.rtunion_def]*, !dbg !6057
  %arrayidx347 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld346, i64 0, i64 2, !dbg !6057
  %rt_rtx348 = bitcast %union.rtunion_def* %arrayidx347 to %struct.rtx_def**, !dbg !6057
  %258 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx348, align 8, !dbg !6057
  %cmp349 = icmp ne %struct.rtx_def* %254, %258, !dbg !6057
  br label %land.end351

land.end351:                                      ; preds = %land.rhs341, %for.cond339
  %259 = phi i1 [ false, %for.cond339 ], [ %cmp349, %land.rhs341 ], !dbg !6059
  br i1 %259, label %for.body352, label %for.end400, !dbg !6055

for.body352:                                      ; preds = %land.end351
  %260 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6060
  %261 = bitcast %struct.rtx_def* %260 to i32*, !dbg !6060
  %bf.load353 = load i32, i32* %261, align 8, !dbg !6060
  %bf.clear354 = and i32 %bf.load353, 65535, !dbg !6060
  %cmp355 = icmp eq i32 %bf.clear354, 8, !dbg !6060
  br i1 %cmp355, label %if.then372, label %lor.lhs.false357, !dbg !6060

lor.lhs.false357:                                 ; preds = %for.body352
  %262 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6060
  %263 = bitcast %struct.rtx_def* %262 to i32*, !dbg !6060
  %bf.load358 = load i32, i32* %263, align 8, !dbg !6060
  %bf.clear359 = and i32 %bf.load358, 65535, !dbg !6060
  %cmp360 = icmp eq i32 %bf.clear359, 7, !dbg !6060
  br i1 %cmp360, label %if.then372, label %lor.lhs.false362, !dbg !6060

lor.lhs.false362:                                 ; preds = %lor.lhs.false357
  %264 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6060
  %265 = bitcast %struct.rtx_def* %264 to i32*, !dbg !6060
  %bf.load363 = load i32, i32* %265, align 8, !dbg !6060
  %bf.clear364 = and i32 %bf.load363, 65535, !dbg !6060
  %cmp365 = icmp eq i32 %bf.clear364, 9, !dbg !6060
  br i1 %cmp365, label %if.then372, label %lor.lhs.false367, !dbg !6060

lor.lhs.false367:                                 ; preds = %lor.lhs.false362
  %266 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6060
  %267 = bitcast %struct.rtx_def* %266 to i32*, !dbg !6060
  %bf.load368 = load i32, i32* %267, align 8, !dbg !6060
  %bf.clear369 = and i32 %bf.load368, 65535, !dbg !6060
  %cmp370 = icmp eq i32 %bf.clear369, 10, !dbg !6060
  br i1 %cmp370, label %if.then372, label %if.end394, !dbg !6062

if.then372:                                       ; preds = %lor.lhs.false367, %lor.lhs.false362, %lor.lhs.false357, %for.body352
  %268 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6063
  %index373 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %268, i32 0, i32 9, !dbg !6064
  %269 = load i32, i32* %index373, align 8, !dbg !6064
  %270 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6065
  %tobool374 = icmp ne %struct.VEC_sel_insn_data_def_heap* %270, null, !dbg !6065
  br i1 %tobool374, label %cond.true375, label %cond.false377, !dbg !6065

cond.true375:                                     ; preds = %if.then372
  %271 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6065
  %base376 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %271, i32 0, i32 0, !dbg !6065
  br label %cond.end378, !dbg !6065

cond.false377:                                    ; preds = %if.then372
  br label %cond.end378, !dbg !6065

cond.end378:                                      ; preds = %cond.false377, %cond.true375
  %cond379 = phi %struct.VEC_sel_insn_data_def_base* [ %base376, %cond.true375 ], [ null, %cond.false377 ], !dbg !6065
  %272 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6065
  %tobool380 = icmp ne %struct.VEC_int_heap* %272, null, !dbg !6065
  br i1 %tobool380, label %cond.true381, label %cond.false383, !dbg !6065

cond.true381:                                     ; preds = %cond.end378
  %273 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6065
  %base382 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %273, i32 0, i32 0, !dbg !6065
  br label %cond.end384, !dbg !6065

cond.false383:                                    ; preds = %cond.end378
  br label %cond.end384, !dbg !6065

cond.end384:                                      ; preds = %cond.false383, %cond.true381
  %cond385 = phi %struct.VEC_int_base* [ %base382, %cond.true381 ], [ null, %cond.false383 ], !dbg !6065
  %274 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6065
  %u386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %274, i32 0, i32 1, !dbg !6065
  %fld387 = bitcast %union.u* %u386 to [1 x %union.rtunion_def]*, !dbg !6065
  %arrayidx388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld387, i64 0, i64 0, !dbg !6065
  %rt_int389 = bitcast %union.rtunion_def* %arrayidx388 to i32*, !dbg !6065
  %275 = load i32, i32* %rt_int389, align 8, !dbg !6065
  %call390 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond385, i32 %275), !dbg !6065
  %call391 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond379, i32 %call390), !dbg !6065
  %expr392 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call391, i32 0, i32 0, !dbg !6065
  %orig_bb_index393 = getelementptr inbounds %struct._expr, %struct._expr* %expr392, i32 0, i32 6, !dbg !6065
  store i32 %269, i32* %orig_bb_index393, align 4, !dbg !6066
  br label %if.end394, !dbg !6065

if.end394:                                        ; preds = %cond.end384, %lor.lhs.false367
  br label %for.inc395, !dbg !6060

for.inc395:                                       ; preds = %if.end394
  %276 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6057
  %u396 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1, !dbg !6057
  %fld397 = bitcast %union.u* %u396 to [1 x %union.rtunion_def]*, !dbg !6057
  %arrayidx398 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld397, i64 0, i64 2, !dbg !6057
  %rt_rtx399 = bitcast %union.rtunion_def* %arrayidx398 to %struct.rtx_def**, !dbg !6057
  %277 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx399, align 8, !dbg !6057
  store %struct.rtx_def* %277, %struct.rtx_def** %insn, align 8, !dbg !6057
  br label %for.cond339, !dbg !6057, !llvm.loop !6067

for.end400:                                       ; preds = %land.end351
  %278 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !6069
  %279 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6071
  %index401 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %279, i32 0, i32 9, !dbg !6072
  %280 = load i32, i32* %index401, align 8, !dbg !6072
  %call402 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %278, i32 %280), !dbg !6073
  %tobool403 = icmp ne i32 %call402, 0, !dbg !6073
  br i1 %tobool403, label %if.then404, label %if.end409, !dbg !6074

if.then404:                                       ; preds = %for.end400
  %281 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !6075
  %282 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6077
  %index405 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %282, i32 0, i32 9, !dbg !6078
  %283 = load i32, i32* %index405, align 8, !dbg !6078
  %call406 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %281, i32 %283), !dbg !6079
  %284 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !6080
  %285 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6081
  %index407 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %285, i32 0, i32 9, !dbg !6082
  %286 = load i32, i32* %index407, align 8, !dbg !6082
  %call408 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %284, i32 %286), !dbg !6083
  br label %if.end409, !dbg !6084

if.end409:                                        ; preds = %if.then404, %for.end400
  %287 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6085
  %il410 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %287, i32 0, i32 7, !dbg !6085
  %rtl411 = bitcast %union.basic_block_il_dependent* %il410 to %struct.rtl_bb_info**, !dbg !6085
  %288 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl411, align 8, !dbg !6085
  %head_412 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %288, i32 0, i32 0, !dbg !6085
  %289 = load %struct.rtx_def*, %struct.rtx_def** %head_412, align 8, !dbg !6085
  %290 = bitcast %struct.rtx_def* %289 to i32*, !dbg !6085
  %bf.load413 = load i32, i32* %290, align 8, !dbg !6085
  %bf.clear414 = and i32 %bf.load413, 65535, !dbg !6085
  %cmp415 = icmp eq i32 %bf.clear414, 12, !dbg !6085
  br i1 %cmp415, label %land.lhs.true417, label %cond.true425, !dbg !6085

land.lhs.true417:                                 ; preds = %if.end409
  %291 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6085
  %il418 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %291, i32 0, i32 7, !dbg !6085
  %rtl419 = bitcast %union.basic_block_il_dependent* %il418 to %struct.rtl_bb_info**, !dbg !6085
  %292 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl419, align 8, !dbg !6085
  %head_420 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %292, i32 0, i32 0, !dbg !6085
  %293 = load %struct.rtx_def*, %struct.rtx_def** %head_420, align 8, !dbg !6085
  %294 = bitcast %struct.rtx_def* %293 to i32*, !dbg !6085
  %bf.load421 = load i32, i32* %294, align 8, !dbg !6085
  %bf.clear422 = and i32 %bf.load421, 65535, !dbg !6085
  %cmp423 = icmp eq i32 %bf.clear422, 12, !dbg !6085
  br i1 %cmp423, label %cond.false426, label %cond.true425, !dbg !6085

cond.true425:                                     ; preds = %land.lhs.true417, %if.end409
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6085
  br label %cond.end427, !dbg !6085

cond.false426:                                    ; preds = %land.lhs.true417
  br label %cond.end427, !dbg !6085

cond.end427:                                      ; preds = %cond.false426, %cond.true425
  %cond428 = phi i32 [ 0, %cond.true425 ], [ 0, %cond.false426 ], !dbg !6085
  %295 = load i32, i32* @sched_verbose, align 4, !dbg !6086
  %cmp429 = icmp sge i32 %295, 4, !dbg !6088
  br i1 %cmp429, label %if.then431, label %if.end493, !dbg !6089

if.then431:                                       ; preds = %cond.end427
  br label %do.body432, !dbg !6090

do.body432:                                       ; preds = %if.then431
  %296 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6091
  %tobool433 = icmp ne i8 %296, 0, !dbg !6091
  br i1 %tobool433, label %if.then434, label %if.else475, !dbg !6094

if.then434:                                       ; preds = %do.body432
  br label %do.body435, !dbg !6091

do.body435:                                       ; preds = %if.then434
  call void @llvm.dbg.declare(metadata i32* %__j436, metadata !6095, metadata !DIExpression()), !dbg !6097
  %297 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6097
  %il437 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %297, i32 0, i32 7, !dbg !6097
  %rtl438 = bitcast %union.basic_block_il_dependent* %il437 to %struct.rtl_bb_info**, !dbg !6097
  %298 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl438, align 8, !dbg !6097
  %head_439 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %298, i32 0, i32 0, !dbg !6097
  %299 = load %struct.rtx_def*, %struct.rtx_def** %head_439, align 8, !dbg !6097
  %u440 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %299, i32 0, i32 1, !dbg !6097
  %fld441 = bitcast %union.u* %u440 to [1 x %union.rtunion_def]*, !dbg !6097
  %arrayidx442 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld441, i64 0, i64 6, !dbg !6097
  %rt_int443 = bitcast %union.rtunion_def* %arrayidx442 to i32*, !dbg !6097
  %300 = load i32, i32* %rt_int443, align 8, !dbg !6097
  %301 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6097
  %il444 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %301, i32 0, i32 7, !dbg !6097
  %rtl445 = bitcast %union.basic_block_il_dependent* %il444 to %struct.rtl_bb_info**, !dbg !6097
  %302 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl445, align 8, !dbg !6097
  %head_446 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %302, i32 0, i32 0, !dbg !6097
  %303 = load %struct.rtx_def*, %struct.rtx_def** %head_446, align 8, !dbg !6097
  %u447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1, !dbg !6097
  %fld448 = bitcast %union.u* %u447 to [1 x %union.rtunion_def]*, !dbg !6097
  %arrayidx449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld448, i64 0, i64 6, !dbg !6097
  %rt_int450 = bitcast %union.rtunion_def* %arrayidx449 to i32*, !dbg !6097
  %304 = load i32, i32* %rt_int450, align 8, !dbg !6097
  %call451 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 %300, i32 %304), !dbg !6097
  %mul452 = mul nsw i32 2, %call451, !dbg !6097
  %add453 = add nsw i32 1, %mul452, !dbg !6097
  store i32 %add453, i32* %__j436, align 4, !dbg !6097
  call void @llvm.dbg.declare(metadata i8** %__s454, metadata !6098, metadata !DIExpression()), !dbg !6097
  %305 = load i32, i32* %__j436, align 4, !dbg !6097
  %conv455 = sext i32 %305 to i64, !dbg !6097
  %mul456 = mul i64 1, %conv455, !dbg !6097
  %306 = alloca i8, i64 %mul456, align 16, !dbg !6097
  store i8* %306, i8** %__s454, align 8, !dbg !6097
  %307 = load i8*, i8** %__s454, align 8, !dbg !6097
  %308 = load i32, i32* %__j436, align 4, !dbg !6097
  %conv457 = sext i32 %308 to i64, !dbg !6097
  %309 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6097
  %il458 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %309, i32 0, i32 7, !dbg !6097
  %rtl459 = bitcast %union.basic_block_il_dependent* %il458 to %struct.rtl_bb_info**, !dbg !6097
  %310 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl459, align 8, !dbg !6097
  %head_460 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %310, i32 0, i32 0, !dbg !6097
  %311 = load %struct.rtx_def*, %struct.rtx_def** %head_460, align 8, !dbg !6097
  %u461 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %311, i32 0, i32 1, !dbg !6097
  %fld462 = bitcast %union.u* %u461 to [1 x %union.rtunion_def]*, !dbg !6097
  %arrayidx463 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld462, i64 0, i64 6, !dbg !6097
  %rt_int464 = bitcast %union.rtunion_def* %arrayidx463 to i32*, !dbg !6097
  %312 = load i32, i32* %rt_int464, align 8, !dbg !6097
  %313 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6097
  %il465 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %313, i32 0, i32 7, !dbg !6097
  %rtl466 = bitcast %union.basic_block_il_dependent* %il465 to %struct.rtl_bb_info**, !dbg !6097
  %314 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl466, align 8, !dbg !6097
  %head_467 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %314, i32 0, i32 0, !dbg !6097
  %315 = load %struct.rtx_def*, %struct.rtx_def** %head_467, align 8, !dbg !6097
  %u468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1, !dbg !6097
  %fld469 = bitcast %union.u* %u468 to [1 x %union.rtunion_def]*, !dbg !6097
  %arrayidx470 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld469, i64 0, i64 6, !dbg !6097
  %rt_int471 = bitcast %union.rtunion_def* %arrayidx470 to i32*, !dbg !6097
  %316 = load i32, i32* %rt_int471, align 8, !dbg !6097
  %call472 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %307, i64 %conv457, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 %312, i32 %316), !dbg !6097
  %317 = load i8*, i8** %__s454, align 8, !dbg !6097
  call void @sel_prepare_string_for_dot_label(i8* %317), !dbg !6097
  %318 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6097
  %319 = load i8*, i8** %__s454, align 8, !dbg !6097
  %call473 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %318, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %319), !dbg !6097
  br label %do.end474, !dbg !6097

do.end474:                                        ; preds = %do.body435
  br label %if.end491, !dbg !6097

if.else475:                                       ; preds = %do.body432
  %320 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6091
  %321 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6091
  %il476 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %321, i32 0, i32 7, !dbg !6091
  %rtl477 = bitcast %union.basic_block_il_dependent* %il476 to %struct.rtl_bb_info**, !dbg !6091
  %322 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl477, align 8, !dbg !6091
  %head_478 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %322, i32 0, i32 0, !dbg !6091
  %323 = load %struct.rtx_def*, %struct.rtx_def** %head_478, align 8, !dbg !6091
  %u479 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %323, i32 0, i32 1, !dbg !6091
  %fld480 = bitcast %union.u* %u479 to [1 x %union.rtunion_def]*, !dbg !6091
  %arrayidx481 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld480, i64 0, i64 6, !dbg !6091
  %rt_int482 = bitcast %union.rtunion_def* %arrayidx481 to i32*, !dbg !6091
  %324 = load i32, i32* %rt_int482, align 8, !dbg !6091
  %325 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6091
  %il483 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %325, i32 0, i32 7, !dbg !6091
  %rtl484 = bitcast %union.basic_block_il_dependent* %il483 to %struct.rtl_bb_info**, !dbg !6091
  %326 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl484, align 8, !dbg !6091
  %head_485 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %326, i32 0, i32 0, !dbg !6091
  %327 = load %struct.rtx_def*, %struct.rtx_def** %head_485, align 8, !dbg !6091
  %u486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %327, i32 0, i32 1, !dbg !6091
  %fld487 = bitcast %union.u* %u486 to [1 x %union.rtunion_def]*, !dbg !6091
  %arrayidx488 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld487, i64 0, i64 6, !dbg !6091
  %rt_int489 = bitcast %union.rtunion_def* %arrayidx488 to i32*, !dbg !6091
  %328 = load i32, i32* %rt_int489, align 8, !dbg !6091
  %call490 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %320, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 %324, i32 %328), !dbg !6091
  br label %if.end491

if.end491:                                        ; preds = %if.else475, %do.end474
  br label %do.end492, !dbg !6094

do.end492:                                        ; preds = %if.end491
  br label %if.end493, !dbg !6094

if.end493:                                        ; preds = %do.end492, %cond.end427
  %329 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6099
  %il494 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %329, i32 0, i32 7, !dbg !6099
  %rtl495 = bitcast %union.basic_block_il_dependent* %il494 to %struct.rtl_bb_info**, !dbg !6099
  %330 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl495, align 8, !dbg !6099
  %head_496 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %330, i32 0, i32 0, !dbg !6099
  %331 = load %struct.rtx_def*, %struct.rtx_def** %head_496, align 8, !dbg !6099
  %u497 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %331, i32 0, i32 1, !dbg !6099
  %fld498 = bitcast %union.u* %u497 to [1 x %union.rtunion_def]*, !dbg !6099
  %arrayidx499 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld498, i64 0, i64 6, !dbg !6099
  %rt_int500 = bitcast %union.rtunion_def* %arrayidx499 to i32*, !dbg !6099
  %332 = load i32, i32* %rt_int500, align 8, !dbg !6099
  store i32 %332, i32* %i, align 4, !dbg !6100
  %333 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6101
  %il501 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %333, i32 0, i32 7, !dbg !6101
  %rtl502 = bitcast %union.basic_block_il_dependent* %il501 to %struct.rtl_bb_info**, !dbg !6101
  %334 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl502, align 8, !dbg !6101
  %head_503 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %334, i32 0, i32 0, !dbg !6101
  %335 = load %struct.rtx_def*, %struct.rtx_def** %head_503, align 8, !dbg !6101
  %u504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1, !dbg !6101
  %fld505 = bitcast %union.u* %u504 to [1 x %union.rtunion_def]*, !dbg !6101
  %arrayidx506 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld505, i64 0, i64 6, !dbg !6101
  %rt_int507 = bitcast %union.rtunion_def* %arrayidx506 to i32*, !dbg !6101
  %336 = load i32, i32* %rt_int507, align 8, !dbg !6101
  %337 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb, align 8, !dbg !6102
  %il508 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %337, i32 0, i32 7, !dbg !6102
  %rtl509 = bitcast %union.basic_block_il_dependent* %il508 to %struct.rtl_bb_info**, !dbg !6102
  %338 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl509, align 8, !dbg !6102
  %head_510 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %338, i32 0, i32 0, !dbg !6102
  %339 = load %struct.rtx_def*, %struct.rtx_def** %head_510, align 8, !dbg !6102
  %u511 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %339, i32 0, i32 1, !dbg !6102
  %fld512 = bitcast %union.u* %u511 to [1 x %union.rtunion_def]*, !dbg !6102
  %arrayidx513 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld512, i64 0, i64 6, !dbg !6102
  %rt_int514 = bitcast %union.rtunion_def* %arrayidx513 to i32*, !dbg !6102
  store i32 %336, i32* %rt_int514, align 8, !dbg !6103
  %340 = load i32, i32* %i, align 4, !dbg !6104
  %341 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !6105
  %il515 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %341, i32 0, i32 7, !dbg !6105
  %rtl516 = bitcast %union.basic_block_il_dependent* %il515 to %struct.rtl_bb_info**, !dbg !6105
  %342 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl516, align 8, !dbg !6105
  %head_517 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %342, i32 0, i32 0, !dbg !6105
  %343 = load %struct.rtx_def*, %struct.rtx_def** %head_517, align 8, !dbg !6105
  %u518 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %343, i32 0, i32 1, !dbg !6105
  %fld519 = bitcast %union.u* %u518 to [1 x %union.rtunion_def]*, !dbg !6105
  %arrayidx520 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld519, i64 0, i64 6, !dbg !6105
  %rt_int521 = bitcast %union.rtunion_def* %arrayidx520 to i32*, !dbg !6105
  store i32 %340, i32* %rt_int521, align 8, !dbg !6106
  br label %if.end522, !dbg !6107

if.end522:                                        ; preds = %if.end493, %while.end
  br label %if.end523, !dbg !6108

if.end523:                                        ; preds = %if.end522, %land.lhs.true86, %land.lhs.true83, %land.lhs.true80, %land.lhs.true, %if.then75
  br label %if.end524, !dbg !6109

if.end524:                                        ; preds = %if.end523, %cond.end72
  %344 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6110
  ret %struct.basic_block_def* %344, !dbg !6111
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #0 !dbg !6112 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6118, metadata !DIExpression()), !dbg !6119
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6120
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 0, !dbg !6120
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6120
  %tobool = icmp ne %struct.VEC_edge_gc* %1, null, !dbg !6120
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6120

cond.true:                                        ; preds = %entry
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6120
  %preds1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 0, !dbg !6120
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds1, align 8, !dbg !6120
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i32 0, i32 0, !dbg !6120
  br label %cond.end, !dbg !6120

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6120

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !6120
  %call = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !6120
  %cmp = icmp eq i32 %call, 1, !dbg !6121
  %conv = zext i1 %cmp to i32, !dbg !6121
  %conv2 = trunc i32 %conv to i8, !dbg !6120
  ret i8 %conv2, !dbg !6122
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) #0 !dbg !6123 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6126, metadata !DIExpression()), !dbg !6127
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6128
  %call = call zeroext i8 @single_pred_p(%struct.basic_block_def* %0), !dbg !6128
  %tobool = icmp ne i8 %call, 0, !dbg !6128
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6128

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6128
  br label %cond.end, !dbg !6128

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6128

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6128
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6129
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 0, !dbg !6129
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6129
  %tobool1 = icmp ne %struct.VEC_edge_gc* %2, null, !dbg !6129
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !6129

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6129
  %preds3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 0, !dbg !6129
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds3, align 8, !dbg !6129
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i32 0, i32 0, !dbg !6129
  br label %cond.end5, !dbg !6129

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !6129

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.false4 ], !dbg !6129
  %call7 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0), !dbg !6129
  ret %struct.edge_def* %call7, !dbg !6130
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %vec_, i32 %ix_) #0 !dbg !6131 {
entry:
  %vec_.addr = alloca %struct.VEC_sel_region_bb_info_def_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_sel_region_bb_info_def_base* %vec_, %struct.VEC_sel_region_bb_info_def_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_sel_region_bb_info_def_base** %vec_.addr, metadata !6143, metadata !DIExpression()), !dbg !6144
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !6145, metadata !DIExpression()), !dbg !6144
  %0 = load %struct.VEC_sel_region_bb_info_def_base*, %struct.VEC_sel_region_bb_info_def_base** %vec_.addr, align 8, !dbg !6144
  %tobool = icmp ne %struct.VEC_sel_region_bb_info_def_base* %0, null, !dbg !6144
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6144

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !6144
  %2 = load %struct.VEC_sel_region_bb_info_def_base*, %struct.VEC_sel_region_bb_info_def_base** %vec_.addr, align 8, !dbg !6144
  %num = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_base, %struct.VEC_sel_region_bb_info_def_base* %2, i32 0, i32 0, !dbg !6144
  %3 = load i32, i32* %num, align 8, !dbg !6144
  %cmp = icmp ult i32 %1, %3, !dbg !6144
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !6146
  %land.ext = zext i1 %4 to i32, !dbg !6144
  %5 = load %struct.VEC_sel_region_bb_info_def_base*, %struct.VEC_sel_region_bb_info_def_base** %vec_.addr, align 8, !dbg !6144
  %vec = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_base, %struct.VEC_sel_region_bb_info_def_base* %5, i32 0, i32 2, !dbg !6144
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !6144
  %idxprom = zext i32 %6 to i64, !dbg !6144
  %arrayidx = getelementptr inbounds [1 x %struct.sel_region_bb_info_def], [1 x %struct.sel_region_bb_info_def]* %vec, i64 0, i64 %idxprom, !dbg !6144
  ret %struct.sel_region_bb_info_def* %arrayidx, !dbg !6144
}

declare dso_local void @sel_redirect_edge_and_branch_force(%struct.edge_def*, %struct.basic_block_def*) #2

declare dso_local zeroext i8 @sel_redirect_edge_and_branch(%struct.edge_def*, %struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #0 !dbg !6147 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6148, metadata !DIExpression()), !dbg !6149
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6150
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 1, !dbg !6150
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6150
  %tobool = icmp ne %struct.VEC_edge_gc* %1, null, !dbg !6150
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6150

cond.true:                                        ; preds = %entry
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6150
  %succs1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 1, !dbg !6150
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs1, align 8, !dbg !6150
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i32 0, i32 0, !dbg !6150
  br label %cond.end, !dbg !6150

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6150

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !6150
  %call = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !6150
  %cmp = icmp eq i32 %call, 1, !dbg !6151
  %conv = zext i1 %cmp to i32, !dbg !6151
  %conv2 = trunc i32 %conv to i8, !dbg !6150
  ret i8 %conv2, !dbg !6152
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) #0 !dbg !6153 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6156, metadata !DIExpression()), !dbg !6157
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6158
  %call = call %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %0), !dbg !6159
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i32 0, i32 1, !dbg !6160
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6160
  ret %struct.basic_block_def* %1, !dbg !6161
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def* %obj_) #0 !dbg !6162 {
entry:
  %vec_.addr = alloca %struct.VEC_basic_block_base*, align 8
  %ix_.addr = alloca i32, align 4
  %obj_.addr = alloca %struct.basic_block_def*, align 8
  %old_obj_ = alloca %struct.basic_block_def*, align 8
  store %struct.VEC_basic_block_base* %vec_, %struct.VEC_basic_block_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_basic_block_base** %vec_.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !6168, metadata !DIExpression()), !dbg !6167
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %obj_.addr, metadata !6169, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %old_obj_, metadata !6170, metadata !DIExpression()), !dbg !6167
  %0 = load i32, i32* %ix_.addr, align 4, !dbg !6167
  %1 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !6167
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %1, i32 0, i32 0, !dbg !6167
  %2 = load i32, i32* %num, align 8, !dbg !6167
  %cmp = icmp ult i32 %0, %2, !dbg !6167
  %conv = zext i1 %cmp to i32, !dbg !6167
  %3 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !6167
  %vec = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %3, i32 0, i32 2, !dbg !6167
  %4 = load i32, i32* %ix_.addr, align 4, !dbg !6167
  %idxprom = zext i32 %4 to i64, !dbg !6167
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %vec, i64 0, i64 %idxprom, !dbg !6167
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !6167
  store %struct.basic_block_def* %5, %struct.basic_block_def** %old_obj_, align 8, !dbg !6167
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %obj_.addr, align 8, !dbg !6167
  %7 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !6167
  %vec1 = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %7, i32 0, i32 2, !dbg !6167
  %8 = load i32, i32* %ix_.addr, align 4, !dbg !6167
  %idxprom2 = zext i32 %8 to i64, !dbg !6167
  %arrayidx3 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %vec1, i64 0, i64 %idxprom2, !dbg !6167
  store %struct.basic_block_def* %6, %struct.basic_block_def** %arrayidx3, align 8, !dbg !6167
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %old_obj_, align 8, !dbg !6167
  ret %struct.basic_block_def* %9, !dbg !6167
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #0 !dbg !6171 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6172, metadata !DIExpression()), !dbg !6173
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6174
  %call = call zeroext i8 @single_succ_p(%struct.basic_block_def* %0), !dbg !6174
  %tobool = icmp ne i8 %call, 0, !dbg !6174
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6174

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6174
  br label %cond.end, !dbg !6174

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6174

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6174
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6175
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 1, !dbg !6175
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6175
  %tobool1 = icmp ne %struct.VEC_edge_gc* %2, null, !dbg !6175
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !6175

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6175
  %succs3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 1, !dbg !6175
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs3, align 8, !dbg !6175
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i32 0, i32 0, !dbg !6175
  br label %cond.end5, !dbg !6175

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !6175

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.false4 ], !dbg !6175
  %call7 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0), !dbg !6175
  ret %struct.edge_def* %call7, !dbg !6176
}

declare dso_local i32 @get_seqno_by_preds(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @emit_insn_from_expr_after(%struct._expr* %expr, %struct.vinsn_def* %vinsn, i32 %seqno, %struct.rtx_def* %place_to_insert) #0 !dbg !6177 {
entry:
  %expr.addr = alloca %struct._expr*, align 8
  %vinsn.addr = alloca %struct.vinsn_def*, align 8
  %seqno.addr = alloca i32, align 4
  %place_to_insert.addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  store %struct.vinsn_def* %vinsn, %struct.vinsn_def** %vinsn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vinsn.addr, metadata !6182, metadata !DIExpression()), !dbg !6183
  store i32 %seqno, i32* %seqno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seqno.addr, metadata !6184, metadata !DIExpression()), !dbg !6185
  store %struct.rtx_def* %place_to_insert, %struct.rtx_def** %place_to_insert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %place_to_insert.addr, metadata !6186, metadata !DIExpression()), !dbg !6187
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !6188
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !6188
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !6188
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i32 0, i32 0, !dbg !6188
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !6188
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !6188
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6188
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !6188
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6188
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6188
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !6188
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !6188

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !6188
  %vinsn2 = getelementptr inbounds %struct._expr, %struct._expr* %4, i32 0, i32 0, !dbg !6188
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn2, align 8, !dbg !6188
  %insn_rtx3 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i32 0, i32 0, !dbg !6188
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx3, align 8, !dbg !6188
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !6188
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !6188
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 2, !dbg !6188
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !6188
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !6188
  %tobool8 = icmp ne %struct.rtx_def* %7, null, !dbg !6188
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !6188

cond.true:                                        ; preds = %land.lhs.true
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4450, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6188
  br label %cond.end, !dbg !6188

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !6188

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6188
  %8 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !6189
  %was_renamed = getelementptr inbounds %struct._expr, %struct._expr* %8, i32 0, i32 12, !dbg !6189
  %bf.load = load i8, i8* %was_renamed, align 1, !dbg !6189
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !6189
  %bf.clear = and i8 %bf.lshr, 1, !dbg !6189
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6189
  %tobool9 = icmp ne i32 %bf.cast, 0, !dbg !6189
  br i1 %tobool9, label %if.then, label %if.end12, !dbg !6191

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !6192, metadata !DIExpression()), !dbg !6194
  %9 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !6195
  %call = call i32 @expr_dest_regno(%struct._expr* %9), !dbg !6196
  store i32 %call, i32* %regno, align 4, !dbg !6194
  %10 = load i32, i32* %regno, align 4, !dbg !6197
  %cmp = icmp ult i32 %10, 53, !dbg !6197
  br i1 %cmp, label %if.then10, label %if.end, !dbg !6199

if.then10:                                        ; preds = %if.then
  %11 = load i32, i32* %regno, align 4, !dbg !6200
  call void @df_set_regs_ever_live(i32 %11, i8 zeroext 1), !dbg !6202
  %12 = load i32, i32* @reg_rename_this_tick, align 4, !dbg !6203
  %inc = add nsw i32 %12, 1, !dbg !6203
  store i32 %inc, i32* @reg_rename_this_tick, align 4, !dbg !6203
  %13 = load i32, i32* %regno, align 4, !dbg !6204
  %idxprom = zext i32 %13 to i64, !dbg !6205
  %arrayidx11 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_rename_tick, i64 0, i64 %idxprom, !dbg !6205
  store i32 %inc, i32* %arrayidx11, align 4, !dbg !6206
  br label %if.end, !dbg !6207

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end12, !dbg !6208

if.end12:                                         ; preds = %if.end, %cond.end
  %14 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !6209
  %15 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn.addr, align 8, !dbg !6210
  %16 = load i32, i32* %seqno.addr, align 4, !dbg !6211
  %17 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert.addr, align 8, !dbg !6212
  %call13 = call %struct.rtx_def* @sel_gen_insn_from_expr_after(%struct._expr* %14, %struct.vinsn_def* %15, i32 %16, %struct.rtx_def* %17), !dbg !6213
  ret %struct.rtx_def* %call13, !dbg !6214
}

declare dso_local void @df_set_regs_ever_live(i32, i8 zeroext) #2

declare dso_local %struct.rtx_def* @sel_gen_insn_from_expr_after(%struct._expr*, %struct.vinsn_def*, i32, %struct.rtx_def*) #2

declare dso_local i32 @get_av_level(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._list_node* @compute_av_set(%struct.rtx_def* %insn, %struct._list_node* %p, i32 %ws, i8 zeroext %unique_p) #0 !dbg !6215 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %p.addr = alloca %struct._list_node*, align 8
  %ws.addr = alloca i32, align 4
  %unique_p.addr = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6218, metadata !DIExpression()), !dbg !6219
  store %struct._list_node* %p, %struct._list_node** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %p.addr, metadata !6220, metadata !DIExpression()), !dbg !6221
  store i32 %ws, i32* %ws.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ws.addr, metadata !6222, metadata !DIExpression()), !dbg !6223
  store i8 %unique_p, i8* %unique_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unique_p.addr, metadata !6224, metadata !DIExpression()), !dbg !6225
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6226
  %1 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !6227
  %2 = load i32, i32* %ws.addr, align 4, !dbg !6228
  %3 = load i8, i8* %unique_p.addr, align 1, !dbg !6229
  %call = call %struct._list_node* @compute_av_set_inside_bb(%struct.rtx_def* %0, %struct._list_node* %1, i32 %2, i8 zeroext %3), !dbg !6230
  ret %struct._list_node* %call, !dbg !6231
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._list_node* @compute_av_set_inside_bb(%struct.rtx_def* %first_insn, %struct._list_node* %p, i32 %ws, i8 zeroext %need_copy_p) #0 !dbg !6232 {
entry:
  %retval = alloca %struct._list_node*, align 8
  %first_insn.addr = alloca %struct.rtx_def*, align 8
  %p.addr = alloca %struct._list_node*, align 8
  %ws.addr = alloca i32, align 4
  %need_copy_p.addr = alloca i8, align 1
  %cur_insn = alloca %struct.rtx_def*, align 8
  %end_ws = alloca i32, align 4
  %bb_end = alloca %struct.rtx_def*, align 8
  %after_bb_end = alloca %struct.rtx_def*, align 8
  %last_insn = alloca %struct.rtx_def*, align 8
  %av = alloca %struct._list_node*, align 8
  %cur_bb = alloca %struct.basic_block_def*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %av_set = alloca %struct._list_node*, align 8
  %__j56 = alloca i32, align 4
  %__s64 = alloca i8*, align 8
  %__j87 = alloca i32, align 4
  %__s91 = alloca i8*, align 8
  %__j124 = alloca i32, align 4
  %__s132 = alloca i8*, align 8
  %__j166 = alloca i32, align 4
  %__s174 = alloca i8*, align 8
  %__j227 = alloca i32, align 4
  %__s235 = alloca i8*, align 8
  %expr314 = alloca %struct._expr*, align 8
  %__j429 = alloca i32, align 4
  %__s437 = alloca i8*, align 8
  %__j460 = alloca i32, align 4
  %__s464 = alloca i8*, align 8
  store %struct.rtx_def* %first_insn, %struct.rtx_def** %first_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %first_insn.addr, metadata !6233, metadata !DIExpression()), !dbg !6234
  store %struct._list_node* %p, %struct._list_node** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %p.addr, metadata !6235, metadata !DIExpression()), !dbg !6236
  store i32 %ws, i32* %ws.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ws.addr, metadata !6237, metadata !DIExpression()), !dbg !6238
  store i8 %need_copy_p, i8* %need_copy_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %need_copy_p.addr, metadata !6239, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cur_insn, metadata !6241, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.declare(metadata i32* %end_ws, metadata !6243, metadata !DIExpression()), !dbg !6244
  %0 = load i32, i32* %ws.addr, align 4, !dbg !6245
  store i32 %0, i32* %end_ws, align 4, !dbg !6244
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %bb_end, metadata !6246, metadata !DIExpression()), !dbg !6247
  %1 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6248
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !6248
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6248
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !6248
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !6248
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6248
  %call = call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %2), !dbg !6249
  store %struct.rtx_def* %call, %struct.rtx_def** %bb_end, align 8, !dbg !6247
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %after_bb_end, metadata !6250, metadata !DIExpression()), !dbg !6251
  %3 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !6252
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !6252
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !6252
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 2, !dbg !6252
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !6252
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6252
  store %struct.rtx_def* %4, %struct.rtx_def** %after_bb_end, align 8, !dbg !6251
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last_insn, metadata !6253, metadata !DIExpression()), !dbg !6254
  call void @llvm.dbg.declare(metadata %struct._list_node** %av, metadata !6255, metadata !DIExpression()), !dbg !6256
  store %struct._list_node* null, %struct._list_node** %av, align 8, !dbg !6256
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %cur_bb, metadata !6257, metadata !DIExpression()), !dbg !6258
  %5 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6259
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !6259
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !6259
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 3, !dbg !6259
  %rt_bb7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.basic_block_def**, !dbg !6259
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb7, align 8, !dbg !6259
  store %struct.basic_block_def* %6, %struct.basic_block_def** %cur_bb, align 8, !dbg !6258
  %7 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6260
  %8 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !6262
  %call8 = call zeroext i8 @is_ineligible_successor(%struct.rtx_def* %7, %struct._list_node* %8), !dbg !6263
  %tobool = icmp ne i8 %call8, 0, !dbg !6263
  br i1 %tobool, label %if.then, label %if.end32, !dbg !6264

if.then:                                          ; preds = %entry
  %9 = load i32, i32* @sched_verbose, align 4, !dbg !6265
  %cmp = icmp sge i32 %9, 6, !dbg !6268
  br i1 %cmp, label %if.then9, label %if.end31, !dbg !6269

if.then9:                                         ; preds = %if.then
  br label %do.body, !dbg !6270

do.body:                                          ; preds = %if.then9
  %10 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6271
  %tobool10 = icmp ne i8 %10, 0, !dbg !6271
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !6274

if.then11:                                        ; preds = %do.body
  br label %do.body12, !dbg !6271

do.body12:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !6275, metadata !DIExpression()), !dbg !6277
  %11 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6277
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !6277
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !6277
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 0, !dbg !6277
  %rt_int = bitcast %union.rtunion_def* %arrayidx15 to i32*, !dbg !6277
  %12 = load i32, i32* %rt_int, align 8, !dbg !6277
  %call16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %12), !dbg !6277
  %mul = mul nsw i32 2, %call16, !dbg !6277
  %add = add nsw i32 1, %mul, !dbg !6277
  store i32 %add, i32* %__j, align 4, !dbg !6277
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !6278, metadata !DIExpression()), !dbg !6277
  %13 = load i32, i32* %__j, align 4, !dbg !6277
  %conv = sext i32 %13 to i64, !dbg !6277
  %mul17 = mul i64 1, %conv, !dbg !6277
  %14 = alloca i8, i64 %mul17, align 16, !dbg !6277
  store i8* %14, i8** %__s, align 8, !dbg !6277
  %15 = load i8*, i8** %__s, align 8, !dbg !6277
  %16 = load i32, i32* %__j, align 4, !dbg !6277
  %conv18 = sext i32 %16 to i64, !dbg !6277
  %17 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6277
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !6277
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !6277
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 0, !dbg !6277
  %rt_int22 = bitcast %union.rtunion_def* %arrayidx21 to i32*, !dbg !6277
  %18 = load i32, i32* %rt_int22, align 8, !dbg !6277
  %call23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 %conv18, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %18), !dbg !6277
  %19 = load i8*, i8** %__s, align 8, !dbg !6277
  call void @sel_prepare_string_for_dot_label(i8* %19), !dbg !6277
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6277
  %21 = load i8*, i8** %__s, align 8, !dbg !6277
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %21), !dbg !6277
  br label %do.end, !dbg !6277

do.end:                                           ; preds = %do.body12
  br label %if.end, !dbg !6277

if.else:                                          ; preds = %do.body
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6271
  %23 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6271
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !6271
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !6271
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !6271
  %rt_int28 = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !6271
  %24 = load i32, i32* %rt_int28, align 8, !dbg !6271
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %24), !dbg !6271
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end30, !dbg !6274

do.end30:                                         ; preds = %if.end
  br label %if.end31, !dbg !6274

if.end31:                                         ; preds = %do.end30, %if.then
  store %struct._list_node* null, %struct._list_node** %retval, align 8, !dbg !6279
  br label %return, !dbg !6279

if.end32:                                         ; preds = %entry
  %25 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6280
  %call33 = call i32 @get_av_level(%struct.rtx_def* %25), !dbg !6280
  %26 = load i32, i32* @global_level, align 4, !dbg !6280
  %cmp34 = icmp eq i32 %call33, %26, !dbg !6280
  br i1 %cmp34, label %if.then36, label %if.end110, !dbg !6282

if.then36:                                        ; preds = %if.end32
  call void @llvm.dbg.declare(metadata %struct._list_node** %av_set, metadata !6283, metadata !DIExpression()), !dbg !6285
  %27 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6286
  %call37 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %27), !dbg !6288
  %tobool38 = icmp ne i8 %call37, 0, !dbg !6288
  br i1 %tobool38, label %if.then39, label %if.else47, !dbg !6289

if.then39:                                        ; preds = %if.then36
  %28 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6290
  %tobool40 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %28, null, !dbg !6290
  br i1 %tobool40, label %cond.true, label %cond.false, !dbg !6290

cond.true:                                        ; preds = %if.then39
  %29 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6290
  %base = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %29, i32 0, i32 0, !dbg !6290
  br label %cond.end, !dbg !6290

cond.false:                                       ; preds = %if.then39
  br label %cond.end, !dbg !6290

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_region_bb_info_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !6290
  %30 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6290
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !6290
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !6290
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 3, !dbg !6290
  %rt_bb44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.basic_block_def**, !dbg !6290
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb44, align 8, !dbg !6290
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i32 0, i32 9, !dbg !6290
  %32 = load i32, i32* %index, align 8, !dbg !6290
  %call45 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond, i32 %32), !dbg !6290
  %av_set46 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call45, i32 0, i32 1, !dbg !6290
  %33 = load %struct._list_node*, %struct._list_node** %av_set46, align 8, !dbg !6290
  store %struct._list_node* %33, %struct._list_node** %av_set, align 8, !dbg !6291
  br label %if.end48, !dbg !6292

if.else47:                                        ; preds = %if.then36
  store %struct._list_node* null, %struct._list_node** %av_set, align 8, !dbg !6293
  br label %if.end48

if.end48:                                         ; preds = %if.else47, %cond.end
  %34 = load i32, i32* @sched_verbose, align 4, !dbg !6294
  %cmp49 = icmp sge i32 %34, 6, !dbg !6296
  br i1 %cmp49, label %if.then51, label %if.end102, !dbg !6297

if.then51:                                        ; preds = %if.end48
  br label %do.body52, !dbg !6298

do.body52:                                        ; preds = %if.then51
  %35 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6300
  %tobool53 = icmp ne i8 %35, 0, !dbg !6300
  br i1 %tobool53, label %if.then54, label %if.else75, !dbg !6303

if.then54:                                        ; preds = %do.body52
  br label %do.body55, !dbg !6300

do.body55:                                        ; preds = %if.then54
  call void @llvm.dbg.declare(metadata i32* %__j56, metadata !6304, metadata !DIExpression()), !dbg !6306
  %36 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6306
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !6306
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !6306
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 0, !dbg !6306
  %rt_int60 = bitcast %union.rtunion_def* %arrayidx59 to i32*, !dbg !6306
  %37 = load i32, i32* %rt_int60, align 8, !dbg !6306
  %call61 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i32 %37), !dbg !6306
  %mul62 = mul nsw i32 2, %call61, !dbg !6306
  %add63 = add nsw i32 1, %mul62, !dbg !6306
  store i32 %add63, i32* %__j56, align 4, !dbg !6306
  call void @llvm.dbg.declare(metadata i8** %__s64, metadata !6307, metadata !DIExpression()), !dbg !6306
  %38 = load i32, i32* %__j56, align 4, !dbg !6306
  %conv65 = sext i32 %38 to i64, !dbg !6306
  %mul66 = mul i64 1, %conv65, !dbg !6306
  %39 = alloca i8, i64 %mul66, align 16, !dbg !6306
  store i8* %39, i8** %__s64, align 8, !dbg !6306
  %40 = load i8*, i8** %__s64, align 8, !dbg !6306
  %41 = load i32, i32* %__j56, align 4, !dbg !6306
  %conv67 = sext i32 %41 to i64, !dbg !6306
  %42 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6306
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !6306
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !6306
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 0, !dbg !6306
  %rt_int71 = bitcast %union.rtunion_def* %arrayidx70 to i32*, !dbg !6306
  %43 = load i32, i32* %rt_int71, align 8, !dbg !6306
  %call72 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %40, i64 %conv67, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i32 %43), !dbg !6306
  %44 = load i8*, i8** %__s64, align 8, !dbg !6306
  call void @sel_prepare_string_for_dot_label(i8* %44), !dbg !6306
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6306
  %46 = load i8*, i8** %__s64, align 8, !dbg !6306
  %call73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %46), !dbg !6306
  br label %do.end74, !dbg !6306

do.end74:                                         ; preds = %do.body55
  br label %if.end81, !dbg !6306

if.else75:                                        ; preds = %do.body52
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6300
  %48 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6300
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !6300
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !6300
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 0, !dbg !6300
  %rt_int79 = bitcast %union.rtunion_def* %arrayidx78 to i32*, !dbg !6300
  %49 = load i32, i32* %rt_int79, align 8, !dbg !6300
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i32 %49), !dbg !6300
  br label %if.end81

if.end81:                                         ; preds = %if.else75, %do.end74
  br label %do.end82, !dbg !6303

do.end82:                                         ; preds = %if.end81
  %50 = load %struct._list_node*, %struct._list_node** %av_set, align 8, !dbg !6308
  call void @dump_av_set(%struct._list_node* %50), !dbg !6309
  br label %do.body83, !dbg !6310

do.body83:                                        ; preds = %do.end82
  %51 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6311
  %tobool84 = icmp ne i8 %51, 0, !dbg !6311
  br i1 %tobool84, label %if.then85, label %if.else98, !dbg !6314

if.then85:                                        ; preds = %do.body83
  br label %do.body86, !dbg !6311

do.body86:                                        ; preds = %if.then85
  call void @llvm.dbg.declare(metadata i32* %__j87, metadata !6315, metadata !DIExpression()), !dbg !6317
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6317
  %mul89 = mul nsw i32 2, %call88, !dbg !6317
  %add90 = add nsw i32 1, %mul89, !dbg !6317
  store i32 %add90, i32* %__j87, align 4, !dbg !6317
  call void @llvm.dbg.declare(metadata i8** %__s91, metadata !6318, metadata !DIExpression()), !dbg !6317
  %52 = load i32, i32* %__j87, align 4, !dbg !6317
  %conv92 = sext i32 %52 to i64, !dbg !6317
  %mul93 = mul i64 1, %conv92, !dbg !6317
  %53 = alloca i8, i64 %mul93, align 16, !dbg !6317
  store i8* %53, i8** %__s91, align 8, !dbg !6317
  %54 = load i8*, i8** %__s91, align 8, !dbg !6317
  %55 = load i32, i32* %__j87, align 4, !dbg !6317
  %conv94 = sext i32 %55 to i64, !dbg !6317
  %call95 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %54, i64 %conv94, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6317
  %56 = load i8*, i8** %__s91, align 8, !dbg !6317
  call void @sel_prepare_string_for_dot_label(i8* %56), !dbg !6317
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6317
  %58 = load i8*, i8** %__s91, align 8, !dbg !6317
  %call96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %58), !dbg !6317
  br label %do.end97, !dbg !6317

do.end97:                                         ; preds = %do.body86
  br label %if.end100, !dbg !6317

if.else98:                                        ; preds = %do.body83
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6311
  %call99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6311
  br label %if.end100

if.end100:                                        ; preds = %if.else98, %do.end97
  br label %do.end101, !dbg !6314

do.end101:                                        ; preds = %if.end100
  br label %if.end102, !dbg !6319

if.end102:                                        ; preds = %do.end101, %if.end48
  %60 = load i8, i8* %need_copy_p.addr, align 1, !dbg !6320
  %conv103 = zext i8 %60 to i32, !dbg !6320
  %tobool104 = icmp ne i32 %conv103, 0, !dbg !6320
  br i1 %tobool104, label %cond.true105, label %cond.false107, !dbg !6320

cond.true105:                                     ; preds = %if.end102
  %61 = load %struct._list_node*, %struct._list_node** %av_set, align 8, !dbg !6321
  %call106 = call %struct._list_node* @av_set_copy(%struct._list_node* %61), !dbg !6322
  br label %cond.end108, !dbg !6320

cond.false107:                                    ; preds = %if.end102
  %62 = load %struct._list_node*, %struct._list_node** %av_set, align 8, !dbg !6323
  br label %cond.end108, !dbg !6320

cond.end108:                                      ; preds = %cond.false107, %cond.true105
  %cond109 = phi %struct._list_node* [ %call106, %cond.true105 ], [ %62, %cond.false107 ], !dbg !6320
  store %struct._list_node* %cond109, %struct._list_node** %retval, align 8, !dbg !6324
  br label %return, !dbg !6324

if.end110:                                        ; preds = %if.end32
  %63 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6325
  call void @_xlist_add(%struct._list_node** %p.addr, %struct.rtx_def* %63), !dbg !6325
  %64 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6326
  store %struct.rtx_def* %64, %struct.rtx_def** %last_insn, align 8, !dbg !6328
  br label %for.cond, !dbg !6329

for.cond:                                         ; preds = %for.inc, %if.end110
  %65 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6330
  %66 = load %struct.rtx_def*, %struct.rtx_def** %after_bb_end, align 8, !dbg !6332
  %cmp111 = icmp ne %struct.rtx_def* %65, %66, !dbg !6333
  br i1 %cmp111, label %for.body, label %for.end, !dbg !6334

for.body:                                         ; preds = %for.cond
  %67 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6335
  %call113 = call i32 @get_av_level(%struct.rtx_def* %67), !dbg !6335
  %68 = load i32, i32* @global_level, align 4, !dbg !6335
  %cmp114 = icmp eq i32 %call113, %68, !dbg !6335
  br i1 %cmp114, label %if.then116, label %if.end152, !dbg !6338

if.then116:                                       ; preds = %for.body
  %69 = load i32, i32* @sched_verbose, align 4, !dbg !6339
  %cmp117 = icmp sge i32 %69, 6, !dbg !6342
  br i1 %cmp117, label %if.then119, label %if.end151, !dbg !6343

if.then119:                                       ; preds = %if.then116
  br label %do.body120, !dbg !6344

do.body120:                                       ; preds = %if.then119
  %70 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6345
  %tobool121 = icmp ne i8 %70, 0, !dbg !6345
  br i1 %tobool121, label %if.then122, label %if.else143, !dbg !6348

if.then122:                                       ; preds = %do.body120
  br label %do.body123, !dbg !6345

do.body123:                                       ; preds = %if.then122
  call void @llvm.dbg.declare(metadata i32* %__j124, metadata !6349, metadata !DIExpression()), !dbg !6351
  %71 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6351
  %u125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !6351
  %fld126 = bitcast %union.u* %u125 to [1 x %union.rtunion_def]*, !dbg !6351
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i64 0, i64 0, !dbg !6351
  %rt_int128 = bitcast %union.rtunion_def* %arrayidx127 to i32*, !dbg !6351
  %72 = load i32, i32* %rt_int128, align 8, !dbg !6351
  %call129 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 %72), !dbg !6351
  %mul130 = mul nsw i32 2, %call129, !dbg !6351
  %add131 = add nsw i32 1, %mul130, !dbg !6351
  store i32 %add131, i32* %__j124, align 4, !dbg !6351
  call void @llvm.dbg.declare(metadata i8** %__s132, metadata !6352, metadata !DIExpression()), !dbg !6351
  %73 = load i32, i32* %__j124, align 4, !dbg !6351
  %conv133 = sext i32 %73 to i64, !dbg !6351
  %mul134 = mul i64 1, %conv133, !dbg !6351
  %74 = alloca i8, i64 %mul134, align 16, !dbg !6351
  store i8* %74, i8** %__s132, align 8, !dbg !6351
  %75 = load i8*, i8** %__s132, align 8, !dbg !6351
  %76 = load i32, i32* %__j124, align 4, !dbg !6351
  %conv135 = sext i32 %76 to i64, !dbg !6351
  %77 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6351
  %u136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !6351
  %fld137 = bitcast %union.u* %u136 to [1 x %union.rtunion_def]*, !dbg !6351
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i64 0, i64 0, !dbg !6351
  %rt_int139 = bitcast %union.rtunion_def* %arrayidx138 to i32*, !dbg !6351
  %78 = load i32, i32* %rt_int139, align 8, !dbg !6351
  %call140 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %75, i64 %conv135, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 %78), !dbg !6351
  %79 = load i8*, i8** %__s132, align 8, !dbg !6351
  call void @sel_prepare_string_for_dot_label(i8* %79), !dbg !6351
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6351
  %81 = load i8*, i8** %__s132, align 8, !dbg !6351
  %call141 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %81), !dbg !6351
  br label %do.end142, !dbg !6351

do.end142:                                        ; preds = %do.body123
  br label %if.end149, !dbg !6351

if.else143:                                       ; preds = %do.body120
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6345
  %83 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6345
  %u144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !6345
  %fld145 = bitcast %union.u* %u144 to [1 x %union.rtunion_def]*, !dbg !6345
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i64 0, i64 0, !dbg !6345
  %rt_int147 = bitcast %union.rtunion_def* %arrayidx146 to i32*, !dbg !6345
  %84 = load i32, i32* %rt_int147, align 8, !dbg !6345
  %call148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 %84), !dbg !6345
  br label %if.end149

if.end149:                                        ; preds = %if.else143, %do.end142
  br label %do.end150, !dbg !6348

do.end150:                                        ; preds = %if.end149
  br label %if.end151, !dbg !6348

if.end151:                                        ; preds = %do.end150, %if.then116
  br label %for.end, !dbg !6353

if.end152:                                        ; preds = %for.body
  %85 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6354
  %86 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6356
  %cmp153 = icmp ne %struct.rtx_def* %85, %86, !dbg !6357
  br i1 %cmp153, label %land.lhs.true, label %if.end194, !dbg !6358

land.lhs.true:                                    ; preds = %if.end152
  %87 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6359
  %88 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !6360
  %call155 = call zeroext i8 @is_ineligible_successor(%struct.rtx_def* %87, %struct._list_node* %88), !dbg !6361
  %conv156 = zext i8 %call155 to i32, !dbg !6361
  %tobool157 = icmp ne i32 %conv156, 0, !dbg !6361
  br i1 %tobool157, label %if.then158, label %if.end194, !dbg !6362

if.then158:                                       ; preds = %land.lhs.true
  %89 = load i32, i32* @sched_verbose, align 4, !dbg !6363
  %cmp159 = icmp sge i32 %89, 6, !dbg !6366
  br i1 %cmp159, label %if.then161, label %if.end193, !dbg !6367

if.then161:                                       ; preds = %if.then158
  br label %do.body162, !dbg !6368

do.body162:                                       ; preds = %if.then161
  %90 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6369
  %tobool163 = icmp ne i8 %90, 0, !dbg !6369
  br i1 %tobool163, label %if.then164, label %if.else185, !dbg !6372

if.then164:                                       ; preds = %do.body162
  br label %do.body165, !dbg !6369

do.body165:                                       ; preds = %if.then164
  call void @llvm.dbg.declare(metadata i32* %__j166, metadata !6373, metadata !DIExpression()), !dbg !6375
  %91 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6375
  %u167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !6375
  %fld168 = bitcast %union.u* %u167 to [1 x %union.rtunion_def]*, !dbg !6375
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i64 0, i64 0, !dbg !6375
  %rt_int170 = bitcast %union.rtunion_def* %arrayidx169 to i32*, !dbg !6375
  %92 = load i32, i32* %rt_int170, align 8, !dbg !6375
  %call171 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %92), !dbg !6375
  %mul172 = mul nsw i32 2, %call171, !dbg !6375
  %add173 = add nsw i32 1, %mul172, !dbg !6375
  store i32 %add173, i32* %__j166, align 4, !dbg !6375
  call void @llvm.dbg.declare(metadata i8** %__s174, metadata !6376, metadata !DIExpression()), !dbg !6375
  %93 = load i32, i32* %__j166, align 4, !dbg !6375
  %conv175 = sext i32 %93 to i64, !dbg !6375
  %mul176 = mul i64 1, %conv175, !dbg !6375
  %94 = alloca i8, i64 %mul176, align 16, !dbg !6375
  store i8* %94, i8** %__s174, align 8, !dbg !6375
  %95 = load i8*, i8** %__s174, align 8, !dbg !6375
  %96 = load i32, i32* %__j166, align 4, !dbg !6375
  %conv177 = sext i32 %96 to i64, !dbg !6375
  %97 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6375
  %u178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !6375
  %fld179 = bitcast %union.u* %u178 to [1 x %union.rtunion_def]*, !dbg !6375
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i64 0, i64 0, !dbg !6375
  %rt_int181 = bitcast %union.rtunion_def* %arrayidx180 to i32*, !dbg !6375
  %98 = load i32, i32* %rt_int181, align 8, !dbg !6375
  %call182 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %95, i64 %conv177, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %98), !dbg !6375
  %99 = load i8*, i8** %__s174, align 8, !dbg !6375
  call void @sel_prepare_string_for_dot_label(i8* %99), !dbg !6375
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6375
  %101 = load i8*, i8** %__s174, align 8, !dbg !6375
  %call183 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %101), !dbg !6375
  br label %do.end184, !dbg !6375

do.end184:                                        ; preds = %do.body165
  br label %if.end191, !dbg !6375

if.else185:                                       ; preds = %do.body162
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6369
  %103 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6369
  %u186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !6369
  %fld187 = bitcast %union.u* %u186 to [1 x %union.rtunion_def]*, !dbg !6369
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i64 0, i64 0, !dbg !6369
  %rt_int189 = bitcast %union.rtunion_def* %arrayidx188 to i32*, !dbg !6369
  %104 = load i32, i32* %rt_int189, align 8, !dbg !6369
  %call190 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i32 %104), !dbg !6369
  br label %if.end191

if.end191:                                        ; preds = %if.else185, %do.end184
  br label %do.end192, !dbg !6372

do.end192:                                        ; preds = %if.end191
  br label %if.end193, !dbg !6372

if.end193:                                        ; preds = %do.end192, %if.then158
  br label %for.end, !dbg !6377

if.end194:                                        ; preds = %land.lhs.true, %if.end152
  %105 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6378
  %106 = bitcast %struct.rtx_def* %105 to i32*, !dbg !6378
  %bf.load = load i32, i32* %106, align 8, !dbg !6378
  %bf.clear = and i32 %bf.load, 65535, !dbg !6378
  %cmp195 = icmp eq i32 %bf.clear, 7, !dbg !6378
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !6380

if.then197:                                       ; preds = %if.end194
  br label %for.inc, !dbg !6381

if.end198:                                        ; preds = %if.end194
  %107 = load i32, i32* %end_ws, align 4, !dbg !6382
  %108 = load i32, i32* @max_ws, align 4, !dbg !6384
  %cmp199 = icmp sgt i32 %107, %108, !dbg !6385
  br i1 %cmp199, label %if.then201, label %if.end255, !dbg !6386

if.then201:                                       ; preds = %if.end198
  %109 = load i32, i32* @global_level, align 4, !dbg !6387
  %110 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6389
  %tobool202 = icmp ne %struct.VEC_sel_insn_data_def_heap* %110, null, !dbg !6389
  br i1 %tobool202, label %cond.true203, label %cond.false205, !dbg !6389

cond.true203:                                     ; preds = %if.then201
  %111 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6389
  %base204 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %111, i32 0, i32 0, !dbg !6389
  br label %cond.end206, !dbg !6389

cond.false205:                                    ; preds = %if.then201
  br label %cond.end206, !dbg !6389

cond.end206:                                      ; preds = %cond.false205, %cond.true203
  %cond207 = phi %struct.VEC_sel_insn_data_def_base* [ %base204, %cond.true203 ], [ null, %cond.false205 ], !dbg !6389
  %112 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6389
  %tobool208 = icmp ne %struct.VEC_int_heap* %112, null, !dbg !6389
  br i1 %tobool208, label %cond.true209, label %cond.false211, !dbg !6389

cond.true209:                                     ; preds = %cond.end206
  %113 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6389
  %base210 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %113, i32 0, i32 0, !dbg !6389
  br label %cond.end212, !dbg !6389

cond.false211:                                    ; preds = %cond.end206
  br label %cond.end212, !dbg !6389

cond.end212:                                      ; preds = %cond.false211, %cond.true209
  %cond213 = phi %struct.VEC_int_base* [ %base210, %cond.true209 ], [ null, %cond.false211 ], !dbg !6389
  %114 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6389
  %u214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1, !dbg !6389
  %fld215 = bitcast %union.u* %u214 to [1 x %union.rtunion_def]*, !dbg !6389
  %arrayidx216 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld215, i64 0, i64 0, !dbg !6389
  %rt_int217 = bitcast %union.rtunion_def* %arrayidx216 to i32*, !dbg !6389
  %115 = load i32, i32* %rt_int217, align 8, !dbg !6389
  %call218 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond213, i32 %115), !dbg !6389
  %call219 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond207, i32 %call218), !dbg !6389
  %ws_level = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call219, i32 0, i32 1, !dbg !6389
  store i32 %109, i32* %ws_level, align 8, !dbg !6390
  %116 = load i32, i32* @sched_verbose, align 4, !dbg !6391
  %cmp220 = icmp sge i32 %116, 6, !dbg !6393
  br i1 %cmp220, label %if.then222, label %if.end254, !dbg !6394

if.then222:                                       ; preds = %cond.end212
  br label %do.body223, !dbg !6395

do.body223:                                       ; preds = %if.then222
  %117 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6396
  %tobool224 = icmp ne i8 %117, 0, !dbg !6396
  br i1 %tobool224, label %if.then225, label %if.else246, !dbg !6399

if.then225:                                       ; preds = %do.body223
  br label %do.body226, !dbg !6396

do.body226:                                       ; preds = %if.then225
  call void @llvm.dbg.declare(metadata i32* %__j227, metadata !6400, metadata !DIExpression()), !dbg !6402
  %118 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6402
  %u228 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1, !dbg !6402
  %fld229 = bitcast %union.u* %u228 to [1 x %union.rtunion_def]*, !dbg !6402
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld229, i64 0, i64 0, !dbg !6402
  %rt_int231 = bitcast %union.rtunion_def* %arrayidx230 to i32*, !dbg !6402
  %119 = load i32, i32* %rt_int231, align 8, !dbg !6402
  %call232 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.33, i64 0, i64 0), i32 %119), !dbg !6402
  %mul233 = mul nsw i32 2, %call232, !dbg !6402
  %add234 = add nsw i32 1, %mul233, !dbg !6402
  store i32 %add234, i32* %__j227, align 4, !dbg !6402
  call void @llvm.dbg.declare(metadata i8** %__s235, metadata !6403, metadata !DIExpression()), !dbg !6402
  %120 = load i32, i32* %__j227, align 4, !dbg !6402
  %conv236 = sext i32 %120 to i64, !dbg !6402
  %mul237 = mul i64 1, %conv236, !dbg !6402
  %121 = alloca i8, i64 %mul237, align 16, !dbg !6402
  store i8* %121, i8** %__s235, align 8, !dbg !6402
  %122 = load i8*, i8** %__s235, align 8, !dbg !6402
  %123 = load i32, i32* %__j227, align 4, !dbg !6402
  %conv238 = sext i32 %123 to i64, !dbg !6402
  %124 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6402
  %u239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1, !dbg !6402
  %fld240 = bitcast %union.u* %u239 to [1 x %union.rtunion_def]*, !dbg !6402
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i64 0, i64 0, !dbg !6402
  %rt_int242 = bitcast %union.rtunion_def* %arrayidx241 to i32*, !dbg !6402
  %125 = load i32, i32* %rt_int242, align 8, !dbg !6402
  %call243 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %122, i64 %conv238, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.33, i64 0, i64 0), i32 %125), !dbg !6402
  %126 = load i8*, i8** %__s235, align 8, !dbg !6402
  call void @sel_prepare_string_for_dot_label(i8* %126), !dbg !6402
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6402
  %128 = load i8*, i8** %__s235, align 8, !dbg !6402
  %call244 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %128), !dbg !6402
  br label %do.end245, !dbg !6402

do.end245:                                        ; preds = %do.body226
  br label %if.end252, !dbg !6402

if.else246:                                       ; preds = %do.body223
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6396
  %130 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6396
  %u247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !6396
  %fld248 = bitcast %union.u* %u247 to [1 x %union.rtunion_def]*, !dbg !6396
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i64 0, i64 0, !dbg !6396
  %rt_int250 = bitcast %union.rtunion_def* %arrayidx249 to i32*, !dbg !6396
  %131 = load i32, i32* %rt_int250, align 8, !dbg !6396
  %call251 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %129, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.33, i64 0, i64 0), i32 %131), !dbg !6396
  br label %if.end252

if.end252:                                        ; preds = %if.else246, %do.end245
  br label %do.end253, !dbg !6399

do.end253:                                        ; preds = %if.end252
  br label %if.end254, !dbg !6399

if.end254:                                        ; preds = %do.end253, %cond.end212
  br label %for.end, !dbg !6404

if.end255:                                        ; preds = %if.end198
  %132 = load i32, i32* %end_ws, align 4, !dbg !6405
  %inc = add nsw i32 %132, 1, !dbg !6405
  store i32 %inc, i32* %end_ws, align 4, !dbg !6405
  br label %for.inc, !dbg !6406

for.inc:                                          ; preds = %if.end255, %if.then197
  %133 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6407
  %u256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1, !dbg !6407
  %fld257 = bitcast %union.u* %u256 to [1 x %union.rtunion_def]*, !dbg !6407
  %arrayidx258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld257, i64 0, i64 2, !dbg !6407
  %rt_rtx259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**, !dbg !6407
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx259, align 8, !dbg !6407
  store %struct.rtx_def* %134, %struct.rtx_def** %last_insn, align 8, !dbg !6408
  br label %for.cond, !dbg !6409, !llvm.loop !6410

for.end:                                          ; preds = %if.end254, %if.end193, %if.end151, %for.cond
  %135 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6412
  %136 = load %struct.rtx_def*, %struct.rtx_def** %after_bb_end, align 8, !dbg !6414
  %cmp260 = icmp ne %struct.rtx_def* %135, %136, !dbg !6415
  br i1 %cmp260, label %if.then262, label %if.else292, !dbg !6416

if.then262:                                       ; preds = %for.end
  store %struct._list_node* null, %struct._list_node** %av, align 8, !dbg !6417
  %137 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6419
  %138 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6421
  %cmp263 = icmp eq %struct.rtx_def* %137, %138, !dbg !6422
  br i1 %cmp263, label %land.lhs.true265, label %if.end291, !dbg !6423

land.lhs.true265:                                 ; preds = %if.then262
  %139 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6424
  %u266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1, !dbg !6424
  %fld267 = bitcast %union.u* %u266 to [1 x %union.rtunion_def]*, !dbg !6424
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i64 0, i64 5, !dbg !6424
  %rt_rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**, !dbg !6424
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx269, align 8, !dbg !6424
  %141 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !6424
  %cmp270 = icmp eq %struct.rtx_def* %140, %141, !dbg !6424
  br i1 %cmp270, label %if.end291, label %if.then272, !dbg !6425

if.then272:                                       ; preds = %land.lhs.true265
  %142 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6426
  %tobool273 = icmp ne %struct.VEC_sel_insn_data_def_heap* %142, null, !dbg !6426
  br i1 %tobool273, label %cond.true274, label %cond.false276, !dbg !6426

cond.true274:                                     ; preds = %if.then272
  %143 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6426
  %base275 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %143, i32 0, i32 0, !dbg !6426
  br label %cond.end277, !dbg !6426

cond.false276:                                    ; preds = %if.then272
  br label %cond.end277, !dbg !6426

cond.end277:                                      ; preds = %cond.false276, %cond.true274
  %cond278 = phi %struct.VEC_sel_insn_data_def_base* [ %base275, %cond.true274 ], [ null, %cond.false276 ], !dbg !6426
  %144 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6426
  %tobool279 = icmp ne %struct.VEC_int_heap* %144, null, !dbg !6426
  br i1 %tobool279, label %cond.true280, label %cond.false282, !dbg !6426

cond.true280:                                     ; preds = %cond.end277
  %145 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6426
  %base281 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %145, i32 0, i32 0, !dbg !6426
  br label %cond.end283, !dbg !6426

cond.false282:                                    ; preds = %cond.end277
  br label %cond.end283, !dbg !6426

cond.end283:                                      ; preds = %cond.false282, %cond.true280
  %cond284 = phi %struct.VEC_int_base* [ %base281, %cond.true280 ], [ null, %cond.false282 ], !dbg !6426
  %146 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6426
  %u285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1, !dbg !6426
  %fld286 = bitcast %union.u* %u285 to [1 x %union.rtunion_def]*, !dbg !6426
  %arrayidx287 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld286, i64 0, i64 0, !dbg !6426
  %rt_int288 = bitcast %union.rtunion_def* %arrayidx287 to i32*, !dbg !6426
  %147 = load i32, i32* %rt_int288, align 8, !dbg !6426
  %call289 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond284, i32 %147), !dbg !6426
  %call290 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond278, i32 %call289), !dbg !6426
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call290, i32 0, i32 0, !dbg !6426
  call void @av_set_add(%struct._list_node** %av, %struct._expr* %expr), !dbg !6427
  br label %if.end291, !dbg !6427

if.end291:                                        ; preds = %cond.end283, %land.lhs.true265, %if.then262
  br label %if.end294, !dbg !6428

if.else292:                                       ; preds = %for.end
  %148 = load %struct.rtx_def*, %struct.rtx_def** %bb_end, align 8, !dbg !6429
  %149 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !6430
  %150 = load i32, i32* %end_ws, align 4, !dbg !6431
  %call293 = call %struct._list_node* @compute_av_set_at_bb_end(%struct.rtx_def* %148, %struct._list_node* %149, i32 %150), !dbg !6432
  store %struct._list_node* %call293, %struct._list_node** %av, align 8, !dbg !6433
  br label %if.end294

if.end294:                                        ; preds = %if.else292, %if.end291
  %151 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !6434
  %u295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1, !dbg !6434
  %fld296 = bitcast %union.u* %u295 to [1 x %union.rtunion_def]*, !dbg !6434
  %arrayidx297 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld296, i64 0, i64 1, !dbg !6434
  %rt_rtx298 = bitcast %union.rtunion_def* %arrayidx297 to %struct.rtx_def**, !dbg !6434
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx298, align 8, !dbg !6434
  store %struct.rtx_def* %152, %struct.rtx_def** %cur_insn, align 8, !dbg !6436
  br label %for.cond299, !dbg !6437

for.cond299:                                      ; preds = %for.inc379, %if.end294
  %153 = load %struct.rtx_def*, %struct.rtx_def** %cur_insn, align 8, !dbg !6438
  %154 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6440
  %u300 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1, !dbg !6440
  %fld301 = bitcast %union.u* %u300 to [1 x %union.rtunion_def]*, !dbg !6440
  %arrayidx302 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld301, i64 0, i64 1, !dbg !6440
  %rt_rtx303 = bitcast %union.rtunion_def* %arrayidx302 to %struct.rtx_def**, !dbg !6440
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx303, align 8, !dbg !6440
  %cmp304 = icmp ne %struct.rtx_def* %153, %155, !dbg !6441
  br i1 %cmp304, label %for.body306, label %for.end384, !dbg !6442

for.body306:                                      ; preds = %for.cond299
  %156 = load %struct.rtx_def*, %struct.rtx_def** %cur_insn, align 8, !dbg !6443
  %u307 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1, !dbg !6443
  %fld308 = bitcast %union.u* %u307 to [1 x %union.rtunion_def]*, !dbg !6443
  %arrayidx309 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld308, i64 0, i64 5, !dbg !6443
  %rt_rtx310 = bitcast %union.rtunion_def* %arrayidx309 to %struct.rtx_def**, !dbg !6443
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx310, align 8, !dbg !6443
  %158 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !6443
  %cmp311 = icmp eq %struct.rtx_def* %157, %158, !dbg !6443
  br i1 %cmp311, label %if.end378, label %if.then313, !dbg !6445

if.then313:                                       ; preds = %for.body306
  call void @llvm.dbg.declare(metadata %struct._expr** %expr314, metadata !6446, metadata !DIExpression()), !dbg !6448
  %159 = load %struct.rtx_def*, %struct.rtx_def** %cur_insn, align 8, !dbg !6449
  call void @moveup_set_expr(%struct._list_node** %av, %struct.rtx_def* %159, i8 zeroext 0), !dbg !6450
  %160 = load %struct._list_node*, %struct._list_node** %av, align 8, !dbg !6451
  %161 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6452
  %tobool315 = icmp ne %struct.VEC_sel_insn_data_def_heap* %161, null, !dbg !6452
  br i1 %tobool315, label %cond.true316, label %cond.false318, !dbg !6452

cond.true316:                                     ; preds = %if.then313
  %162 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6452
  %base317 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %162, i32 0, i32 0, !dbg !6452
  br label %cond.end319, !dbg !6452

cond.false318:                                    ; preds = %if.then313
  br label %cond.end319, !dbg !6452

cond.end319:                                      ; preds = %cond.false318, %cond.true316
  %cond320 = phi %struct.VEC_sel_insn_data_def_base* [ %base317, %cond.true316 ], [ null, %cond.false318 ], !dbg !6452
  %163 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6452
  %tobool321 = icmp ne %struct.VEC_int_heap* %163, null, !dbg !6452
  br i1 %tobool321, label %cond.true322, label %cond.false324, !dbg !6452

cond.true322:                                     ; preds = %cond.end319
  %164 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6452
  %base323 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %164, i32 0, i32 0, !dbg !6452
  br label %cond.end325, !dbg !6452

cond.false324:                                    ; preds = %cond.end319
  br label %cond.end325, !dbg !6452

cond.end325:                                      ; preds = %cond.false324, %cond.true322
  %cond326 = phi %struct.VEC_int_base* [ %base323, %cond.true322 ], [ null, %cond.false324 ], !dbg !6452
  %165 = load %struct.rtx_def*, %struct.rtx_def** %cur_insn, align 8, !dbg !6452
  %u327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1, !dbg !6452
  %fld328 = bitcast %union.u* %u327 to [1 x %union.rtunion_def]*, !dbg !6452
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld328, i64 0, i64 0, !dbg !6452
  %rt_int330 = bitcast %union.rtunion_def* %arrayidx329 to i32*, !dbg !6452
  %166 = load i32, i32* %rt_int330, align 8, !dbg !6452
  %call331 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond326, i32 %166), !dbg !6452
  %call332 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond320, i32 %call331), !dbg !6452
  %expr333 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call332, i32 0, i32 0, !dbg !6452
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr333, i32 0, i32 0, !dbg !6452
  %167 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6452
  %call334 = call %struct._expr* @av_set_lookup(%struct._list_node* %160, %struct.vinsn_def* %167), !dbg !6453
  store %struct._expr* %call334, %struct._expr** %expr314, align 8, !dbg !6454
  %168 = load %struct._expr*, %struct._expr** %expr314, align 8, !dbg !6455
  %cmp335 = icmp ne %struct._expr* %168, null, !dbg !6457
  br i1 %cmp335, label %if.then337, label %if.else357, !dbg !6458

if.then337:                                       ; preds = %cond.end325
  %169 = load %struct._expr*, %struct._expr** %expr314, align 8, !dbg !6459
  call void @clear_expr(%struct._expr* %169), !dbg !6461
  %170 = load %struct._expr*, %struct._expr** %expr314, align 8, !dbg !6462
  %171 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6463
  %tobool338 = icmp ne %struct.VEC_sel_insn_data_def_heap* %171, null, !dbg !6463
  br i1 %tobool338, label %cond.true339, label %cond.false341, !dbg !6463

cond.true339:                                     ; preds = %if.then337
  %172 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6463
  %base340 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %172, i32 0, i32 0, !dbg !6463
  br label %cond.end342, !dbg !6463

cond.false341:                                    ; preds = %if.then337
  br label %cond.end342, !dbg !6463

cond.end342:                                      ; preds = %cond.false341, %cond.true339
  %cond343 = phi %struct.VEC_sel_insn_data_def_base* [ %base340, %cond.true339 ], [ null, %cond.false341 ], !dbg !6463
  %173 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6463
  %tobool344 = icmp ne %struct.VEC_int_heap* %173, null, !dbg !6463
  br i1 %tobool344, label %cond.true345, label %cond.false347, !dbg !6463

cond.true345:                                     ; preds = %cond.end342
  %174 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6463
  %base346 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %174, i32 0, i32 0, !dbg !6463
  br label %cond.end348, !dbg !6463

cond.false347:                                    ; preds = %cond.end342
  br label %cond.end348, !dbg !6463

cond.end348:                                      ; preds = %cond.false347, %cond.true345
  %cond349 = phi %struct.VEC_int_base* [ %base346, %cond.true345 ], [ null, %cond.false347 ], !dbg !6463
  %175 = load %struct.rtx_def*, %struct.rtx_def** %cur_insn, align 8, !dbg !6463
  %u350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1, !dbg !6463
  %fld351 = bitcast %union.u* %u350 to [1 x %union.rtunion_def]*, !dbg !6463
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i64 0, i64 0, !dbg !6463
  %rt_int353 = bitcast %union.rtunion_def* %arrayidx352 to i32*, !dbg !6463
  %176 = load i32, i32* %rt_int353, align 8, !dbg !6463
  %call354 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond349, i32 %176), !dbg !6463
  %call355 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond343, i32 %call354), !dbg !6463
  %expr356 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call355, i32 0, i32 0, !dbg !6463
  call void @copy_expr(%struct._expr* %170, %struct._expr* %expr356), !dbg !6464
  br label %if.end377, !dbg !6465

if.else357:                                       ; preds = %cond.end325
  %177 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6466
  %tobool358 = icmp ne %struct.VEC_sel_insn_data_def_heap* %177, null, !dbg !6466
  br i1 %tobool358, label %cond.true359, label %cond.false361, !dbg !6466

cond.true359:                                     ; preds = %if.else357
  %178 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6466
  %base360 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %178, i32 0, i32 0, !dbg !6466
  br label %cond.end362, !dbg !6466

cond.false361:                                    ; preds = %if.else357
  br label %cond.end362, !dbg !6466

cond.end362:                                      ; preds = %cond.false361, %cond.true359
  %cond363 = phi %struct.VEC_sel_insn_data_def_base* [ %base360, %cond.true359 ], [ null, %cond.false361 ], !dbg !6466
  %179 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6466
  %tobool364 = icmp ne %struct.VEC_int_heap* %179, null, !dbg !6466
  br i1 %tobool364, label %cond.true365, label %cond.false367, !dbg !6466

cond.true365:                                     ; preds = %cond.end362
  %180 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6466
  %base366 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %180, i32 0, i32 0, !dbg !6466
  br label %cond.end368, !dbg !6466

cond.false367:                                    ; preds = %cond.end362
  br label %cond.end368, !dbg !6466

cond.end368:                                      ; preds = %cond.false367, %cond.true365
  %cond369 = phi %struct.VEC_int_base* [ %base366, %cond.true365 ], [ null, %cond.false367 ], !dbg !6466
  %181 = load %struct.rtx_def*, %struct.rtx_def** %cur_insn, align 8, !dbg !6466
  %u370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1, !dbg !6466
  %fld371 = bitcast %union.u* %u370 to [1 x %union.rtunion_def]*, !dbg !6466
  %arrayidx372 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i64 0, i64 0, !dbg !6466
  %rt_int373 = bitcast %union.rtunion_def* %arrayidx372 to i32*, !dbg !6466
  %182 = load i32, i32* %rt_int373, align 8, !dbg !6466
  %call374 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond369, i32 %182), !dbg !6466
  %call375 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond363, i32 %call374), !dbg !6466
  %expr376 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call375, i32 0, i32 0, !dbg !6466
  call void @av_set_add(%struct._list_node** %av, %struct._expr* %expr376), !dbg !6467
  br label %if.end377

if.end377:                                        ; preds = %cond.end368, %cond.end348
  br label %if.end378, !dbg !6468

if.end378:                                        ; preds = %if.end377, %for.body306
  br label %for.inc379, !dbg !6443

for.inc379:                                       ; preds = %if.end378
  %183 = load %struct.rtx_def*, %struct.rtx_def** %cur_insn, align 8, !dbg !6469
  %u380 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1, !dbg !6469
  %fld381 = bitcast %union.u* %u380 to [1 x %union.rtunion_def]*, !dbg !6469
  %arrayidx382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld381, i64 0, i64 1, !dbg !6469
  %rt_rtx383 = bitcast %union.rtunion_def* %arrayidx382 to %struct.rtx_def**, !dbg !6469
  %184 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx383, align 8, !dbg !6469
  store %struct.rtx_def* %184, %struct.rtx_def** %cur_insn, align 8, !dbg !6470
  br label %for.cond299, !dbg !6471, !llvm.loop !6472

for.end384:                                       ; preds = %for.cond299
  %185 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6474
  %call385 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %185), !dbg !6476
  %tobool386 = icmp ne i8 %call385, 0, !dbg !6476
  br i1 %tobool386, label %if.then387, label %if.end421, !dbg !6477

if.then387:                                       ; preds = %for.end384
  %186 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6478
  %tobool388 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %186, null, !dbg !6478
  br i1 %tobool388, label %cond.true389, label %cond.false391, !dbg !6478

cond.true389:                                     ; preds = %if.then387
  %187 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6478
  %base390 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %187, i32 0, i32 0, !dbg !6478
  br label %cond.end392, !dbg !6478

cond.false391:                                    ; preds = %if.then387
  br label %cond.end392, !dbg !6478

cond.end392:                                      ; preds = %cond.false391, %cond.true389
  %cond393 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base390, %cond.true389 ], [ null, %cond.false391 ], !dbg !6478
  %188 = load %struct.basic_block_def*, %struct.basic_block_def** %cur_bb, align 8, !dbg !6478
  %index394 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %188, i32 0, i32 9, !dbg !6478
  %189 = load i32, i32* %index394, align 8, !dbg !6478
  %call395 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond393, i32 %189), !dbg !6478
  %av_set396 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call395, i32 0, i32 1, !dbg !6478
  call void @av_set_clear(%struct._list_node** %av_set396), !dbg !6480
  %190 = load i8, i8* %need_copy_p.addr, align 1, !dbg !6481
  %conv397 = zext i8 %190 to i32, !dbg !6481
  %tobool398 = icmp ne i32 %conv397, 0, !dbg !6481
  br i1 %tobool398, label %cond.true399, label %cond.false401, !dbg !6481

cond.true399:                                     ; preds = %cond.end392
  %191 = load %struct._list_node*, %struct._list_node** %av, align 8, !dbg !6482
  %call400 = call %struct._list_node* @av_set_copy(%struct._list_node* %191), !dbg !6483
  br label %cond.end402, !dbg !6481

cond.false401:                                    ; preds = %cond.end392
  %192 = load %struct._list_node*, %struct._list_node** %av, align 8, !dbg !6484
  br label %cond.end402, !dbg !6481

cond.end402:                                      ; preds = %cond.false401, %cond.true399
  %cond403 = phi %struct._list_node* [ %call400, %cond.true399 ], [ %192, %cond.false401 ], !dbg !6481
  %193 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6485
  %tobool404 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %193, null, !dbg !6485
  br i1 %tobool404, label %cond.true405, label %cond.false407, !dbg !6485

cond.true405:                                     ; preds = %cond.end402
  %194 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6485
  %base406 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %194, i32 0, i32 0, !dbg !6485
  br label %cond.end408, !dbg !6485

cond.false407:                                    ; preds = %cond.end402
  br label %cond.end408, !dbg !6485

cond.end408:                                      ; preds = %cond.false407, %cond.true405
  %cond409 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base406, %cond.true405 ], [ null, %cond.false407 ], !dbg !6485
  %195 = load %struct.basic_block_def*, %struct.basic_block_def** %cur_bb, align 8, !dbg !6485
  %index410 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %195, i32 0, i32 9, !dbg !6485
  %196 = load i32, i32* %index410, align 8, !dbg !6485
  %call411 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond409, i32 %196), !dbg !6485
  %av_set412 = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call411, i32 0, i32 1, !dbg !6485
  store %struct._list_node* %cond403, %struct._list_node** %av_set412, align 8, !dbg !6486
  %197 = load i32, i32* @global_level, align 4, !dbg !6487
  %198 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6488
  %tobool413 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %198, null, !dbg !6488
  br i1 %tobool413, label %cond.true414, label %cond.false416, !dbg !6488

cond.true414:                                     ; preds = %cond.end408
  %199 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6488
  %base415 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %199, i32 0, i32 0, !dbg !6488
  br label %cond.end417, !dbg !6488

cond.false416:                                    ; preds = %cond.end408
  br label %cond.end417, !dbg !6488

cond.end417:                                      ; preds = %cond.false416, %cond.true414
  %cond418 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base415, %cond.true414 ], [ null, %cond.false416 ], !dbg !6488
  %200 = load %struct.basic_block_def*, %struct.basic_block_def** %cur_bb, align 8, !dbg !6488
  %index419 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %200, i32 0, i32 9, !dbg !6488
  %201 = load i32, i32* %index419, align 8, !dbg !6488
  %call420 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond418, i32 %201), !dbg !6488
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call420, i32 0, i32 2, !dbg !6488
  store i32 %197, i32* %av_level, align 8, !dbg !6489
  br label %if.end421, !dbg !6490

if.end421:                                        ; preds = %cond.end417, %for.end384
  %202 = load i32, i32* @sched_verbose, align 4, !dbg !6491
  %cmp422 = icmp sge i32 %202, 6, !dbg !6493
  br i1 %cmp422, label %if.then424, label %if.end475, !dbg !6494

if.then424:                                       ; preds = %if.end421
  br label %do.body425, !dbg !6495

do.body425:                                       ; preds = %if.then424
  %203 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6497
  %tobool426 = icmp ne i8 %203, 0, !dbg !6497
  br i1 %tobool426, label %if.then427, label %if.else448, !dbg !6500

if.then427:                                       ; preds = %do.body425
  br label %do.body428, !dbg !6497

do.body428:                                       ; preds = %if.then427
  call void @llvm.dbg.declare(metadata i32* %__j429, metadata !6501, metadata !DIExpression()), !dbg !6503
  %204 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6503
  %u430 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1, !dbg !6503
  %fld431 = bitcast %union.u* %u430 to [1 x %union.rtunion_def]*, !dbg !6503
  %arrayidx432 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld431, i64 0, i64 0, !dbg !6503
  %rt_int433 = bitcast %union.rtunion_def* %arrayidx432 to i32*, !dbg !6503
  %205 = load i32, i32* %rt_int433, align 8, !dbg !6503
  %call434 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0), i32 %205), !dbg !6503
  %mul435 = mul nsw i32 2, %call434, !dbg !6503
  %add436 = add nsw i32 1, %mul435, !dbg !6503
  store i32 %add436, i32* %__j429, align 4, !dbg !6503
  call void @llvm.dbg.declare(metadata i8** %__s437, metadata !6504, metadata !DIExpression()), !dbg !6503
  %206 = load i32, i32* %__j429, align 4, !dbg !6503
  %conv438 = sext i32 %206 to i64, !dbg !6503
  %mul439 = mul i64 1, %conv438, !dbg !6503
  %207 = alloca i8, i64 %mul439, align 16, !dbg !6503
  store i8* %207, i8** %__s437, align 8, !dbg !6503
  %208 = load i8*, i8** %__s437, align 8, !dbg !6503
  %209 = load i32, i32* %__j429, align 4, !dbg !6503
  %conv440 = sext i32 %209 to i64, !dbg !6503
  %210 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6503
  %u441 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1, !dbg !6503
  %fld442 = bitcast %union.u* %u441 to [1 x %union.rtunion_def]*, !dbg !6503
  %arrayidx443 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld442, i64 0, i64 0, !dbg !6503
  %rt_int444 = bitcast %union.rtunion_def* %arrayidx443 to i32*, !dbg !6503
  %211 = load i32, i32* %rt_int444, align 8, !dbg !6503
  %call445 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %208, i64 %conv440, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0), i32 %211), !dbg !6503
  %212 = load i8*, i8** %__s437, align 8, !dbg !6503
  call void @sel_prepare_string_for_dot_label(i8* %212), !dbg !6503
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6503
  %214 = load i8*, i8** %__s437, align 8, !dbg !6503
  %call446 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %213, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %214), !dbg !6503
  br label %do.end447, !dbg !6503

do.end447:                                        ; preds = %do.body428
  br label %if.end454, !dbg !6503

if.else448:                                       ; preds = %do.body425
  %215 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6497
  %216 = load %struct.rtx_def*, %struct.rtx_def** %first_insn.addr, align 8, !dbg !6497
  %u449 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1, !dbg !6497
  %fld450 = bitcast %union.u* %u449 to [1 x %union.rtunion_def]*, !dbg !6497
  %arrayidx451 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld450, i64 0, i64 0, !dbg !6497
  %rt_int452 = bitcast %union.rtunion_def* %arrayidx451 to i32*, !dbg !6497
  %217 = load i32, i32* %rt_int452, align 8, !dbg !6497
  %call453 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %215, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0), i32 %217), !dbg !6497
  br label %if.end454

if.end454:                                        ; preds = %if.else448, %do.end447
  br label %do.end455, !dbg !6500

do.end455:                                        ; preds = %if.end454
  %218 = load %struct._list_node*, %struct._list_node** %av, align 8, !dbg !6505
  call void @dump_av_set(%struct._list_node* %218), !dbg !6506
  br label %do.body456, !dbg !6507

do.body456:                                       ; preds = %do.end455
  %219 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6508
  %tobool457 = icmp ne i8 %219, 0, !dbg !6508
  br i1 %tobool457, label %if.then458, label %if.else471, !dbg !6511

if.then458:                                       ; preds = %do.body456
  br label %do.body459, !dbg !6508

do.body459:                                       ; preds = %if.then458
  call void @llvm.dbg.declare(metadata i32* %__j460, metadata !6512, metadata !DIExpression()), !dbg !6514
  %call461 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6514
  %mul462 = mul nsw i32 2, %call461, !dbg !6514
  %add463 = add nsw i32 1, %mul462, !dbg !6514
  store i32 %add463, i32* %__j460, align 4, !dbg !6514
  call void @llvm.dbg.declare(metadata i8** %__s464, metadata !6515, metadata !DIExpression()), !dbg !6514
  %220 = load i32, i32* %__j460, align 4, !dbg !6514
  %conv465 = sext i32 %220 to i64, !dbg !6514
  %mul466 = mul i64 1, %conv465, !dbg !6514
  %221 = alloca i8, i64 %mul466, align 16, !dbg !6514
  store i8* %221, i8** %__s464, align 8, !dbg !6514
  %222 = load i8*, i8** %__s464, align 8, !dbg !6514
  %223 = load i32, i32* %__j460, align 4, !dbg !6514
  %conv467 = sext i32 %223 to i64, !dbg !6514
  %call468 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %222, i64 %conv467, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6514
  %224 = load i8*, i8** %__s464, align 8, !dbg !6514
  call void @sel_prepare_string_for_dot_label(i8* %224), !dbg !6514
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6514
  %226 = load i8*, i8** %__s464, align 8, !dbg !6514
  %call469 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %225, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %226), !dbg !6514
  br label %do.end470, !dbg !6514

do.end470:                                        ; preds = %do.body459
  br label %if.end473, !dbg !6514

if.else471:                                       ; preds = %do.body456
  %227 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6508
  %call472 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %227, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6508
  br label %if.end473

if.end473:                                        ; preds = %if.else471, %do.end470
  br label %do.end474, !dbg !6511

do.end474:                                        ; preds = %if.end473
  br label %if.end475, !dbg !6516

if.end475:                                        ; preds = %do.end474, %if.end421
  call void @_list_remove(%struct._list_node** %p.addr), !dbg !6517
  %228 = load %struct._list_node*, %struct._list_node** %av, align 8, !dbg !6518
  store %struct._list_node* %228, %struct._list_node** %retval, align 8, !dbg !6519
  br label %return, !dbg !6519

return:                                           ; preds = %if.end475, %cond.end108, %if.end31
  %229 = load %struct._list_node*, %struct._list_node** %retval, align 8, !dbg !6520
  ret %struct._list_node* %229, !dbg !6520
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_ineligible_successor(%struct.rtx_def* %insn, %struct._list_node* %p) #0 !dbg !6521 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %p.addr = alloca %struct._list_node*, align 8
  %prev_insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6524, metadata !DIExpression()), !dbg !6525
  store %struct._list_node* %p, %struct._list_node** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %p.addr, metadata !6526, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev_insn, metadata !6528, metadata !DIExpression()), !dbg !6529
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6530
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !6530
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6530
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !6530
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6530
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6530
  %tobool = icmp ne %struct.rtx_def* %1, null, !dbg !6530
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6532

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6533
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !6533
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !6533
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !6533
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !6533
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !6533
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !6533
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !6533
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 2, !dbg !6533
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !6533
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !6533
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6534
  %cmp = icmp ne %struct.rtx_def* %4, %5, !dbg !6535
  br i1 %cmp, label %if.then, label %if.else, !dbg !6536

if.then:                                          ; preds = %land.lhs.true
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2673, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6537
  br label %if.end25, !dbg !6537

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6538
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !6538
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !6538
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 2, !dbg !6538
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !6538
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !6538
  %tobool13 = icmp ne %struct.rtx_def* %7, null, !dbg !6538
  br i1 %tobool13, label %land.lhs.true14, label %if.end, !dbg !6540

land.lhs.true14:                                  ; preds = %if.else
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6541
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !6541
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !6541
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 2, !dbg !6541
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !6541
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !6541
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !6541
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !6541
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 1, !dbg !6541
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !6541
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !6541
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6542
  %cmp23 = icmp ne %struct.rtx_def* %10, %11, !dbg !6543
  br i1 %cmp23, label %if.then24, label %if.end, !dbg !6544

if.then24:                                        ; preds = %land.lhs.true14
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2675, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6545
  br label %if.end, !dbg !6545

if.end:                                           ; preds = %if.then24, %land.lhs.true14, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then
  %12 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !6546
  %tobool26 = icmp ne %struct._list_node* %12, null, !dbg !6546
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !6548

if.then27:                                        ; preds = %if.end25
  store i8 0, i8* %retval, align 1, !dbg !6549
  br label %return, !dbg !6549

if.end28:                                         ; preds = %if.end25
  %13 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !6550
  %u29 = getelementptr inbounds %struct._list_node, %struct._list_node* %13, i32 0, i32 1, !dbg !6550
  %x = bitcast %union.anon.0* %u29 to %struct.rtx_def**, !dbg !6550
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6550
  store %struct.rtx_def* %14, %struct.rtx_def** %prev_insn, align 8, !dbg !6551
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6552
  %tobool30 = icmp ne %struct.VEC_sel_insn_data_def_heap* %15, null, !dbg !6552
  br i1 %tobool30, label %cond.true, label %cond.false, !dbg !6552

cond.true:                                        ; preds = %if.end28
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6552
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %16, i32 0, i32 0, !dbg !6552
  br label %cond.end, !dbg !6552

cond.false:                                       ; preds = %if.end28
  br label %cond.end, !dbg !6552

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !6552
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6552
  %tobool31 = icmp ne %struct.VEC_int_heap* %17, null, !dbg !6552
  br i1 %tobool31, label %cond.true32, label %cond.false34, !dbg !6552

cond.true32:                                      ; preds = %cond.end
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6552
  %base33 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i32 0, i32 0, !dbg !6552
  br label %cond.end35, !dbg !6552

cond.false34:                                     ; preds = %cond.end
  br label %cond.end35, !dbg !6552

cond.end35:                                       ; preds = %cond.false34, %cond.true32
  %cond36 = phi %struct.VEC_int_base* [ %base33, %cond.true32 ], [ null, %cond.false34 ], !dbg !6552
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6552
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !6552
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !6552
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 0, !dbg !6552
  %rt_int = bitcast %union.rtunion_def* %arrayidx39 to i32*, !dbg !6552
  %20 = load i32, i32* %rt_int, align 8, !dbg !6552
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond36, i32 %20), !dbg !6552
  %call40 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !6552
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call40, i32 0, i32 2, !dbg !6552
  %21 = load i32, i32* %seqno, align 4, !dbg !6552
  %22 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6554
  %tobool41 = icmp ne %struct.VEC_sel_insn_data_def_heap* %22, null, !dbg !6554
  br i1 %tobool41, label %cond.true42, label %cond.false44, !dbg !6554

cond.true42:                                      ; preds = %cond.end35
  %23 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6554
  %base43 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %23, i32 0, i32 0, !dbg !6554
  br label %cond.end45, !dbg !6554

cond.false44:                                     ; preds = %cond.end35
  br label %cond.end45, !dbg !6554

cond.end45:                                       ; preds = %cond.false44, %cond.true42
  %cond46 = phi %struct.VEC_sel_insn_data_def_base* [ %base43, %cond.true42 ], [ null, %cond.false44 ], !dbg !6554
  %24 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6554
  %tobool47 = icmp ne %struct.VEC_int_heap* %24, null, !dbg !6554
  br i1 %tobool47, label %cond.true48, label %cond.false50, !dbg !6554

cond.true48:                                      ; preds = %cond.end45
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6554
  %base49 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %25, i32 0, i32 0, !dbg !6554
  br label %cond.end51, !dbg !6554

cond.false50:                                     ; preds = %cond.end45
  br label %cond.end51, !dbg !6554

cond.end51:                                       ; preds = %cond.false50, %cond.true48
  %cond52 = phi %struct.VEC_int_base* [ %base49, %cond.true48 ], [ null, %cond.false50 ], !dbg !6554
  %26 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !6554
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !6554
  %fld54 = bitcast %union.u* %u53 to [1 x %union.rtunion_def]*, !dbg !6554
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i64 0, i64 0, !dbg !6554
  %rt_int56 = bitcast %union.rtunion_def* %arrayidx55 to i32*, !dbg !6554
  %27 = load i32, i32* %rt_int56, align 8, !dbg !6554
  %call57 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond52, i32 %27), !dbg !6554
  %call58 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond46, i32 %call57), !dbg !6554
  %seqno59 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call58, i32 0, i32 2, !dbg !6554
  %28 = load i32, i32* %seqno59, align 4, !dbg !6554
  %cmp60 = icmp slt i32 %21, %28, !dbg !6555
  br i1 %cmp60, label %if.then175, label %lor.lhs.false, !dbg !6556

lor.lhs.false:                                    ; preds = %cond.end51
  %29 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6557
  %tobool61 = icmp ne %struct.VEC_sel_insn_data_def_heap* %29, null, !dbg !6557
  br i1 %tobool61, label %cond.true62, label %cond.false64, !dbg !6557

cond.true62:                                      ; preds = %lor.lhs.false
  %30 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6557
  %base63 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %30, i32 0, i32 0, !dbg !6557
  br label %cond.end65, !dbg !6557

cond.false64:                                     ; preds = %lor.lhs.false
  br label %cond.end65, !dbg !6557

cond.end65:                                       ; preds = %cond.false64, %cond.true62
  %cond66 = phi %struct.VEC_sel_insn_data_def_base* [ %base63, %cond.true62 ], [ null, %cond.false64 ], !dbg !6557
  %31 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6557
  %tobool67 = icmp ne %struct.VEC_int_heap* %31, null, !dbg !6557
  br i1 %tobool67, label %cond.true68, label %cond.false70, !dbg !6557

cond.true68:                                      ; preds = %cond.end65
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6557
  %base69 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %32, i32 0, i32 0, !dbg !6557
  br label %cond.end71, !dbg !6557

cond.false70:                                     ; preds = %cond.end65
  br label %cond.end71, !dbg !6557

cond.end71:                                       ; preds = %cond.false70, %cond.true68
  %cond72 = phi %struct.VEC_int_base* [ %base69, %cond.true68 ], [ null, %cond.false70 ], !dbg !6557
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6557
  %u73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !6557
  %fld74 = bitcast %union.u* %u73 to [1 x %union.rtunion_def]*, !dbg !6557
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i64 0, i64 0, !dbg !6557
  %rt_int76 = bitcast %union.rtunion_def* %arrayidx75 to i32*, !dbg !6557
  %34 = load i32, i32* %rt_int76, align 8, !dbg !6557
  %call77 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond72, i32 %34), !dbg !6557
  %call78 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond66, i32 %call77), !dbg !6557
  %seqno79 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call78, i32 0, i32 2, !dbg !6557
  %35 = load i32, i32* %seqno79, align 4, !dbg !6557
  %36 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6558
  %tobool80 = icmp ne %struct.VEC_sel_insn_data_def_heap* %36, null, !dbg !6558
  br i1 %tobool80, label %cond.true81, label %cond.false83, !dbg !6558

cond.true81:                                      ; preds = %cond.end71
  %37 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6558
  %base82 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %37, i32 0, i32 0, !dbg !6558
  br label %cond.end84, !dbg !6558

cond.false83:                                     ; preds = %cond.end71
  br label %cond.end84, !dbg !6558

cond.end84:                                       ; preds = %cond.false83, %cond.true81
  %cond85 = phi %struct.VEC_sel_insn_data_def_base* [ %base82, %cond.true81 ], [ null, %cond.false83 ], !dbg !6558
  %38 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6558
  %tobool86 = icmp ne %struct.VEC_int_heap* %38, null, !dbg !6558
  br i1 %tobool86, label %cond.true87, label %cond.false89, !dbg !6558

cond.true87:                                      ; preds = %cond.end84
  %39 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6558
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %39, i32 0, i32 0, !dbg !6558
  br label %cond.end90, !dbg !6558

cond.false89:                                     ; preds = %cond.end84
  br label %cond.end90, !dbg !6558

cond.end90:                                       ; preds = %cond.false89, %cond.true87
  %cond91 = phi %struct.VEC_int_base* [ %base88, %cond.true87 ], [ null, %cond.false89 ], !dbg !6558
  %40 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !6558
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !6558
  %fld93 = bitcast %union.u* %u92 to [1 x %union.rtunion_def]*, !dbg !6558
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i64 0, i64 0, !dbg !6558
  %rt_int95 = bitcast %union.rtunion_def* %arrayidx94 to i32*, !dbg !6558
  %41 = load i32, i32* %rt_int95, align 8, !dbg !6558
  %call96 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond91, i32 %41), !dbg !6558
  %call97 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond85, i32 %call96), !dbg !6558
  %seqno98 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call97, i32 0, i32 2, !dbg !6558
  %42 = load i32, i32* %seqno98, align 4, !dbg !6558
  %cmp99 = icmp eq i32 %35, %42, !dbg !6559
  br i1 %cmp99, label %land.lhs.true100, label %lor.lhs.false107, !dbg !6560

land.lhs.true100:                                 ; preds = %cond.end90
  %43 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !6561
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6561
  %call101 = call zeroext i8 @_xlist_is_in_p(%struct._list_node* %43, %struct.rtx_def* %44), !dbg !6561
  %conv = zext i8 %call101 to i32, !dbg !6561
  %tobool102 = icmp ne i32 %conv, 0, !dbg !6561
  br i1 %tobool102, label %if.then175, label %lor.lhs.false103, !dbg !6562

lor.lhs.false103:                                 ; preds = %land.lhs.true100
  %45 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !6563
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6563
  %call104 = call %struct._fence* @flist_lookup(%struct._list_node* %45, %struct.rtx_def* %46), !dbg !6563
  %cmp105 = icmp ne %struct._fence* %call104, null, !dbg !6563
  br i1 %cmp105, label %if.then175, label %lor.lhs.false107, !dbg !6564

lor.lhs.false107:                                 ; preds = %lor.lhs.false103, %cond.end90
  %47 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6565
  %tobool108 = icmp ne %struct.VEC_sel_insn_data_def_heap* %47, null, !dbg !6565
  br i1 %tobool108, label %cond.true109, label %cond.false111, !dbg !6565

cond.true109:                                     ; preds = %lor.lhs.false107
  %48 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6565
  %base110 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %48, i32 0, i32 0, !dbg !6565
  br label %cond.end112, !dbg !6565

cond.false111:                                    ; preds = %lor.lhs.false107
  br label %cond.end112, !dbg !6565

cond.end112:                                      ; preds = %cond.false111, %cond.true109
  %cond113 = phi %struct.VEC_sel_insn_data_def_base* [ %base110, %cond.true109 ], [ null, %cond.false111 ], !dbg !6565
  %49 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6565
  %tobool114 = icmp ne %struct.VEC_int_heap* %49, null, !dbg !6565
  br i1 %tobool114, label %cond.true115, label %cond.false117, !dbg !6565

cond.true115:                                     ; preds = %cond.end112
  %50 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6565
  %base116 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %50, i32 0, i32 0, !dbg !6565
  br label %cond.end118, !dbg !6565

cond.false117:                                    ; preds = %cond.end112
  br label %cond.end118, !dbg !6565

cond.end118:                                      ; preds = %cond.false117, %cond.true115
  %cond119 = phi %struct.VEC_int_base* [ %base116, %cond.true115 ], [ null, %cond.false117 ], !dbg !6565
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6565
  %u120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !6565
  %fld121 = bitcast %union.u* %u120 to [1 x %union.rtunion_def]*, !dbg !6565
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i64 0, i64 0, !dbg !6565
  %rt_int123 = bitcast %union.rtunion_def* %arrayidx122 to i32*, !dbg !6565
  %52 = load i32, i32* %rt_int123, align 8, !dbg !6565
  %call124 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond119, i32 %52), !dbg !6565
  %call125 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond113, i32 %call124), !dbg !6565
  %seqno126 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call125, i32 0, i32 2, !dbg !6565
  %53 = load i32, i32* %seqno126, align 4, !dbg !6565
  %54 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6566
  %tobool127 = icmp ne %struct.VEC_sel_insn_data_def_heap* %54, null, !dbg !6566
  br i1 %tobool127, label %cond.true128, label %cond.false130, !dbg !6566

cond.true128:                                     ; preds = %cond.end118
  %55 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6566
  %base129 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %55, i32 0, i32 0, !dbg !6566
  br label %cond.end131, !dbg !6566

cond.false130:                                    ; preds = %cond.end118
  br label %cond.end131, !dbg !6566

cond.end131:                                      ; preds = %cond.false130, %cond.true128
  %cond132 = phi %struct.VEC_sel_insn_data_def_base* [ %base129, %cond.true128 ], [ null, %cond.false130 ], !dbg !6566
  %56 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6566
  %tobool133 = icmp ne %struct.VEC_int_heap* %56, null, !dbg !6566
  br i1 %tobool133, label %cond.true134, label %cond.false136, !dbg !6566

cond.true134:                                     ; preds = %cond.end131
  %57 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6566
  %base135 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %57, i32 0, i32 0, !dbg !6566
  br label %cond.end137, !dbg !6566

cond.false136:                                    ; preds = %cond.end131
  br label %cond.end137, !dbg !6566

cond.end137:                                      ; preds = %cond.false136, %cond.true134
  %cond138 = phi %struct.VEC_int_base* [ %base135, %cond.true134 ], [ null, %cond.false136 ], !dbg !6566
  %58 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !6566
  %u139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !6566
  %fld140 = bitcast %union.u* %u139 to [1 x %union.rtunion_def]*, !dbg !6566
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i64 0, i64 0, !dbg !6566
  %rt_int142 = bitcast %union.rtunion_def* %arrayidx141 to i32*, !dbg !6566
  %59 = load i32, i32* %rt_int142, align 8, !dbg !6566
  %call143 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond138, i32 %59), !dbg !6566
  %call144 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond132, i32 %call143), !dbg !6566
  %seqno145 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call144, i32 0, i32 2, !dbg !6566
  %60 = load i32, i32* %seqno145, align 4, !dbg !6566
  %cmp146 = icmp sgt i32 %53, %60, !dbg !6567
  br i1 %cmp146, label %land.lhs.true148, label %lor.lhs.false152, !dbg !6568

land.lhs.true148:                                 ; preds = %cond.end137
  %61 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !6569
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6569
  %call149 = call %struct._fence* @flist_lookup(%struct._list_node* %61, %struct.rtx_def* %62), !dbg !6569
  %cmp150 = icmp ne %struct._fence* %call149, null, !dbg !6569
  br i1 %cmp150, label %if.then175, label %lor.lhs.false152, !dbg !6570

lor.lhs.false152:                                 ; preds = %land.lhs.true148, %cond.end137
  %63 = load i8, i8* @pipelining_p, align 1, !dbg !6571
  %tobool153 = icmp ne i8 %63, 0, !dbg !6571
  br i1 %tobool153, label %if.else176, label %land.lhs.true154, !dbg !6572

land.lhs.true154:                                 ; preds = %lor.lhs.false152
  %64 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6573
  %tobool155 = icmp ne %struct.VEC_sel_insn_data_def_heap* %64, null, !dbg !6573
  br i1 %tobool155, label %cond.true156, label %cond.false158, !dbg !6573

cond.true156:                                     ; preds = %land.lhs.true154
  %65 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !6573
  %base157 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %65, i32 0, i32 0, !dbg !6573
  br label %cond.end159, !dbg !6573

cond.false158:                                    ; preds = %land.lhs.true154
  br label %cond.end159, !dbg !6573

cond.end159:                                      ; preds = %cond.false158, %cond.true156
  %cond160 = phi %struct.VEC_sel_insn_data_def_base* [ %base157, %cond.true156 ], [ null, %cond.false158 ], !dbg !6573
  %66 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6573
  %tobool161 = icmp ne %struct.VEC_int_heap* %66, null, !dbg !6573
  br i1 %tobool161, label %cond.true162, label %cond.false164, !dbg !6573

cond.true162:                                     ; preds = %cond.end159
  %67 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6573
  %base163 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %67, i32 0, i32 0, !dbg !6573
  br label %cond.end165, !dbg !6573

cond.false164:                                    ; preds = %cond.end159
  br label %cond.end165, !dbg !6573

cond.end165:                                      ; preds = %cond.false164, %cond.true162
  %cond166 = phi %struct.VEC_int_base* [ %base163, %cond.true162 ], [ null, %cond.false164 ], !dbg !6573
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6573
  %u167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !6573
  %fld168 = bitcast %union.u* %u167 to [1 x %union.rtunion_def]*, !dbg !6573
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i64 0, i64 0, !dbg !6573
  %rt_int170 = bitcast %union.rtunion_def* %arrayidx169 to i32*, !dbg !6573
  %69 = load i32, i32* %rt_int170, align 8, !dbg !6573
  %call171 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond166, i32 %69), !dbg !6573
  %call172 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond160, i32 %call171), !dbg !6573
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call172, i32 0, i32 0, !dbg !6573
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 5, !dbg !6573
  %70 = load i32, i32* %sched_times, align 8, !dbg !6573
  %cmp173 = icmp sgt i32 %70, 0, !dbg !6574
  br i1 %cmp173, label %if.then175, label %if.else176, !dbg !6575

if.then175:                                       ; preds = %cond.end165, %land.lhs.true148, %lor.lhs.false103, %land.lhs.true100, %cond.end51
  store i8 1, i8* %retval, align 1, !dbg !6576
  br label %return, !dbg !6576

if.else176:                                       ; preds = %cond.end165, %lor.lhs.false152
  store i8 0, i8* %retval, align 1, !dbg !6577
  br label %return, !dbg !6577

return:                                           ; preds = %if.else176, %if.then175, %if.then27
  %71 = load i8, i8* %retval, align 1, !dbg !6578
  ret i8 %71, !dbg !6578
}

declare dso_local void @dump_av_set(%struct._list_node*) #2

declare dso_local %struct._list_node* @av_set_copy(%struct._list_node*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_xlist_add(%struct._list_node** %lp, %struct.rtx_def* %x) #0 !dbg !6579 {
entry:
  %lp.addr = alloca %struct._list_node**, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct._list_node** %lp, %struct._list_node*** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %lp.addr, metadata !6583, metadata !DIExpression()), !dbg !6584
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6585, metadata !DIExpression()), !dbg !6586
  %0 = load %struct._list_node**, %struct._list_node*** %lp.addr, align 8, !dbg !6587
  call void @_list_add(%struct._list_node** %0), !dbg !6588
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6589
  %2 = load %struct._list_node**, %struct._list_node*** %lp.addr, align 8, !dbg !6590
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !6590
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %3, i32 0, i32 1, !dbg !6590
  %x1 = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !6590
  store %struct.rtx_def* %1, %struct.rtx_def** %x1, align 8, !dbg !6591
  ret void, !dbg !6592
}

declare dso_local void @av_set_add(%struct._list_node**, %struct._expr*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._list_node* @compute_av_set_at_bb_end(%struct.rtx_def* %insn, %struct._list_node* %p, i32 %ws) #0 !dbg !6593 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %p.addr = alloca %struct._list_node*, align 8
  %ws.addr = alloca i32, align 4
  %sinfo = alloca %struct.succs_info*, align 8
  %expr_in_all_succ_branches = alloca %struct._list_node*, align 8
  %is = alloca i32, align 4
  %succ = alloca %struct.rtx_def*, align 8
  %zero_succ = alloca %struct.rtx_def*, align 8
  %av1 = alloca %struct._list_node*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j24 = alloca i32, align 4
  %__s28 = alloca i8*, align 8
  %__j46 = alloca i32, align 4
  %__s51 = alloca i8*, align 8
  %succ_set = alloca %struct._list_node*, align 8
  %i = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  %bb0 = alloca %struct.basic_block_def*, align 8
  %bb1 = alloca %struct.basic_block_def*, align 8
  %succ_bb = alloca %struct.basic_block_def*, align 8
  %i254 = alloca %struct._list_iterator, align 8
  %expr255 = alloca %struct._expr*, align 8
  %__j277 = alloca i32, align 4
  %__s285 = alloca i8*, align 8
  %__j308 = alloca i32, align 4
  %__s312 = alloca i8*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  store %struct._list_node* %p, %struct._list_node** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %p.addr, metadata !6598, metadata !DIExpression()), !dbg !6599
  store i32 %ws, i32* %ws.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ws.addr, metadata !6600, metadata !DIExpression()), !dbg !6601
  call void @llvm.dbg.declare(metadata %struct.succs_info** %sinfo, metadata !6602, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.declare(metadata %struct._list_node** %expr_in_all_succ_branches, metadata !6625, metadata !DIExpression()), !dbg !6626
  store %struct._list_node* null, %struct._list_node** %expr_in_all_succ_branches, align 8, !dbg !6626
  call void @llvm.dbg.declare(metadata i32* %is, metadata !6627, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %succ, metadata !6629, metadata !DIExpression()), !dbg !6630
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %zero_succ, metadata !6631, metadata !DIExpression()), !dbg !6632
  store %struct.rtx_def* null, %struct.rtx_def** %zero_succ, align 8, !dbg !6632
  call void @llvm.dbg.declare(metadata %struct._list_node** %av1, metadata !6633, metadata !DIExpression()), !dbg !6634
  store %struct._list_node* null, %struct._list_node** %av1, align 8, !dbg !6634
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6635
  %call = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %0), !dbg !6635
  %tobool = icmp ne i8 %call, 0, !dbg !6635
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6635

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2720, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6635
  br label %cond.end, !dbg !6635

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6635

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6635
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6636
  %call1 = call %struct.succs_info* @compute_succs_info(%struct.rtx_def* %1, i16 signext 1), !dbg !6637
  store %struct.succs_info* %call1, %struct.succs_info** %sinfo, align 8, !dbg !6638
  %2 = load i32, i32* @sched_verbose, align 4, !dbg !6639
  %cmp = icmp sge i32 %2, 6, !dbg !6641
  br i1 %cmp, label %if.then, label %if.end65, !dbg !6642

if.then:                                          ; preds = %cond.end
  br label %do.body, !dbg !6643

do.body:                                          ; preds = %if.then
  %3 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6645
  %tobool2 = icmp ne i8 %3, 0, !dbg !6645
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !6648

if.then3:                                         ; preds = %do.body
  br label %do.body4, !dbg !6645

do.body4:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !6649, metadata !DIExpression()), !dbg !6651
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6651
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !6651
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6651
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6651
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6651
  %5 = load i32, i32* %rt_int, align 8, !dbg !6651
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i32 %5), !dbg !6651
  %mul = mul nsw i32 2, %call5, !dbg !6651
  %add = add nsw i32 1, %mul, !dbg !6651
  store i32 %add, i32* %__j, align 4, !dbg !6651
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !6652, metadata !DIExpression()), !dbg !6651
  %6 = load i32, i32* %__j, align 4, !dbg !6651
  %conv = sext i32 %6 to i64, !dbg !6651
  %mul6 = mul i64 1, %conv, !dbg !6651
  %7 = alloca i8, i64 %mul6, align 16, !dbg !6651
  store i8* %7, i8** %__s, align 8, !dbg !6651
  %8 = load i8*, i8** %__s, align 8, !dbg !6651
  %9 = load i32, i32* %__j, align 4, !dbg !6651
  %conv7 = sext i32 %9 to i64, !dbg !6651
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6651
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !6651
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !6651
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 0, !dbg !6651
  %rt_int11 = bitcast %union.rtunion_def* %arrayidx10 to i32*, !dbg !6651
  %11 = load i32, i32* %rt_int11, align 8, !dbg !6651
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 %conv7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i32 %11), !dbg !6651
  %12 = load i8*, i8** %__s, align 8, !dbg !6651
  call void @sel_prepare_string_for_dot_label(i8* %12), !dbg !6651
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6651
  %14 = load i8*, i8** %__s, align 8, !dbg !6651
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %14), !dbg !6651
  br label %do.end, !dbg !6651

do.end:                                           ; preds = %do.body4
  br label %if.end, !dbg !6651

if.else:                                          ; preds = %do.body
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6645
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6645
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !6645
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !6645
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 0, !dbg !6645
  %rt_int17 = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !6645
  %17 = load i32, i32* %rt_int17, align 8, !dbg !6645
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i32 %17), !dbg !6645
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end19, !dbg !6648

do.end19:                                         ; preds = %if.end
  %18 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6653
  %succs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %18, i32 0, i32 1, !dbg !6654
  %19 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_ok, align 8, !dbg !6654
  call void @dump_insn_vector(%struct.VEC_rtx_heap* %19), !dbg !6655
  br label %do.body20, !dbg !6656

do.body20:                                        ; preds = %do.end19
  %20 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6657
  %tobool21 = icmp ne i8 %20, 0, !dbg !6657
  br i1 %tobool21, label %if.then22, label %if.else35, !dbg !6660

if.then22:                                        ; preds = %do.body20
  br label %do.body23, !dbg !6657

do.body23:                                        ; preds = %if.then22
  call void @llvm.dbg.declare(metadata i32* %__j24, metadata !6661, metadata !DIExpression()), !dbg !6663
  %call25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6663
  %mul26 = mul nsw i32 2, %call25, !dbg !6663
  %add27 = add nsw i32 1, %mul26, !dbg !6663
  store i32 %add27, i32* %__j24, align 4, !dbg !6663
  call void @llvm.dbg.declare(metadata i8** %__s28, metadata !6664, metadata !DIExpression()), !dbg !6663
  %21 = load i32, i32* %__j24, align 4, !dbg !6663
  %conv29 = sext i32 %21 to i64, !dbg !6663
  %mul30 = mul i64 1, %conv29, !dbg !6663
  %22 = alloca i8, i64 %mul30, align 16, !dbg !6663
  store i8* %22, i8** %__s28, align 8, !dbg !6663
  %23 = load i8*, i8** %__s28, align 8, !dbg !6663
  %24 = load i32, i32* %__j24, align 4, !dbg !6663
  %conv31 = sext i32 %24 to i64, !dbg !6663
  %call32 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %23, i64 %conv31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6663
  %25 = load i8*, i8** %__s28, align 8, !dbg !6663
  call void @sel_prepare_string_for_dot_label(i8* %25), !dbg !6663
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6663
  %27 = load i8*, i8** %__s28, align 8, !dbg !6663
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %27), !dbg !6663
  br label %do.end34, !dbg !6663

do.end34:                                         ; preds = %do.body23
  br label %if.end37, !dbg !6663

if.else35:                                        ; preds = %do.body20
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6657
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6657
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %do.end34
  br label %do.end38, !dbg !6660

do.end38:                                         ; preds = %if.end37
  %29 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6665
  %succs_ok_n = getelementptr inbounds %struct.succs_info, %struct.succs_info* %29, i32 0, i32 6, !dbg !6667
  %30 = load i32, i32* %succs_ok_n, align 8, !dbg !6667
  %31 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6668
  %all_succs_n = getelementptr inbounds %struct.succs_info, %struct.succs_info* %31, i32 0, i32 5, !dbg !6669
  %32 = load i32, i32* %all_succs_n, align 4, !dbg !6669
  %cmp39 = icmp ne i32 %30, %32, !dbg !6670
  br i1 %cmp39, label %if.then41, label %if.end64, !dbg !6671

if.then41:                                        ; preds = %do.end38
  br label %do.body42, !dbg !6672

do.body42:                                        ; preds = %if.then41
  %33 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6673
  %tobool43 = icmp ne i8 %33, 0, !dbg !6673
  br i1 %tobool43, label %if.then44, label %if.else59, !dbg !6676

if.then44:                                        ; preds = %do.body42
  br label %do.body45, !dbg !6673

do.body45:                                        ; preds = %if.then44
  call void @llvm.dbg.declare(metadata i32* %__j46, metadata !6677, metadata !DIExpression()), !dbg !6679
  %34 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6679
  %all_succs_n47 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %34, i32 0, i32 5, !dbg !6679
  %35 = load i32, i32* %all_succs_n47, align 4, !dbg !6679
  %call48 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0), i32 %35), !dbg !6679
  %mul49 = mul nsw i32 2, %call48, !dbg !6679
  %add50 = add nsw i32 1, %mul49, !dbg !6679
  store i32 %add50, i32* %__j46, align 4, !dbg !6679
  call void @llvm.dbg.declare(metadata i8** %__s51, metadata !6680, metadata !DIExpression()), !dbg !6679
  %36 = load i32, i32* %__j46, align 4, !dbg !6679
  %conv52 = sext i32 %36 to i64, !dbg !6679
  %mul53 = mul i64 1, %conv52, !dbg !6679
  %37 = alloca i8, i64 %mul53, align 16, !dbg !6679
  store i8* %37, i8** %__s51, align 8, !dbg !6679
  %38 = load i8*, i8** %__s51, align 8, !dbg !6679
  %39 = load i32, i32* %__j46, align 4, !dbg !6679
  %conv54 = sext i32 %39 to i64, !dbg !6679
  %40 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6679
  %all_succs_n55 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %40, i32 0, i32 5, !dbg !6679
  %41 = load i32, i32* %all_succs_n55, align 4, !dbg !6679
  %call56 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %38, i64 %conv54, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0), i32 %41), !dbg !6679
  %42 = load i8*, i8** %__s51, align 8, !dbg !6679
  call void @sel_prepare_string_for_dot_label(i8* %42), !dbg !6679
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6679
  %44 = load i8*, i8** %__s51, align 8, !dbg !6679
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %44), !dbg !6679
  br label %do.end58, !dbg !6679

do.end58:                                         ; preds = %do.body45
  br label %if.end62, !dbg !6679

if.else59:                                        ; preds = %do.body42
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6673
  %46 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6673
  %all_succs_n60 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %46, i32 0, i32 5, !dbg !6673
  %47 = load i32, i32* %all_succs_n60, align 4, !dbg !6673
  %call61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0), i32 %47), !dbg !6673
  br label %if.end62

if.end62:                                         ; preds = %if.else59, %do.end58
  br label %do.end63, !dbg !6676

do.end63:                                         ; preds = %if.end62
  br label %if.end64, !dbg !6676

if.end64:                                         ; preds = %do.end63, %do.end38
  br label %if.end65, !dbg !6681

if.end65:                                         ; preds = %if.end64, %cond.end
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6682
  call void @_xlist_add(%struct._list_node** %p.addr, %struct.rtx_def* %48), !dbg !6682
  store i32 0, i32* %is, align 4, !dbg !6683
  br label %for.cond, !dbg !6685

for.cond:                                         ; preds = %for.inc160, %if.end65
  %49 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6686
  %succs_ok66 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %49, i32 0, i32 1, !dbg !6686
  %50 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_ok66, align 8, !dbg !6686
  %tobool67 = icmp ne %struct.VEC_rtx_heap* %50, null, !dbg !6686
  br i1 %tobool67, label %cond.true68, label %cond.false70, !dbg !6686

cond.true68:                                      ; preds = %for.cond
  %51 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6686
  %succs_ok69 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %51, i32 0, i32 1, !dbg !6686
  %52 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_ok69, align 8, !dbg !6686
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %52, i32 0, i32 0, !dbg !6686
  br label %cond.end71, !dbg !6686

cond.false70:                                     ; preds = %for.cond
  br label %cond.end71, !dbg !6686

cond.end71:                                       ; preds = %cond.false70, %cond.true68
  %cond72 = phi %struct.VEC_rtx_base* [ %base, %cond.true68 ], [ null, %cond.false70 ], !dbg !6686
  %53 = load i32, i32* %is, align 4, !dbg !6686
  %call73 = call i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond72, i32 %53, %struct.rtx_def** %succ), !dbg !6686
  %tobool74 = icmp ne i32 %call73, 0, !dbg !6688
  br i1 %tobool74, label %for.body, label %for.end161, !dbg !6688

for.body:                                         ; preds = %cond.end71
  call void @llvm.dbg.declare(metadata %struct._list_node** %succ_set, metadata !6689, metadata !DIExpression()), !dbg !6691
  %54 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6692
  %55 = load %struct._list_node*, %struct._list_node** %p.addr, align 8, !dbg !6693
  %56 = load i32, i32* %ws.addr, align 4, !dbg !6694
  %call75 = call %struct._list_node* @compute_av_set_inside_bb(%struct.rtx_def* %54, %struct._list_node* %55, i32 %56, i8 zeroext 1), !dbg !6695
  store %struct._list_node* %call75, %struct._list_node** %succ_set, align 8, !dbg !6696
  %57 = load %struct._list_node*, %struct._list_node** %succ_set, align 8, !dbg !6697
  %58 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6698
  %probs_ok = getelementptr inbounds %struct.succs_info, %struct.succs_info* %58, i32 0, i32 2, !dbg !6698
  %59 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %probs_ok, align 8, !dbg !6698
  %tobool76 = icmp ne %struct.VEC_int_heap* %59, null, !dbg !6698
  br i1 %tobool76, label %cond.true77, label %cond.false80, !dbg !6698

cond.true77:                                      ; preds = %for.body
  %60 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6698
  %probs_ok78 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %60, i32 0, i32 2, !dbg !6698
  %61 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %probs_ok78, align 8, !dbg !6698
  %base79 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %61, i32 0, i32 0, !dbg !6698
  br label %cond.end81, !dbg !6698

cond.false80:                                     ; preds = %for.body
  br label %cond.end81, !dbg !6698

cond.end81:                                       ; preds = %cond.false80, %cond.true77
  %cond82 = phi %struct.VEC_int_base* [ %base79, %cond.true77 ], [ null, %cond.false80 ], !dbg !6698
  %62 = load i32, i32* %is, align 4, !dbg !6698
  %call83 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond82, i32 %62), !dbg !6698
  %63 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6699
  %all_prob = getelementptr inbounds %struct.succs_info, %struct.succs_info* %63, i32 0, i32 4, !dbg !6700
  %64 = load i32, i32* %all_prob, align 8, !dbg !6700
  call void @av_set_split_usefulness(%struct._list_node* %57, i32 %call83, i32 %64), !dbg !6701
  %65 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6702
  %all_succs_n84 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %65, i32 0, i32 5, !dbg !6704
  %66 = load i32, i32* %all_succs_n84, align 4, !dbg !6704
  %cmp85 = icmp sgt i32 %66, 1, !dbg !6705
  br i1 %cmp85, label %if.then87, label %if.end102, !dbg !6706

if.then87:                                        ; preds = %cond.end81
  %67 = load i32, i32* %is, align 4, !dbg !6707
  %cmp88 = icmp eq i32 %67, 0, !dbg !6710
  br i1 %cmp88, label %if.then90, label %if.else92, !dbg !6711

if.then90:                                        ; preds = %if.then87
  %68 = load %struct._list_node*, %struct._list_node** %succ_set, align 8, !dbg !6712
  %call91 = call %struct._list_node* @av_set_copy(%struct._list_node* %68), !dbg !6714
  store %struct._list_node* %call91, %struct._list_node** %expr_in_all_succ_branches, align 8, !dbg !6715
  %69 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6716
  store %struct.rtx_def* %69, %struct.rtx_def** %zero_succ, align 8, !dbg !6717
  br label %if.end101, !dbg !6718

if.else92:                                        ; preds = %if.then87
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %i, metadata !6719, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !6722, metadata !DIExpression()), !dbg !6723
  call void @_list_iter_start(%struct._list_iterator* %i, %struct._list_node** %expr_in_all_succ_branches, i8 zeroext 1), !dbg !6724
  br label %for.cond93, !dbg !6724

for.cond93:                                       ; preds = %for.inc, %if.else92
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i32 0, i32 0, !dbg !6726
  %70 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6726
  %71 = load %struct._list_node*, %struct._list_node** %70, align 8, !dbg !6726
  %call94 = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %71, %struct._expr** %expr), !dbg !6726
  %tobool95 = icmp ne i8 %call94, 0, !dbg !6724
  br i1 %tobool95, label %for.body96, label %for.end, !dbg !6724

for.body96:                                       ; preds = %for.cond93
  %72 = load %struct._list_node*, %struct._list_node** %succ_set, align 8, !dbg !6728
  %73 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6730
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %73, i32 0, i32 0, !dbg !6730
  %74 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !6730
  %call97 = call zeroext i8 @av_set_is_in_p(%struct._list_node* %72, %struct.vinsn_def* %74), !dbg !6731
  %tobool98 = icmp ne i8 %call97, 0, !dbg !6731
  br i1 %tobool98, label %if.end100, label %if.then99, !dbg !6732

if.then99:                                        ; preds = %for.body96
  call void @av_set_iter_remove(%struct._list_iterator* %i), !dbg !6733
  br label %if.end100, !dbg !6733

if.end100:                                        ; preds = %if.then99, %for.body96
  br label %for.inc, !dbg !6734

for.inc:                                          ; preds = %if.end100
  call void @_list_iter_next(%struct._list_iterator* %i), !dbg !6726
  br label %for.cond93, !dbg !6726, !llvm.loop !6735

for.end:                                          ; preds = %for.cond93
  br label %if.end101

if.end101:                                        ; preds = %for.end, %if.then90
  br label %if.end102, !dbg !6737

if.end102:                                        ; preds = %if.end101, %cond.end81
  %75 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6738
  %succs_ok_n103 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %75, i32 0, i32 6, !dbg !6740
  %76 = load i32, i32* %succs_ok_n103, align 8, !dbg !6740
  %cmp104 = icmp eq i32 %76, 2, !dbg !6741
  br i1 %cmp104, label %land.lhs.true, label %if.else158, !dbg !6742

land.lhs.true:                                    ; preds = %if.end102
  %77 = load i32, i32* %is, align 4, !dbg !6743
  %cmp106 = icmp eq i32 %77, 1, !dbg !6744
  br i1 %cmp106, label %if.then108, label %if.else158, !dbg !6745

if.then108:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb0, metadata !6746, metadata !DIExpression()), !dbg !6748
  %78 = load %struct.rtx_def*, %struct.rtx_def** %zero_succ, align 8, !dbg !6749
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !6749
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !6749
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 3, !dbg !6749
  %rt_bb = bitcast %union.rtunion_def* %arrayidx111 to %struct.basic_block_def**, !dbg !6749
  %79 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6749
  store %struct.basic_block_def* %79, %struct.basic_block_def** %bb0, align 8, !dbg !6748
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb1, metadata !6750, metadata !DIExpression()), !dbg !6751
  %80 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6752
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !6752
  %fld113 = bitcast %union.u* %u112 to [1 x %union.rtunion_def]*, !dbg !6752
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i64 0, i64 3, !dbg !6752
  %rt_bb115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.basic_block_def**, !dbg !6752
  %81 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb115, align 8, !dbg !6752
  store %struct.basic_block_def* %81, %struct.basic_block_def** %bb1, align 8, !dbg !6751
  %82 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6753
  %tobool116 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %82, null, !dbg !6753
  br i1 %tobool116, label %cond.true117, label %cond.false119, !dbg !6753

cond.true117:                                     ; preds = %if.then108
  %83 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6753
  %base118 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %83, i32 0, i32 0, !dbg !6753
  br label %cond.end120, !dbg !6753

cond.false119:                                    ; preds = %if.then108
  br label %cond.end120, !dbg !6753

cond.end120:                                      ; preds = %cond.false119, %cond.true117
  %cond121 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base118, %cond.true117 ], [ null, %cond.false119 ], !dbg !6753
  %84 = load %struct.basic_block_def*, %struct.basic_block_def** %bb0, align 8, !dbg !6753
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %84, i32 0, i32 9, !dbg !6753
  %85 = load i32, i32* %index, align 8, !dbg !6753
  %call122 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond121, i32 %85), !dbg !6753
  %lv_set_valid_p = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call122, i32 0, i32 1, !dbg !6753
  %86 = load i8, i8* %lv_set_valid_p, align 8, !dbg !6753
  %conv123 = zext i8 %86 to i32, !dbg !6753
  %tobool124 = icmp ne i32 %conv123, 0, !dbg !6753
  br i1 %tobool124, label %land.lhs.true125, label %cond.true137, !dbg !6753

land.lhs.true125:                                 ; preds = %cond.end120
  %87 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6753
  %tobool126 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %87, null, !dbg !6753
  br i1 %tobool126, label %cond.true127, label %cond.false129, !dbg !6753

cond.true127:                                     ; preds = %land.lhs.true125
  %88 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6753
  %base128 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %88, i32 0, i32 0, !dbg !6753
  br label %cond.end130, !dbg !6753

cond.false129:                                    ; preds = %land.lhs.true125
  br label %cond.end130, !dbg !6753

cond.end130:                                      ; preds = %cond.false129, %cond.true127
  %cond131 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base128, %cond.true127 ], [ null, %cond.false129 ], !dbg !6753
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !6753
  %index132 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %89, i32 0, i32 9, !dbg !6753
  %90 = load i32, i32* %index132, align 8, !dbg !6753
  %call133 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond131, i32 %90), !dbg !6753
  %lv_set_valid_p134 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call133, i32 0, i32 1, !dbg !6753
  %91 = load i8, i8* %lv_set_valid_p134, align 8, !dbg !6753
  %conv135 = zext i8 %91 to i32, !dbg !6753
  %tobool136 = icmp ne i32 %conv135, 0, !dbg !6753
  br i1 %tobool136, label %cond.false138, label %cond.true137, !dbg !6753

cond.true137:                                     ; preds = %cond.end130, %cond.end120
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2780, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6753
  br label %cond.end139, !dbg !6753

cond.false138:                                    ; preds = %cond.end130
  br label %cond.end139, !dbg !6753

cond.end139:                                      ; preds = %cond.false138, %cond.true137
  %cond140 = phi i32 [ 0, %cond.true137 ], [ 0, %cond.false138 ], !dbg !6753
  %92 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6754
  %tobool141 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %92, null, !dbg !6754
  br i1 %tobool141, label %cond.true142, label %cond.false144, !dbg !6754

cond.true142:                                     ; preds = %cond.end139
  %93 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6754
  %base143 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %93, i32 0, i32 0, !dbg !6754
  br label %cond.end145, !dbg !6754

cond.false144:                                    ; preds = %cond.end139
  br label %cond.end145, !dbg !6754

cond.end145:                                      ; preds = %cond.false144, %cond.true142
  %cond146 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base143, %cond.true142 ], [ null, %cond.false144 ], !dbg !6754
  %94 = load %struct.basic_block_def*, %struct.basic_block_def** %bb0, align 8, !dbg !6754
  %index147 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %94, i32 0, i32 9, !dbg !6754
  %95 = load i32, i32* %index147, align 8, !dbg !6754
  %call148 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond146, i32 %95), !dbg !6754
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call148, i32 0, i32 0, !dbg !6754
  %96 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !6754
  %97 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6755
  %tobool149 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %97, null, !dbg !6755
  br i1 %tobool149, label %cond.true150, label %cond.false152, !dbg !6755

cond.true150:                                     ; preds = %cond.end145
  %98 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6755
  %base151 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %98, i32 0, i32 0, !dbg !6755
  br label %cond.end153, !dbg !6755

cond.false152:                                    ; preds = %cond.end145
  br label %cond.end153, !dbg !6755

cond.end153:                                      ; preds = %cond.false152, %cond.true150
  %cond154 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base151, %cond.true150 ], [ null, %cond.false152 ], !dbg !6755
  %99 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !6755
  %index155 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %99, i32 0, i32 9, !dbg !6755
  %100 = load i32, i32* %index155, align 8, !dbg !6755
  %call156 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond154, i32 %100), !dbg !6755
  %lv_set157 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call156, i32 0, i32 0, !dbg !6755
  %101 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set157, align 8, !dbg !6755
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6756
  call void @av_set_union_and_live(%struct._list_node** %av1, %struct._list_node** %succ_set, %struct.bitmap_head_def* %96, %struct.bitmap_head_def* %101, %struct.rtx_def* %102), !dbg !6757
  br label %if.end159, !dbg !6758

if.else158:                                       ; preds = %land.lhs.true, %if.end102
  %103 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6759
  call void @av_set_union_and_clear(%struct._list_node** %av1, %struct._list_node** %succ_set, %struct.rtx_def* %103), !dbg !6760
  br label %if.end159

if.end159:                                        ; preds = %if.else158, %cond.end153
  br label %for.inc160, !dbg !6761

for.inc160:                                       ; preds = %if.end159
  %104 = load i32, i32* %is, align 4, !dbg !6762
  %inc = add nsw i32 %104, 1, !dbg !6762
  store i32 %inc, i32* %is, align 4, !dbg !6762
  br label %for.cond, !dbg !6763, !llvm.loop !6764

for.end161:                                       ; preds = %cond.end71
  %105 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6766
  %succs_ok_n162 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %105, i32 0, i32 6, !dbg !6768
  %106 = load i32, i32* %succs_ok_n162, align 8, !dbg !6768
  %cmp163 = icmp sgt i32 %106, 2, !dbg !6769
  br i1 %cmp163, label %if.then165, label %if.end216, !dbg !6770

if.then165:                                       ; preds = %for.end161
  store i32 0, i32* %is, align 4, !dbg !6771
  br label %for.cond166, !dbg !6773

for.cond166:                                      ; preds = %for.inc213, %if.then165
  %107 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6774
  %succs_ok167 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %107, i32 0, i32 1, !dbg !6774
  %108 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_ok167, align 8, !dbg !6774
  %tobool168 = icmp ne %struct.VEC_rtx_heap* %108, null, !dbg !6774
  br i1 %tobool168, label %cond.true169, label %cond.false172, !dbg !6774

cond.true169:                                     ; preds = %for.cond166
  %109 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6774
  %succs_ok170 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %109, i32 0, i32 1, !dbg !6774
  %110 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_ok170, align 8, !dbg !6774
  %base171 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %110, i32 0, i32 0, !dbg !6774
  br label %cond.end173, !dbg !6774

cond.false172:                                    ; preds = %for.cond166
  br label %cond.end173, !dbg !6774

cond.end173:                                      ; preds = %cond.false172, %cond.true169
  %cond174 = phi %struct.VEC_rtx_base* [ %base171, %cond.true169 ], [ null, %cond.false172 ], !dbg !6774
  %111 = load i32, i32* %is, align 4, !dbg !6774
  %call175 = call i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond174, i32 %111, %struct.rtx_def** %succ), !dbg !6774
  %tobool176 = icmp ne i32 %call175, 0, !dbg !6776
  br i1 %tobool176, label %for.body177, label %for.end215, !dbg !6776

for.body177:                                      ; preds = %cond.end173
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %succ_bb, metadata !6777, metadata !DIExpression()), !dbg !6779
  %112 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6780
  %u178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1, !dbg !6780
  %fld179 = bitcast %union.u* %u178 to [1 x %union.rtunion_def]*, !dbg !6780
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i64 0, i64 3, !dbg !6780
  %rt_bb181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.basic_block_def**, !dbg !6780
  %113 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb181, align 8, !dbg !6780
  store %struct.basic_block_def* %113, %struct.basic_block_def** %succ_bb, align 8, !dbg !6779
  %114 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6781
  %tobool182 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %114, null, !dbg !6781
  br i1 %tobool182, label %cond.true183, label %cond.false185, !dbg !6781

cond.true183:                                     ; preds = %for.body177
  %115 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6781
  %base184 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %115, i32 0, i32 0, !dbg !6781
  br label %cond.end186, !dbg !6781

cond.false185:                                    ; preds = %for.body177
  br label %cond.end186, !dbg !6781

cond.end186:                                      ; preds = %cond.false185, %cond.true183
  %cond187 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base184, %cond.true183 ], [ null, %cond.false185 ], !dbg !6781
  %116 = load %struct.basic_block_def*, %struct.basic_block_def** %succ_bb, align 8, !dbg !6781
  %index188 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %116, i32 0, i32 9, !dbg !6781
  %117 = load i32, i32* %index188, align 8, !dbg !6781
  %call189 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond187, i32 %117), !dbg !6781
  %lv_set_valid_p190 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call189, i32 0, i32 1, !dbg !6781
  %118 = load i8, i8* %lv_set_valid_p190, align 8, !dbg !6781
  %tobool191 = icmp ne i8 %118, 0, !dbg !6781
  br i1 %tobool191, label %cond.false193, label %cond.true192, !dbg !6781

cond.true192:                                     ; preds = %cond.end186
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2797, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6781
  br label %cond.end194, !dbg !6781

cond.false193:                                    ; preds = %cond.end186
  br label %cond.end194, !dbg !6781

cond.end194:                                      ; preds = %cond.false193, %cond.true192
  %cond195 = phi i32 [ 0, %cond.true192 ], [ 0, %cond.false193 ], !dbg !6781
  %119 = load %struct._list_node*, %struct._list_node** %av1, align 8, !dbg !6782
  %120 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6783
  %tobool196 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %120, null, !dbg !6783
  br i1 %tobool196, label %cond.true197, label %cond.false199, !dbg !6783

cond.true197:                                     ; preds = %cond.end194
  %121 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !6783
  %base198 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %121, i32 0, i32 0, !dbg !6783
  br label %cond.end200, !dbg !6783

cond.false199:                                    ; preds = %cond.end194
  br label %cond.end200, !dbg !6783

cond.end200:                                      ; preds = %cond.false199, %cond.true197
  %cond201 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base198, %cond.true197 ], [ null, %cond.false199 ], !dbg !6783
  %122 = load %struct.basic_block_def*, %struct.basic_block_def** %succ_bb, align 8, !dbg !6783
  %index202 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %122, i32 0, i32 9, !dbg !6783
  %123 = load i32, i32* %index202, align 8, !dbg !6783
  %call203 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond201, i32 %123), !dbg !6783
  %av_set = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call203, i32 0, i32 1, !dbg !6783
  %124 = load %struct._list_node*, %struct._list_node** %av_set, align 8, !dbg !6783
  %125 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6784
  %tobool204 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %125, null, !dbg !6784
  br i1 %tobool204, label %cond.true205, label %cond.false207, !dbg !6784

cond.true205:                                     ; preds = %cond.end200
  %126 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6784
  %base206 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %126, i32 0, i32 0, !dbg !6784
  br label %cond.end208, !dbg !6784

cond.false207:                                    ; preds = %cond.end200
  br label %cond.end208, !dbg !6784

cond.end208:                                      ; preds = %cond.false207, %cond.true205
  %cond209 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base206, %cond.true205 ], [ null, %cond.false207 ], !dbg !6784
  %127 = load %struct.basic_block_def*, %struct.basic_block_def** %succ_bb, align 8, !dbg !6784
  %index210 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %127, i32 0, i32 9, !dbg !6784
  %128 = load i32, i32* %index210, align 8, !dbg !6784
  %call211 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond209, i32 %128), !dbg !6784
  %lv_set212 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call211, i32 0, i32 0, !dbg !6784
  %129 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set212, align 8, !dbg !6784
  call void @mark_unavailable_targets(%struct._list_node* %119, %struct._list_node* %124, %struct.bitmap_head_def* %129), !dbg !6785
  br label %for.inc213, !dbg !6786

for.inc213:                                       ; preds = %cond.end208
  %130 = load i32, i32* %is, align 4, !dbg !6787
  %inc214 = add nsw i32 %130, 1, !dbg !6787
  store i32 %inc214, i32* %is, align 4, !dbg !6787
  br label %for.cond166, !dbg !6788, !llvm.loop !6789

for.end215:                                       ; preds = %cond.end173
  br label %if.end216, !dbg !6790

if.end216:                                        ; preds = %for.end215, %for.end161
  %131 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6791
  %all_succs_n217 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %131, i32 0, i32 5, !dbg !6793
  %132 = load i32, i32* %all_succs_n217, align 4, !dbg !6793
  %133 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6794
  %succs_ok_n218 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %133, i32 0, i32 6, !dbg !6795
  %134 = load i32, i32* %succs_ok_n218, align 8, !dbg !6795
  %cmp219 = icmp sgt i32 %132, %134, !dbg !6796
  br i1 %cmp219, label %if.then221, label %if.end249, !dbg !6797

if.then221:                                       ; preds = %if.end216
  store i32 0, i32* %is, align 4, !dbg !6798
  br label %for.cond222, !dbg !6800

for.cond222:                                      ; preds = %for.inc246, %if.then221
  %135 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6801
  %succs_other = getelementptr inbounds %struct.succs_info, %struct.succs_info* %135, i32 0, i32 3, !dbg !6801
  %136 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_other, align 8, !dbg !6801
  %tobool223 = icmp ne %struct.VEC_rtx_heap* %136, null, !dbg !6801
  br i1 %tobool223, label %cond.true224, label %cond.false227, !dbg !6801

cond.true224:                                     ; preds = %for.cond222
  %137 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6801
  %succs_other225 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %137, i32 0, i32 3, !dbg !6801
  %138 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %succs_other225, align 8, !dbg !6801
  %base226 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %138, i32 0, i32 0, !dbg !6801
  br label %cond.end228, !dbg !6801

cond.false227:                                    ; preds = %for.cond222
  br label %cond.end228, !dbg !6801

cond.end228:                                      ; preds = %cond.false227, %cond.true224
  %cond229 = phi %struct.VEC_rtx_base* [ %base226, %cond.true224 ], [ null, %cond.false227 ], !dbg !6801
  %139 = load i32, i32* %is, align 4, !dbg !6801
  %call230 = call i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond229, i32 %139, %struct.rtx_def** %succ), !dbg !6801
  %tobool231 = icmp ne i32 %call230, 0, !dbg !6803
  br i1 %tobool231, label %for.body232, label %for.end248, !dbg !6803

for.body232:                                      ; preds = %cond.end228
  %140 = load %struct._list_node*, %struct._list_node** %av1, align 8, !dbg !6804
  %141 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6805
  %tobool233 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %141, null, !dbg !6805
  br i1 %tobool233, label %cond.true234, label %cond.false236, !dbg !6805

cond.true234:                                     ; preds = %for.body232
  %142 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !6805
  %base235 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %142, i32 0, i32 0, !dbg !6805
  br label %cond.end237, !dbg !6805

cond.false236:                                    ; preds = %for.body232
  br label %cond.end237, !dbg !6805

cond.end237:                                      ; preds = %cond.false236, %cond.true234
  %cond238 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base235, %cond.true234 ], [ null, %cond.false236 ], !dbg !6805
  %143 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !6805
  %u239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !6805
  %fld240 = bitcast %union.u* %u239 to [1 x %union.rtunion_def]*, !dbg !6805
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i64 0, i64 3, !dbg !6805
  %rt_bb242 = bitcast %union.rtunion_def* %arrayidx241 to %struct.basic_block_def**, !dbg !6805
  %144 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb242, align 8, !dbg !6805
  %index243 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %144, i32 0, i32 9, !dbg !6805
  %145 = load i32, i32* %index243, align 8, !dbg !6805
  %call244 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond238, i32 %145), !dbg !6805
  %lv_set245 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call244, i32 0, i32 0, !dbg !6805
  %146 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set245, align 8, !dbg !6805
  call void @mark_unavailable_targets(%struct._list_node* %140, %struct._list_node* null, %struct.bitmap_head_def* %146), !dbg !6806
  br label %for.inc246, !dbg !6806

for.inc246:                                       ; preds = %cond.end237
  %147 = load i32, i32* %is, align 4, !dbg !6807
  %inc247 = add nsw i32 %147, 1, !dbg !6807
  store i32 %inc247, i32* %is, align 4, !dbg !6807
  br label %for.cond222, !dbg !6808, !llvm.loop !6809

for.end248:                                       ; preds = %cond.end228
  br label %if.end249, !dbg !6810

if.end249:                                        ; preds = %for.end248, %if.end216
  %148 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6811
  %all_succs_n250 = getelementptr inbounds %struct.succs_info, %struct.succs_info* %148, i32 0, i32 5, !dbg !6813
  %149 = load i32, i32* %all_succs_n250, align 4, !dbg !6813
  %cmp251 = icmp sgt i32 %149, 1, !dbg !6814
  br i1 %cmp251, label %if.then253, label %if.end269, !dbg !6815

if.then253:                                       ; preds = %if.end249
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %i254, metadata !6816, metadata !DIExpression()), !dbg !6818
  call void @llvm.dbg.declare(metadata %struct._expr** %expr255, metadata !6819, metadata !DIExpression()), !dbg !6820
  call void @_list_iter_start(%struct._list_iterator* %i254, %struct._list_node** %av1, i8 zeroext 0), !dbg !6821
  br label %for.cond256, !dbg !6821

for.cond256:                                      ; preds = %for.inc267, %if.then253
  %lp257 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i254, i32 0, i32 0, !dbg !6823
  %150 = load %struct._list_node**, %struct._list_node*** %lp257, align 8, !dbg !6823
  %151 = load %struct._list_node*, %struct._list_node** %150, align 8, !dbg !6823
  %call258 = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %151, %struct._expr** %expr255), !dbg !6823
  %tobool259 = icmp ne i8 %call258, 0, !dbg !6821
  br i1 %tobool259, label %for.body260, label %for.end268, !dbg !6821

for.body260:                                      ; preds = %for.cond256
  %152 = load %struct._list_node*, %struct._list_node** %expr_in_all_succ_branches, align 8, !dbg !6825
  %153 = load %struct._expr*, %struct._expr** %expr255, align 8, !dbg !6827
  %vinsn261 = getelementptr inbounds %struct._expr, %struct._expr* %153, i32 0, i32 0, !dbg !6827
  %154 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn261, align 8, !dbg !6827
  %call262 = call zeroext i8 @av_set_is_in_p(%struct._list_node* %152, %struct.vinsn_def* %154), !dbg !6828
  %tobool263 = icmp ne i8 %call262, 0, !dbg !6828
  br i1 %tobool263, label %if.end266, label %if.then264, !dbg !6829

if.then264:                                       ; preds = %for.body260
  %155 = load %struct._expr*, %struct._expr** %expr255, align 8, !dbg !6830
  %spec = getelementptr inbounds %struct._expr, %struct._expr* %155, i32 0, i32 1, !dbg !6830
  %156 = load i32, i32* %spec, align 8, !dbg !6831
  %inc265 = add nsw i32 %156, 1, !dbg !6831
  store i32 %inc265, i32* %spec, align 8, !dbg !6831
  br label %if.end266, !dbg !6830

if.end266:                                        ; preds = %if.then264, %for.body260
  br label %for.inc267, !dbg !6832

for.inc267:                                       ; preds = %if.end266
  call void @_list_iter_next(%struct._list_iterator* %i254), !dbg !6823
  br label %for.cond256, !dbg !6823, !llvm.loop !6833

for.end268:                                       ; preds = %for.cond256
  call void @av_set_clear(%struct._list_node** %expr_in_all_succ_branches), !dbg !6835
  call void @av_set_substract_cond_branches(%struct._list_node** %av1), !dbg !6836
  br label %if.end269, !dbg !6837

if.end269:                                        ; preds = %for.end268, %if.end249
  call void @_list_remove(%struct._list_node** %p.addr), !dbg !6838
  %157 = load %struct.succs_info*, %struct.succs_info** %sinfo, align 8, !dbg !6839
  call void @free_succs_info(%struct.succs_info* %157), !dbg !6840
  %158 = load i32, i32* @sched_verbose, align 4, !dbg !6841
  %cmp270 = icmp sge i32 %158, 6, !dbg !6843
  br i1 %cmp270, label %if.then272, label %if.end323, !dbg !6844

if.then272:                                       ; preds = %if.end269
  br label %do.body273, !dbg !6845

do.body273:                                       ; preds = %if.then272
  %159 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6847
  %tobool274 = icmp ne i8 %159, 0, !dbg !6847
  br i1 %tobool274, label %if.then275, label %if.else296, !dbg !6850

if.then275:                                       ; preds = %do.body273
  br label %do.body276, !dbg !6847

do.body276:                                       ; preds = %if.then275
  call void @llvm.dbg.declare(metadata i32* %__j277, metadata !6851, metadata !DIExpression()), !dbg !6853
  %160 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6853
  %u278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !6853
  %fld279 = bitcast %union.u* %u278 to [1 x %union.rtunion_def]*, !dbg !6853
  %arrayidx280 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld279, i64 0, i64 0, !dbg !6853
  %rt_int281 = bitcast %union.rtunion_def* %arrayidx280 to i32*, !dbg !6853
  %161 = load i32, i32* %rt_int281, align 8, !dbg !6853
  %call282 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i64 0, i64 0), i32 %161), !dbg !6853
  %mul283 = mul nsw i32 2, %call282, !dbg !6853
  %add284 = add nsw i32 1, %mul283, !dbg !6853
  store i32 %add284, i32* %__j277, align 4, !dbg !6853
  call void @llvm.dbg.declare(metadata i8** %__s285, metadata !6854, metadata !DIExpression()), !dbg !6853
  %162 = load i32, i32* %__j277, align 4, !dbg !6853
  %conv286 = sext i32 %162 to i64, !dbg !6853
  %mul287 = mul i64 1, %conv286, !dbg !6853
  %163 = alloca i8, i64 %mul287, align 16, !dbg !6853
  store i8* %163, i8** %__s285, align 8, !dbg !6853
  %164 = load i8*, i8** %__s285, align 8, !dbg !6853
  %165 = load i32, i32* %__j277, align 4, !dbg !6853
  %conv288 = sext i32 %165 to i64, !dbg !6853
  %166 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6853
  %u289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1, !dbg !6853
  %fld290 = bitcast %union.u* %u289 to [1 x %union.rtunion_def]*, !dbg !6853
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld290, i64 0, i64 0, !dbg !6853
  %rt_int292 = bitcast %union.rtunion_def* %arrayidx291 to i32*, !dbg !6853
  %167 = load i32, i32* %rt_int292, align 8, !dbg !6853
  %call293 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %164, i64 %conv288, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i64 0, i64 0), i32 %167), !dbg !6853
  %168 = load i8*, i8** %__s285, align 8, !dbg !6853
  call void @sel_prepare_string_for_dot_label(i8* %168), !dbg !6853
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6853
  %170 = load i8*, i8** %__s285, align 8, !dbg !6853
  %call294 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %169, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %170), !dbg !6853
  br label %do.end295, !dbg !6853

do.end295:                                        ; preds = %do.body276
  br label %if.end302, !dbg !6853

if.else296:                                       ; preds = %do.body273
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6847
  %172 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6847
  %u297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1, !dbg !6847
  %fld298 = bitcast %union.u* %u297 to [1 x %union.rtunion_def]*, !dbg !6847
  %arrayidx299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld298, i64 0, i64 0, !dbg !6847
  %rt_int300 = bitcast %union.rtunion_def* %arrayidx299 to i32*, !dbg !6847
  %173 = load i32, i32* %rt_int300, align 8, !dbg !6847
  %call301 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %171, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i64 0, i64 0), i32 %173), !dbg !6847
  br label %if.end302

if.end302:                                        ; preds = %if.else296, %do.end295
  br label %do.end303, !dbg !6850

do.end303:                                        ; preds = %if.end302
  %174 = load %struct._list_node*, %struct._list_node** %av1, align 8, !dbg !6855
  call void @dump_av_set(%struct._list_node* %174), !dbg !6856
  br label %do.body304, !dbg !6857

do.body304:                                       ; preds = %do.end303
  %175 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !6858
  %tobool305 = icmp ne i8 %175, 0, !dbg !6858
  br i1 %tobool305, label %if.then306, label %if.else319, !dbg !6861

if.then306:                                       ; preds = %do.body304
  br label %do.body307, !dbg !6858

do.body307:                                       ; preds = %if.then306
  call void @llvm.dbg.declare(metadata i32* %__j308, metadata !6862, metadata !DIExpression()), !dbg !6864
  %call309 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6864
  %mul310 = mul nsw i32 2, %call309, !dbg !6864
  %add311 = add nsw i32 1, %mul310, !dbg !6864
  store i32 %add311, i32* %__j308, align 4, !dbg !6864
  call void @llvm.dbg.declare(metadata i8** %__s312, metadata !6865, metadata !DIExpression()), !dbg !6864
  %176 = load i32, i32* %__j308, align 4, !dbg !6864
  %conv313 = sext i32 %176 to i64, !dbg !6864
  %mul314 = mul i64 1, %conv313, !dbg !6864
  %177 = alloca i8, i64 %mul314, align 16, !dbg !6864
  store i8* %177, i8** %__s312, align 8, !dbg !6864
  %178 = load i8*, i8** %__s312, align 8, !dbg !6864
  %179 = load i32, i32* %__j308, align 4, !dbg !6864
  %conv315 = sext i32 %179 to i64, !dbg !6864
  %call316 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %178, i64 %conv315, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6864
  %180 = load i8*, i8** %__s312, align 8, !dbg !6864
  call void @sel_prepare_string_for_dot_label(i8* %180), !dbg !6864
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6864
  %182 = load i8*, i8** %__s312, align 8, !dbg !6864
  %call317 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %181, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %182), !dbg !6864
  br label %do.end318, !dbg !6864

do.end318:                                        ; preds = %do.body307
  br label %if.end321, !dbg !6864

if.else319:                                       ; preds = %do.body304
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6858
  %call320 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %183, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !6858
  br label %if.end321

if.end321:                                        ; preds = %if.else319, %do.end318
  br label %do.end322, !dbg !6861

do.end322:                                        ; preds = %if.end321
  br label %if.end323, !dbg !6866

if.end323:                                        ; preds = %do.end322, %if.end269
  %184 = load %struct._list_node*, %struct._list_node** %av1, align 8, !dbg !6867
  ret %struct._list_node* %184, !dbg !6868
}

; Function Attrs: noinline nounwind uwtable
define internal void @moveup_set_expr(%struct._list_node** %avp, %struct.rtx_def* %insn, i8 zeroext %inside_insn_group) #0 !dbg !6869 {
entry:
  %avp.addr = alloca %struct._list_node**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %inside_insn_group.addr = alloca i8, align 1
  %i = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  store %struct._list_node** %avp, %struct._list_node*** %avp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %avp.addr, metadata !6873, metadata !DIExpression()), !dbg !6874
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6875, metadata !DIExpression()), !dbg !6876
  store i8 %inside_insn_group, i8* %inside_insn_group.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %inside_insn_group.addr, metadata !6877, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %i, metadata !6879, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !6881, metadata !DIExpression()), !dbg !6882
  %0 = load %struct._list_node**, %struct._list_node*** %avp.addr, align 8, !dbg !6883
  call void @_list_iter_start(%struct._list_iterator* %i, %struct._list_node** %0, i8 zeroext 1), !dbg !6883
  br label %for.cond, !dbg !6883

for.cond:                                         ; preds = %for.inc, %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i32 0, i32 0, !dbg !6885
  %1 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !6885
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !6885
  %call = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %2, %struct._expr** %expr), !dbg !6885
  %tobool = icmp ne i8 %call, 0, !dbg !6883
  br i1 %tobool, label %for.body, label %for.end, !dbg !6883

for.body:                                         ; preds = %for.cond
  %3 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6887
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6889
  %5 = load i8, i8* %inside_insn_group.addr, align 1, !dbg !6890
  %call1 = call i32 @moveup_expr_cached(%struct._expr* %3, %struct.rtx_def* %4, i8 zeroext %5), !dbg !6891
  switch i32 %call1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !6892

sw.bb:                                            ; preds = %for.body, %for.body
  br label %sw.epilog, !dbg !6893

sw.bb2:                                           ; preds = %for.body
  call void @av_set_iter_remove(%struct._list_iterator* %i), !dbg !6895
  br label %sw.epilog, !dbg !6896

sw.bb3:                                           ; preds = %for.body
  %6 = load %struct._list_node**, %struct._list_node*** %avp.addr, align 8, !dbg !6897
  %7 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !6898
  %call4 = call %struct._expr* @merge_with_other_exprs(%struct._list_node** %6, %struct._list_iterator* %i, %struct._expr* %7), !dbg !6899
  store %struct._expr* %call4, %struct._expr** %expr, align 8, !dbg !6900
  br label %sw.epilog, !dbg !6901

sw.default:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2605, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6902
  br label %sw.epilog, !dbg !6903

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb
  br label %for.inc, !dbg !6904

for.inc:                                          ; preds = %sw.epilog
  call void @_list_iter_next(%struct._list_iterator* %i), !dbg !6885
  br label %for.cond, !dbg !6885, !llvm.loop !6905

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6907
}

declare dso_local %struct._expr* @av_set_lookup(%struct._list_node*, %struct.vinsn_def*) #2

declare dso_local void @copy_expr(%struct._expr*, %struct._expr*) #2

declare dso_local void @av_set_clear(%struct._list_node**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_list_remove(%struct._list_node** %lp) #0 !dbg !6908 {
entry:
  %lp.addr = alloca %struct._list_node**, align 8
  %n = alloca %struct._list_node*, align 8
  store %struct._list_node** %lp, %struct._list_node*** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %lp.addr, metadata !6911, metadata !DIExpression()), !dbg !6912
  call void @llvm.dbg.declare(metadata %struct._list_node** %n, metadata !6913, metadata !DIExpression()), !dbg !6914
  %0 = load %struct._list_node**, %struct._list_node*** %lp.addr, align 8, !dbg !6915
  %1 = load %struct._list_node*, %struct._list_node** %0, align 8, !dbg !6916
  store %struct._list_node* %1, %struct._list_node** %n, align 8, !dbg !6914
  %2 = load %struct._list_node*, %struct._list_node** %n, align 8, !dbg !6917
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %2, i32 0, i32 0, !dbg !6917
  %3 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !6917
  %4 = load %struct._list_node**, %struct._list_node*** %lp.addr, align 8, !dbg !6918
  store %struct._list_node* %3, %struct._list_node** %4, align 8, !dbg !6919
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @sched_lists_pool, align 8, !dbg !6920
  %6 = load %struct._list_node*, %struct._list_node** %n, align 8, !dbg !6921
  %7 = bitcast %struct._list_node* %6 to i8*, !dbg !6921
  call void @pool_free(%struct.alloc_pool_def* %5, i8* %7), !dbg !6922
  ret void, !dbg !6923
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_xlist_is_in_p(%struct._list_node* %l, %struct.rtx_def* %x) #0 !dbg !6924 {
entry:
  %retval = alloca i8, align 1
  %l.addr = alloca %struct._list_node*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct._list_node* %l, %struct._list_node** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %l.addr, metadata !6927, metadata !DIExpression()), !dbg !6928
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6929, metadata !DIExpression()), !dbg !6930
  br label %while.cond, !dbg !6931

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct._list_node*, %struct._list_node** %l.addr, align 8, !dbg !6932
  %tobool = icmp ne %struct._list_node* %0, null, !dbg !6931
  br i1 %tobool, label %while.body, label %while.end, !dbg !6931

while.body:                                       ; preds = %while.cond
  %1 = load %struct._list_node*, %struct._list_node** %l.addr, align 8, !dbg !6933
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %1, i32 0, i32 1, !dbg !6933
  %x1 = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !6933
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !6933
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6936
  %cmp = icmp eq %struct.rtx_def* %2, %3, !dbg !6937
  br i1 %cmp, label %if.then, label %if.end, !dbg !6938

if.then:                                          ; preds = %while.body
  store i8 1, i8* %retval, align 1, !dbg !6939
  br label %return, !dbg !6939

if.end:                                           ; preds = %while.body
  %4 = load %struct._list_node*, %struct._list_node** %l.addr, align 8, !dbg !6940
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %4, i32 0, i32 0, !dbg !6940
  %5 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !6940
  store %struct._list_node* %5, %struct._list_node** %l.addr, align 8, !dbg !6941
  br label %while.cond, !dbg !6931, !llvm.loop !6942

while.end:                                        ; preds = %while.cond
  store i8 0, i8* %retval, align 1, !dbg !6944
  br label %return, !dbg !6944

return:                                           ; preds = %while.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !6945
  ret i8 %6, !dbg !6945
}

; Function Attrs: noinline nounwind uwtable
define internal void @_list_add(%struct._list_node** %lp) #0 !dbg !6946 {
entry:
  %lp.addr = alloca %struct._list_node**, align 8
  %l = alloca %struct._list_node*, align 8
  store %struct._list_node** %lp, %struct._list_node*** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %lp.addr, metadata !6947, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.declare(metadata %struct._list_node** %l, metadata !6949, metadata !DIExpression()), !dbg !6950
  %call = call %struct._list_node* @_list_alloc(), !dbg !6951
  store %struct._list_node* %call, %struct._list_node** %l, align 8, !dbg !6950
  %0 = load %struct._list_node**, %struct._list_node*** %lp.addr, align 8, !dbg !6952
  %1 = load %struct._list_node*, %struct._list_node** %0, align 8, !dbg !6953
  %2 = load %struct._list_node*, %struct._list_node** %l, align 8, !dbg !6954
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %2, i32 0, i32 0, !dbg !6954
  store %struct._list_node* %1, %struct._list_node** %next, align 8, !dbg !6955
  %3 = load %struct._list_node*, %struct._list_node** %l, align 8, !dbg !6956
  %4 = load %struct._list_node**, %struct._list_node*** %lp.addr, align 8, !dbg !6957
  store %struct._list_node* %3, %struct._list_node** %4, align 8, !dbg !6958
  ret void, !dbg !6959
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._list_node* @_list_alloc() #0 !dbg !6960 {
entry:
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @sched_lists_pool, align 8, !dbg !6963
  %call = call i8* @pool_alloc(%struct.alloc_pool_def* %0), !dbg !6964
  %1 = bitcast i8* %call to %struct._list_node*, !dbg !6965
  ret %struct._list_node* %1, !dbg !6966
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) #2

declare dso_local zeroext i8 @sel_bb_end_p(%struct.rtx_def*) #2

declare dso_local %struct.succs_info* @compute_succs_info(%struct.rtx_def*, i16 signext) #2

declare dso_local void @dump_insn_vector(%struct.VEC_rtx_heap*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %vec_, i32 %ix_, %struct.rtx_def** %ptr) #0 !dbg !6967 {
entry:
  %retval = alloca i32, align 4
  %vec_.addr = alloca %struct.VEC_rtx_base*, align 8
  %ix_.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.rtx_def**, align 8
  store %struct.VEC_rtx_base* %vec_, %struct.VEC_rtx_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_base** %vec_.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !6974, metadata !DIExpression()), !dbg !6973
  store %struct.rtx_def** %ptr, %struct.rtx_def*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %ptr.addr, metadata !6975, metadata !DIExpression()), !dbg !6973
  %0 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !6976
  %tobool = icmp ne %struct.VEC_rtx_base* %0, null, !dbg !6976
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6976

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !6976
  %2 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !6976
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %2, i32 0, i32 0, !dbg !6976
  %3 = load i32, i32* %num, align 8, !dbg !6976
  %cmp = icmp ult i32 %1, %3, !dbg !6976
  br i1 %cmp, label %if.then, label %if.else, !dbg !6973

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !6978
  %vec = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %4, i32 0, i32 2, !dbg !6978
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !6978
  %idxprom = zext i32 %5 to i64, !dbg !6978
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %vec, i64 0, i64 %idxprom, !dbg !6978
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !6978
  %7 = load %struct.rtx_def**, %struct.rtx_def*** %ptr.addr, align 8, !dbg !6978
  store %struct.rtx_def* %6, %struct.rtx_def** %7, align 8, !dbg !6978
  store i32 1, i32* %retval, align 4, !dbg !6978
  br label %return, !dbg !6978

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %ptr.addr, align 8, !dbg !6980
  store %struct.rtx_def* null, %struct.rtx_def** %8, align 8, !dbg !6980
  store i32 0, i32* %retval, align 4, !dbg !6980
  br label %return, !dbg !6980

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6973
  ret i32 %9, !dbg !6973
}

declare dso_local void @av_set_split_usefulness(%struct._list_node*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_list_iter_start(%struct._list_iterator* %ip, %struct._list_node** %lp, i8 zeroext %can_remove_p) #0 !dbg !6982 {
entry:
  %ip.addr = alloca %struct._list_iterator*, align 8
  %lp.addr = alloca %struct._list_node**, align 8
  %can_remove_p.addr = alloca i8, align 1
  store %struct._list_iterator* %ip, %struct._list_iterator** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_iterator** %ip.addr, metadata !6986, metadata !DIExpression()), !dbg !6987
  store %struct._list_node** %lp, %struct._list_node*** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %lp.addr, metadata !6988, metadata !DIExpression()), !dbg !6989
  store i8 %can_remove_p, i8* %can_remove_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %can_remove_p.addr, metadata !6990, metadata !DIExpression()), !dbg !6991
  %0 = load %struct._list_node**, %struct._list_node*** %lp.addr, align 8, !dbg !6992
  %1 = load %struct._list_iterator*, %struct._list_iterator** %ip.addr, align 8, !dbg !6993
  %lp1 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %1, i32 0, i32 0, !dbg !6994
  store %struct._list_node** %0, %struct._list_node*** %lp1, align 8, !dbg !6995
  %2 = load i8, i8* %can_remove_p.addr, align 1, !dbg !6996
  %3 = load %struct._list_iterator*, %struct._list_iterator** %ip.addr, align 8, !dbg !6997
  %can_remove_p2 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %3, i32 0, i32 1, !dbg !6998
  store i8 %2, i8* %can_remove_p2, align 8, !dbg !6999
  %4 = load %struct._list_iterator*, %struct._list_iterator** %ip.addr, align 8, !dbg !7000
  %removed_p = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %4, i32 0, i32 2, !dbg !7001
  store i8 0, i8* %removed_p, align 1, !dbg !7002
  ret void, !dbg !7003
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_list_iter_cond_expr(%struct._list_node* %av, %struct._expr** %exprp) #0 !dbg !7004 {
entry:
  %retval = alloca i8, align 1
  %av.addr = alloca %struct._list_node*, align 8
  %exprp.addr = alloca %struct._expr**, align 8
  store %struct._list_node* %av, %struct._list_node** %av.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %av.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  store %struct._expr** %exprp, %struct._expr*** %exprp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr*** %exprp.addr, metadata !7010, metadata !DIExpression()), !dbg !7011
  %0 = load %struct._list_node*, %struct._list_node** %av.addr, align 8, !dbg !7012
  %tobool = icmp ne %struct._list_node* %0, null, !dbg !7012
  br i1 %tobool, label %if.then, label %if.end, !dbg !7014

if.then:                                          ; preds = %entry
  %1 = load %struct._list_node*, %struct._list_node** %av.addr, align 8, !dbg !7015
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %1, i32 0, i32 1, !dbg !7015
  %expr = bitcast %union.anon.0* %u to %struct._expr*, !dbg !7015
  %2 = load %struct._expr**, %struct._expr*** %exprp.addr, align 8, !dbg !7017
  store %struct._expr* %expr, %struct._expr** %2, align 8, !dbg !7018
  store i8 1, i8* %retval, align 1, !dbg !7019
  br label %return, !dbg !7019

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !7020
  br label %return, !dbg !7020

return:                                           ; preds = %if.end, %if.then
  %3 = load i8, i8* %retval, align 1, !dbg !7021
  ret i8 %3, !dbg !7021
}

declare dso_local zeroext i8 @av_set_is_in_p(%struct._list_node*, %struct.vinsn_def*) #2

declare dso_local void @av_set_iter_remove(%struct._list_iterator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_list_iter_next(%struct._list_iterator* %ip) #0 !dbg !7022 {
entry:
  %ip.addr = alloca %struct._list_iterator*, align 8
  store %struct._list_iterator* %ip, %struct._list_iterator** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_iterator** %ip.addr, metadata !7025, metadata !DIExpression()), !dbg !7026
  %0 = load %struct._list_iterator*, %struct._list_iterator** %ip.addr, align 8, !dbg !7027
  %removed_p = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %0, i32 0, i32 2, !dbg !7029
  %1 = load i8, i8* %removed_p, align 1, !dbg !7029
  %tobool = icmp ne i8 %1, 0, !dbg !7027
  br i1 %tobool, label %if.else, label %if.then, !dbg !7030

if.then:                                          ; preds = %entry
  %2 = load %struct._list_iterator*, %struct._list_iterator** %ip.addr, align 8, !dbg !7031
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %2, i32 0, i32 0, !dbg !7031
  %3 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !7031
  %4 = load %struct._list_node*, %struct._list_node** %3, align 8, !dbg !7031
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %4, i32 0, i32 0, !dbg !7031
  %5 = load %struct._list_iterator*, %struct._list_iterator** %ip.addr, align 8, !dbg !7032
  %lp1 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %5, i32 0, i32 0, !dbg !7033
  store %struct._list_node** %next, %struct._list_node*** %lp1, align 8, !dbg !7034
  br label %if.end, !dbg !7032

if.else:                                          ; preds = %entry
  %6 = load %struct._list_iterator*, %struct._list_iterator** %ip.addr, align 8, !dbg !7035
  %removed_p2 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %6, i32 0, i32 2, !dbg !7036
  store i8 0, i8* %removed_p2, align 1, !dbg !7037
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7038
}

declare dso_local void @av_set_union_and_live(%struct._list_node**, %struct._list_node**, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.rtx_def*) #2

declare dso_local void @av_set_union_and_clear(%struct._list_node**, %struct._list_node**, %struct.rtx_def*) #2

declare dso_local void @mark_unavailable_targets(%struct._list_node*, %struct._list_node*, %struct.bitmap_head_def*) #2

declare dso_local void @av_set_substract_cond_branches(%struct._list_node**) #2

declare dso_local void @free_succs_info(%struct.succs_info*) #2

declare dso_local %struct._expr* @merge_with_other_exprs(%struct._list_node**, %struct._list_iterator*, %struct._expr*) #2

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vinsn_vec_add(%struct.VEC_vinsn_t_heap** %vinsn_vec, %struct._expr* %expr) #0 !dbg !7039 {
entry:
  %vinsn_vec.addr = alloca %struct.VEC_vinsn_t_heap**, align 8
  %expr.addr = alloca %struct._expr*, align 8
  store %struct.VEC_vinsn_t_heap** %vinsn_vec, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, metadata !7043, metadata !DIExpression()), !dbg !7044
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !7045, metadata !DIExpression()), !dbg !7046
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !7047
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !7047
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !7047
  call void @vinsn_attach(%struct.vinsn_def* %1), !dbg !7048
  %2 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8, !dbg !7049
  %3 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !7049
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %3, i32 0, i32 0, !dbg !7049
  %4 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !7049
  %call = call %struct.vinsn_def** @VEC_vinsn_t_heap_safe_push(%struct.VEC_vinsn_t_heap** %2, %struct.vinsn_def* %4), !dbg !7049
  ret void, !dbg !7050
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.vinsn_def** @VEC_vinsn_t_heap_safe_push(%struct.VEC_vinsn_t_heap** %vec_, %struct.vinsn_def* %obj_) #0 !dbg !7051 {
entry:
  %vec_.addr = alloca %struct.VEC_vinsn_t_heap**, align 8
  %obj_.addr = alloca %struct.vinsn_def*, align 8
  store %struct.VEC_vinsn_t_heap** %vec_, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_heap*** %vec_.addr, metadata !7055, metadata !DIExpression()), !dbg !7056
  store %struct.vinsn_def* %obj_, %struct.vinsn_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %obj_.addr, metadata !7057, metadata !DIExpression()), !dbg !7056
  %0 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8, !dbg !7056
  %call = call i32 @VEC_vinsn_t_heap_reserve(%struct.VEC_vinsn_t_heap** %0, i32 1), !dbg !7056
  %1 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8, !dbg !7056
  %2 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %1, align 8, !dbg !7056
  %tobool = icmp ne %struct.VEC_vinsn_t_heap* %2, null, !dbg !7056
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7056

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8, !dbg !7056
  %4 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %3, align 8, !dbg !7056
  %base = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %4, i32 0, i32 0, !dbg !7056
  br label %cond.end, !dbg !7056

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7056

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_vinsn_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7056
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %obj_.addr, align 8, !dbg !7056
  %call1 = call %struct.vinsn_def** @VEC_vinsn_t_base_quick_push(%struct.VEC_vinsn_t_base* %cond, %struct.vinsn_def* %5), !dbg !7056
  ret %struct.vinsn_def** %call1, !dbg !7056
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_vinsn_t_heap_reserve(%struct.VEC_vinsn_t_heap** %vec_, i32 %alloc_) #0 !dbg !7058 {
entry:
  %vec_.addr = alloca %struct.VEC_vinsn_t_heap**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_vinsn_t_heap** %vec_, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_heap*** %vec_.addr, metadata !7061, metadata !DIExpression()), !dbg !7062
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !7063, metadata !DIExpression()), !dbg !7062
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !7064, metadata !DIExpression()), !dbg !7062
  %0 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8, !dbg !7062
  %1 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %0, align 8, !dbg !7062
  %tobool = icmp ne %struct.VEC_vinsn_t_heap* %1, null, !dbg !7062
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7062

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8, !dbg !7062
  %3 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %2, align 8, !dbg !7062
  %base = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %3, i32 0, i32 0, !dbg !7062
  br label %cond.end, !dbg !7062

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7062

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_vinsn_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7062
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !7062
  %call = call i32 @VEC_vinsn_t_base_space(%struct.VEC_vinsn_t_base* %cond, i32 %4), !dbg !7062
  %tobool1 = icmp ne i32 %call, 0, !dbg !7062
  %lnot = xor i1 %tobool1, true, !dbg !7062
  %lnot.ext = zext i1 %lnot to i32, !dbg !7062
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !7062
  %5 = load i32, i32* %extend, align 4, !dbg !7065
  %tobool2 = icmp ne i32 %5, 0, !dbg !7065
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7062

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8, !dbg !7065
  %7 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %6, align 8, !dbg !7065
  %8 = bitcast %struct.VEC_vinsn_t_heap* %7 to i8*, !dbg !7065
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !7065
  %call3 = call i8* @vec_heap_p_reserve(i8* %8, i32 %9), !dbg !7065
  %10 = bitcast i8* %call3 to %struct.VEC_vinsn_t_heap*, !dbg !7065
  %11 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8, !dbg !7065
  store %struct.VEC_vinsn_t_heap* %10, %struct.VEC_vinsn_t_heap** %11, align 8, !dbg !7065
  br label %if.end, !dbg !7065

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !7062
  ret i32 %12, !dbg !7062
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.vinsn_def** @VEC_vinsn_t_base_quick_push(%struct.VEC_vinsn_t_base* %vec_, %struct.vinsn_def* %obj_) #0 !dbg !7067 {
entry:
  %vec_.addr = alloca %struct.VEC_vinsn_t_base*, align 8
  %obj_.addr = alloca %struct.vinsn_def*, align 8
  %slot_ = alloca %struct.vinsn_def**, align 8
  store %struct.VEC_vinsn_t_base* %vec_, %struct.VEC_vinsn_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_base** %vec_.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  store %struct.vinsn_def* %obj_, %struct.vinsn_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %obj_.addr, metadata !7073, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata %struct.vinsn_def*** %slot_, metadata !7074, metadata !DIExpression()), !dbg !7072
  %0 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !7072
  %num = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %0, i32 0, i32 0, !dbg !7072
  %1 = load i32, i32* %num, align 8, !dbg !7072
  %2 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !7072
  %alloc = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %2, i32 0, i32 1, !dbg !7072
  %3 = load i32, i32* %alloc, align 4, !dbg !7072
  %cmp = icmp ult i32 %1, %3, !dbg !7072
  %conv = zext i1 %cmp to i32, !dbg !7072
  %4 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !7072
  %vec = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %4, i32 0, i32 2, !dbg !7072
  %5 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !7072
  %num1 = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %5, i32 0, i32 0, !dbg !7072
  %6 = load i32, i32* %num1, align 8, !dbg !7072
  %inc = add i32 %6, 1, !dbg !7072
  store i32 %inc, i32* %num1, align 8, !dbg !7072
  %idxprom = zext i32 %6 to i64, !dbg !7072
  %arrayidx = getelementptr inbounds [1 x %struct.vinsn_def*], [1 x %struct.vinsn_def*]* %vec, i64 0, i64 %idxprom, !dbg !7072
  store %struct.vinsn_def** %arrayidx, %struct.vinsn_def*** %slot_, align 8, !dbg !7072
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %obj_.addr, align 8, !dbg !7072
  %8 = load %struct.vinsn_def**, %struct.vinsn_def*** %slot_, align 8, !dbg !7072
  store %struct.vinsn_def* %7, %struct.vinsn_def** %8, align 8, !dbg !7072
  %9 = load %struct.vinsn_def**, %struct.vinsn_def*** %slot_, align 8, !dbg !7072
  ret %struct.vinsn_def** %9, !dbg !7072
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_vinsn_t_base_space(%struct.VEC_vinsn_t_base* %vec_, i32 %alloc_) #0 !dbg !7075 {
entry:
  %vec_.addr = alloca %struct.VEC_vinsn_t_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_vinsn_t_base* %vec_, %struct.VEC_vinsn_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_base** %vec_.addr, metadata !7078, metadata !DIExpression()), !dbg !7079
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !7080, metadata !DIExpression()), !dbg !7079
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !7079
  %cmp = icmp sge i32 %0, 0, !dbg !7079
  %conv = zext i1 %cmp to i32, !dbg !7079
  %1 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !7079
  %tobool = icmp ne %struct.VEC_vinsn_t_base* %1, null, !dbg !7079
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7079

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !7079
  %alloc = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %2, i32 0, i32 1, !dbg !7079
  %3 = load i32, i32* %alloc, align 4, !dbg !7079
  %4 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !7079
  %num = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %4, i32 0, i32 0, !dbg !7079
  %5 = load i32, i32* %num, align 8, !dbg !7079
  %sub = sub i32 %3, %5, !dbg !7079
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !7079
  %cmp1 = icmp uge i32 %sub, %6, !dbg !7079
  %conv2 = zext i1 %cmp1 to i32, !dbg !7079
  br label %cond.end, !dbg !7079

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !7079
  %tobool3 = icmp ne i32 %7, 0, !dbg !7079
  %lnot = xor i1 %tobool3, true, !dbg !7079
  %lnot.ext = zext i1 %lnot to i32, !dbg !7079
  br label %cond.end, !dbg !7079

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !7079
  ret i32 %cond, !dbg !7079
}

declare dso_local void @def_list_add(%struct._list_node**, %struct.rtx_def*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @compute_live_below_insn(%struct.rtx_def* %insn, %struct.bitmap_head_def* %regs) #0 !dbg !7081 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %regs.addr = alloca %struct.bitmap_head_def*, align 8
  %succ = alloca %struct.rtx_def*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !7084, metadata !DIExpression()), !dbg !7085
  store %struct.bitmap_head_def* %regs, %struct.bitmap_head_def** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %regs.addr, metadata !7086, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %succ, metadata !7088, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.declare(metadata %struct.succ_iterator* %si, metadata !7090, metadata !DIExpression()), !dbg !7091
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7092
  call void @_succ_iter_start(%struct.succ_iterator* sret %tmp, %struct.rtx_def** %succ, %struct.rtx_def* %0, i32 7), !dbg !7092
  %1 = bitcast %struct.succ_iterator* %si to i8*, !dbg !7092
  %2 = bitcast %struct.succ_iterator* %tmp to i8*, !dbg !7092
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false), !dbg !7092
  br label %for.cond, !dbg !7092

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7094
  %call = call zeroext i8 @_succ_iter_cond(%struct.succ_iterator* %si, %struct.rtx_def** %succ, %struct.rtx_def* %3, i8 (%struct.edge_def*, %struct.succ_iterator*)* @_eligible_successor_edge_p), !dbg !7094
  %tobool = icmp ne i8 %call, 0, !dbg !7092
  br i1 %tobool, label %for.body, label %for.end, !dbg !7092

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs.addr, align 8, !dbg !7096
  %5 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !7096
  %call1 = call %struct.bitmap_head_def* @compute_live(%struct.rtx_def* %5), !dbg !7096
  %call2 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %call1), !dbg !7096
  br label %for.inc, !dbg !7096

for.inc:                                          ; preds = %for.body
  call void @_succ_iter_next(%struct.succ_iterator* %si), !dbg !7094
  br label %for.cond, !dbg !7094, !llvm.loop !7097

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7099
}

declare dso_local zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_succ_iter_start(%struct.succ_iterator* noalias sret %agg.result, %struct.rtx_def** %succp, %struct.rtx_def* %insn, i32 %flags) #0 !dbg !7100 {
entry:
  %succp.addr = alloca %struct.rtx_def**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %flags.addr = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  store %struct.rtx_def** %succp, %struct.rtx_def*** %succp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %succp.addr, metadata !7103, metadata !DIExpression()), !dbg !7104
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !7105, metadata !DIExpression()), !dbg !7106
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.declare(metadata %struct.succ_iterator* %agg.result, metadata !7109, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7111, metadata !DIExpression()), !dbg !7112
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7113
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !7113
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7113
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !7113
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !7113
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7113
  store %struct.basic_block_def* %1, %struct.basic_block_def** %bb, align 8, !dbg !7112
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7114
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !7114
  %bf.load = load i32, i32* %3, align 8, !dbg !7114
  %bf.clear = and i32 %bf.load, 65535, !dbg !7114
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7114
  br i1 %cmp, label %cond.false, label %lor.lhs.false, !dbg !7114

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7114
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !7114
  %bf.load1 = load i32, i32* %5, align 8, !dbg !7114
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !7114
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !7114
  br i1 %cmp3, label %cond.false, label %lor.lhs.false4, !dbg !7114

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7114
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !7114
  %bf.load5 = load i32, i32* %7, align 8, !dbg !7114
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !7114
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !7114
  br i1 %cmp7, label %cond.false, label %lor.lhs.false8, !dbg !7114

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7114
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !7114
  %bf.load9 = load i32, i32* %9, align 8, !dbg !7114
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !7114
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !7114
  br i1 %cmp11, label %cond.false, label %lor.lhs.false12, !dbg !7114

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7114
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !7114
  %bf.load13 = load i32, i32* %11, align 8, !dbg !7114
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !7114
  %cmp15 = icmp eq i32 %bf.clear14, 13, !dbg !7114
  br i1 %cmp15, label %land.lhs.true, label %cond.true, !dbg !7114

land.lhs.true:                                    ; preds = %lor.lhs.false12
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7114
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !7114
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !7114
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 5, !dbg !7114
  %rt_int = bitcast %union.rtunion_def* %arrayidx18 to i32*, !dbg !7114
  %13 = load i32, i32* %rt_int, align 8, !dbg !7114
  %cmp19 = icmp eq i32 %13, 10, !dbg !7114
  br i1 %cmp19, label %cond.false, label %cond.true, !dbg !7114

cond.true:                                        ; preds = %land.lhs.true, %lor.lhs.false12
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1206, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7114
  br label %cond.end, !dbg !7114

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  br label %cond.end, !dbg !7114

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7114
  %14 = load i32, i32* %flags.addr, align 4, !dbg !7115
  %conv = trunc i32 %14 to i16, !dbg !7115
  %flags20 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 5, !dbg !7116
  store i16 %conv, i16* %flags20, align 8, !dbg !7117
  %15 = load %struct.rtx_def**, %struct.rtx_def*** %succp.addr, align 8, !dbg !7118
  store %struct.rtx_def* null, %struct.rtx_def** %15, align 8, !dbg !7119
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 1, !dbg !7120
  store %struct.edge_def* null, %struct.edge_def** %e1, align 8, !dbg !7121
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 2, !dbg !7122
  store %struct.edge_def* null, %struct.edge_def** %e2, align 8, !dbg !7123
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7124
  %bb21 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 4, !dbg !7125
  store %struct.basic_block_def* %16, %struct.basic_block_def** %bb21, align 8, !dbg !7126
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 6, !dbg !7127
  store i16 0, i16* %current_flags, align 2, !dbg !7128
  %current_exit = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 7, !dbg !7129
  store i32 -1, i32* %current_exit, align 4, !dbg !7130
  %loop_exits = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 8, !dbg !7131
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !7132
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7133
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7135
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %18, i64 0, !dbg !7135
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7135
  %19 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7135
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %19, i32 0, i32 1, !dbg !7135
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7135
  %cmp22 = icmp ne %struct.basic_block_def* %17, %20, !dbg !7136
  br i1 %cmp22, label %land.lhs.true24, label %if.else, !dbg !7137

land.lhs.true24:                                  ; preds = %cond.end
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7138
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i32 0, i32 7, !dbg !7138
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7138
  %22 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7138
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %22, i32 0, i32 1, !dbg !7138
  %23 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7138
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7139
  %cmp25 = icmp ne %struct.rtx_def* %23, %24, !dbg !7140
  br i1 %cmp25, label %if.then, label %if.else, !dbg !7141

if.then:                                          ; preds = %land.lhs.true24
  %bb_end = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 0, !dbg !7142
  store i8 0, i8* %bb_end, align 8, !dbg !7144
  %ei = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 3, !dbg !7145
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i32 0, i32 0, !dbg !7146
  store i32 0, i32* %index, align 8, !dbg !7147
  %ei27 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 3, !dbg !7148
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei27, i32 0, i32 1, !dbg !7149
  store %struct.VEC_edge_gc** null, %struct.VEC_edge_gc*** %container, align 8, !dbg !7150
  br label %if.end, !dbg !7151

if.else:                                          ; preds = %land.lhs.true24, %cond.end
  %ei28 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 3, !dbg !7152
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7154
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i32 0, i32 1, !dbg !7154
  %call = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs), !dbg !7154
  %26 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !7154
  %27 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %26, i32 0, i32 0, !dbg !7154
  %28 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !7154
  store i32 %28, i32* %27, align 8, !dbg !7154
  %29 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %26, i32 0, i32 1, !dbg !7154
  %30 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !7154
  store %struct.VEC_edge_gc** %30, %struct.VEC_edge_gc*** %29, align 8, !dbg !7154
  %31 = bitcast %struct.edge_iterator* %ei28 to i8*, !dbg !7154
  %32 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !7154
  %bb_end29 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %agg.result, i32 0, i32 0, !dbg !7155
  store i8 1, i8* %bb_end29, align 8, !dbg !7156
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7157
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_succ_iter_cond(%struct.succ_iterator* %ip, %struct.rtx_def** %succp, %struct.rtx_def* %insn, i8 (%struct.edge_def*, %struct.succ_iterator*)* %check) #0 !dbg !7158 {
entry:
  %retval = alloca i8, align 1
  %ip.addr = alloca %struct.succ_iterator*, align 8
  %succp.addr = alloca %struct.rtx_def**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %check.addr = alloca i8 (%struct.edge_def*, %struct.succ_iterator*)*, align 8
  %e_tmp = alloca %struct.edge_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %bb67 = alloca %struct.basic_block_def*, align 8
  store %struct.succ_iterator* %ip, %struct.succ_iterator** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.succ_iterator** %ip.addr, metadata !7165, metadata !DIExpression()), !dbg !7166
  store %struct.rtx_def** %succp, %struct.rtx_def*** %succp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %succp.addr, metadata !7167, metadata !DIExpression()), !dbg !7168
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !7169, metadata !DIExpression()), !dbg !7170
  store i8 (%struct.edge_def*, %struct.succ_iterator*)* %check, i8 (%struct.edge_def*, %struct.succ_iterator*)** %check.addr, align 8
  call void @llvm.dbg.declare(metadata i8 (%struct.edge_def*, %struct.succ_iterator*)** %check.addr, metadata !7171, metadata !DIExpression()), !dbg !7172
  %0 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7173
  %bb_end = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %0, i32 0, i32 0, !dbg !7175
  %1 = load i8, i8* %bb_end, align 8, !dbg !7175
  %tobool = icmp ne i8 %1, 0, !dbg !7173
  br i1 %tobool, label %if.else, label %if.then, !dbg !7176

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %succp.addr, align 8, !dbg !7177
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !7180
  %cmp = icmp ne %struct.rtx_def* %3, null, !dbg !7181
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !7182

lor.lhs.false:                                    ; preds = %if.then
  %4 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7183
  %flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %4, i32 0, i32 5, !dbg !7184
  %5 = load i16, i16* %flags, align 8, !dbg !7184
  %conv = sext i16 %5 to i32, !dbg !7183
  %and = and i32 %conv, 1, !dbg !7185
  %cmp1 = icmp eq i32 %and, 0, !dbg !7186
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !7187

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %retval, align 1, !dbg !7188
  br label %return, !dbg !7188

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7189
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !7189
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7189
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !7189
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7189
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7189
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %succp.addr, align 8, !dbg !7190
  store %struct.rtx_def* %7, %struct.rtx_def** %8, align 8, !dbg !7191
  %9 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7192
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %9, i32 0, i32 6, !dbg !7193
  store i16 1, i16* %current_flags, align 2, !dbg !7194
  store i8 1, i8* %retval, align 1, !dbg !7195
  br label %return, !dbg !7195

if.else:                                          ; preds = %entry
  br label %while.body, !dbg !7196

while.body:                                       ; preds = %if.else, %if.then61
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e_tmp, metadata !7198, metadata !DIExpression()), !dbg !7200
  store %struct.edge_def* null, %struct.edge_def** %e_tmp, align 8, !dbg !7200
  %10 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7201
  %loop_exits = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %10, i32 0, i32 8, !dbg !7203
  %11 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !7203
  %tobool4 = icmp ne %struct.VEC_edge_heap* %11, null, !dbg !7201
  br i1 %tobool4, label %if.then5, label %if.end17, !dbg !7204

if.then5:                                         ; preds = %while.body
  br label %do.body, !dbg !7205

do.body:                                          ; preds = %land.end, %if.then5
  %12 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7207
  %loop_exits6 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %12, i32 0, i32 8, !dbg !7207
  %13 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits6, align 8, !dbg !7207
  %tobool7 = icmp ne %struct.VEC_edge_heap* %13, null, !dbg !7207
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !7207

cond.true:                                        ; preds = %do.body
  %14 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7207
  %loop_exits8 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %14, i32 0, i32 8, !dbg !7207
  %15 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits8, align 8, !dbg !7207
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %15, i32 0, i32 0, !dbg !7207
  br label %cond.end, !dbg !7207

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !7207

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7207
  %16 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7207
  %current_exit = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %16, i32 0, i32 7, !dbg !7207
  %17 = load i32, i32* %current_exit, align 4, !dbg !7207
  %call = call i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %cond, i32 %17, %struct.edge_def** %e_tmp), !dbg !7207
  %18 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7209
  %current_exit9 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %18, i32 0, i32 7, !dbg !7210
  %19 = load i32, i32* %current_exit9, align 4, !dbg !7211
  %inc = add nsw i32 %19, 1, !dbg !7211
  store i32 %inc, i32* %current_exit9, align 4, !dbg !7211
  br label %do.cond, !dbg !7212

do.cond:                                          ; preds = %cond.end
  %20 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !7213
  %tobool10 = icmp ne %struct.edge_def* %20, null, !dbg !7213
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !7214

land.rhs:                                         ; preds = %do.cond
  %21 = load i8 (%struct.edge_def*, %struct.succ_iterator*)*, i8 (%struct.edge_def*, %struct.succ_iterator*)** %check.addr, align 8, !dbg !7215
  %22 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !7216
  %23 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7217
  %call11 = call zeroext i8 %21(%struct.edge_def* %22, %struct.succ_iterator* %23), !dbg !7215
  %tobool12 = icmp ne i8 %call11, 0, !dbg !7218
  %lnot = xor i1 %tobool12, true, !dbg !7218
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %24 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !7219
  br i1 %24, label %do.body, label %do.end, !dbg !7212, !llvm.loop !7220

do.end:                                           ; preds = %land.end
  %25 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !7222
  %tobool13 = icmp ne %struct.edge_def* %25, null, !dbg !7222
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !7224

if.then14:                                        ; preds = %do.end
  %26 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7225
  %loop_exits15 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %26, i32 0, i32 8, !dbg !7225
  call void @VEC_edge_heap_free(%struct.VEC_edge_heap** %loop_exits15), !dbg !7225
  br label %if.end16, !dbg !7225

if.end16:                                         ; preds = %if.then14, %do.end
  br label %if.end17, !dbg !7226

if.end17:                                         ; preds = %if.end16, %while.body
  %27 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !7227
  %tobool18 = icmp ne %struct.edge_def* %27, null, !dbg !7227
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !7229

if.then19:                                        ; preds = %if.end17
  %28 = load %struct.edge_def*, %struct.edge_def** %e_tmp, align 8, !dbg !7230
  %29 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7232
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %29, i32 0, i32 1, !dbg !7233
  store %struct.edge_def* %28, %struct.edge_def** %e1, align 8, !dbg !7234
  br label %while.end63, !dbg !7235

if.end20:                                         ; preds = %if.end17
  br label %while.cond21, !dbg !7236

while.cond21:                                     ; preds = %if.end57, %if.end20
  %30 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7237
  %ei = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %30, i32 0, i32 3, !dbg !7238
  %31 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7239
  %e122 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %31, i32 0, i32 1, !dbg !7240
  %32 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !7241
  %33 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %32, i32 0, i32 0, !dbg !7241
  %34 = load i32, i32* %33, align 8, !dbg !7241
  %35 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %32, i32 0, i32 1, !dbg !7241
  %36 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %35, align 8, !dbg !7241
  %call23 = call zeroext i8 @ei_cond(i32 %34, %struct.VEC_edge_gc** %36, %struct.edge_def** %e122), !dbg !7241
  %tobool24 = icmp ne i8 %call23, 0, !dbg !7236
  br i1 %tobool24, label %while.body25, label %while.end, !dbg !7236

while.body25:                                     ; preds = %while.cond21
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7242, metadata !DIExpression()), !dbg !7244
  %37 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7245
  %e126 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %37, i32 0, i32 1, !dbg !7246
  %38 = load %struct.edge_def*, %struct.edge_def** %e126, align 8, !dbg !7246
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i32 0, i32 1, !dbg !7247
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7247
  store %struct.basic_block_def* %39, %struct.basic_block_def** %bb, align 8, !dbg !7244
  %40 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7248
  %flags27 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %40, i32 0, i32 5, !dbg !7250
  %41 = load i16, i16* %flags27, align 8, !dbg !7250
  %conv28 = sext i16 %41 to i32, !dbg !7248
  %and29 = and i32 %conv28, 8, !dbg !7251
  %tobool30 = icmp ne i32 %and29, 0, !dbg !7251
  br i1 %tobool30, label %land.lhs.true, label %if.end52, !dbg !7252

land.lhs.true:                                    ; preds = %while.body25
  %42 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !7253
  %tobool31 = icmp ne i32 %42, 0, !dbg !7253
  br i1 %tobool31, label %land.lhs.true32, label %if.end52, !dbg !7254

land.lhs.true32:                                  ; preds = %land.lhs.true
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7255
  %call33 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %43), !dbg !7256
  %tobool34 = icmp ne i8 %call33, 0, !dbg !7256
  br i1 %tobool34, label %lor.lhs.false35, label %if.then43, !dbg !7257

lor.lhs.false35:                                  ; preds = %land.lhs.true32
  %44 = load i32*, i32** @block_to_bb, align 8, !dbg !7258
  %45 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7258
  %bb36 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %45, i32 0, i32 4, !dbg !7258
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %bb36, align 8, !dbg !7258
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %46, i32 0, i32 9, !dbg !7258
  %47 = load i32, i32* %index, align 8, !dbg !7258
  %idxprom = sext i32 %47 to i64, !dbg !7258
  %arrayidx37 = getelementptr inbounds i32, i32* %44, i64 %idxprom, !dbg !7258
  %48 = load i32, i32* %arrayidx37, align 4, !dbg !7258
  %49 = load i32*, i32** @block_to_bb, align 8, !dbg !7259
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7259
  %index38 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %50, i32 0, i32 9, !dbg !7259
  %51 = load i32, i32* %index38, align 8, !dbg !7259
  %idxprom39 = sext i32 %51 to i64, !dbg !7259
  %arrayidx40 = getelementptr inbounds i32, i32* %49, i64 %idxprom39, !dbg !7259
  %52 = load i32, i32* %arrayidx40, align 4, !dbg !7259
  %cmp41 = icmp slt i32 %48, %52, !dbg !7260
  br i1 %cmp41, label %if.then43, label %if.end52, !dbg !7261

if.then43:                                        ; preds = %lor.lhs.false35, %land.lhs.true32
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7262
  %call44 = call %struct.VEC_edge_heap* @get_all_loop_exits(%struct.basic_block_def* %53), !dbg !7264
  %54 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7265
  %loop_exits45 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %54, i32 0, i32 8, !dbg !7266
  store %struct.VEC_edge_heap* %call44, %struct.VEC_edge_heap** %loop_exits45, align 8, !dbg !7267
  %55 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7268
  %loop_exits46 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %55, i32 0, i32 8, !dbg !7270
  %56 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits46, align 8, !dbg !7270
  %tobool47 = icmp ne %struct.VEC_edge_heap* %56, null, !dbg !7268
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !7271

if.then48:                                        ; preds = %if.then43
  %57 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7272
  %current_exit49 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %57, i32 0, i32 7, !dbg !7274
  store i32 0, i32* %current_exit49, align 4, !dbg !7275
  %58 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7276
  %ei50 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %58, i32 0, i32 3, !dbg !7277
  call void @ei_next(%struct.edge_iterator* %ei50), !dbg !7278
  br label %while.end, !dbg !7279

if.end51:                                         ; preds = %if.then43
  br label %if.end52, !dbg !7280

if.end52:                                         ; preds = %if.end51, %lor.lhs.false35, %land.lhs.true, %while.body25
  %59 = load i8 (%struct.edge_def*, %struct.succ_iterator*)*, i8 (%struct.edge_def*, %struct.succ_iterator*)** %check.addr, align 8, !dbg !7281
  %60 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7283
  %e153 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %60, i32 0, i32 1, !dbg !7284
  %61 = load %struct.edge_def*, %struct.edge_def** %e153, align 8, !dbg !7284
  %62 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7285
  %call54 = call zeroext i8 %59(%struct.edge_def* %61, %struct.succ_iterator* %62), !dbg !7281
  %tobool55 = icmp ne i8 %call54, 0, !dbg !7281
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !7286

if.then56:                                        ; preds = %if.end52
  br label %while.end, !dbg !7287

if.end57:                                         ; preds = %if.end52
  %63 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7288
  %ei58 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %63, i32 0, i32 3, !dbg !7289
  call void @ei_next(%struct.edge_iterator* %ei58), !dbg !7290
  br label %while.cond21, !dbg !7236, !llvm.loop !7291

while.end:                                        ; preds = %if.then56, %if.then48, %while.cond21
  %64 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7293
  %loop_exits59 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %64, i32 0, i32 8, !dbg !7295
  %65 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits59, align 8, !dbg !7295
  %tobool60 = icmp ne %struct.VEC_edge_heap* %65, null, !dbg !7293
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !7296

if.then61:                                        ; preds = %while.end
  br label %while.body, !dbg !7297, !llvm.loop !7298

if.end62:                                         ; preds = %while.end
  br label %while.end63, !dbg !7300

while.end63:                                      ; preds = %if.end62, %if.then19
  %66 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7301
  %e164 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %66, i32 0, i32 1, !dbg !7303
  %67 = load %struct.edge_def*, %struct.edge_def** %e164, align 8, !dbg !7303
  %tobool65 = icmp ne %struct.edge_def* %67, null, !dbg !7301
  br i1 %tobool65, label %if.then66, label %if.else103, !dbg !7304

if.then66:                                        ; preds = %while.end63
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb67, metadata !7305, metadata !DIExpression()), !dbg !7307
  %68 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7308
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %68, i32 0, i32 2, !dbg !7309
  %69 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !7309
  %dest68 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %69, i32 0, i32 1, !dbg !7310
  %70 = load %struct.basic_block_def*, %struct.basic_block_def** %dest68, align 8, !dbg !7310
  store %struct.basic_block_def* %70, %struct.basic_block_def** %bb67, align 8, !dbg !7307
  %71 = load %struct.basic_block_def*, %struct.basic_block_def** %bb67, align 8, !dbg !7311
  %72 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7313
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %72, i64 0, !dbg !7313
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7313
  %73 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7313
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %73, i32 0, i32 1, !dbg !7313
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7313
  %cmp69 = icmp eq %struct.basic_block_def* %71, %74, !dbg !7314
  br i1 %cmp69, label %if.then74, label %lor.lhs.false71, !dbg !7315

lor.lhs.false71:                                  ; preds = %if.then66
  %75 = load %struct.basic_block_def*, %struct.basic_block_def** %bb67, align 8, !dbg !7316
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** @after_recovery, align 8, !dbg !7317
  %cmp72 = icmp eq %struct.basic_block_def* %75, %76, !dbg !7318
  br i1 %cmp72, label %if.then74, label %if.else75, !dbg !7319

if.then74:                                        ; preds = %lor.lhs.false71, %if.then66
  %77 = load %struct.rtx_def*, %struct.rtx_def** @exit_insn, align 8, !dbg !7320
  %78 = load %struct.rtx_def**, %struct.rtx_def*** %succp.addr, align 8, !dbg !7321
  store %struct.rtx_def* %77, %struct.rtx_def** %78, align 8, !dbg !7322
  br label %if.end102, !dbg !7323

if.else75:                                        ; preds = %lor.lhs.false71
  %79 = load %struct.basic_block_def*, %struct.basic_block_def** %bb67, align 8, !dbg !7324
  %call76 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %79), !dbg !7326
  %80 = load %struct.rtx_def**, %struct.rtx_def*** %succp.addr, align 8, !dbg !7327
  store %struct.rtx_def* %call76, %struct.rtx_def** %80, align 8, !dbg !7328
  %81 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7329
  %flags77 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %81, i32 0, i32 5, !dbg !7329
  %82 = load i16, i16* %flags77, align 8, !dbg !7329
  %conv78 = sext i16 %82 to i32, !dbg !7329
  %cmp79 = icmp ne i32 %conv78, 1, !dbg !7329
  br i1 %cmp79, label %cond.false90, label %lor.lhs.false81, !dbg !7329

lor.lhs.false81:                                  ; preds = %if.else75
  %83 = load %struct.rtx_def**, %struct.rtx_def*** %succp.addr, align 8, !dbg !7329
  %84 = load %struct.rtx_def*, %struct.rtx_def** %83, align 8, !dbg !7329
  %85 = load %struct.basic_block_def*, %struct.basic_block_def** %bb67, align 8, !dbg !7329
  %call82 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %85), !dbg !7329
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call82, i32 0, i32 1, !dbg !7329
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !7329
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 2, !dbg !7329
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !7329
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !7329
  %cmp87 = icmp eq %struct.rtx_def* %84, %86, !dbg !7329
  br i1 %cmp87, label %cond.false90, label %cond.true89, !dbg !7329

cond.true89:                                      ; preds = %lor.lhs.false81
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1331, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7329
  br label %cond.end91, !dbg !7329

cond.false90:                                     ; preds = %lor.lhs.false81, %if.else75
  br label %cond.end91, !dbg !7329

cond.end91:                                       ; preds = %cond.false90, %cond.true89
  %cond92 = phi i32 [ 0, %cond.true89 ], [ 0, %cond.false90 ], !dbg !7329
  %87 = load %struct.rtx_def**, %struct.rtx_def*** %succp.addr, align 8, !dbg !7330
  %88 = load %struct.rtx_def*, %struct.rtx_def** %87, align 8, !dbg !7330
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1, !dbg !7330
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !7330
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 3, !dbg !7330
  %rt_bb = bitcast %union.rtunion_def* %arrayidx95 to %struct.basic_block_def**, !dbg !7330
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7330
  %90 = load %struct.basic_block_def*, %struct.basic_block_def** %bb67, align 8, !dbg !7330
  %cmp96 = icmp eq %struct.basic_block_def* %89, %90, !dbg !7330
  br i1 %cmp96, label %cond.false99, label %cond.true98, !dbg !7330

cond.true98:                                      ; preds = %cond.end91
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1332, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7330
  br label %cond.end100, !dbg !7330

cond.false99:                                     ; preds = %cond.end91
  br label %cond.end100, !dbg !7330

cond.end100:                                      ; preds = %cond.false99, %cond.true98
  %cond101 = phi i32 [ 0, %cond.true98 ], [ 0, %cond.false99 ], !dbg !7330
  br label %if.end102

if.end102:                                        ; preds = %cond.end100, %if.then74
  store i8 1, i8* %retval, align 1, !dbg !7331
  br label %return, !dbg !7331

if.else103:                                       ; preds = %while.end63
  store i8 0, i8* %retval, align 1, !dbg !7332
  br label %return, !dbg !7332

return:                                           ; preds = %if.else103, %if.end102, %if.end, %if.then3
  %91 = load i8, i8* %retval, align 1, !dbg !7333
  ret i8 %91, !dbg !7333
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_eligible_successor_edge_p(%struct.edge_def* %e1, %struct.succ_iterator* %ip) #0 !dbg !7334 {
entry:
  %retval = alloca i8, align 1
  %e1.addr = alloca %struct.edge_def*, align 8
  %ip.addr = alloca %struct.succ_iterator*, align 8
  %e2 = alloca %struct.edge_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %flags = alloca i32, align 4
  %src_outside_rgn = alloca i8, align 1
  %ne = alloca %struct.edge_def*, align 8
  %nbb = alloca %struct.basic_block_def*, align 8
  %succeeds_in_top_order = alloca i8, align 1
  store %struct.edge_def* %e1, %struct.edge_def** %e1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e1.addr, metadata !7335, metadata !DIExpression()), !dbg !7336
  store %struct.succ_iterator* %ip, %struct.succ_iterator** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.succ_iterator** %ip.addr, metadata !7337, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e2, metadata !7339, metadata !DIExpression()), !dbg !7340
  %0 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !7341
  store %struct.edge_def* %0, %struct.edge_def** %e2, align 8, !dbg !7340
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7342, metadata !DIExpression()), !dbg !7343
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !7344, metadata !DIExpression()), !dbg !7345
  %1 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7346
  %flags1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %1, i32 0, i32 5, !dbg !7347
  %2 = load i16, i16* %flags1, align 8, !dbg !7347
  %conv = sext i16 %2 to i32, !dbg !7346
  store i32 %conv, i32* %flags, align 4, !dbg !7345
  call void @llvm.dbg.declare(metadata i8* %src_outside_rgn, metadata !7348, metadata !DIExpression()), !dbg !7349
  %3 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !7350
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %3, i32 0, i32 0, !dbg !7351
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7351
  %call = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %4), !dbg !7352
  %tobool = icmp ne i8 %call, 0, !dbg !7353
  %lnot = xor i1 %tobool, true, !dbg !7353
  %lnot.ext = zext i1 %lnot to i32, !dbg !7353
  %conv2 = trunc i32 %lnot.ext to i8, !dbg !7353
  store i8 %conv2, i8* %src_outside_rgn, align 1, !dbg !7349
  %5 = load i32, i32* %flags, align 4, !dbg !7354
  %cmp = icmp ne i32 %5, 0, !dbg !7354
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !7354

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1363, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7354
  br label %cond.end, !dbg !7354

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7354

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7354
  %6 = load i8, i8* %src_outside_rgn, align 1, !dbg !7355
  %tobool4 = icmp ne i8 %6, 0, !dbg !7355
  br i1 %tobool4, label %if.then, label %if.end13, !dbg !7357

if.then:                                          ; preds = %cond.end
  %7 = load i32, i32* %flags, align 4, !dbg !7358
  %and = and i32 %7, 12, !dbg !7358
  %tobool5 = icmp ne i32 %and, 0, !dbg !7358
  br i1 %tobool5, label %cond.false7, label %cond.true6, !dbg !7358

cond.true6:                                       ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1369, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7358
  br label %cond.end8, !dbg !7358

cond.false7:                                      ; preds = %if.then
  br label %cond.end8, !dbg !7358

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi i32 [ 0, %cond.true6 ], [ 0, %cond.false7 ], !dbg !7358
  %8 = load i32, i32* %flags, align 4, !dbg !7360
  %and10 = and i32 %8, 4, !dbg !7362
  %tobool11 = icmp ne i32 %and10, 0, !dbg !7362
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !7363

if.then12:                                        ; preds = %cond.end8
  store i8 0, i8* %retval, align 1, !dbg !7364
  br label %return, !dbg !7364

if.end:                                           ; preds = %cond.end8
  br label %if.end13, !dbg !7365

if.end13:                                         ; preds = %if.end, %cond.end
  %9 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !7366
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %9, i32 0, i32 1, !dbg !7367
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7367
  store %struct.basic_block_def* %10, %struct.basic_block_def** %bb, align 8, !dbg !7368
  br label %while.body, !dbg !7369

while.body:                                       ; preds = %if.end13, %if.end34, %cond.end62
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7370
  %call14 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %11), !dbg !7373
  %tobool15 = icmp ne i8 %call14, 0, !dbg !7373
  br i1 %tobool15, label %if.end35, label %if.then16, !dbg !7374

if.then16:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.edge_def** %ne, metadata !7375, metadata !DIExpression()), !dbg !7377
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %nbb, metadata !7378, metadata !DIExpression()), !dbg !7379
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7380
  %call17 = call zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %12), !dbg !7382
  %tobool18 = icmp ne i8 %call17, 0, !dbg !7382
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !7383

if.then19:                                        ; preds = %if.then16
  br label %while.end, !dbg !7384

if.end20:                                         ; preds = %if.then16
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7385
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 1, !dbg !7385
  %14 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7385
  %tobool21 = icmp ne %struct.VEC_edge_gc* %14, null, !dbg !7385
  br i1 %tobool21, label %cond.true22, label %cond.false24, !dbg !7385

cond.true22:                                      ; preds = %if.end20
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7385
  %succs23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i32 0, i32 1, !dbg !7385
  %16 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs23, align 8, !dbg !7385
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %16, i32 0, i32 0, !dbg !7385
  br label %cond.end25, !dbg !7385

cond.false24:                                     ; preds = %if.end20
  br label %cond.end25, !dbg !7385

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi %struct.VEC_edge_base* [ %base, %cond.true22 ], [ null, %cond.false24 ], !dbg !7385
  %call27 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond26, i32 0), !dbg !7385
  store %struct.edge_def* %call27, %struct.edge_def** %ne, align 8, !dbg !7386
  %17 = load %struct.edge_def*, %struct.edge_def** %ne, align 8, !dbg !7387
  %dest28 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i32 0, i32 1, !dbg !7388
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %dest28, align 8, !dbg !7388
  store %struct.basic_block_def* %18, %struct.basic_block_def** %nbb, align 8, !dbg !7389
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %nbb, align 8, !dbg !7390
  %call29 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %19), !dbg !7392
  %tobool30 = icmp ne i8 %call29, 0, !dbg !7392
  br i1 %tobool30, label %if.end34, label %land.lhs.true, !dbg !7393

land.lhs.true:                                    ; preds = %cond.end25
  %20 = load i32, i32* %flags, align 4, !dbg !7394
  %and31 = and i32 %20, 4, !dbg !7395
  %tobool32 = icmp ne i32 %and31, 0, !dbg !7395
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !7396

if.then33:                                        ; preds = %land.lhs.true
  br label %while.end, !dbg !7397

if.end34:                                         ; preds = %land.lhs.true, %cond.end25
  %21 = load %struct.edge_def*, %struct.edge_def** %ne, align 8, !dbg !7398
  store %struct.edge_def* %21, %struct.edge_def** %e2, align 8, !dbg !7399
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %nbb, align 8, !dbg !7400
  store %struct.basic_block_def* %22, %struct.basic_block_def** %bb, align 8, !dbg !7401
  br label %while.body, !dbg !7402, !llvm.loop !7403

if.end35:                                         ; preds = %while.body
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7405
  %call36 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %23), !dbg !7407
  %tobool37 = icmp ne i8 %call36, 0, !dbg !7407
  br i1 %tobool37, label %if.end42, label %land.lhs.true38, !dbg !7408

land.lhs.true38:                                  ; preds = %if.end35
  %24 = load i32, i32* %flags, align 4, !dbg !7409
  %and39 = and i32 %24, 4, !dbg !7410
  %tobool40 = icmp ne i32 %and39, 0, !dbg !7410
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !7411

if.then41:                                        ; preds = %land.lhs.true38
  store i8 0, i8* %retval, align 1, !dbg !7412
  br label %return, !dbg !7412

if.end42:                                         ; preds = %land.lhs.true38, %if.end35
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7413
  %succs43 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i32 0, i32 1, !dbg !7413
  %26 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs43, align 8, !dbg !7413
  %tobool44 = icmp ne %struct.VEC_edge_gc* %26, null, !dbg !7413
  br i1 %tobool44, label %cond.true45, label %cond.false48, !dbg !7413

cond.true45:                                      ; preds = %if.end42
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7413
  %succs46 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i32 0, i32 1, !dbg !7413
  %28 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs46, align 8, !dbg !7413
  %base47 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %28, i32 0, i32 0, !dbg !7413
  br label %cond.end49, !dbg !7413

cond.false48:                                     ; preds = %if.end42
  br label %cond.end49, !dbg !7413

cond.end49:                                       ; preds = %cond.false48, %cond.true45
  %cond50 = phi %struct.VEC_edge_base* [ %base47, %cond.true45 ], [ null, %cond.false48 ], !dbg !7413
  %call51 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond50), !dbg !7413
  %cmp52 = icmp eq i32 %call51, 0, !dbg !7415
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !7416

if.then54:                                        ; preds = %cond.end49
  store i8 0, i8* %retval, align 1, !dbg !7417
  br label %return, !dbg !7417

if.end55:                                         ; preds = %cond.end49
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7418
  %succs56 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i32 0, i32 1, !dbg !7418
  %30 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs56, align 8, !dbg !7418
  %tobool57 = icmp ne %struct.VEC_edge_gc* %30, null, !dbg !7418
  br i1 %tobool57, label %cond.true58, label %cond.false61, !dbg !7418

cond.true58:                                      ; preds = %if.end55
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7418
  %succs59 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i32 0, i32 1, !dbg !7418
  %32 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs59, align 8, !dbg !7418
  %base60 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %32, i32 0, i32 0, !dbg !7418
  br label %cond.end62, !dbg !7418

cond.false61:                                     ; preds = %if.end55
  br label %cond.end62, !dbg !7418

cond.end62:                                       ; preds = %cond.false61, %cond.true58
  %cond63 = phi %struct.VEC_edge_base* [ %base60, %cond.true58 ], [ null, %cond.false61 ], !dbg !7418
  %call64 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond63, i32 0), !dbg !7418
  store %struct.edge_def* %call64, %struct.edge_def** %e2, align 8, !dbg !7419
  %33 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !7420
  %dest65 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %33, i32 0, i32 1, !dbg !7421
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %dest65, align 8, !dbg !7421
  store %struct.basic_block_def* %34, %struct.basic_block_def** %bb, align 8, !dbg !7422
  br label %while.body, !dbg !7369, !llvm.loop !7403

while.end:                                        ; preds = %if.then33, %if.then19
  %35 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !7423
  %36 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7424
  %e266 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %36, i32 0, i32 2, !dbg !7425
  store %struct.edge_def* %35, %struct.edge_def** %e266, align 8, !dbg !7426
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7427
  %call67 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %37), !dbg !7429
  %tobool68 = icmp ne i8 %call67, 0, !dbg !7429
  br i1 %tobool68, label %if.then69, label %if.end117, !dbg !7430

if.then69:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8* %succeeds_in_top_order, metadata !7431, metadata !DIExpression()), !dbg !7433
  %38 = load i32*, i32** @block_to_bb, align 8, !dbg !7434
  %39 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7434
  %bb70 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %39, i32 0, i32 4, !dbg !7434
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %bb70, align 8, !dbg !7434
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i32 0, i32 9, !dbg !7434
  %41 = load i32, i32* %index, align 8, !dbg !7434
  %idxprom = sext i32 %41 to i64, !dbg !7434
  %arrayidx = getelementptr inbounds i32, i32* %38, i64 %idxprom, !dbg !7434
  %42 = load i32, i32* %arrayidx, align 4, !dbg !7434
  %43 = load i32*, i32** @block_to_bb, align 8, !dbg !7435
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7435
  %index71 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %44, i32 0, i32 9, !dbg !7435
  %45 = load i32, i32* %index71, align 8, !dbg !7435
  %idxprom72 = sext i32 %45 to i64, !dbg !7435
  %arrayidx73 = getelementptr inbounds i32, i32* %43, i64 %idxprom72, !dbg !7435
  %46 = load i32, i32* %arrayidx73, align 4, !dbg !7435
  %cmp74 = icmp slt i32 %42, %46, !dbg !7436
  %conv75 = zext i1 %cmp74 to i32, !dbg !7436
  %conv76 = trunc i32 %conv75 to i8, !dbg !7437
  store i8 %conv76, i8* %succeeds_in_top_order, align 1, !dbg !7433
  %47 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7438
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %47, i32 0, i32 6, !dbg !7439
  store i16 1, i16* %current_flags, align 2, !dbg !7440
  %48 = load i8, i8* %succeeds_in_top_order, align 1, !dbg !7441
  %tobool77 = icmp ne i8 %48, 0, !dbg !7441
  br i1 %tobool77, label %if.then78, label %if.end92, !dbg !7443

if.then78:                                        ; preds = %if.then69
  %49 = load i8, i8* %src_outside_rgn, align 1, !dbg !7444
  %tobool79 = icmp ne i8 %49, 0, !dbg !7444
  br i1 %tobool79, label %lor.lhs.false, label %cond.false82, !dbg !7444

lor.lhs.false:                                    ; preds = %if.then78
  %50 = load i32, i32* @flag_sel_sched_pipelining_outer_loops, align 4, !dbg !7444
  %tobool80 = icmp ne i32 %50, 0, !dbg !7444
  br i1 %tobool80, label %cond.false82, label %cond.true81, !dbg !7444

cond.true81:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7444
  br label %cond.end83, !dbg !7444

cond.false82:                                     ; preds = %lor.lhs.false, %if.then78
  br label %cond.end83, !dbg !7444

cond.end83:                                       ; preds = %cond.false82, %cond.true81
  %cond84 = phi i32 [ 0, %cond.true81 ], [ 0, %cond.false82 ], !dbg !7444
  %51 = load i32, i32* %flags, align 4, !dbg !7446
  %and85 = and i32 %51, 1, !dbg !7447
  %tobool86 = icmp ne i32 %and85, 0, !dbg !7448
  %lnot87 = xor i1 %tobool86, true, !dbg !7448
  %lnot89 = xor i1 %lnot87, true, !dbg !7449
  %lnot.ext90 = zext i1 %lnot89 to i32, !dbg !7449
  %conv91 = trunc i32 %lnot.ext90 to i8, !dbg !7449
  store i8 %conv91, i8* %retval, align 1, !dbg !7450
  br label %return, !dbg !7450

if.end92:                                         ; preds = %if.then69
  %52 = load i8, i8* @pipelining_p, align 1, !dbg !7451
  %conv93 = zext i8 %52 to i32, !dbg !7451
  %tobool94 = icmp ne i32 %conv93, 0, !dbg !7451
  br i1 %tobool94, label %land.lhs.true95, label %if.end108, !dbg !7453

land.lhs.true95:                                  ; preds = %if.end92
  %53 = load %struct.edge_def*, %struct.edge_def** %e1.addr, align 8, !dbg !7454
  %src96 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %53, i32 0, i32 0, !dbg !7455
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %src96, align 8, !dbg !7455
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %54, i32 0, i32 3, !dbg !7456
  %55 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !7456
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7457
  %loop_father97 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %56, i32 0, i32 3, !dbg !7458
  %57 = load %struct.loop*, %struct.loop** %loop_father97, align 8, !dbg !7458
  %cmp98 = icmp eq %struct.loop* %55, %57, !dbg !7459
  br i1 %cmp98, label %if.then100, label %if.end108, !dbg !7460

if.then100:                                       ; preds = %land.lhs.true95
  %58 = load i32, i32* %flags, align 4, !dbg !7461
  %and101 = and i32 %58, 1, !dbg !7462
  %tobool102 = icmp ne i32 %and101, 0, !dbg !7463
  %lnot103 = xor i1 %tobool102, true, !dbg !7463
  %lnot105 = xor i1 %lnot103, true, !dbg !7464
  %lnot.ext106 = zext i1 %lnot105 to i32, !dbg !7464
  %conv107 = trunc i32 %lnot.ext106 to i8, !dbg !7464
  store i8 %conv107, i8* %retval, align 1, !dbg !7465
  br label %return, !dbg !7465

if.end108:                                        ; preds = %land.lhs.true95, %if.end92
  %59 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7466
  %current_flags109 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %59, i32 0, i32 6, !dbg !7467
  store i16 2, i16* %current_flags109, align 2, !dbg !7468
  %60 = load i32, i32* %flags, align 4, !dbg !7469
  %and110 = and i32 %60, 2, !dbg !7470
  %tobool111 = icmp ne i32 %and110, 0, !dbg !7471
  %lnot112 = xor i1 %tobool111, true, !dbg !7471
  %lnot114 = xor i1 %lnot112, true, !dbg !7472
  %lnot.ext115 = zext i1 %lnot114 to i32, !dbg !7472
  %conv116 = trunc i32 %lnot.ext115 to i8, !dbg !7472
  store i8 %conv116, i8* %retval, align 1, !dbg !7473
  br label %return, !dbg !7473

if.end117:                                        ; preds = %while.end
  %61 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7474
  %current_flags118 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %61, i32 0, i32 6, !dbg !7475
  store i16 4, i16* %current_flags118, align 2, !dbg !7476
  %62 = load i32, i32* %flags, align 4, !dbg !7477
  %and119 = and i32 %62, 4, !dbg !7478
  %tobool120 = icmp ne i32 %and119, 0, !dbg !7479
  %lnot121 = xor i1 %tobool120, true, !dbg !7479
  %lnot123 = xor i1 %lnot121, true, !dbg !7480
  %lnot.ext124 = zext i1 %lnot123 to i32, !dbg !7480
  %conv125 = trunc i32 %lnot.ext124 to i8, !dbg !7480
  store i8 %conv125, i8* %retval, align 1, !dbg !7481
  br label %return, !dbg !7481

return:                                           ; preds = %if.end117, %if.end108, %if.then100, %cond.end83, %if.then54, %if.then41, %if.then12
  %63 = load i8, i8* %retval, align 1, !dbg !7482
  ret i8 %63, !dbg !7482
}

; Function Attrs: noinline nounwind uwtable
define internal void @_succ_iter_next(%struct.succ_iterator* %ip) #0 !dbg !7483 {
entry:
  %ip.addr = alloca %struct.succ_iterator*, align 8
  store %struct.succ_iterator* %ip, %struct.succ_iterator** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.succ_iterator** %ip.addr, metadata !7486, metadata !DIExpression()), !dbg !7487
  %0 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7488
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %0, i32 0, i32 2, !dbg !7488
  %1 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !7488
  %tobool = icmp ne %struct.edge_def* %1, null, !dbg !7488
  br i1 %tobool, label %lor.lhs.false, label %cond.false, !dbg !7488

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7488
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %2, i32 0, i32 1, !dbg !7488
  %3 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !7488
  %tobool1 = icmp ne %struct.edge_def* %3, null, !dbg !7488
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !7488

cond.true:                                        ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1345, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7488
  br label %cond.end, !dbg !7488

cond.false:                                       ; preds = %lor.lhs.false, %entry
  br label %cond.end, !dbg !7488

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7488
  %4 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7489
  %bb_end = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %4, i32 0, i32 0, !dbg !7491
  %5 = load i8, i8* %bb_end, align 8, !dbg !7491
  %conv = zext i8 %5 to i32, !dbg !7489
  %tobool2 = icmp ne i32 %conv, 0, !dbg !7489
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !7492

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7493
  %e13 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %6, i32 0, i32 1, !dbg !7494
  %7 = load %struct.edge_def*, %struct.edge_def** %e13, align 8, !dbg !7494
  %tobool4 = icmp ne %struct.edge_def* %7, null, !dbg !7493
  br i1 %tobool4, label %land.lhs.true5, label %if.end, !dbg !7495

land.lhs.true5:                                   ; preds = %land.lhs.true
  %8 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7496
  %loop_exits = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %8, i32 0, i32 8, !dbg !7497
  %9 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %loop_exits, align 8, !dbg !7497
  %tobool6 = icmp ne %struct.VEC_edge_heap* %9, null, !dbg !7496
  br i1 %tobool6, label %if.end, label %if.then, !dbg !7498

if.then:                                          ; preds = %land.lhs.true5
  %10 = load %struct.succ_iterator*, %struct.succ_iterator** %ip.addr, align 8, !dbg !7499
  %ei = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %10, i32 0, i32 3, !dbg !7500
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !7501
  br label %if.end, !dbg !7501

if.end:                                           ; preds = %if.then, %land.lhs.true5, %land.lhs.true, %cond.end
  ret void, !dbg !7502
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %vec_, i32 %ix_, %struct.edge_def** %ptr) #0 !dbg !7503 {
entry:
  %retval = alloca i32, align 4
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %ix_.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.edge_def**, align 8
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !7506, metadata !DIExpression()), !dbg !7507
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !7508, metadata !DIExpression()), !dbg !7507
  store %struct.edge_def** %ptr, %struct.edge_def*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def*** %ptr.addr, metadata !7509, metadata !DIExpression()), !dbg !7507
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7510
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !7510
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7510

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !7510
  %2 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7510
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %2, i32 0, i32 0, !dbg !7510
  %3 = load i32, i32* %num, align 8, !dbg !7510
  %cmp = icmp ult i32 %1, %3, !dbg !7510
  br i1 %cmp, label %if.then, label %if.else, !dbg !7507

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7512
  %vec = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %4, i32 0, i32 2, !dbg !7512
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !7512
  %idxprom = zext i32 %5 to i64, !dbg !7512
  %arrayidx = getelementptr inbounds [1 x %struct.edge_def*], [1 x %struct.edge_def*]* %vec, i64 0, i64 %idxprom, !dbg !7512
  %6 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !7512
  %7 = load %struct.edge_def**, %struct.edge_def*** %ptr.addr, align 8, !dbg !7512
  store %struct.edge_def* %6, %struct.edge_def** %7, align 8, !dbg !7512
  store i32 1, i32* %retval, align 4, !dbg !7512
  br label %return, !dbg !7512

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.edge_def**, %struct.edge_def*** %ptr.addr, align 8, !dbg !7514
  store %struct.edge_def* null, %struct.edge_def** %8, align 8, !dbg !7514
  store i32 0, i32* %retval, align 4, !dbg !7514
  br label %return, !dbg !7514

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7507
  ret i32 %9, !dbg !7507
}

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_edge_heap_free(%struct.VEC_edge_heap** %vec_) #0 !dbg !7516 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_heap**, align 8
  store %struct.VEC_edge_heap** %vec_, %struct.VEC_edge_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_heap*** %vec_.addr, metadata !7520, metadata !DIExpression()), !dbg !7521
  %0 = load %struct.VEC_edge_heap**, %struct.VEC_edge_heap*** %vec_.addr, align 8, !dbg !7522
  %1 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %0, align 8, !dbg !7522
  %tobool = icmp ne %struct.VEC_edge_heap* %1, null, !dbg !7522
  br i1 %tobool, label %if.then, label %if.end, !dbg !7521

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_edge_heap**, %struct.VEC_edge_heap*** %vec_.addr, align 8, !dbg !7522
  %3 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %2, align 8, !dbg !7522
  %4 = bitcast %struct.VEC_edge_heap* %3 to i8*, !dbg !7522
  call void @free(i8* %4), !dbg !7522
  br label %if.end, !dbg !7522

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_edge_heap**, %struct.VEC_edge_heap*** %vec_.addr, align 8, !dbg !7521
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %5, align 8, !dbg !7521
  ret void, !dbg !7521
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_edge_heap* @get_all_loop_exits(%struct.basic_block_def* %bb) #0 !dbg !7524 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %exits = alloca %struct.VEC_edge_heap*, align 8
  %this_loop = alloca %struct.loop*, align 8
  %pred_loop = alloca %struct.loop*, align 8
  %i = alloca i32, align 4
  %e = alloca %struct.edge_def*, align 8
  %next_exits = alloca %struct.VEC_edge_heap*, align 8
  %j = alloca i32, align 4
  %ne = alloca %struct.edge_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7527, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_heap** %exits, metadata !7529, metadata !DIExpression()), !dbg !7530
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %exits, align 8, !dbg !7530
  br label %while.cond, !dbg !7531

while.cond:                                       ; preds = %cond.end, %entry
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7532
  %call = call zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %0), !dbg !7533
  %conv = zext i8 %call to i32, !dbg !7533
  %tobool = icmp ne i32 %conv, 0, !dbg !7533
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7534

land.rhs:                                         ; preds = %while.cond
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7535
  %call1 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %1), !dbg !7536
  %conv2 = zext i8 %call1 to i32, !dbg !7536
  %tobool3 = icmp ne i32 %conv2, 0, !dbg !7534
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %2 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ], !dbg !7537
  br i1 %2, label %while.body, label %while.end, !dbg !7531

while.body:                                       ; preds = %land.end
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7538
  %call4 = call %struct.basic_block_def* @single_succ(%struct.basic_block_def* %3), !dbg !7540
  store %struct.basic_block_def* %call4, %struct.basic_block_def** %bb.addr, align 8, !dbg !7541
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7542
  %call5 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %4), !dbg !7542
  %tobool6 = icmp ne i8 %call5, 0, !dbg !7542
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !7542

cond.true:                                        ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7542
  br label %cond.end, !dbg !7542

cond.false:                                       ; preds = %while.body
  br label %cond.end, !dbg !7542

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7542
  br label %while.cond, !dbg !7531, !llvm.loop !7543

while.end:                                        ; preds = %land.end
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7545
  %call7 = call zeroext i8 @inner_loop_header_p(%struct.basic_block_def* %5), !dbg !7547
  %tobool8 = icmp ne i8 %call7, 0, !dbg !7547
  br i1 %tobool8, label %if.then, label %if.end66, !dbg !7548

if.then:                                          ; preds = %while.end
  call void @llvm.dbg.declare(metadata %struct.loop** %this_loop, metadata !7549, metadata !DIExpression()), !dbg !7551
  call void @llvm.dbg.declare(metadata %struct.loop** %pred_loop, metadata !7552, metadata !DIExpression()), !dbg !7553
  store %struct.loop* null, %struct.loop** %pred_loop, align 8, !dbg !7553
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7554, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !7556, metadata !DIExpression()), !dbg !7557
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7558
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i32 0, i32 3, !dbg !7560
  %7 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !7560
  store %struct.loop* %7, %struct.loop** %this_loop, align 8, !dbg !7561
  br label %for.cond, !dbg !7562

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load %struct.loop*, %struct.loop** %this_loop, align 8, !dbg !7563
  %tobool9 = icmp ne %struct.loop* %8, null, !dbg !7563
  br i1 %tobool9, label %land.rhs10, label %land.end12, !dbg !7565

land.rhs10:                                       ; preds = %for.cond
  %9 = load %struct.loop*, %struct.loop** %this_loop, align 8, !dbg !7566
  %10 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7567
  %cmp = icmp ne %struct.loop* %9, %10, !dbg !7568
  br label %land.end12

land.end12:                                       ; preds = %land.rhs10, %for.cond
  %11 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs10 ], !dbg !7569
  br i1 %11, label %for.body, label %for.end, !dbg !7570

for.body:                                         ; preds = %land.end12
  %12 = load %struct.loop*, %struct.loop** %this_loop, align 8, !dbg !7571
  store %struct.loop* %12, %struct.loop** %pred_loop, align 8, !dbg !7572
  br label %for.inc, !dbg !7573

for.inc:                                          ; preds = %for.body
  %13 = load %struct.loop*, %struct.loop** %this_loop, align 8, !dbg !7574
  %call13 = call %struct.loop* @loop_outer(%struct.loop* %13), !dbg !7575
  store %struct.loop* %call13, %struct.loop** %this_loop, align 8, !dbg !7576
  br label %for.cond, !dbg !7577, !llvm.loop !7578

for.end:                                          ; preds = %land.end12
  %14 = load %struct.loop*, %struct.loop** %pred_loop, align 8, !dbg !7580
  store %struct.loop* %14, %struct.loop** %this_loop, align 8, !dbg !7581
  %15 = load %struct.loop*, %struct.loop** %this_loop, align 8, !dbg !7582
  %cmp14 = icmp ne %struct.loop* %15, null, !dbg !7582
  br i1 %cmp14, label %cond.false17, label %cond.true16, !dbg !7582

cond.true16:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7582
  br label %cond.end18, !dbg !7582

cond.false17:                                     ; preds = %for.end
  br label %cond.end18, !dbg !7582

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i32 [ 0, %cond.true16 ], [ 0, %cond.false17 ], !dbg !7582
  %16 = load %struct.loop*, %struct.loop** %this_loop, align 8, !dbg !7583
  %call20 = call %struct.VEC_edge_heap* @get_loop_exit_edges_unique_dests(%struct.loop* %16), !dbg !7584
  store %struct.VEC_edge_heap* %call20, %struct.VEC_edge_heap** %exits, align 8, !dbg !7585
  store i32 0, i32* %i, align 4, !dbg !7586
  br label %for.cond21, !dbg !7588

for.cond21:                                       ; preds = %for.inc63, %cond.end18
  %17 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !7589
  %tobool22 = icmp ne %struct.VEC_edge_heap* %17, null, !dbg !7589
  br i1 %tobool22, label %cond.true23, label %cond.false24, !dbg !7589

cond.true23:                                      ; preds = %for.cond21
  %18 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !7589
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %18, i32 0, i32 0, !dbg !7589
  br label %cond.end25, !dbg !7589

cond.false24:                                     ; preds = %for.cond21
  br label %cond.end25, !dbg !7589

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi %struct.VEC_edge_base* [ %base, %cond.true23 ], [ null, %cond.false24 ], !dbg !7589
  %19 = load i32, i32* %i, align 4, !dbg !7589
  %call27 = call i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %cond26, i32 %19, %struct.edge_def** %e), !dbg !7589
  %tobool28 = icmp ne i32 %call27, 0, !dbg !7591
  br i1 %tobool28, label %for.body29, label %for.end65, !dbg !7591

for.body29:                                       ; preds = %cond.end25
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7592
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i32 0, i32 1, !dbg !7594
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7594
  %call30 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %21), !dbg !7595
  %conv31 = zext i8 %call30 to i32, !dbg !7595
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !7595
  br i1 %tobool32, label %if.then37, label %lor.lhs.false, !dbg !7596

lor.lhs.false:                                    ; preds = %for.body29
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7597
  %dest33 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i32 0, i32 1, !dbg !7598
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %dest33, align 8, !dbg !7598
  %call34 = call zeroext i8 @inner_loop_header_p(%struct.basic_block_def* %23), !dbg !7599
  %conv35 = zext i8 %call34 to i32, !dbg !7599
  %tobool36 = icmp ne i32 %conv35, 0, !dbg !7599
  br i1 %tobool36, label %if.then37, label %if.end62, !dbg !7600

if.then37:                                        ; preds = %lor.lhs.false, %for.body29
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_heap** %next_exits, metadata !7601, metadata !DIExpression()), !dbg !7603
  %24 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7604
  %dest38 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i32 0, i32 1, !dbg !7605
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %dest38, align 8, !dbg !7605
  %call39 = call %struct.VEC_edge_heap* @get_all_loop_exits(%struct.basic_block_def* %25), !dbg !7606
  store %struct.VEC_edge_heap* %call39, %struct.VEC_edge_heap** %next_exits, align 8, !dbg !7603
  %26 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %next_exits, align 8, !dbg !7607
  %tobool40 = icmp ne %struct.VEC_edge_heap* %26, null, !dbg !7607
  br i1 %tobool40, label %if.then41, label %if.end, !dbg !7609

if.then41:                                        ; preds = %if.then37
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7610, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.declare(metadata %struct.edge_def** %ne, metadata !7613, metadata !DIExpression()), !dbg !7614
  store i32 0, i32* %j, align 4, !dbg !7615
  br label %for.cond42, !dbg !7617

for.cond42:                                       ; preds = %for.inc53, %if.then41
  %27 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %next_exits, align 8, !dbg !7618
  %tobool43 = icmp ne %struct.VEC_edge_heap* %27, null, !dbg !7618
  br i1 %tobool43, label %cond.true44, label %cond.false46, !dbg !7618

cond.true44:                                      ; preds = %for.cond42
  %28 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %next_exits, align 8, !dbg !7618
  %base45 = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %28, i32 0, i32 0, !dbg !7618
  br label %cond.end47, !dbg !7618

cond.false46:                                     ; preds = %for.cond42
  br label %cond.end47, !dbg !7618

cond.end47:                                       ; preds = %cond.false46, %cond.true44
  %cond48 = phi %struct.VEC_edge_base* [ %base45, %cond.true44 ], [ null, %cond.false46 ], !dbg !7618
  %29 = load i32, i32* %j, align 4, !dbg !7618
  %call49 = call i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %cond48, i32 %29, %struct.edge_def** %ne), !dbg !7618
  %tobool50 = icmp ne i32 %call49, 0, !dbg !7620
  br i1 %tobool50, label %for.body51, label %for.end54, !dbg !7620

for.body51:                                       ; preds = %cond.end47
  %30 = load %struct.edge_def*, %struct.edge_def** %ne, align 8, !dbg !7621
  %call52 = call %struct.edge_def** @VEC_edge_heap_safe_push(%struct.VEC_edge_heap** %exits, %struct.edge_def* %30), !dbg !7621
  br label %for.inc53, !dbg !7621

for.inc53:                                        ; preds = %for.body51
  %31 = load i32, i32* %j, align 4, !dbg !7622
  %inc = add nsw i32 %31, 1, !dbg !7622
  store i32 %inc, i32* %j, align 4, !dbg !7622
  br label %for.cond42, !dbg !7623, !llvm.loop !7624

for.end54:                                        ; preds = %cond.end47
  %32 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !7626
  %tobool55 = icmp ne %struct.VEC_edge_heap* %32, null, !dbg !7626
  br i1 %tobool55, label %cond.true56, label %cond.false58, !dbg !7626

cond.true56:                                      ; preds = %for.end54
  %33 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !7626
  %base57 = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %33, i32 0, i32 0, !dbg !7626
  br label %cond.end59, !dbg !7626

cond.false58:                                     ; preds = %for.end54
  br label %cond.end59, !dbg !7626

cond.end59:                                       ; preds = %cond.false58, %cond.true56
  %cond60 = phi %struct.VEC_edge_base* [ %base57, %cond.true56 ], [ null, %cond.false58 ], !dbg !7626
  %34 = load i32, i32* %i, align 4, !dbg !7626
  %call61 = call %struct.edge_def* @VEC_edge_base_ordered_remove(%struct.VEC_edge_base* %cond60, i32 %34), !dbg !7626
  %35 = load i32, i32* %i, align 4, !dbg !7627
  %dec = add nsw i32 %35, -1, !dbg !7627
  store i32 %dec, i32* %i, align 4, !dbg !7627
  br label %for.inc63, !dbg !7628

if.end:                                           ; preds = %if.then37
  br label %if.end62, !dbg !7629

if.end62:                                         ; preds = %if.end, %lor.lhs.false
  br label %for.inc63, !dbg !7630

for.inc63:                                        ; preds = %if.end62, %cond.end59
  %36 = load i32, i32* %i, align 4, !dbg !7631
  %inc64 = add nsw i32 %36, 1, !dbg !7631
  store i32 %inc64, i32* %i, align 4, !dbg !7631
  br label %for.cond21, !dbg !7632, !llvm.loop !7633

for.end65:                                        ; preds = %cond.end25
  br label %if.end66, !dbg !7635

if.end66:                                         ; preds = %for.end65, %while.end
  %37 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !7636
  ret %struct.VEC_edge_heap* %37, !dbg !7637
}

declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sel_bb_empty_or_nop_p(%struct.basic_block_def* %bb) #0 !dbg !7638 {
entry:
  %retval = alloca i8, align 1
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %first = alloca %struct.rtx_def*, align 8
  %last = alloca %struct.rtx_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7639, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %first, metadata !7641, metadata !DIExpression()), !dbg !7642
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7643
  %call = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %0), !dbg !7644
  store %struct.rtx_def* %call, %struct.rtx_def** %first, align 8, !dbg !7642
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last, metadata !7645, metadata !DIExpression()), !dbg !7646
  %1 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !7647
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !7649
  br i1 %cmp, label %if.then, label %if.end, !dbg !7650

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !7651
  br label %return, !dbg !7651

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !7652
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !7652
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7652
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !7652
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7652
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7652
  %4 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !7652
  %cmp1 = icmp eq %struct.rtx_def* %3, %4, !dbg !7652
  br i1 %cmp1, label %if.end3, label %if.then2, !dbg !7654

if.then2:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !7655
  br label %return, !dbg !7655

if.end3:                                          ; preds = %if.end
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7656
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7658
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, !dbg !7658
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7658
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7658
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i32 0, i32 1, !dbg !7658
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7658
  %cmp4 = icmp eq %struct.basic_block_def* %5, %8, !dbg !7659
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7660

if.then5:                                         ; preds = %if.end3
  store i8 0, i8* %retval, align 1, !dbg !7661
  br label %return, !dbg !7661

if.end6:                                          ; preds = %if.end3
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7662
  %call7 = call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %9), !dbg !7663
  store %struct.rtx_def* %call7, %struct.rtx_def** %last, align 8, !dbg !7664
  %10 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !7665
  %11 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !7667
  %cmp8 = icmp ne %struct.rtx_def* %10, %11, !dbg !7668
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !7669

if.then9:                                         ; preds = %if.end6
  store i8 0, i8* %retval, align 1, !dbg !7670
  br label %return, !dbg !7670

if.end10:                                         ; preds = %if.end6
  store i8 1, i8* %retval, align 1, !dbg !7671
  br label %return, !dbg !7671

return:                                           ; preds = %if.end10, %if.then9, %if.then5, %if.then2, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !7672
  ret i8 %12, !dbg !7672
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @inner_loop_header_p(%struct.basic_block_def* %bb) #0 !dbg !7673 {
entry:
  %retval = alloca i8, align 1
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %inner_loop = alloca %struct.loop*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.declare(metadata %struct.loop** %inner_loop, metadata !7676, metadata !DIExpression()), !dbg !7677
  %0 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7678
  %tobool = icmp ne %struct.loop* %0, null, !dbg !7678
  br i1 %tobool, label %if.end, label %if.then, !dbg !7680

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !7681
  br label %return, !dbg !7681

if.end:                                           ; preds = %entry
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7682
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7684
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, !dbg !7684
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7684
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7684
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i32 0, i32 1, !dbg !7684
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7684
  %cmp = icmp eq %struct.basic_block_def* %1, %4, !dbg !7685
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !7686

if.then1:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !7687
  br label %return, !dbg !7687

if.end2:                                          ; preds = %if.end
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7688
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 3, !dbg !7689
  %6 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !7689
  store %struct.loop* %6, %struct.loop** %inner_loop, align 8, !dbg !7690
  %7 = load %struct.loop*, %struct.loop** %inner_loop, align 8, !dbg !7691
  %8 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7693
  %cmp3 = icmp eq %struct.loop* %7, %8, !dbg !7694
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7695

if.then4:                                         ; preds = %if.end2
  store i8 0, i8* %retval, align 1, !dbg !7696
  br label %return, !dbg !7696

if.end5:                                          ; preds = %if.end2
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7697
  %10 = load %struct.loop*, %struct.loop** %inner_loop, align 8, !dbg !7699
  %header = getelementptr inbounds %struct.loop, %struct.loop* %10, i32 0, i32 2, !dbg !7700
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !7700
  %cmp6 = icmp eq %struct.basic_block_def* %9, %11, !dbg !7701
  br i1 %cmp6, label %land.lhs.true, label %if.end13, !dbg !7702

land.lhs.true:                                    ; preds = %if.end5
  %12 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7703
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7704
  %call = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %12, %struct.basic_block_def* %13), !dbg !7705
  %conv = zext i8 %call to i32, !dbg !7705
  %tobool7 = icmp ne i32 %conv, 0, !dbg !7705
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !7706

if.then8:                                         ; preds = %land.lhs.true
  %14 = load %struct.loop*, %struct.loop** %inner_loop, align 8, !dbg !7707
  %call9 = call i32 @loop_depth(%struct.loop* %14), !dbg !7707
  %15 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7707
  %call10 = call i32 @loop_depth(%struct.loop* %15), !dbg !7707
  %cmp11 = icmp uge i32 %call9, %call10, !dbg !7707
  br i1 %cmp11, label %cond.false, label %cond.true, !dbg !7707

cond.true:                                        ; preds = %if.then8
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1052, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7707
  br label %cond.end, !dbg !7707

cond.false:                                       ; preds = %if.then8
  br label %cond.end, !dbg !7707

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7707
  store i8 1, i8* %retval, align 1, !dbg !7709
  br label %return, !dbg !7709

if.end13:                                         ; preds = %land.lhs.true, %if.end5
  store i8 0, i8* %retval, align 1, !dbg !7710
  br label %return, !dbg !7710

return:                                           ; preds = %if.end13, %cond.end, %if.then4, %if.then1, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !7711
  ret i8 %16, !dbg !7711
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.loop* @loop_outer(%struct.loop* %loop) #0 !dbg !7712 {
entry:
  %retval = alloca %struct.loop*, align 8
  %loop.addr = alloca %struct.loop*, align 8
  %n = alloca i32, align 4
  store %struct.loop* %loop, %struct.loop** %loop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.loop** %loop.addr, metadata !7717, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7719, metadata !DIExpression()), !dbg !7720
  %0 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !7721
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %0, i32 0, i32 7, !dbg !7721
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !7721
  %tobool = icmp ne %struct.VEC_loop_p_gc* %1, null, !dbg !7721
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7721

cond.true:                                        ; preds = %entry
  %2 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !7721
  %superloops1 = getelementptr inbounds %struct.loop, %struct.loop* %2, i32 0, i32 7, !dbg !7721
  %3 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops1, align 8, !dbg !7721
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %3, i32 0, i32 0, !dbg !7721
  br label %cond.end, !dbg !7721

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7721

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7721
  %call = call i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond), !dbg !7721
  store i32 %call, i32* %n, align 4, !dbg !7720
  %4 = load i32, i32* %n, align 4, !dbg !7722
  %cmp = icmp eq i32 %4, 0, !dbg !7724
  br i1 %cmp, label %if.then, label %if.end, !dbg !7725

if.then:                                          ; preds = %cond.end
  store %struct.loop* null, %struct.loop** %retval, align 8, !dbg !7726
  br label %return, !dbg !7726

if.end:                                           ; preds = %cond.end
  %5 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !7727
  %superloops2 = getelementptr inbounds %struct.loop, %struct.loop* %5, i32 0, i32 7, !dbg !7727
  %6 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops2, align 8, !dbg !7727
  %tobool3 = icmp ne %struct.VEC_loop_p_gc* %6, null, !dbg !7727
  br i1 %tobool3, label %cond.true4, label %cond.false7, !dbg !7727

cond.true4:                                       ; preds = %if.end
  %7 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !7727
  %superloops5 = getelementptr inbounds %struct.loop, %struct.loop* %7, i32 0, i32 7, !dbg !7727
  %8 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops5, align 8, !dbg !7727
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %8, i32 0, i32 0, !dbg !7727
  br label %cond.end8, !dbg !7727

cond.false7:                                      ; preds = %if.end
  br label %cond.end8, !dbg !7727

cond.end8:                                        ; preds = %cond.false7, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %cond.false7 ], !dbg !7727
  %9 = load i32, i32* %n, align 4, !dbg !7727
  %sub = sub i32 %9, 1, !dbg !7727
  %call10 = call %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub), !dbg !7727
  store %struct.loop* %call10, %struct.loop** %retval, align 8, !dbg !7728
  br label %return, !dbg !7728

return:                                           ; preds = %cond.end8, %if.then
  %10 = load %struct.loop*, %struct.loop** %retval, align 8, !dbg !7729
  ret %struct.loop* %10, !dbg !7729
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_edge_heap* @get_loop_exit_edges_unique_dests(%struct.loop* %loop) #0 !dbg !7730 {
entry:
  %loop.addr = alloca %struct.loop*, align 8
  %edges = alloca %struct.VEC_edge_heap*, align 8
  %exit = alloca %struct.loop_exit*, align 8
  %i = alloca i32, align 4
  %e3 = alloca %struct.edge_def*, align 8
  %was_dest = alloca i8, align 1
  store %struct.loop* %loop, %struct.loop** %loop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.loop** %loop.addr, metadata !7733, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_heap** %edges, metadata !7735, metadata !DIExpression()), !dbg !7736
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %edges, align 8, !dbg !7736
  call void @llvm.dbg.declare(metadata %struct.loop_exit** %exit, metadata !7737, metadata !DIExpression()), !dbg !7738
  %0 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !7739
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %0, i32 0, i32 3, !dbg !7739
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !7739
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7739
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, !dbg !7739
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7739
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7739
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i32 0, i32 1, !dbg !7739
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7739
  %cmp = icmp ne %struct.basic_block_def* %1, %4, !dbg !7739
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !7739

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7739
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !7739
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 4, !dbg !7739
  %6 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !7739
  %state = getelementptr inbounds %struct.loops, %struct.loops* %6, i32 0, i32 0, !dbg !7739
  %7 = load i32, i32* %state, align 8, !dbg !7739
  %and = and i32 %7, 8, !dbg !7739
  %tobool = icmp ne i32 %and, 0, !dbg !7739
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7739

cond.true:                                        ; preds = %land.lhs.true, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 1067, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7739
  br label %cond.end, !dbg !7739

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !7739

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7739
  %8 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !7740
  %exits = getelementptr inbounds %struct.loop, %struct.loop* %8, i32 0, i32 18, !dbg !7742
  %9 = load %struct.loop_exit*, %struct.loop_exit** %exits, align 8, !dbg !7742
  %next = getelementptr inbounds %struct.loop_exit, %struct.loop_exit* %9, i32 0, i32 2, !dbg !7743
  %10 = load %struct.loop_exit*, %struct.loop_exit** %next, align 8, !dbg !7743
  store %struct.loop_exit* %10, %struct.loop_exit** %exit, align 8, !dbg !7744
  br label %for.cond, !dbg !7745

for.cond:                                         ; preds = %for.inc20, %cond.end
  %11 = load %struct.loop_exit*, %struct.loop_exit** %exit, align 8, !dbg !7746
  %e = getelementptr inbounds %struct.loop_exit, %struct.loop_exit* %11, i32 0, i32 0, !dbg !7748
  %12 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7748
  %tobool2 = icmp ne %struct.edge_def* %12, null, !dbg !7749
  br i1 %tobool2, label %for.body, label %for.end22, !dbg !7749

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7750, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e3, metadata !7753, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.declare(metadata i8* %was_dest, metadata !7755, metadata !DIExpression()), !dbg !7756
  store i8 0, i8* %was_dest, align 1, !dbg !7756
  store i32 0, i32* %i, align 4, !dbg !7757
  br label %for.cond4, !dbg !7759

for.cond4:                                        ; preds = %for.inc, %for.body
  %13 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !7760
  %tobool5 = icmp ne %struct.VEC_edge_heap* %13, null, !dbg !7760
  br i1 %tobool5, label %cond.true6, label %cond.false7, !dbg !7760

cond.true6:                                       ; preds = %for.cond4
  %14 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !7760
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %14, i32 0, i32 0, !dbg !7760
  br label %cond.end8, !dbg !7760

cond.false7:                                      ; preds = %for.cond4
  br label %cond.end8, !dbg !7760

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi %struct.VEC_edge_base* [ %base, %cond.true6 ], [ null, %cond.false7 ], !dbg !7760
  %15 = load i32, i32* %i, align 4, !dbg !7760
  %call = call i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %cond9, i32 %15, %struct.edge_def** %e3), !dbg !7760
  %tobool10 = icmp ne i32 %call, 0, !dbg !7762
  br i1 %tobool10, label %for.body11, label %for.end, !dbg !7762

for.body11:                                       ; preds = %cond.end8
  %16 = load %struct.edge_def*, %struct.edge_def** %e3, align 8, !dbg !7763
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %16, i32 0, i32 1, !dbg !7765
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7765
  %18 = load %struct.loop_exit*, %struct.loop_exit** %exit, align 8, !dbg !7766
  %e12 = getelementptr inbounds %struct.loop_exit, %struct.loop_exit* %18, i32 0, i32 0, !dbg !7767
  %19 = load %struct.edge_def*, %struct.edge_def** %e12, align 8, !dbg !7767
  %dest13 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %19, i32 0, i32 1, !dbg !7768
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %dest13, align 8, !dbg !7768
  %cmp14 = icmp eq %struct.basic_block_def* %17, %20, !dbg !7769
  br i1 %cmp14, label %if.then, label %if.end, !dbg !7770

if.then:                                          ; preds = %for.body11
  store i8 1, i8* %was_dest, align 1, !dbg !7771
  br label %for.end, !dbg !7773

if.end:                                           ; preds = %for.body11
  br label %for.inc, !dbg !7768

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !dbg !7774
  %inc = add nsw i32 %21, 1, !dbg !7774
  store i32 %inc, i32* %i, align 4, !dbg !7774
  br label %for.cond4, !dbg !7775, !llvm.loop !7776

for.end:                                          ; preds = %if.then, %cond.end8
  %22 = load i8, i8* %was_dest, align 1, !dbg !7778
  %tobool15 = icmp ne i8 %22, 0, !dbg !7778
  br i1 %tobool15, label %if.end19, label %if.then16, !dbg !7780

if.then16:                                        ; preds = %for.end
  %23 = load %struct.loop_exit*, %struct.loop_exit** %exit, align 8, !dbg !7781
  %e17 = getelementptr inbounds %struct.loop_exit, %struct.loop_exit* %23, i32 0, i32 0, !dbg !7781
  %24 = load %struct.edge_def*, %struct.edge_def** %e17, align 8, !dbg !7781
  %call18 = call %struct.edge_def** @VEC_edge_heap_safe_push(%struct.VEC_edge_heap** %edges, %struct.edge_def* %24), !dbg !7781
  br label %if.end19, !dbg !7781

if.end19:                                         ; preds = %if.then16, %for.end
  br label %for.inc20, !dbg !7782

for.inc20:                                        ; preds = %if.end19
  %25 = load %struct.loop_exit*, %struct.loop_exit** %exit, align 8, !dbg !7783
  %next21 = getelementptr inbounds %struct.loop_exit, %struct.loop_exit* %25, i32 0, i32 2, !dbg !7784
  %26 = load %struct.loop_exit*, %struct.loop_exit** %next21, align 8, !dbg !7784
  store %struct.loop_exit* %26, %struct.loop_exit** %exit, align 8, !dbg !7785
  br label %for.cond, !dbg !7786, !llvm.loop !7787

for.end22:                                        ; preds = %for.cond
  %27 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !7789
  ret %struct.VEC_edge_heap* %27, !dbg !7790
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def** @VEC_edge_heap_safe_push(%struct.VEC_edge_heap** %vec_, %struct.edge_def* %obj_) #0 !dbg !7791 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_heap**, align 8
  %obj_.addr = alloca %struct.edge_def*, align 8
  store %struct.VEC_edge_heap** %vec_, %struct.VEC_edge_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_heap*** %vec_.addr, metadata !7794, metadata !DIExpression()), !dbg !7795
  store %struct.edge_def* %obj_, %struct.edge_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %obj_.addr, metadata !7796, metadata !DIExpression()), !dbg !7795
  %0 = load %struct.VEC_edge_heap**, %struct.VEC_edge_heap*** %vec_.addr, align 8, !dbg !7795
  %call = call i32 @VEC_edge_heap_reserve(%struct.VEC_edge_heap** %0, i32 1), !dbg !7795
  %1 = load %struct.VEC_edge_heap**, %struct.VEC_edge_heap*** %vec_.addr, align 8, !dbg !7795
  %2 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %1, align 8, !dbg !7795
  %tobool = icmp ne %struct.VEC_edge_heap* %2, null, !dbg !7795
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7795

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_edge_heap**, %struct.VEC_edge_heap*** %vec_.addr, align 8, !dbg !7795
  %4 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %3, align 8, !dbg !7795
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %4, i32 0, i32 0, !dbg !7795
  br label %cond.end, !dbg !7795

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7795

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7795
  %5 = load %struct.edge_def*, %struct.edge_def** %obj_.addr, align 8, !dbg !7795
  %call1 = call %struct.edge_def** @VEC_edge_base_quick_push(%struct.VEC_edge_base* %cond, %struct.edge_def* %5), !dbg !7795
  ret %struct.edge_def** %call1, !dbg !7795
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @VEC_edge_base_ordered_remove(%struct.VEC_edge_base* %vec_, i32 %ix_) #0 !dbg !7797 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %ix_.addr = alloca i32, align 4
  %slot_ = alloca %struct.edge_def**, align 8
  %obj_ = alloca %struct.edge_def*, align 8
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !7801, metadata !DIExpression()), !dbg !7802
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !7803, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.declare(metadata %struct.edge_def*** %slot_, metadata !7804, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.declare(metadata %struct.edge_def** %obj_, metadata !7805, metadata !DIExpression()), !dbg !7802
  %0 = load i32, i32* %ix_.addr, align 4, !dbg !7802
  %1 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7802
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %1, i32 0, i32 0, !dbg !7802
  %2 = load i32, i32* %num, align 8, !dbg !7802
  %cmp = icmp ult i32 %0, %2, !dbg !7802
  %conv = zext i1 %cmp to i32, !dbg !7802
  %3 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7802
  %vec = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %3, i32 0, i32 2, !dbg !7802
  %4 = load i32, i32* %ix_.addr, align 4, !dbg !7802
  %idxprom = zext i32 %4 to i64, !dbg !7802
  %arrayidx = getelementptr inbounds [1 x %struct.edge_def*], [1 x %struct.edge_def*]* %vec, i64 0, i64 %idxprom, !dbg !7802
  store %struct.edge_def** %arrayidx, %struct.edge_def*** %slot_, align 8, !dbg !7802
  %5 = load %struct.edge_def**, %struct.edge_def*** %slot_, align 8, !dbg !7802
  %6 = load %struct.edge_def*, %struct.edge_def** %5, align 8, !dbg !7802
  store %struct.edge_def* %6, %struct.edge_def** %obj_, align 8, !dbg !7802
  %7 = load %struct.edge_def**, %struct.edge_def*** %slot_, align 8, !dbg !7802
  %8 = bitcast %struct.edge_def** %7 to i8*, !dbg !7802
  %9 = load %struct.edge_def**, %struct.edge_def*** %slot_, align 8, !dbg !7802
  %add.ptr = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %9, i64 1, !dbg !7802
  %10 = bitcast %struct.edge_def** %add.ptr to i8*, !dbg !7802
  %11 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7802
  %num1 = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %11, i32 0, i32 0, !dbg !7802
  %12 = load i32, i32* %num1, align 8, !dbg !7802
  %dec = add i32 %12, -1, !dbg !7802
  store i32 %dec, i32* %num1, align 8, !dbg !7802
  %13 = load i32, i32* %ix_.addr, align 4, !dbg !7802
  %sub = sub i32 %dec, %13, !dbg !7802
  %conv2 = zext i32 %sub to i64, !dbg !7802
  %mul = mul i64 %conv2, 8, !dbg !7802
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %10, i64 %mul, i1 false), !dbg !7802
  %14 = load %struct.edge_def*, %struct.edge_def** %obj_, align 8, !dbg !7802
  ret %struct.edge_def* %14, !dbg !7802
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @loop_depth(%struct.loop* %loop) #0 !dbg !7806 {
entry:
  %loop.addr = alloca %struct.loop*, align 8
  store %struct.loop* %loop, %struct.loop** %loop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.loop** %loop.addr, metadata !7809, metadata !DIExpression()), !dbg !7810
  %0 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !7811
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %0, i32 0, i32 7, !dbg !7811
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !7811
  %tobool = icmp ne %struct.VEC_loop_p_gc* %1, null, !dbg !7811
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7811

cond.true:                                        ; preds = %entry
  %2 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !7811
  %superloops1 = getelementptr inbounds %struct.loop, %struct.loop* %2, i32 0, i32 7, !dbg !7811
  %3 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops1, align 8, !dbg !7811
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %3, i32 0, i32 0, !dbg !7811
  br label %cond.end, !dbg !7811

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7811

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7811
  %call = call i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond), !dbg !7811
  ret i32 %call, !dbg !7812
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) #0 !dbg !7813 {
entry:
  %vec_.addr = alloca %struct.VEC_loop_p_base*, align 8
  store %struct.VEC_loop_p_base* %vec_, %struct.VEC_loop_p_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_loop_p_base** %vec_.addr, metadata !7818, metadata !DIExpression()), !dbg !7819
  %0 = load %struct.VEC_loop_p_base*, %struct.VEC_loop_p_base** %vec_.addr, align 8, !dbg !7819
  %tobool = icmp ne %struct.VEC_loop_p_base* %0, null, !dbg !7819
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7819

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_loop_p_base*, %struct.VEC_loop_p_base** %vec_.addr, align 8, !dbg !7819
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %1, i32 0, i32 0, !dbg !7819
  %2 = load i32, i32* %num, align 8, !dbg !7819
  br label %cond.end, !dbg !7819

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7819

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !7819
  ret i32 %cond, !dbg !7819
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) #0 !dbg !7820 {
entry:
  %vec_.addr = alloca %struct.VEC_loop_p_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_loop_p_base* %vec_, %struct.VEC_loop_p_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_loop_p_base** %vec_.addr, metadata !7823, metadata !DIExpression()), !dbg !7824
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !7825, metadata !DIExpression()), !dbg !7824
  %0 = load %struct.VEC_loop_p_base*, %struct.VEC_loop_p_base** %vec_.addr, align 8, !dbg !7824
  %tobool = icmp ne %struct.VEC_loop_p_base* %0, null, !dbg !7824
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7824

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !7824
  %2 = load %struct.VEC_loop_p_base*, %struct.VEC_loop_p_base** %vec_.addr, align 8, !dbg !7824
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %2, i32 0, i32 0, !dbg !7824
  %3 = load i32, i32* %num, align 8, !dbg !7824
  %cmp = icmp ult i32 %1, %3, !dbg !7824
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !7826
  %land.ext = zext i1 %4 to i32, !dbg !7824
  %5 = load %struct.VEC_loop_p_base*, %struct.VEC_loop_p_base** %vec_.addr, align 8, !dbg !7824
  %vec = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %5, i32 0, i32 2, !dbg !7824
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !7824
  %idxprom = zext i32 %6 to i64, !dbg !7824
  %arrayidx = getelementptr inbounds [1 x %struct.loop*], [1 x %struct.loop*]* %vec, i64 0, i64 %idxprom, !dbg !7824
  %7 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !7824
  ret %struct.loop* %7, !dbg !7824
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_edge_heap_reserve(%struct.VEC_edge_heap** %vec_, i32 %alloc_) #0 !dbg !7827 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_heap**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_edge_heap** %vec_, %struct.VEC_edge_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_heap*** %vec_.addr, metadata !7830, metadata !DIExpression()), !dbg !7831
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !7832, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !7833, metadata !DIExpression()), !dbg !7831
  %0 = load %struct.VEC_edge_heap**, %struct.VEC_edge_heap*** %vec_.addr, align 8, !dbg !7831
  %1 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %0, align 8, !dbg !7831
  %tobool = icmp ne %struct.VEC_edge_heap* %1, null, !dbg !7831
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7831

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_edge_heap**, %struct.VEC_edge_heap*** %vec_.addr, align 8, !dbg !7831
  %3 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %2, align 8, !dbg !7831
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %3, i32 0, i32 0, !dbg !7831
  br label %cond.end, !dbg !7831

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7831

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7831
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !7831
  %call = call i32 @VEC_edge_base_space(%struct.VEC_edge_base* %cond, i32 %4), !dbg !7831
  %tobool1 = icmp ne i32 %call, 0, !dbg !7831
  %lnot = xor i1 %tobool1, true, !dbg !7831
  %lnot.ext = zext i1 %lnot to i32, !dbg !7831
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !7831
  %5 = load i32, i32* %extend, align 4, !dbg !7834
  %tobool2 = icmp ne i32 %5, 0, !dbg !7834
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7831

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_edge_heap**, %struct.VEC_edge_heap*** %vec_.addr, align 8, !dbg !7834
  %7 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %6, align 8, !dbg !7834
  %8 = bitcast %struct.VEC_edge_heap* %7 to i8*, !dbg !7834
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !7834
  %call3 = call i8* @vec_heap_p_reserve(i8* %8, i32 %9), !dbg !7834
  %10 = bitcast i8* %call3 to %struct.VEC_edge_heap*, !dbg !7834
  %11 = load %struct.VEC_edge_heap**, %struct.VEC_edge_heap*** %vec_.addr, align 8, !dbg !7834
  store %struct.VEC_edge_heap* %10, %struct.VEC_edge_heap** %11, align 8, !dbg !7834
  br label %if.end, !dbg !7834

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !7831
  ret i32 %12, !dbg !7831
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def** @VEC_edge_base_quick_push(%struct.VEC_edge_base* %vec_, %struct.edge_def* %obj_) #0 !dbg !7836 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %obj_.addr = alloca %struct.edge_def*, align 8
  %slot_ = alloca %struct.edge_def**, align 8
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !7839, metadata !DIExpression()), !dbg !7840
  store %struct.edge_def* %obj_, %struct.edge_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %obj_.addr, metadata !7841, metadata !DIExpression()), !dbg !7840
  call void @llvm.dbg.declare(metadata %struct.edge_def*** %slot_, metadata !7842, metadata !DIExpression()), !dbg !7840
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7840
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %0, i32 0, i32 0, !dbg !7840
  %1 = load i32, i32* %num, align 8, !dbg !7840
  %2 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7840
  %alloc = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %2, i32 0, i32 1, !dbg !7840
  %3 = load i32, i32* %alloc, align 4, !dbg !7840
  %cmp = icmp ult i32 %1, %3, !dbg !7840
  %conv = zext i1 %cmp to i32, !dbg !7840
  %4 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7840
  %vec = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %4, i32 0, i32 2, !dbg !7840
  %5 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7840
  %num1 = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %5, i32 0, i32 0, !dbg !7840
  %6 = load i32, i32* %num1, align 8, !dbg !7840
  %inc = add i32 %6, 1, !dbg !7840
  store i32 %inc, i32* %num1, align 8, !dbg !7840
  %idxprom = zext i32 %6 to i64, !dbg !7840
  %arrayidx = getelementptr inbounds [1 x %struct.edge_def*], [1 x %struct.edge_def*]* %vec, i64 0, i64 %idxprom, !dbg !7840
  store %struct.edge_def** %arrayidx, %struct.edge_def*** %slot_, align 8, !dbg !7840
  %7 = load %struct.edge_def*, %struct.edge_def** %obj_.addr, align 8, !dbg !7840
  %8 = load %struct.edge_def**, %struct.edge_def*** %slot_, align 8, !dbg !7840
  store %struct.edge_def* %7, %struct.edge_def** %8, align 8, !dbg !7840
  %9 = load %struct.edge_def**, %struct.edge_def*** %slot_, align 8, !dbg !7840
  ret %struct.edge_def** %9, !dbg !7840
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_edge_base_space(%struct.VEC_edge_base* %vec_, i32 %alloc_) #0 !dbg !7843 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !7846, metadata !DIExpression()), !dbg !7847
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !7848, metadata !DIExpression()), !dbg !7847
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !7847
  %cmp = icmp sge i32 %0, 0, !dbg !7847
  %conv = zext i1 %cmp to i32, !dbg !7847
  %1 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7847
  %tobool = icmp ne %struct.VEC_edge_base* %1, null, !dbg !7847
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7847

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7847
  %alloc = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %2, i32 0, i32 1, !dbg !7847
  %3 = load i32, i32* %alloc, align 4, !dbg !7847
  %4 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7847
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %4, i32 0, i32 0, !dbg !7847
  %5 = load i32, i32* %num, align 8, !dbg !7847
  %sub = sub i32 %3, %5, !dbg !7847
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !7847
  %cmp1 = icmp uge i32 %sub, %6, !dbg !7847
  %conv2 = zext i1 %cmp1 to i32, !dbg !7847
  br label %cond.end, !dbg !7847

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !7847
  %tobool3 = icmp ne i32 %7, 0, !dbg !7847
  %lnot = xor i1 %tobool3, true, !dbg !7847
  %lnot.ext = zext i1 %lnot to i32, !dbg !7847
  br label %cond.end, !dbg !7847

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !7847
  ret i32 %cond, !dbg !7847
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare dso_local void @rgn_setup_region(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @current_region_empty_p() #0 !dbg !7849 {
entry:
  %retval = alloca i8, align 1
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7850, metadata !DIExpression()), !dbg !7851
  store i32 0, i32* %i, align 4, !dbg !7852
  br label %for.cond, !dbg !7854

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7855
  %1 = load i32, i32* @current_nr_blocks, align 4, !dbg !7857
  %cmp = icmp slt i32 %0, %1, !dbg !7858
  br i1 %cmp, label %for.body, label %for.end, !dbg !7859

for.body:                                         ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7860
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, !dbg !7860
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7860
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7860
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i32 0, i32 2, !dbg !7860
  %4 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7860
  %tobool = icmp ne %struct.VEC_basic_block_gc* %4, null, !dbg !7860
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7860

cond.true:                                        ; preds = %for.body
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7860
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !7860
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !7860
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !7860
  %x_basic_block_info3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 2, !dbg !7860
  %7 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info3, align 8, !dbg !7860
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %7, i32 0, i32 0, !dbg !7860
  br label %cond.end, !dbg !7860

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7860

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7860
  %8 = load i32*, i32** @rgn_bb_table, align 8, !dbg !7860
  %9 = load i32*, i32** @ebb_head, align 8, !dbg !7860
  %10 = load i32, i32* %i, align 4, !dbg !7860
  %idxprom = sext i32 %10 to i64, !dbg !7860
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !7860
  %11 = load i32, i32* %arrayidx, align 4, !dbg !7860
  %idxprom4 = sext i32 %11 to i64, !dbg !7860
  %arrayidx5 = getelementptr inbounds i32, i32* %8, i64 %idxprom4, !dbg !7860
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !7860
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %12), !dbg !7860
  %call6 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %call), !dbg !7862
  %tobool7 = icmp ne i8 %call6, 0, !dbg !7862
  br i1 %tobool7, label %if.end, label %if.then, !dbg !7863

if.then:                                          ; preds = %cond.end
  store i8 0, i8* %retval, align 1, !dbg !7864
  br label %return, !dbg !7864

if.end:                                           ; preds = %cond.end
  br label %for.inc, !dbg !7865

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !7866
  %inc = add nsw i32 %13, 1, !dbg !7866
  store i32 %inc, i32* %i, align 4, !dbg !7866
  br label %for.cond, !dbg !7867, !llvm.loop !7868

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !7870
  br label %return, !dbg !7870

return:                                           ; preds = %for.end, %if.then
  %14 = load i8, i8* %retval, align 1, !dbg !7871
  ret i8 %14, !dbg !7871
}

; Function Attrs: noinline nounwind uwtable
define internal void @setup_current_loop_nest(i32 %rgn) #0 !dbg !7872 {
entry:
  %rgn.addr = alloca i32, align 4
  store i32 %rgn, i32* %rgn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rgn.addr, metadata !7873, metadata !DIExpression()), !dbg !7874
  %0 = load i32, i32* %rgn.addr, align 4, !dbg !7875
  %call = call %struct.loop* @get_loop_nest_for_rgn(i32 %0), !dbg !7876
  store %struct.loop* %call, %struct.loop** @current_loop_nest, align 8, !dbg !7877
  %1 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7878
  %tobool = icmp ne %struct.loop* %1, null, !dbg !7878
  br i1 %tobool, label %if.end, label %if.then, !dbg !7880

if.then:                                          ; preds = %entry
  br label %return, !dbg !7881

if.end:                                           ; preds = %entry
  call void @sel_add_loop_preheaders(), !dbg !7882
  %2 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7883
  %call1 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %2), !dbg !7883
  %tobool2 = icmp ne %struct.edge_def* %call1, null, !dbg !7883
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !7883

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6792, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7883
  br label %cond.end, !dbg !7883

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !7883

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7883
  %3 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7884
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %3, i32 0, i32 10, !dbg !7884
  %4 = load i8*, i8** %aux, align 8, !dbg !7884
  %5 = ptrtoint i8* %4 to i64, !dbg !7884
  %tobool3 = icmp ne i64 %5, 0, !dbg !7884
  br i1 %tobool3, label %cond.false5, label %cond.true4, !dbg !7884

cond.true4:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6793, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7884
  br label %cond.end6, !dbg !7884

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !7884

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ 0, %cond.true4 ], [ 0, %cond.false5 ], !dbg !7884
  br label %return, !dbg !7885

return:                                           ; preds = %cond.end6, %if.then
  ret void, !dbg !7885
}

; Function Attrs: noinline nounwind uwtable
define internal void @sel_setup_region_sched_flags() #0 !dbg !7886 {
entry:
  store i8 1, i8* @enable_schedule_as_rhs_p, align 1, !dbg !7887
  store i8 1, i8* @bookkeeping_p, align 1, !dbg !7888
  %0 = load i8, i8* @bookkeeping_p, align 1, !dbg !7889
  %conv = zext i8 %0 to i32, !dbg !7889
  %tobool = icmp ne i32 %conv, 0, !dbg !7889
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !7890

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @flag_sel_sched_pipelining, align 4, !dbg !7891
  %cmp = icmp ne i32 %1, 0, !dbg !7892
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7893

land.rhs:                                         ; preds = %land.lhs.true
  %2 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !7894
  %cmp2 = icmp ne %struct.loop* %2, null, !dbg !7895
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %3 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp2, %land.rhs ], !dbg !7896
  %land.ext = zext i1 %3 to i32, !dbg !7893
  %conv4 = trunc i32 %land.ext to i8, !dbg !7897
  store i8 %conv4, i8* @pipelining_p, align 1, !dbg !7898
  %4 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !7899
  %arrayidx = getelementptr inbounds %struct.param_info, %struct.param_info* %4, i64 87, !dbg !7899
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx, i32 0, i32 1, !dbg !7899
  %5 = load i32, i32* %value, align 8, !dbg !7899
  store i32 %5, i32* @max_insns_to_rename, align 4, !dbg !7900
  %6 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !7901
  %arrayidx5 = getelementptr inbounds %struct.param_info, %struct.param_info* %6, i64 85, !dbg !7901
  %value6 = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx5, i32 0, i32 1, !dbg !7901
  %7 = load i32, i32* %value6, align 8, !dbg !7901
  store i32 %7, i32* @max_ws, align 4, !dbg !7902
  ret void, !dbg !7903
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %alloc_) #0 !dbg !7904 {
entry:
  %alloc_.addr = alloca i32, align 4
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !7907, metadata !DIExpression()), !dbg !7908
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !7908
  %call = call i8* @vec_heap_p_reserve_exact(i8* null, i32 %0), !dbg !7908
  %1 = bitcast i8* %call to %struct.VEC_basic_block_heap*, !dbg !7908
  ret %struct.VEC_basic_block_heap* %1, !dbg !7908
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %vec_, %struct.basic_block_def* %obj_) #0 !dbg !7909 {
entry:
  %vec_.addr = alloca %struct.VEC_basic_block_base*, align 8
  %obj_.addr = alloca %struct.basic_block_def*, align 8
  %slot_ = alloca %struct.basic_block_def**, align 8
  store %struct.VEC_basic_block_base* %vec_, %struct.VEC_basic_block_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_basic_block_base** %vec_.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %obj_.addr, metadata !7915, metadata !DIExpression()), !dbg !7914
  call void @llvm.dbg.declare(metadata %struct.basic_block_def*** %slot_, metadata !7916, metadata !DIExpression()), !dbg !7914
  %0 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !7914
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %0, i32 0, i32 0, !dbg !7914
  %1 = load i32, i32* %num, align 8, !dbg !7914
  %2 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !7914
  %alloc = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %2, i32 0, i32 1, !dbg !7914
  %3 = load i32, i32* %alloc, align 4, !dbg !7914
  %cmp = icmp ult i32 %1, %3, !dbg !7914
  %conv = zext i1 %cmp to i32, !dbg !7914
  %4 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !7914
  %vec = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %4, i32 0, i32 2, !dbg !7914
  %5 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !7914
  %num1 = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %5, i32 0, i32 0, !dbg !7914
  %6 = load i32, i32* %num1, align 8, !dbg !7914
  %inc = add i32 %6, 1, !dbg !7914
  store i32 %inc, i32* %num1, align 8, !dbg !7914
  %idxprom = zext i32 %6 to i64, !dbg !7914
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %vec, i64 0, i64 %idxprom, !dbg !7914
  store %struct.basic_block_def** %arrayidx, %struct.basic_block_def*** %slot_, align 8, !dbg !7914
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %obj_.addr, align 8, !dbg !7914
  %8 = load %struct.basic_block_def**, %struct.basic_block_def*** %slot_, align 8, !dbg !7914
  store %struct.basic_block_def* %7, %struct.basic_block_def** %8, align 8, !dbg !7914
  %9 = load %struct.basic_block_def**, %struct.basic_block_def*** %slot_, align 8, !dbg !7914
  ret %struct.basic_block_def** %9, !dbg !7914
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) #0 !dbg !7917 {
entry:
  %vec_.addr = alloca %struct.VEC_basic_block_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_basic_block_base* %vec_, %struct.VEC_basic_block_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_basic_block_base** %vec_.addr, metadata !7922, metadata !DIExpression()), !dbg !7923
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !7924, metadata !DIExpression()), !dbg !7923
  %0 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !7923
  %tobool = icmp ne %struct.VEC_basic_block_base* %0, null, !dbg !7923
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7923

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !7923
  %2 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !7923
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %2, i32 0, i32 0, !dbg !7923
  %3 = load i32, i32* %num, align 8, !dbg !7923
  %cmp = icmp ult i32 %1, %3, !dbg !7923
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !7925
  %land.ext = zext i1 %4 to i32, !dbg !7923
  %5 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !7923
  %vec = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %5, i32 0, i32 2, !dbg !7923
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !7923
  %idxprom = zext i32 %6 to i64, !dbg !7923
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %vec, i64 0, i64 %idxprom, !dbg !7923
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !7923
  ret %struct.basic_block_def* %7, !dbg !7923
}

declare dso_local void @sel_init_bbs(%struct.VEC_basic_block_heap*, %struct.basic_block_def*) #2

declare dso_local void @sched_init_luids(%struct.VEC_basic_block_heap*, %struct.basic_block_def*, %struct.VEC_rtx_heap*, %struct.rtx_def*) #2

declare dso_local void @sched_deps_init(i8 zeroext) #2

declare dso_local void @rgn_setup_sched_infos() #2

declare dso_local void @sel_set_sched_flags() #2

declare dso_local void @haifa_init_h_i_d(%struct.VEC_basic_block_heap*, %struct.basic_block_def*, %struct.VEC_rtx_heap*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sel_compute_priorities(i32 %rgn) #0 !dbg !7926 {
entry:
  %rgn.addr = alloca i32, align 4
  store i32 %rgn, i32* %rgn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rgn.addr, metadata !7927, metadata !DIExpression()), !dbg !7928
  %0 = load i32, i32* %rgn.addr, align 4, !dbg !7929
  call void @sched_rgn_compute_dependencies(i32 %0), !dbg !7930
  call void @compute_priorities(), !dbg !7931
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !7932
  %cmp = icmp sge i32 %1, 5, !dbg !7934
  br i1 %cmp, label %if.then, label %if.end, !dbg !7935

if.then:                                          ; preds = %entry
  call void @debug_rgn_dependencies(i32 0), !dbg !7936
  br label %if.end, !dbg !7936

if.end:                                           ; preds = %if.then, %entry
  call void @free_rgn_deps(), !dbg !7937
  ret void, !dbg !7938
}

declare dso_local void @init_deps_global() #2

declare dso_local void @sel_setup_sched_infos() #2

declare dso_local void @sel_init_global_and_expr(%struct.VEC_basic_block_heap*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %vec_) #0 !dbg !7939 {
entry:
  %vec_.addr = alloca %struct.VEC_basic_block_heap**, align 8
  store %struct.VEC_basic_block_heap** %vec_, %struct.VEC_basic_block_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_basic_block_heap*** %vec_.addr, metadata !7943, metadata !DIExpression()), !dbg !7944
  %0 = load %struct.VEC_basic_block_heap**, %struct.VEC_basic_block_heap*** %vec_.addr, align 8, !dbg !7945
  %1 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %0, align 8, !dbg !7945
  %tobool = icmp ne %struct.VEC_basic_block_heap* %1, null, !dbg !7945
  br i1 %tobool, label %if.then, label %if.end, !dbg !7944

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_basic_block_heap**, %struct.VEC_basic_block_heap*** %vec_.addr, align 8, !dbg !7945
  %3 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %2, align 8, !dbg !7945
  %4 = bitcast %struct.VEC_basic_block_heap* %3 to i8*, !dbg !7945
  call void @free(i8* %4), !dbg !7945
  br label %if.end, !dbg !7945

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_basic_block_heap**, %struct.VEC_basic_block_heap*** %vec_.addr, align 8, !dbg !7944
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %5, align 8, !dbg !7944
  ret void, !dbg !7944
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) #2

declare dso_local zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def*) #2

declare dso_local void @sel_register_cfg_hooks() #2

declare dso_local i32 @get_max_uid() #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @bitmap_initialize_stat(%struct.bitmap_head_def* %head, %struct.bitmap_obstack* %obstack) #0 !dbg !7947 {
entry:
  %head.addr = alloca %struct.bitmap_head_def*, align 8
  %obstack.addr = alloca %struct.bitmap_obstack*, align 8
  store %struct.bitmap_head_def* %head, %struct.bitmap_head_def** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %head.addr, metadata !7950, metadata !DIExpression()), !dbg !7951
  store %struct.bitmap_obstack* %obstack, %struct.bitmap_obstack** %obstack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_obstack** %obstack.addr, metadata !7952, metadata !DIExpression()), !dbg !7953
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %head.addr, align 8, !dbg !7954
  %current = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %0, i32 0, i32 1, !dbg !7955
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %current, align 8, !dbg !7956
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %head.addr, align 8, !dbg !7957
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %1, i32 0, i32 0, !dbg !7958
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %first, align 8, !dbg !7959
  %2 = load %struct.bitmap_obstack*, %struct.bitmap_obstack** %obstack.addr, align 8, !dbg !7960
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %head.addr, align 8, !dbg !7961
  %obstack1 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %3, i32 0, i32 3, !dbg !7962
  store %struct.bitmap_obstack* %2, %struct.bitmap_obstack** %obstack1, align 8, !dbg !7963
  ret void, !dbg !7964
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) #2

declare dso_local void @setup_nop_vinsn() #2

declare dso_local %struct.loop* @get_loop_nest_for_rgn(i32) #2

declare dso_local void @sel_add_loop_preheaders() #2

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) #2

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) #2

declare dso_local void @sched_rgn_compute_dependencies(i32) #2

declare dso_local void @compute_priorities() #2

declare dso_local void @debug_rgn_dependencies(i32) #2

declare dso_local void @free_rgn_deps() #2

declare dso_local void @purge_empty_blocks() #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @init_seqno(i32 %number_of_insns, %struct.bitmap_head_def* %blocks_to_reschedule, %struct.basic_block_def* %from) #0 !dbg !7965 {
entry:
  %number_of_insns.addr = alloca i32, align 4
  %blocks_to_reschedule.addr = alloca %struct.bitmap_head_def*, align 8
  %from.addr = alloca %struct.basic_block_def*, align 8
  %visited_bbs = alloca %struct.simple_bitmap_def*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %bbi = alloca i32, align 4
  store i32 %number_of_insns, i32* %number_of_insns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number_of_insns.addr, metadata !7968, metadata !DIExpression()), !dbg !7969
  store %struct.bitmap_head_def* %blocks_to_reschedule, %struct.bitmap_head_def** %blocks_to_reschedule.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %blocks_to_reschedule.addr, metadata !7970, metadata !DIExpression()), !dbg !7971
  store %struct.basic_block_def* %from, %struct.basic_block_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %from.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %visited_bbs, metadata !7974, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !7986, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.declare(metadata i32* %bbi, metadata !7995, metadata !DIExpression()), !dbg !7996
  %0 = load i32, i32* @current_nr_blocks, align 4, !dbg !7997
  %call = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %0), !dbg !7998
  store %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def** %visited_bbs, align 8, !dbg !7999
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_reschedule.addr, align 8, !dbg !8000
  %tobool = icmp ne %struct.bitmap_head_def* %1, null, !dbg !8000
  br i1 %tobool, label %if.then, label %if.else, !dbg !8002

if.then:                                          ; preds = %entry
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited_bbs, align 8, !dbg !8003
  call void @sbitmap_ones(%struct.simple_bitmap_def* %2), !dbg !8005
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_reschedule.addr, align 8, !dbg !8006
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %3, i32 0, i32* %bbi), !dbg !8006
  br label %for.cond, !dbg !8006

for.cond:                                         ; preds = %for.inc, %if.then
  %call1 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bbi), !dbg !8008
  %tobool2 = icmp ne i8 %call1, 0, !dbg !8006
  br i1 %tobool2, label %for.body, label %for.end, !dbg !8006

for.body:                                         ; preds = %for.cond
  %4 = load i32*, i32** @block_to_bb, align 8, !dbg !8010
  %5 = load i32, i32* %bbi, align 4, !dbg !8010
  %idxprom = zext i32 %5 to i64, !dbg !8010
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !8010
  %6 = load i32, i32* %arrayidx, align 4, !dbg !8010
  %7 = load i32, i32* @current_nr_blocks, align 4, !dbg !8010
  %cmp = icmp slt i32 %6, %7, !dbg !8010
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !8010

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6735, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8010
  br label %cond.end, !dbg !8010

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !8010

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8010
  %8 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited_bbs, align 8, !dbg !8012
  %9 = load i32*, i32** @block_to_bb, align 8, !dbg !8013
  %10 = load i32, i32* %bbi, align 4, !dbg !8013
  %idxprom3 = zext i32 %10 to i64, !dbg !8013
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 %idxprom3, !dbg !8013
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !8013
  call void @RESET_BIT(%struct.simple_bitmap_def* %8, i32 %11), !dbg !8014
  br label %for.inc, !dbg !8015

for.inc:                                          ; preds = %cond.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bbi), !dbg !8008
  br label %for.cond, !dbg !8008, !llvm.loop !8016

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !8018

if.else:                                          ; preds = %entry
  %12 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited_bbs, align 8, !dbg !8019
  call void @sbitmap_zero(%struct.simple_bitmap_def* %12), !dbg !8021
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8022
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, !dbg !8022
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !8022
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8022
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i32 0, i32 2, !dbg !8022
  %15 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !8022
  %tobool5 = icmp ne %struct.VEC_basic_block_gc* %15, null, !dbg !8022
  br i1 %tobool5, label %cond.true6, label %cond.false10, !dbg !8022

cond.true6:                                       ; preds = %if.else
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8022
  %add.ptr7 = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, !dbg !8022
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %add.ptr7, i32 0, i32 1, !dbg !8022
  %17 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !8022
  %x_basic_block_info9 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i32 0, i32 2, !dbg !8022
  %18 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info9, align 8, !dbg !8022
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %18, i32 0, i32 0, !dbg !8022
  br label %cond.end11, !dbg !8022

cond.false10:                                     ; preds = %if.else
  br label %cond.end11, !dbg !8022

cond.end11:                                       ; preds = %cond.false10, %cond.true6
  %cond12 = phi %struct.VEC_basic_block_base* [ %base, %cond.true6 ], [ null, %cond.false10 ], !dbg !8022
  %19 = load i32*, i32** @rgn_bb_table, align 8, !dbg !8022
  %20 = load i32*, i32** @ebb_head, align 8, !dbg !8022
  %arrayidx13 = getelementptr inbounds i32, i32* %20, i64 0, !dbg !8022
  %21 = load i32, i32* %arrayidx13, align 4, !dbg !8022
  %idxprom14 = sext i32 %21 to i64, !dbg !8022
  %arrayidx15 = getelementptr inbounds i32, i32* %19, i64 %idxprom14, !dbg !8022
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !8022
  %call16 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond12, i32 %22), !dbg !8022
  store %struct.basic_block_def* %call16, %struct.basic_block_def** %from.addr, align 8, !dbg !8023
  br label %if.end

if.end:                                           ; preds = %cond.end11, %for.end
  %23 = load i32, i32* %number_of_insns.addr, align 4, !dbg !8024
  %cmp17 = icmp sgt i32 %23, 0, !dbg !8025
  br i1 %cmp17, label %cond.true18, label %cond.false19, !dbg !8024

cond.true18:                                      ; preds = %if.end
  %24 = load i32, i32* %number_of_insns.addr, align 4, !dbg !8026
  br label %cond.end20, !dbg !8024

cond.false19:                                     ; preds = %if.end
  %25 = load i32, i32* @sched_max_luid, align 4, !dbg !8027
  %sub = sub nsw i32 %25, 1, !dbg !8028
  br label %cond.end20, !dbg !8024

cond.end20:                                       ; preds = %cond.false19, %cond.true18
  %cond21 = phi i32 [ %24, %cond.true18 ], [ %sub, %cond.false19 ], !dbg !8024
  store i32 %cond21, i32* @cur_seqno, align 4, !dbg !8029
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %from.addr, align 8, !dbg !8030
  %27 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited_bbs, align 8, !dbg !8031
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_reschedule.addr, align 8, !dbg !8032
  call void @init_seqno_1(%struct.basic_block_def* %26, %struct.simple_bitmap_def* %27, %struct.bitmap_head_def* %28), !dbg !8033
  %29 = load i32, i32* @cur_seqno, align 4, !dbg !8034
  %cmp22 = icmp eq i32 %29, 0, !dbg !8034
  br i1 %cmp22, label %cond.false25, label %lor.lhs.false, !dbg !8034

lor.lhs.false:                                    ; preds = %cond.end20
  %30 = load i32, i32* %number_of_insns.addr, align 4, !dbg !8034
  %cmp23 = icmp eq i32 %30, 0, !dbg !8034
  br i1 %cmp23, label %cond.false25, label %cond.true24, !dbg !8034

cond.true24:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8034
  br label %cond.end26, !dbg !8034

cond.false25:                                     ; preds = %lor.lhs.false, %cond.end20
  br label %cond.end26, !dbg !8034

cond.end26:                                       ; preds = %cond.false25, %cond.true24
  %cond27 = phi i32 [ 0, %cond.true24 ], [ 0, %cond.false25 ], !dbg !8034
  %31 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited_bbs, align 8, !dbg !8035
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %31, i32 0, i32 0, !dbg !8035
  %32 = load i8*, i8** %popcount, align 8, !dbg !8035
  call void @free(i8* %32), !dbg !8035
  %33 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited_bbs, align 8, !dbg !8035
  %34 = bitcast %struct.simple_bitmap_def* %33 to i8*, !dbg !8035
  call void @free(i8* %34), !dbg !8035
  %35 = load i32, i32* @sched_max_luid, align 4, !dbg !8036
  %sub28 = sub nsw i32 %35, 1, !dbg !8037
  ret i32 %sub28, !dbg !8038
}

declare dso_local void @init_fences(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sel_sched_region_2(i32 %orig_max_seqno) #0 !dbg !8039 {
entry:
  %orig_max_seqno.addr = alloca i32, align 4
  %highest_seqno_in_use = alloca i32, align 4
  %min_seqno = alloca i32, align 4
  %max_seqno = alloca i32, align 4
  %scheduled_insns = alloca %struct._list_node*, align 8
  %scheduled_insns_tailp = alloca %struct._list_node**, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store i32 %orig_max_seqno, i32* %orig_max_seqno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %orig_max_seqno.addr, metadata !8040, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.declare(metadata i32* %highest_seqno_in_use, metadata !8042, metadata !DIExpression()), !dbg !8043
  %0 = load i32, i32* %orig_max_seqno.addr, align 4, !dbg !8044
  store i32 %0, i32* %highest_seqno_in_use, align 4, !dbg !8043
  store i32 0, i32* @stat_bookkeeping_copies, align 4, !dbg !8045
  store i32 0, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !8046
  store i32 0, i32* @stat_renamed_scheduled, align 4, !dbg !8047
  store i32 0, i32* @stat_substitutions_total, align 4, !dbg !8048
  store i32 0, i32* @num_insns_scheduled, align 4, !dbg !8049
  br label %while.cond, !dbg !8050

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !8051
  %tobool = icmp ne %struct._list_node* %1, null, !dbg !8050
  br i1 %tobool, label %while.body, label %while.end, !dbg !8050

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %min_seqno, metadata !8052, metadata !DIExpression()), !dbg !8054
  call void @llvm.dbg.declare(metadata i32* %max_seqno, metadata !8055, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.declare(metadata %struct._list_node** %scheduled_insns, metadata !8057, metadata !DIExpression()), !dbg !8058
  store %struct._list_node* null, %struct._list_node** %scheduled_insns, align 8, !dbg !8058
  call void @llvm.dbg.declare(metadata %struct._list_node*** %scheduled_insns_tailp, metadata !8059, metadata !DIExpression()), !dbg !8061
  store %struct._list_node** %scheduled_insns, %struct._list_node*** %scheduled_insns_tailp, align 8, !dbg !8061
  %2 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !8062
  call void @find_min_max_seqno(%struct._list_node* %2, i32* %min_seqno, i32* %max_seqno), !dbg !8063
  %3 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !8064
  %4 = load i32, i32* %max_seqno, align 4, !dbg !8065
  call void @schedule_on_fences(%struct._list_node* %3, i32 %4, %struct._list_node*** %scheduled_insns_tailp), !dbg !8066
  %5 = load %struct._list_node*, %struct._list_node** @fences, align 8, !dbg !8067
  %6 = load i32, i32* %orig_max_seqno.addr, align 4, !dbg !8068
  %call = call %struct._list_node* @calculate_new_fences(%struct._list_node* %5, i32 %6), !dbg !8069
  store %struct._list_node* %call, %struct._list_node** @fences, align 8, !dbg !8070
  %7 = load i32, i32* %min_seqno, align 4, !dbg !8071
  %8 = load i32, i32* %max_seqno, align 4, !dbg !8072
  %9 = load i32, i32* %highest_seqno_in_use, align 4, !dbg !8073
  %call1 = call i32 @update_seqnos_and_stage(i32 %7, i32 %8, i32 %9, %struct._list_node** %scheduled_insns), !dbg !8074
  store i32 %call1, i32* %highest_seqno_in_use, align 4, !dbg !8075
  br label %while.cond, !dbg !8050, !llvm.loop !8076

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* @sched_verbose, align 4, !dbg !8078
  %cmp = icmp sge i32 %10, 1, !dbg !8080
  br i1 %cmp, label %if.then, label %if.end12, !dbg !8081

if.then:                                          ; preds = %while.end
  br label %do.body, !dbg !8082

do.body:                                          ; preds = %if.then
  %11 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8083
  %tobool2 = icmp ne i8 %11, 0, !dbg !8083
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !8086

if.then3:                                         ; preds = %do.body
  br label %do.body4, !dbg !8083

do.body4:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !8087, metadata !DIExpression()), !dbg !8089
  %12 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !8089
  %13 = load i32, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !8089
  %14 = load i32, i32* @stat_renamed_scheduled, align 4, !dbg !8089
  %15 = load i32, i32* @stat_substitutions_total, align 4, !dbg !8089
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.39, i64 0, i64 0), i32 %12, i32 %13, i32 %14, i32 %15), !dbg !8089
  %mul = mul nsw i32 2, %call5, !dbg !8089
  %add = add nsw i32 1, %mul, !dbg !8089
  store i32 %add, i32* %__j, align 4, !dbg !8089
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !8090, metadata !DIExpression()), !dbg !8089
  %16 = load i32, i32* %__j, align 4, !dbg !8089
  %conv = sext i32 %16 to i64, !dbg !8089
  %mul6 = mul i64 1, %conv, !dbg !8089
  %17 = alloca i8, i64 %mul6, align 16, !dbg !8089
  store i8* %17, i8** %__s, align 8, !dbg !8089
  %18 = load i8*, i8** %__s, align 8, !dbg !8089
  %19 = load i32, i32* %__j, align 4, !dbg !8089
  %conv7 = sext i32 %19 to i64, !dbg !8089
  %20 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !8089
  %21 = load i32, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !8089
  %22 = load i32, i32* @stat_renamed_scheduled, align 4, !dbg !8089
  %23 = load i32, i32* @stat_substitutions_total, align 4, !dbg !8089
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %18, i64 %conv7, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.39, i64 0, i64 0), i32 %20, i32 %21, i32 %22, i32 %23), !dbg !8089
  %24 = load i8*, i8** %__s, align 8, !dbg !8089
  call void @sel_prepare_string_for_dot_label(i8* %24), !dbg !8089
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8089
  %26 = load i8*, i8** %__s, align 8, !dbg !8089
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %26), !dbg !8089
  br label %do.end, !dbg !8089

do.end:                                           ; preds = %do.body4
  br label %if.end, !dbg !8089

if.else:                                          ; preds = %do.body
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8083
  %28 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !8083
  %29 = load i32, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !8083
  %30 = load i32, i32* @stat_renamed_scheduled, align 4, !dbg !8083
  %31 = load i32, i32* @stat_substitutions_total, align 4, !dbg !8083
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.39, i64 0, i64 0), i32 %28, i32 %29, i32 %30, i32 %31), !dbg !8083
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end11, !dbg !8086

do.end11:                                         ; preds = %if.end
  br label %if.end12, !dbg !8086

if.end12:                                         ; preds = %do.end11, %while.end
  ret void, !dbg !8091
}

declare dso_local void @clear_outdated_rtx_info(%struct.basic_block_def*) #2

declare dso_local void @flist_tail_init(%struct.flist_tail_def*) #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) #2

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) #0 !dbg !8092 {
entry:
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %map.addr = alloca %struct.bitmap_head_def*, align 8
  %start_bit.addr = alloca i32, align 4
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !8100, metadata !DIExpression()), !dbg !8101
  store %struct.bitmap_head_def* %map, %struct.bitmap_head_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %map.addr, metadata !8102, metadata !DIExpression()), !dbg !8103
  store i32 %start_bit, i32* %start_bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_bit.addr, metadata !8104, metadata !DIExpression()), !dbg !8105
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !8106, metadata !DIExpression()), !dbg !8107
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %map.addr, align 8, !dbg !8108
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %0, i32 0, i32 0, !dbg !8109
  %1 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !8109
  %2 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8110
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %2, i32 0, i32 0, !dbg !8111
  store %struct.bitmap_element_def* %1, %struct.bitmap_element_def** %elt1, align 8, !dbg !8112
  %3 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8113
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %3, i32 0, i32 1, !dbg !8114
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !8115
  br label %while.body, !dbg !8116

while.body:                                       ; preds = %entry, %if.end5
  %4 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8117
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %4, i32 0, i32 0, !dbg !8120
  %5 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt11, align 8, !dbg !8120
  %tobool = icmp ne %struct.bitmap_element_def* %5, null, !dbg !8117
  br i1 %tobool, label %if.end, label %if.then, !dbg !8121

if.then:                                          ; preds = %while.body
  %6 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8122
  %elt12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %6, i32 0, i32 0, !dbg !8124
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt12, align 8, !dbg !8125
  br label %while.end, !dbg !8126

if.end:                                           ; preds = %while.body
  %7 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8127
  %elt13 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %7, i32 0, i32 0, !dbg !8129
  %8 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt13, align 8, !dbg !8129
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %8, i32 0, i32 2, !dbg !8130
  %9 = load i32, i32* %indx, align 8, !dbg !8130
  %10 = load i32, i32* %start_bit.addr, align 4, !dbg !8131
  %div = udiv i32 %10, 128, !dbg !8132
  %cmp = icmp uge i32 %9, %div, !dbg !8133
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !8134

if.then4:                                         ; preds = %if.end
  br label %while.end, !dbg !8135

if.end5:                                          ; preds = %if.end
  %11 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8136
  %elt16 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %11, i32 0, i32 0, !dbg !8137
  %12 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt16, align 8, !dbg !8137
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i32 0, i32 0, !dbg !8138
  %13 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8, !dbg !8138
  %14 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8139
  %elt17 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %14, i32 0, i32 0, !dbg !8140
  store %struct.bitmap_element_def* %13, %struct.bitmap_element_def** %elt17, align 8, !dbg !8141
  br label %while.body, !dbg !8116, !llvm.loop !8142

while.end:                                        ; preds = %if.then4, %if.then
  %15 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8144
  %elt18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %15, i32 0, i32 0, !dbg !8146
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt18, align 8, !dbg !8146
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 2, !dbg !8147
  %17 = load i32, i32* %indx9, align 8, !dbg !8147
  %18 = load i32, i32* %start_bit.addr, align 4, !dbg !8148
  %div10 = udiv i32 %18, 128, !dbg !8149
  %cmp11 = icmp ne i32 %17, %div10, !dbg !8150
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !8151

if.then12:                                        ; preds = %while.end
  %19 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8152
  %elt113 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %19, i32 0, i32 0, !dbg !8153
  %20 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt113, align 8, !dbg !8153
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %20, i32 0, i32 2, !dbg !8154
  %21 = load i32, i32* %indx14, align 8, !dbg !8154
  %mul = mul i32 %21, 128, !dbg !8155
  store i32 %mul, i32* %start_bit.addr, align 4, !dbg !8156
  br label %if.end15, !dbg !8157

if.end15:                                         ; preds = %if.then12, %while.end
  %22 = load i32, i32* %start_bit.addr, align 4, !dbg !8158
  %div16 = udiv i32 %22, 64, !dbg !8159
  %rem = urem i32 %div16, 2, !dbg !8160
  %23 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8161
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %23, i32 0, i32 2, !dbg !8162
  store i32 %rem, i32* %word_no, align 8, !dbg !8163
  %24 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8164
  %elt117 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %24, i32 0, i32 0, !dbg !8165
  %25 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt117, align 8, !dbg !8165
  %bits = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %25, i32 0, i32 3, !dbg !8166
  %26 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8167
  %word_no18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %26, i32 0, i32 2, !dbg !8168
  %27 = load i32, i32* %word_no18, align 8, !dbg !8168
  %idxprom = zext i32 %27 to i64, !dbg !8164
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits, i64 0, i64 %idxprom, !dbg !8164
  %28 = load i64, i64* %arrayidx, align 8, !dbg !8164
  %29 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8169
  %bits19 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %29, i32 0, i32 3, !dbg !8170
  store i64 %28, i64* %bits19, align 8, !dbg !8171
  %30 = load i32, i32* %start_bit.addr, align 4, !dbg !8172
  %rem20 = urem i32 %30, 64, !dbg !8173
  %31 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8174
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %31, i32 0, i32 3, !dbg !8175
  %32 = load i64, i64* %bits21, align 8, !dbg !8176
  %sh_prom = zext i32 %rem20 to i64, !dbg !8176
  %shr = lshr i64 %32, %sh_prom, !dbg !8176
  store i64 %shr, i64* %bits21, align 8, !dbg !8176
  %33 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8177
  %bits22 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %33, i32 0, i32 3, !dbg !8178
  %34 = load i64, i64* %bits22, align 8, !dbg !8178
  %tobool23 = icmp ne i64 %34, 0, !dbg !8179
  %lnot = xor i1 %tobool23, true, !dbg !8179
  %lnot.ext = zext i1 %lnot to i32, !dbg !8179
  %35 = load i32, i32* %start_bit.addr, align 4, !dbg !8180
  %add = add i32 %35, %lnot.ext, !dbg !8180
  store i32 %add, i32* %start_bit.addr, align 4, !dbg !8180
  %36 = load i32, i32* %start_bit.addr, align 4, !dbg !8181
  %37 = load i32*, i32** %bit_no.addr, align 8, !dbg !8182
  store i32 %36, i32* %37, align 4, !dbg !8183
  ret void, !dbg !8184
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) #0 !dbg !8185 {
entry:
  %retval = alloca i8, align 1
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !8190, metadata !DIExpression()), !dbg !8191
  %0 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8192
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %0, i32 0, i32 3, !dbg !8194
  %1 = load i64, i64* %bits, align 8, !dbg !8194
  %tobool = icmp ne i64 %1, 0, !dbg !8192
  br i1 %tobool, label %if.then, label %if.end, !dbg !8195

if.then:                                          ; preds = %entry
  br label %next_bit, !dbg !8196

next_bit:                                         ; preds = %if.then15, %if.then
  call void @llvm.dbg.label(metadata !8197), !dbg !8199
  br label %while.cond, !dbg !8200

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8201
  %bits1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %2, i32 0, i32 3, !dbg !8202
  %3 = load i64, i64* %bits1, align 8, !dbg !8202
  %and = and i64 %3, 1, !dbg !8203
  %tobool2 = icmp ne i64 %and, 0, !dbg !8204
  %lnot = xor i1 %tobool2, true, !dbg !8204
  br i1 %lnot, label %while.body, label %while.end, !dbg !8200

while.body:                                       ; preds = %while.cond
  %4 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8205
  %bits3 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %4, i32 0, i32 3, !dbg !8207
  %5 = load i64, i64* %bits3, align 8, !dbg !8208
  %shr = lshr i64 %5, 1, !dbg !8208
  store i64 %shr, i64* %bits3, align 8, !dbg !8208
  %6 = load i32*, i32** %bit_no.addr, align 8, !dbg !8209
  %7 = load i32, i32* %6, align 4, !dbg !8210
  %add = add i32 %7, 1, !dbg !8210
  store i32 %add, i32* %6, align 4, !dbg !8210
  br label %while.cond, !dbg !8200, !llvm.loop !8211

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !8213
  br label %return, !dbg !8213

if.end:                                           ; preds = %entry
  %8 = load i32*, i32** %bit_no.addr, align 8, !dbg !8214
  %9 = load i32, i32* %8, align 4, !dbg !8215
  %add4 = add i32 %9, 64, !dbg !8216
  %sub = sub i32 %add4, 1, !dbg !8217
  %div = udiv i32 %sub, 64, !dbg !8218
  %mul = mul i32 %div, 64, !dbg !8219
  %10 = load i32*, i32** %bit_no.addr, align 8, !dbg !8220
  store i32 %mul, i32* %10, align 4, !dbg !8221
  %11 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8222
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %11, i32 0, i32 2, !dbg !8223
  %12 = load i32, i32* %word_no, align 8, !dbg !8224
  %inc = add i32 %12, 1, !dbg !8224
  store i32 %inc, i32* %word_no, align 8, !dbg !8224
  br label %while.body6, !dbg !8225

while.body6:                                      ; preds = %if.end, %if.end26
  br label %while.cond7, !dbg !8226

while.cond7:                                      ; preds = %if.end16, %while.body6
  %13 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8228
  %word_no8 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %13, i32 0, i32 2, !dbg !8229
  %14 = load i32, i32* %word_no8, align 8, !dbg !8229
  %cmp = icmp ne i32 %14, 2, !dbg !8230
  br i1 %cmp, label %while.body9, label %while.end20, !dbg !8226

while.body9:                                      ; preds = %while.cond7
  %15 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8231
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %15, i32 0, i32 0, !dbg !8233
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !8233
  %bits10 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 3, !dbg !8234
  %17 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8235
  %word_no11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %17, i32 0, i32 2, !dbg !8236
  %18 = load i32, i32* %word_no11, align 8, !dbg !8236
  %idxprom = zext i32 %18 to i64, !dbg !8231
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits10, i64 0, i64 %idxprom, !dbg !8231
  %19 = load i64, i64* %arrayidx, align 8, !dbg !8231
  %20 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8237
  %bits12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %20, i32 0, i32 3, !dbg !8238
  store i64 %19, i64* %bits12, align 8, !dbg !8239
  %21 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8240
  %bits13 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %21, i32 0, i32 3, !dbg !8242
  %22 = load i64, i64* %bits13, align 8, !dbg !8242
  %tobool14 = icmp ne i64 %22, 0, !dbg !8240
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !8243

if.then15:                                        ; preds = %while.body9
  br label %next_bit, !dbg !8244

if.end16:                                         ; preds = %while.body9
  %23 = load i32*, i32** %bit_no.addr, align 8, !dbg !8245
  %24 = load i32, i32* %23, align 4, !dbg !8246
  %add17 = add i32 %24, 64, !dbg !8246
  store i32 %add17, i32* %23, align 4, !dbg !8246
  %25 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8247
  %word_no18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %25, i32 0, i32 2, !dbg !8248
  %26 = load i32, i32* %word_no18, align 8, !dbg !8249
  %inc19 = add i32 %26, 1, !dbg !8249
  store i32 %inc19, i32* %word_no18, align 8, !dbg !8249
  br label %while.cond7, !dbg !8226, !llvm.loop !8250

while.end20:                                      ; preds = %while.cond7
  %27 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8252
  %elt121 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %27, i32 0, i32 0, !dbg !8253
  %28 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt121, align 8, !dbg !8253
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %28, i32 0, i32 0, !dbg !8254
  %29 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8, !dbg !8254
  %30 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8255
  %elt122 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %30, i32 0, i32 0, !dbg !8256
  store %struct.bitmap_element_def* %29, %struct.bitmap_element_def** %elt122, align 8, !dbg !8257
  %31 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8258
  %elt123 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %31, i32 0, i32 0, !dbg !8260
  %32 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt123, align 8, !dbg !8260
  %tobool24 = icmp ne %struct.bitmap_element_def* %32, null, !dbg !8258
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !8261

if.then25:                                        ; preds = %while.end20
  store i8 0, i8* %retval, align 1, !dbg !8262
  br label %return, !dbg !8262

if.end26:                                         ; preds = %while.end20
  %33 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8263
  %elt127 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %33, i32 0, i32 0, !dbg !8264
  %34 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt127, align 8, !dbg !8264
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %34, i32 0, i32 2, !dbg !8265
  %35 = load i32, i32* %indx, align 8, !dbg !8265
  %mul28 = mul i32 %35, 128, !dbg !8266
  %36 = load i32*, i32** %bit_no.addr, align 8, !dbg !8267
  store i32 %mul28, i32* %36, align 4, !dbg !8268
  %37 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8269
  %word_no29 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %37, i32 0, i32 2, !dbg !8270
  store i32 0, i32* %word_no29, align 8, !dbg !8271
  br label %while.body6, !dbg !8225, !llvm.loop !8272

return:                                           ; preds = %if.then25, %while.end
  %38 = load i8, i8* %retval, align 1, !dbg !8274
  ret i8 %38, !dbg !8274
}

; Function Attrs: noinline nounwind uwtable
define internal void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) #0 !dbg !8275 {
entry:
  %map.addr = alloca %struct.simple_bitmap_def*, align 8
  %bitno.addr = alloca i32, align 4
  %oldbit = alloca i8, align 1
  store %struct.simple_bitmap_def* %map, %struct.simple_bitmap_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %map.addr, metadata !8278, metadata !DIExpression()), !dbg !8279
  store i32 %bitno, i32* %bitno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bitno.addr, metadata !8280, metadata !DIExpression()), !dbg !8281
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8282
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i32 0, i32 0, !dbg !8284
  %1 = load i8*, i8** %popcount, align 8, !dbg !8284
  %tobool = icmp ne i8* %1, null, !dbg !8282
  br i1 %tobool, label %if.then, label %if.end7, !dbg !8285

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %oldbit, metadata !8286, metadata !DIExpression()), !dbg !8288
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8289
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i32 0, i32 3, !dbg !8289
  %3 = load i32, i32* %bitno.addr, align 4, !dbg !8289
  %div = udiv i32 %3, 64, !dbg !8289
  %idxprom = zext i32 %div to i64, !dbg !8289
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom, !dbg !8289
  %4 = load i64, i64* %arrayidx, align 8, !dbg !8289
  %5 = load i32, i32* %bitno.addr, align 4, !dbg !8289
  %rem = urem i32 %5, 64, !dbg !8289
  %sh_prom = zext i32 %rem to i64, !dbg !8289
  %shr = lshr i64 %4, %sh_prom, !dbg !8289
  %and = and i64 %shr, 1, !dbg !8289
  %conv = trunc i64 %and to i8, !dbg !8289
  store i8 %conv, i8* %oldbit, align 1, !dbg !8290
  %6 = load i8, i8* %oldbit, align 1, !dbg !8291
  %tobool1 = icmp ne i8 %6, 0, !dbg !8291
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8293

if.then2:                                         ; preds = %if.then
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8294
  %popcount3 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %7, i32 0, i32 0, !dbg !8295
  %8 = load i8*, i8** %popcount3, align 8, !dbg !8295
  %9 = load i32, i32* %bitno.addr, align 4, !dbg !8296
  %div4 = udiv i32 %9, 64, !dbg !8297
  %idxprom5 = zext i32 %div4 to i64, !dbg !8294
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 %idxprom5, !dbg !8294
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !8298
  %dec = add i8 %10, -1, !dbg !8298
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !8298
  br label %if.end, !dbg !8294

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !8299

if.end7:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %bitno.addr, align 4, !dbg !8300
  %rem8 = urem i32 %11, 64, !dbg !8301
  %sh_prom9 = zext i32 %rem8 to i64, !dbg !8302
  %shl = shl i64 1, %sh_prom9, !dbg !8302
  %neg = xor i64 %shl, -1, !dbg !8303
  %12 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8304
  %elms10 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %12, i32 0, i32 3, !dbg !8305
  %13 = load i32, i32* %bitno.addr, align 4, !dbg !8306
  %div11 = udiv i32 %13, 64, !dbg !8307
  %idxprom12 = zext i32 %div11 to i64, !dbg !8304
  %arrayidx13 = getelementptr inbounds [1 x i64], [1 x i64]* %elms10, i64 0, i64 %idxprom12, !dbg !8304
  %14 = load i64, i64* %arrayidx13, align 8, !dbg !8308
  %and14 = and i64 %14, %neg, !dbg !8308
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !8308
  ret void, !dbg !8309
}

; Function Attrs: noinline nounwind uwtable
define internal void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) #0 !dbg !8310 {
entry:
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !8315, metadata !DIExpression()), !dbg !8316
  %0 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !8317
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %0, i32 0, i32 3, !dbg !8318
  %1 = load i64, i64* %bits, align 8, !dbg !8319
  %shr = lshr i64 %1, 1, !dbg !8319
  store i64 %shr, i64* %bits, align 8, !dbg !8319
  %2 = load i32*, i32** %bit_no.addr, align 8, !dbg !8320
  %3 = load i32, i32* %2, align 4, !dbg !8321
  %add = add i32 %3, 1, !dbg !8321
  store i32 %add, i32* %2, align 4, !dbg !8321
  ret void, !dbg !8322
}

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_seqno_1(%struct.basic_block_def* %bb, %struct.simple_bitmap_def* %visited_bbs, %struct.bitmap_head_def* %blocks_to_reschedule) #0 !dbg !8323 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %visited_bbs.addr = alloca %struct.simple_bitmap_def*, align 8
  %blocks_to_reschedule.addr = alloca %struct.bitmap_head_def*, align 8
  %bbi = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %succ_insn = alloca %struct.rtx_def*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  %succ = alloca %struct.basic_block_def*, align 8
  %succ_bbi = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !8326, metadata !DIExpression()), !dbg !8327
  store %struct.simple_bitmap_def* %visited_bbs, %struct.simple_bitmap_def** %visited_bbs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %visited_bbs.addr, metadata !8328, metadata !DIExpression()), !dbg !8329
  store %struct.bitmap_head_def* %blocks_to_reschedule, %struct.bitmap_head_def** %blocks_to_reschedule.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %blocks_to_reschedule.addr, metadata !8330, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.declare(metadata i32* %bbi, metadata !8332, metadata !DIExpression()), !dbg !8333
  %0 = load i32*, i32** @block_to_bb, align 8, !dbg !8334
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8334
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 9, !dbg !8334
  %2 = load i32, i32* %index, align 8, !dbg !8334
  %idxprom = sext i32 %2 to i64, !dbg !8334
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !8334
  %3 = load i32, i32* %arrayidx, align 4, !dbg !8334
  store i32 %3, i32* %bbi, align 4, !dbg !8333
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !8335, metadata !DIExpression()), !dbg !8336
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !8337, metadata !DIExpression()), !dbg !8338
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8339
  %call = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %4), !dbg !8340
  store %struct.rtx_def* %call, %struct.rtx_def** %note, align 8, !dbg !8338
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %succ_insn, metadata !8341, metadata !DIExpression()), !dbg !8342
  call void @llvm.dbg.declare(metadata %struct.succ_iterator* %si, metadata !8343, metadata !DIExpression()), !dbg !8344
  %5 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited_bbs.addr, align 8, !dbg !8345
  %6 = load i32, i32* %bbi, align 4, !dbg !8346
  call void @SET_BIT(%struct.simple_bitmap_def* %5, i32 %6), !dbg !8347
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_reschedule.addr, align 8, !dbg !8348
  %tobool = icmp ne %struct.bitmap_head_def* %7, null, !dbg !8348
  br i1 %tobool, label %if.then, label %if.end, !dbg !8350

if.then:                                          ; preds = %entry
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_reschedule.addr, align 8, !dbg !8351
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8352
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 9, !dbg !8353
  %10 = load i32, i32* %index1, align 8, !dbg !8353
  %call2 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %8, i32 %10), !dbg !8354
  br label %if.end, !dbg !8354

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8355
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i32 0, i32 7, !dbg !8355
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8355
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8355
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i32 0, i32 1, !dbg !8355
  %13 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8355
  call void @_succ_iter_start(%struct.succ_iterator* sret %tmp, %struct.rtx_def** %succ_insn, %struct.rtx_def* %13, i32 9), !dbg !8355
  %14 = bitcast %struct.succ_iterator* %si to i8*, !dbg !8355
  %15 = bitcast %struct.succ_iterator* %tmp to i8*, !dbg !8355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 64, i1 false), !dbg !8355
  br label %for.cond, !dbg !8355

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8357
  %il3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i32 0, i32 7, !dbg !8357
  %rtl4 = bitcast %union.basic_block_il_dependent* %il3 to %struct.rtl_bb_info**, !dbg !8357
  %17 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl4, align 8, !dbg !8357
  %end_5 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %17, i32 0, i32 1, !dbg !8357
  %18 = load %struct.rtx_def*, %struct.rtx_def** %end_5, align 8, !dbg !8357
  %call6 = call zeroext i8 @_succ_iter_cond(%struct.succ_iterator* %si, %struct.rtx_def** %succ_insn, %struct.rtx_def* %18, i8 (%struct.edge_def*, %struct.succ_iterator*)* @_eligible_successor_edge_p), !dbg !8357
  %tobool7 = icmp ne i8 %call6, 0, !dbg !8355
  br i1 %tobool7, label %for.body, label %for.end, !dbg !8355

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %succ, metadata !8359, metadata !DIExpression()), !dbg !8361
  %19 = load %struct.rtx_def*, %struct.rtx_def** %succ_insn, align 8, !dbg !8362
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !8362
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8362
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !8362
  %rt_bb = bitcast %union.rtunion_def* %arrayidx8 to %struct.basic_block_def**, !dbg !8362
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8362
  store %struct.basic_block_def* %20, %struct.basic_block_def** %succ, align 8, !dbg !8361
  call void @llvm.dbg.declare(metadata i32* %succ_bbi, metadata !8363, metadata !DIExpression()), !dbg !8364
  %21 = load i32*, i32** @block_to_bb, align 8, !dbg !8365
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !8365
  %index9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i32 0, i32 9, !dbg !8365
  %23 = load i32, i32* %index9, align 8, !dbg !8365
  %idxprom10 = sext i32 %23 to i64, !dbg !8365
  %arrayidx11 = getelementptr inbounds i32, i32* %21, i64 %idxprom10, !dbg !8365
  %24 = load i32, i32* %arrayidx11, align 4, !dbg !8365
  store i32 %24, i32* %succ_bbi, align 4, !dbg !8364
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !8366
  %call12 = call zeroext i8 @in_current_region_p(%struct.basic_block_def* %25), !dbg !8366
  %tobool13 = icmp ne i8 %call12, 0, !dbg !8366
  br i1 %tobool13, label %cond.false, label %cond.true, !dbg !8366

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6700, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8366
  br label %cond.end, !dbg !8366

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !8366

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8366
  %26 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited_bbs.addr, align 8, !dbg !8367
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %26, i32 0, i32 3, !dbg !8367
  %27 = load i32, i32* %succ_bbi, align 4, !dbg !8367
  %div = udiv i32 %27, 64, !dbg !8367
  %idxprom14 = zext i32 %div to i64, !dbg !8367
  %arrayidx15 = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom14, !dbg !8367
  %28 = load i64, i64* %arrayidx15, align 8, !dbg !8367
  %29 = load i32, i32* %succ_bbi, align 4, !dbg !8367
  %rem = urem i32 %29, 64, !dbg !8367
  %sh_prom = zext i32 %rem to i64, !dbg !8367
  %shr = lshr i64 %28, %sh_prom, !dbg !8367
  %and = and i64 %shr, 1, !dbg !8367
  %tobool16 = icmp ne i64 %and, 0, !dbg !8367
  br i1 %tobool16, label %if.end22, label %if.then17, !dbg !8369

if.then17:                                        ; preds = %cond.end
  %30 = load i32, i32* %succ_bbi, align 4, !dbg !8370
  %31 = load i32, i32* %bbi, align 4, !dbg !8370
  %cmp = icmp sgt i32 %30, %31, !dbg !8370
  br i1 %cmp, label %cond.false19, label %cond.true18, !dbg !8370

cond.true18:                                      ; preds = %if.then17
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6704, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8370
  br label %cond.end20, !dbg !8370

cond.false19:                                     ; preds = %if.then17
  br label %cond.end20, !dbg !8370

cond.end20:                                       ; preds = %cond.false19, %cond.true18
  %cond21 = phi i32 [ 0, %cond.true18 ], [ 0, %cond.false19 ], !dbg !8370
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !8372
  %33 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited_bbs.addr, align 8, !dbg !8373
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_reschedule.addr, align 8, !dbg !8374
  call void @init_seqno_1(%struct.basic_block_def* %32, %struct.simple_bitmap_def* %33, %struct.bitmap_head_def* %34), !dbg !8375
  br label %if.end22, !dbg !8376

if.end22:                                         ; preds = %cond.end20, %cond.end
  br label %for.inc, !dbg !8377

for.inc:                                          ; preds = %if.end22
  call void @_succ_iter_next(%struct.succ_iterator* %si), !dbg !8357
  br label %for.cond, !dbg !8357, !llvm.loop !8378

for.end:                                          ; preds = %for.cond
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8380
  %il23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i32 0, i32 7, !dbg !8380
  %rtl24 = bitcast %union.basic_block_il_dependent* %il23 to %struct.rtl_bb_info**, !dbg !8380
  %36 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl24, align 8, !dbg !8380
  %end_25 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %36, i32 0, i32 1, !dbg !8380
  %37 = load %struct.rtx_def*, %struct.rtx_def** %end_25, align 8, !dbg !8380
  store %struct.rtx_def* %37, %struct.rtx_def** %insn, align 8, !dbg !8382
  br label %for.cond26, !dbg !8383

for.cond26:                                       ; preds = %for.inc45, %for.end
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8384
  %39 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !8386
  %cmp27 = icmp ne %struct.rtx_def* %38, %39, !dbg !8387
  br i1 %cmp27, label %for.body28, label %for.end49, !dbg !8388

for.body28:                                       ; preds = %for.cond26
  %40 = load i32, i32* @cur_seqno, align 4, !dbg !8389
  %dec = add nsw i32 %40, -1, !dbg !8389
  store i32 %dec, i32* @cur_seqno, align 4, !dbg !8389
  %41 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8390
  %tobool29 = icmp ne %struct.VEC_sel_insn_data_def_heap* %41, null, !dbg !8390
  br i1 %tobool29, label %cond.true30, label %cond.false31, !dbg !8390

cond.true30:                                      ; preds = %for.body28
  %42 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8390
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %42, i32 0, i32 0, !dbg !8390
  br label %cond.end32, !dbg !8390

cond.false31:                                     ; preds = %for.body28
  br label %cond.end32, !dbg !8390

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true30 ], [ null, %cond.false31 ], !dbg !8390
  %43 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8390
  %tobool34 = icmp ne %struct.VEC_int_heap* %43, null, !dbg !8390
  br i1 %tobool34, label %cond.true35, label %cond.false37, !dbg !8390

cond.true35:                                      ; preds = %cond.end32
  %44 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8390
  %base36 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %44, i32 0, i32 0, !dbg !8390
  br label %cond.end38, !dbg !8390

cond.false37:                                     ; preds = %cond.end32
  br label %cond.end38, !dbg !8390

cond.end38:                                       ; preds = %cond.false37, %cond.true35
  %cond39 = phi %struct.VEC_int_base* [ %base36, %cond.true35 ], [ null, %cond.false37 ], !dbg !8390
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8390
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !8390
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !8390
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 0, !dbg !8390
  %rt_int = bitcast %union.rtunion_def* %arrayidx42 to i32*, !dbg !8390
  %46 = load i32, i32* %rt_int, align 8, !dbg !8390
  %call43 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond39, i32 %46), !dbg !8390
  %call44 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond33, i32 %call43), !dbg !8390
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call44, i32 0, i32 2, !dbg !8390
  store i32 %40, i32* %seqno, align 4, !dbg !8391
  br label %for.inc45, !dbg !8390

for.inc45:                                        ; preds = %cond.end38
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8392
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !8392
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !8392
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 1, !dbg !8392
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !8392
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8392
  store %struct.rtx_def* %48, %struct.rtx_def** %insn, align 8, !dbg !8393
  br label %for.cond26, !dbg !8394, !llvm.loop !8395

for.end49:                                        ; preds = %for.cond26
  ret void, !dbg !8397
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) #0 !dbg !8398 {
entry:
  %map.addr = alloca %struct.simple_bitmap_def*, align 8
  %bitno.addr = alloca i32, align 4
  %oldbit = alloca i8, align 1
  store %struct.simple_bitmap_def* %map, %struct.simple_bitmap_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %map.addr, metadata !8399, metadata !DIExpression()), !dbg !8400
  store i32 %bitno, i32* %bitno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bitno.addr, metadata !8401, metadata !DIExpression()), !dbg !8402
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8403
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i32 0, i32 0, !dbg !8405
  %1 = load i8*, i8** %popcount, align 8, !dbg !8405
  %tobool = icmp ne i8* %1, null, !dbg !8403
  br i1 %tobool, label %if.then, label %if.end7, !dbg !8406

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %oldbit, metadata !8407, metadata !DIExpression()), !dbg !8409
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8410
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i32 0, i32 3, !dbg !8410
  %3 = load i32, i32* %bitno.addr, align 4, !dbg !8410
  %div = udiv i32 %3, 64, !dbg !8410
  %idxprom = zext i32 %div to i64, !dbg !8410
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom, !dbg !8410
  %4 = load i64, i64* %arrayidx, align 8, !dbg !8410
  %5 = load i32, i32* %bitno.addr, align 4, !dbg !8410
  %rem = urem i32 %5, 64, !dbg !8410
  %sh_prom = zext i32 %rem to i64, !dbg !8410
  %shr = lshr i64 %4, %sh_prom, !dbg !8410
  %and = and i64 %shr, 1, !dbg !8410
  %conv = trunc i64 %and to i8, !dbg !8410
  store i8 %conv, i8* %oldbit, align 1, !dbg !8411
  %6 = load i8, i8* %oldbit, align 1, !dbg !8412
  %tobool1 = icmp ne i8 %6, 0, !dbg !8412
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !8414

if.then2:                                         ; preds = %if.then
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8415
  %popcount3 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %7, i32 0, i32 0, !dbg !8416
  %8 = load i8*, i8** %popcount3, align 8, !dbg !8416
  %9 = load i32, i32* %bitno.addr, align 4, !dbg !8417
  %div4 = udiv i32 %9, 64, !dbg !8418
  %idxprom5 = zext i32 %div4 to i64, !dbg !8415
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 %idxprom5, !dbg !8415
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !8419
  %inc = add i8 %10, 1, !dbg !8419
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !8419
  br label %if.end, !dbg !8415

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !8420

if.end7:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %bitno.addr, align 4, !dbg !8421
  %rem8 = urem i32 %11, 64, !dbg !8422
  %sh_prom9 = zext i32 %rem8 to i64, !dbg !8423
  %shl = shl i64 1, %sh_prom9, !dbg !8423
  %12 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8424
  %elms10 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %12, i32 0, i32 3, !dbg !8425
  %13 = load i32, i32* %bitno.addr, align 4, !dbg !8426
  %div11 = udiv i32 %13, 64, !dbg !8427
  %idxprom12 = zext i32 %div11 to i64, !dbg !8424
  %arrayidx13 = getelementptr inbounds [1 x i64], [1 x i64]* %elms10, i64 0, i64 %idxprom12, !dbg !8424
  %14 = load i64, i64* %arrayidx13, align 8, !dbg !8428
  %or = or i64 %14, %shl, !dbg !8428
  store i64 %or, i64* %arrayidx13, align 8, !dbg !8428
  ret void, !dbg !8429
}

; Function Attrs: noinline nounwind uwtable
define internal void @find_min_max_seqno(%struct._list_node* %fences, i32* %min_seqno, i32* %max_seqno) #0 !dbg !8430 {
entry:
  %fences.addr = alloca %struct._list_node*, align 8
  %min_seqno.addr = alloca i32*, align 8
  %max_seqno.addr = alloca i32*, align 8
  %seqno10 = alloca i32, align 4
  store %struct._list_node* %fences, %struct._list_node** %fences.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %fences.addr, metadata !8433, metadata !DIExpression()), !dbg !8434
  store i32* %min_seqno, i32** %min_seqno.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %min_seqno.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  store i32* %max_seqno, i32** %max_seqno.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %max_seqno.addr, metadata !8437, metadata !DIExpression()), !dbg !8438
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8439
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %0, null, !dbg !8439
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8439

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8439
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i32 0, i32 0, !dbg !8439
  br label %cond.end, !dbg !8439

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8439

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8439
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8439
  %tobool1 = icmp ne %struct.VEC_int_heap* %2, null, !dbg !8439
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !8439

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8439
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i32 0, i32 0, !dbg !8439
  br label %cond.end5, !dbg !8439

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !8439

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !8439
  %4 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8439
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %4, i32 0, i32 1, !dbg !8439
  %fence = bitcast %union.anon.0* %u to %struct._fence*, !dbg !8439
  %insn = getelementptr inbounds %struct._fence, %struct._fence* %fence, i32 0, i32 0, !dbg !8439
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8439
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !8439
  %fld = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !8439
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8439
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8439
  %6 = load i32, i32* %rt_int, align 8, !dbg !8439
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %6), !dbg !8439
  %call8 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !8439
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call8, i32 0, i32 2, !dbg !8439
  %7 = load i32, i32* %seqno, align 4, !dbg !8439
  %8 = load i32*, i32** %max_seqno.addr, align 8, !dbg !8440
  store i32 %7, i32* %8, align 4, !dbg !8441
  %9 = load i32*, i32** %min_seqno.addr, align 8, !dbg !8442
  store i32 %7, i32* %9, align 4, !dbg !8443
  br label %while.cond, !dbg !8444

while.cond:                                       ; preds = %if.end35, %cond.end5
  %10 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8445
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %10, i32 0, i32 0, !dbg !8445
  %11 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !8445
  store %struct._list_node* %11, %struct._list_node** %fences.addr, align 8, !dbg !8446
  %tobool9 = icmp ne %struct._list_node* %11, null, !dbg !8444
  br i1 %tobool9, label %while.body, label %while.end, !dbg !8444

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %seqno10, metadata !8447, metadata !DIExpression()), !dbg !8449
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8450
  %tobool11 = icmp ne %struct.VEC_sel_insn_data_def_heap* %12, null, !dbg !8450
  br i1 %tobool11, label %cond.true12, label %cond.false14, !dbg !8450

cond.true12:                                      ; preds = %while.body
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8450
  %base13 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %13, i32 0, i32 0, !dbg !8450
  br label %cond.end15, !dbg !8450

cond.false14:                                     ; preds = %while.body
  br label %cond.end15, !dbg !8450

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi %struct.VEC_sel_insn_data_def_base* [ %base13, %cond.true12 ], [ null, %cond.false14 ], !dbg !8450
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8450
  %tobool17 = icmp ne %struct.VEC_int_heap* %14, null, !dbg !8450
  br i1 %tobool17, label %cond.true18, label %cond.false20, !dbg !8450

cond.true18:                                      ; preds = %cond.end15
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8450
  %base19 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %15, i32 0, i32 0, !dbg !8450
  br label %cond.end21, !dbg !8450

cond.false20:                                     ; preds = %cond.end15
  br label %cond.end21, !dbg !8450

cond.end21:                                       ; preds = %cond.false20, %cond.true18
  %cond22 = phi %struct.VEC_int_base* [ %base19, %cond.true18 ], [ null, %cond.false20 ], !dbg !8450
  %16 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8450
  %u23 = getelementptr inbounds %struct._list_node, %struct._list_node* %16, i32 0, i32 1, !dbg !8450
  %fence24 = bitcast %union.anon.0* %u23 to %struct._fence*, !dbg !8450
  %insn25 = getelementptr inbounds %struct._fence, %struct._fence* %fence24, i32 0, i32 0, !dbg !8450
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn25, align 8, !dbg !8450
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !8450
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !8450
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 0, !dbg !8450
  %rt_int29 = bitcast %union.rtunion_def* %arrayidx28 to i32*, !dbg !8450
  %18 = load i32, i32* %rt_int29, align 8, !dbg !8450
  %call30 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond22, i32 %18), !dbg !8450
  %call31 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond16, i32 %call30), !dbg !8450
  %seqno32 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call31, i32 0, i32 2, !dbg !8450
  %19 = load i32, i32* %seqno32, align 4, !dbg !8450
  store i32 %19, i32* %seqno10, align 4, !dbg !8449
  %20 = load i32*, i32** %min_seqno.addr, align 8, !dbg !8451
  %21 = load i32, i32* %20, align 4, !dbg !8453
  %22 = load i32, i32* %seqno10, align 4, !dbg !8454
  %cmp = icmp sgt i32 %21, %22, !dbg !8455
  br i1 %cmp, label %if.then, label %if.else, !dbg !8456

if.then:                                          ; preds = %cond.end21
  %23 = load i32, i32* %seqno10, align 4, !dbg !8457
  %24 = load i32*, i32** %min_seqno.addr, align 8, !dbg !8458
  store i32 %23, i32* %24, align 4, !dbg !8459
  br label %if.end35, !dbg !8460

if.else:                                          ; preds = %cond.end21
  %25 = load i32*, i32** %max_seqno.addr, align 8, !dbg !8461
  %26 = load i32, i32* %25, align 4, !dbg !8463
  %27 = load i32, i32* %seqno10, align 4, !dbg !8464
  %cmp33 = icmp slt i32 %26, %27, !dbg !8465
  br i1 %cmp33, label %if.then34, label %if.end, !dbg !8466

if.then34:                                        ; preds = %if.else
  %28 = load i32, i32* %seqno10, align 4, !dbg !8467
  %29 = load i32*, i32** %max_seqno.addr, align 8, !dbg !8468
  store i32 %28, i32* %29, align 4, !dbg !8469
  br label %if.end, !dbg !8470

if.end:                                           ; preds = %if.then34, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then
  br label %while.cond, !dbg !8444, !llvm.loop !8471

while.end:                                        ; preds = %while.cond
  ret void, !dbg !8473
}

; Function Attrs: noinline nounwind uwtable
define internal void @schedule_on_fences(%struct._list_node* %fences, i32 %max_seqno, %struct._list_node*** %scheduled_insns_tailpp) #0 !dbg !8474 {
entry:
  %fences.addr = alloca %struct._list_node*, align 8
  %max_seqno.addr = alloca i32, align 4
  %scheduled_insns_tailpp.addr = alloca %struct._list_node***, align 8
  %old_fences = alloca %struct._list_node*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j13 = alloca i32, align 4
  %__s17 = alloca i8*, align 8
  %fence = alloca %struct._fence*, align 8
  %seqno = alloca i32, align 4
  %fences2 = alloca %struct._list_node*, align 8
  %first_p = alloca i8, align 1
  %f = alloca %struct._fence*, align 8
  %i = alloca i32, align 4
  store %struct._list_node* %fences, %struct._list_node** %fences.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %fences.addr, metadata !8478, metadata !DIExpression()), !dbg !8479
  store i32 %max_seqno, i32* %max_seqno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_seqno.addr, metadata !8480, metadata !DIExpression()), !dbg !8481
  store %struct._list_node*** %scheduled_insns_tailpp, %struct._list_node**** %scheduled_insns_tailpp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node**** %scheduled_insns_tailpp.addr, metadata !8482, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.declare(metadata %struct._list_node** %old_fences, metadata !8484, metadata !DIExpression()), !dbg !8485
  %0 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8486
  store %struct._list_node* %0, %struct._list_node** %old_fences, align 8, !dbg !8485
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !8487
  %cmp = icmp sge i32 %1, 1, !dbg !8489
  br i1 %cmp, label %if.then, label %if.end28, !dbg !8490

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8491

do.body:                                          ; preds = %if.then
  %2 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8493
  %tobool = icmp ne i8 %2, 0, !dbg !8493
  br i1 %tobool, label %if.then1, label %if.else, !dbg !8496

if.then1:                                         ; preds = %do.body
  br label %do.body2, !dbg !8493

do.body2:                                         ; preds = %if.then1
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !8497, metadata !DIExpression()), !dbg !8499
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)), !dbg !8499
  %mul = mul nsw i32 2, %call, !dbg !8499
  %add = add nsw i32 1, %mul, !dbg !8499
  store i32 %add, i32* %__j, align 4, !dbg !8499
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !8500, metadata !DIExpression()), !dbg !8499
  %3 = load i32, i32* %__j, align 4, !dbg !8499
  %conv = sext i32 %3 to i64, !dbg !8499
  %mul3 = mul i64 1, %conv, !dbg !8499
  %4 = alloca i8, i64 %mul3, align 16, !dbg !8499
  store i8* %4, i8** %__s, align 8, !dbg !8499
  %5 = load i8*, i8** %__s, align 8, !dbg !8499
  %6 = load i32, i32* %__j, align 4, !dbg !8499
  %conv4 = sext i32 %6 to i64, !dbg !8499
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 %conv4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)), !dbg !8499
  %7 = load i8*, i8** %__s, align 8, !dbg !8499
  call void @sel_prepare_string_for_dot_label(i8* %7), !dbg !8499
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8499
  %9 = load i8*, i8** %__s, align 8, !dbg !8499
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %9), !dbg !8499
  br label %do.end, !dbg !8499

do.end:                                           ; preds = %do.body2
  br label %if.end, !dbg !8499

if.else:                                          ; preds = %do.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8493
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)), !dbg !8493
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end8, !dbg !8496

do.end8:                                          ; preds = %if.end
  %11 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8501
  call void @dump_flist(%struct._list_node* %11), !dbg !8502
  br label %do.body9, !dbg !8503

do.body9:                                         ; preds = %do.end8
  %12 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8504
  %tobool10 = icmp ne i8 %12, 0, !dbg !8504
  br i1 %tobool10, label %if.then11, label %if.else24, !dbg !8507

if.then11:                                        ; preds = %do.body9
  br label %do.body12, !dbg !8504

do.body12:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i32* %__j13, metadata !8508, metadata !DIExpression()), !dbg !8510
  %call14 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !8510
  %mul15 = mul nsw i32 2, %call14, !dbg !8510
  %add16 = add nsw i32 1, %mul15, !dbg !8510
  store i32 %add16, i32* %__j13, align 4, !dbg !8510
  call void @llvm.dbg.declare(metadata i8** %__s17, metadata !8511, metadata !DIExpression()), !dbg !8510
  %13 = load i32, i32* %__j13, align 4, !dbg !8510
  %conv18 = sext i32 %13 to i64, !dbg !8510
  %mul19 = mul i64 1, %conv18, !dbg !8510
  %14 = alloca i8, i64 %mul19, align 16, !dbg !8510
  store i8* %14, i8** %__s17, align 8, !dbg !8510
  %15 = load i8*, i8** %__s17, align 8, !dbg !8510
  %16 = load i32, i32* %__j13, align 4, !dbg !8510
  %conv20 = sext i32 %16 to i64, !dbg !8510
  %call21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 %conv20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !8510
  %17 = load i8*, i8** %__s17, align 8, !dbg !8510
  call void @sel_prepare_string_for_dot_label(i8* %17), !dbg !8510
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8510
  %19 = load i8*, i8** %__s17, align 8, !dbg !8510
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %19), !dbg !8510
  br label %do.end23, !dbg !8510

do.end23:                                         ; preds = %do.body12
  br label %if.end26, !dbg !8510

if.else24:                                        ; preds = %do.body9
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8504
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !8504
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %do.end23
  br label %do.end27, !dbg !8507

do.end27:                                         ; preds = %if.end26
  br label %if.end28, !dbg !8512

if.end28:                                         ; preds = %do.end27, %entry
  store i8 0, i8* @scheduled_something_on_previous_fence, align 1, !dbg !8513
  br label %for.cond, !dbg !8514

for.cond:                                         ; preds = %for.inc64, %if.end28
  %21 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8515
  %tobool29 = icmp ne %struct._list_node* %21, null, !dbg !8518
  br i1 %tobool29, label %for.body, label %for.end66, !dbg !8518

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._fence** %fence, metadata !8519, metadata !DIExpression()), !dbg !8521
  store %struct._fence* null, %struct._fence** %fence, align 8, !dbg !8521
  call void @llvm.dbg.declare(metadata i32* %seqno, metadata !8522, metadata !DIExpression()), !dbg !8523
  store i32 0, i32* %seqno, align 4, !dbg !8523
  call void @llvm.dbg.declare(metadata %struct._list_node** %fences2, metadata !8524, metadata !DIExpression()), !dbg !8525
  call void @llvm.dbg.declare(metadata i8* %first_p, metadata !8526, metadata !DIExpression()), !dbg !8527
  store i8 1, i8* %first_p, align 1, !dbg !8527
  %22 = load %struct._list_node*, %struct._list_node** %old_fences, align 8, !dbg !8528
  store %struct._list_node* %22, %struct._list_node** %fences2, align 8, !dbg !8530
  br label %for.cond30, !dbg !8531

for.cond30:                                       ; preds = %for.inc, %for.body
  %23 = load %struct._list_node*, %struct._list_node** %fences2, align 8, !dbg !8532
  %tobool31 = icmp ne %struct._list_node* %23, null, !dbg !8534
  br i1 %tobool31, label %for.body32, label %for.end, !dbg !8534

for.body32:                                       ; preds = %for.cond30
  call void @llvm.dbg.declare(metadata %struct._fence** %f, metadata !8535, metadata !DIExpression()), !dbg !8537
  %24 = load %struct._list_node*, %struct._list_node** %fences2, align 8, !dbg !8538
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %24, i32 0, i32 1, !dbg !8538
  %fence33 = bitcast %union.anon.0* %u to %struct._fence*, !dbg !8538
  store %struct._fence* %fence33, %struct._fence** %f, align 8, !dbg !8537
  %25 = load %struct._fence*, %struct._fence** %f, align 8, !dbg !8539
  %processed_p = getelementptr inbounds %struct._fence, %struct._fence* %25, i32 0, i32 13, !dbg !8539
  %bf.load = load i8, i8* %processed_p, align 8, !dbg !8539
  %bf.clear = and i8 %bf.load, 1, !dbg !8539
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8539
  %tobool34 = icmp ne i32 %bf.cast, 0, !dbg !8539
  br i1 %tobool34, label %if.end54, label %if.then35, !dbg !8541

if.then35:                                        ; preds = %for.body32
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8542, metadata !DIExpression()), !dbg !8544
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8545
  %tobool36 = icmp ne %struct.VEC_sel_insn_data_def_heap* %26, null, !dbg !8545
  br i1 %tobool36, label %cond.true, label %cond.false, !dbg !8545

cond.true:                                        ; preds = %if.then35
  %27 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8545
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %27, i32 0, i32 0, !dbg !8545
  br label %cond.end, !dbg !8545

cond.false:                                       ; preds = %if.then35
  br label %cond.end, !dbg !8545

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8545
  %28 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8545
  %tobool37 = icmp ne %struct.VEC_int_heap* %28, null, !dbg !8545
  br i1 %tobool37, label %cond.true38, label %cond.false40, !dbg !8545

cond.true38:                                      ; preds = %cond.end
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8545
  %base39 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %29, i32 0, i32 0, !dbg !8545
  br label %cond.end41, !dbg !8545

cond.false40:                                     ; preds = %cond.end
  br label %cond.end41, !dbg !8545

cond.end41:                                       ; preds = %cond.false40, %cond.true38
  %cond42 = phi %struct.VEC_int_base* [ %base39, %cond.true38 ], [ null, %cond.false40 ], !dbg !8545
  %30 = load %struct._fence*, %struct._fence** %f, align 8, !dbg !8545
  %insn = getelementptr inbounds %struct._fence, %struct._fence* %30, i32 0, i32 0, !dbg !8545
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8545
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !8545
  %fld = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !8545
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8545
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8545
  %32 = load i32, i32* %rt_int, align 8, !dbg !8545
  %call44 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond42, i32 %32), !dbg !8545
  %call45 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call44), !dbg !8545
  %seqno46 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call45, i32 0, i32 2, !dbg !8545
  %33 = load i32, i32* %seqno46, align 4, !dbg !8545
  store i32 %33, i32* %i, align 4, !dbg !8544
  %34 = load i8, i8* %first_p, align 1, !dbg !8546
  %conv47 = zext i8 %34 to i32, !dbg !8546
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !8546
  br i1 %tobool48, label %if.then51, label %lor.lhs.false, !dbg !8548

lor.lhs.false:                                    ; preds = %cond.end41
  %35 = load i32, i32* %i, align 4, !dbg !8549
  %36 = load i32, i32* %seqno, align 4, !dbg !8550
  %cmp49 = icmp sgt i32 %35, %36, !dbg !8551
  br i1 %cmp49, label %if.then51, label %if.else52, !dbg !8552

if.then51:                                        ; preds = %lor.lhs.false, %cond.end41
  %37 = load i32, i32* %i, align 4, !dbg !8553
  store i32 %37, i32* %seqno, align 4, !dbg !8555
  %38 = load %struct._fence*, %struct._fence** %f, align 8, !dbg !8556
  store %struct._fence* %38, %struct._fence** %fence, align 8, !dbg !8557
  store i8 0, i8* %first_p, align 1, !dbg !8558
  br label %if.end53, !dbg !8559

if.else52:                                        ; preds = %lor.lhs.false
  br label %if.end53

if.end53:                                         ; preds = %if.else52, %if.then51
  br label %if.end54, !dbg !8560

if.end54:                                         ; preds = %if.end53, %for.body32
  br label %for.inc, !dbg !8561

for.inc:                                          ; preds = %if.end54
  %39 = load %struct._list_node*, %struct._list_node** %fences2, align 8, !dbg !8562
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %39, i32 0, i32 0, !dbg !8562
  %40 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !8562
  store %struct._list_node* %40, %struct._list_node** %fences2, align 8, !dbg !8563
  br label %for.cond30, !dbg !8564, !llvm.loop !8565

for.end:                                          ; preds = %for.cond30
  %41 = load %struct._fence*, %struct._fence** %fence, align 8, !dbg !8567
  %tobool55 = icmp ne %struct._fence* %41, null, !dbg !8567
  br i1 %tobool55, label %cond.false57, label %cond.true56, !dbg !8567

cond.true56:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7273, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8567
  br label %cond.end58, !dbg !8567

cond.false57:                                     ; preds = %for.end
  br label %cond.end58, !dbg !8567

cond.end58:                                       ; preds = %cond.false57, %cond.true56
  %cond59 = phi i32 [ 0, %cond.true56 ], [ 0, %cond.false57 ], !dbg !8567
  %42 = load i32, i32* %max_seqno.addr, align 4, !dbg !8568
  %add60 = add nsw i32 %42, 1, !dbg !8569
  %43 = load i32, i32* %seqno, align 4, !dbg !8570
  %sub = sub nsw i32 %43, %add60, !dbg !8570
  store i32 %sub, i32* %seqno, align 4, !dbg !8570
  %44 = load %struct._fence*, %struct._fence** %fence, align 8, !dbg !8571
  %45 = load i32, i32* %seqno, align 4, !dbg !8572
  %46 = load %struct._list_node***, %struct._list_node**** %scheduled_insns_tailpp.addr, align 8, !dbg !8573
  call void @fill_insns(%struct._fence* %44, i32 %45, %struct._list_node*** %46), !dbg !8574
  %47 = load %struct._fence*, %struct._fence** %fence, align 8, !dbg !8575
  %processed_p61 = getelementptr inbounds %struct._fence, %struct._fence* %47, i32 0, i32 13, !dbg !8575
  %bf.load62 = load i8, i8* %processed_p61, align 8, !dbg !8576
  %bf.clear63 = and i8 %bf.load62, -2, !dbg !8576
  %bf.set = or i8 %bf.clear63, 1, !dbg !8576
  store i8 %bf.set, i8* %processed_p61, align 8, !dbg !8576
  br label %for.inc64, !dbg !8577

for.inc64:                                        ; preds = %cond.end58
  %48 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8578
  %next65 = getelementptr inbounds %struct._list_node, %struct._list_node* %48, i32 0, i32 0, !dbg !8578
  %49 = load %struct._list_node*, %struct._list_node** %next65, align 8, !dbg !8578
  store %struct._list_node* %49, %struct._list_node** %fences.addr, align 8, !dbg !8579
  br label %for.cond, !dbg !8580, !llvm.loop !8581

for.end66:                                        ; preds = %for.cond
  call void @vinsn_vec_clear(%struct.VEC_vinsn_t_heap** @vec_bookkeeping_blocked_vinsns), !dbg !8583
  call void @vinsn_vec_clear(%struct.VEC_vinsn_t_heap** @vec_target_unavailable_vinsns), !dbg !8584
  ret void, !dbg !8585
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._list_node* @calculate_new_fences(%struct._list_node* %fences, i32 %orig_max_seqno) #0 !dbg !8586 {
entry:
  %fences.addr = alloca %struct._list_node*, align 8
  %orig_max_seqno.addr = alloca i32, align 4
  %old_fences = alloca %struct._list_node*, align 8
  %_new_fences = alloca %struct.flist_tail_def, align 8
  %new_fences = alloca %struct.flist_tail_def*, align 8
  %fence = alloca %struct._fence*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %seqno = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store %struct._list_node* %fences, %struct._list_node** %fences.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %fences.addr, metadata !8589, metadata !DIExpression()), !dbg !8590
  store i32 %orig_max_seqno, i32* %orig_max_seqno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %orig_max_seqno.addr, metadata !8591, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.declare(metadata %struct._list_node** %old_fences, metadata !8593, metadata !DIExpression()), !dbg !8594
  %0 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8595
  store %struct._list_node* %0, %struct._list_node** %old_fences, align 8, !dbg !8594
  call void @llvm.dbg.declare(metadata %struct.flist_tail_def* %_new_fences, metadata !8596, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.declare(metadata %struct.flist_tail_def** %new_fences, metadata !8598, metadata !DIExpression()), !dbg !8599
  store %struct.flist_tail_def* %_new_fences, %struct.flist_tail_def** %new_fences, align 8, !dbg !8599
  %1 = load %struct.flist_tail_def*, %struct.flist_tail_def** %new_fences, align 8, !dbg !8600
  call void @flist_tail_init(%struct.flist_tail_def* %1), !dbg !8601
  br label %for.cond, !dbg !8602

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8603
  %tobool = icmp ne %struct._list_node* %2, null, !dbg !8606
  br i1 %tobool, label %for.body, label %for.end, !dbg !8606

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._fence** %fence, metadata !8607, metadata !DIExpression()), !dbg !8609
  %3 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8610
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %3, i32 0, i32 1, !dbg !8610
  %fence1 = bitcast %union.anon.0* %u to %struct._fence*, !dbg !8610
  store %struct._fence* %fence1, %struct._fence** %fence, align 8, !dbg !8609
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !8611, metadata !DIExpression()), !dbg !8612
  %4 = load %struct._fence*, %struct._fence** %fence, align 8, !dbg !8613
  %bnds = getelementptr inbounds %struct._fence, %struct._fence* %4, i32 0, i32 4, !dbg !8613
  %5 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !8613
  %tobool2 = icmp ne %struct._list_node* %5, null, !dbg !8613
  br i1 %tobool2, label %if.else63, label %if.then, !dbg !8615

if.then:                                          ; preds = %for.body
  %6 = load %struct._fence*, %struct._fence** %fence, align 8, !dbg !8616
  %scheduled_p = getelementptr inbounds %struct._fence, %struct._fence* %6, i32 0, i32 13, !dbg !8616
  %bf.load = load i8, i8* %scheduled_p, align 8, !dbg !8616
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !8616
  %bf.clear = and i8 %bf.lshr, 1, !dbg !8616
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8616
  %tobool3 = icmp ne i32 %bf.cast, 0, !dbg !8616
  br i1 %tobool3, label %if.end62, label %if.then4, !dbg !8619

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %seqno, metadata !8620, metadata !DIExpression()), !dbg !8622
  %7 = load %struct._fence*, %struct._fence** %fence, align 8, !dbg !8623
  %insn5 = getelementptr inbounds %struct._fence, %struct._fence* %7, i32 0, i32 0, !dbg !8623
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn5, align 8, !dbg !8623
  store %struct.rtx_def* %8, %struct.rtx_def** %insn, align 8, !dbg !8624
  %9 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8625
  %tobool6 = icmp ne %struct.VEC_sel_insn_data_def_heap* %9, null, !dbg !8625
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !8625

cond.true:                                        ; preds = %if.then4
  %10 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8625
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %10, i32 0, i32 0, !dbg !8625
  br label %cond.end, !dbg !8625

cond.false:                                       ; preds = %if.then4
  br label %cond.end, !dbg !8625

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8625
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8625
  %tobool7 = icmp ne %struct.VEC_int_heap* %11, null, !dbg !8625
  br i1 %tobool7, label %cond.true8, label %cond.false10, !dbg !8625

cond.true8:                                       ; preds = %cond.end
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8625
  %base9 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %12, i32 0, i32 0, !dbg !8625
  br label %cond.end11, !dbg !8625

cond.false10:                                     ; preds = %cond.end
  br label %cond.end11, !dbg !8625

cond.end11:                                       ; preds = %cond.false10, %cond.true8
  %cond12 = phi %struct.VEC_int_base* [ %base9, %cond.true8 ], [ null, %cond.false10 ], !dbg !8625
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8625
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !8625
  %fld = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !8625
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8625
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8625
  %14 = load i32, i32* %rt_int, align 8, !dbg !8625
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond12, i32 %14), !dbg !8625
  %call14 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !8625
  %seqno15 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call14, i32 0, i32 2, !dbg !8625
  %15 = load i32, i32* %seqno15, align 4, !dbg !8625
  store i32 %15, i32* %seqno, align 4, !dbg !8626
  %16 = load i32, i32* %seqno, align 4, !dbg !8627
  %cmp = icmp sgt i32 %16, 0, !dbg !8627
  br i1 %cmp, label %land.lhs.true, label %cond.true17, !dbg !8627

land.lhs.true:                                    ; preds = %cond.end11
  %17 = load i32, i32* %seqno, align 4, !dbg !8627
  %18 = load i32, i32* %orig_max_seqno.addr, align 4, !dbg !8627
  %cmp16 = icmp sle i32 %17, %18, !dbg !8627
  br i1 %cmp16, label %cond.false18, label %cond.true17, !dbg !8627

cond.true17:                                      ; preds = %land.lhs.true, %cond.end11
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7329, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8627
  br label %cond.end19, !dbg !8627

cond.false18:                                     ; preds = %land.lhs.true
  br label %cond.end19, !dbg !8627

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond20 = phi i32 [ 0, %cond.true17 ], [ 0, %cond.false18 ], !dbg !8627
  %19 = load i32, i32* @sched_verbose, align 4, !dbg !8628
  %cmp21 = icmp sge i32 %19, 1, !dbg !8630
  br i1 %cmp21, label %if.then22, label %if.end61, !dbg !8631

if.then22:                                        ; preds = %cond.end19
  br label %do.body, !dbg !8632

do.body:                                          ; preds = %if.then22
  %20 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8633
  %tobool23 = icmp ne i8 %20, 0, !dbg !8633
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !8636

if.then24:                                        ; preds = %do.body
  br label %do.body25, !dbg !8633

do.body25:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !8637, metadata !DIExpression()), !dbg !8639
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8639
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !8639
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !8639
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 0, !dbg !8639
  %rt_int29 = bitcast %union.rtunion_def* %arrayidx28 to i32*, !dbg !8639
  %22 = load i32, i32* %rt_int29, align 8, !dbg !8639
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8639
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !8639
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !8639
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 3, !dbg !8639
  %rt_bb = bitcast %union.rtunion_def* %arrayidx32 to %struct.basic_block_def**, !dbg !8639
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8639
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i32 0, i32 9, !dbg !8639
  %25 = load i32, i32* %index, align 8, !dbg !8639
  %add = add nsw i32 %25, 0, !dbg !8639
  %call33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i32 %22, i32 %add), !dbg !8639
  %mul = mul nsw i32 2, %call33, !dbg !8639
  %add34 = add nsw i32 1, %mul, !dbg !8639
  store i32 %add34, i32* %__j, align 4, !dbg !8639
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !8640, metadata !DIExpression()), !dbg !8639
  %26 = load i32, i32* %__j, align 4, !dbg !8639
  %conv = sext i32 %26 to i64, !dbg !8639
  %mul35 = mul i64 1, %conv, !dbg !8639
  %27 = alloca i8, i64 %mul35, align 16, !dbg !8639
  store i8* %27, i8** %__s, align 8, !dbg !8639
  %28 = load i8*, i8** %__s, align 8, !dbg !8639
  %29 = load i32, i32* %__j, align 4, !dbg !8639
  %conv36 = sext i32 %29 to i64, !dbg !8639
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8639
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !8639
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !8639
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 0, !dbg !8639
  %rt_int40 = bitcast %union.rtunion_def* %arrayidx39 to i32*, !dbg !8639
  %31 = load i32, i32* %rt_int40, align 8, !dbg !8639
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8639
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !8639
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !8639
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 3, !dbg !8639
  %rt_bb44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.basic_block_def**, !dbg !8639
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb44, align 8, !dbg !8639
  %index45 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i32 0, i32 9, !dbg !8639
  %34 = load i32, i32* %index45, align 8, !dbg !8639
  %add46 = add nsw i32 %34, 0, !dbg !8639
  %call47 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %28, i64 %conv36, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i32 %31, i32 %add46), !dbg !8639
  %35 = load i8*, i8** %__s, align 8, !dbg !8639
  call void @sel_prepare_string_for_dot_label(i8* %35), !dbg !8639
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8639
  %37 = load i8*, i8** %__s, align 8, !dbg !8639
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %37), !dbg !8639
  br label %do.end, !dbg !8639

do.end:                                           ; preds = %do.body25
  br label %if.end, !dbg !8639

if.else:                                          ; preds = %do.body
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8633
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8633
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !8633
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !8633
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 0, !dbg !8633
  %rt_int52 = bitcast %union.rtunion_def* %arrayidx51 to i32*, !dbg !8633
  %40 = load i32, i32* %rt_int52, align 8, !dbg !8633
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8633
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !8633
  %fld54 = bitcast %union.u* %u53 to [1 x %union.rtunion_def]*, !dbg !8633
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i64 0, i64 3, !dbg !8633
  %rt_bb56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.basic_block_def**, !dbg !8633
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb56, align 8, !dbg !8633
  %index57 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i32 0, i32 9, !dbg !8633
  %43 = load i32, i32* %index57, align 8, !dbg !8633
  %add58 = add nsw i32 %43, 0, !dbg !8633
  %call59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i32 %40, i32 %add58), !dbg !8633
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end60, !dbg !8636

do.end60:                                         ; preds = %if.end
  br label %if.end61, !dbg !8636

if.end61:                                         ; preds = %do.end60, %cond.end19
  %44 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8641
  %45 = load %struct.flist_tail_def*, %struct.flist_tail_def** %new_fences, align 8, !dbg !8642
  call void @move_fence_to_fences(%struct._list_node* %44, %struct.flist_tail_def* %45), !dbg !8643
  br label %if.end62, !dbg !8644

if.end62:                                         ; preds = %if.end61, %if.then
  br label %if.end64, !dbg !8645

if.else63:                                        ; preds = %for.body
  %46 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8646
  %47 = load %struct.flist_tail_def*, %struct.flist_tail_def** %new_fences, align 8, !dbg !8647
  %48 = load i32, i32* %orig_max_seqno.addr, align 4, !dbg !8648
  call void @extract_new_fences_from(%struct._list_node* %46, %struct.flist_tail_def* %47, i32 %48), !dbg !8649
  br label %if.end64

if.end64:                                         ; preds = %if.else63, %if.end62
  br label %for.inc, !dbg !8650

for.inc:                                          ; preds = %if.end64
  %49 = load %struct._list_node*, %struct._list_node** %fences.addr, align 8, !dbg !8651
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %49, i32 0, i32 0, !dbg !8651
  %50 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !8651
  store %struct._list_node* %50, %struct._list_node** %fences.addr, align 8, !dbg !8652
  br label %for.cond, !dbg !8653, !llvm.loop !8654

for.end:                                          ; preds = %for.cond
  call void @flist_clear(%struct._list_node** %old_fences), !dbg !8656
  %51 = load %struct.flist_tail_def*, %struct.flist_tail_def** %new_fences, align 8, !dbg !8657
  %head = getelementptr inbounds %struct.flist_tail_def, %struct.flist_tail_def* %51, i32 0, i32 0, !dbg !8657
  %52 = load %struct._list_node*, %struct._list_node** %head, align 8, !dbg !8657
  ret %struct._list_node* %52, !dbg !8658
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @update_seqnos_and_stage(i32 %min_seqno, i32 %max_seqno, i32 %highest_seqno_in_use, %struct._list_node** %pscheduled_insns) #0 !dbg !8659 {
entry:
  %min_seqno.addr = alloca i32, align 4
  %max_seqno.addr = alloca i32, align 4
  %highest_seqno_in_use.addr = alloca i32, align 4
  %pscheduled_insns.addr = alloca %struct._list_node**, align 8
  %new_hs = alloca i32, align 4
  %ii = alloca %struct._list_iterator, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store i32 %min_seqno, i32* %min_seqno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_seqno.addr, metadata !8662, metadata !DIExpression()), !dbg !8663
  store i32 %max_seqno, i32* %max_seqno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_seqno.addr, metadata !8664, metadata !DIExpression()), !dbg !8665
  store i32 %highest_seqno_in_use, i32* %highest_seqno_in_use.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %highest_seqno_in_use.addr, metadata !8666, metadata !DIExpression()), !dbg !8667
  store %struct._list_node** %pscheduled_insns, %struct._list_node*** %pscheduled_insns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %pscheduled_insns.addr, metadata !8668, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.declare(metadata i32* %new_hs, metadata !8670, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %ii, metadata !8672, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !8676, metadata !DIExpression()), !dbg !8677
  %0 = load %struct._list_node**, %struct._list_node*** %pscheduled_insns.addr, align 8, !dbg !8678
  %1 = load %struct._list_node*, %struct._list_node** %0, align 8, !dbg !8680
  %tobool = icmp ne %struct._list_node* %1, null, !dbg !8680
  br i1 %tobool, label %if.then, label %if.else, !dbg !8681

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8682
  %tobool1 = icmp ne %struct.VEC_sel_insn_data_def_heap* %2, null, !dbg !8682
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !8682

cond.true:                                        ; preds = %if.then
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8682
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i32 0, i32 0, !dbg !8682
  br label %cond.end, !dbg !8682

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !8682

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8682
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8682
  %tobool2 = icmp ne %struct.VEC_int_heap* %4, null, !dbg !8682
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !8682

cond.true3:                                       ; preds = %cond.end
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8682
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i32 0, i32 0, !dbg !8682
  br label %cond.end6, !dbg !8682

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !8682

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi %struct.VEC_int_base* [ %base4, %cond.true3 ], [ null, %cond.false5 ], !dbg !8682
  %6 = load %struct._list_node**, %struct._list_node*** %pscheduled_insns.addr, align 8, !dbg !8682
  %7 = load %struct._list_node*, %struct._list_node** %6, align 8, !dbg !8682
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %7, i32 0, i32 1, !dbg !8682
  %x = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !8682
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !8682
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !8682
  %fld = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !8682
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8682
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8682
  %9 = load i32, i32* %rt_int, align 8, !dbg !8682
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond7, i32 %9), !dbg !8682
  %call9 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !8682
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call9, i32 0, i32 2, !dbg !8682
  %10 = load i32, i32* %seqno, align 4, !dbg !8682
  %11 = load i32, i32* %highest_seqno_in_use.addr, align 4, !dbg !8684
  %add = add nsw i32 %10, %11, !dbg !8685
  %12 = load i32, i32* %max_seqno.addr, align 4, !dbg !8686
  %add10 = add nsw i32 %add, %12, !dbg !8687
  %13 = load i32, i32* %min_seqno.addr, align 4, !dbg !8688
  %sub = sub nsw i32 %add10, %13, !dbg !8689
  %add11 = add nsw i32 %sub, 2, !dbg !8690
  store i32 %add11, i32* %new_hs, align 4, !dbg !8691
  %14 = load i32, i32* %new_hs, align 4, !dbg !8692
  %15 = load i32, i32* %highest_seqno_in_use.addr, align 4, !dbg !8692
  %cmp = icmp sgt i32 %14, %15, !dbg !8692
  br i1 %cmp, label %cond.false13, label %cond.true12, !dbg !8692

cond.true12:                                      ; preds = %cond.end6
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7364, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8692
  br label %cond.end14, !dbg !8692

cond.false13:                                     ; preds = %cond.end6
  br label %cond.end14, !dbg !8692

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i32 [ 0, %cond.true12 ], [ 0, %cond.false13 ], !dbg !8692
  br label %if.end, !dbg !8693

if.else:                                          ; preds = %entry
  %16 = load i32, i32* %highest_seqno_in_use.addr, align 4, !dbg !8694
  store i32 %16, i32* %new_hs, align 4, !dbg !8695
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end14
  %17 = load %struct._list_node**, %struct._list_node*** %pscheduled_insns.addr, align 8, !dbg !8696
  call void @_list_iter_start(%struct._list_iterator* %ii, %struct._list_node** %17, i8 zeroext 0), !dbg !8696
  br label %for.cond, !dbg !8696

for.cond:                                         ; preds = %for.inc, %if.end
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ii, i32 0, i32 0, !dbg !8698
  %18 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !8698
  %19 = load %struct._list_node*, %struct._list_node** %18, align 8, !dbg !8698
  %call16 = call zeroext i8 @_list_iter_cond_x(%struct._list_node* %19, %struct.rtx_def** %insn), !dbg !8698
  %tobool17 = icmp ne i8 %call16, 0, !dbg !8696
  br i1 %tobool17, label %for.body, label %for.end, !dbg !8696

for.body:                                         ; preds = %for.cond
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8700
  %tobool18 = icmp ne %struct.VEC_sel_insn_data_def_heap* %20, null, !dbg !8700
  br i1 %tobool18, label %cond.true19, label %cond.false21, !dbg !8700

cond.true19:                                      ; preds = %for.body
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8700
  %base20 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i32 0, i32 0, !dbg !8700
  br label %cond.end22, !dbg !8700

cond.false21:                                     ; preds = %for.body
  br label %cond.end22, !dbg !8700

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi %struct.VEC_sel_insn_data_def_base* [ %base20, %cond.true19 ], [ null, %cond.false21 ], !dbg !8700
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8700
  %tobool24 = icmp ne %struct.VEC_int_heap* %22, null, !dbg !8700
  br i1 %tobool24, label %cond.true25, label %cond.false27, !dbg !8700

cond.true25:                                      ; preds = %cond.end22
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8700
  %base26 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i32 0, i32 0, !dbg !8700
  br label %cond.end28, !dbg !8700

cond.false27:                                     ; preds = %cond.end22
  br label %cond.end28, !dbg !8700

cond.end28:                                       ; preds = %cond.false27, %cond.true25
  %cond29 = phi %struct.VEC_int_base* [ %base26, %cond.true25 ], [ null, %cond.false27 ], !dbg !8700
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8700
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !8700
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !8700
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 0, !dbg !8700
  %rt_int33 = bitcast %union.rtunion_def* %arrayidx32 to i32*, !dbg !8700
  %25 = load i32, i32* %rt_int33, align 8, !dbg !8700
  %call34 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond29, i32 %25), !dbg !8700
  %call35 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond23, i32 %call34), !dbg !8700
  %seqno36 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call35, i32 0, i32 2, !dbg !8700
  %26 = load i32, i32* %seqno36, align 4, !dbg !8700
  %cmp37 = icmp slt i32 %26, 0, !dbg !8700
  br i1 %cmp37, label %cond.false39, label %cond.true38, !dbg !8700

cond.true38:                                      ; preds = %cond.end28
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7371, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8700
  br label %cond.end40, !dbg !8700

cond.false39:                                     ; preds = %cond.end28
  br label %cond.end40, !dbg !8700

cond.end40:                                       ; preds = %cond.false39, %cond.true38
  %cond41 = phi i32 [ 0, %cond.true38 ], [ 0, %cond.false39 ], !dbg !8700
  %27 = load i32, i32* %highest_seqno_in_use.addr, align 4, !dbg !8702
  %28 = load i32, i32* %max_seqno.addr, align 4, !dbg !8703
  %add42 = add nsw i32 %27, %28, !dbg !8704
  %29 = load i32, i32* %min_seqno.addr, align 4, !dbg !8705
  %sub43 = sub nsw i32 %add42, %29, !dbg !8706
  %add44 = add nsw i32 %sub43, 2, !dbg !8707
  %30 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8708
  %tobool45 = icmp ne %struct.VEC_sel_insn_data_def_heap* %30, null, !dbg !8708
  br i1 %tobool45, label %cond.true46, label %cond.false48, !dbg !8708

cond.true46:                                      ; preds = %cond.end40
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8708
  %base47 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %31, i32 0, i32 0, !dbg !8708
  br label %cond.end49, !dbg !8708

cond.false48:                                     ; preds = %cond.end40
  br label %cond.end49, !dbg !8708

cond.end49:                                       ; preds = %cond.false48, %cond.true46
  %cond50 = phi %struct.VEC_sel_insn_data_def_base* [ %base47, %cond.true46 ], [ null, %cond.false48 ], !dbg !8708
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8708
  %tobool51 = icmp ne %struct.VEC_int_heap* %32, null, !dbg !8708
  br i1 %tobool51, label %cond.true52, label %cond.false54, !dbg !8708

cond.true52:                                      ; preds = %cond.end49
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8708
  %base53 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %33, i32 0, i32 0, !dbg !8708
  br label %cond.end55, !dbg !8708

cond.false54:                                     ; preds = %cond.end49
  br label %cond.end55, !dbg !8708

cond.end55:                                       ; preds = %cond.false54, %cond.true52
  %cond56 = phi %struct.VEC_int_base* [ %base53, %cond.true52 ], [ null, %cond.false54 ], !dbg !8708
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8708
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !8708
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !8708
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 0, !dbg !8708
  %rt_int60 = bitcast %union.rtunion_def* %arrayidx59 to i32*, !dbg !8708
  %35 = load i32, i32* %rt_int60, align 8, !dbg !8708
  %call61 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond56, i32 %35), !dbg !8708
  %call62 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond50, i32 %call61), !dbg !8708
  %seqno63 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call62, i32 0, i32 2, !dbg !8708
  %36 = load i32, i32* %seqno63, align 4, !dbg !8709
  %add64 = add nsw i32 %36, %add44, !dbg !8709
  store i32 %add64, i32* %seqno63, align 4, !dbg !8709
  %37 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8710
  %tobool65 = icmp ne %struct.VEC_sel_insn_data_def_heap* %37, null, !dbg !8710
  br i1 %tobool65, label %cond.true66, label %cond.false68, !dbg !8710

cond.true66:                                      ; preds = %cond.end55
  %38 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !8710
  %base67 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %38, i32 0, i32 0, !dbg !8710
  br label %cond.end69, !dbg !8710

cond.false68:                                     ; preds = %cond.end55
  br label %cond.end69, !dbg !8710

cond.end69:                                       ; preds = %cond.false68, %cond.true66
  %cond70 = phi %struct.VEC_sel_insn_data_def_base* [ %base67, %cond.true66 ], [ null, %cond.false68 ], !dbg !8710
  %39 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8710
  %tobool71 = icmp ne %struct.VEC_int_heap* %39, null, !dbg !8710
  br i1 %tobool71, label %cond.true72, label %cond.false74, !dbg !8710

cond.true72:                                      ; preds = %cond.end69
  %40 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8710
  %base73 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %40, i32 0, i32 0, !dbg !8710
  br label %cond.end75, !dbg !8710

cond.false74:                                     ; preds = %cond.end69
  br label %cond.end75, !dbg !8710

cond.end75:                                       ; preds = %cond.false74, %cond.true72
  %cond76 = phi %struct.VEC_int_base* [ %base73, %cond.true72 ], [ null, %cond.false74 ], !dbg !8710
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8710
  %u77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !8710
  %fld78 = bitcast %union.u* %u77 to [1 x %union.rtunion_def]*, !dbg !8710
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i64 0, i64 0, !dbg !8710
  %rt_int80 = bitcast %union.rtunion_def* %arrayidx79 to i32*, !dbg !8710
  %42 = load i32, i32* %rt_int80, align 8, !dbg !8710
  %call81 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond76, i32 %42), !dbg !8710
  %call82 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond70, i32 %call81), !dbg !8710
  %seqno83 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call82, i32 0, i32 2, !dbg !8710
  %43 = load i32, i32* %seqno83, align 4, !dbg !8710
  %44 = load i32, i32* %new_hs, align 4, !dbg !8710
  %cmp84 = icmp sle i32 %43, %44, !dbg !8710
  br i1 %cmp84, label %cond.false86, label %cond.true85, !dbg !8710

cond.true85:                                      ; preds = %cond.end75
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8710
  br label %cond.end87, !dbg !8710

cond.false86:                                     ; preds = %cond.end75
  br label %cond.end87, !dbg !8710

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i32 [ 0, %cond.true85 ], [ 0, %cond.false86 ], !dbg !8710
  %45 = load i8, i8* @pipelining_p, align 1, !dbg !8711
  %tobool89 = icmp ne i8 %45, 0, !dbg !8711
  br i1 %tobool89, label %if.end91, label %if.then90, !dbg !8713

if.then90:                                        ; preds = %cond.end87
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8714
  call void @free_data_for_scheduled_insn(%struct.rtx_def* %46), !dbg !8715
  br label %if.end91, !dbg !8715

if.end91:                                         ; preds = %if.then90, %cond.end87
  br label %for.inc, !dbg !8716

for.inc:                                          ; preds = %if.end91
  call void @_list_iter_next(%struct._list_iterator* %ii), !dbg !8698
  br label %for.cond, !dbg !8698, !llvm.loop !8717

for.end:                                          ; preds = %for.cond
  %47 = load %struct._list_node**, %struct._list_node*** %pscheduled_insns.addr, align 8, !dbg !8719
  call void @_list_clear(%struct._list_node** %47), !dbg !8719
  %48 = load i32, i32* @global_level, align 4, !dbg !8720
  %inc = add nsw i32 %48, 1, !dbg !8720
  store i32 %inc, i32* @global_level, align 4, !dbg !8720
  %49 = load i32, i32* %new_hs, align 4, !dbg !8721
  ret i32 %49, !dbg !8722
}

declare dso_local void @dump_flist(%struct._list_node*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @fill_insns(%struct._fence* %fence, i32 %seqno, %struct._list_node*** %scheduled_insns_tailpp) #0 !dbg !8723 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %seqno.addr = alloca i32, align 4
  %scheduled_insns_tailpp.addr = alloca %struct._list_node***, align 8
  %bnds = alloca %struct._list_node*, align 8
  %bnds_tailp = alloca %struct._list_node**, align 8
  %av_vliw = alloca %struct._list_node*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %bnds_tailp1 = alloca %struct._list_node**, align 8
  %bndsp = alloca %struct._list_node**, align 8
  %expr_vliw = alloca %struct._expr*, align 8
  %need_stall = alloca i32, align 4
  %was_stall = alloca i32, align 4
  %scheduled_insns = alloca i32, align 4
  %stall_iterations = alloca i32, align 4
  %max_insns = alloca i32, align 4
  %max_stall = alloca i32, align 4
  %last_insn_was_debug = alloca i8, align 1
  %was_debug_bb_end_p = alloca i8, align 1
  %bnd = alloca %struct._bnd*, align 8
  %ptr = alloca %struct._list_node*, align 8
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !8726, metadata !DIExpression()), !dbg !8727
  store i32 %seqno, i32* %seqno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seqno.addr, metadata !8728, metadata !DIExpression()), !dbg !8729
  store %struct._list_node*** %scheduled_insns_tailpp, %struct._list_node**** %scheduled_insns_tailpp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node**** %scheduled_insns_tailpp.addr, metadata !8730, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.declare(metadata %struct._list_node** %bnds, metadata !8732, metadata !DIExpression()), !dbg !8733
  store %struct._list_node* null, %struct._list_node** %bnds, align 8, !dbg !8733
  call void @llvm.dbg.declare(metadata %struct._list_node*** %bnds_tailp, metadata !8734, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.declare(metadata %struct._list_node** %av_vliw, metadata !8737, metadata !DIExpression()), !dbg !8738
  store %struct._list_node* null, %struct._list_node** %av_vliw, align 8, !dbg !8738
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !8739, metadata !DIExpression()), !dbg !8740
  %0 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8741
  %insn1 = getelementptr inbounds %struct._fence, %struct._fence* %0, i32 0, i32 0, !dbg !8741
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !8741
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8, !dbg !8740
  %2 = load i32, i32* @sched_verbose, align 4, !dbg !8742
  %cmp = icmp sge i32 %2, 2, !dbg !8744
  br i1 %cmp, label %if.then, label %if.end20, !dbg !8745

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8746

do.body:                                          ; preds = %if.then
  %3 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !8747
  %tobool = icmp ne i8 %3, 0, !dbg !8747
  br i1 %tobool, label %if.then2, label %if.else, !dbg !8750

if.then2:                                         ; preds = %do.body
  br label %do.body3, !dbg !8747

do.body3:                                         ; preds = %if.then2
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !8751, metadata !DIExpression()), !dbg !8753
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8753
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !8753
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8753
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8753
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8753
  %5 = load i32, i32* %rt_int, align 8, !dbg !8753
  %6 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8753
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %6, i32 0, i32 2, !dbg !8753
  %7 = load i32, i32* %cycle, align 8, !dbg !8753
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0), i32 %5, i32 %7), !dbg !8753
  %mul = mul nsw i32 2, %call, !dbg !8753
  %add = add nsw i32 1, %mul, !dbg !8753
  store i32 %add, i32* %__j, align 4, !dbg !8753
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !8754, metadata !DIExpression()), !dbg !8753
  %8 = load i32, i32* %__j, align 4, !dbg !8753
  %conv = sext i32 %8 to i64, !dbg !8753
  %mul4 = mul i64 1, %conv, !dbg !8753
  %9 = alloca i8, i64 %mul4, align 16, !dbg !8753
  store i8* %9, i8** %__s, align 8, !dbg !8753
  %10 = load i8*, i8** %__s, align 8, !dbg !8753
  %11 = load i32, i32* %__j, align 4, !dbg !8753
  %conv5 = sext i32 %11 to i64, !dbg !8753
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8753
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !8753
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !8753
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 0, !dbg !8753
  %rt_int9 = bitcast %union.rtunion_def* %arrayidx8 to i32*, !dbg !8753
  %13 = load i32, i32* %rt_int9, align 8, !dbg !8753
  %14 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8753
  %cycle10 = getelementptr inbounds %struct._fence, %struct._fence* %14, i32 0, i32 2, !dbg !8753
  %15 = load i32, i32* %cycle10, align 8, !dbg !8753
  %call11 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %10, i64 %conv5, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0), i32 %13, i32 %15), !dbg !8753
  %16 = load i8*, i8** %__s, align 8, !dbg !8753
  call void @sel_prepare_string_for_dot_label(i8* %16), !dbg !8753
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8753
  %18 = load i8*, i8** %__s, align 8, !dbg !8753
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %18), !dbg !8753
  br label %do.end, !dbg !8753

do.end:                                           ; preds = %do.body3
  br label %if.end, !dbg !8753

if.else:                                          ; preds = %do.body
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !8747
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8747
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !8747
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !8747
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 0, !dbg !8747
  %rt_int16 = bitcast %union.rtunion_def* %arrayidx15 to i32*, !dbg !8747
  %21 = load i32, i32* %rt_int16, align 8, !dbg !8747
  %22 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8747
  %cycle17 = getelementptr inbounds %struct._fence, %struct._fence* %22, i32 0, i32 2, !dbg !8747
  %23 = load i32, i32* %cycle17, align 8, !dbg !8747
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0), i32 %21, i32 %23), !dbg !8747
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end19, !dbg !8750

do.end19:                                         ; preds = %if.end
  br label %if.end20, !dbg !8750

if.end20:                                         ; preds = %do.end19, %entry
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8755
  %25 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8756
  %dc = getelementptr inbounds %struct._fence, %struct._fence* %25, i32 0, i32 5, !dbg !8756
  %26 = load %struct.deps*, %struct.deps** %dc, align 8, !dbg !8756
  call void @blist_add(%struct._list_node** %bnds, %struct.rtx_def* %24, %struct._list_node* null, %struct.deps* %26), !dbg !8757
  %27 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !8758
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %27, i32 0, i32 0, !dbg !8758
  store %struct._list_node** %next, %struct._list_node*** %bnds_tailp, align 8, !dbg !8759
  %28 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8760
  %tc = getelementptr inbounds %struct._fence, %struct._fence* %28, i32 0, i32 6, !dbg !8760
  %29 = load i8*, i8** %tc, align 8, !dbg !8760
  call void @set_target_context(i8* %29), !dbg !8761
  %30 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8762
  %issue_more = getelementptr inbounds %struct._fence, %struct._fence* %30, i32 0, i32 11, !dbg !8762
  %31 = load i32, i32* %issue_more, align 8, !dbg !8762
  store i32 %31, i32* @can_issue_more, align 4, !dbg !8763
  %32 = load i32*, i32** @block_to_bb, align 8, !dbg !8764
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8764
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !8764
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !8764
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 3, !dbg !8764
  %rt_bb = bitcast %union.rtunion_def* %arrayidx23 to %struct.basic_block_def**, !dbg !8764
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8764
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %34, i32 0, i32 9, !dbg !8764
  %35 = load i32, i32* %index, align 8, !dbg !8764
  %add24 = add nsw i32 %35, 0, !dbg !8764
  %idxprom = sext i32 %add24 to i64, !dbg !8764
  %arrayidx25 = getelementptr inbounds i32, i32* %32, i64 %idxprom, !dbg !8764
  %36 = load i32, i32* %arrayidx25, align 4, !dbg !8764
  store i32 %36, i32* @target_bb, align 4, !dbg !8765
  br label %do.body26, !dbg !8766

do.body26:                                        ; preds = %do.cond113, %if.end20
  call void @llvm.dbg.declare(metadata %struct._list_node*** %bnds_tailp1, metadata !8767, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.declare(metadata %struct._list_node*** %bndsp, metadata !8770, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.declare(metadata %struct._expr** %expr_vliw, metadata !8772, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.declare(metadata i32* %need_stall, metadata !8774, metadata !DIExpression()), !dbg !8775
  call void @llvm.dbg.declare(metadata i32* %was_stall, metadata !8776, metadata !DIExpression()), !dbg !8777
  store i32 0, i32* %was_stall, align 4, !dbg !8777
  call void @llvm.dbg.declare(metadata i32* %scheduled_insns, metadata !8778, metadata !DIExpression()), !dbg !8779
  store i32 0, i32* %scheduled_insns, align 4, !dbg !8779
  call void @llvm.dbg.declare(metadata i32* %stall_iterations, metadata !8780, metadata !DIExpression()), !dbg !8781
  store i32 0, i32* %stall_iterations, align 4, !dbg !8781
  call void @llvm.dbg.declare(metadata i32* %max_insns, metadata !8782, metadata !DIExpression()), !dbg !8783
  %37 = load i8, i8* @pipelining_p, align 1, !dbg !8784
  %conv27 = zext i8 %37 to i32, !dbg !8784
  %tobool28 = icmp ne i32 %conv27, 0, !dbg !8784
  br i1 %tobool28, label %cond.true, label %cond.false, !dbg !8784

cond.true:                                        ; preds = %do.body26
  %38 = load i32, i32* @issue_rate, align 4, !dbg !8785
  br label %cond.end, !dbg !8784

cond.false:                                       ; preds = %do.body26
  %39 = load i32, i32* @issue_rate, align 4, !dbg !8786
  %mul29 = mul nsw i32 2, %39, !dbg !8787
  br label %cond.end, !dbg !8784

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %38, %cond.true ], [ %mul29, %cond.false ], !dbg !8784
  store i32 %cond, i32* %max_insns, align 4, !dbg !8783
  call void @llvm.dbg.declare(metadata i32* %max_stall, metadata !8788, metadata !DIExpression()), !dbg !8789
  %40 = load i8, i8* @pipelining_p, align 1, !dbg !8790
  %conv30 = zext i8 %40 to i32, !dbg !8790
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !8790
  %41 = zext i1 %tobool31 to i64, !dbg !8790
  %cond32 = select i1 %tobool31, i32 1, i32 3, !dbg !8790
  store i32 %cond32, i32* %max_stall, align 4, !dbg !8789
  call void @llvm.dbg.declare(metadata i8* %last_insn_was_debug, metadata !8791, metadata !DIExpression()), !dbg !8792
  store i8 0, i8* %last_insn_was_debug, align 1, !dbg !8792
  call void @llvm.dbg.declare(metadata i8* %was_debug_bb_end_p, metadata !8793, metadata !DIExpression()), !dbg !8794
  store i8 0, i8* %was_debug_bb_end_p, align 1, !dbg !8794
  %42 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8795
  %43 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !8796
  call void @compute_av_set_on_boundaries(%struct._fence* %42, %struct._list_node* %43, %struct._list_node** %av_vliw), !dbg !8797
  %44 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8798
  call void @remove_insns_that_need_bookkeeping(%struct._fence* %44, %struct._list_node** %av_vliw), !dbg !8799
  %45 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !8800
  call void @remove_insns_for_debug(%struct._list_node* %45, %struct._list_node** %av_vliw), !dbg !8801
  %46 = load %struct._list_node*, %struct._list_node** %av_vliw, align 8, !dbg !8802
  %cmp33 = icmp eq %struct._list_node* %46, null, !dbg !8804
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !8805

if.then35:                                        ; preds = %cond.end
  br label %do.end115, !dbg !8806

if.end36:                                         ; preds = %cond.end
  br label %do.body37, !dbg !8807

do.body37:                                        ; preds = %land.end, %if.end36
  %47 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !8808
  %48 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8810
  %call38 = call %struct._expr* @find_best_expr(%struct._list_node** %av_vliw, %struct._list_node* %47, %struct._fence* %48, i32* %need_stall), !dbg !8811
  store %struct._expr* %call38, %struct._expr** %expr_vliw, align 8, !dbg !8812
  %49 = load %struct._expr*, %struct._expr** %expr_vliw, align 8, !dbg !8813
  %tobool39 = icmp ne %struct._expr* %49, null, !dbg !8813
  br i1 %tobool39, label %if.end55, label %land.lhs.true, !dbg !8815

land.lhs.true:                                    ; preds = %do.body37
  %50 = load i32, i32* %need_stall, align 4, !dbg !8816
  %tobool40 = icmp ne i32 %50, 0, !dbg !8816
  br i1 %tobool40, label %if.then41, label %if.end55, !dbg !8817

if.then41:                                        ; preds = %land.lhs.true
  %51 = load %struct._expr*, %struct._expr** %expr_vliw, align 8, !dbg !8818
  %tobool42 = icmp ne %struct._expr* %51, null, !dbg !8818
  br i1 %tobool42, label %cond.true46, label %land.lhs.true43, !dbg !8818

land.lhs.true43:                                  ; preds = %if.then41
  %52 = load i32, i32* %stall_iterations, align 4, !dbg !8818
  %cmp44 = icmp slt i32 %52, 2, !dbg !8818
  br i1 %cmp44, label %cond.false47, label %cond.true46, !dbg !8818

cond.true46:                                      ; preds = %land.lhs.true43, %if.then41
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5530, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8818
  br label %cond.end48, !dbg !8818

cond.false47:                                     ; preds = %land.lhs.true43
  br label %cond.end48, !dbg !8818

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond49 = phi i32 [ 0, %cond.true46 ], [ 0, %cond.false47 ], !dbg !8818
  %53 = load i32, i32* %was_stall, align 4, !dbg !8820
  %inc = add nsw i32 %53, 1, !dbg !8820
  store i32 %inc, i32* %was_stall, align 4, !dbg !8820
  %54 = load i32, i32* %need_stall, align 4, !dbg !8821
  %cmp50 = icmp sle i32 %54, 3, !dbg !8823
  br i1 %cmp50, label %if.then52, label %if.else53, !dbg !8824

if.then52:                                        ; preds = %cond.end48
  %55 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8825
  %56 = load i32, i32* %need_stall, align 4, !dbg !8826
  call void @stall_for_cycles(%struct._fence* %55, i32 %56), !dbg !8827
  br label %if.end54, !dbg !8827

if.else53:                                        ; preds = %cond.end48
  %57 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8828
  call void @stall_for_cycles(%struct._fence* %57, i32 1), !dbg !8830
  br label %do.end58, !dbg !8831

if.end54:                                         ; preds = %if.then52
  br label %if.end55, !dbg !8832

if.end55:                                         ; preds = %if.end54, %land.lhs.true, %do.body37
  br label %do.cond, !dbg !8833

do.cond:                                          ; preds = %if.end55
  %58 = load %struct._expr*, %struct._expr** %expr_vliw, align 8, !dbg !8834
  %tobool56 = icmp ne %struct._expr* %58, null, !dbg !8834
  br i1 %tobool56, label %land.end, label %land.rhs, !dbg !8835

land.rhs:                                         ; preds = %do.cond
  %59 = load i32, i32* %need_stall, align 4, !dbg !8836
  %tobool57 = icmp ne i32 %59, 0, !dbg !8835
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %60 = phi i1 [ false, %do.cond ], [ %tobool57, %land.rhs ], !dbg !8837
  br i1 %60, label %do.body37, label %do.end58, !dbg !8833, !llvm.loop !8838

do.end58:                                         ; preds = %land.end, %if.else53
  %61 = load %struct._expr*, %struct._expr** %expr_vliw, align 8, !dbg !8840
  %tobool59 = icmp ne %struct._expr* %61, null, !dbg !8840
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !8842

if.then60:                                        ; preds = %do.end58
  call void @av_set_clear(%struct._list_node** %av_vliw), !dbg !8843
  br label %do.end115, !dbg !8845

if.end61:                                         ; preds = %do.end58
  store %struct._list_node** %bnds, %struct._list_node*** %bndsp, align 8, !dbg !8846
  %62 = load %struct._list_node**, %struct._list_node*** %bnds_tailp, align 8, !dbg !8847
  store %struct._list_node** %62, %struct._list_node*** %bnds_tailp1, align 8, !dbg !8848
  br label %do.body62, !dbg !8849

do.body62:                                        ; preds = %do.cond87, %if.end61
  call void @llvm.dbg.declare(metadata %struct._bnd** %bnd, metadata !8850, metadata !DIExpression()), !dbg !8854
  %63 = load %struct._list_node**, %struct._list_node*** %bndsp, align 8, !dbg !8855
  %64 = load %struct._list_node*, %struct._list_node** %63, align 8, !dbg !8855
  %u63 = getelementptr inbounds %struct._list_node, %struct._list_node* %64, i32 0, i32 1, !dbg !8855
  %bnd64 = bitcast %union.anon.0* %u63 to %struct._bnd*, !dbg !8855
  store %struct._bnd* %bnd64, %struct._bnd** %bnd, align 8, !dbg !8854
  %65 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !8856
  %av1 = getelementptr inbounds %struct._bnd, %struct._bnd* %65, i32 0, i32 3, !dbg !8856
  %66 = load %struct._list_node*, %struct._list_node** %av1, align 8, !dbg !8856
  %67 = load %struct._expr*, %struct._expr** %expr_vliw, align 8, !dbg !8858
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %67, i32 0, i32 0, !dbg !8858
  %68 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8858
  %call65 = call zeroext i8 @av_set_is_in_p(%struct._list_node* %66, %struct.vinsn_def* %68), !dbg !8859
  %tobool66 = icmp ne i8 %call65, 0, !dbg !8859
  br i1 %tobool66, label %if.end69, label %if.then67, !dbg !8860

if.then67:                                        ; preds = %do.body62
  %69 = load %struct._list_node**, %struct._list_node*** %bndsp, align 8, !dbg !8861
  %70 = load %struct._list_node*, %struct._list_node** %69, align 8, !dbg !8861
  %next68 = getelementptr inbounds %struct._list_node, %struct._list_node* %70, i32 0, i32 0, !dbg !8861
  store %struct._list_node** %next68, %struct._list_node*** %bndsp, align 8, !dbg !8863
  br label %do.cond87, !dbg !8864

if.end69:                                         ; preds = %do.body62
  %71 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !8865
  %72 = load %struct._expr*, %struct._expr** %expr_vliw, align 8, !dbg !8866
  %73 = load i32, i32* %seqno.addr, align 4, !dbg !8867
  %call70 = call %struct.rtx_def* @schedule_expr_on_boundary(%struct._bnd* %71, %struct._expr* %72, i32 %73), !dbg !8868
  store %struct.rtx_def* %call70, %struct.rtx_def** %insn, align 8, !dbg !8869
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8870
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !8870
  %bf.load = load i32, i32* %75, align 8, !dbg !8870
  %bf.clear = and i32 %bf.load, 65535, !dbg !8870
  %cmp71 = icmp eq i32 %bf.clear, 7, !dbg !8870
  %conv72 = zext i1 %cmp71 to i32, !dbg !8870
  %conv73 = trunc i32 %conv72 to i8, !dbg !8870
  store i8 %conv73, i8* %last_insn_was_debug, align 1, !dbg !8871
  %76 = load i8, i8* %last_insn_was_debug, align 1, !dbg !8872
  %tobool74 = icmp ne i8 %76, 0, !dbg !8872
  br i1 %tobool74, label %if.then75, label %if.end84, !dbg !8874

if.then75:                                        ; preds = %if.end69
  %77 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8875
  %78 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !8876
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %78, i32 0, i32 0, !dbg !8876
  %79 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !8876
  %cmp76 = icmp eq %struct.rtx_def* %77, %79, !dbg !8877
  br i1 %cmp76, label %land.rhs78, label %land.end82, !dbg !8878

land.rhs78:                                       ; preds = %if.then75
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8879
  %call79 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %80), !dbg !8880
  %conv80 = zext i8 %call79 to i32, !dbg !8880
  %tobool81 = icmp ne i32 %conv80, 0, !dbg !8878
  br label %land.end82

land.end82:                                       ; preds = %land.rhs78, %if.then75
  %81 = phi i1 [ false, %if.then75 ], [ %tobool81, %land.rhs78 ], !dbg !8881
  %land.ext = zext i1 %81 to i32, !dbg !8878
  %conv83 = trunc i32 %land.ext to i8, !dbg !8882
  store i8 %conv83, i8* %was_debug_bb_end_p, align 1, !dbg !8883
  br label %if.end84, !dbg !8884

if.end84:                                         ; preds = %land.end82, %if.end69
  %82 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8885
  %83 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8886
  %84 = load i32, i32* %need_stall, align 4, !dbg !8887
  call void @update_fence_and_insn(%struct._fence* %82, %struct.rtx_def* %83, i32 %84), !dbg !8888
  %85 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8889
  %86 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !8890
  %87 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8891
  %88 = load %struct._list_node**, %struct._list_node*** %bndsp, align 8, !dbg !8892
  %89 = load %struct._list_node**, %struct._list_node*** %bnds_tailp, align 8, !dbg !8893
  %call85 = call %struct._list_node** @update_boundaries(%struct._fence* %85, %struct._bnd* %86, %struct.rtx_def* %87, %struct._list_node** %88, %struct._list_node** %89), !dbg !8894
  store %struct._list_node** %call85, %struct._list_node*** %bnds_tailp, align 8, !dbg !8895
  %90 = load %struct._list_node***, %struct._list_node**** %scheduled_insns_tailpp.addr, align 8, !dbg !8896
  %91 = load %struct._list_node**, %struct._list_node*** %90, align 8, !dbg !8896
  %92 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8896
  call void @_xlist_add(%struct._list_node** %91, %struct.rtx_def* %92), !dbg !8896
  %93 = load %struct._list_node***, %struct._list_node**** %scheduled_insns_tailpp.addr, align 8, !dbg !8897
  %94 = load %struct._list_node**, %struct._list_node*** %93, align 8, !dbg !8897
  %95 = load %struct._list_node*, %struct._list_node** %94, align 8, !dbg !8897
  %next86 = getelementptr inbounds %struct._list_node, %struct._list_node* %95, i32 0, i32 0, !dbg !8897
  %96 = load %struct._list_node***, %struct._list_node**** %scheduled_insns_tailpp.addr, align 8, !dbg !8898
  store %struct._list_node** %next86, %struct._list_node*** %96, align 8, !dbg !8899
  br label %do.cond87, !dbg !8900

do.cond87:                                        ; preds = %if.end84, %if.then67
  %97 = load %struct._list_node**, %struct._list_node*** %bndsp, align 8, !dbg !8901
  %98 = load %struct._list_node*, %struct._list_node** %97, align 8, !dbg !8902
  %99 = load %struct._list_node**, %struct._list_node*** %bnds_tailp1, align 8, !dbg !8903
  %100 = load %struct._list_node*, %struct._list_node** %99, align 8, !dbg !8904
  %cmp88 = icmp ne %struct._list_node* %98, %100, !dbg !8905
  br i1 %cmp88, label %do.body62, label %do.end90, !dbg !8900, !llvm.loop !8906

do.end90:                                         ; preds = %do.cond87
  call void @av_set_clear(%struct._list_node** %av_vliw), !dbg !8908
  %101 = load i8, i8* %last_insn_was_debug, align 1, !dbg !8909
  %tobool91 = icmp ne i8 %101, 0, !dbg !8909
  br i1 %tobool91, label %if.end94, label %if.then92, !dbg !8911

if.then92:                                        ; preds = %do.end90
  %102 = load i32, i32* %scheduled_insns, align 4, !dbg !8912
  %inc93 = add nsw i32 %102, 1, !dbg !8912
  store i32 %inc93, i32* %scheduled_insns, align 4, !dbg !8912
  br label %if.end94, !dbg !8913

if.end94:                                         ; preds = %if.then92, %do.end90
  %103 = load i8, i8* %last_insn_was_debug, align 1, !dbg !8914
  %conv95 = zext i8 %103 to i32, !dbg !8914
  %tobool96 = icmp ne i32 %conv95, 0, !dbg !8914
  br i1 %tobool96, label %cond.true97, label %cond.false100, !dbg !8916

cond.true97:                                      ; preds = %if.end94
  %104 = load i8, i8* %was_debug_bb_end_p, align 1, !dbg !8917
  %conv98 = zext i8 %104 to i32, !dbg !8917
  %tobool99 = icmp ne i32 %conv98, 0, !dbg !8917
  br i1 %tobool99, label %if.then111, label %lor.lhs.false, !dbg !8914

cond.false100:                                    ; preds = %if.end94
  %105 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8918
  %call101 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %105), !dbg !8919
  %conv102 = zext i8 %call101 to i32, !dbg !8919
  %tobool103 = icmp ne i32 %conv102, 0, !dbg !8919
  br i1 %tobool103, label %if.then111, label %lor.lhs.false, !dbg !8916

lor.lhs.false:                                    ; preds = %cond.false100, %cond.true97
  %106 = load i32, i32* %was_stall, align 4, !dbg !8920
  %tobool104 = icmp ne i32 %106, 0, !dbg !8920
  br i1 %tobool104, label %land.lhs.true105, label %if.end112, !dbg !8921

land.lhs.true105:                                 ; preds = %lor.lhs.false
  %107 = load i32, i32* %was_stall, align 4, !dbg !8922
  %108 = load i32, i32* %max_stall, align 4, !dbg !8923
  %cmp106 = icmp sge i32 %107, %108, !dbg !8924
  br i1 %cmp106, label %if.then111, label %lor.lhs.false108, !dbg !8925

lor.lhs.false108:                                 ; preds = %land.lhs.true105
  %109 = load i32, i32* %scheduled_insns, align 4, !dbg !8926
  %110 = load i32, i32* %max_insns, align 4, !dbg !8927
  %cmp109 = icmp sge i32 %109, %110, !dbg !8928
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !8929

if.then111:                                       ; preds = %lor.lhs.false108, %land.lhs.true105, %cond.false100, %cond.true97
  br label %do.end115, !dbg !8930

if.end112:                                        ; preds = %lor.lhs.false108, %lor.lhs.false
  br label %do.cond113, !dbg !8931

do.cond113:                                       ; preds = %if.end112
  %111 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !8932
  %tobool114 = icmp ne %struct._list_node* %111, null, !dbg !8931
  br i1 %tobool114, label %do.body26, label %do.end115, !dbg !8931, !llvm.loop !8933

do.end115:                                        ; preds = %do.cond113, %if.then111, %if.then60, %if.then35
  %112 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8935
  %bnds116 = getelementptr inbounds %struct._fence, %struct._fence* %112, i32 0, i32 4, !dbg !8935
  %113 = load %struct._list_node*, %struct._list_node** %bnds116, align 8, !dbg !8935
  %tobool117 = icmp ne %struct._list_node* %113, null, !dbg !8935
  br i1 %tobool117, label %cond.true118, label %cond.false119, !dbg !8935

cond.true118:                                     ; preds = %do.end115
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5596, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8935
  br label %cond.end120, !dbg !8935

cond.false119:                                    ; preds = %do.end115
  br label %cond.end120, !dbg !8935

cond.end120:                                      ; preds = %cond.false119, %cond.true118
  %cond121 = phi i32 [ 0, %cond.true118 ], [ 0, %cond.false119 ], !dbg !8935
  br label %while.cond, !dbg !8936

while.cond:                                       ; preds = %if.end135, %cond.end120
  %114 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !8937
  %tobool122 = icmp ne %struct._list_node* %114, null, !dbg !8936
  br i1 %tobool122, label %while.body, label %while.end, !dbg !8936

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._list_node** %ptr, metadata !8938, metadata !DIExpression()), !dbg !8940
  %115 = load %struct._list_node*, %struct._list_node** %bnds, align 8, !dbg !8941
  %u123 = getelementptr inbounds %struct._list_node, %struct._list_node* %115, i32 0, i32 1, !dbg !8941
  %bnd124 = bitcast %union.anon.0* %u123 to %struct._bnd*, !dbg !8941
  %ptr125 = getelementptr inbounds %struct._bnd, %struct._bnd* %bnd124, i32 0, i32 1, !dbg !8941
  %116 = load %struct._list_node*, %struct._list_node** %ptr125, align 8, !dbg !8941
  store %struct._list_node* %116, %struct._list_node** %ptr, align 8, !dbg !8940
  %117 = load %struct._list_node*, %struct._list_node** %ptr, align 8, !dbg !8942
  %tobool126 = icmp ne %struct._list_node* %117, null, !dbg !8942
  br i1 %tobool126, label %if.then127, label %if.end135, !dbg !8944

if.then127:                                       ; preds = %while.body
  %118 = load %struct._list_node*, %struct._list_node** %ptr, align 8, !dbg !8945
  %u128 = getelementptr inbounds %struct._list_node, %struct._list_node* %118, i32 0, i32 1, !dbg !8945
  %x = bitcast %union.anon.0* %u128 to %struct.rtx_def**, !dbg !8945
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !8945
  store %struct.rtx_def* %119, %struct.rtx_def** %insn, align 8, !dbg !8947
  %120 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8948
  %bnds129 = getelementptr inbounds %struct._fence, %struct._fence* %120, i32 0, i32 4, !dbg !8948
  %121 = load %struct._list_node*, %struct._list_node** %bnds129, align 8, !dbg !8948
  %122 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8948
  %call130 = call zeroext i8 @_xlist_is_in_p(%struct._list_node* %121, %struct.rtx_def* %122), !dbg !8948
  %tobool131 = icmp ne i8 %call130, 0, !dbg !8948
  br i1 %tobool131, label %if.end134, label %if.then132, !dbg !8950

if.then132:                                       ; preds = %if.then127
  %123 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8951
  %bnds133 = getelementptr inbounds %struct._fence, %struct._fence* %123, i32 0, i32 4, !dbg !8951
  %124 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8951
  call void @_xlist_add(%struct._list_node** %bnds133, %struct.rtx_def* %124), !dbg !8951
  br label %if.end134, !dbg !8951

if.end134:                                        ; preds = %if.then132, %if.then127
  br label %if.end135, !dbg !8952

if.end135:                                        ; preds = %if.end134, %while.body
  call void @blist_remove(%struct._list_node** %bnds), !dbg !8953
  br label %while.cond, !dbg !8936, !llvm.loop !8954

while.end:                                        ; preds = %while.cond
  %125 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !8956
  %tc136 = getelementptr inbounds %struct._fence, %struct._fence* %125, i32 0, i32 6, !dbg !8956
  %126 = load i8*, i8** %tc136, align 8, !dbg !8956
  call void @reset_target_context(i8* %126, i8 zeroext 0), !dbg !8957
  ret void, !dbg !8958
}

; Function Attrs: noinline nounwind uwtable
define internal void @vinsn_vec_clear(%struct.VEC_vinsn_t_heap** %vinsn_vec) #0 !dbg !8959 {
entry:
  %vinsn_vec.addr = alloca %struct.VEC_vinsn_t_heap**, align 8
  %len = alloca i32, align 4
  %vinsn = alloca %struct.vinsn_def*, align 8
  %n = alloca i32, align 4
  store %struct.VEC_vinsn_t_heap** %vinsn_vec, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, metadata !8962, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8964, metadata !DIExpression()), !dbg !8965
  %0 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8, !dbg !8966
  %1 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %0, align 8, !dbg !8966
  %tobool = icmp ne %struct.VEC_vinsn_t_heap* %1, null, !dbg !8966
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8966

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8, !dbg !8966
  %3 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %2, align 8, !dbg !8966
  %base = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %3, i32 0, i32 0, !dbg !8966
  br label %cond.end, !dbg !8966

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8966

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_vinsn_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8966
  %call = call i32 @VEC_vinsn_t_base_length(%struct.VEC_vinsn_t_base* %cond), !dbg !8966
  store i32 %call, i32* %len, align 4, !dbg !8965
  %4 = load i32, i32* %len, align 4, !dbg !8967
  %cmp = icmp ugt i32 %4, 0, !dbg !8969
  br i1 %cmp, label %if.then, label %if.end, !dbg !8970

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vinsn, metadata !8971, metadata !DIExpression()), !dbg !8973
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8974, metadata !DIExpression()), !dbg !8975
  store i32 0, i32* %n, align 4, !dbg !8976
  br label %for.cond, !dbg !8978

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8, !dbg !8979
  %6 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %5, align 8, !dbg !8979
  %tobool1 = icmp ne %struct.VEC_vinsn_t_heap* %6, null, !dbg !8979
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !8979

cond.true2:                                       ; preds = %for.cond
  %7 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8, !dbg !8979
  %8 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %7, align 8, !dbg !8979
  %base3 = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %8, i32 0, i32 0, !dbg !8979
  br label %cond.end5, !dbg !8979

cond.false4:                                      ; preds = %for.cond
  br label %cond.end5, !dbg !8979

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_vinsn_t_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !8979
  %9 = load i32, i32* %n, align 4, !dbg !8979
  %call7 = call i32 @VEC_vinsn_t_base_iterate(%struct.VEC_vinsn_t_base* %cond6, i32 %9, %struct.vinsn_def** %vinsn), !dbg !8979
  %tobool8 = icmp ne i32 %call7, 0, !dbg !8981
  br i1 %tobool8, label %for.body, label %for.end, !dbg !8981

for.body:                                         ; preds = %cond.end5
  %10 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !8982
  call void @vinsn_detach(%struct.vinsn_def* %10), !dbg !8983
  br label %for.inc, !dbg !8983

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %n, align 4, !dbg !8984
  %inc = add nsw i32 %11, 1, !dbg !8984
  store i32 %inc, i32* %n, align 4, !dbg !8984
  br label %for.cond, !dbg !8985, !llvm.loop !8986

for.end:                                          ; preds = %cond.end5
  %12 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8, !dbg !8988
  %13 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %12, align 8, !dbg !8988
  %tobool9 = icmp ne %struct.VEC_vinsn_t_heap* %13, null, !dbg !8988
  br i1 %tobool9, label %cond.true10, label %cond.false12, !dbg !8988

cond.true10:                                      ; preds = %for.end
  %14 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8, !dbg !8988
  %15 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %14, align 8, !dbg !8988
  %base11 = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %15, i32 0, i32 0, !dbg !8988
  br label %cond.end13, !dbg !8988

cond.false12:                                     ; preds = %for.end
  br label %cond.end13, !dbg !8988

cond.end13:                                       ; preds = %cond.false12, %cond.true10
  %cond14 = phi %struct.VEC_vinsn_t_base* [ %base11, %cond.true10 ], [ null, %cond.false12 ], !dbg !8988
  %16 = load i32, i32* %len, align 4, !dbg !8988
  call void @VEC_vinsn_t_base_block_remove(%struct.VEC_vinsn_t_base* %cond14, i32 0, i32 %16), !dbg !8988
  br label %if.end, !dbg !8989

if.end:                                           ; preds = %cond.end13, %cond.end
  ret void, !dbg !8990
}

declare dso_local void @blist_add(%struct._list_node**, %struct.rtx_def*, %struct._list_node*, %struct.deps*) #2

declare dso_local void @set_target_context(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @compute_av_set_on_boundaries(%struct._fence* %fence, %struct._list_node* %bnds, %struct._list_node** %av_vliw_p) #0 !dbg !8991 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %bnds.addr = alloca %struct._list_node*, align 8
  %av_vliw_p.addr = alloca %struct._list_node**, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j13 = alloca i32, align 4
  %__s17 = alloca i8*, align 8
  %bnd = alloca %struct._bnd*, align 8
  %av1_copy = alloca %struct._list_node*, align 8
  %bnd_to = alloca %struct.rtx_def*, align 8
  %__j115 = alloca i32, align 4
  %__s119 = alloca i8*, align 8
  %__j134 = alloca i32, align 4
  %__s138 = alloca i8*, align 8
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !8994, metadata !DIExpression()), !dbg !8995
  store %struct._list_node* %bnds, %struct._list_node** %bnds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %bnds.addr, metadata !8996, metadata !DIExpression()), !dbg !8997
  store %struct._list_node** %av_vliw_p, %struct._list_node*** %av_vliw_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %av_vliw_p.addr, metadata !8998, metadata !DIExpression()), !dbg !8999
  %0 = load i32, i32* @sched_verbose, align 4, !dbg !9000
  %cmp = icmp sge i32 %0, 2, !dbg !9002
  br i1 %cmp, label %if.then, label %if.end28, !dbg !9003

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9004

do.body:                                          ; preds = %if.then
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9006
  %tobool = icmp ne i8 %1, 0, !dbg !9006
  br i1 %tobool, label %if.then1, label %if.else, !dbg !9009

if.then1:                                         ; preds = %do.body
  br label %do.body2, !dbg !9006

do.body2:                                         ; preds = %if.then1
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !9010, metadata !DIExpression()), !dbg !9012
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)), !dbg !9012
  %mul = mul nsw i32 2, %call, !dbg !9012
  %add = add nsw i32 1, %mul, !dbg !9012
  store i32 %add, i32* %__j, align 4, !dbg !9012
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !9013, metadata !DIExpression()), !dbg !9012
  %2 = load i32, i32* %__j, align 4, !dbg !9012
  %conv = sext i32 %2 to i64, !dbg !9012
  %mul3 = mul i64 1, %conv, !dbg !9012
  %3 = alloca i8, i64 %mul3, align 16, !dbg !9012
  store i8* %3, i8** %__s, align 8, !dbg !9012
  %4 = load i8*, i8** %__s, align 8, !dbg !9012
  %5 = load i32, i32* %__j, align 4, !dbg !9012
  %conv4 = sext i32 %5 to i64, !dbg !9012
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %4, i64 %conv4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)), !dbg !9012
  %6 = load i8*, i8** %__s, align 8, !dbg !9012
  call void @sel_prepare_string_for_dot_label(i8* %6), !dbg !9012
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9012
  %8 = load i8*, i8** %__s, align 8, !dbg !9012
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %8), !dbg !9012
  br label %do.end, !dbg !9012

do.end:                                           ; preds = %do.body2
  br label %if.end, !dbg !9012

if.else:                                          ; preds = %do.body
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9006
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)), !dbg !9006
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end8, !dbg !9009

do.end8:                                          ; preds = %if.end
  %10 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !9014
  call void @dump_blist(%struct._list_node* %10), !dbg !9015
  br label %do.body9, !dbg !9016

do.body9:                                         ; preds = %do.end8
  %11 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9017
  %tobool10 = icmp ne i8 %11, 0, !dbg !9017
  br i1 %tobool10, label %if.then11, label %if.else24, !dbg !9020

if.then11:                                        ; preds = %do.body9
  br label %do.body12, !dbg !9017

do.body12:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i32* %__j13, metadata !9021, metadata !DIExpression()), !dbg !9023
  %call14 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !9023
  %mul15 = mul nsw i32 2, %call14, !dbg !9023
  %add16 = add nsw i32 1, %mul15, !dbg !9023
  store i32 %add16, i32* %__j13, align 4, !dbg !9023
  call void @llvm.dbg.declare(metadata i8** %__s17, metadata !9024, metadata !DIExpression()), !dbg !9023
  %12 = load i32, i32* %__j13, align 4, !dbg !9023
  %conv18 = sext i32 %12 to i64, !dbg !9023
  %mul19 = mul i64 1, %conv18, !dbg !9023
  %13 = alloca i8, i64 %mul19, align 16, !dbg !9023
  store i8* %13, i8** %__s17, align 8, !dbg !9023
  %14 = load i8*, i8** %__s17, align 8, !dbg !9023
  %15 = load i32, i32* %__j13, align 4, !dbg !9023
  %conv20 = sext i32 %15 to i64, !dbg !9023
  %call21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %14, i64 %conv20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !9023
  %16 = load i8*, i8** %__s17, align 8, !dbg !9023
  call void @sel_prepare_string_for_dot_label(i8* %16), !dbg !9023
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9023
  %18 = load i8*, i8** %__s17, align 8, !dbg !9023
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %18), !dbg !9023
  br label %do.end23, !dbg !9023

do.end23:                                         ; preds = %do.body12
  br label %if.end26, !dbg !9023

if.else24:                                        ; preds = %do.body9
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9017
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !9017
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %do.end23
  br label %do.end27, !dbg !9020

do.end27:                                         ; preds = %if.end26
  br label %if.end28, !dbg !9025

if.end28:                                         ; preds = %do.end27, %entry
  br label %for.cond, !dbg !9026

for.cond:                                         ; preds = %for.inc, %if.end28
  %20 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !9027
  %tobool29 = icmp ne %struct._list_node* %20, null, !dbg !9030
  br i1 %tobool29, label %for.body, label %for.end, !dbg !9030

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._bnd** %bnd, metadata !9031, metadata !DIExpression()), !dbg !9033
  %21 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !9034
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %21, i32 0, i32 1, !dbg !9034
  %bnd30 = bitcast %union.anon.0* %u to %struct._bnd*, !dbg !9034
  store %struct._bnd* %bnd30, %struct._bnd** %bnd, align 8, !dbg !9033
  call void @llvm.dbg.declare(metadata %struct._list_node** %av1_copy, metadata !9035, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %bnd_to, metadata !9037, metadata !DIExpression()), !dbg !9038
  %22 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9039
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %22, i32 0, i32 0, !dbg !9039
  %23 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !9039
  store %struct.rtx_def* %23, %struct.rtx_def** %bnd_to, align 8, !dbg !9038
  %24 = load %struct.rtx_def*, %struct.rtx_def** %bnd_to, align 8, !dbg !9040
  %call31 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %24), !dbg !9042
  %tobool32 = icmp ne i8 %call31, 0, !dbg !9042
  br i1 %tobool32, label %if.then33, label %if.else50, !dbg !9043

if.then33:                                        ; preds = %for.body
  %25 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9044
  %tobool34 = icmp ne %struct.VEC_sel_insn_data_def_heap* %25, null, !dbg !9044
  br i1 %tobool34, label %cond.true, label %cond.false, !dbg !9044

cond.true:                                        ; preds = %if.then33
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9044
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %26, i32 0, i32 0, !dbg !9044
  br label %cond.end, !dbg !9044

cond.false:                                       ; preds = %if.then33
  br label %cond.end, !dbg !9044

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9044
  %27 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9044
  %tobool35 = icmp ne %struct.VEC_int_heap* %27, null, !dbg !9044
  br i1 %tobool35, label %cond.true36, label %cond.false38, !dbg !9044

cond.true36:                                      ; preds = %cond.end
  %28 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9044
  %base37 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %28, i32 0, i32 0, !dbg !9044
  br label %cond.end39, !dbg !9044

cond.false38:                                     ; preds = %cond.end
  br label %cond.end39, !dbg !9044

cond.end39:                                       ; preds = %cond.false38, %cond.true36
  %cond40 = phi %struct.VEC_int_base* [ %base37, %cond.true36 ], [ null, %cond.false38 ], !dbg !9044
  %29 = load %struct.rtx_def*, %struct.rtx_def** %bnd_to, align 8, !dbg !9044
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !9044
  %fld = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !9044
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9044
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9044
  %30 = load i32, i32* %rt_int, align 8, !dbg !9044
  %call42 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond40, i32 %30), !dbg !9044
  %call43 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call42), !dbg !9044
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call43, i32 0, i32 0, !dbg !9044
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 5, !dbg !9044
  %31 = load i32, i32* %sched_times, align 8, !dbg !9044
  %cmp44 = icmp eq i32 %31, 0, !dbg !9044
  br i1 %cmp44, label %cond.false47, label %cond.true46, !dbg !9044

cond.true46:                                      ; preds = %cond.end39
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5029, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9044
  br label %cond.end48, !dbg !9044

cond.false47:                                     ; preds = %cond.end39
  br label %cond.end48, !dbg !9044

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond49 = phi i32 [ 0, %cond.true46 ], [ 0, %cond.false47 ], !dbg !9044
  br label %if.end84, !dbg !9044

if.else50:                                        ; preds = %for.body
  br label %while.cond, !dbg !9045

while.cond:                                       ; preds = %if.end83, %if.else50
  %32 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9046
  %tobool51 = icmp ne %struct.VEC_sel_insn_data_def_heap* %32, null, !dbg !9046
  br i1 %tobool51, label %cond.true52, label %cond.false54, !dbg !9046

cond.true52:                                      ; preds = %while.cond
  %33 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9046
  %base53 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %33, i32 0, i32 0, !dbg !9046
  br label %cond.end55, !dbg !9046

cond.false54:                                     ; preds = %while.cond
  br label %cond.end55, !dbg !9046

cond.end55:                                       ; preds = %cond.false54, %cond.true52
  %cond56 = phi %struct.VEC_sel_insn_data_def_base* [ %base53, %cond.true52 ], [ null, %cond.false54 ], !dbg !9046
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9046
  %tobool57 = icmp ne %struct.VEC_int_heap* %34, null, !dbg !9046
  br i1 %tobool57, label %cond.true58, label %cond.false60, !dbg !9046

cond.true58:                                      ; preds = %cond.end55
  %35 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9046
  %base59 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %35, i32 0, i32 0, !dbg !9046
  br label %cond.end61, !dbg !9046

cond.false60:                                     ; preds = %cond.end55
  br label %cond.end61, !dbg !9046

cond.end61:                                       ; preds = %cond.false60, %cond.true58
  %cond62 = phi %struct.VEC_int_base* [ %base59, %cond.true58 ], [ null, %cond.false60 ], !dbg !9046
  %36 = load %struct.rtx_def*, %struct.rtx_def** %bnd_to, align 8, !dbg !9046
  %u63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !9046
  %fld64 = bitcast %union.u* %u63 to [1 x %union.rtunion_def]*, !dbg !9046
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i64 0, i64 1, !dbg !9046
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**, !dbg !9046
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9046
  %u66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !9046
  %fld67 = bitcast %union.u* %u66 to [1 x %union.rtunion_def]*, !dbg !9046
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i64 0, i64 0, !dbg !9046
  %rt_int69 = bitcast %union.rtunion_def* %arrayidx68 to i32*, !dbg !9046
  %38 = load i32, i32* %rt_int69, align 8, !dbg !9046
  %call70 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond62, i32 %38), !dbg !9046
  %call71 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond56, i32 %call70), !dbg !9046
  %expr72 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call71, i32 0, i32 0, !dbg !9046
  %sched_times73 = getelementptr inbounds %struct._expr, %struct._expr* %expr72, i32 0, i32 5, !dbg !9046
  %39 = load i32, i32* %sched_times73, align 8, !dbg !9046
  %cmp74 = icmp eq i32 %39, 0, !dbg !9047
  br i1 %cmp74, label %while.body, label %while.end, !dbg !9045

while.body:                                       ; preds = %cond.end61
  %40 = load %struct.rtx_def*, %struct.rtx_def** %bnd_to, align 8, !dbg !9048
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !9048
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !9048
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 1, !dbg !9048
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**, !dbg !9048
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !9048
  store %struct.rtx_def* %41, %struct.rtx_def** %bnd_to, align 8, !dbg !9050
  %42 = load %struct.rtx_def*, %struct.rtx_def** %bnd_to, align 8, !dbg !9051
  %call80 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %42), !dbg !9053
  %tobool81 = icmp ne i8 %call80, 0, !dbg !9053
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !9054

if.then82:                                        ; preds = %while.body
  br label %while.end, !dbg !9055

if.end83:                                         ; preds = %while.body
  br label %while.cond, !dbg !9045, !llvm.loop !9056

while.end:                                        ; preds = %if.then82, %cond.end61
  br label %if.end84

if.end84:                                         ; preds = %while.end, %cond.end48
  %43 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9058
  %to85 = getelementptr inbounds %struct._bnd, %struct._bnd* %43, i32 0, i32 0, !dbg !9058
  %44 = load %struct.rtx_def*, %struct.rtx_def** %to85, align 8, !dbg !9058
  %45 = load %struct.rtx_def*, %struct.rtx_def** %bnd_to, align 8, !dbg !9060
  %cmp86 = icmp ne %struct.rtx_def* %44, %45, !dbg !9061
  br i1 %cmp86, label %if.then88, label %if.end98, !dbg !9062

if.then88:                                        ; preds = %if.end84
  %46 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9063
  %insn = getelementptr inbounds %struct._fence, %struct._fence* %46, i32 0, i32 0, !dbg !9063
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9063
  %48 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9063
  %to89 = getelementptr inbounds %struct._bnd, %struct._bnd* %48, i32 0, i32 0, !dbg !9063
  %49 = load %struct.rtx_def*, %struct.rtx_def** %to89, align 8, !dbg !9063
  %cmp90 = icmp eq %struct.rtx_def* %47, %49, !dbg !9063
  br i1 %cmp90, label %cond.false93, label %cond.true92, !dbg !9063

cond.true92:                                      ; preds = %if.then88
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5040, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9063
  br label %cond.end94, !dbg !9063

cond.false93:                                     ; preds = %if.then88
  br label %cond.end94, !dbg !9063

cond.end94:                                       ; preds = %cond.false93, %cond.true92
  %cond95 = phi i32 [ 0, %cond.true92 ], [ 0, %cond.false93 ], !dbg !9063
  %50 = load %struct.rtx_def*, %struct.rtx_def** %bnd_to, align 8, !dbg !9065
  %51 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9066
  %insn96 = getelementptr inbounds %struct._fence, %struct._fence* %51, i32 0, i32 0, !dbg !9066
  store %struct.rtx_def* %50, %struct.rtx_def** %insn96, align 8, !dbg !9067
  %52 = load %struct.rtx_def*, %struct.rtx_def** %bnd_to, align 8, !dbg !9068
  %53 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9069
  %to97 = getelementptr inbounds %struct._bnd, %struct._bnd* %53, i32 0, i32 0, !dbg !9069
  store %struct.rtx_def* %52, %struct.rtx_def** %to97, align 8, !dbg !9070
  br label %if.end98, !dbg !9071

if.end98:                                         ; preds = %cond.end94, %if.end84
  %54 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9072
  %av = getelementptr inbounds %struct._bnd, %struct._bnd* %54, i32 0, i32 2, !dbg !9072
  call void @av_set_clear(%struct._list_node** %av), !dbg !9073
  %55 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9074
  %to99 = getelementptr inbounds %struct._bnd, %struct._bnd* %55, i32 0, i32 0, !dbg !9074
  %56 = load %struct.rtx_def*, %struct.rtx_def** %to99, align 8, !dbg !9074
  %call100 = call %struct._list_node* @compute_av_set(%struct.rtx_def* %56, %struct._list_node* null, i32 0, i8 zeroext 1), !dbg !9075
  %57 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9076
  %av101 = getelementptr inbounds %struct._bnd, %struct._bnd* %57, i32 0, i32 2, !dbg !9076
  store %struct._list_node* %call100, %struct._list_node** %av101, align 8, !dbg !9077
  %58 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9078
  %av1 = getelementptr inbounds %struct._bnd, %struct._bnd* %58, i32 0, i32 3, !dbg !9078
  call void @av_set_clear(%struct._list_node** %av1), !dbg !9079
  %59 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9080
  %av102 = getelementptr inbounds %struct._bnd, %struct._bnd* %59, i32 0, i32 2, !dbg !9080
  %60 = load %struct._list_node*, %struct._list_node** %av102, align 8, !dbg !9080
  %call103 = call %struct._list_node* @av_set_copy(%struct._list_node* %60), !dbg !9081
  %61 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9082
  %av1104 = getelementptr inbounds %struct._bnd, %struct._bnd* %61, i32 0, i32 3, !dbg !9082
  store %struct._list_node* %call103, %struct._list_node** %av1104, align 8, !dbg !9083
  %62 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9084
  %av1105 = getelementptr inbounds %struct._bnd, %struct._bnd* %62, i32 0, i32 3, !dbg !9084
  call void @moveup_set_inside_insn_group(%struct._list_node** %av1105, %struct._list_node* null), !dbg !9085
  %63 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9086
  %av1106 = getelementptr inbounds %struct._bnd, %struct._bnd* %63, i32 0, i32 3, !dbg !9086
  %64 = load %struct._list_node*, %struct._list_node** %av1106, align 8, !dbg !9086
  %call107 = call %struct._list_node* @av_set_copy(%struct._list_node* %64), !dbg !9087
  store %struct._list_node* %call107, %struct._list_node** %av1_copy, align 8, !dbg !9088
  %65 = load %struct._list_node**, %struct._list_node*** %av_vliw_p.addr, align 8, !dbg !9089
  call void @av_set_union_and_clear(%struct._list_node** %65, %struct._list_node** %av1_copy, %struct.rtx_def* null), !dbg !9090
  br label %for.inc, !dbg !9091

for.inc:                                          ; preds = %if.end98
  %66 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !9092
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %66, i32 0, i32 0, !dbg !9092
  %67 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !9092
  store %struct._list_node* %67, %struct._list_node** %bnds.addr, align 8, !dbg !9093
  br label %for.cond, !dbg !9094, !llvm.loop !9095

for.end:                                          ; preds = %for.cond
  %68 = load i32, i32* @sched_verbose, align 4, !dbg !9097
  %cmp108 = icmp sge i32 %68, 2, !dbg !9099
  br i1 %cmp108, label %if.then110, label %if.end149, !dbg !9100

if.then110:                                       ; preds = %for.end
  br label %do.body111, !dbg !9101

do.body111:                                       ; preds = %if.then110
  %69 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9103
  %tobool112 = icmp ne i8 %69, 0, !dbg !9103
  br i1 %tobool112, label %if.then113, label %if.else126, !dbg !9106

if.then113:                                       ; preds = %do.body111
  br label %do.body114, !dbg !9103

do.body114:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i32* %__j115, metadata !9107, metadata !DIExpression()), !dbg !9109
  %call116 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i64 0, i64 0)), !dbg !9109
  %mul117 = mul nsw i32 2, %call116, !dbg !9109
  %add118 = add nsw i32 1, %mul117, !dbg !9109
  store i32 %add118, i32* %__j115, align 4, !dbg !9109
  call void @llvm.dbg.declare(metadata i8** %__s119, metadata !9110, metadata !DIExpression()), !dbg !9109
  %70 = load i32, i32* %__j115, align 4, !dbg !9109
  %conv120 = sext i32 %70 to i64, !dbg !9109
  %mul121 = mul i64 1, %conv120, !dbg !9109
  %71 = alloca i8, i64 %mul121, align 16, !dbg !9109
  store i8* %71, i8** %__s119, align 8, !dbg !9109
  %72 = load i8*, i8** %__s119, align 8, !dbg !9109
  %73 = load i32, i32* %__j115, align 4, !dbg !9109
  %conv122 = sext i32 %73 to i64, !dbg !9109
  %call123 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %72, i64 %conv122, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i64 0, i64 0)), !dbg !9109
  %74 = load i8*, i8** %__s119, align 8, !dbg !9109
  call void @sel_prepare_string_for_dot_label(i8* %74), !dbg !9109
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9109
  %76 = load i8*, i8** %__s119, align 8, !dbg !9109
  %call124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %76), !dbg !9109
  br label %do.end125, !dbg !9109

do.end125:                                        ; preds = %do.body114
  br label %if.end128, !dbg !9109

if.else126:                                       ; preds = %do.body111
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9103
  %call127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i64 0, i64 0)), !dbg !9103
  br label %if.end128

if.end128:                                        ; preds = %if.else126, %do.end125
  br label %do.end129, !dbg !9106

do.end129:                                        ; preds = %if.end128
  %78 = load %struct._list_node**, %struct._list_node*** %av_vliw_p.addr, align 8, !dbg !9111
  %79 = load %struct._list_node*, %struct._list_node** %78, align 8, !dbg !9112
  call void @dump_av_set(%struct._list_node* %79), !dbg !9113
  br label %do.body130, !dbg !9114

do.body130:                                       ; preds = %do.end129
  %80 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9115
  %tobool131 = icmp ne i8 %80, 0, !dbg !9115
  br i1 %tobool131, label %if.then132, label %if.else145, !dbg !9118

if.then132:                                       ; preds = %do.body130
  br label %do.body133, !dbg !9115

do.body133:                                       ; preds = %if.then132
  call void @llvm.dbg.declare(metadata i32* %__j134, metadata !9119, metadata !DIExpression()), !dbg !9121
  %call135 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !9121
  %mul136 = mul nsw i32 2, %call135, !dbg !9121
  %add137 = add nsw i32 1, %mul136, !dbg !9121
  store i32 %add137, i32* %__j134, align 4, !dbg !9121
  call void @llvm.dbg.declare(metadata i8** %__s138, metadata !9122, metadata !DIExpression()), !dbg !9121
  %81 = load i32, i32* %__j134, align 4, !dbg !9121
  %conv139 = sext i32 %81 to i64, !dbg !9121
  %mul140 = mul i64 1, %conv139, !dbg !9121
  %82 = alloca i8, i64 %mul140, align 16, !dbg !9121
  store i8* %82, i8** %__s138, align 8, !dbg !9121
  %83 = load i8*, i8** %__s138, align 8, !dbg !9121
  %84 = load i32, i32* %__j134, align 4, !dbg !9121
  %conv141 = sext i32 %84 to i64, !dbg !9121
  %call142 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %83, i64 %conv141, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !9121
  %85 = load i8*, i8** %__s138, align 8, !dbg !9121
  call void @sel_prepare_string_for_dot_label(i8* %85), !dbg !9121
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9121
  %87 = load i8*, i8** %__s138, align 8, !dbg !9121
  %call143 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %87), !dbg !9121
  br label %do.end144, !dbg !9121

do.end144:                                        ; preds = %do.body133
  br label %if.end147, !dbg !9121

if.else145:                                       ; preds = %do.body130
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9115
  %call146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !9115
  br label %if.end147

if.end147:                                        ; preds = %if.else145, %do.end144
  br label %do.end148, !dbg !9118

do.end148:                                        ; preds = %if.end147
  br label %if.end149, !dbg !9123

if.end149:                                        ; preds = %do.end148, %for.end
  ret void, !dbg !9124
}

; Function Attrs: noinline nounwind uwtable
define internal void @remove_insns_that_need_bookkeeping(%struct._fence* %fence, %struct._list_node** %av_ptr) #0 !dbg !9125 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %av_ptr.addr = alloca %struct._list_node**, align 8
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !9128, metadata !DIExpression()), !dbg !9129
  store %struct._list_node** %av_ptr, %struct._list_node*** %av_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %av_ptr.addr, metadata !9130, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !9132, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %i, metadata !9134, metadata !DIExpression()), !dbg !9135
  %0 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !9136
  call void @_list_iter_start(%struct._list_iterator* %i, %struct._list_node** %0, i8 zeroext 1), !dbg !9136
  br label %for.cond, !dbg !9136

for.cond:                                         ; preds = %for.inc, %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i32 0, i32 0, !dbg !9138
  %1 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9138
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !9138
  %call = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %2, %struct._expr** %expr), !dbg !9138
  %tobool = icmp ne i8 %call, 0, !dbg !9136
  br i1 %tobool, label %for.body, label %for.end, !dbg !9136

for.body:                                         ; preds = %for.cond
  %3 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9140
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %3, i32 0, i32 0, !dbg !9140
  %4 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9140
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %4, i32 0, i32 0, !dbg !9140
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !9140
  %call1 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %5), !dbg !9143
  %tobool2 = icmp ne i8 %call1, 0, !dbg !9143
  br i1 %tobool2, label %if.end53, label %land.lhs.true, !dbg !9144

land.lhs.true:                                    ; preds = %for.body
  %6 = load i8, i8* @bookkeeping_p, align 1, !dbg !9145
  %tobool3 = icmp ne i8 %6, 0, !dbg !9145
  br i1 %tobool3, label %lor.lhs.false, label %land.lhs.true10, !dbg !9146

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9147
  %vinsn4 = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 0, !dbg !9147
  %8 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn4, align 8, !dbg !9147
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i32 0, i32 1, !dbg !9147
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !9147
  %9 = load i32, i32* %type, align 8, !dbg !9147
  %cmp = icmp eq i32 %9, 23, !dbg !9147
  br i1 %cmp, label %if.end53, label %lor.lhs.false5, !dbg !9147

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %10 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9147
  %vinsn6 = getelementptr inbounds %struct._expr, %struct._expr* %10, i32 0, i32 0, !dbg !9147
  %11 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn6, align 8, !dbg !9147
  %id7 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %11, i32 0, i32 1, !dbg !9147
  %type8 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id7, i32 0, i32 0, !dbg !9147
  %12 = load i32, i32* %type8, align 8, !dbg !9147
  %cmp9 = icmp eq i32 %12, 24, !dbg !9147
  br i1 %cmp9, label %if.end53, label %land.lhs.true10, !dbg !9148

land.lhs.true10:                                  ; preds = %lor.lhs.false5, %land.lhs.true
  %13 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9149
  %spec = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 1, !dbg !9149
  %14 = load i32, i32* %spec, align 8, !dbg !9149
  %tobool11 = icmp ne i32 %14, 0, !dbg !9149
  br i1 %tobool11, label %if.then, label %lor.lhs.false12, !dbg !9150

lor.lhs.false12:                                  ; preds = %land.lhs.true10
  %15 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9151
  %orig_bb_index = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 6, !dbg !9151
  %16 = load i32, i32* %orig_bb_index, align 4, !dbg !9151
  %tobool13 = icmp ne i32 %16, 0, !dbg !9151
  br i1 %tobool13, label %lor.lhs.false14, label %if.then, !dbg !9152

lor.lhs.false14:                                  ; preds = %lor.lhs.false12
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9153
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, !dbg !9153
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !9153
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9153
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i32 0, i32 2, !dbg !9153
  %19 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !9153
  %tobool15 = icmp ne %struct.VEC_basic_block_gc* %19, null, !dbg !9153
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !9153

cond.true:                                        ; preds = %lor.lhs.false14
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9153
  %add.ptr16 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, !dbg !9153
  %cfg17 = getelementptr inbounds %struct.function, %struct.function* %add.ptr16, i32 0, i32 1, !dbg !9153
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17, align 8, !dbg !9153
  %x_basic_block_info18 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i32 0, i32 2, !dbg !9153
  %22 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info18, align 8, !dbg !9153
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %22, i32 0, i32 0, !dbg !9153
  br label %cond.end, !dbg !9153

cond.false:                                       ; preds = %lor.lhs.false14
  br label %cond.end, !dbg !9153

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9153
  %23 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9153
  %orig_bb_index19 = getelementptr inbounds %struct._expr, %struct._expr* %23, i32 0, i32 6, !dbg !9153
  %24 = load i32, i32* %orig_bb_index19, align 4, !dbg !9153
  %call20 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %24), !dbg !9153
  %25 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9154
  %insn = getelementptr inbounds %struct._fence, %struct._fence* %25, i32 0, i32 0, !dbg !9154
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9154
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !9154
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9154
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !9154
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !9154
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !9154
  %call21 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call20, %struct.basic_block_def* %27), !dbg !9155
  %tobool22 = icmp ne i8 %call21, 0, !dbg !9155
  br i1 %tobool22, label %if.end53, label %if.then, !dbg !9156

if.then:                                          ; preds = %cond.end, %lor.lhs.false12, %land.lhs.true10
  %28 = load i32, i32* @sched_verbose, align 4, !dbg !9157
  %cmp23 = icmp sge i32 %28, 4, !dbg !9160
  br i1 %cmp23, label %if.then24, label %if.end52, !dbg !9161

if.then24:                                        ; preds = %if.then
  br label %do.body, !dbg !9162

do.body:                                          ; preds = %if.then24
  %29 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9163
  %tobool25 = icmp ne i8 %29, 0, !dbg !9163
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !9166

if.then26:                                        ; preds = %do.body
  br label %do.body27, !dbg !9163

do.body27:                                        ; preds = %if.then26
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !9167, metadata !DIExpression()), !dbg !9169
  %30 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9169
  %vinsn28 = getelementptr inbounds %struct._expr, %struct._expr* %30, i32 0, i32 0, !dbg !9169
  %31 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn28, align 8, !dbg !9169
  %insn_rtx29 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %31, i32 0, i32 0, !dbg !9169
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx29, align 8, !dbg !9169
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !9169
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !9169
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 0, !dbg !9169
  %rt_int = bitcast %union.rtunion_def* %arrayidx32 to i32*, !dbg !9169
  %33 = load i32, i32* %rt_int, align 8, !dbg !9169
  %call33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.45, i64 0, i64 0), i32 %33), !dbg !9169
  %mul = mul nsw i32 2, %call33, !dbg !9169
  %add = add nsw i32 1, %mul, !dbg !9169
  store i32 %add, i32* %__j, align 4, !dbg !9169
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !9170, metadata !DIExpression()), !dbg !9169
  %34 = load i32, i32* %__j, align 4, !dbg !9169
  %conv = sext i32 %34 to i64, !dbg !9169
  %mul34 = mul i64 1, %conv, !dbg !9169
  %35 = alloca i8, i64 %mul34, align 16, !dbg !9169
  store i8* %35, i8** %__s, align 8, !dbg !9169
  %36 = load i8*, i8** %__s, align 8, !dbg !9169
  %37 = load i32, i32* %__j, align 4, !dbg !9169
  %conv35 = sext i32 %37 to i64, !dbg !9169
  %38 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9169
  %vinsn36 = getelementptr inbounds %struct._expr, %struct._expr* %38, i32 0, i32 0, !dbg !9169
  %39 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn36, align 8, !dbg !9169
  %insn_rtx37 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %39, i32 0, i32 0, !dbg !9169
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx37, align 8, !dbg !9169
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !9169
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !9169
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 0, !dbg !9169
  %rt_int41 = bitcast %union.rtunion_def* %arrayidx40 to i32*, !dbg !9169
  %41 = load i32, i32* %rt_int41, align 8, !dbg !9169
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %36, i64 %conv35, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.45, i64 0, i64 0), i32 %41), !dbg !9169
  %42 = load i8*, i8** %__s, align 8, !dbg !9169
  call void @sel_prepare_string_for_dot_label(i8* %42), !dbg !9169
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9169
  %44 = load i8*, i8** %__s, align 8, !dbg !9169
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %44), !dbg !9169
  br label %do.end, !dbg !9169

do.end:                                           ; preds = %do.body27
  br label %if.end, !dbg !9169

if.else:                                          ; preds = %do.body
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9163
  %46 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9163
  %vinsn44 = getelementptr inbounds %struct._expr, %struct._expr* %46, i32 0, i32 0, !dbg !9163
  %47 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn44, align 8, !dbg !9163
  %insn_rtx45 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %47, i32 0, i32 0, !dbg !9163
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx45, align 8, !dbg !9163
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !9163
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !9163
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !9163
  %rt_int49 = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !9163
  %49 = load i32, i32* %rt_int49, align 8, !dbg !9163
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.45, i64 0, i64 0), i32 %49), !dbg !9163
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end51, !dbg !9166

do.end51:                                         ; preds = %if.end
  br label %if.end52, !dbg !9166

if.end52:                                         ; preds = %do.end51, %if.then
  call void @av_set_iter_remove(%struct._list_iterator* %i), !dbg !9171
  br label %if.end53, !dbg !9172

if.end53:                                         ; preds = %if.end52, %cond.end, %lor.lhs.false5, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !9173

for.inc:                                          ; preds = %if.end53
  call void @_list_iter_next(%struct._list_iterator* %i), !dbg !9138
  br label %for.cond, !dbg !9138, !llvm.loop !9174

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9176
}

; Function Attrs: noinline nounwind uwtable
define internal void @remove_insns_for_debug(%struct._list_node* %bnds, %struct._list_node** %av_vliw_p) #0 !dbg !9177 {
entry:
  %bnds.addr = alloca %struct._list_node*, align 8
  %av_vliw_p.addr = alloca %struct._list_node**, align 8
  %av_it = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  %bnd = alloca %struct._bnd*, align 8
  %next = alloca %struct.rtx_def*, align 8
  store %struct._list_node* %bnds, %struct._list_node** %bnds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %bnds.addr, metadata !9180, metadata !DIExpression()), !dbg !9181
  store %struct._list_node** %av_vliw_p, %struct._list_node*** %av_vliw_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %av_vliw_p.addr, metadata !9182, metadata !DIExpression()), !dbg !9183
  %call = call zeroext i8 @dbg_cnt(i32 33), !dbg !9184
  %tobool = icmp ne i8 %call, 0, !dbg !9184
  br i1 %tobool, label %if.end7, label %if.then, !dbg !9186

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %av_it, metadata !9187, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !9190, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.declare(metadata %struct._bnd** %bnd, metadata !9192, metadata !DIExpression()), !dbg !9193
  %0 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !9194
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i32 0, i32 1, !dbg !9194
  %bnd1 = bitcast %union.anon.0* %u to %struct._bnd*, !dbg !9194
  store %struct._bnd* %bnd1, %struct._bnd** %bnd, align 8, !dbg !9193
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !9195, metadata !DIExpression()), !dbg !9196
  %1 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !9197
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %1, i32 0, i32 0, !dbg !9197
  %2 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !9197
  store %struct.rtx_def* %2, %struct.rtx_def** %next, align 8, !dbg !9196
  %3 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !9198
  %next2 = getelementptr inbounds %struct._list_node, %struct._list_node* %3, i32 0, i32 0, !dbg !9198
  %4 = load %struct._list_node*, %struct._list_node** %next2, align 8, !dbg !9198
  %cmp = icmp eq %struct._list_node* %4, null, !dbg !9198
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !9198

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4999, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9198
  br label %cond.end, !dbg !9198

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !9198

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9198
  %5 = load %struct._list_node**, %struct._list_node*** %av_vliw_p.addr, align 8, !dbg !9199
  call void @_list_iter_start(%struct._list_iterator* %av_it, %struct._list_node** %5, i8 zeroext 1), !dbg !9199
  br label %for.cond, !dbg !9199

for.cond:                                         ; preds = %for.inc, %cond.end
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %av_it, i32 0, i32 0, !dbg !9201
  %6 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !9201
  %7 = load %struct._list_node*, %struct._list_node** %6, align 8, !dbg !9201
  %call3 = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %7, %struct._expr** %expr), !dbg !9201
  %tobool4 = icmp ne i8 %call3, 0, !dbg !9199
  br i1 %tobool4, label %for.body, label %for.end, !dbg !9199

for.body:                                         ; preds = %for.cond
  %8 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9203
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %8, i32 0, i32 0, !dbg !9203
  %9 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9203
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %9, i32 0, i32 0, !dbg !9203
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !9203
  %11 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !9205
  %cmp5 = icmp ne %struct.rtx_def* %10, %11, !dbg !9206
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !9207

if.then6:                                         ; preds = %for.body
  call void @av_set_iter_remove(%struct._list_iterator* %av_it), !dbg !9208
  br label %if.end, !dbg !9208

if.end:                                           ; preds = %if.then6, %for.body
  br label %for.inc, !dbg !9205

for.inc:                                          ; preds = %if.end
  call void @_list_iter_next(%struct._list_iterator* %av_it), !dbg !9201
  br label %for.cond, !dbg !9201, !llvm.loop !9209

for.end:                                          ; preds = %for.cond
  br label %if.end7, !dbg !9211

if.end7:                                          ; preds = %for.end, %entry
  ret void, !dbg !9212
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._expr* @find_best_expr(%struct._list_node** %av_vliw_ptr, %struct._list_node* %bnds, %struct._fence* %fence, i32* %pneed_stall) #0 !dbg !9213 {
entry:
  %av_vliw_ptr.addr = alloca %struct._list_node**, align 8
  %bnds.addr = alloca %struct._list_node*, align 8
  %fence.addr = alloca %struct._fence*, align 8
  %pneed_stall.addr = alloca i32*, align 8
  %best = alloca %struct._expr*, align 8
  %privileged_n = alloca i32, align 4
  %index = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j41 = alloca i32, align 4
  %__s45 = alloca i8*, align 8
  %__j63 = alloca i32, align 4
  %__s67 = alloca i8*, align 8
  store %struct._list_node** %av_vliw_ptr, %struct._list_node*** %av_vliw_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %av_vliw_ptr.addr, metadata !9216, metadata !DIExpression()), !dbg !9217
  store %struct._list_node* %bnds, %struct._list_node** %bnds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %bnds.addr, metadata !9218, metadata !DIExpression()), !dbg !9219
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !9220, metadata !DIExpression()), !dbg !9221
  store i32* %pneed_stall, i32** %pneed_stall.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pneed_stall.addr, metadata !9222, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.declare(metadata %struct._expr** %best, metadata !9224, metadata !DIExpression()), !dbg !9225
  %0 = load %struct._list_node**, %struct._list_node*** %av_vliw_ptr.addr, align 8, !dbg !9226
  %1 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !9227
  %2 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9228
  %3 = load i32*, i32** %pneed_stall.addr, align 8, !dbg !9229
  %call = call %struct._expr* @fill_ready_list(%struct._list_node** %0, %struct._list_node* %1, %struct._fence* %2, i32* %3), !dbg !9230
  store %struct._expr* %call, %struct._expr** %best, align 8, !dbg !9231
  %4 = load %struct._expr*, %struct._expr** %best, align 8, !dbg !9232
  %cmp = icmp eq %struct._expr* %4, null, !dbg !9234
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !9235

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9236
  %cmp1 = icmp sgt i32 %5, 0, !dbg !9237
  br i1 %cmp1, label %if.then, label %if.end14, !dbg !9238

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %privileged_n, metadata !9239, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9242, metadata !DIExpression()), !dbg !9243
  %6 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9244
  %call2 = call i32 @invoke_reorder_hooks(%struct._fence* %6), !dbg !9245
  store i32 %call2, i32* @can_issue_more, align 4, !dbg !9246
  %7 = load i32, i32* @can_issue_more, align 4, !dbg !9247
  %cmp3 = icmp sgt i32 %7, 0, !dbg !9249
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !9250

if.then4:                                         ; preds = %if.then
  %call5 = call i32 @invoke_dfa_lookahead_guard(), !dbg !9251
  %call6 = call i32 @calculate_privileged_insns(), !dbg !9253
  store i32 %call6, i32* %privileged_n, align 4, !dbg !9254
  %8 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9255
  %9 = load i32, i32* %privileged_n, align 4, !dbg !9256
  %call7 = call i32 @choose_best_insn(%struct._fence* %8, i32 %9, i32* %index), !dbg !9257
  store i32 %call7, i32* @can_issue_more, align 4, !dbg !9258
  %10 = load i32, i32* @can_issue_more, align 4, !dbg !9259
  %tobool = icmp ne i32 %10, 0, !dbg !9259
  br i1 %tobool, label %if.then8, label %if.end, !dbg !9261

if.then8:                                         ; preds = %if.then4
  %11 = load i32, i32* %index, align 4, !dbg !9262
  %call9 = call %struct._expr* @find_expr_for_ready(i32 %11, i8 zeroext 1), !dbg !9263
  store %struct._expr* %call9, %struct._expr** %best, align 8, !dbg !9264
  br label %if.end, !dbg !9265

if.end:                                           ; preds = %if.then8, %if.then4
  br label %if.end10, !dbg !9266

if.end10:                                         ; preds = %if.end, %if.then
  %12 = load i32, i32* @can_issue_more, align 4, !dbg !9267
  %cmp11 = icmp eq i32 %12, 0, !dbg !9269
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !9270

if.then12:                                        ; preds = %if.end10
  store %struct._expr* null, %struct._expr** %best, align 8, !dbg !9271
  %13 = load i32*, i32** %pneed_stall.addr, align 8, !dbg !9273
  store i32 1, i32* %13, align 4, !dbg !9274
  br label %if.end13, !dbg !9275

if.end13:                                         ; preds = %if.then12, %if.end10
  br label %if.end14, !dbg !9276

if.end14:                                         ; preds = %if.end13, %land.lhs.true, %entry
  %14 = load %struct._expr*, %struct._expr** %best, align 8, !dbg !9277
  %cmp15 = icmp ne %struct._expr* %14, null, !dbg !9279
  br i1 %cmp15, label %if.then16, label %if.end21, !dbg !9280

if.then16:                                        ; preds = %if.end14
  %15 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9281
  %16 = load %struct._expr*, %struct._expr** %best, align 8, !dbg !9283
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %16, i32 0, i32 0, !dbg !9283
  %17 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9283
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %17, i32 0, i32 0, !dbg !9283
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !9283
  %19 = load i32, i32* @can_issue_more, align 4, !dbg !9284
  %call17 = call i32 @invoke_aftermath_hooks(%struct._fence* %15, %struct.rtx_def* %18, i32 %19), !dbg !9285
  store i32 %call17, i32* @can_issue_more, align 4, !dbg !9286
  %20 = load i32, i32* @can_issue_more, align 4, !dbg !9287
  %cmp18 = icmp eq i32 %20, 0, !dbg !9289
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !9290

if.then19:                                        ; preds = %if.then16
  %21 = load i32*, i32** %pneed_stall.addr, align 8, !dbg !9291
  store i32 1, i32* %21, align 4, !dbg !9292
  br label %if.end20, !dbg !9293

if.end20:                                         ; preds = %if.then19, %if.then16
  br label %if.end21, !dbg !9294

if.end21:                                         ; preds = %if.end20, %if.end14
  %22 = load i32, i32* @sched_verbose, align 4, !dbg !9295
  %cmp22 = icmp sge i32 %22, 2, !dbg !9297
  br i1 %cmp22, label %if.then23, label %if.end79, !dbg !9298

if.then23:                                        ; preds = %if.end21
  %23 = load %struct._expr*, %struct._expr** %best, align 8, !dbg !9299
  %cmp24 = icmp ne %struct._expr* %23, null, !dbg !9302
  br i1 %cmp24, label %if.then25, label %if.else58, !dbg !9303

if.then25:                                        ; preds = %if.then23
  br label %do.body, !dbg !9304

do.body:                                          ; preds = %if.then25
  %24 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9306
  %tobool26 = icmp ne i8 %24, 0, !dbg !9306
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !9309

if.then27:                                        ; preds = %do.body
  br label %do.body28, !dbg !9306

do.body28:                                        ; preds = %if.then27
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !9310, metadata !DIExpression()), !dbg !9312
  %call29 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0)), !dbg !9312
  %mul = mul nsw i32 2, %call29, !dbg !9312
  %add = add nsw i32 1, %mul, !dbg !9312
  store i32 %add, i32* %__j, align 4, !dbg !9312
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !9313, metadata !DIExpression()), !dbg !9312
  %25 = load i32, i32* %__j, align 4, !dbg !9312
  %conv = sext i32 %25 to i64, !dbg !9312
  %mul30 = mul i64 1, %conv, !dbg !9312
  %26 = alloca i8, i64 %mul30, align 16, !dbg !9312
  store i8* %26, i8** %__s, align 8, !dbg !9312
  %27 = load i8*, i8** %__s, align 8, !dbg !9312
  %28 = load i32, i32* %__j, align 4, !dbg !9312
  %conv31 = sext i32 %28 to i64, !dbg !9312
  %call32 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %27, i64 %conv31, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0)), !dbg !9312
  %29 = load i8*, i8** %__s, align 8, !dbg !9312
  call void @sel_prepare_string_for_dot_label(i8* %29), !dbg !9312
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9312
  %31 = load i8*, i8** %__s, align 8, !dbg !9312
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %31), !dbg !9312
  br label %do.end, !dbg !9312

do.end:                                           ; preds = %do.body28
  br label %if.end35, !dbg !9312

if.else:                                          ; preds = %do.body
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9306
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0)), !dbg !9306
  br label %if.end35

if.end35:                                         ; preds = %if.else, %do.end
  br label %do.end36, !dbg !9309

do.end36:                                         ; preds = %if.end35
  %33 = load %struct._expr*, %struct._expr** %best, align 8, !dbg !9314
  call void @dump_expr(%struct._expr* %33), !dbg !9315
  br label %do.body37, !dbg !9316

do.body37:                                        ; preds = %do.end36
  %34 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9317
  %tobool38 = icmp ne i8 %34, 0, !dbg !9317
  br i1 %tobool38, label %if.then39, label %if.else53, !dbg !9320

if.then39:                                        ; preds = %do.body37
  br label %do.body40, !dbg !9317

do.body40:                                        ; preds = %if.then39
  call void @llvm.dbg.declare(metadata i32* %__j41, metadata !9321, metadata !DIExpression()), !dbg !9323
  %35 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9323
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %35, i32 0, i32 2, !dbg !9323
  %36 = load i32, i32* %cycle, align 8, !dbg !9323
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), i32 %36), !dbg !9323
  %mul43 = mul nsw i32 2, %call42, !dbg !9323
  %add44 = add nsw i32 1, %mul43, !dbg !9323
  store i32 %add44, i32* %__j41, align 4, !dbg !9323
  call void @llvm.dbg.declare(metadata i8** %__s45, metadata !9324, metadata !DIExpression()), !dbg !9323
  %37 = load i32, i32* %__j41, align 4, !dbg !9323
  %conv46 = sext i32 %37 to i64, !dbg !9323
  %mul47 = mul i64 1, %conv46, !dbg !9323
  %38 = alloca i8, i64 %mul47, align 16, !dbg !9323
  store i8* %38, i8** %__s45, align 8, !dbg !9323
  %39 = load i8*, i8** %__s45, align 8, !dbg !9323
  %40 = load i32, i32* %__j41, align 4, !dbg !9323
  %conv48 = sext i32 %40 to i64, !dbg !9323
  %41 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9323
  %cycle49 = getelementptr inbounds %struct._fence, %struct._fence* %41, i32 0, i32 2, !dbg !9323
  %42 = load i32, i32* %cycle49, align 8, !dbg !9323
  %call50 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %39, i64 %conv48, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), i32 %42), !dbg !9323
  %43 = load i8*, i8** %__s45, align 8, !dbg !9323
  call void @sel_prepare_string_for_dot_label(i8* %43), !dbg !9323
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9323
  %45 = load i8*, i8** %__s45, align 8, !dbg !9323
  %call51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %45), !dbg !9323
  br label %do.end52, !dbg !9323

do.end52:                                         ; preds = %do.body40
  br label %if.end56, !dbg !9323

if.else53:                                        ; preds = %do.body37
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9317
  %47 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9317
  %cycle54 = getelementptr inbounds %struct._fence, %struct._fence* %47, i32 0, i32 2, !dbg !9317
  %48 = load i32, i32* %cycle54, align 8, !dbg !9317
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), i32 %48), !dbg !9317
  br label %if.end56

if.end56:                                         ; preds = %if.else53, %do.end52
  br label %do.end57, !dbg !9320

do.end57:                                         ; preds = %if.end56
  br label %if.end78, !dbg !9325

if.else58:                                        ; preds = %if.then23
  br label %do.body59, !dbg !9326

do.body59:                                        ; preds = %if.else58
  %49 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9327
  %tobool60 = icmp ne i8 %49, 0, !dbg !9327
  br i1 %tobool60, label %if.then61, label %if.else74, !dbg !9330

if.then61:                                        ; preds = %do.body59
  br label %do.body62, !dbg !9327

do.body62:                                        ; preds = %if.then61
  call void @llvm.dbg.declare(metadata i32* %__j63, metadata !9331, metadata !DIExpression()), !dbg !9333
  %call64 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i64 0, i64 0)), !dbg !9333
  %mul65 = mul nsw i32 2, %call64, !dbg !9333
  %add66 = add nsw i32 1, %mul65, !dbg !9333
  store i32 %add66, i32* %__j63, align 4, !dbg !9333
  call void @llvm.dbg.declare(metadata i8** %__s67, metadata !9334, metadata !DIExpression()), !dbg !9333
  %50 = load i32, i32* %__j63, align 4, !dbg !9333
  %conv68 = sext i32 %50 to i64, !dbg !9333
  %mul69 = mul i64 1, %conv68, !dbg !9333
  %51 = alloca i8, i64 %mul69, align 16, !dbg !9333
  store i8* %51, i8** %__s67, align 8, !dbg !9333
  %52 = load i8*, i8** %__s67, align 8, !dbg !9333
  %53 = load i32, i32* %__j63, align 4, !dbg !9333
  %conv70 = sext i32 %53 to i64, !dbg !9333
  %call71 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %52, i64 %conv70, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i64 0, i64 0)), !dbg !9333
  %54 = load i8*, i8** %__s67, align 8, !dbg !9333
  call void @sel_prepare_string_for_dot_label(i8* %54), !dbg !9333
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9333
  %56 = load i8*, i8** %__s67, align 8, !dbg !9333
  %call72 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %56), !dbg !9333
  br label %do.end73, !dbg !9333

do.end73:                                         ; preds = %do.body62
  br label %if.end76, !dbg !9333

if.else74:                                        ; preds = %do.body59
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9327
  %call75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i64 0, i64 0)), !dbg !9327
  br label %if.end76

if.end76:                                         ; preds = %if.else74, %do.end73
  br label %do.end77, !dbg !9330

do.end77:                                         ; preds = %if.end76
  br label %if.end78

if.end78:                                         ; preds = %do.end77, %do.end57
  br label %if.end79, !dbg !9335

if.end79:                                         ; preds = %if.end78, %if.end21
  %58 = load %struct._expr*, %struct._expr** %best, align 8, !dbg !9336
  ret %struct._expr* %58, !dbg !9337
}

; Function Attrs: noinline nounwind uwtable
define internal void @stall_for_cycles(%struct._fence* %fence, i32 %n) #0 !dbg !9338 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %n.addr = alloca i32, align 4
  %could_more = alloca i32, align 4
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !9341, metadata !DIExpression()), !dbg !9342
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9343, metadata !DIExpression()), !dbg !9344
  call void @llvm.dbg.declare(metadata i32* %could_more, metadata !9345, metadata !DIExpression()), !dbg !9346
  %0 = load i32, i32* %n.addr, align 4, !dbg !9347
  %cmp = icmp sgt i32 %0, 1, !dbg !9348
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9349

lor.rhs:                                          ; preds = %entry
  %1 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9350
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %1, i32 0, i32 3, !dbg !9350
  %2 = load i32, i32* %cycle_issued_insns, align 4, !dbg !9350
  %3 = load i32, i32* @issue_rate, align 4, !dbg !9351
  %cmp1 = icmp slt i32 %2, %3, !dbg !9352
  br label %lor.end, !dbg !9349

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !9349
  store i32 %lor.ext, i32* %could_more, align 4, !dbg !9353
  br label %while.cond, !dbg !9354

while.cond:                                       ; preds = %while.body, %lor.end
  %5 = load i32, i32* %n.addr, align 4, !dbg !9355
  %dec = add nsw i32 %5, -1, !dbg !9355
  store i32 %dec, i32* %n.addr, align 4, !dbg !9355
  %tobool = icmp ne i32 %5, 0, !dbg !9354
  br i1 %tobool, label %while.body, label %while.end, !dbg !9354

while.body:                                       ; preds = %while.cond
  %6 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9356
  call void @advance_one_cycle(%struct._fence* %6), !dbg !9357
  br label %while.cond, !dbg !9354, !llvm.loop !9358

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %could_more, align 4, !dbg !9360
  %tobool2 = icmp ne i32 %7, 0, !dbg !9360
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9362

if.then:                                          ; preds = %while.end
  %8 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9363
  %after_stall_p = getelementptr inbounds %struct._fence, %struct._fence* %8, i32 0, i32 13, !dbg !9363
  %bf.load = load i8, i8* %after_stall_p, align 8, !dbg !9364
  %bf.clear = and i8 %bf.load, -9, !dbg !9364
  %bf.set = or i8 %bf.clear, 8, !dbg !9364
  store i8 %bf.set, i8* %after_stall_p, align 8, !dbg !9364
  br label %if.end, !dbg !9363

if.end:                                           ; preds = %if.then, %while.end
  ret void, !dbg !9365
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @schedule_expr_on_boundary(%struct._bnd* %bnd, %struct._expr* %expr_vliw, i32 %seqno) #0 !dbg !9366 {
entry:
  %bnd.addr = alloca %struct._bnd*, align 8
  %expr_vliw.addr = alloca %struct._expr*, align 8
  %seqno.addr = alloca i32, align 4
  %expr_seq = alloca %struct._list_node*, align 8
  %c_expr = alloca %struct._expr*, align 8
  %place_to_insert = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %should_move = alloca i8, align 1
  %vinsn_new = alloca %struct.vinsn_def*, align 8
  store %struct._bnd* %bnd, %struct._bnd** %bnd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._bnd** %bnd.addr, metadata !9369, metadata !DIExpression()), !dbg !9370
  store %struct._expr* %expr_vliw, %struct._expr** %expr_vliw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr_vliw.addr, metadata !9371, metadata !DIExpression()), !dbg !9372
  store i32 %seqno, i32* %seqno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seqno.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.declare(metadata %struct._list_node** %expr_seq, metadata !9375, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.declare(metadata %struct._expr** %c_expr, metadata !9377, metadata !DIExpression()), !dbg !9378
  %0 = alloca i8, i64 64, align 16, !dbg !9379
  %1 = bitcast i8* %0 to %struct._expr*, !dbg !9379
  store %struct._expr* %1, %struct._expr** %c_expr, align 8, !dbg !9378
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %place_to_insert, metadata !9380, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !9382, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.declare(metadata i8* %should_move, metadata !9384, metadata !DIExpression()), !dbg !9385
  %2 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !9386
  %3 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9387
  %call = call %struct._list_node* @find_sequential_best_exprs(%struct._bnd* %2, %struct._expr* %3, i8 zeroext 1), !dbg !9388
  store %struct._list_node* %call, %struct._list_node** %expr_seq, align 8, !dbg !9389
  %4 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9390
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i32 0, i32 0, !dbg !9390
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9390
  %call1 = call zeroext i8 @vinsn_cond_branch_p(%struct.vinsn_def* %5), !dbg !9392
  %tobool = icmp ne i8 %call1, 0, !dbg !9392
  br i1 %tobool, label %if.then, label %if.end6, !dbg !9393

if.then:                                          ; preds = %entry
  %6 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9394
  %vinsn2 = getelementptr inbounds %struct._expr, %struct._expr* %6, i32 0, i32 0, !dbg !9394
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn2, align 8, !dbg !9394
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i32 0, i32 0, !dbg !9394
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !9394
  store %struct.rtx_def* %8, %struct.rtx_def** %insn, align 8, !dbg !9396
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9397
  %10 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !9399
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %10, i32 0, i32 0, !dbg !9399
  %11 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !9399
  %cmp = icmp ne %struct.rtx_def* %9, %11, !dbg !9400
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9401

land.lhs.true:                                    ; preds = %if.then
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9402
  %call3 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %12), !dbg !9403
  %tobool4 = icmp ne i8 %call3, 0, !dbg !9403
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !9404

if.then5:                                         ; preds = %land.lhs.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9405
  %14 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !9406
  call void @move_cond_jump(%struct.rtx_def* %13, %struct._bnd* %14), !dbg !9407
  br label %if.end, !dbg !9407

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !9408

if.end6:                                          ; preds = %if.end, %entry
  %15 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !9409
  %call7 = call %struct.rtx_def* @prepare_place_to_insert(%struct._bnd* %15), !dbg !9410
  store %struct.rtx_def* %call7, %struct.rtx_def** %place_to_insert, align 8, !dbg !9411
  %16 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !9412
  %17 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9413
  %18 = load %struct._list_node*, %struct._list_node** %expr_seq, align 8, !dbg !9414
  %19 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !9415
  %call8 = call zeroext i8 @move_exprs_to_boundary(%struct._bnd* %16, %struct._expr* %17, %struct._list_node* %18, %struct._expr* %19), !dbg !9416
  store i8 %call8, i8* %should_move, align 1, !dbg !9417
  %20 = load %struct._expr*, %struct._expr** %c_expr, align 8, !dbg !9418
  call void @clear_expr(%struct._expr* %20), !dbg !9419
  %21 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9420
  %vinsn9 = getelementptr inbounds %struct._expr, %struct._expr* %21, i32 0, i32 0, !dbg !9420
  %22 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn9, align 8, !dbg !9420
  %insn_rtx10 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %22, i32 0, i32 0, !dbg !9420
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx10, align 8, !dbg !9420
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !9420
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9420
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !9420
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9420
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9420
  %tobool11 = icmp ne %struct.rtx_def* %24, null, !dbg !9420
  br i1 %tobool11, label %land.lhs.true12, label %if.end23, !dbg !9420

land.lhs.true12:                                  ; preds = %if.end6
  %25 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9420
  %vinsn13 = getelementptr inbounds %struct._expr, %struct._expr* %25, i32 0, i32 0, !dbg !9420
  %26 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn13, align 8, !dbg !9420
  %insn_rtx14 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %26, i32 0, i32 0, !dbg !9420
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx14, align 8, !dbg !9420
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !9420
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !9420
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 2, !dbg !9420
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !9420
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !9420
  %tobool19 = icmp ne %struct.rtx_def* %28, null, !dbg !9420
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !9422

if.then20:                                        ; preds = %land.lhs.true12
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vinsn_new, metadata !9423, metadata !DIExpression()), !dbg !9425
  %29 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9426
  %vinsn21 = getelementptr inbounds %struct._expr, %struct._expr* %29, i32 0, i32 0, !dbg !9426
  %30 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn21, align 8, !dbg !9426
  %call22 = call %struct.vinsn_def* @vinsn_copy(%struct.vinsn_def* %30, i8 zeroext 0), !dbg !9427
  store %struct.vinsn_def* %call22, %struct.vinsn_def** %vinsn_new, align 8, !dbg !9428
  %31 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9429
  %32 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn_new, align 8, !dbg !9430
  call void @change_vinsn_in_expr(%struct._expr* %31, %struct.vinsn_def* %32), !dbg !9431
  store i8 0, i8* %should_move, align 1, !dbg !9432
  br label %if.end23, !dbg !9433

if.end23:                                         ; preds = %if.then20, %land.lhs.true12, %if.end6
  %33 = load i8, i8* %should_move, align 1, !dbg !9434
  %tobool24 = icmp ne i8 %33, 0, !dbg !9434
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !9436

if.then25:                                        ; preds = %if.end23
  %34 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9437
  %35 = load i32, i32* %seqno.addr, align 4, !dbg !9438
  %36 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !9439
  %call26 = call %struct.rtx_def* @sel_move_insn(%struct._expr* %34, i32 %35, %struct.rtx_def* %36), !dbg !9440
  store %struct.rtx_def* %call26, %struct.rtx_def** %insn, align 8, !dbg !9441
  br label %if.end28, !dbg !9442

if.else:                                          ; preds = %if.end23
  %37 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9443
  %38 = load i32, i32* %seqno.addr, align 4, !dbg !9444
  %39 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !9445
  %call27 = call %struct.rtx_def* @emit_insn_from_expr_after(%struct._expr* %37, %struct.vinsn_def* null, i32 %38, %struct.rtx_def* %39), !dbg !9446
  store %struct.rtx_def* %call27, %struct.rtx_def** %insn, align 8, !dbg !9447
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  %40 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !9448
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !9448
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !9448
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 5, !dbg !9448
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !9448
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !9448
  %42 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !9448
  %cmp33 = icmp eq %struct.rtx_def* %41, %42, !dbg !9448
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !9450

if.then34:                                        ; preds = %if.end28
  %43 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !9451
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9452
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !9452
  %bf.load = load i32, i32* %45, align 8, !dbg !9452
  %bf.clear = and i32 %bf.load, 65535, !dbg !9452
  %cmp35 = icmp eq i32 %bf.clear, 7, !dbg !9452
  %lnot = xor i1 %cmp35, true, !dbg !9453
  %lnot.ext = zext i1 %lnot to i32, !dbg !9453
  %conv = trunc i32 %lnot.ext to i8, !dbg !9453
  call void @return_nop_to_pool(%struct.rtx_def* %43, i8 zeroext %conv), !dbg !9454
  br label %if.end36, !dbg !9454

if.end36:                                         ; preds = %if.then34, %if.end28
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9455
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !9455
  %bf.load37 = load i32, i32* %47, align 8, !dbg !9455
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !9455
  %cmp39 = icmp eq i32 %bf.clear38, 7, !dbg !9455
  %lnot41 = xor i1 %cmp39, true, !dbg !9456
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !9456
  %conv43 = trunc i32 %lnot.ext42 to i8, !dbg !9456
  call void @remove_temp_moveop_nops(i8 zeroext %conv43), !dbg !9457
  call void @av_set_clear(%struct._list_node** %expr_seq), !dbg !9458
  %48 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !9459
  %was_renamed = getelementptr inbounds %struct._expr, %struct._expr* %48, i32 0, i32 12, !dbg !9459
  %bf.load44 = load i8, i8* %was_renamed, align 1, !dbg !9459
  %bf.lshr = lshr i8 %bf.load44, 2, !dbg !9459
  %bf.clear45 = and i8 %bf.lshr, 1, !dbg !9459
  %bf.cast = zext i8 %bf.clear45 to i32, !dbg !9459
  %tobool46 = icmp ne i32 %bf.cast, 0, !dbg !9459
  br i1 %tobool46, label %if.then47, label %if.end60, !dbg !9461

if.then47:                                        ; preds = %if.end36
  %49 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9462
  %tobool48 = icmp ne %struct.VEC_sel_insn_data_def_heap* %49, null, !dbg !9462
  br i1 %tobool48, label %cond.true, label %cond.false, !dbg !9462

cond.true:                                        ; preds = %if.then47
  %50 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9462
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %50, i32 0, i32 0, !dbg !9462
  br label %cond.end, !dbg !9462

cond.false:                                       ; preds = %if.then47
  br label %cond.end, !dbg !9462

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9462
  %51 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9462
  %tobool49 = icmp ne %struct.VEC_int_heap* %51, null, !dbg !9462
  br i1 %tobool49, label %cond.true50, label %cond.false52, !dbg !9462

cond.true50:                                      ; preds = %cond.end
  %52 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9462
  %base51 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %52, i32 0, i32 0, !dbg !9462
  br label %cond.end53, !dbg !9462

cond.false52:                                     ; preds = %cond.end
  br label %cond.end53, !dbg !9462

cond.end53:                                       ; preds = %cond.false52, %cond.true50
  %cond54 = phi %struct.VEC_int_base* [ %base51, %cond.true50 ], [ null, %cond.false52 ], !dbg !9462
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9462
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !9462
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !9462
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 0, !dbg !9462
  %rt_int = bitcast %union.rtunion_def* %arrayidx57 to i32*, !dbg !9462
  %54 = load i32, i32* %rt_int, align 8, !dbg !9462
  %call58 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond54, i32 %54), !dbg !9462
  %call59 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call58), !dbg !9462
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call59, i32 0, i32 0, !dbg !9462
  call void @vinsn_vec_add(%struct.VEC_vinsn_t_heap** @vec_target_unavailable_vinsns, %struct._expr* %expr), !dbg !9463
  br label %if.end60, !dbg !9463

if.end60:                                         ; preds = %cond.end53, %if.end36
  %55 = load i8, i8* @pipelining_p, align 1, !dbg !9464
  %tobool61 = icmp ne i8 %55, 0, !dbg !9464
  br i1 %tobool61, label %lor.lhs.false, label %cond.false68, !dbg !9464

lor.lhs.false:                                    ; preds = %if.end60
  %56 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !9464
  %cmp62 = icmp eq %struct.loop* %56, null, !dbg !9464
  br i1 %cmp62, label %cond.false68, label %lor.lhs.false64, !dbg !9464

lor.lhs.false64:                                  ; preds = %lor.lhs.false
  %57 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !9464
  %call65 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %57), !dbg !9464
  %tobool66 = icmp ne %struct.edge_def* %call65, null, !dbg !9464
  br i1 %tobool66, label %cond.false68, label %cond.true67, !dbg !9464

cond.true67:                                      ; preds = %lor.lhs.false64
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5462, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9464
  br label %cond.end69, !dbg !9464

cond.false68:                                     ; preds = %lor.lhs.false64, %lor.lhs.false, %if.end60
  br label %cond.end69, !dbg !9464

cond.end69:                                       ; preds = %cond.false68, %cond.true67
  %cond70 = phi i32 [ 0, %cond.true67 ], [ 0, %cond.false68 ], !dbg !9464
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9465
  ret %struct.rtx_def* %58, !dbg !9466
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_fence_and_insn(%struct._fence* %fence, %struct.rtx_def* %insn, i32 %need_stall) #0 !dbg !9467 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %need_stall.addr = alloca i32, align 4
  %asm_p = alloca i8, align 1
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j204 = alloca i32, align 4
  %__s208 = alloca i8*, align 8
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !9470, metadata !DIExpression()), !dbg !9471
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9472, metadata !DIExpression()), !dbg !9473
  store i32 %need_stall, i32* %need_stall.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %need_stall.addr, metadata !9474, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.declare(metadata i8* %asm_p, metadata !9476, metadata !DIExpression()), !dbg !9477
  %0 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9478
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9479
  %call = call zeroext i8 @advance_state_on_fence(%struct._fence* %0, %struct.rtx_def* %1), !dbg !9480
  store i8 %call, i8* %asm_p, align 1, !dbg !9481
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9482
  %3 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9483
  %last_scheduled_insn = getelementptr inbounds %struct._fence, %struct._fence* %3, i32 0, i32 10, !dbg !9483
  store %struct.rtx_def* %2, %struct.rtx_def** %last_scheduled_insn, align 8, !dbg !9484
  %4 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9485
  %executing_insns = getelementptr inbounds %struct._fence, %struct._fence* %4, i32 0, i32 7, !dbg !9485
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9485
  %call1 = call %struct.rtx_def** @VEC_rtx_gc_safe_push(%struct.VEC_rtx_gc** %executing_insns, %struct.rtx_def* %5), !dbg !9485
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9486
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !9486
  %bf.load = load i32, i32* %7, align 8, !dbg !9486
  %bf.lshr = lshr i32 %bf.load, 28, !dbg !9486
  %bf.clear = and i32 %bf.lshr, 1, !dbg !9486
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !9486
  br i1 %tobool, label %if.then, label %if.else, !dbg !9488

if.then:                                          ; preds = %entry
  %8 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9489
  %tobool2 = icmp ne %struct.VEC_sel_insn_data_def_heap* %8, null, !dbg !9489
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !9489

cond.true:                                        ; preds = %if.then
  %9 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9489
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %9, i32 0, i32 0, !dbg !9489
  br label %cond.end, !dbg !9489

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !9489

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9489
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9489
  %tobool3 = icmp ne %struct.VEC_int_heap* %10, null, !dbg !9489
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !9489

cond.true4:                                       ; preds = %cond.end
  %11 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9489
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %11, i32 0, i32 0, !dbg !9489
  br label %cond.end7, !dbg !9489

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !9489

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi %struct.VEC_int_base* [ %base5, %cond.true4 ], [ null, %cond.false6 ], !dbg !9489
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9489
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !9489
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9489
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9489
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9489
  %13 = load i32, i32* %rt_int, align 8, !dbg !9489
  %call9 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond8, i32 %13), !dbg !9489
  %call10 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call9), !dbg !9489
  %sched_next = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call10, i32 0, i32 9, !dbg !9489
  %14 = load %struct.rtx_def*, %struct.rtx_def** %sched_next, align 8, !dbg !9489
  %15 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9491
  %sched_next11 = getelementptr inbounds %struct._fence, %struct._fence* %15, i32 0, i32 12, !dbg !9491
  store %struct.rtx_def* %14, %struct.rtx_def** %sched_next11, align 8, !dbg !9492
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9493
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !9493
  %bf.load12 = load i32, i32* %17, align 8, !dbg !9494
  %bf.clear13 = and i32 %bf.load12, -268435457, !dbg !9494
  store i32 %bf.clear13, i32* %17, align 8, !dbg !9494
  br label %if.end, !dbg !9495

if.else:                                          ; preds = %entry
  %18 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9496
  %sched_next14 = getelementptr inbounds %struct._fence, %struct._fence* %18, i32 0, i32 12, !dbg !9496
  store %struct.rtx_def* null, %struct.rtx_def** %sched_next14, align 8, !dbg !9497
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end7
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9498
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !9498
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !9498
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !9498
  %rt_int18 = bitcast %union.rtunion_def* %arrayidx17 to i32*, !dbg !9498
  %20 = load i32, i32* %rt_int18, align 8, !dbg !9498
  %21 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9500
  %ready_ticks_size = getelementptr inbounds %struct._fence, %struct._fence* %21, i32 0, i32 9, !dbg !9500
  %22 = load i32, i32* %ready_ticks_size, align 8, !dbg !9500
  %cmp = icmp slt i32 %20, %22, !dbg !9501
  br i1 %cmp, label %if.then19, label %if.end25, !dbg !9502

if.then19:                                        ; preds = %if.end
  %23 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9503
  %ready_ticks = getelementptr inbounds %struct._fence, %struct._fence* %23, i32 0, i32 8, !dbg !9503
  %24 = load i32*, i32** %ready_ticks, align 8, !dbg !9503
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9504
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !9504
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !9504
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !9504
  %rt_int23 = bitcast %union.rtunion_def* %arrayidx22 to i32*, !dbg !9504
  %26 = load i32, i32* %rt_int23, align 8, !dbg !9504
  %idxprom = sext i32 %26 to i64, !dbg !9503
  %arrayidx24 = getelementptr inbounds i32, i32* %24, i64 %idxprom, !dbg !9503
  store i32 0, i32* %arrayidx24, align 4, !dbg !9505
  br label %if.end25, !dbg !9503

if.end25:                                         ; preds = %if.then19, %if.end
  %27 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9506
  %tobool26 = icmp ne %struct.VEC_sel_insn_data_def_heap* %27, null, !dbg !9506
  br i1 %tobool26, label %cond.true27, label %cond.false29, !dbg !9506

cond.true27:                                      ; preds = %if.end25
  %28 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9506
  %base28 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %28, i32 0, i32 0, !dbg !9506
  br label %cond.end30, !dbg !9506

cond.false29:                                     ; preds = %if.end25
  br label %cond.end30, !dbg !9506

cond.end30:                                       ; preds = %cond.false29, %cond.true27
  %cond31 = phi %struct.VEC_sel_insn_data_def_base* [ %base28, %cond.true27 ], [ null, %cond.false29 ], !dbg !9506
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9506
  %tobool32 = icmp ne %struct.VEC_int_heap* %29, null, !dbg !9506
  br i1 %tobool32, label %cond.true33, label %cond.false35, !dbg !9506

cond.true33:                                      ; preds = %cond.end30
  %30 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9506
  %base34 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %30, i32 0, i32 0, !dbg !9506
  br label %cond.end36, !dbg !9506

cond.false35:                                     ; preds = %cond.end30
  br label %cond.end36, !dbg !9506

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi %struct.VEC_int_base* [ %base34, %cond.true33 ], [ null, %cond.false35 ], !dbg !9506
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9506
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !9506
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !9506
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 0, !dbg !9506
  %rt_int41 = bitcast %union.rtunion_def* %arrayidx40 to i32*, !dbg !9506
  %32 = load i32, i32* %rt_int41, align 8, !dbg !9506
  %call42 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond37, i32 %32), !dbg !9506
  %call43 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond31, i32 %call42), !dbg !9506
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call43, i32 0, i32 0, !dbg !9506
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 5, !dbg !9506
  %33 = load i32, i32* %sched_times, align 8, !dbg !9507
  %inc = add nsw i32 %33, 1, !dbg !9507
  store i32 %inc, i32* %sched_times, align 8, !dbg !9507
  %34 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9508
  %tobool44 = icmp ne %struct.VEC_sel_insn_data_def_heap* %34, null, !dbg !9508
  br i1 %tobool44, label %cond.true45, label %cond.false47, !dbg !9508

cond.true45:                                      ; preds = %cond.end36
  %35 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9508
  %base46 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %35, i32 0, i32 0, !dbg !9508
  br label %cond.end48, !dbg !9508

cond.false47:                                     ; preds = %cond.end36
  br label %cond.end48, !dbg !9508

cond.end48:                                       ; preds = %cond.false47, %cond.true45
  %cond49 = phi %struct.VEC_sel_insn_data_def_base* [ %base46, %cond.true45 ], [ null, %cond.false47 ], !dbg !9508
  %36 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9508
  %tobool50 = icmp ne %struct.VEC_int_heap* %36, null, !dbg !9508
  br i1 %tobool50, label %cond.true51, label %cond.false53, !dbg !9508

cond.true51:                                      ; preds = %cond.end48
  %37 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9508
  %base52 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %37, i32 0, i32 0, !dbg !9508
  br label %cond.end54, !dbg !9508

cond.false53:                                     ; preds = %cond.end48
  br label %cond.end54, !dbg !9508

cond.end54:                                       ; preds = %cond.false53, %cond.true51
  %cond55 = phi %struct.VEC_int_base* [ %base52, %cond.true51 ], [ null, %cond.false53 ], !dbg !9508
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9508
  %u56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !9508
  %fld57 = bitcast %union.u* %u56 to [1 x %union.rtunion_def]*, !dbg !9508
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i64 0, i64 0, !dbg !9508
  %rt_int59 = bitcast %union.rtunion_def* %arrayidx58 to i32*, !dbg !9508
  %39 = load i32, i32* %rt_int59, align 8, !dbg !9508
  %call60 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond55, i32 %39), !dbg !9508
  %call61 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond49, i32 %call60), !dbg !9508
  %expr62 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call61, i32 0, i32 0, !dbg !9508
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %expr62, i32 0, i32 11, !dbg !9508
  store i8 1, i8* %target_available, align 8, !dbg !9509
  %40 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9510
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %40, i32 0, i32 2, !dbg !9510
  %41 = load i32, i32* %cycle, align 8, !dbg !9510
  %42 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9511
  %tobool63 = icmp ne %struct.VEC_sel_insn_data_def_heap* %42, null, !dbg !9511
  br i1 %tobool63, label %cond.true64, label %cond.false66, !dbg !9511

cond.true64:                                      ; preds = %cond.end54
  %43 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9511
  %base65 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %43, i32 0, i32 0, !dbg !9511
  br label %cond.end67, !dbg !9511

cond.false66:                                     ; preds = %cond.end54
  br label %cond.end67, !dbg !9511

cond.end67:                                       ; preds = %cond.false66, %cond.true64
  %cond68 = phi %struct.VEC_sel_insn_data_def_base* [ %base65, %cond.true64 ], [ null, %cond.false66 ], !dbg !9511
  %44 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9511
  %tobool69 = icmp ne %struct.VEC_int_heap* %44, null, !dbg !9511
  br i1 %tobool69, label %cond.true70, label %cond.false72, !dbg !9511

cond.true70:                                      ; preds = %cond.end67
  %45 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9511
  %base71 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %45, i32 0, i32 0, !dbg !9511
  br label %cond.end73, !dbg !9511

cond.false72:                                     ; preds = %cond.end67
  br label %cond.end73, !dbg !9511

cond.end73:                                       ; preds = %cond.false72, %cond.true70
  %cond74 = phi %struct.VEC_int_base* [ %base71, %cond.true70 ], [ null, %cond.false72 ], !dbg !9511
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9511
  %u75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !9511
  %fld76 = bitcast %union.u* %u75 to [1 x %union.rtunion_def]*, !dbg !9511
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i64 0, i64 0, !dbg !9511
  %rt_int78 = bitcast %union.rtunion_def* %arrayidx77 to i32*, !dbg !9511
  %47 = load i32, i32* %rt_int78, align 8, !dbg !9511
  %call79 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond74, i32 %47), !dbg !9511
  %call80 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond68, i32 %call79), !dbg !9511
  %expr81 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call80, i32 0, i32 0, !dbg !9511
  %orig_sched_cycle = getelementptr inbounds %struct._expr, %struct._expr* %expr81, i32 0, i32 9, !dbg !9511
  store i32 %41, i32* %orig_sched_cycle, align 8, !dbg !9512
  %48 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9513
  %after_stall_p = getelementptr inbounds %struct._fence, %struct._fence* %48, i32 0, i32 13, !dbg !9513
  %bf.load82 = load i8, i8* %after_stall_p, align 8, !dbg !9513
  %bf.lshr83 = lshr i8 %bf.load82, 3, !dbg !9513
  %bf.clear84 = and i8 %bf.lshr83, 1, !dbg !9513
  %bf.cast = zext i8 %bf.clear84 to i32, !dbg !9513
  %49 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9514
  %tobool85 = icmp ne %struct.VEC_sel_insn_data_def_heap* %49, null, !dbg !9514
  br i1 %tobool85, label %cond.true86, label %cond.false88, !dbg !9514

cond.true86:                                      ; preds = %cond.end73
  %50 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9514
  %base87 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %50, i32 0, i32 0, !dbg !9514
  br label %cond.end89, !dbg !9514

cond.false88:                                     ; preds = %cond.end73
  br label %cond.end89, !dbg !9514

cond.end89:                                       ; preds = %cond.false88, %cond.true86
  %cond90 = phi %struct.VEC_sel_insn_data_def_base* [ %base87, %cond.true86 ], [ null, %cond.false88 ], !dbg !9514
  %51 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9514
  %tobool91 = icmp ne %struct.VEC_int_heap* %51, null, !dbg !9514
  br i1 %tobool91, label %cond.true92, label %cond.false94, !dbg !9514

cond.true92:                                      ; preds = %cond.end89
  %52 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9514
  %base93 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %52, i32 0, i32 0, !dbg !9514
  br label %cond.end95, !dbg !9514

cond.false94:                                     ; preds = %cond.end89
  br label %cond.end95, !dbg !9514

cond.end95:                                       ; preds = %cond.false94, %cond.true92
  %cond96 = phi %struct.VEC_int_base* [ %base93, %cond.true92 ], [ null, %cond.false94 ], !dbg !9514
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9514
  %u97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !9514
  %fld98 = bitcast %union.u* %u97 to [1 x %union.rtunion_def]*, !dbg !9514
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i64 0, i64 0, !dbg !9514
  %rt_int100 = bitcast %union.rtunion_def* %arrayidx99 to i32*, !dbg !9514
  %54 = load i32, i32* %rt_int100, align 8, !dbg !9514
  %call101 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond96, i32 %54), !dbg !9514
  %call102 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond90, i32 %call101), !dbg !9514
  %after_stall_p103 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call102, i32 0, i32 13, !dbg !9514
  %55 = trunc i32 %bf.cast to i8, !dbg !9515
  %bf.load104 = load i8, i8* %after_stall_p103, align 4, !dbg !9515
  %bf.value = and i8 %55, 1, !dbg !9515
  %bf.shl = shl i8 %bf.value, 2, !dbg !9515
  %bf.clear105 = and i8 %bf.load104, -5, !dbg !9515
  %bf.set = or i8 %bf.clear105, %bf.shl, !dbg !9515
  store i8 %bf.set, i8* %after_stall_p103, align 4, !dbg !9515
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !9515
  %56 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9516
  %cycle106 = getelementptr inbounds %struct._fence, %struct._fence* %56, i32 0, i32 2, !dbg !9516
  %57 = load i32, i32* %cycle106, align 8, !dbg !9516
  %58 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9517
  %tobool107 = icmp ne %struct.VEC_sel_insn_data_def_heap* %58, null, !dbg !9517
  br i1 %tobool107, label %cond.true108, label %cond.false110, !dbg !9517

cond.true108:                                     ; preds = %cond.end95
  %59 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9517
  %base109 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %59, i32 0, i32 0, !dbg !9517
  br label %cond.end111, !dbg !9517

cond.false110:                                    ; preds = %cond.end95
  br label %cond.end111, !dbg !9517

cond.end111:                                      ; preds = %cond.false110, %cond.true108
  %cond112 = phi %struct.VEC_sel_insn_data_def_base* [ %base109, %cond.true108 ], [ null, %cond.false110 ], !dbg !9517
  %60 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9517
  %tobool113 = icmp ne %struct.VEC_int_heap* %60, null, !dbg !9517
  br i1 %tobool113, label %cond.true114, label %cond.false116, !dbg !9517

cond.true114:                                     ; preds = %cond.end111
  %61 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9517
  %base115 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %61, i32 0, i32 0, !dbg !9517
  br label %cond.end117, !dbg !9517

cond.false116:                                    ; preds = %cond.end111
  br label %cond.end117, !dbg !9517

cond.end117:                                      ; preds = %cond.false116, %cond.true114
  %cond118 = phi %struct.VEC_int_base* [ %base115, %cond.true114 ], [ null, %cond.false116 ], !dbg !9517
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9517
  %u119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !9517
  %fld120 = bitcast %union.u* %u119 to [1 x %union.rtunion_def]*, !dbg !9517
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i64 0, i64 0, !dbg !9517
  %rt_int122 = bitcast %union.rtunion_def* %arrayidx121 to i32*, !dbg !9517
  %63 = load i32, i32* %rt_int122, align 8, !dbg !9517
  %call123 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond118, i32 %63), !dbg !9517
  %call124 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond112, i32 %call123), !dbg !9517
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call124, i32 0, i32 10, !dbg !9517
  store i32 %57, i32* %sched_cycle, align 8, !dbg !9518
  %64 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9519
  %tobool125 = icmp ne %struct.VEC_sel_insn_data_def_heap* %64, null, !dbg !9519
  br i1 %tobool125, label %cond.true126, label %cond.false128, !dbg !9519

cond.true126:                                     ; preds = %cond.end117
  %65 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9519
  %base127 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %65, i32 0, i32 0, !dbg !9519
  br label %cond.end129, !dbg !9519

cond.false128:                                    ; preds = %cond.end117
  br label %cond.end129, !dbg !9519

cond.end129:                                      ; preds = %cond.false128, %cond.true126
  %cond130 = phi %struct.VEC_sel_insn_data_def_base* [ %base127, %cond.true126 ], [ null, %cond.false128 ], !dbg !9519
  %66 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9519
  %tobool131 = icmp ne %struct.VEC_int_heap* %66, null, !dbg !9519
  br i1 %tobool131, label %cond.true132, label %cond.false134, !dbg !9519

cond.true132:                                     ; preds = %cond.end129
  %67 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9519
  %base133 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %67, i32 0, i32 0, !dbg !9519
  br label %cond.end135, !dbg !9519

cond.false134:                                    ; preds = %cond.end129
  br label %cond.end135, !dbg !9519

cond.end135:                                      ; preds = %cond.false134, %cond.true132
  %cond136 = phi %struct.VEC_int_base* [ %base133, %cond.true132 ], [ null, %cond.false134 ], !dbg !9519
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9519
  %u137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !9519
  %fld138 = bitcast %union.u* %u137 to [1 x %union.rtunion_def]*, !dbg !9519
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i64 0, i64 0, !dbg !9519
  %rt_int140 = bitcast %union.rtunion_def* %arrayidx139 to i32*, !dbg !9519
  %69 = load i32, i32* %rt_int140, align 8, !dbg !9519
  %call141 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond136, i32 %69), !dbg !9519
  %call142 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond130, i32 %call141), !dbg !9519
  %sched_cycle143 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call142, i32 0, i32 10, !dbg !9519
  %70 = load i32, i32* %sched_cycle143, align 8, !dbg !9519
  %71 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9520
  %u144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !9520
  %fld145 = bitcast %union.u* %u144 to [1 x %union.rtunion_def]*, !dbg !9520
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i64 0, i64 6, !dbg !9520
  %rt_int147 = bitcast %union.rtunion_def* %arrayidx146 to i32*, !dbg !9520
  %72 = load i32, i32* %rt_int147, align 8, !dbg !9520
  %cmp148 = icmp slt i32 %72, 0, !dbg !9521
  br i1 %cmp148, label %cond.true149, label %cond.false150, !dbg !9520

cond.true149:                                     ; preds = %cond.end135
  br label %cond.end152, !dbg !9520

cond.false150:                                    ; preds = %cond.end135
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9522
  %call151 = call i32 @maximal_insn_latency(%struct.rtx_def* %73), !dbg !9523
  %add = add nsw i32 %call151, 1, !dbg !9524
  br label %cond.end152, !dbg !9520

cond.end152:                                      ; preds = %cond.false150, %cond.true149
  %cond153 = phi i32 [ 1, %cond.true149 ], [ %add, %cond.false150 ], !dbg !9520
  %add154 = add nsw i32 %70, %cond153, !dbg !9525
  %74 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9526
  %tobool155 = icmp ne %struct.VEC_sel_insn_data_def_heap* %74, null, !dbg !9526
  br i1 %tobool155, label %cond.true156, label %cond.false158, !dbg !9526

cond.true156:                                     ; preds = %cond.end152
  %75 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9526
  %base157 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %75, i32 0, i32 0, !dbg !9526
  br label %cond.end159, !dbg !9526

cond.false158:                                    ; preds = %cond.end152
  br label %cond.end159, !dbg !9526

cond.end159:                                      ; preds = %cond.false158, %cond.true156
  %cond160 = phi %struct.VEC_sel_insn_data_def_base* [ %base157, %cond.true156 ], [ null, %cond.false158 ], !dbg !9526
  %76 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9526
  %tobool161 = icmp ne %struct.VEC_int_heap* %76, null, !dbg !9526
  br i1 %tobool161, label %cond.true162, label %cond.false164, !dbg !9526

cond.true162:                                     ; preds = %cond.end159
  %77 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9526
  %base163 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %77, i32 0, i32 0, !dbg !9526
  br label %cond.end165, !dbg !9526

cond.false164:                                    ; preds = %cond.end159
  br label %cond.end165, !dbg !9526

cond.end165:                                      ; preds = %cond.false164, %cond.true162
  %cond166 = phi %struct.VEC_int_base* [ %base163, %cond.true162 ], [ null, %cond.false164 ], !dbg !9526
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9526
  %u167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !9526
  %fld168 = bitcast %union.u* %u167 to [1 x %union.rtunion_def]*, !dbg !9526
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i64 0, i64 0, !dbg !9526
  %rt_int170 = bitcast %union.rtunion_def* %arrayidx169 to i32*, !dbg !9526
  %79 = load i32, i32* %rt_int170, align 8, !dbg !9526
  %call171 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond166, i32 %79), !dbg !9526
  %call172 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond160, i32 %call171), !dbg !9526
  %ready_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call172, i32 0, i32 11, !dbg !9526
  store i32 %add154, i32* %ready_cycle, align 4, !dbg !9527
  %80 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9528
  %after_stall_p173 = getelementptr inbounds %struct._fence, %struct._fence* %80, i32 0, i32 13, !dbg !9528
  %bf.load174 = load i8, i8* %after_stall_p173, align 8, !dbg !9529
  %bf.clear175 = and i8 %bf.load174, -9, !dbg !9529
  store i8 %bf.clear175, i8* %after_stall_p173, align 8, !dbg !9529
  %81 = load i8, i8* %asm_p, align 1, !dbg !9530
  %conv = zext i8 %81 to i32, !dbg !9530
  %tobool176 = icmp ne i32 %conv, 0, !dbg !9530
  br i1 %tobool176, label %if.then178, label %lor.lhs.false, !dbg !9532

lor.lhs.false:                                    ; preds = %cond.end165
  %82 = load i32, i32* %need_stall.addr, align 4, !dbg !9533
  %tobool177 = icmp ne i32 %82, 0, !dbg !9533
  br i1 %tobool177, label %if.then178, label %if.end179, !dbg !9534

if.then178:                                       ; preds = %lor.lhs.false, %cond.end165
  %83 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9535
  call void @advance_one_cycle(%struct._fence* %83), !dbg !9536
  br label %if.end179, !dbg !9536

if.end179:                                        ; preds = %if.then178, %lor.lhs.false
  %84 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9537
  %scheduled_p = getelementptr inbounds %struct._fence, %struct._fence* %84, i32 0, i32 13, !dbg !9537
  %bf.load180 = load i8, i8* %scheduled_p, align 8, !dbg !9538
  %bf.clear181 = and i8 %bf.load180, -3, !dbg !9538
  %bf.set182 = or i8 %bf.clear181, 2, !dbg !9538
  store i8 %bf.set182, i8* %scheduled_p, align 8, !dbg !9538
  store i8 1, i8* @scheduled_something_on_previous_fence, align 1, !dbg !9539
  %85 = load i32, i32* @sched_verbose, align 4, !dbg !9540
  %cmp183 = icmp sge i32 %85, 2, !dbg !9542
  br i1 %cmp183, label %if.then185, label %if.end219, !dbg !9543

if.then185:                                       ; preds = %if.end179
  br label %do.body, !dbg !9544

do.body:                                          ; preds = %if.then185
  %86 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9546
  %tobool186 = icmp ne i8 %86, 0, !dbg !9546
  br i1 %tobool186, label %if.then187, label %if.else196, !dbg !9549

if.then187:                                       ; preds = %do.body
  br label %do.body188, !dbg !9546

do.body188:                                       ; preds = %if.then187
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !9550, metadata !DIExpression()), !dbg !9552
  %call189 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i64 0, i64 0)), !dbg !9552
  %mul = mul nsw i32 2, %call189, !dbg !9552
  %add190 = add nsw i32 1, %mul, !dbg !9552
  store i32 %add190, i32* %__j, align 4, !dbg !9552
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !9553, metadata !DIExpression()), !dbg !9552
  %87 = load i32, i32* %__j, align 4, !dbg !9552
  %conv191 = sext i32 %87 to i64, !dbg !9552
  %mul192 = mul i64 1, %conv191, !dbg !9552
  %88 = alloca i8, i64 %mul192, align 16, !dbg !9552
  store i8* %88, i8** %__s, align 8, !dbg !9552
  %89 = load i8*, i8** %__s, align 8, !dbg !9552
  %90 = load i32, i32* %__j, align 4, !dbg !9552
  %conv193 = sext i32 %90 to i64, !dbg !9552
  %call194 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %89, i64 %conv193, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i64 0, i64 0)), !dbg !9552
  %91 = load i8*, i8** %__s, align 8, !dbg !9552
  call void @sel_prepare_string_for_dot_label(i8* %91), !dbg !9552
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9552
  %93 = load i8*, i8** %__s, align 8, !dbg !9552
  %call195 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %93), !dbg !9552
  br label %do.end, !dbg !9552

do.end:                                           ; preds = %do.body188
  br label %if.end198, !dbg !9552

if.else196:                                       ; preds = %do.body
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9546
  %call197 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i64 0, i64 0)), !dbg !9546
  br label %if.end198

if.end198:                                        ; preds = %if.else196, %do.end
  br label %do.end199, !dbg !9549

do.end199:                                        ; preds = %if.end198
  %95 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9554
  call void @dump_insn_1(%struct.rtx_def* %95, i32 1), !dbg !9555
  br label %do.body200, !dbg !9556

do.body200:                                       ; preds = %do.end199
  %96 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9557
  %tobool201 = icmp ne i8 %96, 0, !dbg !9557
  br i1 %tobool201, label %if.then202, label %if.else215, !dbg !9560

if.then202:                                       ; preds = %do.body200
  br label %do.body203, !dbg !9557

do.body203:                                       ; preds = %if.then202
  call void @llvm.dbg.declare(metadata i32* %__j204, metadata !9561, metadata !DIExpression()), !dbg !9563
  %call205 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !9563
  %mul206 = mul nsw i32 2, %call205, !dbg !9563
  %add207 = add nsw i32 1, %mul206, !dbg !9563
  store i32 %add207, i32* %__j204, align 4, !dbg !9563
  call void @llvm.dbg.declare(metadata i8** %__s208, metadata !9564, metadata !DIExpression()), !dbg !9563
  %97 = load i32, i32* %__j204, align 4, !dbg !9563
  %conv209 = sext i32 %97 to i64, !dbg !9563
  %mul210 = mul i64 1, %conv209, !dbg !9563
  %98 = alloca i8, i64 %mul210, align 16, !dbg !9563
  store i8* %98, i8** %__s208, align 8, !dbg !9563
  %99 = load i8*, i8** %__s208, align 8, !dbg !9563
  %100 = load i32, i32* %__j204, align 4, !dbg !9563
  %conv211 = sext i32 %100 to i64, !dbg !9563
  %call212 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %99, i64 %conv211, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !9563
  %101 = load i8*, i8** %__s208, align 8, !dbg !9563
  call void @sel_prepare_string_for_dot_label(i8* %101), !dbg !9563
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9563
  %103 = load i8*, i8** %__s208, align 8, !dbg !9563
  %call213 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %103), !dbg !9563
  br label %do.end214, !dbg !9563

do.end214:                                        ; preds = %do.body203
  br label %if.end217, !dbg !9563

if.else215:                                       ; preds = %do.body200
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9557
  %call216 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %104, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !9557
  br label %if.end217

if.end217:                                        ; preds = %if.else215, %do.end214
  br label %do.end218, !dbg !9560

do.end218:                                        ; preds = %if.end217
  br label %if.end219, !dbg !9565

if.end219:                                        ; preds = %do.end218, %if.end179
  ret void, !dbg !9566
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._list_node** @update_boundaries(%struct._fence* %fence, %struct._bnd* %bnd, %struct.rtx_def* %insn, %struct._list_node** %bndsp, %struct._list_node** %bnds_tailp) #0 !dbg !9567 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %bnd.addr = alloca %struct._bnd*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %bndsp.addr = alloca %struct._list_node**, align 8
  %bnds_tailp.addr = alloca %struct._list_node**, align 8
  %si = alloca %struct.succ_iterator, align 8
  %succ = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  %ptr = alloca %struct._list_node*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !9570, metadata !DIExpression()), !dbg !9571
  store %struct._bnd* %bnd, %struct._bnd** %bnd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._bnd** %bnd.addr, metadata !9572, metadata !DIExpression()), !dbg !9573
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9574, metadata !DIExpression()), !dbg !9575
  store %struct._list_node** %bndsp, %struct._list_node*** %bndsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %bndsp.addr, metadata !9576, metadata !DIExpression()), !dbg !9577
  store %struct._list_node** %bnds_tailp, %struct._list_node*** %bnds_tailp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %bnds_tailp.addr, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.declare(metadata %struct.succ_iterator* %si, metadata !9580, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %succ, metadata !9582, metadata !DIExpression()), !dbg !9583
  %0 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !9584
  %dc = getelementptr inbounds %struct._bnd, %struct._bnd* %0, i32 0, i32 4, !dbg !9584
  %1 = load %struct.deps*, %struct.deps** %dc, align 8, !dbg !9584
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9585
  call void @advance_deps_context(%struct.deps* %1, %struct.rtx_def* %2), !dbg !9586
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9587
  call void @_succ_iter_start(%struct.succ_iterator* sret %tmp, %struct.rtx_def** %succ, %struct.rtx_def* %3, i32 9), !dbg !9587
  %4 = bitcast %struct.succ_iterator* %si to i8*, !dbg !9587
  %5 = bitcast %struct.succ_iterator* %tmp to i8*, !dbg !9587
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 64, i1 false), !dbg !9587
  br label %for.cond, !dbg !9587

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9589
  %call = call zeroext i8 @_succ_iter_cond(%struct.succ_iterator* %si, %struct.rtx_def** %succ, %struct.rtx_def* %6, i8 (%struct.edge_def*, %struct.succ_iterator*)* @_eligible_successor_edge_p), !dbg !9589
  %tobool = icmp ne i8 %call, 0, !dbg !9587
  br i1 %tobool, label %for.body, label %for.end, !dbg !9587

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._list_node** %ptr, metadata !9591, metadata !DIExpression()), !dbg !9593
  %7 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !9594
  %ptr1 = getelementptr inbounds %struct._bnd, %struct._bnd* %7, i32 0, i32 1, !dbg !9594
  %8 = load %struct._list_node*, %struct._list_node** %ptr1, align 8, !dbg !9594
  %call2 = call %struct._list_node* @ilist_copy(%struct._list_node* %8), !dbg !9595
  store %struct._list_node* %call2, %struct._list_node** %ptr, align 8, !dbg !9593
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9596
  call void @_xlist_add(%struct._list_node** %ptr, %struct.rtx_def* %9), !dbg !9596
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9597
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !9597
  %bf.load = load i32, i32* %11, align 8, !dbg !9597
  %bf.clear = and i32 %bf.load, 65535, !dbg !9597
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !9597
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9599

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9600
  %call3 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %12), !dbg !9601
  %conv = zext i8 %call3 to i32, !dbg !9601
  %tobool4 = icmp ne i32 %conv, 0, !dbg !9601
  br i1 %tobool4, label %land.lhs.true5, label %if.end, !dbg !9602

land.lhs.true5:                                   ; preds = %land.lhs.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !9603
  %14 = load %struct._list_node*, %struct._list_node** %ptr, align 8, !dbg !9604
  %call6 = call zeroext i8 @is_ineligible_successor(%struct.rtx_def* %13, %struct._list_node* %14), !dbg !9605
  %conv7 = zext i8 %call6 to i32, !dbg !9605
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !9605
  br i1 %tobool8, label %if.then, label %if.end, !dbg !9606

if.then:                                          ; preds = %land.lhs.true5
  call void @_list_clear(%struct._list_node** %ptr), !dbg !9607
  br label %for.inc, !dbg !9609

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %for.body
  %15 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9610
  %insn9 = getelementptr inbounds %struct._fence, %struct._fence* %15, i32 0, i32 0, !dbg !9610
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn9, align 8, !dbg !9610
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9612
  %cmp10 = icmp eq %struct.rtx_def* %16, %17, !dbg !9613
  br i1 %cmp10, label %land.lhs.true12, label %if.end53, !dbg !9614

land.lhs.true12:                                  ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9615
  %call13 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %18), !dbg !9616
  %tobool14 = icmp ne i8 %call13, 0, !dbg !9616
  br i1 %tobool14, label %if.end53, label %if.then15, !dbg !9617

if.then15:                                        ; preds = %land.lhs.true12
  %19 = load i32, i32* @sched_verbose, align 4, !dbg !9618
  %cmp16 = icmp sge i32 %19, 9, !dbg !9621
  br i1 %cmp16, label %if.then18, label %if.end51, !dbg !9622

if.then18:                                        ; preds = %if.then15
  br label %do.body, !dbg !9623

do.body:                                          ; preds = %if.then18
  %20 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9624
  %tobool19 = icmp ne i8 %20, 0, !dbg !9624
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !9627

if.then20:                                        ; preds = %do.body
  br label %do.body21, !dbg !9624

do.body21:                                        ; preds = %if.then20
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !9628, metadata !DIExpression()), !dbg !9630
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9630
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !9630
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9630
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9630
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9630
  %22 = load i32, i32* %rt_int, align 8, !dbg !9630
  %23 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !9630
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !9630
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !9630
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 0, !dbg !9630
  %rt_int25 = bitcast %union.rtunion_def* %arrayidx24 to i32*, !dbg !9630
  %24 = load i32, i32* %rt_int25, align 8, !dbg !9630
  %call26 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i32 %22, i32 %24), !dbg !9630
  %mul = mul nsw i32 2, %call26, !dbg !9630
  %add = add nsw i32 1, %mul, !dbg !9630
  store i32 %add, i32* %__j, align 4, !dbg !9630
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !9631, metadata !DIExpression()), !dbg !9630
  %25 = load i32, i32* %__j, align 4, !dbg !9630
  %conv27 = sext i32 %25 to i64, !dbg !9630
  %mul28 = mul i64 1, %conv27, !dbg !9630
  %26 = alloca i8, i64 %mul28, align 16, !dbg !9630
  store i8* %26, i8** %__s, align 8, !dbg !9630
  %27 = load i8*, i8** %__s, align 8, !dbg !9630
  %28 = load i32, i32* %__j, align 4, !dbg !9630
  %conv29 = sext i32 %28 to i64, !dbg !9630
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9630
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !9630
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !9630
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 0, !dbg !9630
  %rt_int33 = bitcast %union.rtunion_def* %arrayidx32 to i32*, !dbg !9630
  %30 = load i32, i32* %rt_int33, align 8, !dbg !9630
  %31 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !9630
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !9630
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !9630
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 0, !dbg !9630
  %rt_int37 = bitcast %union.rtunion_def* %arrayidx36 to i32*, !dbg !9630
  %32 = load i32, i32* %rt_int37, align 8, !dbg !9630
  %call38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %27, i64 %conv29, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i32 %30, i32 %32), !dbg !9630
  %33 = load i8*, i8** %__s, align 8, !dbg !9630
  call void @sel_prepare_string_for_dot_label(i8* %33), !dbg !9630
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9630
  %35 = load i8*, i8** %__s, align 8, !dbg !9630
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %35), !dbg !9630
  br label %do.end, !dbg !9630

do.end:                                           ; preds = %do.body21
  br label %if.end49, !dbg !9630

if.else:                                          ; preds = %do.body
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9624
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9624
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !9624
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !9624
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 0, !dbg !9624
  %rt_int43 = bitcast %union.rtunion_def* %arrayidx42 to i32*, !dbg !9624
  %38 = load i32, i32* %rt_int43, align 8, !dbg !9624
  %39 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !9624
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !9624
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !9624
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 0, !dbg !9624
  %rt_int47 = bitcast %union.rtunion_def* %arrayidx46 to i32*, !dbg !9624
  %40 = load i32, i32* %rt_int47, align 8, !dbg !9624
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i32 %38, i32 %40), !dbg !9624
  br label %if.end49

if.end49:                                         ; preds = %if.else, %do.end
  br label %do.end50, !dbg !9627

do.end50:                                         ; preds = %if.end49
  br label %if.end51, !dbg !9627

if.end51:                                         ; preds = %do.end50, %if.then15
  %41 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !9632
  %42 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9633
  %insn52 = getelementptr inbounds %struct._fence, %struct._fence* %42, i32 0, i32 0, !dbg !9633
  store %struct.rtx_def* %41, %struct.rtx_def** %insn52, align 8, !dbg !9634
  br label %if.end53, !dbg !9635

if.end53:                                         ; preds = %if.end51, %land.lhs.true12, %if.end
  %43 = load %struct._list_node**, %struct._list_node*** %bnds_tailp.addr, align 8, !dbg !9636
  %44 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !9637
  %45 = load %struct._list_node*, %struct._list_node** %ptr, align 8, !dbg !9638
  %46 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !9639
  %dc54 = getelementptr inbounds %struct._bnd, %struct._bnd* %46, i32 0, i32 4, !dbg !9639
  %47 = load %struct.deps*, %struct.deps** %dc54, align 8, !dbg !9639
  call void @blist_add(%struct._list_node** %43, %struct.rtx_def* %44, %struct._list_node* %45, %struct.deps* %47), !dbg !9640
  %48 = load %struct._list_node**, %struct._list_node*** %bnds_tailp.addr, align 8, !dbg !9641
  %49 = load %struct._list_node*, %struct._list_node** %48, align 8, !dbg !9641
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %49, i32 0, i32 0, !dbg !9641
  store %struct._list_node** %next, %struct._list_node*** %bnds_tailp.addr, align 8, !dbg !9642
  br label %for.inc, !dbg !9643

for.inc:                                          ; preds = %if.end53, %if.then
  call void @_succ_iter_next(%struct.succ_iterator* %si), !dbg !9589
  br label %for.cond, !dbg !9589, !llvm.loop !9644

for.end:                                          ; preds = %for.cond
  %50 = load %struct._list_node**, %struct._list_node*** %bndsp.addr, align 8, !dbg !9646
  call void @blist_remove(%struct._list_node** %50), !dbg !9647
  %51 = load %struct._list_node**, %struct._list_node*** %bnds_tailp.addr, align 8, !dbg !9648
  ret %struct._list_node** %51, !dbg !9649
}

declare dso_local void @blist_remove(%struct._list_node**) #2

declare dso_local void @reset_target_context(i8*, i8 zeroext) #2

declare dso_local void @dump_blist(%struct._list_node*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @moveup_set_inside_insn_group(%struct._list_node** %avp, %struct._list_node* %path) #0 !dbg !9650 {
entry:
  %avp.addr = alloca %struct._list_node**, align 8
  %path.addr = alloca %struct._list_node*, align 8
  %last_cycle = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store %struct._list_node** %avp, %struct._list_node*** %avp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %avp.addr, metadata !9653, metadata !DIExpression()), !dbg !9654
  store %struct._list_node* %path, %struct._list_node** %path.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %path.addr, metadata !9655, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.declare(metadata i32* %last_cycle, metadata !9657, metadata !DIExpression()), !dbg !9658
  %0 = load i32, i32* @sched_verbose, align 4, !dbg !9659
  %cmp = icmp sge i32 %0, 6, !dbg !9661
  br i1 %cmp, label %if.then, label %if.end9, !dbg !9662

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9663

do.body:                                          ; preds = %if.then
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9664
  %tobool = icmp ne i8 %1, 0, !dbg !9664
  br i1 %tobool, label %if.then1, label %if.else, !dbg !9667

if.then1:                                         ; preds = %do.body
  br label %do.body2, !dbg !9664

do.body2:                                         ; preds = %if.then1
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !9668, metadata !DIExpression()), !dbg !9670
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0)), !dbg !9670
  %mul = mul nsw i32 2, %call, !dbg !9670
  %add = add nsw i32 1, %mul, !dbg !9670
  store i32 %add, i32* %__j, align 4, !dbg !9670
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !9671, metadata !DIExpression()), !dbg !9670
  %2 = load i32, i32* %__j, align 4, !dbg !9670
  %conv = sext i32 %2 to i64, !dbg !9670
  %mul3 = mul i64 1, %conv, !dbg !9670
  %3 = alloca i8, i64 %mul3, align 16, !dbg !9670
  store i8* %3, i8** %__s, align 8, !dbg !9670
  %4 = load i8*, i8** %__s, align 8, !dbg !9670
  %5 = load i32, i32* %__j, align 4, !dbg !9670
  %conv4 = sext i32 %5 to i64, !dbg !9670
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %4, i64 %conv4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0)), !dbg !9670
  %6 = load i8*, i8** %__s, align 8, !dbg !9670
  call void @sel_prepare_string_for_dot_label(i8* %6), !dbg !9670
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9670
  %8 = load i8*, i8** %__s, align 8, !dbg !9670
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %8), !dbg !9670
  br label %do.end, !dbg !9670

do.end:                                           ; preds = %do.body2
  br label %if.end, !dbg !9670

if.else:                                          ; preds = %do.body
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9664
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0)), !dbg !9664
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end8, !dbg !9667

do.end8:                                          ; preds = %if.end
  br label %if.end9, !dbg !9667

if.end9:                                          ; preds = %do.end8, %entry
  %10 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !9672
  %tobool10 = icmp ne %struct._list_node* %10, null, !dbg !9672
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !9674

if.then11:                                        ; preds = %if.end9
  br label %while.end, !dbg !9675

if.end12:                                         ; preds = %if.end9
  %11 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9676
  %tobool13 = icmp ne %struct.VEC_sel_insn_data_def_heap* %11, null, !dbg !9676
  br i1 %tobool13, label %cond.true, label %cond.false, !dbg !9676

cond.true:                                        ; preds = %if.end12
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9676
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %12, i32 0, i32 0, !dbg !9676
  br label %cond.end, !dbg !9676

cond.false:                                       ; preds = %if.end12
  br label %cond.end, !dbg !9676

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9676
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9676
  %tobool14 = icmp ne %struct.VEC_int_heap* %13, null, !dbg !9676
  br i1 %tobool14, label %cond.true15, label %cond.false17, !dbg !9676

cond.true15:                                      ; preds = %cond.end
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9676
  %base16 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i32 0, i32 0, !dbg !9676
  br label %cond.end18, !dbg !9676

cond.false17:                                     ; preds = %cond.end
  br label %cond.end18, !dbg !9676

cond.end18:                                       ; preds = %cond.false17, %cond.true15
  %cond19 = phi %struct.VEC_int_base* [ %base16, %cond.true15 ], [ null, %cond.false17 ], !dbg !9676
  %15 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !9676
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %15, i32 0, i32 1, !dbg !9676
  %x = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !9676
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !9676
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !9676
  %fld = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !9676
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9676
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9676
  %17 = load i32, i32* %rt_int, align 8, !dbg !9676
  %call21 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond19, i32 %17), !dbg !9676
  %call22 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call21), !dbg !9676
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call22, i32 0, i32 10, !dbg !9676
  %18 = load i32, i32* %sched_cycle, align 8, !dbg !9676
  store i32 %18, i32* %last_cycle, align 4, !dbg !9677
  br label %while.cond, !dbg !9678

while.cond:                                       ; preds = %while.body, %cond.end18
  %19 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !9679
  %tobool23 = icmp ne %struct._list_node* %19, null, !dbg !9679
  br i1 %tobool23, label %land.rhs, label %land.end, !dbg !9680

land.rhs:                                         ; preds = %while.cond
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9681
  %tobool24 = icmp ne %struct.VEC_sel_insn_data_def_heap* %20, null, !dbg !9681
  br i1 %tobool24, label %cond.true25, label %cond.false27, !dbg !9681

cond.true25:                                      ; preds = %land.rhs
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !9681
  %base26 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i32 0, i32 0, !dbg !9681
  br label %cond.end28, !dbg !9681

cond.false27:                                     ; preds = %land.rhs
  br label %cond.end28, !dbg !9681

cond.end28:                                       ; preds = %cond.false27, %cond.true25
  %cond29 = phi %struct.VEC_sel_insn_data_def_base* [ %base26, %cond.true25 ], [ null, %cond.false27 ], !dbg !9681
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9681
  %tobool30 = icmp ne %struct.VEC_int_heap* %22, null, !dbg !9681
  br i1 %tobool30, label %cond.true31, label %cond.false33, !dbg !9681

cond.true31:                                      ; preds = %cond.end28
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9681
  %base32 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i32 0, i32 0, !dbg !9681
  br label %cond.end34, !dbg !9681

cond.false33:                                     ; preds = %cond.end28
  br label %cond.end34, !dbg !9681

cond.end34:                                       ; preds = %cond.false33, %cond.true31
  %cond35 = phi %struct.VEC_int_base* [ %base32, %cond.true31 ], [ null, %cond.false33 ], !dbg !9681
  %24 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !9681
  %u36 = getelementptr inbounds %struct._list_node, %struct._list_node* %24, i32 0, i32 1, !dbg !9681
  %x37 = bitcast %union.anon.0* %u36 to %struct.rtx_def**, !dbg !9681
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x37, align 8, !dbg !9681
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !9681
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !9681
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 0, !dbg !9681
  %rt_int41 = bitcast %union.rtunion_def* %arrayidx40 to i32*, !dbg !9681
  %26 = load i32, i32* %rt_int41, align 8, !dbg !9681
  %call42 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond35, i32 %26), !dbg !9681
  %call43 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond29, i32 %call42), !dbg !9681
  %sched_cycle44 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call43, i32 0, i32 10, !dbg !9681
  %27 = load i32, i32* %sched_cycle44, align 8, !dbg !9681
  %28 = load i32, i32* %last_cycle, align 4, !dbg !9682
  %cmp45 = icmp eq i32 %27, %28, !dbg !9683
  br label %land.end

land.end:                                         ; preds = %cond.end34, %while.cond
  %29 = phi i1 [ false, %while.cond ], [ %cmp45, %cond.end34 ], !dbg !9684
  br i1 %29, label %while.body, label %while.end, !dbg !9678

while.body:                                       ; preds = %land.end
  %30 = load %struct._list_node**, %struct._list_node*** %avp.addr, align 8, !dbg !9685
  %31 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !9687
  %u47 = getelementptr inbounds %struct._list_node, %struct._list_node* %31, i32 0, i32 1, !dbg !9687
  %x48 = bitcast %union.anon.0* %u47 to %struct.rtx_def**, !dbg !9687
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x48, align 8, !dbg !9687
  call void @moveup_set_expr(%struct._list_node** %30, %struct.rtx_def* %32, i8 zeroext 1), !dbg !9688
  %33 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !9689
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %33, i32 0, i32 0, !dbg !9689
  %34 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !9689
  store %struct._list_node* %34, %struct._list_node** %path.addr, align 8, !dbg !9690
  br label %while.cond, !dbg !9678, !llvm.loop !9691

while.end:                                        ; preds = %if.then11, %land.end
  ret void, !dbg !9693
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._expr* @fill_ready_list(%struct._list_node** %av_ptr, %struct._list_node* %bnds, %struct._fence* %fence, i32* %pneed_stall) #0 !dbg !9694 {
entry:
  %retval = alloca %struct._expr*, align 8
  %av_ptr.addr = alloca %struct._list_node**, align 8
  %bnds.addr = alloca %struct._list_node*, align 8
  %fence.addr = alloca %struct._fence*, align 8
  %pneed_stall.addr = alloca i32*, align 8
  %expr = alloca %struct._expr*, align 8
  store %struct._list_node** %av_ptr, %struct._list_node*** %av_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %av_ptr.addr, metadata !9695, metadata !DIExpression()), !dbg !9696
  store %struct._list_node* %bnds, %struct._list_node** %bnds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %bnds.addr, metadata !9697, metadata !DIExpression()), !dbg !9698
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !9699, metadata !DIExpression()), !dbg !9700
  store i32* %pneed_stall, i32** %pneed_stall.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pneed_stall.addr, metadata !9701, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !9703, metadata !DIExpression()), !dbg !9704
  %0 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !9705
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i32 0, i32 0, !dbg !9705
  %1 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !9705
  %cmp = icmp eq %struct._list_node* %1, null, !dbg !9705
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !9705

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4006, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9705
  br label %cond.end, !dbg !9705

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9705

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9705
  %2 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !9706
  call void @process_pipelined_exprs(%struct._list_node** %2), !dbg !9707
  %3 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !9708
  call void @process_spec_exprs(%struct._list_node** %3), !dbg !9709
  %4 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !9710
  %call = call %struct._expr* @process_use_exprs(%struct._list_node** %4), !dbg !9711
  store %struct._expr* %call, %struct._expr** %expr, align 8, !dbg !9712
  %5 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9713
  %tobool = icmp ne %struct._expr* %5, null, !dbg !9713
  br i1 %tobool, label %if.then, label %if.end, !dbg !9715

if.then:                                          ; preds = %cond.end
  %6 = load i32*, i32** %pneed_stall.addr, align 8, !dbg !9716
  store i32 0, i32* %6, align 4, !dbg !9718
  %7 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9719
  store %struct._expr* %7, %struct._expr** %retval, align 8, !dbg !9720
  br label %return, !dbg !9720

if.end:                                           ; preds = %cond.end
  %8 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !9721
  %9 = load %struct._list_node*, %struct._list_node** %8, align 8, !dbg !9723
  %10 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !9724
  %11 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9725
  %12 = load i32*, i32** %pneed_stall.addr, align 8, !dbg !9726
  %call1 = call zeroext i8 @fill_vec_av_set(%struct._list_node* %9, %struct._list_node* %10, %struct._fence* %11, i32* %12), !dbg !9727
  %tobool2 = icmp ne i8 %call1, 0, !dbg !9727
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9728

if.then3:                                         ; preds = %if.end
  store i32 0, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9729
  store %struct._expr* null, %struct._expr** %retval, align 8, !dbg !9731
  br label %return, !dbg !9731

if.end4:                                          ; preds = %if.end
  call void @convert_vec_av_set_to_ready(), !dbg !9732
  store %struct._expr* null, %struct._expr** %retval, align 8, !dbg !9733
  br label %return, !dbg !9733

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %13 = load %struct._expr*, %struct._expr** %retval, align 8, !dbg !9734
  ret %struct._expr* %13, !dbg !9734
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @invoke_reorder_hooks(%struct._fence* %fence) #0 !dbg !9735 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %issue_more = alloca i32, align 4
  %ran_hook = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  %arr = alloca %struct.rtx_def**, align 8
  %vec = alloca %struct._expr**, align 8
  %tmp = alloca %struct._expr*, align 8
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.declare(metadata i32* %issue_more, metadata !9740, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.declare(metadata i8* %ran_hook, metadata !9742, metadata !DIExpression()), !dbg !9743
  store i8 0, i8* %ran_hook, align 1, !dbg !9743
  %0 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9744
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %0, i32 0, i32 3, !dbg !9744
  %1 = load i32, i32* %cycle_issued_insns, align 4, !dbg !9744
  %cmp = icmp eq i32 %1, 0, !dbg !9746
  br i1 %cmp, label %if.then, label %if.else13, !dbg !9747

if.then:                                          ; preds = %entry
  %2 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 8), align 8, !dbg !9748
  %tobool = icmp ne i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* %2, null, !dbg !9751
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9752

land.lhs.true:                                    ; preds = %if.then
  %call = call %struct.rtx_def* @ready_element(%struct.ready_list* @ready, i32 0), !dbg !9753
  %3 = bitcast %struct.rtx_def* %call to i32*, !dbg !9753
  %bf.load = load i32, i32* %3, align 8, !dbg !9753
  %bf.lshr = lshr i32 %bf.load, 28, !dbg !9753
  %bf.clear = and i32 %bf.lshr, 1, !dbg !9753
  %tobool1 = icmp ne i32 %bf.clear, 0, !dbg !9753
  br i1 %tobool1, label %if.else, label %land.lhs.true2, !dbg !9754

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9755
  %cmp3 = icmp sgt i32 %4, 1, !dbg !9756
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !9757

if.then4:                                         ; preds = %land.lhs.true2
  %5 = load i8, i8* @pipelining_p, align 1, !dbg !9758
  %tobool5 = icmp ne i8 %5, 0, !dbg !9758
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !9761

if.then6:                                         ; preds = %if.then4
  %6 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9762
  %dec = add nsw i32 %6, -1, !dbg !9762
  store i32 %dec, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9762
  br label %if.end, !dbg !9762

if.end:                                           ; preds = %if.then6, %if.then4
  %7 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 8), align 8, !dbg !9763
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9764
  %9 = load i32, i32* @sched_verbose, align 4, !dbg !9765
  %call7 = call %struct.rtx_def** @ready_lastpos(%struct.ready_list* @ready), !dbg !9766
  %10 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9767
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %10, i32 0, i32 2, !dbg !9767
  %11 = load i32, i32* %cycle, align 8, !dbg !9767
  %call8 = call i32 %7(%struct._IO_FILE* %8, i32 %9, %struct.rtx_def** %call7, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), i32 %11), !dbg !9768
  store i32 %call8, i32* %issue_more, align 4, !dbg !9769
  %12 = load i8, i8* @pipelining_p, align 1, !dbg !9770
  %tobool9 = icmp ne i8 %12, 0, !dbg !9770
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9772

if.then10:                                        ; preds = %if.end
  %13 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9773
  %inc = add nsw i32 %13, 1, !dbg !9773
  store i32 %inc, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9773
  br label %if.end11, !dbg !9773

if.end11:                                         ; preds = %if.then10, %if.end
  store i8 1, i8* %ran_hook, align 1, !dbg !9774
  br label %if.end12, !dbg !9775

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.then
  %14 = load i32, i32* @issue_rate, align 4, !dbg !9776
  store i32 %14, i32* %issue_more, align 4, !dbg !9777
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.end11
  br label %if.end44, !dbg !9778

if.else13:                                        ; preds = %entry
  %15 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 9), align 8, !dbg !9779
  %tobool14 = icmp ne i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* %15, null, !dbg !9781
  br i1 %tobool14, label %land.lhs.true15, label %if.else41, !dbg !9782

land.lhs.true15:                                  ; preds = %if.else13
  %call16 = call %struct.rtx_def* @ready_element(%struct.ready_list* @ready, i32 0), !dbg !9783
  %16 = bitcast %struct.rtx_def* %call16 to i32*, !dbg !9783
  %bf.load17 = load i32, i32* %16, align 8, !dbg !9783
  %bf.lshr18 = lshr i32 %bf.load17, 28, !dbg !9783
  %bf.clear19 = and i32 %bf.lshr18, 1, !dbg !9783
  %tobool20 = icmp ne i32 %bf.clear19, 0, !dbg !9783
  br i1 %tobool20, label %if.else41, label %if.then21, !dbg !9784

if.then21:                                        ; preds = %land.lhs.true15
  %17 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9785
  %cmp22 = icmp eq i32 %17, 1, !dbg !9788
  br i1 %cmp22, label %if.then23, label %if.else27, !dbg !9789

if.then23:                                        ; preds = %if.then21
  %18 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 9), align 8, !dbg !9790
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9791
  %20 = load i32, i32* @sched_verbose, align 4, !dbg !9792
  %call24 = call %struct.rtx_def** @ready_lastpos(%struct.ready_list* @ready), !dbg !9793
  %21 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9794
  %cycle25 = getelementptr inbounds %struct._fence, %struct._fence* %21, i32 0, i32 2, !dbg !9794
  %22 = load i32, i32* %cycle25, align 8, !dbg !9794
  %call26 = call i32 %18(%struct._IO_FILE* %19, i32 %20, %struct.rtx_def** %call24, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), i32 %22), !dbg !9795
  store i32 %call26, i32* %issue_more, align 4, !dbg !9796
  br label %if.end40, !dbg !9797

if.else27:                                        ; preds = %if.then21
  %23 = load i8, i8* @pipelining_p, align 1, !dbg !9798
  %tobool28 = icmp ne i8 %23, 0, !dbg !9798
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !9801

if.then29:                                        ; preds = %if.else27
  %24 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9802
  %dec30 = add nsw i32 %24, -1, !dbg !9802
  store i32 %dec30, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9802
  br label %if.end31, !dbg !9802

if.end31:                                         ; preds = %if.then29, %if.else27
  %25 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 9), align 8, !dbg !9803
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9804
  %27 = load i32, i32* @sched_verbose, align 4, !dbg !9805
  %28 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9806
  %tobool32 = icmp ne i32 %28, 0, !dbg !9807
  br i1 %tobool32, label %cond.true, label %cond.false, !dbg !9807

cond.true:                                        ; preds = %if.end31
  %call33 = call %struct.rtx_def** @ready_lastpos(%struct.ready_list* @ready), !dbg !9808
  br label %cond.end, !dbg !9807

cond.false:                                       ; preds = %if.end31
  br label %cond.end, !dbg !9807

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def** [ %call33, %cond.true ], [ null, %cond.false ], !dbg !9807
  %29 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9809
  %cycle34 = getelementptr inbounds %struct._fence, %struct._fence* %29, i32 0, i32 2, !dbg !9809
  %30 = load i32, i32* %cycle34, align 8, !dbg !9809
  %call35 = call i32 %25(%struct._IO_FILE* %26, i32 %27, %struct.rtx_def** %cond, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), i32 %30), !dbg !9810
  store i32 %call35, i32* %issue_more, align 4, !dbg !9811
  %31 = load i8, i8* @pipelining_p, align 1, !dbg !9812
  %tobool36 = icmp ne i8 %31, 0, !dbg !9812
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !9814

if.then37:                                        ; preds = %cond.end
  %32 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9815
  %inc38 = add nsw i32 %32, 1, !dbg !9815
  store i32 %inc38, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9815
  br label %if.end39, !dbg !9815

if.end39:                                         ; preds = %if.then37, %cond.end
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then23
  store i8 1, i8* %ran_hook, align 1, !dbg !9816
  br label %if.end43, !dbg !9817

if.else41:                                        ; preds = %land.lhs.true15, %if.else13
  %33 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !9818
  %issue_more42 = getelementptr inbounds %struct._fence, %struct._fence* %33, i32 0, i32 11, !dbg !9818
  %34 = load i32, i32* %issue_more42, align 8, !dbg !9818
  store i32 %34, i32* %issue_more, align 4, !dbg !9819
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.end40
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end12
  %35 = load i32, i32* %issue_more, align 4, !dbg !9820
  %tobool45 = icmp ne i32 %35, 0, !dbg !9820
  br i1 %tobool45, label %land.lhs.true46, label %if.end95, !dbg !9822

land.lhs.true46:                                  ; preds = %if.end44
  %36 = load i8, i8* %ran_hook, align 1, !dbg !9823
  %conv = zext i8 %36 to i32, !dbg !9823
  %tobool47 = icmp ne i32 %conv, 0, !dbg !9823
  br i1 %tobool47, label %if.then48, label %if.end95, !dbg !9824

if.then48:                                        ; preds = %land.lhs.true46
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9825, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9828, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9830, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %arr, metadata !9832, metadata !DIExpression()), !dbg !9833
  %37 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 0), align 8, !dbg !9834
  store %struct.rtx_def** %37, %struct.rtx_def*** %arr, align 8, !dbg !9833
  call void @llvm.dbg.declare(metadata %struct._expr*** %vec, metadata !9835, metadata !DIExpression()), !dbg !9836
  %38 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9837
  %tobool49 = icmp ne %struct.VEC_expr_t_heap* %38, null, !dbg !9837
  br i1 %tobool49, label %cond.true50, label %cond.false51, !dbg !9837

cond.true50:                                      ; preds = %if.then48
  %39 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !9837
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %39, i32 0, i32 0, !dbg !9837
  br label %cond.end52, !dbg !9837

cond.false51:                                     ; preds = %if.then48
  br label %cond.end52, !dbg !9837

cond.end52:                                       ; preds = %cond.false51, %cond.true50
  %cond53 = phi %struct.VEC_expr_t_base* [ %base, %cond.true50 ], [ null, %cond.false51 ], !dbg !9837
  %call54 = call %struct._expr** @VEC_expr_t_base_address(%struct.VEC_expr_t_base* %cond53), !dbg !9837
  store %struct._expr** %call54, %struct._expr*** %vec, align 8, !dbg !9836
  store i32 0, i32* %i, align 4, !dbg !9838
  %40 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9840
  store i32 %40, i32* %n, align 4, !dbg !9841
  br label %for.cond, !dbg !9842

for.cond:                                         ; preds = %for.inc92, %cond.end52
  %41 = load i32, i32* %i, align 4, !dbg !9843
  %42 = load i32, i32* %n, align 4, !dbg !9845
  %cmp55 = icmp slt i32 %41, %42, !dbg !9846
  br i1 %cmp55, label %for.body, label %for.end94, !dbg !9847

for.body:                                         ; preds = %for.cond
  %43 = load %struct._expr**, %struct._expr*** %vec, align 8, !dbg !9848
  %44 = load i32, i32* %i, align 4, !dbg !9848
  %idxprom = sext i32 %44 to i64, !dbg !9848
  %arrayidx = getelementptr inbounds %struct._expr*, %struct._expr** %43, i64 %idxprom, !dbg !9848
  %45 = load %struct._expr*, %struct._expr** %arrayidx, align 8, !dbg !9848
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %45, i32 0, i32 0, !dbg !9848
  %46 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9848
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %46, i32 0, i32 0, !dbg !9848
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !9848
  %48 = load %struct.rtx_def**, %struct.rtx_def*** %arr, align 8, !dbg !9850
  %49 = load i32, i32* %i, align 4, !dbg !9851
  %idxprom57 = sext i32 %49 to i64, !dbg !9850
  %arrayidx58 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %48, i64 %idxprom57, !dbg !9850
  %50 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx58, align 8, !dbg !9850
  %cmp59 = icmp ne %struct.rtx_def* %47, %50, !dbg !9852
  br i1 %cmp59, label %if.then61, label %if.end91, !dbg !9853

if.then61:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct._expr** %tmp, metadata !9854, metadata !DIExpression()), !dbg !9856
  %51 = load i32, i32* %i, align 4, !dbg !9857
  store i32 %51, i32* %j, align 4, !dbg !9859
  br label %for.cond62, !dbg !9860

for.cond62:                                       ; preds = %for.inc, %if.then61
  %52 = load i32, i32* %j, align 4, !dbg !9861
  %53 = load i32, i32* %n, align 4, !dbg !9863
  %cmp63 = icmp slt i32 %52, %53, !dbg !9864
  br i1 %cmp63, label %for.body65, label %for.end, !dbg !9865

for.body65:                                       ; preds = %for.cond62
  %54 = load %struct._expr**, %struct._expr*** %vec, align 8, !dbg !9866
  %55 = load i32, i32* %j, align 4, !dbg !9866
  %idxprom66 = sext i32 %55 to i64, !dbg !9866
  %arrayidx67 = getelementptr inbounds %struct._expr*, %struct._expr** %54, i64 %idxprom66, !dbg !9866
  %56 = load %struct._expr*, %struct._expr** %arrayidx67, align 8, !dbg !9866
  %vinsn68 = getelementptr inbounds %struct._expr, %struct._expr* %56, i32 0, i32 0, !dbg !9866
  %57 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn68, align 8, !dbg !9866
  %insn_rtx69 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %57, i32 0, i32 0, !dbg !9866
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx69, align 8, !dbg !9866
  %59 = load %struct.rtx_def**, %struct.rtx_def*** %arr, align 8, !dbg !9868
  %60 = load i32, i32* %i, align 4, !dbg !9869
  %idxprom70 = sext i32 %60 to i64, !dbg !9868
  %arrayidx71 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %59, i64 %idxprom70, !dbg !9868
  %61 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx71, align 8, !dbg !9868
  %cmp72 = icmp eq %struct.rtx_def* %58, %61, !dbg !9870
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !9871

if.then74:                                        ; preds = %for.body65
  br label %for.end, !dbg !9872

if.end75:                                         ; preds = %for.body65
  br label %for.inc, !dbg !9873

for.inc:                                          ; preds = %if.end75
  %62 = load i32, i32* %j, align 4, !dbg !9874
  %inc76 = add nsw i32 %62, 1, !dbg !9874
  store i32 %inc76, i32* %j, align 4, !dbg !9874
  br label %for.cond62, !dbg !9875, !llvm.loop !9876

for.end:                                          ; preds = %if.then74, %for.cond62
  %63 = load i32, i32* %j, align 4, !dbg !9878
  %64 = load i32, i32* %n, align 4, !dbg !9878
  %cmp77 = icmp slt i32 %63, %64, !dbg !9878
  br i1 %cmp77, label %cond.false80, label %cond.true79, !dbg !9878

cond.true79:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4140, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9878
  br label %cond.end81, !dbg !9878

cond.false80:                                     ; preds = %for.end
  br label %cond.end81, !dbg !9878

cond.end81:                                       ; preds = %cond.false80, %cond.true79
  %cond82 = phi i32 [ 0, %cond.true79 ], [ 0, %cond.false80 ], !dbg !9878
  %65 = load %struct._expr**, %struct._expr*** %vec, align 8, !dbg !9879
  %66 = load i32, i32* %i, align 4, !dbg !9880
  %idxprom83 = sext i32 %66 to i64, !dbg !9879
  %arrayidx84 = getelementptr inbounds %struct._expr*, %struct._expr** %65, i64 %idxprom83, !dbg !9879
  %67 = load %struct._expr*, %struct._expr** %arrayidx84, align 8, !dbg !9879
  store %struct._expr* %67, %struct._expr** %tmp, align 8, !dbg !9881
  %68 = load %struct._expr**, %struct._expr*** %vec, align 8, !dbg !9882
  %69 = load i32, i32* %j, align 4, !dbg !9883
  %idxprom85 = sext i32 %69 to i64, !dbg !9882
  %arrayidx86 = getelementptr inbounds %struct._expr*, %struct._expr** %68, i64 %idxprom85, !dbg !9882
  %70 = load %struct._expr*, %struct._expr** %arrayidx86, align 8, !dbg !9882
  %71 = load %struct._expr**, %struct._expr*** %vec, align 8, !dbg !9884
  %72 = load i32, i32* %i, align 4, !dbg !9885
  %idxprom87 = sext i32 %72 to i64, !dbg !9884
  %arrayidx88 = getelementptr inbounds %struct._expr*, %struct._expr** %71, i64 %idxprom87, !dbg !9884
  store %struct._expr* %70, %struct._expr** %arrayidx88, align 8, !dbg !9886
  %73 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !9887
  %74 = load %struct._expr**, %struct._expr*** %vec, align 8, !dbg !9888
  %75 = load i32, i32* %j, align 4, !dbg !9889
  %idxprom89 = sext i32 %75 to i64, !dbg !9888
  %arrayidx90 = getelementptr inbounds %struct._expr*, %struct._expr** %74, i64 %idxprom89, !dbg !9888
  store %struct._expr* %73, %struct._expr** %arrayidx90, align 8, !dbg !9890
  br label %if.end91, !dbg !9891

if.end91:                                         ; preds = %cond.end81, %for.body
  br label %for.inc92, !dbg !9892

for.inc92:                                        ; preds = %if.end91
  %76 = load i32, i32* %i, align 4, !dbg !9893
  %inc93 = add nsw i32 %76, 1, !dbg !9893
  store i32 %inc93, i32* %i, align 4, !dbg !9893
  br label %for.cond, !dbg !9894, !llvm.loop !9895

for.end94:                                        ; preds = %for.cond
  br label %if.end95, !dbg !9897

if.end95:                                         ; preds = %for.end94, %land.lhs.true46, %if.end44
  %77 = load i32, i32* %issue_more, align 4, !dbg !9898
  ret i32 %77, !dbg !9899
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @invoke_dfa_lookahead_guard() #0 !dbg !9900 {
entry:
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %have_hook = alloca i8, align 1
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %expr = alloca %struct._expr*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %r = alloca i32, align 4
  %__j49 = alloca i32, align 4
  %__s56 = alloca i8*, align 8
  %__j82 = alloca i32, align 4
  %__s86 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9903, metadata !DIExpression()), !dbg !9904
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9905, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.declare(metadata i8* %have_hook, metadata !9907, metadata !DIExpression()), !dbg !9908
  %0 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 18), align 8, !dbg !9909
  %cmp = icmp ne i32 (%struct.rtx_def*)* %0, null, !dbg !9910
  %conv = zext i1 %cmp to i32, !dbg !9910
  %conv1 = trunc i32 %conv to i8, !dbg !9911
  store i8 %conv1, i8* %have_hook, align 1, !dbg !9908
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !9912
  %cmp2 = icmp sge i32 %1, 2, !dbg !9914
  br i1 %cmp2, label %if.then, label %if.end13, !dbg !9915

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9916

do.body:                                          ; preds = %if.then
  %2 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9917
  %tobool = icmp ne i8 %2, 0, !dbg !9917
  br i1 %tobool, label %if.then4, label %if.else, !dbg !9920

if.then4:                                         ; preds = %do.body
  br label %do.body5, !dbg !9917

do.body5:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !9921, metadata !DIExpression()), !dbg !9923
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i64 0, i64 0)), !dbg !9923
  %mul = mul nsw i32 2, %call, !dbg !9923
  %add = add nsw i32 1, %mul, !dbg !9923
  store i32 %add, i32* %__j, align 4, !dbg !9923
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !9924, metadata !DIExpression()), !dbg !9923
  %3 = load i32, i32* %__j, align 4, !dbg !9923
  %conv6 = sext i32 %3 to i64, !dbg !9923
  %mul7 = mul i64 1, %conv6, !dbg !9923
  %4 = alloca i8, i64 %mul7, align 16, !dbg !9923
  store i8* %4, i8** %__s, align 8, !dbg !9923
  %5 = load i8*, i8** %__s, align 8, !dbg !9923
  %6 = load i32, i32* %__j, align 4, !dbg !9923
  %conv8 = sext i32 %6 to i64, !dbg !9923
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 %conv8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i64 0, i64 0)), !dbg !9923
  %7 = load i8*, i8** %__s, align 8, !dbg !9923
  call void @sel_prepare_string_for_dot_label(i8* %7), !dbg !9923
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9923
  %9 = load i8*, i8** %__s, align 8, !dbg !9923
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %9), !dbg !9923
  br label %do.end, !dbg !9923

do.end:                                           ; preds = %do.body5
  br label %if.end, !dbg !9923

if.else:                                          ; preds = %do.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9917
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i64 0, i64 0)), !dbg !9917
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end12, !dbg !9920

do.end12:                                         ; preds = %if.end
  br label %if.end13, !dbg !9920

if.end13:                                         ; preds = %do.end12, %entry
  store i32 0, i32* %i, align 4, !dbg !9925
  store i32 0, i32* %n, align 4, !dbg !9927
  br label %for.cond, !dbg !9928

for.cond:                                         ; preds = %for.inc, %if.end13
  %11 = load i32, i32* %i, align 4, !dbg !9929
  %12 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !9931
  %cmp14 = icmp slt i32 %11, %12, !dbg !9932
  br i1 %cmp14, label %for.body, label %for.end, !dbg !9933

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !9934, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !9937, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9939, metadata !DIExpression()), !dbg !9940
  %13 = load i32, i32* %i, align 4, !dbg !9941
  %call16 = call %struct.rtx_def* @ready_element(%struct.ready_list* @ready, i32 %13), !dbg !9942
  store %struct.rtx_def* %call16, %struct.rtx_def** %insn, align 8, !dbg !9943
  %14 = load i8, i8* %have_hook, align 1, !dbg !9944
  %tobool17 = icmp ne i8 %14, 0, !dbg !9944
  br i1 %tobool17, label %lor.lhs.false, label %if.then20, !dbg !9946

lor.lhs.false:                                    ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !9947
  %cmp18 = icmp eq i32 %15, 0, !dbg !9948
  br i1 %cmp18, label %if.then20, label %if.else21, !dbg !9949

if.then20:                                        ; preds = %lor.lhs.false, %for.body
  store i32 0, i32* %r, align 4, !dbg !9950
  br label %if.end24, !dbg !9951

if.else21:                                        ; preds = %lor.lhs.false
  %16 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 18), align 8, !dbg !9952
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9953
  %call22 = call i32 %16(%struct.rtx_def* %17), !dbg !9954
  %tobool23 = icmp ne i32 %call22, 0, !dbg !9955
  %lnot = xor i1 %tobool23, true, !dbg !9955
  %lnot.ext = zext i1 %lnot to i32, !dbg !9955
  store i32 %lnot.ext, i32* %r, align 4, !dbg !9956
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %if.then20
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9957
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !9957
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9957
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 6, !dbg !9957
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9957
  %19 = load i32, i32* %rt_int, align 8, !dbg !9957
  %cmp25 = icmp sge i32 %19, 0, !dbg !9957
  br i1 %cmp25, label %cond.false, label %cond.true, !dbg !9957

cond.true:                                        ; preds = %if.end24
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9957
  br label %cond.end, !dbg !9957

cond.false:                                       ; preds = %if.end24
  br label %cond.end, !dbg !9957

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9957
  %20 = load i8*, i8** @ready_try, align 8, !dbg !9958
  %21 = load i32, i32* %i, align 4, !dbg !9958
  %idxprom = sext i32 %21 to i64, !dbg !9958
  %arrayidx27 = getelementptr inbounds i8, i8* %20, i64 %idxprom, !dbg !9958
  %22 = load i8, i8* %arrayidx27, align 1, !dbg !9958
  %conv28 = sext i8 %22 to i32, !dbg !9958
  %cmp29 = icmp eq i32 %conv28, 0, !dbg !9958
  br i1 %cmp29, label %cond.false32, label %cond.true31, !dbg !9958

cond.true31:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4200, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9958
  br label %cond.end33, !dbg !9958

cond.false32:                                     ; preds = %cond.end
  br label %cond.end33, !dbg !9958

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond34 = phi i32 [ 0, %cond.true31 ], [ 0, %cond.false32 ], !dbg !9958
  %23 = load i32, i32* %r, align 4, !dbg !9959
  %conv35 = trunc i32 %23 to i8, !dbg !9959
  %24 = load i8*, i8** @ready_try, align 8, !dbg !9960
  %25 = load i32, i32* %i, align 4, !dbg !9961
  %idxprom36 = sext i32 %25 to i64, !dbg !9960
  %arrayidx37 = getelementptr inbounds i8, i8* %24, i64 %idxprom36, !dbg !9960
  store i8 %conv35, i8* %arrayidx37, align 1, !dbg !9962
  %26 = load i32, i32* %r, align 4, !dbg !9963
  %tobool38 = icmp ne i32 %26, 0, !dbg !9963
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !9965

if.then39:                                        ; preds = %cond.end33
  %27 = load i32, i32* %n, align 4, !dbg !9966
  %inc = add nsw i32 %27, 1, !dbg !9966
  store i32 %inc, i32* %n, align 4, !dbg !9966
  br label %if.end40, !dbg !9967

if.end40:                                         ; preds = %if.then39, %cond.end33
  %28 = load i32, i32* %i, align 4, !dbg !9968
  %call41 = call %struct._expr* @find_expr_for_ready(i32 %28, i8 zeroext 1), !dbg !9969
  store %struct._expr* %call41, %struct._expr** %expr, align 8, !dbg !9970
  %29 = load i32, i32* @sched_verbose, align 4, !dbg !9971
  %cmp42 = icmp sge i32 %29, 2, !dbg !9973
  br i1 %cmp42, label %if.then44, label %if.end73, !dbg !9974

if.then44:                                        ; preds = %if.end40
  %30 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !9975
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %30, i32 0, i32 0, !dbg !9975
  %31 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !9975
  call void @dump_vinsn(%struct.vinsn_def* %31), !dbg !9977
  br label %do.body45, !dbg !9978

do.body45:                                        ; preds = %if.then44
  %32 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9979
  %tobool46 = icmp ne i8 %32, 0, !dbg !9979
  br i1 %tobool46, label %if.then47, label %if.else66, !dbg !9982

if.then47:                                        ; preds = %do.body45
  br label %do.body48, !dbg !9979

do.body48:                                        ; preds = %if.then47
  call void @llvm.dbg.declare(metadata i32* %__j49, metadata !9983, metadata !DIExpression()), !dbg !9985
  %33 = load i8*, i8** @ready_try, align 8, !dbg !9985
  %34 = load i32, i32* %i, align 4, !dbg !9985
  %idxprom50 = sext i32 %34 to i64, !dbg !9985
  %arrayidx51 = getelementptr inbounds i8, i8* %33, i64 %idxprom50, !dbg !9985
  %35 = load i8, i8* %arrayidx51, align 1, !dbg !9985
  %conv52 = sext i8 %35 to i32, !dbg !9985
  %call53 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 %conv52), !dbg !9985
  %mul54 = mul nsw i32 2, %call53, !dbg !9985
  %add55 = add nsw i32 1, %mul54, !dbg !9985
  store i32 %add55, i32* %__j49, align 4, !dbg !9985
  call void @llvm.dbg.declare(metadata i8** %__s56, metadata !9986, metadata !DIExpression()), !dbg !9985
  %36 = load i32, i32* %__j49, align 4, !dbg !9985
  %conv57 = sext i32 %36 to i64, !dbg !9985
  %mul58 = mul i64 1, %conv57, !dbg !9985
  %37 = alloca i8, i64 %mul58, align 16, !dbg !9985
  store i8* %37, i8** %__s56, align 8, !dbg !9985
  %38 = load i8*, i8** %__s56, align 8, !dbg !9985
  %39 = load i32, i32* %__j49, align 4, !dbg !9985
  %conv59 = sext i32 %39 to i64, !dbg !9985
  %40 = load i8*, i8** @ready_try, align 8, !dbg !9985
  %41 = load i32, i32* %i, align 4, !dbg !9985
  %idxprom60 = sext i32 %41 to i64, !dbg !9985
  %arrayidx61 = getelementptr inbounds i8, i8* %40, i64 %idxprom60, !dbg !9985
  %42 = load i8, i8* %arrayidx61, align 1, !dbg !9985
  %conv62 = sext i8 %42 to i32, !dbg !9985
  %call63 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %38, i64 %conv59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 %conv62), !dbg !9985
  %43 = load i8*, i8** %__s56, align 8, !dbg !9985
  call void @sel_prepare_string_for_dot_label(i8* %43), !dbg !9985
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9985
  %45 = load i8*, i8** %__s56, align 8, !dbg !9985
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %45), !dbg !9985
  br label %do.end65, !dbg !9985

do.end65:                                         ; preds = %do.body48
  br label %if.end71, !dbg !9985

if.else66:                                        ; preds = %do.body45
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9979
  %47 = load i8*, i8** @ready_try, align 8, !dbg !9979
  %48 = load i32, i32* %i, align 4, !dbg !9979
  %idxprom67 = sext i32 %48 to i64, !dbg !9979
  %arrayidx68 = getelementptr inbounds i8, i8* %47, i64 %idxprom67, !dbg !9979
  %49 = load i8, i8* %arrayidx68, align 1, !dbg !9979
  %conv69 = sext i8 %49 to i32, !dbg !9979
  %call70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 %conv69), !dbg !9979
  br label %if.end71

if.end71:                                         ; preds = %if.else66, %do.end65
  br label %do.end72, !dbg !9982

do.end72:                                         ; preds = %if.end71
  br label %if.end73, !dbg !9987

if.end73:                                         ; preds = %do.end72, %if.end40
  br label %for.inc, !dbg !9988

for.inc:                                          ; preds = %if.end73
  %50 = load i32, i32* %i, align 4, !dbg !9989
  %inc74 = add nsw i32 %50, 1, !dbg !9989
  store i32 %inc74, i32* %i, align 4, !dbg !9989
  br label %for.cond, !dbg !9990, !llvm.loop !9991

for.end:                                          ; preds = %for.cond
  %51 = load i32, i32* @sched_verbose, align 4, !dbg !9993
  %cmp75 = icmp sge i32 %51, 2, !dbg !9995
  br i1 %cmp75, label %if.then77, label %if.end97, !dbg !9996

if.then77:                                        ; preds = %for.end
  br label %do.body78, !dbg !9997

do.body78:                                        ; preds = %if.then77
  %52 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !9998
  %tobool79 = icmp ne i8 %52, 0, !dbg !9998
  br i1 %tobool79, label %if.then80, label %if.else93, !dbg !10001

if.then80:                                        ; preds = %do.body78
  br label %do.body81, !dbg !9998

do.body81:                                        ; preds = %if.then80
  call void @llvm.dbg.declare(metadata i32* %__j82, metadata !10002, metadata !DIExpression()), !dbg !10004
  %call83 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !10004
  %mul84 = mul nsw i32 2, %call83, !dbg !10004
  %add85 = add nsw i32 1, %mul84, !dbg !10004
  store i32 %add85, i32* %__j82, align 4, !dbg !10004
  call void @llvm.dbg.declare(metadata i8** %__s86, metadata !10005, metadata !DIExpression()), !dbg !10004
  %53 = load i32, i32* %__j82, align 4, !dbg !10004
  %conv87 = sext i32 %53 to i64, !dbg !10004
  %mul88 = mul i64 1, %conv87, !dbg !10004
  %54 = alloca i8, i64 %mul88, align 16, !dbg !10004
  store i8* %54, i8** %__s86, align 8, !dbg !10004
  %55 = load i8*, i8** %__s86, align 8, !dbg !10004
  %56 = load i32, i32* %__j82, align 4, !dbg !10004
  %conv89 = sext i32 %56 to i64, !dbg !10004
  %call90 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %55, i64 %conv89, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !10004
  %57 = load i8*, i8** %__s86, align 8, !dbg !10004
  call void @sel_prepare_string_for_dot_label(i8* %57), !dbg !10004
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10004
  %59 = load i8*, i8** %__s86, align 8, !dbg !10004
  %call91 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %59), !dbg !10004
  br label %do.end92, !dbg !10004

do.end92:                                         ; preds = %do.body81
  br label %if.end95, !dbg !10004

if.else93:                                        ; preds = %do.body78
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !9998
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !9998
  br label %if.end95

if.end95:                                         ; preds = %if.else93, %do.end92
  br label %do.end96, !dbg !10001

do.end96:                                         ; preds = %if.end95
  br label %if.end97, !dbg !10001

if.end97:                                         ; preds = %do.end96, %for.end
  %61 = load i32, i32* %n, align 4, !dbg !10006
  ret i32 %61, !dbg !10007
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @calculate_privileged_insns() #0 !dbg !10008 {
entry:
  %cur_expr = alloca %struct._expr*, align 8
  %min_spec_expr = alloca %struct._expr*, align 8
  %privileged_n = alloca i32, align 4
  %i = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %cur_expr, metadata !10009, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.declare(metadata %struct._expr** %min_spec_expr, metadata !10011, metadata !DIExpression()), !dbg !10012
  store %struct._expr* null, %struct._expr** %min_spec_expr, align 8, !dbg !10012
  call void @llvm.dbg.declare(metadata i32* %privileged_n, metadata !10013, metadata !DIExpression()), !dbg !10014
  store i32 0, i32* %privileged_n, align 4, !dbg !10014
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10015, metadata !DIExpression()), !dbg !10016
  store i32 0, i32* %i, align 4, !dbg !10017
  br label %for.cond, !dbg !10019

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10020
  %1 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !10022
  %cmp = icmp slt i32 %0, %1, !dbg !10023
  br i1 %cmp, label %for.body, label %for.end, !dbg !10024

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** @ready_try, align 8, !dbg !10025
  %3 = load i32, i32* %i, align 4, !dbg !10028
  %idxprom = sext i32 %3 to i64, !dbg !10025
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !10025
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10025
  %tobool = icmp ne i8 %4, 0, !dbg !10025
  br i1 %tobool, label %if.then, label %if.end, !dbg !10029

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !10030

if.end:                                           ; preds = %for.body
  %5 = load %struct._expr*, %struct._expr** %min_spec_expr, align 8, !dbg !10031
  %tobool1 = icmp ne %struct._expr* %5, null, !dbg !10031
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !10033

if.then2:                                         ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !10034
  %call = call %struct._expr* @find_expr_for_ready(i32 %6, i8 zeroext 1), !dbg !10035
  store %struct._expr* %call, %struct._expr** %min_spec_expr, align 8, !dbg !10036
  br label %if.end3, !dbg !10037

if.end3:                                          ; preds = %if.then2, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !10038
  %call4 = call %struct._expr* @find_expr_for_ready(i32 %7, i8 zeroext 1), !dbg !10039
  store %struct._expr* %call4, %struct._expr** %cur_expr, align 8, !dbg !10040
  %8 = load %struct._expr*, %struct._expr** %cur_expr, align 8, !dbg !10041
  %spec = getelementptr inbounds %struct._expr, %struct._expr* %8, i32 0, i32 1, !dbg !10041
  %9 = load i32, i32* %spec, align 8, !dbg !10041
  %10 = load %struct._expr*, %struct._expr** %min_spec_expr, align 8, !dbg !10043
  %spec5 = getelementptr inbounds %struct._expr, %struct._expr* %10, i32 0, i32 1, !dbg !10043
  %11 = load i32, i32* %spec5, align 8, !dbg !10043
  %cmp6 = icmp sgt i32 %9, %11, !dbg !10044
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10045

if.then7:                                         ; preds = %if.end3
  br label %for.end, !dbg !10046

if.end8:                                          ; preds = %if.end3
  %12 = load i32, i32* %privileged_n, align 4, !dbg !10047
  %inc = add nsw i32 %12, 1, !dbg !10047
  store i32 %inc, i32* %privileged_n, align 4, !dbg !10047
  br label %for.inc, !dbg !10048

for.inc:                                          ; preds = %if.end8, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !10049
  %inc9 = add nsw i32 %13, 1, !dbg !10049
  store i32 %inc9, i32* %i, align 4, !dbg !10049
  br label %for.cond, !dbg !10050, !llvm.loop !10051

for.end:                                          ; preds = %if.then7, %for.cond
  %14 = load i32, i32* %i, align 4, !dbg !10053
  %15 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !10055
  %cmp10 = icmp eq i32 %14, %15, !dbg !10056
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10057

if.then11:                                        ; preds = %for.end
  store i32 0, i32* %privileged_n, align 4, !dbg !10058
  br label %if.end12, !dbg !10059

if.end12:                                         ; preds = %if.then11, %for.end
  %16 = load i32, i32* @sched_verbose, align 4, !dbg !10060
  %cmp13 = icmp sge i32 %16, 2, !dbg !10062
  br i1 %cmp13, label %if.then14, label %if.end40, !dbg !10063

if.then14:                                        ; preds = %if.end12
  br label %do.body, !dbg !10064

do.body:                                          ; preds = %if.then14
  %17 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10065
  %tobool15 = icmp ne i8 %17, 0, !dbg !10065
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !10068

if.then16:                                        ; preds = %do.body
  br label %do.body17, !dbg !10065

do.body17:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !10069, metadata !DIExpression()), !dbg !10071
  %18 = load i32, i32* %privileged_n, align 4, !dbg !10071
  %19 = load i32, i32* %privileged_n, align 4, !dbg !10071
  %tobool18 = icmp ne i32 %19, 0, !dbg !10071
  br i1 %tobool18, label %cond.true, label %cond.false, !dbg !10071

cond.true:                                        ; preds = %do.body17
  %20 = load %struct._expr*, %struct._expr** %min_spec_expr, align 8, !dbg !10071
  %spec19 = getelementptr inbounds %struct._expr, %struct._expr* %20, i32 0, i32 1, !dbg !10071
  %21 = load i32, i32* %spec19, align 8, !dbg !10071
  br label %cond.end, !dbg !10071

cond.false:                                       ; preds = %do.body17
  br label %cond.end, !dbg !10071

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ -1, %cond.false ], !dbg !10071
  %call20 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.71, i64 0, i64 0), i32 %18, i32 %cond), !dbg !10071
  %mul = mul nsw i32 2, %call20, !dbg !10071
  %add = add nsw i32 1, %mul, !dbg !10071
  store i32 %add, i32* %__j, align 4, !dbg !10071
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !10072, metadata !DIExpression()), !dbg !10071
  %22 = load i32, i32* %__j, align 4, !dbg !10071
  %conv = sext i32 %22 to i64, !dbg !10071
  %mul21 = mul i64 1, %conv, !dbg !10071
  %23 = alloca i8, i64 %mul21, align 16, !dbg !10071
  store i8* %23, i8** %__s, align 8, !dbg !10071
  %24 = load i8*, i8** %__s, align 8, !dbg !10071
  %25 = load i32, i32* %__j, align 4, !dbg !10071
  %conv22 = sext i32 %25 to i64, !dbg !10071
  %26 = load i32, i32* %privileged_n, align 4, !dbg !10071
  %27 = load i32, i32* %privileged_n, align 4, !dbg !10071
  %tobool23 = icmp ne i32 %27, 0, !dbg !10071
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !10071

cond.true24:                                      ; preds = %cond.end
  %28 = load %struct._expr*, %struct._expr** %min_spec_expr, align 8, !dbg !10071
  %spec25 = getelementptr inbounds %struct._expr, %struct._expr* %28, i32 0, i32 1, !dbg !10071
  %29 = load i32, i32* %spec25, align 8, !dbg !10071
  br label %cond.end27, !dbg !10071

cond.false26:                                     ; preds = %cond.end
  br label %cond.end27, !dbg !10071

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi i32 [ %29, %cond.true24 ], [ -1, %cond.false26 ], !dbg !10071
  %call29 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %24, i64 %conv22, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.71, i64 0, i64 0), i32 %26, i32 %cond28), !dbg !10071
  %30 = load i8*, i8** %__s, align 8, !dbg !10071
  call void @sel_prepare_string_for_dot_label(i8* %30), !dbg !10071
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10071
  %32 = load i8*, i8** %__s, align 8, !dbg !10071
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %32), !dbg !10071
  br label %do.end, !dbg !10071

do.end:                                           ; preds = %cond.end27
  br label %if.end38, !dbg !10071

if.else:                                          ; preds = %do.body
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10065
  %34 = load i32, i32* %privileged_n, align 4, !dbg !10065
  %35 = load i32, i32* %privileged_n, align 4, !dbg !10065
  %tobool31 = icmp ne i32 %35, 0, !dbg !10065
  br i1 %tobool31, label %cond.true32, label %cond.false34, !dbg !10065

cond.true32:                                      ; preds = %if.else
  %36 = load %struct._expr*, %struct._expr** %min_spec_expr, align 8, !dbg !10065
  %spec33 = getelementptr inbounds %struct._expr, %struct._expr* %36, i32 0, i32 1, !dbg !10065
  %37 = load i32, i32* %spec33, align 8, !dbg !10065
  br label %cond.end35, !dbg !10065

cond.false34:                                     ; preds = %if.else
  br label %cond.end35, !dbg !10065

cond.end35:                                       ; preds = %cond.false34, %cond.true32
  %cond36 = phi i32 [ %37, %cond.true32 ], [ -1, %cond.false34 ], !dbg !10065
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.71, i64 0, i64 0), i32 %34, i32 %cond36), !dbg !10065
  br label %if.end38

if.end38:                                         ; preds = %cond.end35, %do.end
  br label %do.end39, !dbg !10068

do.end39:                                         ; preds = %if.end38
  br label %if.end40, !dbg !10068

if.end40:                                         ; preds = %do.end39, %if.end12
  %38 = load i32, i32* %privileged_n, align 4, !dbg !10073
  ret i32 %38, !dbg !10074
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @choose_best_insn(%struct._fence* %fence, i32 %privileged_n, i32* %index) #0 !dbg !10075 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %privileged_n.addr = alloca i32, align 4
  %index.addr = alloca i32*, align 8
  %can_issue = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %i = alloca i32, align 4
  %expr = alloca %struct._expr*, align 8
  %__j31 = alloca i32, align 4
  %__s36 = alloca i8*, align 8
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !10078, metadata !DIExpression()), !dbg !10079
  store i32 %privileged_n, i32* %privileged_n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %privileged_n.addr, metadata !10080, metadata !DIExpression()), !dbg !10081
  store i32* %index, i32** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index.addr, metadata !10082, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.declare(metadata i32* %can_issue, metadata !10084, metadata !DIExpression()), !dbg !10085
  store i32 0, i32* %can_issue, align 4, !dbg !10085
  %0 = load i32, i32* @dfa_lookahead, align 4, !dbg !10086
  %cmp = icmp sgt i32 %0, 0, !dbg !10088
  br i1 %cmp, label %if.then, label %if.else16, !dbg !10089

if.then:                                          ; preds = %entry
  %1 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10090
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %1, i32 0, i32 3, !dbg !10090
  %2 = load i32, i32* %cycle_issued_insns, align 4, !dbg !10090
  store i32 %2, i32* @cycle_issued_insns, align 4, !dbg !10092
  %3 = load i32, i32* %privileged_n.addr, align 4, !dbg !10093
  %4 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10094
  %state = getelementptr inbounds %struct._fence, %struct._fence* %4, i32 0, i32 1, !dbg !10094
  %5 = load i8*, i8** %state, align 8, !dbg !10094
  %6 = load i32*, i32** %index.addr, align 8, !dbg !10095
  %call = call i32 @max_issue(%struct.ready_list* @ready, i32 %3, i8* %5, i32* %6), !dbg !10096
  store i32 %call, i32* %can_issue, align 4, !dbg !10097
  %7 = load i32, i32* @sched_verbose, align 4, !dbg !10098
  %cmp1 = icmp sge i32 %7, 2, !dbg !10100
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !10101

if.then2:                                         ; preds = %if.then
  br label %do.body, !dbg !10102

do.body:                                          ; preds = %if.then2
  %8 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10103
  %tobool = icmp ne i8 %8, 0, !dbg !10103
  br i1 %tobool, label %if.then3, label %if.else, !dbg !10106

if.then3:                                         ; preds = %do.body
  br label %do.body4, !dbg !10103

do.body4:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !10107, metadata !DIExpression()), !dbg !10109
  %9 = load i32, i32* %can_issue, align 4, !dbg !10109
  %10 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10109
  %cycle_issued_insns5 = getelementptr inbounds %struct._fence, %struct._fence* %10, i32 0, i32 3, !dbg !10109
  %11 = load i32, i32* %cycle_issued_insns5, align 4, !dbg !10109
  %call6 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.72, i64 0, i64 0), i32 %9, i32 %11), !dbg !10109
  %mul = mul nsw i32 2, %call6, !dbg !10109
  %add = add nsw i32 1, %mul, !dbg !10109
  store i32 %add, i32* %__j, align 4, !dbg !10109
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !10110, metadata !DIExpression()), !dbg !10109
  %12 = load i32, i32* %__j, align 4, !dbg !10109
  %conv = sext i32 %12 to i64, !dbg !10109
  %mul7 = mul i64 1, %conv, !dbg !10109
  %13 = alloca i8, i64 %mul7, align 16, !dbg !10109
  store i8* %13, i8** %__s, align 8, !dbg !10109
  %14 = load i8*, i8** %__s, align 8, !dbg !10109
  %15 = load i32, i32* %__j, align 4, !dbg !10109
  %conv8 = sext i32 %15 to i64, !dbg !10109
  %16 = load i32, i32* %can_issue, align 4, !dbg !10109
  %17 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10109
  %cycle_issued_insns9 = getelementptr inbounds %struct._fence, %struct._fence* %17, i32 0, i32 3, !dbg !10109
  %18 = load i32, i32* %cycle_issued_insns9, align 4, !dbg !10109
  %call10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %14, i64 %conv8, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.72, i64 0, i64 0), i32 %16, i32 %18), !dbg !10109
  %19 = load i8*, i8** %__s, align 8, !dbg !10109
  call void @sel_prepare_string_for_dot_label(i8* %19), !dbg !10109
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10109
  %21 = load i8*, i8** %__s, align 8, !dbg !10109
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %21), !dbg !10109
  br label %do.end, !dbg !10109

do.end:                                           ; preds = %do.body4
  br label %if.end, !dbg !10109

if.else:                                          ; preds = %do.body
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10103
  %23 = load i32, i32* %can_issue, align 4, !dbg !10103
  %24 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10103
  %cycle_issued_insns12 = getelementptr inbounds %struct._fence, %struct._fence* %24, i32 0, i32 3, !dbg !10103
  %25 = load i32, i32* %cycle_issued_insns12, align 4, !dbg !10103
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.72, i64 0, i64 0), i32 %23, i32 %25), !dbg !10103
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end14, !dbg !10106

do.end14:                                         ; preds = %if.end
  br label %if.end15, !dbg !10106

if.end15:                                         ; preds = %do.end14, %if.then
  br label %if.end55, !dbg !10111

if.else16:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10112, metadata !DIExpression()), !dbg !10114
  store i32 0, i32* %i, align 4, !dbg !10115
  br label %for.cond, !dbg !10117

for.cond:                                         ; preds = %for.inc, %if.else16
  %26 = load i32, i32* %i, align 4, !dbg !10118
  %27 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !10120
  %cmp17 = icmp slt i32 %26, %27, !dbg !10121
  br i1 %cmp17, label %for.body, label %for.end, !dbg !10122

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !10123, metadata !DIExpression()), !dbg !10125
  %28 = load i32, i32* %i, align 4, !dbg !10126
  %call19 = call %struct._expr* @find_expr_for_ready(i32 %28, i8 zeroext 1), !dbg !10127
  store %struct._expr* %call19, %struct._expr** %expr, align 8, !dbg !10125
  %29 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10128
  %30 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10130
  %call20 = call i32 @get_expr_cost(%struct._expr* %29, %struct._fence* %30), !dbg !10131
  %cmp21 = icmp slt i32 %call20, 1, !dbg !10132
  br i1 %cmp21, label %if.then23, label %if.end50, !dbg !10133

if.then23:                                        ; preds = %for.body
  %31 = load i32, i32* @can_issue_more, align 4, !dbg !10134
  store i32 %31, i32* %can_issue, align 4, !dbg !10136
  %32 = load i32, i32* %i, align 4, !dbg !10137
  %33 = load i32*, i32** %index.addr, align 8, !dbg !10138
  store i32 %32, i32* %33, align 4, !dbg !10139
  %34 = load i32, i32* @sched_verbose, align 4, !dbg !10140
  %cmp24 = icmp sge i32 %34, 2, !dbg !10142
  br i1 %cmp24, label %if.then26, label %if.end49, !dbg !10143

if.then26:                                        ; preds = %if.then23
  br label %do.body27, !dbg !10144

do.body27:                                        ; preds = %if.then26
  %35 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10145
  %tobool28 = icmp ne i8 %35, 0, !dbg !10145
  br i1 %tobool28, label %if.then29, label %if.else44, !dbg !10148

if.then29:                                        ; preds = %do.body27
  br label %do.body30, !dbg !10145

do.body30:                                        ; preds = %if.then29
  call void @llvm.dbg.declare(metadata i32* %__j31, metadata !10149, metadata !DIExpression()), !dbg !10151
  %36 = load i32, i32* %i, align 4, !dbg !10151
  %add32 = add nsw i32 %36, 1, !dbg !10151
  %call33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.73, i64 0, i64 0), i32 %add32), !dbg !10151
  %mul34 = mul nsw i32 2, %call33, !dbg !10151
  %add35 = add nsw i32 1, %mul34, !dbg !10151
  store i32 %add35, i32* %__j31, align 4, !dbg !10151
  call void @llvm.dbg.declare(metadata i8** %__s36, metadata !10152, metadata !DIExpression()), !dbg !10151
  %37 = load i32, i32* %__j31, align 4, !dbg !10151
  %conv37 = sext i32 %37 to i64, !dbg !10151
  %mul38 = mul i64 1, %conv37, !dbg !10151
  %38 = alloca i8, i64 %mul38, align 16, !dbg !10151
  store i8* %38, i8** %__s36, align 8, !dbg !10151
  %39 = load i8*, i8** %__s36, align 8, !dbg !10151
  %40 = load i32, i32* %__j31, align 4, !dbg !10151
  %conv39 = sext i32 %40 to i64, !dbg !10151
  %41 = load i32, i32* %i, align 4, !dbg !10151
  %add40 = add nsw i32 %41, 1, !dbg !10151
  %call41 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %39, i64 %conv39, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.73, i64 0, i64 0), i32 %add40), !dbg !10151
  %42 = load i8*, i8** %__s36, align 8, !dbg !10151
  call void @sel_prepare_string_for_dot_label(i8* %42), !dbg !10151
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10151
  %44 = load i8*, i8** %__s36, align 8, !dbg !10151
  %call42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %44), !dbg !10151
  br label %do.end43, !dbg !10151

do.end43:                                         ; preds = %do.body30
  br label %if.end47, !dbg !10151

if.else44:                                        ; preds = %do.body27
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10145
  %46 = load i32, i32* %i, align 4, !dbg !10145
  %add45 = add nsw i32 %46, 1, !dbg !10145
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.73, i64 0, i64 0), i32 %add45), !dbg !10145
  br label %if.end47

if.end47:                                         ; preds = %if.else44, %do.end43
  br label %do.end48, !dbg !10148

do.end48:                                         ; preds = %if.end47
  br label %if.end49, !dbg !10148

if.end49:                                         ; preds = %do.end48, %if.then23
  br label %for.end, !dbg !10153

if.end50:                                         ; preds = %for.body
  br label %for.inc, !dbg !10154

for.inc:                                          ; preds = %if.end50
  %47 = load i32, i32* %i, align 4, !dbg !10155
  %inc = add nsw i32 %47, 1, !dbg !10155
  store i32 %inc, i32* %i, align 4, !dbg !10155
  br label %for.cond, !dbg !10156, !llvm.loop !10157

for.end:                                          ; preds = %if.end49, %for.cond
  %48 = load i32, i32* %i, align 4, !dbg !10159
  %49 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !10161
  %cmp51 = icmp eq i32 %48, %49, !dbg !10162
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !10163

if.then53:                                        ; preds = %for.end
  store i32 0, i32* %can_issue, align 4, !dbg !10164
  %50 = load i32*, i32** %index.addr, align 8, !dbg !10166
  store i32 -1, i32* %50, align 4, !dbg !10167
  br label %if.end54, !dbg !10168

if.end54:                                         ; preds = %if.then53, %for.end
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end15
  %51 = load i32, i32* %can_issue, align 4, !dbg !10169
  ret i32 %51, !dbg !10170
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._expr* @find_expr_for_ready(i32 %index, i8 zeroext %follow_ready_element) #0 !dbg !10171 {
entry:
  %index.addr = alloca i32, align 4
  %follow_ready_element.addr = alloca i8, align 1
  %expr = alloca %struct._expr*, align 8
  %real_index = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  store i8 %follow_ready_element, i8* %follow_ready_element.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %follow_ready_element.addr, metadata !10176, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !10178, metadata !DIExpression()), !dbg !10179
  call void @llvm.dbg.declare(metadata i32* %real_index, metadata !10180, metadata !DIExpression()), !dbg !10181
  %0 = load i8, i8* %follow_ready_element.addr, align 1, !dbg !10182
  %conv = zext i8 %0 to i32, !dbg !10182
  %tobool = icmp ne i32 %conv, 0, !dbg !10182
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10182

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 2), align 4, !dbg !10183
  %2 = load i32, i32* %index.addr, align 4, !dbg !10184
  %sub = sub nsw i32 %1, %2, !dbg !10185
  br label %cond.end, !dbg !10182

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %index.addr, align 4, !dbg !10186
  br label %cond.end, !dbg !10182

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %3, %cond.false ], !dbg !10182
  store i32 %cond, i32* %real_index, align 4, !dbg !10187
  %4 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10188
  %tobool1 = icmp ne %struct.VEC_expr_t_heap* %4, null, !dbg !10188
  br i1 %tobool1, label %cond.true2, label %cond.false3, !dbg !10188

cond.true2:                                       ; preds = %cond.end
  %5 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10188
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %5, i32 0, i32 0, !dbg !10188
  br label %cond.end4, !dbg !10188

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !10188

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi %struct.VEC_expr_t_base* [ %base, %cond.true2 ], [ null, %cond.false3 ], !dbg !10188
  %6 = load i32, i32* %real_index, align 4, !dbg !10188
  %call = call %struct._expr* @VEC_expr_t_base_index(%struct.VEC_expr_t_base* %cond5, i32 %6), !dbg !10188
  store %struct._expr* %call, %struct._expr** %expr, align 8, !dbg !10189
  %7 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 0), align 8, !dbg !10190
  %8 = load i32, i32* %real_index, align 4, !dbg !10190
  %idxprom = sext i32 %8 to i64, !dbg !10190
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %7, i64 %idxprom, !dbg !10190
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !10190
  %10 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10190
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %10, i32 0, i32 0, !dbg !10190
  %11 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10190
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %11, i32 0, i32 0, !dbg !10190
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10190
  %cmp = icmp eq %struct.rtx_def* %9, %12, !dbg !10190
  br i1 %cmp, label %cond.false8, label %cond.true7, !dbg !10190

cond.true7:                                       ; preds = %cond.end4
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4164, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10190
  br label %cond.end9, !dbg !10190

cond.false8:                                      ; preds = %cond.end4
  br label %cond.end9, !dbg !10190

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi i32 [ 0, %cond.true7 ], [ 0, %cond.false8 ], !dbg !10190
  %13 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10191
  ret %struct._expr* %13, !dbg !10192
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @invoke_aftermath_hooks(%struct._fence* %fence, %struct.rtx_def* %best_insn, i32 %issue_more) #0 !dbg !10193 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %best_insn.addr = alloca %struct.rtx_def*, align 8
  %issue_more.addr = alloca i32, align 4
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !10196, metadata !DIExpression()), !dbg !10197
  store %struct.rtx_def* %best_insn, %struct.rtx_def** %best_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %best_insn.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  store i32 %issue_more, i32* %issue_more.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %issue_more.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  %0 = load %struct.rtx_def*, %struct.rtx_def** %best_insn.addr, align 8, !dbg !10202
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !10202
  %bf.load = load i32, i32* %1, align 8, !dbg !10202
  %bf.clear = and i32 %bf.load, 65535, !dbg !10202
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !10202
  br i1 %cmp, label %cond.false, label %lor.lhs.false, !dbg !10202

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %best_insn.addr, align 8, !dbg !10202
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !10202
  %bf.load1 = load i32, i32* %3, align 8, !dbg !10202
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !10202
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !10202
  br i1 %cmp3, label %cond.false, label %lor.lhs.false4, !dbg !10202

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %best_insn.addr, align 8, !dbg !10202
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !10202
  %bf.load5 = load i32, i32* %5, align 8, !dbg !10202
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !10202
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !10202
  br i1 %cmp7, label %cond.false, label %lor.lhs.false8, !dbg !10202

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %best_insn.addr, align 8, !dbg !10202
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !10202
  %bf.load9 = load i32, i32* %7, align 8, !dbg !10202
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !10202
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !10202
  br i1 %cmp11, label %cond.false, label %cond.true, !dbg !10202

cond.true:                                        ; preds = %lor.lhs.false8
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4258, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10202
  br label %cond.end, !dbg !10202

cond.false:                                       ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  br label %cond.end, !dbg !10202

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !10202
  %8 = load %struct.rtx_def*, %struct.rtx_def** %best_insn.addr, align 8, !dbg !10203
  %9 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10204
  %call = call zeroext i8 @sel_dfa_new_cycle(%struct.rtx_def* %8, %struct._fence* %9), !dbg !10205
  %10 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 3), align 8, !dbg !10206
  %tobool = icmp ne i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)* %10, null, !dbg !10208
  br i1 %tobool, label %if.then, label %if.else, !dbg !10209

if.then:                                          ; preds = %cond.end
  %11 = load i8*, i8** @curr_state, align 8, !dbg !10210
  %12 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10212
  %state = getelementptr inbounds %struct._fence, %struct._fence* %12, i32 0, i32 1, !dbg !10212
  %13 = load i8*, i8** %state, align 8, !dbg !10212
  %14 = load i64, i64* @dfa_state_size, align 8, !dbg !10213
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %13, i64 %14, i1 false), !dbg !10214
  %15 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 3), align 8, !dbg !10215
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10216
  %17 = load i32, i32* @sched_verbose, align 4, !dbg !10217
  %18 = load %struct.rtx_def*, %struct.rtx_def** %best_insn.addr, align 8, !dbg !10218
  %19 = load i32, i32* %issue_more.addr, align 4, !dbg !10219
  %call12 = call i32 %15(%struct._IO_FILE* %16, i32 %17, %struct.rtx_def* %18, i32 %19), !dbg !10220
  store i32 %call12, i32* %issue_more.addr, align 4, !dbg !10221
  %20 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10222
  %state13 = getelementptr inbounds %struct._fence, %struct._fence* %20, i32 0, i32 1, !dbg !10222
  %21 = load i8*, i8** %state13, align 8, !dbg !10222
  %22 = load i8*, i8** @curr_state, align 8, !dbg !10223
  %23 = load i64, i64* @dfa_state_size, align 8, !dbg !10224
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %22, i64 %23, i1 false), !dbg !10225
  br label %if.end25, !dbg !10226

if.else:                                          ; preds = %cond.end
  %24 = load %struct.rtx_def*, %struct.rtx_def** %best_insn.addr, align 8, !dbg !10227
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !10227
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10227
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !10227
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !10227
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10227
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !10227
  %bf.load14 = load i32, i32* %26, align 8, !dbg !10227
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !10227
  %cmp16 = icmp ne i32 %bf.clear15, 24, !dbg !10229
  br i1 %cmp16, label %land.lhs.true, label %if.end, !dbg !10230

land.lhs.true:                                    ; preds = %if.else
  %27 = load %struct.rtx_def*, %struct.rtx_def** %best_insn.addr, align 8, !dbg !10231
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !10231
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !10231
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 5, !dbg !10231
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !10231
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !10231
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !10231
  %bf.load21 = load i32, i32* %29, align 8, !dbg !10231
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !10231
  %cmp23 = icmp ne i32 %bf.clear22, 25, !dbg !10232
  br i1 %cmp23, label %if.then24, label %if.end, !dbg !10233

if.then24:                                        ; preds = %land.lhs.true
  %30 = load i32, i32* %issue_more.addr, align 4, !dbg !10234
  %dec = add nsw i32 %30, -1, !dbg !10234
  store i32 %dec, i32* %issue_more.addr, align 4, !dbg !10234
  br label %if.end, !dbg !10235

if.end:                                           ; preds = %if.then24, %land.lhs.true, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then
  %31 = load i32, i32* %issue_more.addr, align 4, !dbg !10236
  ret i32 %31, !dbg !10237
}

; Function Attrs: noinline nounwind uwtable
define internal void @process_pipelined_exprs(%struct._list_node** %av_ptr) #0 !dbg !10238 {
entry:
  %av_ptr.addr = alloca %struct._list_node**, align 8
  %expr = alloca %struct._expr*, align 8
  %si = alloca %struct._list_iterator, align 8
  store %struct._list_node** %av_ptr, %struct._list_node*** %av_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %av_ptr.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !10243, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %si, metadata !10245, metadata !DIExpression()), !dbg !10246
  %0 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !10247
  call void @_list_iter_start(%struct._list_iterator* %si, %struct._list_node** %0, i8 zeroext 1), !dbg !10247
  br label %for.cond, !dbg !10247

for.cond:                                         ; preds = %for.inc, %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i32 0, i32 0, !dbg !10249
  %1 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !10249
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !10249
  %call = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %2, %struct._expr** %expr), !dbg !10249
  %tobool = icmp ne i8 %call, 0, !dbg !10247
  br i1 %tobool, label %for.body, label %for.end, !dbg !10247

for.body:                                         ; preds = %for.cond
  %3 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10251
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %3, i32 0, i32 5, !dbg !10251
  %4 = load i32, i32* %sched_times, align 8, !dbg !10251
  %5 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !10254
  %arrayidx = getelementptr inbounds %struct.param_info, %struct.param_info* %5, i64 86, !dbg !10254
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx, i32 0, i32 1, !dbg !10254
  %6 = load i32, i32* %value, align 8, !dbg !10254
  %cmp = icmp sge i32 %4, %6, !dbg !10255
  br i1 %cmp, label %if.then, label %if.end, !dbg !10256

if.then:                                          ; preds = %for.body
  call void @av_set_iter_remove(%struct._list_iterator* %si), !dbg !10257
  br label %if.end, !dbg !10257

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !10258

for.inc:                                          ; preds = %if.end
  call void @_list_iter_next(%struct._list_iterator* %si), !dbg !10249
  br label %for.cond, !dbg !10249, !llvm.loop !10259

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10261
}

; Function Attrs: noinline nounwind uwtable
define internal void @process_spec_exprs(%struct._list_node** %av_ptr) #0 !dbg !10262 {
entry:
  %av_ptr.addr = alloca %struct._list_node**, align 8
  %try_data_p = alloca i8, align 1
  %try_control_p = alloca i8, align 1
  %expr = alloca %struct._expr*, align 8
  %si = alloca %struct._list_iterator, align 8
  %ds = alloca i32, align 4
  %ds36 = alloca i32, align 4
  store %struct._list_node** %av_ptr, %struct._list_node*** %av_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %av_ptr.addr, metadata !10263, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.declare(metadata i8* %try_data_p, metadata !10265, metadata !DIExpression()), !dbg !10266
  store i8 1, i8* %try_data_p, align 1, !dbg !10266
  call void @llvm.dbg.declare(metadata i8* %try_control_p, metadata !10267, metadata !DIExpression()), !dbg !10268
  store i8 1, i8* %try_control_p, align 1, !dbg !10268
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !10269, metadata !DIExpression()), !dbg !10270
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %si, metadata !10271, metadata !DIExpression()), !dbg !10272
  %0 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !10273
  %cmp = icmp eq %struct.spec_info_def* %0, null, !dbg !10275
  br i1 %cmp, label %if.then, label %if.end, !dbg !10276

if.then:                                          ; preds = %entry
  br label %for.end55, !dbg !10277

if.end:                                           ; preds = %entry
  %1 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !10278
  call void @_list_iter_start(%struct._list_iterator* %si, %struct._list_node** %1, i8 zeroext 1), !dbg !10278
  br label %for.cond, !dbg !10278

for.cond:                                         ; preds = %for.inc, %if.end
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i32 0, i32 0, !dbg !10280
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !10280
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !10280
  %call = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %3, %struct._expr** %expr), !dbg !10280
  %tobool = icmp ne i8 %call, 0, !dbg !10278
  br i1 %tobool, label %for.body, label %for.end, !dbg !10278

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ds, metadata !10282, metadata !DIExpression()), !dbg !10284
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10285
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %4, i32 0, i32 7, !dbg !10285
  %5 = load i32, i32* %spec_done_ds, align 8, !dbg !10285
  store i32 %5, i32* %ds, align 4, !dbg !10286
  %6 = load i32, i32* %ds, align 4, !dbg !10287
  %and = and i32 %6, 16777215, !dbg !10289
  %tobool1 = icmp ne i32 %and, 0, !dbg !10289
  br i1 %tobool1, label %land.lhs.true, label %if.end15, !dbg !10290

land.lhs.true:                                    ; preds = %for.body
  %7 = load i32, i32* %ds, align 4, !dbg !10291
  %call2 = call i32 @ds_weak(i32 %7), !dbg !10292
  %8 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !10293
  %data_weakness_cutoff = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %8, i32 0, i32 2, !dbg !10294
  %9 = load i32, i32* %data_weakness_cutoff, align 8, !dbg !10294
  %cmp3 = icmp slt i32 %call2, %9, !dbg !10295
  br i1 %cmp3, label %if.then14, label %lor.lhs.false, !dbg !10296

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10297
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %10, i32 0, i32 2, !dbg !10297
  %11 = load i32, i32* %usefulness, align 4, !dbg !10297
  %12 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !10298
  %control_weakness_cutoff = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %12, i32 0, i32 3, !dbg !10299
  %13 = load i32, i32* %control_weakness_cutoff, align 4, !dbg !10299
  %cmp4 = icmp slt i32 %11, %13, !dbg !10300
  br i1 %cmp4, label %if.then14, label %lor.lhs.false5, !dbg !10301

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %14 = load i8, i8* @pipelining_p, align 1, !dbg !10302
  %conv = zext i8 %14 to i32, !dbg !10302
  %tobool6 = icmp ne i32 %conv, 0, !dbg !10302
  br i1 %tobool6, label %land.lhs.true7, label %if.end15, !dbg !10303

land.lhs.true7:                                   ; preds = %lor.lhs.false5
  br i1 false, label %land.lhs.true8, label %if.end15, !dbg !10304

land.lhs.true8:                                   ; preds = %land.lhs.true7
  %15 = load i32, i32* %ds, align 4, !dbg !10305
  %and9 = and i32 %15, 4095, !dbg !10306
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10306
  br i1 %tobool10, label %land.lhs.true11, label %if.end15, !dbg !10307

land.lhs.true11:                                  ; preds = %land.lhs.true8
  %16 = load i32, i32* %ds, align 4, !dbg !10308
  %and12 = and i32 %16, 16773120, !dbg !10309
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10309
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !10310

if.then14:                                        ; preds = %land.lhs.true11, %lor.lhs.false, %land.lhs.true
  call void @av_set_iter_remove(%struct._list_iterator* %si), !dbg !10311
  br label %for.inc, !dbg !10313

if.end15:                                         ; preds = %land.lhs.true11, %land.lhs.true8, %land.lhs.true7, %lor.lhs.false5, %for.body
  %17 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !10314
  %flags = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %17, i32 0, i32 4, !dbg !10316
  %18 = load i32, i32* %flags, align 8, !dbg !10316
  %and16 = and i32 %18, 2, !dbg !10317
  %tobool17 = icmp ne i32 %and16, 0, !dbg !10317
  br i1 %tobool17, label %land.lhs.true18, label %if.end22, !dbg !10318

land.lhs.true18:                                  ; preds = %if.end15
  %19 = load i32, i32* %ds, align 4, !dbg !10319
  %and19 = and i32 %19, 63, !dbg !10320
  %tobool20 = icmp ne i32 %and19, 0, !dbg !10320
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !10321

if.then21:                                        ; preds = %land.lhs.true18
  store i8 0, i8* %try_data_p, align 1, !dbg !10322
  br label %if.end22, !dbg !10323

if.end22:                                         ; preds = %if.then21, %land.lhs.true18, %if.end15
  %20 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !10324
  %flags23 = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %20, i32 0, i32 4, !dbg !10326
  %21 = load i32, i32* %flags23, align 8, !dbg !10326
  %and24 = and i32 %21, 4, !dbg !10327
  %tobool25 = icmp ne i32 %and24, 0, !dbg !10327
  br i1 %tobool25, label %land.lhs.true26, label %if.end30, !dbg !10328

land.lhs.true26:                                  ; preds = %if.end22
  %22 = load i32, i32* %ds, align 4, !dbg !10329
  %and27 = and i32 %22, 258048, !dbg !10330
  %tobool28 = icmp ne i32 %and27, 0, !dbg !10330
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !10331

if.then29:                                        ; preds = %land.lhs.true26
  store i8 0, i8* %try_control_p, align 1, !dbg !10332
  br label %if.end30, !dbg !10333

if.end30:                                         ; preds = %if.then29, %land.lhs.true26, %if.end22
  br label %for.inc, !dbg !10334

for.inc:                                          ; preds = %if.end30, %if.then14
  call void @_list_iter_next(%struct._list_iterator* %si), !dbg !10280
  br label %for.cond, !dbg !10280, !llvm.loop !10335

for.end:                                          ; preds = %for.cond
  %23 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !10337
  call void @_list_iter_start(%struct._list_iterator* %si, %struct._list_node** %23, i8 zeroext 1), !dbg !10337
  br label %for.cond31, !dbg !10337

for.cond31:                                       ; preds = %for.inc54, %for.end
  %lp32 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i32 0, i32 0, !dbg !10339
  %24 = load %struct._list_node**, %struct._list_node*** %lp32, align 8, !dbg !10339
  %25 = load %struct._list_node*, %struct._list_node** %24, align 8, !dbg !10339
  %call33 = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %25, %struct._expr** %expr), !dbg !10339
  %tobool34 = icmp ne i8 %call33, 0, !dbg !10337
  br i1 %tobool34, label %for.body35, label %for.end55, !dbg !10337

for.body35:                                       ; preds = %for.cond31
  call void @llvm.dbg.declare(metadata i32* %ds36, metadata !10341, metadata !DIExpression()), !dbg !10343
  %26 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10344
  %spec_done_ds37 = getelementptr inbounds %struct._expr, %struct._expr* %26, i32 0, i32 7, !dbg !10344
  %27 = load i32, i32* %spec_done_ds37, align 8, !dbg !10344
  store i32 %27, i32* %ds36, align 4, !dbg !10345
  %28 = load i32, i32* %ds36, align 4, !dbg !10346
  %and38 = and i32 %28, 16777215, !dbg !10348
  %tobool39 = icmp ne i32 %and38, 0, !dbg !10348
  br i1 %tobool39, label %if.then40, label %if.end53, !dbg !10349

if.then40:                                        ; preds = %for.body35
  %29 = load i32, i32* %ds36, align 4, !dbg !10350
  %and41 = and i32 %29, 63, !dbg !10353
  %tobool42 = icmp ne i32 %and41, 0, !dbg !10353
  br i1 %tobool42, label %land.lhs.true43, label %if.end46, !dbg !10354

land.lhs.true43:                                  ; preds = %if.then40
  %30 = load i8, i8* %try_data_p, align 1, !dbg !10355
  %tobool44 = icmp ne i8 %30, 0, !dbg !10355
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !10356

if.then45:                                        ; preds = %land.lhs.true43
  call void @av_set_iter_remove(%struct._list_iterator* %si), !dbg !10357
  br label %if.end46, !dbg !10357

if.end46:                                         ; preds = %if.then45, %land.lhs.true43, %if.then40
  %31 = load i32, i32* %ds36, align 4, !dbg !10358
  %and47 = and i32 %31, 258048, !dbg !10360
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10360
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !10361

land.lhs.true49:                                  ; preds = %if.end46
  %32 = load i8, i8* %try_control_p, align 1, !dbg !10362
  %tobool50 = icmp ne i8 %32, 0, !dbg !10362
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !10363

if.then51:                                        ; preds = %land.lhs.true49
  call void @av_set_iter_remove(%struct._list_iterator* %si), !dbg !10364
  br label %if.end52, !dbg !10364

if.end52:                                         ; preds = %if.then51, %land.lhs.true49, %if.end46
  br label %if.end53, !dbg !10365

if.end53:                                         ; preds = %if.end52, %for.body35
  br label %for.inc54, !dbg !10366

for.inc54:                                        ; preds = %if.end53
  call void @_list_iter_next(%struct._list_iterator* %si), !dbg !10339
  br label %for.cond31, !dbg !10339, !llvm.loop !10367

for.end55:                                        ; preds = %if.then, %for.cond31
  ret void, !dbg !10369
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._expr* @process_use_exprs(%struct._list_node** %av_ptr) #0 !dbg !10370 {
entry:
  %retval = alloca %struct._expr*, align 8
  %av_ptr.addr = alloca %struct._list_node**, align 8
  %expr = alloca %struct._expr*, align 8
  %si = alloca %struct._list_iterator, align 8
  %uses_present_p = alloca i8, align 1
  %try_uses_p = alloca i8, align 1
  store %struct._list_node** %av_ptr, %struct._list_node*** %av_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %av_ptr.addr, metadata !10373, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !10375, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %si, metadata !10377, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.declare(metadata i8* %uses_present_p, metadata !10379, metadata !DIExpression()), !dbg !10380
  store i8 0, i8* %uses_present_p, align 1, !dbg !10380
  call void @llvm.dbg.declare(metadata i8* %try_uses_p, metadata !10381, metadata !DIExpression()), !dbg !10382
  store i8 1, i8* %try_uses_p, align 1, !dbg !10382
  %0 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !10383
  call void @_list_iter_start(%struct._list_iterator* %si, %struct._list_node** %0, i8 zeroext 1), !dbg !10383
  br label %for.cond, !dbg !10383

for.cond:                                         ; preds = %for.inc, %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i32 0, i32 0, !dbg !10385
  %1 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !10385
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !10385
  %call = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %2, %struct._expr** %expr), !dbg !10385
  %tobool = icmp ne i8 %call, 0, !dbg !10383
  br i1 %tobool, label %for.body, label %for.end, !dbg !10383

for.body:                                         ; preds = %for.cond
  %3 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10387
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %3, i32 0, i32 0, !dbg !10387
  %4 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10387
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %4, i32 0, i32 0, !dbg !10387
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10387
  %call1 = call i32 @recog_memoized(%struct.rtx_def* %5), !dbg !10390
  %cmp = icmp slt i32 %call1, 0, !dbg !10391
  br i1 %cmp, label %if.then, label %if.else9, !dbg !10392

if.then:                                          ; preds = %for.body
  %6 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10393
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %6, i32 0, i32 5, !dbg !10393
  %7 = load i32, i32* %sched_times, align 8, !dbg !10393
  %cmp2 = icmp sle i32 %7, 0, !dbg !10396
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !10397

if.then3:                                         ; preds = %if.then
  %8 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10398
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %8, i32 0, i32 11, !dbg !10398
  %9 = load i8, i8* %target_available, align 8, !dbg !10398
  %conv = sext i8 %9 to i32, !dbg !10398
  %cmp4 = icmp eq i32 %conv, 1, !dbg !10401
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !10402

if.then6:                                         ; preds = %if.then3
  %10 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10403
  store %struct._expr* %10, %struct._expr** %retval, align 8, !dbg !10404
  br label %return, !dbg !10404

if.end:                                           ; preds = %if.then3
  call void @av_set_iter_remove(%struct._list_iterator* %si), !dbg !10405
  br label %if.end8, !dbg !10406

if.else:                                          ; preds = %if.then
  %11 = load i8, i8* @pipelining_p, align 1, !dbg !10407
  %tobool7 = icmp ne i8 %11, 0, !dbg !10407
  br i1 %tobool7, label %cond.false, label %cond.true, !dbg !10407

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3532, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10407
  br label %cond.end, !dbg !10407

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !10407

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !10407
  store i8 1, i8* %uses_present_p, align 1, !dbg !10409
  br label %if.end8

if.end8:                                          ; preds = %cond.end, %if.end
  br label %if.end10, !dbg !10410

if.else9:                                         ; preds = %for.body
  store i8 0, i8* %try_uses_p, align 1, !dbg !10411
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.end8
  br label %for.inc, !dbg !10412

for.inc:                                          ; preds = %if.end10
  call void @_list_iter_next(%struct._list_iterator* %si), !dbg !10385
  br label %for.cond, !dbg !10385, !llvm.loop !10413

for.end:                                          ; preds = %for.cond
  %12 = load i8, i8* %uses_present_p, align 1, !dbg !10415
  %tobool11 = icmp ne i8 %12, 0, !dbg !10415
  br i1 %tobool11, label %if.then12, label %if.end55, !dbg !10417

if.then12:                                        ; preds = %for.end
  %13 = load i8, i8* %try_uses_p, align 1, !dbg !10418
  %tobool13 = icmp ne i8 %13, 0, !dbg !10418
  br i1 %tobool13, label %if.else28, label %if.then14, !dbg !10421

if.then14:                                        ; preds = %if.then12
  %14 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !10422
  call void @_list_iter_start(%struct._list_iterator* %si, %struct._list_node** %14, i8 zeroext 1), !dbg !10422
  br label %for.cond15, !dbg !10422

for.cond15:                                       ; preds = %for.inc26, %if.then14
  %lp16 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i32 0, i32 0, !dbg !10425
  %15 = load %struct._list_node**, %struct._list_node*** %lp16, align 8, !dbg !10425
  %16 = load %struct._list_node*, %struct._list_node** %15, align 8, !dbg !10425
  %call17 = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %16, %struct._expr** %expr), !dbg !10425
  %tobool18 = icmp ne i8 %call17, 0, !dbg !10422
  br i1 %tobool18, label %for.body19, label %for.end27, !dbg !10422

for.body19:                                       ; preds = %for.cond15
  %17 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10427
  %vinsn20 = getelementptr inbounds %struct._expr, %struct._expr* %17, i32 0, i32 0, !dbg !10427
  %18 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn20, align 8, !dbg !10427
  %insn_rtx21 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %18, i32 0, i32 0, !dbg !10427
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx21, align 8, !dbg !10427
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !10427
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10427
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 6, !dbg !10427
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10427
  %20 = load i32, i32* %rt_int, align 8, !dbg !10427
  %cmp22 = icmp slt i32 %20, 0, !dbg !10429
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10430

if.then24:                                        ; preds = %for.body19
  call void @av_set_iter_remove(%struct._list_iterator* %si), !dbg !10431
  br label %if.end25, !dbg !10431

if.end25:                                         ; preds = %if.then24, %for.body19
  br label %for.inc26, !dbg !10432

for.inc26:                                        ; preds = %if.end25
  call void @_list_iter_next(%struct._list_iterator* %si), !dbg !10425
  br label %for.cond15, !dbg !10425, !llvm.loop !10433

for.end27:                                        ; preds = %for.cond15
  br label %if.end54, !dbg !10435

if.else28:                                        ; preds = %if.then12
  %21 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !10436
  call void @_list_iter_start(%struct._list_iterator* %si, %struct._list_node** %21, i8 zeroext 1), !dbg !10436
  br label %for.cond29, !dbg !10436

for.cond29:                                       ; preds = %for.inc52, %if.else28
  %lp30 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i32 0, i32 0, !dbg !10439
  %22 = load %struct._list_node**, %struct._list_node*** %lp30, align 8, !dbg !10439
  %23 = load %struct._list_node*, %struct._list_node** %22, align 8, !dbg !10439
  %call31 = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %23, %struct._expr** %expr), !dbg !10439
  %tobool32 = icmp ne i8 %call31, 0, !dbg !10436
  br i1 %tobool32, label %for.body33, label %for.end53, !dbg !10436

for.body33:                                       ; preds = %for.cond29
  %24 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10441
  %vinsn34 = getelementptr inbounds %struct._expr, %struct._expr* %24, i32 0, i32 0, !dbg !10441
  %25 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn34, align 8, !dbg !10441
  %insn_rtx35 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %25, i32 0, i32 0, !dbg !10441
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx35, align 8, !dbg !10441
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !10441
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !10441
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 6, !dbg !10441
  %rt_int39 = bitcast %union.rtunion_def* %arrayidx38 to i32*, !dbg !10441
  %27 = load i32, i32* %rt_int39, align 8, !dbg !10441
  %cmp40 = icmp slt i32 %27, 0, !dbg !10441
  br i1 %cmp40, label %cond.false43, label %cond.true42, !dbg !10441

cond.true42:                                      ; preds = %for.body33
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3555, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10441
  br label %cond.end44, !dbg !10441

cond.false43:                                     ; preds = %for.body33
  br label %cond.end44, !dbg !10441

cond.end44:                                       ; preds = %cond.false43, %cond.true42
  %cond45 = phi i32 [ 0, %cond.true42 ], [ 0, %cond.false43 ], !dbg !10441
  %28 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10443
  %target_available46 = getelementptr inbounds %struct._expr, %struct._expr* %28, i32 0, i32 11, !dbg !10443
  %29 = load i8, i8* %target_available46, align 8, !dbg !10443
  %conv47 = sext i8 %29 to i32, !dbg !10443
  %cmp48 = icmp eq i32 %conv47, 1, !dbg !10445
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !10446

if.then50:                                        ; preds = %cond.end44
  %30 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10447
  store %struct._expr* %30, %struct._expr** %retval, align 8, !dbg !10448
  br label %return, !dbg !10448

if.end51:                                         ; preds = %cond.end44
  call void @av_set_iter_remove(%struct._list_iterator* %si), !dbg !10449
  br label %for.inc52, !dbg !10450

for.inc52:                                        ; preds = %if.end51
  call void @_list_iter_next(%struct._list_iterator* %si), !dbg !10439
  br label %for.cond29, !dbg !10439, !llvm.loop !10451

for.end53:                                        ; preds = %for.cond29
  br label %if.end54

if.end54:                                         ; preds = %for.end53, %for.end27
  br label %if.end55, !dbg !10453

if.end55:                                         ; preds = %if.end54, %for.end
  store %struct._expr* null, %struct._expr** %retval, align 8, !dbg !10454
  br label %return, !dbg !10454

return:                                           ; preds = %if.end55, %if.then50, %if.then6
  %31 = load %struct._expr*, %struct._expr** %retval, align 8, !dbg !10455
  ret %struct._expr* %31, !dbg !10455
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @fill_vec_av_set(%struct._list_node* %av, %struct._list_node* %bnds, %struct._fence* %fence, i32* %pneed_stall) #0 !dbg !2398 {
entry:
  %retval = alloca i8, align 1
  %av.addr = alloca %struct._list_node*, align 8
  %bnds.addr = alloca %struct._list_node*, align 8
  %fence.addr = alloca %struct._fence*, align 8
  %pneed_stall.addr = alloca i32*, align 8
  %si = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  %sched_next_worked = alloca i32, align 4
  %stalled = alloca i32, align 4
  %n = alloca i32, align 4
  %min_need_stall = alloca i32, align 4
  %dc = alloca %struct.deps*, align 8
  %expr68 = alloca %struct._expr*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %target_available = alloca i8, align 1
  %is_orig_reg_p = alloca i8, align 1
  %need_cycles = alloca i32, align 4
  %new_prio = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j184 = alloca i32, align 4
  %__s192 = alloca i8*, align 8
  %need_n_ticks_till_branch = alloca i32, align 4
  %__j245 = alloca i32, align 4
  %__s253 = alloca i8*, align 8
  %__j297 = alloca i32, align 4
  %__s305 = alloca i8*, align 8
  %__j361 = alloca i32, align 4
  %__s369 = alloca i8*, align 8
  %__j461 = alloca i32, align 4
  %__s476 = alloca i8*, align 8
  %new_size = alloca i32, align 4
  %__j588 = alloca i32, align 4
  %__s603 = alloca i8*, align 8
  %__j645 = alloca i32, align 4
  %__s653 = alloca i8*, align 8
  %__j730 = alloca i32, align 4
  %__s741 = alloca i8*, align 8
  %__j770 = alloca i32, align 4
  %__s781 = alloca i8*, align 8
  %__j823 = alloca i32, align 4
  %__s827 = alloca i8*, align 8
  store %struct._list_node* %av, %struct._list_node** %av.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %av.addr, metadata !10456, metadata !DIExpression()), !dbg !10457
  store %struct._list_node* %bnds, %struct._list_node** %bnds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %bnds.addr, metadata !10458, metadata !DIExpression()), !dbg !10459
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !10460, metadata !DIExpression()), !dbg !10461
  store i32* %pneed_stall, i32** %pneed_stall.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pneed_stall.addr, metadata !10462, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %si, metadata !10464, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.declare(metadata i32* %sched_next_worked, metadata !10468, metadata !DIExpression()), !dbg !10469
  store i32 0, i32* %sched_next_worked, align 4, !dbg !10469
  call void @llvm.dbg.declare(metadata i32* %stalled, metadata !10470, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10472, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.declare(metadata i32* %min_need_stall, metadata !10474, metadata !DIExpression()), !dbg !10475
  store i32 -1, i32* %min_need_stall, align 4, !dbg !10475
  call void @llvm.dbg.declare(metadata %struct.deps** %dc, metadata !10476, metadata !DIExpression()), !dbg !10477
  %0 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !10478
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i32 0, i32 1, !dbg !10478
  %bnd = bitcast %union.anon.0* %u to %struct._bnd*, !dbg !10478
  %dc1 = getelementptr inbounds %struct._bnd, %struct._bnd* %bnd, i32 0, i32 4, !dbg !10478
  %1 = load %struct.deps*, %struct.deps** %dc1, align 8, !dbg !10478
  store %struct.deps* %1, %struct.deps** %dc, align 8, !dbg !10477
  %2 = load %struct._list_node*, %struct._list_node** %av.addr, align 8, !dbg !10479
  %cmp = icmp eq %struct._list_node* %2, null, !dbg !10481
  br i1 %cmp, label %if.then, label %if.end, !dbg !10482

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !10483
  br label %return, !dbg !10483

if.end:                                           ; preds = %entry
  %3 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10484
  %tobool = icmp ne %struct.VEC_expr_t_heap* %3, null, !dbg !10484
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10484

cond.true:                                        ; preds = %if.end
  %4 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10484
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %4, i32 0, i32 0, !dbg !10484
  br label %cond.end, !dbg !10484

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !10484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_expr_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !10484
  %call = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond), !dbg !10484
  %cmp2 = icmp ugt i32 %call, 0, !dbg !10486
  br i1 %cmp2, label %if.then3, label %if.end17, !dbg !10487

if.then3:                                         ; preds = %cond.end
  %5 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10488
  %tobool4 = icmp ne %struct.VEC_expr_t_heap* %5, null, !dbg !10488
  br i1 %tobool4, label %cond.true5, label %cond.false7, !dbg !10488

cond.true5:                                       ; preds = %if.then3
  %6 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10488
  %base6 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %6, i32 0, i32 0, !dbg !10488
  br label %cond.end8, !dbg !10488

cond.false7:                                      ; preds = %if.then3
  br label %cond.end8, !dbg !10488

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi %struct.VEC_expr_t_base* [ %base6, %cond.true5 ], [ null, %cond.false7 ], !dbg !10488
  %7 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10488
  %tobool10 = icmp ne %struct.VEC_expr_t_heap* %7, null, !dbg !10488
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !10488

cond.true11:                                      ; preds = %cond.end8
  %8 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10488
  %base12 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %8, i32 0, i32 0, !dbg !10488
  br label %cond.end14, !dbg !10488

cond.false13:                                     ; preds = %cond.end8
  br label %cond.end14, !dbg !10488

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi %struct.VEC_expr_t_base* [ %base12, %cond.true11 ], [ null, %cond.false13 ], !dbg !10488
  %call16 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond15), !dbg !10488
  call void @VEC_expr_t_base_block_remove(%struct.VEC_expr_t_base* %cond9, i32 0, i32 %call16), !dbg !10488
  br label %if.end17, !dbg !10488

if.end17:                                         ; preds = %cond.end14, %cond.end
  %9 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10489
  %tobool18 = icmp ne %struct.VEC_expr_t_heap* %9, null, !dbg !10489
  br i1 %tobool18, label %cond.true19, label %cond.false21, !dbg !10489

cond.true19:                                      ; preds = %if.end17
  %10 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10489
  %base20 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %10, i32 0, i32 0, !dbg !10489
  br label %cond.end22, !dbg !10489

cond.false21:                                     ; preds = %if.end17
  br label %cond.end22, !dbg !10489

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi %struct.VEC_expr_t_base* [ %base20, %cond.true19 ], [ null, %cond.false21 ], !dbg !10489
  %call24 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond23), !dbg !10489
  %cmp25 = icmp eq i32 %call24, 0, !dbg !10489
  br i1 %cmp25, label %cond.false27, label %cond.true26, !dbg !10489

cond.true26:                                      ; preds = %cond.end22
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3710, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10489
  br label %cond.end28, !dbg !10489

cond.false27:                                     ; preds = %cond.end22
  br label %cond.end28, !dbg !10489

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi i32 [ 0, %cond.true26 ], [ 0, %cond.false27 ], !dbg !10489
  call void @_list_iter_start(%struct._list_iterator* %si, %struct._list_node** %av.addr, i8 zeroext 0), !dbg !10490
  br label %for.cond, !dbg !10490

for.cond:                                         ; preds = %for.inc, %cond.end28
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %si, i32 0, i32 0, !dbg !10492
  %11 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !10492
  %12 = load %struct._list_node*, %struct._list_node** %11, align 8, !dbg !10492
  %call30 = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %12, %struct._expr** %expr), !dbg !10492
  %tobool31 = icmp ne i8 %call30, 0, !dbg !10490
  br i1 %tobool31, label %for.body, label %for.end, !dbg !10490

for.body:                                         ; preds = %for.cond
  %13 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10494
  %call32 = call %struct._expr** @VEC_expr_t_heap_safe_push(%struct.VEC_expr_t_heap** @vec_av_set, %struct._expr* %13), !dbg !10494
  %14 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10496
  %priority_adj = getelementptr inbounds %struct._expr, %struct._expr* %14, i32 0, i32 4, !dbg !10496
  %15 = load i32, i32* %priority_adj, align 4, !dbg !10496
  %cmp33 = icmp eq i32 %15, 0, !dbg !10496
  br i1 %cmp33, label %cond.false36, label %lor.lhs.false, !dbg !10496

lor.lhs.false:                                    ; preds = %for.body
  %16 = load i32*, i32** %pneed_stall.addr, align 8, !dbg !10496
  %17 = load i32, i32* %16, align 4, !dbg !10496
  %tobool34 = icmp ne i32 %17, 0, !dbg !10496
  br i1 %tobool34, label %cond.false36, label %cond.true35, !dbg !10496

cond.true35:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3715, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10496
  br label %cond.end37, !dbg !10496

cond.false36:                                     ; preds = %lor.lhs.false, %for.body
  br label %cond.end37, !dbg !10496

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi i32 [ 0, %cond.true35 ], [ 0, %cond.false36 ], !dbg !10496
  %18 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10497
  %call39 = call i32 @sel_target_adjust_priority(%struct._expr* %18), !dbg !10498
  br label %for.inc, !dbg !10499

for.inc:                                          ; preds = %cond.end37
  call void @_list_iter_next(%struct._list_iterator* %si), !dbg !10492
  br label %for.cond, !dbg !10492, !llvm.loop !10500

for.end:                                          ; preds = %for.cond
  %19 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10502
  %tobool40 = icmp ne %struct.VEC_expr_t_heap* %19, null, !dbg !10502
  br i1 %tobool40, label %cond.true41, label %cond.false43, !dbg !10502

cond.true41:                                      ; preds = %for.end
  %20 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10502
  %base42 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %20, i32 0, i32 0, !dbg !10502
  br label %cond.end44, !dbg !10502

cond.false43:                                     ; preds = %for.end
  br label %cond.end44, !dbg !10502

cond.end44:                                       ; preds = %cond.false43, %cond.true41
  %cond45 = phi %struct.VEC_expr_t_base* [ %base42, %cond.true41 ], [ null, %cond.false43 ], !dbg !10502
  %call46 = call %struct._expr** @VEC_expr_t_base_address(%struct.VEC_expr_t_base* %cond45), !dbg !10502
  %21 = bitcast %struct._expr** %call46 to i8*, !dbg !10502
  %22 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10503
  %tobool47 = icmp ne %struct.VEC_expr_t_heap* %22, null, !dbg !10503
  br i1 %tobool47, label %cond.true48, label %cond.false50, !dbg !10503

cond.true48:                                      ; preds = %cond.end44
  %23 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10503
  %base49 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %23, i32 0, i32 0, !dbg !10503
  br label %cond.end51, !dbg !10503

cond.false50:                                     ; preds = %cond.end44
  br label %cond.end51, !dbg !10503

cond.end51:                                       ; preds = %cond.false50, %cond.true48
  %cond52 = phi %struct.VEC_expr_t_base* [ %base49, %cond.true48 ], [ null, %cond.false50 ], !dbg !10503
  %call53 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond52), !dbg !10503
  %conv = zext i32 %call53 to i64, !dbg !10503
  call void @spec_qsort(i8* %21, i64 %conv, i64 8, i32 (i8*, i8*)* @sel_rank_for_schedule), !dbg !10504
  %24 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10505
  %starts_cycle_p = getelementptr inbounds %struct._fence, %struct._fence* %24, i32 0, i32 13, !dbg !10505
  %bf.load = load i8, i8* %starts_cycle_p, align 8, !dbg !10505
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !10505
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10505
  %bf.cast = zext i8 %bf.clear to i32, !dbg !10505
  %tobool54 = icmp ne i32 %bf.cast, 0, !dbg !10505
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !10507

if.then55:                                        ; preds = %cond.end51
  store i32 -2147483648, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !10508
  store i32 -2147483648, i32* @fill_vec_av_set.av_max_prio, align 4, !dbg !10509
  br label %if.end56, !dbg !10510

if.end56:                                         ; preds = %if.then55, %cond.end51
  %25 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10511
  %tobool57 = icmp ne %struct.VEC_expr_t_heap* %25, null, !dbg !10511
  br i1 %tobool57, label %cond.true58, label %cond.false60, !dbg !10511

cond.true58:                                      ; preds = %if.end56
  %26 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10511
  %base59 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %26, i32 0, i32 0, !dbg !10511
  br label %cond.end61, !dbg !10511

cond.false60:                                     ; preds = %if.end56
  br label %cond.end61, !dbg !10511

cond.end61:                                       ; preds = %cond.false60, %cond.true58
  %cond62 = phi %struct.VEC_expr_t_base* [ %base59, %cond.true58 ], [ null, %cond.false60 ], !dbg !10511
  %call63 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond62), !dbg !10511
  %sub = sub i32 %call63, 1, !dbg !10513
  store i32 %sub, i32* %n, align 4, !dbg !10514
  store i32 0, i32* %stalled, align 4, !dbg !10515
  br label %for.cond64, !dbg !10516

for.cond64:                                       ; preds = %for.inc673, %cond.end61
  %27 = load i32, i32* %n, align 4, !dbg !10517
  %cmp65 = icmp sge i32 %27, 0, !dbg !10519
  br i1 %cmp65, label %for.body67, label %for.end674, !dbg !10520

for.body67:                                       ; preds = %for.cond64
  call void @llvm.dbg.declare(metadata %struct._expr** %expr68, metadata !10521, metadata !DIExpression()), !dbg !10523
  %28 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10524
  %tobool69 = icmp ne %struct.VEC_expr_t_heap* %28, null, !dbg !10524
  br i1 %tobool69, label %cond.true70, label %cond.false72, !dbg !10524

cond.true70:                                      ; preds = %for.body67
  %29 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10524
  %base71 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %29, i32 0, i32 0, !dbg !10524
  br label %cond.end73, !dbg !10524

cond.false72:                                     ; preds = %for.body67
  br label %cond.end73, !dbg !10524

cond.end73:                                       ; preds = %cond.false72, %cond.true70
  %cond74 = phi %struct.VEC_expr_t_base* [ %base71, %cond.true70 ], [ null, %cond.false72 ], !dbg !10524
  %30 = load i32, i32* %n, align 4, !dbg !10524
  %call75 = call %struct._expr* @VEC_expr_t_base_index(%struct.VEC_expr_t_base* %cond74, i32 %30), !dbg !10524
  store %struct._expr* %call75, %struct._expr** %expr68, align 8, !dbg !10523
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !10525, metadata !DIExpression()), !dbg !10526
  %31 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10527
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %31, i32 0, i32 0, !dbg !10527
  %32 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10527
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %32, i32 0, i32 0, !dbg !10527
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10527
  store %struct.rtx_def* %33, %struct.rtx_def** %insn, align 8, !dbg !10526
  call void @llvm.dbg.declare(metadata i8* %target_available, metadata !10528, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.declare(metadata i8* %is_orig_reg_p, metadata !10530, metadata !DIExpression()), !dbg !10531
  store i8 1, i8* %is_orig_reg_p, align 1, !dbg !10531
  call void @llvm.dbg.declare(metadata i32* %need_cycles, metadata !10532, metadata !DIExpression()), !dbg !10533
  call void @llvm.dbg.declare(metadata i32* %new_prio, metadata !10534, metadata !DIExpression()), !dbg !10535
  %34 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10536
  %sched_next = getelementptr inbounds %struct._fence, %struct._fence* %34, i32 0, i32 12, !dbg !10536
  %35 = load %struct.rtx_def*, %struct.rtx_def** %sched_next, align 8, !dbg !10536
  %tobool76 = icmp ne %struct.rtx_def* %35, null, !dbg !10536
  br i1 %tobool76, label %land.lhs.true, label %if.end88, !dbg !10538

land.lhs.true:                                    ; preds = %cond.end73
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10539
  %37 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10540
  %sched_next77 = getelementptr inbounds %struct._fence, %struct._fence* %37, i32 0, i32 12, !dbg !10540
  %38 = load %struct.rtx_def*, %struct.rtx_def** %sched_next77, align 8, !dbg !10540
  %cmp78 = icmp ne %struct.rtx_def* %36, %38, !dbg !10541
  br i1 %cmp78, label %if.then80, label %if.end88, !dbg !10542

if.then80:                                        ; preds = %land.lhs.true
  %39 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10543
  %tobool81 = icmp ne %struct.VEC_expr_t_heap* %39, null, !dbg !10543
  br i1 %tobool81, label %cond.true82, label %cond.false84, !dbg !10543

cond.true82:                                      ; preds = %if.then80
  %40 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10543
  %base83 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %40, i32 0, i32 0, !dbg !10543
  br label %cond.end85, !dbg !10543

cond.false84:                                     ; preds = %if.then80
  br label %cond.end85, !dbg !10543

cond.end85:                                       ; preds = %cond.false84, %cond.true82
  %cond86 = phi %struct.VEC_expr_t_base* [ %base83, %cond.true82 ], [ null, %cond.false84 ], !dbg !10543
  %41 = load i32, i32* %n, align 4, !dbg !10543
  %call87 = call %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %cond86, i32 %41), !dbg !10543
  br label %for.inc673, !dbg !10545

if.end88:                                         ; preds = %land.lhs.true, %cond.end73
  %42 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10546
  %sched_next89 = getelementptr inbounds %struct._fence, %struct._fence* %42, i32 0, i32 12, !dbg !10546
  %43 = load %struct.rtx_def*, %struct.rtx_def** %sched_next89, align 8, !dbg !10546
  %tobool90 = icmp ne %struct.rtx_def* %43, null, !dbg !10546
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !10548

if.then91:                                        ; preds = %if.end88
  %44 = load i32, i32* %sched_next_worked, align 4, !dbg !10549
  %inc = add nsw i32 %44, 1, !dbg !10549
  store i32 %inc, i32* %sched_next_worked, align 4, !dbg !10549
  br label %if.end92, !dbg !10550

if.end92:                                         ; preds = %if.then91, %if.end88
  %45 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10551
  %target_available93 = getelementptr inbounds %struct._expr, %struct._expr* %45, i32 0, i32 11, !dbg !10551
  %46 = load i8, i8* %target_available93, align 8, !dbg !10551
  store i8 %46, i8* %target_available, align 1, !dbg !10552
  %47 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** @vec_target_unavailable_vinsns, align 8, !dbg !10553
  %48 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10555
  %call94 = call zeroext i8 @vinsn_vec_has_expr_p(%struct.VEC_vinsn_t_heap* %47, %struct._expr* %48), !dbg !10556
  %tobool95 = icmp ne i8 %call94, 0, !dbg !10556
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !10557

if.then96:                                        ; preds = %if.end92
  store i8 -1, i8* %target_available, align 1, !dbg !10558
  br label %if.end97, !dbg !10559

if.end97:                                         ; preds = %if.then96, %if.end92
  %49 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** @vec_bookkeeping_blocked_vinsns, align 8, !dbg !10560
  %50 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10562
  %call98 = call zeroext i8 @vinsn_vec_has_expr_p(%struct.VEC_vinsn_t_heap* %49, %struct._expr* %50), !dbg !10563
  %tobool99 = icmp ne i8 %call98, 0, !dbg !10563
  br i1 %tobool99, label %if.then100, label %if.end133, !dbg !10564

if.then100:                                       ; preds = %if.end97
  %51 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10565
  %tobool101 = icmp ne %struct.VEC_expr_t_heap* %51, null, !dbg !10565
  br i1 %tobool101, label %cond.true102, label %cond.false104, !dbg !10565

cond.true102:                                     ; preds = %if.then100
  %52 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10565
  %base103 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %52, i32 0, i32 0, !dbg !10565
  br label %cond.end105, !dbg !10565

cond.false104:                                    ; preds = %if.then100
  br label %cond.end105, !dbg !10565

cond.end105:                                      ; preds = %cond.false104, %cond.true102
  %cond106 = phi %struct.VEC_expr_t_base* [ %base103, %cond.true102 ], [ null, %cond.false104 ], !dbg !10565
  %53 = load i32, i32* %n, align 4, !dbg !10565
  %call107 = call %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %cond106, i32 %53), !dbg !10565
  %54 = load i32, i32* @sched_verbose, align 4, !dbg !10567
  %cmp108 = icmp sge i32 %54, 4, !dbg !10569
  br i1 %cmp108, label %if.then110, label %if.end132, !dbg !10570

if.then110:                                       ; preds = %cond.end105
  br label %do.body, !dbg !10571

do.body:                                          ; preds = %if.then110
  %55 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10572
  %tobool111 = icmp ne i8 %55, 0, !dbg !10572
  br i1 %tobool111, label %if.then112, label %if.else, !dbg !10575

if.then112:                                       ; preds = %do.body
  br label %do.body113, !dbg !10572

do.body113:                                       ; preds = %if.then112
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !10576, metadata !DIExpression()), !dbg !10578
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10578
  %u114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !10578
  %fld = bitcast %union.u* %u114 to [1 x %union.rtunion_def]*, !dbg !10578
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !10578
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10578
  %57 = load i32, i32* %rt_int, align 8, !dbg !10578
  %call115 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.49, i64 0, i64 0), i32 %57), !dbg !10578
  %mul = mul nsw i32 2, %call115, !dbg !10578
  %add = add nsw i32 1, %mul, !dbg !10578
  store i32 %add, i32* %__j, align 4, !dbg !10578
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !10579, metadata !DIExpression()), !dbg !10578
  %58 = load i32, i32* %__j, align 4, !dbg !10578
  %conv116 = sext i32 %58 to i64, !dbg !10578
  %mul117 = mul i64 1, %conv116, !dbg !10578
  %59 = alloca i8, i64 %mul117, align 16, !dbg !10578
  store i8* %59, i8** %__s, align 8, !dbg !10578
  %60 = load i8*, i8** %__s, align 8, !dbg !10578
  %61 = load i32, i32* %__j, align 4, !dbg !10578
  %conv118 = sext i32 %61 to i64, !dbg !10578
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10578
  %u119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !10578
  %fld120 = bitcast %union.u* %u119 to [1 x %union.rtunion_def]*, !dbg !10578
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i64 0, i64 0, !dbg !10578
  %rt_int122 = bitcast %union.rtunion_def* %arrayidx121 to i32*, !dbg !10578
  %63 = load i32, i32* %rt_int122, align 8, !dbg !10578
  %call123 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %60, i64 %conv118, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.49, i64 0, i64 0), i32 %63), !dbg !10578
  %64 = load i8*, i8** %__s, align 8, !dbg !10578
  call void @sel_prepare_string_for_dot_label(i8* %64), !dbg !10578
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10578
  %66 = load i8*, i8** %__s, align 8, !dbg !10578
  %call124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %66), !dbg !10578
  br label %do.end, !dbg !10578

do.end:                                           ; preds = %do.body113
  br label %if.end130, !dbg !10578

if.else:                                          ; preds = %do.body
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10572
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10572
  %u125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !10572
  %fld126 = bitcast %union.u* %u125 to [1 x %union.rtunion_def]*, !dbg !10572
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i64 0, i64 0, !dbg !10572
  %rt_int128 = bitcast %union.rtunion_def* %arrayidx127 to i32*, !dbg !10572
  %69 = load i32, i32* %rt_int128, align 8, !dbg !10572
  %call129 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.49, i64 0, i64 0), i32 %69), !dbg !10572
  br label %if.end130

if.end130:                                        ; preds = %if.else, %do.end
  br label %do.end131, !dbg !10575

do.end131:                                        ; preds = %if.end130
  br label %if.end132, !dbg !10575

if.end132:                                        ; preds = %do.end131, %cond.end105
  br label %for.inc673, !dbg !10580

if.end133:                                        ; preds = %if.end97
  %70 = load i8, i8* %target_available, align 1, !dbg !10581
  %conv134 = sext i8 %70 to i32, !dbg !10581
  %cmp135 = icmp eq i32 %conv134, 1, !dbg !10583
  br i1 %cmp135, label %if.then137, label %if.else142, !dbg !10584

if.then137:                                       ; preds = %if.end133
  %71 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10585
  %vinsn138 = getelementptr inbounds %struct._expr, %struct._expr* %71, i32 0, i32 0, !dbg !10585
  %72 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn138, align 8, !dbg !10585
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %72, i32 0, i32 1, !dbg !10585
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !10585
  %73 = load i32, i32* %type, align 8, !dbg !10585
  %cmp139 = icmp eq i32 %73, 23, !dbg !10585
  %conv140 = zext i1 %cmp139 to i32, !dbg !10585
  %conv141 = trunc i32 %conv140 to i8, !dbg !10585
  store i8 %conv141, i8* %is_orig_reg_p, align 1, !dbg !10587
  br label %if.end213, !dbg !10588

if.else142:                                       ; preds = %if.end133
  %74 = load i8, i8* %target_available, align 1, !dbg !10589
  %conv143 = sext i8 %74 to i32, !dbg !10589
  %cmp144 = icmp eq i32 %conv143, 0, !dbg !10591
  br i1 %cmp144, label %land.lhs.true146, label %lor.lhs.false152, !dbg !10592

land.lhs.true146:                                 ; preds = %if.else142
  %75 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10593
  %vinsn147 = getelementptr inbounds %struct._expr, %struct._expr* %75, i32 0, i32 0, !dbg !10593
  %76 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn147, align 8, !dbg !10593
  %id148 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %76, i32 0, i32 1, !dbg !10593
  %type149 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id148, i32 0, i32 0, !dbg !10593
  %77 = load i32, i32* %type149, align 8, !dbg !10593
  %cmp150 = icmp eq i32 %77, 23, !dbg !10593
  br i1 %cmp150, label %lor.lhs.false152, label %if.then169, !dbg !10594

lor.lhs.false152:                                 ; preds = %land.lhs.true146, %if.else142
  %78 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10595
  %tobool153 = icmp ne %struct.VEC_expr_t_heap* %78, null, !dbg !10595
  br i1 %tobool153, label %cond.true154, label %cond.false156, !dbg !10595

cond.true154:                                     ; preds = %lor.lhs.false152
  %79 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10595
  %base155 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %79, i32 0, i32 0, !dbg !10595
  br label %cond.end157, !dbg !10595

cond.false156:                                    ; preds = %lor.lhs.false152
  br label %cond.end157, !dbg !10595

cond.end157:                                      ; preds = %cond.false156, %cond.true154
  %cond158 = phi %struct.VEC_expr_t_base* [ %base155, %cond.true154 ], [ null, %cond.false156 ], !dbg !10595
  %call159 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond158), !dbg !10595
  %sub160 = sub nsw i32 %call159, 1, !dbg !10596
  %80 = load i32, i32* %n, align 4, !dbg !10597
  %sub161 = sub nsw i32 %sub160, %80, !dbg !10598
  %81 = load i32, i32* @max_insns_to_rename, align 4, !dbg !10599
  %cmp162 = icmp sge i32 %sub161, %81, !dbg !10600
  br i1 %cmp162, label %if.then169, label %lor.lhs.false164, !dbg !10601

lor.lhs.false164:                                 ; preds = %cond.end157
  %82 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10602
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %82, i32 0, i32 7, !dbg !10602
  %83 = load i32, i32* %spec_done_ds, align 8, !dbg !10602
  %and = and i32 %83, 63, !dbg !10603
  %tobool165 = icmp ne i32 %and, 0, !dbg !10603
  br i1 %tobool165, label %if.then169, label %lor.lhs.false166, !dbg !10604

lor.lhs.false166:                                 ; preds = %lor.lhs.false164
  %84 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10605
  %85 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !10606
  %call167 = call zeroext i8 @find_best_reg_for_expr(%struct._expr* %84, %struct._list_node* %85, i8* %is_orig_reg_p), !dbg !10607
  %tobool168 = icmp ne i8 %call167, 0, !dbg !10607
  br i1 %tobool168, label %if.end212, label %if.then169, !dbg !10608

if.then169:                                       ; preds = %lor.lhs.false166, %lor.lhs.false164, %cond.end157, %land.lhs.true146
  %86 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10609
  %tobool170 = icmp ne %struct.VEC_expr_t_heap* %86, null, !dbg !10609
  br i1 %tobool170, label %cond.true171, label %cond.false173, !dbg !10609

cond.true171:                                     ; preds = %if.then169
  %87 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10609
  %base172 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %87, i32 0, i32 0, !dbg !10609
  br label %cond.end174, !dbg !10609

cond.false173:                                    ; preds = %if.then169
  br label %cond.end174, !dbg !10609

cond.end174:                                      ; preds = %cond.false173, %cond.true171
  %cond175 = phi %struct.VEC_expr_t_base* [ %base172, %cond.true171 ], [ null, %cond.false173 ], !dbg !10609
  %88 = load i32, i32* %n, align 4, !dbg !10609
  %call176 = call %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %cond175, i32 %88), !dbg !10609
  %89 = load i32, i32* @sched_verbose, align 4, !dbg !10611
  %cmp177 = icmp sge i32 %89, 4, !dbg !10613
  br i1 %cmp177, label %if.then179, label %if.end211, !dbg !10614

if.then179:                                       ; preds = %cond.end174
  br label %do.body180, !dbg !10615

do.body180:                                       ; preds = %if.then179
  %90 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10616
  %tobool181 = icmp ne i8 %90, 0, !dbg !10616
  br i1 %tobool181, label %if.then182, label %if.else203, !dbg !10619

if.then182:                                       ; preds = %do.body180
  br label %do.body183, !dbg !10616

do.body183:                                       ; preds = %if.then182
  call void @llvm.dbg.declare(metadata i32* %__j184, metadata !10620, metadata !DIExpression()), !dbg !10622
  %91 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10622
  %u185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !10622
  %fld186 = bitcast %union.u* %u185 to [1 x %union.rtunion_def]*, !dbg !10622
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld186, i64 0, i64 0, !dbg !10622
  %rt_int188 = bitcast %union.rtunion_def* %arrayidx187 to i32*, !dbg !10622
  %92 = load i32, i32* %rt_int188, align 8, !dbg !10622
  %call189 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.50, i64 0, i64 0), i32 %92), !dbg !10622
  %mul190 = mul nsw i32 2, %call189, !dbg !10622
  %add191 = add nsw i32 1, %mul190, !dbg !10622
  store i32 %add191, i32* %__j184, align 4, !dbg !10622
  call void @llvm.dbg.declare(metadata i8** %__s192, metadata !10623, metadata !DIExpression()), !dbg !10622
  %93 = load i32, i32* %__j184, align 4, !dbg !10622
  %conv193 = sext i32 %93 to i64, !dbg !10622
  %mul194 = mul i64 1, %conv193, !dbg !10622
  %94 = alloca i8, i64 %mul194, align 16, !dbg !10622
  store i8* %94, i8** %__s192, align 8, !dbg !10622
  %95 = load i8*, i8** %__s192, align 8, !dbg !10622
  %96 = load i32, i32* %__j184, align 4, !dbg !10622
  %conv195 = sext i32 %96 to i64, !dbg !10622
  %97 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10622
  %u196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !10622
  %fld197 = bitcast %union.u* %u196 to [1 x %union.rtunion_def]*, !dbg !10622
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i64 0, i64 0, !dbg !10622
  %rt_int199 = bitcast %union.rtunion_def* %arrayidx198 to i32*, !dbg !10622
  %98 = load i32, i32* %rt_int199, align 8, !dbg !10622
  %call200 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %95, i64 %conv195, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.50, i64 0, i64 0), i32 %98), !dbg !10622
  %99 = load i8*, i8** %__s192, align 8, !dbg !10622
  call void @sel_prepare_string_for_dot_label(i8* %99), !dbg !10622
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10622
  %101 = load i8*, i8** %__s192, align 8, !dbg !10622
  %call201 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %101), !dbg !10622
  br label %do.end202, !dbg !10622

do.end202:                                        ; preds = %do.body183
  br label %if.end209, !dbg !10622

if.else203:                                       ; preds = %do.body180
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10616
  %103 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10616
  %u204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !10616
  %fld205 = bitcast %union.u* %u204 to [1 x %union.rtunion_def]*, !dbg !10616
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i64 0, i64 0, !dbg !10616
  %rt_int207 = bitcast %union.rtunion_def* %arrayidx206 to i32*, !dbg !10616
  %104 = load i32, i32* %rt_int207, align 8, !dbg !10616
  %call208 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.50, i64 0, i64 0), i32 %104), !dbg !10616
  br label %if.end209

if.end209:                                        ; preds = %if.else203, %do.end202
  br label %do.end210, !dbg !10619

do.end210:                                        ; preds = %if.end209
  br label %if.end211, !dbg !10619

if.end211:                                        ; preds = %do.end210, %cond.end174
  br label %for.inc673, !dbg !10624

if.end212:                                        ; preds = %lor.lhs.false166
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.then137
  %105 = load i8, i8* @pipelining_p, align 1, !dbg !10625
  %conv214 = zext i8 %105 to i32, !dbg !10625
  %tobool215 = icmp ne i32 %conv214, 0, !dbg !10625
  br i1 %tobool215, label %land.lhs.true216, label %if.end326, !dbg !10627

land.lhs.true216:                                 ; preds = %if.end213
  %106 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10628
  %orig_sched_cycle = getelementptr inbounds %struct._expr, %struct._expr* %106, i32 0, i32 9, !dbg !10628
  %107 = load i32, i32* %orig_sched_cycle, align 8, !dbg !10628
  %cmp217 = icmp sgt i32 %107, 0, !dbg !10629
  br i1 %cmp217, label %land.lhs.true219, label %if.end326, !dbg !10630

land.lhs.true219:                                 ; preds = %land.lhs.true216
  %108 = load i8, i8* %is_orig_reg_p, align 1, !dbg !10631
  %tobool220 = icmp ne i8 %108, 0, !dbg !10631
  br i1 %tobool220, label %lor.lhs.false221, label %if.then225, !dbg !10632

lor.lhs.false221:                                 ; preds = %land.lhs.true219
  %109 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10633
  %spec_done_ds222 = getelementptr inbounds %struct._expr, %struct._expr* %109, i32 0, i32 7, !dbg !10633
  %110 = load i32, i32* %spec_done_ds222, align 8, !dbg !10633
  %cmp223 = icmp ne i32 %110, 0, !dbg !10634
  br i1 %cmp223, label %if.then225, label %if.end326, !dbg !10635

if.then225:                                       ; preds = %lor.lhs.false221, %land.lhs.true219
  call void @llvm.dbg.declare(metadata i32* %need_n_ticks_till_branch, metadata !10636, metadata !DIExpression()), !dbg !10638
  %111 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10639
  %vinsn226 = getelementptr inbounds %struct._expr, %struct._expr* %111, i32 0, i32 0, !dbg !10639
  %112 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn226, align 8, !dbg !10639
  %call227 = call i32 @sel_vinsn_cost(%struct.vinsn_def* %112), !dbg !10640
  store i32 %call227, i32* %need_n_ticks_till_branch, align 4, !dbg !10638
  %113 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !10641
  %ninsns = getelementptr inbounds %struct.loop, %struct.loop* %113, i32 0, i32 1, !dbg !10643
  %114 = load i32, i32* %ninsns, align 4, !dbg !10643
  %cmp228 = icmp slt i32 %114, 9, !dbg !10644
  br i1 %cmp228, label %if.then230, label %if.end273, !dbg !10645

if.then230:                                       ; preds = %if.then225
  %115 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10646
  %tobool231 = icmp ne %struct.VEC_expr_t_heap* %115, null, !dbg !10646
  br i1 %tobool231, label %cond.true232, label %cond.false234, !dbg !10646

cond.true232:                                     ; preds = %if.then230
  %116 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10646
  %base233 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %116, i32 0, i32 0, !dbg !10646
  br label %cond.end235, !dbg !10646

cond.false234:                                    ; preds = %if.then230
  br label %cond.end235, !dbg !10646

cond.end235:                                      ; preds = %cond.false234, %cond.true232
  %cond236 = phi %struct.VEC_expr_t_base* [ %base233, %cond.true232 ], [ null, %cond.false234 ], !dbg !10646
  %117 = load i32, i32* %n, align 4, !dbg !10646
  %call237 = call %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %cond236, i32 %117), !dbg !10646
  %118 = load i32, i32* @sched_verbose, align 4, !dbg !10648
  %cmp238 = icmp sge i32 %118, 4, !dbg !10650
  br i1 %cmp238, label %if.then240, label %if.end272, !dbg !10651

if.then240:                                       ; preds = %cond.end235
  br label %do.body241, !dbg !10652

do.body241:                                       ; preds = %if.then240
  %119 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10653
  %tobool242 = icmp ne i8 %119, 0, !dbg !10653
  br i1 %tobool242, label %if.then243, label %if.else264, !dbg !10656

if.then243:                                       ; preds = %do.body241
  br label %do.body244, !dbg !10653

do.body244:                                       ; preds = %if.then243
  call void @llvm.dbg.declare(metadata i32* %__j245, metadata !10657, metadata !DIExpression()), !dbg !10659
  %120 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10659
  %u246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !10659
  %fld247 = bitcast %union.u* %u246 to [1 x %union.rtunion_def]*, !dbg !10659
  %arrayidx248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld247, i64 0, i64 0, !dbg !10659
  %rt_int249 = bitcast %union.rtunion_def* %arrayidx248 to i32*, !dbg !10659
  %121 = load i32, i32* %rt_int249, align 8, !dbg !10659
  %call250 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %121), !dbg !10659
  %mul251 = mul nsw i32 2, %call250, !dbg !10659
  %add252 = add nsw i32 1, %mul251, !dbg !10659
  store i32 %add252, i32* %__j245, align 4, !dbg !10659
  call void @llvm.dbg.declare(metadata i8** %__s253, metadata !10660, metadata !DIExpression()), !dbg !10659
  %122 = load i32, i32* %__j245, align 4, !dbg !10659
  %conv254 = sext i32 %122 to i64, !dbg !10659
  %mul255 = mul i64 1, %conv254, !dbg !10659
  %123 = alloca i8, i64 %mul255, align 16, !dbg !10659
  store i8* %123, i8** %__s253, align 8, !dbg !10659
  %124 = load i8*, i8** %__s253, align 8, !dbg !10659
  %125 = load i32, i32* %__j245, align 4, !dbg !10659
  %conv256 = sext i32 %125 to i64, !dbg !10659
  %126 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10659
  %u257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !10659
  %fld258 = bitcast %union.u* %u257 to [1 x %union.rtunion_def]*, !dbg !10659
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i64 0, i64 0, !dbg !10659
  %rt_int260 = bitcast %union.rtunion_def* %arrayidx259 to i32*, !dbg !10659
  %127 = load i32, i32* %rt_int260, align 8, !dbg !10659
  %call261 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %124, i64 %conv256, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %127), !dbg !10659
  %128 = load i8*, i8** %__s253, align 8, !dbg !10659
  call void @sel_prepare_string_for_dot_label(i8* %128), !dbg !10659
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10659
  %130 = load i8*, i8** %__s253, align 8, !dbg !10659
  %call262 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %129, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %130), !dbg !10659
  br label %do.end263, !dbg !10659

do.end263:                                        ; preds = %do.body244
  br label %if.end270, !dbg !10659

if.else264:                                       ; preds = %do.body241
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10653
  %132 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10653
  %u265 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1, !dbg !10653
  %fld266 = bitcast %union.u* %u265 to [1 x %union.rtunion_def]*, !dbg !10653
  %arrayidx267 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld266, i64 0, i64 0, !dbg !10653
  %rt_int268 = bitcast %union.rtunion_def* %arrayidx267 to i32*, !dbg !10653
  %133 = load i32, i32* %rt_int268, align 8, !dbg !10653
  %call269 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %131, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %133), !dbg !10653
  br label %if.end270

if.end270:                                        ; preds = %if.else264, %do.end263
  br label %do.end271, !dbg !10656

do.end271:                                        ; preds = %if.end270
  br label %if.end272, !dbg !10656

if.end272:                                        ; preds = %do.end271, %cond.end235
  br label %for.inc673, !dbg !10661

if.end273:                                        ; preds = %if.then225
  %134 = load %struct.loop*, %struct.loop** @current_loop_nest, align 8, !dbg !10662
  %ninsns274 = getelementptr inbounds %struct.loop, %struct.loop* %134, i32 0, i32 1, !dbg !10664
  %135 = load i32, i32* %ninsns274, align 4, !dbg !10664
  %136 = load i32, i32* @num_insns_scheduled, align 4, !dbg !10665
  %sub275 = sub nsw i32 %135, %136, !dbg !10666
  %137 = load i32, i32* %need_n_ticks_till_branch, align 4, !dbg !10667
  %138 = load i32, i32* @issue_rate, align 4, !dbg !10668
  %mul276 = mul nsw i32 %137, %138, !dbg !10669
  %div = sdiv i32 %mul276, 2, !dbg !10670
  %cmp277 = icmp slt i32 %sub275, %div, !dbg !10671
  br i1 %cmp277, label %land.lhs.true279, label %if.end325, !dbg !10672

land.lhs.true279:                                 ; preds = %if.end273
  %139 = load i32, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !10673
  %140 = load i32, i32* %need_n_ticks_till_branch, align 4, !dbg !10674
  %cmp280 = icmp slt i32 %139, %140, !dbg !10675
  br i1 %cmp280, label %if.then282, label %if.end325, !dbg !10676

if.then282:                                       ; preds = %land.lhs.true279
  %141 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10677
  %tobool283 = icmp ne %struct.VEC_expr_t_heap* %141, null, !dbg !10677
  br i1 %tobool283, label %cond.true284, label %cond.false286, !dbg !10677

cond.true284:                                     ; preds = %if.then282
  %142 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10677
  %base285 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %142, i32 0, i32 0, !dbg !10677
  br label %cond.end287, !dbg !10677

cond.false286:                                    ; preds = %if.then282
  br label %cond.end287, !dbg !10677

cond.end287:                                      ; preds = %cond.false286, %cond.true284
  %cond288 = phi %struct.VEC_expr_t_base* [ %base285, %cond.true284 ], [ null, %cond.false286 ], !dbg !10677
  %143 = load i32, i32* %n, align 4, !dbg !10677
  %call289 = call %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %cond288, i32 %143), !dbg !10677
  %144 = load i32, i32* @sched_verbose, align 4, !dbg !10679
  %cmp290 = icmp sge i32 %144, 4, !dbg !10681
  br i1 %cmp290, label %if.then292, label %if.end324, !dbg !10682

if.then292:                                       ; preds = %cond.end287
  br label %do.body293, !dbg !10683

do.body293:                                       ; preds = %if.then292
  %145 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10684
  %tobool294 = icmp ne i8 %145, 0, !dbg !10684
  br i1 %tobool294, label %if.then295, label %if.else316, !dbg !10687

if.then295:                                       ; preds = %do.body293
  br label %do.body296, !dbg !10684

do.body296:                                       ; preds = %if.then295
  call void @llvm.dbg.declare(metadata i32* %__j297, metadata !10688, metadata !DIExpression()), !dbg !10690
  %146 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10690
  %u298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1, !dbg !10690
  %fld299 = bitcast %union.u* %u298 to [1 x %union.rtunion_def]*, !dbg !10690
  %arrayidx300 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld299, i64 0, i64 0, !dbg !10690
  %rt_int301 = bitcast %union.rtunion_def* %arrayidx300 to i32*, !dbg !10690
  %147 = load i32, i32* %rt_int301, align 8, !dbg !10690
  %call302 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %147), !dbg !10690
  %mul303 = mul nsw i32 2, %call302, !dbg !10690
  %add304 = add nsw i32 1, %mul303, !dbg !10690
  store i32 %add304, i32* %__j297, align 4, !dbg !10690
  call void @llvm.dbg.declare(metadata i8** %__s305, metadata !10691, metadata !DIExpression()), !dbg !10690
  %148 = load i32, i32* %__j297, align 4, !dbg !10690
  %conv306 = sext i32 %148 to i64, !dbg !10690
  %mul307 = mul i64 1, %conv306, !dbg !10690
  %149 = alloca i8, i64 %mul307, align 16, !dbg !10690
  store i8* %149, i8** %__s305, align 8, !dbg !10690
  %150 = load i8*, i8** %__s305, align 8, !dbg !10690
  %151 = load i32, i32* %__j297, align 4, !dbg !10690
  %conv308 = sext i32 %151 to i64, !dbg !10690
  %152 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10690
  %u309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1, !dbg !10690
  %fld310 = bitcast %union.u* %u309 to [1 x %union.rtunion_def]*, !dbg !10690
  %arrayidx311 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld310, i64 0, i64 0, !dbg !10690
  %rt_int312 = bitcast %union.rtunion_def* %arrayidx311 to i32*, !dbg !10690
  %153 = load i32, i32* %rt_int312, align 8, !dbg !10690
  %call313 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %150, i64 %conv308, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %153), !dbg !10690
  %154 = load i8*, i8** %__s305, align 8, !dbg !10690
  call void @sel_prepare_string_for_dot_label(i8* %154), !dbg !10690
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10690
  %156 = load i8*, i8** %__s305, align 8, !dbg !10690
  %call314 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %155, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %156), !dbg !10690
  br label %do.end315, !dbg !10690

do.end315:                                        ; preds = %do.body296
  br label %if.end322, !dbg !10690

if.else316:                                       ; preds = %do.body293
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10684
  %158 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10684
  %u317 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1, !dbg !10684
  %fld318 = bitcast %union.u* %u317 to [1 x %union.rtunion_def]*, !dbg !10684
  %arrayidx319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld318, i64 0, i64 0, !dbg !10684
  %rt_int320 = bitcast %union.rtunion_def* %arrayidx319 to i32*, !dbg !10684
  %159 = load i32, i32* %rt_int320, align 8, !dbg !10684
  %call321 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %157, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %159), !dbg !10684
  br label %if.end322

if.end322:                                        ; preds = %if.else316, %do.end315
  br label %do.end323, !dbg !10687

do.end323:                                        ; preds = %if.end322
  br label %if.end324, !dbg !10687

if.end324:                                        ; preds = %do.end323, %cond.end287
  br label %for.inc673, !dbg !10692

if.end325:                                        ; preds = %land.lhs.true279, %if.end273
  br label %if.end326, !dbg !10693

if.end326:                                        ; preds = %if.end325, %lor.lhs.false221, %land.lhs.true216, %if.end213
  %160 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10694
  %call327 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %160), !dbg !10696
  %conv328 = zext i8 %call327 to i32, !dbg !10696
  %tobool329 = icmp ne i32 %conv328, 0, !dbg !10696
  br i1 %tobool329, label %land.lhs.true330, label %if.end389, !dbg !10697

land.lhs.true330:                                 ; preds = %if.end326
  %161 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10698
  %priority = getelementptr inbounds %struct._expr, %struct._expr* %161, i32 0, i32 3, !dbg !10698
  %162 = load i32, i32* %priority, align 8, !dbg !10698
  %163 = load i32, i32* @fill_vec_av_set.av_max_prio, align 4, !dbg !10699
  %cmp331 = icmp slt i32 %162, %163, !dbg !10700
  br i1 %cmp331, label %if.then333, label %if.end389, !dbg !10701

if.then333:                                       ; preds = %land.lhs.true330
  %164 = load i32, i32* %stalled, align 4, !dbg !10702
  %inc334 = add nsw i32 %164, 1, !dbg !10702
  store i32 %inc334, i32* %stalled, align 4, !dbg !10702
  %165 = load i32, i32* %min_need_stall, align 4, !dbg !10704
  %cmp335 = icmp slt i32 %165, 0, !dbg !10705
  br i1 %cmp335, label %cond.true337, label %cond.false338, !dbg !10704

cond.true337:                                     ; preds = %if.then333
  br label %cond.end345, !dbg !10704

cond.false338:                                    ; preds = %if.then333
  %166 = load i32, i32* %min_need_stall, align 4, !dbg !10706
  %cmp339 = icmp slt i32 %166, 1, !dbg !10706
  br i1 %cmp339, label %cond.true341, label %cond.false342, !dbg !10706

cond.true341:                                     ; preds = %cond.false338
  %167 = load i32, i32* %min_need_stall, align 4, !dbg !10706
  br label %cond.end343, !dbg !10706

cond.false342:                                    ; preds = %cond.false338
  br label %cond.end343, !dbg !10706

cond.end343:                                      ; preds = %cond.false342, %cond.true341
  %cond344 = phi i32 [ %167, %cond.true341 ], [ 1, %cond.false342 ], !dbg !10706
  br label %cond.end345, !dbg !10704

cond.end345:                                      ; preds = %cond.end343, %cond.true337
  %cond346 = phi i32 [ 1, %cond.true337 ], [ %cond344, %cond.end343 ], !dbg !10704
  store i32 %cond346, i32* %min_need_stall, align 4, !dbg !10707
  %168 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10708
  %tobool347 = icmp ne %struct.VEC_expr_t_heap* %168, null, !dbg !10708
  br i1 %tobool347, label %cond.true348, label %cond.false350, !dbg !10708

cond.true348:                                     ; preds = %cond.end345
  %169 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10708
  %base349 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %169, i32 0, i32 0, !dbg !10708
  br label %cond.end351, !dbg !10708

cond.false350:                                    ; preds = %cond.end345
  br label %cond.end351, !dbg !10708

cond.end351:                                      ; preds = %cond.false350, %cond.true348
  %cond352 = phi %struct.VEC_expr_t_base* [ %base349, %cond.true348 ], [ null, %cond.false350 ], !dbg !10708
  %170 = load i32, i32* %n, align 4, !dbg !10708
  %call353 = call %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %cond352, i32 %170), !dbg !10708
  %171 = load i32, i32* @sched_verbose, align 4, !dbg !10709
  %cmp354 = icmp sge i32 %171, 4, !dbg !10711
  br i1 %cmp354, label %if.then356, label %if.end388, !dbg !10712

if.then356:                                       ; preds = %cond.end351
  br label %do.body357, !dbg !10713

do.body357:                                       ; preds = %if.then356
  %172 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10714
  %tobool358 = icmp ne i8 %172, 0, !dbg !10714
  br i1 %tobool358, label %if.then359, label %if.else380, !dbg !10717

if.then359:                                       ; preds = %do.body357
  br label %do.body360, !dbg !10714

do.body360:                                       ; preds = %if.then359
  call void @llvm.dbg.declare(metadata i32* %__j361, metadata !10718, metadata !DIExpression()), !dbg !10720
  %173 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10720
  %u362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1, !dbg !10720
  %fld363 = bitcast %union.u* %u362 to [1 x %union.rtunion_def]*, !dbg !10720
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i64 0, i64 0, !dbg !10720
  %rt_int365 = bitcast %union.rtunion_def* %arrayidx364 to i32*, !dbg !10720
  %174 = load i32, i32* %rt_int365, align 8, !dbg !10720
  %call366 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.52, i64 0, i64 0), i32 %174), !dbg !10720
  %mul367 = mul nsw i32 2, %call366, !dbg !10720
  %add368 = add nsw i32 1, %mul367, !dbg !10720
  store i32 %add368, i32* %__j361, align 4, !dbg !10720
  call void @llvm.dbg.declare(metadata i8** %__s369, metadata !10721, metadata !DIExpression()), !dbg !10720
  %175 = load i32, i32* %__j361, align 4, !dbg !10720
  %conv370 = sext i32 %175 to i64, !dbg !10720
  %mul371 = mul i64 1, %conv370, !dbg !10720
  %176 = alloca i8, i64 %mul371, align 16, !dbg !10720
  store i8* %176, i8** %__s369, align 8, !dbg !10720
  %177 = load i8*, i8** %__s369, align 8, !dbg !10720
  %178 = load i32, i32* %__j361, align 4, !dbg !10720
  %conv372 = sext i32 %178 to i64, !dbg !10720
  %179 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10720
  %u373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1, !dbg !10720
  %fld374 = bitcast %union.u* %u373 to [1 x %union.rtunion_def]*, !dbg !10720
  %arrayidx375 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld374, i64 0, i64 0, !dbg !10720
  %rt_int376 = bitcast %union.rtunion_def* %arrayidx375 to i32*, !dbg !10720
  %180 = load i32, i32* %rt_int376, align 8, !dbg !10720
  %call377 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %177, i64 %conv372, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.52, i64 0, i64 0), i32 %180), !dbg !10720
  %181 = load i8*, i8** %__s369, align 8, !dbg !10720
  call void @sel_prepare_string_for_dot_label(i8* %181), !dbg !10720
  %182 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10720
  %183 = load i8*, i8** %__s369, align 8, !dbg !10720
  %call378 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %182, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %183), !dbg !10720
  br label %do.end379, !dbg !10720

do.end379:                                        ; preds = %do.body360
  br label %if.end386, !dbg !10720

if.else380:                                       ; preds = %do.body357
  %184 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10714
  %185 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10714
  %u381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1, !dbg !10714
  %fld382 = bitcast %union.u* %u381 to [1 x %union.rtunion_def]*, !dbg !10714
  %arrayidx383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld382, i64 0, i64 0, !dbg !10714
  %rt_int384 = bitcast %union.rtunion_def* %arrayidx383 to i32*, !dbg !10714
  %186 = load i32, i32* %rt_int384, align 8, !dbg !10714
  %call385 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %184, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.52, i64 0, i64 0), i32 %186), !dbg !10714
  br label %if.end386

if.end386:                                        ; preds = %if.else380, %do.end379
  br label %do.end387, !dbg !10717

do.end387:                                        ; preds = %if.end386
  br label %if.end388, !dbg !10717

if.end388:                                        ; preds = %do.end387, %cond.end351
  br label %for.inc673, !dbg !10722

if.end389:                                        ; preds = %land.lhs.true330, %if.end326
  %187 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10723
  %orig_sched_cycle390 = getelementptr inbounds %struct._expr, %struct._expr* %187, i32 0, i32 9, !dbg !10723
  %188 = load i32, i32* %orig_sched_cycle390, align 8, !dbg !10723
  %cmp391 = icmp sle i32 %188, 0, !dbg !10725
  br i1 %cmp391, label %if.then393, label %if.end402, !dbg !10726

if.then393:                                       ; preds = %if.end389
  %189 = load i32, i32* @fill_vec_av_set.av_max_prio, align 4, !dbg !10727
  %190 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10727
  %priority394 = getelementptr inbounds %struct._expr, %struct._expr* %190, i32 0, i32 3, !dbg !10727
  %191 = load i32, i32* %priority394, align 8, !dbg !10727
  %cmp395 = icmp sgt i32 %189, %191, !dbg !10727
  br i1 %cmp395, label %cond.true397, label %cond.false398, !dbg !10727

cond.true397:                                     ; preds = %if.then393
  %192 = load i32, i32* @fill_vec_av_set.av_max_prio, align 4, !dbg !10727
  br label %cond.end400, !dbg !10727

cond.false398:                                    ; preds = %if.then393
  %193 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10727
  %priority399 = getelementptr inbounds %struct._expr, %struct._expr* %193, i32 0, i32 3, !dbg !10727
  %194 = load i32, i32* %priority399, align 8, !dbg !10727
  br label %cond.end400, !dbg !10727

cond.end400:                                      ; preds = %cond.false398, %cond.true397
  %cond401 = phi i32 [ %192, %cond.true397 ], [ %194, %cond.false398 ], !dbg !10727
  store i32 %cond401, i32* @fill_vec_av_set.av_max_prio, align 4, !dbg !10728
  br label %if.end402, !dbg !10729

if.end402:                                        ; preds = %cond.end400, %if.end389
  %195 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10730
  %u403 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1, !dbg !10730
  %fld404 = bitcast %union.u* %u403 to [1 x %union.rtunion_def]*, !dbg !10730
  %arrayidx405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld404, i64 0, i64 0, !dbg !10730
  %rt_int406 = bitcast %union.rtunion_def* %arrayidx405 to i32*, !dbg !10730
  %196 = load i32, i32* %rt_int406, align 8, !dbg !10730
  %197 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10732
  %ready_ticks_size = getelementptr inbounds %struct._fence, %struct._fence* %197, i32 0, i32 9, !dbg !10732
  %198 = load i32, i32* %ready_ticks_size, align 8, !dbg !10732
  %cmp407 = icmp slt i32 %196, %198, !dbg !10733
  br i1 %cmp407, label %if.then409, label %if.end511, !dbg !10734

if.then409:                                       ; preds = %if.end402
  %199 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10735
  %ready_ticks = getelementptr inbounds %struct._fence, %struct._fence* %199, i32 0, i32 8, !dbg !10735
  %200 = load i32*, i32** %ready_ticks, align 8, !dbg !10735
  %201 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10737
  %u410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1, !dbg !10737
  %fld411 = bitcast %union.u* %u410 to [1 x %union.rtunion_def]*, !dbg !10737
  %arrayidx412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld411, i64 0, i64 0, !dbg !10737
  %rt_int413 = bitcast %union.rtunion_def* %arrayidx412 to i32*, !dbg !10737
  %202 = load i32, i32* %rt_int413, align 8, !dbg !10737
  %idxprom = sext i32 %202 to i64, !dbg !10735
  %arrayidx414 = getelementptr inbounds i32, i32* %200, i64 %idxprom, !dbg !10735
  %203 = load i32, i32* %arrayidx414, align 4, !dbg !10735
  %204 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10738
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %204, i32 0, i32 2, !dbg !10738
  %205 = load i32, i32* %cycle, align 8, !dbg !10738
  %sub415 = sub nsw i32 %203, %205, !dbg !10739
  store i32 %sub415, i32* %need_cycles, align 4, !dbg !10740
  %206 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10741
  %orig_sched_cycle416 = getelementptr inbounds %struct._expr, %struct._expr* %206, i32 0, i32 9, !dbg !10741
  %207 = load i32, i32* %orig_sched_cycle416, align 8, !dbg !10741
  %cmp417 = icmp sle i32 %207, 0, !dbg !10743
  br i1 %cmp417, label %if.then419, label %if.end430, !dbg !10744

if.then419:                                       ; preds = %if.then409
  %208 = load i32, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !10745
  %209 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10745
  %priority420 = getelementptr inbounds %struct._expr, %struct._expr* %209, i32 0, i32 3, !dbg !10745
  %210 = load i32, i32* %priority420, align 8, !dbg !10745
  %211 = load i32, i32* %need_cycles, align 4, !dbg !10745
  %add421 = add nsw i32 %210, %211, !dbg !10745
  %cmp422 = icmp sgt i32 %208, %add421, !dbg !10745
  br i1 %cmp422, label %cond.true424, label %cond.false425, !dbg !10745

cond.true424:                                     ; preds = %if.then419
  %212 = load i32, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !10745
  br label %cond.end428, !dbg !10745

cond.false425:                                    ; preds = %if.then419
  %213 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10745
  %priority426 = getelementptr inbounds %struct._expr, %struct._expr* %213, i32 0, i32 3, !dbg !10745
  %214 = load i32, i32* %priority426, align 8, !dbg !10745
  %215 = load i32, i32* %need_cycles, align 4, !dbg !10745
  %add427 = add nsw i32 %214, %215, !dbg !10745
  br label %cond.end428, !dbg !10745

cond.end428:                                      ; preds = %cond.false425, %cond.true424
  %cond429 = phi i32 [ %212, %cond.true424 ], [ %add427, %cond.false425 ], !dbg !10745
  store i32 %cond429, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !10746
  br label %if.end430, !dbg !10747

if.end430:                                        ; preds = %cond.end428, %if.then409
  %216 = load i32, i32* %need_cycles, align 4, !dbg !10748
  %cmp431 = icmp sgt i32 %216, 0, !dbg !10750
  br i1 %cmp431, label %if.then433, label %if.end510, !dbg !10751

if.then433:                                       ; preds = %if.end430
  %217 = load i32, i32* %stalled, align 4, !dbg !10752
  %inc434 = add nsw i32 %217, 1, !dbg !10752
  store i32 %inc434, i32* %stalled, align 4, !dbg !10752
  %218 = load i32, i32* %min_need_stall, align 4, !dbg !10754
  %cmp435 = icmp slt i32 %218, 0, !dbg !10755
  br i1 %cmp435, label %cond.true437, label %cond.false438, !dbg !10754

cond.true437:                                     ; preds = %if.then433
  %219 = load i32, i32* %need_cycles, align 4, !dbg !10756
  br label %cond.end445, !dbg !10754

cond.false438:                                    ; preds = %if.then433
  %220 = load i32, i32* %min_need_stall, align 4, !dbg !10757
  %221 = load i32, i32* %need_cycles, align 4, !dbg !10757
  %cmp439 = icmp slt i32 %220, %221, !dbg !10757
  br i1 %cmp439, label %cond.true441, label %cond.false442, !dbg !10757

cond.true441:                                     ; preds = %cond.false438
  %222 = load i32, i32* %min_need_stall, align 4, !dbg !10757
  br label %cond.end443, !dbg !10757

cond.false442:                                    ; preds = %cond.false438
  %223 = load i32, i32* %need_cycles, align 4, !dbg !10757
  br label %cond.end443, !dbg !10757

cond.end443:                                      ; preds = %cond.false442, %cond.true441
  %cond444 = phi i32 [ %222, %cond.true441 ], [ %223, %cond.false442 ], !dbg !10757
  br label %cond.end445, !dbg !10754

cond.end445:                                      ; preds = %cond.end443, %cond.true437
  %cond446 = phi i32 [ %219, %cond.true437 ], [ %cond444, %cond.end443 ], !dbg !10754
  store i32 %cond446, i32* %min_need_stall, align 4, !dbg !10758
  %224 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10759
  %tobool447 = icmp ne %struct.VEC_expr_t_heap* %224, null, !dbg !10759
  br i1 %tobool447, label %cond.true448, label %cond.false450, !dbg !10759

cond.true448:                                     ; preds = %cond.end445
  %225 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10759
  %base449 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %225, i32 0, i32 0, !dbg !10759
  br label %cond.end451, !dbg !10759

cond.false450:                                    ; preds = %cond.end445
  br label %cond.end451, !dbg !10759

cond.end451:                                      ; preds = %cond.false450, %cond.true448
  %cond452 = phi %struct.VEC_expr_t_base* [ %base449, %cond.true448 ], [ null, %cond.false450 ], !dbg !10759
  %226 = load i32, i32* %n, align 4, !dbg !10759
  %call453 = call %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %cond452, i32 %226), !dbg !10759
  %227 = load i32, i32* @sched_verbose, align 4, !dbg !10760
  %cmp454 = icmp sge i32 %227, 4, !dbg !10762
  br i1 %cmp454, label %if.then456, label %if.end509, !dbg !10763

if.then456:                                       ; preds = %cond.end451
  br label %do.body457, !dbg !10764

do.body457:                                       ; preds = %if.then456
  %228 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10765
  %tobool458 = icmp ne i8 %228, 0, !dbg !10765
  br i1 %tobool458, label %if.then459, label %if.else494, !dbg !10768

if.then459:                                       ; preds = %do.body457
  br label %do.body460, !dbg !10765

do.body460:                                       ; preds = %if.then459
  call void @llvm.dbg.declare(metadata i32* %__j461, metadata !10769, metadata !DIExpression()), !dbg !10771
  %229 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10771
  %u462 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1, !dbg !10771
  %fld463 = bitcast %union.u* %u462 to [1 x %union.rtunion_def]*, !dbg !10771
  %arrayidx464 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld463, i64 0, i64 0, !dbg !10771
  %rt_int465 = bitcast %union.rtunion_def* %arrayidx464 to i32*, !dbg !10771
  %230 = load i32, i32* %rt_int465, align 8, !dbg !10771
  %231 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10771
  %ready_ticks466 = getelementptr inbounds %struct._fence, %struct._fence* %231, i32 0, i32 8, !dbg !10771
  %232 = load i32*, i32** %ready_ticks466, align 8, !dbg !10771
  %233 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10771
  %u467 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1, !dbg !10771
  %fld468 = bitcast %union.u* %u467 to [1 x %union.rtunion_def]*, !dbg !10771
  %arrayidx469 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld468, i64 0, i64 0, !dbg !10771
  %rt_int470 = bitcast %union.rtunion_def* %arrayidx469 to i32*, !dbg !10771
  %234 = load i32, i32* %rt_int470, align 8, !dbg !10771
  %idxprom471 = sext i32 %234 to i64, !dbg !10771
  %arrayidx472 = getelementptr inbounds i32, i32* %232, i64 %idxprom471, !dbg !10771
  %235 = load i32, i32* %arrayidx472, align 4, !dbg !10771
  %call473 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.53, i64 0, i64 0), i32 %230, i32 %235), !dbg !10771
  %mul474 = mul nsw i32 2, %call473, !dbg !10771
  %add475 = add nsw i32 1, %mul474, !dbg !10771
  store i32 %add475, i32* %__j461, align 4, !dbg !10771
  call void @llvm.dbg.declare(metadata i8** %__s476, metadata !10772, metadata !DIExpression()), !dbg !10771
  %236 = load i32, i32* %__j461, align 4, !dbg !10771
  %conv477 = sext i32 %236 to i64, !dbg !10771
  %mul478 = mul i64 1, %conv477, !dbg !10771
  %237 = alloca i8, i64 %mul478, align 16, !dbg !10771
  store i8* %237, i8** %__s476, align 8, !dbg !10771
  %238 = load i8*, i8** %__s476, align 8, !dbg !10771
  %239 = load i32, i32* %__j461, align 4, !dbg !10771
  %conv479 = sext i32 %239 to i64, !dbg !10771
  %240 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10771
  %u480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1, !dbg !10771
  %fld481 = bitcast %union.u* %u480 to [1 x %union.rtunion_def]*, !dbg !10771
  %arrayidx482 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld481, i64 0, i64 0, !dbg !10771
  %rt_int483 = bitcast %union.rtunion_def* %arrayidx482 to i32*, !dbg !10771
  %241 = load i32, i32* %rt_int483, align 8, !dbg !10771
  %242 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10771
  %ready_ticks484 = getelementptr inbounds %struct._fence, %struct._fence* %242, i32 0, i32 8, !dbg !10771
  %243 = load i32*, i32** %ready_ticks484, align 8, !dbg !10771
  %244 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10771
  %u485 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1, !dbg !10771
  %fld486 = bitcast %union.u* %u485 to [1 x %union.rtunion_def]*, !dbg !10771
  %arrayidx487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld486, i64 0, i64 0, !dbg !10771
  %rt_int488 = bitcast %union.rtunion_def* %arrayidx487 to i32*, !dbg !10771
  %245 = load i32, i32* %rt_int488, align 8, !dbg !10771
  %idxprom489 = sext i32 %245 to i64, !dbg !10771
  %arrayidx490 = getelementptr inbounds i32, i32* %243, i64 %idxprom489, !dbg !10771
  %246 = load i32, i32* %arrayidx490, align 4, !dbg !10771
  %call491 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %238, i64 %conv479, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.53, i64 0, i64 0), i32 %241, i32 %246), !dbg !10771
  %247 = load i8*, i8** %__s476, align 8, !dbg !10771
  call void @sel_prepare_string_for_dot_label(i8* %247), !dbg !10771
  %248 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10771
  %249 = load i8*, i8** %__s476, align 8, !dbg !10771
  %call492 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %248, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %249), !dbg !10771
  br label %do.end493, !dbg !10771

do.end493:                                        ; preds = %do.body460
  br label %if.end507, !dbg !10771

if.else494:                                       ; preds = %do.body457
  %250 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10765
  %251 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10765
  %u495 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %251, i32 0, i32 1, !dbg !10765
  %fld496 = bitcast %union.u* %u495 to [1 x %union.rtunion_def]*, !dbg !10765
  %arrayidx497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld496, i64 0, i64 0, !dbg !10765
  %rt_int498 = bitcast %union.rtunion_def* %arrayidx497 to i32*, !dbg !10765
  %252 = load i32, i32* %rt_int498, align 8, !dbg !10765
  %253 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10765
  %ready_ticks499 = getelementptr inbounds %struct._fence, %struct._fence* %253, i32 0, i32 8, !dbg !10765
  %254 = load i32*, i32** %ready_ticks499, align 8, !dbg !10765
  %255 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10765
  %u500 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %255, i32 0, i32 1, !dbg !10765
  %fld501 = bitcast %union.u* %u500 to [1 x %union.rtunion_def]*, !dbg !10765
  %arrayidx502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld501, i64 0, i64 0, !dbg !10765
  %rt_int503 = bitcast %union.rtunion_def* %arrayidx502 to i32*, !dbg !10765
  %256 = load i32, i32* %rt_int503, align 8, !dbg !10765
  %idxprom504 = sext i32 %256 to i64, !dbg !10765
  %arrayidx505 = getelementptr inbounds i32, i32* %254, i64 %idxprom504, !dbg !10765
  %257 = load i32, i32* %arrayidx505, align 4, !dbg !10765
  %call506 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %250, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.53, i64 0, i64 0), i32 %252, i32 %257), !dbg !10765
  br label %if.end507

if.end507:                                        ; preds = %if.else494, %do.end493
  br label %do.end508, !dbg !10768

do.end508:                                        ; preds = %if.end507
  br label %if.end509, !dbg !10768

if.end509:                                        ; preds = %do.end508, %cond.end451
  br label %for.inc673, !dbg !10773

if.end510:                                        ; preds = %if.end430
  br label %if.end511, !dbg !10774

if.end511:                                        ; preds = %if.end510, %if.end402
  %258 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10775
  %259 = load %struct.deps*, %struct.deps** %dc, align 8, !dbg !10776
  %260 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10777
  %call512 = call i32 @tick_check_p(%struct._expr* %258, %struct.deps* %259, %struct._fence* %260), !dbg !10778
  store i32 %call512, i32* %need_cycles, align 4, !dbg !10779
  %261 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10780
  %priority513 = getelementptr inbounds %struct._expr, %struct._expr* %261, i32 0, i32 3, !dbg !10780
  %262 = load i32, i32* %priority513, align 8, !dbg !10780
  %263 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10781
  %priority_adj514 = getelementptr inbounds %struct._expr, %struct._expr* %263, i32 0, i32 4, !dbg !10781
  %264 = load i32, i32* %priority_adj514, align 4, !dbg !10781
  %add515 = add nsw i32 %262, %264, !dbg !10782
  %265 = load i32, i32* %need_cycles, align 4, !dbg !10783
  %add516 = add nsw i32 %add515, %265, !dbg !10784
  store i32 %add516, i32* %new_prio, align 4, !dbg !10785
  %266 = load %struct._expr*, %struct._expr** %expr68, align 8, !dbg !10786
  %orig_sched_cycle517 = getelementptr inbounds %struct._expr, %struct._expr* %266, i32 0, i32 9, !dbg !10786
  %267 = load i32, i32* %orig_sched_cycle517, align 8, !dbg !10786
  %cmp518 = icmp sle i32 %267, 0, !dbg !10788
  br i1 %cmp518, label %if.then520, label %if.end527, !dbg !10789

if.then520:                                       ; preds = %if.end511
  %268 = load i32, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !10790
  %269 = load i32, i32* %new_prio, align 4, !dbg !10790
  %cmp521 = icmp sgt i32 %268, %269, !dbg !10790
  br i1 %cmp521, label %cond.true523, label %cond.false524, !dbg !10790

cond.true523:                                     ; preds = %if.then520
  %270 = load i32, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !10790
  br label %cond.end525, !dbg !10790

cond.false524:                                    ; preds = %if.then520
  %271 = load i32, i32* %new_prio, align 4, !dbg !10790
  br label %cond.end525, !dbg !10790

cond.end525:                                      ; preds = %cond.false524, %cond.true523
  %cond526 = phi i32 [ %270, %cond.true523 ], [ %271, %cond.false524 ], !dbg !10790
  store i32 %cond526, i32* @fill_vec_av_set.est_ticks_till_branch, align 4, !dbg !10791
  br label %if.end527, !dbg !10792

if.end527:                                        ; preds = %cond.end525, %if.end511
  %272 = load i32, i32* %need_cycles, align 4, !dbg !10793
  %cmp528 = icmp sgt i32 %272, 0, !dbg !10795
  br i1 %cmp528, label %if.then530, label %if.end637, !dbg !10796

if.then530:                                       ; preds = %if.end527
  %273 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10797
  %u531 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %273, i32 0, i32 1, !dbg !10797
  %fld532 = bitcast %union.u* %u531 to [1 x %union.rtunion_def]*, !dbg !10797
  %arrayidx533 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld532, i64 0, i64 0, !dbg !10797
  %rt_int534 = bitcast %union.rtunion_def* %arrayidx533 to i32*, !dbg !10797
  %274 = load i32, i32* %rt_int534, align 8, !dbg !10797
  %275 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10800
  %ready_ticks_size535 = getelementptr inbounds %struct._fence, %struct._fence* %275, i32 0, i32 9, !dbg !10800
  %276 = load i32, i32* %ready_ticks_size535, align 8, !dbg !10800
  %cmp536 = icmp sge i32 %274, %276, !dbg !10801
  br i1 %cmp536, label %if.then538, label %if.end551, !dbg !10802

if.then538:                                       ; preds = %if.then530
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !10803, metadata !DIExpression()), !dbg !10805
  %277 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10806
  %u539 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %277, i32 0, i32 1, !dbg !10806
  %fld540 = bitcast %union.u* %u539 to [1 x %union.rtunion_def]*, !dbg !10806
  %arrayidx541 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld540, i64 0, i64 0, !dbg !10806
  %rt_int542 = bitcast %union.rtunion_def* %arrayidx541 to i32*, !dbg !10806
  %278 = load i32, i32* %rt_int542, align 8, !dbg !10806
  %mul543 = mul nsw i32 %278, 3, !dbg !10807
  %div544 = sdiv i32 %mul543, 2, !dbg !10808
  store i32 %div544, i32* %new_size, align 4, !dbg !10805
  %279 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10809
  %ready_ticks545 = getelementptr inbounds %struct._fence, %struct._fence* %279, i32 0, i32 8, !dbg !10809
  %280 = load i32*, i32** %ready_ticks545, align 8, !dbg !10809
  %281 = bitcast i32* %280 to i8*, !dbg !10809
  %282 = load i32, i32* %new_size, align 4, !dbg !10810
  %conv546 = sext i32 %282 to i64, !dbg !10810
  %283 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10811
  %ready_ticks_size547 = getelementptr inbounds %struct._fence, %struct._fence* %283, i32 0, i32 9, !dbg !10811
  %284 = load i32, i32* %ready_ticks_size547, align 8, !dbg !10811
  %conv548 = sext i32 %284 to i64, !dbg !10811
  %call549 = call i8* @xrecalloc(i8* %281, i64 %conv546, i64 %conv548, i64 4), !dbg !10812
  %285 = bitcast i8* %call549 to i32*, !dbg !10813
  %286 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10814
  %ready_ticks550 = getelementptr inbounds %struct._fence, %struct._fence* %286, i32 0, i32 8, !dbg !10814
  store i32* %285, i32** %ready_ticks550, align 8, !dbg !10815
  br label %if.end551, !dbg !10816

if.end551:                                        ; preds = %if.then538, %if.then530
  %287 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10817
  %cycle552 = getelementptr inbounds %struct._fence, %struct._fence* %287, i32 0, i32 2, !dbg !10817
  %288 = load i32, i32* %cycle552, align 8, !dbg !10817
  %289 = load i32, i32* %need_cycles, align 4, !dbg !10818
  %add553 = add nsw i32 %288, %289, !dbg !10819
  %290 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10820
  %ready_ticks554 = getelementptr inbounds %struct._fence, %struct._fence* %290, i32 0, i32 8, !dbg !10820
  %291 = load i32*, i32** %ready_ticks554, align 8, !dbg !10820
  %292 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10821
  %u555 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %292, i32 0, i32 1, !dbg !10821
  %fld556 = bitcast %union.u* %u555 to [1 x %union.rtunion_def]*, !dbg !10821
  %arrayidx557 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld556, i64 0, i64 0, !dbg !10821
  %rt_int558 = bitcast %union.rtunion_def* %arrayidx557 to i32*, !dbg !10821
  %293 = load i32, i32* %rt_int558, align 8, !dbg !10821
  %idxprom559 = sext i32 %293 to i64, !dbg !10820
  %arrayidx560 = getelementptr inbounds i32, i32* %291, i64 %idxprom559, !dbg !10820
  store i32 %add553, i32* %arrayidx560, align 4, !dbg !10822
  %294 = load i32, i32* %stalled, align 4, !dbg !10823
  %inc561 = add nsw i32 %294, 1, !dbg !10823
  store i32 %inc561, i32* %stalled, align 4, !dbg !10823
  %295 = load i32, i32* %min_need_stall, align 4, !dbg !10824
  %cmp562 = icmp slt i32 %295, 0, !dbg !10825
  br i1 %cmp562, label %cond.true564, label %cond.false565, !dbg !10824

cond.true564:                                     ; preds = %if.end551
  %296 = load i32, i32* %need_cycles, align 4, !dbg !10826
  br label %cond.end572, !dbg !10824

cond.false565:                                    ; preds = %if.end551
  %297 = load i32, i32* %min_need_stall, align 4, !dbg !10827
  %298 = load i32, i32* %need_cycles, align 4, !dbg !10827
  %cmp566 = icmp slt i32 %297, %298, !dbg !10827
  br i1 %cmp566, label %cond.true568, label %cond.false569, !dbg !10827

cond.true568:                                     ; preds = %cond.false565
  %299 = load i32, i32* %min_need_stall, align 4, !dbg !10827
  br label %cond.end570, !dbg !10827

cond.false569:                                    ; preds = %cond.false565
  %300 = load i32, i32* %need_cycles, align 4, !dbg !10827
  br label %cond.end570, !dbg !10827

cond.end570:                                      ; preds = %cond.false569, %cond.true568
  %cond571 = phi i32 [ %299, %cond.true568 ], [ %300, %cond.false569 ], !dbg !10827
  br label %cond.end572, !dbg !10824

cond.end572:                                      ; preds = %cond.end570, %cond.true564
  %cond573 = phi i32 [ %296, %cond.true564 ], [ %cond571, %cond.end570 ], !dbg !10824
  store i32 %cond573, i32* %min_need_stall, align 4, !dbg !10828
  %301 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10829
  %tobool574 = icmp ne %struct.VEC_expr_t_heap* %301, null, !dbg !10829
  br i1 %tobool574, label %cond.true575, label %cond.false577, !dbg !10829

cond.true575:                                     ; preds = %cond.end572
  %302 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10829
  %base576 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %302, i32 0, i32 0, !dbg !10829
  br label %cond.end578, !dbg !10829

cond.false577:                                    ; preds = %cond.end572
  br label %cond.end578, !dbg !10829

cond.end578:                                      ; preds = %cond.false577, %cond.true575
  %cond579 = phi %struct.VEC_expr_t_base* [ %base576, %cond.true575 ], [ null, %cond.false577 ], !dbg !10829
  %303 = load i32, i32* %n, align 4, !dbg !10829
  %call580 = call %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %cond579, i32 %303), !dbg !10829
  %304 = load i32, i32* @sched_verbose, align 4, !dbg !10830
  %cmp581 = icmp sge i32 %304, 4, !dbg !10832
  br i1 %cmp581, label %if.then583, label %if.end636, !dbg !10833

if.then583:                                       ; preds = %cond.end578
  br label %do.body584, !dbg !10834

do.body584:                                       ; preds = %if.then583
  %305 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10835
  %tobool585 = icmp ne i8 %305, 0, !dbg !10835
  br i1 %tobool585, label %if.then586, label %if.else621, !dbg !10838

if.then586:                                       ; preds = %do.body584
  br label %do.body587, !dbg !10835

do.body587:                                       ; preds = %if.then586
  call void @llvm.dbg.declare(metadata i32* %__j588, metadata !10839, metadata !DIExpression()), !dbg !10841
  %306 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10841
  %u589 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %306, i32 0, i32 1, !dbg !10841
  %fld590 = bitcast %union.u* %u589 to [1 x %union.rtunion_def]*, !dbg !10841
  %arrayidx591 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld590, i64 0, i64 0, !dbg !10841
  %rt_int592 = bitcast %union.rtunion_def* %arrayidx591 to i32*, !dbg !10841
  %307 = load i32, i32* %rt_int592, align 8, !dbg !10841
  %308 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10841
  %ready_ticks593 = getelementptr inbounds %struct._fence, %struct._fence* %308, i32 0, i32 8, !dbg !10841
  %309 = load i32*, i32** %ready_ticks593, align 8, !dbg !10841
  %310 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10841
  %u594 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1, !dbg !10841
  %fld595 = bitcast %union.u* %u594 to [1 x %union.rtunion_def]*, !dbg !10841
  %arrayidx596 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld595, i64 0, i64 0, !dbg !10841
  %rt_int597 = bitcast %union.rtunion_def* %arrayidx596 to i32*, !dbg !10841
  %311 = load i32, i32* %rt_int597, align 8, !dbg !10841
  %idxprom598 = sext i32 %311 to i64, !dbg !10841
  %arrayidx599 = getelementptr inbounds i32, i32* %309, i64 %idxprom598, !dbg !10841
  %312 = load i32, i32* %arrayidx599, align 4, !dbg !10841
  %call600 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.54, i64 0, i64 0), i32 %307, i32 %312), !dbg !10841
  %mul601 = mul nsw i32 2, %call600, !dbg !10841
  %add602 = add nsw i32 1, %mul601, !dbg !10841
  store i32 %add602, i32* %__j588, align 4, !dbg !10841
  call void @llvm.dbg.declare(metadata i8** %__s603, metadata !10842, metadata !DIExpression()), !dbg !10841
  %313 = load i32, i32* %__j588, align 4, !dbg !10841
  %conv604 = sext i32 %313 to i64, !dbg !10841
  %mul605 = mul i64 1, %conv604, !dbg !10841
  %314 = alloca i8, i64 %mul605, align 16, !dbg !10841
  store i8* %314, i8** %__s603, align 8, !dbg !10841
  %315 = load i8*, i8** %__s603, align 8, !dbg !10841
  %316 = load i32, i32* %__j588, align 4, !dbg !10841
  %conv606 = sext i32 %316 to i64, !dbg !10841
  %317 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10841
  %u607 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %317, i32 0, i32 1, !dbg !10841
  %fld608 = bitcast %union.u* %u607 to [1 x %union.rtunion_def]*, !dbg !10841
  %arrayidx609 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld608, i64 0, i64 0, !dbg !10841
  %rt_int610 = bitcast %union.rtunion_def* %arrayidx609 to i32*, !dbg !10841
  %318 = load i32, i32* %rt_int610, align 8, !dbg !10841
  %319 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10841
  %ready_ticks611 = getelementptr inbounds %struct._fence, %struct._fence* %319, i32 0, i32 8, !dbg !10841
  %320 = load i32*, i32** %ready_ticks611, align 8, !dbg !10841
  %321 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10841
  %u612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %321, i32 0, i32 1, !dbg !10841
  %fld613 = bitcast %union.u* %u612 to [1 x %union.rtunion_def]*, !dbg !10841
  %arrayidx614 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld613, i64 0, i64 0, !dbg !10841
  %rt_int615 = bitcast %union.rtunion_def* %arrayidx614 to i32*, !dbg !10841
  %322 = load i32, i32* %rt_int615, align 8, !dbg !10841
  %idxprom616 = sext i32 %322 to i64, !dbg !10841
  %arrayidx617 = getelementptr inbounds i32, i32* %320, i64 %idxprom616, !dbg !10841
  %323 = load i32, i32* %arrayidx617, align 4, !dbg !10841
  %call618 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %315, i64 %conv606, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.54, i64 0, i64 0), i32 %318, i32 %323), !dbg !10841
  %324 = load i8*, i8** %__s603, align 8, !dbg !10841
  call void @sel_prepare_string_for_dot_label(i8* %324), !dbg !10841
  %325 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10841
  %326 = load i8*, i8** %__s603, align 8, !dbg !10841
  %call619 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %325, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %326), !dbg !10841
  br label %do.end620, !dbg !10841

do.end620:                                        ; preds = %do.body587
  br label %if.end634, !dbg !10841

if.else621:                                       ; preds = %do.body584
  %327 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10835
  %328 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10835
  %u622 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %328, i32 0, i32 1, !dbg !10835
  %fld623 = bitcast %union.u* %u622 to [1 x %union.rtunion_def]*, !dbg !10835
  %arrayidx624 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld623, i64 0, i64 0, !dbg !10835
  %rt_int625 = bitcast %union.rtunion_def* %arrayidx624 to i32*, !dbg !10835
  %329 = load i32, i32* %rt_int625, align 8, !dbg !10835
  %330 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10835
  %ready_ticks626 = getelementptr inbounds %struct._fence, %struct._fence* %330, i32 0, i32 8, !dbg !10835
  %331 = load i32*, i32** %ready_ticks626, align 8, !dbg !10835
  %332 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10835
  %u627 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %332, i32 0, i32 1, !dbg !10835
  %fld628 = bitcast %union.u* %u627 to [1 x %union.rtunion_def]*, !dbg !10835
  %arrayidx629 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld628, i64 0, i64 0, !dbg !10835
  %rt_int630 = bitcast %union.rtunion_def* %arrayidx629 to i32*, !dbg !10835
  %333 = load i32, i32* %rt_int630, align 8, !dbg !10835
  %idxprom631 = sext i32 %333 to i64, !dbg !10835
  %arrayidx632 = getelementptr inbounds i32, i32* %331, i64 %idxprom631, !dbg !10835
  %334 = load i32, i32* %arrayidx632, align 4, !dbg !10835
  %call633 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %327, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.54, i64 0, i64 0), i32 %329, i32 %334), !dbg !10835
  br label %if.end634

if.end634:                                        ; preds = %if.else621, %do.end620
  br label %do.end635, !dbg !10838

do.end635:                                        ; preds = %if.end634
  br label %if.end636, !dbg !10838

if.end636:                                        ; preds = %do.end635, %cond.end578
  br label %for.inc673, !dbg !10843

if.end637:                                        ; preds = %if.end527
  %335 = load i32, i32* @sched_verbose, align 4, !dbg !10844
  %cmp638 = icmp sge i32 %335, 4, !dbg !10846
  br i1 %cmp638, label %if.then640, label %if.end672, !dbg !10847

if.then640:                                       ; preds = %if.end637
  br label %do.body641, !dbg !10848

do.body641:                                       ; preds = %if.then640
  %336 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10849
  %tobool642 = icmp ne i8 %336, 0, !dbg !10849
  br i1 %tobool642, label %if.then643, label %if.else664, !dbg !10852

if.then643:                                       ; preds = %do.body641
  br label %do.body644, !dbg !10849

do.body644:                                       ; preds = %if.then643
  call void @llvm.dbg.declare(metadata i32* %__j645, metadata !10853, metadata !DIExpression()), !dbg !10855
  %337 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10855
  %u646 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %337, i32 0, i32 1, !dbg !10855
  %fld647 = bitcast %union.u* %u646 to [1 x %union.rtunion_def]*, !dbg !10855
  %arrayidx648 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld647, i64 0, i64 0, !dbg !10855
  %rt_int649 = bitcast %union.rtunion_def* %arrayidx648 to i32*, !dbg !10855
  %338 = load i32, i32* %rt_int649, align 8, !dbg !10855
  %call650 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i32 %338), !dbg !10855
  %mul651 = mul nsw i32 2, %call650, !dbg !10855
  %add652 = add nsw i32 1, %mul651, !dbg !10855
  store i32 %add652, i32* %__j645, align 4, !dbg !10855
  call void @llvm.dbg.declare(metadata i8** %__s653, metadata !10856, metadata !DIExpression()), !dbg !10855
  %339 = load i32, i32* %__j645, align 4, !dbg !10855
  %conv654 = sext i32 %339 to i64, !dbg !10855
  %mul655 = mul i64 1, %conv654, !dbg !10855
  %340 = alloca i8, i64 %mul655, align 16, !dbg !10855
  store i8* %340, i8** %__s653, align 8, !dbg !10855
  %341 = load i8*, i8** %__s653, align 8, !dbg !10855
  %342 = load i32, i32* %__j645, align 4, !dbg !10855
  %conv656 = sext i32 %342 to i64, !dbg !10855
  %343 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10855
  %u657 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %343, i32 0, i32 1, !dbg !10855
  %fld658 = bitcast %union.u* %u657 to [1 x %union.rtunion_def]*, !dbg !10855
  %arrayidx659 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld658, i64 0, i64 0, !dbg !10855
  %rt_int660 = bitcast %union.rtunion_def* %arrayidx659 to i32*, !dbg !10855
  %344 = load i32, i32* %rt_int660, align 8, !dbg !10855
  %call661 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %341, i64 %conv656, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i32 %344), !dbg !10855
  %345 = load i8*, i8** %__s653, align 8, !dbg !10855
  call void @sel_prepare_string_for_dot_label(i8* %345), !dbg !10855
  %346 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10855
  %347 = load i8*, i8** %__s653, align 8, !dbg !10855
  %call662 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %346, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %347), !dbg !10855
  br label %do.end663, !dbg !10855

do.end663:                                        ; preds = %do.body644
  br label %if.end670, !dbg !10855

if.else664:                                       ; preds = %do.body641
  %348 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10849
  %349 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10849
  %u665 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %349, i32 0, i32 1, !dbg !10849
  %fld666 = bitcast %union.u* %u665 to [1 x %union.rtunion_def]*, !dbg !10849
  %arrayidx667 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld666, i64 0, i64 0, !dbg !10849
  %rt_int668 = bitcast %union.rtunion_def* %arrayidx667 to i32*, !dbg !10849
  %350 = load i32, i32* %rt_int668, align 8, !dbg !10849
  %call669 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %348, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i32 %350), !dbg !10849
  br label %if.end670

if.end670:                                        ; preds = %if.else664, %do.end663
  br label %do.end671, !dbg !10852

do.end671:                                        ; preds = %if.end670
  br label %if.end672, !dbg !10852

if.end672:                                        ; preds = %do.end671, %if.end637
  store i32 0, i32* %min_need_stall, align 4, !dbg !10857
  br label %for.inc673, !dbg !10858

for.inc673:                                       ; preds = %if.end672, %if.end636, %if.end509, %if.end388, %if.end324, %if.end272, %if.end211, %if.end132, %cond.end85
  %351 = load i32, i32* %n, align 4, !dbg !10859
  %dec = add nsw i32 %351, -1, !dbg !10859
  store i32 %dec, i32* %n, align 4, !dbg !10859
  br label %for.cond64, !dbg !10860, !llvm.loop !10861

for.end674:                                       ; preds = %for.cond64
  %352 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10863
  %sched_next675 = getelementptr inbounds %struct._fence, %struct._fence* %352, i32 0, i32 12, !dbg !10863
  %353 = load %struct.rtx_def*, %struct.rtx_def** %sched_next675, align 8, !dbg !10863
  %tobool676 = icmp ne %struct.rtx_def* %353, null, !dbg !10863
  br i1 %tobool676, label %if.then677, label %if.end685, !dbg !10865

if.then677:                                       ; preds = %for.end674
  %354 = load i32, i32* %sched_next_worked, align 4, !dbg !10866
  %cmp678 = icmp eq i32 %354, 1, !dbg !10866
  br i1 %cmp678, label %cond.false681, label %cond.true680, !dbg !10866

cond.true680:                                     ; preds = %if.then677
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3923, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10866
  br label %cond.end682, !dbg !10866

cond.false681:                                    ; preds = %if.then677
  br label %cond.end682, !dbg !10866

cond.end682:                                      ; preds = %cond.false681, %cond.true680
  %cond683 = phi i32 [ 0, %cond.true680 ], [ 0, %cond.false681 ], !dbg !10866
  %355 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !10868
  %sched_next684 = getelementptr inbounds %struct._fence, %struct._fence* %355, i32 0, i32 12, !dbg !10868
  store %struct.rtx_def* null, %struct.rtx_def** %sched_next684, align 8, !dbg !10869
  br label %if.end685, !dbg !10870

if.end685:                                        ; preds = %cond.end682, %for.end674
  %356 = load i32, i32* %min_need_stall, align 4, !dbg !10871
  %cmp686 = icmp slt i32 %356, 0, !dbg !10873
  br i1 %cmp686, label %if.then688, label %if.end689, !dbg !10874

if.then688:                                       ; preds = %if.end685
  store i32 0, i32* %min_need_stall, align 4, !dbg !10875
  br label %if.end689, !dbg !10876

if.end689:                                        ; preds = %if.then688, %if.end685
  %357 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10877
  %tobool690 = icmp ne %struct.VEC_expr_t_heap* %357, null, !dbg !10877
  br i1 %tobool690, label %cond.true691, label %cond.false693, !dbg !10877

cond.true691:                                     ; preds = %if.end689
  %358 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10877
  %base692 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %358, i32 0, i32 0, !dbg !10877
  br label %cond.end694, !dbg !10877

cond.false693:                                    ; preds = %if.end689
  br label %cond.end694, !dbg !10877

cond.end694:                                      ; preds = %cond.false693, %cond.true691
  %cond695 = phi %struct.VEC_expr_t_base* [ %base692, %cond.true691 ], [ null, %cond.false693 ], !dbg !10877
  %call696 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond695), !dbg !10877
  %cmp697 = icmp eq i32 %call696, 0, !dbg !10877
  br i1 %cmp697, label %if.then699, label %if.else700, !dbg !10879

if.then699:                                       ; preds = %cond.end694
  %359 = load i32, i32* %min_need_stall, align 4, !dbg !10880
  %360 = load i32*, i32** %pneed_stall.addr, align 8, !dbg !10882
  store i32 %359, i32* %360, align 4, !dbg !10883
  store i8 0, i8* %retval, align 1, !dbg !10884
  br label %return, !dbg !10884

if.else700:                                       ; preds = %cond.end694
  %361 = load i32, i32* %min_need_stall, align 4, !dbg !10885
  %cmp701 = icmp eq i32 %361, 0, !dbg !10885
  br i1 %cmp701, label %cond.false704, label %cond.true703, !dbg !10885

cond.true703:                                     ; preds = %if.else700
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3939, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10885
  br label %cond.end705, !dbg !10885

cond.false704:                                    ; preds = %if.else700
  br label %cond.end705, !dbg !10885

cond.end705:                                      ; preds = %cond.false704, %cond.true703
  %cond706 = phi i32 [ 0, %cond.true703 ], [ 0, %cond.false704 ], !dbg !10885
  br label %if.end707

if.end707:                                        ; preds = %cond.end705
  %362 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10886
  %tobool708 = icmp ne %struct.VEC_expr_t_heap* %362, null, !dbg !10886
  br i1 %tobool708, label %cond.true709, label %cond.false711, !dbg !10886

cond.true709:                                     ; preds = %if.end707
  %363 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10886
  %base710 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %363, i32 0, i32 0, !dbg !10886
  br label %cond.end712, !dbg !10886

cond.false711:                                    ; preds = %if.end707
  br label %cond.end712, !dbg !10886

cond.end712:                                      ; preds = %cond.false711, %cond.true709
  %cond713 = phi %struct.VEC_expr_t_base* [ %base710, %cond.true709 ], [ null, %cond.false711 ], !dbg !10886
  %call714 = call %struct._expr** @VEC_expr_t_base_address(%struct.VEC_expr_t_base* %cond713), !dbg !10886
  %364 = bitcast %struct._expr** %call714 to i8*, !dbg !10886
  %365 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10887
  %tobool715 = icmp ne %struct.VEC_expr_t_heap* %365, null, !dbg !10887
  br i1 %tobool715, label %cond.true716, label %cond.false718, !dbg !10887

cond.true716:                                     ; preds = %cond.end712
  %366 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10887
  %base717 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %366, i32 0, i32 0, !dbg !10887
  br label %cond.end719, !dbg !10887

cond.false718:                                    ; preds = %cond.end712
  br label %cond.end719, !dbg !10887

cond.end719:                                      ; preds = %cond.false718, %cond.true716
  %cond720 = phi %struct.VEC_expr_t_base* [ %base717, %cond.true716 ], [ null, %cond.false718 ], !dbg !10887
  %call721 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond720), !dbg !10887
  %conv722 = zext i32 %call721 to i64, !dbg !10887
  call void @spec_qsort(i8* %364, i64 %conv722, i64 8, i32 (i8*, i8*)* @sel_rank_for_schedule), !dbg !10888
  %367 = load i32, i32* @sched_verbose, align 4, !dbg !10889
  %cmp723 = icmp sge i32 %367, 4, !dbg !10891
  br i1 %cmp723, label %if.then725, label %if.end838, !dbg !10892

if.then725:                                       ; preds = %cond.end719
  br label %do.body726, !dbg !10893

do.body726:                                       ; preds = %if.then725
  %368 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10895
  %tobool727 = icmp ne i8 %368, 0, !dbg !10895
  br i1 %tobool727, label %if.then728, label %if.else755, !dbg !10898

if.then728:                                       ; preds = %do.body726
  br label %do.body729, !dbg !10895

do.body729:                                       ; preds = %if.then728
  call void @llvm.dbg.declare(metadata i32* %__j730, metadata !10899, metadata !DIExpression()), !dbg !10901
  %369 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10901
  %tobool731 = icmp ne %struct.VEC_expr_t_heap* %369, null, !dbg !10901
  br i1 %tobool731, label %cond.true732, label %cond.false734, !dbg !10901

cond.true732:                                     ; preds = %do.body729
  %370 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10901
  %base733 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %370, i32 0, i32 0, !dbg !10901
  br label %cond.end735, !dbg !10901

cond.false734:                                    ; preds = %do.body729
  br label %cond.end735, !dbg !10901

cond.end735:                                      ; preds = %cond.false734, %cond.true732
  %cond736 = phi %struct.VEC_expr_t_base* [ %base733, %cond.true732 ], [ null, %cond.false734 ], !dbg !10901
  %call737 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond736), !dbg !10901
  %371 = load i32, i32* %stalled, align 4, !dbg !10901
  %call738 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.56, i64 0, i64 0), i32 %call737, i32 %371), !dbg !10901
  %mul739 = mul nsw i32 2, %call738, !dbg !10901
  %add740 = add nsw i32 1, %mul739, !dbg !10901
  store i32 %add740, i32* %__j730, align 4, !dbg !10901
  call void @llvm.dbg.declare(metadata i8** %__s741, metadata !10902, metadata !DIExpression()), !dbg !10901
  %372 = load i32, i32* %__j730, align 4, !dbg !10901
  %conv742 = sext i32 %372 to i64, !dbg !10901
  %mul743 = mul i64 1, %conv742, !dbg !10901
  %373 = alloca i8, i64 %mul743, align 16, !dbg !10901
  store i8* %373, i8** %__s741, align 8, !dbg !10901
  %374 = load i8*, i8** %__s741, align 8, !dbg !10901
  %375 = load i32, i32* %__j730, align 4, !dbg !10901
  %conv744 = sext i32 %375 to i64, !dbg !10901
  %376 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10901
  %tobool745 = icmp ne %struct.VEC_expr_t_heap* %376, null, !dbg !10901
  br i1 %tobool745, label %cond.true746, label %cond.false748, !dbg !10901

cond.true746:                                     ; preds = %cond.end735
  %377 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10901
  %base747 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %377, i32 0, i32 0, !dbg !10901
  br label %cond.end749, !dbg !10901

cond.false748:                                    ; preds = %cond.end735
  br label %cond.end749, !dbg !10901

cond.end749:                                      ; preds = %cond.false748, %cond.true746
  %cond750 = phi %struct.VEC_expr_t_base* [ %base747, %cond.true746 ], [ null, %cond.false748 ], !dbg !10901
  %call751 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond750), !dbg !10901
  %378 = load i32, i32* %stalled, align 4, !dbg !10901
  %call752 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %374, i64 %conv744, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.56, i64 0, i64 0), i32 %call751, i32 %378), !dbg !10901
  %379 = load i8*, i8** %__s741, align 8, !dbg !10901
  call void @sel_prepare_string_for_dot_label(i8* %379), !dbg !10901
  %380 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10901
  %381 = load i8*, i8** %__s741, align 8, !dbg !10901
  %call753 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %380, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %381), !dbg !10901
  br label %do.end754, !dbg !10901

do.end754:                                        ; preds = %cond.end749
  br label %if.end764, !dbg !10901

if.else755:                                       ; preds = %do.body726
  %382 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10895
  %383 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10895
  %tobool756 = icmp ne %struct.VEC_expr_t_heap* %383, null, !dbg !10895
  br i1 %tobool756, label %cond.true757, label %cond.false759, !dbg !10895

cond.true757:                                     ; preds = %if.else755
  %384 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10895
  %base758 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %384, i32 0, i32 0, !dbg !10895
  br label %cond.end760, !dbg !10895

cond.false759:                                    ; preds = %if.else755
  br label %cond.end760, !dbg !10895

cond.end760:                                      ; preds = %cond.false759, %cond.true757
  %cond761 = phi %struct.VEC_expr_t_base* [ %base758, %cond.true757 ], [ null, %cond.false759 ], !dbg !10895
  %call762 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond761), !dbg !10895
  %385 = load i32, i32* %stalled, align 4, !dbg !10895
  %call763 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %382, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.56, i64 0, i64 0), i32 %call762, i32 %385), !dbg !10895
  br label %if.end764

if.end764:                                        ; preds = %cond.end760, %do.end754
  br label %do.end765, !dbg !10898

do.end765:                                        ; preds = %if.end764
  br label %do.body766, !dbg !10903

do.body766:                                       ; preds = %do.end765
  %386 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10904
  %tobool767 = icmp ne i8 %386, 0, !dbg !10904
  br i1 %tobool767, label %if.then768, label %if.else795, !dbg !10907

if.then768:                                       ; preds = %do.body766
  br label %do.body769, !dbg !10904

do.body769:                                       ; preds = %if.then768
  call void @llvm.dbg.declare(metadata i32* %__j770, metadata !10908, metadata !DIExpression()), !dbg !10910
  %387 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10910
  %tobool771 = icmp ne %struct.VEC_expr_t_heap* %387, null, !dbg !10910
  br i1 %tobool771, label %cond.true772, label %cond.false774, !dbg !10910

cond.true772:                                     ; preds = %do.body769
  %388 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10910
  %base773 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %388, i32 0, i32 0, !dbg !10910
  br label %cond.end775, !dbg !10910

cond.false774:                                    ; preds = %do.body769
  br label %cond.end775, !dbg !10910

cond.end775:                                      ; preds = %cond.false774, %cond.true772
  %cond776 = phi %struct.VEC_expr_t_base* [ %base773, %cond.true772 ], [ null, %cond.false774 ], !dbg !10910
  %call777 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond776), !dbg !10910
  %call778 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0), i32 %call777), !dbg !10910
  %mul779 = mul nsw i32 2, %call778, !dbg !10910
  %add780 = add nsw i32 1, %mul779, !dbg !10910
  store i32 %add780, i32* %__j770, align 4, !dbg !10910
  call void @llvm.dbg.declare(metadata i8** %__s781, metadata !10911, metadata !DIExpression()), !dbg !10910
  %389 = load i32, i32* %__j770, align 4, !dbg !10910
  %conv782 = sext i32 %389 to i64, !dbg !10910
  %mul783 = mul i64 1, %conv782, !dbg !10910
  %390 = alloca i8, i64 %mul783, align 16, !dbg !10910
  store i8* %390, i8** %__s781, align 8, !dbg !10910
  %391 = load i8*, i8** %__s781, align 8, !dbg !10910
  %392 = load i32, i32* %__j770, align 4, !dbg !10910
  %conv784 = sext i32 %392 to i64, !dbg !10910
  %393 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10910
  %tobool785 = icmp ne %struct.VEC_expr_t_heap* %393, null, !dbg !10910
  br i1 %tobool785, label %cond.true786, label %cond.false788, !dbg !10910

cond.true786:                                     ; preds = %cond.end775
  %394 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10910
  %base787 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %394, i32 0, i32 0, !dbg !10910
  br label %cond.end789, !dbg !10910

cond.false788:                                    ; preds = %cond.end775
  br label %cond.end789, !dbg !10910

cond.end789:                                      ; preds = %cond.false788, %cond.true786
  %cond790 = phi %struct.VEC_expr_t_base* [ %base787, %cond.true786 ], [ null, %cond.false788 ], !dbg !10910
  %call791 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond790), !dbg !10910
  %call792 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %391, i64 %conv784, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0), i32 %call791), !dbg !10910
  %395 = load i8*, i8** %__s781, align 8, !dbg !10910
  call void @sel_prepare_string_for_dot_label(i8* %395), !dbg !10910
  %396 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10910
  %397 = load i8*, i8** %__s781, align 8, !dbg !10910
  %call793 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %396, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %397), !dbg !10910
  br label %do.end794, !dbg !10910

do.end794:                                        ; preds = %cond.end789
  br label %if.end804, !dbg !10910

if.else795:                                       ; preds = %do.body766
  %398 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10904
  %399 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10904
  %tobool796 = icmp ne %struct.VEC_expr_t_heap* %399, null, !dbg !10904
  br i1 %tobool796, label %cond.true797, label %cond.false799, !dbg !10904

cond.true797:                                     ; preds = %if.else795
  %400 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10904
  %base798 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %400, i32 0, i32 0, !dbg !10904
  br label %cond.end800, !dbg !10904

cond.false799:                                    ; preds = %if.else795
  br label %cond.end800, !dbg !10904

cond.end800:                                      ; preds = %cond.false799, %cond.true797
  %cond801 = phi %struct.VEC_expr_t_base* [ %base798, %cond.true797 ], [ null, %cond.false799 ], !dbg !10904
  %call802 = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond801), !dbg !10904
  %call803 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %398, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0), i32 %call802), !dbg !10904
  br label %if.end804

if.end804:                                        ; preds = %cond.end800, %do.end794
  br label %do.end805, !dbg !10907

do.end805:                                        ; preds = %if.end804
  store i32 0, i32* %n, align 4, !dbg !10912
  br label %for.cond806, !dbg !10914

for.cond806:                                      ; preds = %for.inc816, %do.end805
  %401 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10915
  %tobool807 = icmp ne %struct.VEC_expr_t_heap* %401, null, !dbg !10915
  br i1 %tobool807, label %cond.true808, label %cond.false810, !dbg !10915

cond.true808:                                     ; preds = %for.cond806
  %402 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10915
  %base809 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %402, i32 0, i32 0, !dbg !10915
  br label %cond.end811, !dbg !10915

cond.false810:                                    ; preds = %for.cond806
  br label %cond.end811, !dbg !10915

cond.end811:                                      ; preds = %cond.false810, %cond.true808
  %cond812 = phi %struct.VEC_expr_t_base* [ %base809, %cond.true808 ], [ null, %cond.false810 ], !dbg !10915
  %403 = load i32, i32* %n, align 4, !dbg !10915
  %call813 = call i32 @VEC_expr_t_base_iterate(%struct.VEC_expr_t_base* %cond812, i32 %403, %struct._expr** %expr), !dbg !10915
  %tobool814 = icmp ne i32 %call813, 0, !dbg !10917
  br i1 %tobool814, label %for.body815, label %for.end818, !dbg !10917

for.body815:                                      ; preds = %cond.end811
  %404 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10918
  call void @dump_expr(%struct._expr* %404), !dbg !10919
  br label %for.inc816, !dbg !10919

for.inc816:                                       ; preds = %for.body815
  %405 = load i32, i32* %n, align 4, !dbg !10920
  %inc817 = add nsw i32 %405, 1, !dbg !10920
  store i32 %inc817, i32* %n, align 4, !dbg !10920
  br label %for.cond806, !dbg !10921, !llvm.loop !10922

for.end818:                                       ; preds = %cond.end811
  br label %do.body819, !dbg !10924

do.body819:                                       ; preds = %for.end818
  %406 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !10925
  %tobool820 = icmp ne i8 %406, 0, !dbg !10925
  br i1 %tobool820, label %if.then821, label %if.else834, !dbg !10928

if.then821:                                       ; preds = %do.body819
  br label %do.body822, !dbg !10925

do.body822:                                       ; preds = %if.then821
  call void @llvm.dbg.declare(metadata i32* %__j823, metadata !10929, metadata !DIExpression()), !dbg !10931
  %call824 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !10931
  %mul825 = mul nsw i32 2, %call824, !dbg !10931
  %add826 = add nsw i32 1, %mul825, !dbg !10931
  store i32 %add826, i32* %__j823, align 4, !dbg !10931
  call void @llvm.dbg.declare(metadata i8** %__s827, metadata !10932, metadata !DIExpression()), !dbg !10931
  %407 = load i32, i32* %__j823, align 4, !dbg !10931
  %conv828 = sext i32 %407 to i64, !dbg !10931
  %mul829 = mul i64 1, %conv828, !dbg !10931
  %408 = alloca i8, i64 %mul829, align 16, !dbg !10931
  store i8* %408, i8** %__s827, align 8, !dbg !10931
  %409 = load i8*, i8** %__s827, align 8, !dbg !10931
  %410 = load i32, i32* %__j823, align 4, !dbg !10931
  %conv830 = sext i32 %410 to i64, !dbg !10931
  %call831 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %409, i64 %conv830, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !10931
  %411 = load i8*, i8** %__s827, align 8, !dbg !10931
  call void @sel_prepare_string_for_dot_label(i8* %411), !dbg !10931
  %412 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10931
  %413 = load i8*, i8** %__s827, align 8, !dbg !10931
  %call832 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %412, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %413), !dbg !10931
  br label %do.end833, !dbg !10931

do.end833:                                        ; preds = %do.body822
  br label %if.end836, !dbg !10931

if.else834:                                       ; preds = %do.body819
  %414 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !10925
  %call835 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %414, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !10925
  br label %if.end836

if.end836:                                        ; preds = %if.else834, %do.end833
  br label %do.end837, !dbg !10928

do.end837:                                        ; preds = %if.end836
  br label %if.end838, !dbg !10933

if.end838:                                        ; preds = %do.end837, %cond.end719
  %415 = load i32*, i32** %pneed_stall.addr, align 8, !dbg !10934
  store i32 0, i32* %415, align 4, !dbg !10935
  store i8 1, i8* %retval, align 1, !dbg !10936
  br label %return, !dbg !10936

return:                                           ; preds = %if.end838, %if.then699, %if.then
  %416 = load i8, i8* %retval, align 1, !dbg !10937
  ret i8 %416, !dbg !10937
}

; Function Attrs: noinline nounwind uwtable
define internal void @convert_vec_av_set_to_ready() #0 !dbg !10938 {
entry:
  %n = alloca i32, align 4
  %expr = alloca %struct._expr*, align 8
  %vi = alloca %struct.vinsn_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10939, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !10941, metadata !DIExpression()), !dbg !10942
  %0 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10943
  %tobool = icmp ne %struct.VEC_expr_t_heap* %0, null, !dbg !10943
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10943

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10943
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %1, i32 0, i32 0, !dbg !10943
  br label %cond.end, !dbg !10943

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10943

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_expr_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !10943
  %call = call i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %cond), !dbg !10943
  store i32 %call, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !10944
  %2 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !10945
  %sub = sub nsw i32 %2, 1, !dbg !10946
  store i32 %sub, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 2), align 4, !dbg !10947
  %3 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !10948
  %cmp = icmp sgt i32 %3, 0, !dbg !10948
  br i1 %cmp, label %cond.false2, label %cond.true1, !dbg !10948

cond.true1:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3976, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10948
  br label %cond.end3, !dbg !10948

cond.false2:                                      ; preds = %cond.end
  br label %cond.end3, !dbg !10948

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond4 = phi i32 [ 0, %cond.true1 ], [ 0, %cond.false2 ], !dbg !10948
  %4 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !10949
  %5 = load i32, i32* @max_issue_size, align 4, !dbg !10951
  %cmp5 = icmp sgt i32 %4, %5, !dbg !10952
  br i1 %cmp5, label %if.then, label %if.end, !dbg !10953

if.then:                                          ; preds = %cond.end3
  %6 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !10954
  store i32 %6, i32* @max_issue_size, align 4, !dbg !10956
  %7 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 3), align 8, !dbg !10957
  call void @sched_extend_ready_list(i32 %7), !dbg !10958
  br label %if.end, !dbg !10959

if.end:                                           ; preds = %if.then, %cond.end3
  store i32 0, i32* %n, align 4, !dbg !10960
  br label %for.cond, !dbg !10962

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10963
  %tobool6 = icmp ne %struct.VEC_expr_t_heap* %8, null, !dbg !10963
  br i1 %tobool6, label %cond.true7, label %cond.false9, !dbg !10963

cond.true7:                                       ; preds = %for.cond
  %9 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** @vec_av_set, align 8, !dbg !10963
  %base8 = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %9, i32 0, i32 0, !dbg !10963
  br label %cond.end10, !dbg !10963

cond.false9:                                      ; preds = %for.cond
  br label %cond.end10, !dbg !10963

cond.end10:                                       ; preds = %cond.false9, %cond.true7
  %cond11 = phi %struct.VEC_expr_t_base* [ %base8, %cond.true7 ], [ null, %cond.false9 ], !dbg !10963
  %10 = load i32, i32* %n, align 4, !dbg !10963
  %call12 = call i32 @VEC_expr_t_base_iterate(%struct.VEC_expr_t_base* %cond11, i32 %10, %struct._expr** %expr), !dbg !10963
  %tobool13 = icmp ne i32 %call12, 0, !dbg !10965
  br i1 %tobool13, label %for.body, label %for.end, !dbg !10965

for.body:                                         ; preds = %cond.end10
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vi, metadata !10966, metadata !DIExpression()), !dbg !10968
  %11 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !10969
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 0, !dbg !10969
  %12 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !10969
  store %struct.vinsn_def* %12, %struct.vinsn_def** %vi, align 8, !dbg !10968
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !10970, metadata !DIExpression()), !dbg !10971
  %13 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !10972
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %13, i32 0, i32 0, !dbg !10972
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !10972
  store %struct.rtx_def* %14, %struct.rtx_def** %insn, align 8, !dbg !10971
  %15 = load i8*, i8** @ready_try, align 8, !dbg !10973
  %16 = load i32, i32* %n, align 4, !dbg !10974
  %idxprom = sext i32 %16 to i64, !dbg !10973
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 %idxprom, !dbg !10973
  store i8 0, i8* %arrayidx, align 1, !dbg !10975
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10976
  %18 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i32 0, i32 0), align 8, !dbg !10977
  %19 = load i32, i32* %n, align 4, !dbg !10978
  %idxprom14 = sext i32 %19 to i64, !dbg !10979
  %arrayidx15 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %18, i64 %idxprom14, !dbg !10979
  store %struct.rtx_def* %17, %struct.rtx_def** %arrayidx15, align 8, !dbg !10980
  br label %for.inc, !dbg !10981

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %n, align 4, !dbg !10982
  %inc = add nsw i32 %20, 1, !dbg !10982
  store i32 %inc, i32* %n, align 4, !dbg !10982
  br label %for.cond, !dbg !10983, !llvm.loop !10984

for.end:                                          ; preds = %cond.end10
  ret void, !dbg !10986
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @recog_memoized(%struct.rtx_def* %insn) #0 !dbg !10987 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !10990, metadata !DIExpression()), !dbg !10991
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !10992
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !10992
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10992
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 6, !dbg !10992
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10992
  %1 = load i32, i32* %rt_int, align 8, !dbg !10992
  %cmp = icmp slt i32 %1, 0, !dbg !10994
  br i1 %cmp, label %if.then, label %if.end, !dbg !10995

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !10996
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !10996
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !10996
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 5, !dbg !10996
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !10996
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10996
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !10997
  %call = call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %4, i32* null), !dbg !10998
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !10999
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !10999
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !10999
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 6, !dbg !10999
  %rt_int7 = bitcast %union.rtunion_def* %arrayidx6 to i32*, !dbg !10999
  store i32 %call, i32* %rt_int7, align 8, !dbg !11000
  br label %if.end, !dbg !10999

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !11001
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !11001
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !11001
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 6, !dbg !11001
  %rt_int11 = bitcast %union.rtunion_def* %arrayidx10 to i32*, !dbg !11001
  %7 = load i32, i32* %rt_int11, align 8, !dbg !11001
  ret i32 %7, !dbg !11002
}

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_expr_t_base_length(%struct.VEC_expr_t_base* %vec_) #0 !dbg !11003 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_t_base*, align 8
  store %struct.VEC_expr_t_base* %vec_, %struct.VEC_expr_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_base** %vec_.addr, metadata !11008, metadata !DIExpression()), !dbg !11009
  %0 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11009
  %tobool = icmp ne %struct.VEC_expr_t_base* %0, null, !dbg !11009
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11009

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11009
  %num = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %1, i32 0, i32 0, !dbg !11009
  %2 = load i32, i32* %num, align 8, !dbg !11009
  br label %cond.end, !dbg !11009

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11009

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !11009
  ret i32 %cond, !dbg !11009
}

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_expr_t_base_block_remove(%struct.VEC_expr_t_base* %vec_, i32 %ix_, i32 %len_) #0 !dbg !11010 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_t_base*, align 8
  %ix_.addr = alloca i32, align 4
  %len_.addr = alloca i32, align 4
  %slot_ = alloca %struct._expr**, align 8
  store %struct.VEC_expr_t_base* %vec_, %struct.VEC_expr_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_base** %vec_.addr, metadata !11014, metadata !DIExpression()), !dbg !11015
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !11016, metadata !DIExpression()), !dbg !11015
  store i32 %len_, i32* %len_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len_.addr, metadata !11017, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.declare(metadata %struct._expr*** %slot_, metadata !11018, metadata !DIExpression()), !dbg !11015
  %0 = load i32, i32* %ix_.addr, align 4, !dbg !11015
  %1 = load i32, i32* %len_.addr, align 4, !dbg !11015
  %add = add i32 %0, %1, !dbg !11015
  %2 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11015
  %num = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %2, i32 0, i32 0, !dbg !11015
  %3 = load i32, i32* %num, align 8, !dbg !11015
  %cmp = icmp ule i32 %add, %3, !dbg !11015
  %conv = zext i1 %cmp to i32, !dbg !11015
  %4 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11015
  %vec = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %4, i32 0, i32 2, !dbg !11015
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !11015
  %idxprom = zext i32 %5 to i64, !dbg !11015
  %arrayidx = getelementptr inbounds [1 x %struct._expr*], [1 x %struct._expr*]* %vec, i64 0, i64 %idxprom, !dbg !11015
  store %struct._expr** %arrayidx, %struct._expr*** %slot_, align 8, !dbg !11015
  %6 = load i32, i32* %len_.addr, align 4, !dbg !11015
  %7 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11015
  %num1 = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %7, i32 0, i32 0, !dbg !11015
  %8 = load i32, i32* %num1, align 8, !dbg !11015
  %sub = sub i32 %8, %6, !dbg !11015
  store i32 %sub, i32* %num1, align 8, !dbg !11015
  %9 = load %struct._expr**, %struct._expr*** %slot_, align 8, !dbg !11015
  %10 = bitcast %struct._expr** %9 to i8*, !dbg !11015
  %11 = load %struct._expr**, %struct._expr*** %slot_, align 8, !dbg !11015
  %12 = load i32, i32* %len_.addr, align 4, !dbg !11015
  %idx.ext = zext i32 %12 to i64, !dbg !11015
  %add.ptr = getelementptr inbounds %struct._expr*, %struct._expr** %11, i64 %idx.ext, !dbg !11015
  %13 = bitcast %struct._expr** %add.ptr to i8*, !dbg !11015
  %14 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11015
  %num2 = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %14, i32 0, i32 0, !dbg !11015
  %15 = load i32, i32* %num2, align 8, !dbg !11015
  %16 = load i32, i32* %ix_.addr, align 4, !dbg !11015
  %sub3 = sub i32 %15, %16, !dbg !11015
  %conv4 = zext i32 %sub3 to i64, !dbg !11015
  %mul = mul i64 %conv4, 8, !dbg !11015
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %13, i64 %mul, i1 false), !dbg !11015
  ret void, !dbg !11015
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._expr** @VEC_expr_t_heap_safe_push(%struct.VEC_expr_t_heap** %vec_, %struct._expr* %obj_) #0 !dbg !11019 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_t_heap**, align 8
  %obj_.addr = alloca %struct._expr*, align 8
  store %struct.VEC_expr_t_heap** %vec_, %struct.VEC_expr_t_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_heap*** %vec_.addr, metadata !11023, metadata !DIExpression()), !dbg !11024
  store %struct._expr* %obj_, %struct._expr** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %obj_.addr, metadata !11025, metadata !DIExpression()), !dbg !11024
  %0 = load %struct.VEC_expr_t_heap**, %struct.VEC_expr_t_heap*** %vec_.addr, align 8, !dbg !11024
  %call = call i32 @VEC_expr_t_heap_reserve(%struct.VEC_expr_t_heap** %0, i32 1), !dbg !11024
  %1 = load %struct.VEC_expr_t_heap**, %struct.VEC_expr_t_heap*** %vec_.addr, align 8, !dbg !11024
  %2 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** %1, align 8, !dbg !11024
  %tobool = icmp ne %struct.VEC_expr_t_heap* %2, null, !dbg !11024
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11024

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_expr_t_heap**, %struct.VEC_expr_t_heap*** %vec_.addr, align 8, !dbg !11024
  %4 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** %3, align 8, !dbg !11024
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %4, i32 0, i32 0, !dbg !11024
  br label %cond.end, !dbg !11024

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11024

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_expr_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !11024
  %5 = load %struct._expr*, %struct._expr** %obj_.addr, align 8, !dbg !11024
  %call1 = call %struct._expr** @VEC_expr_t_base_quick_push(%struct.VEC_expr_t_base* %cond, %struct._expr* %5), !dbg !11024
  ret %struct._expr** %call1, !dbg !11024
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sel_target_adjust_priority(%struct._expr* %expr) #0 !dbg !11026 {
entry:
  %expr.addr = alloca %struct._expr*, align 8
  %priority = alloca i32, align 4
  %new_priority = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !11029, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.declare(metadata i32* %priority, metadata !11031, metadata !DIExpression()), !dbg !11032
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11033
  %priority1 = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 3, !dbg !11033
  %1 = load i32, i32* %priority1, align 8, !dbg !11033
  store i32 %1, i32* %priority, align 4, !dbg !11032
  call void @llvm.dbg.declare(metadata i32* %new_priority, metadata !11034, metadata !DIExpression()), !dbg !11035
  %2 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 1), align 8, !dbg !11036
  %tobool = icmp ne i32 (%struct.rtx_def*, i32)* %2, null, !dbg !11038
  br i1 %tobool, label %if.then, label %if.else, !dbg !11039

if.then:                                          ; preds = %entry
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 1), align 8, !dbg !11040
  %4 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11041
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i32 0, i32 0, !dbg !11041
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11041
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i32 0, i32 0, !dbg !11041
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !11041
  %7 = load i32, i32* %priority, align 4, !dbg !11042
  %call = call i32 %3(%struct.rtx_def* %6, i32 %7), !dbg !11043
  store i32 %call, i32* %new_priority, align 4, !dbg !11044
  br label %if.end, !dbg !11045

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %priority, align 4, !dbg !11046
  store i32 %8, i32* %new_priority, align 4, !dbg !11047
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %new_priority, align 4, !dbg !11048
  %10 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11049
  %priority2 = getelementptr inbounds %struct._expr, %struct._expr* %10, i32 0, i32 3, !dbg !11049
  %11 = load i32, i32* %priority2, align 8, !dbg !11049
  %sub = sub nsw i32 %9, %11, !dbg !11050
  %12 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11051
  %priority_adj = getelementptr inbounds %struct._expr, %struct._expr* %12, i32 0, i32 4, !dbg !11051
  store i32 %sub, i32* %priority_adj, align 4, !dbg !11052
  %13 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11053
  %priority_adj3 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 4, !dbg !11053
  %14 = load i32, i32* %priority_adj3, align 4, !dbg !11053
  %cmp = icmp sge i32 %14, 0, !dbg !11053
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !11053

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3308, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11053
  br label %cond.end, !dbg !11053

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !11053

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11053
  %15 = load i32, i32* @sched_verbose, align 4, !dbg !11054
  %cmp4 = icmp sge i32 %15, 4, !dbg !11056
  br i1 %cmp4, label %if.then5, label %if.end38, !dbg !11057

if.then5:                                         ; preds = %cond.end
  br label %do.body, !dbg !11058

do.body:                                          ; preds = %if.then5
  %16 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !11059
  %tobool6 = icmp ne i8 %16, 0, !dbg !11059
  br i1 %tobool6, label %if.then7, label %if.else26, !dbg !11062

if.then7:                                         ; preds = %do.body
  br label %do.body8, !dbg !11059

do.body8:                                         ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !11063, metadata !DIExpression()), !dbg !11065
  %17 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11065
  %vinsn9 = getelementptr inbounds %struct._expr, %struct._expr* %17, i32 0, i32 0, !dbg !11065
  %18 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn9, align 8, !dbg !11065
  %insn_rtx10 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %18, i32 0, i32 0, !dbg !11065
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx10, align 8, !dbg !11065
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !11065
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11065
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !11065
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11065
  %20 = load i32, i32* %rt_int, align 8, !dbg !11065
  %21 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11065
  %priority11 = getelementptr inbounds %struct._expr, %struct._expr* %21, i32 0, i32 3, !dbg !11065
  %22 = load i32, i32* %priority11, align 8, !dbg !11065
  %23 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11065
  %priority_adj12 = getelementptr inbounds %struct._expr, %struct._expr* %23, i32 0, i32 4, !dbg !11065
  %24 = load i32, i32* %priority_adj12, align 4, !dbg !11065
  %25 = load i32, i32* %new_priority, align 4, !dbg !11065
  %call13 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58, i64 0, i64 0), i32 %20, i32 %22, i32 %24, i32 %25), !dbg !11065
  %mul = mul nsw i32 2, %call13, !dbg !11065
  %add = add nsw i32 1, %mul, !dbg !11065
  store i32 %add, i32* %__j, align 4, !dbg !11065
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !11066, metadata !DIExpression()), !dbg !11065
  %26 = load i32, i32* %__j, align 4, !dbg !11065
  %conv = sext i32 %26 to i64, !dbg !11065
  %mul14 = mul i64 1, %conv, !dbg !11065
  %27 = alloca i8, i64 %mul14, align 16, !dbg !11065
  store i8* %27, i8** %__s, align 8, !dbg !11065
  %28 = load i8*, i8** %__s, align 8, !dbg !11065
  %29 = load i32, i32* %__j, align 4, !dbg !11065
  %conv15 = sext i32 %29 to i64, !dbg !11065
  %30 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11065
  %vinsn16 = getelementptr inbounds %struct._expr, %struct._expr* %30, i32 0, i32 0, !dbg !11065
  %31 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn16, align 8, !dbg !11065
  %insn_rtx17 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %31, i32 0, i32 0, !dbg !11065
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx17, align 8, !dbg !11065
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !11065
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !11065
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 0, !dbg !11065
  %rt_int21 = bitcast %union.rtunion_def* %arrayidx20 to i32*, !dbg !11065
  %33 = load i32, i32* %rt_int21, align 8, !dbg !11065
  %34 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11065
  %priority22 = getelementptr inbounds %struct._expr, %struct._expr* %34, i32 0, i32 3, !dbg !11065
  %35 = load i32, i32* %priority22, align 8, !dbg !11065
  %36 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11065
  %priority_adj23 = getelementptr inbounds %struct._expr, %struct._expr* %36, i32 0, i32 4, !dbg !11065
  %37 = load i32, i32* %priority_adj23, align 4, !dbg !11065
  %38 = load i32, i32* %new_priority, align 4, !dbg !11065
  %call24 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %28, i64 %conv15, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58, i64 0, i64 0), i32 %33, i32 %35, i32 %37, i32 %38), !dbg !11065
  %39 = load i8*, i8** %__s, align 8, !dbg !11065
  call void @sel_prepare_string_for_dot_label(i8* %39), !dbg !11065
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11065
  %41 = load i8*, i8** %__s, align 8, !dbg !11065
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %41), !dbg !11065
  br label %do.end, !dbg !11065

do.end:                                           ; preds = %do.body8
  br label %if.end36, !dbg !11065

if.else26:                                        ; preds = %do.body
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11059
  %43 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11059
  %vinsn27 = getelementptr inbounds %struct._expr, %struct._expr* %43, i32 0, i32 0, !dbg !11059
  %44 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn27, align 8, !dbg !11059
  %insn_rtx28 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %44, i32 0, i32 0, !dbg !11059
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx28, align 8, !dbg !11059
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !11059
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !11059
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !11059
  %rt_int32 = bitcast %union.rtunion_def* %arrayidx31 to i32*, !dbg !11059
  %46 = load i32, i32* %rt_int32, align 8, !dbg !11059
  %47 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11059
  %priority33 = getelementptr inbounds %struct._expr, %struct._expr* %47, i32 0, i32 3, !dbg !11059
  %48 = load i32, i32* %priority33, align 8, !dbg !11059
  %49 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11059
  %priority_adj34 = getelementptr inbounds %struct._expr, %struct._expr* %49, i32 0, i32 4, !dbg !11059
  %50 = load i32, i32* %priority_adj34, align 4, !dbg !11059
  %51 = load i32, i32* %new_priority, align 4, !dbg !11059
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58, i64 0, i64 0), i32 %46, i32 %48, i32 %50, i32 %51), !dbg !11059
  br label %if.end36

if.end36:                                         ; preds = %if.else26, %do.end
  br label %do.end37, !dbg !11062

do.end37:                                         ; preds = %if.end36
  br label %if.end38, !dbg !11062

if.end38:                                         ; preds = %do.end37, %cond.end
  %52 = load i32, i32* %new_priority, align 4, !dbg !11067
  ret i32 %52, !dbg !11068
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._expr** @VEC_expr_t_base_address(%struct.VEC_expr_t_base* %vec_) #0 !dbg !11069 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_t_base*, align 8
  store %struct.VEC_expr_t_base* %vec_, %struct.VEC_expr_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_base** %vec_.addr, metadata !11072, metadata !DIExpression()), !dbg !11073
  %0 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11073
  %tobool = icmp ne %struct.VEC_expr_t_base* %0, null, !dbg !11073
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11073

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11073
  %vec = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %1, i32 0, i32 2, !dbg !11073
  %arraydecay = getelementptr inbounds [1 x %struct._expr*], [1 x %struct._expr*]* %vec, i64 0, i64 0, !dbg !11073
  br label %cond.end, !dbg !11073

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11073

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._expr** [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !11073
  ret %struct._expr** %cond, !dbg !11073
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sel_rank_for_schedule(i8* %x, i8* %y) #0 !dbg !11074 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %tmp = alloca %struct._expr*, align 8
  %tmp2 = alloca %struct._expr*, align 8
  %tmp_insn = alloca %struct.rtx_def*, align 8
  %tmp2_insn = alloca %struct.rtx_def*, align 8
  %tmp_vinsn = alloca %struct.vinsn_def*, align 8
  %tmp2_vinsn = alloca %struct.vinsn_def*, align 8
  %val = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p1 = alloca i32, align 4
  %ds1 = alloca i32, align 4
  %ds2 = alloca i32, align 4
  %dw1 = alloca i32, align 4
  %dw2 = alloca i32, align 4
  %dw = alloca i32, align 4
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !11075, metadata !DIExpression()), !dbg !11076
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !11077, metadata !DIExpression()), !dbg !11078
  call void @llvm.dbg.declare(metadata %struct._expr** %tmp, metadata !11079, metadata !DIExpression()), !dbg !11080
  %0 = load i8*, i8** %y.addr, align 8, !dbg !11081
  %1 = bitcast i8* %0 to %struct._expr**, !dbg !11082
  %2 = load %struct._expr*, %struct._expr** %1, align 8, !dbg !11083
  store %struct._expr* %2, %struct._expr** %tmp, align 8, !dbg !11080
  call void @llvm.dbg.declare(metadata %struct._expr** %tmp2, metadata !11084, metadata !DIExpression()), !dbg !11085
  %3 = load i8*, i8** %x.addr, align 8, !dbg !11086
  %4 = bitcast i8* %3 to %struct._expr**, !dbg !11087
  %5 = load %struct._expr*, %struct._expr** %4, align 8, !dbg !11088
  store %struct._expr* %5, %struct._expr** %tmp2, align 8, !dbg !11085
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tmp_insn, metadata !11089, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tmp2_insn, metadata !11091, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %tmp_vinsn, metadata !11093, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %tmp2_vinsn, metadata !11095, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11097, metadata !DIExpression()), !dbg !11098
  %6 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11099
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %6, i32 0, i32 0, !dbg !11099
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11099
  store %struct.vinsn_def* %7, %struct.vinsn_def** %tmp_vinsn, align 8, !dbg !11100
  %8 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11101
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %8, i32 0, i32 0, !dbg !11101
  %9 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !11101
  store %struct.vinsn_def* %9, %struct.vinsn_def** %tmp2_vinsn, align 8, !dbg !11102
  %10 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11103
  %vinsn2 = getelementptr inbounds %struct._expr, %struct._expr* %10, i32 0, i32 0, !dbg !11103
  %11 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn2, align 8, !dbg !11103
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %11, i32 0, i32 0, !dbg !11103
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !11103
  store %struct.rtx_def* %12, %struct.rtx_def** %tmp_insn, align 8, !dbg !11104
  %13 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11105
  %vinsn3 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 0, !dbg !11105
  %14 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn3, align 8, !dbg !11105
  %insn_rtx4 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %14, i32 0, i32 0, !dbg !11105
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx4, align 8, !dbg !11105
  store %struct.rtx_def* %15, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11106
  %16 = load %struct.rtx_def*, %struct.rtx_def** %tmp_insn, align 8, !dbg !11107
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !11107
  %bf.load = load i32, i32* %17, align 8, !dbg !11107
  %bf.clear = and i32 %bf.load, 65535, !dbg !11107
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !11107
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !11109

land.lhs.true:                                    ; preds = %entry
  %18 = load %struct.rtx_def*, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11110
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !11110
  %bf.load5 = load i32, i32* %19, align 8, !dbg !11110
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !11110
  %cmp7 = icmp eq i32 %bf.clear6, 7, !dbg !11110
  br i1 %cmp7, label %if.else, label %if.then, !dbg !11111

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !11112
  br label %return, !dbg !11112

if.else:                                          ; preds = %land.lhs.true, %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11113
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !11113
  %bf.load8 = load i32, i32* %21, align 8, !dbg !11113
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !11113
  %cmp10 = icmp eq i32 %bf.clear9, 7, !dbg !11113
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !11115

if.then11:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !11116
  br label %return, !dbg !11116

if.end:                                           ; preds = %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %tmp_insn, align 8, !dbg !11117
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !11117
  %bf.load13 = load i32, i32* %23, align 8, !dbg !11117
  %bf.lshr = lshr i32 %bf.load13, 28, !dbg !11117
  %bf.clear14 = and i32 %bf.lshr, 1, !dbg !11117
  %24 = load %struct.rtx_def*, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11119
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !11119
  %bf.load15 = load i32, i32* %25, align 8, !dbg !11119
  %bf.lshr16 = lshr i32 %bf.load15, 28, !dbg !11119
  %bf.clear17 = and i32 %bf.lshr16, 1, !dbg !11119
  %cmp18 = icmp ne i32 %bf.clear14, %bf.clear17, !dbg !11120
  br i1 %cmp18, label %if.then19, label %if.end46, !dbg !11121

if.then19:                                        ; preds = %if.end12
  %26 = load %struct.vinsn_def*, %struct.vinsn_def** %tmp_vinsn, align 8, !dbg !11122
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %26, i32 0, i32 1, !dbg !11122
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !11122
  %27 = load i32, i32* %type, align 8, !dbg !11122
  %cmp20 = icmp eq i32 %27, 23, !dbg !11122
  br i1 %cmp20, label %if.end36, label %lor.lhs.false, !dbg !11122

lor.lhs.false:                                    ; preds = %if.then19
  %28 = load %struct.vinsn_def*, %struct.vinsn_def** %tmp_vinsn, align 8, !dbg !11122
  %id21 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %28, i32 0, i32 1, !dbg !11122
  %type22 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id21, i32 0, i32 0, !dbg !11122
  %29 = load i32, i32* %type22, align 8, !dbg !11122
  %cmp23 = icmp eq i32 %29, 24, !dbg !11122
  br i1 %cmp23, label %if.end36, label %land.lhs.true24, !dbg !11125

land.lhs.true24:                                  ; preds = %lor.lhs.false
  %30 = load %struct.vinsn_def*, %struct.vinsn_def** %tmp2_vinsn, align 8, !dbg !11126
  %id25 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %30, i32 0, i32 1, !dbg !11126
  %type26 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id25, i32 0, i32 0, !dbg !11126
  %31 = load i32, i32* %type26, align 8, !dbg !11126
  %cmp27 = icmp eq i32 %31, 23, !dbg !11126
  br i1 %cmp27, label %if.end36, label %lor.lhs.false28, !dbg !11126

lor.lhs.false28:                                  ; preds = %land.lhs.true24
  %32 = load %struct.vinsn_def*, %struct.vinsn_def** %tmp2_vinsn, align 8, !dbg !11126
  %id29 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %32, i32 0, i32 1, !dbg !11126
  %type30 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id29, i32 0, i32 0, !dbg !11126
  %33 = load i32, i32* %type30, align 8, !dbg !11126
  %cmp31 = icmp eq i32 %33, 24, !dbg !11126
  br i1 %cmp31, label %if.end36, label %if.then32, !dbg !11127

if.then32:                                        ; preds = %lor.lhs.false28
  %34 = load %struct.rtx_def*, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11128
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !11128
  %bf.load33 = load i32, i32* %35, align 8, !dbg !11128
  %bf.lshr34 = lshr i32 %bf.load33, 28, !dbg !11128
  %bf.clear35 = and i32 %bf.lshr34, 1, !dbg !11128
  %tobool = icmp ne i32 %bf.clear35, 0, !dbg !11128
  %36 = zext i1 %tobool to i64, !dbg !11128
  %cond = select i1 %tobool, i32 1, i32 -1, !dbg !11128
  store i32 %cond, i32* %retval, align 4, !dbg !11129
  br label %return, !dbg !11129

if.end36:                                         ; preds = %lor.lhs.false28, %land.lhs.true24, %lor.lhs.false, %if.then19
  %37 = load %struct.vinsn_def*, %struct.vinsn_def** %tmp2_vinsn, align 8, !dbg !11130
  %id37 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %37, i32 0, i32 1, !dbg !11130
  %type38 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id37, i32 0, i32 0, !dbg !11130
  %38 = load i32, i32* %type38, align 8, !dbg !11130
  %cmp39 = icmp eq i32 %38, 23, !dbg !11130
  br i1 %cmp39, label %if.end45, label %lor.lhs.false40, !dbg !11130

lor.lhs.false40:                                  ; preds = %if.end36
  %39 = load %struct.vinsn_def*, %struct.vinsn_def** %tmp2_vinsn, align 8, !dbg !11130
  %id41 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %39, i32 0, i32 1, !dbg !11130
  %type42 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id41, i32 0, i32 0, !dbg !11130
  %40 = load i32, i32* %type42, align 8, !dbg !11130
  %cmp43 = icmp eq i32 %40, 24, !dbg !11130
  br i1 %cmp43, label %if.end45, label %if.then44, !dbg !11132

if.then44:                                        ; preds = %lor.lhs.false40
  store i32 1, i32* %retval, align 4, !dbg !11133
  br label %return, !dbg !11133

if.end45:                                         ; preds = %lor.lhs.false40, %if.end36
  store i32 -1, i32* %retval, align 4, !dbg !11134
  br label %return, !dbg !11134

if.end46:                                         ; preds = %if.end12
  %41 = load %struct.rtx_def*, %struct.rtx_def** %tmp_insn, align 8, !dbg !11135
  %call = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %41), !dbg !11136
  %conv = zext i8 %call to i32, !dbg !11136
  %42 = load %struct.rtx_def*, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11137
  %call47 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %42), !dbg !11138
  %conv48 = zext i8 %call47 to i32, !dbg !11138
  %sub = sub nsw i32 %conv, %conv48, !dbg !11139
  store i32 %sub, i32* %val, align 4, !dbg !11140
  %43 = load i32, i32* %val, align 4, !dbg !11141
  %tobool49 = icmp ne i32 %43, 0, !dbg !11141
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !11143

if.then50:                                        ; preds = %if.end46
  %44 = load i32, i32* %val, align 4, !dbg !11144
  store i32 %44, i32* %retval, align 4, !dbg !11145
  br label %return, !dbg !11145

if.end51:                                         ; preds = %if.end46
  %45 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11146
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %45, i32 0, i32 5, !dbg !11146
  %46 = load i32, i32* %sched_times, align 8, !dbg !11146
  %cmp52 = icmp sgt i32 %46, 0, !dbg !11148
  br i1 %cmp52, label %if.then58, label %lor.lhs.false54, !dbg !11149

lor.lhs.false54:                                  ; preds = %if.end51
  %47 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11150
  %sched_times55 = getelementptr inbounds %struct._expr, %struct._expr* %47, i32 0, i32 5, !dbg !11150
  %48 = load i32, i32* %sched_times55, align 8, !dbg !11150
  %cmp56 = icmp sgt i32 %48, 0, !dbg !11151
  br i1 %cmp56, label %if.then58, label %if.end65, !dbg !11152

if.then58:                                        ; preds = %lor.lhs.false54, %if.end51
  %49 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11153
  %sched_times59 = getelementptr inbounds %struct._expr, %struct._expr* %49, i32 0, i32 5, !dbg !11153
  %50 = load i32, i32* %sched_times59, align 8, !dbg !11153
  %51 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11155
  %sched_times60 = getelementptr inbounds %struct._expr, %struct._expr* %51, i32 0, i32 5, !dbg !11155
  %52 = load i32, i32* %sched_times60, align 8, !dbg !11155
  %sub61 = sub nsw i32 %50, %52, !dbg !11156
  store i32 %sub61, i32* %val, align 4, !dbg !11157
  %53 = load i32, i32* %val, align 4, !dbg !11158
  %tobool62 = icmp ne i32 %53, 0, !dbg !11158
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !11160

if.then63:                                        ; preds = %if.then58
  %54 = load i32, i32* %val, align 4, !dbg !11161
  store i32 %54, i32* %retval, align 4, !dbg !11162
  br label %return, !dbg !11162

if.end64:                                         ; preds = %if.then58
  br label %if.end65, !dbg !11163

if.end65:                                         ; preds = %if.end64, %lor.lhs.false54
  %55 = load %struct.rtx_def*, %struct.rtx_def** %tmp_insn, align 8, !dbg !11164
  %call66 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %55), !dbg !11166
  %conv67 = zext i8 %call66 to i32, !dbg !11166
  %tobool68 = icmp ne i32 %conv67, 0, !dbg !11166
  br i1 %tobool68, label %land.lhs.true69, label %if.else73, !dbg !11167

land.lhs.true69:                                  ; preds = %if.end65
  %56 = load %struct.rtx_def*, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11168
  %call70 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %56), !dbg !11169
  %tobool71 = icmp ne i8 %call70, 0, !dbg !11169
  br i1 %tobool71, label %if.else73, label %if.then72, !dbg !11170

if.then72:                                        ; preds = %land.lhs.true69
  store i32 -1, i32* %retval, align 4, !dbg !11171
  br label %return, !dbg !11171

if.else73:                                        ; preds = %land.lhs.true69, %if.end65
  %57 = load %struct.rtx_def*, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11172
  %call74 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %57), !dbg !11174
  %conv75 = zext i8 %call74 to i32, !dbg !11174
  %tobool76 = icmp ne i32 %conv75, 0, !dbg !11174
  br i1 %tobool76, label %land.lhs.true77, label %if.end81, !dbg !11175

land.lhs.true77:                                  ; preds = %if.else73
  %58 = load %struct.rtx_def*, %struct.rtx_def** %tmp_insn, align 8, !dbg !11176
  %call78 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %58), !dbg !11177
  %tobool79 = icmp ne i8 %call78, 0, !dbg !11177
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !11178

if.then80:                                        ; preds = %land.lhs.true77
  store i32 1, i32* %retval, align 4, !dbg !11179
  br label %return, !dbg !11179

if.end81:                                         ; preds = %land.lhs.true77, %if.else73
  br label %if.end82

if.end82:                                         ; preds = %if.end81
  %59 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11180
  %usefulness = getelementptr inbounds %struct._expr, %struct._expr* %59, i32 0, i32 2, !dbg !11180
  %60 = load i32, i32* %usefulness, align 4, !dbg !11180
  %cmp83 = icmp ne i32 %60, 0, !dbg !11182
  br i1 %cmp83, label %land.lhs.true85, label %if.else97, !dbg !11183

land.lhs.true85:                                  ; preds = %if.end82
  %61 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11184
  %usefulness86 = getelementptr inbounds %struct._expr, %struct._expr* %61, i32 0, i32 2, !dbg !11184
  %62 = load i32, i32* %usefulness86, align 4, !dbg !11184
  %cmp87 = icmp ne i32 %62, 0, !dbg !11185
  br i1 %cmp87, label %if.then89, label %if.else97, !dbg !11186

if.then89:                                        ; preds = %land.lhs.true85
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !11187, metadata !DIExpression()), !dbg !11189
  %63 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11190
  %priority = getelementptr inbounds %struct._expr, %struct._expr* %63, i32 0, i32 3, !dbg !11190
  %64 = load i32, i32* %priority, align 8, !dbg !11190
  %65 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11191
  %priority_adj = getelementptr inbounds %struct._expr, %struct._expr* %65, i32 0, i32 4, !dbg !11191
  %66 = load i32, i32* %priority_adj, align 4, !dbg !11191
  %add = add nsw i32 %64, %66, !dbg !11192
  store i32 %add, i32* %p2, align 4, !dbg !11189
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !11193, metadata !DIExpression()), !dbg !11194
  %67 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11195
  %priority90 = getelementptr inbounds %struct._expr, %struct._expr* %67, i32 0, i32 3, !dbg !11195
  %68 = load i32, i32* %priority90, align 8, !dbg !11195
  %69 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11196
  %priority_adj91 = getelementptr inbounds %struct._expr, %struct._expr* %69, i32 0, i32 4, !dbg !11196
  %70 = load i32, i32* %priority_adj91, align 4, !dbg !11196
  %add92 = add nsw i32 %68, %70, !dbg !11197
  store i32 %add92, i32* %p1, align 4, !dbg !11194
  %71 = load i32, i32* %p2, align 4, !dbg !11198
  %72 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11199
  %usefulness93 = getelementptr inbounds %struct._expr, %struct._expr* %72, i32 0, i32 2, !dbg !11199
  %73 = load i32, i32* %usefulness93, align 4, !dbg !11199
  %mul = mul nsw i32 %71, %73, !dbg !11200
  %74 = load i32, i32* %p1, align 4, !dbg !11201
  %75 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11202
  %usefulness94 = getelementptr inbounds %struct._expr, %struct._expr* %75, i32 0, i32 2, !dbg !11202
  %76 = load i32, i32* %usefulness94, align 4, !dbg !11202
  %mul95 = mul nsw i32 %74, %76, !dbg !11203
  %sub96 = sub nsw i32 %mul, %mul95, !dbg !11204
  store i32 %sub96, i32* %val, align 4, !dbg !11205
  br label %if.end105, !dbg !11206

if.else97:                                        ; preds = %land.lhs.true85, %if.end82
  %77 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11207
  %priority98 = getelementptr inbounds %struct._expr, %struct._expr* %77, i32 0, i32 3, !dbg !11207
  %78 = load i32, i32* %priority98, align 8, !dbg !11207
  %79 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11208
  %priority99 = getelementptr inbounds %struct._expr, %struct._expr* %79, i32 0, i32 3, !dbg !11208
  %80 = load i32, i32* %priority99, align 8, !dbg !11208
  %sub100 = sub nsw i32 %78, %80, !dbg !11209
  %81 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11210
  %priority_adj101 = getelementptr inbounds %struct._expr, %struct._expr* %81, i32 0, i32 4, !dbg !11210
  %82 = load i32, i32* %priority_adj101, align 4, !dbg !11210
  %add102 = add nsw i32 %sub100, %82, !dbg !11211
  %83 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11212
  %priority_adj103 = getelementptr inbounds %struct._expr, %struct._expr* %83, i32 0, i32 4, !dbg !11212
  %84 = load i32, i32* %priority_adj103, align 4, !dbg !11212
  %sub104 = sub nsw i32 %add102, %84, !dbg !11213
  store i32 %sub104, i32* %val, align 4, !dbg !11214
  br label %if.end105

if.end105:                                        ; preds = %if.else97, %if.then89
  %85 = load i32, i32* %val, align 4, !dbg !11215
  %tobool106 = icmp ne i32 %85, 0, !dbg !11215
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !11217

if.then107:                                       ; preds = %if.end105
  %86 = load i32, i32* %val, align 4, !dbg !11218
  store i32 %86, i32* %retval, align 4, !dbg !11219
  br label %return, !dbg !11219

if.end108:                                        ; preds = %if.end105
  %87 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !11220
  %cmp109 = icmp ne %struct.spec_info_def* %87, null, !dbg !11222
  br i1 %cmp109, label %land.lhs.true111, label %if.end134, !dbg !11223

land.lhs.true111:                                 ; preds = %if.end108
  %88 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !11224
  %mask = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %88, i32 0, i32 0, !dbg !11225
  %89 = load i32, i32* %mask, align 8, !dbg !11225
  %cmp112 = icmp ne i32 %89, 0, !dbg !11226
  br i1 %cmp112, label %if.then114, label %if.end134, !dbg !11227

if.then114:                                       ; preds = %land.lhs.true111
  call void @llvm.dbg.declare(metadata i32* %ds1, metadata !11228, metadata !DIExpression()), !dbg !11230
  call void @llvm.dbg.declare(metadata i32* %ds2, metadata !11231, metadata !DIExpression()), !dbg !11232
  call void @llvm.dbg.declare(metadata i32* %dw1, metadata !11233, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.declare(metadata i32* %dw2, metadata !11236, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.declare(metadata i32* %dw, metadata !11238, metadata !DIExpression()), !dbg !11239
  %90 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !11240
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %90, i32 0, i32 7, !dbg !11240
  %91 = load i32, i32* %spec_done_ds, align 8, !dbg !11240
  store i32 %91, i32* %ds1, align 4, !dbg !11241
  %92 = load i32, i32* %ds1, align 4, !dbg !11242
  %tobool115 = icmp ne i32 %92, 0, !dbg !11242
  br i1 %tobool115, label %if.then116, label %if.else118, !dbg !11244

if.then116:                                       ; preds = %if.then114
  %93 = load i32, i32* %ds1, align 4, !dbg !11245
  %call117 = call i32 @ds_weak(i32 %93), !dbg !11246
  store i32 %call117, i32* %dw1, align 4, !dbg !11247
  br label %if.end119, !dbg !11248

if.else118:                                       ; preds = %if.then114
  store i32 63, i32* %dw1, align 4, !dbg !11249
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.then116
  %94 = load %struct._expr*, %struct._expr** %tmp2, align 8, !dbg !11250
  %spec_done_ds120 = getelementptr inbounds %struct._expr, %struct._expr* %94, i32 0, i32 7, !dbg !11250
  %95 = load i32, i32* %spec_done_ds120, align 8, !dbg !11250
  store i32 %95, i32* %ds2, align 4, !dbg !11251
  %96 = load i32, i32* %ds2, align 4, !dbg !11252
  %tobool121 = icmp ne i32 %96, 0, !dbg !11252
  br i1 %tobool121, label %if.then122, label %if.else124, !dbg !11254

if.then122:                                       ; preds = %if.end119
  %97 = load i32, i32* %ds2, align 4, !dbg !11255
  %call123 = call i32 @ds_weak(i32 %97), !dbg !11256
  store i32 %call123, i32* %dw2, align 4, !dbg !11257
  br label %if.end125, !dbg !11258

if.else124:                                       ; preds = %if.end119
  store i32 63, i32* %dw2, align 4, !dbg !11259
  br label %if.end125

if.end125:                                        ; preds = %if.else124, %if.then122
  %98 = load i32, i32* %dw2, align 4, !dbg !11260
  %99 = load i32, i32* %dw1, align 4, !dbg !11261
  %sub126 = sub nsw i32 %98, %99, !dbg !11262
  store i32 %sub126, i32* %dw, align 4, !dbg !11263
  %100 = load i32, i32* %dw, align 4, !dbg !11264
  %cmp127 = icmp sgt i32 %100, 7, !dbg !11266
  br i1 %cmp127, label %if.then132, label %lor.lhs.false129, !dbg !11267

lor.lhs.false129:                                 ; preds = %if.end125
  %101 = load i32, i32* %dw, align 4, !dbg !11268
  %cmp130 = icmp slt i32 %101, -7, !dbg !11269
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !11270

if.then132:                                       ; preds = %lor.lhs.false129, %if.end125
  %102 = load i32, i32* %dw, align 4, !dbg !11271
  store i32 %102, i32* %retval, align 4, !dbg !11272
  br label %return, !dbg !11272

if.end133:                                        ; preds = %lor.lhs.false129
  br label %if.end134, !dbg !11273

if.end134:                                        ; preds = %if.end133, %land.lhs.true111, %if.end108
  %103 = load %struct.rtx_def*, %struct.rtx_def** %tmp_insn, align 8, !dbg !11274
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !11274
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11274
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !11274
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11274
  %104 = load i32, i32* %rt_int, align 8, !dbg !11274
  %105 = load i32, i32* @first_emitted_uid, align 4, !dbg !11276
  %cmp135 = icmp slt i32 %104, %105, !dbg !11277
  br i1 %cmp135, label %land.lhs.true137, label %if.end145, !dbg !11278

land.lhs.true137:                                 ; preds = %if.end134
  %106 = load %struct.rtx_def*, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11279
  %u138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1, !dbg !11279
  %fld139 = bitcast %union.u* %u138 to [1 x %union.rtunion_def]*, !dbg !11279
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i64 0, i64 0, !dbg !11279
  %rt_int141 = bitcast %union.rtunion_def* %arrayidx140 to i32*, !dbg !11279
  %107 = load i32, i32* %rt_int141, align 8, !dbg !11279
  %108 = load i32, i32* @first_emitted_uid, align 4, !dbg !11280
  %cmp142 = icmp sge i32 %107, %108, !dbg !11281
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !11282

if.then144:                                       ; preds = %land.lhs.true137
  store i32 -1, i32* %retval, align 4, !dbg !11283
  br label %return, !dbg !11283

if.end145:                                        ; preds = %land.lhs.true137, %if.end134
  %109 = load %struct.rtx_def*, %struct.rtx_def** %tmp_insn, align 8, !dbg !11284
  %u146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1, !dbg !11284
  %fld147 = bitcast %union.u* %u146 to [1 x %union.rtunion_def]*, !dbg !11284
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i64 0, i64 0, !dbg !11284
  %rt_int149 = bitcast %union.rtunion_def* %arrayidx148 to i32*, !dbg !11284
  %110 = load i32, i32* %rt_int149, align 8, !dbg !11284
  %111 = load i32, i32* @first_emitted_uid, align 4, !dbg !11286
  %cmp150 = icmp sge i32 %110, %111, !dbg !11287
  br i1 %cmp150, label %land.lhs.true152, label %if.end160, !dbg !11288

land.lhs.true152:                                 ; preds = %if.end145
  %112 = load %struct.rtx_def*, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11289
  %u153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1, !dbg !11289
  %fld154 = bitcast %union.u* %u153 to [1 x %union.rtunion_def]*, !dbg !11289
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i64 0, i64 0, !dbg !11289
  %rt_int156 = bitcast %union.rtunion_def* %arrayidx155 to i32*, !dbg !11289
  %113 = load i32, i32* %rt_int156, align 8, !dbg !11289
  %114 = load i32, i32* @first_emitted_uid, align 4, !dbg !11290
  %cmp157 = icmp slt i32 %113, %114, !dbg !11291
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !11292

if.then159:                                       ; preds = %land.lhs.true152
  store i32 1, i32* %retval, align 4, !dbg !11293
  br label %return, !dbg !11293

if.end160:                                        ; preds = %land.lhs.true152, %if.end145
  %115 = load %struct.rtx_def*, %struct.rtx_def** %tmp_insn, align 8, !dbg !11294
  %u161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1, !dbg !11294
  %fld162 = bitcast %union.u* %u161 to [1 x %union.rtunion_def]*, !dbg !11294
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i64 0, i64 0, !dbg !11294
  %rt_int164 = bitcast %union.rtunion_def* %arrayidx163 to i32*, !dbg !11294
  %116 = load i32, i32* %rt_int164, align 8, !dbg !11294
  %117 = load %struct.rtx_def*, %struct.rtx_def** %tmp2_insn, align 8, !dbg !11295
  %u165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1, !dbg !11295
  %fld166 = bitcast %union.u* %u165 to [1 x %union.rtunion_def]*, !dbg !11295
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i64 0, i64 0, !dbg !11295
  %rt_int168 = bitcast %union.rtunion_def* %arrayidx167 to i32*, !dbg !11295
  %118 = load i32, i32* %rt_int168, align 8, !dbg !11295
  %sub169 = sub nsw i32 %116, %118, !dbg !11296
  store i32 %sub169, i32* %retval, align 4, !dbg !11297
  br label %return, !dbg !11297

return:                                           ; preds = %if.end160, %if.then159, %if.then144, %if.then132, %if.then107, %if.then80, %if.then72, %if.then63, %if.then50, %if.end45, %if.then44, %if.then32, %if.then11, %if.then
  %119 = load i32, i32* %retval, align 4, !dbg !11298
  ret i32 %119, !dbg !11298
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._expr* @VEC_expr_t_base_index(%struct.VEC_expr_t_base* %vec_, i32 %ix_) #0 !dbg !11299 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_t_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_expr_t_base* %vec_, %struct.VEC_expr_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_base** %vec_.addr, metadata !11302, metadata !DIExpression()), !dbg !11303
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !11304, metadata !DIExpression()), !dbg !11303
  %0 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11303
  %tobool = icmp ne %struct.VEC_expr_t_base* %0, null, !dbg !11303
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11303

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !11303
  %2 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11303
  %num = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %2, i32 0, i32 0, !dbg !11303
  %3 = load i32, i32* %num, align 8, !dbg !11303
  %cmp = icmp ult i32 %1, %3, !dbg !11303
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !11305
  %land.ext = zext i1 %4 to i32, !dbg !11303
  %5 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11303
  %vec = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %5, i32 0, i32 2, !dbg !11303
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !11303
  %idxprom = zext i32 %6 to i64, !dbg !11303
  %arrayidx = getelementptr inbounds [1 x %struct._expr*], [1 x %struct._expr*]* %vec, i64 0, i64 %idxprom, !dbg !11303
  %7 = load %struct._expr*, %struct._expr** %arrayidx, align 8, !dbg !11303
  ret %struct._expr* %7, !dbg !11303
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._expr* @VEC_expr_t_base_unordered_remove(%struct.VEC_expr_t_base* %vec_, i32 %ix_) #0 !dbg !11306 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_t_base*, align 8
  %ix_.addr = alloca i32, align 4
  %slot_ = alloca %struct._expr**, align 8
  %obj_ = alloca %struct._expr*, align 8
  store %struct.VEC_expr_t_base* %vec_, %struct.VEC_expr_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_base** %vec_.addr, metadata !11309, metadata !DIExpression()), !dbg !11310
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !11311, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.declare(metadata %struct._expr*** %slot_, metadata !11312, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.declare(metadata %struct._expr** %obj_, metadata !11313, metadata !DIExpression()), !dbg !11310
  %0 = load i32, i32* %ix_.addr, align 4, !dbg !11310
  %1 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11310
  %num = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %1, i32 0, i32 0, !dbg !11310
  %2 = load i32, i32* %num, align 8, !dbg !11310
  %cmp = icmp ult i32 %0, %2, !dbg !11310
  %conv = zext i1 %cmp to i32, !dbg !11310
  %3 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11310
  %vec = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %3, i32 0, i32 2, !dbg !11310
  %4 = load i32, i32* %ix_.addr, align 4, !dbg !11310
  %idxprom = zext i32 %4 to i64, !dbg !11310
  %arrayidx = getelementptr inbounds [1 x %struct._expr*], [1 x %struct._expr*]* %vec, i64 0, i64 %idxprom, !dbg !11310
  store %struct._expr** %arrayidx, %struct._expr*** %slot_, align 8, !dbg !11310
  %5 = load %struct._expr**, %struct._expr*** %slot_, align 8, !dbg !11310
  %6 = load %struct._expr*, %struct._expr** %5, align 8, !dbg !11310
  store %struct._expr* %6, %struct._expr** %obj_, align 8, !dbg !11310
  %7 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11310
  %vec1 = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %7, i32 0, i32 2, !dbg !11310
  %8 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11310
  %num2 = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %8, i32 0, i32 0, !dbg !11310
  %9 = load i32, i32* %num2, align 8, !dbg !11310
  %dec = add i32 %9, -1, !dbg !11310
  store i32 %dec, i32* %num2, align 8, !dbg !11310
  %idxprom3 = zext i32 %dec to i64, !dbg !11310
  %arrayidx4 = getelementptr inbounds [1 x %struct._expr*], [1 x %struct._expr*]* %vec1, i64 0, i64 %idxprom3, !dbg !11310
  %10 = load %struct._expr*, %struct._expr** %arrayidx4, align 8, !dbg !11310
  %11 = load %struct._expr**, %struct._expr*** %slot_, align 8, !dbg !11310
  store %struct._expr* %10, %struct._expr** %11, align 8, !dbg !11310
  %12 = load %struct._expr*, %struct._expr** %obj_, align 8, !dbg !11310
  ret %struct._expr* %12, !dbg !11310
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vinsn_vec_has_expr_p(%struct.VEC_vinsn_t_heap* %vinsn_vec, %struct._expr* %expr) #0 !dbg !11314 {
entry:
  %retval = alloca i8, align 1
  %vinsn_vec.addr = alloca %struct.VEC_vinsn_t_heap*, align 8
  %expr.addr = alloca %struct._expr*, align 8
  %vinsn = alloca %struct.vinsn_def*, align 8
  %n = alloca i32, align 4
  store %struct.VEC_vinsn_t_heap* %vinsn_vec, %struct.VEC_vinsn_t_heap** %vinsn_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_heap** %vinsn_vec.addr, metadata !11317, metadata !DIExpression()), !dbg !11318
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !11319, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vinsn, metadata !11321, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11323, metadata !DIExpression()), !dbg !11324
  store i32 0, i32* %n, align 4, !dbg !11325
  br label %for.cond, !dbg !11327

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %vinsn_vec.addr, align 8, !dbg !11328
  %tobool = icmp ne %struct.VEC_vinsn_t_heap* %0, null, !dbg !11328
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11328

cond.true:                                        ; preds = %for.cond
  %1 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %vinsn_vec.addr, align 8, !dbg !11328
  %base = getelementptr inbounds %struct.VEC_vinsn_t_heap, %struct.VEC_vinsn_t_heap* %1, i32 0, i32 0, !dbg !11328
  br label %cond.end, !dbg !11328

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !11328

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_vinsn_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !11328
  %2 = load i32, i32* %n, align 4, !dbg !11328
  %call = call i32 @VEC_vinsn_t_base_iterate(%struct.VEC_vinsn_t_base* %cond, i32 %2, %struct.vinsn_def** %vinsn), !dbg !11328
  %tobool1 = icmp ne i32 %call, 0, !dbg !11330
  br i1 %tobool1, label %for.body, label %for.end, !dbg !11330

for.body:                                         ; preds = %cond.end
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11331
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i32 0, i32 1, !dbg !11331
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !11331
  %4 = load i32, i32* %type, align 8, !dbg !11331
  %cmp = icmp eq i32 %4, 23, !dbg !11331
  br i1 %cmp, label %if.then, label %if.else, !dbg !11333

if.then:                                          ; preds = %for.body
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11334
  %6 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11337
  %vinsn2 = getelementptr inbounds %struct._expr, %struct._expr* %6, i32 0, i32 0, !dbg !11337
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn2, align 8, !dbg !11337
  %call3 = call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %5, %struct.vinsn_def* %7), !dbg !11338
  %tobool4 = icmp ne i8 %call3, 0, !dbg !11338
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !11339

if.then5:                                         ; preds = %if.then
  store i8 1, i8* %retval, align 1, !dbg !11340
  br label %return, !dbg !11340

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !11341

if.else:                                          ; preds = %for.body
  %8 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11342
  %id6 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i32 0, i32 1, !dbg !11342
  %reg_sets = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id6, i32 0, i32 3, !dbg !11342
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !11342
  %10 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11345
  %vinsn7 = getelementptr inbounds %struct._expr, %struct._expr* %10, i32 0, i32 0, !dbg !11345
  %11 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn7, align 8, !dbg !11345
  %id8 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %11, i32 0, i32 1, !dbg !11345
  %reg_sets9 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id8, i32 0, i32 3, !dbg !11345
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets9, align 8, !dbg !11345
  %call10 = call zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def* %9, %struct.bitmap_head_def* %12), !dbg !11346
  %tobool11 = icmp ne i8 %call10, 0, !dbg !11346
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !11347

if.then12:                                        ; preds = %if.else
  store i8 1, i8* %retval, align 1, !dbg !11348
  br label %return, !dbg !11348

if.end13:                                         ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end
  br label %for.inc, !dbg !11331

for.inc:                                          ; preds = %if.end14
  %13 = load i32, i32* %n, align 4, !dbg !11349
  %inc = add nsw i32 %13, 1, !dbg !11349
  store i32 %inc, i32* %n, align 4, !dbg !11349
  br label %for.cond, !dbg !11350, !llvm.loop !11351

for.end:                                          ; preds = %cond.end
  store i8 0, i8* %retval, align 1, !dbg !11353
  br label %return, !dbg !11353

return:                                           ; preds = %for.end, %if.then12, %if.then5
  %14 = load i8, i8* %retval, align 1, !dbg !11354
  ret i8 %14, !dbg !11354
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @find_best_reg_for_expr(%struct._expr* %expr, %struct._list_node* %bnds, i8* %is_orig_reg_p) #0 !dbg !2411 {
entry:
  %retval = alloca i8, align 1
  %expr.addr = alloca %struct._expr*, align 8
  %bnds.addr = alloca %struct._list_node*, align 8
  %is_orig_reg_p.addr = alloca i8*, align 8
  %used_regs = alloca %struct.bitmap_head_def*, align 8
  %original_insns = alloca %struct._list_node*, align 8
  %reg_ok = alloca i8, align 1
  %best_reg = alloca %struct.rtx_def*, align 8
  %hard_regs_used = alloca i64, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !11355, metadata !DIExpression()), !dbg !11356
  store %struct._list_node* %bnds, %struct._list_node** %bnds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %bnds.addr, metadata !11357, metadata !DIExpression()), !dbg !11358
  store i8* %is_orig_reg_p, i8** %is_orig_reg_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %is_orig_reg_p.addr, metadata !11359, metadata !DIExpression()), !dbg !11360
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %used_regs, metadata !11361, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.declare(metadata %struct._list_node** %original_insns, metadata !11363, metadata !DIExpression()), !dbg !11364
  store %struct._list_node* null, %struct._list_node** %original_insns, align 8, !dbg !11364
  call void @llvm.dbg.declare(metadata i8* %reg_ok, metadata !11365, metadata !DIExpression()), !dbg !11366
  %0 = load i8*, i8** %is_orig_reg_p.addr, align 8, !dbg !11367
  store i8 0, i8* %0, align 1, !dbg !11368
  %1 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11369
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %1, i32 0, i32 0, !dbg !11369
  %2 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11369
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %2, i32 0, i32 1, !dbg !11369
  %reg_sets = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 3, !dbg !11369
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !11369
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %3, i32 0, i32 0, !dbg !11369
  %4 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !11369
  %tobool = icmp ne %struct.bitmap_element_def* %4, null, !dbg !11369
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !11371

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11372
  %vinsn1 = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0, !dbg !11372
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn1, align 8, !dbg !11372
  %id2 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %6, i32 0, i32 1, !dbg !11372
  %reg_clobbers = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id2, i32 0, i32 4, !dbg !11372
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !11372
  %first3 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %7, i32 0, i32 0, !dbg !11372
  %8 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first3, align 8, !dbg !11372
  %tobool4 = icmp ne %struct.bitmap_element_def* %8, null, !dbg !11372
  br i1 %tobool4, label %if.end, label %if.then, !dbg !11373

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !11374
  br label %return, !dbg !11374

if.end:                                           ; preds = %land.lhs.true, %entry
  %call = call %struct.bitmap_head_def* @get_clear_regset_from_pool(), !dbg !11375
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %used_regs, align 8, !dbg !11376
  store i64 0, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i32 0, i32 0), align 8, !dbg !11377
  %9 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11378
  %10 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !11379
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !11380
  call void @collect_unavailable_regs_from_bnds(%struct._expr* %9, %struct._list_node* %10, %struct.bitmap_head_def* %11, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, %struct._list_node** %original_insns), !dbg !11381
  %12 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11382
  %vinsn5 = getelementptr inbounds %struct._expr, %struct._expr* %12, i32 0, i32 0, !dbg !11382
  %13 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn5, align 8, !dbg !11382
  %id6 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %13, i32 0, i32 1, !dbg !11382
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id6, i32 0, i32 0, !dbg !11382
  %14 = load i32, i32* %type, align 8, !dbg !11382
  %cmp = icmp eq i32 %14, 23, !dbg !11382
  br i1 %cmp, label %if.then7, label %if.else29, !dbg !11384

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %best_reg, metadata !11385, metadata !DIExpression()), !dbg !11387
  store %struct.rtx_def* null, %struct.rtx_def** %best_reg, align 8, !dbg !11387
  %15 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11388
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !11389
  call void @verify_target_availability(%struct._expr* %15, %struct.bitmap_head_def* %16, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data), !dbg !11390
  %17 = load i32, i32* @reload_completed, align 4, !dbg !11391
  %tobool8 = icmp ne i32 %17, 0, !dbg !11391
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !11393

if.then9:                                         ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i64* %hard_regs_used, metadata !11394, metadata !DIExpression()), !dbg !11396
  br label %do.body, !dbg !11397

do.body:                                          ; preds = %if.then9
  store i64 0, i64* %hard_regs_used, align 8, !dbg !11398
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !11398
  call void @reg_set_to_hard_reg_set(i64* %hard_regs_used, %struct.bitmap_head_def* %18), !dbg !11398
  br label %do.end, !dbg !11398

do.end:                                           ; preds = %do.body
  %19 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i32 0, i32 0), align 8, !dbg !11400
  %20 = load i64, i64* %hard_regs_used, align 8, !dbg !11400
  %or = or i64 %20, %19, !dbg !11400
  store i64 %or, i64* %hard_regs_used, align 8, !dbg !11400
  %21 = load i64, i64* %hard_regs_used, align 8, !dbg !11401
  %22 = load %struct._list_node*, %struct._list_node** %original_insns, align 8, !dbg !11402
  %23 = load i8*, i8** %is_orig_reg_p.addr, align 8, !dbg !11403
  %call10 = call %struct.rtx_def* @choose_best_reg(i64 %21, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, %struct._list_node* %22, i8* %23), !dbg !11404
  store %struct.rtx_def* %call10, %struct.rtx_def** %best_reg, align 8, !dbg !11405
  br label %if.end12, !dbg !11406

if.else:                                          ; preds = %if.then7
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !11407
  %25 = load %struct._list_node*, %struct._list_node** %original_insns, align 8, !dbg !11408
  %26 = load i8*, i8** %is_orig_reg_p.addr, align 8, !dbg !11409
  %call11 = call %struct.rtx_def* @choose_best_pseudo_reg(%struct.bitmap_head_def* %24, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, %struct._list_node* %25, i8* %26), !dbg !11410
  store %struct.rtx_def* %call11, %struct.rtx_def** %best_reg, align 8, !dbg !11411
  br label %if.end12

if.end12:                                         ; preds = %if.else, %do.end
  %27 = load %struct.rtx_def*, %struct.rtx_def** %best_reg, align 8, !dbg !11412
  %tobool13 = icmp ne %struct.rtx_def* %27, null, !dbg !11412
  br i1 %tobool13, label %if.else15, label %if.then14, !dbg !11414

if.then14:                                        ; preds = %if.end12
  store i8 0, i8* %reg_ok, align 1, !dbg !11415
  br label %if.end28, !dbg !11416

if.else15:                                        ; preds = %if.end12
  %28 = load i8*, i8** %is_orig_reg_p.addr, align 8, !dbg !11417
  %29 = load i8, i8* %28, align 1, !dbg !11419
  %tobool16 = icmp ne i8 %29, 0, !dbg !11419
  br i1 %tobool16, label %if.then17, label %if.else19, !dbg !11420

if.then17:                                        ; preds = %if.else15
  %30 = load %struct._list_node*, %struct._list_node** %original_insns, align 8, !dbg !11421
  %31 = load %struct.rtx_def*, %struct.rtx_def** %best_reg, align 8, !dbg !11423
  %32 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11424
  %call18 = call zeroext i8 @try_replace_dest_reg(%struct._list_node* %30, %struct.rtx_def* %31, %struct._expr* %32), !dbg !11425
  store i8 %call18, i8* %reg_ok, align 1, !dbg !11426
  br label %if.end27, !dbg !11427

if.else19:                                        ; preds = %if.else15
  %33 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11428
  %vinsn20 = getelementptr inbounds %struct._expr, %struct._expr* %33, i32 0, i32 0, !dbg !11428
  %34 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn20, align 8, !dbg !11428
  %call21 = call i32 @sel_vinsn_cost(%struct.vinsn_def* %34), !dbg !11431
  %cmp22 = icmp slt i32 %call21, 2, !dbg !11432
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !11433

if.then23:                                        ; preds = %if.else19
  store i8 0, i8* %reg_ok, align 1, !dbg !11434
  br label %if.end26, !dbg !11435

if.else24:                                        ; preds = %if.else19
  %35 = load %struct._list_node*, %struct._list_node** %original_insns, align 8, !dbg !11436
  %36 = load %struct.rtx_def*, %struct.rtx_def** %best_reg, align 8, !dbg !11437
  %37 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11438
  %call25 = call zeroext i8 @try_replace_dest_reg(%struct._list_node* %35, %struct.rtx_def* %36, %struct._expr* %37), !dbg !11439
  store i8 %call25, i8* %reg_ok, align 1, !dbg !11440
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then23
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then17
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then14
  br label %if.end46, !dbg !11441

if.else29:                                        ; preds = %if.end
  %38 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11442
  %vinsn30 = getelementptr inbounds %struct._expr, %struct._expr* %38, i32 0, i32 0, !dbg !11442
  %39 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn30, align 8, !dbg !11442
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !11445
  %41 = load i64, i64* getelementptr inbounds (%struct.reg_rename, %struct.reg_rename* @find_best_reg_for_expr.reg_rename_data, i32 0, i32 0), align 8, !dbg !11446
  %call31 = call zeroext i8 @vinsn_writes_one_of_regs_p(%struct.vinsn_def* %39, %struct.bitmap_head_def* %40, i64 %41), !dbg !11447
  %tobool32 = icmp ne i8 %call31, 0, !dbg !11447
  br i1 %tobool32, label %if.then33, label %if.else36, !dbg !11448

if.then33:                                        ; preds = %if.else29
  store i8 0, i8* %reg_ok, align 1, !dbg !11449
  %42 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11451
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %42, i32 0, i32 11, !dbg !11451
  %43 = load i8, i8* %target_available, align 8, !dbg !11451
  %conv = sext i8 %43 to i32, !dbg !11451
  %cmp34 = icmp sle i32 %conv, 0, !dbg !11451
  br i1 %cmp34, label %cond.false, label %cond.true, !dbg !11451

cond.true:                                        ; preds = %if.then33
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1772, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11451
  br label %cond.end, !dbg !11451

cond.false:                                       ; preds = %if.then33
  br label %cond.end, !dbg !11451

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11451
  br label %if.end45, !dbg !11452

if.else36:                                        ; preds = %if.else29
  store i8 1, i8* %reg_ok, align 1, !dbg !11453
  %44 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11455
  %target_available37 = getelementptr inbounds %struct._expr, %struct._expr* %44, i32 0, i32 11, !dbg !11455
  %45 = load i8, i8* %target_available37, align 8, !dbg !11455
  %conv38 = sext i8 %45 to i32, !dbg !11455
  %cmp39 = icmp ne i32 %conv38, 0, !dbg !11455
  br i1 %cmp39, label %cond.false42, label %cond.true41, !dbg !11455

cond.true41:                                      ; preds = %if.else36
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1777, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11455
  br label %cond.end43, !dbg !11455

cond.false42:                                     ; preds = %if.else36
  br label %cond.end43, !dbg !11455

cond.end43:                                       ; preds = %cond.false42, %cond.true41
  %cond44 = phi i32 [ 0, %cond.true41 ], [ 0, %cond.false42 ], !dbg !11455
  br label %if.end45

if.end45:                                         ; preds = %cond.end43, %cond.end
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end28
  call void @_list_clear(%struct._list_node** %original_insns), !dbg !11456
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs, align 8, !dbg !11457
  call void @return_regset_to_pool(%struct.bitmap_head_def* %46), !dbg !11458
  %47 = load i8, i8* %reg_ok, align 1, !dbg !11459
  store i8 %47, i8* %retval, align 1, !dbg !11460
  br label %return, !dbg !11460

return:                                           ; preds = %if.end46, %if.then
  %48 = load i8, i8* %retval, align 1, !dbg !11461
  ret i8 %48, !dbg !11461
}

declare dso_local i32 @tick_check_p(%struct._expr*, %struct.deps*, %struct._fence*) #2

declare dso_local i8* @xrecalloc(i8*, i64, i64, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_expr_t_base_iterate(%struct.VEC_expr_t_base* %vec_, i32 %ix_, %struct._expr** %ptr) #0 !dbg !11462 {
entry:
  %retval = alloca i32, align 4
  %vec_.addr = alloca %struct.VEC_expr_t_base*, align 8
  %ix_.addr = alloca i32, align 4
  %ptr.addr = alloca %struct._expr**, align 8
  store %struct.VEC_expr_t_base* %vec_, %struct.VEC_expr_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_base** %vec_.addr, metadata !11465, metadata !DIExpression()), !dbg !11466
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !11467, metadata !DIExpression()), !dbg !11466
  store %struct._expr** %ptr, %struct._expr*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr*** %ptr.addr, metadata !11468, metadata !DIExpression()), !dbg !11466
  %0 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11469
  %tobool = icmp ne %struct.VEC_expr_t_base* %0, null, !dbg !11469
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !11469

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !11469
  %2 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11469
  %num = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %2, i32 0, i32 0, !dbg !11469
  %3 = load i32, i32* %num, align 8, !dbg !11469
  %cmp = icmp ult i32 %1, %3, !dbg !11469
  br i1 %cmp, label %if.then, label %if.else, !dbg !11466

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11471
  %vec = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %4, i32 0, i32 2, !dbg !11471
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !11471
  %idxprom = zext i32 %5 to i64, !dbg !11471
  %arrayidx = getelementptr inbounds [1 x %struct._expr*], [1 x %struct._expr*]* %vec, i64 0, i64 %idxprom, !dbg !11471
  %6 = load %struct._expr*, %struct._expr** %arrayidx, align 8, !dbg !11471
  %7 = load %struct._expr**, %struct._expr*** %ptr.addr, align 8, !dbg !11471
  store %struct._expr* %6, %struct._expr** %7, align 8, !dbg !11471
  store i32 1, i32* %retval, align 4, !dbg !11471
  br label %return, !dbg !11471

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct._expr**, %struct._expr*** %ptr.addr, align 8, !dbg !11473
  store %struct._expr* null, %struct._expr** %8, align 8, !dbg !11473
  store i32 0, i32* %retval, align 4, !dbg !11473
  br label %return, !dbg !11473

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !11466
  ret i32 %9, !dbg !11466
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_expr_t_heap_reserve(%struct.VEC_expr_t_heap** %vec_, i32 %alloc_) #0 !dbg !11475 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_t_heap**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_expr_t_heap** %vec_, %struct.VEC_expr_t_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_heap*** %vec_.addr, metadata !11478, metadata !DIExpression()), !dbg !11479
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !11480, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !11481, metadata !DIExpression()), !dbg !11479
  %0 = load %struct.VEC_expr_t_heap**, %struct.VEC_expr_t_heap*** %vec_.addr, align 8, !dbg !11479
  %1 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** %0, align 8, !dbg !11479
  %tobool = icmp ne %struct.VEC_expr_t_heap* %1, null, !dbg !11479
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11479

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_expr_t_heap**, %struct.VEC_expr_t_heap*** %vec_.addr, align 8, !dbg !11479
  %3 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** %2, align 8, !dbg !11479
  %base = getelementptr inbounds %struct.VEC_expr_t_heap, %struct.VEC_expr_t_heap* %3, i32 0, i32 0, !dbg !11479
  br label %cond.end, !dbg !11479

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11479

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_expr_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !11479
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !11479
  %call = call i32 @VEC_expr_t_base_space(%struct.VEC_expr_t_base* %cond, i32 %4), !dbg !11479
  %tobool1 = icmp ne i32 %call, 0, !dbg !11479
  %lnot = xor i1 %tobool1, true, !dbg !11479
  %lnot.ext = zext i1 %lnot to i32, !dbg !11479
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !11479
  %5 = load i32, i32* %extend, align 4, !dbg !11482
  %tobool2 = icmp ne i32 %5, 0, !dbg !11482
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11479

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_expr_t_heap**, %struct.VEC_expr_t_heap*** %vec_.addr, align 8, !dbg !11482
  %7 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** %6, align 8, !dbg !11482
  %8 = bitcast %struct.VEC_expr_t_heap* %7 to i8*, !dbg !11482
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !11482
  %call3 = call i8* @vec_heap_p_reserve(i8* %8, i32 %9), !dbg !11482
  %10 = bitcast i8* %call3 to %struct.VEC_expr_t_heap*, !dbg !11482
  %11 = load %struct.VEC_expr_t_heap**, %struct.VEC_expr_t_heap*** %vec_.addr, align 8, !dbg !11482
  store %struct.VEC_expr_t_heap* %10, %struct.VEC_expr_t_heap** %11, align 8, !dbg !11482
  br label %if.end, !dbg !11482

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !11479
  ret i32 %12, !dbg !11479
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._expr** @VEC_expr_t_base_quick_push(%struct.VEC_expr_t_base* %vec_, %struct._expr* %obj_) #0 !dbg !11484 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_t_base*, align 8
  %obj_.addr = alloca %struct._expr*, align 8
  %slot_ = alloca %struct._expr**, align 8
  store %struct.VEC_expr_t_base* %vec_, %struct.VEC_expr_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_base** %vec_.addr, metadata !11487, metadata !DIExpression()), !dbg !11488
  store %struct._expr* %obj_, %struct._expr** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %obj_.addr, metadata !11489, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.declare(metadata %struct._expr*** %slot_, metadata !11490, metadata !DIExpression()), !dbg !11488
  %0 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11488
  %num = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %0, i32 0, i32 0, !dbg !11488
  %1 = load i32, i32* %num, align 8, !dbg !11488
  %2 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11488
  %alloc = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %2, i32 0, i32 1, !dbg !11488
  %3 = load i32, i32* %alloc, align 4, !dbg !11488
  %cmp = icmp ult i32 %1, %3, !dbg !11488
  %conv = zext i1 %cmp to i32, !dbg !11488
  %4 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11488
  %vec = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %4, i32 0, i32 2, !dbg !11488
  %5 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11488
  %num1 = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %5, i32 0, i32 0, !dbg !11488
  %6 = load i32, i32* %num1, align 8, !dbg !11488
  %inc = add i32 %6, 1, !dbg !11488
  store i32 %inc, i32* %num1, align 8, !dbg !11488
  %idxprom = zext i32 %6 to i64, !dbg !11488
  %arrayidx = getelementptr inbounds [1 x %struct._expr*], [1 x %struct._expr*]* %vec, i64 0, i64 %idxprom, !dbg !11488
  store %struct._expr** %arrayidx, %struct._expr*** %slot_, align 8, !dbg !11488
  %7 = load %struct._expr*, %struct._expr** %obj_.addr, align 8, !dbg !11488
  %8 = load %struct._expr**, %struct._expr*** %slot_, align 8, !dbg !11488
  store %struct._expr* %7, %struct._expr** %8, align 8, !dbg !11488
  %9 = load %struct._expr**, %struct._expr*** %slot_, align 8, !dbg !11488
  ret %struct._expr** %9, !dbg !11488
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_expr_t_base_space(%struct.VEC_expr_t_base* %vec_, i32 %alloc_) #0 !dbg !11491 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_t_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_expr_t_base* %vec_, %struct.VEC_expr_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_base** %vec_.addr, metadata !11494, metadata !DIExpression()), !dbg !11495
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !11496, metadata !DIExpression()), !dbg !11495
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !11495
  %cmp = icmp sge i32 %0, 0, !dbg !11495
  %conv = zext i1 %cmp to i32, !dbg !11495
  %1 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11495
  %tobool = icmp ne %struct.VEC_expr_t_base* %1, null, !dbg !11495
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11495

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11495
  %alloc = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %2, i32 0, i32 1, !dbg !11495
  %3 = load i32, i32* %alloc, align 4, !dbg !11495
  %4 = load %struct.VEC_expr_t_base*, %struct.VEC_expr_t_base** %vec_.addr, align 8, !dbg !11495
  %num = getelementptr inbounds %struct.VEC_expr_t_base, %struct.VEC_expr_t_base* %4, i32 0, i32 0, !dbg !11495
  %5 = load i32, i32* %num, align 8, !dbg !11495
  %sub = sub i32 %3, %5, !dbg !11495
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !11495
  %cmp1 = icmp uge i32 %sub, %6, !dbg !11495
  %conv2 = zext i1 %cmp1 to i32, !dbg !11495
  br label %cond.end, !dbg !11495

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !11495
  %tobool3 = icmp ne i32 %7, 0, !dbg !11495
  %lnot = xor i1 %tobool3, true, !dbg !11495
  %lnot.ext = zext i1 %lnot to i32, !dbg !11495
  br label %cond.end, !dbg !11495

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !11495
  ret i32 %cond, !dbg !11495
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_vinsn_t_base_iterate(%struct.VEC_vinsn_t_base* %vec_, i32 %ix_, %struct.vinsn_def** %ptr) #0 !dbg !11497 {
entry:
  %retval = alloca i32, align 4
  %vec_.addr = alloca %struct.VEC_vinsn_t_base*, align 8
  %ix_.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.vinsn_def**, align 8
  store %struct.VEC_vinsn_t_base* %vec_, %struct.VEC_vinsn_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_base** %vec_.addr, metadata !11502, metadata !DIExpression()), !dbg !11503
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !11504, metadata !DIExpression()), !dbg !11503
  store %struct.vinsn_def** %ptr, %struct.vinsn_def*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vinsn_def*** %ptr.addr, metadata !11505, metadata !DIExpression()), !dbg !11503
  %0 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !11506
  %tobool = icmp ne %struct.VEC_vinsn_t_base* %0, null, !dbg !11506
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !11506

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !11506
  %2 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !11506
  %num = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %2, i32 0, i32 0, !dbg !11506
  %3 = load i32, i32* %num, align 8, !dbg !11506
  %cmp = icmp ult i32 %1, %3, !dbg !11506
  br i1 %cmp, label %if.then, label %if.else, !dbg !11503

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !11508
  %vec = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %4, i32 0, i32 2, !dbg !11508
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !11508
  %idxprom = zext i32 %5 to i64, !dbg !11508
  %arrayidx = getelementptr inbounds [1 x %struct.vinsn_def*], [1 x %struct.vinsn_def*]* %vec, i64 0, i64 %idxprom, !dbg !11508
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %arrayidx, align 8, !dbg !11508
  %7 = load %struct.vinsn_def**, %struct.vinsn_def*** %ptr.addr, align 8, !dbg !11508
  store %struct.vinsn_def* %6, %struct.vinsn_def** %7, align 8, !dbg !11508
  store i32 1, i32* %retval, align 4, !dbg !11508
  br label %return, !dbg !11508

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.vinsn_def**, %struct.vinsn_def*** %ptr.addr, align 8, !dbg !11510
  store %struct.vinsn_def* null, %struct.vinsn_def** %8, align 8, !dbg !11510
  store i32 0, i32* %retval, align 4, !dbg !11510
  br label %return, !dbg !11510

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !11503
  ret i32 %9, !dbg !11503
}

declare dso_local zeroext i8 @vinsn_equal_p(%struct.vinsn_def*, %struct.vinsn_def*) #2

declare dso_local zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @collect_unavailable_regs_from_bnds(%struct._expr* %expr, %struct._list_node* %bnds, %struct.bitmap_head_def* %used_regs, %struct.reg_rename* %reg_rename_p, %struct._list_node** %original_insns) #0 !dbg !11512 {
entry:
  %expr.addr = alloca %struct._expr*, align 8
  %bnds.addr = alloca %struct._list_node*, align 8
  %used_regs.addr = alloca %struct.bitmap_head_def*, align 8
  %reg_rename_p.addr = alloca %struct.reg_rename*, align 8
  %original_insns.addr = alloca %struct._list_node**, align 8
  %res = alloca i8, align 1
  %orig_ops = alloca %struct._list_node*, align 8
  %bnd = alloca %struct._bnd*, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !11516, metadata !DIExpression()), !dbg !11517
  store %struct._list_node* %bnds, %struct._list_node** %bnds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %bnds.addr, metadata !11518, metadata !DIExpression()), !dbg !11519
  store %struct.bitmap_head_def* %used_regs, %struct.bitmap_head_def** %used_regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %used_regs.addr, metadata !11520, metadata !DIExpression()), !dbg !11521
  store %struct.reg_rename* %reg_rename_p, %struct.reg_rename** %reg_rename_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reg_rename** %reg_rename_p.addr, metadata !11522, metadata !DIExpression()), !dbg !11523
  store %struct._list_node** %original_insns, %struct._list_node*** %original_insns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %original_insns.addr, metadata !11524, metadata !DIExpression()), !dbg !11525
  br label %for.cond, !dbg !11526

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !11527
  %tobool = icmp ne %struct._list_node* %0, null, !dbg !11530
  br i1 %tobool, label %for.body, label %for.end, !dbg !11530

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %res, metadata !11531, metadata !DIExpression()), !dbg !11533
  call void @llvm.dbg.declare(metadata %struct._list_node** %orig_ops, metadata !11534, metadata !DIExpression()), !dbg !11535
  store %struct._list_node* null, %struct._list_node** %orig_ops, align 8, !dbg !11535
  call void @llvm.dbg.declare(metadata %struct._bnd** %bnd, metadata !11536, metadata !DIExpression()), !dbg !11537
  %1 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !11538
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %1, i32 0, i32 1, !dbg !11538
  %bnd1 = bitcast %union.anon.0* %u to %struct._bnd*, !dbg !11538
  store %struct._bnd* %bnd1, %struct._bnd** %bnd, align 8, !dbg !11537
  %2 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !11539
  %av1 = getelementptr inbounds %struct._bnd, %struct._bnd* %2, i32 0, i32 3, !dbg !11539
  %3 = load %struct._list_node*, %struct._list_node** %av1, align 8, !dbg !11539
  %4 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11541
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i32 0, i32 0, !dbg !11541
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11541
  %call = call zeroext i8 @av_set_is_in_p(%struct._list_node* %3, %struct.vinsn_def* %5), !dbg !11542
  %tobool2 = icmp ne i8 %call, 0, !dbg !11542
  br i1 %tobool2, label %if.end, label %if.then, !dbg !11543

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !11544

if.end:                                           ; preds = %for.body
  %6 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !11545
  %7 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11546
  %call3 = call %struct._list_node* @find_sequential_best_exprs(%struct._bnd* %6, %struct._expr* %7, i8 zeroext 0), !dbg !11547
  store %struct._list_node* %call3, %struct._list_node** %orig_ops, align 8, !dbg !11548
  %8 = load %struct._bnd*, %struct._bnd** %bnd, align 8, !dbg !11549
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %8, i32 0, i32 0, !dbg !11549
  %9 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !11549
  %10 = load %struct._list_node*, %struct._list_node** %orig_ops, align 8, !dbg !11550
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs.addr, align 8, !dbg !11551
  %12 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !11552
  %13 = load %struct._list_node**, %struct._list_node*** %original_insns.addr, align 8, !dbg !11553
  %call4 = call zeroext i8 @find_used_regs(%struct.rtx_def* %9, %struct._list_node* %10, %struct.bitmap_head_def* %11, %struct.reg_rename* %12, %struct._list_node** %13), !dbg !11554
  store i8 %call4, i8* %res, align 1, !dbg !11555
  %14 = load i8, i8* %res, align 1, !dbg !11556
  %tobool5 = icmp ne i8 %14, 0, !dbg !11556
  br i1 %tobool5, label %cond.false, label %cond.true, !dbg !11556

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11556
  br label %cond.end, !dbg !11556

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !11556

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11556
  call void @av_set_clear(%struct._list_node** %orig_ops), !dbg !11557
  br label %for.inc, !dbg !11558

for.inc:                                          ; preds = %cond.end, %if.then
  %15 = load %struct._list_node*, %struct._list_node** %bnds.addr, align 8, !dbg !11559
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %15, i32 0, i32 0, !dbg !11559
  %16 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !11559
  store %struct._list_node* %16, %struct._list_node** %bnds.addr, align 8, !dbg !11560
  br label %for.cond, !dbg !11561, !llvm.loop !11562

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11564
}

; Function Attrs: noinline nounwind uwtable
define internal void @verify_target_availability(%struct._expr* %expr, %struct.bitmap_head_def* %used_regs, %struct.reg_rename* %reg_rename_p) #0 !dbg !11565 {
entry:
  %expr.addr = alloca %struct._expr*, align 8
  %used_regs.addr = alloca %struct.bitmap_head_def*, align 8
  %reg_rename_p.addr = alloca %struct.reg_rename*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %regno = alloca i32, align 4
  %mode = alloca i32, align 4
  %target_available = alloca i8, align 1
  %live_available = alloca i8, align 1
  %hard_available = alloca i8, align 1
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !11568, metadata !DIExpression()), !dbg !11569
  store %struct.bitmap_head_def* %used_regs, %struct.bitmap_head_def** %used_regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %used_regs.addr, metadata !11570, metadata !DIExpression()), !dbg !11571
  store %struct.reg_rename* %reg_rename_p, %struct.reg_rename** %reg_rename_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reg_rename** %reg_rename_p.addr, metadata !11572, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11574, metadata !DIExpression()), !dbg !11575
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11576, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !11578, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !11580, metadata !DIExpression()), !dbg !11581
  call void @llvm.dbg.declare(metadata i8* %target_available, metadata !11582, metadata !DIExpression()), !dbg !11583
  call void @llvm.dbg.declare(metadata i8* %live_available, metadata !11584, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.declare(metadata i8* %hard_available, metadata !11586, metadata !DIExpression()), !dbg !11587
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11588
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !11588
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11588
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i32 0, i32 1, !dbg !11588
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 1, !dbg !11588
  %2 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !11588
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !11588
  %bf.load = load i32, i32* %3, align 8, !dbg !11588
  %bf.clear = and i32 %bf.load, 65535, !dbg !11588
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !11588
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !11590

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11591
  %target_available1 = getelementptr inbounds %struct._expr, %struct._expr* %4, i32 0, i32 11, !dbg !11591
  %5 = load i8, i8* %target_available1, align 8, !dbg !11591
  %conv = sext i8 %5 to i32, !dbg !11591
  %cmp2 = icmp slt i32 %conv, 0, !dbg !11592
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11593

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end53, !dbg !11594

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11595
  %call = call i32 @expr_dest_regno(%struct._expr* %6), !dbg !11596
  store i32 %call, i32* %regno, align 4, !dbg !11597
  %7 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11598
  %vinsn4 = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 0, !dbg !11598
  %8 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn4, align 8, !dbg !11598
  %id5 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %8, i32 0, i32 1, !dbg !11598
  %lhs6 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id5, i32 0, i32 1, !dbg !11598
  %9 = load %struct.rtx_def*, %struct.rtx_def** %lhs6, align 8, !dbg !11598
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !11598
  %bf.load7 = load i32, i32* %10, align 8, !dbg !11598
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !11598
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !11598
  store i32 %bf.clear8, i32* %mode, align 4, !dbg !11599
  %11 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11600
  %target_available9 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 11, !dbg !11600
  %12 = load i8, i8* %target_available9, align 8, !dbg !11600
  %conv10 = sext i8 %12 to i32, !dbg !11600
  %cmp11 = icmp eq i32 %conv10, 1, !dbg !11601
  %conv12 = zext i1 %cmp11 to i32, !dbg !11601
  %conv13 = trunc i32 %conv12 to i8, !dbg !11600
  store i8 %conv13, i8* %target_available, align 1, !dbg !11602
  %13 = load i32, i32* @reload_completed, align 4, !dbg !11603
  %tobool = icmp ne i32 %13, 0, !dbg !11603
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11603

cond.true:                                        ; preds = %if.end
  %14 = load i32, i32* %regno, align 4, !dbg !11604
  %idxprom = zext i32 %14 to i64, !dbg !11605
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !11605
  %15 = load i32, i32* %mode, align 4, !dbg !11606
  %idxprom14 = zext i32 %15 to i64, !dbg !11605
  %arrayidx15 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom14, !dbg !11605
  %16 = load i8, i8* %arrayidx15, align 1, !dbg !11605
  %conv16 = zext i8 %16 to i32, !dbg !11605
  br label %cond.end, !dbg !11603

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !11603

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv16, %cond.true ], [ 1, %cond.false ], !dbg !11603
  store i32 %cond, i32* %n, align 4, !dbg !11607
  store i8 1, i8* %hard_available, align 1, !dbg !11608
  store i8 1, i8* %live_available, align 1, !dbg !11609
  store i32 0, i32* %i, align 4, !dbg !11610
  br label %for.cond, !dbg !11612

for.cond:                                         ; preds = %for.inc, %cond.end
  %17 = load i32, i32* %i, align 4, !dbg !11613
  %18 = load i32, i32* %n, align 4, !dbg !11615
  %cmp17 = icmp ult i32 %17, %18, !dbg !11616
  br i1 %cmp17, label %for.body, label %for.end, !dbg !11617

for.body:                                         ; preds = %for.cond
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs.addr, align 8, !dbg !11618
  %20 = load i32, i32* %regno, align 4, !dbg !11621
  %21 = load i32, i32* %i, align 4, !dbg !11622
  %add = add i32 %20, %21, !dbg !11623
  %call19 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %19, i32 %add), !dbg !11624
  %tobool20 = icmp ne i32 %call19, 0, !dbg !11624
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !11625

if.then21:                                        ; preds = %for.body
  store i8 0, i8* %live_available, align 1, !dbg !11626
  br label %if.end22, !dbg !11627

if.end22:                                         ; preds = %if.then21, %for.body
  %22 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !11628
  %unavailable_hard_regs = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %22, i32 0, i32 0, !dbg !11628
  %23 = load i64, i64* %unavailable_hard_regs, align 8, !dbg !11628
  %24 = load i32, i32* %regno, align 4, !dbg !11628
  %25 = load i32, i32* %i, align 4, !dbg !11628
  %add23 = add i32 %24, %25, !dbg !11628
  %sh_prom = zext i32 %add23 to i64, !dbg !11628
  %shl = shl i64 1, %sh_prom, !dbg !11628
  %and = and i64 %23, %shl, !dbg !11628
  %tobool24 = icmp ne i64 %and, 0, !dbg !11628
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !11630

if.then25:                                        ; preds = %if.end22
  store i8 0, i8* %hard_available, align 1, !dbg !11631
  br label %if.end26, !dbg !11632

if.end26:                                         ; preds = %if.then25, %if.end22
  br label %for.inc, !dbg !11633

for.inc:                                          ; preds = %if.end26
  %26 = load i32, i32* %i, align 4, !dbg !11634
  %inc = add i32 %26, 1, !dbg !11634
  store i32 %inc, i32* %i, align 4, !dbg !11634
  br label %for.cond, !dbg !11635, !llvm.loop !11636

for.end:                                          ; preds = %for.cond
  %27 = load i8, i8* %target_available, align 1, !dbg !11638
  %tobool27 = icmp ne i8 %27, 0, !dbg !11638
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !11640

if.then28:                                        ; preds = %for.end
  %28 = load i8, i8* %live_available, align 1, !dbg !11641
  %tobool29 = icmp ne i8 %28, 0, !dbg !11641
  br i1 %tobool29, label %cond.false31, label %cond.true30, !dbg !11641

cond.true30:                                      ; preds = %if.then28
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1597, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11641
  br label %cond.end32, !dbg !11641

cond.false31:                                     ; preds = %if.then28
  br label %cond.end32, !dbg !11641

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ 0, %cond.true30 ], [ 0, %cond.false31 ], !dbg !11641
  br label %if.end53, !dbg !11641

if.else:                                          ; preds = %for.end
  %29 = load i8, i8* @scheduled_something_on_previous_fence, align 1, !dbg !11642
  %conv34 = zext i8 %29 to i32, !dbg !11642
  %tobool35 = icmp ne i32 %conv34, 0, !dbg !11642
  br i1 %tobool35, label %cond.false50, label %lor.lhs.false36, !dbg !11642

lor.lhs.false36:                                  ; preds = %if.else
  %30 = load i8, i8* %live_available, align 1, !dbg !11642
  %tobool37 = icmp ne i8 %30, 0, !dbg !11642
  br i1 %tobool37, label %lor.lhs.false38, label %cond.false50, !dbg !11642

lor.lhs.false38:                                  ; preds = %lor.lhs.false36
  %31 = load i8, i8* %hard_available, align 1, !dbg !11642
  %tobool39 = icmp ne i8 %31, 0, !dbg !11642
  br i1 %tobool39, label %lor.lhs.false40, label %cond.false50, !dbg !11642

lor.lhs.false40:                                  ; preds = %lor.lhs.false38
  %32 = load i32, i32* @reload_completed, align 4, !dbg !11642
  %tobool41 = icmp ne i32 %32, 0, !dbg !11642
  br i1 %tobool41, label %cond.true49, label %land.lhs.true, !dbg !11642

land.lhs.true:                                    ; preds = %lor.lhs.false40
  %33 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !11642
  %crosses_call = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %33, i32 0, i32 2, !dbg !11642
  %34 = load i8, i8* %crosses_call, align 8, !dbg !11642
  %conv42 = zext i8 %34 to i32, !dbg !11642
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !11642
  br i1 %tobool43, label %land.lhs.true44, label %cond.true49, !dbg !11642

land.lhs.true44:                                  ; preds = %land.lhs.true
  %35 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !11642
  %36 = load i32, i32* %regno, align 4, !dbg !11642
  %idxprom45 = zext i32 %36 to i64, !dbg !11642
  %arrayidx46 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %35, i64 %idxprom45, !dbg !11642
  %calls_crossed = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %arrayidx46, i32 0, i32 3, !dbg !11642
  %37 = load i32, i32* %calls_crossed, align 4, !dbg !11642
  %cmp47 = icmp eq i32 %37, 0, !dbg !11642
  br i1 %cmp47, label %cond.false50, label %cond.true49, !dbg !11642

cond.true49:                                      ; preds = %land.lhs.true44, %land.lhs.true, %lor.lhs.false40
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1614, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11642
  br label %cond.end51, !dbg !11642

cond.false50:                                     ; preds = %land.lhs.true44, %lor.lhs.false38, %lor.lhs.false36, %if.else
  br label %cond.end51, !dbg !11642

cond.end51:                                       ; preds = %cond.false50, %cond.true49
  %cond52 = phi i32 [ 0, %cond.true49 ], [ 0, %cond.false50 ], !dbg !11642
  br label %if.end53

if.end53:                                         ; preds = %if.then, %cond.end51, %cond.end32
  ret void, !dbg !11643
}

declare dso_local void @reg_set_to_hard_reg_set(i64*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @choose_best_reg(i64 %hard_regs_used, %struct.reg_rename* %reg_rename_p, %struct._list_node* %original_insns, i8* %is_orig_reg_p_ptr) #0 !dbg !11644 {
entry:
  %hard_regs_used.addr = alloca i64, align 8
  %reg_rename_p.addr = alloca %struct.reg_rename*, align 8
  %original_insns.addr = alloca %struct._list_node*, align 8
  %is_orig_reg_p_ptr.addr = alloca i8*, align 8
  %best_reg = alloca %struct.rtx_def*, align 8
  store i64 %hard_regs_used, i64* %hard_regs_used.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hard_regs_used.addr, metadata !11647, metadata !DIExpression()), !dbg !11648
  store %struct.reg_rename* %reg_rename_p, %struct.reg_rename** %reg_rename_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reg_rename** %reg_rename_p.addr, metadata !11649, metadata !DIExpression()), !dbg !11650
  store %struct._list_node* %original_insns, %struct._list_node** %original_insns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %original_insns.addr, metadata !11651, metadata !DIExpression()), !dbg !11652
  store i8* %is_orig_reg_p_ptr, i8** %is_orig_reg_p_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %is_orig_reg_p_ptr.addr, metadata !11653, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %best_reg, metadata !11655, metadata !DIExpression()), !dbg !11656
  %0 = load i64, i64* %hard_regs_used.addr, align 8, !dbg !11657
  %1 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !11658
  %2 = load %struct._list_node*, %struct._list_node** %original_insns.addr, align 8, !dbg !11659
  %3 = load i8*, i8** %is_orig_reg_p_ptr.addr, align 8, !dbg !11660
  %call = call %struct.rtx_def* @choose_best_reg_1(i64 %0, %struct.reg_rename* %1, %struct._list_node* %2, i8* %3), !dbg !11661
  store %struct.rtx_def* %call, %struct.rtx_def** %best_reg, align 8, !dbg !11656
  %4 = load %struct.rtx_def*, %struct.rtx_def** %best_reg, align 8, !dbg !11662
  %cmp = icmp eq %struct.rtx_def* %4, null, !dbg !11662
  br i1 %cmp, label %cond.false, label %lor.lhs.false, !dbg !11662

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 4), align 8, !dbg !11662
  %6 = load %struct.rtx_def*, %struct.rtx_def** %best_reg, align 8, !dbg !11662
  %call1 = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !11662
  %sh_prom = zext i32 %call1 to i64, !dbg !11662
  %shl = shl i64 1, %sh_prom, !dbg !11662
  %and = and i64 %5, %shl, !dbg !11662
  %tobool = icmp ne i64 %and, 0, !dbg !11662
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !11662

cond.true:                                        ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1475, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11662
  br label %cond.end, !dbg !11662

cond.false:                                       ; preds = %lor.lhs.false, %entry
  br label %cond.end, !dbg !11662

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11662
  %7 = load %struct.rtx_def*, %struct.rtx_def** %best_reg, align 8, !dbg !11663
  ret %struct.rtx_def* %7, !dbg !11664
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @choose_best_pseudo_reg(%struct.bitmap_head_def* %used_regs, %struct.reg_rename* %reg_rename_p, %struct._list_node* %original_insns, i8* %is_orig_reg_p_ptr) #0 !dbg !11665 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %used_regs.addr = alloca %struct.bitmap_head_def*, align 8
  %reg_rename_p.addr = alloca %struct.reg_rename*, align 8
  %original_insns.addr = alloca %struct._list_node*, align 8
  %is_orig_reg_p_ptr.addr = alloca i8*, align 8
  %i = alloca %struct._list_iterator, align 8
  %def = alloca %struct._def*, align 8
  %mode = alloca i32, align 4
  %bad_hard_regs = alloca i8, align 1
  %dest = alloca %struct.rtx_def*, align 8
  %orig_regno = alloca i32, align 4
  %new_reg = alloca %struct.rtx_def*, align 8
  store %struct.bitmap_head_def* %used_regs, %struct.bitmap_head_def** %used_regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %used_regs.addr, metadata !11668, metadata !DIExpression()), !dbg !11669
  store %struct.reg_rename* %reg_rename_p, %struct.reg_rename** %reg_rename_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reg_rename** %reg_rename_p.addr, metadata !11670, metadata !DIExpression()), !dbg !11671
  store %struct._list_node* %original_insns, %struct._list_node** %original_insns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %original_insns.addr, metadata !11672, metadata !DIExpression()), !dbg !11673
  store i8* %is_orig_reg_p_ptr, i8** %is_orig_reg_p_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %is_orig_reg_p_ptr.addr, metadata !11674, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %i, metadata !11676, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.declare(metadata %struct._def** %def, metadata !11679, metadata !DIExpression()), !dbg !11682
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !11683, metadata !DIExpression()), !dbg !11684
  store i32 0, i32* %mode, align 4, !dbg !11684
  call void @llvm.dbg.declare(metadata i8* %bad_hard_regs, metadata !11685, metadata !DIExpression()), !dbg !11686
  store i8 0, i8* %bad_hard_regs, align 1, !dbg !11686
  %0 = load i32, i32* @reload_completed, align 4, !dbg !11687
  %tobool = icmp ne i32 %0, 0, !dbg !11687
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11687

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1500, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11687
  br label %cond.end, !dbg !11687

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11687

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11687
  %1 = load i8*, i8** %is_orig_reg_p_ptr.addr, align 8, !dbg !11688
  store i8 1, i8* %1, align 1, !dbg !11689
  call void @_list_iter_start(%struct._list_iterator* %i, %struct._list_node** %original_insns.addr, i8 zeroext 0), !dbg !11690
  br label %for.cond, !dbg !11690

for.cond:                                         ; preds = %for.inc, %cond.end
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i32 0, i32 0, !dbg !11692
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !11692
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !11692
  %call = call zeroext i8 @_list_iter_cond_def(%struct._list_node* %3, %struct._def** %def), !dbg !11692
  %tobool1 = icmp ne i8 %call, 0, !dbg !11690
  br i1 %tobool1, label %for.body, label %for.end, !dbg !11690

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest, metadata !11694, metadata !DIExpression()), !dbg !11696
  %4 = load %struct._def*, %struct._def** %def, align 8, !dbg !11697
  %orig_insn = getelementptr inbounds %struct._def, %struct._def* %4, i32 0, i32 0, !dbg !11697
  %5 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !11697
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !11697
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11697
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !11697
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !11697
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11697
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !11697
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !11697
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 0, !dbg !11697
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !11697
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !11697
  store %struct.rtx_def* %7, %struct.rtx_def** %dest, align 8, !dbg !11696
  call void @llvm.dbg.declare(metadata i32* %orig_regno, metadata !11698, metadata !DIExpression()), !dbg !11699
  %8 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !11700
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !11700
  %bf.load = load i32, i32* %9, align 8, !dbg !11700
  %bf.clear = and i32 %bf.load, 65535, !dbg !11700
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !11700
  br i1 %cmp, label %cond.false7, label %cond.true6, !dbg !11700

cond.true6:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1510, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11700
  br label %cond.end8, !dbg !11700

cond.false7:                                      ; preds = %for.body
  br label %cond.end8, !dbg !11700

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi i32 [ 0, %cond.true6 ], [ 0, %cond.false7 ], !dbg !11700
  %10 = load i32, i32* %mode, align 4, !dbg !11701
  %cmp10 = icmp eq i32 %10, 0, !dbg !11703
  br i1 %cmp10, label %if.then, label %if.else, !dbg !11704

if.then:                                          ; preds = %cond.end8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !11705
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !11705
  %bf.load11 = load i32, i32* %12, align 8, !dbg !11705
  %bf.lshr = lshr i32 %bf.load11, 16, !dbg !11705
  %bf.clear12 = and i32 %bf.lshr, 255, !dbg !11705
  store i32 %bf.clear12, i32* %mode, align 4, !dbg !11706
  br label %if.end, !dbg !11707

if.else:                                          ; preds = %cond.end8
  %13 = load i32, i32* %mode, align 4, !dbg !11708
  %14 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !11708
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !11708
  %bf.load13 = load i32, i32* %15, align 8, !dbg !11708
  %bf.lshr14 = lshr i32 %bf.load13, 16, !dbg !11708
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !11708
  %cmp16 = icmp eq i32 %13, %bf.clear15, !dbg !11708
  br i1 %cmp16, label %cond.false18, label %cond.true17, !dbg !11708

cond.true17:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1516, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11708
  br label %cond.end19, !dbg !11708

cond.false18:                                     ; preds = %if.else
  br label %cond.end19, !dbg !11708

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond20 = phi i32 [ 0, %cond.true17 ], [ 0, %cond.false18 ], !dbg !11708
  br label %if.end

if.end:                                           ; preds = %cond.end19, %if.then
  %16 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !11709
  %call21 = call i32 @rhs_regno(%struct.rtx_def* %16), !dbg !11709
  store i32 %call21, i32* %orig_regno, align 4, !dbg !11710
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs.addr, align 8, !dbg !11711
  %18 = load i32, i32* %orig_regno, align 4, !dbg !11711
  %call22 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %17, i32 %18), !dbg !11711
  %tobool23 = icmp ne i32 %call22, 0, !dbg !11711
  br i1 %tobool23, label %if.end44, label %if.then24, !dbg !11713

if.then24:                                        ; preds = %if.end
  %19 = load i32, i32* %orig_regno, align 4, !dbg !11714
  %cmp25 = icmp slt i32 %19, 53, !dbg !11717
  br i1 %cmp25, label %if.then26, label %if.else42, !dbg !11718

if.then26:                                        ; preds = %if.then24
  %20 = load i32, i32* %orig_regno, align 4, !dbg !11719
  %call27 = call zeroext i8 @df_regs_ever_live_p(i32 %20), !dbg !11719
  %tobool28 = icmp ne i8 %call27, 0, !dbg !11719
  br i1 %tobool28, label %cond.false30, label %cond.true29, !dbg !11719

cond.true29:                                      ; preds = %if.then26
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1523, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11719
  br label %cond.end31, !dbg !11719

cond.false30:                                     ; preds = %if.then26
  br label %cond.end31, !dbg !11719

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond32 = phi i32 [ 0, %cond.true29 ], [ 0, %cond.false30 ], !dbg !11719
  %21 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !11721
  %unavailable_hard_regs = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %21, i32 0, i32 0, !dbg !11721
  %22 = load i64, i64* %unavailable_hard_regs, align 8, !dbg !11721
  %23 = load i32, i32* %orig_regno, align 4, !dbg !11721
  %sh_prom = zext i32 %23 to i64, !dbg !11721
  %shl = shl i64 1, %sh_prom, !dbg !11721
  %and = and i64 %22, %shl, !dbg !11721
  %tobool33 = icmp ne i64 %and, 0, !dbg !11721
  br i1 %tobool33, label %if.end41, label %if.then34, !dbg !11723

if.then34:                                        ; preds = %cond.end31
  %24 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !11724
  %crosses_call = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %24, i32 0, i32 2, !dbg !11727
  %25 = load i8, i8* %crosses_call, align 8, !dbg !11727
  %tobool35 = icmp ne i8 %25, 0, !dbg !11724
  br i1 %tobool35, label %lor.lhs.false, label %if.then38, !dbg !11728

lor.lhs.false:                                    ; preds = %if.then34
  %26 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !11729
  %27 = load i32, i32* %orig_regno, align 4, !dbg !11729
  %idxprom = sext i32 %27 to i64, !dbg !11729
  %arrayidx36 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %26, i64 %idxprom, !dbg !11729
  %calls_crossed = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %arrayidx36, i32 0, i32 3, !dbg !11729
  %28 = load i32, i32* %calls_crossed, align 4, !dbg !11729
  %cmp37 = icmp sgt i32 %28, 0, !dbg !11730
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !11731

if.then38:                                        ; preds = %lor.lhs.false, %if.then34
  %29 = load i32, i32* %mode, align 4, !dbg !11732
  %30 = load i32, i32* %orig_regno, align 4, !dbg !11733
  %call39 = call %struct.rtx_def* @gen_rtx_REG(i32 %29, i32 %30), !dbg !11734
  store %struct.rtx_def* %call39, %struct.rtx_def** %retval, align 8, !dbg !11735
  br label %return, !dbg !11735

if.end40:                                         ; preds = %lor.lhs.false
  br label %if.end41, !dbg !11736

if.end41:                                         ; preds = %if.end40, %cond.end31
  store i8 1, i8* %bad_hard_regs, align 1, !dbg !11737
  br label %if.end43, !dbg !11738

if.else42:                                        ; preds = %if.then24
  %31 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !11739
  store %struct.rtx_def* %31, %struct.rtx_def** %retval, align 8, !dbg !11740
  br label %return, !dbg !11740

if.end43:                                         ; preds = %if.end41
  br label %if.end44, !dbg !11741

if.end44:                                         ; preds = %if.end43, %if.end
  br label %for.inc, !dbg !11742

for.inc:                                          ; preds = %if.end44
  call void @_list_iter_next(%struct._list_iterator* %i), !dbg !11692
  br label %for.cond, !dbg !11692, !llvm.loop !11743

for.end:                                          ; preds = %for.cond
  %32 = load i8*, i8** %is_orig_reg_p_ptr.addr, align 8, !dbg !11745
  store i8 0, i8* %32, align 1, !dbg !11746
  %33 = load i8, i8* %bad_hard_regs, align 1, !dbg !11747
  %tobool45 = icmp ne i8 %33, 0, !dbg !11747
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !11749

if.then46:                                        ; preds = %for.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !11750
  br label %return, !dbg !11750

if.end47:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_reg, metadata !11751, metadata !DIExpression()), !dbg !11753
  %34 = load i32, i32* %mode, align 4, !dbg !11754
  %call48 = call %struct.rtx_def* @gen_reg_rtx(i32 %34), !dbg !11755
  store %struct.rtx_def* %call48, %struct.rtx_def** %new_reg, align 8, !dbg !11753
  %35 = load i32, i32* %mode, align 4, !dbg !11756
  %cmp49 = icmp ne i32 %35, 0, !dbg !11756
  br i1 %cmp49, label %cond.false51, label %cond.true50, !dbg !11756

cond.true50:                                      ; preds = %if.end47
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1557, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11756
  br label %cond.end52, !dbg !11756

cond.false51:                                     ; preds = %if.end47
  br label %cond.end52, !dbg !11756

cond.end52:                                       ; preds = %cond.false51, %cond.true50
  %cond53 = phi i32 [ 0, %cond.true50 ], [ 0, %cond.false51 ], !dbg !11756
  %call54 = call i32 @max_reg_num(), !dbg !11757
  store i32 %call54, i32* @max_regno, align 4, !dbg !11758
  call void @maybe_extend_reg_info_p(), !dbg !11759
  %36 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !11760
  %crosses_call55 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %36, i32 0, i32 2, !dbg !11761
  %37 = load i8, i8* %crosses_call55, align 8, !dbg !11761
  %conv = zext i8 %37 to i32, !dbg !11760
  %tobool56 = icmp ne i32 %conv, 0, !dbg !11760
  %38 = zext i1 %tobool56 to i64, !dbg !11760
  %cond57 = select i1 %tobool56, i32 1, i32 0, !dbg !11760
  %39 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !11762
  %40 = load %struct.rtx_def*, %struct.rtx_def** %new_reg, align 8, !dbg !11762
  %call58 = call i32 @rhs_regno(%struct.rtx_def* %40), !dbg !11762
  %idxprom59 = zext i32 %call58 to i64, !dbg !11762
  %arrayidx60 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %39, i64 %idxprom59, !dbg !11762
  %calls_crossed61 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %arrayidx60, i32 0, i32 3, !dbg !11762
  store i32 %cond57, i32* %calls_crossed61, align 4, !dbg !11763
  %41 = load %struct.rtx_def*, %struct.rtx_def** %new_reg, align 8, !dbg !11764
  store %struct.rtx_def* %41, %struct.rtx_def** %retval, align 8, !dbg !11765
  br label %return, !dbg !11765

return:                                           ; preds = %cond.end52, %if.then46, %if.else42, %if.then38
  %42 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !11766
  ret %struct.rtx_def* %42, !dbg !11766
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @try_replace_dest_reg(%struct._list_node* %orig_insns, %struct.rtx_def* %best_reg, %struct._expr* %expr) #0 !dbg !11767 {
entry:
  %retval = alloca i8, align 1
  %orig_insns.addr = alloca %struct._list_node*, align 8
  %best_reg.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %struct._expr*, align 8
  %orig_insn = alloca %struct.rtx_def*, align 8
  store %struct._list_node* %orig_insns, %struct._list_node** %orig_insns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %orig_insns.addr, metadata !11770, metadata !DIExpression()), !dbg !11771
  store %struct.rtx_def* %best_reg, %struct.rtx_def** %best_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %best_reg.addr, metadata !11772, metadata !DIExpression()), !dbg !11773
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !11774, metadata !DIExpression()), !dbg !11775
  br label %for.cond, !dbg !11776

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct._list_node*, %struct._list_node** %orig_insns.addr, align 8, !dbg !11777
  %tobool = icmp ne %struct._list_node* %0, null, !dbg !11780
  br i1 %tobool, label %for.body, label %for.end, !dbg !11780

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %orig_insn, metadata !11781, metadata !DIExpression()), !dbg !11783
  %1 = load %struct._list_node*, %struct._list_node** %orig_insns.addr, align 8, !dbg !11784
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %1, i32 0, i32 1, !dbg !11784
  %def = bitcast %union.anon.0* %u to %struct._def*, !dbg !11784
  %orig_insn1 = getelementptr inbounds %struct._def, %struct._def* %def, i32 0, i32 0, !dbg !11785
  %2 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn1, align 8, !dbg !11785
  store %struct.rtx_def* %2, %struct.rtx_def** %orig_insn, align 8, !dbg !11783
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11786
  %tobool2 = icmp ne %struct.VEC_sel_insn_data_def_heap* %3, null, !dbg !11786
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !11786

cond.true:                                        ; preds = %for.body
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11786
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i32 0, i32 0, !dbg !11786
  br label %cond.end, !dbg !11786

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !11786

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !11786
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11786
  %tobool3 = icmp ne %struct.VEC_int_heap* %5, null, !dbg !11786
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !11786

cond.true4:                                       ; preds = %cond.end
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11786
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i32 0, i32 0, !dbg !11786
  br label %cond.end7, !dbg !11786

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !11786

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi %struct.VEC_int_base* [ %base5, %cond.true4 ], [ null, %cond.false6 ], !dbg !11786
  %7 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !11786
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !11786
  %fld = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !11786
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !11786
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !11786
  %8 = load i32, i32* %rt_int, align 8, !dbg !11786
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond8, i32 %8), !dbg !11786
  %call10 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !11786
  %expr11 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call10, i32 0, i32 0, !dbg !11786
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr11, i32 0, i32 0, !dbg !11786
  %9 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11786
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %9, i32 0, i32 1, !dbg !11786
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !11786
  %10 = load i32, i32* %type, align 8, !dbg !11786
  %cmp = icmp eq i32 %10, 23, !dbg !11786
  br i1 %cmp, label %cond.false13, label %cond.true12, !dbg !11786

cond.true12:                                      ; preds = %cond.end7
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1663, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11786
  br label %cond.end14, !dbg !11786

cond.false13:                                     ; preds = %cond.end7
  br label %cond.end14, !dbg !11786

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i32 [ 0, %cond.true12 ], [ 0, %cond.false13 ], !dbg !11786
  %11 = load %struct.rtx_def*, %struct.rtx_def** %best_reg.addr, align 8, !dbg !11787
  %call16 = call i32 @rhs_regno(%struct.rtx_def* %11), !dbg !11787
  %12 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11789
  %tobool17 = icmp ne %struct.VEC_sel_insn_data_def_heap* %12, null, !dbg !11789
  br i1 %tobool17, label %cond.true18, label %cond.false20, !dbg !11789

cond.true18:                                      ; preds = %cond.end14
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !11789
  %base19 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %13, i32 0, i32 0, !dbg !11789
  br label %cond.end21, !dbg !11789

cond.false20:                                     ; preds = %cond.end14
  br label %cond.end21, !dbg !11789

cond.end21:                                       ; preds = %cond.false20, %cond.true18
  %cond22 = phi %struct.VEC_sel_insn_data_def_base* [ %base19, %cond.true18 ], [ null, %cond.false20 ], !dbg !11789
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11789
  %tobool23 = icmp ne %struct.VEC_int_heap* %14, null, !dbg !11789
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !11789

cond.true24:                                      ; preds = %cond.end21
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !11789
  %base25 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %15, i32 0, i32 0, !dbg !11789
  br label %cond.end27, !dbg !11789

cond.false26:                                     ; preds = %cond.end21
  br label %cond.end27, !dbg !11789

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi %struct.VEC_int_base* [ %base25, %cond.true24 ], [ null, %cond.false26 ], !dbg !11789
  %16 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !11789
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !11789
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !11789
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !11789
  %rt_int32 = bitcast %union.rtunion_def* %arrayidx31 to i32*, !dbg !11789
  %17 = load i32, i32* %rt_int32, align 8, !dbg !11789
  %call33 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond28, i32 %17), !dbg !11789
  %call34 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond22, i32 %call33), !dbg !11789
  %expr35 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call34, i32 0, i32 0, !dbg !11789
  %vinsn36 = getelementptr inbounds %struct._expr, %struct._expr* %expr35, i32 0, i32 0, !dbg !11789
  %18 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn36, align 8, !dbg !11789
  %id37 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %18, i32 0, i32 1, !dbg !11789
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id37, i32 0, i32 1, !dbg !11789
  %19 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !11789
  %call38 = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !11789
  %cmp39 = icmp ne i32 %call16, %call38, !dbg !11790
  br i1 %cmp39, label %land.lhs.true, label %if.end, !dbg !11791

land.lhs.true:                                    ; preds = %cond.end27
  %20 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !11792
  %21 = load %struct.rtx_def*, %struct.rtx_def** %best_reg.addr, align 8, !dbg !11793
  %call40 = call zeroext i8 @replace_src_with_reg_ok_p(%struct.rtx_def* %20, %struct.rtx_def* %21), !dbg !11794
  %tobool41 = icmp ne i8 %call40, 0, !dbg !11794
  br i1 %tobool41, label %lor.lhs.false, label %if.then, !dbg !11795

lor.lhs.false:                                    ; preds = %land.lhs.true
  %22 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !11796
  %23 = load %struct.rtx_def*, %struct.rtx_def** %best_reg.addr, align 8, !dbg !11797
  %call42 = call zeroext i8 @replace_dest_with_reg_ok_p(%struct.rtx_def* %22, %struct.rtx_def* %23), !dbg !11798
  %tobool43 = icmp ne i8 %call42, 0, !dbg !11798
  br i1 %tobool43, label %if.end, label %if.then, !dbg !11799

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !11800
  br label %return, !dbg !11800

if.end:                                           ; preds = %lor.lhs.false, %cond.end27
  br label %for.inc, !dbg !11801

for.inc:                                          ; preds = %if.end
  %24 = load %struct._list_node*, %struct._list_node** %orig_insns.addr, align 8, !dbg !11802
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %24, i32 0, i32 0, !dbg !11802
  %25 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !11802
  store %struct._list_node* %25, %struct._list_node** %orig_insns.addr, align 8, !dbg !11803
  br label %for.cond, !dbg !11804, !llvm.loop !11805

for.end:                                          ; preds = %for.cond
  %26 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11807
  %call44 = call i32 @expr_dest_regno(%struct._expr* %26), !dbg !11809
  %27 = load %struct.rtx_def*, %struct.rtx_def** %best_reg.addr, align 8, !dbg !11810
  %call45 = call i32 @rhs_regno(%struct.rtx_def* %27), !dbg !11810
  %cmp46 = icmp ne i32 %call44, %call45, !dbg !11811
  br i1 %cmp46, label %if.then47, label %if.else, !dbg !11812

if.then47:                                        ; preds = %for.end
  %28 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11813
  %29 = load %struct.rtx_def*, %struct.rtx_def** %best_reg.addr, align 8, !dbg !11814
  call void @replace_dest_with_reg_in_expr(%struct._expr* %28, %struct.rtx_def* %29), !dbg !11815
  br label %if.end48, !dbg !11815

if.else:                                          ; preds = %for.end
  %30 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !11816
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %30, i32 0, i32 11, !dbg !11816
  store i8 1, i8* %target_available, align 8, !dbg !11817
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then47
  store i8 1, i8* %retval, align 1, !dbg !11818
  br label %return, !dbg !11818

return:                                           ; preds = %if.end48, %if.then
  %31 = load i8, i8* %retval, align 1, !dbg !11819
  ret i8 %31, !dbg !11819
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vinsn_writes_one_of_regs_p(%struct.vinsn_def* %vi, %struct.bitmap_head_def* %used_regs, i64 %unavailable_hard_regs) #0 !dbg !11820 {
entry:
  %retval = alloca i8, align 1
  %vi.addr = alloca %struct.vinsn_def*, align 8
  %used_regs.addr = alloca %struct.bitmap_head_def*, align 8
  %unavailable_hard_regs.addr = alloca i64, align 8
  %regno = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  store %struct.vinsn_def* %vi, %struct.vinsn_def** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vi.addr, metadata !11823, metadata !DIExpression()), !dbg !11824
  store %struct.bitmap_head_def* %used_regs, %struct.bitmap_head_def** %used_regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %used_regs.addr, metadata !11825, metadata !DIExpression()), !dbg !11826
  store i64 %unavailable_hard_regs, i64* %unavailable_hard_regs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %unavailable_hard_regs.addr, metadata !11827, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !11829, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %rsi, metadata !11831, metadata !DIExpression()), !dbg !11833
  %0 = load %struct.vinsn_def*, %struct.vinsn_def** %vi.addr, align 8, !dbg !11834
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %0, i32 0, i32 1, !dbg !11834
  %reg_sets = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 3, !dbg !11834
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !11834
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %1, i32 0, i32* %regno), !dbg !11834
  br label %for.cond, !dbg !11834

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %regno), !dbg !11836
  %tobool = icmp ne i8 %call, 0, !dbg !11834
  br i1 %tobool, label %for.body, label %for.end, !dbg !11834

for.body:                                         ; preds = %for.cond
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs.addr, align 8, !dbg !11838
  %3 = load i32, i32* %regno, align 4, !dbg !11838
  %call1 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3), !dbg !11838
  %tobool2 = icmp ne i32 %call1, 0, !dbg !11838
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11841

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !11842
  br label %return, !dbg !11842

if.end:                                           ; preds = %for.body
  %4 = load i32, i32* %regno, align 4, !dbg !11843
  %cmp = icmp ult i32 %4, 53, !dbg !11843
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !11845

land.lhs.true:                                    ; preds = %if.end
  %5 = load i64, i64* %unavailable_hard_regs.addr, align 8, !dbg !11846
  %6 = load i32, i32* %regno, align 4, !dbg !11846
  %sh_prom = zext i32 %6 to i64, !dbg !11846
  %shl = shl i64 1, %sh_prom, !dbg !11846
  %and = and i64 %5, %shl, !dbg !11846
  %tobool3 = icmp ne i64 %and, 0, !dbg !11846
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !11847

if.then4:                                         ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !11848
  br label %return, !dbg !11848

if.end5:                                          ; preds = %land.lhs.true, %if.end
  br label %for.inc, !dbg !11849

for.inc:                                          ; preds = %if.end5
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %regno), !dbg !11836
  br label %for.cond, !dbg !11836, !llvm.loop !11850

for.end:                                          ; preds = %for.cond
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vi.addr, align 8, !dbg !11852
  %id6 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i32 0, i32 1, !dbg !11852
  %reg_clobbers = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id6, i32 0, i32 4, !dbg !11852
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_clobbers, align 8, !dbg !11852
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %8, i32 0, i32* %regno), !dbg !11852
  br label %for.cond7, !dbg !11852

for.cond7:                                        ; preds = %for.inc23, %for.end
  %call8 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %regno), !dbg !11854
  %tobool9 = icmp ne i8 %call8, 0, !dbg !11852
  br i1 %tobool9, label %for.body10, label %for.end24, !dbg !11852

for.body10:                                       ; preds = %for.cond7
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs.addr, align 8, !dbg !11856
  %10 = load i32, i32* %regno, align 4, !dbg !11856
  %call11 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %9, i32 %10), !dbg !11856
  %tobool12 = icmp ne i32 %call11, 0, !dbg !11856
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !11859

if.then13:                                        ; preds = %for.body10
  store i8 1, i8* %retval, align 1, !dbg !11860
  br label %return, !dbg !11860

if.end14:                                         ; preds = %for.body10
  %11 = load i32, i32* %regno, align 4, !dbg !11861
  %cmp15 = icmp ult i32 %11, 53, !dbg !11861
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !11863

land.lhs.true16:                                  ; preds = %if.end14
  %12 = load i64, i64* %unavailable_hard_regs.addr, align 8, !dbg !11864
  %13 = load i32, i32* %regno, align 4, !dbg !11864
  %sh_prom17 = zext i32 %13 to i64, !dbg !11864
  %shl18 = shl i64 1, %sh_prom17, !dbg !11864
  %and19 = and i64 %12, %shl18, !dbg !11864
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11864
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !11865

if.then21:                                        ; preds = %land.lhs.true16
  store i8 1, i8* %retval, align 1, !dbg !11866
  br label %return, !dbg !11866

if.end22:                                         ; preds = %land.lhs.true16, %if.end14
  br label %for.inc23, !dbg !11867

for.inc23:                                        ; preds = %if.end22
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %regno), !dbg !11854
  br label %for.cond7, !dbg !11854, !llvm.loop !11868

for.end24:                                        ; preds = %for.cond7
  store i8 0, i8* %retval, align 1, !dbg !11870
  br label %return, !dbg !11870

return:                                           ; preds = %for.end24, %if.then21, %if.then13, %if.then4, %if.then
  %14 = load i8, i8* %retval, align 1, !dbg !11871
  ret i8 %14, !dbg !11871
}

; Function Attrs: noinline nounwind uwtable
define internal void @_list_clear(%struct._list_node** %l) #0 !dbg !11872 {
entry:
  %l.addr = alloca %struct._list_node**, align 8
  store %struct._list_node** %l, %struct._list_node*** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %l.addr, metadata !11873, metadata !DIExpression()), !dbg !11874
  br label %while.cond, !dbg !11875

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct._list_node**, %struct._list_node*** %l.addr, align 8, !dbg !11876
  %1 = load %struct._list_node*, %struct._list_node** %0, align 8, !dbg !11877
  %tobool = icmp ne %struct._list_node* %1, null, !dbg !11875
  br i1 %tobool, label %while.body, label %while.end, !dbg !11875

while.body:                                       ; preds = %while.cond
  %2 = load %struct._list_node**, %struct._list_node*** %l.addr, align 8, !dbg !11878
  call void @_list_remove(%struct._list_node** %2), !dbg !11879
  br label %while.cond, !dbg !11875, !llvm.loop !11880

while.end:                                        ; preds = %while.cond
  ret void, !dbg !11882
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._list_node* @find_sequential_best_exprs(%struct._bnd* %bnd, %struct._expr* %expr_vliw, i8 zeroext %for_moveop) #0 !dbg !11883 {
entry:
  %bnd.addr = alloca %struct._bnd*, align 8
  %expr_vliw.addr = alloca %struct._expr*, align 8
  %for_moveop.addr = alloca i8, align 1
  %expr_seq = alloca %struct._list_node*, align 8
  %expr = alloca %struct._expr*, align 8
  %i = alloca %struct._list_iterator, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j59 = alloca i32, align 4
  %__s63 = alloca i8*, align 8
  store %struct._bnd* %bnd, %struct._bnd** %bnd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._bnd** %bnd.addr, metadata !11886, metadata !DIExpression()), !dbg !11887
  store %struct._expr* %expr_vliw, %struct._expr** %expr_vliw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr_vliw.addr, metadata !11888, metadata !DIExpression()), !dbg !11889
  store i8 %for_moveop, i8* %for_moveop.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_moveop.addr, metadata !11890, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.declare(metadata %struct._list_node** %expr_seq, metadata !11892, metadata !DIExpression()), !dbg !11893
  store %struct._list_node* null, %struct._list_node** %expr_seq, align 8, !dbg !11893
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !11894, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %i, metadata !11896, metadata !DIExpression()), !dbg !11897
  %0 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !11898
  %av = getelementptr inbounds %struct._bnd, %struct._bnd* %0, i32 0, i32 2, !dbg !11898
  call void @_list_iter_start(%struct._list_iterator* %i, %struct._list_node** %av, i8 zeroext 0), !dbg !11898
  br label %for.cond, !dbg !11898

for.cond:                                         ; preds = %for.inc, %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i32 0, i32 0, !dbg !11900
  %1 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !11900
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !11900
  %call = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %2, %struct._expr** %expr), !dbg !11900
  %tobool = icmp ne i8 %call, 0, !dbg !11898
  br i1 %tobool, label %for.body, label %for.end, !dbg !11898

for.body:                                         ; preds = %for.cond
  %3 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !11902
  %4 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !11905
  %call1 = call zeroext i8 @equal_after_moveup_path_p(%struct._expr* %3, %struct._list_node* null, %struct._expr* %4), !dbg !11906
  %tobool2 = icmp ne i8 %call1, 0, !dbg !11906
  br i1 %tobool2, label %if.then, label %if.end35, !dbg !11907

if.then:                                          ; preds = %for.body
  %5 = load i8, i8* %for_moveop.addr, align 1, !dbg !11908
  %tobool3 = icmp ne i8 %5, 0, !dbg !11908
  br i1 %tobool3, label %if.then4, label %if.end34, !dbg !11911

if.then4:                                         ; preds = %if.then
  %6 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !11912
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %6, i32 0, i32 0, !dbg !11912
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !11912
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i32 0, i32 1, !dbg !11912
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !11912
  %8 = load i32, i32* %type, align 8, !dbg !11912
  %cmp = icmp eq i32 %8, 23, !dbg !11912
  br i1 %cmp, label %land.lhs.true, label %if.end27, !dbg !11915

land.lhs.true:                                    ; preds = %if.then4
  %9 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !11916
  %vinsn5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 0, !dbg !11916
  %10 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn5, align 8, !dbg !11916
  %id6 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %10, i32 0, i32 1, !dbg !11916
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id6, i32 0, i32 1, !dbg !11916
  %11 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !11916
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !11916
  %bf.load = load i32, i32* %12, align 8, !dbg !11916
  %bf.clear = and i32 %bf.load, 65535, !dbg !11916
  %cmp7 = icmp eq i32 %bf.clear, 37, !dbg !11916
  br i1 %cmp7, label %if.then8, label %if.end27, !dbg !11917

if.then8:                                         ; preds = %land.lhs.true
  %13 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !11918
  %call9 = call i32 @expr_dest_regno(%struct._expr* %13), !dbg !11921
  %14 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !11922
  %call10 = call i32 @expr_dest_regno(%struct._expr* %14), !dbg !11923
  %cmp11 = icmp ne i32 %call9, %call10, !dbg !11924
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !11925

if.then12:                                        ; preds = %if.then8
  %15 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !11926
  %16 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !11928
  %vinsn13 = getelementptr inbounds %struct._expr, %struct._expr* %16, i32 0, i32 0, !dbg !11928
  %17 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn13, align 8, !dbg !11928
  %id14 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %17, i32 0, i32 1, !dbg !11928
  %lhs15 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id14, i32 0, i32 1, !dbg !11928
  %18 = load %struct.rtx_def*, %struct.rtx_def** %lhs15, align 8, !dbg !11928
  call void @replace_dest_with_reg_in_expr(%struct._expr* %15, %struct.rtx_def* %18), !dbg !11929
  %19 = load i32, i32* @stat_renamed_scheduled, align 4, !dbg !11930
  %inc = add nsw i32 %19, 1, !dbg !11930
  store i32 %inc, i32* @stat_renamed_scheduled, align 4, !dbg !11930
  br label %if.end26, !dbg !11931

if.else:                                          ; preds = %if.then8
  %20 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !11932
  %target_available = getelementptr inbounds %struct._expr, %struct._expr* %20, i32 0, i32 11, !dbg !11932
  %21 = load i8, i8* %target_available, align 8, !dbg !11932
  %conv = sext i8 %21 to i32, !dbg !11932
  %22 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !11934
  %target_available16 = getelementptr inbounds %struct._expr, %struct._expr* %22, i32 0, i32 11, !dbg !11934
  %23 = load i8, i8* %target_available16, align 8, !dbg !11934
  %conv17 = sext i8 %23 to i32, !dbg !11934
  %cmp18 = icmp ne i32 %conv, %conv17, !dbg !11935
  br i1 %cmp18, label %if.then20, label %if.end, !dbg !11936

if.then20:                                        ; preds = %if.else
  %24 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !11937
  %target_available21 = getelementptr inbounds %struct._expr, %struct._expr* %24, i32 0, i32 11, !dbg !11937
  %25 = load i8, i8* %target_available21, align 8, !dbg !11937
  %conv22 = sext i8 %25 to i32, !dbg !11937
  %cmp23 = icmp eq i32 %conv22, 1, !dbg !11937
  br i1 %cmp23, label %cond.false, label %cond.true, !dbg !11937

cond.true:                                        ; preds = %if.then20
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5097, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11937
  br label %cond.end, !dbg !11937

cond.false:                                       ; preds = %if.then20
  br label %cond.end, !dbg !11937

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11937
  %26 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !11939
  %target_available25 = getelementptr inbounds %struct._expr, %struct._expr* %26, i32 0, i32 11, !dbg !11939
  store i8 1, i8* %target_available25, align 8, !dbg !11940
  br label %if.end, !dbg !11941

if.end:                                           ; preds = %cond.end, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then12
  br label %if.end27, !dbg !11942

if.end27:                                         ; preds = %if.end26, %land.lhs.true, %if.then4
  %27 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !11943
  %was_substituted = getelementptr inbounds %struct._expr, %struct._expr* %27, i32 0, i32 12, !dbg !11943
  %bf.load28 = load i8, i8* %was_substituted, align 1, !dbg !11943
  %bf.lshr = lshr i8 %bf.load28, 1, !dbg !11943
  %bf.clear29 = and i8 %bf.lshr, 1, !dbg !11943
  %bf.cast = zext i8 %bf.clear29 to i32, !dbg !11943
  %tobool30 = icmp ne i32 %bf.cast, 0, !dbg !11943
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !11945

if.then31:                                        ; preds = %if.end27
  %28 = load i32, i32* @stat_substitutions_total, align 4, !dbg !11946
  %inc32 = add nsw i32 %28, 1, !dbg !11946
  store i32 %inc32, i32* @stat_substitutions_total, align 4, !dbg !11946
  br label %if.end33, !dbg !11947

if.end33:                                         ; preds = %if.then31, %if.end27
  br label %if.end34, !dbg !11948

if.end34:                                         ; preds = %if.end33, %if.then
  %29 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !11949
  call void @av_set_add(%struct._list_node** %expr_seq, %struct._expr* %29), !dbg !11950
  br label %for.end, !dbg !11951

if.end35:                                         ; preds = %for.body
  br label %for.inc, !dbg !11952

for.inc:                                          ; preds = %if.end35
  call void @_list_iter_next(%struct._list_iterator* %i), !dbg !11900
  br label %for.cond, !dbg !11900, !llvm.loop !11953

for.end:                                          ; preds = %if.end34, %for.cond
  %30 = load i8, i8* %for_moveop.addr, align 1, !dbg !11955
  %conv36 = zext i8 %30 to i32, !dbg !11955
  %tobool37 = icmp ne i32 %conv36, 0, !dbg !11955
  br i1 %tobool37, label %land.lhs.true38, label %if.end74, !dbg !11957

land.lhs.true38:                                  ; preds = %for.end
  %31 = load i32, i32* @sched_verbose, align 4, !dbg !11958
  %cmp39 = icmp sge i32 %31, 2, !dbg !11959
  br i1 %cmp39, label %if.then41, label %if.end74, !dbg !11960

if.then41:                                        ; preds = %land.lhs.true38
  br label %do.body, !dbg !11961

do.body:                                          ; preds = %if.then41
  %32 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !11963
  %tobool42 = icmp ne i8 %32, 0, !dbg !11963
  br i1 %tobool42, label %if.then43, label %if.else51, !dbg !11966

if.then43:                                        ; preds = %do.body
  br label %do.body44, !dbg !11963

do.body44:                                        ; preds = %if.then43
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !11967, metadata !DIExpression()), !dbg !11969
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59, i64 0, i64 0)), !dbg !11969
  %mul = mul nsw i32 2, %call45, !dbg !11969
  %add = add nsw i32 1, %mul, !dbg !11969
  store i32 %add, i32* %__j, align 4, !dbg !11969
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !11970, metadata !DIExpression()), !dbg !11969
  %33 = load i32, i32* %__j, align 4, !dbg !11969
  %conv46 = sext i32 %33 to i64, !dbg !11969
  %mul47 = mul i64 1, %conv46, !dbg !11969
  %34 = alloca i8, i64 %mul47, align 16, !dbg !11969
  store i8* %34, i8** %__s, align 8, !dbg !11969
  %35 = load i8*, i8** %__s, align 8, !dbg !11969
  %36 = load i32, i32* %__j, align 4, !dbg !11969
  %conv48 = sext i32 %36 to i64, !dbg !11969
  %call49 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %35, i64 %conv48, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59, i64 0, i64 0)), !dbg !11969
  %37 = load i8*, i8** %__s, align 8, !dbg !11969
  call void @sel_prepare_string_for_dot_label(i8* %37), !dbg !11969
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11969
  %39 = load i8*, i8** %__s, align 8, !dbg !11969
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %39), !dbg !11969
  br label %do.end, !dbg !11969

do.end:                                           ; preds = %do.body44
  br label %if.end53, !dbg !11969

if.else51:                                        ; preds = %do.body
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11963
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59, i64 0, i64 0)), !dbg !11963
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %do.end
  br label %do.end54, !dbg !11966

do.end54:                                         ; preds = %if.end53
  %41 = load %struct._list_node*, %struct._list_node** %expr_seq, align 8, !dbg !11971
  call void @dump_av_set(%struct._list_node* %41), !dbg !11972
  br label %do.body55, !dbg !11973

do.body55:                                        ; preds = %do.end54
  %42 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !11974
  %tobool56 = icmp ne i8 %42, 0, !dbg !11974
  br i1 %tobool56, label %if.then57, label %if.else70, !dbg !11977

if.then57:                                        ; preds = %do.body55
  br label %do.body58, !dbg !11974

do.body58:                                        ; preds = %if.then57
  call void @llvm.dbg.declare(metadata i32* %__j59, metadata !11978, metadata !DIExpression()), !dbg !11980
  %call60 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !11980
  %mul61 = mul nsw i32 2, %call60, !dbg !11980
  %add62 = add nsw i32 1, %mul61, !dbg !11980
  store i32 %add62, i32* %__j59, align 4, !dbg !11980
  call void @llvm.dbg.declare(metadata i8** %__s63, metadata !11981, metadata !DIExpression()), !dbg !11980
  %43 = load i32, i32* %__j59, align 4, !dbg !11980
  %conv64 = sext i32 %43 to i64, !dbg !11980
  %mul65 = mul i64 1, %conv64, !dbg !11980
  %44 = alloca i8, i64 %mul65, align 16, !dbg !11980
  store i8* %44, i8** %__s63, align 8, !dbg !11980
  %45 = load i8*, i8** %__s63, align 8, !dbg !11980
  %46 = load i32, i32* %__j59, align 4, !dbg !11980
  %conv66 = sext i32 %46 to i64, !dbg !11980
  %call67 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %45, i64 %conv66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !11980
  %47 = load i8*, i8** %__s63, align 8, !dbg !11980
  call void @sel_prepare_string_for_dot_label(i8* %47), !dbg !11980
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11980
  %49 = load i8*, i8** %__s63, align 8, !dbg !11980
  %call68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %49), !dbg !11980
  br label %do.end69, !dbg !11980

do.end69:                                         ; preds = %do.body58
  br label %if.end72, !dbg !11980

if.else70:                                        ; preds = %do.body55
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !11974
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !11974
  br label %if.end72

if.end72:                                         ; preds = %if.else70, %do.end69
  br label %do.end73, !dbg !11977

do.end73:                                         ; preds = %if.end72
  br label %if.end74, !dbg !11982

if.end74:                                         ; preds = %do.end73, %land.lhs.true38, %for.end
  %51 = load %struct._list_node*, %struct._list_node** %expr_seq, align 8, !dbg !11983
  ret %struct._list_node* %51, !dbg !11984
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @find_used_regs(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, %struct.bitmap_head_def* %used_regs, %struct.reg_rename* %reg_rename_p, %struct._list_node** %original_insns) #0 !dbg !11985 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %used_regs.addr = alloca %struct.bitmap_head_def*, align 8
  %reg_rename_p.addr = alloca %struct.reg_rename*, align 8
  %original_insns.addr = alloca %struct._list_node**, align 8
  %i = alloca %struct._list_iterator, align 8
  %def = alloca %struct._def*, align 8
  %res = alloca i32, align 4
  %needs_spec_check_p = alloca i8, align 1
  %expr = alloca %struct._expr*, align 8
  %expr_iter = alloca %struct._list_iterator, align 8
  %sparams = alloca %struct.fur_static_params, align 8
  %lparams = alloca %struct.cmpd_local_params, align 8
  %vinsn = alloca %struct.vinsn_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !11988, metadata !DIExpression()), !dbg !11989
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %orig_ops.addr, metadata !11990, metadata !DIExpression()), !dbg !11991
  store %struct.bitmap_head_def* %used_regs, %struct.bitmap_head_def** %used_regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %used_regs.addr, metadata !11992, metadata !DIExpression()), !dbg !11993
  store %struct.reg_rename* %reg_rename_p, %struct.reg_rename** %reg_rename_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reg_rename** %reg_rename_p.addr, metadata !11994, metadata !DIExpression()), !dbg !11995
  store %struct._list_node** %original_insns, %struct._list_node*** %original_insns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %original_insns.addr, metadata !11996, metadata !DIExpression()), !dbg !11997
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %i, metadata !11998, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.declare(metadata %struct._def** %def, metadata !12000, metadata !DIExpression()), !dbg !12001
  call void @llvm.dbg.declare(metadata i32* %res, metadata !12002, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.declare(metadata i8* %needs_spec_check_p, metadata !12004, metadata !DIExpression()), !dbg !12005
  store i8 0, i8* %needs_spec_check_p, align 1, !dbg !12005
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !12006, metadata !DIExpression()), !dbg !12007
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %expr_iter, metadata !12008, metadata !DIExpression()), !dbg !12009
  call void @llvm.dbg.declare(metadata %struct.fur_static_params* %sparams, metadata !12010, metadata !DIExpression()), !dbg !12011
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params* %lparams, metadata !12012, metadata !DIExpression()), !dbg !12013
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !12014
  call void @bitmap_clear(%struct.bitmap_head_def* %0), !dbg !12015
  %crosses_call = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %sparams, i32 0, i32 2, !dbg !12016
  store i8 0, i8* %crosses_call, align 8, !dbg !12017
  %1 = load %struct._list_node**, %struct._list_node*** %original_insns.addr, align 8, !dbg !12018
  %original_insns1 = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %sparams, i32 0, i32 1, !dbg !12019
  store %struct._list_node** %1, %struct._list_node*** %original_insns1, align 8, !dbg !12020
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs.addr, align 8, !dbg !12021
  %used_regs2 = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %sparams, i32 0, i32 0, !dbg !12022
  store %struct.bitmap_head_def* %2, %struct.bitmap_head_def** %used_regs2, align 8, !dbg !12023
  store %struct.code_motion_path_driver_info_def* @fur_hooks, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12024
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12025
  %4 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12026
  %5 = bitcast %struct.fur_static_params* %sparams to i8*, !dbg !12027
  %call = call i32 @code_motion_path_driver(%struct.rtx_def* %3, %struct._list_node* %4, %struct._list_node* null, %struct.cmpd_local_params* %lparams, i8* %5), !dbg !12028
  store i32 %call, i32* %res, align 4, !dbg !12029
  %crosses_call3 = getelementptr inbounds %struct.fur_static_params, %struct.fur_static_params* %sparams, i32 0, i32 2, !dbg !12030
  %6 = load i8, i8* %crosses_call3, align 8, !dbg !12030
  %conv = zext i8 %6 to i32, !dbg !12031
  %7 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12032
  %crosses_call4 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %7, i32 0, i32 2, !dbg !12033
  %8 = load i8, i8* %crosses_call4, align 8, !dbg !12034
  %conv5 = zext i8 %8 to i32, !dbg !12034
  %or = or i32 %conv5, %conv, !dbg !12034
  %conv6 = trunc i32 %or to i8, !dbg !12034
  store i8 %conv6, i8* %crosses_call4, align 8, !dbg !12034
  %9 = load i32, i32* %res, align 4, !dbg !12035
  %cmp = icmp eq i32 %9, 1, !dbg !12035
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !12035

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3260, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12035
  br label %cond.end, !dbg !12035

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12035

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !12035
  %10 = load %struct._list_node**, %struct._list_node*** %original_insns.addr, align 8, !dbg !12036
  %tobool = icmp ne %struct._list_node** %10, null, !dbg !12036
  br i1 %tobool, label %land.lhs.true, label %cond.true9, !dbg !12036

land.lhs.true:                                    ; preds = %cond.end
  %11 = load %struct._list_node**, %struct._list_node*** %original_insns.addr, align 8, !dbg !12036
  %12 = load %struct._list_node*, %struct._list_node** %11, align 8, !dbg !12036
  %tobool8 = icmp ne %struct._list_node* %12, null, !dbg !12036
  br i1 %tobool8, label %cond.false10, label %cond.true9, !dbg !12036

cond.true9:                                       ; preds = %land.lhs.true, %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 3261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12036
  br label %cond.end11, !dbg !12036

cond.false10:                                     ; preds = %land.lhs.true
  br label %cond.end11, !dbg !12036

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond12 = phi i32 [ 0, %cond.true9 ], [ 0, %cond.false10 ], !dbg !12036
  call void @_list_iter_start(%struct._list_iterator* %expr_iter, %struct._list_node** %orig_ops.addr, i8 zeroext 0), !dbg !12037
  br label %for.cond, !dbg !12037

for.cond:                                         ; preds = %for.inc, %cond.end11
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %expr_iter, i32 0, i32 0, !dbg !12039
  %13 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !12039
  %14 = load %struct._list_node*, %struct._list_node** %13, align 8, !dbg !12039
  %call13 = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %14, %struct._expr** %expr), !dbg !12039
  %tobool14 = icmp ne i8 %call13, 0, !dbg !12037
  br i1 %tobool14, label %for.body, label %for.end, !dbg !12037

for.body:                                         ; preds = %for.cond
  %15 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12041
  %needs_spec_check_p15 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 12, !dbg !12041
  %bf.load = load i8, i8* %needs_spec_check_p15, align 1, !dbg !12041
  %bf.clear = and i8 %bf.load, 1, !dbg !12041
  %bf.cast = zext i8 %bf.clear to i32, !dbg !12041
  %16 = load i8, i8* %needs_spec_check_p, align 1, !dbg !12042
  %conv16 = zext i8 %16 to i32, !dbg !12042
  %or17 = or i32 %conv16, %bf.cast, !dbg !12042
  %conv18 = trunc i32 %or17 to i8, !dbg !12042
  store i8 %conv18, i8* %needs_spec_check_p, align 1, !dbg !12042
  br label %for.inc, !dbg !12043

for.inc:                                          ; preds = %for.body
  call void @_list_iter_next(%struct._list_iterator* %expr_iter), !dbg !12039
  br label %for.cond, !dbg !12039, !llvm.loop !12044

for.end:                                          ; preds = %for.cond
  %17 = load %struct._list_node**, %struct._list_node*** %original_insns.addr, align 8, !dbg !12046
  call void @_list_iter_start(%struct._list_iterator* %i, %struct._list_node** %17, i8 zeroext 0), !dbg !12046
  br label %for.cond19, !dbg !12046

for.cond19:                                       ; preds = %for.inc46, %for.end
  %lp20 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %i, i32 0, i32 0, !dbg !12048
  %18 = load %struct._list_node**, %struct._list_node*** %lp20, align 8, !dbg !12048
  %19 = load %struct._list_node*, %struct._list_node** %18, align 8, !dbg !12048
  %call21 = call zeroext i8 @_list_iter_cond_def(%struct._list_node* %19, %struct._def** %def), !dbg !12048
  %tobool22 = icmp ne i8 %call21, 0, !dbg !12046
  br i1 %tobool22, label %for.body23, label %for.end47, !dbg !12046

for.body23:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vinsn, metadata !12050, metadata !DIExpression()), !dbg !12052
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12053
  %tobool24 = icmp ne %struct.VEC_sel_insn_data_def_heap* %20, null, !dbg !12053
  br i1 %tobool24, label %cond.true25, label %cond.false26, !dbg !12053

cond.true25:                                      ; preds = %for.body23
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12053
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i32 0, i32 0, !dbg !12053
  br label %cond.end27, !dbg !12053

cond.false26:                                     ; preds = %for.body23
  br label %cond.end27, !dbg !12053

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond28 = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true25 ], [ null, %cond.false26 ], !dbg !12053
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12053
  %tobool29 = icmp ne %struct.VEC_int_heap* %22, null, !dbg !12053
  br i1 %tobool29, label %cond.true30, label %cond.false32, !dbg !12053

cond.true30:                                      ; preds = %cond.end27
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12053
  %base31 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i32 0, i32 0, !dbg !12053
  br label %cond.end33, !dbg !12053

cond.false32:                                     ; preds = %cond.end27
  br label %cond.end33, !dbg !12053

cond.end33:                                       ; preds = %cond.false32, %cond.true30
  %cond34 = phi %struct.VEC_int_base* [ %base31, %cond.true30 ], [ null, %cond.false32 ], !dbg !12053
  %24 = load %struct._def*, %struct._def** %def, align 8, !dbg !12053
  %orig_insn = getelementptr inbounds %struct._def, %struct._def* %24, i32 0, i32 0, !dbg !12053
  %25 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !12053
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !12053
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12053
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12053
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !12053
  %26 = load i32, i32* %rt_int, align 8, !dbg !12053
  %call35 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond34, i32 %26), !dbg !12053
  %call36 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond28, i32 %call35), !dbg !12053
  %expr37 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call36, i32 0, i32 0, !dbg !12053
  %vinsn38 = getelementptr inbounds %struct._expr, %struct._expr* %expr37, i32 0, i32 0, !dbg !12053
  %27 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn38, align 8, !dbg !12053
  store %struct.vinsn_def* %27, %struct.vinsn_def** %vinsn, align 8, !dbg !12052
  %28 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !12054
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %28, i32 0, i32 1, !dbg !12054
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !12054
  %29 = load i32, i32* %type, align 8, !dbg !12054
  %cmp39 = icmp eq i32 %29, 23, !dbg !12054
  br i1 %cmp39, label %if.then, label %if.end, !dbg !12056

if.then:                                          ; preds = %cond.end33
  %30 = load %struct._def*, %struct._def** %def, align 8, !dbg !12057
  %31 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12058
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs.addr, align 8, !dbg !12059
  call void @mark_unavailable_hard_regs(%struct._def* %30, %struct.reg_rename* %31, %struct.bitmap_head_def* %32), !dbg !12060
  br label %if.end, !dbg !12060

if.end:                                           ; preds = %if.then, %cond.end33
  %33 = load i8, i8* %needs_spec_check_p, align 1, !dbg !12061
  %tobool41 = icmp ne i8 %33, 0, !dbg !12061
  br i1 %tobool41, label %if.then42, label %if.end45, !dbg !12063

if.then42:                                        ; preds = %if.end
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs.addr, align 8, !dbg !12064
  %35 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !12064
  %id43 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %35, i32 0, i32 1, !dbg !12064
  %reg_uses = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id43, i32 0, i32 5, !dbg !12064
  %36 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !12064
  %call44 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %34, %struct.bitmap_head_def* %36), !dbg !12064
  br label %if.end45, !dbg !12064

if.end45:                                         ; preds = %if.then42, %if.end
  br label %for.inc46, !dbg !12065

for.inc46:                                        ; preds = %if.end45
  call void @_list_iter_next(%struct._list_iterator* %i), !dbg !12048
  br label %for.cond19, !dbg !12048, !llvm.loop !12066

for.end47:                                        ; preds = %for.cond19
  ret i8 1, !dbg !12068
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @equal_after_moveup_path_p(%struct._expr* %expr, %struct._list_node* %path, %struct._expr* %expr_vliw) #0 !dbg !12069 {
entry:
  %expr.addr = alloca %struct._expr*, align 8
  %path.addr = alloca %struct._list_node*, align 8
  %expr_vliw.addr = alloca %struct._expr*, align 8
  %_tmp = alloca %struct._expr, align 8
  %tmp = alloca %struct._expr*, align 8
  %last_cycle = alloca i32, align 4
  %res = alloca i8, align 1
  %tmp_vinsn = alloca %struct.vinsn_def*, align 8
  %expr_vliw_vinsn = alloca %struct.vinsn_def*, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !12072, metadata !DIExpression()), !dbg !12073
  store %struct._list_node* %path, %struct._list_node** %path.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %path.addr, metadata !12074, metadata !DIExpression()), !dbg !12075
  store %struct._expr* %expr_vliw, %struct._expr** %expr_vliw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr_vliw.addr, metadata !12076, metadata !DIExpression()), !dbg !12077
  call void @llvm.dbg.declare(metadata %struct._expr* %_tmp, metadata !12078, metadata !DIExpression()), !dbg !12079
  call void @llvm.dbg.declare(metadata %struct._expr** %tmp, metadata !12080, metadata !DIExpression()), !dbg !12081
  store %struct._expr* %_tmp, %struct._expr** %tmp, align 8, !dbg !12081
  call void @llvm.dbg.declare(metadata i32* %last_cycle, metadata !12082, metadata !DIExpression()), !dbg !12083
  call void @llvm.dbg.declare(metadata i8* %res, metadata !12084, metadata !DIExpression()), !dbg !12085
  store i8 1, i8* %res, align 1, !dbg !12085
  %0 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !12086
  %1 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !12087
  call void @copy_expr_onside(%struct._expr* %0, %struct._expr* %1), !dbg !12088
  %2 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !12089
  %tobool = icmp ne %struct._list_node* %2, null, !dbg !12089
  br i1 %tobool, label %cond.true, label %cond.false11, !dbg !12089

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12090
  %tobool1 = icmp ne %struct.VEC_sel_insn_data_def_heap* %3, null, !dbg !12090
  br i1 %tobool1, label %cond.true2, label %cond.false, !dbg !12090

cond.true2:                                       ; preds = %cond.true
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12090
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i32 0, i32 0, !dbg !12090
  br label %cond.end, !dbg !12090

cond.false:                                       ; preds = %cond.true
  br label %cond.end, !dbg !12090

cond.end:                                         ; preds = %cond.false, %cond.true2
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true2 ], [ null, %cond.false ], !dbg !12090
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12090
  %tobool3 = icmp ne %struct.VEC_int_heap* %5, null, !dbg !12090
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !12090

cond.true4:                                       ; preds = %cond.end
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12090
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i32 0, i32 0, !dbg !12090
  br label %cond.end7, !dbg !12090

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !12090

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi %struct.VEC_int_base* [ %base5, %cond.true4 ], [ null, %cond.false6 ], !dbg !12090
  %7 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !12090
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %7, i32 0, i32 1, !dbg !12090
  %x = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !12090
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !12090
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !12090
  %fld = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !12090
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12090
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !12090
  %9 = load i32, i32* %rt_int, align 8, !dbg !12090
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond8, i32 %9), !dbg !12090
  %call10 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !12090
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call10, i32 0, i32 10, !dbg !12090
  %10 = load i32, i32* %sched_cycle, align 8, !dbg !12090
  br label %cond.end12, !dbg !12089

cond.false11:                                     ; preds = %entry
  br label %cond.end12, !dbg !12089

cond.end12:                                       ; preds = %cond.false11, %cond.end7
  %cond13 = phi i32 [ %10, %cond.end7 ], [ 0, %cond.false11 ], !dbg !12089
  store i32 %cond13, i32* %last_cycle, align 4, !dbg !12091
  br label %while.cond, !dbg !12092

while.cond:                                       ; preds = %while.body, %cond.end12
  %11 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !12093
  %tobool14 = icmp ne %struct._list_node* %11, null, !dbg !12093
  br i1 %tobool14, label %land.lhs.true, label %land.end, !dbg !12094

land.lhs.true:                                    ; preds = %while.cond
  %12 = load i8, i8* %res, align 1, !dbg !12095
  %conv = zext i8 %12 to i32, !dbg !12095
  %tobool15 = icmp ne i32 %conv, 0, !dbg !12095
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !12096

land.rhs:                                         ; preds = %land.lhs.true
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12097
  %tobool16 = icmp ne %struct.VEC_sel_insn_data_def_heap* %13, null, !dbg !12097
  br i1 %tobool16, label %cond.true17, label %cond.false19, !dbg !12097

cond.true17:                                      ; preds = %land.rhs
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12097
  %base18 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %14, i32 0, i32 0, !dbg !12097
  br label %cond.end20, !dbg !12097

cond.false19:                                     ; preds = %land.rhs
  br label %cond.end20, !dbg !12097

cond.end20:                                       ; preds = %cond.false19, %cond.true17
  %cond21 = phi %struct.VEC_sel_insn_data_def_base* [ %base18, %cond.true17 ], [ null, %cond.false19 ], !dbg !12097
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12097
  %tobool22 = icmp ne %struct.VEC_int_heap* %15, null, !dbg !12097
  br i1 %tobool22, label %cond.true23, label %cond.false25, !dbg !12097

cond.true23:                                      ; preds = %cond.end20
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12097
  %base24 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i32 0, i32 0, !dbg !12097
  br label %cond.end26, !dbg !12097

cond.false25:                                     ; preds = %cond.end20
  br label %cond.end26, !dbg !12097

cond.end26:                                       ; preds = %cond.false25, %cond.true23
  %cond27 = phi %struct.VEC_int_base* [ %base24, %cond.true23 ], [ null, %cond.false25 ], !dbg !12097
  %17 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !12097
  %u28 = getelementptr inbounds %struct._list_node, %struct._list_node* %17, i32 0, i32 1, !dbg !12097
  %x29 = bitcast %union.anon.0* %u28 to %struct.rtx_def**, !dbg !12097
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x29, align 8, !dbg !12097
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !12097
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !12097
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 0, !dbg !12097
  %rt_int33 = bitcast %union.rtunion_def* %arrayidx32 to i32*, !dbg !12097
  %19 = load i32, i32* %rt_int33, align 8, !dbg !12097
  %call34 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond27, i32 %19), !dbg !12097
  %call35 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond21, i32 %call34), !dbg !12097
  %sched_cycle36 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call35, i32 0, i32 10, !dbg !12097
  %20 = load i32, i32* %sched_cycle36, align 8, !dbg !12097
  %21 = load i32, i32* %last_cycle, align 4, !dbg !12098
  %cmp = icmp eq i32 %20, %21, !dbg !12099
  br label %land.end

land.end:                                         ; preds = %cond.end26, %land.lhs.true, %while.cond
  %22 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp, %cond.end26 ], !dbg !12100
  br i1 %22, label %while.body, label %while.end, !dbg !12092

while.body:                                       ; preds = %land.end
  %23 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !12101
  %24 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !12103
  %u38 = getelementptr inbounds %struct._list_node, %struct._list_node* %24, i32 0, i32 1, !dbg !12103
  %x39 = bitcast %union.anon.0* %u38 to %struct.rtx_def**, !dbg !12103
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x39, align 8, !dbg !12103
  %call40 = call i32 @moveup_expr_cached(%struct._expr* %23, %struct.rtx_def* %25, i8 zeroext 1), !dbg !12104
  %cmp41 = icmp ne i32 %call40, 2, !dbg !12105
  %conv42 = zext i1 %cmp41 to i32, !dbg !12105
  %conv43 = trunc i32 %conv42 to i8, !dbg !12106
  store i8 %conv43, i8* %res, align 1, !dbg !12107
  %26 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !12108
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %26, i32 0, i32 0, !dbg !12108
  %27 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !12108
  store %struct._list_node* %27, %struct._list_node** %path.addr, align 8, !dbg !12109
  br label %while.cond, !dbg !12092, !llvm.loop !12110

while.end:                                        ; preds = %land.end
  %28 = load i8, i8* %res, align 1, !dbg !12112
  %tobool44 = icmp ne i8 %28, 0, !dbg !12112
  br i1 %tobool44, label %if.then, label %if.end50, !dbg !12114

if.then:                                          ; preds = %while.end
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %tmp_vinsn, metadata !12115, metadata !DIExpression()), !dbg !12117
  %29 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !12118
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %29, i32 0, i32 0, !dbg !12118
  %30 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !12118
  store %struct.vinsn_def* %30, %struct.vinsn_def** %tmp_vinsn, align 8, !dbg !12117
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %expr_vliw_vinsn, metadata !12119, metadata !DIExpression()), !dbg !12120
  %31 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !12121
  %vinsn45 = getelementptr inbounds %struct._expr, %struct._expr* %31, i32 0, i32 0, !dbg !12121
  %32 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn45, align 8, !dbg !12121
  store %struct.vinsn_def* %32, %struct.vinsn_def** %expr_vliw_vinsn, align 8, !dbg !12120
  %33 = load %struct.vinsn_def*, %struct.vinsn_def** %tmp_vinsn, align 8, !dbg !12122
  %34 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_vliw_vinsn, align 8, !dbg !12124
  %cmp46 = icmp ne %struct.vinsn_def* %33, %34, !dbg !12125
  br i1 %cmp46, label %if.then48, label %if.end, !dbg !12126

if.then48:                                        ; preds = %if.then
  %35 = load %struct.vinsn_def*, %struct.vinsn_def** %tmp_vinsn, align 8, !dbg !12127
  %36 = load %struct.vinsn_def*, %struct.vinsn_def** %expr_vliw_vinsn, align 8, !dbg !12128
  %call49 = call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %35, %struct.vinsn_def* %36), !dbg !12129
  store i8 %call49, i8* %res, align 1, !dbg !12130
  br label %if.end, !dbg !12131

if.end:                                           ; preds = %if.then48, %if.then
  br label %if.end50, !dbg !12132

if.end50:                                         ; preds = %if.end, %while.end
  %37 = load %struct._expr*, %struct._expr** %tmp, align 8, !dbg !12133
  call void @clear_expr(%struct._expr* %37), !dbg !12134
  %38 = load i8, i8* %res, align 1, !dbg !12135
  ret i8 %38, !dbg !12136
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @code_motion_path_driver(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, %struct._list_node* %path, %struct.cmpd_local_params* %local_params_in, i8* %static_params) #0 !dbg !12137 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %path.addr = alloca %struct._list_node*, align 8
  %local_params_in.addr = alloca %struct.cmpd_local_params*, align 8
  %static_params.addr = alloca i8*, align 8
  %expr = alloca %struct._expr*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %first_insn = alloca %struct.rtx_def*, align 8
  %bb_tail = alloca %struct.rtx_def*, align 8
  %before_first = alloca %struct.rtx_def*, align 8
  %removed_last_insn = alloca i8, align 1
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j15 = alloca i32, align 4
  %__s19 = alloca i8*, align 8
  %__j34 = alloca i32, align 4
  %__s38 = alloca i8*, align 8
  %__j61 = alloca i32, align 4
  %__s68 = alloca i8*, align 8
  %__j103 = alloca i32, align 4
  %__s107 = alloca i8*, align 8
  %__j133 = alloca i32, align 4
  %__s138 = alloca i8*, align 8
  %__j181 = alloca i32, align 4
  %__s186 = alloca i8*, align 8
  %last_insn = alloca %struct.rtx_def*, align 8
  %__j238 = alloca i32, align 4
  %__s246 = alloca i8*, align 8
  %res = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !12140, metadata !DIExpression()), !dbg !12141
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %orig_ops.addr, metadata !12142, metadata !DIExpression()), !dbg !12143
  store %struct._list_node* %path, %struct._list_node** %path.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %path.addr, metadata !12144, metadata !DIExpression()), !dbg !12145
  store %struct.cmpd_local_params* %local_params_in, %struct.cmpd_local_params** %local_params_in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params** %local_params_in.addr, metadata !12146, metadata !DIExpression()), !dbg !12147
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !12148, metadata !DIExpression()), !dbg !12149
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !12150, metadata !DIExpression()), !dbg !12151
  store %struct._expr* null, %struct._expr** %expr, align 8, !dbg !12151
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !12152, metadata !DIExpression()), !dbg !12153
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12154
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !12154
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12154
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !12154
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !12154
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !12154
  store %struct.basic_block_def* %1, %struct.basic_block_def** %bb, align 8, !dbg !12153
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %first_insn, metadata !12155, metadata !DIExpression()), !dbg !12156
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %bb_tail, metadata !12157, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %before_first, metadata !12159, metadata !DIExpression()), !dbg !12160
  call void @llvm.dbg.declare(metadata i8* %removed_last_insn, metadata !12161, metadata !DIExpression()), !dbg !12162
  store i8 0, i8* %removed_last_insn, align 1, !dbg !12162
  %2 = load i32, i32* @sched_verbose, align 4, !dbg !12163
  %cmp = icmp sge i32 %2, 6, !dbg !12165
  br i1 %cmp, label %if.then, label %if.end49, !dbg !12166

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12167

do.body:                                          ; preds = %if.then
  %3 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12169
  %tobool = icmp ne i8 %3, 0, !dbg !12169
  br i1 %tobool, label %if.then1, label %if.else, !dbg !12172

if.then1:                                         ; preds = %do.body
  br label %do.body2, !dbg !12169

do.body2:                                         ; preds = %if.then1
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !12173, metadata !DIExpression()), !dbg !12175
  %4 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12175
  %routine_name = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %4, i32 0, i32 8, !dbg !12175
  %5 = load i8*, i8** %routine_name, align 8, !dbg !12175
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* %5), !dbg !12175
  %mul = mul nsw i32 2, %call, !dbg !12175
  %add = add nsw i32 1, %mul, !dbg !12175
  store i32 %add, i32* %__j, align 4, !dbg !12175
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !12176, metadata !DIExpression()), !dbg !12175
  %6 = load i32, i32* %__j, align 4, !dbg !12175
  %conv = sext i32 %6 to i64, !dbg !12175
  %mul3 = mul i64 1, %conv, !dbg !12175
  %7 = alloca i8, i64 %mul3, align 16, !dbg !12175
  store i8* %7, i8** %__s, align 8, !dbg !12175
  %8 = load i8*, i8** %__s, align 8, !dbg !12175
  %9 = load i32, i32* %__j, align 4, !dbg !12175
  %conv4 = sext i32 %9 to i64, !dbg !12175
  %10 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12175
  %routine_name5 = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %10, i32 0, i32 8, !dbg !12175
  %11 = load i8*, i8** %routine_name5, align 8, !dbg !12175
  %call6 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 %conv4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* %11), !dbg !12175
  %12 = load i8*, i8** %__s, align 8, !dbg !12175
  call void @sel_prepare_string_for_dot_label(i8* %12), !dbg !12175
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12175
  %14 = load i8*, i8** %__s, align 8, !dbg !12175
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %14), !dbg !12175
  br label %do.end, !dbg !12175

do.end:                                           ; preds = %do.body2
  br label %if.end, !dbg !12175

if.else:                                          ; preds = %do.body
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12169
  %16 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12169
  %routine_name8 = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %16, i32 0, i32 8, !dbg !12169
  %17 = load i8*, i8** %routine_name8, align 8, !dbg !12169
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* %17), !dbg !12169
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end10, !dbg !12172

do.end10:                                         ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12177
  call void @dump_insn(%struct.rtx_def* %18), !dbg !12178
  br label %do.body11, !dbg !12179

do.body11:                                        ; preds = %do.end10
  %19 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12180
  %tobool12 = icmp ne i8 %19, 0, !dbg !12180
  br i1 %tobool12, label %if.then13, label %if.else26, !dbg !12183

if.then13:                                        ; preds = %do.body11
  br label %do.body14, !dbg !12180

do.body14:                                        ; preds = %if.then13
  call void @llvm.dbg.declare(metadata i32* %__j15, metadata !12184, metadata !DIExpression()), !dbg !12186
  %call16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)), !dbg !12186
  %mul17 = mul nsw i32 2, %call16, !dbg !12186
  %add18 = add nsw i32 1, %mul17, !dbg !12186
  store i32 %add18, i32* %__j15, align 4, !dbg !12186
  call void @llvm.dbg.declare(metadata i8** %__s19, metadata !12187, metadata !DIExpression()), !dbg !12186
  %20 = load i32, i32* %__j15, align 4, !dbg !12186
  %conv20 = sext i32 %20 to i64, !dbg !12186
  %mul21 = mul i64 1, %conv20, !dbg !12186
  %21 = alloca i8, i64 %mul21, align 16, !dbg !12186
  store i8* %21, i8** %__s19, align 8, !dbg !12186
  %22 = load i8*, i8** %__s19, align 8, !dbg !12186
  %23 = load i32, i32* %__j15, align 4, !dbg !12186
  %conv22 = sext i32 %23 to i64, !dbg !12186
  %call23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %22, i64 %conv22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)), !dbg !12186
  %24 = load i8*, i8** %__s19, align 8, !dbg !12186
  call void @sel_prepare_string_for_dot_label(i8* %24), !dbg !12186
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12186
  %26 = load i8*, i8** %__s19, align 8, !dbg !12186
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %26), !dbg !12186
  br label %do.end25, !dbg !12186

do.end25:                                         ; preds = %do.body14
  br label %if.end28, !dbg !12186

if.else26:                                        ; preds = %do.body11
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12180
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)), !dbg !12180
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %do.end25
  br label %do.end29, !dbg !12183

do.end29:                                         ; preds = %if.end28
  %28 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12188
  call void @dump_av_set(%struct._list_node* %28), !dbg !12189
  br label %do.body30, !dbg !12190

do.body30:                                        ; preds = %do.end29
  %29 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12191
  %tobool31 = icmp ne i8 %29, 0, !dbg !12191
  br i1 %tobool31, label %if.then32, label %if.else45, !dbg !12194

if.then32:                                        ; preds = %do.body30
  br label %do.body33, !dbg !12191

do.body33:                                        ; preds = %if.then32
  call void @llvm.dbg.declare(metadata i32* %__j34, metadata !12195, metadata !DIExpression()), !dbg !12197
  %call35 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)), !dbg !12197
  %mul36 = mul nsw i32 2, %call35, !dbg !12197
  %add37 = add nsw i32 1, %mul36, !dbg !12197
  store i32 %add37, i32* %__j34, align 4, !dbg !12197
  call void @llvm.dbg.declare(metadata i8** %__s38, metadata !12198, metadata !DIExpression()), !dbg !12197
  %30 = load i32, i32* %__j34, align 4, !dbg !12197
  %conv39 = sext i32 %30 to i64, !dbg !12197
  %mul40 = mul i64 1, %conv39, !dbg !12197
  %31 = alloca i8, i64 %mul40, align 16, !dbg !12197
  store i8* %31, i8** %__s38, align 8, !dbg !12197
  %32 = load i8*, i8** %__s38, align 8, !dbg !12197
  %33 = load i32, i32* %__j34, align 4, !dbg !12197
  %conv41 = sext i32 %33 to i64, !dbg !12197
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %32, i64 %conv41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)), !dbg !12197
  %34 = load i8*, i8** %__s38, align 8, !dbg !12197
  call void @sel_prepare_string_for_dot_label(i8* %34), !dbg !12197
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12197
  %36 = load i8*, i8** %__s38, align 8, !dbg !12197
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %36), !dbg !12197
  br label %do.end44, !dbg !12197

do.end44:                                         ; preds = %do.body33
  br label %if.end47, !dbg !12197

if.else45:                                        ; preds = %do.body30
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12191
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)), !dbg !12191
  br label %if.end47

if.end47:                                         ; preds = %if.else45, %do.end44
  br label %do.end48, !dbg !12194

do.end48:                                         ; preds = %if.end47
  br label %if.end49, !dbg !12199

if.end49:                                         ; preds = %do.end48, %entry
  %38 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12200
  %tobool50 = icmp ne %struct._list_node* %38, null, !dbg !12200
  br i1 %tobool50, label %cond.false, label %cond.true, !dbg !12200

cond.true:                                        ; preds = %if.end49
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6420, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12200
  br label %cond.end, !dbg !12200

cond.false:                                       ; preds = %if.end49
  br label %cond.end, !dbg !12200

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !12200
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12201
  %40 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !12203
  %call51 = call zeroext i8 @is_ineligible_successor(%struct.rtx_def* %39, %struct._list_node* %40), !dbg !12204
  %tobool52 = icmp ne i8 %call51, 0, !dbg !12204
  br i1 %tobool52, label %if.then53, label %if.end88, !dbg !12205

if.then53:                                        ; preds = %cond.end
  %41 = load i32, i32* @sched_verbose, align 4, !dbg !12206
  %cmp54 = icmp sge i32 %41, 6, !dbg !12209
  br i1 %cmp54, label %if.then56, label %if.end87, !dbg !12210

if.then56:                                        ; preds = %if.then53
  br label %do.body57, !dbg !12211

do.body57:                                        ; preds = %if.then56
  %42 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12212
  %tobool58 = icmp ne i8 %42, 0, !dbg !12212
  br i1 %tobool58, label %if.then59, label %if.else79, !dbg !12215

if.then59:                                        ; preds = %do.body57
  br label %do.body60, !dbg !12212

do.body60:                                        ; preds = %if.then59
  call void @llvm.dbg.declare(metadata i32* %__j61, metadata !12216, metadata !DIExpression()), !dbg !12218
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12218
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !12218
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !12218
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 0, !dbg !12218
  %rt_int = bitcast %union.rtunion_def* %arrayidx64 to i32*, !dbg !12218
  %44 = load i32, i32* %rt_int, align 8, !dbg !12218
  %call65 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.63, i64 0, i64 0), i32 %44), !dbg !12218
  %mul66 = mul nsw i32 2, %call65, !dbg !12218
  %add67 = add nsw i32 1, %mul66, !dbg !12218
  store i32 %add67, i32* %__j61, align 4, !dbg !12218
  call void @llvm.dbg.declare(metadata i8** %__s68, metadata !12219, metadata !DIExpression()), !dbg !12218
  %45 = load i32, i32* %__j61, align 4, !dbg !12218
  %conv69 = sext i32 %45 to i64, !dbg !12218
  %mul70 = mul i64 1, %conv69, !dbg !12218
  %46 = alloca i8, i64 %mul70, align 16, !dbg !12218
  store i8* %46, i8** %__s68, align 8, !dbg !12218
  %47 = load i8*, i8** %__s68, align 8, !dbg !12218
  %48 = load i32, i32* %__j61, align 4, !dbg !12218
  %conv71 = sext i32 %48 to i64, !dbg !12218
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12218
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !12218
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !12218
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 0, !dbg !12218
  %rt_int75 = bitcast %union.rtunion_def* %arrayidx74 to i32*, !dbg !12218
  %50 = load i32, i32* %rt_int75, align 8, !dbg !12218
  %call76 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %47, i64 %conv71, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.63, i64 0, i64 0), i32 %50), !dbg !12218
  %51 = load i8*, i8** %__s68, align 8, !dbg !12218
  call void @sel_prepare_string_for_dot_label(i8* %51), !dbg !12218
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12218
  %53 = load i8*, i8** %__s68, align 8, !dbg !12218
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %53), !dbg !12218
  br label %do.end78, !dbg !12218

do.end78:                                         ; preds = %do.body60
  br label %if.end85, !dbg !12218

if.else79:                                        ; preds = %do.body57
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12212
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12212
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !12212
  %fld81 = bitcast %union.u* %u80 to [1 x %union.rtunion_def]*, !dbg !12212
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i64 0, i64 0, !dbg !12212
  %rt_int83 = bitcast %union.rtunion_def* %arrayidx82 to i32*, !dbg !12212
  %56 = load i32, i32* %rt_int83, align 8, !dbg !12212
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.63, i64 0, i64 0), i32 %56), !dbg !12212
  br label %if.end85

if.end85:                                         ; preds = %if.else79, %do.end78
  br label %do.end86, !dbg !12215

do.end86:                                         ; preds = %if.end85
  br label %if.end87, !dbg !12215

if.end87:                                         ; preds = %do.end86, %if.then53
  store i32 0, i32* %retval, align 4, !dbg !12220
  br label %return, !dbg !12220

if.end88:                                         ; preds = %cond.end
  %57 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12221
  %call89 = call zeroext i8 @sel_bb_head_p(%struct.rtx_def* %57), !dbg !12223
  %tobool90 = icmp ne i8 %call89, 0, !dbg !12223
  br i1 %tobool90, label %if.then91, label %if.end158, !dbg !12224

if.then91:                                        ; preds = %if.end88
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12225
  %call92 = call i32 @get_av_level(%struct.rtx_def* %58), !dbg !12225
  %59 = load i32, i32* @global_level, align 4, !dbg !12225
  %cmp93 = icmp eq i32 %call92, %59, !dbg !12225
  br i1 %cmp93, label %if.end121, label %if.then95, !dbg !12228

if.then95:                                        ; preds = %if.then91
  %60 = load i32, i32* @sched_verbose, align 4, !dbg !12229
  %cmp96 = icmp sge i32 %60, 6, !dbg !12232
  br i1 %cmp96, label %if.then98, label %if.end120, !dbg !12233

if.then98:                                        ; preds = %if.then95
  br label %do.body99, !dbg !12234

do.body99:                                        ; preds = %if.then98
  %61 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12235
  %tobool100 = icmp ne i8 %61, 0, !dbg !12235
  br i1 %tobool100, label %if.then101, label %if.else115, !dbg !12238

if.then101:                                       ; preds = %do.body99
  br label %do.body102, !dbg !12235

do.body102:                                       ; preds = %if.then101
  call void @llvm.dbg.declare(metadata i32* %__j103, metadata !12239, metadata !DIExpression()), !dbg !12241
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12241
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %62, i32 0, i32 9, !dbg !12241
  %63 = load i32, i32* %index, align 8, !dbg !12241
  %call104 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.64, i64 0, i64 0), i32 %63), !dbg !12241
  %mul105 = mul nsw i32 2, %call104, !dbg !12241
  %add106 = add nsw i32 1, %mul105, !dbg !12241
  store i32 %add106, i32* %__j103, align 4, !dbg !12241
  call void @llvm.dbg.declare(metadata i8** %__s107, metadata !12242, metadata !DIExpression()), !dbg !12241
  %64 = load i32, i32* %__j103, align 4, !dbg !12241
  %conv108 = sext i32 %64 to i64, !dbg !12241
  %mul109 = mul i64 1, %conv108, !dbg !12241
  %65 = alloca i8, i64 %mul109, align 16, !dbg !12241
  store i8* %65, i8** %__s107, align 8, !dbg !12241
  %66 = load i8*, i8** %__s107, align 8, !dbg !12241
  %67 = load i32, i32* %__j103, align 4, !dbg !12241
  %conv110 = sext i32 %67 to i64, !dbg !12241
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12241
  %index111 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %68, i32 0, i32 9, !dbg !12241
  %69 = load i32, i32* %index111, align 8, !dbg !12241
  %call112 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %66, i64 %conv110, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.64, i64 0, i64 0), i32 %69), !dbg !12241
  %70 = load i8*, i8** %__s107, align 8, !dbg !12241
  call void @sel_prepare_string_for_dot_label(i8* %70), !dbg !12241
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12241
  %72 = load i8*, i8** %__s107, align 8, !dbg !12241
  %call113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %72), !dbg !12241
  br label %do.end114, !dbg !12241

do.end114:                                        ; preds = %do.body102
  br label %if.end118, !dbg !12241

if.else115:                                       ; preds = %do.body99
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12235
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12235
  %index116 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %74, i32 0, i32 9, !dbg !12235
  %75 = load i32, i32* %index116, align 8, !dbg !12235
  %call117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.64, i64 0, i64 0), i32 %75), !dbg !12235
  br label %if.end118

if.end118:                                        ; preds = %if.else115, %do.end114
  br label %do.end119, !dbg !12238

do.end119:                                        ; preds = %if.end118
  br label %if.end120, !dbg !12238

if.end120:                                        ; preds = %do.end119, %if.then95
  store i32 0, i32* %retval, align 4, !dbg !12243
  br label %return, !dbg !12243

if.end121:                                        ; preds = %if.then91
  %76 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !12244
  %77 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12246
  %index122 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %77, i32 0, i32 9, !dbg !12247
  %78 = load i32, i32* %index122, align 8, !dbg !12247
  %call123 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %76, i32 %78), !dbg !12248
  %tobool124 = icmp ne i32 %call123, 0, !dbg !12248
  br i1 %tobool124, label %if.then125, label %if.end157, !dbg !12249

if.then125:                                       ; preds = %if.end121
  %79 = load i32, i32* @sched_verbose, align 4, !dbg !12250
  %cmp126 = icmp sge i32 %79, 6, !dbg !12253
  br i1 %cmp126, label %if.then128, label %if.end151, !dbg !12254

if.then128:                                       ; preds = %if.then125
  br label %do.body129, !dbg !12255

do.body129:                                       ; preds = %if.then128
  %80 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12256
  %tobool130 = icmp ne i8 %80, 0, !dbg !12256
  br i1 %tobool130, label %if.then131, label %if.else146, !dbg !12259

if.then131:                                       ; preds = %do.body129
  br label %do.body132, !dbg !12256

do.body132:                                       ; preds = %if.then131
  call void @llvm.dbg.declare(metadata i32* %__j133, metadata !12260, metadata !DIExpression()), !dbg !12262
  %81 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12262
  %index134 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %81, i32 0, i32 9, !dbg !12262
  %82 = load i32, i32* %index134, align 8, !dbg !12262
  %call135 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.65, i64 0, i64 0), i32 %82), !dbg !12262
  %mul136 = mul nsw i32 2, %call135, !dbg !12262
  %add137 = add nsw i32 1, %mul136, !dbg !12262
  store i32 %add137, i32* %__j133, align 4, !dbg !12262
  call void @llvm.dbg.declare(metadata i8** %__s138, metadata !12263, metadata !DIExpression()), !dbg !12262
  %83 = load i32, i32* %__j133, align 4, !dbg !12262
  %conv139 = sext i32 %83 to i64, !dbg !12262
  %mul140 = mul i64 1, %conv139, !dbg !12262
  %84 = alloca i8, i64 %mul140, align 16, !dbg !12262
  store i8* %84, i8** %__s138, align 8, !dbg !12262
  %85 = load i8*, i8** %__s138, align 8, !dbg !12262
  %86 = load i32, i32* %__j133, align 4, !dbg !12262
  %conv141 = sext i32 %86 to i64, !dbg !12262
  %87 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12262
  %index142 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %87, i32 0, i32 9, !dbg !12262
  %88 = load i32, i32* %index142, align 8, !dbg !12262
  %call143 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %85, i64 %conv141, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.65, i64 0, i64 0), i32 %88), !dbg !12262
  %89 = load i8*, i8** %__s138, align 8, !dbg !12262
  call void @sel_prepare_string_for_dot_label(i8* %89), !dbg !12262
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12262
  %91 = load i8*, i8** %__s138, align 8, !dbg !12262
  %call144 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %91), !dbg !12262
  br label %do.end145, !dbg !12262

do.end145:                                        ; preds = %do.body132
  br label %if.end149, !dbg !12262

if.else146:                                       ; preds = %do.body129
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12256
  %93 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12256
  %index147 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %93, i32 0, i32 9, !dbg !12256
  %94 = load i32, i32* %index147, align 8, !dbg !12256
  %call148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.65, i64 0, i64 0), i32 %94), !dbg !12256
  br label %if.end149

if.end149:                                        ; preds = %if.else146, %do.end145
  br label %do.end150, !dbg !12259

do.end150:                                        ; preds = %if.end149
  br label %if.end151, !dbg !12259

if.end151:                                        ; preds = %do.end150, %if.then125
  %95 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12264
  %on_enter = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %95, i32 0, i32 0, !dbg !12266
  %96 = load i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)*, i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)** %on_enter, align 8, !dbg !12266
  %tobool152 = icmp ne i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)* %96, null, !dbg !12264
  br i1 %tobool152, label %if.then153, label %if.end156, !dbg !12267

if.then153:                                       ; preds = %if.end151
  %97 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12268
  %on_enter154 = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %97, i32 0, i32 0, !dbg !12269
  %98 = load i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)*, i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)** %on_enter154, align 8, !dbg !12269
  %99 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12270
  %100 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %local_params_in.addr, align 8, !dbg !12271
  %101 = load i8*, i8** %static_params.addr, align 8, !dbg !12272
  %call155 = call i32 %98(%struct.rtx_def* %99, %struct.cmpd_local_params* %100, i8* %101, i8 zeroext 1), !dbg !12268
  store i32 %call155, i32* %retval, align 4, !dbg !12273
  br label %return, !dbg !12273

if.end156:                                        ; preds = %if.end151
  br label %if.end157, !dbg !12274

if.end157:                                        ; preds = %if.end156, %if.end121
  br label %if.end158, !dbg !12275

if.end158:                                        ; preds = %if.end157, %if.end88
  %102 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12276
  %on_enter159 = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %102, i32 0, i32 0, !dbg !12278
  %103 = load i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)*, i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)** %on_enter159, align 8, !dbg !12278
  %tobool160 = icmp ne i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)* %103, null, !dbg !12276
  br i1 %tobool160, label %if.then161, label %if.end164, !dbg !12279

if.then161:                                       ; preds = %if.end158
  %104 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12280
  %on_enter162 = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %104, i32 0, i32 0, !dbg !12281
  %105 = load i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)*, i32 (%struct.rtx_def*, %struct.cmpd_local_params*, i8*, i8)** %on_enter162, align 8, !dbg !12281
  %106 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12282
  %107 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %local_params_in.addr, align 8, !dbg !12283
  %108 = load i8*, i8** %static_params.addr, align 8, !dbg !12284
  %call163 = call i32 %105(%struct.rtx_def* %106, %struct.cmpd_local_params* %107, i8* %108, i8 zeroext 0), !dbg !12280
  br label %if.end164, !dbg !12280

if.end164:                                        ; preds = %if.then161, %if.end158
  %109 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12285
  %call165 = call %struct._list_node* @av_set_copy(%struct._list_node* %109), !dbg !12286
  store %struct._list_node* %call165, %struct._list_node** %orig_ops.addr, align 8, !dbg !12287
  %110 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12288
  %call166 = call i32 @get_av_level(%struct.rtx_def* %110), !dbg !12288
  %111 = load i32, i32* @global_level, align 4, !dbg !12288
  %cmp167 = icmp eq i32 %call166, %111, !dbg !12288
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !12290

if.then169:                                       ; preds = %if.end164
  %112 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12291
  %call170 = call %struct._list_node* @get_av_set(%struct.rtx_def* %112), !dbg !12291
  call void @av_set_intersect(%struct._list_node** %orig_ops.addr, %struct._list_node* %call170), !dbg !12292
  br label %if.end171, !dbg !12292

if.end171:                                        ; preds = %if.then169, %if.end164
  %113 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12293
  %tobool172 = icmp ne %struct._list_node* %113, null, !dbg !12293
  br i1 %tobool172, label %if.end200, label %if.then173, !dbg !12295

if.then173:                                       ; preds = %if.end171
  %114 = load i32, i32* @sched_verbose, align 4, !dbg !12296
  %cmp174 = icmp sge i32 %114, 6, !dbg !12299
  br i1 %cmp174, label %if.then176, label %if.end199, !dbg !12300

if.then176:                                       ; preds = %if.then173
  br label %do.body177, !dbg !12301

do.body177:                                       ; preds = %if.then176
  %115 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12302
  %tobool178 = icmp ne i8 %115, 0, !dbg !12302
  br i1 %tobool178, label %if.then179, label %if.else194, !dbg !12305

if.then179:                                       ; preds = %do.body177
  br label %do.body180, !dbg !12302

do.body180:                                       ; preds = %if.then179
  call void @llvm.dbg.declare(metadata i32* %__j181, metadata !12306, metadata !DIExpression()), !dbg !12308
  %116 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12308
  %index182 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %116, i32 0, i32 9, !dbg !12308
  %117 = load i32, i32* %index182, align 8, !dbg !12308
  %call183 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.66, i64 0, i64 0), i32 %117), !dbg !12308
  %mul184 = mul nsw i32 2, %call183, !dbg !12308
  %add185 = add nsw i32 1, %mul184, !dbg !12308
  store i32 %add185, i32* %__j181, align 4, !dbg !12308
  call void @llvm.dbg.declare(metadata i8** %__s186, metadata !12309, metadata !DIExpression()), !dbg !12308
  %118 = load i32, i32* %__j181, align 4, !dbg !12308
  %conv187 = sext i32 %118 to i64, !dbg !12308
  %mul188 = mul i64 1, %conv187, !dbg !12308
  %119 = alloca i8, i64 %mul188, align 16, !dbg !12308
  store i8* %119, i8** %__s186, align 8, !dbg !12308
  %120 = load i8*, i8** %__s186, align 8, !dbg !12308
  %121 = load i32, i32* %__j181, align 4, !dbg !12308
  %conv189 = sext i32 %121 to i64, !dbg !12308
  %122 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12308
  %index190 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %122, i32 0, i32 9, !dbg !12308
  %123 = load i32, i32* %index190, align 8, !dbg !12308
  %call191 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %120, i64 %conv189, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.66, i64 0, i64 0), i32 %123), !dbg !12308
  %124 = load i8*, i8** %__s186, align 8, !dbg !12308
  call void @sel_prepare_string_for_dot_label(i8* %124), !dbg !12308
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12308
  %126 = load i8*, i8** %__s186, align 8, !dbg !12308
  %call192 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %125, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %126), !dbg !12308
  br label %do.end193, !dbg !12308

do.end193:                                        ; preds = %do.body180
  br label %if.end197, !dbg !12308

if.else194:                                       ; preds = %do.body177
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12302
  %128 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12302
  %index195 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %128, i32 0, i32 9, !dbg !12302
  %129 = load i32, i32* %index195, align 8, !dbg !12302
  %call196 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.66, i64 0, i64 0), i32 %129), !dbg !12302
  br label %if.end197

if.end197:                                        ; preds = %if.else194, %do.end193
  br label %do.end198, !dbg !12305

do.end198:                                        ; preds = %if.end197
  br label %if.end199, !dbg !12305

if.end199:                                        ; preds = %do.end198, %if.then173
  store i32 0, i32* %retval, align 4, !dbg !12310
  br label %return, !dbg !12310

if.end200:                                        ; preds = %if.end171
  call void @av_set_leave_one_nonspec(%struct._list_node** %orig_ops.addr), !dbg !12311
  %130 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12312
  %tobool201 = icmp ne %struct._list_node* %130, null, !dbg !12312
  br i1 %tobool201, label %cond.false203, label %cond.true202, !dbg !12312

cond.true202:                                     ; preds = %if.end200
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6487, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12312
  br label %cond.end204, !dbg !12312

cond.false203:                                    ; preds = %if.end200
  br label %cond.end204, !dbg !12312

cond.end204:                                      ; preds = %cond.false203, %cond.true202
  %cond205 = phi i32 [ 0, %cond.true202 ], [ 0, %cond.false203 ], !dbg !12312
  %131 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12313
  call void @_xlist_add(%struct._list_node** %path.addr, %struct.rtx_def* %131), !dbg !12313
  %132 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12314
  store %struct.rtx_def* %132, %struct.rtx_def** %first_insn, align 8, !dbg !12315
  %133 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12316
  %call206 = call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %133), !dbg !12317
  store %struct.rtx_def* %call206, %struct.rtx_def** %bb_tail, align 8, !dbg !12318
  br label %for.cond, !dbg !12319

for.cond:                                         ; preds = %if.end290, %cond.end204
  %134 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12320
  %135 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12324
  %tobool207 = icmp ne %struct.VEC_sel_insn_data_def_heap* %135, null, !dbg !12324
  br i1 %tobool207, label %cond.true208, label %cond.false209, !dbg !12324

cond.true208:                                     ; preds = %for.cond
  %136 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12324
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %136, i32 0, i32 0, !dbg !12324
  br label %cond.end210, !dbg !12324

cond.false209:                                    ; preds = %for.cond
  br label %cond.end210, !dbg !12324

cond.end210:                                      ; preds = %cond.false209, %cond.true208
  %cond211 = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true208 ], [ null, %cond.false209 ], !dbg !12324
  %137 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12324
  %tobool212 = icmp ne %struct.VEC_int_heap* %137, null, !dbg !12324
  br i1 %tobool212, label %cond.true213, label %cond.false215, !dbg !12324

cond.true213:                                     ; preds = %cond.end210
  %138 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12324
  %base214 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %138, i32 0, i32 0, !dbg !12324
  br label %cond.end216, !dbg !12324

cond.false215:                                    ; preds = %cond.end210
  br label %cond.end216, !dbg !12324

cond.end216:                                      ; preds = %cond.false215, %cond.true213
  %cond217 = phi %struct.VEC_int_base* [ %base214, %cond.true213 ], [ null, %cond.false215 ], !dbg !12324
  %139 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12324
  %u218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1, !dbg !12324
  %fld219 = bitcast %union.u* %u218 to [1 x %union.rtunion_def]*, !dbg !12324
  %arrayidx220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld219, i64 0, i64 0, !dbg !12324
  %rt_int221 = bitcast %union.rtunion_def* %arrayidx220 to i32*, !dbg !12324
  %140 = load i32, i32* %rt_int221, align 8, !dbg !12324
  %call222 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond217, i32 %140), !dbg !12324
  %call223 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond211, i32 %call222), !dbg !12324
  %expr224 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call223, i32 0, i32 0, !dbg !12324
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr224, i32 0, i32 0, !dbg !12324
  %141 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !12324
  %call225 = call %struct._expr* @av_set_lookup(%struct._list_node* %134, %struct.vinsn_def* %141), !dbg !12325
  store %struct._expr* %call225, %struct._expr** %expr, align 8, !dbg !12326
  %142 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12327
  %tobool226 = icmp ne %struct._expr* %142, null, !dbg !12327
  br i1 %tobool226, label %if.then227, label %if.else275, !dbg !12329

if.then227:                                       ; preds = %cond.end216
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last_insn, metadata !12330, metadata !DIExpression()), !dbg !12332
  %143 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12333
  %u228 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !12333
  %fld229 = bitcast %union.u* %u228 to [1 x %union.rtunion_def]*, !dbg !12333
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld229, i64 0, i64 1, !dbg !12333
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtx_def**, !dbg !12333
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12333
  store %struct.rtx_def* %144, %struct.rtx_def** %last_insn, align 8, !dbg !12332
  %145 = load i32, i32* @sched_verbose, align 4, !dbg !12334
  %cmp231 = icmp sge i32 %145, 6, !dbg !12336
  br i1 %cmp231, label %if.then233, label %if.end265, !dbg !12337

if.then233:                                       ; preds = %if.then227
  br label %do.body234, !dbg !12338

do.body234:                                       ; preds = %if.then233
  %146 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12339
  %tobool235 = icmp ne i8 %146, 0, !dbg !12339
  br i1 %tobool235, label %if.then236, label %if.else257, !dbg !12342

if.then236:                                       ; preds = %do.body234
  br label %do.body237, !dbg !12339

do.body237:                                       ; preds = %if.then236
  call void @llvm.dbg.declare(metadata i32* %__j238, metadata !12343, metadata !DIExpression()), !dbg !12345
  %147 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12345
  %u239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1, !dbg !12345
  %fld240 = bitcast %union.u* %u239 to [1 x %union.rtunion_def]*, !dbg !12345
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i64 0, i64 0, !dbg !12345
  %rt_int242 = bitcast %union.rtunion_def* %arrayidx241 to i32*, !dbg !12345
  %148 = load i32, i32* %rt_int242, align 8, !dbg !12345
  %call243 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.67, i64 0, i64 0), i32 %148), !dbg !12345
  %mul244 = mul nsw i32 2, %call243, !dbg !12345
  %add245 = add nsw i32 1, %mul244, !dbg !12345
  store i32 %add245, i32* %__j238, align 4, !dbg !12345
  call void @llvm.dbg.declare(metadata i8** %__s246, metadata !12346, metadata !DIExpression()), !dbg !12345
  %149 = load i32, i32* %__j238, align 4, !dbg !12345
  %conv247 = sext i32 %149 to i64, !dbg !12345
  %mul248 = mul i64 1, %conv247, !dbg !12345
  %150 = alloca i8, i64 %mul248, align 16, !dbg !12345
  store i8* %150, i8** %__s246, align 8, !dbg !12345
  %151 = load i8*, i8** %__s246, align 8, !dbg !12345
  %152 = load i32, i32* %__j238, align 4, !dbg !12345
  %conv249 = sext i32 %152 to i64, !dbg !12345
  %153 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12345
  %u250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !12345
  %fld251 = bitcast %union.u* %u250 to [1 x %union.rtunion_def]*, !dbg !12345
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i64 0, i64 0, !dbg !12345
  %rt_int253 = bitcast %union.rtunion_def* %arrayidx252 to i32*, !dbg !12345
  %154 = load i32, i32* %rt_int253, align 8, !dbg !12345
  %call254 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %151, i64 %conv249, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.67, i64 0, i64 0), i32 %154), !dbg !12345
  %155 = load i8*, i8** %__s246, align 8, !dbg !12345
  call void @sel_prepare_string_for_dot_label(i8* %155), !dbg !12345
  %156 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12345
  %157 = load i8*, i8** %__s246, align 8, !dbg !12345
  %call255 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %156, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %157), !dbg !12345
  br label %do.end256, !dbg !12345

do.end256:                                        ; preds = %do.body237
  br label %if.end263, !dbg !12345

if.else257:                                       ; preds = %do.body234
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12339
  %159 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12339
  %u258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1, !dbg !12339
  %fld259 = bitcast %union.u* %u258 to [1 x %union.rtunion_def]*, !dbg !12339
  %arrayidx260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld259, i64 0, i64 0, !dbg !12339
  %rt_int261 = bitcast %union.rtunion_def* %arrayidx260 to i32*, !dbg !12339
  %160 = load i32, i32* %rt_int261, align 8, !dbg !12339
  %call262 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %158, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.67, i64 0, i64 0), i32 %160), !dbg !12339
  br label %if.end263

if.end263:                                        ; preds = %if.else257, %do.end256
  br label %do.end264, !dbg !12342

do.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !12342

if.end265:                                        ; preds = %do.end264, %if.then227
  %161 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12347
  %orig_expr_found = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %161, i32 0, i32 1, !dbg !12348
  %162 = load void (%struct.rtx_def*, %struct._expr*, %struct.cmpd_local_params*, i8*)*, void (%struct.rtx_def*, %struct._expr*, %struct.cmpd_local_params*, i8*)** %orig_expr_found, align 8, !dbg !12348
  %163 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12349
  %164 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12350
  %165 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %local_params_in.addr, align 8, !dbg !12351
  %166 = load i8*, i8** %static_params.addr, align 8, !dbg !12352
  call void %162(%struct.rtx_def* %163, %struct._expr* %164, %struct.cmpd_local_params* %165, i8* %166), !dbg !12347
  %167 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12353
  %168 = load %struct.rtx_def*, %struct.rtx_def** %first_insn, align 8, !dbg !12355
  %cmp266 = icmp eq %struct.rtx_def* %167, %168, !dbg !12356
  br i1 %cmp266, label %if.then268, label %if.end274, !dbg !12357

if.then268:                                       ; preds = %if.end265
  %169 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !12358
  %u269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1, !dbg !12358
  %fld270 = bitcast %union.u* %u269 to [1 x %union.rtunion_def]*, !dbg !12358
  %arrayidx271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld270, i64 0, i64 2, !dbg !12358
  %rt_rtx272 = bitcast %union.rtunion_def* %arrayidx271 to %struct.rtx_def**, !dbg !12358
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx272, align 8, !dbg !12358
  store %struct.rtx_def* %170, %struct.rtx_def** %first_insn, align 8, !dbg !12360
  %171 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !12361
  %call273 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %171), !dbg !12362
  store i8 %call273, i8* %removed_last_insn, align 1, !dbg !12363
  br label %if.end274, !dbg !12364

if.end274:                                        ; preds = %if.then268, %if.end265
  %172 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !12365
  store %struct.rtx_def* %172, %struct.rtx_def** %insn.addr, align 8, !dbg !12366
  br label %for.end, !dbg !12367

if.else275:                                       ; preds = %cond.end216
  %173 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12368
  %orig_expr_not_found = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %173, i32 0, i32 2, !dbg !12371
  %174 = load i8 (%struct.rtx_def*, %struct._list_node*, i8*)*, i8 (%struct.rtx_def*, %struct._list_node*, i8*)** %orig_expr_not_found, align 8, !dbg !12371
  %175 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12372
  %176 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12373
  %177 = load i8*, i8** %static_params.addr, align 8, !dbg !12374
  %call276 = call zeroext i8 %174(%struct.rtx_def* %175, %struct._list_node* %176, i8* %177), !dbg !12368
  %tobool277 = icmp ne i8 %call276, 0, !dbg !12368
  br i1 %tobool277, label %if.then278, label %if.else279, !dbg !12375

if.then278:                                       ; preds = %if.else275
  %178 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12376
  call void @undo_transformations(%struct._list_node** %orig_ops.addr, %struct.rtx_def* %178), !dbg !12378
  br label %if.end280, !dbg !12379

if.else279:                                       ; preds = %if.else275
  call void @code_motion_path_driver_cleanup(%struct._list_node** %orig_ops.addr, %struct._list_node** %path.addr), !dbg !12380
  store i32 -1, i32* %retval, align 4, !dbg !12382
  br label %return, !dbg !12382

if.end280:                                        ; preds = %if.then278
  %179 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12383
  %tobool281 = icmp ne %struct._list_node* %179, null, !dbg !12383
  br i1 %tobool281, label %cond.false283, label %cond.true282, !dbg !12383

cond.true282:                                     ; preds = %if.end280
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6557, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12383
  br label %cond.end284, !dbg !12383

cond.false283:                                    ; preds = %if.end280
  br label %cond.end284, !dbg !12383

cond.end284:                                      ; preds = %cond.false283, %cond.true282
  %cond285 = phi i32 [ 0, %cond.true282 ], [ 0, %cond.false283 ], !dbg !12383
  br label %if.end286

if.end286:                                        ; preds = %cond.end284
  %180 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12384
  %181 = load %struct.rtx_def*, %struct.rtx_def** %bb_tail, align 8, !dbg !12386
  %cmp287 = icmp eq %struct.rtx_def* %180, %181, !dbg !12387
  br i1 %cmp287, label %if.then289, label %if.end290, !dbg !12388

if.then289:                                       ; preds = %if.end286
  br label %for.end, !dbg !12389

if.end290:                                        ; preds = %if.end286
  %182 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12390
  %u291 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1, !dbg !12390
  %fld292 = bitcast %union.u* %u291 to [1 x %union.rtunion_def]*, !dbg !12390
  %arrayidx293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld292, i64 0, i64 2, !dbg !12390
  %rt_rtx294 = bitcast %union.rtunion_def* %arrayidx293 to %struct.rtx_def**, !dbg !12390
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx294, align 8, !dbg !12390
  store %struct.rtx_def* %183, %struct.rtx_def** %insn.addr, align 8, !dbg !12391
  br label %for.cond, !dbg !12392, !llvm.loop !12393

for.end:                                          ; preds = %if.then289, %if.end274
  %184 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12396
  %tobool295 = icmp ne %struct._expr* %184, null, !dbg !12396
  br i1 %tobool295, label %if.end317, label %if.then296, !dbg !12398

if.then296:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %res, metadata !12399, metadata !DIExpression()), !dbg !12401
  %185 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12402
  %186 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12402
  %call297 = call %struct.rtx_def* @sel_bb_end(%struct.basic_block_def* %186), !dbg !12402
  %cmp298 = icmp eq %struct.rtx_def* %185, %call297, !dbg !12402
  br i1 %cmp298, label %cond.false301, label %cond.true300, !dbg !12402

cond.true300:                                     ; preds = %if.then296
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 6573, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12402
  br label %cond.end302, !dbg !12402

cond.false301:                                    ; preds = %if.then296
  br label %cond.end302, !dbg !12402

cond.end302:                                      ; preds = %cond.false301, %cond.true300
  %cond303 = phi i32 [ 0, %cond.true300 ], [ 0, %cond.false301 ], !dbg !12402
  %187 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12403
  %188 = load %struct.rtx_def*, %struct.rtx_def** %first_insn, align 8, !dbg !12405
  %cmp304 = icmp ne %struct.rtx_def* %187, %188, !dbg !12406
  br i1 %cmp304, label %if.then306, label %if.end307, !dbg !12407

if.then306:                                       ; preds = %cond.end302
  %189 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12408
  call void @_xlist_add(%struct._list_node** %path.addr, %struct.rtx_def* %189), !dbg !12408
  br label %if.end307, !dbg !12408

if.end307:                                        ; preds = %if.then306, %cond.end302
  %190 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12409
  %191 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12410
  %192 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !12411
  %193 = load i8*, i8** %static_params.addr, align 8, !dbg !12412
  %call308 = call i32 @code_motion_process_successors(%struct.rtx_def* %190, %struct._list_node* %191, %struct._list_node* %192, i8* %193), !dbg !12413
  store i32 %call308, i32* %res, align 4, !dbg !12414
  %194 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12415
  %195 = load %struct.rtx_def*, %struct.rtx_def** %first_insn, align 8, !dbg !12417
  %cmp309 = icmp ne %struct.rtx_def* %194, %195, !dbg !12418
  br i1 %cmp309, label %if.then311, label %if.end312, !dbg !12419

if.then311:                                       ; preds = %if.end307
  call void @_list_remove(%struct._list_node** %path.addr), !dbg !12420
  br label %if.end312, !dbg !12420

if.end312:                                        ; preds = %if.then311, %if.end307
  %196 = load i32, i32* %res, align 4, !dbg !12421
  %cmp313 = icmp ne i32 %196, 1, !dbg !12423
  br i1 %cmp313, label %if.then315, label %if.end316, !dbg !12424

if.then315:                                       ; preds = %if.end312
  call void @code_motion_path_driver_cleanup(%struct._list_node** %orig_ops.addr, %struct._list_node** %path.addr), !dbg !12425
  %197 = load i32, i32* %res, align 4, !dbg !12427
  store i32 %197, i32* %retval, align 4, !dbg !12428
  br label %return, !dbg !12428

if.end316:                                        ; preds = %if.end312
  br label %if.end317, !dbg !12429

if.end317:                                        ; preds = %if.end316, %for.end
  call void @av_set_clear(%struct._list_node** %orig_ops.addr), !dbg !12430
  %198 = load %struct.rtx_def*, %struct.rtx_def** %first_insn, align 8, !dbg !12431
  %u318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1, !dbg !12431
  %fld319 = bitcast %union.u* %u318 to [1 x %union.rtunion_def]*, !dbg !12431
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i64 0, i64 1, !dbg !12431
  %rt_rtx321 = bitcast %union.rtunion_def* %arrayidx320 to %struct.rtx_def**, !dbg !12431
  %199 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx321, align 8, !dbg !12431
  store %struct.rtx_def* %199, %struct.rtx_def** %before_first, align 8, !dbg !12432
  br label %while.cond, !dbg !12433

while.cond:                                       ; preds = %if.end327, %if.end317
  %200 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12434
  %201 = load %struct.rtx_def*, %struct.rtx_def** %before_first, align 8, !dbg !12435
  %cmp322 = icmp ne %struct.rtx_def* %200, %201, !dbg !12436
  br i1 %cmp322, label %while.body, label %while.end, !dbg !12433

while.body:                                       ; preds = %while.cond
  %202 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12437
  %ascend = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %202, i32 0, i32 5, !dbg !12440
  %203 = load void (%struct.rtx_def*, i8*)*, void (%struct.rtx_def*, i8*)** %ascend, align 8, !dbg !12440
  %tobool324 = icmp ne void (%struct.rtx_def*, i8*)* %203, null, !dbg !12437
  br i1 %tobool324, label %if.then325, label %if.end327, !dbg !12441

if.then325:                                       ; preds = %while.body
  %204 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12442
  %ascend326 = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %204, i32 0, i32 5, !dbg !12443
  %205 = load void (%struct.rtx_def*, i8*)*, void (%struct.rtx_def*, i8*)** %ascend326, align 8, !dbg !12443
  %206 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12444
  %207 = load i8*, i8** %static_params.addr, align 8, !dbg !12445
  call void %205(%struct.rtx_def* %206, i8* %207), !dbg !12442
  br label %if.end327, !dbg !12442

if.end327:                                        ; preds = %if.then325, %while.body
  %208 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12446
  %u328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1, !dbg !12446
  %fld329 = bitcast %union.u* %u328 to [1 x %union.rtunion_def]*, !dbg !12446
  %arrayidx330 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld329, i64 0, i64 1, !dbg !12446
  %rt_rtx331 = bitcast %union.rtunion_def* %arrayidx330 to %struct.rtx_def**, !dbg !12446
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx331, align 8, !dbg !12446
  store %struct.rtx_def* %209, %struct.rtx_def** %insn.addr, align 8, !dbg !12447
  br label %while.cond, !dbg !12433, !llvm.loop !12448

while.end:                                        ; preds = %while.cond
  %210 = load %struct.rtx_def*, %struct.rtx_def** %first_insn, align 8, !dbg !12450
  store %struct.rtx_def* %210, %struct.rtx_def** %insn.addr, align 8, !dbg !12451
  call void @_list_remove(%struct._list_node** %path.addr), !dbg !12452
  %211 = load i8, i8* %removed_last_insn, align 1, !dbg !12453
  %conv332 = zext i8 %211 to i32, !dbg !12453
  %212 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %local_params_in.addr, align 8, !dbg !12454
  %removed_last_insn333 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %212, i32 0, i32 5, !dbg !12455
  %213 = trunc i32 %conv332 to i8, !dbg !12456
  %bf.load = load i8, i8* %removed_last_insn333, align 8, !dbg !12456
  %bf.value = and i8 %213, 1, !dbg !12456
  %bf.clear = and i8 %bf.load, -2, !dbg !12456
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !12456
  store i8 %bf.set, i8* %removed_last_insn333, align 8, !dbg !12456
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !12456
  %214 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12457
  %at_first_insn = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %214, i32 0, i32 6, !dbg !12458
  %215 = load void (%struct.rtx_def*, %struct.cmpd_local_params*, i8*)*, void (%struct.rtx_def*, %struct.cmpd_local_params*, i8*)** %at_first_insn, align 8, !dbg !12458
  %216 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12459
  %217 = load %struct.cmpd_local_params*, %struct.cmpd_local_params** %local_params_in.addr, align 8, !dbg !12460
  %218 = load i8*, i8** %static_params.addr, align 8, !dbg !12461
  call void %215(%struct.rtx_def* %216, %struct.cmpd_local_params* %217, i8* %218), !dbg !12457
  %219 = load i8, i8* %removed_last_insn, align 1, !dbg !12462
  %tobool334 = icmp ne i8 %219, 0, !dbg !12462
  br i1 %tobool334, label %if.then335, label %if.end340, !dbg !12464

if.then335:                                       ; preds = %while.end
  %220 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12465
  %u336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %220, i32 0, i32 1, !dbg !12465
  %fld337 = bitcast %union.u* %u336 to [1 x %union.rtunion_def]*, !dbg !12465
  %arrayidx338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld337, i64 0, i64 1, !dbg !12465
  %rt_rtx339 = bitcast %union.rtunion_def* %arrayidx338 to %struct.rtx_def**, !dbg !12465
  %221 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx339, align 8, !dbg !12465
  store %struct.rtx_def* %221, %struct.rtx_def** %insn.addr, align 8, !dbg !12466
  br label %if.end340, !dbg !12467

if.end340:                                        ; preds = %if.then335, %while.end
  %222 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !12468
  %223 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12469
  %u341 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %223, i32 0, i32 1, !dbg !12469
  %fld342 = bitcast %union.u* %u341 to [1 x %union.rtunion_def]*, !dbg !12469
  %arrayidx343 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld342, i64 0, i64 3, !dbg !12469
  %rt_bb344 = bitcast %union.rtunion_def* %arrayidx343 to %struct.basic_block_def**, !dbg !12469
  %224 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb344, align 8, !dbg !12469
  %index345 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %224, i32 0, i32 9, !dbg !12470
  %225 = load i32, i32* %index345, align 8, !dbg !12470
  %call346 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %222, i32 %225), !dbg !12471
  store i32 1, i32* %retval, align 4, !dbg !12472
  br label %return, !dbg !12472

return:                                           ; preds = %if.end340, %if.then315, %if.else279, %if.end199, %if.then153, %if.end120, %if.end87
  %226 = load i32, i32* %retval, align 4, !dbg !12473
  ret i32 %226, !dbg !12473
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_list_iter_cond_def(%struct._list_node* %def_list, %struct._def** %def) #0 !dbg !12474 {
entry:
  %retval = alloca i8, align 1
  %def_list.addr = alloca %struct._list_node*, align 8
  %def.addr = alloca %struct._def**, align 8
  store %struct._list_node* %def_list, %struct._list_node** %def_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %def_list.addr, metadata !12478, metadata !DIExpression()), !dbg !12479
  store %struct._def** %def, %struct._def*** %def.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._def*** %def.addr, metadata !12480, metadata !DIExpression()), !dbg !12481
  %0 = load %struct._list_node*, %struct._list_node** %def_list.addr, align 8, !dbg !12482
  %tobool = icmp ne %struct._list_node* %0, null, !dbg !12482
  br i1 %tobool, label %if.then, label %if.end, !dbg !12484

if.then:                                          ; preds = %entry
  %1 = load %struct._list_node*, %struct._list_node** %def_list.addr, align 8, !dbg !12485
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %1, i32 0, i32 1, !dbg !12485
  %def1 = bitcast %union.anon.0* %u to %struct._def*, !dbg !12485
  %2 = load %struct._def**, %struct._def*** %def.addr, align 8, !dbg !12487
  store %struct._def* %def1, %struct._def** %2, align 8, !dbg !12488
  store i8 1, i8* %retval, align 1, !dbg !12489
  br label %return, !dbg !12489

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12490
  br label %return, !dbg !12490

return:                                           ; preds = %if.end, %if.then
  %3 = load i8, i8* %retval, align 1, !dbg !12491
  ret i8 %3, !dbg !12491
}

; Function Attrs: noinline nounwind uwtable
define internal void @mark_unavailable_hard_regs(%struct._def* %def, %struct.reg_rename* %reg_rename_p, %struct.bitmap_head_def* %used_regs) #0 !dbg !12492 {
entry:
  %def.addr = alloca %struct._def*, align 8
  %reg_rename_p.addr = alloca %struct.reg_rename*, align 8
  %used_regs.addr = alloca %struct.bitmap_head_def*, align 8
  %mode = alloca i32, align 4
  %cl = alloca i32, align 4
  %orig_dest = alloca %struct.rtx_def*, align 8
  %cur_reg = alloca i32, align 4
  %regno = alloca i32, align 4
  %hrsi = alloca %struct.hard_reg_set_iterator, align 8
  %i = alloca i32, align 4
  %nregs = alloca i32, align 4
  %i116 = alloca i32, align 4
  store %struct._def* %def, %struct._def** %def.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._def** %def.addr, metadata !12495, metadata !DIExpression()), !dbg !12496
  store %struct.reg_rename* %reg_rename_p, %struct.reg_rename** %reg_rename_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reg_rename** %reg_rename_p.addr, metadata !12497, metadata !DIExpression()), !dbg !12498
  store %struct.bitmap_head_def* %used_regs, %struct.bitmap_head_def** %used_regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %used_regs.addr, metadata !12499, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !12501, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.declare(metadata i32* %cl, metadata !12503, metadata !DIExpression()), !dbg !12504
  store i32 0, i32* %cl, align 4, !dbg !12504
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %orig_dest, metadata !12505, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.declare(metadata i32* %cur_reg, metadata !12507, metadata !DIExpression()), !dbg !12508
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !12509, metadata !DIExpression()), !dbg !12510
  call void @llvm.dbg.declare(metadata %struct.hard_reg_set_iterator* %hrsi, metadata !12511, metadata !DIExpression()), !dbg !12521
  %0 = load %struct._def*, %struct._def** %def.addr, align 8, !dbg !12522
  %orig_insn = getelementptr inbounds %struct._def, %struct._def* %0, i32 0, i32 0, !dbg !12522
  %1 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !12522
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !12522
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12522
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !12522
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !12522
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12522
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !12522
  %bf.load = load i32, i32* %3, align 8, !dbg !12522
  %bf.clear = and i32 %bf.load, 65535, !dbg !12522
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !12522
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !12522

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12522
  br label %cond.end, !dbg !12522

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12522

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !12522
  %4 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12523
  %tobool = icmp ne %struct.reg_rename* %4, null, !dbg !12523
  br i1 %tobool, label %cond.false2, label %cond.true1, !dbg !12523

cond.true1:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1217, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12523
  br label %cond.end3, !dbg !12523

cond.false2:                                      ; preds = %cond.end
  br label %cond.end3, !dbg !12523

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond4 = phi i32 [ 0, %cond.true1 ], [ 0, %cond.false2 ], !dbg !12523
  %5 = load %struct._def*, %struct._def** %def.addr, align 8, !dbg !12524
  %orig_insn5 = getelementptr inbounds %struct._def, %struct._def* %5, i32 0, i32 0, !dbg !12524
  %6 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn5, align 8, !dbg !12524
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !12524
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !12524
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 5, !dbg !12524
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !12524
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !12524
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !12524
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !12524
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, !dbg !12524
  %rt_rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !12524
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !12524
  store %struct.rtx_def* %8, %struct.rtx_def** %orig_dest, align 8, !dbg !12525
  %9 = load %struct.rtx_def*, %struct.rtx_def** %orig_dest, align 8, !dbg !12526
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !12526
  %bf.load14 = load i32, i32* %10, align 8, !dbg !12526
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !12526
  %cmp16 = icmp eq i32 %bf.clear15, 37, !dbg !12526
  br i1 %cmp16, label %if.end, label %if.then, !dbg !12528

if.then:                                          ; preds = %cond.end3
  br label %return, !dbg !12529

if.end:                                           ; preds = %cond.end3
  %11 = load %struct.rtx_def*, %struct.rtx_def** %orig_dest, align 8, !dbg !12530
  %call = call i32 @rhs_regno(%struct.rtx_def* %11), !dbg !12530
  store i32 %call, i32* %regno, align 4, !dbg !12531
  %12 = load i32, i32* @reload_completed, align 4, !dbg !12532
  %tobool17 = icmp ne i32 %12, 0, !dbg !12532
  br i1 %tobool17, label %if.end20, label %land.lhs.true, !dbg !12534

land.lhs.true:                                    ; preds = %if.end
  %13 = load i32, i32* %regno, align 4, !dbg !12535
  %cmp18 = icmp ult i32 %13, 53, !dbg !12535
  br i1 %cmp18, label %if.end20, label %if.then19, !dbg !12536

if.then19:                                        ; preds = %land.lhs.true
  br label %return, !dbg !12537

if.end20:                                         ; preds = %land.lhs.true, %if.end
  %14 = load i32, i32* @reload_completed, align 4, !dbg !12538
  %tobool21 = icmp ne i32 %14, 0, !dbg !12538
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !12540

if.then22:                                        ; preds = %if.end20
  %15 = load %struct._def*, %struct._def** %def.addr, align 8, !dbg !12541
  %orig_insn23 = getelementptr inbounds %struct._def, %struct._def* %15, i32 0, i32 0, !dbg !12542
  %16 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn23, align 8, !dbg !12542
  %call24 = call i32 @get_reg_class(%struct.rtx_def* %16), !dbg !12543
  store i32 %call24, i32* %cl, align 4, !dbg !12544
  br label %if.end25, !dbg !12545

if.end25:                                         ; preds = %if.then22, %if.end20
  %17 = load i32, i32* %regno, align 4, !dbg !12546
  %idxprom = zext i32 %17 to i64, !dbg !12548
  %arrayidx26 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom, !dbg !12548
  %18 = load i8, i8* %arrayidx26, align 1, !dbg !12548
  %conv = sext i8 %18 to i32, !dbg !12548
  %tobool27 = icmp ne i32 %conv, 0, !dbg !12548
  br i1 %tobool27, label %if.then43, label %lor.lhs.false, !dbg !12549

lor.lhs.false:                                    ; preds = %if.end25
  %19 = load i32, i32* %regno, align 4, !dbg !12550
  %idxprom28 = zext i32 %19 to i64, !dbg !12551
  %arrayidx29 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom28, !dbg !12551
  %20 = load i8, i8* %arrayidx29, align 1, !dbg !12551
  %conv30 = sext i8 %20 to i32, !dbg !12551
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !12551
  br i1 %tobool31, label %if.then43, label %lor.lhs.false32, !dbg !12552

lor.lhs.false32:                                  ; preds = %lor.lhs.false
  %21 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !12553
  %conv33 = zext i8 %21 to i32, !dbg !12553
  %tobool34 = icmp ne i32 %conv33, 0, !dbg !12553
  br i1 %tobool34, label %land.lhs.true35, label %lor.lhs.false38, !dbg !12554

land.lhs.true35:                                  ; preds = %lor.lhs.false32
  %22 = load i32, i32* %regno, align 4, !dbg !12555
  %cmp36 = icmp eq i32 %22, 6, !dbg !12556
  br i1 %cmp36, label %if.then43, label %lor.lhs.false38, !dbg !12557

lor.lhs.false38:                                  ; preds = %land.lhs.true35, %lor.lhs.false32
  %23 = load i32, i32* @reload_completed, align 4, !dbg !12558
  %tobool39 = icmp ne i32 %23, 0, !dbg !12558
  br i1 %tobool39, label %land.lhs.true40, label %if.end48, !dbg !12559

land.lhs.true40:                                  ; preds = %lor.lhs.false38
  %24 = load i32, i32* %cl, align 4, !dbg !12560
  %cmp41 = icmp eq i32 %24, 0, !dbg !12561
  br i1 %cmp41, label %if.then43, label %if.end48, !dbg !12562

if.then43:                                        ; preds = %land.lhs.true40, %land.lhs.true35, %lor.lhs.false, %if.end25
  %25 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12563
  %unavailable_hard_regs = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %25, i32 0, i32 0, !dbg !12563
  store i64 -1, i64* %unavailable_hard_regs, align 8, !dbg !12563
  %26 = load %struct._def*, %struct._def** %def.addr, align 8, !dbg !12565
  %crosses_call = getelementptr inbounds %struct._def, %struct._def* %26, i32 0, i32 1, !dbg !12567
  %27 = load i8, i8* %crosses_call, align 8, !dbg !12567
  %tobool44 = icmp ne i8 %27, 0, !dbg !12565
  br i1 %tobool44, label %if.end47, label %if.then45, !dbg !12568

if.then45:                                        ; preds = %if.then43
  %28 = load i32, i32* %regno, align 4, !dbg !12569
  %sh_prom = zext i32 %28 to i64, !dbg !12569
  %shl = shl i64 1, %sh_prom, !dbg !12569
  %neg = xor i64 %shl, -1, !dbg !12569
  %29 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12569
  %unavailable_hard_regs46 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %29, i32 0, i32 0, !dbg !12569
  %30 = load i64, i64* %unavailable_hard_regs46, align 8, !dbg !12569
  %and = and i64 %30, %neg, !dbg !12569
  store i64 %and, i64* %unavailable_hard_regs46, align 8, !dbg !12569
  br label %if.end47, !dbg !12569

if.end47:                                         ; preds = %if.then45, %if.then43
  br label %return, !dbg !12570

if.end48:                                         ; preds = %land.lhs.true40, %lor.lhs.false38
  %31 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !12571
  %tobool49 = icmp ne i8 %31, 0, !dbg !12571
  br i1 %tobool49, label %if.then50, label %if.end67, !dbg !12573

if.then50:                                        ; preds = %if.end48
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12574, metadata !DIExpression()), !dbg !12576
  %32 = load i8, i8* getelementptr inbounds ([53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 20, i64 16), align 4, !dbg !12577
  %conv51 = zext i8 %32 to i32, !dbg !12577
  store i32 %conv51, i32* %i, align 4, !dbg !12579
  br label %for.cond, !dbg !12580

for.cond:                                         ; preds = %for.body, %if.then50
  %33 = load i32, i32* %i, align 4, !dbg !12581
  %dec = add nsw i32 %33, -1, !dbg !12581
  store i32 %dec, i32* %i, align 4, !dbg !12581
  %tobool52 = icmp ne i32 %33, 0, !dbg !12583
  br i1 %tobool52, label %for.body, label %for.end, !dbg !12583

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %i, align 4, !dbg !12584
  %add = add nsw i32 20, %34, !dbg !12584
  %sh_prom53 = zext i32 %add to i64, !dbg !12584
  %shl54 = shl i64 1, %sh_prom53, !dbg !12584
  %35 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12584
  %unavailable_hard_regs55 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %35, i32 0, i32 0, !dbg !12584
  %36 = load i64, i64* %unavailable_hard_regs55, align 8, !dbg !12584
  %or = or i64 %36, %shl54, !dbg !12584
  store i64 %or, i64* %unavailable_hard_regs55, align 8, !dbg !12584
  br label %for.cond, !dbg !12585, !llvm.loop !12586

for.end:                                          ; preds = %for.cond
  %37 = load i8, i8* getelementptr inbounds ([53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 6, i64 16), align 2, !dbg !12588
  %conv56 = zext i8 %37 to i32, !dbg !12588
  store i32 %conv56, i32* %i, align 4, !dbg !12590
  br label %for.cond57, !dbg !12591

for.cond57:                                       ; preds = %for.body60, %for.end
  %38 = load i32, i32* %i, align 4, !dbg !12592
  %dec58 = add nsw i32 %38, -1, !dbg !12592
  store i32 %dec58, i32* %i, align 4, !dbg !12592
  %tobool59 = icmp ne i32 %38, 0, !dbg !12594
  br i1 %tobool59, label %for.body60, label %for.end66, !dbg !12594

for.body60:                                       ; preds = %for.cond57
  %39 = load i32, i32* %i, align 4, !dbg !12595
  %add61 = add nsw i32 6, %39, !dbg !12595
  %sh_prom62 = zext i32 %add61 to i64, !dbg !12595
  %shl63 = shl i64 1, %sh_prom62, !dbg !12595
  %40 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12595
  %unavailable_hard_regs64 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %40, i32 0, i32 0, !dbg !12595
  %41 = load i64, i64* %unavailable_hard_regs64, align 8, !dbg !12595
  %or65 = or i64 %41, %shl63, !dbg !12595
  store i64 %or65, i64* %unavailable_hard_regs64, align 8, !dbg !12595
  br label %for.cond57, !dbg !12596, !llvm.loop !12597

for.end66:                                        ; preds = %for.cond57
  br label %if.end67, !dbg !12599

if.end67:                                         ; preds = %for.end66, %if.end48
  %42 = load %struct.rtx_def*, %struct.rtx_def** %orig_dest, align 8, !dbg !12600
  %call68 = call i32 @rhs_regno(%struct.rtx_def* %42), !dbg !12600
  %conv69 = zext i32 %call68 to i64, !dbg !12600
  %sub = sub i64 %conv69, 8, !dbg !12600
  %cmp70 = icmp ule i64 %sub, 7, !dbg !12600
  br i1 %cmp70, label %land.lhs.true72, label %if.end78, !dbg !12602

land.lhs.true72:                                  ; preds = %if.end67
  %43 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %used_regs.addr, align 8, !dbg !12603
  %call73 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %43, i32 8), !dbg !12603
  %tobool74 = icmp ne i32 %call73, 0, !dbg !12603
  br i1 %tobool74, label %if.then75, label %if.end78, !dbg !12604

if.then75:                                        ; preds = %land.lhs.true72
  %44 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 5), align 8, !dbg !12605
  %45 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12605
  %unavailable_hard_regs76 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %45, i32 0, i32 0, !dbg !12605
  %46 = load i64, i64* %unavailable_hard_regs76, align 8, !dbg !12605
  %or77 = or i64 %46, %44, !dbg !12605
  store i64 %or77, i64* %unavailable_hard_regs76, align 8, !dbg !12605
  br label %if.end78, !dbg !12605

if.end78:                                         ; preds = %if.then75, %land.lhs.true72, %if.end67
  %47 = load %struct._def*, %struct._def** %def.addr, align 8, !dbg !12606
  %crosses_call79 = getelementptr inbounds %struct._def, %struct._def* %47, i32 0, i32 1, !dbg !12608
  %48 = load i8, i8* %crosses_call79, align 8, !dbg !12608
  %tobool80 = icmp ne i8 %48, 0, !dbg !12606
  br i1 %tobool80, label %if.then81, label %if.end84, !dbg !12609

if.then81:                                        ; preds = %if.end78
  %49 = load i64, i64* @call_used_reg_set, align 8, !dbg !12610
  %50 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12610
  %unavailable_hard_regs82 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %50, i32 0, i32 0, !dbg !12610
  %51 = load i64, i64* %unavailable_hard_regs82, align 8, !dbg !12610
  %or83 = or i64 %51, %49, !dbg !12610
  store i64 %or83, i64* %unavailable_hard_regs82, align 8, !dbg !12610
  br label %if.end84, !dbg !12610

if.end84:                                         ; preds = %if.then81, %if.end78
  %52 = load i32, i32* @reload_completed, align 4, !dbg !12611
  %tobool85 = icmp ne i32 %52, 0, !dbg !12611
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !12613

if.then86:                                        ; preds = %if.end84
  br label %return, !dbg !12614

if.end87:                                         ; preds = %if.end84
  %53 = load i32, i32* %cl, align 4, !dbg !12615
  %idxprom88 = zext i32 %53 to i64, !dbg !12615
  %arrayidx89 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom88, !dbg !12615
  %54 = load i64, i64* %arrayidx89, align 8, !dbg !12615
  %55 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12615
  %available_for_renaming = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %55, i32 0, i32 1, !dbg !12615
  store i64 %54, i64* %available_for_renaming, align 8, !dbg !12615
  %56 = load %struct.rtx_def*, %struct.rtx_def** %orig_dest, align 8, !dbg !12616
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !12616
  %bf.load90 = load i32, i32* %57, align 8, !dbg !12616
  %bf.lshr = lshr i32 %bf.load90, 16, !dbg !12616
  %bf.clear91 = and i32 %bf.lshr, 255, !dbg !12616
  store i32 %bf.clear91, i32* %mode, align 4, !dbg !12617
  %58 = load i32, i32* %mode, align 4, !dbg !12618
  %idxprom92 = zext i32 %58 to i64, !dbg !12620
  %arrayidx93 = getelementptr inbounds [87 x i8], [87 x i8]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 1), i64 0, i64 %idxprom92, !dbg !12620
  %59 = load i8, i8* %arrayidx93, align 1, !dbg !12620
  %tobool94 = icmp ne i8 %59, 0, !dbg !12620
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !12621

if.then95:                                        ; preds = %if.end87
  %60 = load i32, i32* %mode, align 4, !dbg !12622
  call void @init_regs_for_mode(i32 %60), !dbg !12623
  br label %if.end96, !dbg !12623

if.end96:                                         ; preds = %if.then95, %if.end87
  %61 = load i32, i32* %mode, align 4, !dbg !12624
  %idxprom97 = zext i32 %61 to i64, !dbg !12624
  %arrayidx98 = getelementptr inbounds [87 x i64], [87 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 0), i64 0, i64 %idxprom97, !dbg !12624
  %62 = load i64, i64* %arrayidx98, align 8, !dbg !12624
  %63 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12624
  %available_for_renaming99 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %63, i32 0, i32 1, !dbg !12624
  %64 = load i64, i64* %available_for_renaming99, align 8, !dbg !12624
  %and100 = and i64 %64, %62, !dbg !12624
  store i64 %and100, i64* %available_for_renaming99, align 8, !dbg !12624
  %65 = load %struct._def*, %struct._def** %def.addr, align 8, !dbg !12625
  %crosses_call101 = getelementptr inbounds %struct._def, %struct._def* %65, i32 0, i32 1, !dbg !12627
  %66 = load i8, i8* %crosses_call101, align 8, !dbg !12627
  %conv102 = zext i8 %66 to i32, !dbg !12625
  %tobool103 = icmp ne i32 %conv102, 0, !dbg !12625
  br i1 %tobool103, label %if.then104, label %if.end110, !dbg !12628

if.then104:                                       ; preds = %if.end96
  %67 = load i32, i32* %mode, align 4, !dbg !12629
  %idxprom105 = zext i32 %67 to i64, !dbg !12629
  %arrayidx106 = getelementptr inbounds [87 x i64], [87 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 3), i64 0, i64 %idxprom105, !dbg !12629
  %68 = load i64, i64* %arrayidx106, align 8, !dbg !12629
  %neg107 = xor i64 %68, -1, !dbg !12629
  %69 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12629
  %available_for_renaming108 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %69, i32 0, i32 1, !dbg !12629
  %70 = load i64, i64* %available_for_renaming108, align 8, !dbg !12629
  %and109 = and i64 %70, %neg107, !dbg !12629
  store i64 %and109, i64* %available_for_renaming108, align 8, !dbg !12629
  br label %if.end110, !dbg !12629

if.end110:                                        ; preds = %if.then104, %if.end96
  %71 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12630
  %available_for_renaming111 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %71, i32 0, i32 1, !dbg !12630
  %72 = load i64, i64* %available_for_renaming111, align 8, !dbg !12630
  call void @hard_reg_set_iter_init(%struct.hard_reg_set_iterator* %hrsi, i64 %72, i32 0, i32* %cur_reg), !dbg !12630
  br label %for.cond112, !dbg !12630

for.cond112:                                      ; preds = %for.inc150, %if.end110
  %call113 = call zeroext i8 @hard_reg_set_iter_set(%struct.hard_reg_set_iterator* %hrsi, i32* %cur_reg), !dbg !12632
  %tobool114 = icmp ne i8 %call113, 0, !dbg !12630
  br i1 %tobool114, label %for.body115, label %for.end151, !dbg !12630

for.body115:                                      ; preds = %for.cond112
  call void @llvm.dbg.declare(metadata i32* %nregs, metadata !12634, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.declare(metadata i32* %i116, metadata !12637, metadata !DIExpression()), !dbg !12638
  %73 = load i32, i32* %cur_reg, align 4, !dbg !12639
  %idxprom117 = zext i32 %73 to i64, !dbg !12640
  %arrayidx118 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom117, !dbg !12640
  %74 = load i32, i32* %mode, align 4, !dbg !12641
  %idxprom119 = zext i32 %74 to i64, !dbg !12640
  %arrayidx120 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx118, i64 0, i64 %idxprom119, !dbg !12640
  %75 = load i8, i8* %arrayidx120, align 1, !dbg !12640
  %conv121 = zext i8 %75 to i32, !dbg !12640
  store i32 %conv121, i32* %nregs, align 4, !dbg !12642
  %76 = load i32, i32* %nregs, align 4, !dbg !12643
  %cmp122 = icmp sgt i32 %76, 0, !dbg !12643
  br i1 %cmp122, label %cond.false125, label %cond.true124, !dbg !12643

cond.true124:                                     ; preds = %for.body115
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1324, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12643
  br label %cond.end126, !dbg !12643

cond.false125:                                    ; preds = %for.body115
  br label %cond.end126, !dbg !12643

cond.end126:                                      ; preds = %cond.false125, %cond.true124
  %cond127 = phi i32 [ 0, %cond.true124 ], [ 0, %cond.false125 ], !dbg !12643
  %77 = load i32, i32* %nregs, align 4, !dbg !12644
  %sub128 = sub nsw i32 %77, 1, !dbg !12646
  store i32 %sub128, i32* %i116, align 4, !dbg !12647
  br label %for.cond129, !dbg !12648

for.cond129:                                      ; preds = %for.inc, %cond.end126
  %78 = load i32, i32* %i116, align 4, !dbg !12649
  %cmp130 = icmp sge i32 %78, 0, !dbg !12651
  br i1 %cmp130, label %for.body132, label %for.end140, !dbg !12652

for.body132:                                      ; preds = %for.cond129
  %79 = load i32, i32* %regno, align 4, !dbg !12653
  %80 = load i32, i32* %i116, align 4, !dbg !12655
  %add133 = add i32 %79, %80, !dbg !12656
  %81 = load i32, i32* %cur_reg, align 4, !dbg !12657
  %82 = load i32, i32* %i116, align 4, !dbg !12658
  %add134 = add i32 %81, %82, !dbg !12659
  %call135 = call zeroext i8 @sel_hard_regno_rename_ok(i32 %add133, i32 %add134), !dbg !12660
  %tobool136 = icmp ne i8 %call135, 0, !dbg !12660
  br i1 %tobool136, label %if.end138, label %if.then137, !dbg !12661

if.then137:                                       ; preds = %for.body132
  br label %for.end140, !dbg !12662

if.end138:                                        ; preds = %for.body132
  br label %for.inc, !dbg !12663

for.inc:                                          ; preds = %if.end138
  %83 = load i32, i32* %i116, align 4, !dbg !12664
  %dec139 = add nsw i32 %83, -1, !dbg !12664
  store i32 %dec139, i32* %i116, align 4, !dbg !12664
  br label %for.cond129, !dbg !12665, !llvm.loop !12666

for.end140:                                       ; preds = %if.then137, %for.cond129
  %84 = load i32, i32* %i116, align 4, !dbg !12668
  %cmp141 = icmp sge i32 %84, 0, !dbg !12670
  br i1 %cmp141, label %if.then143, label %if.end149, !dbg !12671

if.then143:                                       ; preds = %for.end140
  %85 = load i32, i32* %cur_reg, align 4, !dbg !12672
  %sh_prom144 = zext i32 %85 to i64, !dbg !12672
  %shl145 = shl i64 1, %sh_prom144, !dbg !12672
  %neg146 = xor i64 %shl145, -1, !dbg !12672
  %86 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12672
  %available_for_renaming147 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %86, i32 0, i32 1, !dbg !12672
  %87 = load i64, i64* %available_for_renaming147, align 8, !dbg !12672
  %and148 = and i64 %87, %neg146, !dbg !12672
  store i64 %and148, i64* %available_for_renaming147, align 8, !dbg !12672
  br label %if.end149, !dbg !12672

if.end149:                                        ; preds = %if.then143, %for.end140
  br label %for.inc150, !dbg !12673

for.inc150:                                       ; preds = %if.end149
  call void @hard_reg_set_iter_next(%struct.hard_reg_set_iterator* %hrsi, i32* %cur_reg), !dbg !12632
  br label %for.cond112, !dbg !12632, !llvm.loop !12674

for.end151:                                       ; preds = %for.cond112
  %88 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12676
  %unavailable_hard_regs152 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %88, i32 0, i32 0, !dbg !12676
  %89 = load i64, i64* %unavailable_hard_regs152, align 8, !dbg !12676
  %neg153 = xor i64 %89, -1, !dbg !12676
  %90 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12676
  %available_for_renaming154 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %90, i32 0, i32 1, !dbg !12676
  %91 = load i64, i64* %available_for_renaming154, align 8, !dbg !12676
  %and155 = and i64 %91, %neg153, !dbg !12676
  store i64 %and155, i64* %available_for_renaming154, align 8, !dbg !12676
  %92 = load i32, i32* %regno, align 4, !dbg !12677
  %sh_prom156 = zext i32 %92 to i64, !dbg !12677
  %shl157 = shl i64 1, %sh_prom156, !dbg !12677
  %93 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !12677
  %available_for_renaming158 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %93, i32 0, i32 1, !dbg !12677
  %94 = load i64, i64* %available_for_renaming158, align 8, !dbg !12677
  %or159 = or i64 %94, %shl157, !dbg !12677
  store i64 %or159, i64* %available_for_renaming158, align 8, !dbg !12677
  br label %return, !dbg !12678

return:                                           ; preds = %for.end151, %if.then86, %if.end47, %if.then19, %if.then
  ret void, !dbg !12678
}

declare dso_local void @dump_insn(%struct.rtx_def*) #2

declare dso_local void @av_set_intersect(%struct._list_node**, %struct._list_node*) #2

declare dso_local %struct._list_node* @get_av_set(%struct.rtx_def*) #2

declare dso_local void @av_set_leave_one_nonspec(%struct._list_node**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @undo_transformations(%struct._list_node** %av_ptr, %struct.rtx_def* %insn) #0 !dbg !12679 {
entry:
  %av_ptr.addr = alloca %struct._list_node**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %av_iter = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  %new_set = alloca %struct._list_node*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %index = alloca i32, align 4
  %phist = alloca %struct.expr_history_def_1*, align 8
  %old_ds = alloca i32, align 4
  %new_ds = alloca i32, align 4
  %_tmp_expr = alloca %struct._expr, align 8
  %tmp_expr = alloca %struct._expr*, align 8
  %new_vi = alloca %struct.vinsn_def*, align 8
  %add76 = alloca i8, align 1
  store %struct._list_node** %av_ptr, %struct._list_node*** %av_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %av_ptr.addr, metadata !12682, metadata !DIExpression()), !dbg !12683
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !12684, metadata !DIExpression()), !dbg !12685
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %av_iter, metadata !12686, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !12688, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.declare(metadata %struct._list_node** %new_set, metadata !12690, metadata !DIExpression()), !dbg !12691
  store %struct._list_node* null, %struct._list_node** %new_set, align 8, !dbg !12691
  %0 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !12692
  call void @_list_iter_start(%struct._list_iterator* %av_iter, %struct._list_node** %0, i8 zeroext 1), !dbg !12692
  br label %for.cond, !dbg !12692

for.cond:                                         ; preds = %for.inc, %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %av_iter, i32 0, i32 0, !dbg !12694
  %1 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !12694
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !12694
  %call = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %2, %struct._expr** %expr), !dbg !12694
  %tobool = icmp ne i8 %call, 0, !dbg !12692
  br i1 %tobool, label %for.body, label %for.end, !dbg !12692

for.body:                                         ; preds = %for.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12696
  %4 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12698
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %4, i32 0, i32 0, !dbg !12698
  %5 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !12698
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %5, i32 0, i32 0, !dbg !12698
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !12698
  %call1 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %3, %struct.rtx_def* %6), !dbg !12699
  %tobool2 = icmp ne i8 %call1, 0, !dbg !12699
  br i1 %tobool2, label %if.end53, label %land.lhs.true, !dbg !12700

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12701
  %tobool3 = icmp ne %struct.VEC_sel_insn_data_def_heap* %7, null, !dbg !12701
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !12701

cond.true:                                        ; preds = %land.lhs.true
  %8 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !12701
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %8, i32 0, i32 0, !dbg !12701
  br label %cond.end, !dbg !12701

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !12701

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !12701
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12701
  %tobool4 = icmp ne %struct.VEC_int_heap* %9, null, !dbg !12701
  br i1 %tobool4, label %cond.true5, label %cond.false7, !dbg !12701

cond.true5:                                       ; preds = %cond.end
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !12701
  %base6 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i32 0, i32 0, !dbg !12701
  br label %cond.end8, !dbg !12701

cond.false7:                                      ; preds = %cond.end
  br label %cond.end8, !dbg !12701

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi %struct.VEC_int_base* [ %base6, %cond.true5 ], [ null, %cond.false7 ], !dbg !12701
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12701
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !12701
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12701
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12701
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !12701
  %12 = load i32, i32* %rt_int, align 8, !dbg !12701
  %call10 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond9, i32 %12), !dbg !12701
  %call11 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call10), !dbg !12701
  %expr12 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call11, i32 0, i32 0, !dbg !12701
  %vinsn13 = getelementptr inbounds %struct._expr, %struct._expr* %expr12, i32 0, i32 0, !dbg !12701
  %13 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn13, align 8, !dbg !12701
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %13, i32 0, i32 1, !dbg !12701
  %reg_sets = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 3, !dbg !12701
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_sets, align 8, !dbg !12701
  %15 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12702
  %vinsn14 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 0, !dbg !12702
  %16 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn14, align 8, !dbg !12702
  %id15 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %16, i32 0, i32 1, !dbg !12702
  %reg_uses = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id15, i32 0, i32 5, !dbg !12702
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %reg_uses, align 8, !dbg !12702
  %call16 = call zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def* %14, %struct.bitmap_head_def* %17), !dbg !12703
  %conv = zext i8 %call16 to i32, !dbg !12703
  %tobool17 = icmp ne i32 %conv, 0, !dbg !12703
  br i1 %tobool17, label %land.lhs.true18, label %if.end53, !dbg !12704

land.lhs.true18:                                  ; preds = %cond.end8
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12705
  %call19 = call zeroext i8 @identical_copy_p(%struct.rtx_def* %18), !dbg !12706
  %tobool20 = icmp ne i8 %call19, 0, !dbg !12706
  br i1 %tobool20, label %if.end53, label %if.then, !dbg !12707

if.then:                                          ; preds = %land.lhs.true18
  %19 = load i32, i32* @sched_verbose, align 4, !dbg !12708
  %cmp = icmp sge i32 %19, 6, !dbg !12711
  br i1 %cmp, label %if.then22, label %if.end52, !dbg !12712

if.then22:                                        ; preds = %if.then
  br label %do.body, !dbg !12713

do.body:                                          ; preds = %if.then22
  %20 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !12714
  %tobool23 = icmp ne i8 %20, 0, !dbg !12714
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !12717

if.then24:                                        ; preds = %do.body
  br label %do.body25, !dbg !12714

do.body25:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !12718, metadata !DIExpression()), !dbg !12720
  %21 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12720
  %vinsn26 = getelementptr inbounds %struct._expr, %struct._expr* %21, i32 0, i32 0, !dbg !12720
  %22 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn26, align 8, !dbg !12720
  %insn_rtx27 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %22, i32 0, i32 0, !dbg !12720
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx27, align 8, !dbg !12720
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !12720
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !12720
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 0, !dbg !12720
  %rt_int31 = bitcast %union.rtunion_def* %arrayidx30 to i32*, !dbg !12720
  %24 = load i32, i32* %rt_int31, align 8, !dbg !12720
  %call32 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.68, i64 0, i64 0), i32 %24), !dbg !12720
  %mul = mul nsw i32 2, %call32, !dbg !12720
  %add = add nsw i32 1, %mul, !dbg !12720
  store i32 %add, i32* %__j, align 4, !dbg !12720
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !12721, metadata !DIExpression()), !dbg !12720
  %25 = load i32, i32* %__j, align 4, !dbg !12720
  %conv33 = sext i32 %25 to i64, !dbg !12720
  %mul34 = mul i64 1, %conv33, !dbg !12720
  %26 = alloca i8, i64 %mul34, align 16, !dbg !12720
  store i8* %26, i8** %__s, align 8, !dbg !12720
  %27 = load i8*, i8** %__s, align 8, !dbg !12720
  %28 = load i32, i32* %__j, align 4, !dbg !12720
  %conv35 = sext i32 %28 to i64, !dbg !12720
  %29 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12720
  %vinsn36 = getelementptr inbounds %struct._expr, %struct._expr* %29, i32 0, i32 0, !dbg !12720
  %30 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn36, align 8, !dbg !12720
  %insn_rtx37 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %30, i32 0, i32 0, !dbg !12720
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx37, align 8, !dbg !12720
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !12720
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !12720
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 0, !dbg !12720
  %rt_int41 = bitcast %union.rtunion_def* %arrayidx40 to i32*, !dbg !12720
  %32 = load i32, i32* %rt_int41, align 8, !dbg !12720
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %27, i64 %conv35, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.68, i64 0, i64 0), i32 %32), !dbg !12720
  %33 = load i8*, i8** %__s, align 8, !dbg !12720
  call void @sel_prepare_string_for_dot_label(i8* %33), !dbg !12720
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12720
  %35 = load i8*, i8** %__s, align 8, !dbg !12720
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %35), !dbg !12720
  br label %do.end, !dbg !12720

do.end:                                           ; preds = %do.body25
  br label %if.end, !dbg !12720

if.else:                                          ; preds = %do.body
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !12714
  %37 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12714
  %vinsn44 = getelementptr inbounds %struct._expr, %struct._expr* %37, i32 0, i32 0, !dbg !12714
  %38 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn44, align 8, !dbg !12714
  %insn_rtx45 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %38, i32 0, i32 0, !dbg !12714
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx45, align 8, !dbg !12714
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !12714
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !12714
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !12714
  %rt_int49 = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !12714
  %40 = load i32, i32* %rt_int49, align 8, !dbg !12714
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.68, i64 0, i64 0), i32 %40), !dbg !12714
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end51, !dbg !12717

do.end51:                                         ; preds = %if.end
  br label %if.end52, !dbg !12717

if.end52:                                         ; preds = %do.end51, %if.then
  call void @av_set_iter_remove(%struct._list_iterator* %av_iter), !dbg !12722
  br label %if.end53, !dbg !12723

if.end53:                                         ; preds = %if.end52, %land.lhs.true18, %cond.end8, %for.body
  br label %for.inc, !dbg !12724

for.inc:                                          ; preds = %if.end53
  call void @_list_iter_next(%struct._list_iterator* %av_iter), !dbg !12694
  br label %for.cond, !dbg !12694, !llvm.loop !12725

for.end:                                          ; preds = %for.cond
  %41 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !12727
  call void @_list_iter_start(%struct._list_iterator* %av_iter, %struct._list_node** %41, i8 zeroext 0), !dbg !12727
  br label %for.cond54, !dbg !12727

for.cond54:                                       ; preds = %for.inc103, %for.end
  %lp55 = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %av_iter, i32 0, i32 0, !dbg !12729
  %42 = load %struct._list_node**, %struct._list_node*** %lp55, align 8, !dbg !12729
  %43 = load %struct._list_node*, %struct._list_node** %42, align 8, !dbg !12729
  %call56 = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %43, %struct._expr** %expr), !dbg !12729
  %tobool57 = icmp ne i8 %call56, 0, !dbg !12727
  br i1 %tobool57, label %for.body58, label %for.end104, !dbg !12727

for.body58:                                       ; preds = %for.cond54
  call void @llvm.dbg.declare(metadata i32* %index, metadata !12731, metadata !DIExpression()), !dbg !12733
  %44 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12734
  %history_of_changes = getelementptr inbounds %struct._expr, %struct._expr* %44, i32 0, i32 10, !dbg !12734
  %45 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %history_of_changes, align 8, !dbg !12734
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12735
  %47 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12736
  %vinsn59 = getelementptr inbounds %struct._expr, %struct._expr* %47, i32 0, i32 0, !dbg !12736
  %48 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn59, align 8, !dbg !12736
  %call60 = call i32 @find_in_history_vect(%struct.VEC_expr_history_def_heap* %45, %struct.rtx_def* %46, %struct.vinsn_def* %48, i8 zeroext 1), !dbg !12737
  store i32 %call60, i32* %index, align 4, !dbg !12733
  %49 = load i32, i32* %index, align 4, !dbg !12738
  %cmp61 = icmp sge i32 %49, 0, !dbg !12740
  br i1 %cmp61, label %if.then63, label %if.end102, !dbg !12741

if.then63:                                        ; preds = %for.body58
  call void @llvm.dbg.declare(metadata %struct.expr_history_def_1** %phist, metadata !12742, metadata !DIExpression()), !dbg !12745
  %50 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12746
  %history_of_changes64 = getelementptr inbounds %struct._expr, %struct._expr* %50, i32 0, i32 10, !dbg !12746
  %51 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %history_of_changes64, align 8, !dbg !12746
  %tobool65 = icmp ne %struct.VEC_expr_history_def_heap* %51, null, !dbg !12746
  br i1 %tobool65, label %cond.true66, label %cond.false69, !dbg !12746

cond.true66:                                      ; preds = %if.then63
  %52 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12746
  %history_of_changes67 = getelementptr inbounds %struct._expr, %struct._expr* %52, i32 0, i32 10, !dbg !12746
  %53 = load %struct.VEC_expr_history_def_heap*, %struct.VEC_expr_history_def_heap** %history_of_changes67, align 8, !dbg !12746
  %base68 = getelementptr inbounds %struct.VEC_expr_history_def_heap, %struct.VEC_expr_history_def_heap* %53, i32 0, i32 0, !dbg !12746
  br label %cond.end70, !dbg !12746

cond.false69:                                     ; preds = %if.then63
  br label %cond.end70, !dbg !12746

cond.end70:                                       ; preds = %cond.false69, %cond.true66
  %cond71 = phi %struct.VEC_expr_history_def_base* [ %base68, %cond.true66 ], [ null, %cond.false69 ], !dbg !12746
  %54 = load i32, i32* %index, align 4, !dbg !12746
  %call72 = call %struct.expr_history_def_1* @VEC_expr_history_def_base_index(%struct.VEC_expr_history_def_base* %cond71, i32 %54), !dbg !12746
  store %struct.expr_history_def_1* %call72, %struct.expr_history_def_1** %phist, align 8, !dbg !12747
  %55 = load %struct.expr_history_def_1*, %struct.expr_history_def_1** %phist, align 8, !dbg !12748
  %type = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %55, i32 0, i32 4, !dbg !12749
  %56 = load i32, i32* %type, align 4, !dbg !12749
  switch i32 %56, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb75
  ], !dbg !12750

sw.bb:                                            ; preds = %cond.end70
  call void @llvm.dbg.declare(metadata i32* %old_ds, metadata !12751, metadata !DIExpression()), !dbg !12754
  call void @llvm.dbg.declare(metadata i32* %new_ds, metadata !12755, metadata !DIExpression()), !dbg !12756
  %57 = load %struct.expr_history_def_1*, %struct.expr_history_def_1** %phist, align 8, !dbg !12757
  %spec_ds = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %57, i32 0, i32 3, !dbg !12758
  %58 = load i32, i32* %spec_ds, align 8, !dbg !12758
  store i32 %58, i32* %old_ds, align 4, !dbg !12759
  %59 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12760
  %spec_done_ds = getelementptr inbounds %struct._expr, %struct._expr* %59, i32 0, i32 7, !dbg !12760
  %60 = load i32, i32* %spec_done_ds, align 8, !dbg !12760
  store i32 %60, i32* %new_ds, align 4, !dbg !12761
  %61 = load i32, i32* %old_ds, align 4, !dbg !12762
  %and = and i32 %61, 16777215, !dbg !12762
  store i32 %and, i32* %old_ds, align 4, !dbg !12762
  %62 = load i32, i32* %new_ds, align 4, !dbg !12763
  %and73 = and i32 %62, 16777215, !dbg !12763
  store i32 %and73, i32* %new_ds, align 4, !dbg !12763
  %63 = load i32, i32* %old_ds, align 4, !dbg !12764
  %neg = xor i32 %63, -1, !dbg !12765
  %64 = load i32, i32* %new_ds, align 4, !dbg !12766
  %and74 = and i32 %64, %neg, !dbg !12766
  store i32 %and74, i32* %new_ds, align 4, !dbg !12766
  %65 = load i32, i32* %new_ds, align 4, !dbg !12767
  %66 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12768
  %spec_to_check_ds = getelementptr inbounds %struct._expr, %struct._expr* %66, i32 0, i32 8, !dbg !12768
  %67 = load i32, i32* %spec_to_check_ds, align 4, !dbg !12769
  %or = or i32 %67, %65, !dbg !12769
  store i32 %or, i32* %spec_to_check_ds, align 4, !dbg !12769
  br label %sw.epilog, !dbg !12770

sw.bb75:                                          ; preds = %cond.end70
  call void @llvm.dbg.declare(metadata %struct._expr* %_tmp_expr, metadata !12771, metadata !DIExpression()), !dbg !12773
  call void @llvm.dbg.declare(metadata %struct._expr** %tmp_expr, metadata !12774, metadata !DIExpression()), !dbg !12775
  store %struct._expr* %_tmp_expr, %struct._expr** %tmp_expr, align 8, !dbg !12775
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %new_vi, metadata !12776, metadata !DIExpression()), !dbg !12777
  call void @llvm.dbg.declare(metadata i8* %add76, metadata !12778, metadata !DIExpression()), !dbg !12779
  store i8 1, i8* %add76, align 1, !dbg !12779
  %68 = load %struct.expr_history_def_1*, %struct.expr_history_def_1** %phist, align 8, !dbg !12780
  %old_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %68, i32 0, i32 1, !dbg !12781
  %69 = load %struct.vinsn_def*, %struct.vinsn_def** %old_expr_vinsn, align 8, !dbg !12781
  store %struct.vinsn_def* %69, %struct.vinsn_def** %new_vi, align 8, !dbg !12782
  %70 = load %struct.vinsn_def*, %struct.vinsn_def** %new_vi, align 8, !dbg !12783
  %id77 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %70, i32 0, i32 1, !dbg !12783
  %type78 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id77, i32 0, i32 0, !dbg !12783
  %71 = load i32, i32* %type78, align 8, !dbg !12783
  %cmp79 = icmp eq i32 %71, 23, !dbg !12783
  %conv80 = zext i1 %cmp79 to i32, !dbg !12783
  %72 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12783
  %vinsn81 = getelementptr inbounds %struct._expr, %struct._expr* %72, i32 0, i32 0, !dbg !12783
  %73 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn81, align 8, !dbg !12783
  %id82 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %73, i32 0, i32 1, !dbg !12783
  %type83 = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id82, i32 0, i32 0, !dbg !12783
  %74 = load i32, i32* %type83, align 8, !dbg !12783
  %cmp84 = icmp eq i32 %74, 23, !dbg !12783
  %conv85 = zext i1 %cmp84 to i32, !dbg !12783
  %cmp86 = icmp eq i32 %conv80, %conv85, !dbg !12783
  br i1 %cmp86, label %cond.false89, label %cond.true88, !dbg !12783

cond.true88:                                      ; preds = %sw.bb75
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1986, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12783
  br label %cond.end90, !dbg !12783

cond.false89:                                     ; preds = %sw.bb75
  br label %cond.end90, !dbg !12783

cond.end90:                                       ; preds = %cond.false89, %cond.true88
  %cond91 = phi i32 [ 0, %cond.true88 ], [ 0, %cond.false89 ], !dbg !12783
  %75 = load %struct._expr*, %struct._expr** %tmp_expr, align 8, !dbg !12784
  %76 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !12785
  call void @copy_expr(%struct._expr* %75, %struct._expr* %76), !dbg !12786
  %77 = load %struct.expr_history_def_1*, %struct.expr_history_def_1** %phist, align 8, !dbg !12787
  %new_expr_vinsn = getelementptr inbounds %struct.expr_history_def_1, %struct.expr_history_def_1* %77, i32 0, i32 2, !dbg !12789
  %78 = load %struct.vinsn_def*, %struct.vinsn_def** %new_expr_vinsn, align 8, !dbg !12789
  %79 = load %struct._expr*, %struct._expr** %tmp_expr, align 8, !dbg !12790
  %vinsn92 = getelementptr inbounds %struct._expr, %struct._expr* %79, i32 0, i32 0, !dbg !12790
  %80 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn92, align 8, !dbg !12790
  %call93 = call zeroext i8 @vinsn_equal_p(%struct.vinsn_def* %78, %struct.vinsn_def* %80), !dbg !12791
  %tobool94 = icmp ne i8 %call93, 0, !dbg !12791
  br i1 %tobool94, label %if.then95, label %if.else96, !dbg !12792

if.then95:                                        ; preds = %cond.end90
  %81 = load %struct._expr*, %struct._expr** %tmp_expr, align 8, !dbg !12793
  %82 = load %struct.vinsn_def*, %struct.vinsn_def** %new_vi, align 8, !dbg !12794
  call void @change_vinsn_in_expr(%struct._expr* %81, %struct.vinsn_def* %82), !dbg !12795
  br label %if.end98, !dbg !12795

if.else96:                                        ; preds = %cond.end90
  %83 = load %struct._expr*, %struct._expr** %tmp_expr, align 8, !dbg !12796
  %84 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12797
  %call97 = call zeroext i8 @substitute_reg_in_expr(%struct._expr* %83, %struct.rtx_def* %84, i8 zeroext 1), !dbg !12798
  store i8 %call97, i8* %add76, align 1, !dbg !12799
  br label %if.end98

if.end98:                                         ; preds = %if.else96, %if.then95
  %85 = load i8, i8* %add76, align 1, !dbg !12800
  %tobool99 = icmp ne i8 %85, 0, !dbg !12800
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !12802

if.then100:                                       ; preds = %if.end98
  %86 = load %struct._expr*, %struct._expr** %tmp_expr, align 8, !dbg !12803
  call void @av_set_add(%struct._list_node** %new_set, %struct._expr* %86), !dbg !12804
  br label %if.end101, !dbg !12804

if.end101:                                        ; preds = %if.then100, %if.end98
  %87 = load %struct._expr*, %struct._expr** %tmp_expr, align 8, !dbg !12805
  call void @clear_expr(%struct._expr* %87), !dbg !12806
  br label %sw.epilog, !dbg !12807

sw.default:                                       ; preds = %cond.end70
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 2003, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12808
  br label %sw.epilog, !dbg !12809

sw.epilog:                                        ; preds = %sw.default, %if.end101, %sw.bb
  br label %if.end102, !dbg !12810

if.end102:                                        ; preds = %sw.epilog, %for.body58
  br label %for.inc103, !dbg !12811

for.inc103:                                       ; preds = %if.end102
  call void @_list_iter_next(%struct._list_iterator* %av_iter), !dbg !12729
  br label %for.cond54, !dbg !12729, !llvm.loop !12812

for.end104:                                       ; preds = %for.cond54
  %88 = load %struct._list_node**, %struct._list_node*** %av_ptr.addr, align 8, !dbg !12814
  call void @av_set_union_and_clear(%struct._list_node** %88, %struct._list_node** %new_set, %struct.rtx_def* null), !dbg !12815
  ret void, !dbg !12816
}

; Function Attrs: noinline nounwind uwtable
define internal void @code_motion_path_driver_cleanup(%struct._list_node** %orig_ops_p, %struct._list_node** %path_p) #0 !dbg !12817 {
entry:
  %orig_ops_p.addr = alloca %struct._list_node**, align 8
  %path_p.addr = alloca %struct._list_node**, align 8
  store %struct._list_node** %orig_ops_p, %struct._list_node*** %orig_ops_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %orig_ops_p.addr, metadata !12820, metadata !DIExpression()), !dbg !12821
  store %struct._list_node** %path_p, %struct._list_node*** %path_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node*** %path_p.addr, metadata !12822, metadata !DIExpression()), !dbg !12823
  %0 = load %struct._list_node**, %struct._list_node*** %path_p.addr, align 8, !dbg !12824
  call void @_list_remove(%struct._list_node** %0), !dbg !12824
  %1 = load %struct._list_node**, %struct._list_node*** %orig_ops_p.addr, align 8, !dbg !12825
  call void @av_set_clear(%struct._list_node** %1), !dbg !12826
  ret void, !dbg !12827
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @code_motion_process_successors(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, %struct._list_node* %path, i8* %static_params) #0 !dbg !12828 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %path.addr = alloca %struct._list_node*, align 8
  %static_params.addr = alloca i8*, align 8
  %res = alloca i32, align 4
  %succ_i = alloca %struct.succ_iterator, align 8
  %succ = alloca %struct.rtx_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %old_index = alloca i32, align 4
  %old_succs = alloca i32, align 4
  %lparams = alloca %struct.cmpd_local_params, align 8
  %_x = alloca %struct._expr, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  %b = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !12831, metadata !DIExpression()), !dbg !12832
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %orig_ops.addr, metadata !12833, metadata !DIExpression()), !dbg !12834
  store %struct._list_node* %path, %struct._list_node** %path.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %path.addr, metadata !12835, metadata !DIExpression()), !dbg !12836
  store i8* %static_params, i8** %static_params.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %static_params.addr, metadata !12837, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.declare(metadata i32* %res, metadata !12839, metadata !DIExpression()), !dbg !12840
  store i32 0, i32* %res, align 4, !dbg !12840
  call void @llvm.dbg.declare(metadata %struct.succ_iterator* %succ_i, metadata !12841, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %succ, metadata !12843, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !12845, metadata !DIExpression()), !dbg !12846
  call void @llvm.dbg.declare(metadata i32* %old_index, metadata !12847, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.declare(metadata i32* %old_succs, metadata !12849, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params* %lparams, metadata !12851, metadata !DIExpression()), !dbg !12852
  call void @llvm.dbg.declare(metadata %struct._expr* %_x, metadata !12853, metadata !DIExpression()), !dbg !12854
  %c_expr_local = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i32 0, i32 3, !dbg !12855
  store %struct._expr* %_x, %struct._expr** %c_expr_local, align 8, !dbg !12856
  %c_expr_merged = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i32 0, i32 2, !dbg !12857
  store %struct._expr* null, %struct._expr** %c_expr_merged, align 8, !dbg !12858
  br label %rescan, !dbg !12859

rescan:                                           ; preds = %if.then37, %entry
  call void @llvm.dbg.label(metadata !12860), !dbg !12861
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12862
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !12862
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12862
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !12862
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !12862
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !12862
  store %struct.basic_block_def* %1, %struct.basic_block_def** %bb, align 8, !dbg !12863
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12864
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 9, !dbg !12865
  %3 = load i32, i32* %index, align 8, !dbg !12865
  store i32 %3, i32* %old_index, align 4, !dbg !12866
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12867
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i32 0, i32 1, !dbg !12867
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !12867
  %tobool = icmp ne %struct.VEC_edge_gc* %5, null, !dbg !12867
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12867

cond.true:                                        ; preds = %rescan
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12867
  %succs1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i32 0, i32 1, !dbg !12867
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs1, align 8, !dbg !12867
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i32 0, i32 0, !dbg !12867
  br label %cond.end, !dbg !12867

cond.false:                                       ; preds = %rescan
  br label %cond.end, !dbg !12867

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !12867
  %call = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !12867
  store i32 %call, i32* %old_succs, align 4, !dbg !12868
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12869
  %9 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12869
  %succ_flags = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %9, i32 0, i32 7, !dbg !12869
  %10 = load i32, i32* %succ_flags, align 8, !dbg !12869
  call void @_succ_iter_start(%struct.succ_iterator* sret %tmp, %struct.rtx_def** %succ, %struct.rtx_def* %8, i32 %10), !dbg !12869
  %11 = bitcast %struct.succ_iterator* %succ_i to i8*, !dbg !12869
  %12 = bitcast %struct.succ_iterator* %tmp to i8*, !dbg !12869
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 64, i1 false), !dbg !12869
  br label %for.cond, !dbg !12869

for.cond:                                         ; preds = %for.inc, %cond.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12871
  %call2 = call zeroext i8 @_succ_iter_cond(%struct.succ_iterator* %succ_i, %struct.rtx_def** %succ, %struct.rtx_def* %13, i8 (%struct.edge_def*, %struct.succ_iterator*)* @_eligible_successor_edge_p), !dbg !12871
  %tobool3 = icmp ne i8 %call2, 0, !dbg !12869
  br i1 %tobool3, label %for.body, label %for.end, !dbg !12869

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %b, metadata !12873, metadata !DIExpression()), !dbg !12875
  %e1 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %succ_i, i32 0, i32 1, !dbg !12876
  %14 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !12876
  %e14 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i32 0, i32 0, !dbg !12877
  store %struct.edge_def* %14, %struct.edge_def** %e14, align 8, !dbg !12878
  %e2 = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %succ_i, i32 0, i32 2, !dbg !12879
  %15 = load %struct.edge_def*, %struct.edge_def** %e2, align 8, !dbg !12879
  %e25 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i32 0, i32 1, !dbg !12880
  store %struct.edge_def* %15, %struct.edge_def** %e25, align 8, !dbg !12881
  %current_flags = getelementptr inbounds %struct.succ_iterator, %struct.succ_iterator* %succ_i, i32 0, i32 6, !dbg !12882
  %16 = load i16, i16* %current_flags, align 2, !dbg !12882
  %conv = sext i16 %16 to i32, !dbg !12884
  %cmp = icmp eq i32 %conv, 1, !dbg !12885
  br i1 %cmp, label %if.then, label %if.else, !dbg !12886

if.then:                                          ; preds = %for.body
  %17 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12887
  %18 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !12888
  %19 = load %struct._list_node*, %struct._list_node** %path.addr, align 8, !dbg !12889
  %20 = load i8*, i8** %static_params.addr, align 8, !dbg !12890
  %call7 = call i32 @code_motion_path_driver(%struct.rtx_def* %17, %struct._list_node* %18, %struct._list_node* %19, %struct.cmpd_local_params* %lparams, i8* %20), !dbg !12891
  store i32 %call7, i32* %b, align 4, !dbg !12892
  br label %if.end, !dbg !12893

if.else:                                          ; preds = %for.body
  store i32 0, i32* %b, align 4, !dbg !12894
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12895
  %merge_succs = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %21, i32 0, i32 3, !dbg !12896
  %22 = load void (%struct.rtx_def*, %struct.rtx_def*, i32, %struct.cmpd_local_params*, i8*)*, void (%struct.rtx_def*, %struct.rtx_def*, i32, %struct.cmpd_local_params*, i8*)** %merge_succs, align 8, !dbg !12896
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12897
  %24 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !12898
  %25 = load i32, i32* %b, align 4, !dbg !12899
  %26 = load i8*, i8** %static_params.addr, align 8, !dbg !12900
  call void %22(%struct.rtx_def* %23, %struct.rtx_def* %24, i32 %25, %struct.cmpd_local_params* %lparams, i8* %26), !dbg !12895
  %27 = load i32, i32* %b, align 4, !dbg !12901
  %cmp8 = icmp eq i32 %27, 1, !dbg !12903
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !12904

if.then10:                                        ; preds = %if.end
  %28 = load i32, i32* %b, align 4, !dbg !12905
  store i32 %28, i32* %res, align 4, !dbg !12906
  br label %if.end18, !dbg !12907

if.else11:                                        ; preds = %if.end
  %29 = load i32, i32* %b, align 4, !dbg !12908
  %cmp12 = icmp eq i32 %29, -1, !dbg !12910
  br i1 %cmp12, label %land.lhs.true, label %if.end17, !dbg !12911

land.lhs.true:                                    ; preds = %if.else11
  %30 = load i32, i32* %res, align 4, !dbg !12912
  %cmp14 = icmp ne i32 %30, 1, !dbg !12913
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !12914

if.then16:                                        ; preds = %land.lhs.true
  %31 = load i32, i32* %b, align 4, !dbg !12915
  store i32 %31, i32* %res, align 4, !dbg !12916
  br label %if.end17, !dbg !12917

if.end17:                                         ; preds = %if.then16, %land.lhs.true, %if.else11
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then10
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12918
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !12918
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !12918
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 3, !dbg !12918
  %rt_bb22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.basic_block_def**, !dbg !12918
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb22, align 8, !dbg !12918
  %index23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i32 0, i32 9, !dbg !12920
  %34 = load i32, i32* %index23, align 8, !dbg !12920
  %35 = load i32, i32* %old_index, align 4, !dbg !12921
  %cmp24 = icmp ne i32 %34, %35, !dbg !12922
  br i1 %cmp24, label %if.then37, label %lor.lhs.false, !dbg !12923

lor.lhs.false:                                    ; preds = %if.end18
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12924
  %succs26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i32 0, i32 1, !dbg !12924
  %37 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs26, align 8, !dbg !12924
  %tobool27 = icmp ne %struct.VEC_edge_gc* %37, null, !dbg !12924
  br i1 %tobool27, label %cond.true28, label %cond.false31, !dbg !12924

cond.true28:                                      ; preds = %lor.lhs.false
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !12924
  %succs29 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i32 0, i32 1, !dbg !12924
  %39 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs29, align 8, !dbg !12924
  %base30 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %39, i32 0, i32 0, !dbg !12924
  br label %cond.end32, !dbg !12924

cond.false31:                                     ; preds = %lor.lhs.false
  br label %cond.end32, !dbg !12924

cond.end32:                                       ; preds = %cond.false31, %cond.true28
  %cond33 = phi %struct.VEC_edge_base* [ %base30, %cond.true28 ], [ null, %cond.false31 ], !dbg !12924
  %call34 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond33), !dbg !12924
  %40 = load i32, i32* %old_succs, align 4, !dbg !12925
  %cmp35 = icmp ne i32 %call34, %40, !dbg !12926
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12927

if.then37:                                        ; preds = %cond.end32, %if.end18
  br label %rescan, !dbg !12928

if.end38:                                         ; preds = %cond.end32
  br label %for.inc, !dbg !12929

for.inc:                                          ; preds = %if.end38
  call void @_succ_iter_next(%struct.succ_iterator* %succ_i), !dbg !12871
  br label %for.cond, !dbg !12871, !llvm.loop !12930

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %res, align 4, !dbg !12932
  %cmp39 = icmp ne i32 %41, -1, !dbg !12934
  br i1 %cmp39, label %land.lhs.true41, label %if.end45, !dbg !12935

land.lhs.true41:                                  ; preds = %for.end
  %42 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12936
  %after_merge_succs = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %42, i32 0, i32 4, !dbg !12937
  %43 = load void (%struct.cmpd_local_params*, i8*)*, void (%struct.cmpd_local_params*, i8*)** %after_merge_succs, align 8, !dbg !12937
  %tobool42 = icmp ne void (%struct.cmpd_local_params*, i8*)* %43, null, !dbg !12936
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !12938

if.then43:                                        ; preds = %land.lhs.true41
  %44 = load %struct.code_motion_path_driver_info_def*, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !12939
  %after_merge_succs44 = getelementptr inbounds %struct.code_motion_path_driver_info_def, %struct.code_motion_path_driver_info_def* %44, i32 0, i32 4, !dbg !12940
  %45 = load void (%struct.cmpd_local_params*, i8*)*, void (%struct.cmpd_local_params*, i8*)** %after_merge_succs44, align 8, !dbg !12940
  %46 = load i8*, i8** %static_params.addr, align 8, !dbg !12941
  call void %45(%struct.cmpd_local_params* %lparams, i8* %46), !dbg !12939
  br label %if.end45, !dbg !12939

if.end45:                                         ; preds = %if.then43, %land.lhs.true41, %for.end
  %47 = load i32, i32* %res, align 4, !dbg !12942
  ret i32 %47, !dbg !12943
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @identical_copy_p(%struct.rtx_def* %insn) #0 !dbg !12944 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %lhs = alloca %struct.rtx_def*, align 8
  %rhs = alloca %struct.rtx_def*, align 8
  %pat = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !12945, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %lhs, metadata !12947, metadata !DIExpression()), !dbg !12948
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %rhs, metadata !12949, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat, metadata !12951, metadata !DIExpression()), !dbg !12952
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12953
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !12953
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12953
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !12953
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !12953
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12953
  store %struct.rtx_def* %1, %struct.rtx_def** %pat, align 8, !dbg !12954
  %2 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !12955
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !12955
  %bf.load = load i32, i32* %3, align 8, !dbg !12955
  %bf.clear = and i32 %bf.load, 65535, !dbg !12955
  %cmp = icmp ne i32 %bf.clear, 23, !dbg !12957
  br i1 %cmp, label %if.then, label %if.end, !dbg !12958

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12959
  br label %return, !dbg !12959

if.end:                                           ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !12960
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !12960
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !12960
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !12960
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !12960
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !12960
  store %struct.rtx_def* %5, %struct.rtx_def** %lhs, align 8, !dbg !12961
  %6 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !12962
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !12962
  %bf.load5 = load i32, i32* %7, align 8, !dbg !12962
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !12962
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !12962
  br i1 %cmp7, label %if.end9, label %if.then8, !dbg !12964

if.then8:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !12965
  br label %return, !dbg !12965

if.end9:                                          ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !12966
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !12966
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !12966
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 1, !dbg !12966
  %rt_rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !12966
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !12966
  store %struct.rtx_def* %9, %struct.rtx_def** %rhs, align 8, !dbg !12967
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !12968
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !12968
  %bf.load14 = load i32, i32* %11, align 8, !dbg !12968
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !12968
  %cmp16 = icmp eq i32 %bf.clear15, 37, !dbg !12968
  br i1 %cmp16, label %if.end18, label %if.then17, !dbg !12970

if.then17:                                        ; preds = %if.end9
  store i8 0, i8* %retval, align 1, !dbg !12971
  br label %return, !dbg !12971

if.end18:                                         ; preds = %if.end9
  %12 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !12972
  %call = call i32 @rhs_regno(%struct.rtx_def* %12), !dbg !12972
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !12973
  %call19 = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !12973
  %cmp20 = icmp eq i32 %call, %call19, !dbg !12974
  %conv = zext i1 %cmp20 to i32, !dbg !12974
  %conv21 = trunc i32 %conv to i8, !dbg !12972
  store i8 %conv21, i8* %retval, align 1, !dbg !12975
  br label %return, !dbg !12975

return:                                           ; preds = %if.end18, %if.then17, %if.then8, %if.then
  %14 = load i8, i8* %retval, align 1, !dbg !12976
  ret i8 %14, !dbg !12976
}

declare dso_local i32 @find_in_history_vect(%struct.VEC_expr_history_def_heap*, %struct.rtx_def*, %struct.vinsn_def*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.expr_history_def_1* @VEC_expr_history_def_base_index(%struct.VEC_expr_history_def_base* %vec_, i32 %ix_) #0 !dbg !12977 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_history_def_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_expr_history_def_base* %vec_, %struct.VEC_expr_history_def_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_history_def_base** %vec_.addr, metadata !12981, metadata !DIExpression()), !dbg !12982
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !12983, metadata !DIExpression()), !dbg !12982
  %0 = load %struct.VEC_expr_history_def_base*, %struct.VEC_expr_history_def_base** %vec_.addr, align 8, !dbg !12982
  %tobool = icmp ne %struct.VEC_expr_history_def_base* %0, null, !dbg !12982
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !12982

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !12982
  %2 = load %struct.VEC_expr_history_def_base*, %struct.VEC_expr_history_def_base** %vec_.addr, align 8, !dbg !12982
  %num = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %2, i32 0, i32 0, !dbg !12982
  %3 = load i32, i32* %num, align 8, !dbg !12982
  %cmp = icmp ult i32 %1, %3, !dbg !12982
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !12984
  %land.ext = zext i1 %4 to i32, !dbg !12982
  %5 = load %struct.VEC_expr_history_def_base*, %struct.VEC_expr_history_def_base** %vec_.addr, align 8, !dbg !12982
  %vec = getelementptr inbounds %struct.VEC_expr_history_def_base, %struct.VEC_expr_history_def_base* %5, i32 0, i32 2, !dbg !12982
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !12982
  %idxprom = zext i32 %6 to i64, !dbg !12982
  %arrayidx = getelementptr inbounds [1 x %struct.expr_history_def_1], [1 x %struct.expr_history_def_1]* %vec, i64 0, i64 %idxprom, !dbg !12982
  ret %struct.expr_history_def_1* %arrayidx, !dbg !12982
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_reg_class(%struct.rtx_def* %insn) #0 !dbg !12985 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %alt = alloca i32, align 4
  %i = alloca i32, align 4
  %n_ops = alloca i32, align 4
  %matches = alloca i32, align 4
  %loc = alloca %struct.rtx_def**, align 8
  %op = alloca %struct.rtx_def*, align 8
  %cl34 = alloca i32, align 4
  %opn = alloca i32, align 4
  %cl69 = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !12988, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.declare(metadata i32* %alt, metadata !12990, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12992, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.declare(metadata i32* %n_ops, metadata !12994, metadata !DIExpression()), !dbg !12995
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !12996
  call void @extract_insn(%struct.rtx_def* %0), !dbg !12997
  %call = call i32 @constrain_operands(i32 1), !dbg !12998
  %tobool = icmp ne i32 %call, 0, !dbg !12998
  br i1 %tobool, label %if.end, label %if.then, !dbg !13000

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13001
  call void @_fatal_insn_not_found(%struct.rtx_def* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1033, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13001
  br label %if.end, !dbg !13001

if.end:                                           ; preds = %if.then, %entry
  call void @preprocess_constraints(), !dbg !13002
  %2 = load i32, i32* @which_alternative, align 4, !dbg !13003
  store i32 %2, i32* %alt, align 4, !dbg !13004
  %3 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !13005
  %conv = sext i8 %3 to i32, !dbg !13006
  store i32 %conv, i32* %n_ops, align 4, !dbg !13007
  store i32 0, i32* %i, align 4, !dbg !13008
  br label %for.cond, !dbg !13010

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !13011
  %5 = load i32, i32* %n_ops, align 4, !dbg !13013
  %cmp = icmp slt i32 %4, %5, !dbg !13014
  br i1 %cmp, label %for.body, label %for.end, !dbg !13015

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %matches, metadata !13016, metadata !DIExpression()), !dbg !13018
  %6 = load i32, i32* %i, align 4, !dbg !13019
  %idxprom = sext i32 %6 to i64, !dbg !13020
  %arrayidx = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom, !dbg !13020
  %7 = load i32, i32* %alt, align 4, !dbg !13021
  %idxprom2 = sext i32 %7 to i64, !dbg !13020
  %arrayidx3 = getelementptr inbounds [30 x %struct.operand_alternative], [30 x %struct.operand_alternative]* %arrayidx, i64 0, i64 %idxprom2, !dbg !13020
  %matches4 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx3, i32 0, i32 3, !dbg !13022
  %8 = load i32, i32* %matches4, align 16, !dbg !13022
  store i32 %8, i32* %matches, align 4, !dbg !13018
  %9 = load i32, i32* %matches, align 4, !dbg !13023
  %cmp5 = icmp sge i32 %9, 0, !dbg !13025
  br i1 %cmp5, label %if.then7, label %if.end17, !dbg !13026

if.then7:                                         ; preds = %for.body
  %10 = load i32, i32* %matches, align 4, !dbg !13027
  %idxprom8 = sext i32 %10 to i64, !dbg !13028
  %arrayidx9 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom8, !dbg !13028
  %11 = load i32, i32* %alt, align 4, !dbg !13029
  %idxprom10 = sext i32 %11 to i64, !dbg !13028
  %arrayidx11 = getelementptr inbounds [30 x %struct.operand_alternative], [30 x %struct.operand_alternative]* %arrayidx9, i64 0, i64 %idxprom10, !dbg !13028
  %cl = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx11, i32 0, i32 1, !dbg !13030
  %12 = load i32, i32* %cl, align 8, !dbg !13030
  %13 = load i32, i32* %i, align 4, !dbg !13031
  %idxprom12 = sext i32 %13 to i64, !dbg !13032
  %arrayidx13 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom12, !dbg !13032
  %14 = load i32, i32* %alt, align 4, !dbg !13033
  %idxprom14 = sext i32 %14 to i64, !dbg !13032
  %arrayidx15 = getelementptr inbounds [30 x %struct.operand_alternative], [30 x %struct.operand_alternative]* %arrayidx13, i64 0, i64 %idxprom14, !dbg !13032
  %cl16 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx15, i32 0, i32 1, !dbg !13034
  store i32 %12, i32* %cl16, align 8, !dbg !13035
  br label %if.end17, !dbg !13032

if.end17:                                         ; preds = %if.then7, %for.body
  br label %for.inc, !dbg !13036

for.inc:                                          ; preds = %if.end17
  %15 = load i32, i32* %i, align 4, !dbg !13037
  %inc = add nsw i32 %15, 1, !dbg !13037
  store i32 %inc, i32* %i, align 4, !dbg !13037
  br label %for.cond, !dbg !13038, !llvm.loop !13039

for.end:                                          ; preds = %for.cond
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13041
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !13041
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13041
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !13041
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !13041
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13041
  %call19 = call i32 @asm_noperands(%struct.rtx_def* %17), !dbg !13043
  %cmp20 = icmp sgt i32 %call19, 0, !dbg !13044
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !13045

if.then22:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !13046
  br label %for.cond23, !dbg !13049

for.cond23:                                       ; preds = %for.inc51, %if.then22
  %18 = load i32, i32* %i, align 4, !dbg !13050
  %19 = load i32, i32* %n_ops, align 4, !dbg !13052
  %cmp24 = icmp slt i32 %18, %19, !dbg !13053
  br i1 %cmp24, label %for.body26, label %for.end53, !dbg !13054

for.body26:                                       ; preds = %for.cond23
  %20 = load i32, i32* %i, align 4, !dbg !13055
  %idxprom27 = sext i32 %20 to i64, !dbg !13057
  %arrayidx28 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 4), i64 0, i64 %idxprom27, !dbg !13057
  %21 = load i32, i32* %arrayidx28, align 4, !dbg !13057
  %cmp29 = icmp eq i32 %21, 1, !dbg !13058
  br i1 %cmp29, label %if.then31, label %if.end50, !dbg !13059

if.then31:                                        ; preds = %for.body26
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc, metadata !13060, metadata !DIExpression()), !dbg !13062
  %22 = load i32, i32* %i, align 4, !dbg !13063
  %idxprom32 = sext i32 %22 to i64, !dbg !13064
  %arrayidx33 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i64 0, i64 %idxprom32, !dbg !13064
  %23 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx33, align 8, !dbg !13064
  store %struct.rtx_def** %23, %struct.rtx_def*** %loc, align 8, !dbg !13062
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op, metadata !13065, metadata !DIExpression()), !dbg !13066
  %24 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !13067
  %25 = load %struct.rtx_def*, %struct.rtx_def** %24, align 8, !dbg !13068
  store %struct.rtx_def* %25, %struct.rtx_def** %op, align 8, !dbg !13066
  call void @llvm.dbg.declare(metadata i32* %cl34, metadata !13069, metadata !DIExpression()), !dbg !13070
  %26 = load i32, i32* %i, align 4, !dbg !13071
  %idxprom35 = sext i32 %26 to i64, !dbg !13072
  %arrayidx36 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom35, !dbg !13072
  %27 = load i32, i32* %alt, align 4, !dbg !13073
  %idxprom37 = sext i32 %27 to i64, !dbg !13072
  %arrayidx38 = getelementptr inbounds [30 x %struct.operand_alternative], [30 x %struct.operand_alternative]* %arrayidx36, i64 0, i64 %idxprom37, !dbg !13072
  %cl39 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx38, i32 0, i32 1, !dbg !13074
  %28 = load i32, i32* %cl39, align 8, !dbg !13074
  store i32 %28, i32* %cl34, align 4, !dbg !13070
  %29 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !13075
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !13075
  %bf.load = load i32, i32* %30, align 8, !dbg !13075
  %bf.clear = and i32 %bf.load, 65535, !dbg !13075
  %cmp40 = icmp eq i32 %bf.clear, 37, !dbg !13075
  br i1 %cmp40, label %land.lhs.true, label %if.end49, !dbg !13077

land.lhs.true:                                    ; preds = %if.then31
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !13078
  %call42 = call i32 @rhs_regno(%struct.rtx_def* %31), !dbg !13078
  %32 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !13079
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !13079
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !13079
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 1, !dbg !13079
  %rt_uint = bitcast %union.rtunion_def* %arrayidx45 to i32*, !dbg !13079
  %33 = load i32, i32* %rt_uint, align 8, !dbg !13079
  %cmp46 = icmp eq i32 %call42, %33, !dbg !13080
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !13081

if.then48:                                        ; preds = %land.lhs.true
  br label %for.inc51, !dbg !13082

if.end49:                                         ; preds = %land.lhs.true, %if.then31
  %34 = load i32, i32* %cl34, align 4, !dbg !13083
  store i32 %34, i32* %retval, align 4, !dbg !13084
  br label %return, !dbg !13084

if.end50:                                         ; preds = %for.body26
  br label %for.inc51, !dbg !13085

for.inc51:                                        ; preds = %if.end50, %if.then48
  %35 = load i32, i32* %i, align 4, !dbg !13086
  %inc52 = add nsw i32 %35, 1, !dbg !13086
  store i32 %inc52, i32* %i, align 4, !dbg !13086
  br label %for.cond23, !dbg !13087, !llvm.loop !13088

for.end53:                                        ; preds = %for.cond23
  br label %if.end89, !dbg !13090

if.else:                                          ; preds = %for.end
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13091
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !13091
  %bf.load54 = load i32, i32* %37, align 8, !dbg !13091
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !13091
  %cmp56 = icmp eq i32 %bf.clear55, 10, !dbg !13091
  br i1 %cmp56, label %if.end88, label %if.then58, !dbg !13093

if.then58:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !13094
  br label %for.cond59, !dbg !13097

for.cond59:                                       ; preds = %for.inc85, %if.then58
  %38 = load i32, i32* %i, align 4, !dbg !13098
  %39 = load i32, i32* %n_ops, align 4, !dbg !13100
  %40 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1, !dbg !13101
  %conv60 = sext i8 %40 to i32, !dbg !13102
  %add = add nsw i32 %39, %conv60, !dbg !13103
  %cmp61 = icmp slt i32 %38, %add, !dbg !13104
  br i1 %cmp61, label %for.body63, label %for.end87, !dbg !13105

for.body63:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata i32* %opn, metadata !13106, metadata !DIExpression()), !dbg !13108
  %41 = load i32, i32* %i, align 4, !dbg !13109
  %42 = load i32, i32* %n_ops, align 4, !dbg !13110
  %cmp64 = icmp slt i32 %41, %42, !dbg !13111
  br i1 %cmp64, label %cond.true, label %cond.false, !dbg !13109

cond.true:                                        ; preds = %for.body63
  %43 = load i32, i32* %i, align 4, !dbg !13112
  br label %cond.end, !dbg !13109

cond.false:                                       ; preds = %for.body63
  %44 = load i32, i32* %i, align 4, !dbg !13113
  %45 = load i32, i32* %n_ops, align 4, !dbg !13114
  %sub = sub nsw i32 %44, %45, !dbg !13115
  %idxprom66 = sext i32 %sub to i64, !dbg !13116
  %arrayidx67 = getelementptr inbounds [14 x i8], [14 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i64 0, i64 %idxprom66, !dbg !13116
  %46 = load i8, i8* %arrayidx67, align 1, !dbg !13116
  %conv68 = sext i8 %46 to i32, !dbg !13116
  br label %cond.end, !dbg !13109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %43, %cond.true ], [ %conv68, %cond.false ], !dbg !13109
  store i32 %cond, i32* %opn, align 4, !dbg !13108
  call void @llvm.dbg.declare(metadata i32* %cl69, metadata !13117, metadata !DIExpression()), !dbg !13118
  %47 = load i32, i32* %opn, align 4, !dbg !13119
  %idxprom70 = sext i32 %47 to i64, !dbg !13120
  %arrayidx71 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom70, !dbg !13120
  %48 = load i32, i32* %alt, align 4, !dbg !13121
  %idxprom72 = sext i32 %48 to i64, !dbg !13120
  %arrayidx73 = getelementptr inbounds [30 x %struct.operand_alternative], [30 x %struct.operand_alternative]* %arrayidx71, i64 0, i64 %idxprom72, !dbg !13120
  %cl74 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx73, i32 0, i32 1, !dbg !13122
  %49 = load i32, i32* %cl74, align 8, !dbg !13122
  store i32 %49, i32* %cl69, align 4, !dbg !13118
  %50 = load i32, i32* %opn, align 4, !dbg !13123
  %idxprom75 = sext i32 %50 to i64, !dbg !13125
  %arrayidx76 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 4), i64 0, i64 %idxprom75, !dbg !13125
  %51 = load i32, i32* %arrayidx76, align 4, !dbg !13125
  %cmp77 = icmp eq i32 %51, 1, !dbg !13126
  br i1 %cmp77, label %if.then83, label %lor.lhs.false, !dbg !13127

lor.lhs.false:                                    ; preds = %cond.end
  %52 = load i32, i32* %opn, align 4, !dbg !13128
  %idxprom79 = sext i32 %52 to i64, !dbg !13129
  %arrayidx80 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 4), i64 0, i64 %idxprom79, !dbg !13129
  %53 = load i32, i32* %arrayidx80, align 4, !dbg !13129
  %cmp81 = icmp eq i32 %53, 2, !dbg !13130
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !13131

if.then83:                                        ; preds = %lor.lhs.false, %cond.end
  %54 = load i32, i32* %cl69, align 4, !dbg !13132
  store i32 %54, i32* %retval, align 4, !dbg !13133
  br label %return, !dbg !13133

if.end84:                                         ; preds = %lor.lhs.false
  br label %for.inc85, !dbg !13134

for.inc85:                                        ; preds = %if.end84
  %55 = load i32, i32* %i, align 4, !dbg !13135
  %inc86 = add nsw i32 %55, 1, !dbg !13135
  store i32 %inc86, i32* %i, align 4, !dbg !13135
  br label %for.cond59, !dbg !13136, !llvm.loop !13137

for.end87:                                        ; preds = %for.cond59
  br label %if.end88, !dbg !13139

if.end88:                                         ; preds = %for.end87, %if.else
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end53
  store i32 0, i32* %retval, align 4, !dbg !13140
  br label %return, !dbg !13140

return:                                           ; preds = %if.end89, %if.then83, %if.end49
  %56 = load i32, i32* %retval, align 4, !dbg !13141
  ret i32 %56, !dbg !13141
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_regs_for_mode(i32 %mode) #0 !dbg !13142 {
entry:
  %mode.addr = alloca i32, align 4
  %cur_reg = alloca i32, align 4
  %nregs = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13145, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.declare(metadata i32* %cur_reg, metadata !13147, metadata !DIExpression()), !dbg !13148
  %0 = load i32, i32* %mode.addr, align 4, !dbg !13149
  %idxprom = zext i32 %0 to i64, !dbg !13149
  %arrayidx = getelementptr inbounds [87 x i64], [87 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 0), i64 0, i64 %idxprom, !dbg !13149
  store i64 0, i64* %arrayidx, align 8, !dbg !13149
  %1 = load i32, i32* %mode.addr, align 4, !dbg !13150
  %idxprom1 = zext i32 %1 to i64, !dbg !13150
  %arrayidx2 = getelementptr inbounds [87 x i64], [87 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 3), i64 0, i64 %idxprom1, !dbg !13150
  store i64 0, i64* %arrayidx2, align 8, !dbg !13150
  store i32 0, i32* %cur_reg, align 4, !dbg !13151
  br label %for.cond, !dbg !13153

for.cond:                                         ; preds = %for.inc33, %entry
  %2 = load i32, i32* %cur_reg, align 4, !dbg !13154
  %cmp = icmp slt i32 %2, 53, !dbg !13156
  br i1 %cmp, label %for.body, label %for.end34, !dbg !13157

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nregs, metadata !13158, metadata !DIExpression()), !dbg !13160
  %3 = load i32, i32* %cur_reg, align 4, !dbg !13161
  %idxprom3 = sext i32 %3 to i64, !dbg !13162
  %arrayidx4 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom3, !dbg !13162
  %4 = load i32, i32* %mode.addr, align 4, !dbg !13163
  %idxprom5 = zext i32 %4 to i64, !dbg !13162
  %arrayidx6 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx4, i64 0, i64 %idxprom5, !dbg !13162
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !13162
  %conv = zext i8 %5 to i32, !dbg !13162
  store i32 %conv, i32* %nregs, align 4, !dbg !13160
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13164, metadata !DIExpression()), !dbg !13165
  %6 = load i32, i32* %nregs, align 4, !dbg !13166
  %sub = sub nsw i32 %6, 1, !dbg !13168
  store i32 %sub, i32* %i, align 4, !dbg !13169
  br label %for.cond7, !dbg !13170

for.cond7:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !13171
  %cmp8 = icmp sge i32 %7, 0, !dbg !13173
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !13174

for.body10:                                       ; preds = %for.cond7
  %8 = load i32, i32* %cur_reg, align 4, !dbg !13175
  %9 = load i32, i32* %i, align 4, !dbg !13177
  %add = add nsw i32 %8, %9, !dbg !13178
  %idxprom11 = sext i32 %add to i64, !dbg !13179
  %arrayidx12 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom11, !dbg !13179
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !13179
  %conv13 = sext i8 %10 to i32, !dbg !13179
  %tobool = icmp ne i32 %conv13, 0, !dbg !13179
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !13180

lor.lhs.false:                                    ; preds = %for.body10
  %11 = load i32, i32* %cur_reg, align 4, !dbg !13181
  %12 = load i32, i32* %i, align 4, !dbg !13182
  %add14 = add nsw i32 %11, %12, !dbg !13183
  %idxprom15 = sext i32 %add14 to i64, !dbg !13184
  %arrayidx16 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom15, !dbg !13184
  %13 = load i8, i8* %arrayidx16, align 1, !dbg !13184
  %conv17 = sext i8 %13 to i32, !dbg !13184
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !13184
  br i1 %tobool18, label %if.then, label %lor.lhs.false19, !dbg !13185

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %14 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 4), align 8, !dbg !13186
  %15 = load i32, i32* %cur_reg, align 4, !dbg !13186
  %16 = load i32, i32* %i, align 4, !dbg !13186
  %add20 = add nsw i32 %15, %16, !dbg !13186
  %sh_prom = zext i32 %add20 to i64, !dbg !13186
  %shl = shl i64 1, %sh_prom, !dbg !13186
  %and = and i64 %14, %shl, !dbg !13186
  %tobool21 = icmp ne i64 %and, 0, !dbg !13186
  br i1 %tobool21, label %if.end, label %if.then, !dbg !13187

if.then:                                          ; preds = %lor.lhs.false19, %lor.lhs.false, %for.body10
  br label %for.end, !dbg !13188

if.end:                                           ; preds = %lor.lhs.false19
  br label %for.inc, !dbg !13186

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %i, align 4, !dbg !13189
  %dec = add nsw i32 %17, -1, !dbg !13189
  store i32 %dec, i32* %i, align 4, !dbg !13189
  br label %for.cond7, !dbg !13190, !llvm.loop !13191

for.end:                                          ; preds = %if.then, %for.cond7
  %18 = load i32, i32* %i, align 4, !dbg !13193
  %cmp22 = icmp sge i32 %18, 0, !dbg !13195
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !13196

if.then24:                                        ; preds = %for.end
  br label %for.inc33, !dbg !13197

if.end25:                                         ; preds = %for.end
  %19 = load i32, i32* %cur_reg, align 4, !dbg !13198
  %20 = load i32, i32* %mode.addr, align 4, !dbg !13198
  %call = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %19, i32 %20), !dbg !13198
  %tobool26 = icmp ne i8 %call, 0, !dbg !13198
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !13200

if.then27:                                        ; preds = %if.end25
  br label %for.inc33, !dbg !13201

if.end28:                                         ; preds = %if.end25
  %21 = load i32, i32* %cur_reg, align 4, !dbg !13202
  %sh_prom29 = zext i32 %21 to i64, !dbg !13202
  %shl30 = shl i64 1, %sh_prom29, !dbg !13202
  %22 = load i32, i32* %mode.addr, align 4, !dbg !13202
  %idxprom31 = zext i32 %22 to i64, !dbg !13202
  %arrayidx32 = getelementptr inbounds [87 x i64], [87 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 0), i64 0, i64 %idxprom31, !dbg !13202
  %23 = load i64, i64* %arrayidx32, align 8, !dbg !13202
  %or = or i64 %23, %shl30, !dbg !13202
  store i64 %or, i64* %arrayidx32, align 8, !dbg !13202
  br label %for.inc33, !dbg !13203

for.inc33:                                        ; preds = %if.end28, %if.then27, %if.then24
  %24 = load i32, i32* %cur_reg, align 4, !dbg !13204
  %inc = add nsw i32 %24, 1, !dbg !13204
  store i32 %inc, i32* %cur_reg, align 4, !dbg !13204
  br label %for.cond, !dbg !13205, !llvm.loop !13206

for.end34:                                        ; preds = %for.cond
  %25 = load i32, i32* %mode.addr, align 4, !dbg !13208
  %idxprom35 = zext i32 %25 to i64, !dbg !13209
  %arrayidx36 = getelementptr inbounds [87 x i8], [87 x i8]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 1), i64 0, i64 %idxprom35, !dbg !13209
  store i8 1, i8* %arrayidx36, align 1, !dbg !13210
  ret void, !dbg !13211
}

; Function Attrs: noinline nounwind uwtable
define internal void @hard_reg_set_iter_init(%struct.hard_reg_set_iterator* %iter, i64 %set, i32 %min, i32* %regno) #0 !dbg !13212 {
entry:
  %iter.addr = alloca %struct.hard_reg_set_iterator*, align 8
  %set.addr = alloca i64, align 8
  %min.addr = alloca i32, align 4
  %regno.addr = alloca i32*, align 8
  store %struct.hard_reg_set_iterator* %iter, %struct.hard_reg_set_iterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hard_reg_set_iterator** %iter.addr, metadata !13216, metadata !DIExpression()), !dbg !13217
  store i64 %set, i64* %set.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %set.addr, metadata !13218, metadata !DIExpression()), !dbg !13219
  store i32 %min, i32* %min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min.addr, metadata !13220, metadata !DIExpression()), !dbg !13221
  store i32* %regno, i32** %regno.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %regno.addr, metadata !13222, metadata !DIExpression()), !dbg !13223
  %0 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13224
  %pelt = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %0, i32 0, i32 0, !dbg !13225
  store i64* %set.addr, i64** %pelt, align 8, !dbg !13226
  %1 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13227
  %length = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %1, i32 0, i32 1, !dbg !13228
  store i16 1, i16* %length, align 8, !dbg !13229
  %2 = load i32, i32* %min.addr, align 4, !dbg !13230
  %div = udiv i32 %2, 64, !dbg !13231
  %conv = trunc i32 %div to i16, !dbg !13230
  %3 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13232
  %word_no = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %3, i32 0, i32 2, !dbg !13233
  store i16 %conv, i16* %word_no, align 2, !dbg !13234
  %4 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13235
  %word_no1 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %4, i32 0, i32 2, !dbg !13237
  %5 = load i16, i16* %word_no1, align 2, !dbg !13237
  %conv2 = zext i16 %5 to i32, !dbg !13235
  %6 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13238
  %length3 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %6, i32 0, i32 1, !dbg !13239
  %7 = load i16, i16* %length3, align 8, !dbg !13239
  %conv4 = zext i16 %7 to i32, !dbg !13238
  %cmp = icmp slt i32 %conv2, %conv4, !dbg !13240
  br i1 %cmp, label %if.then, label %if.end, !dbg !13241

if.then:                                          ; preds = %entry
  %8 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13242
  %pelt6 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %8, i32 0, i32 0, !dbg !13244
  %9 = load i64*, i64** %pelt6, align 8, !dbg !13244
  %10 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13245
  %word_no7 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %10, i32 0, i32 2, !dbg !13246
  %11 = load i16, i16* %word_no7, align 2, !dbg !13246
  %idxprom = zext i16 %11 to i64, !dbg !13242
  %arrayidx = getelementptr inbounds i64, i64* %9, i64 %idxprom, !dbg !13242
  %12 = load i64, i64* %arrayidx, align 8, !dbg !13242
  %13 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13247
  %bits = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %13, i32 0, i32 3, !dbg !13248
  store i64 %12, i64* %bits, align 8, !dbg !13249
  %14 = load i32, i32* %min.addr, align 4, !dbg !13250
  %rem = urem i32 %14, 64, !dbg !13251
  %15 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13252
  %bits8 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %15, i32 0, i32 3, !dbg !13253
  %16 = load i64, i64* %bits8, align 8, !dbg !13254
  %sh_prom = zext i32 %rem to i64, !dbg !13254
  %shr = lshr i64 %16, %sh_prom, !dbg !13254
  store i64 %shr, i64* %bits8, align 8, !dbg !13254
  %17 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13255
  %bits9 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %17, i32 0, i32 3, !dbg !13256
  %18 = load i64, i64* %bits9, align 8, !dbg !13256
  %tobool = icmp ne i64 %18, 0, !dbg !13257
  %lnot = xor i1 %tobool, true, !dbg !13257
  %lnot.ext = zext i1 %lnot to i32, !dbg !13257
  %19 = load i32, i32* %min.addr, align 4, !dbg !13258
  %add = add i32 %19, %lnot.ext, !dbg !13258
  store i32 %add, i32* %min.addr, align 4, !dbg !13258
  br label %if.end, !dbg !13259

if.end:                                           ; preds = %if.then, %entry
  %20 = load i32, i32* %min.addr, align 4, !dbg !13260
  %21 = load i32*, i32** %regno.addr, align 8, !dbg !13261
  store i32 %20, i32* %21, align 4, !dbg !13262
  ret void, !dbg !13263
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @hard_reg_set_iter_set(%struct.hard_reg_set_iterator* %iter, i32* %regno) #0 !dbg !13264 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.hard_reg_set_iterator*, align 8
  %regno.addr = alloca i32*, align 8
  store %struct.hard_reg_set_iterator* %iter, %struct.hard_reg_set_iterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hard_reg_set_iterator** %iter.addr, metadata !13267, metadata !DIExpression()), !dbg !13268
  store i32* %regno, i32** %regno.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %regno.addr, metadata !13269, metadata !DIExpression()), !dbg !13270
  br label %while.body, !dbg !13271

while.body:                                       ; preds = %entry, %while.end30
  %0 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13272
  %word_no = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %0, i32 0, i32 2, !dbg !13275
  %1 = load i16, i16* %word_no, align 2, !dbg !13275
  %conv = zext i16 %1 to i32, !dbg !13272
  %2 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13276
  %length = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %2, i32 0, i32 1, !dbg !13277
  %3 = load i16, i16* %length, align 8, !dbg !13277
  %conv1 = zext i16 %3 to i32, !dbg !13276
  %cmp = icmp sge i32 %conv, %conv1, !dbg !13278
  br i1 %cmp, label %if.then, label %if.end, !dbg !13279

if.then:                                          ; preds = %while.body
  store i8 0, i8* %retval, align 1, !dbg !13280
  br label %return, !dbg !13280

if.end:                                           ; preds = %while.body
  %4 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13281
  %bits = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %4, i32 0, i32 3, !dbg !13283
  %5 = load i64, i64* %bits, align 8, !dbg !13283
  %tobool = icmp ne i64 %5, 0, !dbg !13281
  br i1 %tobool, label %if.then3, label %if.end12, !dbg !13284

if.then3:                                         ; preds = %if.end
  br label %while.cond4, !dbg !13285

while.cond4:                                      ; preds = %while.body7, %if.then3
  %6 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13287
  %bits5 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %6, i32 0, i32 3, !dbg !13288
  %7 = load i64, i64* %bits5, align 8, !dbg !13288
  %and = and i64 %7, 1, !dbg !13289
  %tobool6 = icmp ne i64 %and, 0, !dbg !13290
  %lnot = xor i1 %tobool6, true, !dbg !13290
  br i1 %lnot, label %while.body7, label %while.end, !dbg !13285

while.body7:                                      ; preds = %while.cond4
  %8 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13291
  %bits8 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %8, i32 0, i32 3, !dbg !13293
  %9 = load i64, i64* %bits8, align 8, !dbg !13294
  %shr = lshr i64 %9, 1, !dbg !13294
  store i64 %shr, i64* %bits8, align 8, !dbg !13294
  %10 = load i32*, i32** %regno.addr, align 8, !dbg !13295
  %11 = load i32, i32* %10, align 4, !dbg !13296
  %add = add i32 %11, 1, !dbg !13296
  store i32 %add, i32* %10, align 4, !dbg !13296
  br label %while.cond4, !dbg !13285, !llvm.loop !13297

while.end:                                        ; preds = %while.cond4
  %12 = load i32*, i32** %regno.addr, align 8, !dbg !13299
  %13 = load i32, i32* %12, align 4, !dbg !13300
  %cmp9 = icmp ult i32 %13, 53, !dbg !13301
  %conv10 = zext i1 %cmp9 to i32, !dbg !13301
  %conv11 = trunc i32 %conv10 to i8, !dbg !13302
  store i8 %conv11, i8* %retval, align 1, !dbg !13303
  br label %return, !dbg !13303

if.end12:                                         ; preds = %if.end
  %14 = load i32*, i32** %regno.addr, align 8, !dbg !13304
  %15 = load i32, i32* %14, align 4, !dbg !13305
  %add13 = add i32 %15, 64, !dbg !13306
  %sub = sub i32 %add13, 1, !dbg !13307
  %16 = load i32*, i32** %regno.addr, align 8, !dbg !13308
  store i32 %sub, i32* %16, align 4, !dbg !13309
  %17 = load i32*, i32** %regno.addr, align 8, !dbg !13310
  %18 = load i32, i32* %17, align 4, !dbg !13311
  %rem = urem i32 %18, 64, !dbg !13312
  %19 = load i32*, i32** %regno.addr, align 8, !dbg !13313
  %20 = load i32, i32* %19, align 4, !dbg !13314
  %sub14 = sub i32 %20, %rem, !dbg !13314
  store i32 %sub14, i32* %19, align 4, !dbg !13314
  br label %while.cond15, !dbg !13315

while.cond15:                                     ; preds = %if.end28, %if.end12
  %21 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13316
  %word_no16 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %21, i32 0, i32 2, !dbg !13317
  %22 = load i16, i16* %word_no16, align 2, !dbg !13318
  %inc = add i16 %22, 1, !dbg !13318
  store i16 %inc, i16* %word_no16, align 2, !dbg !13318
  %conv17 = zext i16 %inc to i32, !dbg !13318
  %23 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13319
  %length18 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %23, i32 0, i32 1, !dbg !13320
  %24 = load i16, i16* %length18, align 8, !dbg !13320
  %conv19 = zext i16 %24 to i32, !dbg !13319
  %cmp20 = icmp slt i32 %conv17, %conv19, !dbg !13321
  br i1 %cmp20, label %while.body22, label %while.end30, !dbg !13315

while.body22:                                     ; preds = %while.cond15
  %25 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13322
  %pelt = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %25, i32 0, i32 0, !dbg !13324
  %26 = load i64*, i64** %pelt, align 8, !dbg !13324
  %27 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13325
  %word_no23 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %27, i32 0, i32 2, !dbg !13326
  %28 = load i16, i16* %word_no23, align 2, !dbg !13326
  %idxprom = zext i16 %28 to i64, !dbg !13322
  %arrayidx = getelementptr inbounds i64, i64* %26, i64 %idxprom, !dbg !13322
  %29 = load i64, i64* %arrayidx, align 8, !dbg !13322
  %30 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13327
  %bits24 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %30, i32 0, i32 3, !dbg !13328
  store i64 %29, i64* %bits24, align 8, !dbg !13329
  %31 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13330
  %bits25 = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %31, i32 0, i32 3, !dbg !13332
  %32 = load i64, i64* %bits25, align 8, !dbg !13332
  %tobool26 = icmp ne i64 %32, 0, !dbg !13330
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !13333

if.then27:                                        ; preds = %while.body22
  br label %while.end30, !dbg !13334

if.end28:                                         ; preds = %while.body22
  %33 = load i32*, i32** %regno.addr, align 8, !dbg !13335
  %34 = load i32, i32* %33, align 4, !dbg !13336
  %add29 = add i32 %34, 64, !dbg !13336
  store i32 %add29, i32* %33, align 4, !dbg !13336
  br label %while.cond15, !dbg !13315, !llvm.loop !13337

while.end30:                                      ; preds = %if.then27, %while.cond15
  br label %while.body, !dbg !13271, !llvm.loop !13339

return:                                           ; preds = %while.end, %if.then
  %35 = load i8, i8* %retval, align 1, !dbg !13341
  ret i8 %35, !dbg !13341
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sel_hard_regno_rename_ok(i32 %from, i32 %to) #0 !dbg !13342 {
entry:
  %retval = alloca i8, align 1
  %from.addr = alloca i32, align 4
  %to.addr = alloca i32, align 4
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !13345, metadata !DIExpression()), !dbg !13346
  store i32 %to, i32* %to.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to.addr, metadata !13347, metadata !DIExpression()), !dbg !13348
  %0 = load i32, i32* %from.addr, align 4, !dbg !13349
  %idxprom = sext i32 %0 to i64, !dbg !13349
  %arrayidx = getelementptr inbounds [53 x i64], [53 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 2), i64 0, i64 %idxprom, !dbg !13349
  %1 = load i64, i64* %arrayidx, align 8, !dbg !13349
  %2 = load i32, i32* %from.addr, align 4, !dbg !13349
  %sh_prom = zext i32 %2 to i64, !dbg !13349
  %shl = shl i64 1, %sh_prom, !dbg !13349
  %and = and i64 %1, %shl, !dbg !13349
  %tobool = icmp ne i64 %and, 0, !dbg !13349
  br i1 %tobool, label %if.then, label %if.end, !dbg !13351

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %from.addr, align 4, !dbg !13352
  %idxprom1 = sext i32 %3 to i64, !dbg !13352
  %arrayidx2 = getelementptr inbounds [53 x i64], [53 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 2), i64 0, i64 %idxprom1, !dbg !13352
  %4 = load i64, i64* %arrayidx2, align 8, !dbg !13352
  %5 = load i32, i32* %to.addr, align 4, !dbg !13352
  %sh_prom3 = zext i32 %5 to i64, !dbg !13352
  %shl4 = shl i64 1, %sh_prom3, !dbg !13352
  %and5 = and i64 %4, %shl4, !dbg !13352
  %tobool6 = icmp ne i64 %and5, 0, !dbg !13352
  %lnot = xor i1 %tobool6, true, !dbg !13352
  %lnot7 = xor i1 %lnot, true, !dbg !13352
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !13352
  %conv = trunc i32 %lnot.ext to i8, !dbg !13352
  store i8 %conv, i8* %retval, align 1, !dbg !13353
  br label %return, !dbg !13353

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %from.addr, align 4, !dbg !13354
  call void @init_hard_regno_rename(i32 %6), !dbg !13355
  %7 = load i32, i32* %from.addr, align 4, !dbg !13356
  %idxprom8 = sext i32 %7 to i64, !dbg !13356
  %arrayidx9 = getelementptr inbounds [53 x i64], [53 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 2), i64 0, i64 %idxprom8, !dbg !13356
  %8 = load i64, i64* %arrayidx9, align 8, !dbg !13356
  %9 = load i32, i32* %to.addr, align 4, !dbg !13356
  %sh_prom10 = zext i32 %9 to i64, !dbg !13356
  %shl11 = shl i64 1, %sh_prom10, !dbg !13356
  %and12 = and i64 %8, %shl11, !dbg !13356
  %tobool13 = icmp ne i64 %and12, 0, !dbg !13356
  %lnot14 = xor i1 %tobool13, true, !dbg !13356
  %lnot16 = xor i1 %lnot14, true, !dbg !13356
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !13356
  %conv18 = trunc i32 %lnot.ext17 to i8, !dbg !13356
  store i8 %conv18, i8* %retval, align 1, !dbg !13357
  br label %return, !dbg !13357

return:                                           ; preds = %if.end, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !13358
  ret i8 %10, !dbg !13358
}

; Function Attrs: noinline nounwind uwtable
define internal void @hard_reg_set_iter_next(%struct.hard_reg_set_iterator* %iter, i32* %regno) #0 !dbg !13359 {
entry:
  %iter.addr = alloca %struct.hard_reg_set_iterator*, align 8
  %regno.addr = alloca i32*, align 8
  store %struct.hard_reg_set_iterator* %iter, %struct.hard_reg_set_iterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hard_reg_set_iterator** %iter.addr, metadata !13362, metadata !DIExpression()), !dbg !13363
  store i32* %regno, i32** %regno.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %regno.addr, metadata !13364, metadata !DIExpression()), !dbg !13365
  %0 = load %struct.hard_reg_set_iterator*, %struct.hard_reg_set_iterator** %iter.addr, align 8, !dbg !13366
  %bits = getelementptr inbounds %struct.hard_reg_set_iterator, %struct.hard_reg_set_iterator* %0, i32 0, i32 3, !dbg !13367
  %1 = load i64, i64* %bits, align 8, !dbg !13368
  %shr = lshr i64 %1, 1, !dbg !13368
  store i64 %shr, i64* %bits, align 8, !dbg !13368
  %2 = load i32*, i32** %regno.addr, align 8, !dbg !13369
  %3 = load i32, i32* %2, align 4, !dbg !13370
  %add = add i32 %3, 1, !dbg !13370
  store i32 %add, i32* %2, align 4, !dbg !13370
  ret void, !dbg !13371
}

declare dso_local void @extract_insn(%struct.rtx_def*) #2

declare dso_local i32 @constrain_operands(i32) #2

declare dso_local void @_fatal_insn_not_found(%struct.rtx_def*, i8*, i32, i8*) #2

declare dso_local void @preprocess_constraints() #2

declare dso_local i32 @asm_noperands(%struct.rtx_def*) #2

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_hard_regno_rename(i32 %regno) #0 !dbg !13372 {
entry:
  %regno.addr = alloca i32, align 4
  %cur_reg = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !13373, metadata !DIExpression()), !dbg !13374
  call void @llvm.dbg.declare(metadata i32* %cur_reg, metadata !13375, metadata !DIExpression()), !dbg !13376
  %0 = load i32, i32* %regno.addr, align 4, !dbg !13377
  %sh_prom = zext i32 %0 to i64, !dbg !13377
  %shl = shl i64 1, %sh_prom, !dbg !13377
  %1 = load i32, i32* %regno.addr, align 4, !dbg !13377
  %idxprom = sext i32 %1 to i64, !dbg !13377
  %arrayidx = getelementptr inbounds [53 x i64], [53 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 2), i64 0, i64 %idxprom, !dbg !13377
  %2 = load i64, i64* %arrayidx, align 8, !dbg !13377
  %or = or i64 %2, %shl, !dbg !13377
  store i64 %or, i64* %arrayidx, align 8, !dbg !13377
  store i32 0, i32* %cur_reg, align 4, !dbg !13378
  br label %for.cond, !dbg !13380

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %cur_reg, align 4, !dbg !13381
  %cmp = icmp slt i32 %3, 53, !dbg !13383
  br i1 %cmp, label %for.body, label %for.end, !dbg !13384

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 4), align 8, !dbg !13385
  %5 = load i32, i32* %cur_reg, align 4, !dbg !13385
  %sh_prom1 = zext i32 %5 to i64, !dbg !13385
  %shl2 = shl i64 1, %sh_prom1, !dbg !13385
  %and = and i64 %4, %shl2, !dbg !13385
  %tobool = icmp ne i64 %and, 0, !dbg !13385
  br i1 %tobool, label %if.end, label %if.then, !dbg !13388

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !13389

if.end:                                           ; preds = %for.body
  %6 = load i32, i32* %regno.addr, align 4, !dbg !13390
  %conv = sext i32 %6 to i64, !dbg !13390
  %sub = sub i64 %conv, 8, !dbg !13390
  %cmp3 = icmp ule i64 %sub, 7, !dbg !13390
  br i1 %cmp3, label %if.end11, label %if.then5, !dbg !13392

if.then5:                                         ; preds = %if.end
  %7 = load i32, i32* %cur_reg, align 4, !dbg !13393
  %sh_prom6 = zext i32 %7 to i64, !dbg !13393
  %shl7 = shl i64 1, %sh_prom6, !dbg !13393
  %8 = load i32, i32* %regno.addr, align 4, !dbg !13393
  %idxprom8 = sext i32 %8 to i64, !dbg !13393
  %arrayidx9 = getelementptr inbounds [53 x i64], [53 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 2), i64 0, i64 %idxprom8, !dbg !13393
  %9 = load i64, i64* %arrayidx9, align 8, !dbg !13393
  %or10 = or i64 %9, %shl7, !dbg !13393
  store i64 %or10, i64* %arrayidx9, align 8, !dbg !13393
  br label %if.end11, !dbg !13393

if.end11:                                         ; preds = %if.then5, %if.end
  br label %for.inc, !dbg !13394

for.inc:                                          ; preds = %if.end11, %if.then
  %10 = load i32, i32* %cur_reg, align 4, !dbg !13395
  %inc = add nsw i32 %10, 1, !dbg !13395
  store i32 %inc, i32* %cur_reg, align 4, !dbg !13395
  br label %for.cond, !dbg !13396, !llvm.loop !13397

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13399
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @choose_best_reg_1(i64 %hard_regs_used, %struct.reg_rename* %reg_rename_p, %struct._list_node* %original_insns, i8* %is_orig_reg_p_ptr) #0 !dbg !13400 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %hard_regs_used.addr = alloca i64, align 8
  %reg_rename_p.addr = alloca %struct.reg_rename*, align 8
  %original_insns.addr = alloca %struct._list_node*, align 8
  %is_orig_reg_p_ptr.addr = alloca i8*, align 8
  %best_new_reg = alloca i32, align 4
  %cur_reg = alloca i32, align 4
  %mode = alloca i32, align 4
  %regno = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %hrsi = alloca %struct.hard_reg_set_iterator, align 8
  %di = alloca %struct._list_iterator, align 8
  %def = alloca %struct._def*, align 8
  %orig_dest = alloca %struct.rtx_def*, align 8
  store i64 %hard_regs_used, i64* %hard_regs_used.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hard_regs_used.addr, metadata !13401, metadata !DIExpression()), !dbg !13402
  store %struct.reg_rename* %reg_rename_p, %struct.reg_rename** %reg_rename_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reg_rename** %reg_rename_p.addr, metadata !13403, metadata !DIExpression()), !dbg !13404
  store %struct._list_node* %original_insns, %struct._list_node** %original_insns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %original_insns.addr, metadata !13405, metadata !DIExpression()), !dbg !13406
  store i8* %is_orig_reg_p_ptr, i8** %is_orig_reg_p_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %is_orig_reg_p_ptr.addr, metadata !13407, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.declare(metadata i32* %best_new_reg, metadata !13409, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.declare(metadata i32* %cur_reg, metadata !13411, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !13413, metadata !DIExpression()), !dbg !13414
  store i32 0, i32* %mode, align 4, !dbg !13414
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !13415, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13417, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.declare(metadata i32* %n, metadata !13419, metadata !DIExpression()), !dbg !13420
  call void @llvm.dbg.declare(metadata %struct.hard_reg_set_iterator* %hrsi, metadata !13421, metadata !DIExpression()), !dbg !13422
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %di, metadata !13423, metadata !DIExpression()), !dbg !13424
  call void @llvm.dbg.declare(metadata %struct._def** %def, metadata !13425, metadata !DIExpression()), !dbg !13426
  %0 = load i8*, i8** %is_orig_reg_p_ptr.addr, align 8, !dbg !13427
  store i8 1, i8* %0, align 1, !dbg !13428
  call void @_list_iter_start(%struct._list_iterator* %di, %struct._list_node** %original_insns.addr, i8 zeroext 0), !dbg !13429
  br label %for.cond, !dbg !13429

for.cond:                                         ; preds = %for.inc38, %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %di, i32 0, i32 0, !dbg !13431
  %1 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !13431
  %2 = load %struct._list_node*, %struct._list_node** %1, align 8, !dbg !13431
  %call = call zeroext i8 @_list_iter_cond_def(%struct._list_node* %2, %struct._def** %def), !dbg !13431
  %tobool = icmp ne i8 %call, 0, !dbg !13429
  br i1 %tobool, label %for.body, label %for.end39, !dbg !13429

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %orig_dest, metadata !13433, metadata !DIExpression()), !dbg !13435
  %3 = load %struct._def*, %struct._def** %def, align 8, !dbg !13436
  %orig_insn = getelementptr inbounds %struct._def, %struct._def* %3, i32 0, i32 0, !dbg !13436
  %4 = load %struct.rtx_def*, %struct.rtx_def** %orig_insn, align 8, !dbg !13436
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !13436
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13436
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !13436
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !13436
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13436
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !13436
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !13436
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !13436
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !13436
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !13436
  store %struct.rtx_def* %6, %struct.rtx_def** %orig_dest, align 8, !dbg !13435
  %7 = load %struct.rtx_def*, %struct.rtx_def** %orig_dest, align 8, !dbg !13437
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !13437
  %bf.load = load i32, i32* %8, align 8, !dbg !13437
  %bf.clear = and i32 %bf.load, 65535, !dbg !13437
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !13437
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !13437

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1398, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13437
  br label %cond.end, !dbg !13437

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !13437

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !13437
  %9 = load i32, i32* %mode, align 4, !dbg !13438
  %cmp5 = icmp eq i32 %9, 0, !dbg !13440
  br i1 %cmp5, label %if.then, label %if.end, !dbg !13441

if.then:                                          ; preds = %cond.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %orig_dest, align 8, !dbg !13442
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !13442
  %bf.load6 = load i32, i32* %11, align 8, !dbg !13442
  %bf.lshr = lshr i32 %bf.load6, 16, !dbg !13442
  %bf.clear7 = and i32 %bf.lshr, 255, !dbg !13442
  store i32 %bf.clear7, i32* %mode, align 4, !dbg !13443
  br label %if.end, !dbg !13444

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %mode, align 4, !dbg !13445
  %13 = load %struct.rtx_def*, %struct.rtx_def** %orig_dest, align 8, !dbg !13445
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !13445
  %bf.load8 = load i32, i32* %14, align 8, !dbg !13445
  %bf.lshr9 = lshr i32 %bf.load8, 16, !dbg !13445
  %bf.clear10 = and i32 %bf.lshr9, 255, !dbg !13445
  %cmp11 = icmp eq i32 %12, %bf.clear10, !dbg !13445
  br i1 %cmp11, label %cond.false13, label %cond.true12, !dbg !13445

cond.true12:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1406, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13445
  br label %cond.end14, !dbg !13445

cond.false13:                                     ; preds = %if.end
  br label %cond.end14, !dbg !13445

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i32 [ 0, %cond.true12 ], [ 0, %cond.false13 ], !dbg !13445
  %15 = load %struct.rtx_def*, %struct.rtx_def** %orig_dest, align 8, !dbg !13446
  %call16 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !13446
  store i32 %call16, i32* %regno, align 4, !dbg !13447
  store i32 0, i32* %i, align 4, !dbg !13448
  %16 = load i32, i32* %regno, align 4, !dbg !13450
  %idxprom = zext i32 %16 to i64, !dbg !13451
  %arrayidx17 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !13451
  %17 = load i32, i32* %mode, align 4, !dbg !13452
  %idxprom18 = zext i32 %17 to i64, !dbg !13451
  %arrayidx19 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx17, i64 0, i64 %idxprom18, !dbg !13451
  %18 = load i8, i8* %arrayidx19, align 1, !dbg !13451
  %conv = zext i8 %18 to i32, !dbg !13451
  store i32 %conv, i32* %n, align 4, !dbg !13453
  br label %for.cond20, !dbg !13454

for.cond20:                                       ; preds = %for.inc, %cond.end14
  %19 = load i32, i32* %i, align 4, !dbg !13455
  %20 = load i32, i32* %n, align 4, !dbg !13457
  %cmp21 = icmp ult i32 %19, %20, !dbg !13458
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !13459

for.body23:                                       ; preds = %for.cond20
  %21 = load i64, i64* %hard_regs_used.addr, align 8, !dbg !13460
  %22 = load i32, i32* %regno, align 4, !dbg !13460
  %23 = load i32, i32* %i, align 4, !dbg !13460
  %add = add i32 %22, %23, !dbg !13460
  %sh_prom = zext i32 %add to i64, !dbg !13460
  %shl = shl i64 1, %sh_prom, !dbg !13460
  %and = and i64 %21, %shl, !dbg !13460
  %tobool24 = icmp ne i64 %and, 0, !dbg !13460
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !13462

if.then25:                                        ; preds = %for.body23
  br label %for.end, !dbg !13463

if.end26:                                         ; preds = %for.body23
  br label %for.inc, !dbg !13460

for.inc:                                          ; preds = %if.end26
  %24 = load i32, i32* %i, align 4, !dbg !13464
  %inc = add i32 %24, 1, !dbg !13464
  store i32 %inc, i32* %i, align 4, !dbg !13464
  br label %for.cond20, !dbg !13465, !llvm.loop !13466

for.end:                                          ; preds = %if.then25, %for.cond20
  %25 = load i32, i32* %i, align 4, !dbg !13468
  %26 = load i32, i32* %n, align 4, !dbg !13470
  %cmp27 = icmp eq i32 %25, %26, !dbg !13471
  br i1 %cmp27, label %if.then29, label %if.end37, !dbg !13472

if.then29:                                        ; preds = %for.end
  %27 = load i32, i32* %mode, align 4, !dbg !13473
  %cmp30 = icmp ne i32 %27, 0, !dbg !13473
  br i1 %cmp30, label %cond.false33, label %cond.true32, !dbg !13473

cond.true32:                                      ; preds = %if.then29
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13473
  br label %cond.end34, !dbg !13473

cond.false33:                                     ; preds = %if.then29
  br label %cond.end34, !dbg !13473

cond.end34:                                       ; preds = %cond.false33, %cond.true32
  %cond35 = phi i32 [ 0, %cond.true32 ], [ 0, %cond.false33 ], !dbg !13473
  %28 = load i32, i32* %mode, align 4, !dbg !13475
  %29 = load i32, i32* %regno, align 4, !dbg !13476
  %call36 = call %struct.rtx_def* @gen_rtx_REG(i32 %28, i32 %29), !dbg !13477
  store %struct.rtx_def* %call36, %struct.rtx_def** %retval, align 8, !dbg !13478
  br label %return, !dbg !13478

if.end37:                                         ; preds = %for.end
  br label %for.inc38, !dbg !13479

for.inc38:                                        ; preds = %if.end37
  call void @_list_iter_next(%struct._list_iterator* %di), !dbg !13431
  br label %for.cond, !dbg !13431, !llvm.loop !13480

for.end39:                                        ; preds = %for.cond
  %30 = load i8*, i8** %is_orig_reg_p_ptr.addr, align 8, !dbg !13482
  store i8 0, i8* %30, align 1, !dbg !13483
  store i32 -1, i32* %best_new_reg, align 4, !dbg !13484
  %31 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !13485
  %available_for_renaming = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %31, i32 0, i32 1, !dbg !13485
  %32 = load i64, i64* %available_for_renaming, align 8, !dbg !13485
  call void @hard_reg_set_iter_init(%struct.hard_reg_set_iterator* %hrsi, i64 %32, i32 0, i32* %cur_reg), !dbg !13485
  br label %for.cond40, !dbg !13485

for.cond40:                                       ; preds = %for.inc95, %for.end39
  %call41 = call zeroext i8 @hard_reg_set_iter_set(%struct.hard_reg_set_iterator* %hrsi, i32* %cur_reg), !dbg !13487
  %tobool42 = icmp ne i8 %call41, 0, !dbg !13485
  br i1 %tobool42, label %for.body43, label %for.end96, !dbg !13485

for.body43:                                       ; preds = %for.cond40
  %33 = load i64, i64* %hard_regs_used.addr, align 8, !dbg !13489
  %34 = load i32, i32* %cur_reg, align 4, !dbg !13489
  %sh_prom44 = zext i32 %34 to i64, !dbg !13489
  %shl45 = shl i64 1, %sh_prom44, !dbg !13489
  %and46 = and i64 %33, %shl45, !dbg !13489
  %tobool47 = icmp ne i64 %and46, 0, !dbg !13489
  br i1 %tobool47, label %if.end94, label %if.then48, !dbg !13491

if.then48:                                        ; preds = %for.body43
  store i32 1, i32* %i, align 4, !dbg !13492
  %35 = load i32, i32* %cur_reg, align 4, !dbg !13495
  %idxprom49 = zext i32 %35 to i64, !dbg !13496
  %arrayidx50 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom49, !dbg !13496
  %36 = load i32, i32* %mode, align 4, !dbg !13497
  %idxprom51 = zext i32 %36 to i64, !dbg !13496
  %arrayidx52 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx50, i64 0, i64 %idxprom51, !dbg !13496
  %37 = load i8, i8* %arrayidx52, align 1, !dbg !13496
  %conv53 = zext i8 %37 to i32, !dbg !13496
  store i32 %conv53, i32* %n, align 4, !dbg !13498
  br label %for.cond54, !dbg !13499

for.cond54:                                       ; preds = %for.inc71, %if.then48
  %38 = load i32, i32* %i, align 4, !dbg !13500
  %39 = load i32, i32* %n, align 4, !dbg !13502
  %cmp55 = icmp ult i32 %38, %39, !dbg !13503
  br i1 %cmp55, label %for.body57, label %for.end73, !dbg !13504

for.body57:                                       ; preds = %for.cond54
  %40 = load i64, i64* %hard_regs_used.addr, align 8, !dbg !13505
  %41 = load i32, i32* %cur_reg, align 4, !dbg !13505
  %42 = load i32, i32* %i, align 4, !dbg !13505
  %add58 = add i32 %41, %42, !dbg !13505
  %sh_prom59 = zext i32 %add58 to i64, !dbg !13505
  %shl60 = shl i64 1, %sh_prom59, !dbg !13505
  %and61 = and i64 %40, %shl60, !dbg !13505
  %tobool62 = icmp ne i64 %and61, 0, !dbg !13505
  br i1 %tobool62, label %if.then69, label %lor.lhs.false, !dbg !13507

lor.lhs.false:                                    ; preds = %for.body57
  %43 = load %struct.reg_rename*, %struct.reg_rename** %reg_rename_p.addr, align 8, !dbg !13508
  %available_for_renaming63 = getelementptr inbounds %struct.reg_rename, %struct.reg_rename* %43, i32 0, i32 1, !dbg !13508
  %44 = load i64, i64* %available_for_renaming63, align 8, !dbg !13508
  %45 = load i32, i32* %cur_reg, align 4, !dbg !13508
  %46 = load i32, i32* %i, align 4, !dbg !13508
  %add64 = add i32 %45, %46, !dbg !13508
  %sh_prom65 = zext i32 %add64 to i64, !dbg !13508
  %shl66 = shl i64 1, %sh_prom65, !dbg !13508
  %and67 = and i64 %44, %shl66, !dbg !13508
  %tobool68 = icmp ne i64 %and67, 0, !dbg !13508
  br i1 %tobool68, label %if.end70, label %if.then69, !dbg !13509

if.then69:                                        ; preds = %lor.lhs.false, %for.body57
  br label %for.end73, !dbg !13510

if.end70:                                         ; preds = %lor.lhs.false
  br label %for.inc71, !dbg !13508

for.inc71:                                        ; preds = %if.end70
  %47 = load i32, i32* %i, align 4, !dbg !13511
  %inc72 = add i32 %47, 1, !dbg !13511
  store i32 %inc72, i32* %i, align 4, !dbg !13511
  br label %for.cond54, !dbg !13512, !llvm.loop !13513

for.end73:                                        ; preds = %if.then69, %for.cond54
  %48 = load i32, i32* %i, align 4, !dbg !13515
  %49 = load i32, i32* %n, align 4, !dbg !13517
  %cmp74 = icmp ult i32 %48, %49, !dbg !13518
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !13519

if.then76:                                        ; preds = %for.end73
  br label %for.inc95, !dbg !13520

if.end77:                                         ; preds = %for.end73
  %50 = load i32, i32* %best_new_reg, align 4, !dbg !13521
  %cmp78 = icmp slt i32 %50, 0, !dbg !13523
  br i1 %cmp78, label %if.then87, label %lor.lhs.false80, !dbg !13524

lor.lhs.false80:                                  ; preds = %if.end77
  %51 = load i32, i32* %cur_reg, align 4, !dbg !13525
  %idxprom81 = zext i32 %51 to i64, !dbg !13526
  %arrayidx82 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_rename_tick, i64 0, i64 %idxprom81, !dbg !13526
  %52 = load i32, i32* %arrayidx82, align 4, !dbg !13526
  %53 = load i32, i32* %best_new_reg, align 4, !dbg !13527
  %idxprom83 = sext i32 %53 to i64, !dbg !13528
  %arrayidx84 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_rename_tick, i64 0, i64 %idxprom83, !dbg !13528
  %54 = load i32, i32* %arrayidx84, align 4, !dbg !13528
  %cmp85 = icmp slt i32 %52, %54, !dbg !13529
  br i1 %cmp85, label %if.then87, label %if.end93, !dbg !13530

if.then87:                                        ; preds = %lor.lhs.false80, %if.end77
  %55 = load i32, i32* %cur_reg, align 4, !dbg !13531
  store i32 %55, i32* %best_new_reg, align 4, !dbg !13533
  %56 = load i32, i32* %best_new_reg, align 4, !dbg !13534
  %idxprom88 = sext i32 %56 to i64, !dbg !13536
  %arrayidx89 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_rename_tick, i64 0, i64 %idxprom88, !dbg !13536
  %57 = load i32, i32* %arrayidx89, align 4, !dbg !13536
  %tobool90 = icmp ne i32 %57, 0, !dbg !13536
  br i1 %tobool90, label %if.end92, label %if.then91, !dbg !13537

if.then91:                                        ; preds = %if.then87
  br label %for.end96, !dbg !13538

if.end92:                                         ; preds = %if.then87
  br label %if.end93, !dbg !13539

if.end93:                                         ; preds = %if.end92, %lor.lhs.false80
  br label %if.end94, !dbg !13540

if.end94:                                         ; preds = %if.end93, %for.body43
  br label %for.inc95, !dbg !13489

for.inc95:                                        ; preds = %if.end94, %if.then76
  call void @hard_reg_set_iter_next(%struct.hard_reg_set_iterator* %hrsi, i32* %cur_reg), !dbg !13487
  br label %for.cond40, !dbg !13487, !llvm.loop !13541

for.end96:                                        ; preds = %if.then91, %for.cond40
  %58 = load i32, i32* %best_new_reg, align 4, !dbg !13543
  %cmp97 = icmp sge i32 %58, 0, !dbg !13545
  br i1 %cmp97, label %if.then99, label %if.end107, !dbg !13546

if.then99:                                        ; preds = %for.end96
  %59 = load i32, i32* %mode, align 4, !dbg !13547
  %cmp100 = icmp ne i32 %59, 0, !dbg !13547
  br i1 %cmp100, label %cond.false103, label %cond.true102, !dbg !13547

cond.true102:                                     ; preds = %if.then99
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1457, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13547
  br label %cond.end104, !dbg !13547

cond.false103:                                    ; preds = %if.then99
  br label %cond.end104, !dbg !13547

cond.end104:                                      ; preds = %cond.false103, %cond.true102
  %cond105 = phi i32 [ 0, %cond.true102 ], [ 0, %cond.false103 ], !dbg !13547
  %60 = load i32, i32* %mode, align 4, !dbg !13549
  %61 = load i32, i32* %best_new_reg, align 4, !dbg !13550
  %call106 = call %struct.rtx_def* @gen_rtx_REG(i32 %60, i32 %61), !dbg !13551
  store %struct.rtx_def* %call106, %struct.rtx_def** %retval, align 8, !dbg !13552
  br label %return, !dbg !13552

if.end107:                                        ; preds = %for.end96
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !13553
  br label %return, !dbg !13553

return:                                           ; preds = %if.end107, %cond.end104, %cond.end34
  %62 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !13554
  ret %struct.rtx_def* %62, !dbg !13554
}

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) #2

declare dso_local zeroext i8 @df_regs_ever_live_p(i32) #2

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) #2

declare dso_local i32 @max_reg_num() #2

declare dso_local void @maybe_extend_reg_info_p() #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @replace_src_with_reg_ok_p(%struct.rtx_def* %insn, %struct.rtx_def* %new_src_reg) #0 !dbg !13555 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %new_src_reg.addr = alloca %struct.rtx_def*, align 8
  %vi = alloca %struct.vinsn_def*, align 8
  %mode = alloca i32, align 4
  %dst_loc = alloca %struct.rtx_def*, align 8
  %res = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !13558, metadata !DIExpression()), !dbg !13559
  store %struct.rtx_def* %new_src_reg, %struct.rtx_def** %new_src_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_src_reg.addr, metadata !13560, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vi, metadata !13562, metadata !DIExpression()), !dbg !13563
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13564
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %0, null, !dbg !13564
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13564

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13564
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i32 0, i32 0, !dbg !13564
  br label %cond.end, !dbg !13564

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13564

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !13564
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13564
  %tobool1 = icmp ne %struct.VEC_int_heap* %2, null, !dbg !13564
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !13564

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13564
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i32 0, i32 0, !dbg !13564
  br label %cond.end5, !dbg !13564

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !13564

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !13564
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13564
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !13564
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13564
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !13564
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !13564
  %5 = load i32, i32* %rt_int, align 8, !dbg !13564
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %5), !dbg !13564
  %call7 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !13564
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i32 0, i32 0, !dbg !13564
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 0, !dbg !13564
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !13564
  store %struct.vinsn_def* %6, %struct.vinsn_def** %vi, align 8, !dbg !13563
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !13565, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dst_loc, metadata !13567, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.declare(metadata i8* %res, metadata !13569, metadata !DIExpression()), !dbg !13570
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !13571
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i32 0, i32 1, !dbg !13571
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !13571
  %8 = load i32, i32* %type, align 8, !dbg !13571
  %cmp = icmp eq i32 %8, 23, !dbg !13571
  br i1 %cmp, label %cond.false9, label %cond.true8, !dbg !13571

cond.true8:                                       ; preds = %cond.end5
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 923, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13571
  br label %cond.end10, !dbg !13571

cond.false9:                                      ; preds = %cond.end5
  br label %cond.end10, !dbg !13571

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32 [ 0, %cond.true8 ], [ 0, %cond.false9 ], !dbg !13571
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13572
  call void @get_dest_and_mode(%struct.rtx_def* %9, %struct.rtx_def** %dst_loc, i32* %mode), !dbg !13573
  %10 = load i32, i32* %mode, align 4, !dbg !13574
  %11 = load %struct.rtx_def*, %struct.rtx_def** %new_src_reg.addr, align 8, !dbg !13574
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !13574
  %bf.load = load i32, i32* %12, align 8, !dbg !13574
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !13574
  %bf.clear = and i32 %bf.lshr, 255, !dbg !13574
  %cmp12 = icmp eq i32 %10, %bf.clear, !dbg !13574
  br i1 %cmp12, label %cond.false14, label %cond.true13, !dbg !13574

cond.true13:                                      ; preds = %cond.end10
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 926, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13574
  br label %cond.end15, !dbg !13574

cond.false14:                                     ; preds = %cond.end10
  br label %cond.end15, !dbg !13574

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i32 [ 0, %cond.true13 ], [ 0, %cond.false14 ], !dbg !13574
  %13 = load %struct.rtx_def*, %struct.rtx_def** %dst_loc, align 8, !dbg !13575
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !13575
  %bf.load17 = load i32, i32* %14, align 8, !dbg !13575
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !13575
  %cmp19 = icmp eq i32 %bf.clear18, 37, !dbg !13575
  br i1 %cmp19, label %land.lhs.true, label %if.end, !dbg !13577

land.lhs.true:                                    ; preds = %cond.end15
  %15 = load %struct.rtx_def*, %struct.rtx_def** %new_src_reg.addr, align 8, !dbg !13578
  %call20 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !13578
  %16 = load %struct.rtx_def*, %struct.rtx_def** %dst_loc, align 8, !dbg !13579
  %call21 = call i32 @rhs_regno(%struct.rtx_def* %16), !dbg !13579
  %cmp22 = icmp eq i32 %call20, %call21, !dbg !13580
  br i1 %cmp22, label %if.then, label %if.end, !dbg !13581

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !13582
  br label %return, !dbg !13582

if.end:                                           ; preds = %land.lhs.true, %cond.end15
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13583
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13584
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !13584
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !13584
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 5, !dbg !13584
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !13584
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13584
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !13584
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !13584
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 1, !dbg !13584
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !13584
  %20 = load %struct.rtx_def*, %struct.rtx_def** %new_src_reg.addr, align 8, !dbg !13585
  %call30 = call zeroext i8 @validate_change(%struct.rtx_def* %17, %struct.rtx_def** %rt_rtx29, %struct.rtx_def* %20, i8 zeroext 1), !dbg !13586
  %call31 = call i32 @verify_changes(i32 0), !dbg !13587
  %conv = trunc i32 %call31 to i8, !dbg !13587
  store i8 %conv, i8* %res, align 1, !dbg !13588
  call void @cancel_changes(i32 0), !dbg !13589
  %21 = load i8, i8* %res, align 1, !dbg !13590
  store i8 %21, i8* %retval, align 1, !dbg !13591
  br label %return, !dbg !13591

return:                                           ; preds = %if.end, %if.then
  %22 = load i8, i8* %retval, align 1, !dbg !13592
  ret i8 %22, !dbg !13592
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @replace_dest_with_reg_ok_p(%struct.rtx_def* %insn, %struct.rtx_def* %new_reg) #0 !dbg !13593 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %new_reg.addr = alloca %struct.rtx_def*, align 8
  %vi = alloca %struct.vinsn_def*, align 8
  %res = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !13594, metadata !DIExpression()), !dbg !13595
  store %struct.rtx_def* %new_reg, %struct.rtx_def** %new_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_reg.addr, metadata !13596, metadata !DIExpression()), !dbg !13597
  call void @llvm.dbg.declare(metadata %struct.vinsn_def** %vi, metadata !13598, metadata !DIExpression()), !dbg !13599
  %0 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13600
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %0, null, !dbg !13600
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13600

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13600
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %1, i32 0, i32 0, !dbg !13600
  br label %cond.end, !dbg !13600

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13600

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !13600
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13600
  %tobool1 = icmp ne %struct.VEC_int_heap* %2, null, !dbg !13600
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !13600

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13600
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i32 0, i32 0, !dbg !13600
  br label %cond.end5, !dbg !13600

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !13600

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !13600
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13600
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !13600
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13600
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !13600
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !13600
  %5 = load i32, i32* %rt_int, align 8, !dbg !13600
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %5), !dbg !13600
  %call7 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !13600
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call7, i32 0, i32 0, !dbg !13600
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 0, !dbg !13600
  %6 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !13600
  store %struct.vinsn_def* %6, %struct.vinsn_def** %vi, align 8, !dbg !13599
  call void @llvm.dbg.declare(metadata i8* %res, metadata !13601, metadata !DIExpression()), !dbg !13602
  %7 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !13603
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %7, i32 0, i32 1, !dbg !13603
  %type = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 0, !dbg !13603
  %8 = load i32, i32* %type, align 8, !dbg !13603
  %cmp = icmp eq i32 %8, 23, !dbg !13603
  br i1 %cmp, label %cond.false9, label %cond.true8, !dbg !13603

cond.true8:                                       ; preds = %cond.end5
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 948, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13603
  br label %cond.end10, !dbg !13603

cond.false9:                                      ; preds = %cond.end5
  br label %cond.end10, !dbg !13603

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32 [ 0, %cond.true8 ], [ 0, %cond.false9 ], !dbg !13603
  %9 = load %struct.vinsn_def*, %struct.vinsn_def** %vi, align 8, !dbg !13604
  %id12 = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %9, i32 0, i32 1, !dbg !13604
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id12, i32 0, i32 1, !dbg !13604
  %10 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !13604
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !13604
  %bf.load = load i32, i32* %11, align 8, !dbg !13604
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !13604
  %bf.clear = and i32 %bf.lshr, 255, !dbg !13604
  %12 = load %struct.rtx_def*, %struct.rtx_def** %new_reg.addr, align 8, !dbg !13604
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !13604
  %bf.load13 = load i32, i32* %13, align 8, !dbg !13604
  %bf.lshr14 = lshr i32 %bf.load13, 16, !dbg !13604
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !13604
  %cmp16 = icmp eq i32 %bf.clear, %bf.clear15, !dbg !13604
  br i1 %cmp16, label %cond.false18, label %cond.true17, !dbg !13604

cond.true17:                                      ; preds = %cond.end10
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 949, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13604
  br label %cond.end19, !dbg !13604

cond.false18:                                     ; preds = %cond.end10
  br label %cond.end19, !dbg !13604

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond20 = phi i32 [ 0, %cond.true17 ], [ 0, %cond.false18 ], !dbg !13604
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13605
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13606
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !13606
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !13606
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 5, !dbg !13606
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !13606
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13606
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !13606
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !13606
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !13606
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !13606
  %17 = load %struct.rtx_def*, %struct.rtx_def** %new_reg.addr, align 8, !dbg !13607
  %call28 = call zeroext i8 @validate_change(%struct.rtx_def* %14, %struct.rtx_def** %rt_rtx27, %struct.rtx_def* %17, i8 zeroext 1), !dbg !13608
  %call29 = call i32 @verify_changes(i32 0), !dbg !13609
  %conv = trunc i32 %call29 to i8, !dbg !13609
  store i8 %conv, i8* %res, align 1, !dbg !13610
  call void @cancel_changes(i32 0), !dbg !13611
  %18 = load i8, i8* %res, align 1, !dbg !13612
  ret i8 %18, !dbg !13613
}

declare dso_local void @get_dest_and_mode(%struct.rtx_def*, %struct.rtx_def**, i32*) #2

declare dso_local zeroext i8 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) #2

declare dso_local i32 @verify_changes(i32) #2

declare dso_local void @cancel_changes(i32) #2

declare dso_local void @sched_extend_ready_list(i32) #2

declare dso_local %struct.rtx_def* @ready_element(%struct.ready_list*, i32) #2

declare dso_local %struct.rtx_def** @ready_lastpos(%struct.ready_list*) #2

declare dso_local void @dump_vinsn(%struct.vinsn_def*) #2

declare dso_local i32 @max_issue(%struct.ready_list*, i32, i8*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_expr_cost(%struct._expr* %expr, %struct._fence* %fence) #0 !dbg !13614 {
entry:
  %retval = alloca i32, align 4
  %expr.addr = alloca %struct._expr*, align 8
  %fence.addr = alloca %struct._fence*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct._expr* %expr, %struct._expr** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr.addr, metadata !13617, metadata !DIExpression()), !dbg !13618
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !13619, metadata !DIExpression()), !dbg !13620
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !13621, metadata !DIExpression()), !dbg !13622
  %0 = load %struct._expr*, %struct._expr** %expr.addr, align 8, !dbg !13623
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %0, i32 0, i32 0, !dbg !13623
  %1 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !13623
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %1, i32 0, i32 0, !dbg !13623
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !13623
  store %struct.rtx_def* %2, %struct.rtx_def** %insn, align 8, !dbg !13622
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13624
  %call = call i32 @recog_memoized(%struct.rtx_def* %3), !dbg !13626
  %cmp = icmp slt i32 %call, 0, !dbg !13627
  br i1 %cmp, label %if.then, label %if.else16, !dbg !13628

if.then:                                          ; preds = %entry
  %4 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13629
  %starts_cycle_p = getelementptr inbounds %struct._fence, %struct._fence* %4, i32 0, i32 13, !dbg !13629
  %bf.load = load i8, i8* %starts_cycle_p, align 8, !dbg !13629
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !13629
  %bf.clear = and i8 %bf.lshr, 1, !dbg !13629
  %bf.cast = zext i8 %bf.clear to i32, !dbg !13629
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13629
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !13632

land.lhs.true:                                    ; preds = %if.then
  %5 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13633
  %tobool1 = icmp ne %struct.VEC_sel_insn_data_def_heap* %5, null, !dbg !13633
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !13633

cond.true:                                        ; preds = %land.lhs.true
  %6 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13633
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %6, i32 0, i32 0, !dbg !13633
  br label %cond.end, !dbg !13633

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !13633

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !13633
  %7 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13633
  %tobool2 = icmp ne %struct.VEC_int_heap* %7, null, !dbg !13633
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !13633

cond.true3:                                       ; preds = %cond.end
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13633
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i32 0, i32 0, !dbg !13633
  br label %cond.end6, !dbg !13633

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !13633

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi %struct.VEC_int_base* [ %base4, %cond.true3 ], [ null, %cond.false5 ], !dbg !13633
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13633
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !13633
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13633
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !13633
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !13633
  %10 = load i32, i32* %rt_int, align 8, !dbg !13633
  %call8 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond7, i32 %10), !dbg !13633
  %call9 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call8), !dbg !13633
  %asm_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call9, i32 0, i32 13, !dbg !13633
  %bf.load10 = load i8, i8* %asm_p, align 4, !dbg !13633
  %bf.lshr11 = lshr i8 %bf.load10, 1, !dbg !13633
  %bf.clear12 = and i8 %bf.lshr11, 1, !dbg !13633
  %bf.cast13 = zext i8 %bf.clear12 to i32, !dbg !13633
  %tobool14 = icmp ne i32 %bf.cast13, 0, !dbg !13633
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !13634

if.then15:                                        ; preds = %cond.end6
  store i32 1, i32* %retval, align 4, !dbg !13635
  br label %return, !dbg !13635

if.else:                                          ; preds = %cond.end6, %if.then
  store i32 0, i32* %retval, align 4, !dbg !13636
  br label %return, !dbg !13636

if.else16:                                        ; preds = %entry
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13637
  %12 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13638
  %state = getelementptr inbounds %struct._fence, %struct._fence* %12, i32 0, i32 1, !dbg !13638
  %13 = load i8*, i8** %state, align 8, !dbg !13638
  %call17 = call i32 @estimate_insn_cost(%struct.rtx_def* %11, i8* %13), !dbg !13639
  store i32 %call17, i32* %retval, align 4, !dbg !13640
  br label %return, !dbg !13640

return:                                           ; preds = %if.else16, %if.else, %if.then15
  %14 = load i32, i32* %retval, align 4, !dbg !13641
  ret i32 %14, !dbg !13641
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @estimate_insn_cost(%struct.rtx_def* %insn, i8* %state) #0 !dbg !2438 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %state.addr = alloca i8*, align 8
  %cost = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !13642, metadata !DIExpression()), !dbg !13643
  store i8* %state, i8** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr, metadata !13644, metadata !DIExpression()), !dbg !13645
  call void @llvm.dbg.declare(metadata i32* %cost, metadata !13646, metadata !DIExpression()), !dbg !13647
  %0 = load i8*, i8** @estimate_insn_cost.temp, align 8, !dbg !13648
  %tobool = icmp ne i8* %0, null, !dbg !13648
  br i1 %tobool, label %if.end, label %if.then, !dbg !13650

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @dfa_state_size, align 8, !dbg !13651
  %call = call i8* @xmalloc(i64 %1), !dbg !13652
  store i8* %call, i8** @estimate_insn_cost.temp, align 8, !dbg !13653
  br label %if.end, !dbg !13654

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8*, i8** @estimate_insn_cost.temp, align 8, !dbg !13655
  %3 = load i8*, i8** %state.addr, align 8, !dbg !13656
  %4 = load i64, i64* @dfa_state_size, align 8, !dbg !13657
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 %4, i1 false), !dbg !13658
  %5 = load i8*, i8** @estimate_insn_cost.temp, align 8, !dbg !13659
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13660
  %call1 = call i32 @state_transition(i8* %5, %struct.rtx_def* %6), !dbg !13661
  store i32 %call1, i32* %cost, align 4, !dbg !13662
  %7 = load i32, i32* %cost, align 4, !dbg !13663
  %cmp = icmp slt i32 %7, 0, !dbg !13665
  br i1 %cmp, label %if.then2, label %if.else, !dbg !13666

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13667
  br label %return, !dbg !13667

if.else:                                          ; preds = %if.end
  %8 = load i32, i32* %cost, align 4, !dbg !13668
  %cmp3 = icmp eq i32 %8, 0, !dbg !13670
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !13671

if.then4:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !13672
  br label %return, !dbg !13672

if.end5:                                          ; preds = %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end5
  %9 = load i32, i32* %cost, align 4, !dbg !13673
  store i32 %9, i32* %retval, align 4, !dbg !13674
  br label %return, !dbg !13674

return:                                           ; preds = %if.end6, %if.then4, %if.then2
  %10 = load i32, i32* %retval, align 4, !dbg !13675
  ret i32 %10, !dbg !13675
}

declare dso_local i32 @state_transition(i8*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sel_dfa_new_cycle(%struct.rtx_def* %insn, %struct._fence* %fence) #0 !dbg !13676 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %fence.addr = alloca %struct._fence*, align 8
  %last_scheduled_cycle = alloca i32, align 4
  %res = alloca i8, align 1
  %sort_p = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !13679, metadata !DIExpression()), !dbg !13680
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !13681, metadata !DIExpression()), !dbg !13682
  call void @llvm.dbg.declare(metadata i32* %last_scheduled_cycle, metadata !13683, metadata !DIExpression()), !dbg !13684
  %0 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13685
  %last_scheduled_insn = getelementptr inbounds %struct._fence, %struct._fence* %0, i32 0, i32 10, !dbg !13685
  %1 = load %struct.rtx_def*, %struct.rtx_def** %last_scheduled_insn, align 8, !dbg !13685
  %tobool = icmp ne %struct.rtx_def* %1, null, !dbg !13685
  br i1 %tobool, label %cond.true, label %cond.false11, !dbg !13685

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13686
  %tobool1 = icmp ne %struct.VEC_sel_insn_data_def_heap* %2, null, !dbg !13686
  br i1 %tobool1, label %cond.true2, label %cond.false, !dbg !13686

cond.true2:                                       ; preds = %cond.true
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13686
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %3, i32 0, i32 0, !dbg !13686
  br label %cond.end, !dbg !13686

cond.false:                                       ; preds = %cond.true
  br label %cond.end, !dbg !13686

cond.end:                                         ; preds = %cond.false, %cond.true2
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true2 ], [ null, %cond.false ], !dbg !13686
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13686
  %tobool3 = icmp ne %struct.VEC_int_heap* %4, null, !dbg !13686
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !13686

cond.true4:                                       ; preds = %cond.end
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13686
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i32 0, i32 0, !dbg !13686
  br label %cond.end7, !dbg !13686

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !13686

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi %struct.VEC_int_base* [ %base5, %cond.true4 ], [ null, %cond.false6 ], !dbg !13686
  %6 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13686
  %last_scheduled_insn9 = getelementptr inbounds %struct._fence, %struct._fence* %6, i32 0, i32 10, !dbg !13686
  %7 = load %struct.rtx_def*, %struct.rtx_def** %last_scheduled_insn9, align 8, !dbg !13686
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !13686
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13686
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !13686
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !13686
  %8 = load i32, i32* %rt_int, align 8, !dbg !13686
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond8, i32 %8), !dbg !13686
  %call10 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !13686
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call10, i32 0, i32 10, !dbg !13686
  %9 = load i32, i32* %sched_cycle, align 8, !dbg !13686
  br label %cond.end12, !dbg !13685

cond.false11:                                     ; preds = %entry
  %10 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13687
  %cycle = getelementptr inbounds %struct._fence, %struct._fence* %10, i32 0, i32 2, !dbg !13687
  %11 = load i32, i32* %cycle, align 8, !dbg !13687
  %sub = sub nsw i32 %11, 1, !dbg !13688
  br label %cond.end12, !dbg !13685

cond.end12:                                       ; preds = %cond.false11, %cond.end7
  %cond13 = phi i32 [ %9, %cond.end7 ], [ %sub, %cond.false11 ], !dbg !13685
  store i32 %cond13, i32* %last_scheduled_cycle, align 4, !dbg !13684
  call void @llvm.dbg.declare(metadata i8* %res, metadata !13689, metadata !DIExpression()), !dbg !13690
  store i8 0, i8* %res, align 1, !dbg !13690
  call void @llvm.dbg.declare(metadata i32* %sort_p, metadata !13691, metadata !DIExpression()), !dbg !13692
  store i32 0, i32* %sort_p, align 4, !dbg !13692
  %12 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 19), align 8, !dbg !13693
  %tobool14 = icmp ne i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)* %12, null, !dbg !13695
  br i1 %tobool14, label %if.end, label %if.then, !dbg !13696

if.then:                                          ; preds = %cond.end12
  store i8 0, i8* %retval, align 1, !dbg !13697
  br label %return, !dbg !13697

if.end:                                           ; preds = %cond.end12
  %13 = load i8*, i8** @curr_state, align 8, !dbg !13698
  %14 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13699
  %state = getelementptr inbounds %struct._fence, %struct._fence* %14, i32 0, i32 1, !dbg !13699
  %15 = load i8*, i8** %state, align 8, !dbg !13699
  %16 = load i64, i64* @dfa_state_size, align 8, !dbg !13700
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %15, i64 %16, i1 false), !dbg !13701
  br label %while.cond, !dbg !13702

while.cond:                                       ; preds = %while.body, %if.end
  %17 = load i32, i32* %sort_p, align 4, !dbg !13703
  %tobool15 = icmp ne i32 %17, 0, !dbg !13703
  br i1 %tobool15, label %land.end, label %land.rhs, !dbg !13704

land.rhs:                                         ; preds = %while.cond
  %18 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 19), align 8, !dbg !13705
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13706
  %20 = load i32, i32* @sched_verbose, align 4, !dbg !13707
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13708
  %22 = load i32, i32* %last_scheduled_cycle, align 4, !dbg !13709
  %23 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13710
  %cycle16 = getelementptr inbounds %struct._fence, %struct._fence* %23, i32 0, i32 2, !dbg !13710
  %24 = load i32, i32* %cycle16, align 8, !dbg !13710
  %call17 = call i32 %18(%struct._IO_FILE* %19, i32 %20, %struct.rtx_def* %21, i32 %22, i32 %24, i32* %sort_p), !dbg !13711
  %tobool18 = icmp ne i32 %call17, 0, !dbg !13704
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %25 = phi i1 [ false, %while.cond ], [ %tobool18, %land.rhs ], !dbg !13712
  br i1 %25, label %while.body, label %while.end, !dbg !13702

while.body:                                       ; preds = %land.end
  %26 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13713
  %state19 = getelementptr inbounds %struct._fence, %struct._fence* %26, i32 0, i32 1, !dbg !13713
  %27 = load i8*, i8** %state19, align 8, !dbg !13713
  %28 = load i8*, i8** @curr_state, align 8, !dbg !13715
  %29 = load i64, i64* @dfa_state_size, align 8, !dbg !13716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 %29, i1 false), !dbg !13717
  %30 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13718
  call void @advance_one_cycle(%struct._fence* %30), !dbg !13719
  %31 = load i8*, i8** @curr_state, align 8, !dbg !13720
  %32 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13721
  %state20 = getelementptr inbounds %struct._fence, %struct._fence* %32, i32 0, i32 1, !dbg !13721
  %33 = load i8*, i8** %state20, align 8, !dbg !13721
  %34 = load i64, i64* @dfa_state_size, align 8, !dbg !13722
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %33, i64 %34, i1 false), !dbg !13723
  store i8 1, i8* %res, align 1, !dbg !13724
  br label %while.cond, !dbg !13702, !llvm.loop !13725

while.end:                                        ; preds = %land.end
  %35 = load i8, i8* %res, align 1, !dbg !13727
  store i8 %35, i8* %retval, align 1, !dbg !13728
  br label %return, !dbg !13728

return:                                           ; preds = %while.end, %if.then
  %36 = load i8, i8* %retval, align 1, !dbg !13729
  ret i8 %36, !dbg !13729
}

; Function Attrs: noinline nounwind uwtable
define internal void @advance_one_cycle(%struct._fence* %fence) #0 !dbg !13730 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %i = alloca i32, align 4
  %cycle = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !13733, metadata !DIExpression()), !dbg !13734
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13735, metadata !DIExpression()), !dbg !13736
  call void @llvm.dbg.declare(metadata i32* %cycle, metadata !13737, metadata !DIExpression()), !dbg !13738
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !13739, metadata !DIExpression()), !dbg !13740
  %0 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13741
  %state = getelementptr inbounds %struct._fence, %struct._fence* %0, i32 0, i32 1, !dbg !13741
  %1 = load i8*, i8** %state, align 8, !dbg !13741
  call void @advance_state(i8* %1), !dbg !13742
  %2 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13743
  %cycle1 = getelementptr inbounds %struct._fence, %struct._fence* %2, i32 0, i32 2, !dbg !13743
  %3 = load i32, i32* %cycle1, align 8, !dbg !13744
  %inc = add nsw i32 %3, 1, !dbg !13744
  store i32 %inc, i32* %cycle1, align 8, !dbg !13744
  store i32 %inc, i32* %cycle, align 4, !dbg !13745
  %4 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13746
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %4, i32 0, i32 3, !dbg !13746
  store i32 0, i32* %cycle_issued_insns, align 4, !dbg !13747
  %5 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13748
  %starts_cycle_p = getelementptr inbounds %struct._fence, %struct._fence* %5, i32 0, i32 13, !dbg !13748
  %bf.load = load i8, i8* %starts_cycle_p, align 8, !dbg !13749
  %bf.clear = and i8 %bf.load, -5, !dbg !13749
  %bf.set = or i8 %bf.clear, 4, !dbg !13749
  store i8 %bf.set, i8* %starts_cycle_p, align 8, !dbg !13749
  %6 = load i32, i32* @issue_rate, align 4, !dbg !13750
  store i32 %6, i32* @can_issue_more, align 4, !dbg !13751
  %7 = load i32, i32* @can_issue_more, align 4, !dbg !13752
  %8 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13753
  %issue_more = getelementptr inbounds %struct._fence, %struct._fence* %8, i32 0, i32 11, !dbg !13753
  store i32 %7, i32* %issue_more, align 8, !dbg !13754
  store i32 0, i32* %i, align 4, !dbg !13755
  br label %for.cond, !dbg !13757

for.cond:                                         ; preds = %if.end, %cond.end24, %entry
  %9 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13758
  %executing_insns = getelementptr inbounds %struct._fence, %struct._fence* %9, i32 0, i32 7, !dbg !13758
  %10 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %executing_insns, align 8, !dbg !13758
  %tobool = icmp ne %struct.VEC_rtx_gc* %10, null, !dbg !13758
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13758

cond.true:                                        ; preds = %for.cond
  %11 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13758
  %executing_insns2 = getelementptr inbounds %struct._fence, %struct._fence* %11, i32 0, i32 7, !dbg !13758
  %12 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %executing_insns2, align 8, !dbg !13758
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %12, i32 0, i32 0, !dbg !13758
  br label %cond.end, !dbg !13758

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !13758

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !13758
  %13 = load i32, i32* %i, align 4, !dbg !13758
  %call = call i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond, i32 %13, %struct.rtx_def** %insn), !dbg !13758
  %tobool3 = icmp ne i32 %call, 0, !dbg !13760
  br i1 %tobool3, label %for.body, label %for.end, !dbg !13760

for.body:                                         ; preds = %cond.end
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13761
  %tobool4 = icmp ne %struct.VEC_sel_insn_data_def_heap* %14, null, !dbg !13761
  br i1 %tobool4, label %cond.true5, label %cond.false7, !dbg !13761

cond.true5:                                       ; preds = %for.body
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13761
  %base6 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i32 0, i32 0, !dbg !13761
  br label %cond.end8, !dbg !13761

cond.false7:                                      ; preds = %for.body
  br label %cond.end8, !dbg !13761

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi %struct.VEC_sel_insn_data_def_base* [ %base6, %cond.true5 ], [ null, %cond.false7 ], !dbg !13761
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13761
  %tobool10 = icmp ne %struct.VEC_int_heap* %16, null, !dbg !13761
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !13761

cond.true11:                                      ; preds = %cond.end8
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13761
  %base12 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %17, i32 0, i32 0, !dbg !13761
  br label %cond.end14, !dbg !13761

cond.false13:                                     ; preds = %cond.end8
  br label %cond.end14, !dbg !13761

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi %struct.VEC_int_base* [ %base12, %cond.true11 ], [ null, %cond.false13 ], !dbg !13761
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13761
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !13761
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13761
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !13761
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !13761
  %19 = load i32, i32* %rt_int, align 8, !dbg !13761
  %call16 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond15, i32 %19), !dbg !13761
  %call17 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond9, i32 %call16), !dbg !13761
  %ready_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call17, i32 0, i32 11, !dbg !13761
  %20 = load i32, i32* %ready_cycle, align 4, !dbg !13761
  %21 = load i32, i32* %cycle, align 4, !dbg !13764
  %cmp = icmp slt i32 %20, %21, !dbg !13765
  br i1 %cmp, label %if.then, label %if.end, !dbg !13766

if.then:                                          ; preds = %cond.end14
  %22 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13767
  %dc = getelementptr inbounds %struct._fence, %struct._fence* %22, i32 0, i32 5, !dbg !13767
  %23 = load %struct.deps*, %struct.deps** %dc, align 8, !dbg !13767
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13769
  call void @remove_from_deps(%struct.deps* %23, %struct.rtx_def* %24), !dbg !13770
  %25 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13771
  %executing_insns18 = getelementptr inbounds %struct._fence, %struct._fence* %25, i32 0, i32 7, !dbg !13771
  %26 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %executing_insns18, align 8, !dbg !13771
  %tobool19 = icmp ne %struct.VEC_rtx_gc* %26, null, !dbg !13771
  br i1 %tobool19, label %cond.true20, label %cond.false23, !dbg !13771

cond.true20:                                      ; preds = %if.then
  %27 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13771
  %executing_insns21 = getelementptr inbounds %struct._fence, %struct._fence* %27, i32 0, i32 7, !dbg !13771
  %28 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %executing_insns21, align 8, !dbg !13771
  %base22 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %28, i32 0, i32 0, !dbg !13771
  br label %cond.end24, !dbg !13771

cond.false23:                                     ; preds = %if.then
  br label %cond.end24, !dbg !13771

cond.end24:                                       ; preds = %cond.false23, %cond.true20
  %cond25 = phi %struct.VEC_rtx_base* [ %base22, %cond.true20 ], [ null, %cond.false23 ], !dbg !13771
  %29 = load i32, i32* %i, align 4, !dbg !13771
  %call26 = call %struct.rtx_def* @VEC_rtx_base_unordered_remove(%struct.VEC_rtx_base* %cond25, i32 %29), !dbg !13771
  br label %for.cond, !dbg !13772, !llvm.loop !13773

if.end:                                           ; preds = %cond.end14
  %30 = load i32, i32* %i, align 4, !dbg !13775
  %inc27 = add i32 %30, 1, !dbg !13775
  store i32 %inc27, i32* %i, align 4, !dbg !13775
  br label %for.cond, !dbg !13776, !llvm.loop !13773

for.end:                                          ; preds = %cond.end
  %31 = load i32, i32* @sched_verbose, align 4, !dbg !13777
  %cmp28 = icmp sge i32 %31, 2, !dbg !13779
  br i1 %cmp28, label %if.then29, label %if.end45, !dbg !13780

if.then29:                                        ; preds = %for.end
  br label %do.body, !dbg !13781

do.body:                                          ; preds = %if.then29
  %32 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !13783
  %tobool30 = icmp ne i8 %32, 0, !dbg !13783
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !13786

if.then31:                                        ; preds = %do.body
  br label %do.body32, !dbg !13783

do.body32:                                        ; preds = %if.then31
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !13787, metadata !DIExpression()), !dbg !13789
  %33 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13789
  %cycle33 = getelementptr inbounds %struct._fence, %struct._fence* %33, i32 0, i32 2, !dbg !13789
  %34 = load i32, i32* %cycle33, align 8, !dbg !13789
  %call34 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.74, i64 0, i64 0), i32 %34), !dbg !13789
  %mul = mul nsw i32 2, %call34, !dbg !13789
  %add = add nsw i32 1, %mul, !dbg !13789
  store i32 %add, i32* %__j, align 4, !dbg !13789
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !13790, metadata !DIExpression()), !dbg !13789
  %35 = load i32, i32* %__j, align 4, !dbg !13789
  %conv = sext i32 %35 to i64, !dbg !13789
  %mul35 = mul i64 1, %conv, !dbg !13789
  %36 = alloca i8, i64 %mul35, align 16, !dbg !13789
  store i8* %36, i8** %__s, align 8, !dbg !13789
  %37 = load i8*, i8** %__s, align 8, !dbg !13789
  %38 = load i32, i32* %__j, align 4, !dbg !13789
  %conv36 = sext i32 %38 to i64, !dbg !13789
  %39 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13789
  %cycle37 = getelementptr inbounds %struct._fence, %struct._fence* %39, i32 0, i32 2, !dbg !13789
  %40 = load i32, i32* %cycle37, align 8, !dbg !13789
  %call38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %37, i64 %conv36, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.74, i64 0, i64 0), i32 %40), !dbg !13789
  %41 = load i8*, i8** %__s, align 8, !dbg !13789
  call void @sel_prepare_string_for_dot_label(i8* %41), !dbg !13789
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13789
  %43 = load i8*, i8** %__s, align 8, !dbg !13789
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %43), !dbg !13789
  br label %do.end, !dbg !13789

do.end:                                           ; preds = %do.body32
  br label %if.end42, !dbg !13789

if.else:                                          ; preds = %do.body
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13783
  %45 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13783
  %cycle40 = getelementptr inbounds %struct._fence, %struct._fence* %45, i32 0, i32 2, !dbg !13783
  %46 = load i32, i32* %cycle40, align 8, !dbg !13783
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.74, i64 0, i64 0), i32 %46), !dbg !13783
  br label %if.end42

if.end42:                                         ; preds = %if.else, %do.end
  br label %do.end43, !dbg !13786

do.end43:                                         ; preds = %if.end42
  %47 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !13791
  %state44 = getelementptr inbounds %struct._fence, %struct._fence* %47, i32 0, i32 1, !dbg !13791
  %48 = load i8*, i8** %state44, align 8, !dbg !13791
  call void @debug_state(i8* %48), !dbg !13792
  br label %if.end45, !dbg !13793

if.end45:                                         ; preds = %do.end43, %for.end
  ret void, !dbg !13794
}

declare dso_local void @advance_state(i8*) #2

declare dso_local void @remove_from_deps(%struct.deps*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @VEC_rtx_base_unordered_remove(%struct.VEC_rtx_base* %vec_, i32 %ix_) #0 !dbg !13795 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_base*, align 8
  %ix_.addr = alloca i32, align 4
  %slot_ = alloca %struct.rtx_def**, align 8
  %obj_ = alloca %struct.rtx_def*, align 8
  store %struct.VEC_rtx_base* %vec_, %struct.VEC_rtx_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_base** %vec_.addr, metadata !13799, metadata !DIExpression()), !dbg !13800
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !13801, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %slot_, metadata !13802, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %obj_, metadata !13803, metadata !DIExpression()), !dbg !13800
  %0 = load i32, i32* %ix_.addr, align 4, !dbg !13800
  %1 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !13800
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %1, i32 0, i32 0, !dbg !13800
  %2 = load i32, i32* %num, align 8, !dbg !13800
  %cmp = icmp ult i32 %0, %2, !dbg !13800
  %conv = zext i1 %cmp to i32, !dbg !13800
  %3 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !13800
  %vec = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %3, i32 0, i32 2, !dbg !13800
  %4 = load i32, i32* %ix_.addr, align 4, !dbg !13800
  %idxprom = zext i32 %4 to i64, !dbg !13800
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %vec, i64 0, i64 %idxprom, !dbg !13800
  store %struct.rtx_def** %arrayidx, %struct.rtx_def*** %slot_, align 8, !dbg !13800
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %slot_, align 8, !dbg !13800
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !13800
  store %struct.rtx_def* %6, %struct.rtx_def** %obj_, align 8, !dbg !13800
  %7 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !13800
  %vec1 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %7, i32 0, i32 2, !dbg !13800
  %8 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !13800
  %num2 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %8, i32 0, i32 0, !dbg !13800
  %9 = load i32, i32* %num2, align 8, !dbg !13800
  %dec = add i32 %9, -1, !dbg !13800
  store i32 %dec, i32* %num2, align 8, !dbg !13800
  %idxprom3 = zext i32 %dec to i64, !dbg !13800
  %arrayidx4 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %vec1, i64 0, i64 %idxprom3, !dbg !13800
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4, align 8, !dbg !13800
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %slot_, align 8, !dbg !13800
  store %struct.rtx_def* %10, %struct.rtx_def** %11, align 8, !dbg !13800
  %12 = load %struct.rtx_def*, %struct.rtx_def** %obj_, align 8, !dbg !13800
  ret %struct.rtx_def* %12, !dbg !13800
}

; Function Attrs: noinline nounwind uwtable
define internal void @debug_state(i8* %state) #0 !dbg !13804 {
entry:
  %state.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %i = alloca i32, align 4
  %size = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j14 = alloca i32, align 4
  %__s19 = alloca i8*, align 8
  %__j40 = alloca i32, align 4
  %__s44 = alloca i8*, align 8
  store i8* %state, i8** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr, metadata !13807, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13809, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13811, metadata !DIExpression()), !dbg !13812
  call void @llvm.dbg.declare(metadata i32* %size, metadata !13813, metadata !DIExpression()), !dbg !13814
  %0 = load i64, i64* @dfa_state_size, align 8, !dbg !13815
  %conv = trunc i64 %0 to i32, !dbg !13815
  store i32 %conv, i32* %size, align 4, !dbg !13814
  br label %do.body, !dbg !13816

do.body:                                          ; preds = %entry
  %1 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !13817
  %tobool = icmp ne i8 %1, 0, !dbg !13817
  br i1 %tobool, label %if.then, label %if.else, !dbg !13820

if.then:                                          ; preds = %do.body
  br label %do.body1, !dbg !13817

do.body1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !13821, metadata !DIExpression()), !dbg !13823
  %2 = load i32, i32* %size, align 4, !dbg !13823
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32 %2), !dbg !13823
  %mul = mul nsw i32 2, %call, !dbg !13823
  %add = add nsw i32 1, %mul, !dbg !13823
  store i32 %add, i32* %__j, align 4, !dbg !13823
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !13824, metadata !DIExpression()), !dbg !13823
  %3 = load i32, i32* %__j, align 4, !dbg !13823
  %conv2 = sext i32 %3 to i64, !dbg !13823
  %mul3 = mul i64 1, %conv2, !dbg !13823
  %4 = alloca i8, i64 %mul3, align 16, !dbg !13823
  store i8* %4, i8** %__s, align 8, !dbg !13823
  %5 = load i8*, i8** %__s, align 8, !dbg !13823
  %6 = load i32, i32* %__j, align 4, !dbg !13823
  %conv4 = sext i32 %6 to i64, !dbg !13823
  %7 = load i32, i32* %size, align 4, !dbg !13823
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 %conv4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32 %7), !dbg !13823
  %8 = load i8*, i8** %__s, align 8, !dbg !13823
  call void @sel_prepare_string_for_dot_label(i8* %8), !dbg !13823
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13823
  %10 = load i8*, i8** %__s, align 8, !dbg !13823
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %10), !dbg !13823
  br label %do.end, !dbg !13823

do.end:                                           ; preds = %do.body1
  br label %if.end, !dbg !13823

if.else:                                          ; preds = %do.body
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13817
  %12 = load i32, i32* %size, align 4, !dbg !13817
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32 %12), !dbg !13817
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end8, !dbg !13820

do.end8:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !13825
  %13 = load i8*, i8** %state.addr, align 8, !dbg !13827
  store i8* %13, i8** %p, align 8, !dbg !13828
  br label %for.cond, !dbg !13829

for.cond:                                         ; preds = %for.inc, %do.end8
  %14 = load i32, i32* %i, align 4, !dbg !13830
  %15 = load i32, i32* %size, align 4, !dbg !13832
  %cmp = icmp ult i32 %14, %15, !dbg !13833
  br i1 %cmp, label %for.body, label %for.end, !dbg !13834

for.body:                                         ; preds = %for.cond
  br label %do.body10, !dbg !13835

do.body10:                                        ; preds = %for.body
  %16 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !13836
  %tobool11 = icmp ne i8 %16, 0, !dbg !13836
  br i1 %tobool11, label %if.then12, label %if.else29, !dbg !13839

if.then12:                                        ; preds = %do.body10
  br label %do.body13, !dbg !13836

do.body13:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i32* %__j14, metadata !13840, metadata !DIExpression()), !dbg !13842
  %17 = load i8*, i8** %p, align 8, !dbg !13842
  %18 = load i32, i32* %i, align 4, !dbg !13842
  %idxprom = zext i32 %18 to i64, !dbg !13842
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 %idxprom, !dbg !13842
  %19 = load i8, i8* %arrayidx, align 1, !dbg !13842
  %conv15 = zext i8 %19 to i32, !dbg !13842
  %call16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), i32 %conv15), !dbg !13842
  %mul17 = mul nsw i32 2, %call16, !dbg !13842
  %add18 = add nsw i32 1, %mul17, !dbg !13842
  store i32 %add18, i32* %__j14, align 4, !dbg !13842
  call void @llvm.dbg.declare(metadata i8** %__s19, metadata !13843, metadata !DIExpression()), !dbg !13842
  %20 = load i32, i32* %__j14, align 4, !dbg !13842
  %conv20 = sext i32 %20 to i64, !dbg !13842
  %mul21 = mul i64 1, %conv20, !dbg !13842
  %21 = alloca i8, i64 %mul21, align 16, !dbg !13842
  store i8* %21, i8** %__s19, align 8, !dbg !13842
  %22 = load i8*, i8** %__s19, align 8, !dbg !13842
  %23 = load i32, i32* %__j14, align 4, !dbg !13842
  %conv22 = sext i32 %23 to i64, !dbg !13842
  %24 = load i8*, i8** %p, align 8, !dbg !13842
  %25 = load i32, i32* %i, align 4, !dbg !13842
  %idxprom23 = zext i32 %25 to i64, !dbg !13842
  %arrayidx24 = getelementptr inbounds i8, i8* %24, i64 %idxprom23, !dbg !13842
  %26 = load i8, i8* %arrayidx24, align 1, !dbg !13842
  %conv25 = zext i8 %26 to i32, !dbg !13842
  %call26 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %22, i64 %conv22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), i32 %conv25), !dbg !13842
  %27 = load i8*, i8** %__s19, align 8, !dbg !13842
  call void @sel_prepare_string_for_dot_label(i8* %27), !dbg !13842
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13842
  %29 = load i8*, i8** %__s19, align 8, !dbg !13842
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %29), !dbg !13842
  br label %do.end28, !dbg !13842

do.end28:                                         ; preds = %do.body13
  br label %if.end34, !dbg !13842

if.else29:                                        ; preds = %do.body10
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13836
  %31 = load i8*, i8** %p, align 8, !dbg !13836
  %32 = load i32, i32* %i, align 4, !dbg !13836
  %idxprom30 = zext i32 %32 to i64, !dbg !13836
  %arrayidx31 = getelementptr inbounds i8, i8* %31, i64 %idxprom30, !dbg !13836
  %33 = load i8, i8* %arrayidx31, align 1, !dbg !13836
  %conv32 = zext i8 %33 to i32, !dbg !13836
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), i32 %conv32), !dbg !13836
  br label %if.end34

if.end34:                                         ; preds = %if.else29, %do.end28
  br label %do.end35, !dbg !13839

do.end35:                                         ; preds = %if.end34
  br label %for.inc, !dbg !13839

for.inc:                                          ; preds = %do.end35
  %34 = load i32, i32* %i, align 4, !dbg !13844
  %inc = add i32 %34, 1, !dbg !13844
  store i32 %inc, i32* %i, align 4, !dbg !13844
  br label %for.cond, !dbg !13845, !llvm.loop !13846

for.end:                                          ; preds = %for.cond
  br label %do.body36, !dbg !13848

do.body36:                                        ; preds = %for.end
  %35 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !13849
  %tobool37 = icmp ne i8 %35, 0, !dbg !13849
  br i1 %tobool37, label %if.then38, label %if.else51, !dbg !13852

if.then38:                                        ; preds = %do.body36
  br label %do.body39, !dbg !13849

do.body39:                                        ; preds = %if.then38
  call void @llvm.dbg.declare(metadata i32* %__j40, metadata !13853, metadata !DIExpression()), !dbg !13855
  %call41 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !13855
  %mul42 = mul nsw i32 2, %call41, !dbg !13855
  %add43 = add nsw i32 1, %mul42, !dbg !13855
  store i32 %add43, i32* %__j40, align 4, !dbg !13855
  call void @llvm.dbg.declare(metadata i8** %__s44, metadata !13856, metadata !DIExpression()), !dbg !13855
  %36 = load i32, i32* %__j40, align 4, !dbg !13855
  %conv45 = sext i32 %36 to i64, !dbg !13855
  %mul46 = mul i64 1, %conv45, !dbg !13855
  %37 = alloca i8, i64 %mul46, align 16, !dbg !13855
  store i8* %37, i8** %__s44, align 8, !dbg !13855
  %38 = load i8*, i8** %__s44, align 8, !dbg !13855
  %39 = load i32, i32* %__j40, align 4, !dbg !13855
  %conv47 = sext i32 %39 to i64, !dbg !13855
  %call48 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %38, i64 %conv47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !13855
  %40 = load i8*, i8** %__s44, align 8, !dbg !13855
  call void @sel_prepare_string_for_dot_label(i8* %40), !dbg !13855
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13855
  %42 = load i8*, i8** %__s44, align 8, !dbg !13855
  %call49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %42), !dbg !13855
  br label %do.end50, !dbg !13855

do.end50:                                         ; preds = %do.body39
  br label %if.end53, !dbg !13855

if.else51:                                        ; preds = %do.body36
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13849
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !13849
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %do.end50
  br label %do.end54, !dbg !13852

do.end54:                                         ; preds = %if.end53
  ret void, !dbg !13857
}

declare dso_local zeroext i8 @vinsn_cond_branch_p(%struct.vinsn_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @move_cond_jump(%struct.rtx_def* %insn, %struct._bnd* %bnd) #0 !dbg !13858 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %bnd.addr = alloca %struct._bnd*, align 8
  %ft_edge = alloca %struct.edge_def*, align 8
  %block_from = alloca %struct.basic_block_def*, align 8
  %block_next = alloca %struct.basic_block_def*, align 8
  %block_new = alloca %struct.basic_block_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %link = alloca %struct.rtx_def*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !13861, metadata !DIExpression()), !dbg !13862
  store %struct._bnd* %bnd, %struct._bnd** %bnd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._bnd** %bnd.addr, metadata !13863, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.declare(metadata %struct.edge_def** %ft_edge, metadata !13865, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %block_from, metadata !13867, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %block_next, metadata !13869, metadata !DIExpression()), !dbg !13870
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %block_new, metadata !13871, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !13873, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !13875, metadata !DIExpression()), !dbg !13876
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !13877, metadata !DIExpression()), !dbg !13878
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13879
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !13879
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13879
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !13879
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !13879
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !13879
  store %struct.basic_block_def* %1, %struct.basic_block_def** %block_from, align 8, !dbg !13880
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %block_from, align 8, !dbg !13881
  %3 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !13881
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %3, i32 0, i32 0, !dbg !13881
  %4 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !13881
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !13881
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !13881
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 3, !dbg !13881
  %rt_bb4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.basic_block_def**, !dbg !13881
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb4, align 8, !dbg !13881
  %cmp = icmp eq %struct.basic_block_def* %2, %5, !dbg !13881
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !13881

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4902, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13881
  br label %cond.end, !dbg !13881

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13881

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !13881
  %6 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !13882
  %to5 = getelementptr inbounds %struct._bnd, %struct._bnd* %6, i32 0, i32 0, !dbg !13882
  %7 = load %struct.rtx_def*, %struct.rtx_def** %to5, align 8, !dbg !13882
  store %struct.rtx_def* %7, %struct.rtx_def** %prev, align 8, !dbg !13883
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13884
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !13884
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !13884
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 1, !dbg !13884
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !13884
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13884
  store %struct.rtx_def* %9, %struct.rtx_def** %next, align 8, !dbg !13885
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13886
  %11 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !13887
  %to9 = getelementptr inbounds %struct._bnd, %struct._bnd* %11, i32 0, i32 0, !dbg !13887
  store %struct.rtx_def* %10, %struct.rtx_def** %to9, align 8, !dbg !13888
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %block_from, align 8, !dbg !13889
  %call = call %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def* %12), !dbg !13890
  store %struct.edge_def* %call, %struct.edge_def** %ft_edge, align 8, !dbg !13891
  %13 = load %struct.edge_def*, %struct.edge_def** %ft_edge, align 8, !dbg !13892
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i32 0, i32 1, !dbg !13893
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !13893
  store %struct.basic_block_def* %14, %struct.basic_block_def** %block_next, align 8, !dbg !13894
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %block_next, align 8, !dbg !13895
  %tobool = icmp ne %struct.basic_block_def* %15, null, !dbg !13895
  br i1 %tobool, label %cond.false11, label %cond.true10, !dbg !13895

cond.true10:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4913, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13895
  br label %cond.end12, !dbg !13895

cond.false11:                                     ; preds = %cond.end
  br label %cond.end12, !dbg !13895

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond13 = phi i32 [ 0, %cond.true10 ], [ 0, %cond.false11 ], !dbg !13895
  %16 = load %struct.edge_def*, %struct.edge_def** %ft_edge, align 8, !dbg !13896
  %call14 = call %struct.basic_block_def* @sel_split_edge(%struct.edge_def* %16), !dbg !13897
  store %struct.basic_block_def* %call14, %struct.basic_block_def** %block_new, align 8, !dbg !13898
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13899
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i32 0, i32 6, !dbg !13899
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !13899
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %block_next, align 8, !dbg !13899
  %cmp15 = icmp eq %struct.basic_block_def* %18, %19, !dbg !13899
  br i1 %cmp15, label %land.lhs.true, label %cond.true18, !dbg !13899

land.lhs.true:                                    ; preds = %cond.end12
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %block_from, align 8, !dbg !13899
  %next_bb16 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 6, !dbg !13899
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb16, align 8, !dbg !13899
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13899
  %cmp17 = icmp eq %struct.basic_block_def* %21, %22, !dbg !13899
  br i1 %cmp17, label %cond.false19, label %cond.true18, !dbg !13899

cond.true18:                                      ; preds = %land.lhs.true, %cond.end12
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13899
  br label %cond.end20, !dbg !13899

cond.false19:                                     ; preds = %land.lhs.true
  br label %cond.end20, !dbg !13899

cond.end20:                                       ; preds = %cond.false19, %cond.true18
  %cond21 = phi i32 [ 0, %cond.true18 ], [ 0, %cond.false19 ], !dbg !13899
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %block_from, align 8, !dbg !13900
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i32 0, i32 7, !dbg !13900
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !13900
  %24 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !13900
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %24, i32 0, i32 1, !dbg !13900
  %25 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !13900
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13900
  %cmp22 = icmp eq %struct.rtx_def* %25, %26, !dbg !13900
  br i1 %cmp22, label %cond.false24, label %cond.true23, !dbg !13900

cond.true23:                                      ; preds = %cond.end20
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4920, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13900
  br label %cond.end25, !dbg !13900

cond.false24:                                     ; preds = %cond.end20
  br label %cond.end25, !dbg !13900

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i32 [ 0, %cond.true23 ], [ 0, %cond.false24 ], !dbg !13900
  %27 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !13901
  store %struct.rtx_def* %27, %struct.rtx_def** %link, align 8, !dbg !13903
  br label %for.cond, !dbg !13904

for.cond:                                         ; preds = %for.inc, %cond.end25
  %28 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !13905
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13907
  %cmp27 = icmp ne %struct.rtx_def* %28, %29, !dbg !13908
  br i1 %cmp27, label %for.body, label %for.end, !dbg !13909

for.body:                                         ; preds = %for.cond
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13910
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i32 0, i32 9, !dbg !13912
  %31 = load i32, i32* %index, align 8, !dbg !13912
  %32 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13913
  %tobool28 = icmp ne %struct.VEC_sel_insn_data_def_heap* %32, null, !dbg !13913
  br i1 %tobool28, label %cond.true29, label %cond.false30, !dbg !13913

cond.true29:                                      ; preds = %for.body
  %33 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !13913
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %33, i32 0, i32 0, !dbg !13913
  br label %cond.end31, !dbg !13913

cond.false30:                                     ; preds = %for.body
  br label %cond.end31, !dbg !13913

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond32 = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true29 ], [ null, %cond.false30 ], !dbg !13913
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13913
  %tobool33 = icmp ne %struct.VEC_int_heap* %34, null, !dbg !13913
  br i1 %tobool33, label %cond.true34, label %cond.false36, !dbg !13913

cond.true34:                                      ; preds = %cond.end31
  %35 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !13913
  %base35 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %35, i32 0, i32 0, !dbg !13913
  br label %cond.end37, !dbg !13913

cond.false36:                                     ; preds = %cond.end31
  br label %cond.end37, !dbg !13913

cond.end37:                                       ; preds = %cond.false36, %cond.true34
  %cond38 = phi %struct.VEC_int_base* [ %base35, %cond.true34 ], [ null, %cond.false36 ], !dbg !13913
  %36 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !13913
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !13913
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !13913
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 0, !dbg !13913
  %rt_int = bitcast %union.rtunion_def* %arrayidx41 to i32*, !dbg !13913
  %37 = load i32, i32* %rt_int, align 8, !dbg !13913
  %call42 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond38, i32 %37), !dbg !13913
  %call43 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond32, i32 %call42), !dbg !13913
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call43, i32 0, i32 0, !dbg !13913
  %orig_bb_index = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 6, !dbg !13913
  store i32 %31, i32* %orig_bb_index, align 4, !dbg !13914
  %38 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !13915
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13916
  call void @df_insn_change_bb(%struct.rtx_def* %38, %struct.basic_block_def* %39), !dbg !13917
  br label %for.inc, !dbg !13918

for.inc:                                          ; preds = %cond.end37
  %40 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !13919
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !13919
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !13919
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 2, !dbg !13919
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !13919
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !13919
  store %struct.rtx_def* %41, %struct.rtx_def** %link, align 8, !dbg !13920
  br label %for.cond, !dbg !13921, !llvm.loop !13922

for.end:                                          ; preds = %for.cond
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13924
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !13924
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !13924
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 1, !dbg !13924
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !13924
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !13924
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13925
  %il52 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %44, i32 0, i32 7, !dbg !13925
  %rtl53 = bitcast %union.basic_block_il_dependent* %il52 to %struct.rtl_bb_info**, !dbg !13925
  %45 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl53, align 8, !dbg !13925
  %end_54 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %45, i32 0, i32 1, !dbg !13925
  store %struct.rtx_def* %43, %struct.rtx_def** %end_54, align 8, !dbg !13926
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13927
  %47 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !13928
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !13928
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !13928
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 1, !dbg !13928
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !13928
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !13928
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !13928
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !13928
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 2, !dbg !13928
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !13928
  store %struct.rtx_def* %46, %struct.rtx_def** %rt_rtx62, align 8, !dbg !13929
  %49 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !13930
  %u63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !13930
  %fld64 = bitcast %union.u* %u63 to [1 x %union.rtunion_def]*, !dbg !13930
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i64 0, i64 1, !dbg !13930
  %rt_rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**, !dbg !13930
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx66, align 8, !dbg !13930
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13931
  %u67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !13931
  %fld68 = bitcast %union.u* %u67 to [1 x %union.rtunion_def]*, !dbg !13931
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i64 0, i64 1, !dbg !13931
  %rt_rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**, !dbg !13931
  store %struct.rtx_def* %50, %struct.rtx_def** %rt_rtx70, align 8, !dbg !13932
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13933
  %il71 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %52, i32 0, i32 7, !dbg !13933
  %rtl72 = bitcast %union.basic_block_il_dependent* %il71 to %struct.rtl_bb_info**, !dbg !13933
  %53 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl72, align 8, !dbg !13933
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %53, i32 0, i32 0, !dbg !13933
  %54 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !13933
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !13933
  %bf.load = load i32, i32* %55, align 8, !dbg !13933
  %bf.clear = and i32 %bf.load, 65535, !dbg !13933
  %cmp73 = icmp eq i32 %bf.clear, 13, !dbg !13933
  br i1 %cmp73, label %land.lhs.true74, label %cond.true83, !dbg !13933

land.lhs.true74:                                  ; preds = %for.end
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13933
  %il75 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %56, i32 0, i32 7, !dbg !13933
  %rtl76 = bitcast %union.basic_block_il_dependent* %il75 to %struct.rtl_bb_info**, !dbg !13933
  %57 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl76, align 8, !dbg !13933
  %head_77 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %57, i32 0, i32 0, !dbg !13933
  %58 = load %struct.rtx_def*, %struct.rtx_def** %head_77, align 8, !dbg !13933
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !13933
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !13933
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 5, !dbg !13933
  %rt_int81 = bitcast %union.rtunion_def* %arrayidx80 to i32*, !dbg !13933
  %59 = load i32, i32* %rt_int81, align 8, !dbg !13933
  %cmp82 = icmp eq i32 %59, 10, !dbg !13933
  br i1 %cmp82, label %cond.false84, label %cond.true83, !dbg !13933

cond.true83:                                      ; preds = %land.lhs.true74, %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4937, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13933
  br label %cond.end85, !dbg !13933

cond.false84:                                     ; preds = %land.lhs.true74
  br label %cond.end85, !dbg !13933

cond.end85:                                       ; preds = %cond.false84, %cond.true83
  %cond86 = phi i32 [ 0, %cond.true83 ], [ 0, %cond.false84 ], !dbg !13933
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13934
  %il87 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %60, i32 0, i32 7, !dbg !13934
  %rtl88 = bitcast %union.basic_block_il_dependent* %il87 to %struct.rtl_bb_info**, !dbg !13934
  %61 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl88, align 8, !dbg !13934
  %head_89 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %61, i32 0, i32 0, !dbg !13934
  %62 = load %struct.rtx_def*, %struct.rtx_def** %head_89, align 8, !dbg !13934
  %63 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !13935
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !13935
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !13935
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 1, !dbg !13935
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !13935
  store %struct.rtx_def* %62, %struct.rtx_def** %rt_rtx93, align 8, !dbg !13936
  %64 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13937
  %il94 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %64, i32 0, i32 7, !dbg !13937
  %rtl95 = bitcast %union.basic_block_il_dependent* %il94 to %struct.rtl_bb_info**, !dbg !13937
  %65 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl95, align 8, !dbg !13937
  %head_96 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %65, i32 0, i32 0, !dbg !13937
  %66 = load %struct.rtx_def*, %struct.rtx_def** %head_96, align 8, !dbg !13937
  %u97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !13937
  %fld98 = bitcast %union.u* %u97 to [1 x %union.rtunion_def]*, !dbg !13937
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i64 0, i64 2, !dbg !13937
  %rt_rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**, !dbg !13937
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx100, align 8, !dbg !13937
  %68 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !13938
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !13938
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !13938
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 2, !dbg !13938
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !13938
  store %struct.rtx_def* %67, %struct.rtx_def** %rt_rtx104, align 8, !dbg !13939
  %69 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !13940
  %70 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13941
  %il105 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %70, i32 0, i32 7, !dbg !13941
  %rtl106 = bitcast %union.basic_block_il_dependent* %il105 to %struct.rtl_bb_info**, !dbg !13941
  %71 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl106, align 8, !dbg !13941
  %head_107 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %71, i32 0, i32 0, !dbg !13941
  %72 = load %struct.rtx_def*, %struct.rtx_def** %head_107, align 8, !dbg !13941
  %u108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !13941
  %fld109 = bitcast %union.u* %u108 to [1 x %union.rtunion_def]*, !dbg !13941
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i64 0, i64 2, !dbg !13941
  %rt_rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**, !dbg !13941
  store %struct.rtx_def* %69, %struct.rtx_def** %rt_rtx111, align 8, !dbg !13942
  %73 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !13943
  %74 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !13944
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1, !dbg !13944
  %fld113 = bitcast %union.u* %u112 to [1 x %union.rtunion_def]*, !dbg !13944
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i64 0, i64 2, !dbg !13944
  %rt_rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**, !dbg !13944
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx115, align 8, !dbg !13944
  %u116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !13944
  %fld117 = bitcast %union.u* %u116 to [1 x %union.rtunion_def]*, !dbg !13944
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i64 0, i64 1, !dbg !13944
  %rt_rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**, !dbg !13944
  store %struct.rtx_def* %73, %struct.rtx_def** %rt_rtx119, align 8, !dbg !13945
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** %block_from, align 8, !dbg !13946
  %call120 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %76), !dbg !13946
  %tobool121 = icmp ne i8 %call120, 0, !dbg !13946
  br i1 %tobool121, label %cond.true125, label %land.lhs.true122, !dbg !13946

land.lhs.true122:                                 ; preds = %cond.end85
  %77 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13946
  %call123 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %77), !dbg !13946
  %tobool124 = icmp ne i8 %call123, 0, !dbg !13946
  br i1 %tobool124, label %cond.true125, label %cond.false126, !dbg !13946

cond.true125:                                     ; preds = %land.lhs.true122, %cond.end85
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4944, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13946
  br label %cond.end127, !dbg !13946

cond.false126:                                    ; preds = %land.lhs.true122
  br label %cond.end127, !dbg !13946

cond.end127:                                      ; preds = %cond.false126, %cond.true125
  %cond128 = phi i32 [ 0, %cond.true125 ], [ 0, %cond.false126 ], !dbg !13946
  %78 = load i32, i32* @global_level, align 4, !dbg !13947
  %79 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !13948
  %tobool129 = icmp ne %struct.VEC_sel_region_bb_info_def_heap* %79, null, !dbg !13948
  br i1 %tobool129, label %cond.true130, label %cond.false132, !dbg !13948

cond.true130:                                     ; preds = %cond.end127
  %80 = load %struct.VEC_sel_region_bb_info_def_heap*, %struct.VEC_sel_region_bb_info_def_heap** @sel_region_bb_info, align 8, !dbg !13948
  %base131 = getelementptr inbounds %struct.VEC_sel_region_bb_info_def_heap, %struct.VEC_sel_region_bb_info_def_heap* %80, i32 0, i32 0, !dbg !13948
  br label %cond.end133, !dbg !13948

cond.false132:                                    ; preds = %cond.end127
  br label %cond.end133, !dbg !13948

cond.end133:                                      ; preds = %cond.false132, %cond.true130
  %cond134 = phi %struct.VEC_sel_region_bb_info_def_base* [ %base131, %cond.true130 ], [ null, %cond.false132 ], !dbg !13948
  %81 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13948
  %index135 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %81, i32 0, i32 9, !dbg !13948
  %82 = load i32, i32* %index135, align 8, !dbg !13948
  %call136 = call %struct.sel_region_bb_info_def* @VEC_sel_region_bb_info_def_base_index(%struct.VEC_sel_region_bb_info_def_base* %cond134, i32 %82), !dbg !13948
  %av_level = getelementptr inbounds %struct.sel_region_bb_info_def, %struct.sel_region_bb_info_def* %call136, i32 0, i32 2, !dbg !13948
  store i32 %78, i32* %av_level, align 8, !dbg !13949
  %83 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !13950
  %tobool137 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %83, null, !dbg !13950
  br i1 %tobool137, label %cond.true138, label %cond.false140, !dbg !13950

cond.true138:                                     ; preds = %cond.end133
  %84 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !13950
  %base139 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %84, i32 0, i32 0, !dbg !13950
  br label %cond.end141, !dbg !13950

cond.false140:                                    ; preds = %cond.end133
  br label %cond.end141, !dbg !13950

cond.end141:                                      ; preds = %cond.false140, %cond.true138
  %cond142 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base139, %cond.true138 ], [ null, %cond.false140 ], !dbg !13950
  %85 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13950
  %index143 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %85, i32 0, i32 9, !dbg !13950
  %86 = load i32, i32* %index143, align 8, !dbg !13950
  %call144 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond142, i32 %86), !dbg !13950
  %lv_set = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call144, i32 0, i32 0, !dbg !13950
  %87 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %lv_set, align 8, !dbg !13950
  %cmp145 = icmp eq %struct.bitmap_head_def* %87, null, !dbg !13950
  br i1 %cmp145, label %cond.false147, label %cond.true146, !dbg !13950

cond.true146:                                     ; preds = %cond.end141
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4950, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !13950
  br label %cond.end148, !dbg !13950

cond.false147:                                    ; preds = %cond.end141
  br label %cond.end148, !dbg !13950

cond.end148:                                      ; preds = %cond.false147, %cond.true146
  %cond149 = phi i32 [ 0, %cond.true146 ], [ 0, %cond.false147 ], !dbg !13950
  %call150 = call %struct.bitmap_head_def* @get_clear_regset_from_pool(), !dbg !13951
  %88 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !13952
  %tobool151 = icmp ne %struct.VEC_sel_global_bb_info_def_heap* %88, null, !dbg !13952
  br i1 %tobool151, label %cond.true152, label %cond.false154, !dbg !13952

cond.true152:                                     ; preds = %cond.end148
  %89 = load %struct.VEC_sel_global_bb_info_def_heap*, %struct.VEC_sel_global_bb_info_def_heap** @sel_global_bb_info, align 8, !dbg !13952
  %base153 = getelementptr inbounds %struct.VEC_sel_global_bb_info_def_heap, %struct.VEC_sel_global_bb_info_def_heap* %89, i32 0, i32 0, !dbg !13952
  br label %cond.end155, !dbg !13952

cond.false154:                                    ; preds = %cond.end148
  br label %cond.end155, !dbg !13952

cond.end155:                                      ; preds = %cond.false154, %cond.true152
  %cond156 = phi %struct.VEC_sel_global_bb_info_def_base* [ %base153, %cond.true152 ], [ null, %cond.false154 ], !dbg !13952
  %90 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13952
  %index157 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %90, i32 0, i32 9, !dbg !13952
  %91 = load i32, i32* %index157, align 8, !dbg !13952
  %call158 = call %struct.sel_global_bb_info_def* @VEC_sel_global_bb_info_def_base_index(%struct.VEC_sel_global_bb_info_def_base* %cond156, i32 %91), !dbg !13952
  %lv_set159 = getelementptr inbounds %struct.sel_global_bb_info_def, %struct.sel_global_bb_info_def* %call158, i32 0, i32 0, !dbg !13952
  store %struct.bitmap_head_def* %call150, %struct.bitmap_head_def** %lv_set159, align 8, !dbg !13953
  %92 = load %struct.basic_block_def*, %struct.basic_block_def** %block_new, align 8, !dbg !13954
  %call160 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %92), !dbg !13955
  call void @update_data_sets(%struct.rtx_def* %call160), !dbg !13956
  %93 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13957
  call void @update_data_sets(%struct.rtx_def* %93), !dbg !13958
  %94 = load i32, i32* @sched_verbose, align 4, !dbg !13959
  %cmp161 = icmp sge i32 %94, 4, !dbg !13961
  br i1 %cmp161, label %if.then, label %if.end184, !dbg !13962

if.then:                                          ; preds = %cond.end155
  br label %do.body, !dbg !13963

do.body:                                          ; preds = %if.then
  %95 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !13964
  %tobool162 = icmp ne i8 %95, 0, !dbg !13964
  br i1 %tobool162, label %if.then163, label %if.else, !dbg !13967

if.then163:                                       ; preds = %do.body
  br label %do.body164, !dbg !13964

do.body164:                                       ; preds = %if.then163
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !13968, metadata !DIExpression()), !dbg !13970
  %96 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13970
  %u165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !13970
  %fld166 = bitcast %union.u* %u165 to [1 x %union.rtunion_def]*, !dbg !13970
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i64 0, i64 0, !dbg !13970
  %rt_int168 = bitcast %union.rtunion_def* %arrayidx167 to i32*, !dbg !13970
  %97 = load i32, i32* %rt_int168, align 8, !dbg !13970
  %call169 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i64 0, i64 0), i32 %97), !dbg !13970
  %mul = mul nsw i32 2, %call169, !dbg !13970
  %add = add nsw i32 1, %mul, !dbg !13970
  store i32 %add, i32* %__j, align 4, !dbg !13970
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !13971, metadata !DIExpression()), !dbg !13970
  %98 = load i32, i32* %__j, align 4, !dbg !13970
  %conv = sext i32 %98 to i64, !dbg !13970
  %mul170 = mul i64 1, %conv, !dbg !13970
  %99 = alloca i8, i64 %mul170, align 16, !dbg !13970
  store i8* %99, i8** %__s, align 8, !dbg !13970
  %100 = load i8*, i8** %__s, align 8, !dbg !13970
  %101 = load i32, i32* %__j, align 4, !dbg !13970
  %conv171 = sext i32 %101 to i64, !dbg !13970
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13970
  %u172 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !13970
  %fld173 = bitcast %union.u* %u172 to [1 x %union.rtunion_def]*, !dbg !13970
  %arrayidx174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld173, i64 0, i64 0, !dbg !13970
  %rt_int175 = bitcast %union.rtunion_def* %arrayidx174 to i32*, !dbg !13970
  %103 = load i32, i32* %rt_int175, align 8, !dbg !13970
  %call176 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %100, i64 %conv171, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i64 0, i64 0), i32 %103), !dbg !13970
  %104 = load i8*, i8** %__s, align 8, !dbg !13970
  call void @sel_prepare_string_for_dot_label(i8* %104), !dbg !13970
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13970
  %106 = load i8*, i8** %__s, align 8, !dbg !13970
  %call177 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %105, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %106), !dbg !13970
  br label %do.end, !dbg !13970

do.end:                                           ; preds = %do.body164
  br label %if.end, !dbg !13970

if.else:                                          ; preds = %do.body
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !13964
  %108 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13964
  %u178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1, !dbg !13964
  %fld179 = bitcast %union.u* %u178 to [1 x %union.rtunion_def]*, !dbg !13964
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i64 0, i64 0, !dbg !13964
  %rt_int181 = bitcast %union.rtunion_def* %arrayidx180 to i32*, !dbg !13964
  %109 = load i32, i32* %rt_int181, align 8, !dbg !13964
  %call182 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i64 0, i64 0), i32 %109), !dbg !13964
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end183, !dbg !13967

do.end183:                                        ; preds = %if.end
  br label %if.end184, !dbg !13967

if.end184:                                        ; preds = %do.end183, %cond.end155
  ret void, !dbg !13972
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @prepare_place_to_insert(%struct._bnd* %bnd) #0 !dbg !13973 {
entry:
  %bnd.addr = alloca %struct._bnd*, align 8
  %place_to_insert = alloca %struct.rtx_def*, align 8
  %l = alloca %struct._list_node*, align 8
  store %struct._bnd* %bnd, %struct._bnd** %bnd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._bnd** %bnd.addr, metadata !13976, metadata !DIExpression()), !dbg !13977
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %place_to_insert, metadata !13978, metadata !DIExpression()), !dbg !13979
  %0 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !13980
  %ptr = getelementptr inbounds %struct._bnd, %struct._bnd* %0, i32 0, i32 1, !dbg !13980
  %1 = load %struct._list_node*, %struct._list_node** %ptr, align 8, !dbg !13980
  %tobool = icmp ne %struct._list_node* %1, null, !dbg !13980
  br i1 %tobool, label %if.then, label %if.else, !dbg !13982

if.then:                                          ; preds = %entry
  %2 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !13983
  %ptr1 = getelementptr inbounds %struct._bnd, %struct._bnd* %2, i32 0, i32 1, !dbg !13983
  %3 = load %struct._list_node*, %struct._list_node** %ptr1, align 8, !dbg !13983
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %3, i32 0, i32 1, !dbg !13983
  %x = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !13983
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !13983
  store %struct.rtx_def* %4, %struct.rtx_def** %place_to_insert, align 8, !dbg !13985
  %5 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !13986
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !13986
  %bf.load = load i32, i32* %6, align 8, !dbg !13986
  %bf.clear = and i32 %bf.load, 65535, !dbg !13986
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !13986
  br i1 %cmp, label %if.then2, label %if.end12, !dbg !13988

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct._list_node** %l, metadata !13989, metadata !DIExpression()), !dbg !13991
  %7 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !13992
  %ptr3 = getelementptr inbounds %struct._bnd, %struct._bnd* %7, i32 0, i32 1, !dbg !13992
  %8 = load %struct._list_node*, %struct._list_node** %ptr3, align 8, !dbg !13992
  store %struct._list_node* %8, %struct._list_node** %l, align 8, !dbg !13991
  br label %while.cond, !dbg !13993

while.cond:                                       ; preds = %while.body, %if.then2
  %9 = load %struct._list_node*, %struct._list_node** %l, align 8, !dbg !13994
  %next = getelementptr inbounds %struct._list_node, %struct._list_node* %9, i32 0, i32 0, !dbg !13994
  %10 = load %struct._list_node*, %struct._list_node** %next, align 8, !dbg !13994
  store %struct._list_node* %10, %struct._list_node** %l, align 8, !dbg !13995
  %tobool4 = icmp ne %struct._list_node* %10, null, !dbg !13995
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !13996

land.rhs:                                         ; preds = %while.cond
  %11 = load %struct._list_node*, %struct._list_node** %l, align 8, !dbg !13997
  %u5 = getelementptr inbounds %struct._list_node, %struct._list_node* %11, i32 0, i32 1, !dbg !13997
  %x6 = bitcast %union.anon.0* %u5 to %struct.rtx_def**, !dbg !13997
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x6, align 8, !dbg !13997
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !13997
  %bf.load7 = load i32, i32* %13, align 8, !dbg !13997
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !13997
  %cmp9 = icmp eq i32 %bf.clear8, 7, !dbg !13997
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %cmp9, %land.rhs ], !dbg !13998
  br i1 %14, label %while.body, label %while.end, !dbg !13993

while.body:                                       ; preds = %land.end
  br label %while.cond, !dbg !13993, !llvm.loop !13999

while.end:                                        ; preds = %land.end
  %15 = load %struct._list_node*, %struct._list_node** %l, align 8, !dbg !14001
  %tobool10 = icmp ne %struct._list_node* %15, null, !dbg !14001
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !14003

if.then11:                                        ; preds = %while.end
  store %struct.rtx_def* null, %struct.rtx_def** %place_to_insert, align 8, !dbg !14004
  br label %if.end, !dbg !14005

if.end:                                           ; preds = %if.then11, %while.end
  br label %if.end12, !dbg !14006

if.end12:                                         ; preds = %if.end, %if.then
  br label %if.end13, !dbg !14007

if.else:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %place_to_insert, align 8, !dbg !14008
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end12
  %16 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !14009
  %tobool14 = icmp ne %struct.rtx_def* %16, null, !dbg !14009
  br i1 %tobool14, label %if.end23, label %if.then15, !dbg !14011

if.then15:                                        ; preds = %if.end13
  %17 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !14012
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %17, i32 0, i32 0, !dbg !14012
  %18 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !14012
  %call = call %struct.rtx_def* @get_nop_from_pool(%struct.rtx_def* %18), !dbg !14014
  store %struct.rtx_def* %call, %struct.rtx_def** %place_to_insert, align 8, !dbg !14015
  %19 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !14016
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !14016
  %fld = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !14016
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !14016
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !14016
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !14016
  %21 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !14016
  %to17 = getelementptr inbounds %struct._bnd, %struct._bnd* %21, i32 0, i32 0, !dbg !14016
  %22 = load %struct.rtx_def*, %struct.rtx_def** %to17, align 8, !dbg !14016
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !14016
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !14016
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 3, !dbg !14016
  %rt_bb21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.basic_block_def**, !dbg !14016
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb21, align 8, !dbg !14016
  %cmp22 = icmp eq %struct.basic_block_def* %20, %23, !dbg !14016
  br i1 %cmp22, label %cond.false, label %cond.true, !dbg !14016

cond.true:                                        ; preds = %if.then15
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !14016
  br label %cond.end, !dbg !14016

cond.false:                                       ; preds = %if.then15
  br label %cond.end, !dbg !14016

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !14016
  br label %if.end23, !dbg !14017

if.end23:                                         ; preds = %cond.end, %if.end13
  %24 = load %struct.rtx_def*, %struct.rtx_def** %place_to_insert, align 8, !dbg !14018
  ret %struct.rtx_def* %24, !dbg !14019
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @move_exprs_to_boundary(%struct._bnd* %bnd, %struct._expr* %expr_vliw, %struct._list_node* %expr_seq, %struct._expr* %c_expr) #0 !dbg !14020 {
entry:
  %bnd.addr = alloca %struct._bnd*, align 8
  %expr_vliw.addr = alloca %struct._expr*, align 8
  %expr_seq.addr = alloca %struct._list_node*, align 8
  %c_expr.addr = alloca %struct._expr*, align 8
  %b = alloca i8, align 1
  %should_move = alloca i8, align 1
  %book_uid = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %n_bookkeeping_copies_before_moveop = alloca i32, align 4
  %uid = alloca i32, align 4
  %bi5 = alloca %struct.bitmap_iterator, align 8
  store %struct._bnd* %bnd, %struct._bnd** %bnd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._bnd** %bnd.addr, metadata !14023, metadata !DIExpression()), !dbg !14024
  store %struct._expr* %expr_vliw, %struct._expr** %expr_vliw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr_vliw.addr, metadata !14025, metadata !DIExpression()), !dbg !14026
  store %struct._list_node* %expr_seq, %struct._list_node** %expr_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %expr_seq.addr, metadata !14027, metadata !DIExpression()), !dbg !14028
  store %struct._expr* %c_expr, %struct._expr** %c_expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %c_expr.addr, metadata !14029, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.declare(metadata i8* %b, metadata !14031, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.declare(metadata i8* %should_move, metadata !14033, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.declare(metadata i32* %book_uid, metadata !14035, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !14037, metadata !DIExpression()), !dbg !14038
  call void @llvm.dbg.declare(metadata i32* %n_bookkeeping_copies_before_moveop, metadata !14039, metadata !DIExpression()), !dbg !14040
  %0 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !14041
  store i32 %0, i32* %n_bookkeeping_copies_before_moveop, align 4, !dbg !14042
  %call = call i32 @get_max_uid(), !dbg !14043
  store i32 %call, i32* @max_uid_before_move_op, align 4, !dbg !14044
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !14045
  call void @bitmap_clear(%struct.bitmap_head_def* %1), !dbg !14046
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_originators, align 8, !dbg !14047
  call void @bitmap_clear(%struct.bitmap_head_def* %2), !dbg !14048
  %3 = load %struct._bnd*, %struct._bnd** %bnd.addr, align 8, !dbg !14049
  %to = getelementptr inbounds %struct._bnd, %struct._bnd* %3, i32 0, i32 0, !dbg !14049
  %4 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !14049
  %5 = load %struct._list_node*, %struct._list_node** %expr_seq.addr, align 8, !dbg !14050
  %6 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !14051
  %7 = load %struct._list_node*, %struct._list_node** %expr_seq.addr, align 8, !dbg !14052
  %call1 = call %struct.rtx_def* @get_dest_from_orig_ops(%struct._list_node* %7), !dbg !14053
  %8 = load %struct._expr*, %struct._expr** %c_expr.addr, align 8, !dbg !14054
  %call2 = call zeroext i8 @move_op(%struct.rtx_def* %4, %struct._list_node* %5, %struct._expr* %6, %struct.rtx_def* %call1, %struct._expr* %8, i8* %should_move), !dbg !14055
  store i8 %call2, i8* %b, align 1, !dbg !14056
  %9 = load i8, i8* %b, align 1, !dbg !14057
  %tobool = icmp ne i8 %9, 0, !dbg !14057
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !14057

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !14057
  br label %cond.end, !dbg !14057

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14057

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !14057
  %10 = load i32, i32* @stat_bookkeeping_copies, align 4, !dbg !14058
  %11 = load i32, i32* %n_bookkeeping_copies_before_moveop, align 4, !dbg !14060
  %cmp = icmp sgt i32 %10, %11, !dbg !14061
  br i1 %cmp, label %if.then, label %if.end, !dbg !14062

if.then:                                          ; preds = %cond.end
  %12 = load i32, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !14063
  %inc = add nsw i32 %12, 1, !dbg !14063
  store i32 %inc, i32* @stat_insns_needed_bookkeeping, align 4, !dbg !14063
  br label %if.end, !dbg !14064

if.end:                                           ; preds = %if.then, %cond.end
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_copies, align 8, !dbg !14065
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %13, i32 0, i32* %book_uid), !dbg !14065
  br label %for.cond, !dbg !14065

for.cond:                                         ; preds = %for.inc106, %if.end
  %call3 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %book_uid), !dbg !14067
  %tobool4 = icmp ne i8 %call3, 0, !dbg !14065
  br i1 %tobool4, label %for.body, label %for.end107, !dbg !14065

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !14069, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi5, metadata !14072, metadata !DIExpression()), !dbg !14073
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14074
  %tobool6 = icmp ne %struct.VEC_sel_insn_data_def_heap* %14, null, !dbg !14074
  br i1 %tobool6, label %cond.true7, label %cond.false8, !dbg !14074

cond.true7:                                       ; preds = %for.body
  %15 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14074
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %15, i32 0, i32 0, !dbg !14074
  br label %cond.end9, !dbg !14074

cond.false8:                                      ; preds = %for.body
  br label %cond.end9, !dbg !14074

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true7 ], [ null, %cond.false8 ], !dbg !14074
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14074
  %tobool11 = icmp ne %struct.VEC_int_heap* %16, null, !dbg !14074
  br i1 %tobool11, label %cond.true12, label %cond.false14, !dbg !14074

cond.true12:                                      ; preds = %cond.end9
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14074
  %base13 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %17, i32 0, i32 0, !dbg !14074
  br label %cond.end15, !dbg !14074

cond.false14:                                     ; preds = %cond.end9
  br label %cond.end15, !dbg !14074

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi %struct.VEC_int_base* [ %base13, %cond.true12 ], [ null, %cond.false14 ], !dbg !14074
  %18 = load i32, i32* %book_uid, align 4, !dbg !14074
  %call17 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond16, i32 %18), !dbg !14074
  %call18 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond10, i32 %call17), !dbg !14074
  %originators = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call18, i32 0, i32 6, !dbg !14074
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators, align 8, !dbg !14074
  %tobool19 = icmp ne %struct.bitmap_head_def* %19, null, !dbg !14074
  br i1 %tobool19, label %if.end37, label %if.then20, !dbg !14076

if.then20:                                        ; preds = %cond.end15
  %call21 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !14077
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14078
  %tobool22 = icmp ne %struct.VEC_sel_insn_data_def_heap* %20, null, !dbg !14078
  br i1 %tobool22, label %cond.true23, label %cond.false25, !dbg !14078

cond.true23:                                      ; preds = %if.then20
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14078
  %base24 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i32 0, i32 0, !dbg !14078
  br label %cond.end26, !dbg !14078

cond.false25:                                     ; preds = %if.then20
  br label %cond.end26, !dbg !14078

cond.end26:                                       ; preds = %cond.false25, %cond.true23
  %cond27 = phi %struct.VEC_sel_insn_data_def_base* [ %base24, %cond.true23 ], [ null, %cond.false25 ], !dbg !14078
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14078
  %tobool28 = icmp ne %struct.VEC_int_heap* %22, null, !dbg !14078
  br i1 %tobool28, label %cond.true29, label %cond.false31, !dbg !14078

cond.true29:                                      ; preds = %cond.end26
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14078
  %base30 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i32 0, i32 0, !dbg !14078
  br label %cond.end32, !dbg !14078

cond.false31:                                     ; preds = %cond.end26
  br label %cond.end32, !dbg !14078

cond.end32:                                       ; preds = %cond.false31, %cond.true29
  %cond33 = phi %struct.VEC_int_base* [ %base30, %cond.true29 ], [ null, %cond.false31 ], !dbg !14078
  %24 = load i32, i32* %book_uid, align 4, !dbg !14078
  %call34 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond33, i32 %24), !dbg !14078
  %call35 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond27, i32 %call34), !dbg !14078
  %originators36 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call35, i32 0, i32 6, !dbg !14078
  store %struct.bitmap_head_def* %call21, %struct.bitmap_head_def** %originators36, align 8, !dbg !14079
  br label %if.end37, !dbg !14078

if.end37:                                         ; preds = %cond.end32, %cond.end15
  %25 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14080
  %tobool38 = icmp ne %struct.VEC_sel_insn_data_def_heap* %25, null, !dbg !14080
  br i1 %tobool38, label %cond.true39, label %cond.false41, !dbg !14080

cond.true39:                                      ; preds = %if.end37
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14080
  %base40 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %26, i32 0, i32 0, !dbg !14080
  br label %cond.end42, !dbg !14080

cond.false41:                                     ; preds = %if.end37
  br label %cond.end42, !dbg !14080

cond.end42:                                       ; preds = %cond.false41, %cond.true39
  %cond43 = phi %struct.VEC_sel_insn_data_def_base* [ %base40, %cond.true39 ], [ null, %cond.false41 ], !dbg !14080
  %27 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14080
  %tobool44 = icmp ne %struct.VEC_int_heap* %27, null, !dbg !14080
  br i1 %tobool44, label %cond.true45, label %cond.false47, !dbg !14080

cond.true45:                                      ; preds = %cond.end42
  %28 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14080
  %base46 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %28, i32 0, i32 0, !dbg !14080
  br label %cond.end48, !dbg !14080

cond.false47:                                     ; preds = %cond.end42
  br label %cond.end48, !dbg !14080

cond.end48:                                       ; preds = %cond.false47, %cond.true45
  %cond49 = phi %struct.VEC_int_base* [ %base46, %cond.true45 ], [ null, %cond.false47 ], !dbg !14080
  %29 = load i32, i32* %book_uid, align 4, !dbg !14080
  %call50 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond49, i32 %29), !dbg !14080
  %call51 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond43, i32 %call50), !dbg !14080
  %originators52 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call51, i32 0, i32 6, !dbg !14080
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators52, align 8, !dbg !14080
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_originators, align 8, !dbg !14081
  call void @bitmap_copy(%struct.bitmap_head_def* %30, %struct.bitmap_head_def* %31), !dbg !14082
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @current_originators, align 8, !dbg !14083
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi5, %struct.bitmap_head_def* %32, i32 0, i32* %uid), !dbg !14083
  br label %for.cond53, !dbg !14083

for.cond53:                                       ; preds = %for.inc, %cond.end48
  %call54 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi5, i32* %uid), !dbg !14085
  %tobool55 = icmp ne i8 %call54, 0, !dbg !14083
  br i1 %tobool55, label %for.body56, label %for.end, !dbg !14083

for.body56:                                       ; preds = %for.cond53
  %33 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14087
  %tobool57 = icmp ne %struct.VEC_sel_insn_data_def_heap* %33, null, !dbg !14087
  br i1 %tobool57, label %cond.true58, label %cond.false60, !dbg !14087

cond.true58:                                      ; preds = %for.body56
  %34 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14087
  %base59 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %34, i32 0, i32 0, !dbg !14087
  br label %cond.end61, !dbg !14087

cond.false60:                                     ; preds = %for.body56
  br label %cond.end61, !dbg !14087

cond.end61:                                       ; preds = %cond.false60, %cond.true58
  %cond62 = phi %struct.VEC_sel_insn_data_def_base* [ %base59, %cond.true58 ], [ null, %cond.false60 ], !dbg !14087
  %35 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14087
  %tobool63 = icmp ne %struct.VEC_int_heap* %35, null, !dbg !14087
  br i1 %tobool63, label %cond.true64, label %cond.false66, !dbg !14087

cond.true64:                                      ; preds = %cond.end61
  %36 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14087
  %base65 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %36, i32 0, i32 0, !dbg !14087
  br label %cond.end67, !dbg !14087

cond.false66:                                     ; preds = %cond.end61
  br label %cond.end67, !dbg !14087

cond.end67:                                       ; preds = %cond.false66, %cond.true64
  %cond68 = phi %struct.VEC_int_base* [ %base65, %cond.true64 ], [ null, %cond.false66 ], !dbg !14087
  %37 = load i32, i32* %uid, align 4, !dbg !14087
  %call69 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond68, i32 %37), !dbg !14087
  %call70 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond62, i32 %call69), !dbg !14087
  %originators71 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call70, i32 0, i32 6, !dbg !14087
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators71, align 8, !dbg !14087
  %tobool72 = icmp ne %struct.bitmap_head_def* %38, null, !dbg !14087
  br i1 %tobool72, label %if.then73, label %if.end105, !dbg !14089

if.then73:                                        ; preds = %cond.end67
  %39 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14090
  %tobool74 = icmp ne %struct.VEC_sel_insn_data_def_heap* %39, null, !dbg !14090
  br i1 %tobool74, label %cond.true75, label %cond.false77, !dbg !14090

cond.true75:                                      ; preds = %if.then73
  %40 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14090
  %base76 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %40, i32 0, i32 0, !dbg !14090
  br label %cond.end78, !dbg !14090

cond.false77:                                     ; preds = %if.then73
  br label %cond.end78, !dbg !14090

cond.end78:                                       ; preds = %cond.false77, %cond.true75
  %cond79 = phi %struct.VEC_sel_insn_data_def_base* [ %base76, %cond.true75 ], [ null, %cond.false77 ], !dbg !14090
  %41 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14090
  %tobool80 = icmp ne %struct.VEC_int_heap* %41, null, !dbg !14090
  br i1 %tobool80, label %cond.true81, label %cond.false83, !dbg !14090

cond.true81:                                      ; preds = %cond.end78
  %42 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14090
  %base82 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %42, i32 0, i32 0, !dbg !14090
  br label %cond.end84, !dbg !14090

cond.false83:                                     ; preds = %cond.end78
  br label %cond.end84, !dbg !14090

cond.end84:                                       ; preds = %cond.false83, %cond.true81
  %cond85 = phi %struct.VEC_int_base* [ %base82, %cond.true81 ], [ null, %cond.false83 ], !dbg !14090
  %43 = load i32, i32* %book_uid, align 4, !dbg !14090
  %call86 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond85, i32 %43), !dbg !14090
  %call87 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond79, i32 %call86), !dbg !14090
  %originators88 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call87, i32 0, i32 6, !dbg !14090
  %44 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators88, align 8, !dbg !14090
  %45 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14091
  %tobool89 = icmp ne %struct.VEC_sel_insn_data_def_heap* %45, null, !dbg !14091
  br i1 %tobool89, label %cond.true90, label %cond.false92, !dbg !14091

cond.true90:                                      ; preds = %cond.end84
  %46 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14091
  %base91 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %46, i32 0, i32 0, !dbg !14091
  br label %cond.end93, !dbg !14091

cond.false92:                                     ; preds = %cond.end84
  br label %cond.end93, !dbg !14091

cond.end93:                                       ; preds = %cond.false92, %cond.true90
  %cond94 = phi %struct.VEC_sel_insn_data_def_base* [ %base91, %cond.true90 ], [ null, %cond.false92 ], !dbg !14091
  %47 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14091
  %tobool95 = icmp ne %struct.VEC_int_heap* %47, null, !dbg !14091
  br i1 %tobool95, label %cond.true96, label %cond.false98, !dbg !14091

cond.true96:                                      ; preds = %cond.end93
  %48 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14091
  %base97 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %48, i32 0, i32 0, !dbg !14091
  br label %cond.end99, !dbg !14091

cond.false98:                                     ; preds = %cond.end93
  br label %cond.end99, !dbg !14091

cond.end99:                                       ; preds = %cond.false98, %cond.true96
  %cond100 = phi %struct.VEC_int_base* [ %base97, %cond.true96 ], [ null, %cond.false98 ], !dbg !14091
  %49 = load i32, i32* %uid, align 4, !dbg !14091
  %call101 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond100, i32 %49), !dbg !14091
  %call102 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond94, i32 %call101), !dbg !14091
  %originators103 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call102, i32 0, i32 6, !dbg !14091
  %50 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %originators103, align 8, !dbg !14091
  %call104 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %44, %struct.bitmap_head_def* %50), !dbg !14092
  br label %if.end105, !dbg !14092

if.end105:                                        ; preds = %cond.end99, %cond.end67
  br label %for.inc, !dbg !14087

for.inc:                                          ; preds = %if.end105
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi5, i32* %uid), !dbg !14085
  br label %for.cond53, !dbg !14085, !llvm.loop !14093

for.end:                                          ; preds = %for.cond53
  br label %for.inc106, !dbg !14095

for.inc106:                                       ; preds = %for.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %book_uid), !dbg !14067
  br label %for.cond, !dbg !14067, !llvm.loop !14096

for.end107:                                       ; preds = %for.cond
  %51 = load i8, i8* %should_move, align 1, !dbg !14098
  ret i8 %51, !dbg !14099
}

declare dso_local %struct.rtx_def* @sel_move_insn(%struct._expr*, i32, %struct.rtx_def*) #2

declare dso_local void @return_nop_to_pool(%struct.rtx_def*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @remove_temp_moveop_nops(i8 zeroext %full_tidying) #0 !dbg !14100 {
entry:
  %full_tidying.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  store i8 %full_tidying, i8* %full_tidying.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %full_tidying.addr, metadata !14101, metadata !DIExpression()), !dbg !14102
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14103, metadata !DIExpression()), !dbg !14104
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !14105, metadata !DIExpression()), !dbg !14106
  store i32 0, i32* %i, align 4, !dbg !14107
  br label %for.cond, !dbg !14109

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !14110
  %tobool = icmp ne %struct.VEC_insn_t_heap* %0, null, !dbg !14110
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14110

cond.true:                                        ; preds = %for.cond
  %1 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !14110
  %base = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %1, i32 0, i32 0, !dbg !14110
  br label %cond.end, !dbg !14110

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !14110

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_insn_t_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !14110
  %2 = load i32, i32* %i, align 4, !dbg !14110
  %call = call i32 @VEC_insn_t_base_iterate(%struct.VEC_insn_t_base* %cond, i32 %2, %struct.rtx_def** %insn), !dbg !14110
  %tobool1 = icmp ne i32 %call, 0, !dbg !14112
  br i1 %tobool1, label %for.body, label %for.end, !dbg !14112

for.body:                                         ; preds = %cond.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14113
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !14113
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14113
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !14113
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !14113
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !14113
  %5 = load %struct.rtx_def*, %struct.rtx_def** @nop_pattern, align 8, !dbg !14113
  %cmp = icmp eq %struct.rtx_def* %4, %5, !dbg !14113
  br i1 %cmp, label %cond.false3, label %cond.true2, !dbg !14113

cond.true2:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 4972, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !14113
  br label %cond.end4, !dbg !14113

cond.false3:                                      ; preds = %for.body
  br label %cond.end4, !dbg !14113

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ 0, %cond.true2 ], [ 0, %cond.false3 ], !dbg !14113
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14115
  %7 = load i8, i8* %full_tidying.addr, align 1, !dbg !14116
  call void @return_nop_to_pool(%struct.rtx_def* %6, i8 zeroext %7), !dbg !14117
  br label %for.inc, !dbg !14118

for.inc:                                          ; preds = %cond.end4
  %8 = load i32, i32* %i, align 4, !dbg !14119
  %inc = add nsw i32 %8, 1, !dbg !14119
  store i32 %inc, i32* %i, align 4, !dbg !14119
  br label %for.cond, !dbg !14120, !llvm.loop !14121

for.end:                                          ; preds = %cond.end
  %9 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !14123
  %tobool6 = icmp ne %struct.VEC_insn_t_heap* %9, null, !dbg !14123
  br i1 %tobool6, label %cond.true7, label %cond.false9, !dbg !14123

cond.true7:                                       ; preds = %for.end
  %10 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !14123
  %base8 = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %10, i32 0, i32 0, !dbg !14123
  br label %cond.end10, !dbg !14123

cond.false9:                                      ; preds = %for.end
  br label %cond.end10, !dbg !14123

cond.end10:                                       ; preds = %cond.false9, %cond.true7
  %cond11 = phi %struct.VEC_insn_t_base* [ %base8, %cond.true7 ], [ null, %cond.false9 ], !dbg !14123
  %call12 = call i32 @VEC_insn_t_base_length(%struct.VEC_insn_t_base* %cond11), !dbg !14123
  %cmp13 = icmp ugt i32 %call12, 0, !dbg !14125
  br i1 %cmp13, label %if.then, label %if.end, !dbg !14126

if.then:                                          ; preds = %cond.end10
  %11 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !14127
  %tobool14 = icmp ne %struct.VEC_insn_t_heap* %11, null, !dbg !14127
  br i1 %tobool14, label %cond.true15, label %cond.false17, !dbg !14127

cond.true15:                                      ; preds = %if.then
  %12 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !14127
  %base16 = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %12, i32 0, i32 0, !dbg !14127
  br label %cond.end18, !dbg !14127

cond.false17:                                     ; preds = %if.then
  br label %cond.end18, !dbg !14127

cond.end18:                                       ; preds = %cond.false17, %cond.true15
  %cond19 = phi %struct.VEC_insn_t_base* [ %base16, %cond.true15 ], [ null, %cond.false17 ], !dbg !14127
  %13 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !14127
  %tobool20 = icmp ne %struct.VEC_insn_t_heap* %13, null, !dbg !14127
  br i1 %tobool20, label %cond.true21, label %cond.false23, !dbg !14127

cond.true21:                                      ; preds = %cond.end18
  %14 = load %struct.VEC_insn_t_heap*, %struct.VEC_insn_t_heap** @vec_temp_moveop_nops, align 8, !dbg !14127
  %base22 = getelementptr inbounds %struct.VEC_insn_t_heap, %struct.VEC_insn_t_heap* %14, i32 0, i32 0, !dbg !14127
  br label %cond.end24, !dbg !14127

cond.false23:                                     ; preds = %cond.end18
  br label %cond.end24, !dbg !14127

cond.end24:                                       ; preds = %cond.false23, %cond.true21
  %cond25 = phi %struct.VEC_insn_t_base* [ %base22, %cond.true21 ], [ null, %cond.false23 ], !dbg !14127
  %call26 = call i32 @VEC_insn_t_base_length(%struct.VEC_insn_t_base* %cond25), !dbg !14127
  call void @VEC_insn_t_base_block_remove(%struct.VEC_insn_t_base* %cond19, i32 0, i32 %call26), !dbg !14127
  br label %if.end, !dbg !14127

if.end:                                           ; preds = %cond.end24, %cond.end10
  ret void, !dbg !14128
}

declare dso_local %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def*) #2

declare dso_local %struct.basic_block_def* @sel_split_edge(%struct.edge_def*) #2

declare dso_local void @df_insn_change_bb(%struct.rtx_def*, %struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @move_op(%struct.rtx_def* %insn, %struct._list_node* %orig_ops, %struct._expr* %expr_vliw, %struct.rtx_def* %dest, %struct._expr* %c_expr, i8* %should_move) #0 !dbg !14129 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %expr_vliw.addr = alloca %struct._expr*, align 8
  %dest.addr = alloca %struct.rtx_def*, align 8
  %c_expr.addr = alloca %struct._expr*, align 8
  %should_move.addr = alloca i8*, align 8
  %sparams = alloca %struct.moveop_static_params, align 8
  %lparams = alloca %struct.cmpd_local_params, align 8
  %res = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !14132, metadata !DIExpression()), !dbg !14133
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %orig_ops.addr, metadata !14134, metadata !DIExpression()), !dbg !14135
  store %struct._expr* %expr_vliw, %struct._expr** %expr_vliw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %expr_vliw.addr, metadata !14136, metadata !DIExpression()), !dbg !14137
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest.addr, metadata !14138, metadata !DIExpression()), !dbg !14139
  store %struct._expr* %c_expr, %struct._expr** %c_expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._expr** %c_expr.addr, metadata !14140, metadata !DIExpression()), !dbg !14141
  store i8* %should_move, i8** %should_move.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %should_move.addr, metadata !14142, metadata !DIExpression()), !dbg !14143
  call void @llvm.dbg.declare(metadata %struct.moveop_static_params* %sparams, metadata !14144, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.declare(metadata %struct.cmpd_local_params* %lparams, metadata !14146, metadata !DIExpression()), !dbg !14147
  call void @llvm.dbg.declare(metadata i8* %res, metadata !14148, metadata !DIExpression()), !dbg !14149
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !14150
  %dest1 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %sparams, i32 0, i32 0, !dbg !14151
  store %struct.rtx_def* %0, %struct.rtx_def** %dest1, align 8, !dbg !14152
  %1 = load %struct._expr*, %struct._expr** %c_expr.addr, align 8, !dbg !14153
  %c_expr2 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %sparams, i32 0, i32 1, !dbg !14154
  store %struct._expr* %1, %struct._expr** %c_expr2, align 8, !dbg !14155
  %2 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !14156
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %2, i32 0, i32 0, !dbg !14156
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !14156
  %insn_rtx = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i32 0, i32 0, !dbg !14156
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn_rtx, align 8, !dbg !14156
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !14156
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14156
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !14156
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !14156
  %5 = load i32, i32* %rt_int, align 8, !dbg !14156
  %uid = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %sparams, i32 0, i32 2, !dbg !14157
  store i32 %5, i32* %uid, align 8, !dbg !14158
  %was_renamed = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %sparams, i32 0, i32 3, !dbg !14159
  store i8 0, i8* %was_renamed, align 4, !dbg !14160
  %e1 = getelementptr inbounds %struct.cmpd_local_params, %struct.cmpd_local_params* %lparams, i32 0, i32 0, !dbg !14161
  store %struct.edge_def* null, %struct.edge_def** %e1, align 8, !dbg !14162
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @code_motion_visited_blocks, align 8, !dbg !14163
  call void @bitmap_clear(%struct.bitmap_head_def* %6), !dbg !14164
  store %struct.code_motion_path_driver_info_def* @move_op_hooks, %struct.code_motion_path_driver_info_def** @code_motion_path_driver_info, align 8, !dbg !14165
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14166
  %8 = load %struct._list_node*, %struct._list_node** %orig_ops.addr, align 8, !dbg !14167
  %9 = bitcast %struct.moveop_static_params* %sparams to i8*, !dbg !14168
  %call = call i32 @code_motion_path_driver(%struct.rtx_def* %7, %struct._list_node* %8, %struct._list_node* null, %struct.cmpd_local_params* %lparams, i8* %9), !dbg !14169
  %conv = trunc i32 %call to i8, !dbg !14169
  store i8 %conv, i8* %res, align 1, !dbg !14170
  %was_renamed3 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %sparams, i32 0, i32 3, !dbg !14171
  %10 = load i8, i8* %was_renamed3, align 4, !dbg !14171
  %tobool = icmp ne i8 %10, 0, !dbg !14173
  br i1 %tobool, label %if.then, label %if.end, !dbg !14174

if.then:                                          ; preds = %entry
  %11 = load %struct._expr*, %struct._expr** %expr_vliw.addr, align 8, !dbg !14175
  %was_renamed4 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 12, !dbg !14175
  %bf.load = load i8, i8* %was_renamed4, align 1, !dbg !14176
  %bf.clear = and i8 %bf.load, -5, !dbg !14176
  %bf.set = or i8 %bf.clear, 4, !dbg !14176
  store i8 %bf.set, i8* %was_renamed4, align 1, !dbg !14176
  br label %if.end, !dbg !14175

if.end:                                           ; preds = %if.then, %entry
  %uid5 = getelementptr inbounds %struct.moveop_static_params, %struct.moveop_static_params* %sparams, i32 0, i32 2, !dbg !14177
  %12 = load i32, i32* %uid5, align 8, !dbg !14177
  %cmp = icmp eq i32 %12, -1, !dbg !14178
  %conv6 = zext i1 %cmp to i32, !dbg !14178
  %conv7 = trunc i32 %conv6 to i8, !dbg !14179
  %13 = load i8*, i8** %should_move.addr, align 8, !dbg !14180
  store i8 %conv7, i8* %13, align 1, !dbg !14181
  %14 = load i8, i8* %res, align 1, !dbg !14182
  ret i8 %14, !dbg !14183
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @get_dest_from_orig_ops(%struct._list_node* %orig_ops) #0 !dbg !14184 {
entry:
  %orig_ops.addr = alloca %struct._list_node*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %av_it = alloca %struct._list_iterator, align 8
  %expr = alloca %struct._expr*, align 8
  %first_p = alloca i8, align 1
  %x = alloca %struct.rtx_def*, align 8
  store %struct._list_node* %orig_ops, %struct._list_node** %orig_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %orig_ops.addr, metadata !14187, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest, metadata !14189, metadata !DIExpression()), !dbg !14190
  store %struct.rtx_def* null, %struct.rtx_def** %dest, align 8, !dbg !14190
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %av_it, metadata !14191, metadata !DIExpression()), !dbg !14192
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !14193, metadata !DIExpression()), !dbg !14194
  call void @llvm.dbg.declare(metadata i8* %first_p, metadata !14195, metadata !DIExpression()), !dbg !14196
  store i8 1, i8* %first_p, align 1, !dbg !14196
  call void @_list_iter_start(%struct._list_iterator* %av_it, %struct._list_node** %orig_ops.addr, i8 zeroext 0), !dbg !14197
  br label %for.cond, !dbg !14197

for.cond:                                         ; preds = %for.inc, %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %av_it, i32 0, i32 0, !dbg !14199
  %0 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !14199
  %1 = load %struct._list_node*, %struct._list_node** %0, align 8, !dbg !14199
  %call = call zeroext i8 @_list_iter_cond_expr(%struct._list_node* %1, %struct._expr** %expr), !dbg !14199
  %tobool = icmp ne i8 %call, 0, !dbg !14197
  br i1 %tobool, label %for.body, label %for.end, !dbg !14197

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !14201, metadata !DIExpression()), !dbg !14203
  %2 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !14204
  %vinsn = getelementptr inbounds %struct._expr, %struct._expr* %2, i32 0, i32 0, !dbg !14204
  %3 = load %struct.vinsn_def*, %struct.vinsn_def** %vinsn, align 8, !dbg !14204
  %id = getelementptr inbounds %struct.vinsn_def, %struct.vinsn_def* %3, i32 0, i32 1, !dbg !14204
  %lhs = getelementptr inbounds %struct.idata_def, %struct.idata_def* %id, i32 0, i32 1, !dbg !14204
  %4 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !14204
  store %struct.rtx_def* %4, %struct.rtx_def** %x, align 8, !dbg !14203
  %5 = load i8, i8* %first_p, align 1, !dbg !14205
  %tobool1 = icmp ne i8 %5, 0, !dbg !14205
  br i1 %tobool1, label %if.then, label %if.else, !dbg !14207

if.then:                                          ; preds = %for.body
  store i8 0, i8* %first_p, align 1, !dbg !14208
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !14210
  store %struct.rtx_def* %6, %struct.rtx_def** %dest, align 8, !dbg !14211
  br label %if.end, !dbg !14212

if.else:                                          ; preds = %for.body
  %7 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !14213
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !14213
  %cmp = icmp eq %struct.rtx_def* %7, %8, !dbg !14213
  br i1 %cmp, label %cond.false, label %lor.lhs.false, !dbg !14213

lor.lhs.false:                                    ; preds = %if.else
  %9 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !14213
  %cmp2 = icmp ne %struct.rtx_def* %9, null, !dbg !14213
  br i1 %cmp2, label %land.lhs.true, label %cond.true, !dbg !14213

land.lhs.true:                                    ; preds = %lor.lhs.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !14213
  %cmp3 = icmp ne %struct.rtx_def* %10, null, !dbg !14213
  br i1 %cmp3, label %land.lhs.true4, label %cond.true, !dbg !14213

land.lhs.true4:                                   ; preds = %land.lhs.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !14213
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !14213
  %call5 = call i32 @rtx_equal_p(%struct.rtx_def* %11, %struct.rtx_def* %12), !dbg !14213
  %tobool6 = icmp ne i32 %call5, 0, !dbg !14213
  br i1 %tobool6, label %cond.false, label %cond.true, !dbg !14213

cond.true:                                        ; preds = %land.lhs.true4, %land.lhs.true, %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5640, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !14213
  br label %cond.end, !dbg !14213

cond.false:                                       ; preds = %land.lhs.true4, %if.else
  br label %cond.end, !dbg !14213

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !14213
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  br label %for.inc, !dbg !14214

for.inc:                                          ; preds = %if.end
  call void @_list_iter_next(%struct._list_iterator* %av_it), !dbg !14199
  br label %for.cond, !dbg !14199, !llvm.loop !14215

for.end:                                          ; preds = %for.cond
  %13 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !14217
  ret %struct.rtx_def* %13, !dbg !14218
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_insn_t_base_iterate(%struct.VEC_insn_t_base* %vec_, i32 %ix_, %struct.rtx_def** %ptr) #0 !dbg !14219 {
entry:
  %retval = alloca i32, align 4
  %vec_.addr = alloca %struct.VEC_insn_t_base*, align 8
  %ix_.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.rtx_def**, align 8
  store %struct.VEC_insn_t_base* %vec_, %struct.VEC_insn_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_insn_t_base** %vec_.addr, metadata !14224, metadata !DIExpression()), !dbg !14225
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !14226, metadata !DIExpression()), !dbg !14225
  store %struct.rtx_def** %ptr, %struct.rtx_def*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %ptr.addr, metadata !14227, metadata !DIExpression()), !dbg !14225
  %0 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !14228
  %tobool = icmp ne %struct.VEC_insn_t_base* %0, null, !dbg !14228
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !14228

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !14228
  %2 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !14228
  %num = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %2, i32 0, i32 0, !dbg !14228
  %3 = load i32, i32* %num, align 8, !dbg !14228
  %cmp = icmp ult i32 %1, %3, !dbg !14228
  br i1 %cmp, label %if.then, label %if.else, !dbg !14225

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !14230
  %vec = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %4, i32 0, i32 2, !dbg !14230
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !14230
  %idxprom = zext i32 %5 to i64, !dbg !14230
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %vec, i64 0, i64 %idxprom, !dbg !14230
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !14230
  %7 = load %struct.rtx_def**, %struct.rtx_def*** %ptr.addr, align 8, !dbg !14230
  store %struct.rtx_def* %6, %struct.rtx_def** %7, align 8, !dbg !14230
  store i32 1, i32* %retval, align 4, !dbg !14230
  br label %return, !dbg !14230

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %ptr.addr, align 8, !dbg !14232
  store %struct.rtx_def* null, %struct.rtx_def** %8, align 8, !dbg !14232
  store i32 0, i32* %retval, align 4, !dbg !14232
  br label %return, !dbg !14232

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !14225
  ret i32 %9, !dbg !14225
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_insn_t_base_length(%struct.VEC_insn_t_base* %vec_) #0 !dbg !14234 {
entry:
  %vec_.addr = alloca %struct.VEC_insn_t_base*, align 8
  store %struct.VEC_insn_t_base* %vec_, %struct.VEC_insn_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_insn_t_base** %vec_.addr, metadata !14237, metadata !DIExpression()), !dbg !14238
  %0 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !14238
  %tobool = icmp ne %struct.VEC_insn_t_base* %0, null, !dbg !14238
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14238

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !14238
  %num = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %1, i32 0, i32 0, !dbg !14238
  %2 = load i32, i32* %num, align 8, !dbg !14238
  br label %cond.end, !dbg !14238

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14238

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !14238
  ret i32 %cond, !dbg !14238
}

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_insn_t_base_block_remove(%struct.VEC_insn_t_base* %vec_, i32 %ix_, i32 %len_) #0 !dbg !14239 {
entry:
  %vec_.addr = alloca %struct.VEC_insn_t_base*, align 8
  %ix_.addr = alloca i32, align 4
  %len_.addr = alloca i32, align 4
  %slot_ = alloca %struct.rtx_def**, align 8
  store %struct.VEC_insn_t_base* %vec_, %struct.VEC_insn_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_insn_t_base** %vec_.addr, metadata !14242, metadata !DIExpression()), !dbg !14243
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !14244, metadata !DIExpression()), !dbg !14243
  store i32 %len_, i32* %len_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len_.addr, metadata !14245, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %slot_, metadata !14246, metadata !DIExpression()), !dbg !14243
  %0 = load i32, i32* %ix_.addr, align 4, !dbg !14243
  %1 = load i32, i32* %len_.addr, align 4, !dbg !14243
  %add = add i32 %0, %1, !dbg !14243
  %2 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !14243
  %num = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %2, i32 0, i32 0, !dbg !14243
  %3 = load i32, i32* %num, align 8, !dbg !14243
  %cmp = icmp ule i32 %add, %3, !dbg !14243
  %conv = zext i1 %cmp to i32, !dbg !14243
  %4 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !14243
  %vec = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %4, i32 0, i32 2, !dbg !14243
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !14243
  %idxprom = zext i32 %5 to i64, !dbg !14243
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %vec, i64 0, i64 %idxprom, !dbg !14243
  store %struct.rtx_def** %arrayidx, %struct.rtx_def*** %slot_, align 8, !dbg !14243
  %6 = load i32, i32* %len_.addr, align 4, !dbg !14243
  %7 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !14243
  %num1 = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %7, i32 0, i32 0, !dbg !14243
  %8 = load i32, i32* %num1, align 8, !dbg !14243
  %sub = sub i32 %8, %6, !dbg !14243
  store i32 %sub, i32* %num1, align 8, !dbg !14243
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %slot_, align 8, !dbg !14243
  %10 = bitcast %struct.rtx_def** %9 to i8*, !dbg !14243
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %slot_, align 8, !dbg !14243
  %12 = load i32, i32* %len_.addr, align 4, !dbg !14243
  %idx.ext = zext i32 %12 to i64, !dbg !14243
  %add.ptr = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %11, i64 %idx.ext, !dbg !14243
  %13 = bitcast %struct.rtx_def** %add.ptr to i8*, !dbg !14243
  %14 = load %struct.VEC_insn_t_base*, %struct.VEC_insn_t_base** %vec_.addr, align 8, !dbg !14243
  %num2 = getelementptr inbounds %struct.VEC_insn_t_base, %struct.VEC_insn_t_base* %14, i32 0, i32 0, !dbg !14243
  %15 = load i32, i32* %num2, align 8, !dbg !14243
  %16 = load i32, i32* %ix_.addr, align 4, !dbg !14243
  %sub3 = sub i32 %15, %16, !dbg !14243
  %conv4 = zext i32 %sub3 to i64, !dbg !14243
  %mul = mul i64 %conv4, 8, !dbg !14243
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %13, i64 %mul, i1 false), !dbg !14243
  ret void, !dbg !14243
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @advance_state_on_fence(%struct._fence* %fence, %struct.rtx_def* %insn) #0 !dbg !14247 {
entry:
  %fence.addr = alloca %struct._fence*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %asm_p = alloca i8, align 1
  %res = alloca i32, align 4
  %temp_state = alloca i8*, align 8
  store %struct._fence* %fence, %struct._fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._fence** %fence.addr, metadata !14250, metadata !DIExpression()), !dbg !14251
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !14252, metadata !DIExpression()), !dbg !14253
  call void @llvm.dbg.declare(metadata i8* %asm_p, metadata !14254, metadata !DIExpression()), !dbg !14255
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14256
  %call = call i32 @recog_memoized(%struct.rtx_def* %0), !dbg !14258
  %cmp = icmp sge i32 %call, 0, !dbg !14259
  br i1 %cmp, label %if.then, label %if.else, !dbg !14260

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %res, metadata !14261, metadata !DIExpression()), !dbg !14263
  call void @llvm.dbg.declare(metadata i8** %temp_state, metadata !14264, metadata !DIExpression()), !dbg !14265
  %1 = load i64, i64* @dfa_state_size, align 8, !dbg !14266
  %2 = alloca i8, i64 %1, align 16, !dbg !14266
  store i8* %2, i8** %temp_state, align 8, !dbg !14265
  %3 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14267
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %3, null, !dbg !14267
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14267

cond.true:                                        ; preds = %if.then
  %4 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14267
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %4, i32 0, i32 0, !dbg !14267
  br label %cond.end, !dbg !14267

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !14267

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !14267
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14267
  %tobool1 = icmp ne %struct.VEC_int_heap* %5, null, !dbg !14267
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !14267

cond.true2:                                       ; preds = %cond.end
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14267
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i32 0, i32 0, !dbg !14267
  br label %cond.end5, !dbg !14267

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !14267

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !14267
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14267
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !14267
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14267
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !14267
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !14267
  %8 = load i32, i32* %rt_int, align 8, !dbg !14267
  %call7 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %8), !dbg !14267
  %call8 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call7), !dbg !14267
  %asm_p9 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call8, i32 0, i32 13, !dbg !14267
  %bf.load = load i8, i8* %asm_p9, align 4, !dbg !14267
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !14267
  %bf.clear = and i8 %bf.lshr, 1, !dbg !14267
  %bf.cast = zext i8 %bf.clear to i32, !dbg !14267
  %tobool10 = icmp ne i32 %bf.cast, 0, !dbg !14267
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !14267

cond.true11:                                      ; preds = %cond.end5
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5269, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !14267
  br label %cond.end13, !dbg !14267

cond.false12:                                     ; preds = %cond.end5
  br label %cond.end13, !dbg !14267

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ 0, %cond.true11 ], [ 0, %cond.false12 ], !dbg !14267
  store i8 0, i8* %asm_p, align 1, !dbg !14268
  %9 = load i8*, i8** %temp_state, align 8, !dbg !14269
  %10 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !14270
  %state = getelementptr inbounds %struct._fence, %struct._fence* %10, i32 0, i32 1, !dbg !14270
  %11 = load i8*, i8** %state, align 8, !dbg !14270
  %12 = load i64, i64* @dfa_state_size, align 8, !dbg !14271
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %11, i64 %12, i1 false), !dbg !14272
  %13 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !14273
  %state15 = getelementptr inbounds %struct._fence, %struct._fence* %13, i32 0, i32 1, !dbg !14273
  %14 = load i8*, i8** %state15, align 8, !dbg !14273
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14274
  %call16 = call i32 @state_transition(i8* %14, %struct.rtx_def* %15), !dbg !14275
  store i32 %call16, i32* %res, align 4, !dbg !14276
  %16 = load i32, i32* %res, align 4, !dbg !14277
  %cmp17 = icmp slt i32 %16, 0, !dbg !14277
  br i1 %cmp17, label %cond.false19, label %cond.true18, !dbg !14277

cond.true18:                                      ; preds = %cond.end13
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5274, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !14277
  br label %cond.end20, !dbg !14277

cond.false19:                                     ; preds = %cond.end13
  br label %cond.end20, !dbg !14277

cond.end20:                                       ; preds = %cond.false19, %cond.true18
  %cond21 = phi i32 [ 0, %cond.true18 ], [ 0, %cond.false19 ], !dbg !14277
  %17 = load i8*, i8** %temp_state, align 8, !dbg !14278
  %18 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !14280
  %state22 = getelementptr inbounds %struct._fence, %struct._fence* %18, i32 0, i32 1, !dbg !14280
  %19 = load i8*, i8** %state22, align 8, !dbg !14280
  %20 = load i64, i64* @dfa_state_size, align 8, !dbg !14281
  %call23 = call i32 @memcmp(i8* %17, i8* %19, i64 %20), !dbg !14282
  %tobool24 = icmp ne i32 %call23, 0, !dbg !14282
  br i1 %tobool24, label %if.then25, label %if.end29, !dbg !14283

if.then25:                                        ; preds = %cond.end20
  %21 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !14284
  %cycle_issued_insns = getelementptr inbounds %struct._fence, %struct._fence* %21, i32 0, i32 3, !dbg !14284
  %22 = load i32, i32* %cycle_issued_insns, align 4, !dbg !14286
  %inc = add nsw i32 %22, 1, !dbg !14286
  store i32 %inc, i32* %cycle_issued_insns, align 4, !dbg !14286
  %23 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !14287
  %cycle_issued_insns26 = getelementptr inbounds %struct._fence, %struct._fence* %23, i32 0, i32 3, !dbg !14287
  %24 = load i32, i32* %cycle_issued_insns26, align 4, !dbg !14287
  %25 = load i32, i32* @issue_rate, align 4, !dbg !14289
  %cmp27 = icmp sgt i32 %24, %25, !dbg !14290
  br i1 %cmp27, label %if.then28, label %if.end, !dbg !14291

if.then28:                                        ; preds = %if.then25
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 5282, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !14292
  br label %if.end, !dbg !14292

if.end:                                           ; preds = %if.then28, %if.then25
  br label %if.end29, !dbg !14293

if.end29:                                         ; preds = %if.end, %cond.end20
  br label %if.end62, !dbg !14294

if.else:                                          ; preds = %entry
  %26 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14295
  %tobool30 = icmp ne %struct.VEC_sel_insn_data_def_heap* %26, null, !dbg !14295
  br i1 %tobool30, label %cond.true31, label %cond.false33, !dbg !14295

cond.true31:                                      ; preds = %if.else
  %27 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14295
  %base32 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %27, i32 0, i32 0, !dbg !14295
  br label %cond.end34, !dbg !14295

cond.false33:                                     ; preds = %if.else
  br label %cond.end34, !dbg !14295

cond.end34:                                       ; preds = %cond.false33, %cond.true31
  %cond35 = phi %struct.VEC_sel_insn_data_def_base* [ %base32, %cond.true31 ], [ null, %cond.false33 ], !dbg !14295
  %28 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14295
  %tobool36 = icmp ne %struct.VEC_int_heap* %28, null, !dbg !14295
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !14295

cond.true37:                                      ; preds = %cond.end34
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14295
  %base38 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %29, i32 0, i32 0, !dbg !14295
  br label %cond.end40, !dbg !14295

cond.false39:                                     ; preds = %cond.end34
  br label %cond.end40, !dbg !14295

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi %struct.VEC_int_base* [ %base38, %cond.true37 ], [ null, %cond.false39 ], !dbg !14295
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14295
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !14295
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !14295
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 0, !dbg !14295
  %rt_int45 = bitcast %union.rtunion_def* %arrayidx44 to i32*, !dbg !14295
  %31 = load i32, i32* %rt_int45, align 8, !dbg !14295
  %call46 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond41, i32 %31), !dbg !14295
  %call47 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond35, i32 %call46), !dbg !14295
  %asm_p48 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call47, i32 0, i32 13, !dbg !14295
  %bf.load49 = load i8, i8* %asm_p48, align 4, !dbg !14295
  %bf.lshr50 = lshr i8 %bf.load49, 1, !dbg !14295
  %bf.clear51 = and i8 %bf.lshr50, 1, !dbg !14295
  %bf.cast52 = zext i8 %bf.clear51 to i32, !dbg !14295
  %conv = trunc i32 %bf.cast52 to i8, !dbg !14295
  store i8 %conv, i8* %asm_p, align 1, !dbg !14297
  %32 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !14298
  %starts_cycle_p = getelementptr inbounds %struct._fence, %struct._fence* %32, i32 0, i32 13, !dbg !14298
  %bf.load53 = load i8, i8* %starts_cycle_p, align 8, !dbg !14298
  %bf.lshr54 = lshr i8 %bf.load53, 2, !dbg !14298
  %bf.clear55 = and i8 %bf.lshr54, 1, !dbg !14298
  %bf.cast56 = zext i8 %bf.clear55 to i32, !dbg !14298
  %tobool57 = icmp ne i32 %bf.cast56, 0, !dbg !14298
  br i1 %tobool57, label %if.end61, label %land.lhs.true, !dbg !14300

land.lhs.true:                                    ; preds = %cond.end40
  %33 = load i8, i8* %asm_p, align 1, !dbg !14301
  %conv58 = zext i8 %33 to i32, !dbg !14301
  %tobool59 = icmp ne i32 %conv58, 0, !dbg !14301
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !14302

if.then60:                                        ; preds = %land.lhs.true
  %34 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !14303
  call void @advance_one_cycle(%struct._fence* %34), !dbg !14304
  br label %if.end61, !dbg !14304

if.end61:                                         ; preds = %if.then60, %land.lhs.true, %cond.end40
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end29
  %35 = load i32, i32* @sched_verbose, align 4, !dbg !14305
  %cmp63 = icmp sge i32 %35, 2, !dbg !14307
  br i1 %cmp63, label %if.then65, label %if.end67, !dbg !14308

if.then65:                                        ; preds = %if.end62
  %36 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !14309
  %state66 = getelementptr inbounds %struct._fence, %struct._fence* %36, i32 0, i32 1, !dbg !14309
  %37 = load i8*, i8** %state66, align 8, !dbg !14309
  call void @debug_state(i8* %37), !dbg !14310
  br label %if.end67, !dbg !14310

if.end67:                                         ; preds = %if.then65, %if.end62
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14311
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !14311
  %bf.load68 = load i32, i32* %39, align 8, !dbg !14311
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !14311
  %cmp70 = icmp eq i32 %bf.clear69, 7, !dbg !14311
  br i1 %cmp70, label %if.end76, label %if.then72, !dbg !14313

if.then72:                                        ; preds = %if.end67
  %40 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !14314
  %starts_cycle_p73 = getelementptr inbounds %struct._fence, %struct._fence* %40, i32 0, i32 13, !dbg !14314
  %bf.load74 = load i8, i8* %starts_cycle_p73, align 8, !dbg !14315
  %bf.clear75 = and i8 %bf.load74, -5, !dbg !14315
  store i8 %bf.clear75, i8* %starts_cycle_p73, align 8, !dbg !14315
  br label %if.end76, !dbg !14314

if.end76:                                         ; preds = %if.then72, %if.end67
  %41 = load i32, i32* @can_issue_more, align 4, !dbg !14316
  %42 = load %struct._fence*, %struct._fence** %fence.addr, align 8, !dbg !14317
  %issue_more = getelementptr inbounds %struct._fence, %struct._fence* %42, i32 0, i32 11, !dbg !14317
  store i32 %41, i32* %issue_more, align 8, !dbg !14318
  %43 = load i8, i8* %asm_p, align 1, !dbg !14319
  ret i8 %43, !dbg !14320
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def** @VEC_rtx_gc_safe_push(%struct.VEC_rtx_gc** %vec_, %struct.rtx_def* %obj_) #0 !dbg !14321 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_gc**, align 8
  %obj_.addr = alloca %struct.rtx_def*, align 8
  store %struct.VEC_rtx_gc** %vec_, %struct.VEC_rtx_gc*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_gc*** %vec_.addr, metadata !14325, metadata !DIExpression()), !dbg !14326
  store %struct.rtx_def* %obj_, %struct.rtx_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %obj_.addr, metadata !14327, metadata !DIExpression()), !dbg !14326
  %0 = load %struct.VEC_rtx_gc**, %struct.VEC_rtx_gc*** %vec_.addr, align 8, !dbg !14326
  %call = call i32 @VEC_rtx_gc_reserve(%struct.VEC_rtx_gc** %0, i32 1), !dbg !14326
  %1 = load %struct.VEC_rtx_gc**, %struct.VEC_rtx_gc*** %vec_.addr, align 8, !dbg !14326
  %2 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %1, align 8, !dbg !14326
  %tobool = icmp ne %struct.VEC_rtx_gc* %2, null, !dbg !14326
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14326

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_rtx_gc**, %struct.VEC_rtx_gc*** %vec_.addr, align 8, !dbg !14326
  %4 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %3, align 8, !dbg !14326
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %4, i32 0, i32 0, !dbg !14326
  br label %cond.end, !dbg !14326

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14326

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !14326
  %5 = load %struct.rtx_def*, %struct.rtx_def** %obj_.addr, align 8, !dbg !14326
  %call1 = call %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %cond, %struct.rtx_def* %5), !dbg !14326
  ret %struct.rtx_def** %call1, !dbg !14326
}

declare dso_local i32 @maximal_insn_latency(%struct.rtx_def*) #2

declare dso_local void @dump_insn_1(%struct.rtx_def*, i32) #2

declare dso_local i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_rtx_gc_reserve(%struct.VEC_rtx_gc** %vec_, i32 %alloc_) #0 !dbg !14328 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_gc**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_rtx_gc** %vec_, %struct.VEC_rtx_gc*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_gc*** %vec_.addr, metadata !14331, metadata !DIExpression()), !dbg !14332
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !14333, metadata !DIExpression()), !dbg !14332
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !14334, metadata !DIExpression()), !dbg !14332
  %0 = load %struct.VEC_rtx_gc**, %struct.VEC_rtx_gc*** %vec_.addr, align 8, !dbg !14332
  %1 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %0, align 8, !dbg !14332
  %tobool = icmp ne %struct.VEC_rtx_gc* %1, null, !dbg !14332
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14332

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_rtx_gc**, %struct.VEC_rtx_gc*** %vec_.addr, align 8, !dbg !14332
  %3 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %2, align 8, !dbg !14332
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %3, i32 0, i32 0, !dbg !14332
  br label %cond.end, !dbg !14332

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14332

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !14332
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !14332
  %call = call i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %cond, i32 %4), !dbg !14332
  %tobool1 = icmp ne i32 %call, 0, !dbg !14332
  %lnot = xor i1 %tobool1, true, !dbg !14332
  %lnot.ext = zext i1 %lnot to i32, !dbg !14332
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !14332
  %5 = load i32, i32* %extend, align 4, !dbg !14335
  %tobool2 = icmp ne i32 %5, 0, !dbg !14335
  br i1 %tobool2, label %if.then, label %if.end, !dbg !14332

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_rtx_gc**, %struct.VEC_rtx_gc*** %vec_.addr, align 8, !dbg !14335
  %7 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %6, align 8, !dbg !14335
  %8 = bitcast %struct.VEC_rtx_gc* %7 to i8*, !dbg !14335
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !14335
  %call3 = call i8* @vec_gc_p_reserve(i8* %8, i32 %9), !dbg !14335
  %10 = bitcast i8* %call3 to %struct.VEC_rtx_gc*, !dbg !14335
  %11 = load %struct.VEC_rtx_gc**, %struct.VEC_rtx_gc*** %vec_.addr, align 8, !dbg !14335
  store %struct.VEC_rtx_gc* %10, %struct.VEC_rtx_gc** %11, align 8, !dbg !14335
  br label %if.end, !dbg !14335

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !14332
  ret i32 %12, !dbg !14332
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %vec_, %struct.rtx_def* %obj_) #0 !dbg !14337 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_base*, align 8
  %obj_.addr = alloca %struct.rtx_def*, align 8
  %slot_ = alloca %struct.rtx_def**, align 8
  store %struct.VEC_rtx_base* %vec_, %struct.VEC_rtx_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_base** %vec_.addr, metadata !14340, metadata !DIExpression()), !dbg !14341
  store %struct.rtx_def* %obj_, %struct.rtx_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %obj_.addr, metadata !14342, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %slot_, metadata !14343, metadata !DIExpression()), !dbg !14341
  %0 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !14341
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %0, i32 0, i32 0, !dbg !14341
  %1 = load i32, i32* %num, align 8, !dbg !14341
  %2 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !14341
  %alloc = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %2, i32 0, i32 1, !dbg !14341
  %3 = load i32, i32* %alloc, align 4, !dbg !14341
  %cmp = icmp ult i32 %1, %3, !dbg !14341
  %conv = zext i1 %cmp to i32, !dbg !14341
  %4 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !14341
  %vec = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %4, i32 0, i32 2, !dbg !14341
  %5 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !14341
  %num1 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %5, i32 0, i32 0, !dbg !14341
  %6 = load i32, i32* %num1, align 8, !dbg !14341
  %inc = add i32 %6, 1, !dbg !14341
  store i32 %inc, i32* %num1, align 8, !dbg !14341
  %idxprom = zext i32 %6 to i64, !dbg !14341
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %vec, i64 0, i64 %idxprom, !dbg !14341
  store %struct.rtx_def** %arrayidx, %struct.rtx_def*** %slot_, align 8, !dbg !14341
  %7 = load %struct.rtx_def*, %struct.rtx_def** %obj_.addr, align 8, !dbg !14341
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %slot_, align 8, !dbg !14341
  store %struct.rtx_def* %7, %struct.rtx_def** %8, align 8, !dbg !14341
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %slot_, align 8, !dbg !14341
  ret %struct.rtx_def** %9, !dbg !14341
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %vec_, i32 %alloc_) #0 !dbg !14344 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_rtx_base* %vec_, %struct.VEC_rtx_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_base** %vec_.addr, metadata !14347, metadata !DIExpression()), !dbg !14348
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !14349, metadata !DIExpression()), !dbg !14348
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !14348
  %cmp = icmp sge i32 %0, 0, !dbg !14348
  %conv = zext i1 %cmp to i32, !dbg !14348
  %1 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !14348
  %tobool = icmp ne %struct.VEC_rtx_base* %1, null, !dbg !14348
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14348

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !14348
  %alloc = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %2, i32 0, i32 1, !dbg !14348
  %3 = load i32, i32* %alloc, align 4, !dbg !14348
  %4 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !14348
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %4, i32 0, i32 0, !dbg !14348
  %5 = load i32, i32* %num, align 8, !dbg !14348
  %sub = sub i32 %3, %5, !dbg !14348
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !14348
  %cmp1 = icmp uge i32 %sub, %6, !dbg !14348
  %conv2 = zext i1 %cmp1 to i32, !dbg !14348
  br label %cond.end, !dbg !14348

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !14348
  %tobool3 = icmp ne i32 %7, 0, !dbg !14348
  %lnot = xor i1 %tobool3, true, !dbg !14348
  %lnot.ext = zext i1 %lnot to i32, !dbg !14348
  br label %cond.end, !dbg !14348

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !14348
  ret i32 %cond, !dbg !14348
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) #2

declare dso_local void @advance_deps_context(%struct.deps*, %struct.rtx_def*) #2

declare dso_local %struct._list_node* @ilist_copy(%struct._list_node*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_vinsn_t_base_length(%struct.VEC_vinsn_t_base* %vec_) #0 !dbg !14350 {
entry:
  %vec_.addr = alloca %struct.VEC_vinsn_t_base*, align 8
  store %struct.VEC_vinsn_t_base* %vec_, %struct.VEC_vinsn_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_base** %vec_.addr, metadata !14353, metadata !DIExpression()), !dbg !14354
  %0 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !14354
  %tobool = icmp ne %struct.VEC_vinsn_t_base* %0, null, !dbg !14354
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14354

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !14354
  %num = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %1, i32 0, i32 0, !dbg !14354
  %2 = load i32, i32* %num, align 8, !dbg !14354
  br label %cond.end, !dbg !14354

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14354

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !14354
  ret i32 %cond, !dbg !14354
}

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_vinsn_t_base_block_remove(%struct.VEC_vinsn_t_base* %vec_, i32 %ix_, i32 %len_) #0 !dbg !14355 {
entry:
  %vec_.addr = alloca %struct.VEC_vinsn_t_base*, align 8
  %ix_.addr = alloca i32, align 4
  %len_.addr = alloca i32, align 4
  %slot_ = alloca %struct.vinsn_def**, align 8
  store %struct.VEC_vinsn_t_base* %vec_, %struct.VEC_vinsn_t_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_base** %vec_.addr, metadata !14358, metadata !DIExpression()), !dbg !14359
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !14360, metadata !DIExpression()), !dbg !14359
  store i32 %len_, i32* %len_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len_.addr, metadata !14361, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.declare(metadata %struct.vinsn_def*** %slot_, metadata !14362, metadata !DIExpression()), !dbg !14359
  %0 = load i32, i32* %ix_.addr, align 4, !dbg !14359
  %1 = load i32, i32* %len_.addr, align 4, !dbg !14359
  %add = add i32 %0, %1, !dbg !14359
  %2 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !14359
  %num = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %2, i32 0, i32 0, !dbg !14359
  %3 = load i32, i32* %num, align 8, !dbg !14359
  %cmp = icmp ule i32 %add, %3, !dbg !14359
  %conv = zext i1 %cmp to i32, !dbg !14359
  %4 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !14359
  %vec = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %4, i32 0, i32 2, !dbg !14359
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !14359
  %idxprom = zext i32 %5 to i64, !dbg !14359
  %arrayidx = getelementptr inbounds [1 x %struct.vinsn_def*], [1 x %struct.vinsn_def*]* %vec, i64 0, i64 %idxprom, !dbg !14359
  store %struct.vinsn_def** %arrayidx, %struct.vinsn_def*** %slot_, align 8, !dbg !14359
  %6 = load i32, i32* %len_.addr, align 4, !dbg !14359
  %7 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !14359
  %num1 = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %7, i32 0, i32 0, !dbg !14359
  %8 = load i32, i32* %num1, align 8, !dbg !14359
  %sub = sub i32 %8, %6, !dbg !14359
  store i32 %sub, i32* %num1, align 8, !dbg !14359
  %9 = load %struct.vinsn_def**, %struct.vinsn_def*** %slot_, align 8, !dbg !14359
  %10 = bitcast %struct.vinsn_def** %9 to i8*, !dbg !14359
  %11 = load %struct.vinsn_def**, %struct.vinsn_def*** %slot_, align 8, !dbg !14359
  %12 = load i32, i32* %len_.addr, align 4, !dbg !14359
  %idx.ext = zext i32 %12 to i64, !dbg !14359
  %add.ptr = getelementptr inbounds %struct.vinsn_def*, %struct.vinsn_def** %11, i64 %idx.ext, !dbg !14359
  %13 = bitcast %struct.vinsn_def** %add.ptr to i8*, !dbg !14359
  %14 = load %struct.VEC_vinsn_t_base*, %struct.VEC_vinsn_t_base** %vec_.addr, align 8, !dbg !14359
  %num2 = getelementptr inbounds %struct.VEC_vinsn_t_base, %struct.VEC_vinsn_t_base* %14, i32 0, i32 0, !dbg !14359
  %15 = load i32, i32* %num2, align 8, !dbg !14359
  %16 = load i32, i32* %ix_.addr, align 4, !dbg !14359
  %sub3 = sub i32 %15, %16, !dbg !14359
  %conv4 = zext i32 %sub3 to i64, !dbg !14359
  %mul = mul i64 %conv4, 8, !dbg !14359
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %13, i64 %mul, i1 false), !dbg !14359
  ret void, !dbg !14359
}

declare dso_local void @move_fence_to_fences(%struct._list_node*, %struct.flist_tail_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @extract_new_fences_from(%struct._list_node* %old_fences, %struct.flist_tail_def* %new_fences, i32 %orig_max_seqno) #0 !dbg !14363 {
entry:
  %old_fences.addr = alloca %struct._list_node*, align 8
  %new_fences.addr = alloca %struct.flist_tail_def*, align 8
  %orig_max_seqno.addr = alloca i32, align 4
  %was_here_p = alloca i8, align 1
  %insn = alloca %struct.rtx_def*, align 8
  %succ = alloca %struct.rtx_def*, align 8
  %si = alloca %struct.succ_iterator, align 8
  %ii = alloca %struct._list_iterator, align 8
  %fence = alloca %struct._fence*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %succ20 = alloca %struct.rtx_def*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %tmp = alloca %struct.succ_iterator, align 8
  %seqno158 = alloca i32, align 4
  %b = alloca i8, align 1
  %__j224 = alloca i32, align 4
  %__s245 = alloca i8*, align 8
  store %struct._list_node* %old_fences, %struct._list_node** %old_fences.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %old_fences.addr, metadata !14366, metadata !DIExpression()), !dbg !14367
  store %struct.flist_tail_def* %new_fences, %struct.flist_tail_def** %new_fences.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.flist_tail_def** %new_fences.addr, metadata !14368, metadata !DIExpression()), !dbg !14369
  store i32 %orig_max_seqno, i32* %orig_max_seqno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %orig_max_seqno.addr, metadata !14370, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.declare(metadata i8* %was_here_p, metadata !14372, metadata !DIExpression()), !dbg !14373
  store i8 0, i8* %was_here_p, align 1, !dbg !14373
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !14374, metadata !DIExpression()), !dbg !14375
  store %struct.rtx_def* null, %struct.rtx_def** %insn, align 8, !dbg !14375
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %succ, metadata !14376, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.declare(metadata %struct.succ_iterator* %si, metadata !14378, metadata !DIExpression()), !dbg !14379
  call void @llvm.dbg.declare(metadata %struct._list_iterator* %ii, metadata !14380, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.declare(metadata %struct._fence** %fence, metadata !14382, metadata !DIExpression()), !dbg !14383
  %0 = load %struct._list_node*, %struct._list_node** %old_fences.addr, align 8, !dbg !14384
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %0, i32 0, i32 1, !dbg !14384
  %fence1 = bitcast %union.anon.0* %u to %struct._fence*, !dbg !14384
  store %struct._fence* %fence1, %struct._fence** %fence, align 8, !dbg !14383
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !14385, metadata !DIExpression()), !dbg !14386
  %1 = load %struct._fence*, %struct._fence** %fence, align 8, !dbg !14387
  %bnds = getelementptr inbounds %struct._fence, %struct._fence* %1, i32 0, i32 4, !dbg !14387
  call void @_list_iter_start(%struct._list_iterator* %ii, %struct._list_node** %bnds, i8 zeroext 0), !dbg !14387
  br label %for.cond, !dbg !14387

for.cond:                                         ; preds = %for.inc, %entry
  %lp = getelementptr inbounds %struct._list_iterator, %struct._list_iterator* %ii, i32 0, i32 0, !dbg !14389
  %2 = load %struct._list_node**, %struct._list_node*** %lp, align 8, !dbg !14389
  %3 = load %struct._list_node*, %struct._list_node** %2, align 8, !dbg !14389
  %call = call zeroext i8 @_list_iter_cond_x(%struct._list_node* %3, %struct.rtx_def** %insn), !dbg !14389
  %tobool = icmp ne i8 %call, 0, !dbg !14387
  br i1 %tobool, label %for.body, label %for.end, !dbg !14387

for.body:                                         ; preds = %for.cond
  %4 = load i8, i8* %was_here_p, align 1, !dbg !14391
  %tobool2 = icmp ne i8 %4, 0, !dbg !14391
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !14391

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 650, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !14391
  br label %cond.end, !dbg !14391

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !14391

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !14391
  store i8 1, i8* %was_here_p, align 1, !dbg !14393
  br label %for.inc, !dbg !14394

for.inc:                                          ; preds = %cond.end
  call void @_list_iter_next(%struct._list_iterator* %ii), !dbg !14389
  br label %for.cond, !dbg !14389, !llvm.loop !14395

for.end:                                          ; preds = %for.cond
  %5 = load i8, i8* %was_here_p, align 1, !dbg !14397
  %conv = zext i8 %5 to i32, !dbg !14397
  %tobool3 = icmp ne i32 %conv, 0, !dbg !14397
  br i1 %tobool3, label %land.lhs.true, label %cond.true5, !dbg !14397

land.lhs.true:                                    ; preds = %for.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14397
  %cmp = icmp ne %struct.rtx_def* %6, null, !dbg !14397
  br i1 %cmp, label %cond.false6, label %cond.true5, !dbg !14397

cond.true5:                                       ; preds = %land.lhs.true, %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 653, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !14397
  br label %cond.end7, !dbg !14397

cond.false6:                                      ; preds = %land.lhs.true
  br label %cond.end7, !dbg !14397

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ 0, %cond.true5 ], [ 0, %cond.false6 ], !dbg !14397
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14398
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !14398
  %fld = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !14398
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !14398
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !14398
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !14398
  store %struct.basic_block_def* %8, %struct.basic_block_def** %bb, align 8, !dbg !14399
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14400
  %call10 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %9), !dbg !14402
  %tobool11 = icmp ne i8 %call10, 0, !dbg !14402
  br i1 %tobool11, label %lor.lhs.false, label %if.then, !dbg !14403

lor.lhs.false:                                    ; preds = %cond.end7
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14404
  %call12 = call zeroext i8 @single_succ_p(%struct.basic_block_def* %10), !dbg !14405
  %conv13 = zext i8 %call12 to i32, !dbg !14405
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !14405
  br i1 %tobool14, label %land.lhs.true15, label %if.end153, !dbg !14406

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14407
  %call16 = call %struct.basic_block_def* @single_succ(%struct.basic_block_def* %11), !dbg !14408
  %call17 = call zeroext i8 @single_pred_p(%struct.basic_block_def* %call16), !dbg !14409
  %conv18 = zext i8 %call17 to i32, !dbg !14409
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !14409
  br i1 %tobool19, label %if.then, label %if.end153, !dbg !14410

if.then:                                          ; preds = %land.lhs.true15, %cond.end7
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %succ20, metadata !14411, metadata !DIExpression()), !dbg !14413
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14414
  %call21 = call zeroext i8 @sel_bb_end_p(%struct.rtx_def* %12), !dbg !14415
  %conv22 = zext i8 %call21 to i32, !dbg !14415
  %tobool23 = icmp ne i32 %conv22, 0, !dbg !14415
  br i1 %tobool23, label %cond.true24, label %cond.false27, !dbg !14415

cond.true24:                                      ; preds = %if.then
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14416
  %call25 = call %struct.basic_block_def* @single_succ(%struct.basic_block_def* %13), !dbg !14417
  %call26 = call %struct.rtx_def* @sel_bb_head(%struct.basic_block_def* %call25), !dbg !14418
  br label %cond.end31, !dbg !14415

cond.false27:                                     ; preds = %if.then
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14419
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !14419
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !14419
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 2, !dbg !14419
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !14419
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !14419
  br label %cond.end31, !dbg !14415

cond.end31:                                       ; preds = %cond.false27, %cond.true24
  %cond32 = phi %struct.rtx_def* [ %call26, %cond.true24 ], [ %15, %cond.false27 ], !dbg !14415
  store %struct.rtx_def* %cond32, %struct.rtx_def** %succ20, align 8, !dbg !14420
  %16 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14421
  %tobool33 = icmp ne %struct.VEC_sel_insn_data_def_heap* %16, null, !dbg !14421
  br i1 %tobool33, label %cond.true34, label %cond.false35, !dbg !14421

cond.true34:                                      ; preds = %cond.end31
  %17 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14421
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %17, i32 0, i32 0, !dbg !14421
  br label %cond.end36, !dbg !14421

cond.false35:                                     ; preds = %cond.end31
  br label %cond.end36, !dbg !14421

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond37 = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true34 ], [ null, %cond.false35 ], !dbg !14421
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14421
  %tobool38 = icmp ne %struct.VEC_int_heap* %18, null, !dbg !14421
  br i1 %tobool38, label %cond.true39, label %cond.false41, !dbg !14421

cond.true39:                                      ; preds = %cond.end36
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14421
  %base40 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i32 0, i32 0, !dbg !14421
  br label %cond.end42, !dbg !14421

cond.false41:                                     ; preds = %cond.end36
  br label %cond.end42, !dbg !14421

cond.end42:                                       ; preds = %cond.false41, %cond.true39
  %cond43 = phi %struct.VEC_int_base* [ %base40, %cond.true39 ], [ null, %cond.false41 ], !dbg !14421
  %20 = load %struct.rtx_def*, %struct.rtx_def** %succ20, align 8, !dbg !14421
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !14421
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !14421
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 0, !dbg !14421
  %rt_int = bitcast %union.rtunion_def* %arrayidx46 to i32*, !dbg !14421
  %21 = load i32, i32* %rt_int, align 8, !dbg !14421
  %call47 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond43, i32 %21), !dbg !14421
  %call48 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond37, i32 %call47), !dbg !14421
  %seqno = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call48, i32 0, i32 2, !dbg !14421
  %22 = load i32, i32* %seqno, align 4, !dbg !14421
  %cmp49 = icmp sgt i32 %22, 0, !dbg !14423
  br i1 %cmp49, label %land.lhs.true51, label %if.end152, !dbg !14424

land.lhs.true51:                                  ; preds = %cond.end42
  %23 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14425
  %tobool52 = icmp ne %struct.VEC_sel_insn_data_def_heap* %23, null, !dbg !14425
  br i1 %tobool52, label %cond.true53, label %cond.false55, !dbg !14425

cond.true53:                                      ; preds = %land.lhs.true51
  %24 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14425
  %base54 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %24, i32 0, i32 0, !dbg !14425
  br label %cond.end56, !dbg !14425

cond.false55:                                     ; preds = %land.lhs.true51
  br label %cond.end56, !dbg !14425

cond.end56:                                       ; preds = %cond.false55, %cond.true53
  %cond57 = phi %struct.VEC_sel_insn_data_def_base* [ %base54, %cond.true53 ], [ null, %cond.false55 ], !dbg !14425
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14425
  %tobool58 = icmp ne %struct.VEC_int_heap* %25, null, !dbg !14425
  br i1 %tobool58, label %cond.true59, label %cond.false61, !dbg !14425

cond.true59:                                      ; preds = %cond.end56
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14425
  %base60 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %26, i32 0, i32 0, !dbg !14425
  br label %cond.end62, !dbg !14425

cond.false61:                                     ; preds = %cond.end56
  br label %cond.end62, !dbg !14425

cond.end62:                                       ; preds = %cond.false61, %cond.true59
  %cond63 = phi %struct.VEC_int_base* [ %base60, %cond.true59 ], [ null, %cond.false61 ], !dbg !14425
  %27 = load %struct.rtx_def*, %struct.rtx_def** %succ20, align 8, !dbg !14425
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !14425
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !14425
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 0, !dbg !14425
  %rt_int67 = bitcast %union.rtunion_def* %arrayidx66 to i32*, !dbg !14425
  %28 = load i32, i32* %rt_int67, align 8, !dbg !14425
  %call68 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond63, i32 %28), !dbg !14425
  %call69 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond57, i32 %call68), !dbg !14425
  %seqno70 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call69, i32 0, i32 2, !dbg !14425
  %29 = load i32, i32* %seqno70, align 4, !dbg !14425
  %30 = load i32, i32* %orig_max_seqno.addr, align 4, !dbg !14426
  %cmp71 = icmp sle i32 %29, %30, !dbg !14427
  br i1 %cmp71, label %land.lhs.true73, label %if.end152, !dbg !14428

land.lhs.true73:                                  ; preds = %cond.end62
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14429
  %tobool74 = icmp ne %struct.VEC_sel_insn_data_def_heap* %31, null, !dbg !14429
  br i1 %tobool74, label %cond.true75, label %cond.false77, !dbg !14429

cond.true75:                                      ; preds = %land.lhs.true73
  %32 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14429
  %base76 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %32, i32 0, i32 0, !dbg !14429
  br label %cond.end78, !dbg !14429

cond.false77:                                     ; preds = %land.lhs.true73
  br label %cond.end78, !dbg !14429

cond.end78:                                       ; preds = %cond.false77, %cond.true75
  %cond79 = phi %struct.VEC_sel_insn_data_def_base* [ %base76, %cond.true75 ], [ null, %cond.false77 ], !dbg !14429
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14429
  %tobool80 = icmp ne %struct.VEC_int_heap* %33, null, !dbg !14429
  br i1 %tobool80, label %cond.true81, label %cond.false83, !dbg !14429

cond.true81:                                      ; preds = %cond.end78
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14429
  %base82 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %34, i32 0, i32 0, !dbg !14429
  br label %cond.end84, !dbg !14429

cond.false83:                                     ; preds = %cond.end78
  br label %cond.end84, !dbg !14429

cond.end84:                                       ; preds = %cond.false83, %cond.true81
  %cond85 = phi %struct.VEC_int_base* [ %base82, %cond.true81 ], [ null, %cond.false83 ], !dbg !14429
  %35 = load %struct.rtx_def*, %struct.rtx_def** %succ20, align 8, !dbg !14429
  %u86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !14429
  %fld87 = bitcast %union.u* %u86 to [1 x %union.rtunion_def]*, !dbg !14429
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i64 0, i64 0, !dbg !14429
  %rt_int89 = bitcast %union.rtunion_def* %arrayidx88 to i32*, !dbg !14429
  %36 = load i32, i32* %rt_int89, align 8, !dbg !14429
  %call90 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond85, i32 %36), !dbg !14429
  %call91 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond79, i32 %call90), !dbg !14429
  %expr = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call91, i32 0, i32 0, !dbg !14429
  %sched_times = getelementptr inbounds %struct._expr, %struct._expr* %expr, i32 0, i32 5, !dbg !14429
  %37 = load i32, i32* %sched_times, align 8, !dbg !14429
  %cmp92 = icmp sle i32 %37, 0, !dbg !14430
  br i1 %cmp92, label %if.then94, label %if.end152, !dbg !14431

if.then94:                                        ; preds = %cond.end84
  %38 = load %struct.rtx_def*, %struct.rtx_def** %succ20, align 8, !dbg !14432
  %39 = load %struct._fence*, %struct._fence** %fence, align 8, !dbg !14434
  %insn95 = getelementptr inbounds %struct._fence, %struct._fence* %39, i32 0, i32 0, !dbg !14434
  store %struct.rtx_def* %38, %struct.rtx_def** %insn95, align 8, !dbg !14435
  %40 = load %struct._list_node*, %struct._list_node** %old_fences.addr, align 8, !dbg !14436
  %41 = load %struct.flist_tail_def*, %struct.flist_tail_def** %new_fences.addr, align 8, !dbg !14437
  call void @move_fence_to_fences(%struct._list_node* %40, %struct.flist_tail_def* %41), !dbg !14438
  %42 = load i32, i32* @sched_verbose, align 4, !dbg !14439
  %cmp96 = icmp sge i32 %42, 1, !dbg !14441
  br i1 %cmp96, label %if.then98, label %if.end151, !dbg !14442

if.then98:                                        ; preds = %if.then94
  br label %do.body, !dbg !14443

do.body:                                          ; preds = %if.then98
  %43 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !14444
  %tobool99 = icmp ne i8 %43, 0, !dbg !14444
  br i1 %tobool99, label %if.then100, label %if.else, !dbg !14447

if.then100:                                       ; preds = %do.body
  br label %do.body101, !dbg !14444

do.body101:                                       ; preds = %if.then100
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !14448, metadata !DIExpression()), !dbg !14450
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14450
  %u102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !14450
  %fld103 = bitcast %union.u* %u102 to [1 x %union.rtunion_def]*, !dbg !14450
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i64 0, i64 0, !dbg !14450
  %rt_int105 = bitcast %union.rtunion_def* %arrayidx104 to i32*, !dbg !14450
  %45 = load i32, i32* %rt_int105, align 8, !dbg !14450
  %46 = load %struct.rtx_def*, %struct.rtx_def** %succ20, align 8, !dbg !14450
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !14450
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !14450
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 0, !dbg !14450
  %rt_int109 = bitcast %union.rtunion_def* %arrayidx108 to i32*, !dbg !14450
  %47 = load i32, i32* %rt_int109, align 8, !dbg !14450
  %48 = load %struct.rtx_def*, %struct.rtx_def** %succ20, align 8, !dbg !14450
  %u110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !14450
  %fld111 = bitcast %union.u* %u110 to [1 x %union.rtunion_def]*, !dbg !14450
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i64 0, i64 3, !dbg !14450
  %rt_bb113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.basic_block_def**, !dbg !14450
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb113, align 8, !dbg !14450
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i32 0, i32 9, !dbg !14450
  %50 = load i32, i32* %index, align 8, !dbg !14450
  %add = add nsw i32 %50, 0, !dbg !14450
  %call114 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.81, i64 0, i64 0), i32 %45, i32 %47, i32 %add), !dbg !14450
  %mul = mul nsw i32 2, %call114, !dbg !14450
  %add115 = add nsw i32 1, %mul, !dbg !14450
  store i32 %add115, i32* %__j, align 4, !dbg !14450
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !14451, metadata !DIExpression()), !dbg !14450
  %51 = load i32, i32* %__j, align 4, !dbg !14450
  %conv116 = sext i32 %51 to i64, !dbg !14450
  %mul117 = mul i64 1, %conv116, !dbg !14450
  %52 = alloca i8, i64 %mul117, align 16, !dbg !14450
  store i8* %52, i8** %__s, align 8, !dbg !14450
  %53 = load i8*, i8** %__s, align 8, !dbg !14450
  %54 = load i32, i32* %__j, align 4, !dbg !14450
  %conv118 = sext i32 %54 to i64, !dbg !14450
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14450
  %u119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !14450
  %fld120 = bitcast %union.u* %u119 to [1 x %union.rtunion_def]*, !dbg !14450
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i64 0, i64 0, !dbg !14450
  %rt_int122 = bitcast %union.rtunion_def* %arrayidx121 to i32*, !dbg !14450
  %56 = load i32, i32* %rt_int122, align 8, !dbg !14450
  %57 = load %struct.rtx_def*, %struct.rtx_def** %succ20, align 8, !dbg !14450
  %u123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !14450
  %fld124 = bitcast %union.u* %u123 to [1 x %union.rtunion_def]*, !dbg !14450
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i64 0, i64 0, !dbg !14450
  %rt_int126 = bitcast %union.rtunion_def* %arrayidx125 to i32*, !dbg !14450
  %58 = load i32, i32* %rt_int126, align 8, !dbg !14450
  %59 = load %struct.rtx_def*, %struct.rtx_def** %succ20, align 8, !dbg !14450
  %u127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !14450
  %fld128 = bitcast %union.u* %u127 to [1 x %union.rtunion_def]*, !dbg !14450
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i64 0, i64 3, !dbg !14450
  %rt_bb130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.basic_block_def**, !dbg !14450
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb130, align 8, !dbg !14450
  %index131 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %60, i32 0, i32 9, !dbg !14450
  %61 = load i32, i32* %index131, align 8, !dbg !14450
  %add132 = add nsw i32 %61, 0, !dbg !14450
  %call133 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %53, i64 %conv118, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.81, i64 0, i64 0), i32 %56, i32 %58, i32 %add132), !dbg !14450
  %62 = load i8*, i8** %__s, align 8, !dbg !14450
  call void @sel_prepare_string_for_dot_label(i8* %62), !dbg !14450
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14450
  %64 = load i8*, i8** %__s, align 8, !dbg !14450
  %call134 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %64), !dbg !14450
  br label %do.end, !dbg !14450

do.end:                                           ; preds = %do.body101
  br label %if.end, !dbg !14450

if.else:                                          ; preds = %do.body
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14444
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14444
  %u135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !14444
  %fld136 = bitcast %union.u* %u135 to [1 x %union.rtunion_def]*, !dbg !14444
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i64 0, i64 0, !dbg !14444
  %rt_int138 = bitcast %union.rtunion_def* %arrayidx137 to i32*, !dbg !14444
  %67 = load i32, i32* %rt_int138, align 8, !dbg !14444
  %68 = load %struct.rtx_def*, %struct.rtx_def** %succ20, align 8, !dbg !14444
  %u139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !14444
  %fld140 = bitcast %union.u* %u139 to [1 x %union.rtunion_def]*, !dbg !14444
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i64 0, i64 0, !dbg !14444
  %rt_int142 = bitcast %union.rtunion_def* %arrayidx141 to i32*, !dbg !14444
  %69 = load i32, i32* %rt_int142, align 8, !dbg !14444
  %70 = load %struct.rtx_def*, %struct.rtx_def** %succ20, align 8, !dbg !14444
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !14444
  %fld144 = bitcast %union.u* %u143 to [1 x %union.rtunion_def]*, !dbg !14444
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i64 0, i64 3, !dbg !14444
  %rt_bb146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.basic_block_def**, !dbg !14444
  %71 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb146, align 8, !dbg !14444
  %index147 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %71, i32 0, i32 9, !dbg !14444
  %72 = load i32, i32* %index147, align 8, !dbg !14444
  %add148 = add nsw i32 %72, 0, !dbg !14444
  %call149 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.81, i64 0, i64 0), i32 %67, i32 %69, i32 %add148), !dbg !14444
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end150, !dbg !14447

do.end150:                                        ; preds = %if.end
  br label %if.end151, !dbg !14447

if.end151:                                        ; preds = %do.end150, %if.then94
  br label %if.end152, !dbg !14452

if.end152:                                        ; preds = %if.end151, %cond.end84, %cond.end62, %cond.end42
  br label %for.end304, !dbg !14453

if.end153:                                        ; preds = %land.lhs.true15, %lor.lhs.false
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14454
  call void @_succ_iter_start(%struct.succ_iterator* sret %tmp, %struct.rtx_def** %succ, %struct.rtx_def* %73, i32 9), !dbg !14454
  %74 = bitcast %struct.succ_iterator* %si to i8*, !dbg !14454
  %75 = bitcast %struct.succ_iterator* %tmp to i8*, !dbg !14454
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 64, i1 false), !dbg !14454
  br label %for.cond154, !dbg !14454

for.cond154:                                      ; preds = %for.inc303, %if.end153
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14456
  %call155 = call zeroext i8 @_succ_iter_cond(%struct.succ_iterator* %si, %struct.rtx_def** %succ, %struct.rtx_def* %76, i8 (%struct.edge_def*, %struct.succ_iterator*)* @_eligible_successor_edge_p), !dbg !14456
  %tobool156 = icmp ne i8 %call155, 0, !dbg !14454
  br i1 %tobool156, label %for.body157, label %for.end304, !dbg !14454

for.body157:                                      ; preds = %for.cond154
  call void @llvm.dbg.declare(metadata i32* %seqno158, metadata !14458, metadata !DIExpression()), !dbg !14460
  %77 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14461
  %tobool159 = icmp ne %struct.VEC_sel_insn_data_def_heap* %77, null, !dbg !14461
  br i1 %tobool159, label %cond.true160, label %cond.false162, !dbg !14461

cond.true160:                                     ; preds = %for.body157
  %78 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14461
  %base161 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %78, i32 0, i32 0, !dbg !14461
  br label %cond.end163, !dbg !14461

cond.false162:                                    ; preds = %for.body157
  br label %cond.end163, !dbg !14461

cond.end163:                                      ; preds = %cond.false162, %cond.true160
  %cond164 = phi %struct.VEC_sel_insn_data_def_base* [ %base161, %cond.true160 ], [ null, %cond.false162 ], !dbg !14461
  %79 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14461
  %tobool165 = icmp ne %struct.VEC_int_heap* %79, null, !dbg !14461
  br i1 %tobool165, label %cond.true166, label %cond.false168, !dbg !14461

cond.true166:                                     ; preds = %cond.end163
  %80 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14461
  %base167 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %80, i32 0, i32 0, !dbg !14461
  br label %cond.end169, !dbg !14461

cond.false168:                                    ; preds = %cond.end163
  br label %cond.end169, !dbg !14461

cond.end169:                                      ; preds = %cond.false168, %cond.true166
  %cond170 = phi %struct.VEC_int_base* [ %base167, %cond.true166 ], [ null, %cond.false168 ], !dbg !14461
  %81 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14461
  %u171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !14461
  %fld172 = bitcast %union.u* %u171 to [1 x %union.rtunion_def]*, !dbg !14461
  %arrayidx173 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld172, i64 0, i64 0, !dbg !14461
  %rt_int174 = bitcast %union.rtunion_def* %arrayidx173 to i32*, !dbg !14461
  %82 = load i32, i32* %rt_int174, align 8, !dbg !14461
  %call175 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond170, i32 %82), !dbg !14461
  %call176 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond164, i32 %call175), !dbg !14461
  %seqno177 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call176, i32 0, i32 2, !dbg !14461
  %83 = load i32, i32* %seqno177, align 4, !dbg !14461
  store i32 %83, i32* %seqno158, align 4, !dbg !14460
  %84 = load i32, i32* %seqno158, align 4, !dbg !14462
  %cmp178 = icmp slt i32 0, %84, !dbg !14464
  br i1 %cmp178, label %land.lhs.true180, label %if.end302, !dbg !14465

land.lhs.true180:                                 ; preds = %cond.end169
  %85 = load i32, i32* %seqno158, align 4, !dbg !14466
  %86 = load i32, i32* %orig_max_seqno.addr, align 4, !dbg !14467
  %cmp181 = icmp sle i32 %85, %86, !dbg !14468
  br i1 %cmp181, label %land.lhs.true183, label %if.end302, !dbg !14469

land.lhs.true183:                                 ; preds = %land.lhs.true180
  %87 = load i8, i8* @pipelining_p, align 1, !dbg !14470
  %conv184 = zext i8 %87 to i32, !dbg !14470
  %tobool185 = icmp ne i32 %conv184, 0, !dbg !14470
  br i1 %tobool185, label %if.then209, label %lor.lhs.false186, !dbg !14471

lor.lhs.false186:                                 ; preds = %land.lhs.true183
  %88 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14472
  %tobool187 = icmp ne %struct.VEC_sel_insn_data_def_heap* %88, null, !dbg !14472
  br i1 %tobool187, label %cond.true188, label %cond.false190, !dbg !14472

cond.true188:                                     ; preds = %lor.lhs.false186
  %89 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14472
  %base189 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %89, i32 0, i32 0, !dbg !14472
  br label %cond.end191, !dbg !14472

cond.false190:                                    ; preds = %lor.lhs.false186
  br label %cond.end191, !dbg !14472

cond.end191:                                      ; preds = %cond.false190, %cond.true188
  %cond192 = phi %struct.VEC_sel_insn_data_def_base* [ %base189, %cond.true188 ], [ null, %cond.false190 ], !dbg !14472
  %90 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14472
  %tobool193 = icmp ne %struct.VEC_int_heap* %90, null, !dbg !14472
  br i1 %tobool193, label %cond.true194, label %cond.false196, !dbg !14472

cond.true194:                                     ; preds = %cond.end191
  %91 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14472
  %base195 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %91, i32 0, i32 0, !dbg !14472
  br label %cond.end197, !dbg !14472

cond.false196:                                    ; preds = %cond.end191
  br label %cond.end197, !dbg !14472

cond.end197:                                      ; preds = %cond.false196, %cond.true194
  %cond198 = phi %struct.VEC_int_base* [ %base195, %cond.true194 ], [ null, %cond.false196 ], !dbg !14472
  %92 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14472
  %u199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !14472
  %fld200 = bitcast %union.u* %u199 to [1 x %union.rtunion_def]*, !dbg !14472
  %arrayidx201 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld200, i64 0, i64 0, !dbg !14472
  %rt_int202 = bitcast %union.rtunion_def* %arrayidx201 to i32*, !dbg !14472
  %93 = load i32, i32* %rt_int202, align 8, !dbg !14472
  %call203 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond198, i32 %93), !dbg !14472
  %call204 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond192, i32 %call203), !dbg !14472
  %expr205 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call204, i32 0, i32 0, !dbg !14472
  %sched_times206 = getelementptr inbounds %struct._expr, %struct._expr* %expr205, i32 0, i32 5, !dbg !14472
  %94 = load i32, i32* %sched_times206, align 8, !dbg !14472
  %cmp207 = icmp sle i32 %94, 0, !dbg !14473
  br i1 %cmp207, label %if.then209, label %if.end302, !dbg !14474

if.then209:                                       ; preds = %cond.end197, %land.lhs.true183
  call void @llvm.dbg.declare(metadata i8* %b, metadata !14475, metadata !DIExpression()), !dbg !14477
  %95 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14478
  %96 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14479
  %call210 = call zeroext i8 @in_same_ebb_p(%struct.rtx_def* %95, %struct.rtx_def* %96), !dbg !14480
  %conv211 = zext i8 %call210 to i32, !dbg !14480
  %tobool212 = icmp ne i32 %conv211, 0, !dbg !14480
  br i1 %tobool212, label %lor.end, label %lor.rhs, !dbg !14481

lor.rhs:                                          ; preds = %if.then209
  %97 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14482
  %98 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14483
  %call213 = call zeroext i8 @in_fallthru_bb_p(%struct.rtx_def* %97, %struct.rtx_def* %98), !dbg !14484
  %conv214 = zext i8 %call213 to i32, !dbg !14484
  %tobool215 = icmp ne i32 %conv214, 0, !dbg !14481
  br label %lor.end, !dbg !14481

lor.end:                                          ; preds = %lor.rhs, %if.then209
  %99 = phi i1 [ true, %if.then209 ], [ %tobool215, %lor.rhs ]
  %lor.ext = zext i1 %99 to i32, !dbg !14481
  %conv216 = trunc i32 %lor.ext to i8, !dbg !14485
  store i8 %conv216, i8* %b, align 1, !dbg !14477
  %100 = load i32, i32* @sched_verbose, align 4, !dbg !14486
  %cmp217 = icmp sge i32 %100, 1, !dbg !14488
  br i1 %cmp217, label %if.then219, label %if.end290, !dbg !14489

if.then219:                                       ; preds = %lor.end
  br label %do.body220, !dbg !14490

do.body220:                                       ; preds = %if.then219
  %101 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !14491
  %tobool221 = icmp ne i8 %101, 0, !dbg !14491
  br i1 %tobool221, label %if.then222, label %if.else269, !dbg !14494

if.then222:                                       ; preds = %do.body220
  br label %do.body223, !dbg !14491

do.body223:                                       ; preds = %if.then222
  call void @llvm.dbg.declare(metadata i32* %__j224, metadata !14495, metadata !DIExpression()), !dbg !14497
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14497
  %u225 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !14497
  %fld226 = bitcast %union.u* %u225 to [1 x %union.rtunion_def]*, !dbg !14497
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i64 0, i64 0, !dbg !14497
  %rt_int228 = bitcast %union.rtunion_def* %arrayidx227 to i32*, !dbg !14497
  %103 = load i32, i32* %rt_int228, align 8, !dbg !14497
  %104 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14497
  %u229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1, !dbg !14497
  %fld230 = bitcast %union.u* %u229 to [1 x %union.rtunion_def]*, !dbg !14497
  %arrayidx231 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld230, i64 0, i64 0, !dbg !14497
  %rt_int232 = bitcast %union.rtunion_def* %arrayidx231 to i32*, !dbg !14497
  %105 = load i32, i32* %rt_int232, align 8, !dbg !14497
  %106 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14497
  %u233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1, !dbg !14497
  %fld234 = bitcast %union.u* %u233 to [1 x %union.rtunion_def]*, !dbg !14497
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i64 0, i64 3, !dbg !14497
  %rt_bb236 = bitcast %union.rtunion_def* %arrayidx235 to %struct.basic_block_def**, !dbg !14497
  %107 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb236, align 8, !dbg !14497
  %index237 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %107, i32 0, i32 9, !dbg !14497
  %108 = load i32, i32* %index237, align 8, !dbg !14497
  %add238 = add nsw i32 %108, 0, !dbg !14497
  %109 = load i8, i8* %b, align 1, !dbg !14497
  %conv239 = zext i8 %109 to i32, !dbg !14497
  %tobool240 = icmp ne i32 %conv239, 0, !dbg !14497
  %110 = zext i1 %tobool240 to i64, !dbg !14497
  %cond241 = select i1 %tobool240, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), !dbg !14497
  %call242 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.82, i64 0, i64 0), i32 %103, i32 %105, i32 %add238, i8* %cond241), !dbg !14497
  %mul243 = mul nsw i32 2, %call242, !dbg !14497
  %add244 = add nsw i32 1, %mul243, !dbg !14497
  store i32 %add244, i32* %__j224, align 4, !dbg !14497
  call void @llvm.dbg.declare(metadata i8** %__s245, metadata !14498, metadata !DIExpression()), !dbg !14497
  %111 = load i32, i32* %__j224, align 4, !dbg !14497
  %conv246 = sext i32 %111 to i64, !dbg !14497
  %mul247 = mul i64 1, %conv246, !dbg !14497
  %112 = alloca i8, i64 %mul247, align 16, !dbg !14497
  store i8* %112, i8** %__s245, align 8, !dbg !14497
  %113 = load i8*, i8** %__s245, align 8, !dbg !14497
  %114 = load i32, i32* %__j224, align 4, !dbg !14497
  %conv248 = sext i32 %114 to i64, !dbg !14497
  %115 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14497
  %u249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1, !dbg !14497
  %fld250 = bitcast %union.u* %u249 to [1 x %union.rtunion_def]*, !dbg !14497
  %arrayidx251 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld250, i64 0, i64 0, !dbg !14497
  %rt_int252 = bitcast %union.rtunion_def* %arrayidx251 to i32*, !dbg !14497
  %116 = load i32, i32* %rt_int252, align 8, !dbg !14497
  %117 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14497
  %u253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1, !dbg !14497
  %fld254 = bitcast %union.u* %u253 to [1 x %union.rtunion_def]*, !dbg !14497
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i64 0, i64 0, !dbg !14497
  %rt_int256 = bitcast %union.rtunion_def* %arrayidx255 to i32*, !dbg !14497
  %118 = load i32, i32* %rt_int256, align 8, !dbg !14497
  %119 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14497
  %u257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1, !dbg !14497
  %fld258 = bitcast %union.u* %u257 to [1 x %union.rtunion_def]*, !dbg !14497
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i64 0, i64 3, !dbg !14497
  %rt_bb260 = bitcast %union.rtunion_def* %arrayidx259 to %struct.basic_block_def**, !dbg !14497
  %120 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb260, align 8, !dbg !14497
  %index261 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %120, i32 0, i32 9, !dbg !14497
  %121 = load i32, i32* %index261, align 8, !dbg !14497
  %add262 = add nsw i32 %121, 0, !dbg !14497
  %122 = load i8, i8* %b, align 1, !dbg !14497
  %conv263 = zext i8 %122 to i32, !dbg !14497
  %tobool264 = icmp ne i32 %conv263, 0, !dbg !14497
  %123 = zext i1 %tobool264 to i64, !dbg !14497
  %cond265 = select i1 %tobool264, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), !dbg !14497
  %call266 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %113, i64 %conv248, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.82, i64 0, i64 0), i32 %116, i32 %118, i32 %add262, i8* %cond265), !dbg !14497
  %124 = load i8*, i8** %__s245, align 8, !dbg !14497
  call void @sel_prepare_string_for_dot_label(i8* %124), !dbg !14497
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14497
  %126 = load i8*, i8** %__s245, align 8, !dbg !14497
  %call267 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %125, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %126), !dbg !14497
  br label %do.end268, !dbg !14497

do.end268:                                        ; preds = %do.body223
  br label %if.end288, !dbg !14497

if.else269:                                       ; preds = %do.body220
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14491
  %128 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14491
  %u270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1, !dbg !14491
  %fld271 = bitcast %union.u* %u270 to [1 x %union.rtunion_def]*, !dbg !14491
  %arrayidx272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld271, i64 0, i64 0, !dbg !14491
  %rt_int273 = bitcast %union.rtunion_def* %arrayidx272 to i32*, !dbg !14491
  %129 = load i32, i32* %rt_int273, align 8, !dbg !14491
  %130 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14491
  %u274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !14491
  %fld275 = bitcast %union.u* %u274 to [1 x %union.rtunion_def]*, !dbg !14491
  %arrayidx276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld275, i64 0, i64 0, !dbg !14491
  %rt_int277 = bitcast %union.rtunion_def* %arrayidx276 to i32*, !dbg !14491
  %131 = load i32, i32* %rt_int277, align 8, !dbg !14491
  %132 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14491
  %u278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1, !dbg !14491
  %fld279 = bitcast %union.u* %u278 to [1 x %union.rtunion_def]*, !dbg !14491
  %arrayidx280 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld279, i64 0, i64 3, !dbg !14491
  %rt_bb281 = bitcast %union.rtunion_def* %arrayidx280 to %struct.basic_block_def**, !dbg !14491
  %133 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb281, align 8, !dbg !14491
  %index282 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %133, i32 0, i32 9, !dbg !14491
  %134 = load i32, i32* %index282, align 8, !dbg !14491
  %add283 = add nsw i32 %134, 0, !dbg !14491
  %135 = load i8, i8* %b, align 1, !dbg !14491
  %conv284 = zext i8 %135 to i32, !dbg !14491
  %tobool285 = icmp ne i32 %conv284, 0, !dbg !14491
  %136 = zext i1 %tobool285 to i64, !dbg !14491
  %cond286 = select i1 %tobool285, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), !dbg !14491
  %call287 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.82, i64 0, i64 0), i32 %129, i32 %131, i32 %add283, i8* %cond286), !dbg !14491
  br label %if.end288

if.end288:                                        ; preds = %if.else269, %do.end268
  br label %do.end289, !dbg !14494

do.end289:                                        ; preds = %if.end288
  br label %if.end290, !dbg !14494

if.end290:                                        ; preds = %do.end289, %lor.end
  %137 = load i8, i8* %b, align 1, !dbg !14499
  %tobool291 = icmp ne i8 %137, 0, !dbg !14499
  br i1 %tobool291, label %if.then292, label %if.else293, !dbg !14501

if.then292:                                       ; preds = %if.end290
  %138 = load %struct.flist_tail_def*, %struct.flist_tail_def** %new_fences.addr, align 8, !dbg !14502
  %139 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14503
  %140 = load %struct._fence*, %struct._fence** %fence, align 8, !dbg !14504
  call void @add_dirty_fence_to_fences(%struct.flist_tail_def* %138, %struct.rtx_def* %139, %struct._fence* %140), !dbg !14505
  br label %if.end301, !dbg !14505

if.else293:                                       ; preds = %if.end290
  %141 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @forced_ebb_heads, align 8, !dbg !14506
  %142 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14508
  %u294 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1, !dbg !14508
  %fld295 = bitcast %union.u* %u294 to [1 x %union.rtunion_def]*, !dbg !14508
  %arrayidx296 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld295, i64 0, i64 3, !dbg !14508
  %rt_bb297 = bitcast %union.rtunion_def* %arrayidx296 to %struct.basic_block_def**, !dbg !14508
  %143 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb297, align 8, !dbg !14508
  %index298 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %143, i32 0, i32 9, !dbg !14508
  %144 = load i32, i32* %index298, align 8, !dbg !14508
  %add299 = add nsw i32 %144, 0, !dbg !14508
  %call300 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %141, i32 %add299), !dbg !14509
  %145 = load %struct.flist_tail_def*, %struct.flist_tail_def** %new_fences.addr, align 8, !dbg !14510
  %146 = load %struct.rtx_def*, %struct.rtx_def** %succ, align 8, !dbg !14511
  %147 = load %struct._fence*, %struct._fence** %fence, align 8, !dbg !14512
  call void @add_clean_fence_to_fences(%struct.flist_tail_def* %145, %struct.rtx_def* %146, %struct._fence* %147), !dbg !14513
  br label %if.end301

if.end301:                                        ; preds = %if.else293, %if.then292
  br label %if.end302, !dbg !14514

if.end302:                                        ; preds = %if.end301, %cond.end197, %land.lhs.true180, %cond.end169
  br label %for.inc303, !dbg !14515

for.inc303:                                       ; preds = %if.end302
  call void @_succ_iter_next(%struct.succ_iterator* %si), !dbg !14456
  br label %for.cond154, !dbg !14456, !llvm.loop !14516

for.end304:                                       ; preds = %if.end152, %for.cond154
  ret void, !dbg !14518
}

declare dso_local void @flist_clear(%struct._list_node**) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_list_iter_cond_x(%struct._list_node* %l, %struct.rtx_def** %xp) #0 !dbg !14519 {
entry:
  %retval = alloca i8, align 1
  %l.addr = alloca %struct._list_node*, align 8
  %xp.addr = alloca %struct.rtx_def**, align 8
  store %struct._list_node* %l, %struct._list_node** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._list_node** %l.addr, metadata !14522, metadata !DIExpression()), !dbg !14523
  store %struct.rtx_def** %xp, %struct.rtx_def*** %xp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %xp.addr, metadata !14524, metadata !DIExpression()), !dbg !14525
  %0 = load %struct._list_node*, %struct._list_node** %l.addr, align 8, !dbg !14526
  %tobool = icmp ne %struct._list_node* %0, null, !dbg !14526
  br i1 %tobool, label %if.then, label %if.end, !dbg !14528

if.then:                                          ; preds = %entry
  %1 = load %struct._list_node*, %struct._list_node** %l.addr, align 8, !dbg !14529
  %u = getelementptr inbounds %struct._list_node, %struct._list_node* %1, i32 0, i32 1, !dbg !14529
  %x = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !14529
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !14529
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %xp.addr, align 8, !dbg !14531
  store %struct.rtx_def* %2, %struct.rtx_def** %3, align 8, !dbg !14532
  store i8 1, i8* %retval, align 1, !dbg !14533
  br label %return, !dbg !14533

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !14534
  br label %return, !dbg !14534

return:                                           ; preds = %if.end, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !14535
  ret i8 %4, !dbg !14535
}

declare dso_local zeroext i8 @in_same_ebb_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @in_fallthru_bb_p(%struct.rtx_def* %insn, %struct.rtx_def* %succ) #0 !dbg !14536 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %succ.addr = alloca %struct.rtx_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !14537, metadata !DIExpression()), !dbg !14538
  store %struct.rtx_def* %succ, %struct.rtx_def** %succ.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %succ.addr, metadata !14539, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !14541, metadata !DIExpression()), !dbg !14542
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14543
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !14543
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14543
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !14543
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !14543
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !14543
  store %struct.basic_block_def* %1, %struct.basic_block_def** %bb, align 8, !dbg !14542
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14544
  %3 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8, !dbg !14546
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !14546
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !14546
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 3, !dbg !14546
  %rt_bb4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.basic_block_def**, !dbg !14546
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb4, align 8, !dbg !14546
  %cmp = icmp eq %struct.basic_block_def* %2, %4, !dbg !14547
  br i1 %cmp, label %if.then, label %if.end, !dbg !14548

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !14549
  br label %return, !dbg !14549

if.end:                                           ; preds = %entry
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14550
  %call = call %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def* %5), !dbg !14552
  %tobool = icmp ne %struct.edge_def* %call, null, !dbg !14552
  br i1 %tobool, label %if.then5, label %if.else, !dbg !14553

if.then5:                                         ; preds = %if.end
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14554
  %call6 = call %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def* %6), !dbg !14555
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call6, i32 0, i32 1, !dbg !14556
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !14556
  store %struct.basic_block_def* %7, %struct.basic_block_def** %bb, align 8, !dbg !14557
  br label %if.end7, !dbg !14558

if.else:                                          ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !14559
  br label %return, !dbg !14559

if.end7:                                          ; preds = %if.then5
  br label %while.cond, !dbg !14560

while.cond:                                       ; preds = %while.body, %if.end7
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14561
  %call8 = call zeroext i8 @sel_bb_empty_p(%struct.basic_block_def* %8), !dbg !14562
  %tobool9 = icmp ne i8 %call8, 0, !dbg !14560
  br i1 %tobool9, label %while.body, label %while.end, !dbg !14560

while.body:                                       ; preds = %while.cond
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14563
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 6, !dbg !14564
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !14564
  store %struct.basic_block_def* %10, %struct.basic_block_def** %bb, align 8, !dbg !14565
  br label %while.cond, !dbg !14560, !llvm.loop !14566

while.end:                                        ; preds = %while.cond
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14567
  %12 = load %struct.rtx_def*, %struct.rtx_def** %succ.addr, align 8, !dbg !14568
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !14568
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !14568
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 3, !dbg !14568
  %rt_bb13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.basic_block_def**, !dbg !14568
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb13, align 8, !dbg !14568
  %cmp14 = icmp eq %struct.basic_block_def* %11, %13, !dbg !14569
  %conv = zext i1 %cmp14 to i32, !dbg !14569
  %conv15 = trunc i32 %conv to i8, !dbg !14567
  store i8 %conv15, i8* %retval, align 1, !dbg !14570
  br label %return, !dbg !14570

return:                                           ; preds = %while.end, %if.else, %if.then
  %14 = load i8, i8* %retval, align 1, !dbg !14571
  ret i8 %14, !dbg !14571
}

declare dso_local void @add_dirty_fence_to_fences(%struct.flist_tail_def*, %struct.rtx_def*, %struct._fence*) #2

declare dso_local void @add_clean_fence_to_fences(%struct.flist_tail_def*, %struct.rtx_def*, %struct._fence*) #2

declare dso_local void @free_data_for_scheduled_insn(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @simplify_changed_insns() #0 !dbg !14572 {
entry:
  %i = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %expr = alloca %struct._expr*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14573, metadata !DIExpression()), !dbg !14574
  store i32 0, i32* %i, align 4, !dbg !14575
  br label %for.cond, !dbg !14577

for.cond:                                         ; preds = %for.inc53, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14578
  %1 = load i32, i32* @current_nr_blocks, align 4, !dbg !14580
  %cmp = icmp slt i32 %0, %1, !dbg !14581
  br i1 %cmp, label %for.body, label %for.end54, !dbg !14582

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !14583, metadata !DIExpression()), !dbg !14585
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !14586
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, !dbg !14586
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !14586
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !14586
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i32 0, i32 2, !dbg !14586
  %4 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !14586
  %tobool = icmp ne %struct.VEC_basic_block_gc* %4, null, !dbg !14586
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14586

cond.true:                                        ; preds = %for.body
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !14586
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !14586
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !14586
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !14586
  %x_basic_block_info3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 2, !dbg !14586
  %7 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info3, align 8, !dbg !14586
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %7, i32 0, i32 0, !dbg !14586
  br label %cond.end, !dbg !14586

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !14586

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !14586
  %8 = load i32*, i32** @rgn_bb_table, align 8, !dbg !14586
  %9 = load i32*, i32** @ebb_head, align 8, !dbg !14586
  %10 = load i32, i32* %i, align 4, !dbg !14586
  %idxprom = sext i32 %10 to i64, !dbg !14586
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !14586
  %11 = load i32, i32* %arrayidx, align 4, !dbg !14586
  %idxprom4 = sext i32 %11 to i64, !dbg !14586
  %arrayidx5 = getelementptr inbounds i32, i32* %8, i64 %idxprom4, !dbg !14586
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !14586
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %12), !dbg !14586
  store %struct.basic_block_def* %call, %struct.basic_block_def** %bb, align 8, !dbg !14585
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !14587, metadata !DIExpression()), !dbg !14588
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14589
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 7, !dbg !14589
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !14589
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !14589
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i32 0, i32 0, !dbg !14589
  %15 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !14589
  store %struct.rtx_def* %15, %struct.rtx_def** %insn, align 8, !dbg !14589
  br label %for.cond6, !dbg !14589

for.cond6:                                        ; preds = %for.inc, %cond.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14591
  %tobool7 = icmp ne %struct.rtx_def* %16, null, !dbg !14591
  br i1 %tobool7, label %land.rhs, label %land.end, !dbg !14591

land.rhs:                                         ; preds = %for.cond6
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14591
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !14591
  %il8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i32 0, i32 7, !dbg !14591
  %rtl9 = bitcast %union.basic_block_il_dependent* %il8 to %struct.rtl_bb_info**, !dbg !14591
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !14591
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i32 0, i32 1, !dbg !14591
  %20 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !14591
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !14591
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14591
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !14591
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !14591
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !14591
  %cmp11 = icmp ne %struct.rtx_def* %17, %21, !dbg !14591
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond6
  %22 = phi i1 [ false, %for.cond6 ], [ %cmp11, %land.rhs ], !dbg !14593
  br i1 %22, label %for.body12, label %for.end, !dbg !14589

for.body12:                                       ; preds = %land.end
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14594
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !14594
  %bf.load = load i32, i32* %24, align 8, !dbg !14594
  %bf.clear = and i32 %bf.load, 65535, !dbg !14594
  %cmp13 = icmp eq i32 %bf.clear, 8, !dbg !14594
  br i1 %cmp13, label %if.then, label %lor.lhs.false, !dbg !14594

lor.lhs.false:                                    ; preds = %for.body12
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14594
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !14594
  %bf.load14 = load i32, i32* %26, align 8, !dbg !14594
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !14594
  %cmp16 = icmp eq i32 %bf.clear15, 7, !dbg !14594
  br i1 %cmp16, label %if.then, label %lor.lhs.false17, !dbg !14594

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14594
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !14594
  %bf.load18 = load i32, i32* %28, align 8, !dbg !14594
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !14594
  %cmp20 = icmp eq i32 %bf.clear19, 9, !dbg !14594
  br i1 %cmp20, label %if.then, label %lor.lhs.false21, !dbg !14594

lor.lhs.false21:                                  ; preds = %lor.lhs.false17
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14594
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !14594
  %bf.load22 = load i32, i32* %30, align 8, !dbg !14594
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !14594
  %cmp24 = icmp eq i32 %bf.clear23, 10, !dbg !14594
  br i1 %cmp24, label %if.then, label %if.end48, !dbg !14596

if.then:                                          ; preds = %lor.lhs.false21, %lor.lhs.false17, %lor.lhs.false, %for.body12
  call void @llvm.dbg.declare(metadata %struct._expr** %expr, metadata !14597, metadata !DIExpression()), !dbg !14599
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14600
  %tobool25 = icmp ne %struct.VEC_sel_insn_data_def_heap* %31, null, !dbg !14600
  br i1 %tobool25, label %cond.true26, label %cond.false28, !dbg !14600

cond.true26:                                      ; preds = %if.then
  %32 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14600
  %base27 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %32, i32 0, i32 0, !dbg !14600
  br label %cond.end29, !dbg !14600

cond.false28:                                     ; preds = %if.then
  br label %cond.end29, !dbg !14600

cond.end29:                                       ; preds = %cond.false28, %cond.true26
  %cond30 = phi %struct.VEC_sel_insn_data_def_base* [ %base27, %cond.true26 ], [ null, %cond.false28 ], !dbg !14600
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14600
  %tobool31 = icmp ne %struct.VEC_int_heap* %33, null, !dbg !14600
  br i1 %tobool31, label %cond.true32, label %cond.false34, !dbg !14600

cond.true32:                                      ; preds = %cond.end29
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14600
  %base33 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %34, i32 0, i32 0, !dbg !14600
  br label %cond.end35, !dbg !14600

cond.false34:                                     ; preds = %cond.end29
  br label %cond.end35, !dbg !14600

cond.end35:                                       ; preds = %cond.false34, %cond.true32
  %cond36 = phi %struct.VEC_int_base* [ %base33, %cond.true32 ], [ null, %cond.false34 ], !dbg !14600
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14600
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !14600
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !14600
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 0, !dbg !14600
  %rt_int = bitcast %union.rtunion_def* %arrayidx39 to i32*, !dbg !14600
  %36 = load i32, i32* %rt_int, align 8, !dbg !14600
  %call40 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond36, i32 %36), !dbg !14600
  %call41 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond30, i32 %call40), !dbg !14600
  %expr42 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call41, i32 0, i32 0, !dbg !14600
  store %struct._expr* %expr42, %struct._expr** %expr, align 8, !dbg !14599
  %37 = load %struct._expr*, %struct._expr** %expr, align 8, !dbg !14601
  %was_substituted = getelementptr inbounds %struct._expr, %struct._expr* %37, i32 0, i32 12, !dbg !14601
  %bf.load43 = load i8, i8* %was_substituted, align 1, !dbg !14601
  %bf.lshr = lshr i8 %bf.load43, 1, !dbg !14601
  %bf.clear44 = and i8 %bf.lshr, 1, !dbg !14601
  %bf.cast = zext i8 %bf.clear44 to i32, !dbg !14601
  %tobool45 = icmp ne i32 %bf.cast, 0, !dbg !14601
  br i1 %tobool45, label %if.then46, label %if.end, !dbg !14603

if.then46:                                        ; preds = %cond.end35
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14604
  %call47 = call zeroext i8 @validate_simplify_insn(%struct.rtx_def* %38), !dbg !14605
  br label %if.end, !dbg !14605

if.end:                                           ; preds = %if.then46, %cond.end35
  br label %if.end48, !dbg !14606

if.end48:                                         ; preds = %if.end, %lor.lhs.false21
  br label %for.inc, !dbg !14594

for.inc:                                          ; preds = %if.end48
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14591
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !14591
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !14591
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 2, !dbg !14591
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !14591
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !14591
  store %struct.rtx_def* %40, %struct.rtx_def** %insn, align 8, !dbg !14591
  br label %for.cond6, !dbg !14591, !llvm.loop !14607

for.end:                                          ; preds = %land.end
  br label %for.inc53, !dbg !14609

for.inc53:                                        ; preds = %for.end
  %41 = load i32, i32* %i, align 4, !dbg !14610
  %inc = add nsw i32 %41, 1, !dbg !14610
  store i32 %inc, i32* %i, align 4, !dbg !14610
  br label %for.cond, !dbg !14611, !llvm.loop !14612

for.end54:                                        ; preds = %for.cond
  ret void, !dbg !14614
}

declare dso_local void @sched_finish_ready_list() #2

declare dso_local void @free_nop_pool() #2

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_expr_t_heap_free(%struct.VEC_expr_t_heap** %vec_) #0 !dbg !14615 {
entry:
  %vec_.addr = alloca %struct.VEC_expr_t_heap**, align 8
  store %struct.VEC_expr_t_heap** %vec_, %struct.VEC_expr_t_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_expr_t_heap*** %vec_.addr, metadata !14618, metadata !DIExpression()), !dbg !14619
  %0 = load %struct.VEC_expr_t_heap**, %struct.VEC_expr_t_heap*** %vec_.addr, align 8, !dbg !14620
  %1 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** %0, align 8, !dbg !14620
  %tobool = icmp ne %struct.VEC_expr_t_heap* %1, null, !dbg !14620
  br i1 %tobool, label %if.then, label %if.end, !dbg !14619

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_expr_t_heap**, %struct.VEC_expr_t_heap*** %vec_.addr, align 8, !dbg !14620
  %3 = load %struct.VEC_expr_t_heap*, %struct.VEC_expr_t_heap** %2, align 8, !dbg !14620
  %4 = bitcast %struct.VEC_expr_t_heap* %3 to i8*, !dbg !14620
  call void @free(i8* %4), !dbg !14620
  br label %if.end, !dbg !14620

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_expr_t_heap**, %struct.VEC_expr_t_heap*** %vec_.addr, align 8, !dbg !14619
  store %struct.VEC_expr_t_heap* null, %struct.VEC_expr_t_heap** %5, align 8, !dbg !14619
  ret void, !dbg !14619
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vinsn_vec_free(%struct.VEC_vinsn_t_heap** %vinsn_vec) #0 !dbg !14622 {
entry:
  %vinsn_vec.addr = alloca %struct.VEC_vinsn_t_heap**, align 8
  store %struct.VEC_vinsn_t_heap** %vinsn_vec, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, metadata !14623, metadata !DIExpression()), !dbg !14624
  %0 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8, !dbg !14625
  %1 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %0, align 8, !dbg !14627
  %tobool = icmp ne %struct.VEC_vinsn_t_heap* %1, null, !dbg !14627
  br i1 %tobool, label %if.then, label %if.end, !dbg !14628

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vinsn_vec.addr, align 8, !dbg !14629
  call void @VEC_vinsn_t_heap_free(%struct.VEC_vinsn_t_heap** %2), !dbg !14629
  br label %if.end, !dbg !14629

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14630
}

; Function Attrs: noinline nounwind uwtable
define internal void @sel_region_target_finish(i8 zeroext %reset_sched_cycles_p) #0 !dbg !14631 {
entry:
  %reset_sched_cycles_p.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %scheduled_blocks = alloca %struct.bitmap_head_def*, align 8
  store i8 %reset_sched_cycles_p, i8* %reset_sched_cycles_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reset_sched_cycles_p.addr, metadata !14632, metadata !DIExpression()), !dbg !14633
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14634, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %scheduled_blocks, metadata !14636, metadata !DIExpression()), !dbg !14637
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !14638
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %scheduled_blocks, align 8, !dbg !14637
  store i32 0, i32* %i, align 4, !dbg !14639
  br label %for.cond, !dbg !14641

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14642
  %1 = load i32, i32* @current_nr_blocks, align 4, !dbg !14644
  %cmp = icmp slt i32 %0, %1, !dbg !14645
  br i1 %cmp, label %for.body, label %for.end, !dbg !14646

for.body:                                         ; preds = %for.cond
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %scheduled_blocks, align 8, !dbg !14647
  %3 = load i32, i32* %i, align 4, !dbg !14650
  %call1 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3), !dbg !14651
  %tobool = icmp ne i32 %call1, 0, !dbg !14651
  br i1 %tobool, label %if.then, label %if.end, !dbg !14652

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !14653

if.end:                                           ; preds = %for.body
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !14654
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !14654
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !14654
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !14654
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 2, !dbg !14654
  %6 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !14654
  %tobool2 = icmp ne %struct.VEC_basic_block_gc* %6, null, !dbg !14654
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !14654

cond.true:                                        ; preds = %if.end
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !14654
  %add.ptr3 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, !dbg !14654
  %cfg4 = getelementptr inbounds %struct.function, %struct.function* %add.ptr3, i32 0, i32 1, !dbg !14654
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4, align 8, !dbg !14654
  %x_basic_block_info5 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i32 0, i32 2, !dbg !14654
  %9 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info5, align 8, !dbg !14654
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %9, i32 0, i32 0, !dbg !14654
  br label %cond.end, !dbg !14654

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !14654

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !14654
  %10 = load i32*, i32** @rgn_bb_table, align 8, !dbg !14654
  %11 = load i32*, i32** @ebb_head, align 8, !dbg !14654
  %12 = load i32, i32* %i, align 4, !dbg !14654
  %idxprom = sext i32 %12 to i64, !dbg !14654
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom, !dbg !14654
  %13 = load i32, i32* %arrayidx, align 4, !dbg !14654
  %idxprom6 = sext i32 %13 to i64, !dbg !14654
  %arrayidx7 = getelementptr inbounds i32, i32* %10, i64 %idxprom6, !dbg !14654
  %14 = load i32, i32* %arrayidx7, align 4, !dbg !14654
  %call8 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %14), !dbg !14654
  %call9 = call zeroext i8 @sel_is_loop_preheader_p(%struct.basic_block_def* %call8), !dbg !14656
  %tobool10 = icmp ne i8 %call9, 0, !dbg !14656
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !14657

if.then11:                                        ; preds = %cond.end
  br label %for.inc, !dbg !14658

if.end12:                                         ; preds = %cond.end
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !14659
  %add.ptr13 = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, !dbg !14659
  %cfg14 = getelementptr inbounds %struct.function, %struct.function* %add.ptr13, i32 0, i32 1, !dbg !14659
  %16 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg14, align 8, !dbg !14659
  %x_basic_block_info15 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %16, i32 0, i32 2, !dbg !14659
  %17 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info15, align 8, !dbg !14659
  %tobool16 = icmp ne %struct.VEC_basic_block_gc* %17, null, !dbg !14659
  br i1 %tobool16, label %cond.true17, label %cond.false22, !dbg !14659

cond.true17:                                      ; preds = %if.end12
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !14659
  %add.ptr18 = getelementptr inbounds %struct.function, %struct.function* %18, i64 0, !dbg !14659
  %cfg19 = getelementptr inbounds %struct.function, %struct.function* %add.ptr18, i32 0, i32 1, !dbg !14659
  %19 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg19, align 8, !dbg !14659
  %x_basic_block_info20 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %19, i32 0, i32 2, !dbg !14659
  %20 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info20, align 8, !dbg !14659
  %base21 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %20, i32 0, i32 0, !dbg !14659
  br label %cond.end23, !dbg !14659

cond.false22:                                     ; preds = %if.end12
  br label %cond.end23, !dbg !14659

cond.end23:                                       ; preds = %cond.false22, %cond.true17
  %cond24 = phi %struct.VEC_basic_block_base* [ %base21, %cond.true17 ], [ null, %cond.false22 ], !dbg !14659
  %21 = load i32*, i32** @rgn_bb_table, align 8, !dbg !14659
  %22 = load i32*, i32** @ebb_head, align 8, !dbg !14659
  %23 = load i32, i32* %i, align 4, !dbg !14659
  %idxprom25 = sext i32 %23 to i64, !dbg !14659
  %arrayidx26 = getelementptr inbounds i32, i32* %22, i64 %idxprom25, !dbg !14659
  %24 = load i32, i32* %arrayidx26, align 4, !dbg !14659
  %idxprom27 = sext i32 %24 to i64, !dbg !14659
  %arrayidx28 = getelementptr inbounds i32, i32* %21, i64 %idxprom27, !dbg !14659
  %25 = load i32, i32* %arrayidx28, align 4, !dbg !14659
  %call29 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond24, i32 %25), !dbg !14659
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %scheduled_blocks, align 8, !dbg !14660
  call void @find_ebb_boundaries(%struct.basic_block_def* %call29, %struct.bitmap_head_def* %26), !dbg !14661
  %27 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !14662
  %head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %27, i32 0, i32 10, !dbg !14664
  %28 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !14664
  %29 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !14665
  %tail = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %29, i32 0, i32 11, !dbg !14666
  %30 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !14666
  %call30 = call i32 @no_real_insns_p(%struct.rtx_def* %28, %struct.rtx_def* %30), !dbg !14667
  %tobool31 = icmp ne i32 %call30, 0, !dbg !14667
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !14668

if.then32:                                        ; preds = %cond.end23
  br label %for.inc, !dbg !14669

if.end33:                                         ; preds = %cond.end23
  %31 = load i8, i8* %reset_sched_cycles_p.addr, align 1, !dbg !14670
  %tobool34 = icmp ne i8 %31, 0, !dbg !14670
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !14672

if.then35:                                        ; preds = %if.end33
  call void @reset_sched_cycles_in_current_ebb(), !dbg !14673
  br label %if.end36, !dbg !14673

if.end36:                                         ; preds = %if.then35, %if.end33
  %32 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 4), align 8, !dbg !14674
  %tobool37 = icmp ne void (%struct._IO_FILE*, i32, i32)* %32, null, !dbg !14676
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !14677

if.then38:                                        ; preds = %if.end36
  %33 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 4), align 8, !dbg !14678
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14679
  %35 = load i32, i32* @sched_verbose, align 4, !dbg !14680
  call void %33(%struct._IO_FILE* %34, i32 %35, i32 -1), !dbg !14681
  br label %if.end39, !dbg !14681

if.end39:                                         ; preds = %if.then38, %if.end36
  call void @put_TImodes(), !dbg !14682
  %36 = load void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 5), align 8, !dbg !14683
  %tobool40 = icmp ne void (%struct._IO_FILE*, i32)* %36, null, !dbg !14685
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !14686

if.then41:                                        ; preds = %if.end39
  %37 = load void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 5), align 8, !dbg !14687
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14689
  %39 = load i32, i32* @sched_verbose, align 4, !dbg !14690
  call void %37(%struct._IO_FILE* %38, i32 %39), !dbg !14691
  call void @sched_init_luids(%struct.VEC_basic_block_heap* null, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null), !dbg !14692
  br label %if.end42, !dbg !14693

if.end42:                                         ; preds = %if.then41, %if.end39
  br label %for.inc, !dbg !14694

for.inc:                                          ; preds = %if.end42, %if.then32, %if.then11, %if.then
  %40 = load i32, i32* %i, align 4, !dbg !14695
  %inc = add nsw i32 %40, 1, !dbg !14695
  store i32 %inc, i32* %i, align 4, !dbg !14695
  br label %for.cond, !dbg !14696, !llvm.loop !14697

for.end:                                          ; preds = %for.cond
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %scheduled_blocks, align 8, !dbg !14699
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %41), !dbg !14699
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %scheduled_blocks, align 8, !dbg !14699
  ret void, !dbg !14700
}

declare dso_local void @sel_finish_global_and_expr() #2

declare dso_local void @free_nop_vinsn() #2

declare dso_local void @finish_deps_global() #2

declare dso_local void @sched_finish_luids() #2

declare dso_local void @sel_finish_bbs() #2

declare dso_local void @sel_unregister_cfg_hooks() #2

declare dso_local zeroext i8 @validate_simplify_insn(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_vinsn_t_heap_free(%struct.VEC_vinsn_t_heap** %vec_) #0 !dbg !14701 {
entry:
  %vec_.addr = alloca %struct.VEC_vinsn_t_heap**, align 8
  store %struct.VEC_vinsn_t_heap** %vec_, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_vinsn_t_heap*** %vec_.addr, metadata !14704, metadata !DIExpression()), !dbg !14705
  %0 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8, !dbg !14706
  %1 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %0, align 8, !dbg !14706
  %tobool = icmp ne %struct.VEC_vinsn_t_heap* %1, null, !dbg !14706
  br i1 %tobool, label %if.then, label %if.end, !dbg !14705

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8, !dbg !14706
  %3 = load %struct.VEC_vinsn_t_heap*, %struct.VEC_vinsn_t_heap** %2, align 8, !dbg !14706
  %4 = bitcast %struct.VEC_vinsn_t_heap* %3 to i8*, !dbg !14706
  call void @free(i8* %4), !dbg !14706
  br label %if.end, !dbg !14706

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_vinsn_t_heap**, %struct.VEC_vinsn_t_heap*** %vec_.addr, align 8, !dbg !14705
  store %struct.VEC_vinsn_t_heap* null, %struct.VEC_vinsn_t_heap** %5, align 8, !dbg !14705
  ret void, !dbg !14705
}

; Function Attrs: noinline nounwind uwtable
define internal void @find_ebb_boundaries(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %scheduled_blocks) #0 !dbg !14708 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %scheduled_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  %bb1 = alloca %struct.basic_block_def*, align 8
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j19 = alloca i32, align 4
  %__s24 = alloca i8*, align 8
  %__j50 = alloca i32, align 4
  %__s54 = alloca i8*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !14711, metadata !DIExpression()), !dbg !14712
  store %struct.bitmap_head_def* %scheduled_blocks, %struct.bitmap_head_def** %scheduled_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %scheduled_blocks.addr, metadata !14713, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %head, metadata !14715, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tail, metadata !14717, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb1, metadata !14719, metadata !DIExpression()), !dbg !14720
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !14721
  store %struct.basic_block_def* %0, %struct.basic_block_def** %bb1, align 8, !dbg !14720
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !14722
  %cmp = icmp sge i32 %1, 2, !dbg !14724
  br i1 %cmp, label %if.then, label %if.end9, !dbg !14725

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14726

do.body:                                          ; preds = %if.then
  %2 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !14727
  %tobool = icmp ne i8 %2, 0, !dbg !14727
  br i1 %tobool, label %if.then1, label %if.else, !dbg !14730

if.then1:                                         ; preds = %do.body
  br label %do.body2, !dbg !14727

do.body2:                                         ; preds = %if.then1
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !14731, metadata !DIExpression()), !dbg !14733
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.85, i64 0, i64 0)), !dbg !14733
  %mul = mul nsw i32 2, %call, !dbg !14733
  %add = add nsw i32 1, %mul, !dbg !14733
  store i32 %add, i32* %__j, align 4, !dbg !14733
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !14734, metadata !DIExpression()), !dbg !14733
  %3 = load i32, i32* %__j, align 4, !dbg !14733
  %conv = sext i32 %3 to i64, !dbg !14733
  %mul3 = mul i64 1, %conv, !dbg !14733
  %4 = alloca i8, i64 %mul3, align 16, !dbg !14733
  store i8* %4, i8** %__s, align 8, !dbg !14733
  %5 = load i8*, i8** %__s, align 8, !dbg !14733
  %6 = load i32, i32* %__j, align 4, !dbg !14733
  %conv4 = sext i32 %6 to i64, !dbg !14733
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 %conv4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.85, i64 0, i64 0)), !dbg !14733
  %7 = load i8*, i8** %__s, align 8, !dbg !14733
  call void @sel_prepare_string_for_dot_label(i8* %7), !dbg !14733
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14733
  %9 = load i8*, i8** %__s, align 8, !dbg !14733
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %9), !dbg !14733
  br label %do.end, !dbg !14733

do.end:                                           ; preds = %do.body2
  br label %if.end, !dbg !14733

if.else:                                          ; preds = %do.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14727
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.85, i64 0, i64 0)), !dbg !14727
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.end8, !dbg !14730

do.end8:                                          ; preds = %if.end
  br label %if.end9, !dbg !14730

if.end9:                                          ; preds = %do.end8, %entry
  br label %do.body10, !dbg !14735

do.body10:                                        ; preds = %land.end, %if.end9
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %scheduled_blocks.addr, align 8, !dbg !14736
  %12 = load i32*, i32** @block_to_bb, align 8, !dbg !14738
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !14738
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 9, !dbg !14738
  %14 = load i32, i32* %index, align 8, !dbg !14738
  %idxprom = sext i32 %14 to i64, !dbg !14738
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !14738
  %15 = load i32, i32* %arrayidx, align 4, !dbg !14738
  %call11 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %11, i32 %15), !dbg !14739
  %16 = load i32, i32* @sched_verbose, align 4, !dbg !14740
  %cmp12 = icmp sge i32 %16, 2, !dbg !14742
  br i1 %cmp12, label %if.then14, label %if.end37, !dbg !14743

if.then14:                                        ; preds = %do.body10
  br label %do.body15, !dbg !14744

do.body15:                                        ; preds = %if.then14
  %17 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !14745
  %tobool16 = icmp ne i8 %17, 0, !dbg !14745
  br i1 %tobool16, label %if.then17, label %if.else32, !dbg !14748

if.then17:                                        ; preds = %do.body15
  br label %do.body18, !dbg !14745

do.body18:                                        ; preds = %if.then17
  call void @llvm.dbg.declare(metadata i32* %__j19, metadata !14749, metadata !DIExpression()), !dbg !14751
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !14751
  %index20 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i32 0, i32 9, !dbg !14751
  %19 = load i32, i32* %index20, align 8, !dbg !14751
  %call21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0), i32 %19), !dbg !14751
  %mul22 = mul nsw i32 2, %call21, !dbg !14751
  %add23 = add nsw i32 1, %mul22, !dbg !14751
  store i32 %add23, i32* %__j19, align 4, !dbg !14751
  call void @llvm.dbg.declare(metadata i8** %__s24, metadata !14752, metadata !DIExpression()), !dbg !14751
  %20 = load i32, i32* %__j19, align 4, !dbg !14751
  %conv25 = sext i32 %20 to i64, !dbg !14751
  %mul26 = mul i64 1, %conv25, !dbg !14751
  %21 = alloca i8, i64 %mul26, align 16, !dbg !14751
  store i8* %21, i8** %__s24, align 8, !dbg !14751
  %22 = load i8*, i8** %__s24, align 8, !dbg !14751
  %23 = load i32, i32* %__j19, align 4, !dbg !14751
  %conv27 = sext i32 %23 to i64, !dbg !14751
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !14751
  %index28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i32 0, i32 9, !dbg !14751
  %25 = load i32, i32* %index28, align 8, !dbg !14751
  %call29 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %22, i64 %conv27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0), i32 %25), !dbg !14751
  %26 = load i8*, i8** %__s24, align 8, !dbg !14751
  call void @sel_prepare_string_for_dot_label(i8* %26), !dbg !14751
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14751
  %28 = load i8*, i8** %__s24, align 8, !dbg !14751
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %28), !dbg !14751
  br label %do.end31, !dbg !14751

do.end31:                                         ; preds = %do.body18
  br label %if.end35, !dbg !14751

if.else32:                                        ; preds = %do.body15
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14745
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !14745
  %index33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i32 0, i32 9, !dbg !14745
  %31 = load i32, i32* %index33, align 8, !dbg !14745
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0), i32 %31), !dbg !14745
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %do.end31
  br label %do.end36, !dbg !14748

do.end36:                                         ; preds = %if.end35
  br label %if.end37, !dbg !14748

if.end37:                                         ; preds = %do.end36, %do.body10
  br label %do.cond, !dbg !14753

do.cond:                                          ; preds = %if.end37
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !14754
  %call38 = call zeroext i8 @bb_ends_ebb_p(%struct.basic_block_def* %32), !dbg !14755
  %tobool39 = icmp ne i8 %call38, 0, !dbg !14755
  br i1 %tobool39, label %land.end, label %land.rhs, !dbg !14756

land.rhs:                                         ; preds = %do.cond
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !14757
  %call40 = call %struct.basic_block_def* @bb_next_bb(%struct.basic_block_def* %33), !dbg !14758
  store %struct.basic_block_def* %call40, %struct.basic_block_def** %bb1, align 8, !dbg !14759
  %tobool41 = icmp ne %struct.basic_block_def* %call40, null, !dbg !14756
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %34 = phi i1 [ false, %do.cond ], [ %tobool41, %land.rhs ], !dbg !14760
  br i1 %34, label %do.body10, label %do.end42, !dbg !14753, !llvm.loop !14761

do.end42:                                         ; preds = %land.end
  %35 = load i32, i32* @sched_verbose, align 4, !dbg !14763
  %cmp43 = icmp sge i32 %35, 2, !dbg !14765
  br i1 %cmp43, label %if.then45, label %if.end67, !dbg !14766

if.then45:                                        ; preds = %do.end42
  br label %do.body46, !dbg !14767

do.body46:                                        ; preds = %if.then45
  %36 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !14768
  %tobool47 = icmp ne i8 %36, 0, !dbg !14768
  br i1 %tobool47, label %if.then48, label %if.else62, !dbg !14771

if.then48:                                        ; preds = %do.body46
  br label %do.body49, !dbg !14768

do.body49:                                        ; preds = %if.then48
  call void @llvm.dbg.declare(metadata i32* %__j50, metadata !14772, metadata !DIExpression()), !dbg !14774
  %call51 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !14774
  %mul52 = mul nsw i32 2, %call51, !dbg !14774
  %add53 = add nsw i32 1, %mul52, !dbg !14774
  store i32 %add53, i32* %__j50, align 4, !dbg !14774
  call void @llvm.dbg.declare(metadata i8** %__s54, metadata !14775, metadata !DIExpression()), !dbg !14774
  %37 = load i32, i32* %__j50, align 4, !dbg !14774
  %conv55 = sext i32 %37 to i64, !dbg !14774
  %mul56 = mul i64 1, %conv55, !dbg !14774
  %38 = alloca i8, i64 %mul56, align 16, !dbg !14774
  store i8* %38, i8** %__s54, align 8, !dbg !14774
  %39 = load i8*, i8** %__s54, align 8, !dbg !14774
  %40 = load i32, i32* %__j50, align 4, !dbg !14774
  %conv57 = sext i32 %40 to i64, !dbg !14774
  %call58 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %39, i64 %conv57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !14774
  %41 = load i8*, i8** %__s54, align 8, !dbg !14774
  call void @sel_prepare_string_for_dot_label(i8* %41), !dbg !14774
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14774
  %43 = load i8*, i8** %__s54, align 8, !dbg !14774
  %call59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %43), !dbg !14774
  br label %do.end61, !dbg !14774

do.end61:                                         ; preds = %do.body49
  br label %if.end64, !dbg !14774

if.else62:                                        ; preds = %do.body46
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14768
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)), !dbg !14768
  br label %if.end64

if.end64:                                         ; preds = %if.else62, %do.end61
  br label %do.end66, !dbg !14771

do.end66:                                         ; preds = %if.end64
  br label %if.end67, !dbg !14771

if.end67:                                         ; preds = %do.end66, %do.end42
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !14776
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !14777
  call void @get_ebb_head_tail(%struct.basic_block_def* %45, %struct.basic_block_def* %46, %struct.rtx_def** %head, %struct.rtx_def** %tail), !dbg !14778
  %47 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !14779
  %48 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !14780
  %head68 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %48, i32 0, i32 10, !dbg !14781
  store %struct.rtx_def* %47, %struct.rtx_def** %head68, align 8, !dbg !14782
  %49 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !14783
  %50 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !14784
  %tail69 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %50, i32 0, i32 11, !dbg !14785
  store %struct.rtx_def* %49, %struct.rtx_def** %tail69, align 8, !dbg !14786
  %51 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !14787
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !14787
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14787
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !14787
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !14787
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !14787
  %53 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !14788
  %prev_head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %53, i32 0, i32 8, !dbg !14789
  store %struct.rtx_def* %52, %struct.rtx_def** %prev_head, align 8, !dbg !14790
  %54 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !14791
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !14791
  %fld72 = bitcast %union.u* %u71 to [1 x %union.rtunion_def]*, !dbg !14791
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i64 0, i64 2, !dbg !14791
  %rt_rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !14791
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !14791
  %56 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !14792
  %next_tail = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %56, i32 0, i32 9, !dbg !14793
  store %struct.rtx_def* %55, %struct.rtx_def** %next_tail, align 8, !dbg !14794
  ret void, !dbg !14795
}

declare dso_local i32 @no_real_insns_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @reset_sched_cycles_in_current_ebb() #0 !dbg !14796 {
entry:
  %last_clock = alloca i32, align 4
  %haifa_last_clock = alloca i32, align 4
  %haifa_clock = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %cost = alloca i32, align 4
  %haifa_cost = alloca i32, align 4
  %sort_p = alloca i32, align 4
  %asm_p = alloca i8, align 1
  %real_insn = alloca i8, align 1
  %after_stall = alloca i8, align 1
  %clock = alloca i32, align 4
  %i = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  %__j133 = alloca i32, align 4
  %__s141 = alloca i8*, align 8
  %__j175 = alloca i32, align 4
  %__s179 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i32* %last_clock, metadata !14797, metadata !DIExpression()), !dbg !14798
  store i32 0, i32* %last_clock, align 4, !dbg !14798
  call void @llvm.dbg.declare(metadata i32* %haifa_last_clock, metadata !14799, metadata !DIExpression()), !dbg !14800
  store i32 -1, i32* %haifa_last_clock, align 4, !dbg !14800
  call void @llvm.dbg.declare(metadata i32* %haifa_clock, metadata !14801, metadata !DIExpression()), !dbg !14802
  store i32 0, i32* %haifa_clock, align 4, !dbg !14802
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !14803, metadata !DIExpression()), !dbg !14804
  %0 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 4), align 8, !dbg !14805
  %tobool = icmp ne void (%struct._IO_FILE*, i32, i32)* %0, null, !dbg !14807
  br i1 %tobool, label %if.then, label %if.end, !dbg !14808

if.then:                                          ; preds = %entry
  %1 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 4), align 8, !dbg !14809
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14811
  %3 = load i32, i32* @sched_verbose, align 4, !dbg !14812
  call void %1(%struct._IO_FILE* %2, i32 %3, i32 -1), !dbg !14813
  br label %if.end, !dbg !14814

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** @curr_state, align 8, !dbg !14815
  call void @state_reset(i8* %4), !dbg !14816
  %5 = load i8*, i8** @curr_state, align 8, !dbg !14817
  call void @advance_state(i8* %5), !dbg !14818
  %6 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !14819
  %head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %6, i32 0, i32 10, !dbg !14821
  %7 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !14821
  store %struct.rtx_def* %7, %struct.rtx_def** %insn, align 8, !dbg !14822
  br label %for.cond, !dbg !14823

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14824
  %9 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !14826
  %next_tail = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %9, i32 0, i32 9, !dbg !14827
  %10 = load %struct.rtx_def*, %struct.rtx_def** %next_tail, align 8, !dbg !14827
  %cmp = icmp ne %struct.rtx_def* %8, %10, !dbg !14828
  br i1 %cmp, label %for.body, label %for.end, !dbg !14829

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %cost, metadata !14830, metadata !DIExpression()), !dbg !14832
  call void @llvm.dbg.declare(metadata i32* %haifa_cost, metadata !14833, metadata !DIExpression()), !dbg !14834
  call void @llvm.dbg.declare(metadata i32* %sort_p, metadata !14835, metadata !DIExpression()), !dbg !14836
  call void @llvm.dbg.declare(metadata i8* %asm_p, metadata !14837, metadata !DIExpression()), !dbg !14838
  call void @llvm.dbg.declare(metadata i8* %real_insn, metadata !14839, metadata !DIExpression()), !dbg !14840
  call void @llvm.dbg.declare(metadata i8* %after_stall, metadata !14841, metadata !DIExpression()), !dbg !14842
  call void @llvm.dbg.declare(metadata i32* %clock, metadata !14843, metadata !DIExpression()), !dbg !14844
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14845
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !14845
  %bf.load = load i32, i32* %12, align 8, !dbg !14845
  %bf.clear = and i32 %bf.load, 65535, !dbg !14845
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !14845
  br i1 %cmp1, label %if.end14, label %lor.lhs.false, !dbg !14845

lor.lhs.false:                                    ; preds = %for.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14845
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !14845
  %bf.load2 = load i32, i32* %14, align 8, !dbg !14845
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !14845
  %cmp4 = icmp eq i32 %bf.clear3, 7, !dbg !14845
  br i1 %cmp4, label %if.end14, label %lor.lhs.false5, !dbg !14845

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14845
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !14845
  %bf.load6 = load i32, i32* %16, align 8, !dbg !14845
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !14845
  %cmp8 = icmp eq i32 %bf.clear7, 9, !dbg !14845
  br i1 %cmp8, label %if.end14, label %lor.lhs.false9, !dbg !14845

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14845
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !14845
  %bf.load10 = load i32, i32* %18, align 8, !dbg !14845
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !14845
  %cmp12 = icmp eq i32 %bf.clear11, 10, !dbg !14845
  br i1 %cmp12, label %if.end14, label %if.then13, !dbg !14847

if.then13:                                        ; preds = %lor.lhs.false9
  br label %for.inc, !dbg !14848

if.end14:                                         ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %for.body
  store i8 0, i8* %asm_p, align 1, !dbg !14849
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14850
  %call = call i32 @recog_memoized(%struct.rtx_def* %19), !dbg !14851
  %cmp15 = icmp sge i32 %call, 0, !dbg !14852
  %conv = zext i1 %cmp15 to i32, !dbg !14852
  %conv16 = trunc i32 %conv to i8, !dbg !14851
  store i8 %conv16, i8* %real_insn, align 1, !dbg !14853
  %20 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14854
  %tobool17 = icmp ne %struct.VEC_sel_insn_data_def_heap* %20, null, !dbg !14854
  br i1 %tobool17, label %cond.true, label %cond.false, !dbg !14854

cond.true:                                        ; preds = %if.end14
  %21 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14854
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %21, i32 0, i32 0, !dbg !14854
  br label %cond.end, !dbg !14854

cond.false:                                       ; preds = %if.end14
  br label %cond.end, !dbg !14854

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !14854
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14854
  %tobool18 = icmp ne %struct.VEC_int_heap* %22, null, !dbg !14854
  br i1 %tobool18, label %cond.true19, label %cond.false21, !dbg !14854

cond.true19:                                      ; preds = %cond.end
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14854
  %base20 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i32 0, i32 0, !dbg !14854
  br label %cond.end22, !dbg !14854

cond.false21:                                     ; preds = %cond.end
  br label %cond.end22, !dbg !14854

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi %struct.VEC_int_base* [ %base20, %cond.true19 ], [ null, %cond.false21 ], !dbg !14854
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14854
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !14854
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14854
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !14854
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !14854
  %25 = load i32, i32* %rt_int, align 8, !dbg !14854
  %call24 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond23, i32 %25), !dbg !14854
  %call25 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call24), !dbg !14854
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call25, i32 0, i32 10, !dbg !14854
  %26 = load i32, i32* %sched_cycle, align 8, !dbg !14854
  store i32 %26, i32* %clock, align 4, !dbg !14855
  %27 = load i32, i32* %clock, align 4, !dbg !14856
  %28 = load i32, i32* %last_clock, align 4, !dbg !14857
  %sub = sub nsw i32 %27, %28, !dbg !14858
  store i32 %sub, i32* %cost, align 4, !dbg !14859
  %29 = load i8, i8* %real_insn, align 1, !dbg !14860
  %tobool26 = icmp ne i8 %29, 0, !dbg !14860
  br i1 %tobool26, label %if.else53, label %if.then27, !dbg !14862

if.then27:                                        ; preds = %cond.end22
  %30 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14863
  %tobool28 = icmp ne %struct.VEC_sel_insn_data_def_heap* %30, null, !dbg !14863
  br i1 %tobool28, label %cond.true29, label %cond.false31, !dbg !14863

cond.true29:                                      ; preds = %if.then27
  %31 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14863
  %base30 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %31, i32 0, i32 0, !dbg !14863
  br label %cond.end32, !dbg !14863

cond.false31:                                     ; preds = %if.then27
  br label %cond.end32, !dbg !14863

cond.end32:                                       ; preds = %cond.false31, %cond.true29
  %cond33 = phi %struct.VEC_sel_insn_data_def_base* [ %base30, %cond.true29 ], [ null, %cond.false31 ], !dbg !14863
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14863
  %tobool34 = icmp ne %struct.VEC_int_heap* %32, null, !dbg !14863
  br i1 %tobool34, label %cond.true35, label %cond.false37, !dbg !14863

cond.true35:                                      ; preds = %cond.end32
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14863
  %base36 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %33, i32 0, i32 0, !dbg !14863
  br label %cond.end38, !dbg !14863

cond.false37:                                     ; preds = %cond.end32
  br label %cond.end38, !dbg !14863

cond.end38:                                       ; preds = %cond.false37, %cond.true35
  %cond39 = phi %struct.VEC_int_base* [ %base36, %cond.true35 ], [ null, %cond.false37 ], !dbg !14863
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14863
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !14863
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !14863
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 0, !dbg !14863
  %rt_int43 = bitcast %union.rtunion_def* %arrayidx42 to i32*, !dbg !14863
  %35 = load i32, i32* %rt_int43, align 8, !dbg !14863
  %call44 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond39, i32 %35), !dbg !14863
  %call45 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond33, i32 %call44), !dbg !14863
  %asm_p46 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call45, i32 0, i32 13, !dbg !14863
  %bf.load47 = load i8, i8* %asm_p46, align 4, !dbg !14863
  %bf.lshr = lshr i8 %bf.load47, 1, !dbg !14863
  %bf.clear48 = and i8 %bf.lshr, 1, !dbg !14863
  %bf.cast = zext i8 %bf.clear48 to i32, !dbg !14863
  %conv49 = trunc i32 %bf.cast to i8, !dbg !14863
  store i8 %conv49, i8* %asm_p, align 1, !dbg !14865
  %36 = load i8, i8* %asm_p, align 1, !dbg !14866
  %tobool50 = icmp ne i8 %36, 0, !dbg !14866
  br i1 %tobool50, label %if.then51, label %if.else, !dbg !14868

if.then51:                                        ; preds = %cond.end38
  store i32 1, i32* %haifa_cost, align 4, !dbg !14869
  br label %if.end52, !dbg !14870

if.else:                                          ; preds = %cond.end38
  store i32 0, i32* %haifa_cost, align 4, !dbg !14871
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then51
  br label %if.end55, !dbg !14872

if.else53:                                        ; preds = %cond.end22
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14873
  %38 = load i8*, i8** @curr_state, align 8, !dbg !14874
  %call54 = call i32 @estimate_insn_cost(%struct.rtx_def* %37, i8* %38), !dbg !14875
  store i32 %call54, i32* %haifa_cost, align 4, !dbg !14876
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.end52
  store i8 0, i8* %after_stall, align 1, !dbg !14877
  %39 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14878
  %tobool56 = icmp ne %struct.VEC_sel_insn_data_def_heap* %39, null, !dbg !14878
  br i1 %tobool56, label %cond.true57, label %cond.false59, !dbg !14878

cond.true57:                                      ; preds = %if.end55
  %40 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !14878
  %base58 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %40, i32 0, i32 0, !dbg !14878
  br label %cond.end60, !dbg !14878

cond.false59:                                     ; preds = %if.end55
  br label %cond.end60, !dbg !14878

cond.end60:                                       ; preds = %cond.false59, %cond.true57
  %cond61 = phi %struct.VEC_sel_insn_data_def_base* [ %base58, %cond.true57 ], [ null, %cond.false59 ], !dbg !14878
  %41 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14878
  %tobool62 = icmp ne %struct.VEC_int_heap* %41, null, !dbg !14878
  br i1 %tobool62, label %cond.true63, label %cond.false65, !dbg !14878

cond.true63:                                      ; preds = %cond.end60
  %42 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !14878
  %base64 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %42, i32 0, i32 0, !dbg !14878
  br label %cond.end66, !dbg !14878

cond.false65:                                     ; preds = %cond.end60
  br label %cond.end66, !dbg !14878

cond.end66:                                       ; preds = %cond.false65, %cond.true63
  %cond67 = phi %struct.VEC_int_base* [ %base64, %cond.true63 ], [ null, %cond.false65 ], !dbg !14878
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14878
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !14878
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !14878
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 0, !dbg !14878
  %rt_int71 = bitcast %union.rtunion_def* %arrayidx70 to i32*, !dbg !14878
  %44 = load i32, i32* %rt_int71, align 8, !dbg !14878
  %call72 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond67, i32 %44), !dbg !14878
  %call73 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond61, i32 %call72), !dbg !14878
  %after_stall_p = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call73, i32 0, i32 13, !dbg !14878
  %bf.load74 = load i8, i8* %after_stall_p, align 4, !dbg !14878
  %bf.lshr75 = lshr i8 %bf.load74, 2, !dbg !14878
  %bf.clear76 = and i8 %bf.lshr75, 1, !dbg !14878
  %bf.cast77 = zext i8 %bf.clear76 to i32, !dbg !14878
  %tobool78 = icmp ne i32 %bf.cast77, 0, !dbg !14878
  br i1 %tobool78, label %land.lhs.true, label %if.end82, !dbg !14880

land.lhs.true:                                    ; preds = %cond.end66
  %45 = load i32, i32* %cost, align 4, !dbg !14881
  %46 = load i32, i32* %haifa_cost, align 4, !dbg !14882
  %cmp79 = icmp sgt i32 %45, %46, !dbg !14883
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !14884

if.then81:                                        ; preds = %land.lhs.true
  %47 = load i32, i32* %cost, align 4, !dbg !14885
  store i32 %47, i32* %haifa_cost, align 4, !dbg !14887
  store i8 1, i8* %after_stall, align 1, !dbg !14888
  br label %if.end82, !dbg !14889

if.end82:                                         ; preds = %if.then81, %land.lhs.true, %cond.end66
  %48 = load i32, i32* %haifa_cost, align 4, !dbg !14890
  %cmp83 = icmp sgt i32 %48, 0, !dbg !14892
  br i1 %cmp83, label %if.then85, label %if.else118, !dbg !14893

if.then85:                                        ; preds = %if.end82
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14894, metadata !DIExpression()), !dbg !14896
  store i32 0, i32* %i, align 4, !dbg !14896
  br label %while.cond, !dbg !14897

while.cond:                                       ; preds = %if.end116, %if.then85
  %49 = load i32, i32* %haifa_cost, align 4, !dbg !14898
  %dec = add nsw i32 %49, -1, !dbg !14898
  store i32 %dec, i32* %haifa_cost, align 4, !dbg !14898
  %tobool86 = icmp ne i32 %49, 0, !dbg !14897
  br i1 %tobool86, label %while.body, label %while.end, !dbg !14897

while.body:                                       ; preds = %while.cond
  %50 = load i8*, i8** @curr_state, align 8, !dbg !14899
  call void @advance_state(i8* %50), !dbg !14901
  %51 = load i32, i32* %i, align 4, !dbg !14902
  %inc = add nsw i32 %51, 1, !dbg !14902
  store i32 %inc, i32* %i, align 4, !dbg !14902
  %52 = load i32, i32* @sched_verbose, align 4, !dbg !14903
  %cmp87 = icmp sge i32 %52, 2, !dbg !14905
  br i1 %cmp87, label %if.then89, label %if.end103, !dbg !14906

if.then89:                                        ; preds = %while.body
  br label %do.body, !dbg !14907

do.body:                                          ; preds = %if.then89
  %53 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !14909
  %tobool90 = icmp ne i8 %53, 0, !dbg !14909
  br i1 %tobool90, label %if.then91, label %if.else99, !dbg !14912

if.then91:                                        ; preds = %do.body
  br label %do.body92, !dbg !14909

do.body92:                                        ; preds = %if.then91
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !14913, metadata !DIExpression()), !dbg !14915
  %call93 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0)), !dbg !14915
  %mul = mul nsw i32 2, %call93, !dbg !14915
  %add = add nsw i32 1, %mul, !dbg !14915
  store i32 %add, i32* %__j, align 4, !dbg !14915
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !14916, metadata !DIExpression()), !dbg !14915
  %54 = load i32, i32* %__j, align 4, !dbg !14915
  %conv94 = sext i32 %54 to i64, !dbg !14915
  %mul95 = mul i64 1, %conv94, !dbg !14915
  %55 = alloca i8, i64 %mul95, align 16, !dbg !14915
  store i8* %55, i8** %__s, align 8, !dbg !14915
  %56 = load i8*, i8** %__s, align 8, !dbg !14915
  %57 = load i32, i32* %__j, align 4, !dbg !14915
  %conv96 = sext i32 %57 to i64, !dbg !14915
  %call97 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %56, i64 %conv96, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0)), !dbg !14915
  %58 = load i8*, i8** %__s, align 8, !dbg !14915
  call void @sel_prepare_string_for_dot_label(i8* %58), !dbg !14915
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14915
  %60 = load i8*, i8** %__s, align 8, !dbg !14915
  %call98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %60), !dbg !14915
  br label %do.end, !dbg !14915

do.end:                                           ; preds = %do.body92
  br label %if.end101, !dbg !14915

if.else99:                                        ; preds = %do.body
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14909
  %call100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0)), !dbg !14909
  br label %if.end101

if.end101:                                        ; preds = %if.else99, %do.end
  br label %do.end102, !dbg !14912

do.end102:                                        ; preds = %if.end101
  %62 = load i8*, i8** @curr_state, align 8, !dbg !14917
  call void @debug_state(i8* %62), !dbg !14918
  br label %if.end103, !dbg !14919

if.end103:                                        ; preds = %do.end102, %while.body
  %63 = load i8, i8* %after_stall, align 1, !dbg !14920
  %tobool104 = icmp ne i8 %63, 0, !dbg !14920
  br i1 %tobool104, label %if.end116, label %land.lhs.true105, !dbg !14922

land.lhs.true105:                                 ; preds = %if.end103
  %64 = load i8, i8* %real_insn, align 1, !dbg !14923
  %conv106 = zext i8 %64 to i32, !dbg !14923
  %tobool107 = icmp ne i32 %conv106, 0, !dbg !14923
  br i1 %tobool107, label %land.lhs.true108, label %if.end116, !dbg !14924

land.lhs.true108:                                 ; preds = %land.lhs.true105
  %65 = load i32, i32* %haifa_cost, align 4, !dbg !14925
  %cmp109 = icmp sgt i32 %65, 0, !dbg !14926
  br i1 %cmp109, label %land.lhs.true111, label %if.end116, !dbg !14927

land.lhs.true111:                                 ; preds = %land.lhs.true108
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14928
  %67 = load i8*, i8** @curr_state, align 8, !dbg !14929
  %call112 = call i32 @estimate_insn_cost(%struct.rtx_def* %66, i8* %67), !dbg !14930
  %cmp113 = icmp eq i32 %call112, 0, !dbg !14931
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !14932

if.then115:                                       ; preds = %land.lhs.true111
  br label %while.end, !dbg !14933

if.end116:                                        ; preds = %land.lhs.true111, %land.lhs.true108, %land.lhs.true105, %if.end103
  br label %while.cond, !dbg !14897, !llvm.loop !14934

while.end:                                        ; preds = %if.then115, %while.cond
  %68 = load i32, i32* %i, align 4, !dbg !14936
  %69 = load i32, i32* %haifa_clock, align 4, !dbg !14937
  %add117 = add nsw i32 %69, %68, !dbg !14937
  store i32 %add117, i32* %haifa_clock, align 4, !dbg !14937
  br label %if.end125, !dbg !14938

if.else118:                                       ; preds = %if.end82
  %70 = load i32, i32* %haifa_cost, align 4, !dbg !14939
  %cmp119 = icmp eq i32 %70, 0, !dbg !14939
  br i1 %cmp119, label %cond.false122, label %cond.true121, !dbg !14939

cond.true121:                                     ; preds = %if.else118
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7045, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !14939
  br label %cond.end123, !dbg !14939

cond.false122:                                    ; preds = %if.else118
  br label %cond.end123, !dbg !14939

cond.end123:                                      ; preds = %cond.false122, %cond.true121
  %cond124 = phi i32 [ 0, %cond.true121 ], [ 0, %cond.false122 ], !dbg !14939
  br label %if.end125

if.end125:                                        ; preds = %cond.end123, %while.end
  %71 = load i32, i32* @sched_verbose, align 4, !dbg !14940
  %cmp126 = icmp sge i32 %71, 2, !dbg !14942
  br i1 %cmp126, label %if.then128, label %if.end160, !dbg !14943

if.then128:                                       ; preds = %if.end125
  br label %do.body129, !dbg !14944

do.body129:                                       ; preds = %if.then128
  %72 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !14945
  %tobool130 = icmp ne i8 %72, 0, !dbg !14945
  br i1 %tobool130, label %if.then131, label %if.else152, !dbg !14948

if.then131:                                       ; preds = %do.body129
  br label %do.body132, !dbg !14945

do.body132:                                       ; preds = %if.then131
  call void @llvm.dbg.declare(metadata i32* %__j133, metadata !14949, metadata !DIExpression()), !dbg !14951
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14951
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !14951
  %fld135 = bitcast %union.u* %u134 to [1 x %union.rtunion_def]*, !dbg !14951
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i64 0, i64 0, !dbg !14951
  %rt_int137 = bitcast %union.rtunion_def* %arrayidx136 to i32*, !dbg !14951
  %74 = load i32, i32* %rt_int137, align 8, !dbg !14951
  %75 = load i32, i32* %haifa_cost, align 4, !dbg !14951
  %call138 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 %74, i32 %75), !dbg !14951
  %mul139 = mul nsw i32 2, %call138, !dbg !14951
  %add140 = add nsw i32 1, %mul139, !dbg !14951
  store i32 %add140, i32* %__j133, align 4, !dbg !14951
  call void @llvm.dbg.declare(metadata i8** %__s141, metadata !14952, metadata !DIExpression()), !dbg !14951
  %76 = load i32, i32* %__j133, align 4, !dbg !14951
  %conv142 = sext i32 %76 to i64, !dbg !14951
  %mul143 = mul i64 1, %conv142, !dbg !14951
  %77 = alloca i8, i64 %mul143, align 16, !dbg !14951
  store i8* %77, i8** %__s141, align 8, !dbg !14951
  %78 = load i8*, i8** %__s141, align 8, !dbg !14951
  %79 = load i32, i32* %__j133, align 4, !dbg !14951
  %conv144 = sext i32 %79 to i64, !dbg !14951
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14951
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !14951
  %fld146 = bitcast %union.u* %u145 to [1 x %union.rtunion_def]*, !dbg !14951
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i64 0, i64 0, !dbg !14951
  %rt_int148 = bitcast %union.rtunion_def* %arrayidx147 to i32*, !dbg !14951
  %81 = load i32, i32* %rt_int148, align 8, !dbg !14951
  %82 = load i32, i32* %haifa_cost, align 4, !dbg !14951
  %call149 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %78, i64 %conv144, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 %81, i32 %82), !dbg !14951
  %83 = load i8*, i8** %__s141, align 8, !dbg !14951
  call void @sel_prepare_string_for_dot_label(i8* %83), !dbg !14951
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14951
  %85 = load i8*, i8** %__s141, align 8, !dbg !14951
  %call150 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %85), !dbg !14951
  br label %do.end151, !dbg !14951

do.end151:                                        ; preds = %do.body132
  br label %if.end158, !dbg !14951

if.else152:                                       ; preds = %do.body129
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14945
  %87 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14945
  %u153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1, !dbg !14945
  %fld154 = bitcast %union.u* %u153 to [1 x %union.rtunion_def]*, !dbg !14945
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i64 0, i64 0, !dbg !14945
  %rt_int156 = bitcast %union.rtunion_def* %arrayidx155 to i32*, !dbg !14945
  %88 = load i32, i32* %rt_int156, align 8, !dbg !14945
  %89 = load i32, i32* %haifa_cost, align 4, !dbg !14945
  %call157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 %88, i32 %89), !dbg !14945
  br label %if.end158

if.end158:                                        ; preds = %if.else152, %do.end151
  br label %do.end159, !dbg !14948

do.end159:                                        ; preds = %if.end158
  br label %if.end160, !dbg !14948

if.end160:                                        ; preds = %do.end159, %if.end125
  %90 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 19), align 8, !dbg !14953
  %tobool161 = icmp ne i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)* %90, null, !dbg !14955
  br i1 %tobool161, label %if.then162, label %if.end192, !dbg !14956

if.then162:                                       ; preds = %if.end160
  br label %while.cond163, !dbg !14957

while.cond163:                                    ; preds = %if.end190, %if.then162
  %91 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 19), align 8, !dbg !14958
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14959
  %93 = load i32, i32* @sched_verbose, align 4, !dbg !14960
  %94 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14961
  %95 = load i32, i32* %haifa_last_clock, align 4, !dbg !14962
  %96 = load i32, i32* %haifa_clock, align 4, !dbg !14963
  %call164 = call i32 %91(%struct._IO_FILE* %92, i32 %93, %struct.rtx_def* %94, i32 %95, i32 %96, i32* %sort_p), !dbg !14964
  %tobool165 = icmp ne i32 %call164, 0, !dbg !14957
  br i1 %tobool165, label %while.body166, label %while.end191, !dbg !14957

while.body166:                                    ; preds = %while.cond163
  %97 = load i8*, i8** @curr_state, align 8, !dbg !14965
  call void @advance_state(i8* %97), !dbg !14967
  %98 = load i32, i32* %haifa_clock, align 4, !dbg !14968
  %inc167 = add nsw i32 %98, 1, !dbg !14968
  store i32 %inc167, i32* %haifa_clock, align 4, !dbg !14968
  %99 = load i32, i32* @sched_verbose, align 4, !dbg !14969
  %cmp168 = icmp sge i32 %99, 2, !dbg !14971
  br i1 %cmp168, label %if.then170, label %if.end190, !dbg !14972

if.then170:                                       ; preds = %while.body166
  br label %do.body171, !dbg !14973

do.body171:                                       ; preds = %if.then170
  %100 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !14975
  %tobool172 = icmp ne i8 %100, 0, !dbg !14975
  br i1 %tobool172, label %if.then173, label %if.else186, !dbg !14978

if.then173:                                       ; preds = %do.body171
  br label %do.body174, !dbg !14975

do.body174:                                       ; preds = %if.then173
  call void @llvm.dbg.declare(metadata i32* %__j175, metadata !14979, metadata !DIExpression()), !dbg !14981
  %call176 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.89, i64 0, i64 0)), !dbg !14981
  %mul177 = mul nsw i32 2, %call176, !dbg !14981
  %add178 = add nsw i32 1, %mul177, !dbg !14981
  store i32 %add178, i32* %__j175, align 4, !dbg !14981
  call void @llvm.dbg.declare(metadata i8** %__s179, metadata !14982, metadata !DIExpression()), !dbg !14981
  %101 = load i32, i32* %__j175, align 4, !dbg !14981
  %conv180 = sext i32 %101 to i64, !dbg !14981
  %mul181 = mul i64 1, %conv180, !dbg !14981
  %102 = alloca i8, i64 %mul181, align 16, !dbg !14981
  store i8* %102, i8** %__s179, align 8, !dbg !14981
  %103 = load i8*, i8** %__s179, align 8, !dbg !14981
  %104 = load i32, i32* %__j175, align 4, !dbg !14981
  %conv182 = sext i32 %104 to i64, !dbg !14981
  %call183 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %103, i64 %conv182, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.89, i64 0, i64 0)), !dbg !14981
  %105 = load i8*, i8** %__s179, align 8, !dbg !14981
  call void @sel_prepare_string_for_dot_label(i8* %105), !dbg !14981
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14981
  %107 = load i8*, i8** %__s179, align 8, !dbg !14981
  %call184 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %106, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %107), !dbg !14981
  br label %do.end185, !dbg !14981

do.end185:                                        ; preds = %do.body174
  br label %if.end188, !dbg !14981

if.else186:                                       ; preds = %do.body171
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !14975
  %call187 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %108, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.89, i64 0, i64 0)), !dbg !14975
  br label %if.end188

if.end188:                                        ; preds = %if.else186, %do.end185
  br label %do.end189, !dbg !14978

do.end189:                                        ; preds = %if.end188
  %109 = load i8*, i8** @curr_state, align 8, !dbg !14983
  call void @debug_state(i8* %109), !dbg !14984
  br label %if.end190, !dbg !14985

if.end190:                                        ; preds = %do.end189, %while.body166
  br label %while.cond163, !dbg !14957, !llvm.loop !14986

while.end191:                                     ; preds = %while.cond163
  br label %if.end192, !dbg !14957

if.end192:                                        ; preds = %while.end191, %if.end160
  %110 = load i8, i8* %real_insn, align 1, !dbg !14988
  %tobool193 = icmp ne i8 %110, 0, !dbg !14988
  br i1 %tobool193, label %if.then194, label %if.end206, !dbg !14990

if.then194:                                       ; preds = %if.end192
  %111 = load i8*, i8** @curr_state, align 8, !dbg !14991
  %112 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14993
  %call195 = call i32 @state_transition(i8* %111, %struct.rtx_def* %112), !dbg !14994
  store i32 %call195, i32* %cost, align 4, !dbg !14995
  %113 = load i32, i32* @sched_verbose, align 4, !dbg !14996
  %cmp196 = icmp sge i32 %113, 2, !dbg !14998
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !14999

if.then198:                                       ; preds = %if.then194
  %114 = load i8*, i8** @curr_state, align 8, !dbg !15000
  call void @debug_state(i8* %114), !dbg !15001
  br label %if.end199, !dbg !15001

if.end199:                                        ; preds = %if.then198, %if.then194
  %115 = load i32, i32* %cost, align 4, !dbg !15002
  %cmp200 = icmp slt i32 %115, 0, !dbg !15002
  br i1 %cmp200, label %cond.false203, label %cond.true202, !dbg !15002

cond.true202:                                     ; preds = %if.end199
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7071, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !15002
  br label %cond.end204, !dbg !15002

cond.false203:                                    ; preds = %if.end199
  br label %cond.end204, !dbg !15002

cond.end204:                                      ; preds = %cond.false203, %cond.true202
  %cond205 = phi i32 [ 0, %cond.true202 ], [ 0, %cond.false203 ], !dbg !15002
  br label %if.end206, !dbg !15003

if.end206:                                        ; preds = %cond.end204, %if.end192
  %116 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 3), align 8, !dbg !15004
  %tobool207 = icmp ne i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)* %116, null, !dbg !15006
  br i1 %tobool207, label %if.then208, label %if.end210, !dbg !15007

if.then208:                                       ; preds = %if.end206
  %117 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 1, i32 3), align 8, !dbg !15008
  %118 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !15009
  %119 = load i32, i32* @sched_verbose, align 4, !dbg !15010
  %120 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15011
  %call209 = call i32 %117(%struct._IO_FILE* %118, i32 %119, %struct.rtx_def* %120, i32 0), !dbg !15012
  br label %if.end210, !dbg !15012

if.end210:                                        ; preds = %if.then208, %if.end206
  %121 = load i32, i32* %haifa_clock, align 4, !dbg !15013
  %122 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !15014
  %tobool211 = icmp ne %struct.VEC_sel_insn_data_def_heap* %122, null, !dbg !15014
  br i1 %tobool211, label %cond.true212, label %cond.false214, !dbg !15014

cond.true212:                                     ; preds = %if.end210
  %123 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !15014
  %base213 = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %123, i32 0, i32 0, !dbg !15014
  br label %cond.end215, !dbg !15014

cond.false214:                                    ; preds = %if.end210
  br label %cond.end215, !dbg !15014

cond.end215:                                      ; preds = %cond.false214, %cond.true212
  %cond216 = phi %struct.VEC_sel_insn_data_def_base* [ %base213, %cond.true212 ], [ null, %cond.false214 ], !dbg !15014
  %124 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !15014
  %tobool217 = icmp ne %struct.VEC_int_heap* %124, null, !dbg !15014
  br i1 %tobool217, label %cond.true218, label %cond.false220, !dbg !15014

cond.true218:                                     ; preds = %cond.end215
  %125 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !15014
  %base219 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %125, i32 0, i32 0, !dbg !15014
  br label %cond.end221, !dbg !15014

cond.false220:                                    ; preds = %cond.end215
  br label %cond.end221, !dbg !15014

cond.end221:                                      ; preds = %cond.false220, %cond.true218
  %cond222 = phi %struct.VEC_int_base* [ %base219, %cond.true218 ], [ null, %cond.false220 ], !dbg !15014
  %126 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15014
  %u223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !15014
  %fld224 = bitcast %union.u* %u223 to [1 x %union.rtunion_def]*, !dbg !15014
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i64 0, i64 0, !dbg !15014
  %rt_int226 = bitcast %union.rtunion_def* %arrayidx225 to i32*, !dbg !15014
  %127 = load i32, i32* %rt_int226, align 8, !dbg !15014
  %call227 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond222, i32 %127), !dbg !15014
  %call228 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond216, i32 %call227), !dbg !15014
  %sched_cycle229 = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call228, i32 0, i32 10, !dbg !15014
  store i32 %121, i32* %sched_cycle229, align 8, !dbg !15015
  %128 = load i32, i32* %clock, align 4, !dbg !15016
  store i32 %128, i32* %last_clock, align 4, !dbg !15017
  %129 = load i32, i32* %haifa_clock, align 4, !dbg !15018
  store i32 %129, i32* %haifa_last_clock, align 4, !dbg !15019
  br label %for.inc, !dbg !15020

for.inc:                                          ; preds = %cond.end221, %if.then13
  %130 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15021
  %u230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !15021
  %fld231 = bitcast %union.u* %u230 to [1 x %union.rtunion_def]*, !dbg !15021
  %arrayidx232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld231, i64 0, i64 2, !dbg !15021
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx232 to %struct.rtx_def**, !dbg !15021
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !15021
  store %struct.rtx_def* %131, %struct.rtx_def** %insn, align 8, !dbg !15022
  br label %for.cond, !dbg !15023, !llvm.loop !15024

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15026
}

; Function Attrs: noinline nounwind uwtable
define internal void @put_TImodes() #0 !dbg !15027 {
entry:
  %last_clock = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %cost = alloca i32, align 4
  %clock = alloca i32, align 4
  %__j = alloca i32, align 4
  %__s = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i32* %last_clock, metadata !15028, metadata !DIExpression()), !dbg !15029
  store i32 -1, i32* %last_clock, align 4, !dbg !15029
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !15030, metadata !DIExpression()), !dbg !15031
  %0 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !15032
  %head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %0, i32 0, i32 10, !dbg !15034
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !15034
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8, !dbg !15035
  br label %for.cond, !dbg !15036

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15037
  %3 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !15039
  %next_tail = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %3, i32 0, i32 9, !dbg !15040
  %4 = load %struct.rtx_def*, %struct.rtx_def** %next_tail, align 8, !dbg !15040
  %cmp = icmp ne %struct.rtx_def* %2, %4, !dbg !15041
  br i1 %cmp, label %for.body, label %for.end, !dbg !15042

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %cost, metadata !15043, metadata !DIExpression()), !dbg !15045
  call void @llvm.dbg.declare(metadata i32* %clock, metadata !15046, metadata !DIExpression()), !dbg !15047
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15048
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !15048
  %bf.load = load i32, i32* %6, align 8, !dbg !15048
  %bf.clear = and i32 %bf.load, 65535, !dbg !15048
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !15048
  br i1 %cmp1, label %if.end, label %lor.lhs.false, !dbg !15048

lor.lhs.false:                                    ; preds = %for.body
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15048
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !15048
  %bf.load2 = load i32, i32* %8, align 8, !dbg !15048
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !15048
  %cmp4 = icmp eq i32 %bf.clear3, 7, !dbg !15048
  br i1 %cmp4, label %if.end, label %lor.lhs.false5, !dbg !15048

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15048
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !15048
  %bf.load6 = load i32, i32* %10, align 8, !dbg !15048
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !15048
  %cmp8 = icmp eq i32 %bf.clear7, 9, !dbg !15048
  br i1 %cmp8, label %if.end, label %lor.lhs.false9, !dbg !15048

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15048
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !15048
  %bf.load10 = load i32, i32* %12, align 8, !dbg !15048
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !15048
  %cmp12 = icmp eq i32 %bf.clear11, 10, !dbg !15048
  br i1 %cmp12, label %if.end, label %if.then, !dbg !15050

if.then:                                          ; preds = %lor.lhs.false9
  br label %for.inc, !dbg !15051

if.end:                                           ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %for.body
  %13 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !15052
  %tobool = icmp ne %struct.VEC_sel_insn_data_def_heap* %13, null, !dbg !15052
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15052

cond.true:                                        ; preds = %if.end
  %14 = load %struct.VEC_sel_insn_data_def_heap*, %struct.VEC_sel_insn_data_def_heap** @s_i_d, align 8, !dbg !15052
  %base = getelementptr inbounds %struct.VEC_sel_insn_data_def_heap, %struct.VEC_sel_insn_data_def_heap* %14, i32 0, i32 0, !dbg !15052
  br label %cond.end, !dbg !15052

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !15052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_sel_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !15052
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !15052
  %tobool13 = icmp ne %struct.VEC_int_heap* %15, null, !dbg !15052
  br i1 %tobool13, label %cond.true14, label %cond.false16, !dbg !15052

cond.true14:                                      ; preds = %cond.end
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !15052
  %base15 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i32 0, i32 0, !dbg !15052
  br label %cond.end17, !dbg !15052

cond.false16:                                     ; preds = %cond.end
  br label %cond.end17, !dbg !15052

cond.end17:                                       ; preds = %cond.false16, %cond.true14
  %cond18 = phi %struct.VEC_int_base* [ %base15, %cond.true14 ], [ null, %cond.false16 ], !dbg !15052
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15052
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !15052
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !15052
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !15052
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !15052
  %18 = load i32, i32* %rt_int, align 8, !dbg !15052
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond18, i32 %18), !dbg !15052
  %call19 = call %struct._sel_insn_data* @VEC_sel_insn_data_def_base_index(%struct.VEC_sel_insn_data_def_base* %cond, i32 %call), !dbg !15052
  %sched_cycle = getelementptr inbounds %struct._sel_insn_data, %struct._sel_insn_data* %call19, i32 0, i32 10, !dbg !15052
  %19 = load i32, i32* %sched_cycle, align 8, !dbg !15052
  store i32 %19, i32* %clock, align 4, !dbg !15053
  %20 = load i32, i32* %last_clock, align 4, !dbg !15054
  %cmp20 = icmp eq i32 %20, -1, !dbg !15055
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !15056

cond.true21:                                      ; preds = %cond.end17
  br label %cond.end23, !dbg !15056

cond.false22:                                     ; preds = %cond.end17
  %21 = load i32, i32* %clock, align 4, !dbg !15057
  %22 = load i32, i32* %last_clock, align 4, !dbg !15058
  %sub = sub nsw i32 %21, %22, !dbg !15059
  br label %cond.end23, !dbg !15056

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32 [ 1, %cond.true21 ], [ %sub, %cond.false22 ], !dbg !15056
  store i32 %cond24, i32* %cost, align 4, !dbg !15060
  %23 = load i32, i32* %cost, align 4, !dbg !15061
  %cmp25 = icmp sge i32 %23, 0, !dbg !15061
  br i1 %cmp25, label %cond.false27, label %cond.true26, !dbg !15061

cond.true26:                                      ; preds = %cond.end23
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 7102, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !15061
  br label %cond.end28, !dbg !15061

cond.false27:                                     ; preds = %cond.end23
  br label %cond.end28, !dbg !15061

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi i32 [ 0, %cond.true26 ], [ 0, %cond.false27 ], !dbg !15061
  %24 = load i32, i32* @issue_rate, align 4, !dbg !15062
  %cmp30 = icmp sgt i32 %24, 1, !dbg !15064
  br i1 %cmp30, label %land.lhs.true, label %if.end53, !dbg !15065

land.lhs.true:                                    ; preds = %cond.end28
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15066
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !15066
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !15066
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 5, !dbg !15066
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !15066
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !15066
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !15066
  %bf.load34 = load i32, i32* %27, align 8, !dbg !15066
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !15066
  %cmp36 = icmp ne i32 %bf.clear35, 24, !dbg !15067
  br i1 %cmp36, label %land.lhs.true37, label %if.end53, !dbg !15068

land.lhs.true37:                                  ; preds = %land.lhs.true
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15069
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !15069
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !15069
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 5, !dbg !15069
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !15069
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !15069
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !15069
  %bf.load42 = load i32, i32* %30, align 8, !dbg !15069
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !15069
  %cmp44 = icmp ne i32 %bf.clear43, 25, !dbg !15070
  br i1 %cmp44, label %if.then45, label %if.end53, !dbg !15071

if.then45:                                        ; preds = %land.lhs.true37
  %31 = load i32, i32* @reload_completed, align 4, !dbg !15072
  %tobool46 = icmp ne i32 %31, 0, !dbg !15072
  br i1 %tobool46, label %land.lhs.true47, label %if.end52, !dbg !15075

land.lhs.true47:                                  ; preds = %if.then45
  %32 = load i32, i32* %cost, align 4, !dbg !15076
  %cmp48 = icmp sgt i32 %32, 0, !dbg !15077
  br i1 %cmp48, label %if.then49, label %if.end52, !dbg !15078

if.then49:                                        ; preds = %land.lhs.true47
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15079
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !15079
  %bf.load50 = load i32, i32* %34, align 8, !dbg !15079
  %bf.clear51 = and i32 %bf.load50, -16711681, !dbg !15079
  %bf.set = or i32 %bf.clear51, 1179648, !dbg !15079
  store i32 %bf.set, i32* %34, align 8, !dbg !15079
  br label %if.end52, !dbg !15079

if.end52:                                         ; preds = %if.then49, %land.lhs.true47, %if.then45
  %35 = load i32, i32* %clock, align 4, !dbg !15080
  store i32 %35, i32* %last_clock, align 4, !dbg !15081
  br label %if.end53, !dbg !15082

if.end53:                                         ; preds = %if.end52, %land.lhs.true37, %land.lhs.true, %cond.end28
  %36 = load i32, i32* @sched_verbose, align 4, !dbg !15083
  %cmp54 = icmp sge i32 %36, 2, !dbg !15085
  br i1 %cmp54, label %if.then55, label %if.end79, !dbg !15086

if.then55:                                        ; preds = %if.end53
  br label %do.body, !dbg !15087

do.body:                                          ; preds = %if.then55
  %37 = load i8, i8* @sched_dump_to_dot_p, align 1, !dbg !15088
  %tobool56 = icmp ne i8 %37, 0, !dbg !15088
  br i1 %tobool56, label %if.then57, label %if.else, !dbg !15091

if.then57:                                        ; preds = %do.body
  br label %do.body58, !dbg !15088

do.body58:                                        ; preds = %if.then57
  call void @llvm.dbg.declare(metadata i32* %__j, metadata !15092, metadata !DIExpression()), !dbg !15094
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15094
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !15094
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !15094
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 0, !dbg !15094
  %rt_int62 = bitcast %union.rtunion_def* %arrayidx61 to i32*, !dbg !15094
  %39 = load i32, i32* %rt_int62, align 8, !dbg !15094
  %40 = load i32, i32* %cost, align 4, !dbg !15094
  %call63 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i32 %39, i32 %40), !dbg !15094
  %mul = mul nsw i32 2, %call63, !dbg !15094
  %add = add nsw i32 1, %mul, !dbg !15094
  store i32 %add, i32* %__j, align 4, !dbg !15094
  call void @llvm.dbg.declare(metadata i8** %__s, metadata !15095, metadata !DIExpression()), !dbg !15094
  %41 = load i32, i32* %__j, align 4, !dbg !15094
  %conv = sext i32 %41 to i64, !dbg !15094
  %mul64 = mul i64 1, %conv, !dbg !15094
  %42 = alloca i8, i64 %mul64, align 16, !dbg !15094
  store i8* %42, i8** %__s, align 8, !dbg !15094
  %43 = load i8*, i8** %__s, align 8, !dbg !15094
  %44 = load i32, i32* %__j, align 4, !dbg !15094
  %conv65 = sext i32 %44 to i64, !dbg !15094
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15094
  %u66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !15094
  %fld67 = bitcast %union.u* %u66 to [1 x %union.rtunion_def]*, !dbg !15094
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i64 0, i64 0, !dbg !15094
  %rt_int69 = bitcast %union.rtunion_def* %arrayidx68 to i32*, !dbg !15094
  %46 = load i32, i32* %rt_int69, align 8, !dbg !15094
  %47 = load i32, i32* %cost, align 4, !dbg !15094
  %call70 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %43, i64 %conv65, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i32 %46, i32 %47), !dbg !15094
  %48 = load i8*, i8** %__s, align 8, !dbg !15094
  call void @sel_prepare_string_for_dot_label(i8* %48), !dbg !15094
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !15094
  %50 = load i8*, i8** %__s, align 8, !dbg !15094
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %50), !dbg !15094
  br label %do.end, !dbg !15094

do.end:                                           ; preds = %do.body58
  br label %if.end77, !dbg !15094

if.else:                                          ; preds = %do.body
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !15088
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15088
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !15088
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !15088
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 0, !dbg !15088
  %rt_int75 = bitcast %union.rtunion_def* %arrayidx74 to i32*, !dbg !15088
  %53 = load i32, i32* %rt_int75, align 8, !dbg !15088
  %54 = load i32, i32* %cost, align 4, !dbg !15088
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i32 %53, i32 %54), !dbg !15088
  br label %if.end77

if.end77:                                         ; preds = %if.else, %do.end
  br label %do.end78, !dbg !15091

do.end78:                                         ; preds = %if.end77
  br label %if.end79, !dbg !15091

if.end79:                                         ; preds = %do.end78, %if.end53
  br label %for.inc, !dbg !15096

for.inc:                                          ; preds = %if.end79, %if.then
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15097
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !15097
  %fld81 = bitcast %union.u* %u80 to [1 x %union.rtunion_def]*, !dbg !15097
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i64 0, i64 2, !dbg !15097
  %rt_rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**, !dbg !15097
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !15097
  store %struct.rtx_def* %56, %struct.rtx_def** %insn, align 8, !dbg !15098
  br label %for.cond, !dbg !15099, !llvm.loop !15100

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15102
}

declare dso_local zeroext i8 @bb_ends_ebb_p(%struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @bb_next_bb(%struct.basic_block_def* %bb) #0 !dbg !15103 {
entry:
  %retval = alloca %struct.basic_block_def*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !15106, metadata !DIExpression()), !dbg !15107
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15108
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 1, !dbg !15108
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !15108
  %tobool = icmp ne %struct.VEC_edge_gc* %1, null, !dbg !15108
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15108

cond.true:                                        ; preds = %entry
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15108
  %succs1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 1, !dbg !15108
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs1, align 8, !dbg !15108
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i32 0, i32 0, !dbg !15108
  br label %cond.end, !dbg !15108

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15108

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !15108
  %call = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !15108
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
  ], !dbg !15109

sw.bb:                                            ; preds = %cond.end
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15110
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i32 0, i32 6, !dbg !15112
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !15112
  store %struct.basic_block_def* %5, %struct.basic_block_def** %retval, align 8, !dbg !15113
  br label %return, !dbg !15113

sw.bb2:                                           ; preds = %cond.end
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15114
  %call3 = call %struct.basic_block_def* @single_succ(%struct.basic_block_def* %6), !dbg !15115
  store %struct.basic_block_def* %call3, %struct.basic_block_def** %retval, align 8, !dbg !15116
  br label %return, !dbg !15116

sw.bb4:                                           ; preds = %cond.end
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15117
  %succs5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i32 0, i32 1, !dbg !15117
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs5, align 8, !dbg !15117
  %tobool6 = icmp ne %struct.VEC_edge_gc* %8, null, !dbg !15117
  br i1 %tobool6, label %cond.true7, label %cond.false10, !dbg !15117

cond.true7:                                       ; preds = %sw.bb4
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15117
  %succs8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 1, !dbg !15117
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs8, align 8, !dbg !15117
  %base9 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i32 0, i32 0, !dbg !15117
  br label %cond.end11, !dbg !15117

cond.false10:                                     ; preds = %sw.bb4
  br label %cond.end11, !dbg !15117

cond.end11:                                       ; preds = %cond.false10, %cond.true7
  %cond12 = phi %struct.VEC_edge_base* [ %base9, %cond.true7 ], [ null, %cond.false10 ], !dbg !15117
  %call13 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond12, i32 0), !dbg !15117
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call13, i32 0, i32 7, !dbg !15117
  %11 = load i32, i32* %flags, align 8, !dbg !15117
  %and = and i32 %11, 1, !dbg !15117
  %tobool14 = icmp ne i32 %and, 0, !dbg !15117
  br i1 %tobool14, label %cond.true15, label %cond.false25, !dbg !15117

cond.true15:                                      ; preds = %cond.end11
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15117
  %succs16 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i32 0, i32 1, !dbg !15117
  %13 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs16, align 8, !dbg !15117
  %tobool17 = icmp ne %struct.VEC_edge_gc* %13, null, !dbg !15117
  br i1 %tobool17, label %cond.true18, label %cond.false21, !dbg !15117

cond.true18:                                      ; preds = %cond.true15
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15117
  %succs19 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i32 0, i32 1, !dbg !15117
  %15 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs19, align 8, !dbg !15117
  %base20 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %15, i32 0, i32 0, !dbg !15117
  br label %cond.end22, !dbg !15117

cond.false21:                                     ; preds = %cond.true15
  br label %cond.end22, !dbg !15117

cond.end22:                                       ; preds = %cond.false21, %cond.true18
  %cond23 = phi %struct.VEC_edge_base* [ %base20, %cond.true18 ], [ null, %cond.false21 ], !dbg !15117
  %call24 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond23, i32 0), !dbg !15117
  br label %cond.end35, !dbg !15117

cond.false25:                                     ; preds = %cond.end11
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15117
  %succs26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i32 0, i32 1, !dbg !15117
  %17 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs26, align 8, !dbg !15117
  %tobool27 = icmp ne %struct.VEC_edge_gc* %17, null, !dbg !15117
  br i1 %tobool27, label %cond.true28, label %cond.false31, !dbg !15117

cond.true28:                                      ; preds = %cond.false25
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15117
  %succs29 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i32 0, i32 1, !dbg !15117
  %19 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs29, align 8, !dbg !15117
  %base30 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %19, i32 0, i32 0, !dbg !15117
  br label %cond.end32, !dbg !15117

cond.false31:                                     ; preds = %cond.false25
  br label %cond.end32, !dbg !15117

cond.end32:                                       ; preds = %cond.false31, %cond.true28
  %cond33 = phi %struct.VEC_edge_base* [ %base30, %cond.true28 ], [ null, %cond.false31 ], !dbg !15117
  %call34 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond33, i32 1), !dbg !15117
  br label %cond.end35, !dbg !15117

cond.end35:                                       ; preds = %cond.end32, %cond.end22
  %cond36 = phi %struct.edge_def* [ %call24, %cond.end22 ], [ %call34, %cond.end32 ], !dbg !15117
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond36, i32 0, i32 1, !dbg !15118
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !15118
  store %struct.basic_block_def* %20, %struct.basic_block_def** %retval, align 8, !dbg !15119
  br label %return, !dbg !15119

sw.default:                                       ; preds = %cond.end
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !15120
  %next_bb37 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i32 0, i32 6, !dbg !15121
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb37, align 8, !dbg !15121
  store %struct.basic_block_def* %22, %struct.basic_block_def** %retval, align 8, !dbg !15122
  br label %return, !dbg !15122

return:                                           ; preds = %sw.default, %cond.end35, %sw.bb2, %sw.bb
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %retval, align 8, !dbg !15123
  ret %struct.basic_block_def* %23, !dbg !15123
}

declare dso_local void @get_ebb_head_tail(%struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def**, %struct.rtx_def**) #2

declare dso_local void @state_reset(i8*) #2

declare dso_local void @calculate_dominance_info(i32) #2

declare dso_local void @alloc_sched_pools() #2

declare dso_local void @setup_sched_dump() #2

declare dso_local void @sched_rgn_init(i8 zeroext) #2

declare dso_local void @sched_init() #2

declare dso_local void @sched_init_bbs() #2

declare dso_local void @sched_extend_target() #2

declare dso_local void @setup_nop_and_exit_insns() #2

declare dso_local void @sel_extend_global_bb_info() #2

declare dso_local void @init_lv_sets() #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_hard_regs_data() #0 !dbg !15124 {
entry:
  %cur_reg = alloca i32, align 4
  %cur_mode = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cur_reg, metadata !15125, metadata !DIExpression()), !dbg !15126
  store i32 0, i32* %cur_reg, align 4, !dbg !15126
  call void @llvm.dbg.declare(metadata i32* %cur_mode, metadata !15127, metadata !DIExpression()), !dbg !15128
  store i32 0, i32* %cur_mode, align 4, !dbg !15128
  store i64 0, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 4), align 8, !dbg !15129
  store i32 0, i32* %cur_reg, align 4, !dbg !15130
  br label %for.cond, !dbg !15132

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %cur_reg, align 4, !dbg !15133
  %cmp = icmp slt i32 %0, 53, !dbg !15135
  br i1 %cmp, label %for.body, label %for.end, !dbg !15136

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %cur_reg, align 4, !dbg !15137
  %call = call zeroext i8 @df_regs_ever_live_p(i32 %1), !dbg !15139
  %conv = zext i8 %call to i32, !dbg !15139
  %tobool = icmp ne i32 %conv, 0, !dbg !15139
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !15140

lor.lhs.false:                                    ; preds = %for.body
  %2 = load i32, i32* %cur_reg, align 4, !dbg !15141
  %idxprom = sext i32 %2 to i64, !dbg !15142
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i64 0, i64 %idxprom, !dbg !15142
  %3 = load i8, i8* %arrayidx, align 1, !dbg !15142
  %conv1 = sext i8 %3 to i32, !dbg !15142
  %tobool2 = icmp ne i32 %conv1, 0, !dbg !15142
  br i1 %tobool2, label %if.then, label %if.end, !dbg !15143

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %4 = load i32, i32* %cur_reg, align 4, !dbg !15144
  %sh_prom = zext i32 %4 to i64, !dbg !15144
  %shl = shl i64 1, %sh_prom, !dbg !15144
  %5 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 4), align 8, !dbg !15144
  %or = or i64 %5, %shl, !dbg !15144
  store i64 %or, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 4), align 8, !dbg !15144
  br label %if.end, !dbg !15144

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !15145

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %cur_reg, align 4, !dbg !15146
  %inc = add nsw i32 %6, 1, !dbg !15146
  store i32 %inc, i32* %cur_reg, align 4, !dbg !15146
  br label %for.cond, !dbg !15147, !llvm.loop !15148

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cur_mode, align 4, !dbg !15150
  br label %for.cond3, !dbg !15152

for.cond3:                                        ; preds = %for.inc9, %for.end
  %7 = load i32, i32* %cur_mode, align 4, !dbg !15153
  %cmp4 = icmp slt i32 %7, 87, !dbg !15155
  br i1 %cmp4, label %for.body6, label %for.end11, !dbg !15156

for.body6:                                        ; preds = %for.cond3
  %8 = load i32, i32* %cur_mode, align 4, !dbg !15157
  %idxprom7 = sext i32 %8 to i64, !dbg !15158
  %arrayidx8 = getelementptr inbounds [87 x i8], [87 x i8]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 1), i64 0, i64 %idxprom7, !dbg !15158
  store i8 0, i8* %arrayidx8, align 1, !dbg !15159
  br label %for.inc9, !dbg !15158

for.inc9:                                         ; preds = %for.body6
  %9 = load i32, i32* %cur_mode, align 4, !dbg !15160
  %inc10 = add nsw i32 %9, 1, !dbg !15160
  store i32 %inc10, i32* %cur_mode, align 4, !dbg !15160
  br label %for.cond3, !dbg !15161, !llvm.loop !15162

for.end11:                                        ; preds = %for.cond3
  store i32 0, i32* %cur_reg, align 4, !dbg !15164
  br label %for.cond12, !dbg !15166

for.cond12:                                       ; preds = %for.inc18, %for.end11
  %10 = load i32, i32* %cur_reg, align 4, !dbg !15167
  %cmp13 = icmp slt i32 %10, 53, !dbg !15169
  br i1 %cmp13, label %for.body15, label %for.end20, !dbg !15170

for.body15:                                       ; preds = %for.cond12
  %11 = load i32, i32* %cur_reg, align 4, !dbg !15171
  %idxprom16 = sext i32 %11 to i64, !dbg !15171
  %arrayidx17 = getelementptr inbounds [53 x i64], [53 x i64]* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 2), i64 0, i64 %idxprom16, !dbg !15171
  store i64 0, i64* %arrayidx17, align 8, !dbg !15171
  br label %for.inc18, !dbg !15171

for.inc18:                                        ; preds = %for.body15
  %12 = load i32, i32* %cur_reg, align 4, !dbg !15172
  %inc19 = add nsw i32 %12, 1, !dbg !15172
  store i32 %inc19, i32* %cur_reg, align 4, !dbg !15172
  br label %for.cond12, !dbg !15173, !llvm.loop !15174

for.end20:                                        ; preds = %for.cond12
  store i64 0, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 5), align 8, !dbg !15176
  store i32 8, i32* %cur_reg, align 4, !dbg !15177
  br label %for.cond21, !dbg !15179

for.cond21:                                       ; preds = %for.inc28, %for.end20
  %13 = load i32, i32* %cur_reg, align 4, !dbg !15180
  %cmp22 = icmp sle i32 %13, 15, !dbg !15182
  br i1 %cmp22, label %for.body24, label %for.end30, !dbg !15183

for.body24:                                       ; preds = %for.cond21
  %14 = load i32, i32* %cur_reg, align 4, !dbg !15184
  %sh_prom25 = zext i32 %14 to i64, !dbg !15184
  %shl26 = shl i64 1, %sh_prom25, !dbg !15184
  %15 = load i64, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 5), align 8, !dbg !15184
  %or27 = or i64 %15, %shl26, !dbg !15184
  store i64 %or27, i64* getelementptr inbounds (%struct.hard_regs_data, %struct.hard_regs_data* @sel_hrd, i32 0, i32 5), align 8, !dbg !15184
  br label %for.inc28, !dbg !15184

for.inc28:                                        ; preds = %for.body24
  %16 = load i32, i32* %cur_reg, align 4, !dbg !15185
  %inc29 = add nsw i32 %16, 1, !dbg !15185
  store i32 %inc29, i32* %cur_reg, align 4, !dbg !15185
  br label %for.cond21, !dbg !15186, !llvm.loop !15187

for.end30:                                        ; preds = %for.cond21
  ret void, !dbg !15189
}

declare dso_local void @free_bb_note_pool() #2

declare dso_local void @free_lv_sets() #2

declare dso_local void @sel_finish_global_bb_info() #2

declare dso_local void @free_regset_pool() #2

declare dso_local void @free_nop_and_exit_insns() #2

declare dso_local void @sched_rgn_finish() #2

declare dso_local void @sched_deps_finish() #2

declare dso_local void @sched_finish() #2

declare dso_local void @sel_finish_pipelining() #2

declare dso_local void @free_sched_pools() #2

declare dso_local void @free_dominance_info(i32) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2443, !2444, !2445}
!llvm.ident = !{!2446}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_forced_ebb_heads", scope: !2, file: !3, line: 483, type: !2199, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !816, globals: !2282, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "sel-sched.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !134, !141, !150, !154, !160, !165, !170, !189, !196, !203, !397, !402, !408, !413, !455, !598, !604, !610, !616, !622, !638, !643, !653, !776, !780, !810}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !142, line: 31, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./cfgloop.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!143 = !{!144, !145, !146, !147, !148, !149}
!144 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !142, line: 91, baseType: !7, size: 32, elements: !151)
!151 = !{!152, !153}
!152 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !155, line: 363, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!156 = !{!157, !158, !159}
!157 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !155, line: 355, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164}
!162 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !166, line: 474, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !171, line: 280, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!173 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!183 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!184 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !171, line: 1817, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !171, line: 1805, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202}
!198 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !171, line: 39, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!205 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!208 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!209 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!210 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!211 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!212 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!213 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!214 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!215 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!216 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!217 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!220 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!221 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!222 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!223 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!224 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!225 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!226 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!227 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!228 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!229 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!230 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!231 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!232 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!233 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!234 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!235 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!236 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!237 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!238 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!239 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!240 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!241 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!242 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!243 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!244 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!245 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!246 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!247 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!248 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!249 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!250 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!251 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!252 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!253 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!254 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!255 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!256 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!257 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!258 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!259 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!260 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!261 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!262 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!263 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!264 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!265 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!266 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!267 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!268 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!269 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!270 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!271 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!272 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!273 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!274 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!275 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!277 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!278 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!279 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!280 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!281 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!282 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!283 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!284 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!285 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!286 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!287 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!288 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!289 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!290 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!291 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!292 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!293 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!294 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!295 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!296 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!297 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!298 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!299 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!300 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!301 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!302 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!303 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!304 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!305 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!306 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!307 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!308 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!309 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!310 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!311 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!312 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!313 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!314 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!315 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!316 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!317 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!318 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!320 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!321 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!322 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!323 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!324 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!325 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!326 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!327 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!328 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!329 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!330 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!331 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!332 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!333 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!334 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!335 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!336 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!337 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!338 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!339 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!340 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!341 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!342 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!343 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!344 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!345 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!346 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!347 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!348 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!349 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!350 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!351 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!352 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!353 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!354 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!355 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!356 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!357 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!369 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!370 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!371 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!372 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!373 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!374 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!383 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!384 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!385 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!386 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!387 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!388 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!389 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!390 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!391 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!392 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!393 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!394 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!395 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!396 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "local_trans_type", file: !398, line: 73, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./sel-sched-ir.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!399 = !{!400, !401}
!400 = !DIEnumerator(name: "TRANS_SUBSTITUTION", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "TRANS_SPECULATION", value: 1, isUnsigned: true)
!402 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "post_call_group", file: !403, line: 432, baseType: !7, size: 32, elements: !404)
!403 = !DIFile(filename: "./sched-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!404 = !{!405, !406, !407}
!405 = !DIEnumerator(name: "not_post_call", value: 0, isUnsigned: true)
!406 = !DIEnumerator(name: "post_call", value: 1, isUnsigned: true)
!407 = !DIEnumerator(name: "post_call_initial", value: 2, isUnsigned: true)
!408 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_pending_barrier_mode", file: !403, line: 424, baseType: !7, size: 32, elements: !409)
!409 = !{!410, !411, !412}
!410 = !DIEnumerator(name: "NOT_A_BARRIER", value: 0, isUnsigned: true)
!411 = !DIEnumerator(name: "MOVE_BARRIER", value: 1, isUnsigned: true)
!412 = !DIEnumerator(name: "TRUE_BARRIER", value: 2, isUnsigned: true)
!413 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "debug_counter", file: !414, line: 27, baseType: !7, size: 32, elements: !415)
!414 = !DIFile(filename: "./dbgcnt.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!415 = !{!416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454}
!416 = !DIEnumerator(name: "auto_inc_dec", value: 0, isUnsigned: true)
!417 = !DIEnumerator(name: "ccp", value: 1, isUnsigned: true)
!418 = !DIEnumerator(name: "cfg_cleanup", value: 2, isUnsigned: true)
!419 = !DIEnumerator(name: "cse2_move2add", value: 3, isUnsigned: true)
!420 = !DIEnumerator(name: "cprop", value: 4, isUnsigned: true)
!421 = !DIEnumerator(name: "dce", value: 5, isUnsigned: true)
!422 = !DIEnumerator(name: "dce_fast", value: 6, isUnsigned: true)
!423 = !DIEnumerator(name: "dce_ud", value: 7, isUnsigned: true)
!424 = !DIEnumerator(name: "delete_trivial_dead", value: 8, isUnsigned: true)
!425 = !DIEnumerator(name: "df_byte_scan", value: 9, isUnsigned: true)
!426 = !DIEnumerator(name: "dse", value: 10, isUnsigned: true)
!427 = !DIEnumerator(name: "dse1", value: 11, isUnsigned: true)
!428 = !DIEnumerator(name: "dse2", value: 12, isUnsigned: true)
!429 = !DIEnumerator(name: "gcse2_delete", value: 13, isUnsigned: true)
!430 = !DIEnumerator(name: "global_alloc_at_func", value: 14, isUnsigned: true)
!431 = !DIEnumerator(name: "global_alloc_at_reg", value: 15, isUnsigned: true)
!432 = !DIEnumerator(name: "hoist", value: 16, isUnsigned: true)
!433 = !DIEnumerator(name: "ia64_sched2", value: 17, isUnsigned: true)
!434 = !DIEnumerator(name: "if_conversion", value: 18, isUnsigned: true)
!435 = !DIEnumerator(name: "if_after_combine", value: 19, isUnsigned: true)
!436 = !DIEnumerator(name: "if_after_reload", value: 20, isUnsigned: true)
!437 = !DIEnumerator(name: "local_alloc_for_sched", value: 21, isUnsigned: true)
!438 = !DIEnumerator(name: "postreload_cse", value: 22, isUnsigned: true)
!439 = !DIEnumerator(name: "pre", value: 23, isUnsigned: true)
!440 = !DIEnumerator(name: "pre_insn", value: 24, isUnsigned: true)
!441 = !DIEnumerator(name: "treepre_insert", value: 25, isUnsigned: true)
!442 = !DIEnumerator(name: "sched2_func", value: 26, isUnsigned: true)
!443 = !DIEnumerator(name: "sched_block", value: 27, isUnsigned: true)
!444 = !DIEnumerator(name: "sched_func", value: 28, isUnsigned: true)
!445 = !DIEnumerator(name: "sched_insn", value: 29, isUnsigned: true)
!446 = !DIEnumerator(name: "sched_region", value: 30, isUnsigned: true)
!447 = !DIEnumerator(name: "sel_sched_cnt", value: 31, isUnsigned: true)
!448 = !DIEnumerator(name: "sel_sched_region_cnt", value: 32, isUnsigned: true)
!449 = !DIEnumerator(name: "sel_sched_insn_cnt", value: 33, isUnsigned: true)
!450 = !DIEnumerator(name: "sms_sched_loop", value: 34, isUnsigned: true)
!451 = !DIEnumerator(name: "store_motion", value: 35, isUnsigned: true)
!452 = !DIEnumerator(name: "split_for_sched2", value: 36, isUnsigned: true)
!453 = !DIEnumerator(name: "tail_call", value: 37, isUnsigned: true)
!454 = !DIEnumerator(name: "debug_counter_number_of_counters", value: 38, isUnsigned: true)
!455 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !456, line: 45, baseType: !7, size: 32, elements: !457)
!456 = !DIFile(filename: "./rtl.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!457 = !{!458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597}
!458 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!459 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!460 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!461 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!462 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!463 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!464 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!465 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!466 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!467 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!468 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!469 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!470 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!471 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!472 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!473 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!474 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!475 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!476 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!477 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!478 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!479 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!480 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!481 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!482 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!483 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!484 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!485 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!486 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!487 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!488 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!489 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!490 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!491 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!492 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!493 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!494 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!495 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!496 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!497 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!498 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!499 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!500 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!501 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!502 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!503 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!504 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!505 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!506 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!507 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!508 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!509 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!510 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!511 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!512 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!513 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!514 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!515 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!516 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!517 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!518 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!519 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!520 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!521 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!522 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!523 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!524 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!525 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!526 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!527 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!528 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!529 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!530 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!531 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!532 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!533 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!534 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!535 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!536 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!537 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!538 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!539 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!540 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!541 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!542 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!543 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!544 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!545 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!546 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!547 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!548 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!549 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!550 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!551 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!552 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!553 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!554 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!555 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!556 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!557 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!558 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!559 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!560 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!561 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!562 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!563 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!564 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!565 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!566 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!567 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!568 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!569 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!570 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!571 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!572 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!573 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!574 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!575 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!576 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!577 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!578 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!579 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!580 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!581 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!582 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!583 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!584 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!585 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!586 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!587 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!588 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!589 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!590 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!591 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!592 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!593 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!594 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!595 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!596 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!597 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!598 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SPEC_SCHED_FLAGS", file: !403, line: 1044, baseType: !7, size: 32, elements: !599)
!599 = !{!600, !601, !602, !603}
!600 = !DIEnumerator(name: "COUNT_SPEC_IN_CRITICAL_PATH", value: 1, isUnsigned: true)
!601 = !DIEnumerator(name: "PREFER_NON_DATA_SPEC", value: 2, isUnsigned: true)
!602 = !DIEnumerator(name: "PREFER_NON_CONTROL_SPEC", value: 4, isUnsigned: true)
!603 = !DIEnumerator(name: "SEL_SCHED_SPEC_DONT_CHECK_CONTROL", value: 8, isUnsigned: true)
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SPEC_TYPES_OFFSETS", file: !403, line: 958, baseType: !7, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609}
!606 = !DIEnumerator(name: "BEGIN_DATA_BITS_OFFSET", value: 0, isUnsigned: true)
!607 = !DIEnumerator(name: "BE_IN_DATA_BITS_OFFSET", value: 6, isUnsigned: true)
!608 = !DIEnumerator(name: "BEGIN_CONTROL_BITS_OFFSET", value: 12, isUnsigned: true)
!609 = !DIEnumerator(name: "BE_IN_CONTROL_BITS_OFFSET", value: 18, isUnsigned: true)
!610 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MOVEUP_EXPR_CODE", file: !3, line: 267, baseType: !7, size: 32, elements: !611)
!611 = !{!612, !613, !614, !615}
!612 = !DIEnumerator(name: "MOVEUP_EXPR_SAME", value: 0, isUnsigned: true)
!613 = !DIEnumerator(name: "MOVEUP_EXPR_AS_RHS", value: 1, isUnsigned: true)
!614 = !DIEnumerator(name: "MOVEUP_EXPR_NULL", value: 2, isUnsigned: true)
!615 = !DIEnumerator(name: "MOVEUP_EXPR_CHANGED", value: 3, isUnsigned: true)
!616 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "deps_where_def", file: !398, line: 861, baseType: !7, size: 32, elements: !617)
!617 = !{!618, !619, !620, !621}
!618 = !DIEnumerator(name: "DEPS_IN_INSN", value: 0, isUnsigned: true)
!619 = !DIEnumerator(name: "DEPS_IN_LHS", value: 1, isUnsigned: true)
!620 = !DIEnumerator(name: "DEPS_IN_RHS", value: 2, isUnsigned: true)
!621 = !DIEnumerator(name: "DEPS_IN_NOWHERE", value: 3, isUnsigned: true)
!622 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_note", file: !456, line: 956, baseType: !7, size: 32, elements: !623)
!623 = !{!624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637}
!624 = !DIEnumerator(name: "NOTE_INSN_DELETED", value: 0, isUnsigned: true)
!625 = !DIEnumerator(name: "NOTE_INSN_DELETED_LABEL", value: 1, isUnsigned: true)
!626 = !DIEnumerator(name: "NOTE_INSN_BLOCK_BEG", value: 2, isUnsigned: true)
!627 = !DIEnumerator(name: "NOTE_INSN_BLOCK_END", value: 3, isUnsigned: true)
!628 = !DIEnumerator(name: "NOTE_INSN_FUNCTION_BEG", value: 4, isUnsigned: true)
!629 = !DIEnumerator(name: "NOTE_INSN_PROLOGUE_END", value: 5, isUnsigned: true)
!630 = !DIEnumerator(name: "NOTE_INSN_EPILOGUE_BEG", value: 6, isUnsigned: true)
!631 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_BEG", value: 7, isUnsigned: true)
!632 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_END", value: 8, isUnsigned: true)
!633 = !DIEnumerator(name: "NOTE_INSN_VAR_LOCATION", value: 9, isUnsigned: true)
!634 = !DIEnumerator(name: "NOTE_INSN_BASIC_BLOCK", value: 10, isUnsigned: true)
!635 = !DIEnumerator(name: "NOTE_INSN_SWITCH_TEXT_SECTIONS", value: 11, isUnsigned: true)
!636 = !DIEnumerator(name: "NOTE_INSN_CFA_RESTORE_STATE", value: 12, isUnsigned: true)
!637 = !DIEnumerator(name: "NOTE_INSN_MAX", value: 13, isUnsigned: true)
!638 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insert_option", file: !639, line: 147, baseType: !7, size: 32, elements: !640)
!639 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!640 = !{!641, !642}
!641 = !DIEnumerator(name: "NO_INSERT", value: 0, isUnsigned: true)
!642 = !DIEnumerator(name: "INSERT", value: 1, isUnsigned: true)
!643 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !142, line: 170, baseType: !7, size: 32, elements: !644)
!644 = !{!645, !646, !647, !648, !649, !650, !651, !652}
!645 = !DIEnumerator(name: "LOOPS_HAVE_PREHEADERS", value: 1, isUnsigned: true)
!646 = !DIEnumerator(name: "LOOPS_HAVE_SIMPLE_LATCHES", value: 2, isUnsigned: true)
!647 = !DIEnumerator(name: "LOOPS_HAVE_MARKED_IRREDUCIBLE_REGIONS", value: 4, isUnsigned: true)
!648 = !DIEnumerator(name: "LOOPS_HAVE_RECORDED_EXITS", value: 8, isUnsigned: true)
!649 = !DIEnumerator(name: "LOOPS_MAY_HAVE_MULTIPLE_LATCHES", value: 16, isUnsigned: true)
!650 = !DIEnumerator(name: "LOOP_CLOSED_SSA", value: 32, isUnsigned: true)
!651 = !DIEnumerator(name: "LOOPS_NEED_FIXUP", value: 64, isUnsigned: true)
!652 = !DIEnumerator(name: "LOOPS_HAVE_FALLTHRU_PREHEADERS", value: 128, isUnsigned: true)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "compiler_param", file: !654, line: 82, baseType: !7, size: 32, elements: !655)
!654 = !DIFile(filename: "./params.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!655 = !{!656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775}
!656 = !DIEnumerator(name: "PARAM_STRUCT_REORG_COLD_STRUCT_RATIO", value: 0, isUnsigned: true)
!657 = !DIEnumerator(name: "PARAM_PREDICTABLE_BRANCH_OUTCOME", value: 1, isUnsigned: true)
!658 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_SINGLE", value: 2, isUnsigned: true)
!659 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_AUTO", value: 3, isUnsigned: true)
!660 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_RECURSIVE", value: 4, isUnsigned: true)
!661 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_RECURSIVE_AUTO", value: 5, isUnsigned: true)
!662 = !DIEnumerator(name: "PARAM_MAX_INLINE_RECURSIVE_DEPTH", value: 6, isUnsigned: true)
!663 = !DIEnumerator(name: "PARAM_MAX_INLINE_RECURSIVE_DEPTH_AUTO", value: 7, isUnsigned: true)
!664 = !DIEnumerator(name: "PARAM_MIN_INLINE_RECURSIVE_PROBABILITY", value: 8, isUnsigned: true)
!665 = !DIEnumerator(name: "PARAM_EARLY_INLINER_MAX_ITERATIONS", value: 9, isUnsigned: true)
!666 = !DIEnumerator(name: "PARAM_MAX_VARIABLE_EXPANSIONS", value: 10, isUnsigned: true)
!667 = !DIEnumerator(name: "PARAM_MIN_VECT_LOOP_BOUND", value: 11, isUnsigned: true)
!668 = !DIEnumerator(name: "PARAM_MAX_DELAY_SLOT_INSN_SEARCH", value: 12, isUnsigned: true)
!669 = !DIEnumerator(name: "PARAM_MAX_DELAY_SLOT_LIVE_SEARCH", value: 13, isUnsigned: true)
!670 = !DIEnumerator(name: "PARAM_MAX_PENDING_LIST_LENGTH", value: 14, isUnsigned: true)
!671 = !DIEnumerator(name: "PARAM_LARGE_FUNCTION_INSNS", value: 15, isUnsigned: true)
!672 = !DIEnumerator(name: "PARAM_LARGE_FUNCTION_GROWTH", value: 16, isUnsigned: true)
!673 = !DIEnumerator(name: "PARAM_LARGE_UNIT_INSNS", value: 17, isUnsigned: true)
!674 = !DIEnumerator(name: "PARAM_INLINE_UNIT_GROWTH", value: 18, isUnsigned: true)
!675 = !DIEnumerator(name: "PARAM_IPCP_UNIT_GROWTH", value: 19, isUnsigned: true)
!676 = !DIEnumerator(name: "PARAM_EARLY_INLINING_INSNS", value: 20, isUnsigned: true)
!677 = !DIEnumerator(name: "PARAM_LARGE_STACK_FRAME", value: 21, isUnsigned: true)
!678 = !DIEnumerator(name: "PARAM_STACK_FRAME_GROWTH", value: 22, isUnsigned: true)
!679 = !DIEnumerator(name: "PARAM_MAX_GCSE_MEMORY", value: 23, isUnsigned: true)
!680 = !DIEnumerator(name: "PARAM_GCSE_AFTER_RELOAD_PARTIAL_FRACTION", value: 24, isUnsigned: true)
!681 = !DIEnumerator(name: "PARAM_GCSE_AFTER_RELOAD_CRITICAL_FRACTION", value: 25, isUnsigned: true)
!682 = !DIEnumerator(name: "PARAM_MAX_UNROLLED_INSNS", value: 26, isUnsigned: true)
!683 = !DIEnumerator(name: "PARAM_MAX_AVERAGE_UNROLLED_INSNS", value: 27, isUnsigned: true)
!684 = !DIEnumerator(name: "PARAM_MAX_UNROLL_TIMES", value: 28, isUnsigned: true)
!685 = !DIEnumerator(name: "PARAM_MAX_PEELED_INSNS", value: 29, isUnsigned: true)
!686 = !DIEnumerator(name: "PARAM_MAX_PEEL_TIMES", value: 30, isUnsigned: true)
!687 = !DIEnumerator(name: "PARAM_MAX_COMPLETELY_PEELED_INSNS", value: 31, isUnsigned: true)
!688 = !DIEnumerator(name: "PARAM_MAX_COMPLETELY_PEEL_TIMES", value: 32, isUnsigned: true)
!689 = !DIEnumerator(name: "PARAM_MAX_ONCE_PEELED_INSNS", value: 33, isUnsigned: true)
!690 = !DIEnumerator(name: "PARAM_MAX_UNROLL_ITERATIONS", value: 34, isUnsigned: true)
!691 = !DIEnumerator(name: "PARAM_MAX_UNSWITCH_INSNS", value: 35, isUnsigned: true)
!692 = !DIEnumerator(name: "PARAM_MAX_UNSWITCH_LEVEL", value: 36, isUnsigned: true)
!693 = !DIEnumerator(name: "PARAM_MAX_ITERATIONS_TO_TRACK", value: 37, isUnsigned: true)
!694 = !DIEnumerator(name: "PARAM_MAX_ITERATIONS_COMPUTATION_COST", value: 38, isUnsigned: true)
!695 = !DIEnumerator(name: "PARAM_SMS_MAX_II_FACTOR", value: 39, isUnsigned: true)
!696 = !DIEnumerator(name: "PARAM_SMS_DFA_HISTORY", value: 40, isUnsigned: true)
!697 = !DIEnumerator(name: "PARAM_SMS_LOOP_AVERAGE_COUNT_THRESHOLD", value: 41, isUnsigned: true)
!698 = !DIEnumerator(name: "HOT_BB_COUNT_FRACTION", value: 42, isUnsigned: true)
!699 = !DIEnumerator(name: "HOT_BB_FREQUENCY_FRACTION", value: 43, isUnsigned: true)
!700 = !DIEnumerator(name: "PARAM_ALIGN_THRESHOLD", value: 44, isUnsigned: true)
!701 = !DIEnumerator(name: "PARAM_ALIGN_LOOP_ITERATIONS", value: 45, isUnsigned: true)
!702 = !DIEnumerator(name: "PARAM_MAX_PREDICTED_ITERATIONS", value: 46, isUnsigned: true)
!703 = !DIEnumerator(name: "TRACER_DYNAMIC_COVERAGE_FEEDBACK", value: 47, isUnsigned: true)
!704 = !DIEnumerator(name: "TRACER_DYNAMIC_COVERAGE", value: 48, isUnsigned: true)
!705 = !DIEnumerator(name: "TRACER_MAX_CODE_GROWTH", value: 49, isUnsigned: true)
!706 = !DIEnumerator(name: "TRACER_MIN_BRANCH_RATIO", value: 50, isUnsigned: true)
!707 = !DIEnumerator(name: "TRACER_MIN_BRANCH_PROBABILITY_FEEDBACK", value: 51, isUnsigned: true)
!708 = !DIEnumerator(name: "TRACER_MIN_BRANCH_PROBABILITY", value: 52, isUnsigned: true)
!709 = !DIEnumerator(name: "PARAM_MAX_CROSSJUMP_EDGES", value: 53, isUnsigned: true)
!710 = !DIEnumerator(name: "PARAM_MIN_CROSSJUMP_INSNS", value: 54, isUnsigned: true)
!711 = !DIEnumerator(name: "PARAM_MAX_GROW_COPY_BB_INSNS", value: 55, isUnsigned: true)
!712 = !DIEnumerator(name: "PARAM_MAX_GOTO_DUPLICATION_INSNS", value: 56, isUnsigned: true)
!713 = !DIEnumerator(name: "PARAM_MAX_CSE_PATH_LENGTH", value: 57, isUnsigned: true)
!714 = !DIEnumerator(name: "PARAM_MAX_CSE_INSNS", value: 58, isUnsigned: true)
!715 = !DIEnumerator(name: "PARAM_LIM_EXPENSIVE", value: 59, isUnsigned: true)
!716 = !DIEnumerator(name: "PARAM_IV_CONSIDER_ALL_CANDIDATES_BOUND", value: 60, isUnsigned: true)
!717 = !DIEnumerator(name: "PARAM_IV_MAX_CONSIDERED_USES", value: 61, isUnsigned: true)
!718 = !DIEnumerator(name: "PARAM_IV_ALWAYS_PRUNE_CAND_SET_BOUND", value: 62, isUnsigned: true)
!719 = !DIEnumerator(name: "PARAM_SCEV_MAX_EXPR_SIZE", value: 63, isUnsigned: true)
!720 = !DIEnumerator(name: "PARAM_OMEGA_MAX_VARS", value: 64, isUnsigned: true)
!721 = !DIEnumerator(name: "PARAM_OMEGA_MAX_GEQS", value: 65, isUnsigned: true)
!722 = !DIEnumerator(name: "PARAM_OMEGA_MAX_EQS", value: 66, isUnsigned: true)
!723 = !DIEnumerator(name: "PARAM_OMEGA_MAX_WILD_CARDS", value: 67, isUnsigned: true)
!724 = !DIEnumerator(name: "PARAM_OMEGA_HASH_TABLE_SIZE", value: 68, isUnsigned: true)
!725 = !DIEnumerator(name: "PARAM_OMEGA_MAX_KEYS", value: 69, isUnsigned: true)
!726 = !DIEnumerator(name: "PARAM_OMEGA_ELIMINATE_REDUNDANT_CONSTRAINTS", value: 70, isUnsigned: true)
!727 = !DIEnumerator(name: "PARAM_VECT_MAX_VERSION_FOR_ALIGNMENT_CHECKS", value: 71, isUnsigned: true)
!728 = !DIEnumerator(name: "PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS", value: 72, isUnsigned: true)
!729 = !DIEnumerator(name: "PARAM_MAX_CSELIB_MEMORY_LOCATIONS", value: 73, isUnsigned: true)
!730 = !DIEnumerator(name: "GGC_MIN_EXPAND", value: 74, isUnsigned: true)
!731 = !DIEnumerator(name: "GGC_MIN_HEAPSIZE", value: 75, isUnsigned: true)
!732 = !DIEnumerator(name: "PARAM_MAX_RELOAD_SEARCH_INSNS", value: 76, isUnsigned: true)
!733 = !DIEnumerator(name: "PARAM_MAX_SCHED_REGION_BLOCKS", value: 77, isUnsigned: true)
!734 = !DIEnumerator(name: "PARAM_MAX_SCHED_REGION_INSNS", value: 78, isUnsigned: true)
!735 = !DIEnumerator(name: "PARAM_MAX_PIPELINE_REGION_BLOCKS", value: 79, isUnsigned: true)
!736 = !DIEnumerator(name: "PARAM_MAX_PIPELINE_REGION_INSNS", value: 80, isUnsigned: true)
!737 = !DIEnumerator(name: "PARAM_MIN_SPEC_PROB", value: 81, isUnsigned: true)
!738 = !DIEnumerator(name: "PARAM_MAX_SCHED_EXTEND_REGIONS_ITERS", value: 82, isUnsigned: true)
!739 = !DIEnumerator(name: "PARAM_MAX_SCHED_INSN_CONFLICT_DELAY", value: 83, isUnsigned: true)
!740 = !DIEnumerator(name: "PARAM_SCHED_SPEC_PROB_CUTOFF", value: 84, isUnsigned: true)
!741 = !DIEnumerator(name: "PARAM_SELSCHED_MAX_LOOKAHEAD", value: 85, isUnsigned: true)
!742 = !DIEnumerator(name: "PARAM_SELSCHED_MAX_SCHED_TIMES", value: 86, isUnsigned: true)
!743 = !DIEnumerator(name: "PARAM_SELSCHED_INSNS_TO_RENAME", value: 87, isUnsigned: true)
!744 = !DIEnumerator(name: "PARAM_SCHED_MEM_TRUE_DEP_COST", value: 88, isUnsigned: true)
!745 = !DIEnumerator(name: "PARAM_MAX_LAST_VALUE_RTL", value: 89, isUnsigned: true)
!746 = !DIEnumerator(name: "PARAM_INTEGER_SHARE_LIMIT", value: 90, isUnsigned: true)
!747 = !DIEnumerator(name: "PARAM_MIN_VIRTUAL_MAPPINGS", value: 91, isUnsigned: true)
!748 = !DIEnumerator(name: "PARAM_VIRTUAL_MAPPINGS_TO_SYMS_RATIO", value: 92, isUnsigned: true)
!749 = !DIEnumerator(name: "PARAM_SSP_BUFFER_SIZE", value: 93, isUnsigned: true)
!750 = !DIEnumerator(name: "PARAM_MAX_JUMP_THREAD_DUPLICATION_STMTS", value: 94, isUnsigned: true)
!751 = !DIEnumerator(name: "PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE", value: 95, isUnsigned: true)
!752 = !DIEnumerator(name: "PARAM_MAX_SCHED_READY_INSNS", value: 96, isUnsigned: true)
!753 = !DIEnumerator(name: "PARAM_PREFETCH_LATENCY", value: 97, isUnsigned: true)
!754 = !DIEnumerator(name: "PARAM_SIMULTANEOUS_PREFETCHES", value: 98, isUnsigned: true)
!755 = !DIEnumerator(name: "PARAM_L1_CACHE_SIZE", value: 99, isUnsigned: true)
!756 = !DIEnumerator(name: "PARAM_L1_CACHE_LINE_SIZE", value: 100, isUnsigned: true)
!757 = !DIEnumerator(name: "PARAM_L2_CACHE_SIZE", value: 101, isUnsigned: true)
!758 = !DIEnumerator(name: "PARAM_USE_CANONICAL_TYPES", value: 102, isUnsigned: true)
!759 = !DIEnumerator(name: "PARAM_MAX_PARTIAL_ANTIC_LENGTH", value: 103, isUnsigned: true)
!760 = !DIEnumerator(name: "PARAM_SCCVN_MAX_SCC_SIZE", value: 104, isUnsigned: true)
!761 = !DIEnumerator(name: "PARAM_IRA_MAX_LOOPS_NUM", value: 105, isUnsigned: true)
!762 = !DIEnumerator(name: "PARAM_IRA_MAX_CONFLICT_TABLE_SIZE", value: 106, isUnsigned: true)
!763 = !DIEnumerator(name: "PARAM_IRA_LOOP_RESERVED_REGS", value: 107, isUnsigned: true)
!764 = !DIEnumerator(name: "PARAM_SWITCH_CONVERSION_BRANCH_RATIO", value: 108, isUnsigned: true)
!765 = !DIEnumerator(name: "PARAM_LOOP_BLOCK_TILE_SIZE", value: 109, isUnsigned: true)
!766 = !DIEnumerator(name: "PARAM_GRAPHITE_MAX_NB_SCOP_PARAMS", value: 110, isUnsigned: true)
!767 = !DIEnumerator(name: "PARAM_GRAPHITE_MAX_BBS_PER_FUNCTION", value: 111, isUnsigned: true)
!768 = !DIEnumerator(name: "PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP", value: 112, isUnsigned: true)
!769 = !DIEnumerator(name: "PARAM_SLP_MAX_INSNS_IN_BB", value: 113, isUnsigned: true)
!770 = !DIEnumerator(name: "PARAM_MIN_INSN_TO_PREFETCH_RATIO", value: 114, isUnsigned: true)
!771 = !DIEnumerator(name: "PARAM_PREFETCH_MIN_INSN_TO_MEM_RATIO", value: 115, isUnsigned: true)
!772 = !DIEnumerator(name: "PARAM_MAX_VARTRACK_SIZE", value: 116, isUnsigned: true)
!773 = !DIEnumerator(name: "PARAM_MIN_NONDEBUG_INSN_UID", value: 117, isUnsigned: true)
!774 = !DIEnumerator(name: "PARAM_IPA_SRA_PTR_GROWTH_FACTOR", value: 118, isUnsigned: true)
!775 = !DIEnumerator(name: "LAST_PARAM", value: 119, isUnsigned: true)
!776 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cdi_direction", file: !155, line: 912, baseType: !7, size: 32, elements: !777)
!777 = !{!778, !779}
!778 = !DIEnumerator(name: "CDI_DOMINATORS", value: 1, isUnsigned: true)
!779 = !DIEnumerator(name: "CDI_POST_DOMINATORS", value: 2, isUnsigned: true)
!780 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !166, line: 1188, baseType: !7, size: 32, elements: !781)
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809}
!782 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!783 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!784 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!785 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!786 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!787 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!788 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!789 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!790 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!791 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!792 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!793 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!794 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!795 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!796 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!797 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!798 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!799 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!800 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!801 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!802 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!803 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!804 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!805 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!806 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!807 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!808 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!809 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!810 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "op_type", file: !811, line: 25, baseType: !7, size: 32, elements: !812)
!811 = !DIFile(filename: "./recog.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!812 = !{!813, !814, !815}
!813 = !DIEnumerator(name: "OP_IN", value: 0, isUnsigned: true)
!814 = !DIEnumerator(name: "OP_OUT", value: 1, isUnsigned: true)
!815 = !DIEnumerator(name: "OP_INOUT", value: 2, isUnsigned: true)
!816 = !{!817, !819, !455, !820, !825, !2089, !2120, !7, !2133, !2142, !5, !2148, !2149, !2234, !2246, !1379, !2255, !1300, !849, !2260, !898, !2219, !2265, !2277, !2061, !2279, !2055, !2281, !2056, !2132, !2039, !2074}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "moveop_static_params_p", file: !3, line: 406, baseType: !821)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moveop_static_params", file: !3, line: 370, size: 192, elements: !823)
!823 = !{!824, !2054, !2118, !2119}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !822, file: !3, line: 373, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !826, line: 50, baseType: !827)
!826 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !456, line: 240, size: 384, elements: !829)
!829 = !{!830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !828, file: !456, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !828, file: !456, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !828, file: !456, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !828, file: !456, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !828, file: !456, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !828, file: !456, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !828, file: !456, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !828, file: !456, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !828, file: !456, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !828, file: !456, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !828, file: !456, line: 321, baseType: !841, size: 320, offset: 64)
!841 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !456, line: 315, size: 320, elements: !842)
!842 = !{!843, !1989, !1991, !2052, !2053}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !841, file: !456, line: 316, baseType: !844, size: 64)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !845, size: 64, elements: !863)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !456, line: 183, baseType: !846)
!846 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !456, line: 166, size: 64, elements: !847)
!847 = !{!848, !850, !851, !854, !855, !865, !866, !878, !881, !943, !1967, !1968, !1979, !1986}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !846, file: !456, line: 168, baseType: !849, size: 32)
!849 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !846, file: !456, line: 169, baseType: !7, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !846, file: !456, line: 170, baseType: !852, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !818)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !846, file: !456, line: 171, baseType: !825, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !846, file: !456, line: 172, baseType: !856, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !826, line: 53, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !456, line: 359, size: 128, elements: !859)
!859 = !{!860, !861}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !858, file: !456, line: 360, baseType: !849, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !858, file: !456, line: 361, baseType: !862, size: 64, offset: 64)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !825, size: 64, elements: !863)
!863 = !{!864}
!864 = !DISubrange(count: 1)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !846, file: !456, line: 173, baseType: !5, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !846, file: !456, line: 174, baseType: !867, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !456, line: 133, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !456, line: 115, size: 32, elements: !869)
!869 = !{!870, !871, !872, !873, !874, !875, !876, !877}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !868, file: !456, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !868, file: !456, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !868, file: !456, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !868, file: !456, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !868, file: !456, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !868, file: !456, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !868, file: !456, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !868, file: !456, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !846, file: !456, line: 175, baseType: !879, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !456, line: 175, flags: DIFlagFwdDecl)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !846, file: !456, line: 176, baseType: !882, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !884, line: 75, size: 256, elements: !885)
!884 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!885 = !{!886, !901, !902, !903}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !883, file: !884, line: 76, baseType: !887, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !884, line: 68, baseType: !889)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !884, line: 63, size: 320, elements: !890)
!890 = !{!891, !893, !894, !895}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !889, file: !884, line: 64, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !889, file: !884, line: 65, baseType: !892, size: 64, offset: 64)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !889, file: !884, line: 66, baseType: !7, size: 32, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !889, file: !884, line: 67, baseType: !896, size: 128, offset: 192)
!896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !897, size: 128, elements: !899)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !884, line: 29, baseType: !898)
!898 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!899 = !{!900}
!900 = !DISubrange(count: 2)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !883, file: !884, line: 77, baseType: !887, size: 64, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !883, file: !884, line: 78, baseType: !7, size: 32, offset: 128)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !883, file: !884, line: 79, baseType: !904, size: 64, offset: 192)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !884, line: 49, baseType: !906)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !884, line: 45, size: 832, elements: !907)
!907 = !{!908, !909, !910}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !906, file: !884, line: 46, baseType: !892, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !906, file: !884, line: 47, baseType: !882, size: 64, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !906, file: !884, line: 48, baseType: !911, size: 704, offset: 128)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !912, line: 164, size: 704, elements: !913)
!912 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!913 = !{!914, !916, !926, !927, !928, !929, !930, !931, !935, !939, !940, !941, !942}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !911, file: !912, line: 166, baseType: !915, size: 64)
!915 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !911, file: !912, line: 167, baseType: !917, size: 64, offset: 64)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !912, line: 157, size: 192, elements: !919)
!919 = !{!920, !921, !922}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !918, file: !912, line: 159, baseType: !817, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !918, file: !912, line: 160, baseType: !917, size: 64, offset: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !918, file: !912, line: 161, baseType: !923, size: 32, offset: 128)
!923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !818, size: 32, elements: !924)
!924 = !{!925}
!925 = !DISubrange(count: 4)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !911, file: !912, line: 168, baseType: !817, size: 64, offset: 128)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !911, file: !912, line: 169, baseType: !817, size: 64, offset: 192)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !911, file: !912, line: 170, baseType: !817, size: 64, offset: 256)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !911, file: !912, line: 171, baseType: !915, size: 64, offset: 320)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !911, file: !912, line: 172, baseType: !849, size: 32, offset: 384)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !911, file: !912, line: 176, baseType: !932, size: 64, offset: 448)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{!917, !819, !915}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !911, file: !912, line: 177, baseType: !936, size: 64, offset: 512)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !819, !917}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !911, file: !912, line: 178, baseType: !819, size: 64, offset: 576)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !911, file: !912, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !911, file: !912, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !911, file: !912, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !846, file: !456, line: 177, baseType: !944, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !826, line: 56, baseType: !945)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !171, line: 3371, size: 1792, elements: !947)
!947 = !{!948, !981, !987, !998, !1017, !1028, !1033, !1040, !1046, !1060, !1072, !1110, !1115, !1143, !1151, !1152, !1157, !1166, !1172, !1177, !1181, !1185, !1606, !1655, !1661, !1667, !1674, !1697, !1711, !1728, !1740, !1762, !1777, !1949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !946, file: !171, line: 3372, baseType: !949, size: 64)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !171, line: 360, size: 64, elements: !950)
!950 = !{!951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !949, file: !171, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !949, file: !171, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !949, file: !171, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !949, file: !171, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !949, file: !171, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !949, file: !171, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !949, file: !171, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !949, file: !171, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !949, file: !171, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !949, file: !171, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !949, file: !171, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !949, file: !171, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !949, file: !171, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !949, file: !171, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !949, file: !171, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !949, file: !171, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !949, file: !171, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !949, file: !171, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !949, file: !171, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !949, file: !171, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !949, file: !171, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !949, file: !171, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !949, file: !171, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !949, file: !171, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !949, file: !171, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !949, file: !171, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !949, file: !171, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !949, file: !171, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !949, file: !171, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !949, file: !171, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !946, file: !171, line: 3373, baseType: !982, size: 192)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !171, line: 402, size: 192, elements: !983)
!983 = !{!984, !985, !986}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !982, file: !171, line: 403, baseType: !949, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !982, file: !171, line: 404, baseType: !944, size: 64, offset: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !982, file: !171, line: 405, baseType: !944, size: 64, offset: 128)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !946, file: !171, line: 3374, baseType: !988, size: 320)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !171, line: 1384, size: 320, elements: !989)
!989 = !{!990, !991}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !988, file: !171, line: 1385, baseType: !982, size: 192)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !988, file: !171, line: 1386, baseType: !992, size: 128, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !993, line: 58, baseType: !994)
!993 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !993, line: 54, size: 128, elements: !995)
!995 = !{!996, !997}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !994, file: !993, line: 56, baseType: !898, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !994, file: !993, line: 57, baseType: !915, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !946, file: !171, line: 3375, baseType: !999, size: 256)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !171, line: 1397, size: 256, elements: !1000)
!1000 = !{!1001, !1002}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !999, file: !171, line: 1398, baseType: !982, size: 192)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !999, file: !171, line: 1399, baseType: !1003, size: 64, offset: 192)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1005, line: 52, size: 256, elements: !1006)
!1005 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1006 = !{!1007, !1008, !1009, !1010, !1011, !1012, !1013}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1004, file: !1005, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1004, file: !1005, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1004, file: !1005, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1004, file: !1005, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1004, file: !1005, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1004, file: !1005, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1004, file: !1005, line: 62, baseType: !1014, size: 192, offset: 64)
!1014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 192, elements: !1015)
!1015 = !{!1016}
!1016 = !DISubrange(count: 3)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !946, file: !171, line: 3376, baseType: !1018, size: 256)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !171, line: 1408, size: 256, elements: !1019)
!1019 = !{!1020, !1021}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1018, file: !171, line: 1409, baseType: !982, size: 192)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1018, file: !171, line: 1410, baseType: !1022, size: 64, offset: 192)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1024, line: 27, size: 192, elements: !1025)
!1024 = !DIFile(filename: "./fixed-value.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1025 = !{!1026, !1027}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1023, file: !1024, line: 29, baseType: !992, size: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1023, file: !1024, line: 30, baseType: !5, size: 32, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !946, file: !171, line: 3377, baseType: !1029, size: 256)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !171, line: 1437, size: 256, elements: !1030)
!1030 = !{!1031, !1032}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1029, file: !171, line: 1438, baseType: !982, size: 192)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1029, file: !171, line: 1439, baseType: !944, size: 64, offset: 192)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !946, file: !171, line: 3378, baseType: !1034, size: 256)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !171, line: 1418, size: 256, elements: !1035)
!1035 = !{!1036, !1037, !1038}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1034, file: !171, line: 1419, baseType: !982, size: 192)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1034, file: !171, line: 1420, baseType: !849, size: 32, offset: 192)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1034, file: !171, line: 1421, baseType: !1039, size: 8, offset: 224)
!1039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !818, size: 8, elements: !863)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !946, file: !171, line: 3379, baseType: !1041, size: 320)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !171, line: 1428, size: 320, elements: !1042)
!1042 = !{!1043, !1044, !1045}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1041, file: !171, line: 1429, baseType: !982, size: 192)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1041, file: !171, line: 1430, baseType: !944, size: 64, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1041, file: !171, line: 1431, baseType: !944, size: 64, offset: 256)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !946, file: !171, line: 3380, baseType: !1047, size: 320)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !171, line: 1460, size: 320, elements: !1048)
!1048 = !{!1049, !1050}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1047, file: !171, line: 1461, baseType: !982, size: 192)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1047, file: !171, line: 1462, baseType: !1051, size: 128, offset: 192)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1052, line: 31, size: 128, elements: !1053)
!1052 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1053 = !{!1054, !1058, !1059}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1051, file: !1052, line: 32, baseType: !1055, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1057 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1051, file: !1052, line: 33, baseType: !7, size: 32, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1051, file: !1052, line: 34, baseType: !7, size: 32, offset: 96)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !946, file: !171, line: 3381, baseType: !1061, size: 384)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !171, line: 2507, size: 384, elements: !1062)
!1062 = !{!1063, !1064, !1069, !1070, !1071}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1061, file: !171, line: 2508, baseType: !982, size: 192)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1061, file: !171, line: 2509, baseType: !1065, size: 32, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1066, line: 58, baseType: !1067)
!1066 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1068, line: 44, baseType: !7)
!1068 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1061, file: !171, line: 2510, baseType: !7, size: 32, offset: 224)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1061, file: !171, line: 2511, baseType: !944, size: 64, offset: 256)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1061, file: !171, line: 2512, baseType: !944, size: 64, offset: 320)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !946, file: !171, line: 3382, baseType: !1073, size: 896)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !171, line: 2652, size: 896, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1073, file: !171, line: 2653, baseType: !1061, size: 384)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1073, file: !171, line: 2654, baseType: !944, size: 64, offset: 384)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1073, file: !171, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1073, file: !171, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1073, file: !171, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1073, file: !171, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1073, file: !171, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1073, file: !171, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1073, file: !171, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1073, file: !171, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1073, file: !171, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1073, file: !171, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1073, file: !171, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1073, file: !171, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1073, file: !171, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1073, file: !171, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1073, file: !171, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1073, file: !171, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1073, file: !171, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1073, file: !171, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1073, file: !171, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1073, file: !171, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1073, file: !171, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1073, file: !171, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1073, file: !171, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1073, file: !171, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1073, file: !171, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1073, file: !171, line: 2703, baseType: !7, size: 32, offset: 512)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1073, file: !171, line: 2705, baseType: !944, size: 64, offset: 576)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1073, file: !171, line: 2706, baseType: !944, size: 64, offset: 640)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1073, file: !171, line: 2707, baseType: !944, size: 64, offset: 704)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1073, file: !171, line: 2708, baseType: !944, size: 64, offset: 768)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1073, file: !171, line: 2711, baseType: !1108, size: 64, offset: 832)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !171, line: 2711, flags: DIFlagFwdDecl)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !946, file: !171, line: 3383, baseType: !1111, size: 960)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !171, line: 2756, size: 960, elements: !1112)
!1112 = !{!1113, !1114}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1111, file: !171, line: 2757, baseType: !1073, size: 896)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1111, file: !171, line: 2758, baseType: !825, size: 64, offset: 896)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !946, file: !171, line: 3384, baseType: !1116, size: 1472)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !171, line: 3114, size: 1472, elements: !1117)
!1117 = !{!1118, !1139, !1140, !1141, !1142}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1116, file: !171, line: 3115, baseType: !1119, size: 1216)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !171, line: 2984, size: 1216, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1119, file: !171, line: 2985, baseType: !1111, size: 960)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1119, file: !171, line: 2986, baseType: !944, size: 64, offset: 960)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1119, file: !171, line: 2987, baseType: !944, size: 64, offset: 1024)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1119, file: !171, line: 2988, baseType: !944, size: 64, offset: 1088)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1119, file: !171, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1119, file: !171, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1119, file: !171, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1119, file: !171, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1119, file: !171, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1119, file: !171, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1119, file: !171, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1119, file: !171, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1119, file: !171, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1119, file: !171, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1119, file: !171, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1119, file: !171, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1119, file: !171, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1119, file: !171, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1116, file: !171, line: 3117, baseType: !944, size: 64, offset: 1216)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1116, file: !171, line: 3119, baseType: !944, size: 64, offset: 1280)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1116, file: !171, line: 3121, baseType: !944, size: 64, offset: 1344)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1116, file: !171, line: 3123, baseType: !944, size: 64, offset: 1408)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !946, file: !171, line: 3385, baseType: !1144, size: 1088)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !171, line: 2874, size: 1088, elements: !1145)
!1145 = !{!1146, !1147, !1148}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1144, file: !171, line: 2875, baseType: !1111, size: 960)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1144, file: !171, line: 2876, baseType: !825, size: 64, offset: 960)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1144, file: !171, line: 2877, baseType: !1149, size: 64, offset: 1024)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !171, line: 2856, flags: DIFlagFwdDecl)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !946, file: !171, line: 3386, baseType: !1119, size: 1216)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !946, file: !171, line: 3387, baseType: !1153, size: 1280)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !171, line: 3093, size: 1280, elements: !1154)
!1154 = !{!1155, !1156}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1153, file: !171, line: 3094, baseType: !1119, size: 1216)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1153, file: !171, line: 3095, baseType: !1149, size: 64, offset: 1216)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !946, file: !171, line: 3388, baseType: !1158, size: 1216)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !171, line: 2824, size: 1216, elements: !1159)
!1159 = !{!1160, !1161, !1162, !1163, !1164, !1165}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1158, file: !171, line: 2825, baseType: !1073, size: 896)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1158, file: !171, line: 2827, baseType: !944, size: 64, offset: 896)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1158, file: !171, line: 2828, baseType: !944, size: 64, offset: 960)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1158, file: !171, line: 2829, baseType: !944, size: 64, offset: 1024)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1158, file: !171, line: 2830, baseType: !944, size: 64, offset: 1088)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1158, file: !171, line: 2831, baseType: !944, size: 64, offset: 1152)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !946, file: !171, line: 3389, baseType: !1167, size: 1024)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !171, line: 2850, size: 1024, elements: !1168)
!1168 = !{!1169, !1170, !1171}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1167, file: !171, line: 2851, baseType: !1111, size: 960)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1167, file: !171, line: 2852, baseType: !849, size: 32, offset: 960)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1167, file: !171, line: 2853, baseType: !849, size: 32, offset: 992)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !946, file: !171, line: 3390, baseType: !1173, size: 1024)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !171, line: 2857, size: 1024, elements: !1174)
!1174 = !{!1175, !1176}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1173, file: !171, line: 2858, baseType: !1111, size: 960)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1173, file: !171, line: 2859, baseType: !1149, size: 64, offset: 960)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !946, file: !171, line: 3391, baseType: !1178, size: 960)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !171, line: 2862, size: 960, elements: !1179)
!1179 = !{!1180}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1178, file: !171, line: 2863, baseType: !1111, size: 960)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !946, file: !171, line: 3392, baseType: !1182, size: 1472)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !171, line: 3304, size: 1472, elements: !1183)
!1183 = !{!1184}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1182, file: !171, line: 3305, baseType: !1116, size: 1472)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !946, file: !171, line: 3393, baseType: !1186, size: 1792)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !171, line: 3248, size: 1792, elements: !1187)
!1187 = !{!1188, !1189, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1186, file: !171, line: 3249, baseType: !1116, size: 1472)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1186, file: !171, line: 3251, baseType: !1190, size: 64, offset: 1472)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1192, line: 463, size: 1152, elements: !1193)
!1192 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1193 = !{!1194, !1357, !1517, !1518, !1521, !1529, !1530, !1531, !1532, !1533, !1534, !1558, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1191, file: !1192, line: 464, baseType: !1195, size: 64)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1197)
!1197 = !{!1198, !1247, !1260, !1274, !1325, !1338}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1196, file: !135, line: 197, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1200)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1202)
!1202 = !{!1203, !1204, !1205, !1206, !1207, !1208, !1235, !1244, !1245, !1246}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1201, file: !135, line: 119, baseType: !1200, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1201, file: !135, line: 122, baseType: !1200, size: 64, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1201, file: !135, line: 123, baseType: !1200, size: 64, offset: 128)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1201, file: !135, line: 126, baseType: !849, size: 32, offset: 192)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1201, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1201, file: !135, line: 165, baseType: !1209, size: 192, offset: 256)
!1209 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1210)
!1210 = !{!1211, !1224, !1230}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1209, file: !135, line: 137, baseType: !1212, size: 128)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1213)
!1213 = !{!1214, !1223}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1212, file: !135, line: 135, baseType: !1215, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1217)
!1217 = !{!1218, !1219, !1220, !1221, !1222}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1216, file: !135, line: 96, baseType: !1215, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1216, file: !135, line: 97, baseType: !1215, size: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1216, file: !135, line: 101, baseType: !944, size: 64, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1216, file: !135, line: 106, baseType: !944, size: 64, offset: 192)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1216, file: !135, line: 111, baseType: !944, size: 64, offset: 256)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1212, file: !135, line: 136, baseType: !1215, size: 64, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1209, file: !135, line: 151, baseType: !1225, size: 192)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1226)
!1226 = !{!1227, !1228, !1229}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1225, file: !135, line: 141, baseType: !944, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1225, file: !135, line: 145, baseType: !944, size: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1225, file: !135, line: 150, baseType: !849, size: 32, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1209, file: !135, line: 164, baseType: !1231, size: 128)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1232)
!1232 = !{!1233, !1234}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1231, file: !135, line: 161, baseType: !944, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1231, file: !135, line: 163, baseType: !1065, size: 32, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1201, file: !135, line: 168, baseType: !1236, size: 64, offset: 448)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1237, file: !135, line: 70, baseType: !1236, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1237, file: !135, line: 73, baseType: !1200, size: 64, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1237, file: !135, line: 78, baseType: !944, size: 64, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1237, file: !135, line: 85, baseType: !825, size: 64, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1237, file: !135, line: 88, baseType: !849, size: 32, offset: 256)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1201, file: !135, line: 173, baseType: !825, size: 64, offset: 512)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1201, file: !135, line: 173, baseType: !825, size: 64, offset: 576)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1201, file: !135, line: 177, baseType: !1057, size: 8, offset: 640)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1196, file: !135, line: 200, baseType: !1248, size: 64, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1251)
!1251 = !{!1252}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1250, file: !135, line: 185, baseType: !1253, size: 128)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1254)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1255)
!1255 = !{!1256, !1257, !1258}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1254, file: !135, line: 184, baseType: !7, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1254, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1254, file: !135, line: 184, baseType: !1259, size: 64, offset: 64)
!1259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1199, size: 64, elements: !863)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1196, file: !135, line: 203, baseType: !1261, size: 64, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1263)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1264)
!1264 = !{!1265}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1263, file: !135, line: 189, baseType: !1266, size: 128)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1268)
!1268 = !{!1269, !1270, !1271}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1267, file: !135, line: 188, baseType: !7, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1267, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1267, file: !135, line: 188, baseType: !1272, size: 64, offset: 64)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1273, size: 64, elements: !863)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1236)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1196, file: !135, line: 207, baseType: !1275, size: 64, offset: 192)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !639, line: 144, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !639, line: 100, size: 896, elements: !1278)
!1278 = !{!1279, !1287, !1292, !1297, !1299, !1302, !1303, !1304, !1305, !1306, !1311, !1313, !1314, !1319, !1324}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1277, file: !639, line: 102, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !639, line: 52, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!1284, !1285}
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !639, line: 47, baseType: !7)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1277, file: !639, line: 105, baseType: !1288, size: 64, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !639, line: 59, baseType: !1289)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!849, !1285, !1285}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1277, file: !639, line: 108, baseType: !1293, size: 64, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !639, line: 63, baseType: !1294)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{null, !819}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1277, file: !639, line: 111, baseType: !1298, size: 64, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1277, file: !639, line: 114, baseType: !1300, size: 64, offset: 256)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1301, line: 46, baseType: !898)
!1301 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1277, file: !639, line: 117, baseType: !1300, size: 64, offset: 320)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1277, file: !639, line: 120, baseType: !1300, size: 64, offset: 384)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1277, file: !639, line: 124, baseType: !7, size: 32, offset: 448)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1277, file: !639, line: 128, baseType: !7, size: 32, offset: 480)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1277, file: !639, line: 131, baseType: !1307, size: 64, offset: 512)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !639, line: 75, baseType: !1308)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!819, !1300, !1300}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1277, file: !639, line: 132, baseType: !1312, size: 64, offset: 576)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !639, line: 78, baseType: !1294)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1277, file: !639, line: 135, baseType: !819, size: 64, offset: 640)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1277, file: !639, line: 136, baseType: !1315, size: 64, offset: 704)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !639, line: 82, baseType: !1316)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!819, !819, !1300, !1300}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1277, file: !639, line: 137, baseType: !1320, size: 64, offset: 768)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !639, line: 83, baseType: !1321)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !819, !819}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1277, file: !639, line: 141, baseType: !7, size: 32, offset: 832)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1196, file: !135, line: 211, baseType: !1326, size: 64, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !171, line: 183, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !171, line: 183, size: 128, elements: !1329)
!1329 = !{!1330}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1328, file: !171, line: 183, baseType: !1331, size: 128)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !171, line: 182, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !171, line: 182, size: 128, elements: !1333)
!1333 = !{!1334, !1335, !1336}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1332, file: !171, line: 182, baseType: !7, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1332, file: !171, line: 182, baseType: !7, size: 32, offset: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1332, file: !171, line: 182, baseType: !1337, size: 64, offset: 64)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 64, elements: !863)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1196, file: !135, line: 220, baseType: !1339, size: 64, offset: 320)
!1339 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1340)
!1340 = !{!1341, !1342}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1339, file: !135, line: 218, baseType: !1326, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1339, file: !135, line: 219, baseType: !1343, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1345, line: 29, baseType: !1346)
!1345 = !DIFile(filename: "./vecprim.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1345, line: 29, size: 96, elements: !1347)
!1347 = !{!1348}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1346, file: !1345, line: 29, baseType: !1349, size: 96)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1345, line: 27, baseType: !1350)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1345, line: 27, size: 96, elements: !1351)
!1351 = !{!1352, !1353, !1354}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1350, file: !1345, line: 27, baseType: !7, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1350, file: !1345, line: 27, baseType: !7, size: 32, offset: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1350, file: !1345, line: 27, baseType: !1355, size: 8, offset: 64)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 8, elements: !863)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1345, line: 26, baseType: !1057)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1191, file: !1192, line: 467, baseType: !1358, size: 64, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !155, line: 374, size: 640, elements: !1360)
!1360 = !{!1361, !1492, !1493, !1506, !1507, !1508, !1509, !1510, !1511, !1513, !1515, !1516}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1359, file: !155, line: 377, baseType: !1362, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !826, line: 111, baseType: !1363)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !155, line: 217, size: 832, elements: !1365)
!1365 = !{!1366, !1401, !1402, !1403, !1462, !1466, !1467, !1468, !1486, !1487, !1488, !1489, !1490, !1491}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1364, file: !155, line: 219, baseType: !1367, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !155, line: 151, baseType: !1369)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !155, line: 151, size: 128, elements: !1370)
!1370 = !{!1371}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1369, file: !155, line: 151, baseType: !1372, size: 128)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !155, line: 150, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !155, line: 150, size: 128, elements: !1374)
!1374 = !{!1375, !1376, !1377}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1373, file: !155, line: 150, baseType: !7, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1373, file: !155, line: 150, baseType: !7, size: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1373, file: !155, line: 150, baseType: !1378, size: 64, offset: 64)
!1378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1379, size: 64, elements: !863)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !826, line: 108, baseType: !1380)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !155, line: 122, size: 512, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1393, !1394, !1395, !1396, !1397, !1398, !1399}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1381, file: !155, line: 124, baseType: !1363, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1381, file: !155, line: 125, baseType: !1363, size: 64, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1381, file: !155, line: 131, baseType: !1386, size: 64, offset: 128)
!1386 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !155, line: 128, size: 64, elements: !1387)
!1387 = !{!1388, !1392}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1386, file: !155, line: 129, baseType: !1389, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !826, line: 66, baseType: !1390)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !826, line: 65, flags: DIFlagFwdDecl)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1386, file: !155, line: 130, baseType: !825, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1381, file: !155, line: 134, baseType: !819, size: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1381, file: !155, line: 137, baseType: !944, size: 64, offset: 256)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1381, file: !155, line: 138, baseType: !1065, size: 32, offset: 320)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1381, file: !155, line: 142, baseType: !7, size: 32, offset: 352)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1381, file: !155, line: 144, baseType: !849, size: 32, offset: 384)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1381, file: !155, line: 145, baseType: !849, size: 32, offset: 416)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1381, file: !155, line: 146, baseType: !1400, size: 64, offset: 448)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !155, line: 119, baseType: !915)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1364, file: !155, line: 220, baseType: !1367, size: 64, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1364, file: !155, line: 223, baseType: !819, size: 64, offset: 128)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1364, file: !155, line: 226, baseType: !1404, size: 64, offset: 192)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 100, size: 1216, elements: !1406)
!1406 = !{!1407, !1408, !1409, !1410, !1411, !1416, !1417, !1418, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1452, !1460, !1461}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1405, file: !142, line: 102, baseType: !849, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1405, file: !142, line: 105, baseType: !7, size: 32, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1405, file: !142, line: 108, baseType: !1363, size: 64, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1405, file: !142, line: 111, baseType: !1363, size: 64, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1405, file: !142, line: 114, baseType: !1412, size: 64, offset: 192)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !142, line: 41, size: 64, elements: !1413)
!1413 = !{!1414, !1415}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1412, file: !142, line: 42, baseType: !141, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1412, file: !142, line: 43, baseType: !7, size: 32, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1405, file: !142, line: 117, baseType: !7, size: 32, offset: 256)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1405, file: !142, line: 120, baseType: !7, size: 32, offset: 288)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1405, file: !142, line: 123, baseType: !1419, size: 64, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !142, line: 87, baseType: !1421)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !142, line: 87, size: 128, elements: !1422)
!1422 = !{!1423}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1421, file: !142, line: 87, baseType: !1424, size: 128)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !142, line: 85, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !142, line: 85, size: 128, elements: !1426)
!1426 = !{!1427, !1428, !1429}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1425, file: !142, line: 85, baseType: !7, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1425, file: !142, line: 85, baseType: !7, size: 32, offset: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1425, file: !142, line: 85, baseType: !1430, size: 64, offset: 64)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1431, size: 64, elements: !863)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !142, line: 84, baseType: !1404)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1405, file: !142, line: 126, baseType: !1404, size: 64, offset: 384)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1405, file: !142, line: 129, baseType: !1404, size: 64, offset: 448)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1405, file: !142, line: 132, baseType: !819, size: 64, offset: 512)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1405, file: !142, line: 139, baseType: !944, size: 64, offset: 576)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1405, file: !142, line: 143, baseType: !992, size: 128, offset: 640)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1405, file: !142, line: 146, baseType: !992, size: 128, offset: 768)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1405, file: !142, line: 148, baseType: !1057, size: 8, offset: 896)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1405, file: !142, line: 149, baseType: !1057, size: 8, offset: 904)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1405, file: !142, line: 153, baseType: !150, size: 32, offset: 928)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1405, file: !142, line: 156, baseType: !1442, size: 64, offset: 960)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !142, line: 48, size: 320, elements: !1444)
!1444 = !{!1445, !1449, !1450, !1451}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1443, file: !142, line: 50, baseType: !1446, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !826, line: 58, baseType: !1447)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !826, line: 57, flags: DIFlagFwdDecl)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1443, file: !142, line: 59, baseType: !992, size: 128, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1443, file: !142, line: 64, baseType: !1057, size: 8, offset: 192)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1443, file: !142, line: 67, baseType: !1442, size: 64, offset: 256)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1405, file: !142, line: 159, baseType: !1453, size: 64, offset: 1024)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !142, line: 72, size: 256, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1454, file: !142, line: 74, baseType: !1380, size: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1454, file: !142, line: 77, baseType: !1453, size: 64, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1454, file: !142, line: 78, baseType: !1453, size: 64, offset: 128)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1454, file: !142, line: 81, baseType: !1453, size: 64, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1405, file: !142, line: 162, baseType: !1057, size: 8, offset: 1088)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1405, file: !142, line: 166, baseType: !944, size: 64, offset: 1152)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1364, file: !155, line: 229, baseType: !1463, size: 128, offset: 256)
!1463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1464, size: 128, elements: !899)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !155, line: 229, flags: DIFlagFwdDecl)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1364, file: !155, line: 232, baseType: !1363, size: 64, offset: 384)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1364, file: !155, line: 233, baseType: !1363, size: 64, offset: 448)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1364, file: !155, line: 238, baseType: !1469, size: 64, offset: 512)
!1469 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !155, line: 235, size: 64, elements: !1470)
!1470 = !{!1471, !1477}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1469, file: !155, line: 236, baseType: !1472, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !155, line: 273, size: 128, elements: !1474)
!1474 = !{!1475, !1476}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1473, file: !155, line: 275, baseType: !1389, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1473, file: !155, line: 278, baseType: !1389, size: 64, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1469, file: !155, line: 237, baseType: !1478, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !155, line: 259, size: 320, elements: !1480)
!1480 = !{!1481, !1482, !1483, !1484, !1485}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1479, file: !155, line: 261, baseType: !825, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1479, file: !155, line: 262, baseType: !825, size: 64, offset: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1479, file: !155, line: 266, baseType: !825, size: 64, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1479, file: !155, line: 267, baseType: !825, size: 64, offset: 192)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1479, file: !155, line: 270, baseType: !849, size: 32, offset: 256)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1364, file: !155, line: 241, baseType: !1400, size: 64, offset: 576)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1364, file: !155, line: 244, baseType: !849, size: 32, offset: 640)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1364, file: !155, line: 247, baseType: !849, size: 32, offset: 672)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1364, file: !155, line: 250, baseType: !849, size: 32, offset: 704)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1364, file: !155, line: 253, baseType: !849, size: 32, offset: 736)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1364, file: !155, line: 256, baseType: !849, size: 32, offset: 768)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1359, file: !155, line: 378, baseType: !1362, size: 64, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1359, file: !155, line: 381, baseType: !1494, size: 64, offset: 128)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !155, line: 282, baseType: !1496)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !155, line: 282, size: 128, elements: !1497)
!1497 = !{!1498}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1496, file: !155, line: 282, baseType: !1499, size: 128)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !155, line: 281, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !155, line: 281, size: 128, elements: !1501)
!1501 = !{!1502, !1503, !1504}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1500, file: !155, line: 281, baseType: !7, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1500, file: !155, line: 281, baseType: !7, size: 32, offset: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1500, file: !155, line: 281, baseType: !1505, size: 64, offset: 64)
!1505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1362, size: 64, elements: !863)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1359, file: !155, line: 384, baseType: !849, size: 32, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1359, file: !155, line: 387, baseType: !849, size: 32, offset: 224)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1359, file: !155, line: 390, baseType: !849, size: 32, offset: 256)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1359, file: !155, line: 394, baseType: !1494, size: 64, offset: 320)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1359, file: !155, line: 396, baseType: !154, size: 32, offset: 384)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1359, file: !155, line: 399, baseType: !1512, size: 64, offset: 416)
!1512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 64, elements: !899)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1359, file: !155, line: 402, baseType: !1514, size: 64, offset: 480)
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !899)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1359, file: !155, line: 406, baseType: !849, size: 32, offset: 544)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1359, file: !155, line: 409, baseType: !849, size: 32, offset: 576)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1191, file: !1192, line: 470, baseType: !1390, size: 64, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1191, file: !1192, line: 473, baseType: !1519, size: 64, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1192, line: 166, flags: DIFlagFwdDecl)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1191, file: !1192, line: 476, baseType: !1522, size: 64, offset: 256)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !142, line: 187, size: 256, elements: !1524)
!1524 = !{!1525, !1526, !1527, !1528}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1523, file: !142, line: 189, baseType: !849, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1523, file: !142, line: 192, baseType: !1419, size: 64, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1523, file: !142, line: 197, baseType: !1275, size: 64, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1523, file: !142, line: 200, baseType: !1404, size: 64, offset: 192)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1191, file: !1192, line: 479, baseType: !1275, size: 64, offset: 320)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1191, file: !1192, line: 484, baseType: !944, size: 64, offset: 384)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1191, file: !1192, line: 488, baseType: !944, size: 64, offset: 448)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1191, file: !1192, line: 493, baseType: !944, size: 64, offset: 512)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1191, file: !1192, line: 496, baseType: !944, size: 64, offset: 576)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1191, file: !1192, line: 501, baseType: !1535, size: 64, offset: 640)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !166, line: 2355, size: 576, elements: !1537)
!1537 = !{!1538, !1541, !1542, !1543, !1544, !1546, !1547, !1552, !1553, !1554, !1555, !1556, !1557}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1536, file: !166, line: 2356, baseType: !1539, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !166, line: 2356, flags: DIFlagFwdDecl)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1536, file: !166, line: 2357, baseType: !852, size: 64, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1536, file: !166, line: 2358, baseType: !849, size: 32, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1536, file: !166, line: 2359, baseType: !849, size: 32, offset: 160)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1536, file: !166, line: 2360, baseType: !1545, size: 128, offset: 192)
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 128, elements: !924)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1536, file: !166, line: 2364, baseType: !849, size: 32, offset: 320)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1536, file: !166, line: 2367, baseType: !1548, size: 128, offset: 384)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !166, line: 2349, size: 128, elements: !1549)
!1549 = !{!1550, !1551}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1548, file: !166, line: 2351, baseType: !825, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1548, file: !166, line: 2352, baseType: !915, size: 64, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1536, file: !166, line: 2371, baseType: !165, size: 32, offset: 512)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1536, file: !166, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1536, file: !166, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1536, file: !166, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1536, file: !166, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1536, file: !166, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1191, file: !1192, line: 504, baseType: !1559, size: 64, offset: 704)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1192, line: 504, flags: DIFlagFwdDecl)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1191, file: !1192, line: 507, baseType: !1275, size: 64, offset: 768)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1191, file: !1192, line: 510, baseType: !849, size: 32, offset: 832)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1191, file: !1192, line: 513, baseType: !849, size: 32, offset: 864)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1191, file: !1192, line: 516, baseType: !1065, size: 32, offset: 896)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1191, file: !1192, line: 519, baseType: !1065, size: 32, offset: 928)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1191, file: !1192, line: 522, baseType: !7, size: 32, offset: 960)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1191, file: !1192, line: 523, baseType: !7, size: 32, offset: 992)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1191, file: !1192, line: 528, baseType: !852, size: 64, offset: 1024)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1191, file: !1192, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1191, file: !1192, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1191, file: !1192, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1191, file: !1192, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1191, file: !1192, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1191, file: !1192, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1191, file: !1192, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1191, file: !1192, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1191, file: !1192, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1191, file: !1192, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1191, file: !1192, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1191, file: !1192, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1191, file: !1192, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1191, file: !1192, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1191, file: !1192, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1191, file: !1192, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1186, file: !171, line: 3254, baseType: !944, size: 64, offset: 1536)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1186, file: !171, line: 3257, baseType: !944, size: 64, offset: 1600)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1186, file: !171, line: 3258, baseType: !944, size: 64, offset: 1664)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1186, file: !171, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1186, file: !171, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1186, file: !171, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1186, file: !171, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1186, file: !171, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1186, file: !171, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1186, file: !171, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1186, file: !171, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1186, file: !171, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1186, file: !171, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1186, file: !171, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1186, file: !171, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1186, file: !171, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1186, file: !171, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1186, file: !171, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1186, file: !171, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1186, file: !171, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1186, file: !171, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !946, file: !171, line: 3394, baseType: !1607, size: 1344)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !171, line: 2279, size: 1344, elements: !1608)
!1608 = !{!1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1634, !1635, !1636, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1607, file: !171, line: 2280, baseType: !982, size: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1607, file: !171, line: 2281, baseType: !944, size: 64, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1607, file: !171, line: 2282, baseType: !944, size: 64, offset: 256)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1607, file: !171, line: 2283, baseType: !944, size: 64, offset: 320)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1607, file: !171, line: 2284, baseType: !944, size: 64, offset: 384)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1607, file: !171, line: 2285, baseType: !7, size: 32, offset: 448)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1607, file: !171, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1607, file: !171, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1607, file: !171, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1607, file: !171, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1607, file: !171, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1607, file: !171, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1607, file: !171, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1607, file: !171, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1607, file: !171, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1607, file: !171, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1607, file: !171, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1607, file: !171, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1607, file: !171, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1607, file: !171, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1607, file: !171, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1607, file: !171, line: 2305, baseType: !7, size: 32, offset: 512)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1607, file: !171, line: 2306, baseType: !1632, size: 32, offset: 544)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1633, line: 31, baseType: !849)
!1633 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1607, file: !171, line: 2307, baseType: !944, size: 64, offset: 576)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1607, file: !171, line: 2308, baseType: !944, size: 64, offset: 640)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1607, file: !171, line: 2314, baseType: !1637, size: 64, offset: 704)
!1637 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !171, line: 2309, size: 64, elements: !1638)
!1638 = !{!1639, !1640, !1641}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1637, file: !171, line: 2310, baseType: !849, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1637, file: !171, line: 2311, baseType: !852, size: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1637, file: !171, line: 2312, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !171, line: 2277, flags: DIFlagFwdDecl)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1607, file: !171, line: 2315, baseType: !944, size: 64, offset: 768)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1607, file: !171, line: 2316, baseType: !944, size: 64, offset: 832)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1607, file: !171, line: 2317, baseType: !944, size: 64, offset: 896)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1607, file: !171, line: 2318, baseType: !944, size: 64, offset: 960)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1607, file: !171, line: 2319, baseType: !944, size: 64, offset: 1024)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1607, file: !171, line: 2320, baseType: !944, size: 64, offset: 1088)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1607, file: !171, line: 2321, baseType: !944, size: 64, offset: 1152)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1607, file: !171, line: 2322, baseType: !944, size: 64, offset: 1216)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1607, file: !171, line: 2324, baseType: !1653, size: 64, offset: 1280)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !171, line: 2324, flags: DIFlagFwdDecl)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !946, file: !171, line: 3395, baseType: !1656, size: 320)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !171, line: 1469, size: 320, elements: !1657)
!1657 = !{!1658, !1659, !1660}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1656, file: !171, line: 1470, baseType: !982, size: 192)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1656, file: !171, line: 1471, baseType: !944, size: 64, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1656, file: !171, line: 1472, baseType: !944, size: 64, offset: 256)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !946, file: !171, line: 3396, baseType: !1662, size: 320)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !171, line: 1482, size: 320, elements: !1663)
!1663 = !{!1664, !1665, !1666}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1662, file: !171, line: 1483, baseType: !982, size: 192)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1662, file: !171, line: 1484, baseType: !849, size: 32, offset: 192)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1662, file: !171, line: 1485, baseType: !1337, size: 64, offset: 256)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !946, file: !171, line: 3397, baseType: !1668, size: 384)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !171, line: 1829, size: 384, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1668, file: !171, line: 1830, baseType: !982, size: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1668, file: !171, line: 1831, baseType: !1065, size: 32, offset: 192)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1668, file: !171, line: 1832, baseType: !944, size: 64, offset: 256)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1668, file: !171, line: 1835, baseType: !1337, size: 64, offset: 320)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !946, file: !171, line: 3398, baseType: !1675, size: 704)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !171, line: 1898, size: 704, elements: !1676)
!1676 = !{!1677, !1678, !1679, !1680, !1681, !1684}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1675, file: !171, line: 1899, baseType: !982, size: 192)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1675, file: !171, line: 1902, baseType: !944, size: 64, offset: 192)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1675, file: !171, line: 1905, baseType: !1446, size: 64, offset: 256)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1675, file: !171, line: 1908, baseType: !7, size: 32, offset: 320)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1675, file: !171, line: 1911, baseType: !1682, size: 64, offset: 384)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64)
!1683 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !171, line: 1876, flags: DIFlagFwdDecl)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1675, file: !171, line: 1914, baseType: !1685, size: 256, offset: 448)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !171, line: 1883, size: 256, elements: !1686)
!1686 = !{!1687, !1689, !1690, !1695}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1685, file: !171, line: 1884, baseType: !1688, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1685, file: !171, line: 1885, baseType: !1688, size: 64, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1685, file: !171, line: 1891, baseType: !1691, size: 64, offset: 128)
!1691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1685, file: !171, line: 1891, size: 64, elements: !1692)
!1692 = !{!1693, !1694}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1691, file: !171, line: 1891, baseType: !1446, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1691, file: !171, line: 1891, baseType: !944, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1685, file: !171, line: 1892, baseType: !1696, size: 64, offset: 192)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !946, file: !171, line: 3399, baseType: !1698, size: 704)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !171, line: 2008, size: 704, elements: !1699)
!1699 = !{!1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1698, file: !171, line: 2009, baseType: !982, size: 192)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1698, file: !171, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1698, file: !171, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1698, file: !171, line: 2014, baseType: !1065, size: 32, offset: 224)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1698, file: !171, line: 2016, baseType: !944, size: 64, offset: 256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1698, file: !171, line: 2017, baseType: !1326, size: 64, offset: 320)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1698, file: !171, line: 2019, baseType: !944, size: 64, offset: 384)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1698, file: !171, line: 2020, baseType: !944, size: 64, offset: 448)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1698, file: !171, line: 2021, baseType: !944, size: 64, offset: 512)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1698, file: !171, line: 2022, baseType: !944, size: 64, offset: 576)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1698, file: !171, line: 2023, baseType: !944, size: 64, offset: 640)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !946, file: !171, line: 3400, baseType: !1712, size: 832)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !171, line: 2430, size: 832, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1712, file: !171, line: 2431, baseType: !982, size: 192)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1712, file: !171, line: 2433, baseType: !944, size: 64, offset: 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1712, file: !171, line: 2434, baseType: !944, size: 64, offset: 256)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1712, file: !171, line: 2435, baseType: !944, size: 64, offset: 320)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1712, file: !171, line: 2436, baseType: !944, size: 64, offset: 384)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1712, file: !171, line: 2437, baseType: !1326, size: 64, offset: 448)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1712, file: !171, line: 2438, baseType: !944, size: 64, offset: 512)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1712, file: !171, line: 2440, baseType: !944, size: 64, offset: 576)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1712, file: !171, line: 2441, baseType: !944, size: 64, offset: 640)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1712, file: !171, line: 2443, baseType: !1724, size: 128, offset: 704)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !171, line: 182, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !171, line: 182, size: 128, elements: !1726)
!1726 = !{!1727}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1725, file: !171, line: 182, baseType: !1331, size: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !946, file: !171, line: 3401, baseType: !1729, size: 320)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !171, line: 3327, size: 320, elements: !1730)
!1730 = !{!1731, !1732, !1739}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1729, file: !171, line: 3329, baseType: !982, size: 192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1729, file: !171, line: 3330, baseType: !1733, size: 64, offset: 192)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !171, line: 3320, size: 192, elements: !1735)
!1735 = !{!1736, !1737, !1738}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1734, file: !171, line: 3322, baseType: !1733, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1734, file: !171, line: 3323, baseType: !1733, size: 64, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1734, file: !171, line: 3324, baseType: !944, size: 64, offset: 128)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1729, file: !171, line: 3331, baseType: !1733, size: 64, offset: 256)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !946, file: !171, line: 3402, baseType: !1741, size: 256)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !171, line: 1540, size: 256, elements: !1742)
!1742 = !{!1743, !1744}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1741, file: !171, line: 1541, baseType: !982, size: 192)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1741, file: !171, line: 1542, baseType: !1745, size: 64, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !171, line: 1538, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !171, line: 1538, size: 192, elements: !1748)
!1748 = !{!1749}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1747, file: !171, line: 1538, baseType: !1750, size: 192)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !171, line: 1537, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !171, line: 1537, size: 192, elements: !1752)
!1752 = !{!1753, !1754, !1755}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1751, file: !171, line: 1537, baseType: !7, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1751, file: !171, line: 1537, baseType: !7, size: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1751, file: !171, line: 1537, baseType: !1756, size: 128, offset: 64)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1757, size: 128, elements: !863)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !171, line: 1535, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !171, line: 1532, size: 128, elements: !1759)
!1759 = !{!1760, !1761}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1758, file: !171, line: 1533, baseType: !944, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1758, file: !171, line: 1534, baseType: !944, size: 64, offset: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !946, file: !171, line: 3403, baseType: !1763, size: 512)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !171, line: 1938, size: 512, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1774, !1775, !1776}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1763, file: !171, line: 1939, baseType: !982, size: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1763, file: !171, line: 1940, baseType: !1065, size: 32, offset: 192)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1763, file: !171, line: 1941, baseType: !170, size: 32, offset: 224)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1763, file: !171, line: 1946, baseType: !1769, size: 32, offset: 256)
!1769 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !171, line: 1942, size: 32, elements: !1770)
!1770 = !{!1771, !1772, !1773}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1769, file: !171, line: 1943, baseType: !189, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1769, file: !171, line: 1944, baseType: !196, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1769, file: !171, line: 1945, baseType: !203, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1763, file: !171, line: 1950, baseType: !1389, size: 64, offset: 320)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1763, file: !171, line: 1951, baseType: !1389, size: 64, offset: 384)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1763, file: !171, line: 1953, baseType: !1337, size: 64, offset: 448)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !946, file: !171, line: 3404, baseType: !1778, size: 1664)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !171, line: 3337, size: 1664, elements: !1779)
!1779 = !{!1780, !1781}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1778, file: !171, line: 3338, baseType: !982, size: 192)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1778, file: !171, line: 3341, baseType: !1782, size: 1472, offset: 192)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1783, line: 410, size: 1472, elements: !1784)
!1783 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1784 = !{!1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1782, file: !1783, line: 412, baseType: !849, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1782, file: !1783, line: 413, baseType: !849, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1782, file: !1783, line: 414, baseType: !849, size: 32, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1782, file: !1783, line: 415, baseType: !849, size: 32, offset: 96)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1782, file: !1783, line: 416, baseType: !849, size: 32, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1782, file: !1783, line: 417, baseType: !849, size: 32, offset: 160)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1782, file: !1783, line: 418, baseType: !1057, size: 8, offset: 192)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1782, file: !1783, line: 419, baseType: !1057, size: 8, offset: 200)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1782, file: !1783, line: 420, baseType: !1794, size: 8, offset: 208)
!1794 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1782, file: !1783, line: 421, baseType: !1794, size: 8, offset: 216)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1782, file: !1783, line: 422, baseType: !1794, size: 8, offset: 224)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1782, file: !1783, line: 423, baseType: !1794, size: 8, offset: 232)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1782, file: !1783, line: 424, baseType: !1794, size: 8, offset: 240)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1782, file: !1783, line: 425, baseType: !1794, size: 8, offset: 248)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1782, file: !1783, line: 426, baseType: !1794, size: 8, offset: 256)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1782, file: !1783, line: 427, baseType: !1794, size: 8, offset: 264)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1782, file: !1783, line: 428, baseType: !1794, size: 8, offset: 272)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1782, file: !1783, line: 429, baseType: !1794, size: 8, offset: 280)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1782, file: !1783, line: 430, baseType: !1794, size: 8, offset: 288)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1782, file: !1783, line: 431, baseType: !1794, size: 8, offset: 296)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1782, file: !1783, line: 432, baseType: !1794, size: 8, offset: 304)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1782, file: !1783, line: 433, baseType: !1794, size: 8, offset: 312)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1782, file: !1783, line: 434, baseType: !1794, size: 8, offset: 320)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1782, file: !1783, line: 435, baseType: !1794, size: 8, offset: 328)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1782, file: !1783, line: 436, baseType: !1794, size: 8, offset: 336)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1782, file: !1783, line: 437, baseType: !1794, size: 8, offset: 344)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1782, file: !1783, line: 438, baseType: !1794, size: 8, offset: 352)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1782, file: !1783, line: 439, baseType: !1794, size: 8, offset: 360)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1782, file: !1783, line: 440, baseType: !1794, size: 8, offset: 368)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1782, file: !1783, line: 441, baseType: !1794, size: 8, offset: 376)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1782, file: !1783, line: 442, baseType: !1794, size: 8, offset: 384)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1782, file: !1783, line: 443, baseType: !1794, size: 8, offset: 392)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1782, file: !1783, line: 444, baseType: !1794, size: 8, offset: 400)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1782, file: !1783, line: 445, baseType: !1794, size: 8, offset: 408)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1782, file: !1783, line: 446, baseType: !1794, size: 8, offset: 416)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1782, file: !1783, line: 447, baseType: !1794, size: 8, offset: 424)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1782, file: !1783, line: 448, baseType: !1794, size: 8, offset: 432)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1782, file: !1783, line: 449, baseType: !1794, size: 8, offset: 440)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1782, file: !1783, line: 450, baseType: !1794, size: 8, offset: 448)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1782, file: !1783, line: 451, baseType: !1794, size: 8, offset: 456)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1782, file: !1783, line: 452, baseType: !1794, size: 8, offset: 464)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1782, file: !1783, line: 453, baseType: !1794, size: 8, offset: 472)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1782, file: !1783, line: 454, baseType: !1794, size: 8, offset: 480)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1782, file: !1783, line: 455, baseType: !1794, size: 8, offset: 488)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1782, file: !1783, line: 456, baseType: !1794, size: 8, offset: 496)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1782, file: !1783, line: 457, baseType: !1794, size: 8, offset: 504)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1782, file: !1783, line: 458, baseType: !1794, size: 8, offset: 512)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1782, file: !1783, line: 459, baseType: !1794, size: 8, offset: 520)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1782, file: !1783, line: 460, baseType: !1794, size: 8, offset: 528)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1782, file: !1783, line: 461, baseType: !1794, size: 8, offset: 536)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1782, file: !1783, line: 462, baseType: !1794, size: 8, offset: 544)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1782, file: !1783, line: 463, baseType: !1794, size: 8, offset: 552)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1782, file: !1783, line: 464, baseType: !1794, size: 8, offset: 560)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1782, file: !1783, line: 465, baseType: !1794, size: 8, offset: 568)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1782, file: !1783, line: 466, baseType: !1794, size: 8, offset: 576)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1782, file: !1783, line: 467, baseType: !1794, size: 8, offset: 584)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1782, file: !1783, line: 468, baseType: !1794, size: 8, offset: 592)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1782, file: !1783, line: 469, baseType: !1794, size: 8, offset: 600)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1782, file: !1783, line: 470, baseType: !1794, size: 8, offset: 608)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1782, file: !1783, line: 471, baseType: !1794, size: 8, offset: 616)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1782, file: !1783, line: 472, baseType: !1794, size: 8, offset: 624)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1782, file: !1783, line: 473, baseType: !1794, size: 8, offset: 632)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1782, file: !1783, line: 474, baseType: !1794, size: 8, offset: 640)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1782, file: !1783, line: 475, baseType: !1794, size: 8, offset: 648)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1782, file: !1783, line: 476, baseType: !1794, size: 8, offset: 656)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1782, file: !1783, line: 477, baseType: !1794, size: 8, offset: 664)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1782, file: !1783, line: 478, baseType: !1794, size: 8, offset: 672)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1782, file: !1783, line: 479, baseType: !1794, size: 8, offset: 680)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1782, file: !1783, line: 480, baseType: !1794, size: 8, offset: 688)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1782, file: !1783, line: 481, baseType: !1794, size: 8, offset: 696)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1782, file: !1783, line: 482, baseType: !1794, size: 8, offset: 704)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1782, file: !1783, line: 483, baseType: !1794, size: 8, offset: 712)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1782, file: !1783, line: 484, baseType: !1794, size: 8, offset: 720)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1782, file: !1783, line: 485, baseType: !1794, size: 8, offset: 728)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1782, file: !1783, line: 486, baseType: !1794, size: 8, offset: 736)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1782, file: !1783, line: 487, baseType: !1794, size: 8, offset: 744)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1782, file: !1783, line: 488, baseType: !1794, size: 8, offset: 752)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1782, file: !1783, line: 489, baseType: !1794, size: 8, offset: 760)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1782, file: !1783, line: 490, baseType: !1794, size: 8, offset: 768)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1782, file: !1783, line: 491, baseType: !1794, size: 8, offset: 776)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1782, file: !1783, line: 492, baseType: !1794, size: 8, offset: 784)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1782, file: !1783, line: 493, baseType: !1794, size: 8, offset: 792)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1782, file: !1783, line: 494, baseType: !1794, size: 8, offset: 800)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1782, file: !1783, line: 495, baseType: !1794, size: 8, offset: 808)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1782, file: !1783, line: 496, baseType: !1794, size: 8, offset: 816)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1782, file: !1783, line: 497, baseType: !1794, size: 8, offset: 824)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1782, file: !1783, line: 498, baseType: !1794, size: 8, offset: 832)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1782, file: !1783, line: 499, baseType: !1794, size: 8, offset: 840)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1782, file: !1783, line: 500, baseType: !1794, size: 8, offset: 848)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1782, file: !1783, line: 501, baseType: !1794, size: 8, offset: 856)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1782, file: !1783, line: 502, baseType: !1794, size: 8, offset: 864)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1782, file: !1783, line: 503, baseType: !1794, size: 8, offset: 872)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1782, file: !1783, line: 504, baseType: !1794, size: 8, offset: 880)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1782, file: !1783, line: 505, baseType: !1794, size: 8, offset: 888)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1782, file: !1783, line: 506, baseType: !1794, size: 8, offset: 896)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1782, file: !1783, line: 507, baseType: !1794, size: 8, offset: 904)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1782, file: !1783, line: 508, baseType: !1794, size: 8, offset: 912)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1782, file: !1783, line: 509, baseType: !1794, size: 8, offset: 920)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1782, file: !1783, line: 510, baseType: !1794, size: 8, offset: 928)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1782, file: !1783, line: 511, baseType: !1794, size: 8, offset: 936)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1782, file: !1783, line: 512, baseType: !1794, size: 8, offset: 944)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1782, file: !1783, line: 513, baseType: !1794, size: 8, offset: 952)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1782, file: !1783, line: 514, baseType: !1794, size: 8, offset: 960)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1782, file: !1783, line: 515, baseType: !1794, size: 8, offset: 968)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1782, file: !1783, line: 516, baseType: !1794, size: 8, offset: 976)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1782, file: !1783, line: 517, baseType: !1794, size: 8, offset: 984)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1782, file: !1783, line: 518, baseType: !1794, size: 8, offset: 992)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1782, file: !1783, line: 519, baseType: !1794, size: 8, offset: 1000)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1782, file: !1783, line: 520, baseType: !1794, size: 8, offset: 1008)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1782, file: !1783, line: 521, baseType: !1794, size: 8, offset: 1016)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1782, file: !1783, line: 522, baseType: !1794, size: 8, offset: 1024)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1782, file: !1783, line: 523, baseType: !1794, size: 8, offset: 1032)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1782, file: !1783, line: 524, baseType: !1794, size: 8, offset: 1040)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1782, file: !1783, line: 525, baseType: !1794, size: 8, offset: 1048)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1782, file: !1783, line: 526, baseType: !1794, size: 8, offset: 1056)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1782, file: !1783, line: 527, baseType: !1794, size: 8, offset: 1064)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1782, file: !1783, line: 528, baseType: !1794, size: 8, offset: 1072)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1782, file: !1783, line: 529, baseType: !1794, size: 8, offset: 1080)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1782, file: !1783, line: 530, baseType: !1794, size: 8, offset: 1088)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1782, file: !1783, line: 531, baseType: !1794, size: 8, offset: 1096)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1782, file: !1783, line: 532, baseType: !1794, size: 8, offset: 1104)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1782, file: !1783, line: 533, baseType: !1794, size: 8, offset: 1112)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1782, file: !1783, line: 534, baseType: !1794, size: 8, offset: 1120)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1782, file: !1783, line: 535, baseType: !1794, size: 8, offset: 1128)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1782, file: !1783, line: 536, baseType: !1794, size: 8, offset: 1136)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1782, file: !1783, line: 537, baseType: !1794, size: 8, offset: 1144)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1782, file: !1783, line: 538, baseType: !1794, size: 8, offset: 1152)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1782, file: !1783, line: 539, baseType: !1794, size: 8, offset: 1160)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1782, file: !1783, line: 540, baseType: !1794, size: 8, offset: 1168)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1782, file: !1783, line: 541, baseType: !1794, size: 8, offset: 1176)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1782, file: !1783, line: 542, baseType: !1794, size: 8, offset: 1184)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1782, file: !1783, line: 543, baseType: !1794, size: 8, offset: 1192)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1782, file: !1783, line: 544, baseType: !1794, size: 8, offset: 1200)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1782, file: !1783, line: 545, baseType: !1794, size: 8, offset: 1208)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1782, file: !1783, line: 546, baseType: !1794, size: 8, offset: 1216)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1782, file: !1783, line: 547, baseType: !1794, size: 8, offset: 1224)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1782, file: !1783, line: 548, baseType: !1794, size: 8, offset: 1232)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1782, file: !1783, line: 549, baseType: !1794, size: 8, offset: 1240)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1782, file: !1783, line: 550, baseType: !1794, size: 8, offset: 1248)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1782, file: !1783, line: 551, baseType: !1794, size: 8, offset: 1256)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1782, file: !1783, line: 552, baseType: !1794, size: 8, offset: 1264)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1782, file: !1783, line: 553, baseType: !1794, size: 8, offset: 1272)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1782, file: !1783, line: 554, baseType: !1794, size: 8, offset: 1280)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1782, file: !1783, line: 555, baseType: !1794, size: 8, offset: 1288)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1782, file: !1783, line: 556, baseType: !1794, size: 8, offset: 1296)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1782, file: !1783, line: 557, baseType: !1794, size: 8, offset: 1304)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1782, file: !1783, line: 558, baseType: !1794, size: 8, offset: 1312)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1782, file: !1783, line: 559, baseType: !1794, size: 8, offset: 1320)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1782, file: !1783, line: 560, baseType: !1794, size: 8, offset: 1328)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1782, file: !1783, line: 561, baseType: !1794, size: 8, offset: 1336)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1782, file: !1783, line: 562, baseType: !1794, size: 8, offset: 1344)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1782, file: !1783, line: 563, baseType: !1794, size: 8, offset: 1352)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1782, file: !1783, line: 564, baseType: !1794, size: 8, offset: 1360)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1782, file: !1783, line: 565, baseType: !1794, size: 8, offset: 1368)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1782, file: !1783, line: 566, baseType: !1794, size: 8, offset: 1376)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1782, file: !1783, line: 567, baseType: !1794, size: 8, offset: 1384)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1782, file: !1783, line: 568, baseType: !1794, size: 8, offset: 1392)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1782, file: !1783, line: 569, baseType: !1794, size: 8, offset: 1400)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1782, file: !1783, line: 570, baseType: !1794, size: 8, offset: 1408)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1782, file: !1783, line: 571, baseType: !1794, size: 8, offset: 1416)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1782, file: !1783, line: 572, baseType: !1794, size: 8, offset: 1424)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1782, file: !1783, line: 573, baseType: !1794, size: 8, offset: 1432)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1782, file: !1783, line: 574, baseType: !1794, size: 8, offset: 1440)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !946, file: !171, line: 3405, baseType: !1950, size: 384)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !171, line: 3352, size: 384, elements: !1951)
!1951 = !{!1952, !1953}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1950, file: !171, line: 3353, baseType: !982, size: 192)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1950, file: !171, line: 3356, baseType: !1954, size: 192, offset: 192)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1783, line: 578, size: 192, elements: !1955)
!1955 = !{!1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1954, file: !1783, line: 580, baseType: !849, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1954, file: !1783, line: 581, baseType: !849, size: 32, offset: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1954, file: !1783, line: 582, baseType: !849, size: 32, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1954, file: !1783, line: 583, baseType: !849, size: 32, offset: 96)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1954, file: !1783, line: 584, baseType: !1057, size: 8, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1954, file: !1783, line: 585, baseType: !1057, size: 8, offset: 136)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1954, file: !1783, line: 586, baseType: !1057, size: 8, offset: 144)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1954, file: !1783, line: 587, baseType: !1057, size: 8, offset: 152)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1954, file: !1783, line: 588, baseType: !1057, size: 8, offset: 160)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1954, file: !1783, line: 589, baseType: !1057, size: 8, offset: 168)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1954, file: !1783, line: 590, baseType: !1057, size: 8, offset: 176)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !846, file: !456, line: 178, baseType: !1363, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !846, file: !456, line: 179, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !456, line: 150, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !456, line: 142, size: 320, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1976, !1977, !1978}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1971, file: !456, line: 144, baseType: !944, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1971, file: !456, line: 145, baseType: !825, size: 64, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1971, file: !456, line: 146, baseType: !825, size: 64, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1971, file: !456, line: 147, baseType: !1632, size: 32, offset: 192)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1971, file: !456, line: 148, baseType: !7, size: 32, offset: 224)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1971, file: !456, line: 149, baseType: !1057, size: 8, offset: 256)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !846, file: !456, line: 180, baseType: !1980, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !456, line: 162, baseType: !1982)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !456, line: 159, size: 128, elements: !1983)
!1983 = !{!1984, !1985}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1982, file: !456, line: 160, baseType: !944, size: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1982, file: !456, line: 161, baseType: !915, size: 64, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !846, file: !456, line: 181, baseType: !1987, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !456, line: 181, flags: DIFlagFwdDecl)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !841, file: !456, line: 317, baseType: !1990, size: 64)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 64, elements: !863)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !841, file: !456, line: 318, baseType: !1992, size: 320)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !456, line: 188, size: 320, elements: !1993)
!1993 = !{!1994, !1996, !2051}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1992, file: !456, line: 190, baseType: !1995, size: 192)
!1995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !845, size: 192, elements: !1015)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1992, file: !456, line: 193, baseType: !1997, size: 64, offset: 192)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !456, line: 206, size: 320, elements: !1999)
!1999 = !{!2000, !2036, !2037, !2038, !2050}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1998, file: !456, line: 208, baseType: !2001, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !826, line: 62, baseType: !2003)
!2003 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2004, line: 538, size: 256, elements: !2005)
!2004 = !DIFile(filename: "./output.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2005 = !{!2006, !2010, !2016, !2027}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2003, file: !2004, line: 539, baseType: !2007, size: 32)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !2004, line: 482, size: 32, elements: !2008)
!2008 = !{!2009}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2007, file: !2004, line: 484, baseType: !7, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !2003, file: !2004, line: 540, baseType: !2011, size: 192)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !2004, line: 488, size: 192, elements: !2012)
!2012 = !{!2013, !2014, !2015}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2011, file: !2004, line: 489, baseType: !2007, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2011, file: !2004, line: 492, baseType: !852, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2011, file: !2004, line: 496, baseType: !944, size: 64, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !2003, file: !2004, line: 541, baseType: !2017, size: 256)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !2004, line: 504, size: 256, elements: !2018)
!2018 = !{!2019, !2020, !2025, !2026}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2017, file: !2004, line: 505, baseType: !2007, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2017, file: !2004, line: 509, baseType: !2021, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !2004, line: 501, baseType: !2022)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{null, !1285}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2017, file: !2004, line: 510, baseType: !1285, size: 64, offset: 128)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2017, file: !2004, line: 513, baseType: !2001, size: 64, offset: 192)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !2003, file: !2004, line: 542, baseType: !2028, size: 128)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !2004, line: 530, size: 128, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2028, file: !2004, line: 531, baseType: !2007, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2028, file: !2004, line: 534, baseType: !2032, size: 64, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !2004, line: 525, baseType: !2033)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!1057, !944, !852, !898, !898}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1998, file: !456, line: 211, baseType: !7, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1998, file: !456, line: 214, baseType: !915, size: 64, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1998, file: !456, line: 224, baseType: !2039, size: 64, offset: 192)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !456, line: 202, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !456, line: 202, size: 128, elements: !2042)
!2042 = !{!2043}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2041, file: !456, line: 202, baseType: !2044, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !456, line: 200, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !456, line: 200, size: 128, elements: !2046)
!2046 = !{!2047, !2048, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2045, file: !456, line: 200, baseType: !7, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2045, file: !456, line: 200, baseType: !7, size: 32, offset: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2045, file: !456, line: 200, baseType: !862, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1998, file: !456, line: 234, baseType: !2039, size: 64, offset: 256)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1992, file: !456, line: 197, baseType: !915, size: 64, offset: 256)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !841, file: !456, line: 319, baseType: !1004, size: 256)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !841, file: !456, line: 320, baseType: !1023, size: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "c_expr", scope: !822, file: !3, line: 376, baseType: !2055, size: 64, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_t", file: !398, line: 171, baseType: !2056)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_def", file: !398, line: 170, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_expr", file: !398, line: 105, size: 512, elements: !2059)
!2059 = !{!2060, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2090, !2091, !2092, !2113, !2114, !2115, !2116, !2117}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "vinsn", scope: !2058, file: !398, line: 108, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "vinsn_t", file: !398, line: 55, baseType: !2062)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vinsn_def", file: !398, line: 629, size: 640, elements: !2064)
!2064 = !{!2065, !2066, !2077, !2078, !2079, !2080, !2081}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "insn_rtx", scope: !2063, file: !398, line: 632, baseType: !825, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2063, file: !398, line: 635, baseType: !2067, size: 384, offset: 64)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idata_def", file: !398, line: 573, size: 384, elements: !2068)
!2068 = !{!2069, !2070, !2071, !2072, !2075, !2076}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2067, file: !398, line: 585, baseType: !849, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !2067, file: !398, line: 588, baseType: !825, size: 64, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !2067, file: !398, line: 591, baseType: !825, size: 64, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "reg_sets", scope: !2067, file: !398, line: 602, baseType: !2073, size: 64, offset: 192)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !155, line: 37, baseType: !2074)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !826, line: 47, baseType: !882)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "reg_clobbers", scope: !2067, file: !398, line: 604, baseType: !2073, size: 64, offset: 256)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "reg_uses", scope: !2067, file: !398, line: 606, baseType: !2073, size: 64, offset: 320)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2063, file: !398, line: 639, baseType: !7, size: 32, offset: 448)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rtx", scope: !2063, file: !398, line: 642, baseType: !7, size: 32, offset: 480)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2063, file: !398, line: 645, baseType: !849, size: 32, offset: 512)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2063, file: !398, line: 648, baseType: !849, size: 32, offset: 544)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "may_trap_p", scope: !2063, file: !398, line: 651, baseType: !1057, size: 8, offset: 576)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !2058, file: !398, line: 115, baseType: !849, size: 32, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "usefulness", scope: !2058, file: !398, line: 120, baseType: !849, size: 32, offset: 96)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2058, file: !398, line: 123, baseType: !849, size: 32, offset: 128)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "priority_adj", scope: !2058, file: !398, line: 126, baseType: !849, size: 32, offset: 160)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "sched_times", scope: !2058, file: !398, line: 129, baseType: !849, size: 32, offset: 192)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "orig_bb_index", scope: !2058, file: !398, line: 133, baseType: !849, size: 32, offset: 224)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "spec_done_ds", scope: !2058, file: !398, line: 137, baseType: !2089, size: 32, offset: 256)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "ds_t", file: !403, line: 218, baseType: !849)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "spec_to_check_ds", scope: !2058, file: !398, line: 141, baseType: !2089, size: 32, offset: 288)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "orig_sched_cycle", scope: !2058, file: !398, line: 145, baseType: !849, size: 32, offset: 320)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "history_of_changes", scope: !2058, file: !398, line: 148, baseType: !2093, size: 64, offset: 384)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_history_def_heap", file: !398, line: 102, baseType: !2095)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_history_def_heap", file: !398, line: 102, size: 320, elements: !2096)
!2096 = !{!2097}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2095, file: !398, line: 102, baseType: !2098, size: 320)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_history_def_base", file: !398, line: 101, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_history_def_base", file: !398, line: 101, size: 320, elements: !2100)
!2100 = !{!2101, !2102, !2103}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2099, file: !398, line: 101, baseType: !7, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2099, file: !398, line: 101, baseType: !7, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2099, file: !398, line: 101, baseType: !2104, size: 256, offset: 64)
!2104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2105, size: 256, elements: !863)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "expr_history_def", file: !398, line: 99, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "expr_history_def_1", file: !398, line: 81, size: 256, elements: !2107)
!2107 = !{!2108, !2109, !2110, !2111, !2112}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2106, file: !398, line: 84, baseType: !7, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "old_expr_vinsn", scope: !2106, file: !398, line: 87, baseType: !2061, size: 64, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "new_expr_vinsn", scope: !2106, file: !398, line: 90, baseType: !2061, size: 64, offset: 128)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "spec_ds", scope: !2106, file: !398, line: 93, baseType: !2089, size: 32, offset: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2106, file: !398, line: 96, baseType: !397, size: 32, offset: 224)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "target_available", scope: !2058, file: !398, line: 153, baseType: !1794, size: 8, offset: 448)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "needs_spec_check_p", scope: !2058, file: !398, line: 157, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 456)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "was_substituted", scope: !2058, file: !398, line: 161, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 456)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "was_renamed", scope: !2058, file: !398, line: 164, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 456)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "cant_move", scope: !2058, file: !398, line: 167, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 456)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !822, file: !3, line: 380, baseType: !849, size: 32, offset: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "was_renamed", scope: !822, file: !3, line: 388, baseType: !1057, size: 8, offset: 160)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_insn_t_heap", file: !3, line: 529, baseType: !2122)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_insn_t_heap", file: !3, line: 529, size: 128, elements: !2123)
!2123 = !{!2124}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2122, file: !3, line: 529, baseType: !2125, size: 128)
!2125 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_insn_t_base", file: !3, line: 528, baseType: !2126)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_insn_t_base", file: !3, line: 528, size: 128, elements: !2127)
!2127 = !{!2128, !2129, !2130}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2126, file: !3, line: 528, baseType: !7, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2126, file: !3, line: 528, baseType: !7, size: 32, offset: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2126, file: !3, line: 528, baseType: !2131, size: 64, offset: 64)
!2131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2132, size: 64, elements: !863)
!2132 = !DIDerivedType(tag: DW_TAG_typedef, name: "insn_t", file: !398, line: 64, baseType: !825)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "transformed_insns", file: !398, line: 675, size: 256, elements: !2135)
!2135 = !{!2136, !2137, !2138, !2139, !2140, !2141}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "vinsn_old", scope: !2134, file: !398, line: 678, baseType: !2061, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "vinsn_new", scope: !2134, file: !398, line: 681, baseType: !2061, size: 64, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2134, file: !398, line: 684, baseType: !2089, size: 32, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2134, file: !398, line: 687, baseType: !397, size: 32, offset: 160)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "was_target_conflict", scope: !2134, file: !398, line: 690, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "needs_check", scope: !2134, file: !398, line: 693, baseType: !7, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx_search_arg_p", file: !3, line: 292, baseType: !2143)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_search_arg", file: !3, line: 283, size: 128, elements: !2145)
!2145 = !{!2146, !2147}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2144, file: !3, line: 286, baseType: !825, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2144, file: !3, line: 289, baseType: !849, size: 32, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_list_t", file: !398, line: 46, baseType: !2150)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_list_node", file: !398, line: 354, size: 896, elements: !2152)
!2152 = !{!2153, !2154}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2151, file: !398, line: 356, baseType: !2149, size: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2151, file: !398, line: 366, baseType: !2155, size: 832, offset: 64)
!2155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2151, file: !398, line: 358, size: 832, elements: !2156)
!2156 = !{!2157, !2158, !2203, !2204, !2228, !2233}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2155, file: !398, line: 360, baseType: !825, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "bnd", scope: !2155, file: !398, line: 361, baseType: !2159, size: 320)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_bnd", file: !398, line: 222, size: 320, elements: !2160)
!2160 = !{!2161, !2162, !2165, !2167, !2168}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2159, file: !398, line: 225, baseType: !2132, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2159, file: !398, line: 228, baseType: !2163, size: 64, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "ilist_t", file: !398, line: 67, baseType: !2164)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "_xlist_t", file: !398, line: 59, baseType: !2149)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "av", scope: !2159, file: !398, line: 231, baseType: !2166, size: 64, offset: 128)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_set_t", file: !398, line: 216, baseType: !2149)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "av1", scope: !2159, file: !398, line: 234, baseType: !2166, size: 64, offset: 192)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "dc", scope: !2159, file: !398, line: 239, baseType: !2169, size: 64, offset: 256)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "deps_t", file: !403, line: 549, baseType: !2170)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps", file: !403, line: 451, size: 1472, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2197, !2200, !2201, !2202}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_insns", scope: !2171, file: !403, line: 463, baseType: !825, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_mems", scope: !2171, file: !403, line: 466, baseType: !825, size: 64, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_insns", scope: !2171, file: !403, line: 469, baseType: !825, size: 64, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_mems", scope: !2171, file: !403, line: 472, baseType: !825, size: 64, offset: 192)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_list_length", scope: !2171, file: !403, line: 480, baseType: !849, size: 32, offset: 256)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_list_length", scope: !2171, file: !403, line: 483, baseType: !849, size: 32, offset: 288)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "pending_flush_length", scope: !2171, file: !403, line: 487, baseType: !849, size: 32, offset: 320)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "last_pending_memory_flush", scope: !2171, file: !403, line: 498, baseType: !825, size: 64, offset: 384)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call", scope: !2171, file: !403, line: 503, baseType: !825, size: 64, offset: 448)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call_may_noreturn", scope: !2171, file: !403, line: 509, baseType: !825, size: 64, offset: 512)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "sched_before_next_call", scope: !2171, file: !403, line: 515, baseType: !825, size: 64, offset: 576)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "in_post_call_group_p", scope: !2171, file: !403, line: 519, baseType: !402, size: 32, offset: 640)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "last_debug_insn", scope: !2171, file: !403, line: 522, baseType: !825, size: 64, offset: 704)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg", scope: !2171, file: !403, line: 526, baseType: !849, size: 32, offset: 768)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last", scope: !2171, file: !403, line: 532, baseType: !2188, size: 64, offset: 832)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps_reg", file: !403, line: 440, size: 320, elements: !2190)
!2190 = !{!2191, !2192, !2193, !2194, !2195, !2196}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !2189, file: !403, line: 442, baseType: !825, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "sets", scope: !2189, file: !403, line: 443, baseType: !825, size: 64, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "implicit_sets", scope: !2189, file: !403, line: 444, baseType: !825, size: 64, offset: 128)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers", scope: !2189, file: !403, line: 445, baseType: !825, size: 64, offset: 192)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "uses_length", scope: !2189, file: !403, line: 446, baseType: !849, size: 32, offset: 256)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers_length", scope: !2189, file: !403, line: 447, baseType: !849, size: 32, offset: 288)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last_in_use", scope: !2171, file: !403, line: 536, baseType: !2198, size: 256, offset: 896)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset_head", file: !155, line: 34, baseType: !2199)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !884, line: 84, baseType: !883)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "reg_conditional_sets", scope: !2171, file: !403, line: 539, baseType: !2198, size: 256, offset: 1152)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "last_reg_pending_barrier", scope: !2171, file: !403, line: 542, baseType: !408, size: 32, offset: 1408)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !2171, file: !403, line: 546, baseType: !7, size: 1, offset: 1440, flags: DIFlagBitField, extraData: i64 1440)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2155, file: !398, line: 362, baseType: !2057, size: 512)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "fence", scope: !2155, file: !398, line: 363, baseType: !2205, size: 832)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_fence", file: !398, line: 259, size: 832, elements: !2206)
!2206 = !{!2207, !2208, !2211, !2212, !2213, !2214, !2215, !2217, !2218, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2205, file: !398, line: 262, baseType: !2132, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2205, file: !398, line: 265, baseType: !2209, size: 64, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "state_t", file: !2210, line: 158, baseType: !819)
!2210 = !DIFile(filename: "./insn-attr.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "cycle", scope: !2205, file: !398, line: 268, baseType: !849, size: 32, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "cycle_issued_insns", scope: !2205, file: !398, line: 272, baseType: !849, size: 32, offset: 160)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "bnds", scope: !2205, file: !398, line: 276, baseType: !2163, size: 64, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "dc", scope: !2205, file: !398, line: 280, baseType: !2169, size: 64, offset: 256)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2205, file: !398, line: 284, baseType: !2216, size: 64, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "tc_t", file: !398, line: 38, baseType: !819)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "executing_insns", scope: !2205, file: !398, line: 287, baseType: !2039, size: 64, offset: 384)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "ready_ticks", scope: !2205, file: !398, line: 291, baseType: !2219, size: 64, offset: 448)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ready_ticks_size", scope: !2205, file: !398, line: 294, baseType: !849, size: 32, offset: 512)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "last_scheduled_insn", scope: !2205, file: !398, line: 297, baseType: !825, size: 64, offset: 576)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "issue_more", scope: !2205, file: !398, line: 300, baseType: !849, size: 32, offset: 640)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "sched_next", scope: !2205, file: !398, line: 303, baseType: !825, size: 64, offset: 704)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "processed_p", scope: !2205, file: !398, line: 306, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled_p", scope: !2205, file: !398, line: 309, baseType: !7, size: 1, offset: 769, flags: DIFlagBitField, extraData: i64 768)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "starts_cycle_p", scope: !2205, file: !398, line: 312, baseType: !7, size: 1, offset: 770, flags: DIFlagBitField, extraData: i64 768)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "after_stall_p", scope: !2205, file: !398, line: 315, baseType: !7, size: 1, offset: 771, flags: DIFlagBitField, extraData: i64 768)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2155, file: !398, line: 364, baseType: !2229, size: 128)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_def", file: !398, line: 201, size: 128, elements: !2230)
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "orig_insn", scope: !2229, file: !398, line: 203, baseType: !2132, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "crosses_call", scope: !2229, file: !398, line: 210, baseType: !1057, size: 8, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2155, file: !398, line: 365, baseType: !819, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vinsn_t_heap", file: !3, line: 512, baseType: !2236)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vinsn_t_heap", file: !3, line: 512, size: 128, elements: !2237)
!2237 = !{!2238}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2236, file: !3, line: 512, baseType: !2239, size: 128)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vinsn_t_base", file: !3, line: 511, baseType: !2240)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vinsn_t_base", file: !3, line: 511, size: 128, elements: !2241)
!2241 = !{!2242, !2243, !2244}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2240, file: !3, line: 511, baseType: !7, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2240, file: !3, line: 511, baseType: !7, size: 32, offset: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2240, file: !3, line: 511, baseType: !2245, size: 64, offset: 64)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2061, size: 64, elements: !863)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "fur_static_params_p", file: !3, line: 404, baseType: !2247)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fur_static_params", file: !3, line: 392, size: 192, elements: !2249)
!2249 = !{!2250, !2251, !2254}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "used_regs", scope: !2248, file: !3, line: 395, baseType: !2073, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "original_insns", scope: !2248, file: !3, line: 398, baseType: !2252, size: 64, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_list_t", file: !398, line: 551, baseType: !2149)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "crosses_call", scope: !2248, file: !3, line: 401, baseType: !1057, size: 8, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_heap", file: !155, line: 152, baseType: !2257)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_heap", file: !155, line: 152, size: 128, elements: !2258)
!2258 = !{!2259}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2257, file: !155, line: 152, baseType: !1372, size: 128)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_heap", file: !155, line: 283, baseType: !2262)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_heap", file: !155, line: 283, size: 128, elements: !2263)
!2263 = !{!2264}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2262, file: !155, line: 283, baseType: !1499, size: 128)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_t_heap", file: !3, line: 507, baseType: !2267)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_t_heap", file: !3, line: 507, size: 128, elements: !2268)
!2268 = !{!2269}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2267, file: !3, line: 507, baseType: !2270, size: 128)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_expr_t_base", file: !3, line: 506, baseType: !2271)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_expr_t_base", file: !3, line: 506, size: 128, elements: !2272)
!2272 = !{!2273, !2274, !2275}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2271, file: !3, line: 506, baseType: !7, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2271, file: !3, line: 506, baseType: !7, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2271, file: !3, line: 506, baseType: !2276, size: 64, offset: 64)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2055, size: 64, elements: !863)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2055)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !2280, line: 42, baseType: !898)
!2280 = !DIFile(filename: "./hard-reg-set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!2282 = !{!2283, !2286, !2288, !2332, !2334, !2336, !2338, !2340, !2343, !2345, !2347, !0, !2350, !2352, !2354, !2356, !2358, !2360, !2362, !2364, !2366, !2368, !2370, !2372, !2374, !2379, !2381, !2384, !2386, !2388, !2390, !2392, !2394, !2396, !2405, !2407, !2409, !2419, !2434, !2436, !2441}
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(name: "forced_ebb_heads", scope: !2, file: !3, line: 484, type: !2285, isLocal: false, isDefinition: true)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2286 = !DIGlobalVariableExpression(var: !2287, expr: !DIExpression())
!2287 = distinct !DIGlobalVariable(name: "blocks_to_reschedule", scope: !2, file: !3, line: 487, type: !2074, isLocal: false, isDefinition: true)
!2288 = !DIGlobalVariableExpression(var: !2289, expr: !DIExpression())
!2289 = distinct !DIGlobalVariable(name: "move_op_hooks", scope: !2, file: !3, line: 6260, type: !2290, isLocal: false, isDefinition: true)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "code_motion_path_driver_info_def", file: !3, line: 410, size: 576, elements: !2291)
!2291 = !{!2292, !2306, !2310, !2314, !2318, !2322, !2326, !2330, !2331}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "on_enter", scope: !2290, file: !3, line: 413, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{!849, !2132, !2296, !819, !1057}
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "cmpd_local_params_p", file: !3, line: 405, baseType: !2297)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cmpd_local_params", file: !3, line: 348, size: 384, elements: !2299)
!2299 = !{!2300, !2301, !2302, !2303, !2304, !2305}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "e1", scope: !2298, file: !3, line: 353, baseType: !1379, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "e2", scope: !2298, file: !3, line: 353, baseType: !1379, size: 64, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "c_expr_merged", scope: !2298, file: !3, line: 356, baseType: !2055, size: 64, offset: 128)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "c_expr_local", scope: !2298, file: !3, line: 356, baseType: !2055, size: 64, offset: 192)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "old_original_insns", scope: !2298, file: !3, line: 361, baseType: !2253, size: 64, offset: 256)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "removed_last_insn", scope: !2298, file: !3, line: 366, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "orig_expr_found", scope: !2290, file: !3, line: 416, baseType: !2307, size: 64, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DISubroutineType(types: !2309)
!2309 = !{null, !2132, !2055, !2296, !819}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "orig_expr_not_found", scope: !2290, file: !3, line: 420, baseType: !2311, size: 64, offset: 128)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!1057, !2132, !2166, !819}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "merge_succs", scope: !2290, file: !3, line: 423, baseType: !2315, size: 64, offset: 192)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DISubroutineType(types: !2317)
!2317 = !{null, !2132, !2132, !849, !2296, !819}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "after_merge_succs", scope: !2290, file: !3, line: 427, baseType: !2319, size: 64, offset: 256)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{null, !2296, !819}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "ascend", scope: !2290, file: !3, line: 431, baseType: !2323, size: 64, offset: 320)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{null, !2132, !819}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "at_first_insn", scope: !2290, file: !3, line: 435, baseType: !2327, size: 64, offset: 384)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{null, !2132, !2296, !819}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "succ_flags", scope: !2290, file: !3, line: 439, baseType: !849, size: 32, offset: 448)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "routine_name", scope: !2290, file: !3, line: 442, baseType: !852, size: 64, offset: 512)
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(name: "fur_hooks", scope: !2, file: !3, line: 6274, type: !2290, isLocal: false, isDefinition: true)
!2334 = !DIGlobalVariableExpression(var: !2335, expr: !DIExpression())
!2335 = distinct !DIGlobalVariable(name: "pipelining_p", scope: !2, file: !3, line: 255, type: !1057, isLocal: false, isDefinition: true)
!2336 = !DIGlobalVariableExpression(var: !2337, expr: !DIExpression())
!2337 = distinct !DIGlobalVariable(name: "bookkeeping_p", scope: !2, file: !3, line: 258, type: !1057, isLocal: false, isDefinition: true)
!2338 = !DIGlobalVariableExpression(var: !2339, expr: !DIExpression())
!2339 = distinct !DIGlobalVariable(name: "max_insns_to_rename", scope: !2, file: !3, line: 261, type: !849, isLocal: false, isDefinition: true)
!2340 = !DIGlobalVariableExpression(var: !2341, expr: !DIExpression())
!2341 = distinct !DIGlobalVariable(name: "code_motion_path_driver_info", scope: !2, file: !3, line: 447, type: !2342, isLocal: false, isDefinition: true)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 64)
!2343 = !DIGlobalVariableExpression(var: !2344, expr: !DIExpression())
!2344 = distinct !DIGlobalVariable(name: "sched_emulate_haifa_p", scope: !2, file: !3, line: 456, type: !849, isLocal: false, isDefinition: true)
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(name: "global_level", scope: !2, file: !3, line: 462, type: !849, isLocal: false, isDefinition: true)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "fences", scope: !2, file: !3, line: 465, type: !2349, isLocal: false, isDefinition: true)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "flist_t", file: !398, line: 338, baseType: !2149)
!2350 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression())
!2351 = distinct !DIGlobalVariable(name: "ignore_first", scope: !2, file: !3, line: 490, type: !1057, isLocal: true, isDefinition: true)
!2352 = !DIGlobalVariableExpression(var: !2353, expr: !DIExpression())
!2353 = distinct !DIGlobalVariable(name: "current_originators", scope: !2, file: !3, line: 534, type: !2074, isLocal: true, isDefinition: true)
!2354 = !DIGlobalVariableExpression(var: !2355, expr: !DIExpression())
!2355 = distinct !DIGlobalVariable(name: "current_copies", scope: !2, file: !3, line: 535, type: !2074, isLocal: true, isDefinition: true)
!2356 = !DIGlobalVariableExpression(var: !2357, expr: !DIExpression())
!2357 = distinct !DIGlobalVariable(name: "first_emitted_uid", scope: !2, file: !3, line: 479, type: !849, isLocal: true, isDefinition: true)
!2358 = !DIGlobalVariableExpression(var: !2359, expr: !DIExpression())
!2359 = distinct !DIGlobalVariable(name: "num_insns_scheduled", scope: !2, file: !3, line: 503, type: !849, isLocal: true, isDefinition: true)
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "max_uid_before_move_op", scope: !2, file: !3, line: 4984, type: !849, isLocal: true, isDefinition: true)
!2362 = !DIGlobalVariableExpression(var: !2363, expr: !DIExpression())
!2363 = distinct !DIGlobalVariable(name: "stat_bookkeeping_copies", scope: !2, file: !3, line: 544, type: !849, isLocal: true, isDefinition: true)
!2364 = !DIGlobalVariableExpression(var: !2365, expr: !DIExpression())
!2365 = distinct !DIGlobalVariable(name: "vec_temp_moveop_nops", scope: !2, file: !3, line: 530, type: !2120, isLocal: true, isDefinition: true)
!2366 = !DIGlobalVariableExpression(var: !2367, expr: !DIExpression())
!2367 = distinct !DIGlobalVariable(name: "enable_schedule_as_rhs_p", scope: !2, file: !3, line: 468, type: !1057, isLocal: true, isDefinition: true)
!2368 = !DIGlobalVariableExpression(var: !2369, expr: !DIExpression())
!2369 = distinct !DIGlobalVariable(name: "was_target_conflict", scope: !2, file: !3, line: 2069, type: !1057, isLocal: true, isDefinition: true)
!2370 = !DIGlobalVariableExpression(var: !2371, expr: !DIExpression())
!2371 = distinct !DIGlobalVariable(name: "code_motion_visited_blocks", scope: !2, file: !3, line: 539, type: !2074, isLocal: true, isDefinition: true)
!2372 = !DIGlobalVariableExpression(var: !2373, expr: !DIExpression())
!2373 = distinct !DIGlobalVariable(name: "reg_rename_this_tick", scope: !2, file: !3, line: 1349, type: !849, isLocal: true, isDefinition: true)
!2374 = !DIGlobalVariableExpression(var: !2375, expr: !DIExpression())
!2375 = distinct !DIGlobalVariable(name: "reg_rename_tick", scope: !2, file: !3, line: 1346, type: !2376, isLocal: true, isDefinition: true)
!2376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 1696, elements: !2377)
!2377 = !{!2378}
!2378 = !DISubrange(count: 53)
!2379 = !DIGlobalVariableExpression(var: !2380, expr: !DIExpression())
!2380 = distinct !DIGlobalVariable(name: "max_ws", scope: !2, file: !3, line: 500, type: !849, isLocal: true, isDefinition: true)
!2381 = !DIGlobalVariableExpression(var: !2382, expr: !DIExpression())
!2382 = distinct !DIGlobalVariable(name: "vec_bookkeeping_blocked_vinsns", scope: !2, file: !3, line: 519, type: !2383, isLocal: true, isDefinition: true)
!2383 = !DIDerivedType(tag: DW_TAG_typedef, name: "vinsn_vec_t", file: !3, line: 513, baseType: !2234)
!2384 = !DIGlobalVariableExpression(var: !2385, expr: !DIExpression())
!2385 = distinct !DIGlobalVariable(name: "cur_seqno", scope: !2, file: !3, line: 6677, type: !849, isLocal: true, isDefinition: true)
!2386 = !DIGlobalVariableExpression(var: !2387, expr: !DIExpression())
!2387 = distinct !DIGlobalVariable(name: "stat_insns_needed_bookkeeping", scope: !2, file: !3, line: 547, type: !849, isLocal: true, isDefinition: true)
!2388 = !DIGlobalVariableExpression(var: !2389, expr: !DIExpression())
!2389 = distinct !DIGlobalVariable(name: "stat_renamed_scheduled", scope: !2, file: !3, line: 550, type: !849, isLocal: true, isDefinition: true)
!2390 = !DIGlobalVariableExpression(var: !2391, expr: !DIExpression())
!2391 = distinct !DIGlobalVariable(name: "stat_substitutions_total", scope: !2, file: !3, line: 553, type: !849, isLocal: true, isDefinition: true)
!2392 = !DIGlobalVariableExpression(var: !2393, expr: !DIExpression())
!2393 = distinct !DIGlobalVariable(name: "scheduled_something_on_previous_fence", scope: !2, file: !3, line: 476, type: !1057, isLocal: true, isDefinition: true)
!2394 = !DIGlobalVariableExpression(var: !2395, expr: !DIExpression())
!2395 = distinct !DIGlobalVariable(name: "can_issue_more", scope: !2, file: !3, line: 496, type: !849, isLocal: true, isDefinition: true)
!2396 = !DIGlobalVariableExpression(var: !2397, expr: !DIExpression())
!2397 = distinct !DIGlobalVariable(name: "av_max_prio", scope: !2398, file: !3, line: 3695, type: !849, isLocal: true, isDefinition: true)
!2398 = distinct !DISubprogram(name: "fill_vec_av_set", scope: !3, file: !3, line: 3689, type: !2399, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2399 = !DISubroutineType(types: !2400)
!2400 = !{!1057, !2166, !2401, !2402, !2219}
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_t", file: !398, line: 252, baseType: !2149)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "fence_t", file: !398, line: 317, baseType: !2403)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2404 = !{}
!2405 = !DIGlobalVariableExpression(var: !2406, expr: !DIExpression())
!2406 = distinct !DIGlobalVariable(name: "est_ticks_till_branch", scope: !2398, file: !3, line: 3695, type: !849, isLocal: true, isDefinition: true)
!2407 = !DIGlobalVariableExpression(var: !2408, expr: !DIExpression())
!2408 = distinct !DIGlobalVariable(name: "vec_av_set", scope: !2, file: !3, line: 508, type: !2265, isLocal: true, isDefinition: true)
!2409 = !DIGlobalVariableExpression(var: !2410, expr: !DIExpression())
!2410 = distinct !DIGlobalVariable(name: "reg_rename_data", scope: !2411, file: !3, line: 1690, type: !2414, isLocal: true, isDefinition: true)
!2411 = distinct !DISubprogram(name: "find_best_reg_for_expr", scope: !3, file: !3, line: 1688, type: !2412, scopeLine: 1689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!1057, !2055, !2401, !2281}
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_rename", file: !3, line: 325, size: 192, elements: !2415)
!2415 = !{!2416, !2417, !2418}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "unavailable_hard_regs", scope: !2414, file: !3, line: 328, baseType: !2279, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "available_for_renaming", scope: !2414, file: !3, line: 331, baseType: !2279, size: 64, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "crosses_call", scope: !2414, file: !3, line: 334, baseType: !1057, size: 8, offset: 128)
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "sel_hrd", scope: !2, file: !3, line: 339, type: !2421, isLocal: true, isDefinition: true)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hard_regs_data", file: !3, line: 296, size: 15360, elements: !2422)
!2422 = !{!2423, !2427, !2429, !2431, !2432, !2433}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "regs_for_mode", scope: !2421, file: !3, line: 300, baseType: !2424, size: 5568)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2279, size: 5568, elements: !2425)
!2425 = !{!2426}
!2426 = !DISubrange(count: 87)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "regs_for_mode_ok", scope: !2421, file: !3, line: 303, baseType: !2428, size: 696, offset: 5568)
!2428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 696, elements: !2425)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "regs_for_rename", scope: !2421, file: !3, line: 308, baseType: !2430, size: 3392, offset: 6272)
!2430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2279, size: 3392, elements: !2377)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "regs_for_call_clobbered", scope: !2421, file: !3, line: 312, baseType: !2424, size: 5568, offset: 9664)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "regs_ever_used", scope: !2421, file: !3, line: 315, baseType: !2279, size: 64, offset: 15232)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "stack_regs", scope: !2421, file: !3, line: 319, baseType: !2279, size: 64, offset: 15296)
!2434 = !DIGlobalVariableExpression(var: !2435, expr: !DIExpression())
!2435 = distinct !DIGlobalVariable(name: "max_issue_size", scope: !2, file: !3, line: 493, type: !849, isLocal: true, isDefinition: true)
!2436 = !DIGlobalVariableExpression(var: !2437, expr: !DIExpression())
!2437 = distinct !DIGlobalVariable(name: "temp", scope: !2438, file: !3, line: 4282, type: !2209, isLocal: true, isDefinition: true)
!2438 = distinct !DISubprogram(name: "estimate_insn_cost", scope: !3, file: !3, line: 4280, type: !2439, scopeLine: 4281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2439 = !DISubroutineType(types: !2440)
!2440 = !{!849, !825, !2209}
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(name: "vec_target_unavailable_vinsns", scope: !2, file: !3, line: 524, type: !2383, isLocal: true, isDefinition: true)
!2443 = !{i32 7, !"Dwarf Version", i32 4}
!2444 = !{i32 2, !"Debug Info Version", i32 3}
!2445 = !{i32 1, !"wchar_size", i32 4}
!2446 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2447 = distinct !DISubprogram(name: "compute_live", scope: !3, file: !3, line: 3054, type: !2448, scopeLine: 3055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!2073, !2132}
!2450 = !DILocalVariable(name: "insn", arg: 1, scope: !2447, file: !3, line: 3054, type: !2132)
!2451 = !DILocation(line: 3054, column: 22, scope: !2447)
!2452 = !DILocalVariable(name: "bb", scope: !2447, file: !3, line: 3056, type: !1362)
!2453 = !DILocation(line: 3056, column: 15, scope: !2447)
!2454 = !DILocation(line: 3056, column: 20, scope: !2447)
!2455 = !DILocalVariable(name: "final", scope: !2447, file: !3, line: 3057, type: !2132)
!2456 = !DILocation(line: 3057, column: 10, scope: !2447)
!2457 = !DILocalVariable(name: "temp", scope: !2447, file: !3, line: 3057, type: !2132)
!2458 = !DILocation(line: 3057, column: 17, scope: !2447)
!2459 = !DILocalVariable(name: "lv", scope: !2447, file: !3, line: 3058, type: !2073)
!2460 = !DILocation(line: 3058, column: 10, scope: !2447)
!2461 = !DILocation(line: 3061, column: 8, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 3061, column: 7)
!2463 = !DILocation(line: 3061, column: 7, scope: !2447)
!2464 = !DILocalVariable(name: "src", scope: !2465, file: !3, line: 3063, type: !2073)
!2465 = distinct !DILexicalBlock(scope: !2462, file: !3, line: 3062, column: 5)
!2466 = !DILocation(line: 3063, column: 14, scope: !2465)
!2467 = !DILocation(line: 3065, column: 26, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 3065, column: 11)
!2469 = !DILocation(line: 3065, column: 11, scope: !2468)
!2470 = !DILocation(line: 3065, column: 32, scope: !2468)
!2471 = !DILocation(line: 3065, column: 35, scope: !2468)
!2472 = !DILocation(line: 3065, column: 11, scope: !2465)
!2473 = !DILocation(line: 3066, column: 15, scope: !2468)
!2474 = !DILocation(line: 3066, column: 13, scope: !2468)
!2475 = !DILocation(line: 3066, column: 9, scope: !2468)
!2476 = !DILocation(line: 3069, column: 11, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2468, file: !3, line: 3068, column: 9)
!2478 = !DILocation(line: 3070, column: 15, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2477, file: !3, line: 3070, column: 15)
!2480 = !DILocation(line: 3070, column: 15, scope: !2477)
!2481 = !DILocation(line: 3071, column: 19, scope: !2479)
!2482 = !DILocation(line: 3071, column: 17, scope: !2479)
!2483 = !DILocation(line: 3071, column: 13, scope: !2479)
!2484 = !DILocation(line: 3074, column: 11, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 3074, column: 11)
!2486 = !DILocation(line: 3074, column: 11, scope: !2465)
!2487 = !DILocation(line: 3076, column: 9, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2485, file: !3, line: 3075, column: 2)
!2489 = !DILocation(line: 3076, column: 7, scope: !2488)
!2490 = !DILocation(line: 3077, column: 4, scope: !2488)
!2491 = !DILocation(line: 3079, column: 30, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 3079, column: 15)
!2493 = !DILocation(line: 3079, column: 15, scope: !2492)
!2494 = !DILocation(line: 3079, column: 36, scope: !2492)
!2495 = !DILocation(line: 3079, column: 41, scope: !2492)
!2496 = !DILocation(line: 3079, column: 15, scope: !2488)
!2497 = !DILocation(line: 3081, column: 15, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 3080, column: 13)
!2499 = !DILocation(line: 3082, column: 15, scope: !2498)
!2500 = !DILocation(line: 3082, column: 38, scope: !2498)
!2501 = !DILocation(line: 3083, column: 13, scope: !2498)
!2502 = !DILocation(line: 3085, column: 27, scope: !2488)
!2503 = !DILocation(line: 3085, column: 4, scope: !2488)
!2504 = !DILocation(line: 3086, column: 11, scope: !2488)
!2505 = !DILocation(line: 3086, column: 4, scope: !2488)
!2506 = !DILocation(line: 3088, column: 5, scope: !2465)
!2507 = !DILocation(line: 3091, column: 16, scope: !2447)
!2508 = !DILocation(line: 3092, column: 3, scope: !2447)
!2509 = !DILocation(line: 3097, column: 10, scope: !2447)
!2510 = !DILocation(line: 3097, column: 8, scope: !2447)
!2511 = !DILocation(line: 3098, column: 11, scope: !2447)
!2512 = !DILocation(line: 3098, column: 9, scope: !2447)
!2513 = !DILocation(line: 3099, column: 3, scope: !2447)
!2514 = !DILocation(line: 3099, column: 10, scope: !2447)
!2515 = !DILocation(line: 3099, column: 18, scope: !2447)
!2516 = !DILocation(line: 3099, column: 15, scope: !2447)
!2517 = !DILocation(line: 3099, column: 24, scope: !2447)
!2518 = !DILocation(line: 3099, column: 29, scope: !2447)
!2519 = !DILocation(line: 3099, column: 27, scope: !2447)
!2520 = !DILocation(line: 0, scope: !2447)
!2521 = !DILocation(line: 3100, column: 12, scope: !2447)
!2522 = !DILocation(line: 3100, column: 10, scope: !2447)
!2523 = distinct !{!2523, !2513, !2521}
!2524 = !DILocation(line: 3101, column: 7, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 3101, column: 7)
!2526 = !DILocation(line: 3101, column: 15, scope: !2525)
!2527 = !DILocation(line: 3101, column: 12, scope: !2525)
!2528 = !DILocation(line: 3101, column: 7, scope: !2447)
!2529 = !DILocation(line: 3103, column: 35, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2525, file: !3, line: 3102, column: 5)
!2531 = !DILocation(line: 3103, column: 12, scope: !2530)
!2532 = !DILocation(line: 3103, column: 10, scope: !2530)
!2533 = !DILocation(line: 3104, column: 14, scope: !2530)
!2534 = !DILocation(line: 3104, column: 12, scope: !2530)
!2535 = !DILocation(line: 3105, column: 5, scope: !2530)
!2536 = !DILocation(line: 3108, column: 12, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2525, file: !3, line: 3107, column: 5)
!2538 = !DILocation(line: 3108, column: 10, scope: !2537)
!2539 = !DILocation(line: 3109, column: 7, scope: !2537)
!2540 = !DILocation(line: 3113, column: 11, scope: !2447)
!2541 = !DILocation(line: 3113, column: 9, scope: !2447)
!2542 = !DILocation(line: 3114, column: 3, scope: !2447)
!2543 = !DILocation(line: 3114, column: 10, scope: !2447)
!2544 = !DILocation(line: 3114, column: 18, scope: !2447)
!2545 = !DILocation(line: 3114, column: 15, scope: !2447)
!2546 = !DILocation(line: 3116, column: 25, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 3115, column: 5)
!2548 = !DILocation(line: 3116, column: 29, scope: !2547)
!2549 = !DILocation(line: 3116, column: 7, scope: !2547)
!2550 = !DILocation(line: 3117, column: 7, scope: !2547)
!2551 = !DILocation(line: 3118, column: 7, scope: !2547)
!2552 = !DILocation(line: 3118, column: 32, scope: !2547)
!2553 = !DILocation(line: 3119, column: 14, scope: !2547)
!2554 = !DILocation(line: 3119, column: 12, scope: !2547)
!2555 = distinct !{!2555, !2542, !2556}
!2556 = !DILocation(line: 3120, column: 5, scope: !2447)
!2557 = !DILocation(line: 3123, column: 22, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 3123, column: 7)
!2559 = !DILocation(line: 3123, column: 7, scope: !2558)
!2560 = !DILocation(line: 3123, column: 7, scope: !2447)
!2561 = !DILocalVariable(name: "bb", scope: !2562, file: !3, line: 3125, type: !1362)
!2562 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 3124, column: 5)
!2563 = !DILocation(line: 3125, column: 19, scope: !2562)
!2564 = !DILocation(line: 3125, column: 24, scope: !2562)
!2565 = !DILocation(line: 3127, column: 7, scope: !2562)
!2566 = !DILocation(line: 3128, column: 7, scope: !2562)
!2567 = !DILocation(line: 3128, column: 30, scope: !2562)
!2568 = !DILocation(line: 3129, column: 5, scope: !2562)
!2569 = !DILocation(line: 3133, column: 26, scope: !2447)
!2570 = !DILocation(line: 3133, column: 3, scope: !2447)
!2571 = !DILocation(line: 3134, column: 10, scope: !2447)
!2572 = !DILocation(line: 3134, column: 3, scope: !2447)
!2573 = !DILocation(line: 3135, column: 1, scope: !2447)
!2574 = distinct !DISubprogram(name: "VEC_sel_global_bb_info_def_base_index", scope: !398, file: !398, line: 888, type: !2575, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!2577, !2583, !7}
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "sel_global_bb_info_def", file: !398, line: 884, baseType: !2579)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 872, size: 128, elements: !2580)
!2580 = !{!2581, !2582}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "lv_set", scope: !2579, file: !398, line: 878, baseType: !2073, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "lv_set_valid_p", scope: !2579, file: !398, line: 883, baseType: !1057, size: 8, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_global_bb_info_def_base", file: !398, line: 888, baseType: !2585)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_global_bb_info_def_base", file: !398, line: 888, size: 192, elements: !2586)
!2586 = !{!2587, !2588, !2589}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2585, file: !398, line: 888, baseType: !7, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2585, file: !398, line: 888, baseType: !7, size: 32, offset: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2585, file: !398, line: 888, baseType: !2590, size: 128, offset: 64)
!2590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2578, size: 128, elements: !863)
!2591 = !DILocalVariable(name: "vec_", arg: 1, scope: !2574, file: !398, line: 888, type: !2583)
!2592 = !DILocation(line: 888, column: 1, scope: !2574)
!2593 = !DILocalVariable(name: "ix_", arg: 2, scope: !2574, file: !398, line: 888, type: !7)
!2594 = !DILocation(line: 0, scope: !2574)
!2595 = distinct !DISubprogram(name: "VEC_sel_insn_data_def_base_index", scope: !398, file: !398, line: 762, type: !2596, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2596 = !DISubroutineType(types: !2597)
!2597 = !{!2598, !2618, !7}
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "sel_insn_data_def", file: !398, line: 759, baseType: !2600)
!2600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sel_insn_data", file: !398, line: 698, size: 2560, elements: !2601)
!2601 = !{!2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2600, file: !398, line: 702, baseType: !2057, size: 512)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ws_level", scope: !2600, file: !398, line: 705, baseType: !849, size: 32, offset: 512)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !2600, file: !398, line: 708, baseType: !849, size: 32, offset: 544)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2600, file: !398, line: 711, baseType: !2073, size: 64, offset: 576)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed_deps", scope: !2600, file: !398, line: 714, baseType: !2074, size: 64, offset: 640)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "found_deps", scope: !2600, file: !398, line: 719, baseType: !2074, size: 64, offset: 704)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "originators", scope: !2600, file: !398, line: 724, baseType: !2074, size: 64, offset: 768)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "transformed_insns", scope: !2600, file: !398, line: 727, baseType: !1275, size: 64, offset: 832)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "deps_context", scope: !2600, file: !398, line: 730, baseType: !2171, size: 1472, offset: 896)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "sched_next", scope: !2600, file: !398, line: 736, baseType: !2132, size: 64, offset: 2368)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "sched_cycle", scope: !2600, file: !398, line: 740, baseType: !849, size: 32, offset: 2432)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "ready_cycle", scope: !2600, file: !398, line: 743, baseType: !849, size: 32, offset: 2464)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "spec_checked_ds", scope: !2600, file: !398, line: 746, baseType: !2089, size: 32, offset: 2496)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "live_valid_p", scope: !2600, file: !398, line: 749, baseType: !7, size: 1, offset: 2528, flags: DIFlagBitField, extraData: i64 2528)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "asm_p", scope: !2600, file: !398, line: 751, baseType: !7, size: 1, offset: 2529, flags: DIFlagBitField, extraData: i64 2528)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "after_stall_p", scope: !2600, file: !398, line: 756, baseType: !7, size: 1, offset: 2530, flags: DIFlagBitField, extraData: i64 2528)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_insn_data_def_base", file: !398, line: 762, baseType: !2620)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_insn_data_def_base", file: !398, line: 762, size: 2624, elements: !2621)
!2621 = !{!2622, !2623, !2624}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2620, file: !398, line: 762, baseType: !7, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2620, file: !398, line: 762, baseType: !7, size: 32, offset: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2620, file: !398, line: 762, baseType: !2625, size: 2560, offset: 64)
!2625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2599, size: 2560, elements: !863)
!2626 = !DILocalVariable(name: "vec_", arg: 1, scope: !2595, file: !398, line: 762, type: !2618)
!2627 = !DILocation(line: 762, column: 1, scope: !2595)
!2628 = !DILocalVariable(name: "ix_", arg: 2, scope: !2595, file: !398, line: 762, type: !7)
!2629 = !DILocation(line: 0, scope: !2595)
!2630 = distinct !DISubprogram(name: "VEC_int_base_index", scope: !1345, file: !1345, line: 31, type: !2631, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!849, !2633, !7}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2635)
!2635 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1345, line: 31, baseType: !2636)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1345, line: 31, size: 96, elements: !2637)
!2637 = !{!2638, !2639, !2640}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2636, file: !1345, line: 31, baseType: !7, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2636, file: !1345, line: 31, baseType: !7, size: 32, offset: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2636, file: !1345, line: 31, baseType: !2641, size: 32, offset: 64)
!2641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 32, elements: !863)
!2642 = !DILocalVariable(name: "vec_", arg: 1, scope: !2630, file: !1345, line: 31, type: !2633)
!2643 = !DILocation(line: 31, column: 1, scope: !2630)
!2644 = !DILocalVariable(name: "ix_", arg: 2, scope: !2630, file: !1345, line: 31, type: !7)
!2645 = !DILocation(line: 0, scope: !2630)
!2646 = distinct !DISubprogram(name: "compute_live_after_bb", scope: !3, file: !3, line: 3025, type: !2647, scopeLine: 3026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2647 = !DISubroutineType(types: !2648)
!2648 = !{!2073, !1362}
!2649 = !DILocalVariable(name: "bb", arg: 1, scope: !2646, file: !3, line: 3025, type: !1362)
!2650 = !DILocation(line: 3025, column: 36, scope: !2646)
!2651 = !DILocalVariable(name: "e", scope: !2646, file: !3, line: 3027, type: !1379)
!2652 = !DILocation(line: 3027, column: 8, scope: !2646)
!2653 = !DILocalVariable(name: "ei", scope: !2646, file: !3, line: 3028, type: !2654)
!2654 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !155, line: 682, baseType: !2655)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !155, line: 679, size: 128, elements: !2656)
!2656 = !{!2657, !2658}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2655, file: !155, line: 680, baseType: !7, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2655, file: !155, line: 681, baseType: !2659, size: 64, offset: 64)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!2660 = !DILocation(line: 3028, column: 17, scope: !2646)
!2661 = !DILocalVariable(name: "lv", scope: !2646, file: !3, line: 3029, type: !2073)
!2662 = !DILocation(line: 3029, column: 10, scope: !2646)
!2663 = !DILocation(line: 3029, column: 15, scope: !2646)
!2664 = !DILocation(line: 3031, column: 3, scope: !2646)
!2665 = !DILocation(line: 3033, column: 3, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2646, file: !3, line: 3033, column: 3)
!2667 = !DILocation(line: 3033, column: 3, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2666, file: !3, line: 3033, column: 3)
!2669 = !DILocation(line: 3034, column: 25, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 3034, column: 9)
!2671 = !DILocation(line: 3034, column: 28, scope: !2670)
!2672 = !DILocation(line: 3034, column: 9, scope: !2670)
!2673 = !DILocation(line: 3034, column: 9, scope: !2668)
!2674 = !DILocation(line: 3036, column: 15, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 3036, column: 13)
!2676 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 3035, column: 7)
!2677 = !DILocation(line: 3036, column: 13, scope: !2676)
!2678 = !DILocation(line: 3038, column: 13, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2675, file: !3, line: 3037, column: 11)
!2680 = !DILocation(line: 3039, column: 13, scope: !2679)
!2681 = !DILocation(line: 3040, column: 58, scope: !2679)
!2682 = !DILocation(line: 3040, column: 61, scope: !2679)
!2683 = !DILocation(line: 3040, column: 35, scope: !2679)
!2684 = !DILocation(line: 3040, column: 13, scope: !2679)
!2685 = !DILocation(line: 3040, column: 33, scope: !2679)
!2686 = !DILocation(line: 3041, column: 13, scope: !2679)
!2687 = !DILocation(line: 3041, column: 41, scope: !2679)
!2688 = !DILocation(line: 3042, column: 11, scope: !2679)
!2689 = !DILocation(line: 3043, column: 9, scope: !2676)
!2690 = !DILocation(line: 3044, column: 7, scope: !2676)
!2691 = !DILocation(line: 3046, column: 7, scope: !2670)
!2692 = !DILocation(line: 3034, column: 32, scope: !2670)
!2693 = distinct !{!2693, !2665, !2694}
!2694 = !DILocation(line: 3046, column: 7, scope: !2666)
!2695 = !DILocation(line: 3048, column: 10, scope: !2646)
!2696 = !DILocation(line: 3048, column: 3, scope: !2646)
!2697 = distinct !DISubprogram(name: "propagate_lv_set", scope: !3, file: !3, line: 3013, type: !2698, scopeLine: 3014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{null, !2073, !2132}
!2700 = !DILocalVariable(name: "lv", arg: 1, scope: !2697, file: !3, line: 3013, type: !2073)
!2701 = !DILocation(line: 3013, column: 26, scope: !2697)
!2702 = !DILocalVariable(name: "insn", arg: 2, scope: !2697, file: !3, line: 3013, type: !2132)
!2703 = !DILocation(line: 3013, column: 37, scope: !2697)
!2704 = !DILocation(line: 3015, column: 3, scope: !2697)
!2705 = !DILocation(line: 3017, column: 7, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 3017, column: 7)
!2707 = !DILocation(line: 3017, column: 7, scope: !2697)
!2708 = !DILocation(line: 3018, column: 5, scope: !2706)
!2709 = !DILocation(line: 3020, column: 35, scope: !2697)
!2710 = !DILocation(line: 3020, column: 58, scope: !2697)
!2711 = !DILocation(line: 3020, column: 64, scope: !2697)
!2712 = !DILocation(line: 3020, column: 3, scope: !2697)
!2713 = !DILocation(line: 3021, column: 1, scope: !2697)
!2714 = distinct !DISubprogram(name: "sel_add_to_insn_priority", scope: !3, file: !3, line: 3673, type: !2715, scopeLine: 3674, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{null, !825, !849}
!2717 = !DILocalVariable(name: "insn", arg: 1, scope: !2714, file: !3, line: 3673, type: !825)
!2718 = !DILocation(line: 3673, column: 36, scope: !2714)
!2719 = !DILocalVariable(name: "amount", arg: 2, scope: !2714, file: !3, line: 3673, type: !849)
!2720 = !DILocation(line: 3673, column: 46, scope: !2714)
!2721 = !DILocation(line: 3675, column: 43, scope: !2714)
!2722 = !DILocation(line: 3675, column: 3, scope: !2714)
!2723 = !DILocation(line: 3675, column: 40, scope: !2714)
!2724 = !DILocation(line: 3677, column: 7, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 3677, column: 7)
!2726 = !DILocation(line: 3677, column: 21, scope: !2725)
!2727 = !DILocation(line: 3677, column: 7, scope: !2714)
!2728 = !DILocation(line: 3678, column: 5, scope: !2725)
!2729 = !DILocation(line: 3678, column: 5, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 3678, column: 5)
!2731 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 3678, column: 5)
!2732 = !DILocation(line: 3678, column: 5, scope: !2731)
!2733 = !DILocalVariable(name: "__j", scope: !2734, file: !3, line: 3678, type: !849)
!2734 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 3678, column: 5)
!2735 = !DILocation(line: 3678, column: 5, scope: !2734)
!2736 = !DILocalVariable(name: "__s", scope: !2734, file: !3, line: 3678, type: !817)
!2737 = !DILocation(line: 3681, column: 1, scope: !2714)
!2738 = distinct !DISubprogram(name: "move_op_on_enter", scope: !3, file: !3, line: 6177, type: !2294, scopeLine: 6180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2739 = !DILocalVariable(name: "insn", arg: 1, scope: !2738, file: !3, line: 6177, type: !2132)
!2740 = !DILocation(line: 6177, column: 26, scope: !2738)
!2741 = !DILocalVariable(name: "local_params", arg: 2, scope: !2738, file: !3, line: 6178, type: !2296)
!2742 = !DILocation(line: 6178, column: 39, scope: !2738)
!2743 = !DILocalVariable(name: "static_params", arg: 3, scope: !2738, file: !3, line: 6179, type: !819)
!2744 = !DILocation(line: 6179, column: 25, scope: !2738)
!2745 = !DILocalVariable(name: "visited_p", arg: 4, scope: !2738, file: !3, line: 6179, type: !1057)
!2746 = !DILocation(line: 6179, column: 62, scope: !2738)
!2747 = !DILocation(line: 6181, column: 7, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 6181, column: 7)
!2749 = !DILocation(line: 6181, column: 7, scope: !2738)
!2750 = !DILocation(line: 6182, column: 5, scope: !2748)
!2751 = !DILocation(line: 6183, column: 3, scope: !2738)
!2752 = !DILocation(line: 6184, column: 1, scope: !2738)
!2753 = distinct !DISubprogram(name: "move_op_orig_expr_found", scope: !3, file: !3, line: 5973, type: !2308, scopeLine: 5976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2754 = !DILocalVariable(name: "insn", arg: 1, scope: !2753, file: !3, line: 5973, type: !2132)
!2755 = !DILocation(line: 5973, column: 33, scope: !2753)
!2756 = !DILocalVariable(name: "expr", arg: 2, scope: !2753, file: !3, line: 5973, type: !2055)
!2757 = !DILocation(line: 5973, column: 46, scope: !2753)
!2758 = !DILocalVariable(name: "lparams", arg: 3, scope: !2753, file: !3, line: 5974, type: !2296)
!2759 = !DILocation(line: 5974, column: 46, scope: !2753)
!2760 = !DILocalVariable(name: "static_params", arg: 4, scope: !2753, file: !3, line: 5975, type: !819)
!2761 = !DILocation(line: 5975, column: 32, scope: !2753)
!2762 = !DILocalVariable(name: "only_disconnect", scope: !2753, file: !3, line: 5977, type: !1057)
!2763 = !DILocation(line: 5977, column: 8, scope: !2753)
!2764 = !DILocalVariable(name: "insn_emitted", scope: !2753, file: !3, line: 5977, type: !1057)
!2765 = !DILocation(line: 5977, column: 25, scope: !2753)
!2766 = !DILocalVariable(name: "params", scope: !2753, file: !3, line: 5978, type: !820)
!2767 = !DILocation(line: 5978, column: 26, scope: !2753)
!2768 = !DILocation(line: 5978, column: 60, scope: !2753)
!2769 = !DILocation(line: 5978, column: 35, scope: !2753)
!2770 = !DILocation(line: 5980, column: 21, scope: !2753)
!2771 = !DILocation(line: 5980, column: 29, scope: !2753)
!2772 = !DILocation(line: 5980, column: 37, scope: !2753)
!2773 = !DILocation(line: 5980, column: 3, scope: !2753)
!2774 = !DILocation(line: 5981, column: 37, scope: !2753)
!2775 = !DILocation(line: 5981, column: 3, scope: !2753)
!2776 = !DILocation(line: 5982, column: 51, scope: !2753)
!2777 = !DILocation(line: 5982, column: 57, scope: !2753)
!2778 = !DILocation(line: 5982, column: 63, scope: !2753)
!2779 = !DILocation(line: 5982, column: 18, scope: !2753)
!2780 = !DILocation(line: 5982, column: 16, scope: !2753)
!2781 = !DILocation(line: 5983, column: 22, scope: !2753)
!2782 = !DILocation(line: 5983, column: 30, scope: !2753)
!2783 = !DILocation(line: 5983, column: 37, scope: !2753)
!2784 = !DILocation(line: 5983, column: 34, scope: !2753)
!2785 = !DILocation(line: 5984, column: 22, scope: !2753)
!2786 = !DILocation(line: 5984, column: 27, scope: !2753)
!2787 = !DILocation(line: 5984, column: 41, scope: !2753)
!2788 = !DILocation(line: 5984, column: 46, scope: !2753)
!2789 = !DILocation(line: 5984, column: 44, scope: !2753)
!2790 = !DILocation(line: 0, scope: !2753)
!2791 = !DILocation(line: 5983, column: 21, scope: !2753)
!2792 = !DILocation(line: 5983, column: 19, scope: !2753)
!2793 = !DILocation(line: 5987, column: 7, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 5987, column: 7)
!2795 = !DILocation(line: 5987, column: 7, scope: !2753)
!2796 = !DILocation(line: 5988, column: 5, scope: !2794)
!2797 = !DILocation(line: 5988, column: 13, scope: !2794)
!2798 = !DILocation(line: 5988, column: 17, scope: !2794)
!2799 = !DILocation(line: 5989, column: 28, scope: !2753)
!2800 = !DILocation(line: 5989, column: 34, scope: !2753)
!2801 = !DILocation(line: 5989, column: 3, scope: !2753)
!2802 = !DILocation(line: 5990, column: 1, scope: !2753)
!2803 = distinct !DISubprogram(name: "move_op_orig_expr_not_found", scope: !3, file: !3, line: 6193, type: !2312, scopeLine: 6195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2804 = !DILocalVariable(name: "insn", arg: 1, scope: !2803, file: !3, line: 6193, type: !2132)
!2805 = !DILocation(line: 6193, column: 37, scope: !2803)
!2806 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !2803, file: !3, line: 6193, type: !2166)
!2807 = !DILocation(line: 6193, column: 52, scope: !2803)
!2808 = !DILocalVariable(name: "static_params", arg: 3, scope: !2803, file: !3, line: 6194, type: !819)
!2809 = !DILocation(line: 6194, column: 14, scope: !2803)
!2810 = !DILocalVariable(name: "sparams", scope: !2803, file: !3, line: 6196, type: !820)
!2811 = !DILocation(line: 6196, column: 26, scope: !2803)
!2812 = !DILocation(line: 6196, column: 61, scope: !2803)
!2813 = !DILocation(line: 6196, column: 36, scope: !2803)
!2814 = !DILocation(line: 6205, column: 37, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 6205, column: 7)
!2816 = !DILocation(line: 6205, column: 43, scope: !2815)
!2817 = !DILocation(line: 6205, column: 52, scope: !2815)
!2818 = !DILocation(line: 6205, column: 7, scope: !2815)
!2819 = !DILocation(line: 6205, column: 7, scope: !2803)
!2820 = !DILocation(line: 6206, column: 5, scope: !2815)
!2821 = !DILocation(line: 6207, column: 3, scope: !2803)
!2822 = !DILocation(line: 6208, column: 1, scope: !2803)
!2823 = distinct !DISubprogram(name: "move_op_merge_succs", scope: !3, file: !3, line: 5704, type: !2316, scopeLine: 5708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2824 = !DILocalVariable(name: "insn", arg: 1, scope: !2823, file: !3, line: 5704, type: !2132)
!2825 = !DILocation(line: 5704, column: 29, scope: !2823)
!2826 = !DILocalVariable(name: "succ", arg: 2, scope: !2823, file: !3, line: 5705, type: !2132)
!2827 = !DILocation(line: 5705, column: 29, scope: !2823)
!2828 = !DILocalVariable(name: "moveop_drv_call_res", arg: 3, scope: !2823, file: !3, line: 5706, type: !849)
!2829 = !DILocation(line: 5706, column: 12, scope: !2823)
!2830 = !DILocalVariable(name: "lparams", arg: 4, scope: !2823, file: !3, line: 5707, type: !2296)
!2831 = !DILocation(line: 5707, column: 28, scope: !2823)
!2832 = !DILocalVariable(name: "static_params", arg: 5, scope: !2823, file: !3, line: 5707, type: !819)
!2833 = !DILocation(line: 5707, column: 43, scope: !2823)
!2834 = !DILocalVariable(name: "sparams", scope: !2823, file: !3, line: 5709, type: !820)
!2835 = !DILocation(line: 5709, column: 26, scope: !2823)
!2836 = !DILocation(line: 5709, column: 61, scope: !2823)
!2837 = !DILocation(line: 5709, column: 36, scope: !2823)
!2838 = !DILocation(line: 5712, column: 7, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 5712, column: 7)
!2840 = !DILocation(line: 5712, column: 27, scope: !2839)
!2841 = !DILocation(line: 5712, column: 7, scope: !2823)
!2842 = !DILocation(line: 5713, column: 5, scope: !2839)
!2843 = !DILocation(line: 5716, column: 8, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 5716, column: 7)
!2845 = !DILocation(line: 5716, column: 17, scope: !2844)
!2846 = !DILocation(line: 5716, column: 7, scope: !2823)
!2847 = !DILocation(line: 5718, column: 32, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2844, file: !3, line: 5717, column: 5)
!2849 = !DILocation(line: 5718, column: 41, scope: !2848)
!2850 = !DILocation(line: 5718, column: 7, scope: !2848)
!2851 = !DILocation(line: 5718, column: 16, scope: !2848)
!2852 = !DILocation(line: 5718, column: 30, scope: !2848)
!2853 = !DILocation(line: 5719, column: 25, scope: !2848)
!2854 = !DILocation(line: 5719, column: 34, scope: !2848)
!2855 = !DILocation(line: 5719, column: 7, scope: !2848)
!2856 = !DILocation(line: 5719, column: 16, scope: !2848)
!2857 = !DILocation(line: 5719, column: 23, scope: !2848)
!2858 = !DILocation(line: 5720, column: 5, scope: !2848)
!2859 = !DILocalVariable(name: "old_times", scope: !2860, file: !3, line: 5741, type: !849)
!2860 = distinct !DILexicalBlock(scope: !2844, file: !3, line: 5722, column: 5)
!2861 = !DILocation(line: 5741, column: 11, scope: !2860)
!2862 = !DILocation(line: 5741, column: 23, scope: !2860)
!2863 = !DILocation(line: 5743, column: 24, scope: !2860)
!2864 = !DILocation(line: 5743, column: 33, scope: !2860)
!2865 = !DILocation(line: 5743, column: 48, scope: !2860)
!2866 = !DILocation(line: 5743, column: 57, scope: !2860)
!2867 = !DILocation(line: 5743, column: 7, scope: !2860)
!2868 = !DILocation(line: 5744, column: 11, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 5744, column: 11)
!2870 = !DILocation(line: 5744, column: 46, scope: !2869)
!2871 = !DILocation(line: 5744, column: 11, scope: !2860)
!2872 = !DILocation(line: 5745, column: 46, scope: !2869)
!2873 = !DILocation(line: 5745, column: 2, scope: !2869)
!2874 = !DILocation(line: 5745, column: 44, scope: !2869)
!2875 = !DILocation(line: 5747, column: 19, scope: !2860)
!2876 = !DILocation(line: 5747, column: 28, scope: !2860)
!2877 = !DILocation(line: 5747, column: 7, scope: !2860)
!2878 = !DILocation(line: 5749, column: 1, scope: !2823)
!2879 = distinct !DISubprogram(name: "move_op_after_merge_succs", scope: !3, file: !3, line: 5785, type: !2320, scopeLine: 5786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2880 = !DILocalVariable(name: "lp", arg: 1, scope: !2879, file: !3, line: 5785, type: !2296)
!2881 = !DILocation(line: 5785, column: 48, scope: !2879)
!2882 = !DILocalVariable(name: "sparams", arg: 2, scope: !2879, file: !3, line: 5785, type: !819)
!2883 = !DILocation(line: 5785, column: 58, scope: !2879)
!2884 = !DILocalVariable(name: "sp", scope: !2879, file: !3, line: 5787, type: !820)
!2885 = !DILocation(line: 5787, column: 26, scope: !2879)
!2886 = !DILocation(line: 5787, column: 56, scope: !2879)
!2887 = !DILocation(line: 5787, column: 31, scope: !2879)
!2888 = !DILocation(line: 5789, column: 16, scope: !2879)
!2889 = !DILocation(line: 5789, column: 20, scope: !2879)
!2890 = !DILocation(line: 5789, column: 3, scope: !2879)
!2891 = !DILocation(line: 5789, column: 7, scope: !2879)
!2892 = !DILocation(line: 5789, column: 14, scope: !2879)
!2893 = !DILocation(line: 5790, column: 1, scope: !2879)
!2894 = distinct !DISubprogram(name: "move_op_ascend", scope: !3, file: !3, line: 6134, type: !2324, scopeLine: 6135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2895 = !DILocalVariable(name: "insn", arg: 1, scope: !2894, file: !3, line: 6134, type: !2132)
!2896 = !DILocation(line: 6134, column: 24, scope: !2894)
!2897 = !DILocalVariable(name: "static_params", arg: 2, scope: !2894, file: !3, line: 6134, type: !819)
!2898 = !DILocation(line: 6134, column: 36, scope: !2894)
!2899 = !DILocalVariable(name: "res", scope: !2894, file: !3, line: 6136, type: !610)
!2900 = !DILocation(line: 6136, column: 25, scope: !2894)
!2901 = !DILocalVariable(name: "sparams", scope: !2894, file: !3, line: 6137, type: !820)
!2902 = !DILocation(line: 6137, column: 26, scope: !2894)
!2903 = !DILocation(line: 6137, column: 61, scope: !2894)
!2904 = !DILocation(line: 6137, column: 36, scope: !2894)
!2905 = !DILocation(line: 6139, column: 9, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 6139, column: 7)
!2907 = !DILocation(line: 6139, column: 7, scope: !2894)
!2908 = !DILocation(line: 6141, column: 33, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 6140, column: 5)
!2910 = !DILocation(line: 6141, column: 42, scope: !2909)
!2911 = !DILocation(line: 6141, column: 50, scope: !2909)
!2912 = !DILocation(line: 6141, column: 13, scope: !2909)
!2913 = !DILocation(line: 6141, column: 11, scope: !2909)
!2914 = !DILocation(line: 6142, column: 7, scope: !2909)
!2915 = !DILocation(line: 6143, column: 5, scope: !2909)
!2916 = !DILocation(line: 6146, column: 28, scope: !2894)
!2917 = !DILocation(line: 6146, column: 3, scope: !2894)
!2918 = !DILocation(line: 6147, column: 1, scope: !2894)
!2919 = distinct !DISubprogram(name: "move_op_at_first_insn", scope: !3, file: !3, line: 6040, type: !2328, scopeLine: 6042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2920 = !DILocalVariable(name: "insn", arg: 1, scope: !2919, file: !3, line: 6040, type: !2132)
!2921 = !DILocation(line: 6040, column: 31, scope: !2919)
!2922 = !DILocalVariable(name: "lparams", arg: 2, scope: !2919, file: !3, line: 6040, type: !2296)
!2923 = !DILocation(line: 6040, column: 57, scope: !2919)
!2924 = !DILocalVariable(name: "static_params", arg: 3, scope: !2919, file: !3, line: 6041, type: !819)
!2925 = !DILocation(line: 6041, column: 30, scope: !2919)
!2926 = !DILocalVariable(name: "sparams", scope: !2919, file: !3, line: 6043, type: !820)
!2927 = !DILocation(line: 6043, column: 26, scope: !2919)
!2928 = !DILocation(line: 6043, column: 61, scope: !2919)
!2929 = !DILocation(line: 6043, column: 36, scope: !2919)
!2930 = !DILocalVariable(name: "book_block", scope: !2919, file: !3, line: 6044, type: !1362)
!2931 = !DILocation(line: 6044, column: 15, scope: !2919)
!2932 = !DILocation(line: 6048, column: 8, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 6048, column: 7)
!2934 = !DILocation(line: 6048, column: 17, scope: !2933)
!2935 = !DILocation(line: 6049, column: 7, scope: !2933)
!2936 = !DILocation(line: 6049, column: 10, scope: !2933)
!2937 = !DILocation(line: 6049, column: 19, scope: !2933)
!2938 = !DILocation(line: 6050, column: 7, scope: !2933)
!2939 = !DILocation(line: 6050, column: 25, scope: !2933)
!2940 = !DILocation(line: 6050, column: 10, scope: !2933)
!2941 = !DILocation(line: 6048, column: 7, scope: !2919)
!2942 = !DILocation(line: 6054, column: 35, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2944, file: !3, line: 6054, column: 11)
!2944 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 6051, column: 5)
!2945 = !DILocation(line: 6054, column: 11, scope: !2943)
!2946 = !DILocation(line: 6054, column: 11, scope: !2944)
!2947 = !DILocation(line: 6055, column: 49, scope: !2943)
!2948 = !DILocation(line: 6055, column: 58, scope: !2943)
!2949 = !DILocation(line: 6056, column: 49, scope: !2943)
!2950 = !DILocation(line: 6056, column: 58, scope: !2943)
!2951 = !DILocation(line: 6056, column: 62, scope: !2943)
!2952 = !DILocation(line: 6056, column: 71, scope: !2943)
!2953 = !DILocation(line: 6055, column: 22, scope: !2943)
!2954 = !DILocation(line: 6055, column: 20, scope: !2943)
!2955 = !DILocation(line: 6055, column: 9, scope: !2943)
!2956 = !DILocation(line: 6058, column: 25, scope: !2944)
!2957 = !DILocation(line: 6058, column: 7, scope: !2944)
!2958 = !DILocation(line: 6059, column: 5, scope: !2944)
!2959 = !DILocation(line: 6107, column: 7, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 6107, column: 7)
!2961 = !DILocation(line: 6107, column: 7, scope: !2919)
!2962 = !DILocation(line: 6108, column: 42, scope: !2960)
!2963 = !DILocation(line: 6108, column: 5, scope: !2960)
!2964 = !DILocation(line: 6111, column: 7, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 6111, column: 7)
!2966 = !DILocation(line: 6111, column: 16, scope: !2965)
!2967 = !DILocation(line: 6111, column: 7, scope: !2919)
!2968 = !DILocation(line: 6112, column: 12, scope: !2965)
!2969 = !DILocation(line: 6112, column: 10, scope: !2965)
!2970 = !DILocation(line: 6112, column: 5, scope: !2965)
!2971 = !DILocation(line: 6116, column: 7, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 6116, column: 7)
!2973 = !DILocation(line: 6116, column: 16, scope: !2972)
!2974 = !DILocation(line: 6116, column: 7, scope: !2919)
!2975 = !DILocation(line: 6117, column: 24, scope: !2972)
!2976 = !DILocation(line: 6117, column: 5, scope: !2972)
!2977 = !DILocation(line: 6118, column: 1, scope: !2919)
!2978 = distinct !DISubprogram(name: "fur_on_enter", scope: !3, file: !3, line: 6153, type: !2294, scopeLine: 6155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!2979 = !DILocalVariable(name: "insn", arg: 1, scope: !2978, file: !3, line: 6153, type: !2132)
!2980 = !DILocation(line: 6153, column: 22, scope: !2978)
!2981 = !DILocalVariable(name: "local_params", arg: 2, scope: !2978, file: !3, line: 6153, type: !2296)
!2982 = !DILocation(line: 6153, column: 65, scope: !2978)
!2983 = !DILocalVariable(name: "static_params", arg: 3, scope: !2978, file: !3, line: 6154, type: !819)
!2984 = !DILocation(line: 6154, column: 14, scope: !2978)
!2985 = !DILocalVariable(name: "visited_p", arg: 4, scope: !2978, file: !3, line: 6154, type: !1057)
!2986 = !DILocation(line: 6154, column: 34, scope: !2978)
!2987 = !DILocalVariable(name: "sparams", scope: !2978, file: !3, line: 6156, type: !2246)
!2988 = !DILocation(line: 6156, column: 23, scope: !2978)
!2989 = !DILocation(line: 6156, column: 55, scope: !2978)
!2990 = !DILocation(line: 6156, column: 33, scope: !2978)
!2991 = !DILocation(line: 6158, column: 7, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 6158, column: 7)
!2993 = !DILocation(line: 6158, column: 7, scope: !2978)
!2994 = !DILocation(line: 6162, column: 7, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 6159, column: 5)
!2996 = !DILocation(line: 6167, column: 7, scope: !2995)
!2997 = !DILocation(line: 6167, column: 16, scope: !2995)
!2998 = !DILocation(line: 6166, column: 7, scope: !2995)
!2999 = !DILocation(line: 6166, column: 48, scope: !2995)
!3000 = !DILocation(line: 6167, column: 4, scope: !2995)
!3001 = !DILocation(line: 6168, column: 5, scope: !2995)
!3002 = !DILocation(line: 6170, column: 41, scope: !2992)
!3003 = !DILocation(line: 6170, column: 50, scope: !2992)
!3004 = !DILocation(line: 6170, column: 40, scope: !2992)
!3005 = !DILocation(line: 6170, column: 5, scope: !2992)
!3006 = !DILocation(line: 6170, column: 19, scope: !2992)
!3007 = !DILocation(line: 6170, column: 38, scope: !2992)
!3008 = !DILocation(line: 6172, column: 3, scope: !2978)
!3009 = distinct !DISubprogram(name: "fur_orig_expr_found", scope: !3, file: !3, line: 5996, type: !2308, scopeLine: 5999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3010 = !DILocalVariable(name: "insn", arg: 1, scope: !3009, file: !3, line: 5996, type: !2132)
!3011 = !DILocation(line: 5996, column: 29, scope: !3009)
!3012 = !DILocalVariable(name: "expr", arg: 2, scope: !3009, file: !3, line: 5996, type: !2055)
!3013 = !DILocation(line: 5996, column: 42, scope: !3009)
!3014 = !DILocalVariable(name: "lparams", arg: 3, scope: !3009, file: !3, line: 5997, type: !2296)
!3015 = !DILocation(line: 5997, column: 42, scope: !3009)
!3016 = !DILocalVariable(name: "static_params", arg: 4, scope: !3009, file: !3, line: 5998, type: !819)
!3017 = !DILocation(line: 5998, column: 28, scope: !3009)
!3018 = !DILocalVariable(name: "params", scope: !3009, file: !3, line: 6000, type: !2246)
!3019 = !DILocation(line: 6000, column: 23, scope: !3009)
!3020 = !DILocation(line: 6000, column: 54, scope: !3009)
!3021 = !DILocation(line: 6000, column: 32, scope: !3009)
!3022 = !DILocalVariable(name: "tmp", scope: !3009, file: !3, line: 6001, type: !2073)
!3023 = !DILocation(line: 6001, column: 10, scope: !3009)
!3024 = !DILocation(line: 6003, column: 7, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 6003, column: 7)
!3026 = !DILocation(line: 6003, column: 7, scope: !3009)
!3027 = !DILocation(line: 6004, column: 5, scope: !3025)
!3028 = !DILocation(line: 6004, column: 13, scope: !3025)
!3029 = !DILocation(line: 6004, column: 26, scope: !3025)
!3030 = !DILocation(line: 6006, column: 17, scope: !3009)
!3031 = !DILocation(line: 6006, column: 25, scope: !3009)
!3032 = !DILocation(line: 6006, column: 41, scope: !3009)
!3033 = !DILocation(line: 6006, column: 47, scope: !3009)
!3034 = !DILocation(line: 6006, column: 55, scope: !3009)
!3035 = !DILocation(line: 6006, column: 3, scope: !3009)
!3036 = !DILocation(line: 6013, column: 9, scope: !3009)
!3037 = !DILocation(line: 6013, column: 7, scope: !3009)
!3038 = !DILocation(line: 6014, column: 28, scope: !3009)
!3039 = !DILocation(line: 6014, column: 34, scope: !3009)
!3040 = !DILocation(line: 6014, column: 3, scope: !3009)
!3041 = !DILocation(line: 6015, column: 3, scope: !3009)
!3042 = !DILocation(line: 6016, column: 3, scope: !3009)
!3043 = !DILocation(line: 6017, column: 3, scope: !3009)
!3044 = !DILocation(line: 6018, column: 26, scope: !3009)
!3045 = !DILocation(line: 6018, column: 3, scope: !3009)
!3046 = !DILocation(line: 6033, column: 3, scope: !3009)
!3047 = !DILocation(line: 6035, column: 1, scope: !3009)
!3048 = distinct !DISubprogram(name: "fur_orig_expr_not_found", scope: !3, file: !3, line: 6215, type: !2312, scopeLine: 6216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3049 = !DILocalVariable(name: "insn", arg: 1, scope: !3048, file: !3, line: 6215, type: !2132)
!3050 = !DILocation(line: 6215, column: 33, scope: !3048)
!3051 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !3048, file: !3, line: 6215, type: !2166)
!3052 = !DILocation(line: 6215, column: 48, scope: !3048)
!3053 = !DILocalVariable(name: "static_params", arg: 3, scope: !3048, file: !3, line: 6215, type: !819)
!3054 = !DILocation(line: 6215, column: 64, scope: !3048)
!3055 = !DILocalVariable(name: "mutexed", scope: !3048, file: !3, line: 6217, type: !1057)
!3056 = !DILocation(line: 6217, column: 8, scope: !3048)
!3057 = !DILocalVariable(name: "r", scope: !3048, file: !3, line: 6218, type: !2055)
!3058 = !DILocation(line: 6218, column: 10, scope: !3048)
!3059 = !DILocalVariable(name: "avi", scope: !3048, file: !3, line: 6219, type: !3060)
!3060 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_set_iterator", file: !398, line: 533, baseType: !3061)
!3061 = !DIDerivedType(tag: DW_TAG_typedef, name: "_list_iterator", file: !398, line: 426, baseType: !3062)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 416, size: 128, elements: !3063)
!3063 = !{!3064, !3066, !3067}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "lp", scope: !3062, file: !398, line: 419, baseType: !3065, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "can_remove_p", scope: !3062, file: !398, line: 422, baseType: !1057, size: 8, offset: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "removed_p", scope: !3062, file: !398, line: 425, baseType: !1057, size: 8, offset: 72)
!3068 = !DILocation(line: 6219, column: 19, scope: !3048)
!3069 = !DILocalVariable(name: "sparams", scope: !3048, file: !3, line: 6220, type: !2246)
!3070 = !DILocation(line: 6220, column: 23, scope: !3048)
!3071 = !DILocation(line: 6220, column: 55, scope: !3048)
!3072 = !DILocation(line: 6220, column: 33, scope: !3048)
!3073 = !DILocation(line: 6222, column: 7, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 6222, column: 7)
!3075 = !DILocation(line: 6222, column: 7, scope: !3048)
!3076 = !DILocation(line: 6223, column: 5, scope: !3074)
!3077 = !DILocation(line: 6223, column: 14, scope: !3074)
!3078 = !DILocation(line: 6223, column: 27, scope: !3074)
!3079 = !DILocation(line: 6224, column: 12, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 6224, column: 12)
!3081 = !DILocation(line: 6224, column: 12, scope: !3074)
!3082 = !DILocation(line: 6225, column: 5, scope: !3080)
!3083 = !DILocation(line: 6238, column: 11, scope: !3048)
!3084 = !DILocation(line: 6239, column: 3, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 6239, column: 3)
!3086 = !DILocation(line: 6239, column: 3, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3085, file: !3, line: 6239, column: 3)
!3088 = !DILocation(line: 6240, column: 42, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 6240, column: 9)
!3090 = !DILocation(line: 6240, column: 48, scope: !3089)
!3091 = !DILocation(line: 6240, column: 10, scope: !3089)
!3092 = !DILocation(line: 6240, column: 9, scope: !3087)
!3093 = !DILocation(line: 6242, column: 10, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 6241, column: 7)
!3095 = !DILocation(line: 6243, column: 2, scope: !3094)
!3096 = !DILocation(line: 6240, column: 65, scope: !3089)
!3097 = distinct !{!3097, !3084, !3098}
!3098 = !DILocation(line: 6244, column: 7, scope: !3085)
!3099 = !DILocation(line: 6249, column: 8, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 6249, column: 7)
!3101 = !DILocation(line: 6249, column: 7, scope: !3048)
!3102 = !DILocation(line: 6251, column: 7, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 6250, column: 5)
!3104 = !DILocation(line: 6252, column: 7, scope: !3103)
!3105 = !DILocation(line: 6253, column: 7, scope: !3103)
!3106 = !DILocation(line: 6254, column: 5, scope: !3103)
!3107 = !DILocation(line: 6256, column: 3, scope: !3048)
!3108 = !DILocation(line: 6257, column: 1, scope: !3048)
!3109 = distinct !DISubprogram(name: "fur_merge_succs", scope: !3, file: !3, line: 5758, type: !2316, scopeLine: 5762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3110 = !DILocalVariable(name: "insn", arg: 1, scope: !3109, file: !3, line: 5758, type: !2132)
!3111 = !DILocation(line: 5758, column: 25, scope: !3109)
!3112 = !DILocalVariable(name: "succ", arg: 2, scope: !3109, file: !3, line: 5758, type: !2132)
!3113 = !DILocation(line: 5758, column: 55, scope: !3109)
!3114 = !DILocalVariable(name: "moveop_drv_call_res", arg: 3, scope: !3109, file: !3, line: 5759, type: !849)
!3115 = !DILocation(line: 5759, column: 8, scope: !3109)
!3116 = !DILocalVariable(name: "lparams", arg: 4, scope: !3109, file: !3, line: 5760, type: !2296)
!3117 = !DILocation(line: 5760, column: 24, scope: !3109)
!3118 = !DILocalVariable(name: "static_params", arg: 5, scope: !3109, file: !3, line: 5761, type: !819)
!3119 = !DILocation(line: 5761, column: 10, scope: !3109)
!3120 = !DILocalVariable(name: "succ_live", scope: !3109, file: !3, line: 5763, type: !2073)
!3121 = !DILocation(line: 5763, column: 10, scope: !3109)
!3122 = !DILocalVariable(name: "sparams", scope: !3109, file: !3, line: 5764, type: !2246)
!3123 = !DILocation(line: 5764, column: 23, scope: !3109)
!3124 = !DILocation(line: 5764, column: 55, scope: !3109)
!3125 = !DILocation(line: 5764, column: 33, scope: !3109)
!3126 = !DILocation(line: 5770, column: 7, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 5770, column: 7)
!3128 = !DILocation(line: 5770, column: 27, scope: !3127)
!3129 = !DILocation(line: 5770, column: 7, scope: !3109)
!3130 = !DILocation(line: 5771, column: 5, scope: !3127)
!3131 = !DILocation(line: 5778, column: 29, scope: !3109)
!3132 = !DILocation(line: 5778, column: 15, scope: !3109)
!3133 = !DILocation(line: 5778, column: 13, scope: !3109)
!3134 = !DILocation(line: 5779, column: 3, scope: !3109)
!3135 = !DILocation(line: 5780, column: 1, scope: !3109)
!3136 = distinct !DISubprogram(name: "fur_at_first_insn", scope: !3, file: !3, line: 6123, type: !2328, scopeLine: 6126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3137 = !DILocalVariable(name: "insn", arg: 1, scope: !3136, file: !3, line: 6123, type: !2132)
!3138 = !DILocation(line: 6123, column: 27, scope: !3136)
!3139 = !DILocalVariable(name: "lparams", arg: 2, scope: !3136, file: !3, line: 6124, type: !2296)
!3140 = !DILocation(line: 6124, column: 40, scope: !3136)
!3141 = !DILocalVariable(name: "static_params", arg: 3, scope: !3136, file: !3, line: 6125, type: !819)
!3142 = !DILocation(line: 6125, column: 26, scope: !3136)
!3143 = !DILocation(line: 6127, column: 3, scope: !3136)
!3144 = !DILocation(line: 6129, column: 1, scope: !3136)
!3145 = distinct !DISubprogram(name: "sel_sched_region", scope: !3, file: !3, line: 7541, type: !3146, scopeLine: 7542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{null, !849}
!3148 = !DILocalVariable(name: "rgn", arg: 1, scope: !3145, file: !3, line: 7541, type: !849)
!3149 = !DILocation(line: 7541, column: 23, scope: !3145)
!3150 = !DILocalVariable(name: "schedule_p", scope: !3145, file: !3, line: 7543, type: !1057)
!3151 = !DILocation(line: 7543, column: 8, scope: !3145)
!3152 = !DILocalVariable(name: "reset_sched_cycles_p", scope: !3145, file: !3, line: 7544, type: !1057)
!3153 = !DILocation(line: 7544, column: 8, scope: !3145)
!3154 = !DILocation(line: 7546, column: 24, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 7546, column: 7)
!3156 = !DILocation(line: 7546, column: 7, scope: !3155)
!3157 = !DILocation(line: 7546, column: 7, scope: !3145)
!3158 = !DILocation(line: 7547, column: 5, scope: !3155)
!3159 = !DILocation(line: 7549, column: 7, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 7549, column: 7)
!3161 = !DILocation(line: 7549, column: 21, scope: !3160)
!3162 = !DILocation(line: 7549, column: 7, scope: !3145)
!3163 = !DILocation(line: 7550, column: 5, scope: !3160)
!3164 = !DILocation(line: 7550, column: 5, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 7550, column: 5)
!3166 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 7550, column: 5)
!3167 = !DILocation(line: 7550, column: 5, scope: !3166)
!3168 = !DILocalVariable(name: "__j", scope: !3169, file: !3, line: 7550, type: !849)
!3169 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 7550, column: 5)
!3170 = !DILocation(line: 7550, column: 5, scope: !3169)
!3171 = !DILocalVariable(name: "__s", scope: !3169, file: !3, line: 7550, type: !817)
!3172 = !DILocation(line: 7552, column: 18, scope: !3145)
!3173 = !DILocation(line: 7553, column: 17, scope: !3145)
!3174 = !DILocation(line: 7553, column: 20, scope: !3145)
!3175 = !DILocation(line: 0, scope: !3145)
!3176 = !DILocation(line: 7552, column: 16, scope: !3145)
!3177 = !DILocation(line: 7552, column: 14, scope: !3145)
!3178 = !DILocation(line: 7554, column: 26, scope: !3145)
!3179 = !DILocation(line: 7554, column: 24, scope: !3145)
!3180 = !DILocation(line: 7555, column: 7, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 7555, column: 7)
!3182 = !DILocation(line: 7555, column: 7, scope: !3145)
!3183 = !DILocation(line: 7556, column: 5, scope: !3181)
!3184 = !DILocation(line: 7559, column: 26, scope: !3181)
!3185 = !DILocation(line: 7561, column: 22, scope: !3145)
!3186 = !DILocation(line: 7561, column: 3, scope: !3145)
!3187 = !DILocation(line: 7562, column: 1, scope: !3145)
!3188 = distinct !DISubprogram(name: "sel_region_init", scope: !3, file: !3, line: 6815, type: !3189, scopeLine: 6816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{!1057, !849}
!3191 = !DILocalVariable(name: "rgn", arg: 1, scope: !3188, file: !3, line: 6815, type: !849)
!3192 = !DILocation(line: 6815, column: 22, scope: !3188)
!3193 = !DILocalVariable(name: "i", scope: !3188, file: !3, line: 6817, type: !849)
!3194 = !DILocation(line: 6817, column: 7, scope: !3188)
!3195 = !DILocalVariable(name: "bbs", scope: !3188, file: !3, line: 6818, type: !3196)
!3196 = !DIDerivedType(tag: DW_TAG_typedef, name: "bb_vec_t", file: !403, line: 40, baseType: !2260)
!3197 = !DILocation(line: 6818, column: 12, scope: !3188)
!3198 = !DILocation(line: 6820, column: 21, scope: !3188)
!3199 = !DILocation(line: 6820, column: 3, scope: !3188)
!3200 = !DILocation(line: 6825, column: 7, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 6825, column: 7)
!3202 = !DILocation(line: 6825, column: 7, scope: !3188)
!3203 = !DILocation(line: 6826, column: 5, scope: !3201)
!3204 = !DILocation(line: 6828, column: 7, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 6828, column: 7)
!3206 = !DILocation(line: 6828, column: 7, scope: !3188)
!3207 = !DILocation(line: 6829, column: 30, scope: !3205)
!3208 = !DILocation(line: 6829, column: 5, scope: !3205)
!3209 = !DILocation(line: 6831, column: 3, scope: !3188)
!3210 = !DILocation(line: 6833, column: 9, scope: !3188)
!3211 = !DILocation(line: 6833, column: 7, scope: !3188)
!3212 = !DILocation(line: 6835, column: 10, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 6835, column: 3)
!3214 = !DILocation(line: 6835, column: 8, scope: !3213)
!3215 = !DILocation(line: 6835, column: 15, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3213, file: !3, line: 6835, column: 3)
!3217 = !DILocation(line: 6835, column: 19, scope: !3216)
!3218 = !DILocation(line: 6835, column: 17, scope: !3216)
!3219 = !DILocation(line: 6835, column: 3, scope: !3213)
!3220 = !DILocation(line: 6836, column: 5, scope: !3216)
!3221 = !DILocation(line: 6835, column: 39, scope: !3216)
!3222 = !DILocation(line: 6835, column: 3, scope: !3216)
!3223 = distinct !{!3223, !3219, !3224}
!3224 = !DILocation(line: 6836, column: 5, scope: !3213)
!3225 = !DILocation(line: 6838, column: 17, scope: !3188)
!3226 = !DILocation(line: 6838, column: 3, scope: !3188)
!3227 = !DILocation(line: 6842, column: 21, scope: !3188)
!3228 = !DILocation(line: 6842, column: 3, scope: !3188)
!3229 = !DILocation(line: 6843, column: 3, scope: !3188)
!3230 = !DILocation(line: 6846, column: 3, scope: !3188)
!3231 = !DILocation(line: 6847, column: 3, scope: !3188)
!3232 = !DILocation(line: 6848, column: 21, scope: !3188)
!3233 = !DILocation(line: 6848, column: 3, scope: !3188)
!3234 = !DILocation(line: 6850, column: 27, scope: !3188)
!3235 = !DILocation(line: 6850, column: 3, scope: !3188)
!3236 = !DILocation(line: 6851, column: 3, scope: !3188)
!3237 = !DILocation(line: 6854, column: 3, scope: !3188)
!3238 = !DILocation(line: 6855, column: 29, scope: !3188)
!3239 = !DILocation(line: 6855, column: 3, scope: !3188)
!3240 = !DILocation(line: 6857, column: 3, scope: !3188)
!3241 = !DILocation(line: 6859, column: 26, scope: !3188)
!3242 = !DILocation(line: 6859, column: 24, scope: !3188)
!3243 = !DILocation(line: 6864, column: 7, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 6864, column: 7)
!3245 = !DILocation(line: 6864, column: 7, scope: !3188)
!3246 = !DILocalVariable(name: "header", scope: !3247, file: !3, line: 6866, type: !849)
!3247 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 6865, column: 5)
!3248 = !DILocation(line: 6866, column: 11, scope: !3247)
!3249 = !DILocation(line: 6866, column: 46, scope: !3247)
!3250 = !DILocation(line: 6866, column: 21, scope: !3247)
!3251 = !DILocation(line: 6870, column: 11, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 6870, column: 11)
!3253 = !DILocation(line: 6870, column: 32, scope: !3252)
!3254 = !DILocation(line: 6870, column: 39, scope: !3252)
!3255 = !DILocation(line: 6870, column: 29, scope: !3252)
!3256 = !DILocation(line: 6870, column: 11, scope: !3247)
!3257 = !DILocation(line: 6872, column: 25, scope: !3252)
!3258 = !DILocation(line: 6872, column: 12, scope: !3252)
!3259 = !DILocation(line: 6871, column: 9, scope: !3252)
!3260 = !DILocation(line: 6873, column: 5, scope: !3247)
!3261 = !DILocation(line: 6876, column: 3, scope: !3188)
!3262 = !DILocation(line: 6880, column: 21, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 6880, column: 7)
!3264 = !DILocation(line: 6880, column: 7, scope: !3263)
!3265 = !DILocation(line: 6880, column: 7, scope: !3188)
!3266 = !DILocation(line: 6882, column: 19, scope: !3263)
!3267 = !DILocation(line: 6882, column: 28, scope: !3263)
!3268 = !DILocation(line: 6882, column: 40, scope: !3263)
!3269 = !DILocation(line: 6882, column: 5, scope: !3263)
!3270 = !DILocation(line: 6884, column: 23, scope: !3188)
!3271 = !DILocation(line: 6884, column: 38, scope: !3188)
!3272 = !DILocation(line: 6884, column: 21, scope: !3188)
!3273 = !DILocation(line: 6885, column: 21, scope: !3188)
!3274 = !DILocation(line: 6888, column: 3, scope: !3188)
!3275 = !DILocation(line: 6889, column: 24, scope: !3188)
!3276 = !DILocation(line: 6891, column: 3, scope: !3188)
!3277 = !DILocation(line: 6892, column: 17, scope: !3188)
!3278 = !DILocation(line: 6892, column: 3, scope: !3188)
!3279 = !DILocation(line: 6894, column: 3, scope: !3188)
!3280 = !DILocation(line: 6895, column: 20, scope: !3188)
!3281 = !DILocation(line: 6895, column: 18, scope: !3188)
!3282 = !DILocation(line: 6896, column: 25, scope: !3188)
!3283 = !DILocation(line: 6896, column: 23, scope: !3188)
!3284 = !DILocation(line: 6897, column: 32, scope: !3188)
!3285 = !DILocation(line: 6897, column: 30, scope: !3188)
!3286 = !DILocation(line: 6899, column: 3, scope: !3188)
!3287 = !DILocation(line: 6900, column: 1, scope: !3188)
!3288 = distinct !DISubprogram(name: "sel_sched_region_1", scope: !3, file: !3, line: 7431, type: !3289, scopeLine: 7432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{null}
!3291 = !DILocalVariable(name: "number_of_insns", scope: !3288, file: !3, line: 7433, type: !849)
!3292 = !DILocation(line: 7433, column: 7, scope: !3288)
!3293 = !DILocalVariable(name: "orig_max_seqno", scope: !3288, file: !3, line: 7434, type: !849)
!3294 = !DILocation(line: 7434, column: 7, scope: !3288)
!3295 = !DILocation(line: 7440, column: 21, scope: !3288)
!3296 = !DILocation(line: 7440, column: 36, scope: !3288)
!3297 = !DILocation(line: 7440, column: 19, scope: !3288)
!3298 = !DILocation(line: 7441, column: 3, scope: !3288)
!3299 = !DILocation(line: 7443, column: 32, scope: !3288)
!3300 = !DILocation(line: 7443, column: 20, scope: !3288)
!3301 = !DILocation(line: 7443, column: 18, scope: !3288)
!3302 = !DILocation(line: 7444, column: 3, scope: !3288)
!3303 = !DILocation(line: 7448, column: 10, scope: !3288)
!3304 = !DILocation(line: 7449, column: 7, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 7449, column: 7)
!3306 = !DILocation(line: 7449, column: 7, scope: !3288)
!3307 = !DILocation(line: 7450, column: 18, scope: !3305)
!3308 = !DILocation(line: 7450, column: 5, scope: !3305)
!3309 = !DILocation(line: 7452, column: 27, scope: !3305)
!3310 = !DILocation(line: 7452, column: 18, scope: !3305)
!3311 = !DILocation(line: 7452, column: 5, scope: !3305)
!3312 = !DILocation(line: 7453, column: 16, scope: !3288)
!3313 = !DILocation(line: 7455, column: 23, scope: !3288)
!3314 = !DILocation(line: 7455, column: 3, scope: !3288)
!3315 = !DILocation(line: 7457, column: 3, scope: !3288)
!3316 = !DILocation(line: 7459, column: 7, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 7459, column: 7)
!3318 = !DILocation(line: 7459, column: 7, scope: !3288)
!3319 = !DILocalVariable(name: "i", scope: !3320, file: !3, line: 7461, type: !849)
!3320 = distinct !DILexicalBlock(scope: !3317, file: !3, line: 7460, column: 5)
!3321 = !DILocation(line: 7461, column: 11, scope: !3320)
!3322 = !DILocalVariable(name: "bb", scope: !3320, file: !3, line: 7462, type: !1362)
!3323 = !DILocation(line: 7462, column: 19, scope: !3320)
!3324 = !DILocalVariable(name: "_new_fences", scope: !3320, file: !3, line: 7463, type: !3325)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flist_tail_def", file: !398, line: 343, size: 128, elements: !3326)
!3326 = !{!3327, !3328}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3325, file: !398, line: 345, baseType: !2349, size: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "tailp", scope: !3325, file: !398, line: 346, baseType: !3329, size: 64, offset: 64)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!3330 = !DILocation(line: 7463, column: 29, scope: !3320)
!3331 = !DILocalVariable(name: "new_fences", scope: !3320, file: !3, line: 7464, type: !3332)
!3332 = !DIDerivedType(tag: DW_TAG_typedef, name: "flist_tail_t", file: !398, line: 349, baseType: !3333)
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3334 = !DILocation(line: 7464, column: 20, scope: !3320)
!3335 = !DILocalVariable(name: "do_p", scope: !3320, file: !3, line: 7465, type: !1057)
!3336 = !DILocation(line: 7465, column: 12, scope: !3320)
!3337 = !DILocation(line: 7467, column: 20, scope: !3320)
!3338 = !DILocation(line: 7468, column: 16, scope: !3320)
!3339 = !DILocation(line: 7468, column: 14, scope: !3320)
!3340 = !DILocation(line: 7469, column: 21, scope: !3320)
!3341 = !DILocation(line: 7470, column: 32, scope: !3320)
!3342 = !DILocation(line: 7473, column: 12, scope: !3320)
!3343 = !DILocation(line: 7475, column: 7, scope: !3320)
!3344 = !DILocation(line: 7475, column: 14, scope: !3320)
!3345 = !DILocation(line: 7477, column: 16, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 7476, column: 9)
!3347 = !DILocation(line: 7479, column: 18, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 7479, column: 11)
!3349 = !DILocation(line: 7479, column: 16, scope: !3348)
!3350 = !DILocation(line: 7479, column: 23, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 7479, column: 11)
!3352 = !DILocation(line: 7479, column: 27, scope: !3351)
!3353 = !DILocation(line: 7479, column: 25, scope: !3351)
!3354 = !DILocation(line: 7479, column: 11, scope: !3348)
!3355 = !DILocalVariable(name: "bb", scope: !3356, file: !3, line: 7481, type: !1362)
!3356 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 7480, column: 13)
!3357 = !DILocation(line: 7481, column: 27, scope: !3356)
!3358 = !DILocation(line: 7481, column: 32, scope: !3356)
!3359 = !DILocation(line: 7483, column: 35, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3356, file: !3, line: 7483, column: 19)
!3361 = !DILocation(line: 7483, column: 19, scope: !3360)
!3362 = !DILocation(line: 7483, column: 19, scope: !3356)
!3363 = !DILocation(line: 7485, column: 37, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 7484, column: 17)
!3365 = !DILocation(line: 7485, column: 59, scope: !3364)
!3366 = !DILocation(line: 7485, column: 63, scope: !3364)
!3367 = !DILocation(line: 7485, column: 19, scope: !3364)
!3368 = !DILocation(line: 7486, column: 19, scope: !3364)
!3369 = !DILocation(line: 7489, column: 33, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3356, file: !3, line: 7489, column: 19)
!3371 = !DILocation(line: 7489, column: 55, scope: !3370)
!3372 = !DILocation(line: 7489, column: 59, scope: !3370)
!3373 = !DILocation(line: 7489, column: 19, scope: !3370)
!3374 = !DILocation(line: 7489, column: 19, scope: !3356)
!3375 = !DILocation(line: 7491, column: 44, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 7490, column: 17)
!3377 = !DILocation(line: 7491, column: 19, scope: !3376)
!3378 = !DILocation(line: 7492, column: 54, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 7492, column: 23)
!3380 = !DILocation(line: 7492, column: 23, scope: !3379)
!3381 = !DILocation(line: 7493, column: 23, scope: !3379)
!3382 = !DILocation(line: 7493, column: 26, scope: !3379)
!3383 = !DILocation(line: 7492, column: 23, scope: !3376)
!3384 = !DILocation(line: 7494, column: 37, scope: !3379)
!3385 = !DILocation(line: 7495, column: 37, scope: !3379)
!3386 = !DILocation(line: 7495, column: 55, scope: !3379)
!3387 = !DILocation(line: 7495, column: 61, scope: !3379)
!3388 = !DILocation(line: 7494, column: 21, scope: !3379)
!3389 = !DILocation(line: 7496, column: 17, scope: !3376)
!3390 = !DILocation(line: 7497, column: 24, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 7497, column: 24)
!3392 = !DILocation(line: 7497, column: 60, scope: !3391)
!3393 = !DILocation(line: 7497, column: 24, scope: !3370)
!3394 = !DILocation(line: 7498, column: 33, scope: !3391)
!3395 = !DILocation(line: 7498, column: 55, scope: !3391)
!3396 = !DILocation(line: 7498, column: 59, scope: !3391)
!3397 = !DILocation(line: 7498, column: 17, scope: !3391)
!3398 = !DILocation(line: 7499, column: 13, scope: !3356)
!3399 = !DILocation(line: 7479, column: 47, scope: !3351)
!3400 = !DILocation(line: 7479, column: 11, scope: !3351)
!3401 = distinct !{!3401, !3354, !3402}
!3402 = !DILocation(line: 7499, column: 13, scope: !3348)
!3403 = !DILocation(line: 7501, column: 18, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 7501, column: 11)
!3405 = !DILocation(line: 7501, column: 16, scope: !3404)
!3406 = !DILocation(line: 7501, column: 23, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 7501, column: 11)
!3408 = !DILocation(line: 7501, column: 27, scope: !3407)
!3409 = !DILocation(line: 7501, column: 25, scope: !3407)
!3410 = !DILocation(line: 7501, column: 11, scope: !3404)
!3411 = !DILocation(line: 7503, column: 20, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 7502, column: 13)
!3413 = !DILocation(line: 7503, column: 18, scope: !3412)
!3414 = !DILocation(line: 7508, column: 44, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 7508, column: 19)
!3416 = !DILocation(line: 7508, column: 19, scope: !3415)
!3417 = !DILocation(line: 7508, column: 19, scope: !3412)
!3418 = !DILocation(line: 7510, column: 44, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 7509, column: 17)
!3420 = !DILocation(line: 7510, column: 19, scope: !3419)
!3421 = !DILocation(line: 7511, column: 19, scope: !3419)
!3422 = !DILocation(line: 7514, column: 33, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 7514, column: 19)
!3424 = !DILocation(line: 7514, column: 55, scope: !3423)
!3425 = !DILocation(line: 7514, column: 59, scope: !3423)
!3426 = !DILocation(line: 7514, column: 19, scope: !3423)
!3427 = !DILocation(line: 7514, column: 19, scope: !3412)
!3428 = !DILocation(line: 7516, column: 36, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 7515, column: 17)
!3430 = !DILocation(line: 7516, column: 19, scope: !3429)
!3431 = !DILocation(line: 7518, column: 51, scope: !3429)
!3432 = !DILocation(line: 7518, column: 73, scope: !3429)
!3433 = !DILocation(line: 7518, column: 36, scope: !3429)
!3434 = !DILocation(line: 7518, column: 34, scope: !3429)
!3435 = !DILocation(line: 7521, column: 35, scope: !3429)
!3436 = !DILocation(line: 7521, column: 53, scope: !3429)
!3437 = !DILocation(line: 7521, column: 57, scope: !3429)
!3438 = !DILocation(line: 7521, column: 19, scope: !3429)
!3439 = !DILocation(line: 7523, column: 37, scope: !3429)
!3440 = !DILocation(line: 7523, column: 59, scope: !3429)
!3441 = !DILocation(line: 7523, column: 63, scope: !3429)
!3442 = !DILocation(line: 7523, column: 19, scope: !3429)
!3443 = !DILocation(line: 7525, column: 19, scope: !3429)
!3444 = !DILocation(line: 7527, column: 41, scope: !3429)
!3445 = !DILocation(line: 7527, column: 32, scope: !3429)
!3446 = !DILocation(line: 7527, column: 19, scope: !3429)
!3447 = !DILocation(line: 7529, column: 39, scope: !3429)
!3448 = !DILocation(line: 7529, column: 19, scope: !3429)
!3449 = !DILocation(line: 7531, column: 24, scope: !3429)
!3450 = !DILocation(line: 7532, column: 19, scope: !3429)
!3451 = !DILocation(line: 7534, column: 13, scope: !3412)
!3452 = !DILocation(line: 7501, column: 47, scope: !3407)
!3453 = !DILocation(line: 7501, column: 11, scope: !3407)
!3454 = distinct !{!3454, !3410, !3455}
!3455 = !DILocation(line: 7534, column: 13, scope: !3404)
!3456 = distinct !{!3456, !3343, !3457}
!3457 = !DILocation(line: 7535, column: 9, scope: !3320)
!3458 = !DILocation(line: 7536, column: 5, scope: !3320)
!3459 = !DILocation(line: 7537, column: 1, scope: !3288)
!3460 = distinct !DISubprogram(name: "sel_region_finish", scope: !3, file: !3, line: 7168, type: !3461, scopeLine: 7169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{null, !1057}
!3463 = !DILocalVariable(name: "reset_sched_cycles_p", arg: 1, scope: !3460, file: !3, line: 7168, type: !1057)
!3464 = !DILocation(line: 7168, column: 25, scope: !3460)
!3465 = !DILocation(line: 7170, column: 3, scope: !3460)
!3466 = !DILocation(line: 7171, column: 3, scope: !3460)
!3467 = !DILocation(line: 7172, column: 3, scope: !3460)
!3468 = !DILocation(line: 7175, column: 7, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 7175, column: 7)
!3470 = !DILocation(line: 7175, column: 7, scope: !3460)
!3471 = !DILocation(line: 7176, column: 5, scope: !3469)
!3472 = !DILocation(line: 7177, column: 3, scope: !3460)
!3473 = !DILocation(line: 7178, column: 3, scope: !3460)
!3474 = !DILocation(line: 7179, column: 3, scope: !3460)
!3475 = !DILocation(line: 7180, column: 3, scope: !3460)
!3476 = !DILocation(line: 7181, column: 3, scope: !3460)
!3477 = !DILocalVariable(name: "si", scope: !3478, file: !3, line: 7186, type: !3479)
!3478 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 7185, column: 3)
!3479 = !DIDerivedType(tag: DW_TAG_typedef, name: "succ_iterator", file: !398, line: 995, baseType: !3480)
!3480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 967, size: 512, elements: !3481)
!3481 = !{!3482, !3483, !3484, !3485, !3486, !3487, !3489, !3490, !3491}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "bb_end", scope: !3480, file: !398, line: 970, baseType: !1057, size: 8)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "e1", scope: !3480, file: !398, line: 973, baseType: !1379, size: 64, offset: 64)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "e2", scope: !3480, file: !398, line: 976, baseType: !1379, size: 64, offset: 128)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "ei", scope: !3480, file: !398, line: 979, baseType: !2654, size: 128, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3480, file: !398, line: 982, baseType: !1362, size: 64, offset: 320)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3480, file: !398, line: 986, baseType: !3488, size: 16, offset: 384)
!3488 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "current_flags", scope: !3480, file: !398, line: 990, baseType: !3488, size: 16, offset: 400)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "current_exit", scope: !3480, file: !398, line: 993, baseType: !849, size: 32, offset: 416)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "loop_exits", scope: !3480, file: !398, line: 994, baseType: !2255, size: 64, offset: 448)
!3492 = !DILocation(line: 7186, column: 19, scope: !3478)
!3493 = !DILocalVariable(name: "insn", scope: !3478, file: !3, line: 7187, type: !2132)
!3494 = !DILocation(line: 7187, column: 12, scope: !3478)
!3495 = !DILocation(line: 7189, column: 5, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 7189, column: 5)
!3497 = !DILocation(line: 7189, column: 5, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 7189, column: 5)
!3499 = !DILocalVariable(name: "bb", scope: !3500, file: !3, line: 7192, type: !1362)
!3500 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 7191, column: 7)
!3501 = !DILocation(line: 7192, column: 14, scope: !3500)
!3502 = !DILocation(line: 7192, column: 19, scope: !3500)
!3503 = !DILocation(line: 7194, column: 7, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3500, file: !3, line: 7194, column: 6)
!3505 = !DILocation(line: 7194, column: 6, scope: !3500)
!3506 = !DILocation(line: 7195, column: 18, scope: !3504)
!3507 = !DILocation(line: 7195, column: 4, scope: !3504)
!3508 = !DILocation(line: 7196, column: 7, scope: !3500)
!3509 = distinct !{!3509, !3495, !3510}
!3510 = !DILocation(line: 7196, column: 7, scope: !3496)
!3511 = !DILocation(line: 7200, column: 7, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 7200, column: 7)
!3513 = !DILocation(line: 7200, column: 7, scope: !3460)
!3514 = !DILocation(line: 7201, column: 31, scope: !3512)
!3515 = !DILocation(line: 7201, column: 5, scope: !3512)
!3516 = !DILocation(line: 7203, column: 3, scope: !3460)
!3517 = !DILocation(line: 7205, column: 17, scope: !3460)
!3518 = !DILocation(line: 7205, column: 3, scope: !3460)
!3519 = !DILocation(line: 7207, column: 3, scope: !3460)
!3520 = !DILocation(line: 7209, column: 3, scope: !3460)
!3521 = !DILocation(line: 7210, column: 3, scope: !3460)
!3522 = !DILocation(line: 7212, column: 3, scope: !3460)
!3523 = !DILocation(line: 7213, column: 3, scope: !3460)
!3524 = !DILocation(line: 7215, column: 3, scope: !3460)
!3525 = !DILocation(line: 7217, column: 18, scope: !3460)
!3526 = !DILocation(line: 7218, column: 1, scope: !3460)
!3527 = distinct !DISubprogram(name: "maybe_skip_selective_scheduling", scope: !3, file: !3, line: 7615, type: !3528, scopeLine: 7616, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{!1057}
!3530 = !DILocation(line: 7617, column: 12, scope: !3527)
!3531 = !DILocation(line: 7617, column: 10, scope: !3527)
!3532 = !DILocation(line: 7617, column: 3, scope: !3527)
!3533 = distinct !DISubprogram(name: "run_selective_scheduling", scope: !3, file: !3, line: 7622, type: !3289, scopeLine: 7623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3534 = !DILocalVariable(name: "rgn", scope: !3533, file: !3, line: 7624, type: !849)
!3535 = !DILocation(line: 7624, column: 7, scope: !3533)
!3536 = !DILocation(line: 7626, column: 7, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 7626, column: 7)
!3538 = !DILocation(line: 7626, column: 22, scope: !3537)
!3539 = !DILocation(line: 7626, column: 7, scope: !3533)
!3540 = !DILocation(line: 7627, column: 5, scope: !3537)
!3541 = !DILocation(line: 7629, column: 3, scope: !3533)
!3542 = !DILocation(line: 7631, column: 12, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 7631, column: 3)
!3544 = !DILocation(line: 7631, column: 8, scope: !3543)
!3545 = !DILocation(line: 7631, column: 17, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3543, file: !3, line: 7631, column: 3)
!3547 = !DILocation(line: 7631, column: 23, scope: !3546)
!3548 = !DILocation(line: 7631, column: 21, scope: !3546)
!3549 = !DILocation(line: 7631, column: 3, scope: !3543)
!3550 = !DILocation(line: 7632, column: 23, scope: !3546)
!3551 = !DILocation(line: 7632, column: 5, scope: !3546)
!3552 = !DILocation(line: 7631, column: 38, scope: !3546)
!3553 = !DILocation(line: 7631, column: 3, scope: !3546)
!3554 = distinct !{!3554, !3549, !3555}
!3555 = !DILocation(line: 7632, column: 26, scope: !3543)
!3556 = !DILocation(line: 7634, column: 3, scope: !3533)
!3557 = !DILocation(line: 7635, column: 1, scope: !3533)
!3558 = distinct !DISubprogram(name: "sel_global_init", scope: !3, file: !3, line: 7566, type: !3289, scopeLine: 7567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3559 = !DILocation(line: 7568, column: 3, scope: !3558)
!3560 = !DILocation(line: 7569, column: 3, scope: !3558)
!3561 = !DILocation(line: 7572, column: 3, scope: !3558)
!3562 = !DILocation(line: 7573, column: 3, scope: !3558)
!3563 = !DILocation(line: 7575, column: 3, scope: !3558)
!3564 = !DILocation(line: 7576, column: 3, scope: !3558)
!3565 = !DILocation(line: 7578, column: 3, scope: !3558)
!3566 = !DILocation(line: 7580, column: 18, scope: !3558)
!3567 = !DILocation(line: 7581, column: 20, scope: !3558)
!3568 = !DILocation(line: 7581, column: 18, scope: !3558)
!3569 = !DILocation(line: 7583, column: 3, scope: !3558)
!3570 = !DILocation(line: 7584, column: 3, scope: !3558)
!3571 = !DILocation(line: 7585, column: 3, scope: !3558)
!3572 = !DILocation(line: 7586, column: 3, scope: !3558)
!3573 = !DILocation(line: 7587, column: 3, scope: !3558)
!3574 = !DILocation(line: 7588, column: 3, scope: !3558)
!3575 = !DILocation(line: 7589, column: 1, scope: !3558)
!3576 = distinct !DISubprogram(name: "sel_global_finish", scope: !3, file: !3, line: 7593, type: !3289, scopeLine: 7594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3577 = !DILocation(line: 7595, column: 3, scope: !3576)
!3578 = !DILocation(line: 7596, column: 3, scope: !3576)
!3579 = !DILocation(line: 7597, column: 3, scope: !3576)
!3580 = !DILocation(line: 7599, column: 3, scope: !3576)
!3581 = !DILocation(line: 7600, column: 3, scope: !3576)
!3582 = !DILocation(line: 7602, column: 3, scope: !3576)
!3583 = !DILocation(line: 7603, column: 3, scope: !3576)
!3584 = !DILocation(line: 7604, column: 3, scope: !3576)
!3585 = !DILocation(line: 7606, column: 7, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3576, file: !3, line: 7606, column: 7)
!3587 = !DILocation(line: 7606, column: 7, scope: !3576)
!3588 = !DILocation(line: 7607, column: 5, scope: !3586)
!3589 = !DILocation(line: 7609, column: 3, scope: !3576)
!3590 = !DILocation(line: 7610, column: 3, scope: !3576)
!3591 = !DILocation(line: 7611, column: 1, scope: !3576)
!3592 = distinct !DISubprogram(name: "ei_start_1", scope: !155, file: !155, line: 696, type: !3593, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3593 = !DISubroutineType(types: !3594)
!3594 = !{!2654, !2659}
!3595 = !DILocalVariable(name: "ev", arg: 1, scope: !3592, file: !155, line: 696, type: !2659)
!3596 = !DILocation(line: 696, column: 28, scope: !3592)
!3597 = !DILocalVariable(name: "i", scope: !3592, file: !155, line: 698, type: !2654)
!3598 = !DILocation(line: 698, column: 17, scope: !3592)
!3599 = !DILocation(line: 700, column: 5, scope: !3592)
!3600 = !DILocation(line: 700, column: 11, scope: !3592)
!3601 = !DILocation(line: 701, column: 17, scope: !3592)
!3602 = !DILocation(line: 701, column: 5, scope: !3592)
!3603 = !DILocation(line: 701, column: 15, scope: !3592)
!3604 = !DILocation(line: 703, column: 3, scope: !3592)
!3605 = distinct !DISubprogram(name: "ei_cond", scope: !155, file: !155, line: 771, type: !3606, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!1057, !2654, !3608}
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!3609 = !DILocalVariable(name: "ei", arg: 1, scope: !3605, file: !155, line: 771, type: !2654)
!3610 = !DILocation(line: 771, column: 24, scope: !3605)
!3611 = !DILocalVariable(name: "p", arg: 2, scope: !3605, file: !155, line: 771, type: !3608)
!3612 = !DILocation(line: 771, column: 34, scope: !3605)
!3613 = !DILocation(line: 773, column: 8, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3605, file: !155, line: 773, column: 7)
!3615 = !DILocation(line: 773, column: 7, scope: !3605)
!3616 = !DILocation(line: 775, column: 12, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3614, file: !155, line: 774, column: 5)
!3618 = !DILocation(line: 775, column: 8, scope: !3617)
!3619 = !DILocation(line: 775, column: 10, scope: !3617)
!3620 = !DILocation(line: 776, column: 7, scope: !3617)
!3621 = !DILocation(line: 780, column: 8, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3614, file: !155, line: 779, column: 5)
!3623 = !DILocation(line: 780, column: 10, scope: !3622)
!3624 = !DILocation(line: 781, column: 7, scope: !3622)
!3625 = !DILocation(line: 783, column: 1, scope: !3605)
!3626 = distinct !DISubprogram(name: "ei_next", scope: !155, file: !155, line: 736, type: !3627, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3627 = !DISubroutineType(types: !3628)
!3628 = !{null, !3629}
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!3630 = !DILocalVariable(name: "i", arg: 1, scope: !3626, file: !155, line: 736, type: !3629)
!3631 = !DILocation(line: 736, column: 25, scope: !3626)
!3632 = !DILocation(line: 738, column: 3, scope: !3626)
!3633 = !DILocation(line: 739, column: 3, scope: !3626)
!3634 = !DILocation(line: 739, column: 6, scope: !3626)
!3635 = !DILocation(line: 739, column: 11, scope: !3626)
!3636 = !DILocation(line: 740, column: 1, scope: !3626)
!3637 = distinct !DISubprogram(name: "ei_end_p", scope: !155, file: !155, line: 721, type: !3638, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!1057, !2654}
!3640 = !DILocalVariable(name: "i", arg: 1, scope: !3637, file: !155, line: 721, type: !2654)
!3641 = !DILocation(line: 721, column: 25, scope: !3637)
!3642 = !DILocation(line: 723, column: 13, scope: !3637)
!3643 = !DILocation(line: 723, column: 22, scope: !3637)
!3644 = !DILocation(line: 723, column: 19, scope: !3637)
!3645 = !DILocation(line: 723, column: 10, scope: !3637)
!3646 = !DILocation(line: 723, column: 3, scope: !3637)
!3647 = distinct !DISubprogram(name: "ei_edge", scope: !155, file: !155, line: 752, type: !3648, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!1379, !2654}
!3650 = !DILocalVariable(name: "i", arg: 1, scope: !3647, file: !155, line: 752, type: !2654)
!3651 = !DILocation(line: 752, column: 24, scope: !3647)
!3652 = !DILocation(line: 754, column: 10, scope: !3647)
!3653 = !DILocation(line: 754, column: 3, scope: !3647)
!3654 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !155, file: !155, line: 150, type: !3655, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{!7, !3657}
!3657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!3659 = !DILocalVariable(name: "vec_", arg: 1, scope: !3654, file: !155, line: 150, type: !3657)
!3660 = !DILocation(line: 150, column: 1, scope: !3654)
!3661 = distinct !DISubprogram(name: "ei_container", scope: !155, file: !155, line: 685, type: !3662, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3662 = !DISubroutineType(types: !3663)
!3663 = !{!1367, !2654}
!3664 = !DILocalVariable(name: "i", arg: 1, scope: !3661, file: !155, line: 685, type: !2654)
!3665 = !DILocation(line: 685, column: 29, scope: !3661)
!3666 = !DILocation(line: 687, column: 3, scope: !3661)
!3667 = !DILocation(line: 688, column: 13, scope: !3661)
!3668 = !DILocation(line: 688, column: 10, scope: !3661)
!3669 = !DILocation(line: 688, column: 3, scope: !3661)
!3670 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !155, file: !155, line: 150, type: !3671, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!1379, !3657, !7}
!3673 = !DILocalVariable(name: "vec_", arg: 1, scope: !3670, file: !155, line: 150, type: !3657)
!3674 = !DILocation(line: 150, column: 1, scope: !3670)
!3675 = !DILocalVariable(name: "ix_", arg: 2, scope: !3670, file: !155, line: 150, type: !7)
!3676 = !DILocation(line: 0, scope: !3670)
!3677 = distinct !DISubprogram(name: "track_scheduled_insns_and_blocks", scope: !3, file: !3, line: 5795, type: !3678, scopeLine: 5796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{null, !825}
!3680 = !DILocalVariable(name: "insn", arg: 1, scope: !3677, file: !3, line: 5795, type: !825)
!3681 = !DILocation(line: 5795, column: 39, scope: !3677)
!3682 = !DILocation(line: 5799, column: 19, scope: !3677)
!3683 = !DILocation(line: 5799, column: 40, scope: !3677)
!3684 = !DILocation(line: 5799, column: 3, scope: !3677)
!3685 = !DILocation(line: 5801, column: 22, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 5801, column: 7)
!3687 = !DILocation(line: 5801, column: 38, scope: !3686)
!3688 = !DILocation(line: 5801, column: 8, scope: !3686)
!3689 = !DILocation(line: 5801, column: 7, scope: !3677)
!3690 = !DILocation(line: 5805, column: 11, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 5805, column: 11)
!3692 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 5802, column: 5)
!3693 = !DILocation(line: 5805, column: 35, scope: !3691)
!3694 = !DILocation(line: 5805, column: 11, scope: !3692)
!3695 = !DILocation(line: 5806, column: 18, scope: !3691)
!3696 = !DILocation(line: 5806, column: 40, scope: !3691)
!3697 = !DILocation(line: 5806, column: 63, scope: !3691)
!3698 = !DILocation(line: 5806, column: 2, scope: !3691)
!3699 = !DILocation(line: 5807, column: 16, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 5807, column: 16)
!3701 = !DILocation(line: 5807, column: 34, scope: !3700)
!3702 = !DILocation(line: 5807, column: 32, scope: !3700)
!3703 = !DILocation(line: 5807, column: 52, scope: !3700)
!3704 = !DILocation(line: 5807, column: 56, scope: !3700)
!3705 = !DILocation(line: 5807, column: 16, scope: !3691)
!3706 = !DILocation(line: 5808, column: 21, scope: !3700)
!3707 = !DILocation(line: 5808, column: 2, scope: !3700)
!3708 = !DILocation(line: 5809, column: 5, scope: !3692)
!3709 = !DILocation(line: 5811, column: 23, scope: !3686)
!3710 = !DILocation(line: 5811, column: 39, scope: !3686)
!3711 = !DILocation(line: 5811, column: 5, scope: !3686)
!3712 = !DILocation(line: 5817, column: 7, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 5817, column: 7)
!3714 = !DILocation(line: 5817, column: 25, scope: !3713)
!3715 = !DILocation(line: 5817, column: 23, scope: !3713)
!3716 = !DILocation(line: 5817, column: 7, scope: !3677)
!3717 = !DILocation(line: 5818, column: 28, scope: !3713)
!3718 = !DILocation(line: 5818, column: 5, scope: !3713)
!3719 = !DILocation(line: 5819, column: 1, scope: !3677)
!3720 = distinct !DISubprogram(name: "handle_emitting_transformations", scope: !3, file: !3, line: 5893, type: !3721, scopeLine: 5895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3721 = !DISubroutineType(types: !3722)
!3722 = !{!1057, !825, !2055, !820}
!3723 = !DILocalVariable(name: "insn", arg: 1, scope: !3720, file: !3, line: 5893, type: !825)
!3724 = !DILocation(line: 5893, column: 38, scope: !3720)
!3725 = !DILocalVariable(name: "expr", arg: 2, scope: !3720, file: !3, line: 5893, type: !2055)
!3726 = !DILocation(line: 5893, column: 51, scope: !3720)
!3727 = !DILocalVariable(name: "params", arg: 3, scope: !3720, file: !3, line: 5894, type: !820)
!3728 = !DILocation(line: 5894, column: 57, scope: !3720)
!3729 = !DILocalVariable(name: "insn_emitted", scope: !3720, file: !3, line: 5896, type: !1057)
!3730 = !DILocation(line: 5896, column: 8, scope: !3720)
!3731 = !DILocation(line: 5898, column: 44, scope: !3720)
!3732 = !DILocation(line: 5898, column: 50, scope: !3720)
!3733 = !DILocation(line: 5898, column: 18, scope: !3720)
!3734 = !DILocation(line: 5898, column: 16, scope: !3720)
!3735 = !DILocation(line: 5899, column: 49, scope: !3720)
!3736 = !DILocation(line: 5899, column: 55, scope: !3720)
!3737 = !DILocation(line: 5899, column: 61, scope: !3720)
!3738 = !DILocation(line: 5899, column: 19, scope: !3720)
!3739 = !DILocation(line: 5899, column: 16, scope: !3720)
!3740 = !DILocation(line: 5901, column: 10, scope: !3720)
!3741 = !DILocation(line: 5901, column: 3, scope: !3720)
!3742 = distinct !DISubprogram(name: "VEC_expr_history_def_base_length", scope: !398, file: !398, line: 101, type: !3743, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{!7, !3745}
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 64)
!3746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2098)
!3747 = !DILocalVariable(name: "vec_", arg: 1, scope: !3742, file: !398, line: 101, type: !3745)
!3748 = !DILocation(line: 101, column: 1, scope: !3742)
!3749 = distinct !DISubprogram(name: "remove_insn_from_stream", scope: !3, file: !3, line: 5952, type: !3750, scopeLine: 5953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{null, !825, !1057}
!3752 = !DILocalVariable(name: "insn", arg: 1, scope: !3749, file: !3, line: 5952, type: !825)
!3753 = !DILocation(line: 5952, column: 30, scope: !3749)
!3754 = !DILocalVariable(name: "only_disconnect", arg: 2, scope: !3749, file: !3, line: 5952, type: !1057)
!3755 = !DILocation(line: 5952, column: 41, scope: !3749)
!3756 = !DILocation(line: 5958, column: 37, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 5958, column: 7)
!3758 = !DILocation(line: 5958, column: 7, scope: !3757)
!3759 = !DILocation(line: 5958, column: 7, scope: !3749)
!3760 = !DILocalVariable(name: "nop", scope: !3761, file: !3, line: 5960, type: !2132)
!3761 = distinct !DILexicalBlock(scope: !3757, file: !3, line: 5959, column: 5)
!3762 = !DILocation(line: 5960, column: 14, scope: !3761)
!3763 = !DILocation(line: 5960, column: 39, scope: !3761)
!3764 = !DILocation(line: 5960, column: 20, scope: !3761)
!3765 = !DILocation(line: 5961, column: 7, scope: !3761)
!3766 = !DILocation(line: 5962, column: 7, scope: !3761)
!3767 = !DILocation(line: 5963, column: 5, scope: !3761)
!3768 = !DILocation(line: 5965, column: 20, scope: !3749)
!3769 = !DILocation(line: 5965, column: 26, scope: !3749)
!3770 = !DILocation(line: 5965, column: 3, scope: !3749)
!3771 = !DILocation(line: 5966, column: 1, scope: !3749)
!3772 = distinct !DISubprogram(name: "maybe_emit_renaming_copy", scope: !3, file: !3, line: 5824, type: !3773, scopeLine: 5826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!1057, !825, !820}
!3775 = !DILocalVariable(name: "insn", arg: 1, scope: !3772, file: !3, line: 5824, type: !825)
!3776 = !DILocation(line: 5824, column: 31, scope: !3772)
!3777 = !DILocalVariable(name: "params", arg: 2, scope: !3772, file: !3, line: 5825, type: !820)
!3778 = !DILocation(line: 5825, column: 50, scope: !3772)
!3779 = !DILocalVariable(name: "insn_emitted", scope: !3772, file: !3, line: 5827, type: !1057)
!3780 = !DILocation(line: 5827, column: 8, scope: !3772)
!3781 = !DILocalVariable(name: "cur_reg", scope: !3772, file: !3, line: 5828, type: !825)
!3782 = !DILocation(line: 5828, column: 7, scope: !3772)
!3783 = !DILocation(line: 5831, column: 8, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 5831, column: 7)
!3785 = !DILocation(line: 5831, column: 7, scope: !3772)
!3786 = !DILocation(line: 5832, column: 5, scope: !3784)
!3787 = !DILocation(line: 5834, column: 28, scope: !3772)
!3788 = !DILocation(line: 5834, column: 36, scope: !3772)
!3789 = !DILocation(line: 5834, column: 13, scope: !3772)
!3790 = !DILocation(line: 5834, column: 11, scope: !3772)
!3791 = !DILocation(line: 5835, column: 3, scope: !3772)
!3792 = !DILocation(line: 5840, column: 7, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 5840, column: 7)
!3794 = !DILocation(line: 5840, column: 31, scope: !3793)
!3795 = !DILocation(line: 5840, column: 28, scope: !3793)
!3796 = !DILocation(line: 5840, column: 7, scope: !3772)
!3797 = !DILocalVariable(name: "reg_move_insn", scope: !3798, file: !3, line: 5842, type: !2132)
!3798 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 5841, column: 5)
!3799 = !DILocation(line: 5842, column: 14, scope: !3798)
!3800 = !DILocalVariable(name: "reg_move_insn_rtx", scope: !3798, file: !3, line: 5842, type: !2132)
!3801 = !DILocation(line: 5842, column: 29, scope: !3798)
!3802 = !DILocation(line: 5844, column: 53, scope: !3798)
!3803 = !DILocation(line: 5845, column: 53, scope: !3798)
!3804 = !DILocation(line: 5845, column: 61, scope: !3798)
!3805 = !DILocation(line: 5844, column: 27, scope: !3798)
!3806 = !DILocation(line: 5844, column: 25, scope: !3798)
!3807 = !DILocation(line: 5846, column: 52, scope: !3798)
!3808 = !DILocation(line: 5847, column: 52, scope: !3798)
!3809 = !DILocation(line: 5848, column: 52, scope: !3798)
!3810 = !DILocation(line: 5849, column: 52, scope: !3798)
!3811 = !DILocation(line: 5846, column: 23, scope: !3798)
!3812 = !DILocation(line: 5846, column: 21, scope: !3798)
!3813 = !DILocation(line: 5850, column: 7, scope: !3798)
!3814 = !DILocation(line: 5850, column: 53, scope: !3798)
!3815 = !DILocation(line: 5851, column: 38, scope: !3798)
!3816 = !DILocation(line: 5851, column: 46, scope: !3798)
!3817 = !DILocation(line: 5851, column: 54, scope: !3798)
!3818 = !DILocation(line: 5851, column: 62, scope: !3798)
!3819 = !DILocation(line: 5851, column: 7, scope: !3798)
!3820 = !DILocation(line: 5853, column: 20, scope: !3798)
!3821 = !DILocation(line: 5854, column: 7, scope: !3798)
!3822 = !DILocation(line: 5854, column: 15, scope: !3798)
!3823 = !DILocation(line: 5854, column: 27, scope: !3798)
!3824 = !DILocation(line: 5855, column: 5, scope: !3798)
!3825 = !DILocation(line: 5857, column: 10, scope: !3772)
!3826 = !DILocation(line: 5857, column: 3, scope: !3772)
!3827 = !DILocation(line: 5858, column: 1, scope: !3772)
!3828 = distinct !DISubprogram(name: "maybe_emit_speculative_check", scope: !3, file: !3, line: 5864, type: !3721, scopeLine: 5866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3829 = !DILocalVariable(name: "insn", arg: 1, scope: !3828, file: !3, line: 5864, type: !825)
!3830 = !DILocation(line: 5864, column: 35, scope: !3828)
!3831 = !DILocalVariable(name: "expr", arg: 2, scope: !3828, file: !3, line: 5864, type: !2055)
!3832 = !DILocation(line: 5864, column: 48, scope: !3828)
!3833 = !DILocalVariable(name: "params", arg: 3, scope: !3828, file: !3, line: 5865, type: !820)
!3834 = !DILocation(line: 5865, column: 54, scope: !3828)
!3835 = !DILocalVariable(name: "insn_emitted", scope: !3828, file: !3, line: 5867, type: !1057)
!3836 = !DILocation(line: 5867, column: 8, scope: !3828)
!3837 = !DILocalVariable(name: "x", scope: !3828, file: !3, line: 5868, type: !2132)
!3838 = !DILocation(line: 5868, column: 10, scope: !3828)
!3839 = !DILocalVariable(name: "check_ds", scope: !3828, file: !3, line: 5869, type: !2089)
!3840 = !DILocation(line: 5869, column: 8, scope: !3828)
!3841 = !DILocation(line: 5871, column: 44, scope: !3828)
!3842 = !DILocation(line: 5871, column: 50, scope: !3828)
!3843 = !DILocation(line: 5871, column: 14, scope: !3828)
!3844 = !DILocation(line: 5871, column: 12, scope: !3828)
!3845 = !DILocation(line: 5872, column: 7, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 5872, column: 7)
!3847 = !DILocation(line: 5872, column: 16, scope: !3846)
!3848 = !DILocation(line: 5872, column: 7, scope: !3828)
!3849 = !DILocation(line: 5875, column: 37, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 5873, column: 5)
!3851 = !DILocation(line: 5875, column: 45, scope: !3850)
!3852 = !DILocation(line: 5875, column: 53, scope: !3850)
!3853 = !DILocation(line: 5875, column: 63, scope: !3850)
!3854 = !DILocation(line: 5875, column: 11, scope: !3850)
!3855 = !DILocation(line: 5875, column: 9, scope: !3850)
!3856 = !DILocation(line: 5876, column: 20, scope: !3850)
!3857 = !DILocation(line: 5877, column: 5, scope: !3850)
!3858 = !DILocation(line: 5880, column: 7, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 5879, column: 5)
!3860 = !DILocation(line: 5880, column: 44, scope: !3859)
!3861 = !DILocation(line: 5881, column: 11, scope: !3859)
!3862 = !DILocation(line: 5881, column: 9, scope: !3859)
!3863 = !DILocation(line: 5884, column: 3, scope: !3828)
!3864 = !DILocation(line: 5886, column: 10, scope: !3828)
!3865 = !DILocation(line: 5886, column: 3, scope: !3828)
!3866 = distinct !DISubprogram(name: "rhs_regno", scope: !456, file: !456, line: 1051, type: !3867, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3867 = !DISubroutineType(types: !3868)
!3868 = !{!7, !3869}
!3869 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !826, line: 51, baseType: !3870)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !828)
!3872 = !DILocalVariable(name: "x", arg: 1, scope: !3866, file: !456, line: 1051, type: !3869)
!3873 = !DILocation(line: 1051, column: 22, scope: !3866)
!3874 = !DILocation(line: 1053, column: 10, scope: !3866)
!3875 = !DILocation(line: 1053, column: 3, scope: !3866)
!3876 = distinct !DISubprogram(name: "create_insn_rtx_with_rhs", scope: !3, file: !3, line: 880, type: !3877, scopeLine: 881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!825, !2061, !825}
!3879 = !DILocalVariable(name: "vi", arg: 1, scope: !3876, file: !3, line: 880, type: !2061)
!3880 = !DILocation(line: 880, column: 35, scope: !3876)
!3881 = !DILocalVariable(name: "rhs_rtx", arg: 2, scope: !3876, file: !3, line: 880, type: !825)
!3882 = !DILocation(line: 880, column: 43, scope: !3876)
!3883 = !DILocalVariable(name: "lhs_rtx", scope: !3876, file: !3, line: 882, type: !825)
!3884 = !DILocation(line: 882, column: 7, scope: !3876)
!3885 = !DILocalVariable(name: "pattern", scope: !3876, file: !3, line: 883, type: !825)
!3886 = !DILocation(line: 883, column: 7, scope: !3876)
!3887 = !DILocalVariable(name: "insn_rtx", scope: !3876, file: !3, line: 884, type: !825)
!3888 = !DILocation(line: 884, column: 7, scope: !3876)
!3889 = !DILocation(line: 886, column: 23, scope: !3876)
!3890 = !DILocation(line: 886, column: 13, scope: !3876)
!3891 = !DILocation(line: 886, column: 11, scope: !3876)
!3892 = !DILocation(line: 888, column: 13, scope: !3876)
!3893 = !DILocation(line: 888, column: 11, scope: !3876)
!3894 = !DILocation(line: 889, column: 44, scope: !3876)
!3895 = !DILocation(line: 889, column: 14, scope: !3876)
!3896 = !DILocation(line: 889, column: 12, scope: !3876)
!3897 = !DILocation(line: 891, column: 10, scope: !3876)
!3898 = !DILocation(line: 891, column: 3, scope: !3876)
!3899 = distinct !DISubprogram(name: "replace_dest_with_reg_in_expr", scope: !3, file: !3, line: 978, type: !3900, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3900 = !DISubroutineType(types: !3901)
!3901 = !{null, !2055, !825}
!3902 = !DILocalVariable(name: "expr", arg: 1, scope: !3899, file: !3, line: 978, type: !2055)
!3903 = !DILocation(line: 978, column: 39, scope: !3899)
!3904 = !DILocalVariable(name: "new_reg", arg: 2, scope: !3899, file: !3, line: 978, type: !825)
!3905 = !DILocation(line: 978, column: 49, scope: !3899)
!3906 = !DILocalVariable(name: "insn_rtx", scope: !3899, file: !3, line: 980, type: !825)
!3907 = !DILocation(line: 980, column: 7, scope: !3899)
!3908 = !DILocalVariable(name: "vinsn", scope: !3899, file: !3, line: 981, type: !2061)
!3909 = !DILocation(line: 981, column: 11, scope: !3899)
!3910 = !DILocation(line: 983, column: 40, scope: !3899)
!3911 = !DILocation(line: 983, column: 59, scope: !3899)
!3912 = !DILocation(line: 983, column: 14, scope: !3899)
!3913 = !DILocation(line: 983, column: 12, scope: !3899)
!3914 = !DILocation(line: 984, column: 39, scope: !3899)
!3915 = !DILocation(line: 984, column: 11, scope: !3899)
!3916 = !DILocation(line: 984, column: 9, scope: !3899)
!3917 = !DILocation(line: 986, column: 25, scope: !3899)
!3918 = !DILocation(line: 986, column: 31, scope: !3899)
!3919 = !DILocation(line: 986, column: 3, scope: !3899)
!3920 = !DILocation(line: 987, column: 3, scope: !3899)
!3921 = !DILocation(line: 987, column: 27, scope: !3899)
!3922 = !DILocation(line: 988, column: 3, scope: !3899)
!3923 = !DILocation(line: 988, column: 32, scope: !3899)
!3924 = !DILocation(line: 989, column: 1, scope: !3899)
!3925 = distinct !DISubprogram(name: "create_insn_rtx_with_lhs", scope: !3, file: !3, line: 961, type: !3877, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3926 = !DILocalVariable(name: "vi", arg: 1, scope: !3925, file: !3, line: 961, type: !2061)
!3927 = !DILocation(line: 961, column: 35, scope: !3925)
!3928 = !DILocalVariable(name: "lhs_rtx", arg: 2, scope: !3925, file: !3, line: 961, type: !825)
!3929 = !DILocation(line: 961, column: 43, scope: !3925)
!3930 = !DILocalVariable(name: "rhs_rtx", scope: !3925, file: !3, line: 963, type: !825)
!3931 = !DILocation(line: 963, column: 7, scope: !3925)
!3932 = !DILocalVariable(name: "pattern", scope: !3925, file: !3, line: 964, type: !825)
!3933 = !DILocation(line: 964, column: 7, scope: !3925)
!3934 = !DILocalVariable(name: "insn_rtx", scope: !3925, file: !3, line: 965, type: !825)
!3935 = !DILocation(line: 965, column: 7, scope: !3925)
!3936 = !DILocation(line: 967, column: 23, scope: !3925)
!3937 = !DILocation(line: 967, column: 13, scope: !3925)
!3938 = !DILocation(line: 967, column: 11, scope: !3925)
!3939 = !DILocation(line: 969, column: 13, scope: !3925)
!3940 = !DILocation(line: 969, column: 11, scope: !3925)
!3941 = !DILocation(line: 970, column: 44, scope: !3925)
!3942 = !DILocation(line: 970, column: 14, scope: !3925)
!3943 = !DILocation(line: 970, column: 12, scope: !3925)
!3944 = !DILocation(line: 972, column: 10, scope: !3925)
!3945 = !DILocation(line: 972, column: 3, scope: !3925)
!3946 = distinct !DISubprogram(name: "get_spec_check_type_for_insn", scope: !3, file: !3, line: 3174, type: !3947, scopeLine: 3175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!2089, !2132, !2055}
!3949 = !DILocalVariable(name: "insn", arg: 1, scope: !3946, file: !3, line: 3174, type: !2132)
!3950 = !DILocation(line: 3174, column: 38, scope: !3946)
!3951 = !DILocalVariable(name: "expr", arg: 2, scope: !3946, file: !3, line: 3174, type: !2055)
!3952 = !DILocation(line: 3174, column: 51, scope: !3946)
!3953 = !DILocalVariable(name: "to_check_ds", scope: !3946, file: !3, line: 3176, type: !2089)
!3954 = !DILocation(line: 3176, column: 8, scope: !3946)
!3955 = !DILocalVariable(name: "already_checked_ds", scope: !3946, file: !3, line: 3177, type: !2089)
!3956 = !DILocation(line: 3177, column: 8, scope: !3946)
!3957 = !DILocation(line: 3177, column: 29, scope: !3946)
!3958 = !DILocation(line: 3179, column: 17, scope: !3946)
!3959 = !DILocation(line: 3179, column: 15, scope: !3946)
!3960 = !DILocation(line: 3181, column: 21, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 3181, column: 7)
!3962 = !DILocation(line: 3181, column: 7, scope: !3961)
!3963 = !DILocation(line: 3181, column: 7, scope: !3946)
!3964 = !DILocation(line: 3182, column: 41, scope: !3961)
!3965 = !DILocation(line: 3182, column: 62, scope: !3961)
!3966 = !DILocation(line: 3182, column: 27, scope: !3961)
!3967 = !DILocation(line: 3182, column: 24, scope: !3961)
!3968 = !DILocation(line: 3182, column: 5, scope: !3961)
!3969 = !DILocation(line: 3184, column: 7, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 3184, column: 7)
!3971 = !DILocation(line: 3184, column: 17, scope: !3970)
!3972 = !DILocation(line: 3185, column: 7, scope: !3970)
!3973 = !DILocation(line: 3185, column: 11, scope: !3970)
!3974 = !DILocation(line: 3185, column: 22, scope: !3970)
!3975 = !DILocation(line: 3185, column: 28, scope: !3970)
!3976 = !DILocation(line: 3184, column: 7, scope: !3946)
!3977 = !DILocation(line: 3186, column: 24, scope: !3970)
!3978 = !DILocation(line: 3186, column: 5, scope: !3970)
!3979 = !DILocation(line: 3188, column: 50, scope: !3946)
!3980 = !DILocation(line: 3188, column: 24, scope: !3946)
!3981 = !DILocation(line: 3188, column: 22, scope: !3946)
!3982 = !DILocation(line: 3190, column: 19, scope: !3946)
!3983 = !DILocation(line: 3190, column: 18, scope: !3946)
!3984 = !DILocation(line: 3190, column: 15, scope: !3946)
!3985 = !DILocation(line: 3192, column: 10, scope: !3946)
!3986 = !DILocation(line: 3192, column: 3, scope: !3946)
!3987 = distinct !DISubprogram(name: "create_speculation_check", scope: !3, file: !3, line: 1821, type: !3988, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!2132, !2055, !2089, !2132}
!3990 = !DILocalVariable(name: "c_expr", arg: 1, scope: !3987, file: !3, line: 1821, type: !2055)
!3991 = !DILocation(line: 1821, column: 34, scope: !3987)
!3992 = !DILocalVariable(name: "check_ds", arg: 2, scope: !3987, file: !3, line: 1821, type: !2089)
!3993 = !DILocation(line: 1821, column: 47, scope: !3987)
!3994 = !DILocalVariable(name: "orig_insn", arg: 3, scope: !3987, file: !3, line: 1821, type: !2132)
!3995 = !DILocation(line: 1821, column: 64, scope: !3987)
!3996 = !DILocalVariable(name: "check_pattern", scope: !3987, file: !3, line: 1823, type: !825)
!3997 = !DILocation(line: 1823, column: 7, scope: !3987)
!3998 = !DILocalVariable(name: "insn_rtx", scope: !3987, file: !3, line: 1824, type: !825)
!3999 = !DILocation(line: 1824, column: 7, scope: !3987)
!4000 = !DILocalVariable(name: "insn", scope: !3987, file: !3, line: 1825, type: !2132)
!4001 = !DILocation(line: 1825, column: 10, scope: !3987)
!4002 = !DILocalVariable(name: "recovery_block", scope: !3987, file: !3, line: 1826, type: !1362)
!4003 = !DILocation(line: 1826, column: 15, scope: !3987)
!4004 = !DILocalVariable(name: "label", scope: !3987, file: !3, line: 1827, type: !825)
!4005 = !DILocation(line: 1827, column: 7, scope: !3987)
!4006 = !DILocation(line: 1831, column: 21, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1831, column: 7)
!4008 = !DILocation(line: 1831, column: 36, scope: !4007)
!4009 = !DILocation(line: 1831, column: 7, scope: !4007)
!4010 = !DILocation(line: 1832, column: 7, scope: !4007)
!4011 = !DILocation(line: 1832, column: 10, scope: !4007)
!4012 = !DILocation(line: 1832, column: 52, scope: !4007)
!4013 = !DILocation(line: 1831, column: 7, scope: !3987)
!4014 = !DILocation(line: 1834, column: 51, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 1833, column: 5)
!4016 = !DILocation(line: 1834, column: 24, scope: !4015)
!4017 = !DILocation(line: 1834, column: 22, scope: !4015)
!4018 = !DILocation(line: 1835, column: 15, scope: !4015)
!4019 = !DILocation(line: 1835, column: 13, scope: !4015)
!4020 = !DILocation(line: 1836, column: 5, scope: !4015)
!4021 = !DILocation(line: 1839, column: 22, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 1838, column: 5)
!4023 = !DILocation(line: 1840, column: 13, scope: !4022)
!4024 = !DILocation(line: 1844, column: 33, scope: !3987)
!4025 = !DILocation(line: 1844, column: 49, scope: !3987)
!4026 = !DILocation(line: 1844, column: 73, scope: !3987)
!4027 = !DILocation(line: 1845, column: 7, scope: !3987)
!4028 = !DILocation(line: 1844, column: 19, scope: !3987)
!4029 = !DILocation(line: 1844, column: 17, scope: !3987)
!4030 = !DILocation(line: 1847, column: 3, scope: !3987)
!4031 = !DILocation(line: 1850, column: 44, scope: !3987)
!4032 = !DILocation(line: 1850, column: 59, scope: !3987)
!4033 = !DILocation(line: 1850, column: 14, scope: !3987)
!4034 = !DILocation(line: 1850, column: 12, scope: !3987)
!4035 = !DILocation(line: 1852, column: 39, scope: !3987)
!4036 = !DILocation(line: 1852, column: 49, scope: !3987)
!4037 = !DILocation(line: 1853, column: 11, scope: !3987)
!4038 = !DILocation(line: 1853, column: 35, scope: !3987)
!4039 = !DILocation(line: 1852, column: 10, scope: !3987)
!4040 = !DILocation(line: 1852, column: 8, scope: !3987)
!4041 = !DILocation(line: 1856, column: 3, scope: !3987)
!4042 = !DILocation(line: 1856, column: 40, scope: !3987)
!4043 = !DILocation(line: 1857, column: 33, scope: !3987)
!4044 = !DILocation(line: 1857, column: 3, scope: !3987)
!4045 = !DILocation(line: 1857, column: 31, scope: !3987)
!4046 = !DILocation(line: 1861, column: 56, scope: !3987)
!4047 = !DILocation(line: 1861, column: 40, scope: !3987)
!4048 = !DILocation(line: 1862, column: 30, scope: !3987)
!4049 = !DILocation(line: 1862, column: 14, scope: !3987)
!4050 = !DILocation(line: 1862, column: 12, scope: !3987)
!4051 = !DILocation(line: 1861, column: 3, scope: !3987)
!4052 = !DILocation(line: 1861, column: 36, scope: !3987)
!4053 = !DILocation(line: 1866, column: 7, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1866, column: 7)
!4055 = !DILocation(line: 1866, column: 22, scope: !4054)
!4056 = !DILocation(line: 1866, column: 7, scope: !3987)
!4057 = !DILocalVariable(name: "twin_rtx", scope: !4058, file: !3, line: 1868, type: !825)
!4058 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1867, column: 5)
!4059 = !DILocation(line: 1868, column: 11, scope: !4058)
!4060 = !DILocation(line: 1870, column: 28, scope: !4058)
!4061 = !DILocation(line: 1870, column: 18, scope: !4058)
!4062 = !DILocation(line: 1870, column: 16, scope: !4058)
!4063 = !DILocation(line: 1871, column: 48, scope: !4058)
!4064 = !DILocation(line: 1871, column: 18, scope: !4058)
!4065 = !DILocation(line: 1871, column: 16, scope: !4058)
!4066 = !DILocation(line: 1872, column: 45, scope: !4058)
!4067 = !DILocation(line: 1873, column: 10, scope: !4058)
!4068 = !DILocation(line: 1874, column: 10, scope: !4058)
!4069 = !DILocation(line: 1875, column: 19, scope: !4058)
!4070 = !DILocation(line: 1875, column: 10, scope: !4058)
!4071 = !DILocation(line: 1872, column: 7, scope: !4058)
!4072 = !DILocation(line: 1876, column: 5, scope: !4058)
!4073 = !DILocation(line: 1885, column: 35, scope: !3987)
!4074 = !DILocation(line: 1885, column: 14, scope: !3987)
!4075 = !DILocation(line: 1885, column: 12, scope: !3987)
!4076 = !DILocation(line: 1886, column: 19, scope: !3987)
!4077 = !DILocation(line: 1886, column: 27, scope: !3987)
!4078 = !DILocation(line: 1886, column: 3, scope: !3987)
!4079 = !DILocation(line: 1888, column: 10, scope: !3987)
!4080 = !DILocation(line: 1888, column: 3, scope: !3987)
!4081 = distinct !DISubprogram(name: "need_nop_to_preserve_insn_bb", scope: !3, file: !3, line: 5909, type: !4082, scopeLine: 5910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!1057, !825}
!4084 = !DILocalVariable(name: "insn", arg: 1, scope: !4081, file: !3, line: 5909, type: !825)
!4085 = !DILocation(line: 5909, column: 35, scope: !4081)
!4086 = !DILocalVariable(name: "bb_head", scope: !4081, file: !3, line: 5911, type: !2132)
!4087 = !DILocation(line: 5911, column: 10, scope: !4081)
!4088 = !DILocalVariable(name: "bb_end", scope: !4081, file: !3, line: 5911, type: !2132)
!4089 = !DILocation(line: 5911, column: 19, scope: !4081)
!4090 = !DILocalVariable(name: "bb_next", scope: !4081, file: !3, line: 5911, type: !2132)
!4091 = !DILocation(line: 5911, column: 27, scope: !4081)
!4092 = !DILocalVariable(name: "in_next", scope: !4081, file: !3, line: 5911, type: !2132)
!4093 = !DILocation(line: 5911, column: 36, scope: !4081)
!4094 = !DILocalVariable(name: "bb", scope: !4081, file: !3, line: 5912, type: !1362)
!4095 = !DILocation(line: 5912, column: 15, scope: !4081)
!4096 = !DILocation(line: 5912, column: 20, scope: !4081)
!4097 = !DILocation(line: 5914, column: 26, scope: !4081)
!4098 = !DILocation(line: 5914, column: 13, scope: !4081)
!4099 = !DILocation(line: 5914, column: 11, scope: !4081)
!4100 = !DILocation(line: 5915, column: 24, scope: !4081)
!4101 = !DILocation(line: 5915, column: 12, scope: !4081)
!4102 = !DILocation(line: 5915, column: 10, scope: !4081)
!4103 = !DILocation(line: 5917, column: 7, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 5917, column: 7)
!4105 = !DILocation(line: 5917, column: 18, scope: !4104)
!4106 = !DILocation(line: 5917, column: 15, scope: !4104)
!4107 = !DILocation(line: 5917, column: 7, scope: !4081)
!4108 = !DILocation(line: 5918, column: 5, scope: !4104)
!4109 = !DILocation(line: 5920, column: 3, scope: !4081)
!4110 = !DILocation(line: 5920, column: 10, scope: !4081)
!4111 = !DILocation(line: 5920, column: 21, scope: !4081)
!4112 = !DILocation(line: 5920, column: 18, scope: !4081)
!4113 = !DILocation(line: 5920, column: 28, scope: !4081)
!4114 = !DILocation(line: 5920, column: 31, scope: !4081)
!4115 = !DILocation(line: 0, scope: !4081)
!4116 = !DILocation(line: 5921, column: 15, scope: !4081)
!4117 = !DILocation(line: 5921, column: 13, scope: !4081)
!4118 = distinct !{!4118, !4109, !4116}
!4119 = !DILocation(line: 5923, column: 7, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 5923, column: 7)
!4121 = !DILocation(line: 5923, column: 18, scope: !4120)
!4122 = !DILocation(line: 5923, column: 15, scope: !4120)
!4123 = !DILocation(line: 5923, column: 7, scope: !4081)
!4124 = !DILocation(line: 5924, column: 5, scope: !4120)
!4125 = !DILocation(line: 5926, column: 3, scope: !4081)
!4126 = !DILocation(line: 5926, column: 10, scope: !4081)
!4127 = !DILocation(line: 5926, column: 21, scope: !4081)
!4128 = !DILocation(line: 5926, column: 18, scope: !4081)
!4129 = !DILocation(line: 5926, column: 28, scope: !4081)
!4130 = !DILocation(line: 5926, column: 31, scope: !4081)
!4131 = !DILocation(line: 5927, column: 14, scope: !4081)
!4132 = !DILocation(line: 5927, column: 12, scope: !4081)
!4133 = distinct !{!4133, !4125, !4131}
!4134 = !DILocation(line: 5929, column: 7, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 5929, column: 7)
!4136 = !DILocation(line: 5929, column: 18, scope: !4135)
!4137 = !DILocation(line: 5929, column: 15, scope: !4135)
!4138 = !DILocation(line: 5929, column: 7, scope: !4081)
!4139 = !DILocation(line: 5930, column: 5, scope: !4135)
!4140 = !DILocation(line: 5932, column: 13, scope: !4081)
!4141 = !DILocation(line: 5932, column: 11, scope: !4081)
!4142 = !DILocation(line: 5933, column: 3, scope: !4081)
!4143 = !DILocation(line: 5933, column: 10, scope: !4081)
!4144 = !DILocation(line: 5933, column: 21, scope: !4081)
!4145 = !DILocation(line: 5933, column: 18, scope: !4081)
!4146 = !DILocation(line: 5933, column: 28, scope: !4081)
!4147 = !DILocation(line: 5933, column: 31, scope: !4081)
!4148 = !DILocation(line: 5934, column: 15, scope: !4081)
!4149 = !DILocation(line: 5934, column: 13, scope: !4081)
!4150 = distinct !{!4150, !4142, !4148}
!4151 = !DILocation(line: 5936, column: 7, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 5936, column: 7)
!4153 = !DILocation(line: 5936, column: 18, scope: !4152)
!4154 = !DILocation(line: 5936, column: 15, scope: !4152)
!4155 = !DILocation(line: 5936, column: 25, scope: !4152)
!4156 = !DILocation(line: 5936, column: 28, scope: !4152)
!4157 = !DILocation(line: 5936, column: 7, scope: !4081)
!4158 = !DILocation(line: 5937, column: 5, scope: !4152)
!4159 = !DILocation(line: 5939, column: 13, scope: !4081)
!4160 = !DILocation(line: 5939, column: 11, scope: !4081)
!4161 = !DILocation(line: 5940, column: 3, scope: !4081)
!4162 = !DILocation(line: 5940, column: 10, scope: !4081)
!4163 = !DILocation(line: 5941, column: 15, scope: !4081)
!4164 = !DILocation(line: 5941, column: 13, scope: !4081)
!4165 = distinct !{!4165, !4161, !4163}
!4166 = !DILocation(line: 5943, column: 7, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 5943, column: 7)
!4168 = !DILocation(line: 5943, column: 7, scope: !4081)
!4169 = !DILocation(line: 5944, column: 5, scope: !4167)
!4170 = !DILocation(line: 5946, column: 3, scope: !4081)
!4171 = !DILocation(line: 5947, column: 1, scope: !4081)
!4172 = distinct !DISubprogram(name: "VEC_insn_t_heap_safe_push", scope: !3, file: !3, line: 529, type: !4173, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!4175, !4176, !2132}
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!4177 = !DILocalVariable(name: "vec_", arg: 1, scope: !4172, file: !3, line: 529, type: !4176)
!4178 = !DILocation(line: 529, column: 1, scope: !4172)
!4179 = !DILocalVariable(name: "obj_", arg: 2, scope: !4172, file: !3, line: 529, type: !2132)
!4180 = distinct !DISubprogram(name: "VEC_insn_t_heap_reserve", scope: !3, file: !3, line: 529, type: !4181, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!849, !4176, !849}
!4183 = !DILocalVariable(name: "vec_", arg: 1, scope: !4180, file: !3, line: 529, type: !4176)
!4184 = !DILocation(line: 529, column: 1, scope: !4180)
!4185 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4180, file: !3, line: 529, type: !849)
!4186 = !DILocalVariable(name: "extend", scope: !4180, file: !3, line: 529, type: !849)
!4187 = !DILocation(line: 529, column: 1, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 529, column: 1)
!4189 = distinct !DISubprogram(name: "VEC_insn_t_base_quick_push", scope: !3, file: !3, line: 528, type: !4190, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{!4175, !4192, !2132}
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!4193 = !DILocalVariable(name: "vec_", arg: 1, scope: !4189, file: !3, line: 528, type: !4192)
!4194 = !DILocation(line: 528, column: 1, scope: !4189)
!4195 = !DILocalVariable(name: "obj_", arg: 2, scope: !4189, file: !3, line: 528, type: !2132)
!4196 = !DILocalVariable(name: "slot_", scope: !4189, file: !3, line: 528, type: !4175)
!4197 = distinct !DISubprogram(name: "VEC_insn_t_base_space", scope: !3, file: !3, line: 528, type: !4198, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!849, !4192, !849}
!4200 = !DILocalVariable(name: "vec_", arg: 1, scope: !4197, file: !3, line: 528, type: !4192)
!4201 = !DILocation(line: 528, column: 1, scope: !4197)
!4202 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4197, file: !3, line: 528, type: !849)
!4203 = distinct !DISubprogram(name: "moveup_expr_cached", scope: !3, file: !3, line: 2493, type: !4204, scopeLine: 2494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!610, !2055, !2132, !1057}
!4206 = !DILocalVariable(name: "expr", arg: 1, scope: !4203, file: !3, line: 2493, type: !2055)
!4207 = !DILocation(line: 2493, column: 28, scope: !4203)
!4208 = !DILocalVariable(name: "insn", arg: 2, scope: !4203, file: !3, line: 2493, type: !2132)
!4209 = !DILocation(line: 2493, column: 41, scope: !4203)
!4210 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !4203, file: !3, line: 2493, type: !1057)
!4211 = !DILocation(line: 2493, column: 52, scope: !4203)
!4212 = !DILocalVariable(name: "res", scope: !4203, file: !3, line: 2495, type: !610)
!4213 = !DILocation(line: 2495, column: 25, scope: !4203)
!4214 = !DILocalVariable(name: "got_answer", scope: !4203, file: !3, line: 2496, type: !1057)
!4215 = !DILocation(line: 2496, column: 8, scope: !4203)
!4216 = !DILocation(line: 2498, column: 7, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 2498, column: 7)
!4218 = !DILocation(line: 2498, column: 21, scope: !4217)
!4219 = !DILocation(line: 2498, column: 7, scope: !4203)
!4220 = !DILocation(line: 2500, column: 7, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 2499, column: 5)
!4222 = !DILocation(line: 2500, column: 7, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 2500, column: 7)
!4224 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 2500, column: 7)
!4225 = !DILocation(line: 2500, column: 7, scope: !4224)
!4226 = !DILocalVariable(name: "__j", scope: !4227, file: !3, line: 2500, type: !849)
!4227 = distinct !DILexicalBlock(scope: !4223, file: !3, line: 2500, column: 7)
!4228 = !DILocation(line: 2500, column: 7, scope: !4227)
!4229 = !DILocalVariable(name: "__s", scope: !4227, file: !3, line: 2500, type: !817)
!4230 = !DILocation(line: 2501, column: 18, scope: !4221)
!4231 = !DILocation(line: 2501, column: 7, scope: !4221)
!4232 = !DILocation(line: 2502, column: 7, scope: !4221)
!4233 = !DILocation(line: 2502, column: 7, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 2502, column: 7)
!4235 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 2502, column: 7)
!4236 = !DILocation(line: 2502, column: 7, scope: !4235)
!4237 = !DILocalVariable(name: "__j", scope: !4238, file: !3, line: 2502, type: !849)
!4238 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 2502, column: 7)
!4239 = !DILocation(line: 2502, column: 7, scope: !4238)
!4240 = !DILocalVariable(name: "__s", scope: !4238, file: !3, line: 2502, type: !817)
!4241 = !DILocation(line: 2503, column: 5, scope: !4221)
!4242 = !DILocation(line: 2505, column: 7, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 2505, column: 7)
!4244 = !DILocation(line: 2506, column: 7, scope: !4243)
!4245 = !DILocation(line: 2506, column: 24, scope: !4243)
!4246 = !DILocation(line: 2506, column: 11, scope: !4243)
!4247 = !DILocation(line: 2507, column: 7, scope: !4243)
!4248 = !DILocation(line: 2507, column: 4, scope: !4243)
!4249 = !DILocation(line: 2505, column: 7, scope: !4203)
!4250 = !DILocation(line: 2510, column: 30, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 2510, column: 12)
!4252 = !DILocation(line: 2510, column: 36, scope: !4251)
!4253 = !DILocation(line: 2510, column: 42, scope: !4251)
!4254 = !DILocation(line: 2510, column: 12, scope: !4251)
!4255 = !DILocation(line: 2510, column: 12, scope: !4243)
!4256 = !DILocation(line: 2513, column: 20, scope: !4251)
!4257 = !DILocation(line: 2513, column: 38, scope: !4251)
!4258 = !DILocation(line: 2513, column: 41, scope: !4251)
!4259 = !DILocation(line: 2513, column: 45, scope: !4251)
!4260 = !DILocation(line: 2513, column: 18, scope: !4251)
!4261 = !DILocation(line: 2513, column: 16, scope: !4251)
!4262 = !DILocation(line: 2513, column: 5, scope: !4251)
!4263 = !DILocation(line: 2514, column: 38, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 2514, column: 12)
!4265 = !DILocation(line: 2514, column: 44, scope: !4264)
!4266 = !DILocation(line: 2514, column: 12, scope: !4264)
!4267 = !DILocation(line: 2514, column: 12, scope: !4251)
!4268 = !DILocation(line: 2515, column: 16, scope: !4264)
!4269 = !DILocation(line: 2515, column: 5, scope: !4264)
!4270 = !DILocation(line: 2517, column: 9, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 2517, column: 7)
!4272 = !DILocation(line: 2517, column: 7, scope: !4203)
!4273 = !DILocalVariable(name: "expr_old_vinsn", scope: !4274, file: !3, line: 2520, type: !2061)
!4274 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 2518, column: 5)
!4275 = !DILocation(line: 2520, column: 15, scope: !4274)
!4276 = !DILocation(line: 2520, column: 32, scope: !4274)
!4277 = !DILocalVariable(name: "expr_old_spec_ds", scope: !4274, file: !3, line: 2521, type: !2089)
!4278 = !DILocation(line: 2521, column: 12, scope: !4274)
!4279 = !DILocation(line: 2521, column: 31, scope: !4274)
!4280 = !DILocalVariable(name: "expr_uid", scope: !4274, file: !3, line: 2522, type: !849)
!4281 = !DILocation(line: 2522, column: 11, scope: !4274)
!4282 = !DILocation(line: 2522, column: 22, scope: !4274)
!4283 = !DILocalVariable(name: "unique_p", scope: !4274, file: !3, line: 2523, type: !1057)
!4284 = !DILocation(line: 2523, column: 12, scope: !4274)
!4285 = !DILocation(line: 2523, column: 23, scope: !4274)
!4286 = !DILocalVariable(name: "trans_type", scope: !4274, file: !3, line: 2524, type: !397)
!4287 = !DILocation(line: 2524, column: 29, scope: !4274)
!4288 = !DILocation(line: 2528, column: 21, scope: !4274)
!4289 = !DILocation(line: 2528, column: 7, scope: !4274)
!4290 = !DILocation(line: 2530, column: 26, scope: !4274)
!4291 = !DILocation(line: 2530, column: 32, scope: !4274)
!4292 = !DILocation(line: 2530, column: 38, scope: !4274)
!4293 = !DILocation(line: 2530, column: 13, scope: !4274)
!4294 = !DILocation(line: 2530, column: 11, scope: !4274)
!4295 = !DILocation(line: 2532, column: 15, scope: !4274)
!4296 = !DILocation(line: 2532, column: 7, scope: !4274)
!4297 = !DILocation(line: 2535, column: 32, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 2533, column: 9)
!4299 = !DILocation(line: 2535, column: 38, scope: !4298)
!4300 = !DILocation(line: 2535, column: 44, scope: !4298)
!4301 = !DILocation(line: 2535, column: 63, scope: !4298)
!4302 = !DILocation(line: 2535, column: 11, scope: !4298)
!4303 = !DILocation(line: 2536, column: 8, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 2536, column: 8)
!4305 = !DILocation(line: 2536, column: 22, scope: !4304)
!4306 = !DILocation(line: 2536, column: 8, scope: !4298)
!4307 = !DILocation(line: 2537, column: 13, scope: !4304)
!4308 = !DILocation(line: 2537, column: 13, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 2537, column: 13)
!4310 = distinct !DILexicalBlock(scope: !4304, file: !3, line: 2537, column: 13)
!4311 = !DILocation(line: 2537, column: 13, scope: !4310)
!4312 = !DILocalVariable(name: "__j", scope: !4313, file: !3, line: 2537, type: !849)
!4313 = distinct !DILexicalBlock(scope: !4309, file: !3, line: 2537, column: 13)
!4314 = !DILocation(line: 2537, column: 13, scope: !4313)
!4315 = !DILocalVariable(name: "__s", scope: !4313, file: !3, line: 2537, type: !817)
!4316 = !DILocation(line: 2538, column: 4, scope: !4298)
!4317 = !DILocation(line: 2541, column: 32, scope: !4298)
!4318 = !DILocation(line: 2541, column: 38, scope: !4298)
!4319 = !DILocation(line: 2541, column: 44, scope: !4298)
!4320 = !DILocation(line: 2541, column: 63, scope: !4298)
!4321 = !DILocation(line: 2541, column: 11, scope: !4298)
!4322 = !DILocation(line: 2542, column: 15, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 2542, column: 15)
!4324 = !DILocation(line: 2542, column: 29, scope: !4323)
!4325 = !DILocation(line: 2542, column: 15, scope: !4298)
!4326 = !DILocation(line: 2543, column: 13, scope: !4323)
!4327 = !DILocation(line: 2543, column: 13, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 2543, column: 13)
!4329 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 2543, column: 13)
!4330 = !DILocation(line: 2543, column: 13, scope: !4329)
!4331 = !DILocalVariable(name: "__j", scope: !4332, file: !3, line: 2543, type: !849)
!4332 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 2543, column: 13)
!4333 = !DILocation(line: 2543, column: 13, scope: !4332)
!4334 = !DILocalVariable(name: "__s", scope: !4332, file: !3, line: 2543, type: !817)
!4335 = !DILocation(line: 2544, column: 4, scope: !4298)
!4336 = !DILocation(line: 2547, column: 11, scope: !4298)
!4337 = !DILocation(line: 2548, column: 32, scope: !4298)
!4338 = !DILocation(line: 2548, column: 38, scope: !4298)
!4339 = !DILocation(line: 2548, column: 44, scope: !4298)
!4340 = !DILocation(line: 2548, column: 63, scope: !4298)
!4341 = !DILocation(line: 2548, column: 11, scope: !4298)
!4342 = !DILocation(line: 2549, column: 8, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 2549, column: 8)
!4344 = !DILocation(line: 2549, column: 22, scope: !4343)
!4345 = !DILocation(line: 2549, column: 8, scope: !4298)
!4346 = !DILocation(line: 2550, column: 13, scope: !4343)
!4347 = !DILocation(line: 2550, column: 13, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 2550, column: 13)
!4349 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 2550, column: 13)
!4350 = !DILocation(line: 2550, column: 13, scope: !4349)
!4351 = !DILocalVariable(name: "__j", scope: !4352, file: !3, line: 2550, type: !849)
!4352 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 2550, column: 13)
!4353 = !DILocation(line: 2550, column: 13, scope: !4352)
!4354 = !DILocalVariable(name: "__s", scope: !4352, file: !3, line: 2550, type: !817)
!4355 = !DILocation(line: 2551, column: 4, scope: !4298)
!4356 = !DILocation(line: 2554, column: 11, scope: !4298)
!4357 = !DILocation(line: 2556, column: 36, scope: !4298)
!4358 = !DILocation(line: 2557, column: 35, scope: !4298)
!4359 = !DILocation(line: 2557, column: 52, scope: !4298)
!4360 = !DILocation(line: 2558, column: 35, scope: !4298)
!4361 = !DILocation(line: 2558, column: 51, scope: !4298)
!4362 = !DILocation(line: 2559, column: 35, scope: !4298)
!4363 = !DILocation(line: 2556, column: 11, scope: !4298)
!4364 = !DILocation(line: 2560, column: 40, scope: !4298)
!4365 = !DILocation(line: 2560, column: 46, scope: !4298)
!4366 = !DILocation(line: 2560, column: 52, scope: !4298)
!4367 = !DILocation(line: 2561, column: 40, scope: !4298)
!4368 = !DILocation(line: 2561, column: 52, scope: !4298)
!4369 = !DILocation(line: 2560, column: 11, scope: !4298)
!4370 = !DILocation(line: 2562, column: 15, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 2562, column: 15)
!4372 = !DILocation(line: 2562, column: 29, scope: !4371)
!4373 = !DILocation(line: 2562, column: 15, scope: !4298)
!4374 = !DILocation(line: 2564, column: 15, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 2563, column: 13)
!4376 = !DILocation(line: 2564, column: 15, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 2564, column: 15)
!4378 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 2564, column: 15)
!4379 = !DILocation(line: 2564, column: 15, scope: !4378)
!4380 = !DILocalVariable(name: "__j", scope: !4381, file: !3, line: 2564, type: !849)
!4381 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 2564, column: 15)
!4382 = !DILocation(line: 2564, column: 15, scope: !4381)
!4383 = !DILocalVariable(name: "__s", scope: !4381, file: !3, line: 2564, type: !817)
!4384 = !DILocation(line: 2565, column: 26, scope: !4375)
!4385 = !DILocation(line: 2565, column: 15, scope: !4375)
!4386 = !DILocation(line: 2566, column: 15, scope: !4375)
!4387 = !DILocation(line: 2566, column: 15, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 2566, column: 15)
!4389 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 2566, column: 15)
!4390 = !DILocation(line: 2566, column: 15, scope: !4389)
!4391 = !DILocalVariable(name: "__j", scope: !4392, file: !3, line: 2566, type: !849)
!4392 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 2566, column: 15)
!4393 = !DILocation(line: 2566, column: 15, scope: !4392)
!4394 = !DILocalVariable(name: "__s", scope: !4392, file: !3, line: 2566, type: !817)
!4395 = !DILocation(line: 2567, column: 13, scope: !4375)
!4396 = !DILocation(line: 2568, column: 4, scope: !4298)
!4397 = !DILocation(line: 2570, column: 4, scope: !4298)
!4398 = !DILocation(line: 2571, column: 9, scope: !4298)
!4399 = !DILocation(line: 2573, column: 21, scope: !4274)
!4400 = !DILocation(line: 2573, column: 7, scope: !4274)
!4401 = !DILocation(line: 2574, column: 5, scope: !4274)
!4402 = !DILocation(line: 2576, column: 10, scope: !4203)
!4403 = !DILocation(line: 2576, column: 3, scope: !4203)
!4404 = distinct !DISubprogram(name: "update_liveness_on_insn", scope: !3, file: !3, line: 3139, type: !3678, scopeLine: 3140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4405 = !DILocalVariable(name: "insn", arg: 1, scope: !4404, file: !3, line: 3139, type: !825)
!4406 = !DILocation(line: 3139, column: 30, scope: !4404)
!4407 = !DILocation(line: 3141, column: 16, scope: !4404)
!4408 = !DILocation(line: 3142, column: 17, scope: !4404)
!4409 = !DILocation(line: 3142, column: 3, scope: !4404)
!4410 = !DILocation(line: 3143, column: 1, scope: !4404)
!4411 = distinct !DISubprogram(name: "try_bitmap_cache", scope: !3, file: !3, line: 2325, type: !4412, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4412 = !DISubroutineType(types: !4413)
!4413 = !{!1057, !2055, !2132, !1057, !4414}
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!4415 = !DILocalVariable(name: "expr", arg: 1, scope: !4411, file: !3, line: 2325, type: !2055)
!4416 = !DILocation(line: 2325, column: 26, scope: !4411)
!4417 = !DILocalVariable(name: "insn", arg: 2, scope: !4411, file: !3, line: 2325, type: !2132)
!4418 = !DILocation(line: 2325, column: 39, scope: !4411)
!4419 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !4411, file: !3, line: 2326, type: !1057)
!4420 = !DILocation(line: 2326, column: 24, scope: !4411)
!4421 = !DILocalVariable(name: "res", arg: 4, scope: !4411, file: !3, line: 2327, type: !4414)
!4422 = !DILocation(line: 2327, column: 42, scope: !4411)
!4423 = !DILocalVariable(name: "expr_uid", scope: !4411, file: !3, line: 2329, type: !849)
!4424 = !DILocation(line: 2329, column: 7, scope: !4411)
!4425 = !DILocation(line: 2329, column: 18, scope: !4411)
!4426 = !DILocation(line: 2332, column: 21, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 2332, column: 7)
!4428 = !DILocation(line: 2332, column: 48, scope: !4427)
!4429 = !DILocation(line: 2332, column: 7, scope: !4427)
!4430 = !DILocation(line: 2332, column: 7, scope: !4411)
!4431 = !DILocation(line: 2334, column: 25, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 2334, column: 11)
!4433 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 2333, column: 5)
!4434 = !DILocation(line: 2334, column: 49, scope: !4432)
!4435 = !DILocation(line: 2334, column: 11, scope: !4432)
!4436 = !DILocation(line: 2334, column: 11, scope: !4433)
!4437 = !DILocation(line: 2336, column: 15, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 2336, column: 15)
!4439 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 2335, column: 9)
!4440 = !DILocation(line: 2336, column: 29, scope: !4438)
!4441 = !DILocation(line: 2336, column: 15, scope: !4439)
!4442 = !DILocation(line: 2337, column: 13, scope: !4438)
!4443 = !DILocation(line: 2337, column: 13, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 2337, column: 13)
!4445 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 2337, column: 13)
!4446 = !DILocation(line: 2337, column: 13, scope: !4445)
!4447 = !DILocalVariable(name: "__j", scope: !4448, file: !3, line: 2337, type: !849)
!4448 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 2337, column: 13)
!4449 = !DILocation(line: 2337, column: 13, scope: !4448)
!4450 = !DILocalVariable(name: "__s", scope: !4448, file: !3, line: 2337, type: !817)
!4451 = !DILocation(line: 2338, column: 12, scope: !4439)
!4452 = !DILocation(line: 2338, column: 16, scope: !4439)
!4453 = !DILocation(line: 2339, column: 11, scope: !4439)
!4454 = !DILocation(line: 2343, column: 15, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 2343, column: 15)
!4456 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 2342, column: 9)
!4457 = !DILocation(line: 2343, column: 29, scope: !4455)
!4458 = !DILocation(line: 2343, column: 15, scope: !4456)
!4459 = !DILocation(line: 2344, column: 13, scope: !4455)
!4460 = !DILocation(line: 2344, column: 13, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 2344, column: 13)
!4462 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 2344, column: 13)
!4463 = !DILocation(line: 2344, column: 13, scope: !4462)
!4464 = !DILocalVariable(name: "__j", scope: !4465, file: !3, line: 2344, type: !849)
!4465 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 2344, column: 13)
!4466 = !DILocation(line: 2344, column: 13, scope: !4465)
!4467 = !DILocalVariable(name: "__s", scope: !4465, file: !3, line: 2344, type: !817)
!4468 = !DILocation(line: 2345, column: 12, scope: !4456)
!4469 = !DILocation(line: 2345, column: 16, scope: !4456)
!4470 = !DILocation(line: 2346, column: 11, scope: !4456)
!4471 = !DILocation(line: 2349, column: 26, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 2349, column: 12)
!4473 = !DILocation(line: 2349, column: 50, scope: !4472)
!4474 = !DILocation(line: 2349, column: 12, scope: !4472)
!4475 = !DILocation(line: 2349, column: 12, scope: !4427)
!4476 = !DILocation(line: 2351, column: 11, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 2351, column: 11)
!4478 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 2350, column: 5)
!4479 = !DILocation(line: 2351, column: 11, scope: !4478)
!4480 = !DILocation(line: 2353, column: 15, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 2353, column: 15)
!4482 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 2352, column: 9)
!4483 = !DILocation(line: 2353, column: 29, scope: !4481)
!4484 = !DILocation(line: 2353, column: 15, scope: !4482)
!4485 = !DILocation(line: 2354, column: 13, scope: !4481)
!4486 = !DILocation(line: 2354, column: 13, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 2354, column: 13)
!4488 = distinct !DILexicalBlock(scope: !4481, file: !3, line: 2354, column: 13)
!4489 = !DILocation(line: 2354, column: 13, scope: !4488)
!4490 = !DILocalVariable(name: "__j", scope: !4491, file: !3, line: 2354, type: !849)
!4491 = distinct !DILexicalBlock(scope: !4487, file: !3, line: 2354, column: 13)
!4492 = !DILocation(line: 2354, column: 13, scope: !4491)
!4493 = !DILocalVariable(name: "__s", scope: !4491, file: !3, line: 2354, type: !817)
!4494 = !DILocation(line: 2355, column: 12, scope: !4482)
!4495 = !DILocation(line: 2355, column: 16, scope: !4482)
!4496 = !DILocation(line: 2356, column: 11, scope: !4482)
!4497 = !DILocation(line: 2360, column: 9, scope: !4477)
!4498 = !DILocation(line: 2360, column: 38, scope: !4477)
!4499 = !DILocation(line: 2365, column: 11, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 2365, column: 11)
!4501 = !DILocation(line: 2365, column: 11, scope: !4478)
!4502 = !DILocation(line: 2367, column: 15, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 2367, column: 15)
!4504 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2366, column: 9)
!4505 = !DILocation(line: 2367, column: 29, scope: !4503)
!4506 = !DILocation(line: 2367, column: 15, scope: !4504)
!4507 = !DILocation(line: 2368, column: 13, scope: !4503)
!4508 = !DILocation(line: 2368, column: 13, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 2368, column: 13)
!4510 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 2368, column: 13)
!4511 = !DILocation(line: 2368, column: 13, scope: !4510)
!4512 = !DILocalVariable(name: "__j", scope: !4513, file: !3, line: 2368, type: !849)
!4513 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 2368, column: 13)
!4514 = !DILocation(line: 2368, column: 13, scope: !4513)
!4515 = !DILocalVariable(name: "__s", scope: !4513, file: !3, line: 2368, type: !817)
!4516 = !DILocation(line: 2369, column: 12, scope: !4504)
!4517 = !DILocation(line: 2369, column: 16, scope: !4504)
!4518 = !DILocation(line: 2370, column: 11, scope: !4504)
!4519 = !DILocation(line: 2374, column: 15, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 2374, column: 15)
!4521 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2373, column: 9)
!4522 = !DILocation(line: 2374, column: 29, scope: !4520)
!4523 = !DILocation(line: 2374, column: 15, scope: !4521)
!4524 = !DILocation(line: 2375, column: 13, scope: !4520)
!4525 = !DILocation(line: 2375, column: 13, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 2375, column: 13)
!4527 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 2375, column: 13)
!4528 = !DILocation(line: 2375, column: 13, scope: !4527)
!4529 = !DILocalVariable(name: "__j", scope: !4530, file: !3, line: 2375, type: !849)
!4530 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 2375, column: 13)
!4531 = !DILocation(line: 2375, column: 13, scope: !4530)
!4532 = !DILocalVariable(name: "__s", scope: !4530, file: !3, line: 2375, type: !817)
!4533 = !DILocation(line: 2377, column: 12, scope: !4521)
!4534 = !DILocation(line: 2377, column: 16, scope: !4521)
!4535 = !DILocation(line: 2378, column: 11, scope: !4521)
!4536 = !DILocation(line: 2382, column: 3, scope: !4411)
!4537 = !DILocation(line: 2383, column: 1, scope: !4411)
!4538 = distinct !DISubprogram(name: "try_transformation_cache", scope: !3, file: !3, line: 2388, type: !4539, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!1057, !2055, !2132, !4414}
!4541 = !DILocalVariable(name: "expr", arg: 1, scope: !4538, file: !3, line: 2388, type: !2055)
!4542 = !DILocation(line: 2388, column: 34, scope: !4538)
!4543 = !DILocalVariable(name: "insn", arg: 2, scope: !4538, file: !3, line: 2388, type: !2132)
!4544 = !DILocation(line: 2388, column: 47, scope: !4538)
!4545 = !DILocalVariable(name: "res", arg: 3, scope: !4538, file: !3, line: 2389, type: !4414)
!4546 = !DILocation(line: 2389, column: 50, scope: !4538)
!4547 = !DILocalVariable(name: "pti", scope: !4538, file: !3, line: 2391, type: !2133)
!4548 = !DILocation(line: 2391, column: 29, scope: !4538)
!4549 = !DILocation(line: 2393, column: 26, scope: !4538)
!4550 = !DILocation(line: 2394, column: 27, scope: !4538)
!4551 = !DILocation(line: 2394, column: 26, scope: !4538)
!4552 = !DILocation(line: 2395, column: 26, scope: !4538)
!4553 = !DILocation(line: 2393, column: 5, scope: !4538)
!4554 = !DILocation(line: 2392, column: 7, scope: !4538)
!4555 = !DILocation(line: 2396, column: 7, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 2396, column: 7)
!4557 = !DILocation(line: 2396, column: 7, scope: !4538)
!4558 = !DILocation(line: 2401, column: 32, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2397, column: 5)
!4560 = !DILocation(line: 2402, column: 31, scope: !4559)
!4561 = !DILocation(line: 2402, column: 48, scope: !4559)
!4562 = !DILocation(line: 2402, column: 53, scope: !4559)
!4563 = !DILocation(line: 2403, column: 31, scope: !4559)
!4564 = !DILocation(line: 2403, column: 36, scope: !4559)
!4565 = !DILocation(line: 2403, column: 47, scope: !4559)
!4566 = !DILocation(line: 2403, column: 52, scope: !4559)
!4567 = !DILocation(line: 2404, column: 31, scope: !4559)
!4568 = !DILocation(line: 2401, column: 7, scope: !4559)
!4569 = !DILocation(line: 2406, column: 11, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 2406, column: 11)
!4571 = !DILocation(line: 2406, column: 11, scope: !4559)
!4572 = !DILocation(line: 2407, column: 38, scope: !4570)
!4573 = !DILocation(line: 2407, column: 43, scope: !4570)
!4574 = !DILocation(line: 2407, column: 26, scope: !4570)
!4575 = !DILocation(line: 2407, column: 9, scope: !4570)
!4576 = !DILocation(line: 2407, column: 14, scope: !4570)
!4577 = !DILocation(line: 2407, column: 24, scope: !4570)
!4578 = !DILocation(line: 2408, column: 29, scope: !4559)
!4579 = !DILocation(line: 2408, column: 35, scope: !4559)
!4580 = !DILocation(line: 2408, column: 40, scope: !4559)
!4581 = !DILocation(line: 2408, column: 7, scope: !4559)
!4582 = !DILocation(line: 2409, column: 11, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 2409, column: 11)
!4584 = !DILocation(line: 2409, column: 16, scope: !4583)
!4585 = !DILocation(line: 2409, column: 11, scope: !4559)
!4586 = !DILocation(line: 2410, column: 9, scope: !4583)
!4587 = !DILocation(line: 2410, column: 38, scope: !4583)
!4588 = !DILocation(line: 2411, column: 11, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 2411, column: 11)
!4590 = !DILocation(line: 2411, column: 16, scope: !4589)
!4591 = !DILocation(line: 2411, column: 21, scope: !4589)
!4592 = !DILocation(line: 2411, column: 11, scope: !4559)
!4593 = !DILocation(line: 2413, column: 38, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 2412, column: 9)
!4595 = !DILocation(line: 2413, column: 43, scope: !4594)
!4596 = !DILocation(line: 2413, column: 11, scope: !4594)
!4597 = !DILocation(line: 2413, column: 36, scope: !4594)
!4598 = !DILocation(line: 2414, column: 45, scope: !4594)
!4599 = !DILocation(line: 2414, column: 50, scope: !4594)
!4600 = !DILocation(line: 2414, column: 11, scope: !4594)
!4601 = !DILocation(line: 2414, column: 42, scope: !4594)
!4602 = !DILocation(line: 2415, column: 9, scope: !4594)
!4603 = !DILocation(line: 2417, column: 11, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 2417, column: 11)
!4605 = !DILocation(line: 2417, column: 25, scope: !4604)
!4606 = !DILocation(line: 2417, column: 11, scope: !4559)
!4607 = !DILocation(line: 2419, column: 11, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2418, column: 9)
!4609 = !DILocation(line: 2419, column: 11, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 2419, column: 11)
!4611 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2419, column: 11)
!4612 = !DILocation(line: 2419, column: 11, scope: !4611)
!4613 = !DILocalVariable(name: "__j", scope: !4614, file: !3, line: 2419, type: !849)
!4614 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 2419, column: 11)
!4615 = !DILocation(line: 2419, column: 11, scope: !4614)
!4616 = !DILocalVariable(name: "__s", scope: !4614, file: !3, line: 2419, type: !817)
!4617 = !DILocation(line: 2420, column: 22, scope: !4608)
!4618 = !DILocation(line: 2420, column: 11, scope: !4608)
!4619 = !DILocation(line: 2421, column: 11, scope: !4608)
!4620 = !DILocation(line: 2421, column: 11, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 2421, column: 11)
!4622 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2421, column: 11)
!4623 = !DILocation(line: 2421, column: 11, scope: !4622)
!4624 = !DILocalVariable(name: "__j", scope: !4625, file: !3, line: 2421, type: !849)
!4625 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 2421, column: 11)
!4626 = !DILocation(line: 2421, column: 11, scope: !4625)
!4627 = !DILocalVariable(name: "__s", scope: !4625, file: !3, line: 2421, type: !817)
!4628 = !DILocation(line: 2422, column: 9, scope: !4608)
!4629 = !DILocation(line: 2424, column: 8, scope: !4559)
!4630 = !DILocation(line: 2424, column: 12, scope: !4559)
!4631 = !DILocation(line: 2425, column: 7, scope: !4559)
!4632 = !DILocation(line: 2428, column: 3, scope: !4538)
!4633 = !DILocation(line: 2429, column: 1, scope: !4538)
!4634 = distinct !DISubprogram(name: "moveup_expr", scope: !3, file: !3, line: 2129, type: !4635, scopeLine: 2131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4635 = !DISubroutineType(types: !4636)
!4636 = !{!610, !2055, !2132, !1057, !4637}
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!4638 = !DILocalVariable(name: "expr", arg: 1, scope: !4634, file: !3, line: 2129, type: !2055)
!4639 = !DILocation(line: 2129, column: 21, scope: !4634)
!4640 = !DILocalVariable(name: "through_insn", arg: 2, scope: !4634, file: !3, line: 2129, type: !2132)
!4641 = !DILocation(line: 2129, column: 34, scope: !4634)
!4642 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !4634, file: !3, line: 2129, type: !1057)
!4643 = !DILocation(line: 2129, column: 53, scope: !4634)
!4644 = !DILocalVariable(name: "ptrans_type", arg: 4, scope: !4634, file: !3, line: 2130, type: !4637)
!4645 = !DILocation(line: 2130, column: 36, scope: !4634)
!4646 = !DILocalVariable(name: "vi", scope: !4634, file: !3, line: 2132, type: !2061)
!4647 = !DILocation(line: 2132, column: 11, scope: !4634)
!4648 = !DILocation(line: 2132, column: 16, scope: !4634)
!4649 = !DILocalVariable(name: "insn", scope: !4634, file: !3, line: 2133, type: !2132)
!4650 = !DILocation(line: 2133, column: 10, scope: !4634)
!4651 = !DILocation(line: 2133, column: 17, scope: !4634)
!4652 = !DILocalVariable(name: "was_changed", scope: !4634, file: !3, line: 2134, type: !1057)
!4653 = !DILocation(line: 2134, column: 8, scope: !4634)
!4654 = !DILocalVariable(name: "as_rhs", scope: !4634, file: !3, line: 2135, type: !1057)
!4655 = !DILocation(line: 2135, column: 8, scope: !4634)
!4656 = !DILocalVariable(name: "has_dep_p", scope: !4634, file: !3, line: 2136, type: !4657)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!4658 = !DILocation(line: 2136, column: 9, scope: !4634)
!4659 = !DILocalVariable(name: "full_ds", scope: !4634, file: !3, line: 2137, type: !2089)
!4660 = !DILocation(line: 2137, column: 8, scope: !4634)
!4661 = !DILocation(line: 2140, column: 7, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2140, column: 7)
!4663 = !DILocation(line: 2140, column: 7, scope: !4634)
!4664 = !DILocation(line: 2141, column: 43, scope: !4662)
!4665 = !DILocation(line: 2141, column: 49, scope: !4662)
!4666 = !DILocation(line: 2141, column: 12, scope: !4662)
!4667 = !DILocation(line: 2141, column: 5, scope: !4662)
!4668 = !DILocation(line: 2144, column: 7, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2144, column: 7)
!4670 = !DILocation(line: 2144, column: 7, scope: !4634)
!4671 = !DILocation(line: 2149, column: 32, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 2149, column: 11)
!4673 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 2145, column: 5)
!4674 = !DILocation(line: 2149, column: 11, scope: !4672)
!4675 = !DILocation(line: 2149, column: 11, scope: !4673)
!4676 = !DILocalVariable(name: "fallthru_bb", scope: !4677, file: !3, line: 2151, type: !1362)
!4677 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 2150, column: 9)
!4678 = !DILocation(line: 2151, column: 23, scope: !4677)
!4679 = !DILocation(line: 2155, column: 36, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 2155, column: 15)
!4681 = !DILocation(line: 2155, column: 15, scope: !4680)
!4682 = !DILocation(line: 2156, column: 15, scope: !4680)
!4683 = !DILocation(line: 2156, column: 49, scope: !4680)
!4684 = !DILocation(line: 2156, column: 18, scope: !4680)
!4685 = !DILocation(line: 2155, column: 15, scope: !4677)
!4686 = !DILocation(line: 2157, column: 13, scope: !4680)
!4687 = !DILocation(line: 2160, column: 62, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 2160, column: 15)
!4689 = !DILocation(line: 2160, column: 15, scope: !4688)
!4690 = !DILocation(line: 2160, column: 15, scope: !4677)
!4691 = !DILocation(line: 2161, column: 13, scope: !4688)
!4692 = !DILocation(line: 2165, column: 51, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 2165, column: 15)
!4694 = !DILocation(line: 2165, column: 30, scope: !4693)
!4695 = !DILocation(line: 2165, column: 28, scope: !4693)
!4696 = !DILocation(line: 2165, column: 58, scope: !4693)
!4697 = !DILocation(line: 2166, column: 15, scope: !4693)
!4698 = !DILocation(line: 2166, column: 41, scope: !4693)
!4699 = !DILocation(line: 2166, column: 20, scope: !4693)
!4700 = !DILocation(line: 2165, column: 15, scope: !4677)
!4701 = !DILocation(line: 2167, column: 13, scope: !4693)
!4702 = !DILocation(line: 2171, column: 35, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 2171, column: 15)
!4704 = !DILocation(line: 2171, column: 17, scope: !4703)
!4705 = !DILocation(line: 2172, column: 15, scope: !4703)
!4706 = !DILocation(line: 2172, column: 52, scope: !4703)
!4707 = !DILocation(line: 2172, column: 58, scope: !4703)
!4708 = !DILocation(line: 2172, column: 20, scope: !4703)
!4709 = !DILocation(line: 2173, column: 8, scope: !4703)
!4710 = !DILocation(line: 2173, column: 13, scope: !4703)
!4711 = !DILocation(line: 2171, column: 15, scope: !4677)
!4712 = !DILocation(line: 2174, column: 13, scope: !4703)
!4713 = !DILocation(line: 2175, column: 9, scope: !4677)
!4714 = !DILocation(line: 2178, column: 11, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 2178, column: 11)
!4716 = !DILocation(line: 2179, column: 4, scope: !4715)
!4717 = !DILocation(line: 2179, column: 7, scope: !4715)
!4718 = !DILocation(line: 2179, column: 40, scope: !4715)
!4719 = !DILocation(line: 2179, column: 37, scope: !4715)
!4720 = !DILocation(line: 2178, column: 11, scope: !4673)
!4721 = !DILocation(line: 2180, column: 2, scope: !4715)
!4722 = !DILocation(line: 2188, column: 11, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 2188, column: 11)
!4724 = !DILocation(line: 2188, column: 11, scope: !4673)
!4725 = !DILocation(line: 2189, column: 2, scope: !4723)
!4726 = !DILocation(line: 2190, column: 5, scope: !4673)
!4727 = !DILocation(line: 2192, column: 5, scope: !4669)
!4728 = !DILocation(line: 2195, column: 7, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2195, column: 7)
!4730 = !DILocation(line: 2196, column: 7, scope: !4729)
!4731 = !DILocation(line: 2196, column: 10, scope: !4729)
!4732 = !DILocation(line: 2196, column: 43, scope: !4729)
!4733 = !DILocation(line: 2196, column: 40, scope: !4729)
!4734 = !DILocation(line: 2197, column: 7, scope: !4729)
!4735 = !DILocation(line: 2197, column: 51, scope: !4729)
!4736 = !DILocation(line: 2197, column: 57, scope: !4729)
!4737 = !DILocation(line: 2197, column: 10, scope: !4729)
!4738 = !DILocation(line: 2195, column: 7, scope: !4634)
!4739 = !DILocation(line: 2198, column: 5, scope: !4729)
!4740 = !DILocation(line: 2201, column: 23, scope: !4634)
!4741 = !DILocation(line: 2202, column: 31, scope: !4634)
!4742 = !DILocation(line: 2202, column: 37, scope: !4634)
!4743 = !DILocation(line: 2202, column: 13, scope: !4634)
!4744 = !DILocation(line: 2202, column: 11, scope: !4634)
!4745 = !DILocation(line: 2203, column: 7, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2203, column: 7)
!4747 = !DILocation(line: 2203, column: 15, scope: !4746)
!4748 = !DILocation(line: 2203, column: 7, scope: !4634)
!4749 = !DILocation(line: 2205, column: 12, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 2205, column: 11)
!4751 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 2204, column: 5)
!4752 = !DILocation(line: 2205, column: 11, scope: !4751)
!4753 = !DILocation(line: 2206, column: 2, scope: !4750)
!4754 = !DILocation(line: 2207, column: 5, scope: !4751)
!4755 = !DILocation(line: 2212, column: 11, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 2212, column: 11)
!4757 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 2209, column: 5)
!4758 = !DILocation(line: 2212, column: 11, scope: !4757)
!4759 = !DILocation(line: 2213, column: 2, scope: !4756)
!4760 = !DILocation(line: 2216, column: 7, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2216, column: 7)
!4762 = !DILocation(line: 2216, column: 15, scope: !4761)
!4763 = !DILocation(line: 2216, column: 20, scope: !4761)
!4764 = !DILocation(line: 2216, column: 44, scope: !4761)
!4765 = !DILocation(line: 2216, column: 23, scope: !4761)
!4766 = !DILocation(line: 2216, column: 7, scope: !4634)
!4767 = !DILocalVariable(name: "res", scope: !4768, file: !3, line: 2218, type: !849)
!4768 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 2217, column: 5)
!4769 = !DILocation(line: 2218, column: 11, scope: !4768)
!4770 = !DILocation(line: 2220, column: 29, scope: !4768)
!4771 = !DILocation(line: 2220, column: 35, scope: !4768)
!4772 = !DILocation(line: 2220, column: 13, scope: !4768)
!4773 = !DILocation(line: 2220, column: 11, scope: !4768)
!4774 = !DILocation(line: 2221, column: 11, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 2221, column: 11)
!4776 = !DILocation(line: 2221, column: 15, scope: !4775)
!4777 = !DILocation(line: 2221, column: 11, scope: !4768)
!4778 = !DILocation(line: 2224, column: 19, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 2222, column: 2)
!4780 = !DILocation(line: 2225, column: 26, scope: !4779)
!4781 = !DILocation(line: 2225, column: 30, scope: !4779)
!4782 = !DILocation(line: 2225, column: 25, scope: !4779)
!4783 = !DILocation(line: 2225, column: 23, scope: !4779)
!4784 = !DILocation(line: 2226, column: 15, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 2226, column: 15)
!4786 = !DILocation(line: 2226, column: 19, scope: !4785)
!4787 = !DILocation(line: 2226, column: 15, scope: !4779)
!4788 = !DILocation(line: 2227, column: 33, scope: !4785)
!4789 = !DILocation(line: 2227, column: 13, scope: !4785)
!4790 = !DILocation(line: 2228, column: 15, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 2228, column: 15)
!4792 = !DILocation(line: 2228, column: 15, scope: !4779)
!4793 = !DILocation(line: 2229, column: 14, scope: !4791)
!4794 = !DILocation(line: 2229, column: 26, scope: !4791)
!4795 = !DILocation(line: 2229, column: 13, scope: !4791)
!4796 = !DILocation(line: 2230, column: 4, scope: !4779)
!4797 = !DILocation(line: 2231, column: 2, scope: !4779)
!4798 = !DILocation(line: 2232, column: 5, scope: !4768)
!4799 = !DILocation(line: 2234, column: 7, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2234, column: 7)
!4801 = !DILocation(line: 2234, column: 7, scope: !4634)
!4802 = !DILocation(line: 2236, column: 5, scope: !4800)
!4803 = !DILocation(line: 2238, column: 7, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2238, column: 7)
!4805 = !DILocation(line: 2238, column: 7, scope: !4634)
!4806 = !DILocation(line: 2243, column: 12, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 2243, column: 11)
!4808 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 2239, column: 5)
!4809 = !DILocation(line: 2243, column: 37, scope: !4807)
!4810 = !DILocation(line: 2243, column: 41, scope: !4807)
!4811 = !DILocation(line: 2243, column: 11, scope: !4808)
!4812 = !DILocation(line: 2244, column: 9, scope: !4807)
!4813 = !DILocation(line: 2246, column: 7, scope: !4808)
!4814 = !DILocation(line: 2246, column: 36, scope: !4808)
!4815 = !DILocation(line: 2247, column: 27, scope: !4808)
!4816 = !DILocation(line: 2248, column: 14, scope: !4808)
!4817 = !DILocation(line: 2249, column: 5, scope: !4808)
!4818 = !DILocation(line: 2266, column: 7, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2266, column: 7)
!4820 = !DILocation(line: 2266, column: 7, scope: !4634)
!4821 = !DILocalVariable(name: "rhs_dsp", scope: !4822, file: !3, line: 2268, type: !4657)
!4822 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 2267, column: 5)
!4823 = !DILocation(line: 2268, column: 13, scope: !4822)
!4824 = !DILocation(line: 2268, column: 24, scope: !4822)
!4825 = !DILocation(line: 2271, column: 7, scope: !4822)
!4826 = !DILocation(line: 2273, column: 33, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4822, file: !3, line: 2273, column: 11)
!4828 = !DILocation(line: 2273, column: 32, scope: !4827)
!4829 = !DILocation(line: 2273, column: 11, scope: !4827)
!4830 = !DILocation(line: 2273, column: 11, scope: !4822)
!4831 = !DILocalVariable(name: "res", scope: !4832, file: !3, line: 2275, type: !849)
!4832 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2274, column: 2)
!4833 = !DILocation(line: 2275, column: 15, scope: !4832)
!4834 = !DILocation(line: 2277, column: 33, scope: !4832)
!4835 = !DILocation(line: 2277, column: 40, scope: !4832)
!4836 = !DILocation(line: 2277, column: 39, scope: !4832)
!4837 = !DILocation(line: 2277, column: 17, scope: !4832)
!4838 = !DILocation(line: 2277, column: 15, scope: !4832)
!4839 = !DILocation(line: 2278, column: 15, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 2278, column: 15)
!4841 = !DILocation(line: 2278, column: 19, scope: !4840)
!4842 = !DILocation(line: 2278, column: 15, scope: !4832)
!4843 = !DILocation(line: 2281, column: 16, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4840, file: !3, line: 2279, column: 13)
!4845 = !DILocation(line: 2281, column: 24, scope: !4844)
!4846 = !DILocation(line: 2282, column: 30, scope: !4844)
!4847 = !DILocation(line: 2282, column: 34, scope: !4844)
!4848 = !DILocation(line: 2282, column: 29, scope: !4844)
!4849 = !DILocation(line: 2282, column: 27, scope: !4844)
!4850 = !DILocation(line: 2283, column: 19, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 2283, column: 19)
!4852 = !DILocation(line: 2283, column: 23, scope: !4851)
!4853 = !DILocation(line: 2283, column: 19, scope: !4844)
!4854 = !DILocation(line: 2284, column: 37, scope: !4851)
!4855 = !DILocation(line: 2284, column: 17, scope: !4851)
!4856 = !DILocation(line: 2285, column: 19, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 2285, column: 19)
!4858 = !DILocation(line: 2285, column: 19, scope: !4844)
!4859 = !DILocation(line: 2286, column: 18, scope: !4857)
!4860 = !DILocation(line: 2286, column: 30, scope: !4857)
!4861 = !DILocation(line: 2286, column: 17, scope: !4857)
!4862 = !DILocation(line: 2287, column: 13, scope: !4844)
!4863 = !DILocation(line: 2289, column: 6, scope: !4840)
!4864 = !DILocation(line: 2290, column: 2, scope: !4832)
!4865 = !DILocation(line: 2291, column: 42, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2291, column: 16)
!4867 = !DILocation(line: 2292, column: 43, scope: !4866)
!4868 = !DILocation(line: 2292, column: 42, scope: !4866)
!4869 = !DILocation(line: 2291, column: 16, scope: !4866)
!4870 = !DILocation(line: 2293, column: 16, scope: !4866)
!4871 = !DILocation(line: 2293, column: 43, scope: !4866)
!4872 = !DILocation(line: 2293, column: 49, scope: !4866)
!4873 = !DILocation(line: 2293, column: 19, scope: !4866)
!4874 = !DILocation(line: 2291, column: 16, scope: !4827)
!4875 = !DILocation(line: 2297, column: 11, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 2294, column: 2)
!4877 = !DILocation(line: 2298, column: 23, scope: !4876)
!4878 = !DILocation(line: 2299, column: 15, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 2299, column: 15)
!4880 = !DILocation(line: 2299, column: 15, scope: !4876)
!4881 = !DILocation(line: 2300, column: 14, scope: !4879)
!4882 = !DILocation(line: 2300, column: 26, scope: !4879)
!4883 = !DILocation(line: 2300, column: 13, scope: !4879)
!4884 = !DILocation(line: 2301, column: 11, scope: !4876)
!4885 = !DILocation(line: 2301, column: 39, scope: !4876)
!4886 = !DILocation(line: 2302, column: 2, scope: !4876)
!4887 = !DILocation(line: 2304, column: 2, scope: !4866)
!4888 = !DILocation(line: 2305, column: 5, scope: !4822)
!4889 = !DILocation(line: 2310, column: 7, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2310, column: 7)
!4891 = !DILocation(line: 2310, column: 7, scope: !4634)
!4892 = !DILocation(line: 2311, column: 5, scope: !4890)
!4893 = !DILocation(line: 2313, column: 11, scope: !4634)
!4894 = !DILocation(line: 2315, column: 14, scope: !4634)
!4895 = !DILocation(line: 2313, column: 3, scope: !4634)
!4896 = !DILocation(line: 2318, column: 1, scope: !4634)
!4897 = distinct !DISubprogram(name: "update_bitmap_cache", scope: !3, file: !3, line: 2433, type: !4898, scopeLine: 2435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{null, !2055, !2132, !1057, !610}
!4900 = !DILocalVariable(name: "expr", arg: 1, scope: !4897, file: !3, line: 2433, type: !2055)
!4901 = !DILocation(line: 2433, column: 29, scope: !4897)
!4902 = !DILocalVariable(name: "insn", arg: 2, scope: !4897, file: !3, line: 2433, type: !2132)
!4903 = !DILocation(line: 2433, column: 42, scope: !4897)
!4904 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !4897, file: !3, line: 2433, type: !1057)
!4905 = !DILocation(line: 2433, column: 53, scope: !4897)
!4906 = !DILocalVariable(name: "res", arg: 4, scope: !4897, file: !3, line: 2434, type: !610)
!4907 = !DILocation(line: 2434, column: 44, scope: !4897)
!4908 = !DILocalVariable(name: "expr_uid", scope: !4897, file: !3, line: 2436, type: !849)
!4909 = !DILocation(line: 2436, column: 7, scope: !4897)
!4910 = !DILocation(line: 2436, column: 18, scope: !4897)
!4911 = !DILocation(line: 2440, column: 7, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 2440, column: 7)
!4913 = !DILocation(line: 2440, column: 7, scope: !4897)
!4914 = !DILocation(line: 2441, column: 5, scope: !4912)
!4915 = !DILocation(line: 2443, column: 7, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 2443, column: 7)
!4917 = !DILocation(line: 2443, column: 11, scope: !4916)
!4918 = !DILocation(line: 2443, column: 7, scope: !4897)
!4919 = !DILocation(line: 2445, column: 23, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 2444, column: 5)
!4921 = !DILocation(line: 2445, column: 50, scope: !4920)
!4922 = !DILocation(line: 2445, column: 7, scope: !4920)
!4923 = !DILocation(line: 2446, column: 23, scope: !4920)
!4924 = !DILocation(line: 2446, column: 47, scope: !4920)
!4925 = !DILocation(line: 2446, column: 7, scope: !4920)
!4926 = !DILocation(line: 2447, column: 5, scope: !4920)
!4927 = !DILocation(line: 2448, column: 12, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 2448, column: 12)
!4929 = !DILocation(line: 2448, column: 16, scope: !4928)
!4930 = !DILocation(line: 2448, column: 12, scope: !4916)
!4931 = !DILocation(line: 2450, column: 23, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 2449, column: 5)
!4933 = !DILocation(line: 2450, column: 50, scope: !4932)
!4934 = !DILocation(line: 2450, column: 7, scope: !4932)
!4935 = !DILocation(line: 2451, column: 25, scope: !4932)
!4936 = !DILocation(line: 2451, column: 49, scope: !4932)
!4937 = !DILocation(line: 2451, column: 7, scope: !4932)
!4938 = !DILocation(line: 2452, column: 5, scope: !4932)
!4939 = !DILocation(line: 2453, column: 12, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 2453, column: 12)
!4941 = !DILocation(line: 2453, column: 16, scope: !4940)
!4942 = !DILocation(line: 2453, column: 12, scope: !4928)
!4943 = !DILocation(line: 2455, column: 25, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 2454, column: 5)
!4945 = !DILocation(line: 2455, column: 52, scope: !4944)
!4946 = !DILocation(line: 2455, column: 7, scope: !4944)
!4947 = !DILocation(line: 2456, column: 23, scope: !4944)
!4948 = !DILocation(line: 2456, column: 47, scope: !4944)
!4949 = !DILocation(line: 2456, column: 7, scope: !4944)
!4950 = !DILocation(line: 2457, column: 5, scope: !4944)
!4951 = !DILocation(line: 2459, column: 5, scope: !4940)
!4952 = !DILocation(line: 2460, column: 1, scope: !4897)
!4953 = distinct !DISubprogram(name: "update_transformation_cache", scope: !3, file: !3, line: 2465, type: !4954, scopeLine: 2469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!4954 = !DISubroutineType(types: !4955)
!4955 = !{null, !2055, !2132, !1057, !397, !2061}
!4956 = !DILocalVariable(name: "expr", arg: 1, scope: !4953, file: !3, line: 2465, type: !2055)
!4957 = !DILocation(line: 2465, column: 37, scope: !4953)
!4958 = !DILocalVariable(name: "insn", arg: 2, scope: !4953, file: !3, line: 2465, type: !2132)
!4959 = !DILocation(line: 2465, column: 50, scope: !4953)
!4960 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !4953, file: !3, line: 2466, type: !1057)
!4961 = !DILocation(line: 2466, column: 35, scope: !4953)
!4962 = !DILocalVariable(name: "trans_type", arg: 4, scope: !4953, file: !3, line: 2467, type: !397)
!4963 = !DILocation(line: 2467, column: 52, scope: !4953)
!4964 = !DILocalVariable(name: "expr_old_vinsn", arg: 5, scope: !4953, file: !3, line: 2468, type: !2061)
!4965 = !DILocation(line: 2468, column: 38, scope: !4953)
!4966 = !DILocalVariable(name: "pti", scope: !4953, file: !3, line: 2470, type: !2133)
!4967 = !DILocation(line: 2470, column: 29, scope: !4953)
!4968 = !DILocation(line: 2472, column: 7, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 2472, column: 7)
!4970 = !DILocation(line: 2472, column: 7, scope: !4953)
!4971 = !DILocation(line: 2473, column: 5, scope: !4969)
!4972 = !DILocation(line: 2475, column: 9, scope: !4953)
!4973 = !DILocation(line: 2475, column: 7, scope: !4953)
!4974 = !DILocation(line: 2476, column: 20, scope: !4953)
!4975 = !DILocation(line: 2476, column: 3, scope: !4953)
!4976 = !DILocation(line: 2476, column: 8, scope: !4953)
!4977 = !DILocation(line: 2476, column: 18, scope: !4953)
!4978 = !DILocation(line: 2477, column: 20, scope: !4953)
!4979 = !DILocation(line: 2477, column: 3, scope: !4953)
!4980 = !DILocation(line: 2477, column: 8, scope: !4953)
!4981 = !DILocation(line: 2477, column: 18, scope: !4953)
!4982 = !DILocation(line: 2478, column: 15, scope: !4953)
!4983 = !DILocation(line: 2478, column: 3, scope: !4953)
!4984 = !DILocation(line: 2478, column: 8, scope: !4953)
!4985 = !DILocation(line: 2478, column: 13, scope: !4953)
!4986 = !DILocation(line: 2479, column: 30, scope: !4953)
!4987 = !DILocation(line: 2479, column: 3, scope: !4953)
!4988 = !DILocation(line: 2479, column: 8, scope: !4953)
!4989 = !DILocation(line: 2479, column: 28, scope: !4953)
!4990 = !DILocation(line: 2480, column: 13, scope: !4953)
!4991 = !DILocation(line: 2480, column: 3, scope: !4953)
!4992 = !DILocation(line: 2480, column: 8, scope: !4953)
!4993 = !DILocation(line: 2480, column: 11, scope: !4953)
!4994 = !DILocation(line: 2481, column: 22, scope: !4953)
!4995 = !DILocation(line: 2481, column: 3, scope: !4953)
!4996 = !DILocation(line: 2481, column: 8, scope: !4953)
!4997 = !DILocation(line: 2481, column: 20, scope: !4953)
!4998 = !DILocation(line: 2482, column: 17, scope: !4953)
!4999 = !DILocation(line: 2482, column: 22, scope: !4953)
!5000 = !DILocation(line: 2482, column: 3, scope: !4953)
!5001 = !DILocation(line: 2483, column: 17, scope: !4953)
!5002 = !DILocation(line: 2483, column: 22, scope: !4953)
!5003 = !DILocation(line: 2483, column: 3, scope: !4953)
!5004 = !DILocation(line: 2487, column: 42, scope: !4953)
!5005 = !DILocation(line: 2485, column: 31, scope: !4953)
!5006 = !DILocation(line: 2486, column: 31, scope: !4953)
!5007 = !DILocation(line: 2486, column: 36, scope: !4953)
!5008 = !DILocation(line: 2485, column: 5, scope: !4953)
!5009 = !DILocation(line: 2484, column: 3, scope: !4953)
!5010 = !DILocation(line: 2487, column: 40, scope: !4953)
!5011 = !DILocation(line: 2488, column: 1, scope: !4953)
!5012 = distinct !DISubprogram(name: "moveup_expr_inside_insn_group", scope: !3, file: !3, line: 2019, type: !5013, scopeLine: 2020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5013 = !DISubroutineType(types: !5014)
!5014 = !{!610, !2055, !2132}
!5015 = !DILocalVariable(name: "expr", arg: 1, scope: !5012, file: !3, line: 2019, type: !2055)
!5016 = !DILocation(line: 2019, column: 39, scope: !5012)
!5017 = !DILocalVariable(name: "through_insn", arg: 2, scope: !5012, file: !3, line: 2019, type: !2132)
!5018 = !DILocation(line: 2019, column: 52, scope: !5012)
!5019 = !DILocalVariable(name: "vi", scope: !5012, file: !3, line: 2021, type: !2061)
!5020 = !DILocation(line: 2021, column: 11, scope: !5012)
!5021 = !DILocation(line: 2021, column: 16, scope: !5012)
!5022 = !DILocalVariable(name: "has_dep_p", scope: !5012, file: !3, line: 2022, type: !4657)
!5023 = !DILocation(line: 2022, column: 9, scope: !5012)
!5024 = !DILocalVariable(name: "full_ds", scope: !5012, file: !3, line: 2023, type: !2089)
!5025 = !DILocation(line: 2023, column: 8, scope: !5012)
!5026 = !DILocation(line: 2026, column: 3, scope: !5012)
!5027 = !DILocation(line: 2028, column: 31, scope: !5012)
!5028 = !DILocation(line: 2028, column: 37, scope: !5012)
!5029 = !DILocation(line: 2028, column: 13, scope: !5012)
!5030 = !DILocation(line: 2028, column: 11, scope: !5012)
!5031 = !DILocation(line: 2029, column: 7, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 2029, column: 7)
!5033 = !DILocation(line: 2029, column: 15, scope: !5032)
!5034 = !DILocation(line: 2029, column: 7, scope: !5012)
!5035 = !DILocation(line: 2030, column: 5, scope: !5032)
!5036 = !DILocation(line: 2033, column: 7, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 2033, column: 7)
!5038 = !DILocation(line: 2033, column: 7, scope: !5012)
!5039 = !DILocation(line: 2036, column: 7, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 2034, column: 5)
!5041 = !DILocation(line: 2038, column: 37, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 2038, column: 11)
!5043 = !DILocation(line: 2039, column: 37, scope: !5042)
!5044 = !DILocation(line: 2038, column: 11, scope: !5042)
!5045 = !DILocation(line: 2040, column: 11, scope: !5042)
!5046 = !DILocation(line: 2040, column: 38, scope: !5042)
!5047 = !DILocation(line: 2040, column: 44, scope: !5042)
!5048 = !DILocation(line: 2040, column: 14, scope: !5042)
!5049 = !DILocation(line: 2038, column: 11, scope: !5040)
!5050 = !DILocation(line: 2042, column: 11, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5042, file: !3, line: 2041, column: 9)
!5052 = !DILocation(line: 2042, column: 39, scope: !5051)
!5053 = !DILocation(line: 2043, column: 11, scope: !5051)
!5054 = !DILocation(line: 2048, column: 7, scope: !5040)
!5055 = !DILocation(line: 2052, column: 7, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 2052, column: 7)
!5057 = !DILocation(line: 2052, column: 7, scope: !5012)
!5058 = !DILocation(line: 2053, column: 5, scope: !5056)
!5059 = !DILocation(line: 2058, column: 3, scope: !5012)
!5060 = !DILocation(line: 2059, column: 3, scope: !5012)
!5061 = !DILocation(line: 2060, column: 1, scope: !5012)
!5062 = distinct !DISubprogram(name: "moving_insn_creates_bookkeeping_block_p", scope: !3, file: !3, line: 2077, type: !5063, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{!1057, !2132, !2132}
!5065 = !DILocalVariable(name: "insn", arg: 1, scope: !5062, file: !3, line: 2077, type: !2132)
!5066 = !DILocation(line: 2077, column: 49, scope: !5062)
!5067 = !DILocalVariable(name: "through_insn", arg: 2, scope: !5062, file: !3, line: 2078, type: !2132)
!5068 = !DILocation(line: 2078, column: 14, scope: !5062)
!5069 = !DILocalVariable(name: "bbi", scope: !5062, file: !3, line: 2080, type: !1362)
!5070 = !DILocation(line: 2080, column: 15, scope: !5062)
!5071 = !DILocalVariable(name: "bbt", scope: !5062, file: !3, line: 2080, type: !1362)
!5072 = !DILocation(line: 2080, column: 20, scope: !5062)
!5073 = !DILocalVariable(name: "e1", scope: !5062, file: !3, line: 2081, type: !1379)
!5074 = !DILocation(line: 2081, column: 8, scope: !5062)
!5075 = !DILocalVariable(name: "e2", scope: !5062, file: !3, line: 2081, type: !1379)
!5076 = !DILocation(line: 2081, column: 12, scope: !5062)
!5077 = !DILocalVariable(name: "ei1", scope: !5062, file: !3, line: 2082, type: !2654)
!5078 = !DILocation(line: 2082, column: 17, scope: !5062)
!5079 = !DILocalVariable(name: "ei2", scope: !5062, file: !3, line: 2082, type: !2654)
!5080 = !DILocation(line: 2082, column: 22, scope: !5062)
!5081 = !DILocation(line: 2084, column: 55, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 2084, column: 7)
!5083 = !DILocation(line: 2084, column: 8, scope: !5082)
!5084 = !DILocation(line: 2084, column: 7, scope: !5062)
!5085 = !DILocation(line: 2086, column: 11, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2086, column: 11)
!5087 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 2085, column: 5)
!5088 = !DILocation(line: 2086, column: 25, scope: !5086)
!5089 = !DILocation(line: 2086, column: 11, scope: !5087)
!5090 = !DILocation(line: 2087, column: 2, scope: !5086)
!5091 = !DILocation(line: 2087, column: 2, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 2087, column: 2)
!5093 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 2087, column: 2)
!5094 = !DILocation(line: 2087, column: 2, scope: !5093)
!5095 = !DILocalVariable(name: "__j", scope: !5096, file: !3, line: 2087, type: !849)
!5096 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 2087, column: 2)
!5097 = !DILocation(line: 2087, column: 2, scope: !5096)
!5098 = !DILocalVariable(name: "__s", scope: !5096, file: !3, line: 2087, type: !817)
!5099 = !DILocation(line: 2088, column: 7, scope: !5087)
!5100 = !DILocation(line: 2091, column: 9, scope: !5062)
!5101 = !DILocation(line: 2091, column: 7, scope: !5062)
!5102 = !DILocation(line: 2093, column: 7, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 2093, column: 7)
!5104 = !DILocation(line: 2093, column: 31, scope: !5103)
!5105 = !DILocation(line: 2093, column: 7, scope: !5062)
!5106 = !DILocation(line: 2095, column: 11, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 2095, column: 11)
!5108 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 2094, column: 5)
!5109 = !DILocation(line: 2095, column: 25, scope: !5107)
!5110 = !DILocation(line: 2095, column: 11, scope: !5108)
!5111 = !DILocation(line: 2096, column: 2, scope: !5107)
!5112 = !DILocation(line: 2096, column: 2, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 2096, column: 2)
!5114 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 2096, column: 2)
!5115 = !DILocation(line: 2096, column: 2, scope: !5114)
!5116 = !DILocalVariable(name: "__j", scope: !5117, file: !3, line: 2096, type: !849)
!5117 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2096, column: 2)
!5118 = !DILocation(line: 2096, column: 2, scope: !5117)
!5119 = !DILocalVariable(name: "__s", scope: !5117, file: !3, line: 2096, type: !817)
!5120 = !DILocation(line: 2097, column: 7, scope: !5108)
!5121 = !DILocation(line: 2100, column: 9, scope: !5062)
!5122 = !DILocation(line: 2100, column: 7, scope: !5062)
!5123 = !DILocation(line: 2102, column: 3, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 2102, column: 3)
!5125 = !DILocation(line: 2102, column: 3, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 2102, column: 3)
!5127 = !DILocation(line: 2104, column: 7, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5129, file: !3, line: 2104, column: 7)
!5129 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 2103, column: 5)
!5130 = !DILocation(line: 2104, column: 7, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 2104, column: 7)
!5132 = !DILocation(line: 2106, column: 36, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2106, column: 8)
!5134 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 2105, column: 2)
!5135 = !DILocation(line: 2106, column: 40, scope: !5133)
!5136 = !DILocation(line: 2106, column: 8, scope: !5133)
!5137 = !DILocation(line: 2106, column: 8, scope: !5134)
!5138 = !DILocation(line: 2108, column: 12, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 2108, column: 12)
!5140 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 2107, column: 6)
!5141 = !DILocation(line: 2108, column: 26, scope: !5139)
!5142 = !DILocation(line: 2108, column: 12, scope: !5140)
!5143 = !DILocation(line: 2109, column: 3, scope: !5139)
!5144 = !DILocation(line: 2109, column: 3, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 2109, column: 3)
!5146 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 2109, column: 3)
!5147 = !DILocation(line: 2109, column: 3, scope: !5146)
!5148 = !DILocalVariable(name: "__j", scope: !5149, file: !3, line: 2109, type: !849)
!5149 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 2109, column: 3)
!5150 = !DILocation(line: 2109, column: 3, scope: !5149)
!5151 = !DILocalVariable(name: "__s", scope: !5149, file: !3, line: 2109, type: !817)
!5152 = !DILocation(line: 2110, column: 8, scope: !5140)
!5153 = !DILocation(line: 2112, column: 2, scope: !5134)
!5154 = distinct !{!5154, !5127, !5155}
!5155 = !DILocation(line: 2112, column: 2, scope: !5128)
!5156 = !DILocation(line: 2113, column: 5, scope: !5129)
!5157 = distinct !{!5157, !5123, !5158}
!5158 = !DILocation(line: 2113, column: 5, scope: !5124)
!5159 = !DILocation(line: 2115, column: 7, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 2115, column: 7)
!5161 = !DILocation(line: 2115, column: 21, scope: !5160)
!5162 = !DILocation(line: 2115, column: 7, scope: !5062)
!5163 = !DILocation(line: 2116, column: 5, scope: !5160)
!5164 = !DILocation(line: 2116, column: 5, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 2116, column: 5)
!5166 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 2116, column: 5)
!5167 = !DILocation(line: 2116, column: 5, scope: !5166)
!5168 = !DILocalVariable(name: "__j", scope: !5169, file: !3, line: 2116, type: !849)
!5169 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 2116, column: 5)
!5170 = !DILocation(line: 2116, column: 5, scope: !5169)
!5171 = !DILocalVariable(name: "__s", scope: !5169, file: !3, line: 2116, type: !817)
!5172 = !DILocation(line: 2118, column: 3, scope: !5062)
!5173 = !DILocation(line: 2119, column: 1, scope: !5062)
!5174 = distinct !DISubprogram(name: "can_speculate_dep_p", scope: !3, file: !3, line: 1790, type: !5175, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5175 = !DISubroutineType(types: !5176)
!5176 = !{!1057, !2089}
!5177 = !DILocalVariable(name: "ds", arg: 1, scope: !5174, file: !3, line: 1790, type: !2089)
!5178 = !DILocation(line: 1790, column: 27, scope: !5174)
!5179 = !DILocation(line: 1792, column: 7, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 1792, column: 7)
!5181 = !DILocation(line: 1792, column: 17, scope: !5180)
!5182 = !DILocation(line: 1792, column: 7, scope: !5174)
!5183 = !DILocation(line: 1793, column: 5, scope: !5180)
!5184 = !DILocation(line: 1796, column: 6, scope: !5174)
!5185 = !DILocation(line: 1798, column: 7, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 1798, column: 7)
!5187 = !DILocation(line: 1798, column: 10, scope: !5186)
!5188 = !DILocation(line: 1798, column: 7, scope: !5174)
!5189 = !DILocation(line: 1799, column: 5, scope: !5186)
!5190 = !DILocalVariable(name: "spec_mask", scope: !5191, file: !3, line: 1804, type: !2089)
!5191 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 1801, column: 3)
!5192 = !DILocation(line: 1804, column: 10, scope: !5191)
!5193 = !DILocation(line: 1804, column: 22, scope: !5191)
!5194 = !DILocation(line: 1804, column: 33, scope: !5191)
!5195 = !DILocation(line: 1806, column: 10, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 1806, column: 9)
!5197 = !DILocation(line: 1806, column: 15, scope: !5196)
!5198 = !DILocation(line: 1806, column: 13, scope: !5196)
!5199 = !DILocation(line: 1806, column: 29, scope: !5196)
!5200 = !DILocation(line: 1806, column: 26, scope: !5196)
!5201 = !DILocation(line: 1806, column: 9, scope: !5191)
!5202 = !DILocation(line: 1807, column: 7, scope: !5196)
!5203 = !DILocation(line: 1810, column: 16, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 1810, column: 7)
!5205 = !DILocation(line: 1810, column: 7, scope: !5204)
!5206 = !DILocation(line: 1810, column: 22, scope: !5204)
!5207 = !DILocation(line: 1810, column: 33, scope: !5204)
!5208 = !DILocation(line: 1810, column: 20, scope: !5204)
!5209 = !DILocation(line: 1810, column: 7, scope: !5174)
!5210 = !DILocation(line: 1811, column: 5, scope: !5204)
!5211 = !DILocation(line: 1813, column: 3, scope: !5174)
!5212 = !DILocation(line: 1814, column: 1, scope: !5174)
!5213 = distinct !DISubprogram(name: "can_substitute_through_p", scope: !3, file: !3, line: 717, type: !5214, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5214 = !DISubroutineType(types: !5215)
!5215 = !{!1057, !2132, !2089}
!5216 = !DILocalVariable(name: "insn", arg: 1, scope: !5213, file: !3, line: 717, type: !2132)
!5217 = !DILocation(line: 717, column: 34, scope: !5213)
!5218 = !DILocalVariable(name: "ds", arg: 2, scope: !5213, file: !3, line: 717, type: !2089)
!5219 = !DILocation(line: 717, column: 45, scope: !5213)
!5220 = !DILocation(line: 720, column: 8, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 720, column: 7)
!5222 = !DILocation(line: 720, column: 11, scope: !5221)
!5223 = !DILocation(line: 721, column: 7, scope: !5221)
!5224 = !DILocation(line: 721, column: 11, scope: !5221)
!5225 = !DILocation(line: 721, column: 14, scope: !5221)
!5226 = !DILocation(line: 722, column: 7, scope: !5221)
!5227 = !DILocation(line: 722, column: 12, scope: !5221)
!5228 = !DILocation(line: 723, column: 7, scope: !5221)
!5229 = !DILocation(line: 723, column: 12, scope: !5221)
!5230 = !DILocation(line: 720, column: 7, scope: !5213)
!5231 = !DILocation(line: 724, column: 5, scope: !5221)
!5232 = !DILocation(line: 728, column: 7, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 728, column: 7)
!5234 = !DILocation(line: 729, column: 7, scope: !5233)
!5235 = !DILocation(line: 729, column: 10, scope: !5233)
!5236 = !DILocation(line: 728, column: 7, scope: !5213)
!5237 = !DILocation(line: 730, column: 5, scope: !5233)
!5238 = !DILocation(line: 731, column: 3, scope: !5213)
!5239 = !DILocation(line: 732, column: 1, scope: !5213)
!5240 = distinct !DISubprogram(name: "substitute_reg_in_expr", scope: !3, file: !3, line: 742, type: !5241, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5241 = !DISubroutineType(types: !5242)
!5242 = !{!1057, !2055, !2132, !1057}
!5243 = !DILocalVariable(name: "expr", arg: 1, scope: !5240, file: !3, line: 742, type: !2055)
!5244 = !DILocation(line: 742, column: 32, scope: !5240)
!5245 = !DILocalVariable(name: "insn", arg: 2, scope: !5240, file: !3, line: 742, type: !2132)
!5246 = !DILocation(line: 742, column: 45, scope: !5240)
!5247 = !DILocalVariable(name: "undo", arg: 3, scope: !5240, file: !3, line: 742, type: !1057)
!5248 = !DILocation(line: 742, column: 56, scope: !5240)
!5249 = !DILocalVariable(name: "where", scope: !5240, file: !3, line: 744, type: !5250)
!5250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!5251 = !DILocation(line: 744, column: 8, scope: !5240)
!5252 = !DILocalVariable(name: "new_insn_valid", scope: !5240, file: !3, line: 745, type: !1057)
!5253 = !DILocation(line: 745, column: 8, scope: !5240)
!5254 = !DILocalVariable(name: "vi", scope: !5240, file: !3, line: 746, type: !5255)
!5255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!5256 = !DILocation(line: 746, column: 12, scope: !5240)
!5257 = !DILocation(line: 746, column: 18, scope: !5240)
!5258 = !DILocalVariable(name: "has_rhs", scope: !5240, file: !3, line: 747, type: !1057)
!5259 = !DILocation(line: 747, column: 8, scope: !5240)
!5260 = !DILocation(line: 747, column: 18, scope: !5240)
!5261 = !DILocation(line: 747, column: 34, scope: !5240)
!5262 = !DILocalVariable(name: "old", scope: !5240, file: !3, line: 748, type: !825)
!5263 = !DILocation(line: 748, column: 7, scope: !5240)
!5264 = !DILocalVariable(name: "new_rtx", scope: !5240, file: !3, line: 748, type: !825)
!5265 = !DILocation(line: 748, column: 12, scope: !5240)
!5266 = !DILocation(line: 755, column: 12, scope: !5240)
!5267 = !DILocation(line: 756, column: 8, scope: !5240)
!5268 = !DILocation(line: 757, column: 8, scope: !5240)
!5269 = !DILocation(line: 755, column: 9, scope: !5240)
!5270 = !DILocation(line: 758, column: 9, scope: !5240)
!5271 = !DILocation(line: 758, column: 16, scope: !5240)
!5272 = !DILocation(line: 758, column: 34, scope: !5240)
!5273 = !DILocation(line: 758, column: 7, scope: !5240)
!5274 = !DILocation(line: 761, column: 34, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 761, column: 7)
!5276 = !DILocation(line: 761, column: 40, scope: !5275)
!5277 = !DILocation(line: 761, column: 39, scope: !5275)
!5278 = !DILocation(line: 761, column: 7, scope: !5275)
!5279 = !DILocation(line: 761, column: 7, scope: !5240)
!5280 = !DILocalVariable(name: "new_insn", scope: !5281, file: !3, line: 763, type: !825)
!5281 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 762, column: 5)
!5282 = !DILocation(line: 763, column: 11, scope: !5281)
!5283 = !DILocalVariable(name: "where_replace", scope: !5281, file: !3, line: 764, type: !5250)
!5284 = !DILocation(line: 764, column: 12, scope: !5281)
!5285 = !DILocation(line: 767, column: 27, scope: !5281)
!5286 = !DILocation(line: 767, column: 34, scope: !5281)
!5287 = !DILocation(line: 767, column: 52, scope: !5281)
!5288 = !DILocation(line: 767, column: 17, scope: !5281)
!5289 = !DILocation(line: 767, column: 15, scope: !5281)
!5290 = !DILocation(line: 768, column: 43, scope: !5281)
!5291 = !DILocation(line: 768, column: 18, scope: !5281)
!5292 = !DILocation(line: 768, column: 16, scope: !5281)
!5293 = !DILocation(line: 773, column: 24, scope: !5281)
!5294 = !DILocation(line: 774, column: 13, scope: !5281)
!5295 = !DILocation(line: 775, column: 13, scope: !5281)
!5296 = !DILocation(line: 773, column: 21, scope: !5281)
!5297 = !DILocation(line: 778, column: 49, scope: !5281)
!5298 = !DILocation(line: 778, column: 54, scope: !5281)
!5299 = !DILocation(line: 778, column: 63, scope: !5281)
!5300 = !DILocation(line: 779, column: 49, scope: !5281)
!5301 = !DILocation(line: 778, column: 11, scope: !5281)
!5302 = !DILocation(line: 778, column: 9, scope: !5281)
!5303 = !DILocation(line: 787, column: 11, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 787, column: 11)
!5305 = !DILocation(line: 787, column: 11, scope: !5281)
!5306 = !DILocation(line: 789, column: 26, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 788, column: 2)
!5308 = !DILocation(line: 790, column: 33, scope: !5307)
!5309 = !DILocation(line: 790, column: 5, scope: !5307)
!5310 = !DILocation(line: 789, column: 4, scope: !5307)
!5311 = !DILocation(line: 794, column: 9, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 794, column: 8)
!5313 = !DILocation(line: 794, column: 34, scope: !5312)
!5314 = !DILocation(line: 795, column: 15, scope: !5312)
!5315 = !DILocation(line: 795, column: 32, scope: !5312)
!5316 = !DILocation(line: 796, column: 28, scope: !5312)
!5317 = !DILocation(line: 796, column: 11, scope: !5312)
!5318 = !DILocation(line: 795, column: 18, scope: !5312)
!5319 = !DILocation(line: 794, column: 8, scope: !5307)
!5320 = !DILocation(line: 797, column: 6, scope: !5312)
!5321 = !DILocation(line: 797, column: 35, scope: !5312)
!5322 = !DILocation(line: 799, column: 4, scope: !5307)
!5323 = !DILocation(line: 802, column: 9, scope: !5304)
!5324 = !DILocation(line: 805, column: 5, scope: !5275)
!5325 = !DILocation(line: 806, column: 1, scope: !5240)
!5326 = distinct !DISubprogram(name: "find_block_for_bookkeeping", scope: !3, file: !3, line: 4493, type: !5327, scopeLine: 4494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{!1362, !1379, !1379, !1057}
!5329 = !DILocalVariable(name: "e1", arg: 1, scope: !5326, file: !3, line: 4493, type: !1379)
!5330 = !DILocation(line: 4493, column: 34, scope: !5326)
!5331 = !DILocalVariable(name: "e2", arg: 2, scope: !5326, file: !3, line: 4493, type: !1379)
!5332 = !DILocation(line: 4493, column: 43, scope: !5326)
!5333 = !DILocalVariable(name: "lax", arg: 3, scope: !5326, file: !3, line: 4493, type: !1057)
!5334 = !DILocation(line: 4493, column: 52, scope: !5326)
!5335 = !DILocalVariable(name: "candidate_block", scope: !5326, file: !3, line: 4495, type: !1362)
!5336 = !DILocation(line: 4495, column: 15, scope: !5326)
!5337 = !DILocalVariable(name: "e", scope: !5326, file: !3, line: 4496, type: !1379)
!5338 = !DILocation(line: 4496, column: 8, scope: !5326)
!5339 = !DILocation(line: 4499, column: 12, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 4499, column: 3)
!5341 = !DILocation(line: 4499, column: 10, scope: !5340)
!5342 = !DILocation(line: 4499, column: 8, scope: !5340)
!5343 = !DILocation(line: 4499, column: 17, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 4499, column: 3)
!5345 = !DILocation(line: 4499, column: 21, scope: !5344)
!5346 = !DILocation(line: 4499, column: 24, scope: !5344)
!5347 = !DILocation(line: 4499, column: 27, scope: !5344)
!5348 = !DILocation(line: 4499, column: 35, scope: !5344)
!5349 = !DILocation(line: 4499, column: 32, scope: !5344)
!5350 = !DILocation(line: 4499, column: 3, scope: !5340)
!5351 = !DILocation(line: 4501, column: 11, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 4501, column: 11)
!5353 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4500, column: 5)
!5354 = !DILocation(line: 4501, column: 39, scope: !5352)
!5355 = !DILocation(line: 4501, column: 11, scope: !5353)
!5356 = !DILocation(line: 4503, column: 8, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 4503, column: 8)
!5358 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 4502, column: 2)
!5359 = !DILocation(line: 4503, column: 24, scope: !5357)
!5360 = !DILocation(line: 4503, column: 8, scope: !5358)
!5361 = !DILocation(line: 4504, column: 25, scope: !5357)
!5362 = !DILocation(line: 4504, column: 51, scope: !5357)
!5363 = !DILocation(line: 4504, column: 48, scope: !5357)
!5364 = !DILocation(line: 4505, column: 13, scope: !5357)
!5365 = !DILocation(line: 4505, column: 37, scope: !5357)
!5366 = !DILocation(line: 4506, column: 13, scope: !5357)
!5367 = !DILocation(line: 4506, column: 37, scope: !5357)
!5368 = !DILocation(line: 4504, column: 22, scope: !5357)
!5369 = !DILocation(line: 4504, column: 6, scope: !5357)
!5370 = !DILocation(line: 4510, column: 6, scope: !5357)
!5371 = !DILocation(line: 4511, column: 2, scope: !5358)
!5372 = !DILocation(line: 4512, column: 16, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 4512, column: 16)
!5374 = !DILocation(line: 4512, column: 44, scope: !5373)
!5375 = !DILocation(line: 4512, column: 16, scope: !5352)
!5376 = !DILocation(line: 4514, column: 2, scope: !5373)
!5377 = !DILocation(line: 4516, column: 11, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 4516, column: 11)
!5379 = !DILocation(line: 4516, column: 16, scope: !5378)
!5380 = !DILocation(line: 4516, column: 13, scope: !5378)
!5381 = !DILocation(line: 4516, column: 11, scope: !5353)
!5382 = !DILocation(line: 4517, column: 12, scope: !5378)
!5383 = !DILocation(line: 4517, column: 16, scope: !5378)
!5384 = !DILocation(line: 4517, column: 19, scope: !5378)
!5385 = !DILocation(line: 4518, column: 3, scope: !5378)
!5386 = !DILocation(line: 4518, column: 37, scope: !5378)
!5387 = !DILocation(line: 4518, column: 6, scope: !5378)
!5388 = !DILocation(line: 4517, column: 10, scope: !5378)
!5389 = !DILocation(line: 4519, column: 5, scope: !5378)
!5390 = !DILocation(line: 4517, column: 2, scope: !5378)
!5391 = !DILocation(line: 4522, column: 11, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 4522, column: 11)
!5393 = !DILocation(line: 4522, column: 15, scope: !5392)
!5394 = !DILocation(line: 4522, column: 18, scope: !5392)
!5395 = !DILocation(line: 4522, column: 46, scope: !5392)
!5396 = !DILocation(line: 4522, column: 11, scope: !5353)
!5397 = !DILocation(line: 4523, column: 2, scope: !5392)
!5398 = !DILocation(line: 4524, column: 5, scope: !5353)
!5399 = !DILocation(line: 4499, column: 55, scope: !5344)
!5400 = !DILocation(line: 4499, column: 53, scope: !5344)
!5401 = !DILocation(line: 4499, column: 3, scope: !5344)
!5402 = distinct !{!5402, !5350, !5403}
!5403 = !DILocation(line: 4524, column: 5, scope: !5340)
!5404 = !DILocation(line: 4526, column: 7, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 4526, column: 7)
!5406 = !DILocation(line: 4526, column: 7, scope: !5326)
!5407 = !DILocation(line: 4527, column: 5, scope: !5405)
!5408 = !DILocation(line: 4529, column: 3, scope: !5326)
!5409 = !DILocation(line: 4531, column: 5, scope: !5326)
!5410 = !DILocation(line: 4533, column: 1, scope: !5326)
!5411 = distinct !DISubprogram(name: "block_valid_for_bookkeeping_p", scope: !3, file: !3, line: 4469, type: !5412, scopeLine: 4470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{!1057, !1362}
!5414 = !DILocalVariable(name: "bb", arg: 1, scope: !5411, file: !3, line: 4469, type: !1362)
!5415 = !DILocation(line: 4469, column: 44, scope: !5411)
!5416 = !DILocalVariable(name: "bb_end", scope: !5411, file: !3, line: 4471, type: !2132)
!5417 = !DILocation(line: 4471, column: 10, scope: !5411)
!5418 = !DILocation(line: 4471, column: 19, scope: !5411)
!5419 = !DILocation(line: 4473, column: 29, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 4473, column: 7)
!5421 = !DILocation(line: 4473, column: 8, scope: !5420)
!5422 = !DILocation(line: 4473, column: 33, scope: !5420)
!5423 = !DILocation(line: 4473, column: 36, scope: !5420)
!5424 = !DILocation(line: 4473, column: 59, scope: !5420)
!5425 = !DILocation(line: 4473, column: 7, scope: !5411)
!5426 = !DILocation(line: 4474, column: 5, scope: !5420)
!5427 = !DILocation(line: 4476, column: 7, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 4476, column: 7)
!5429 = !DILocation(line: 4476, column: 7, scope: !5411)
!5430 = !DILocation(line: 4478, column: 11, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 4478, column: 11)
!5432 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 4477, column: 5)
!5433 = !DILocation(line: 4478, column: 37, scope: !5431)
!5434 = !DILocation(line: 4478, column: 11, scope: !5432)
!5435 = !DILocation(line: 4479, column: 2, scope: !5431)
!5436 = !DILocation(line: 4480, column: 5, scope: !5432)
!5437 = !DILocation(line: 4482, column: 5, scope: !5428)
!5438 = !DILocation(line: 4484, column: 3, scope: !5411)
!5439 = !DILocation(line: 4485, column: 1, scope: !5411)
!5440 = distinct !DISubprogram(name: "rtx_ok_for_substitution_p", scope: !3, file: !3, line: 869, type: !5441, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5441 = !DISubroutineType(types: !5442)
!5442 = !{!1057, !825, !825}
!5443 = !DILocalVariable(name: "what", arg: 1, scope: !5440, file: !3, line: 869, type: !825)
!5444 = !DILocation(line: 869, column: 32, scope: !5440)
!5445 = !DILocalVariable(name: "where", arg: 2, scope: !5440, file: !3, line: 869, type: !825)
!5446 = !DILocation(line: 869, column: 42, scope: !5440)
!5447 = !DILocation(line: 871, column: 36, scope: !5440)
!5448 = !DILocation(line: 871, column: 42, scope: !5440)
!5449 = !DILocation(line: 871, column: 11, scope: !5440)
!5450 = !DILocation(line: 871, column: 49, scope: !5440)
!5451 = !DILocation(line: 871, column: 10, scope: !5440)
!5452 = !DILocation(line: 871, column: 3, scope: !5440)
!5453 = distinct !DISubprogram(name: "count_occurrences_equiv", scope: !3, file: !3, line: 855, type: !5454, scopeLine: 856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{!849, !825, !825}
!5456 = !DILocalVariable(name: "what", arg: 1, scope: !5453, file: !3, line: 855, type: !825)
!5457 = !DILocation(line: 855, column: 30, scope: !5453)
!5458 = !DILocalVariable(name: "where", arg: 2, scope: !5453, file: !3, line: 855, type: !825)
!5459 = !DILocation(line: 855, column: 40, scope: !5453)
!5460 = !DILocalVariable(name: "arg", scope: !5453, file: !3, line: 857, type: !2144)
!5461 = !DILocation(line: 857, column: 25, scope: !5453)
!5462 = !DILocation(line: 859, column: 11, scope: !5453)
!5463 = !DILocation(line: 859, column: 7, scope: !5453)
!5464 = !DILocation(line: 859, column: 9, scope: !5453)
!5465 = !DILocation(line: 860, column: 7, scope: !5453)
!5466 = !DILocation(line: 860, column: 9, scope: !5453)
!5467 = !DILocation(line: 862, column: 47, scope: !5453)
!5468 = !DILocation(line: 862, column: 3, scope: !5453)
!5469 = !DILocation(line: 864, column: 14, scope: !5453)
!5470 = !DILocation(line: 864, column: 3, scope: !5453)
!5471 = distinct !DISubprogram(name: "count_occurrences_1", scope: !3, file: !3, line: 810, type: !5472, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5472 = !DISubroutineType(types: !5473)
!5473 = !{!849, !5250, !819}
!5474 = !DILocalVariable(name: "cur_rtx", arg: 1, scope: !5471, file: !3, line: 810, type: !5250)
!5475 = !DILocation(line: 810, column: 27, scope: !5471)
!5476 = !DILocalVariable(name: "arg", arg: 2, scope: !5471, file: !3, line: 810, type: !819)
!5477 = !DILocation(line: 810, column: 42, scope: !5471)
!5478 = !DILocalVariable(name: "p", scope: !5471, file: !3, line: 812, type: !2142)
!5479 = !DILocation(line: 812, column: 20, scope: !5471)
!5480 = !DILocation(line: 812, column: 43, scope: !5471)
!5481 = !DILocation(line: 812, column: 24, scope: !5471)
!5482 = !DILocation(line: 820, column: 21, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 820, column: 7)
!5484 = !DILocation(line: 820, column: 20, scope: !5483)
!5485 = !DILocation(line: 820, column: 30, scope: !5483)
!5486 = !DILocation(line: 820, column: 33, scope: !5483)
!5487 = !DILocation(line: 820, column: 7, scope: !5483)
!5488 = !DILocation(line: 820, column: 7, scope: !5471)
!5489 = !DILocation(line: 823, column: 11, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 823, column: 11)
!5491 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 821, column: 5)
!5492 = !DILocation(line: 824, column: 11, scope: !5490)
!5493 = !DILocation(line: 824, column: 14, scope: !5490)
!5494 = !DILocation(line: 825, column: 11, scope: !5490)
!5495 = !DILocation(line: 825, column: 31, scope: !5490)
!5496 = !DILocation(line: 825, column: 14, scope: !5490)
!5497 = !DILocation(line: 825, column: 48, scope: !5490)
!5498 = !DILocation(line: 825, column: 69, scope: !5490)
!5499 = !DILocation(line: 823, column: 11, scope: !5491)
!5500 = !DILocation(line: 827, column: 11, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 826, column: 9)
!5502 = !DILocation(line: 827, column: 14, scope: !5501)
!5503 = !DILocation(line: 827, column: 16, scope: !5501)
!5504 = !DILocation(line: 828, column: 11, scope: !5501)
!5505 = !DILocation(line: 831, column: 7, scope: !5491)
!5506 = !DILocation(line: 831, column: 10, scope: !5491)
!5507 = !DILocation(line: 831, column: 11, scope: !5491)
!5508 = !DILocation(line: 834, column: 7, scope: !5491)
!5509 = !DILocation(line: 837, column: 7, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 837, column: 7)
!5511 = !DILocation(line: 837, column: 27, scope: !5510)
!5512 = !DILocation(line: 838, column: 7, scope: !5510)
!5513 = !DILocation(line: 838, column: 10, scope: !5510)
!5514 = !DILocation(line: 839, column: 7, scope: !5510)
!5515 = !DILocation(line: 839, column: 10, scope: !5510)
!5516 = !DILocation(line: 839, column: 43, scope: !5510)
!5517 = !DILocation(line: 839, column: 40, scope: !5510)
!5518 = !DILocation(line: 837, column: 7, scope: !5471)
!5519 = !DILocation(line: 844, column: 7, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 840, column: 5)
!5521 = !DILocation(line: 844, column: 10, scope: !5520)
!5522 = !DILocation(line: 844, column: 12, scope: !5520)
!5523 = !DILocation(line: 845, column: 7, scope: !5520)
!5524 = !DILocation(line: 849, column: 3, scope: !5471)
!5525 = !DILocation(line: 850, column: 1, scope: !5471)
!5526 = distinct !DISubprogram(name: "generate_bookkeeping_insn", scope: !3, file: !3, line: 4790, type: !5527, scopeLine: 4791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5527 = !DISubroutineType(types: !5528)
!5528 = !{!1362, !2055, !1379, !1379}
!5529 = !DILocalVariable(name: "c_expr", arg: 1, scope: !5526, file: !3, line: 4790, type: !2055)
!5530 = !DILocation(line: 4790, column: 35, scope: !5526)
!5531 = !DILocalVariable(name: "e1", arg: 2, scope: !5526, file: !3, line: 4790, type: !1379)
!5532 = !DILocation(line: 4790, column: 48, scope: !5526)
!5533 = !DILocalVariable(name: "e2", arg: 3, scope: !5526, file: !3, line: 4790, type: !1379)
!5534 = !DILocation(line: 4790, column: 57, scope: !5526)
!5535 = !DILocalVariable(name: "join_point", scope: !5526, file: !3, line: 4792, type: !2132)
!5536 = !DILocation(line: 4792, column: 10, scope: !5526)
!5537 = !DILocalVariable(name: "place_to_insert", scope: !5526, file: !3, line: 4792, type: !2132)
!5538 = !DILocation(line: 4792, column: 22, scope: !5526)
!5539 = !DILocalVariable(name: "new_insn", scope: !5526, file: !3, line: 4792, type: !2132)
!5540 = !DILocation(line: 4792, column: 39, scope: !5526)
!5541 = !DILocalVariable(name: "new_seqno", scope: !5526, file: !3, line: 4793, type: !849)
!5542 = !DILocation(line: 4793, column: 7, scope: !5526)
!5543 = !DILocalVariable(name: "need_to_exchange_data_sets", scope: !5526, file: !3, line: 4794, type: !1057)
!5544 = !DILocation(line: 4794, column: 8, scope: !5526)
!5545 = !DILocation(line: 4796, column: 7, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 4796, column: 7)
!5547 = !DILocation(line: 4796, column: 21, scope: !5546)
!5548 = !DILocation(line: 4796, column: 7, scope: !5526)
!5549 = !DILocation(line: 4797, column: 5, scope: !5546)
!5550 = !DILocation(line: 4797, column: 5, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 4797, column: 5)
!5552 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 4797, column: 5)
!5553 = !DILocation(line: 4797, column: 5, scope: !5552)
!5554 = !DILocalVariable(name: "__j", scope: !5555, file: !3, line: 4797, type: !849)
!5555 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 4797, column: 5)
!5556 = !DILocation(line: 4797, column: 5, scope: !5555)
!5557 = !DILocalVariable(name: "__s", scope: !5555, file: !3, line: 4797, type: !817)
!5558 = !DILocation(line: 4800, column: 29, scope: !5526)
!5559 = !DILocation(line: 4800, column: 33, scope: !5526)
!5560 = !DILocation(line: 4800, column: 16, scope: !5526)
!5561 = !DILocation(line: 4800, column: 14, scope: !5526)
!5562 = !DILocation(line: 4801, column: 49, scope: !5526)
!5563 = !DILocation(line: 4801, column: 53, scope: !5526)
!5564 = !DILocation(line: 4801, column: 21, scope: !5526)
!5565 = !DILocation(line: 4801, column: 19, scope: !5526)
!5566 = !DILocation(line: 4802, column: 8, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 4802, column: 7)
!5568 = !DILocation(line: 4802, column: 7, scope: !5526)
!5569 = !DILocation(line: 4803, column: 5, scope: !5567)
!5570 = !DILocation(line: 4804, column: 43, scope: !5526)
!5571 = !DILocation(line: 4804, column: 60, scope: !5526)
!5572 = !DILocation(line: 4804, column: 15, scope: !5526)
!5573 = !DILocation(line: 4804, column: 13, scope: !5526)
!5574 = !DILocation(line: 4806, column: 23, scope: !5526)
!5575 = !DILocation(line: 4806, column: 7, scope: !5526)
!5576 = !DILocation(line: 4806, column: 5, scope: !5526)
!5577 = !DILocation(line: 4808, column: 37, scope: !5526)
!5578 = !DILocation(line: 4808, column: 54, scope: !5526)
!5579 = !DILocation(line: 4808, column: 62, scope: !5526)
!5580 = !DILocation(line: 4808, column: 14, scope: !5526)
!5581 = !DILocation(line: 4808, column: 12, scope: !5526)
!5582 = !DILocation(line: 4818, column: 7, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 4818, column: 7)
!5584 = !DILocation(line: 4818, column: 7, scope: !5526)
!5585 = !DILocation(line: 4819, column: 25, scope: !5583)
!5586 = !DILocation(line: 4820, column: 4, scope: !5583)
!5587 = !DILocation(line: 4819, column: 5, scope: !5583)
!5588 = !DILocation(line: 4822, column: 26, scope: !5526)
!5589 = !DILocation(line: 4823, column: 10, scope: !5526)
!5590 = !DILocation(line: 4823, column: 3, scope: !5526)
!5591 = !DILocation(line: 4824, column: 1, scope: !5526)
!5592 = distinct !DISubprogram(name: "update_data_sets", scope: !3, file: !3, line: 3158, type: !3678, scopeLine: 3159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5593 = !DILocalVariable(name: "insn", arg: 1, scope: !5592, file: !3, line: 3158, type: !825)
!5594 = !DILocation(line: 3158, column: 23, scope: !5592)
!5595 = !DILocation(line: 3160, column: 28, scope: !5592)
!5596 = !DILocation(line: 3160, column: 3, scope: !5592)
!5597 = !DILocation(line: 3161, column: 22, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 3161, column: 7)
!5599 = !DILocation(line: 3161, column: 7, scope: !5598)
!5600 = !DILocation(line: 3161, column: 7, scope: !5592)
!5601 = !DILocation(line: 3163, column: 7, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5598, file: !3, line: 3162, column: 5)
!5603 = !DILocation(line: 3164, column: 7, scope: !5602)
!5604 = !DILocation(line: 3164, column: 43, scope: !5602)
!5605 = !DILocation(line: 3165, column: 23, scope: !5602)
!5606 = !DILocation(line: 3165, column: 7, scope: !5602)
!5607 = !DILocation(line: 3166, column: 5, scope: !5602)
!5608 = !DILocation(line: 3167, column: 1, scope: !5592)
!5609 = distinct !DISubprogram(name: "update_and_record_unavailable_insns", scope: !3, file: !3, line: 5649, type: !5610, scopeLine: 5650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{null, !1362}
!5612 = !DILocalVariable(name: "book_block", arg: 1, scope: !5609, file: !3, line: 5649, type: !1362)
!5613 = !DILocation(line: 5649, column: 50, scope: !5609)
!5614 = !DILocalVariable(name: "i", scope: !5609, file: !3, line: 5651, type: !3060)
!5615 = !DILocation(line: 5651, column: 19, scope: !5609)
!5616 = !DILocalVariable(name: "old_av_set", scope: !5609, file: !3, line: 5652, type: !2166)
!5617 = !DILocation(line: 5652, column: 12, scope: !5609)
!5618 = !DILocalVariable(name: "cur_expr", scope: !5609, file: !3, line: 5653, type: !2055)
!5619 = !DILocation(line: 5653, column: 10, scope: !5609)
!5620 = !DILocalVariable(name: "bb_end", scope: !5609, file: !3, line: 5654, type: !825)
!5621 = !DILocation(line: 5654, column: 7, scope: !5609)
!5622 = !DILocation(line: 5654, column: 28, scope: !5609)
!5623 = !DILocation(line: 5654, column: 16, scope: !5609)
!5624 = !DILocation(line: 5658, column: 28, scope: !5609)
!5625 = !DILocation(line: 5658, column: 3, scope: !5609)
!5626 = !DILocation(line: 5659, column: 28, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 5659, column: 7)
!5628 = !DILocation(line: 5659, column: 7, scope: !5627)
!5629 = !DILocation(line: 5659, column: 7, scope: !5609)
!5630 = !DILocation(line: 5660, column: 30, scope: !5627)
!5631 = !DILocation(line: 5660, column: 5, scope: !5627)
!5632 = !DILocation(line: 5665, column: 7, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 5665, column: 7)
!5634 = !DILocation(line: 5665, column: 7, scope: !5609)
!5635 = !DILocation(line: 5667, column: 33, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 5666, column: 5)
!5637 = !DILocation(line: 5667, column: 20, scope: !5636)
!5638 = !DILocation(line: 5667, column: 18, scope: !5636)
!5639 = !DILocation(line: 5668, column: 38, scope: !5636)
!5640 = !DILocation(line: 5668, column: 25, scope: !5636)
!5641 = !DILocation(line: 5668, column: 7, scope: !5636)
!5642 = !DILocation(line: 5672, column: 7, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 5672, column: 7)
!5644 = !DILocation(line: 5672, column: 7, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 5672, column: 7)
!5646 = !DILocalVariable(name: "new_expr", scope: !5647, file: !3, line: 5674, type: !2055)
!5647 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 5673, column: 9)
!5648 = !DILocation(line: 5674, column: 18, scope: !5647)
!5649 = !DILocation(line: 5674, column: 44, scope: !5647)
!5650 = !DILocation(line: 5675, column: 9, scope: !5647)
!5651 = !DILocation(line: 5674, column: 29, scope: !5647)
!5652 = !DILocation(line: 5677, column: 17, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 5677, column: 15)
!5654 = !DILocation(line: 5680, column: 15, scope: !5653)
!5655 = !DILocation(line: 5680, column: 18, scope: !5653)
!5656 = !DILocation(line: 5681, column: 7, scope: !5653)
!5657 = !DILocation(line: 5681, column: 4, scope: !5653)
!5658 = !DILocation(line: 5677, column: 15, scope: !5647)
!5659 = !DILocation(line: 5685, column: 61, scope: !5653)
!5660 = !DILocation(line: 5685, column: 13, scope: !5653)
!5661 = !DILocation(line: 5686, column: 9, scope: !5647)
!5662 = distinct !{!5662, !5642, !5663}
!5663 = !DILocation(line: 5686, column: 9, scope: !5643)
!5664 = !DILocation(line: 5688, column: 7, scope: !5636)
!5665 = !DILocation(line: 5689, column: 5, scope: !5636)
!5666 = !DILocation(line: 5690, column: 1, scope: !5609)
!5667 = distinct !DISubprogram(name: "find_place_for_bookkeeping", scope: !3, file: !3, line: 4676, type: !5668, scopeLine: 4677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{!2132, !1379, !1379}
!5670 = !DILocalVariable(name: "e1", arg: 1, scope: !5667, file: !3, line: 4676, type: !1379)
!5671 = !DILocation(line: 4676, column: 34, scope: !5667)
!5672 = !DILocalVariable(name: "e2", arg: 2, scope: !5667, file: !3, line: 4676, type: !1379)
!5673 = !DILocation(line: 4676, column: 43, scope: !5667)
!5674 = !DILocalVariable(name: "place_to_insert", scope: !5667, file: !3, line: 4678, type: !2132)
!5675 = !DILocation(line: 4678, column: 10, scope: !5667)
!5676 = !DILocalVariable(name: "book_block", scope: !5667, file: !3, line: 4681, type: !1362)
!5677 = !DILocation(line: 4681, column: 15, scope: !5667)
!5678 = !DILocation(line: 4681, column: 56, scope: !5667)
!5679 = !DILocation(line: 4681, column: 60, scope: !5667)
!5680 = !DILocation(line: 4681, column: 28, scope: !5667)
!5681 = !DILocation(line: 4683, column: 7, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 4683, column: 7)
!5683 = !DILocation(line: 4683, column: 7, scope: !5667)
!5684 = !DILocation(line: 4685, column: 25, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 4684, column: 5)
!5686 = !DILocation(line: 4685, column: 23, scope: !5685)
!5687 = !DILocation(line: 4691, column: 11, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 4691, column: 11)
!5689 = !DILocation(line: 4691, column: 11, scope: !5685)
!5690 = !DILocalVariable(name: "insn", scope: !5691, file: !3, line: 4693, type: !825)
!5691 = distinct !DILexicalBlock(scope: !5688, file: !3, line: 4692, column: 2)
!5692 = !DILocation(line: 4693, column: 8, scope: !5691)
!5693 = !DILocation(line: 4693, column: 28, scope: !5691)
!5694 = !DILocation(line: 4693, column: 15, scope: !5691)
!5695 = !DILocation(line: 4695, column: 4, scope: !5691)
!5696 = !DILocation(line: 4695, column: 11, scope: !5691)
!5697 = !DILocation(line: 4695, column: 19, scope: !5691)
!5698 = !DILocation(line: 4695, column: 16, scope: !5691)
!5699 = !DILocation(line: 4695, column: 35, scope: !5691)
!5700 = !DILocation(line: 4696, column: 5, scope: !5691)
!5701 = !DILocation(line: 4696, column: 25, scope: !5691)
!5702 = !DILocation(line: 4696, column: 28, scope: !5691)
!5703 = !DILocation(line: 0, scope: !5691)
!5704 = !DILocation(line: 4697, column: 13, scope: !5691)
!5705 = !DILocation(line: 4697, column: 11, scope: !5691)
!5706 = distinct !{!5706, !5695, !5704}
!5707 = !DILocation(line: 4699, column: 8, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 4699, column: 8)
!5709 = !DILocation(line: 4699, column: 16, scope: !5708)
!5710 = !DILocation(line: 4699, column: 13, scope: !5708)
!5711 = !DILocation(line: 4699, column: 8, scope: !5691)
!5712 = !DILocation(line: 4700, column: 17, scope: !5708)
!5713 = !DILocation(line: 4700, column: 6, scope: !5708)
!5714 = !DILocation(line: 4701, column: 2, scope: !5691)
!5715 = !DILocation(line: 4702, column: 5, scope: !5685)
!5716 = !DILocation(line: 4704, column: 8, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 4704, column: 7)
!5718 = !DILocation(line: 4704, column: 7, scope: !5667)
!5719 = !DILocation(line: 4706, column: 50, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 4705, column: 5)
!5721 = !DILocation(line: 4706, column: 54, scope: !5720)
!5722 = !DILocation(line: 4706, column: 20, scope: !5720)
!5723 = !DILocation(line: 4706, column: 18, scope: !5720)
!5724 = !DILocation(line: 4707, column: 25, scope: !5720)
!5725 = !DILocation(line: 4707, column: 23, scope: !5720)
!5726 = !DILocation(line: 4708, column: 11, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 4708, column: 11)
!5728 = !DILocation(line: 4708, column: 25, scope: !5727)
!5729 = !DILocation(line: 4708, column: 11, scope: !5720)
!5730 = !DILocation(line: 4709, column: 2, scope: !5727)
!5731 = !DILocation(line: 4709, column: 2, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 4709, column: 2)
!5733 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 4709, column: 2)
!5734 = !DILocation(line: 4709, column: 2, scope: !5733)
!5735 = !DILocalVariable(name: "__j", scope: !5736, file: !3, line: 4709, type: !849)
!5736 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 4709, column: 2)
!5737 = !DILocation(line: 4709, column: 2, scope: !5736)
!5738 = !DILocalVariable(name: "__s", scope: !5736, file: !3, line: 4709, type: !817)
!5739 = !DILocation(line: 4711, column: 5, scope: !5720)
!5740 = !DILocation(line: 4714, column: 11, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 4714, column: 11)
!5742 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 4713, column: 5)
!5743 = !DILocation(line: 4714, column: 25, scope: !5741)
!5744 = !DILocation(line: 4714, column: 11, scope: !5742)
!5745 = !DILocation(line: 4715, column: 2, scope: !5741)
!5746 = !DILocation(line: 4715, column: 2, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 4715, column: 2)
!5748 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 4715, column: 2)
!5749 = !DILocation(line: 4715, column: 2, scope: !5748)
!5750 = !DILocalVariable(name: "__j", scope: !5751, file: !3, line: 4715, type: !849)
!5751 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 4715, column: 2)
!5752 = !DILocation(line: 4715, column: 2, scope: !5751)
!5753 = !DILocalVariable(name: "__s", scope: !5751, file: !3, line: 4715, type: !817)
!5754 = !DILocation(line: 4719, column: 7, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 4719, column: 7)
!5756 = !DILocation(line: 4719, column: 32, scope: !5755)
!5757 = !DILocation(line: 4719, column: 56, scope: !5755)
!5758 = !DILocation(line: 4719, column: 35, scope: !5755)
!5759 = !DILocation(line: 4719, column: 7, scope: !5667)
!5760 = !DILocation(line: 4720, column: 23, scope: !5755)
!5761 = !DILocation(line: 4720, column: 21, scope: !5755)
!5762 = !DILocation(line: 4720, column: 5, scope: !5755)
!5763 = !DILocation(line: 4722, column: 10, scope: !5667)
!5764 = !DILocation(line: 4722, column: 3, scope: !5667)
!5765 = distinct !DISubprogram(name: "find_seqno_for_bookkeeping", scope: !3, file: !3, line: 4728, type: !5766, scopeLine: 4729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5766 = !DISubroutineType(types: !5767)
!5767 = !{!849, !2132, !2132}
!5768 = !DILocalVariable(name: "place_to_insert", arg: 1, scope: !5765, file: !3, line: 4728, type: !2132)
!5769 = !DILocation(line: 4728, column: 36, scope: !5765)
!5770 = !DILocalVariable(name: "join_point", arg: 2, scope: !5765, file: !3, line: 4728, type: !2132)
!5771 = !DILocation(line: 4728, column: 60, scope: !5765)
!5772 = !DILocalVariable(name: "seqno", scope: !5765, file: !3, line: 4730, type: !849)
!5773 = !DILocation(line: 4730, column: 7, scope: !5765)
!5774 = !DILocalVariable(name: "next", scope: !5765, file: !3, line: 4731, type: !825)
!5775 = !DILocation(line: 4731, column: 7, scope: !5765)
!5776 = !DILocation(line: 4735, column: 10, scope: !5765)
!5777 = !DILocation(line: 4735, column: 8, scope: !5765)
!5778 = !DILocation(line: 4736, column: 7, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 4736, column: 7)
!5780 = !DILocation(line: 4737, column: 7, scope: !5779)
!5781 = !DILocation(line: 4737, column: 10, scope: !5779)
!5782 = !DILocation(line: 4738, column: 7, scope: !5779)
!5783 = !DILocation(line: 4738, column: 10, scope: !5779)
!5784 = !DILocation(line: 4738, column: 35, scope: !5779)
!5785 = !DILocation(line: 4738, column: 32, scope: !5779)
!5786 = !DILocation(line: 4736, column: 7, scope: !5765)
!5787 = !DILocation(line: 4740, column: 7, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 4739, column: 5)
!5789 = !DILocation(line: 4741, column: 15, scope: !5788)
!5790 = !DILocation(line: 4741, column: 13, scope: !5788)
!5791 = !DILocation(line: 4742, column: 5, scope: !5788)
!5792 = !DILocation(line: 4743, column: 12, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 4743, column: 12)
!5794 = !DILocation(line: 4743, column: 36, scope: !5793)
!5795 = !DILocation(line: 4743, column: 12, scope: !5779)
!5796 = !DILocation(line: 4744, column: 13, scope: !5793)
!5797 = !DILocation(line: 4744, column: 11, scope: !5793)
!5798 = !DILocation(line: 4744, column: 5, scope: !5793)
!5799 = !DILocation(line: 4747, column: 35, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 4746, column: 5)
!5801 = !DILocation(line: 4747, column: 15, scope: !5800)
!5802 = !DILocation(line: 4747, column: 13, scope: !5800)
!5803 = !DILocation(line: 4754, column: 11, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 4754, column: 11)
!5805 = !DILocation(line: 4754, column: 17, scope: !5804)
!5806 = !DILocation(line: 4754, column: 11, scope: !5800)
!5807 = !DILocation(line: 4756, column: 11, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 4755, column: 9)
!5809 = !DILocation(line: 4757, column: 17, scope: !5808)
!5810 = !DILocation(line: 4758, column: 9, scope: !5808)
!5811 = !DILocation(line: 4761, column: 3, scope: !5765)
!5812 = !DILocation(line: 4762, column: 10, scope: !5765)
!5813 = !DILocation(line: 4762, column: 3, scope: !5765)
!5814 = distinct !DISubprogram(name: "emit_bookkeeping_insn", scope: !3, file: !3, line: 4768, type: !5815, scopeLine: 4769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5815 = !DISubroutineType(types: !5816)
!5816 = !{!2132, !2132, !2055, !849}
!5817 = !DILocalVariable(name: "place_to_insert", arg: 1, scope: !5814, file: !3, line: 4768, type: !2132)
!5818 = !DILocation(line: 4768, column: 31, scope: !5814)
!5819 = !DILocalVariable(name: "c_expr", arg: 2, scope: !5814, file: !3, line: 4768, type: !2055)
!5820 = !DILocation(line: 4768, column: 55, scope: !5814)
!5821 = !DILocalVariable(name: "new_seqno", arg: 3, scope: !5814, file: !3, line: 4768, type: !849)
!5822 = !DILocation(line: 4768, column: 67, scope: !5814)
!5823 = !DILocalVariable(name: "new_insn_rtx", scope: !5814, file: !3, line: 4770, type: !825)
!5824 = !DILocation(line: 4770, column: 7, scope: !5814)
!5825 = !DILocation(line: 4770, column: 47, scope: !5814)
!5826 = !DILocation(line: 4770, column: 22, scope: !5814)
!5827 = !DILocalVariable(name: "new_vinsn", scope: !5814, file: !3, line: 4772, type: !2061)
!5828 = !DILocation(line: 4772, column: 11, scope: !5814)
!5829 = !DILocation(line: 4773, column: 35, scope: !5814)
!5830 = !DILocation(line: 4774, column: 7, scope: !5814)
!5831 = !DILocation(line: 4773, column: 7, scope: !5814)
!5832 = !DILocalVariable(name: "new_insn", scope: !5814, file: !3, line: 4776, type: !2132)
!5833 = !DILocation(line: 4776, column: 10, scope: !5814)
!5834 = !DILocation(line: 4776, column: 48, scope: !5814)
!5835 = !DILocation(line: 4776, column: 56, scope: !5814)
!5836 = !DILocation(line: 4776, column: 67, scope: !5814)
!5837 = !DILocation(line: 4777, column: 13, scope: !5814)
!5838 = !DILocation(line: 4776, column: 21, scope: !5814)
!5839 = !DILocation(line: 4779, column: 3, scope: !5814)
!5840 = !DILocation(line: 4779, column: 31, scope: !5814)
!5841 = !DILocation(line: 4780, column: 19, scope: !5814)
!5842 = !DILocation(line: 4780, column: 35, scope: !5814)
!5843 = !DILocation(line: 4780, column: 3, scope: !5814)
!5844 = !DILocation(line: 4782, column: 10, scope: !5814)
!5845 = !DILocation(line: 4782, column: 3, scope: !5814)
!5846 = distinct !DISubprogram(name: "create_block_for_bookkeeping", scope: !3, file: !3, line: 4538, type: !5847, scopeLine: 4539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!5847 = !DISubroutineType(types: !5848)
!5848 = !{!1362, !1379, !1379}
!5849 = !DILocalVariable(name: "e1", arg: 1, scope: !5846, file: !3, line: 4538, type: !1379)
!5850 = !DILocation(line: 4538, column: 36, scope: !5846)
!5851 = !DILocalVariable(name: "e2", arg: 2, scope: !5846, file: !3, line: 4538, type: !1379)
!5852 = !DILocation(line: 4538, column: 45, scope: !5846)
!5853 = !DILocalVariable(name: "new_bb", scope: !5846, file: !3, line: 4540, type: !1362)
!5854 = !DILocation(line: 4540, column: 15, scope: !5846)
!5855 = !DILocalVariable(name: "bb", scope: !5846, file: !3, line: 4540, type: !1362)
!5856 = !DILocation(line: 4540, column: 23, scope: !5846)
!5857 = !DILocation(line: 4540, column: 28, scope: !5846)
!5858 = !DILocation(line: 4540, column: 32, scope: !5846)
!5859 = !DILocation(line: 4543, column: 7, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4543, column: 7)
!5861 = !DILocation(line: 4543, column: 7, scope: !5846)
!5862 = !DILocalVariable(name: "latch", scope: !5863, file: !3, line: 4545, type: !1362)
!5863 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 4544, column: 5)
!5864 = !DILocation(line: 4545, column: 19, scope: !5863)
!5865 = !DILocation(line: 4545, column: 27, scope: !5863)
!5866 = !DILocation(line: 4545, column: 46, scope: !5863)
!5867 = !DILocation(line: 4548, column: 7, scope: !5863)
!5868 = !DILocation(line: 4551, column: 7, scope: !5863)
!5869 = !DILocation(line: 4554, column: 5, scope: !5863)
!5870 = !DILocation(line: 4557, column: 12, scope: !5846)
!5871 = !DILocation(line: 4557, column: 31, scope: !5846)
!5872 = !DILocation(line: 4557, column: 10, scope: !5846)
!5873 = !DILocation(line: 4560, column: 3, scope: !5846)
!5874 = !DILocation(line: 4561, column: 27, scope: !5846)
!5875 = !DILocation(line: 4561, column: 3, scope: !5846)
!5876 = !DILocation(line: 4561, column: 25, scope: !5846)
!5877 = !DILocation(line: 4562, column: 3, scope: !5846)
!5878 = !DILocation(line: 4562, column: 21, scope: !5846)
!5879 = !DILocation(line: 4564, column: 3, scope: !5846)
!5880 = !DILocation(line: 4567, column: 7, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4567, column: 7)
!5882 = !DILocation(line: 4567, column: 11, scope: !5881)
!5883 = !DILocation(line: 4567, column: 17, scope: !5881)
!5884 = !DILocation(line: 4567, column: 7, scope: !5846)
!5885 = !DILocation(line: 4568, column: 41, scope: !5881)
!5886 = !DILocation(line: 4568, column: 45, scope: !5881)
!5887 = !DILocation(line: 4568, column: 5, scope: !5881)
!5888 = !DILocation(line: 4570, column: 35, scope: !5881)
!5889 = !DILocation(line: 4570, column: 39, scope: !5881)
!5890 = !DILocation(line: 4570, column: 5, scope: !5881)
!5891 = !DILocation(line: 4572, column: 3, scope: !5846)
!5892 = !DILocation(line: 4573, column: 3, scope: !5846)
!5893 = !DILocation(line: 4584, column: 7, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4584, column: 7)
!5895 = !DILocation(line: 4584, column: 7, scope: !5846)
!5896 = !DILocalVariable(name: "succ", scope: !5897, file: !3, line: 4586, type: !1362)
!5897 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 4585, column: 5)
!5898 = !DILocation(line: 4586, column: 19, scope: !5897)
!5899 = !DILocalVariable(name: "insn", scope: !5897, file: !3, line: 4587, type: !2132)
!5900 = !DILocation(line: 4587, column: 14, scope: !5897)
!5901 = !DILocation(line: 4587, column: 34, scope: !5897)
!5902 = !DILocation(line: 4587, column: 21, scope: !5897)
!5903 = !DILocalVariable(name: "last", scope: !5897, file: !3, line: 4588, type: !2132)
!5904 = !DILocation(line: 4588, column: 14, scope: !5897)
!5905 = !DILocation(line: 4590, column: 11, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 4590, column: 11)
!5907 = !DILocation(line: 4591, column: 4, scope: !5906)
!5908 = !DILocation(line: 4591, column: 22, scope: !5906)
!5909 = !DILocation(line: 4591, column: 7, scope: !5906)
!5910 = !DILocation(line: 4592, column: 4, scope: !5906)
!5911 = !DILocation(line: 4592, column: 28, scope: !5906)
!5912 = !DILocation(line: 4592, column: 15, scope: !5906)
!5913 = !DILocation(line: 4592, column: 13, scope: !5906)
!5914 = !DILocation(line: 4593, column: 4, scope: !5906)
!5915 = !DILocation(line: 4593, column: 7, scope: !5906)
!5916 = !DILocation(line: 4593, column: 15, scope: !5906)
!5917 = !DILocation(line: 4593, column: 12, scope: !5906)
!5918 = !DILocation(line: 4594, column: 4, scope: !5906)
!5919 = !DILocation(line: 4594, column: 7, scope: !5906)
!5920 = !DILocation(line: 4590, column: 11, scope: !5897)
!5921 = !DILocation(line: 4596, column: 4, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 4595, column: 2)
!5923 = !DILocation(line: 4596, column: 11, scope: !5922)
!5924 = !DILocation(line: 4596, column: 19, scope: !5922)
!5925 = !DILocation(line: 4596, column: 16, scope: !5922)
!5926 = !DILocation(line: 4596, column: 24, scope: !5922)
!5927 = !DILocation(line: 4596, column: 28, scope: !5922)
!5928 = !DILocation(line: 4596, column: 48, scope: !5922)
!5929 = !DILocation(line: 4596, column: 51, scope: !5922)
!5930 = !DILocation(line: 0, scope: !5922)
!5931 = !DILocation(line: 4597, column: 13, scope: !5922)
!5932 = !DILocation(line: 4597, column: 11, scope: !5922)
!5933 = distinct !{!5933, !5921, !5931}
!5934 = !DILocation(line: 4599, column: 8, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 4599, column: 8)
!5936 = !DILocation(line: 4599, column: 16, scope: !5935)
!5937 = !DILocation(line: 4599, column: 13, scope: !5935)
!5938 = !DILocation(line: 4599, column: 8, scope: !5922)
!5939 = !DILocalVariable(name: "gbi", scope: !5940, file: !3, line: 4601, type: !2578)
!5940 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 4600, column: 6)
!5941 = !DILocation(line: 4601, column: 31, scope: !5940)
!5942 = !DILocalVariable(name: "rbi", scope: !5940, file: !3, line: 4602, type: !5943)
!5943 = !DIDerivedType(tag: DW_TAG_typedef, name: "sel_region_bb_info_def", file: !398, line: 918, baseType: !5944)
!5944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 906, size: 192, elements: !5945)
!5945 = !{!5946, !5947, !5948}
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "note_list", scope: !5944, file: !398, line: 910, baseType: !825, size: 64)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "av_set", scope: !5944, file: !398, line: 914, baseType: !2166, size: 64, offset: 64)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "av_level", scope: !5944, file: !398, line: 917, baseType: !849, size: 32, offset: 128)
!5949 = !DILocation(line: 4602, column: 31, scope: !5940)
!5950 = !DILocalVariable(name: "i", scope: !5940, file: !3, line: 4603, type: !849)
!5951 = !DILocation(line: 4603, column: 12, scope: !5940)
!5952 = !DILocation(line: 4605, column: 12, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 4605, column: 12)
!5954 = !DILocation(line: 4605, column: 26, scope: !5953)
!5955 = !DILocation(line: 4605, column: 12, scope: !5940)
!5956 = !DILocation(line: 4606, column: 3, scope: !5953)
!5957 = !DILocation(line: 4606, column: 3, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 4606, column: 3)
!5959 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 4606, column: 3)
!5960 = !DILocation(line: 4606, column: 3, scope: !5959)
!5961 = !DILocalVariable(name: "__j", scope: !5962, file: !3, line: 4606, type: !849)
!5962 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 4606, column: 3)
!5963 = !DILocation(line: 4606, column: 3, scope: !5962)
!5964 = !DILocalVariable(name: "__s", scope: !5962, file: !3, line: 4606, type: !817)
!5965 = !DILocation(line: 4609, column: 12, scope: !5940)
!5966 = !DILocation(line: 4609, column: 20, scope: !5940)
!5967 = !DILocation(line: 4609, column: 10, scope: !5940)
!5968 = !DILocation(line: 4610, column: 24, scope: !5940)
!5969 = !DILocation(line: 4610, column: 30, scope: !5940)
!5970 = !DILocation(line: 4610, column: 8, scope: !5940)
!5971 = !DILocation(line: 4610, column: 16, scope: !5940)
!5972 = !DILocation(line: 4610, column: 22, scope: !5940)
!5973 = !DILocation(line: 4611, column: 22, scope: !5940)
!5974 = !DILocation(line: 4611, column: 8, scope: !5940)
!5975 = !DILocation(line: 4611, column: 14, scope: !5940)
!5976 = !DILocation(line: 4611, column: 20, scope: !5940)
!5977 = !DILocation(line: 4613, column: 8, scope: !5940)
!5978 = !DILocation(line: 4614, column: 8, scope: !5940)
!5979 = !DILocation(line: 4616, column: 8, scope: !5940)
!5980 = !DILocation(line: 4616, column: 22, scope: !5940)
!5981 = !DILocation(line: 4617, column: 16, scope: !5940)
!5982 = !DILocation(line: 4617, column: 8, scope: !5940)
!5983 = !DILocation(line: 4617, column: 45, scope: !5940)
!5984 = !DILocation(line: 4619, column: 16, scope: !5940)
!5985 = !DILocation(line: 4619, column: 8, scope: !5940)
!5986 = !DILocation(line: 4621, column: 8, scope: !5940)
!5987 = !DILocation(line: 4621, column: 22, scope: !5940)
!5988 = !DILocation(line: 4622, column: 16, scope: !5940)
!5989 = !DILocation(line: 4622, column: 8, scope: !5940)
!5990 = !DILocation(line: 4622, column: 45, scope: !5940)
!5991 = !DILocation(line: 4624, column: 16, scope: !5940)
!5992 = !DILocation(line: 4624, column: 8, scope: !5940)
!5993 = !DILocation(line: 4626, column: 12, scope: !5940)
!5994 = !DILocation(line: 4626, column: 10, scope: !5940)
!5995 = !DILocation(line: 4627, column: 38, scope: !5940)
!5996 = !DILocation(line: 4627, column: 8, scope: !5940)
!5997 = !DILocation(line: 4627, column: 36, scope: !5940)
!5998 = !DILocation(line: 4628, column: 36, scope: !5940)
!5999 = !DILocation(line: 4628, column: 8, scope: !5940)
!6000 = !DILocation(line: 4628, column: 34, scope: !5940)
!6001 = !DILocation(line: 4630, column: 12, scope: !5940)
!6002 = !DILocation(line: 4630, column: 10, scope: !5940)
!6003 = !DILocation(line: 4631, column: 41, scope: !5940)
!6004 = !DILocation(line: 4631, column: 8, scope: !5940)
!6005 = !DILocation(line: 4631, column: 39, scope: !5940)
!6006 = !DILocation(line: 4632, column: 39, scope: !5940)
!6007 = !DILocation(line: 4632, column: 8, scope: !5940)
!6008 = !DILocation(line: 4632, column: 37, scope: !5940)
!6009 = !DILocation(line: 4634, column: 15, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 4634, column: 8)
!6011 = !DILocation(line: 4634, column: 13, scope: !6010)
!6012 = !DILocation(line: 4634, column: 20, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 4634, column: 8)
!6014 = !DILocation(line: 4634, column: 24, scope: !6013)
!6015 = !DILocation(line: 4634, column: 22, scope: !6013)
!6016 = !DILocation(line: 4634, column: 8, scope: !6010)
!6017 = !DILocation(line: 4635, column: 7, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 4635, column: 7)
!6019 = !DILocation(line: 4635, column: 26, scope: !6018)
!6020 = !DILocation(line: 4635, column: 32, scope: !6018)
!6021 = !DILocation(line: 4635, column: 23, scope: !6018)
!6022 = !DILocation(line: 4635, column: 7, scope: !6013)
!6023 = !DILocation(line: 4636, column: 23, scope: !6018)
!6024 = !DILocation(line: 4636, column: 31, scope: !6018)
!6025 = !DILocation(line: 4636, column: 5, scope: !6018)
!6026 = !DILocation(line: 4636, column: 21, scope: !6018)
!6027 = !DILocation(line: 4637, column: 12, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 4637, column: 12)
!6029 = !DILocation(line: 4637, column: 31, scope: !6028)
!6030 = !DILocation(line: 4637, column: 39, scope: !6028)
!6031 = !DILocation(line: 4637, column: 28, scope: !6028)
!6032 = !DILocation(line: 4637, column: 12, scope: !6018)
!6033 = !DILocation(line: 4638, column: 23, scope: !6028)
!6034 = !DILocation(line: 4638, column: 29, scope: !6028)
!6035 = !DILocation(line: 4638, column: 5, scope: !6028)
!6036 = !DILocation(line: 4638, column: 21, scope: !6028)
!6037 = !DILocation(line: 4634, column: 44, scope: !6013)
!6038 = !DILocation(line: 4634, column: 8, scope: !6013)
!6039 = distinct !{!6039, !6016, !6040}
!6040 = !DILocation(line: 4638, column: 29, scope: !6010)
!6041 = !DILocation(line: 4640, column: 8, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 4640, column: 8)
!6043 = !DILocation(line: 4640, column: 8, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 4640, column: 8)
!6045 = !DILocation(line: 0, scope: !6044)
!6046 = !DILocation(line: 4641, column: 7, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 4641, column: 7)
!6048 = !DILocation(line: 4641, column: 7, scope: !6044)
!6049 = !DILocation(line: 4642, column: 45, scope: !6047)
!6050 = !DILocation(line: 4642, column: 53, scope: !6047)
!6051 = !DILocation(line: 4642, column: 5, scope: !6047)
!6052 = !DILocation(line: 4642, column: 43, scope: !6047)
!6053 = distinct !{!6053, !6041, !6054}
!6054 = !DILocation(line: 4642, column: 53, scope: !6042)
!6055 = !DILocation(line: 4644, column: 8, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 4644, column: 8)
!6057 = !DILocation(line: 4644, column: 8, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 4644, column: 8)
!6059 = !DILocation(line: 0, scope: !6058)
!6060 = !DILocation(line: 4645, column: 7, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 4645, column: 7)
!6062 = !DILocation(line: 4645, column: 7, scope: !6058)
!6063 = !DILocation(line: 4646, column: 45, scope: !6061)
!6064 = !DILocation(line: 4646, column: 51, scope: !6061)
!6065 = !DILocation(line: 4646, column: 5, scope: !6061)
!6066 = !DILocation(line: 4646, column: 43, scope: !6061)
!6067 = distinct !{!6067, !6055, !6068}
!6068 = !DILocation(line: 4646, column: 51, scope: !6056)
!6069 = !DILocation(line: 4648, column: 26, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 4648, column: 12)
!6071 = !DILocation(line: 4648, column: 54, scope: !6070)
!6072 = !DILocation(line: 4648, column: 62, scope: !6070)
!6073 = !DILocation(line: 4648, column: 12, scope: !6070)
!6074 = !DILocation(line: 4648, column: 12, scope: !5940)
!6075 = !DILocation(line: 4650, column: 21, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 4649, column: 3)
!6077 = !DILocation(line: 4650, column: 49, scope: !6076)
!6078 = !DILocation(line: 4650, column: 55, scope: !6076)
!6079 = !DILocation(line: 4650, column: 5, scope: !6076)
!6080 = !DILocation(line: 4651, column: 23, scope: !6076)
!6081 = !DILocation(line: 4651, column: 51, scope: !6076)
!6082 = !DILocation(line: 4651, column: 59, scope: !6076)
!6083 = !DILocation(line: 4651, column: 5, scope: !6076)
!6084 = !DILocation(line: 4652, column: 3, scope: !6076)
!6085 = !DILocation(line: 4654, column: 8, scope: !5940)
!6086 = !DILocation(line: 4657, column: 12, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 4657, column: 12)
!6088 = !DILocation(line: 4657, column: 26, scope: !6087)
!6089 = !DILocation(line: 4657, column: 12, scope: !5940)
!6090 = !DILocation(line: 4658, column: 3, scope: !6087)
!6091 = !DILocation(line: 4658, column: 3, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 4658, column: 3)
!6093 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 4658, column: 3)
!6094 = !DILocation(line: 4658, column: 3, scope: !6093)
!6095 = !DILocalVariable(name: "__j", scope: !6096, file: !3, line: 4658, type: !849)
!6096 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 4658, column: 3)
!6097 = !DILocation(line: 4658, column: 3, scope: !6096)
!6098 = !DILocalVariable(name: "__s", scope: !6096, file: !3, line: 4658, type: !817)
!6099 = !DILocation(line: 4662, column: 12, scope: !5940)
!6100 = !DILocation(line: 4662, column: 10, scope: !5940)
!6101 = !DILocation(line: 4664, column: 5, scope: !5940)
!6102 = !DILocation(line: 4663, column: 8, scope: !5940)
!6103 = !DILocation(line: 4664, column: 3, scope: !5940)
!6104 = !DILocation(line: 4665, column: 45, scope: !5940)
!6105 = !DILocation(line: 4665, column: 8, scope: !5940)
!6106 = !DILocation(line: 4665, column: 43, scope: !5940)
!6107 = !DILocation(line: 4666, column: 6, scope: !5940)
!6108 = !DILocation(line: 4667, column: 2, scope: !5922)
!6109 = !DILocation(line: 4668, column: 5, scope: !5897)
!6110 = !DILocation(line: 4670, column: 10, scope: !5846)
!6111 = !DILocation(line: 4670, column: 3, scope: !5846)
!6112 = distinct !DISubprogram(name: "single_pred_p", scope: !155, file: !155, line: 634, type: !6113, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{!1057, !6115}
!6115 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !826, line: 112, baseType: !6116)
!6116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6117, size: 64)
!6117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!6118 = !DILocalVariable(name: "bb", arg: 1, scope: !6112, file: !155, line: 634, type: !6115)
!6119 = !DILocation(line: 634, column: 34, scope: !6112)
!6120 = !DILocation(line: 636, column: 10, scope: !6112)
!6121 = !DILocation(line: 636, column: 33, scope: !6112)
!6122 = !DILocation(line: 636, column: 3, scope: !6112)
!6123 = distinct !DISubprogram(name: "single_pred_edge", scope: !155, file: !155, line: 653, type: !6124, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6124 = !DISubroutineType(types: !6125)
!6125 = !{!1379, !6115}
!6126 = !DILocalVariable(name: "bb", arg: 1, scope: !6123, file: !155, line: 653, type: !6115)
!6127 = !DILocation(line: 653, column: 37, scope: !6123)
!6128 = !DILocation(line: 655, column: 3, scope: !6123)
!6129 = !DILocation(line: 656, column: 10, scope: !6123)
!6130 = !DILocation(line: 656, column: 3, scope: !6123)
!6131 = distinct !DISubprogram(name: "VEC_sel_region_bb_info_def_base_index", scope: !398, file: !398, line: 922, type: !6132, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6132 = !DISubroutineType(types: !6133)
!6133 = !{!6134, !6135, !7}
!6134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5943, size: 64)
!6135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6136, size: 64)
!6136 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_sel_region_bb_info_def_base", file: !398, line: 922, baseType: !6137)
!6137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_sel_region_bb_info_def_base", file: !398, line: 922, size: 256, elements: !6138)
!6138 = !{!6139, !6140, !6141}
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6137, file: !398, line: 922, baseType: !7, size: 32)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !6137, file: !398, line: 922, baseType: !7, size: 32, offset: 32)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !6137, file: !398, line: 922, baseType: !6142, size: 192, offset: 64)
!6142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5943, size: 192, elements: !863)
!6143 = !DILocalVariable(name: "vec_", arg: 1, scope: !6131, file: !398, line: 922, type: !6135)
!6144 = !DILocation(line: 922, column: 1, scope: !6131)
!6145 = !DILocalVariable(name: "ix_", arg: 2, scope: !6131, file: !398, line: 922, type: !7)
!6146 = !DILocation(line: 0, scope: !6131)
!6147 = distinct !DISubprogram(name: "single_succ_p", scope: !155, file: !155, line: 626, type: !6113, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6148 = !DILocalVariable(name: "bb", arg: 1, scope: !6147, file: !155, line: 626, type: !6115)
!6149 = !DILocation(line: 626, column: 34, scope: !6147)
!6150 = !DILocation(line: 628, column: 10, scope: !6147)
!6151 = !DILocation(line: 628, column: 33, scope: !6147)
!6152 = !DILocation(line: 628, column: 3, scope: !6147)
!6153 = distinct !DISubprogram(name: "single_succ", scope: !155, file: !155, line: 663, type: !6154, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6154 = !DISubroutineType(types: !6155)
!6155 = !{!1362, !6115}
!6156 = !DILocalVariable(name: "bb", arg: 1, scope: !6153, file: !155, line: 663, type: !6115)
!6157 = !DILocation(line: 663, column: 32, scope: !6153)
!6158 = !DILocation(line: 665, column: 28, scope: !6153)
!6159 = !DILocation(line: 665, column: 10, scope: !6153)
!6160 = !DILocation(line: 665, column: 33, scope: !6153)
!6161 = !DILocation(line: 665, column: 3, scope: !6153)
!6162 = distinct !DISubprogram(name: "VEC_basic_block_base_replace", scope: !155, file: !155, line: 281, type: !6163, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6163 = !DISubroutineType(types: !6164)
!6164 = !{!1362, !6165, !7, !1362}
!6165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!6166 = !DILocalVariable(name: "vec_", arg: 1, scope: !6162, file: !155, line: 281, type: !6165)
!6167 = !DILocation(line: 281, column: 1, scope: !6162)
!6168 = !DILocalVariable(name: "ix_", arg: 2, scope: !6162, file: !155, line: 281, type: !7)
!6169 = !DILocalVariable(name: "obj_", arg: 3, scope: !6162, file: !155, line: 281, type: !1362)
!6170 = !DILocalVariable(name: "old_obj_", scope: !6162, file: !155, line: 281, type: !1362)
!6171 = distinct !DISubprogram(name: "single_succ_edge", scope: !155, file: !155, line: 643, type: !6124, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6172 = !DILocalVariable(name: "bb", arg: 1, scope: !6171, file: !155, line: 643, type: !6115)
!6173 = !DILocation(line: 643, column: 37, scope: !6171)
!6174 = !DILocation(line: 645, column: 3, scope: !6171)
!6175 = !DILocation(line: 646, column: 10, scope: !6171)
!6176 = !DILocation(line: 646, column: 3, scope: !6171)
!6177 = distinct !DISubprogram(name: "emit_insn_from_expr_after", scope: !3, file: !3, line: 4441, type: !6178, scopeLine: 4443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{!2132, !2055, !2061, !849, !2132}
!6180 = !DILocalVariable(name: "expr", arg: 1, scope: !6177, file: !3, line: 4441, type: !2055)
!6181 = !DILocation(line: 4441, column: 35, scope: !6177)
!6182 = !DILocalVariable(name: "vinsn", arg: 2, scope: !6177, file: !3, line: 4441, type: !2061)
!6183 = !DILocation(line: 4441, column: 49, scope: !6177)
!6184 = !DILocalVariable(name: "seqno", arg: 3, scope: !6177, file: !3, line: 4441, type: !849)
!6185 = !DILocation(line: 4441, column: 60, scope: !6177)
!6186 = !DILocalVariable(name: "place_to_insert", arg: 4, scope: !6177, file: !3, line: 4442, type: !2132)
!6187 = !DILocation(line: 4442, column: 35, scope: !6177)
!6188 = !DILocation(line: 4450, column: 3, scope: !6177)
!6189 = !DILocation(line: 4452, column: 7, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 4452, column: 7)
!6191 = !DILocation(line: 4452, column: 7, scope: !6177)
!6192 = !DILocalVariable(name: "regno", scope: !6193, file: !3, line: 4454, type: !7)
!6193 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 4453, column: 5)
!6194 = !DILocation(line: 4454, column: 16, scope: !6193)
!6195 = !DILocation(line: 4454, column: 41, scope: !6193)
!6196 = !DILocation(line: 4454, column: 24, scope: !6193)
!6197 = !DILocation(line: 4456, column: 11, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 4456, column: 11)
!6199 = !DILocation(line: 4456, column: 11, scope: !6193)
!6200 = !DILocation(line: 4458, column: 27, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 4457, column: 2)
!6202 = !DILocation(line: 4458, column: 4, scope: !6201)
!6203 = !DILocation(line: 4459, column: 29, scope: !6201)
!6204 = !DILocation(line: 4459, column: 20, scope: !6201)
!6205 = !DILocation(line: 4459, column: 4, scope: !6201)
!6206 = !DILocation(line: 4459, column: 27, scope: !6201)
!6207 = !DILocation(line: 4460, column: 2, scope: !6201)
!6208 = !DILocation(line: 4461, column: 5, scope: !6193)
!6209 = !DILocation(line: 4463, column: 40, scope: !6177)
!6210 = !DILocation(line: 4463, column: 46, scope: !6177)
!6211 = !DILocation(line: 4463, column: 53, scope: !6177)
!6212 = !DILocation(line: 4464, column: 40, scope: !6177)
!6213 = !DILocation(line: 4463, column: 10, scope: !6177)
!6214 = !DILocation(line: 4463, column: 3, scope: !6177)
!6215 = distinct !DISubprogram(name: "compute_av_set", scope: !3, file: !3, line: 3006, type: !6216, scopeLine: 3007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{!2166, !2132, !2163, !849, !1057}
!6218 = !DILocalVariable(name: "insn", arg: 1, scope: !6215, file: !3, line: 3006, type: !2132)
!6219 = !DILocation(line: 3006, column: 24, scope: !6215)
!6220 = !DILocalVariable(name: "p", arg: 2, scope: !6215, file: !3, line: 3006, type: !2163)
!6221 = !DILocation(line: 3006, column: 38, scope: !6215)
!6222 = !DILocalVariable(name: "ws", arg: 3, scope: !6215, file: !3, line: 3006, type: !849)
!6223 = !DILocation(line: 3006, column: 45, scope: !6215)
!6224 = !DILocalVariable(name: "unique_p", arg: 4, scope: !6215, file: !3, line: 3006, type: !1057)
!6225 = !DILocation(line: 3006, column: 54, scope: !6215)
!6226 = !DILocation(line: 3008, column: 36, scope: !6215)
!6227 = !DILocation(line: 3008, column: 42, scope: !6215)
!6228 = !DILocation(line: 3008, column: 45, scope: !6215)
!6229 = !DILocation(line: 3008, column: 49, scope: !6215)
!6230 = !DILocation(line: 3008, column: 10, scope: !6215)
!6231 = !DILocation(line: 3008, column: 3, scope: !6215)
!6232 = distinct !DISubprogram(name: "compute_av_set_inside_bb", scope: !3, file: !3, line: 2851, type: !6216, scopeLine: 2853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6233 = !DILocalVariable(name: "first_insn", arg: 1, scope: !6232, file: !3, line: 2851, type: !2132)
!6234 = !DILocation(line: 2851, column: 34, scope: !6232)
!6235 = !DILocalVariable(name: "p", arg: 2, scope: !6232, file: !3, line: 2851, type: !2163)
!6236 = !DILocation(line: 2851, column: 54, scope: !6232)
!6237 = !DILocalVariable(name: "ws", arg: 3, scope: !6232, file: !3, line: 2851, type: !849)
!6238 = !DILocation(line: 2851, column: 61, scope: !6232)
!6239 = !DILocalVariable(name: "need_copy_p", arg: 4, scope: !6232, file: !3, line: 2852, type: !1057)
!6240 = !DILocation(line: 2852, column: 11, scope: !6232)
!6241 = !DILocalVariable(name: "cur_insn", scope: !6232, file: !3, line: 2854, type: !2132)
!6242 = !DILocation(line: 2854, column: 10, scope: !6232)
!6243 = !DILocalVariable(name: "end_ws", scope: !6232, file: !3, line: 2855, type: !849)
!6244 = !DILocation(line: 2855, column: 7, scope: !6232)
!6245 = !DILocation(line: 2855, column: 16, scope: !6232)
!6246 = !DILocalVariable(name: "bb_end", scope: !6232, file: !3, line: 2856, type: !2132)
!6247 = !DILocation(line: 2856, column: 10, scope: !6232)
!6248 = !DILocation(line: 2856, column: 31, scope: !6232)
!6249 = !DILocation(line: 2856, column: 19, scope: !6232)
!6250 = !DILocalVariable(name: "after_bb_end", scope: !6232, file: !3, line: 2857, type: !2132)
!6251 = !DILocation(line: 2857, column: 10, scope: !6232)
!6252 = !DILocation(line: 2857, column: 25, scope: !6232)
!6253 = !DILocalVariable(name: "last_insn", scope: !6232, file: !3, line: 2858, type: !2132)
!6254 = !DILocation(line: 2858, column: 10, scope: !6232)
!6255 = !DILocalVariable(name: "av", scope: !6232, file: !3, line: 2859, type: !2166)
!6256 = !DILocation(line: 2859, column: 12, scope: !6232)
!6257 = !DILocalVariable(name: "cur_bb", scope: !6232, file: !3, line: 2860, type: !1362)
!6258 = !DILocation(line: 2860, column: 15, scope: !6232)
!6259 = !DILocation(line: 2860, column: 24, scope: !6232)
!6260 = !DILocation(line: 2863, column: 32, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2863, column: 7)
!6262 = !DILocation(line: 2863, column: 44, scope: !6261)
!6263 = !DILocation(line: 2863, column: 7, scope: !6261)
!6264 = !DILocation(line: 2863, column: 7, scope: !6232)
!6265 = !DILocation(line: 2865, column: 11, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 2865, column: 11)
!6267 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2864, column: 5)
!6268 = !DILocation(line: 2865, column: 25, scope: !6266)
!6269 = !DILocation(line: 2865, column: 11, scope: !6267)
!6270 = !DILocation(line: 2866, column: 9, scope: !6266)
!6271 = !DILocation(line: 2866, column: 9, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 2866, column: 9)
!6273 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 2866, column: 9)
!6274 = !DILocation(line: 2866, column: 9, scope: !6273)
!6275 = !DILocalVariable(name: "__j", scope: !6276, file: !3, line: 2866, type: !849)
!6276 = distinct !DILexicalBlock(scope: !6272, file: !3, line: 2866, column: 9)
!6277 = !DILocation(line: 2866, column: 9, scope: !6276)
!6278 = !DILocalVariable(name: "__s", scope: !6276, file: !3, line: 2866, type: !817)
!6279 = !DILocation(line: 2868, column: 7, scope: !6267)
!6280 = !DILocation(line: 2872, column: 7, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2872, column: 7)
!6282 = !DILocation(line: 2872, column: 7, scope: !6232)
!6283 = !DILocalVariable(name: "av_set", scope: !6284, file: !3, line: 2874, type: !2166)
!6284 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 2873, column: 5)
!6285 = !DILocation(line: 2874, column: 16, scope: !6284)
!6286 = !DILocation(line: 2876, column: 26, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 2876, column: 11)
!6288 = !DILocation(line: 2876, column: 11, scope: !6287)
!6289 = !DILocation(line: 2876, column: 11, scope: !6284)
!6290 = !DILocation(line: 2877, column: 11, scope: !6287)
!6291 = !DILocation(line: 2877, column: 9, scope: !6287)
!6292 = !DILocation(line: 2877, column: 2, scope: !6287)
!6293 = !DILocation(line: 2879, column: 9, scope: !6287)
!6294 = !DILocation(line: 2881, column: 11, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 2881, column: 11)
!6296 = !DILocation(line: 2881, column: 25, scope: !6295)
!6297 = !DILocation(line: 2881, column: 11, scope: !6284)
!6298 = !DILocation(line: 2883, column: 11, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 2882, column: 9)
!6300 = !DILocation(line: 2883, column: 11, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 2883, column: 11)
!6302 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 2883, column: 11)
!6303 = !DILocation(line: 2883, column: 11, scope: !6302)
!6304 = !DILocalVariable(name: "__j", scope: !6305, file: !3, line: 2883, type: !849)
!6305 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 2883, column: 11)
!6306 = !DILocation(line: 2883, column: 11, scope: !6305)
!6307 = !DILocalVariable(name: "__s", scope: !6305, file: !3, line: 2883, type: !817)
!6308 = !DILocation(line: 2884, column: 24, scope: !6299)
!6309 = !DILocation(line: 2884, column: 11, scope: !6299)
!6310 = !DILocation(line: 2885, column: 11, scope: !6299)
!6311 = !DILocation(line: 2885, column: 11, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 2885, column: 11)
!6313 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 2885, column: 11)
!6314 = !DILocation(line: 2885, column: 11, scope: !6313)
!6315 = !DILocalVariable(name: "__j", scope: !6316, file: !3, line: 2885, type: !849)
!6316 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 2885, column: 11)
!6317 = !DILocation(line: 2885, column: 11, scope: !6316)
!6318 = !DILocalVariable(name: "__s", scope: !6316, file: !3, line: 2885, type: !817)
!6319 = !DILocation(line: 2886, column: 9, scope: !6299)
!6320 = !DILocation(line: 2888, column: 14, scope: !6284)
!6321 = !DILocation(line: 2888, column: 41, scope: !6284)
!6322 = !DILocation(line: 2888, column: 28, scope: !6284)
!6323 = !DILocation(line: 2888, column: 51, scope: !6284)
!6324 = !DILocation(line: 2888, column: 7, scope: !6284)
!6325 = !DILocation(line: 2891, column: 3, scope: !6232)
!6326 = !DILocation(line: 2898, column: 20, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2898, column: 3)
!6328 = !DILocation(line: 2898, column: 18, scope: !6327)
!6329 = !DILocation(line: 2898, column: 8, scope: !6327)
!6330 = !DILocation(line: 2898, column: 32, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 2898, column: 3)
!6332 = !DILocation(line: 2898, column: 45, scope: !6331)
!6333 = !DILocation(line: 2898, column: 42, scope: !6331)
!6334 = !DILocation(line: 2898, column: 3, scope: !6327)
!6335 = !DILocation(line: 2903, column: 11, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 2903, column: 11)
!6337 = distinct !DILexicalBlock(scope: !6331, file: !3, line: 2900, column: 5)
!6338 = !DILocation(line: 2903, column: 11, scope: !6337)
!6339 = !DILocation(line: 2905, column: 15, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 2905, column: 15)
!6341 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 2904, column: 2)
!6342 = !DILocation(line: 2905, column: 29, scope: !6340)
!6343 = !DILocation(line: 2905, column: 15, scope: !6341)
!6344 = !DILocation(line: 2906, column: 13, scope: !6340)
!6345 = !DILocation(line: 2906, column: 13, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 2906, column: 13)
!6347 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 2906, column: 13)
!6348 = !DILocation(line: 2906, column: 13, scope: !6347)
!6349 = !DILocalVariable(name: "__j", scope: !6350, file: !3, line: 2906, type: !849)
!6350 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 2906, column: 13)
!6351 = !DILocation(line: 2906, column: 13, scope: !6350)
!6352 = !DILocalVariable(name: "__s", scope: !6350, file: !3, line: 2906, type: !817)
!6353 = !DILocation(line: 2907, column: 4, scope: !6341)
!6354 = !DILocation(line: 2913, column: 11, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 2913, column: 11)
!6356 = !DILocation(line: 2913, column: 24, scope: !6355)
!6357 = !DILocation(line: 2913, column: 21, scope: !6355)
!6358 = !DILocation(line: 2914, column: 11, scope: !6355)
!6359 = !DILocation(line: 2914, column: 39, scope: !6355)
!6360 = !DILocation(line: 2914, column: 50, scope: !6355)
!6361 = !DILocation(line: 2914, column: 14, scope: !6355)
!6362 = !DILocation(line: 2913, column: 11, scope: !6337)
!6363 = !DILocation(line: 2916, column: 15, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 2916, column: 15)
!6365 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 2915, column: 2)
!6366 = !DILocation(line: 2916, column: 29, scope: !6364)
!6367 = !DILocation(line: 2916, column: 15, scope: !6365)
!6368 = !DILocation(line: 2917, column: 13, scope: !6364)
!6369 = !DILocation(line: 2917, column: 13, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 2917, column: 13)
!6371 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 2917, column: 13)
!6372 = !DILocation(line: 2917, column: 13, scope: !6371)
!6373 = !DILocalVariable(name: "__j", scope: !6374, file: !3, line: 2917, type: !849)
!6374 = distinct !DILexicalBlock(scope: !6370, file: !3, line: 2917, column: 13)
!6375 = !DILocation(line: 2917, column: 13, scope: !6374)
!6376 = !DILocalVariable(name: "__s", scope: !6374, file: !3, line: 2917, type: !817)
!6377 = !DILocation(line: 2918, column: 4, scope: !6365)
!6378 = !DILocation(line: 2921, column: 11, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 2921, column: 11)
!6380 = !DILocation(line: 2921, column: 11, scope: !6337)
!6381 = !DILocation(line: 2922, column: 2, scope: !6379)
!6382 = !DILocation(line: 2924, column: 11, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 2924, column: 11)
!6384 = !DILocation(line: 2924, column: 20, scope: !6383)
!6385 = !DILocation(line: 2924, column: 18, scope: !6383)
!6386 = !DILocation(line: 2924, column: 11, scope: !6337)
!6387 = !DILocation(line: 2928, column: 32, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 2925, column: 2)
!6389 = !DILocation(line: 2928, column: 4, scope: !6388)
!6390 = !DILocation(line: 2928, column: 30, scope: !6388)
!6391 = !DILocation(line: 2930, column: 8, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2930, column: 8)
!6393 = !DILocation(line: 2930, column: 22, scope: !6392)
!6394 = !DILocation(line: 2930, column: 8, scope: !6388)
!6395 = !DILocation(line: 2931, column: 13, scope: !6392)
!6396 = !DILocation(line: 2931, column: 13, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2931, column: 13)
!6398 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2931, column: 13)
!6399 = !DILocation(line: 2931, column: 13, scope: !6398)
!6400 = !DILocalVariable(name: "__j", scope: !6401, file: !3, line: 2931, type: !849)
!6401 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 2931, column: 13)
!6402 = !DILocation(line: 2931, column: 13, scope: !6401)
!6403 = !DILocalVariable(name: "__s", scope: !6401, file: !3, line: 2931, type: !817)
!6404 = !DILocation(line: 2933, column: 4, scope: !6388)
!6405 = !DILocation(line: 2936, column: 13, scope: !6337)
!6406 = !DILocation(line: 2937, column: 5, scope: !6337)
!6407 = !DILocation(line: 2899, column: 20, scope: !6331)
!6408 = !DILocation(line: 2899, column: 18, scope: !6331)
!6409 = !DILocation(line: 2898, column: 3, scope: !6331)
!6410 = distinct !{!6410, !6334, !6411}
!6411 = !DILocation(line: 2937, column: 5, scope: !6327)
!6412 = !DILocation(line: 2942, column: 7, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2942, column: 7)
!6414 = !DILocation(line: 2942, column: 20, scope: !6413)
!6415 = !DILocation(line: 2942, column: 17, scope: !6413)
!6416 = !DILocation(line: 2942, column: 7, scope: !6232)
!6417 = !DILocation(line: 2944, column: 10, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 2943, column: 5)
!6419 = !DILocation(line: 2948, column: 11, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 2948, column: 11)
!6421 = !DILocation(line: 2948, column: 24, scope: !6420)
!6422 = !DILocation(line: 2948, column: 21, scope: !6420)
!6423 = !DILocation(line: 2948, column: 35, scope: !6420)
!6424 = !DILocation(line: 2948, column: 39, scope: !6420)
!6425 = !DILocation(line: 2948, column: 11, scope: !6418)
!6426 = !DILocation(line: 2949, column: 26, scope: !6420)
!6427 = !DILocation(line: 2949, column: 9, scope: !6420)
!6428 = !DILocation(line: 2950, column: 5, scope: !6418)
!6429 = !DILocation(line: 2953, column: 36, scope: !6413)
!6430 = !DILocation(line: 2953, column: 44, scope: !6413)
!6431 = !DILocation(line: 2953, column: 47, scope: !6413)
!6432 = !DILocation(line: 2953, column: 10, scope: !6413)
!6433 = !DILocation(line: 2953, column: 8, scope: !6413)
!6434 = !DILocation(line: 2957, column: 19, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2957, column: 3)
!6436 = !DILocation(line: 2957, column: 17, scope: !6435)
!6437 = !DILocation(line: 2957, column: 8, scope: !6435)
!6438 = !DILocation(line: 2957, column: 42, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 2957, column: 3)
!6440 = !DILocation(line: 2957, column: 54, scope: !6439)
!6441 = !DILocation(line: 2957, column: 51, scope: !6439)
!6442 = !DILocation(line: 2957, column: 3, scope: !6435)
!6443 = !DILocation(line: 2959, column: 10, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 2959, column: 9)
!6445 = !DILocation(line: 2959, column: 9, scope: !6439)
!6446 = !DILocalVariable(name: "expr", scope: !6447, file: !3, line: 2961, type: !2055)
!6447 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 2960, column: 7)
!6448 = !DILocation(line: 2961, column: 16, scope: !6447)
!6449 = !DILocation(line: 2963, column: 31, scope: !6447)
!6450 = !DILocation(line: 2963, column: 9, scope: !6447)
!6451 = !DILocation(line: 2967, column: 31, scope: !6447)
!6452 = !DILocation(line: 2967, column: 35, scope: !6447)
!6453 = !DILocation(line: 2967, column: 16, scope: !6447)
!6454 = !DILocation(line: 2967, column: 14, scope: !6447)
!6455 = !DILocation(line: 2968, column: 13, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2968, column: 13)
!6457 = !DILocation(line: 2968, column: 18, scope: !6456)
!6458 = !DILocation(line: 2968, column: 13, scope: !6447)
!6459 = !DILocation(line: 2970, column: 25, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 2969, column: 11)
!6461 = !DILocation(line: 2970, column: 13, scope: !6460)
!6462 = !DILocation(line: 2971, column: 24, scope: !6460)
!6463 = !DILocation(line: 2971, column: 30, scope: !6460)
!6464 = !DILocation(line: 2971, column: 13, scope: !6460)
!6465 = !DILocation(line: 2972, column: 11, scope: !6460)
!6466 = !DILocation(line: 2974, column: 28, scope: !6456)
!6467 = !DILocation(line: 2974, column: 11, scope: !6456)
!6468 = !DILocation(line: 2975, column: 7, scope: !6447)
!6469 = !DILocation(line: 2958, column: 19, scope: !6439)
!6470 = !DILocation(line: 2958, column: 17, scope: !6439)
!6471 = !DILocation(line: 2957, column: 3, scope: !6439)
!6472 = distinct !{!6472, !6442, !6473}
!6473 = !DILocation(line: 2975, column: 7, scope: !6435)
!6474 = !DILocation(line: 2978, column: 22, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2978, column: 7)
!6476 = !DILocation(line: 2978, column: 7, scope: !6475)
!6477 = !DILocation(line: 2978, column: 7, scope: !6232)
!6478 = !DILocation(line: 2980, column: 22, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 2979, column: 5)
!6480 = !DILocation(line: 2980, column: 7, scope: !6479)
!6481 = !DILocation(line: 2981, column: 28, scope: !6479)
!6482 = !DILocation(line: 2981, column: 55, scope: !6479)
!6483 = !DILocation(line: 2981, column: 42, scope: !6479)
!6484 = !DILocation(line: 2981, column: 61, scope: !6479)
!6485 = !DILocation(line: 2981, column: 7, scope: !6479)
!6486 = !DILocation(line: 2981, column: 26, scope: !6479)
!6487 = !DILocation(line: 2982, column: 30, scope: !6479)
!6488 = !DILocation(line: 2982, column: 7, scope: !6479)
!6489 = !DILocation(line: 2982, column: 28, scope: !6479)
!6490 = !DILocation(line: 2983, column: 5, scope: !6479)
!6491 = !DILocation(line: 2985, column: 7, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2985, column: 7)
!6493 = !DILocation(line: 2985, column: 21, scope: !6492)
!6494 = !DILocation(line: 2985, column: 7, scope: !6232)
!6495 = !DILocation(line: 2987, column: 7, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 2986, column: 5)
!6497 = !DILocation(line: 2987, column: 7, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 2987, column: 7)
!6499 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 2987, column: 7)
!6500 = !DILocation(line: 2987, column: 7, scope: !6499)
!6501 = !DILocalVariable(name: "__j", scope: !6502, file: !3, line: 2987, type: !849)
!6502 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 2987, column: 7)
!6503 = !DILocation(line: 2987, column: 7, scope: !6502)
!6504 = !DILocalVariable(name: "__s", scope: !6502, file: !3, line: 2987, type: !817)
!6505 = !DILocation(line: 2988, column: 20, scope: !6496)
!6506 = !DILocation(line: 2988, column: 7, scope: !6496)
!6507 = !DILocation(line: 2989, column: 7, scope: !6496)
!6508 = !DILocation(line: 2989, column: 7, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 2989, column: 7)
!6510 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 2989, column: 7)
!6511 = !DILocation(line: 2989, column: 7, scope: !6510)
!6512 = !DILocalVariable(name: "__j", scope: !6513, file: !3, line: 2989, type: !849)
!6513 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 2989, column: 7)
!6514 = !DILocation(line: 2989, column: 7, scope: !6513)
!6515 = !DILocalVariable(name: "__s", scope: !6513, file: !3, line: 2989, type: !817)
!6516 = !DILocation(line: 2990, column: 5, scope: !6496)
!6517 = !DILocation(line: 2992, column: 3, scope: !6232)
!6518 = !DILocation(line: 2993, column: 10, scope: !6232)
!6519 = !DILocation(line: 2993, column: 3, scope: !6232)
!6520 = !DILocation(line: 2994, column: 1, scope: !6232)
!6521 = distinct !DISubprogram(name: "is_ineligible_successor", scope: !3, file: !3, line: 2667, type: !6522, scopeLine: 2668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{!1057, !2132, !2163}
!6524 = !DILocalVariable(name: "insn", arg: 1, scope: !6521, file: !3, line: 2667, type: !2132)
!6525 = !DILocation(line: 2667, column: 33, scope: !6521)
!6526 = !DILocalVariable(name: "p", arg: 2, scope: !6521, file: !3, line: 2667, type: !2163)
!6527 = !DILocation(line: 2667, column: 47, scope: !6521)
!6528 = !DILocalVariable(name: "prev_insn", scope: !6521, file: !3, line: 2669, type: !2132)
!6529 = !DILocation(line: 2669, column: 10, scope: !6521)
!6530 = !DILocation(line: 2672, column: 7, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2672, column: 7)
!6532 = !DILocation(line: 2672, column: 24, scope: !6531)
!6533 = !DILocation(line: 2672, column: 27, scope: !6531)
!6534 = !DILocation(line: 2672, column: 59, scope: !6531)
!6535 = !DILocation(line: 2672, column: 56, scope: !6531)
!6536 = !DILocation(line: 2672, column: 7, scope: !6521)
!6537 = !DILocation(line: 2673, column: 5, scope: !6531)
!6538 = !DILocation(line: 2674, column: 12, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 2674, column: 12)
!6540 = !DILocation(line: 2674, column: 29, scope: !6539)
!6541 = !DILocation(line: 2674, column: 32, scope: !6539)
!6542 = !DILocation(line: 2674, column: 64, scope: !6539)
!6543 = !DILocation(line: 2674, column: 61, scope: !6539)
!6544 = !DILocation(line: 2674, column: 12, scope: !6531)
!6545 = !DILocation(line: 2675, column: 5, scope: !6539)
!6546 = !DILocation(line: 2678, column: 8, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2678, column: 7)
!6548 = !DILocation(line: 2678, column: 7, scope: !6521)
!6549 = !DILocation(line: 2679, column: 5, scope: !6547)
!6550 = !DILocation(line: 2681, column: 15, scope: !6521)
!6551 = !DILocation(line: 2681, column: 13, scope: !6521)
!6552 = !DILocation(line: 2684, column: 7, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2684, column: 7)
!6554 = !DILocation(line: 2684, column: 27, scope: !6553)
!6555 = !DILocation(line: 2684, column: 25, scope: !6553)
!6556 = !DILocation(line: 2686, column: 7, scope: !6553)
!6557 = !DILocation(line: 2686, column: 11, scope: !6553)
!6558 = !DILocation(line: 2686, column: 32, scope: !6553)
!6559 = !DILocation(line: 2686, column: 29, scope: !6553)
!6560 = !DILocation(line: 2687, column: 4, scope: !6553)
!6561 = !DILocation(line: 2687, column: 8, scope: !6553)
!6562 = !DILocation(line: 2693, column: 15, scope: !6553)
!6563 = !DILocation(line: 2693, column: 18, scope: !6553)
!6564 = !DILocation(line: 2695, column: 7, scope: !6553)
!6565 = !DILocation(line: 2695, column: 11, scope: !6553)
!6566 = !DILocation(line: 2695, column: 31, scope: !6553)
!6567 = !DILocation(line: 2695, column: 29, scope: !6553)
!6568 = !DILocation(line: 2696, column: 4, scope: !6553)
!6569 = !DILocation(line: 2696, column: 7, scope: !6553)
!6570 = !DILocation(line: 2700, column: 7, scope: !6553)
!6571 = !DILocation(line: 2700, column: 12, scope: !6553)
!6572 = !DILocation(line: 2701, column: 11, scope: !6553)
!6573 = !DILocation(line: 2701, column: 14, scope: !6553)
!6574 = !DILocation(line: 2701, column: 38, scope: !6553)
!6575 = !DILocation(line: 2684, column: 7, scope: !6521)
!6576 = !DILocation(line: 2702, column: 5, scope: !6553)
!6577 = !DILocation(line: 2704, column: 5, scope: !6553)
!6578 = !DILocation(line: 2705, column: 1, scope: !6521)
!6579 = distinct !DISubprogram(name: "_xlist_add", scope: !398, file: !398, line: 477, type: !6580, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{null, !6582, !825}
!6582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!6583 = !DILocalVariable(name: "lp", arg: 1, scope: !6579, file: !398, line: 477, type: !6582)
!6584 = !DILocation(line: 477, column: 23, scope: !6579)
!6585 = !DILocalVariable(name: "x", arg: 2, scope: !6579, file: !398, line: 477, type: !825)
!6586 = !DILocation(line: 477, column: 31, scope: !6579)
!6587 = !DILocation(line: 479, column: 14, scope: !6579)
!6588 = !DILocation(line: 479, column: 3, scope: !6579)
!6589 = !DILocation(line: 480, column: 20, scope: !6579)
!6590 = !DILocation(line: 480, column: 3, scope: !6579)
!6591 = !DILocation(line: 480, column: 18, scope: !6579)
!6592 = !DILocation(line: 481, column: 1, scope: !6579)
!6593 = distinct !DISubprogram(name: "compute_av_set_at_bb_end", scope: !3, file: !3, line: 2712, type: !6594, scopeLine: 2713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6594 = !DISubroutineType(types: !6595)
!6595 = !{!2166, !2132, !2163, !849}
!6596 = !DILocalVariable(name: "insn", arg: 1, scope: !6593, file: !3, line: 2712, type: !2132)
!6597 = !DILocation(line: 2712, column: 34, scope: !6593)
!6598 = !DILocalVariable(name: "p", arg: 2, scope: !6593, file: !3, line: 2712, type: !2163)
!6599 = !DILocation(line: 2712, column: 48, scope: !6593)
!6600 = !DILocalVariable(name: "ws", arg: 3, scope: !6593, file: !3, line: 2712, type: !849)
!6601 = !DILocation(line: 2712, column: 55, scope: !6593)
!6602 = !DILocalVariable(name: "sinfo", scope: !6593, file: !3, line: 2714, type: !6603)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64)
!6604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "succs_info", file: !398, line: 998, size: 384, elements: !6605)
!6605 = !{!6606, !6607, !6614, !6620, !6621, !6622, !6623}
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6604, file: !398, line: 1001, baseType: !3488, size: 16)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "succs_ok", scope: !6604, file: !398, line: 1004, baseType: !6608, size: 64, offset: 64)
!6608 = !DIDerivedType(tag: DW_TAG_typedef, name: "insn_vec_t", file: !403, line: 41, baseType: !6609)
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6610, size: 64)
!6610 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_heap", file: !456, line: 201, baseType: !6611)
!6611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_heap", file: !456, line: 201, size: 128, elements: !6612)
!6612 = !{!6613}
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6611, file: !456, line: 201, baseType: !2044, size: 128)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "probs_ok", scope: !6604, file: !398, line: 1008, baseType: !6615, size: 64, offset: 128)
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 64)
!6616 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1345, line: 32, baseType: !6617)
!6617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1345, line: 32, size: 96, elements: !6618)
!6618 = !{!6619}
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6617, file: !1345, line: 32, baseType: !2635, size: 96)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "succs_other", scope: !6604, file: !398, line: 1011, baseType: !6608, size: 64, offset: 192)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "all_prob", scope: !6604, file: !398, line: 1014, baseType: !849, size: 32, offset: 256)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "all_succs_n", scope: !6604, file: !398, line: 1017, baseType: !849, size: 32, offset: 288)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "succs_ok_n", scope: !6604, file: !398, line: 1020, baseType: !849, size: 32, offset: 320)
!6624 = !DILocation(line: 2714, column: 22, scope: !6593)
!6625 = !DILocalVariable(name: "expr_in_all_succ_branches", scope: !6593, file: !3, line: 2715, type: !2166)
!6626 = !DILocation(line: 2715, column: 12, scope: !6593)
!6627 = !DILocalVariable(name: "is", scope: !6593, file: !3, line: 2716, type: !849)
!6628 = !DILocation(line: 2716, column: 7, scope: !6593)
!6629 = !DILocalVariable(name: "succ", scope: !6593, file: !3, line: 2717, type: !2132)
!6630 = !DILocation(line: 2717, column: 10, scope: !6593)
!6631 = !DILocalVariable(name: "zero_succ", scope: !6593, file: !3, line: 2717, type: !2132)
!6632 = !DILocation(line: 2717, column: 16, scope: !6593)
!6633 = !DILocalVariable(name: "av1", scope: !6593, file: !3, line: 2718, type: !2166)
!6634 = !DILocation(line: 2718, column: 12, scope: !6593)
!6635 = !DILocation(line: 2720, column: 3, scope: !6593)
!6636 = !DILocation(line: 2724, column: 31, scope: !6593)
!6637 = !DILocation(line: 2724, column: 11, scope: !6593)
!6638 = !DILocation(line: 2724, column: 9, scope: !6593)
!6639 = !DILocation(line: 2727, column: 7, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2727, column: 7)
!6641 = !DILocation(line: 2727, column: 21, scope: !6640)
!6642 = !DILocation(line: 2727, column: 7, scope: !6593)
!6643 = !DILocation(line: 2729, column: 7, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 2728, column: 5)
!6645 = !DILocation(line: 2729, column: 7, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 2729, column: 7)
!6647 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 2729, column: 7)
!6648 = !DILocation(line: 2729, column: 7, scope: !6647)
!6649 = !DILocalVariable(name: "__j", scope: !6650, file: !3, line: 2729, type: !849)
!6650 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 2729, column: 7)
!6651 = !DILocation(line: 2729, column: 7, scope: !6650)
!6652 = !DILocalVariable(name: "__s", scope: !6650, file: !3, line: 2729, type: !817)
!6653 = !DILocation(line: 2730, column: 25, scope: !6644)
!6654 = !DILocation(line: 2730, column: 32, scope: !6644)
!6655 = !DILocation(line: 2730, column: 7, scope: !6644)
!6656 = !DILocation(line: 2731, column: 7, scope: !6644)
!6657 = !DILocation(line: 2731, column: 7, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 2731, column: 7)
!6659 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 2731, column: 7)
!6660 = !DILocation(line: 2731, column: 7, scope: !6659)
!6661 = !DILocalVariable(name: "__j", scope: !6662, file: !3, line: 2731, type: !849)
!6662 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 2731, column: 7)
!6663 = !DILocation(line: 2731, column: 7, scope: !6662)
!6664 = !DILocalVariable(name: "__s", scope: !6662, file: !3, line: 2731, type: !817)
!6665 = !DILocation(line: 2732, column: 11, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 2732, column: 11)
!6667 = !DILocation(line: 2732, column: 18, scope: !6666)
!6668 = !DILocation(line: 2732, column: 32, scope: !6666)
!6669 = !DILocation(line: 2732, column: 39, scope: !6666)
!6670 = !DILocation(line: 2732, column: 29, scope: !6666)
!6671 = !DILocation(line: 2732, column: 11, scope: !6644)
!6672 = !DILocation(line: 2733, column: 9, scope: !6666)
!6673 = !DILocation(line: 2733, column: 9, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 2733, column: 9)
!6675 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 2733, column: 9)
!6676 = !DILocation(line: 2733, column: 9, scope: !6675)
!6677 = !DILocalVariable(name: "__j", scope: !6678, file: !3, line: 2733, type: !849)
!6678 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 2733, column: 9)
!6679 = !DILocation(line: 2733, column: 9, scope: !6678)
!6680 = !DILocalVariable(name: "__s", scope: !6678, file: !3, line: 2733, type: !817)
!6681 = !DILocation(line: 2734, column: 5, scope: !6644)
!6682 = !DILocation(line: 2737, column: 3, scope: !6593)
!6683 = !DILocation(line: 2739, column: 11, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2739, column: 3)
!6685 = !DILocation(line: 2739, column: 8, scope: !6684)
!6686 = !DILocation(line: 2739, column: 16, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 2739, column: 3)
!6688 = !DILocation(line: 2739, column: 3, scope: !6684)
!6689 = !DILocalVariable(name: "succ_set", scope: !6690, file: !3, line: 2741, type: !2166)
!6690 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 2740, column: 5)
!6691 = !DILocation(line: 2741, column: 16, scope: !6690)
!6692 = !DILocation(line: 2744, column: 44, scope: !6690)
!6693 = !DILocation(line: 2744, column: 50, scope: !6690)
!6694 = !DILocation(line: 2744, column: 53, scope: !6690)
!6695 = !DILocation(line: 2744, column: 18, scope: !6690)
!6696 = !DILocation(line: 2744, column: 16, scope: !6690)
!6697 = !DILocation(line: 2746, column: 32, scope: !6690)
!6698 = !DILocation(line: 2747, column: 32, scope: !6690)
!6699 = !DILocation(line: 2748, column: 32, scope: !6690)
!6700 = !DILocation(line: 2748, column: 39, scope: !6690)
!6701 = !DILocation(line: 2746, column: 7, scope: !6690)
!6702 = !DILocation(line: 2750, column: 11, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 2750, column: 11)
!6704 = !DILocation(line: 2750, column: 18, scope: !6703)
!6705 = !DILocation(line: 2750, column: 30, scope: !6703)
!6706 = !DILocation(line: 2750, column: 11, scope: !6690)
!6707 = !DILocation(line: 2755, column: 15, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 2755, column: 15)
!6709 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2751, column: 2)
!6710 = !DILocation(line: 2755, column: 18, scope: !6708)
!6711 = !DILocation(line: 2755, column: 15, scope: !6709)
!6712 = !DILocation(line: 2757, column: 56, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 2756, column: 13)
!6714 = !DILocation(line: 2757, column: 43, scope: !6713)
!6715 = !DILocation(line: 2757, column: 41, scope: !6713)
!6716 = !DILocation(line: 2760, column: 27, scope: !6713)
!6717 = !DILocation(line: 2760, column: 25, scope: !6713)
!6718 = !DILocation(line: 2761, column: 13, scope: !6713)
!6719 = !DILocalVariable(name: "i", scope: !6720, file: !3, line: 2764, type: !3060)
!6720 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 2763, column: 13)
!6721 = !DILocation(line: 2764, column: 31, scope: !6720)
!6722 = !DILocalVariable(name: "expr", scope: !6720, file: !3, line: 2765, type: !2055)
!6723 = !DILocation(line: 2765, column: 22, scope: !6720)
!6724 = !DILocation(line: 2767, column: 15, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 2767, column: 15)
!6726 = !DILocation(line: 2767, column: 15, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 2767, column: 15)
!6728 = !DILocation(line: 2768, column: 38, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 2768, column: 21)
!6730 = !DILocation(line: 2768, column: 48, scope: !6729)
!6731 = !DILocation(line: 2768, column: 22, scope: !6729)
!6732 = !DILocation(line: 2768, column: 21, scope: !6727)
!6733 = !DILocation(line: 2769, column: 19, scope: !6729)
!6734 = !DILocation(line: 2768, column: 65, scope: !6729)
!6735 = distinct !{!6735, !6724, !6736}
!6736 = !DILocation(line: 2769, column: 41, scope: !6725)
!6737 = !DILocation(line: 2771, column: 2, scope: !6709)
!6738 = !DILocation(line: 2775, column: 11, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 2775, column: 11)
!6740 = !DILocation(line: 2775, column: 18, scope: !6739)
!6741 = !DILocation(line: 2775, column: 29, scope: !6739)
!6742 = !DILocation(line: 2775, column: 34, scope: !6739)
!6743 = !DILocation(line: 2775, column: 37, scope: !6739)
!6744 = !DILocation(line: 2775, column: 40, scope: !6739)
!6745 = !DILocation(line: 2775, column: 11, scope: !6690)
!6746 = !DILocalVariable(name: "bb0", scope: !6747, file: !3, line: 2777, type: !1362)
!6747 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 2776, column: 9)
!6748 = !DILocation(line: 2777, column: 23, scope: !6747)
!6749 = !DILocation(line: 2777, column: 29, scope: !6747)
!6750 = !DILocalVariable(name: "bb1", scope: !6747, file: !3, line: 2778, type: !1362)
!6751 = !DILocation(line: 2778, column: 23, scope: !6747)
!6752 = !DILocation(line: 2778, column: 29, scope: !6747)
!6753 = !DILocation(line: 2780, column: 11, scope: !6747)
!6754 = !DILocation(line: 2782, column: 34, scope: !6747)
!6755 = !DILocation(line: 2783, column: 34, scope: !6747)
!6756 = !DILocation(line: 2784, column: 34, scope: !6747)
!6757 = !DILocation(line: 2781, column: 11, scope: !6747)
!6758 = !DILocation(line: 2785, column: 9, scope: !6747)
!6759 = !DILocation(line: 2787, column: 50, scope: !6739)
!6760 = !DILocation(line: 2787, column: 9, scope: !6739)
!6761 = !DILocation(line: 2788, column: 5, scope: !6690)
!6762 = !DILocation(line: 2739, column: 64, scope: !6687)
!6763 = !DILocation(line: 2739, column: 3, scope: !6687)
!6764 = distinct !{!6764, !6688, !6765}
!6765 = !DILocation(line: 2788, column: 5, scope: !6684)
!6766 = !DILocation(line: 2792, column: 7, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2792, column: 7)
!6768 = !DILocation(line: 2792, column: 14, scope: !6767)
!6769 = !DILocation(line: 2792, column: 25, scope: !6767)
!6770 = !DILocation(line: 2792, column: 7, scope: !6593)
!6771 = !DILocation(line: 2793, column: 13, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 2793, column: 5)
!6773 = !DILocation(line: 2793, column: 10, scope: !6772)
!6774 = !DILocation(line: 2793, column: 18, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 2793, column: 5)
!6776 = !DILocation(line: 2793, column: 5, scope: !6772)
!6777 = !DILocalVariable(name: "succ_bb", scope: !6778, file: !3, line: 2795, type: !1362)
!6778 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 2794, column: 7)
!6779 = !DILocation(line: 2795, column: 21, scope: !6778)
!6780 = !DILocation(line: 2795, column: 31, scope: !6778)
!6781 = !DILocation(line: 2797, column: 9, scope: !6778)
!6782 = !DILocation(line: 2798, column: 35, scope: !6778)
!6783 = !DILocation(line: 2798, column: 40, scope: !6778)
!6784 = !DILocation(line: 2799, column: 35, scope: !6778)
!6785 = !DILocation(line: 2798, column: 9, scope: !6778)
!6786 = !DILocation(line: 2800, column: 7, scope: !6778)
!6787 = !DILocation(line: 2793, column: 66, scope: !6775)
!6788 = !DILocation(line: 2793, column: 5, scope: !6775)
!6789 = distinct !{!6789, !6776, !6790}
!6790 = !DILocation(line: 2800, column: 7, scope: !6772)
!6791 = !DILocation(line: 2803, column: 7, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2803, column: 7)
!6793 = !DILocation(line: 2803, column: 14, scope: !6792)
!6794 = !DILocation(line: 2803, column: 28, scope: !6792)
!6795 = !DILocation(line: 2803, column: 35, scope: !6792)
!6796 = !DILocation(line: 2803, column: 26, scope: !6792)
!6797 = !DILocation(line: 2803, column: 7, scope: !6593)
!6798 = !DILocation(line: 2804, column: 13, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 2804, column: 5)
!6800 = !DILocation(line: 2804, column: 10, scope: !6799)
!6801 = !DILocation(line: 2804, column: 18, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 2804, column: 5)
!6803 = !DILocation(line: 2804, column: 5, scope: !6799)
!6804 = !DILocation(line: 2806, column: 10, scope: !6802)
!6805 = !DILocation(line: 2806, column: 21, scope: !6802)
!6806 = !DILocation(line: 2805, column: 7, scope: !6802)
!6807 = !DILocation(line: 2804, column: 69, scope: !6802)
!6808 = !DILocation(line: 2804, column: 5, scope: !6802)
!6809 = distinct !{!6809, !6803, !6810}
!6810 = !DILocation(line: 2806, column: 54, scope: !6799)
!6811 = !DILocation(line: 2808, column: 7, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2808, column: 7)
!6813 = !DILocation(line: 2808, column: 14, scope: !6812)
!6814 = !DILocation(line: 2808, column: 26, scope: !6812)
!6815 = !DILocation(line: 2808, column: 7, scope: !6593)
!6816 = !DILocalVariable(name: "i", scope: !6817, file: !3, line: 2810, type: !3060)
!6817 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2809, column: 5)
!6818 = !DILocation(line: 2810, column: 23, scope: !6817)
!6819 = !DILocalVariable(name: "expr", scope: !6817, file: !3, line: 2811, type: !2055)
!6820 = !DILocation(line: 2811, column: 14, scope: !6817)
!6821 = !DILocation(line: 2815, column: 7, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 2815, column: 7)
!6823 = !DILocation(line: 2815, column: 7, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 2815, column: 7)
!6825 = !DILocation(line: 2816, column: 23, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 2816, column: 6)
!6827 = !DILocation(line: 2816, column: 50, scope: !6826)
!6828 = !DILocation(line: 2816, column: 7, scope: !6826)
!6829 = !DILocation(line: 2816, column: 6, scope: !6824)
!6830 = !DILocation(line: 2817, column: 4, scope: !6826)
!6831 = !DILocation(line: 2817, column: 20, scope: !6826)
!6832 = !DILocation(line: 2816, column: 67, scope: !6826)
!6833 = distinct !{!6833, !6821, !6834}
!6834 = !DILocation(line: 2817, column: 20, scope: !6822)
!6835 = !DILocation(line: 2819, column: 7, scope: !6817)
!6836 = !DILocation(line: 2825, column: 7, scope: !6817)
!6837 = !DILocation(line: 2826, column: 5, scope: !6817)
!6838 = !DILocation(line: 2828, column: 3, scope: !6593)
!6839 = !DILocation(line: 2829, column: 20, scope: !6593)
!6840 = !DILocation(line: 2829, column: 3, scope: !6593)
!6841 = !DILocation(line: 2831, column: 7, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2831, column: 7)
!6843 = !DILocation(line: 2831, column: 21, scope: !6842)
!6844 = !DILocation(line: 2831, column: 7, scope: !6593)
!6845 = !DILocation(line: 2833, column: 7, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 2832, column: 5)
!6847 = !DILocation(line: 2833, column: 7, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 2833, column: 7)
!6849 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 2833, column: 7)
!6850 = !DILocation(line: 2833, column: 7, scope: !6849)
!6851 = !DILocalVariable(name: "__j", scope: !6852, file: !3, line: 2833, type: !849)
!6852 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 2833, column: 7)
!6853 = !DILocation(line: 2833, column: 7, scope: !6852)
!6854 = !DILocalVariable(name: "__s", scope: !6852, file: !3, line: 2833, type: !817)
!6855 = !DILocation(line: 2834, column: 20, scope: !6846)
!6856 = !DILocation(line: 2834, column: 7, scope: !6846)
!6857 = !DILocation(line: 2835, column: 7, scope: !6846)
!6858 = !DILocation(line: 2835, column: 7, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 2835, column: 7)
!6860 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 2835, column: 7)
!6861 = !DILocation(line: 2835, column: 7, scope: !6860)
!6862 = !DILocalVariable(name: "__j", scope: !6863, file: !3, line: 2835, type: !849)
!6863 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 2835, column: 7)
!6864 = !DILocation(line: 2835, column: 7, scope: !6863)
!6865 = !DILocalVariable(name: "__s", scope: !6863, file: !3, line: 2835, type: !817)
!6866 = !DILocation(line: 2836, column: 5, scope: !6846)
!6867 = !DILocation(line: 2838, column: 10, scope: !6593)
!6868 = !DILocation(line: 2838, column: 3, scope: !6593)
!6869 = distinct !DISubprogram(name: "moveup_set_expr", scope: !3, file: !3, line: 2582, type: !6870, scopeLine: 2583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6870 = !DISubroutineType(types: !6871)
!6871 = !{null, !6872, !2132, !1057}
!6872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!6873 = !DILocalVariable(name: "avp", arg: 1, scope: !6869, file: !3, line: 2582, type: !6872)
!6874 = !DILocation(line: 2582, column: 28, scope: !6869)
!6875 = !DILocalVariable(name: "insn", arg: 2, scope: !6869, file: !3, line: 2582, type: !2132)
!6876 = !DILocation(line: 2582, column: 40, scope: !6869)
!6877 = !DILocalVariable(name: "inside_insn_group", arg: 3, scope: !6869, file: !3, line: 2582, type: !1057)
!6878 = !DILocation(line: 2582, column: 51, scope: !6869)
!6879 = !DILocalVariable(name: "i", scope: !6869, file: !3, line: 2584, type: !3060)
!6880 = !DILocation(line: 2584, column: 19, scope: !6869)
!6881 = !DILocalVariable(name: "expr", scope: !6869, file: !3, line: 2585, type: !2055)
!6882 = !DILocation(line: 2585, column: 10, scope: !6869)
!6883 = !DILocation(line: 2587, column: 3, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 2587, column: 3)
!6885 = !DILocation(line: 2587, column: 3, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 2587, column: 3)
!6887 = !DILocation(line: 2590, column: 35, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 2588, column: 5)
!6889 = !DILocation(line: 2590, column: 41, scope: !6888)
!6890 = !DILocation(line: 2590, column: 47, scope: !6888)
!6891 = !DILocation(line: 2590, column: 15, scope: !6888)
!6892 = !DILocation(line: 2590, column: 7, scope: !6888)
!6893 = !DILocation(line: 2594, column: 4, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2591, column: 2)
!6895 = !DILocation(line: 2597, column: 4, scope: !6894)
!6896 = !DILocation(line: 2598, column: 4, scope: !6894)
!6897 = !DILocation(line: 2601, column: 42, scope: !6894)
!6898 = !DILocation(line: 2601, column: 51, scope: !6894)
!6899 = !DILocation(line: 2601, column: 18, scope: !6894)
!6900 = !DILocation(line: 2601, column: 16, scope: !6894)
!6901 = !DILocation(line: 2602, column: 4, scope: !6894)
!6902 = !DILocation(line: 2605, column: 4, scope: !6894)
!6903 = !DILocation(line: 2606, column: 2, scope: !6894)
!6904 = !DILocation(line: 2607, column: 5, scope: !6888)
!6905 = distinct !{!6905, !6883, !6906}
!6906 = !DILocation(line: 2607, column: 5, scope: !6884)
!6907 = !DILocation(line: 2608, column: 1, scope: !6869)
!6908 = distinct !DISubprogram(name: "_list_remove", scope: !398, file: !398, line: 399, type: !6909, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6909 = !DISubroutineType(types: !6910)
!6910 = !{null, !3065}
!6911 = !DILocalVariable(name: "lp", arg: 1, scope: !6908, file: !398, line: 399, type: !3065)
!6912 = !DILocation(line: 399, column: 24, scope: !6908)
!6913 = !DILocalVariable(name: "n", scope: !6908, file: !398, line: 401, type: !2149)
!6914 = !DILocation(line: 401, column: 11, scope: !6908)
!6915 = !DILocation(line: 401, column: 16, scope: !6908)
!6916 = !DILocation(line: 401, column: 15, scope: !6908)
!6917 = !DILocation(line: 403, column: 9, scope: !6908)
!6918 = !DILocation(line: 403, column: 4, scope: !6908)
!6919 = !DILocation(line: 403, column: 7, scope: !6908)
!6920 = !DILocation(line: 404, column: 14, scope: !6908)
!6921 = !DILocation(line: 404, column: 32, scope: !6908)
!6922 = !DILocation(line: 404, column: 3, scope: !6908)
!6923 = !DILocation(line: 405, column: 1, scope: !6908)
!6924 = distinct !DISubprogram(name: "_xlist_is_in_p", scope: !398, file: !398, line: 487, type: !6925, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6925 = !DISubroutineType(types: !6926)
!6926 = !{!1057, !2164, !825}
!6927 = !DILocalVariable(name: "l", arg: 1, scope: !6924, file: !398, line: 487, type: !2164)
!6928 = !DILocation(line: 487, column: 26, scope: !6924)
!6929 = !DILocalVariable(name: "x", arg: 2, scope: !6924, file: !398, line: 487, type: !825)
!6930 = !DILocation(line: 487, column: 33, scope: !6924)
!6931 = !DILocation(line: 489, column: 3, scope: !6924)
!6932 = !DILocation(line: 489, column: 10, scope: !6924)
!6933 = !DILocation(line: 491, column: 11, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !398, line: 491, column: 11)
!6935 = distinct !DILexicalBlock(scope: !6924, file: !398, line: 490, column: 5)
!6936 = !DILocation(line: 491, column: 27, scope: !6934)
!6937 = !DILocation(line: 491, column: 24, scope: !6934)
!6938 = !DILocation(line: 491, column: 11, scope: !6935)
!6939 = !DILocation(line: 492, column: 9, scope: !6934)
!6940 = !DILocation(line: 493, column: 11, scope: !6935)
!6941 = !DILocation(line: 493, column: 9, scope: !6935)
!6942 = distinct !{!6942, !6931, !6943}
!6943 = !DILocation(line: 494, column: 5, scope: !6924)
!6944 = !DILocation(line: 496, column: 3, scope: !6924)
!6945 = !DILocation(line: 497, column: 1, scope: !6924)
!6946 = distinct !DISubprogram(name: "_list_add", scope: !398, file: !398, line: 382, type: !6909, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6947 = !DILocalVariable(name: "lp", arg: 1, scope: !6946, file: !398, line: 382, type: !3065)
!6948 = !DILocation(line: 382, column: 21, scope: !6946)
!6949 = !DILocalVariable(name: "l", scope: !6946, file: !398, line: 384, type: !2149)
!6950 = !DILocation(line: 384, column: 11, scope: !6946)
!6951 = !DILocation(line: 384, column: 15, scope: !6946)
!6952 = !DILocation(line: 386, column: 21, scope: !6946)
!6953 = !DILocation(line: 386, column: 20, scope: !6946)
!6954 = !DILocation(line: 386, column: 3, scope: !6946)
!6955 = !DILocation(line: 386, column: 18, scope: !6946)
!6956 = !DILocation(line: 387, column: 9, scope: !6946)
!6957 = !DILocation(line: 387, column: 4, scope: !6946)
!6958 = !DILocation(line: 387, column: 7, scope: !6946)
!6959 = !DILocation(line: 388, column: 1, scope: !6946)
!6960 = distinct !DISubprogram(name: "_list_alloc", scope: !398, file: !398, line: 376, type: !6961, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6961 = !DISubroutineType(types: !6962)
!6962 = !{!2149}
!6963 = !DILocation(line: 378, column: 32, scope: !6960)
!6964 = !DILocation(line: 378, column: 20, scope: !6960)
!6965 = !DILocation(line: 378, column: 10, scope: !6960)
!6966 = !DILocation(line: 378, column: 3, scope: !6960)
!6967 = distinct !DISubprogram(name: "VEC_rtx_base_iterate", scope: !456, file: !456, line: 200, type: !6968, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6968 = !DISubroutineType(types: !6969)
!6969 = !{!849, !6970, !7, !5250}
!6970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6971, size: 64)
!6971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2044)
!6972 = !DILocalVariable(name: "vec_", arg: 1, scope: !6967, file: !456, line: 200, type: !6970)
!6973 = !DILocation(line: 200, column: 1, scope: !6967)
!6974 = !DILocalVariable(name: "ix_", arg: 2, scope: !6967, file: !456, line: 200, type: !7)
!6975 = !DILocalVariable(name: "ptr", arg: 3, scope: !6967, file: !456, line: 200, type: !5250)
!6976 = !DILocation(line: 200, column: 1, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6967, file: !456, line: 200, column: 1)
!6978 = !DILocation(line: 200, column: 1, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6977, file: !456, line: 200, column: 1)
!6980 = !DILocation(line: 200, column: 1, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6977, file: !456, line: 200, column: 1)
!6982 = distinct !DISubprogram(name: "_list_iter_start", scope: !398, file: !398, line: 429, type: !6983, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!6983 = !DISubroutineType(types: !6984)
!6984 = !{null, !6985, !3065, !1057}
!6985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!6986 = !DILocalVariable(name: "ip", arg: 1, scope: !6982, file: !398, line: 429, type: !6985)
!6987 = !DILocation(line: 429, column: 35, scope: !6982)
!6988 = !DILocalVariable(name: "lp", arg: 2, scope: !6982, file: !398, line: 429, type: !3065)
!6989 = !DILocation(line: 429, column: 48, scope: !6982)
!6990 = !DILocalVariable(name: "can_remove_p", arg: 3, scope: !6982, file: !398, line: 429, type: !1057)
!6991 = !DILocation(line: 429, column: 57, scope: !6982)
!6992 = !DILocation(line: 431, column: 12, scope: !6982)
!6993 = !DILocation(line: 431, column: 3, scope: !6982)
!6994 = !DILocation(line: 431, column: 7, scope: !6982)
!6995 = !DILocation(line: 431, column: 10, scope: !6982)
!6996 = !DILocation(line: 432, column: 22, scope: !6982)
!6997 = !DILocation(line: 432, column: 3, scope: !6982)
!6998 = !DILocation(line: 432, column: 7, scope: !6982)
!6999 = !DILocation(line: 432, column: 20, scope: !6982)
!7000 = !DILocation(line: 433, column: 3, scope: !6982)
!7001 = !DILocation(line: 433, column: 7, scope: !6982)
!7002 = !DILocation(line: 433, column: 17, scope: !6982)
!7003 = !DILocation(line: 434, column: 1, scope: !6982)
!7004 = distinct !DISubprogram(name: "_list_iter_cond_expr", scope: !398, file: !398, line: 538, type: !7005, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7005 = !DISubroutineType(types: !7006)
!7006 = !{!1057, !2166, !7007}
!7007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!7008 = !DILocalVariable(name: "av", arg: 1, scope: !7004, file: !398, line: 538, type: !2166)
!7009 = !DILocation(line: 538, column: 32, scope: !7004)
!7010 = !DILocalVariable(name: "exprp", arg: 2, scope: !7004, file: !398, line: 538, type: !7007)
!7011 = !DILocation(line: 538, column: 44, scope: !7004)
!7012 = !DILocation(line: 540, column: 7, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7004, file: !398, line: 540, column: 7)
!7014 = !DILocation(line: 540, column: 7, scope: !7004)
!7015 = !DILocation(line: 542, column: 16, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7013, file: !398, line: 541, column: 5)
!7017 = !DILocation(line: 542, column: 8, scope: !7016)
!7018 = !DILocation(line: 542, column: 14, scope: !7016)
!7019 = !DILocation(line: 543, column: 7, scope: !7016)
!7020 = !DILocation(line: 546, column: 3, scope: !7004)
!7021 = !DILocation(line: 547, column: 1, scope: !7004)
!7022 = distinct !DISubprogram(name: "_list_iter_next", scope: !398, file: !398, line: 437, type: !7023, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{null, !6985}
!7025 = !DILocalVariable(name: "ip", arg: 1, scope: !7022, file: !398, line: 437, type: !6985)
!7026 = !DILocation(line: 437, column: 34, scope: !7022)
!7027 = !DILocation(line: 439, column: 8, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7022, file: !398, line: 439, column: 7)
!7029 = !DILocation(line: 439, column: 12, scope: !7028)
!7030 = !DILocation(line: 439, column: 7, scope: !7022)
!7031 = !DILocation(line: 440, column: 15, scope: !7028)
!7032 = !DILocation(line: 440, column: 5, scope: !7028)
!7033 = !DILocation(line: 440, column: 9, scope: !7028)
!7034 = !DILocation(line: 440, column: 12, scope: !7028)
!7035 = !DILocation(line: 442, column: 5, scope: !7028)
!7036 = !DILocation(line: 442, column: 9, scope: !7028)
!7037 = !DILocation(line: 442, column: 19, scope: !7028)
!7038 = !DILocation(line: 443, column: 1, scope: !7022)
!7039 = distinct !DISubprogram(name: "vinsn_vec_add", scope: !3, file: !3, line: 3657, type: !7040, scopeLine: 3658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{null, !7042, !2055}
!7042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!7043 = !DILocalVariable(name: "vinsn_vec", arg: 1, scope: !7039, file: !3, line: 3657, type: !7042)
!7044 = !DILocation(line: 3657, column: 29, scope: !7039)
!7045 = !DILocalVariable(name: "expr", arg: 2, scope: !7039, file: !3, line: 3657, type: !2055)
!7046 = !DILocation(line: 3657, column: 47, scope: !7039)
!7047 = !DILocation(line: 3659, column: 17, scope: !7039)
!7048 = !DILocation(line: 3659, column: 3, scope: !7039)
!7049 = !DILocation(line: 3660, column: 3, scope: !7039)
!7050 = !DILocation(line: 3661, column: 1, scope: !7039)
!7051 = distinct !DISubprogram(name: "VEC_vinsn_t_heap_safe_push", scope: !3, file: !3, line: 512, type: !7052, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!5255, !7054, !2061}
!7054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!7055 = !DILocalVariable(name: "vec_", arg: 1, scope: !7051, file: !3, line: 512, type: !7054)
!7056 = !DILocation(line: 512, column: 1, scope: !7051)
!7057 = !DILocalVariable(name: "obj_", arg: 2, scope: !7051, file: !3, line: 512, type: !2061)
!7058 = distinct !DISubprogram(name: "VEC_vinsn_t_heap_reserve", scope: !3, file: !3, line: 512, type: !7059, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7059 = !DISubroutineType(types: !7060)
!7060 = !{!849, !7054, !849}
!7061 = !DILocalVariable(name: "vec_", arg: 1, scope: !7058, file: !3, line: 512, type: !7054)
!7062 = !DILocation(line: 512, column: 1, scope: !7058)
!7063 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7058, file: !3, line: 512, type: !849)
!7064 = !DILocalVariable(name: "extend", scope: !7058, file: !3, line: 512, type: !849)
!7065 = !DILocation(line: 512, column: 1, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 512, column: 1)
!7067 = distinct !DISubprogram(name: "VEC_vinsn_t_base_quick_push", scope: !3, file: !3, line: 511, type: !7068, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{!5255, !7070, !2061}
!7070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!7071 = !DILocalVariable(name: "vec_", arg: 1, scope: !7067, file: !3, line: 511, type: !7070)
!7072 = !DILocation(line: 511, column: 1, scope: !7067)
!7073 = !DILocalVariable(name: "obj_", arg: 2, scope: !7067, file: !3, line: 511, type: !2061)
!7074 = !DILocalVariable(name: "slot_", scope: !7067, file: !3, line: 511, type: !5255)
!7075 = distinct !DISubprogram(name: "VEC_vinsn_t_base_space", scope: !3, file: !3, line: 511, type: !7076, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7076 = !DISubroutineType(types: !7077)
!7077 = !{!849, !7070, !849}
!7078 = !DILocalVariable(name: "vec_", arg: 1, scope: !7075, file: !3, line: 511, type: !7070)
!7079 = !DILocation(line: 511, column: 1, scope: !7075)
!7080 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7075, file: !3, line: 511, type: !849)
!7081 = distinct !DISubprogram(name: "compute_live_below_insn", scope: !3, file: !3, line: 3147, type: !7082, scopeLine: 3148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7082 = !DISubroutineType(types: !7083)
!7083 = !{null, !825, !2073}
!7084 = !DILocalVariable(name: "insn", arg: 1, scope: !7081, file: !3, line: 3147, type: !825)
!7085 = !DILocation(line: 3147, column: 30, scope: !7081)
!7086 = !DILocalVariable(name: "regs", arg: 2, scope: !7081, file: !3, line: 3147, type: !2073)
!7087 = !DILocation(line: 3147, column: 43, scope: !7081)
!7088 = !DILocalVariable(name: "succ", scope: !7081, file: !3, line: 3149, type: !825)
!7089 = !DILocation(line: 3149, column: 7, scope: !7081)
!7090 = !DILocalVariable(name: "si", scope: !7081, file: !3, line: 3150, type: !3479)
!7091 = !DILocation(line: 3150, column: 17, scope: !7081)
!7092 = !DILocation(line: 3152, column: 3, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 3152, column: 3)
!7094 = !DILocation(line: 3152, column: 3, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 3152, column: 3)
!7096 = !DILocation(line: 3153, column: 5, scope: !7095)
!7097 = distinct !{!7097, !7092, !7098}
!7098 = !DILocation(line: 3153, column: 5, scope: !7093)
!7099 = !DILocation(line: 3154, column: 1, scope: !7081)
!7100 = distinct !DISubprogram(name: "_succ_iter_start", scope: !398, file: !398, line: 1200, type: !7101, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7101 = !DISubroutineType(types: !7102)
!7102 = !{!3479, !4175, !2132, !849}
!7103 = !DILocalVariable(name: "succp", arg: 1, scope: !7100, file: !398, line: 1200, type: !4175)
!7104 = !DILocation(line: 1200, column: 27, scope: !7100)
!7105 = !DILocalVariable(name: "insn", arg: 2, scope: !7100, file: !398, line: 1200, type: !2132)
!7106 = !DILocation(line: 1200, column: 41, scope: !7100)
!7107 = !DILocalVariable(name: "flags", arg: 3, scope: !7100, file: !398, line: 1200, type: !849)
!7108 = !DILocation(line: 1200, column: 51, scope: !7100)
!7109 = !DILocalVariable(name: "i", scope: !7100, file: !398, line: 1202, type: !3479)
!7110 = !DILocation(line: 1202, column: 17, scope: !7100)
!7111 = !DILocalVariable(name: "bb", scope: !7100, file: !398, line: 1204, type: !1362)
!7112 = !DILocation(line: 1204, column: 15, scope: !7100)
!7113 = !DILocation(line: 1204, column: 20, scope: !7100)
!7114 = !DILocation(line: 1206, column: 3, scope: !7100)
!7115 = !DILocation(line: 1208, column: 13, scope: !7100)
!7116 = !DILocation(line: 1208, column: 5, scope: !7100)
!7117 = !DILocation(line: 1208, column: 11, scope: !7100)
!7118 = !DILocation(line: 1211, column: 4, scope: !7100)
!7119 = !DILocation(line: 1211, column: 10, scope: !7100)
!7120 = !DILocation(line: 1212, column: 5, scope: !7100)
!7121 = !DILocation(line: 1212, column: 8, scope: !7100)
!7122 = !DILocation(line: 1213, column: 5, scope: !7100)
!7123 = !DILocation(line: 1213, column: 8, scope: !7100)
!7124 = !DILocation(line: 1214, column: 10, scope: !7100)
!7125 = !DILocation(line: 1214, column: 5, scope: !7100)
!7126 = !DILocation(line: 1214, column: 8, scope: !7100)
!7127 = !DILocation(line: 1215, column: 5, scope: !7100)
!7128 = !DILocation(line: 1215, column: 19, scope: !7100)
!7129 = !DILocation(line: 1216, column: 5, scope: !7100)
!7130 = !DILocation(line: 1216, column: 18, scope: !7100)
!7131 = !DILocation(line: 1217, column: 5, scope: !7100)
!7132 = !DILocation(line: 1217, column: 16, scope: !7100)
!7133 = !DILocation(line: 1219, column: 7, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7100, file: !398, line: 1219, column: 7)
!7135 = !DILocation(line: 1219, column: 13, scope: !7134)
!7136 = !DILocation(line: 1219, column: 10, scope: !7134)
!7137 = !DILocation(line: 1219, column: 28, scope: !7134)
!7138 = !DILocation(line: 1219, column: 31, scope: !7134)
!7139 = !DILocation(line: 1219, column: 46, scope: !7134)
!7140 = !DILocation(line: 1219, column: 43, scope: !7134)
!7141 = !DILocation(line: 1219, column: 7, scope: !7100)
!7142 = !DILocation(line: 1221, column: 9, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7134, file: !398, line: 1220, column: 5)
!7144 = !DILocation(line: 1221, column: 16, scope: !7143)
!7145 = !DILocation(line: 1224, column: 9, scope: !7143)
!7146 = !DILocation(line: 1224, column: 12, scope: !7143)
!7147 = !DILocation(line: 1224, column: 18, scope: !7143)
!7148 = !DILocation(line: 1225, column: 9, scope: !7143)
!7149 = !DILocation(line: 1225, column: 12, scope: !7143)
!7150 = !DILocation(line: 1225, column: 22, scope: !7143)
!7151 = !DILocation(line: 1226, column: 5, scope: !7143)
!7152 = !DILocation(line: 1229, column: 9, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7134, file: !398, line: 1228, column: 5)
!7154 = !DILocation(line: 1229, column: 14, scope: !7153)
!7155 = !DILocation(line: 1230, column: 9, scope: !7153)
!7156 = !DILocation(line: 1230, column: 16, scope: !7153)
!7157 = !DILocation(line: 1233, column: 3, scope: !7100)
!7158 = distinct !DISubprogram(name: "_succ_iter_cond", scope: !398, file: !398, line: 1237, type: !7159, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7159 = !DISubroutineType(types: !7160)
!7160 = !{!1057, !7161, !5250, !825, !7162}
!7161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!7162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7163, size: 64)
!7163 = !DISubroutineType(types: !7164)
!7164 = !{!1057, !1379, !7161}
!7165 = !DILocalVariable(name: "ip", arg: 1, scope: !7158, file: !398, line: 1237, type: !7161)
!7166 = !DILocation(line: 1237, column: 33, scope: !7158)
!7167 = !DILocalVariable(name: "succp", arg: 2, scope: !7158, file: !398, line: 1237, type: !5250)
!7168 = !DILocation(line: 1237, column: 42, scope: !7158)
!7169 = !DILocalVariable(name: "insn", arg: 3, scope: !7158, file: !398, line: 1237, type: !825)
!7170 = !DILocation(line: 1237, column: 53, scope: !7158)
!7171 = !DILocalVariable(name: "check", arg: 4, scope: !7158, file: !398, line: 1238, type: !7162)
!7172 = !DILocation(line: 1238, column: 23, scope: !7158)
!7173 = !DILocation(line: 1240, column: 8, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7158, file: !398, line: 1240, column: 7)
!7175 = !DILocation(line: 1240, column: 12, scope: !7174)
!7176 = !DILocation(line: 1240, column: 7, scope: !7158)
!7177 = !DILocation(line: 1244, column: 12, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !398, line: 1244, column: 11)
!7179 = distinct !DILexicalBlock(scope: !7174, file: !398, line: 1241, column: 5)
!7180 = !DILocation(line: 1244, column: 11, scope: !7178)
!7181 = !DILocation(line: 1244, column: 18, scope: !7178)
!7182 = !DILocation(line: 1244, column: 26, scope: !7178)
!7183 = !DILocation(line: 1244, column: 30, scope: !7178)
!7184 = !DILocation(line: 1244, column: 34, scope: !7178)
!7185 = !DILocation(line: 1244, column: 40, scope: !7178)
!7186 = !DILocation(line: 1244, column: 56, scope: !7178)
!7187 = !DILocation(line: 1244, column: 11, scope: !7179)
!7188 = !DILocation(line: 1245, column: 9, scope: !7178)
!7189 = !DILocation(line: 1247, column: 16, scope: !7179)
!7190 = !DILocation(line: 1247, column: 8, scope: !7179)
!7191 = !DILocation(line: 1247, column: 14, scope: !7179)
!7192 = !DILocation(line: 1248, column: 7, scope: !7179)
!7193 = !DILocation(line: 1248, column: 11, scope: !7179)
!7194 = !DILocation(line: 1248, column: 25, scope: !7179)
!7195 = !DILocation(line: 1249, column: 7, scope: !7179)
!7196 = !DILocation(line: 1253, column: 7, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7174, file: !398, line: 1252, column: 5)
!7198 = !DILocalVariable(name: "e_tmp", scope: !7199, file: !398, line: 1255, type: !1379)
!7199 = distinct !DILexicalBlock(scope: !7197, file: !398, line: 1254, column: 9)
!7200 = !DILocation(line: 1255, column: 16, scope: !7199)
!7201 = !DILocation(line: 1258, column: 15, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7199, file: !398, line: 1258, column: 15)
!7203 = !DILocation(line: 1258, column: 19, scope: !7202)
!7204 = !DILocation(line: 1258, column: 15, scope: !7199)
!7205 = !DILocation(line: 1260, column: 15, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7202, file: !398, line: 1259, column: 13)
!7207 = !DILocation(line: 1262, column: 19, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7206, file: !398, line: 1261, column: 17)
!7209 = !DILocation(line: 1264, column: 19, scope: !7208)
!7210 = !DILocation(line: 1264, column: 23, scope: !7208)
!7211 = !DILocation(line: 1264, column: 35, scope: !7208)
!7212 = !DILocation(line: 1265, column: 17, scope: !7208)
!7213 = !DILocation(line: 1266, column: 15, scope: !7206)
!7214 = !DILocation(line: 1266, column: 21, scope: !7206)
!7215 = !DILocation(line: 1266, column: 25, scope: !7206)
!7216 = !DILocation(line: 1266, column: 32, scope: !7206)
!7217 = !DILocation(line: 1266, column: 39, scope: !7206)
!7218 = !DILocation(line: 1266, column: 24, scope: !7206)
!7219 = !DILocation(line: 0, scope: !7206)
!7220 = distinct !{!7220, !7205, !7221}
!7221 = !DILocation(line: 1266, column: 42, scope: !7206)
!7222 = !DILocation(line: 1268, column: 20, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7206, file: !398, line: 1268, column: 19)
!7224 = !DILocation(line: 1268, column: 19, scope: !7206)
!7225 = !DILocation(line: 1269, column: 17, scope: !7223)
!7226 = !DILocation(line: 1270, column: 13, scope: !7206)
!7227 = !DILocation(line: 1273, column: 15, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7199, file: !398, line: 1273, column: 15)
!7229 = !DILocation(line: 1273, column: 15, scope: !7199)
!7230 = !DILocation(line: 1275, column: 24, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7228, file: !398, line: 1274, column: 13)
!7232 = !DILocation(line: 1275, column: 15, scope: !7231)
!7233 = !DILocation(line: 1275, column: 19, scope: !7231)
!7234 = !DILocation(line: 1275, column: 22, scope: !7231)
!7235 = !DILocation(line: 1276, column: 15, scope: !7231)
!7236 = !DILocation(line: 1280, column: 11, scope: !7199)
!7237 = !DILocation(line: 1280, column: 27, scope: !7199)
!7238 = !DILocation(line: 1280, column: 31, scope: !7199)
!7239 = !DILocation(line: 1280, column: 37, scope: !7199)
!7240 = !DILocation(line: 1280, column: 41, scope: !7199)
!7241 = !DILocation(line: 1280, column: 18, scope: !7199)
!7242 = !DILocalVariable(name: "bb", scope: !7243, file: !398, line: 1282, type: !1362)
!7243 = distinct !DILexicalBlock(scope: !7199, file: !398, line: 1281, column: 13)
!7244 = !DILocation(line: 1282, column: 27, scope: !7243)
!7245 = !DILocation(line: 1282, column: 32, scope: !7243)
!7246 = !DILocation(line: 1282, column: 36, scope: !7243)
!7247 = !DILocation(line: 1282, column: 40, scope: !7243)
!7248 = !DILocation(line: 1285, column: 20, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7243, file: !398, line: 1285, column: 19)
!7250 = !DILocation(line: 1285, column: 24, scope: !7249)
!7251 = !DILocation(line: 1285, column: 30, scope: !7249)
!7252 = !DILocation(line: 1286, column: 19, scope: !7249)
!7253 = !DILocation(line: 1286, column: 22, scope: !7249)
!7254 = !DILocation(line: 1287, column: 5, scope: !7249)
!7255 = !DILocation(line: 1287, column: 31, scope: !7249)
!7256 = !DILocation(line: 1287, column: 10, scope: !7249)
!7257 = !DILocation(line: 1288, column: 9, scope: !7249)
!7258 = !DILocation(line: 1288, column: 12, scope: !7249)
!7259 = !DILocation(line: 1289, column: 7, scope: !7249)
!7260 = !DILocation(line: 1289, column: 5, scope: !7249)
!7261 = !DILocation(line: 1285, column: 19, scope: !7243)
!7262 = !DILocation(line: 1292, column: 42, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7249, file: !398, line: 1290, column: 17)
!7264 = !DILocation(line: 1292, column: 22, scope: !7263)
!7265 = !DILocation(line: 1292, column: 5, scope: !7263)
!7266 = !DILocation(line: 1292, column: 9, scope: !7263)
!7267 = !DILocation(line: 1292, column: 20, scope: !7263)
!7268 = !DILocation(line: 1294, column: 9, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7263, file: !398, line: 1294, column: 9)
!7270 = !DILocation(line: 1294, column: 13, scope: !7269)
!7271 = !DILocation(line: 1294, column: 9, scope: !7263)
!7272 = !DILocation(line: 1296, column: 11, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7269, file: !398, line: 1295, column: 7)
!7274 = !DILocation(line: 1296, column: 15, scope: !7273)
!7275 = !DILocation(line: 1296, column: 28, scope: !7273)
!7276 = !DILocation(line: 1299, column: 20, scope: !7273)
!7277 = !DILocation(line: 1299, column: 24, scope: !7273)
!7278 = !DILocation(line: 1299, column: 9, scope: !7273)
!7279 = !DILocation(line: 1300, column: 9, scope: !7273)
!7280 = !DILocation(line: 1302, column: 17, scope: !7263)
!7281 = !DILocation(line: 1305, column: 19, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7243, file: !398, line: 1305, column: 19)
!7283 = !DILocation(line: 1305, column: 26, scope: !7282)
!7284 = !DILocation(line: 1305, column: 30, scope: !7282)
!7285 = !DILocation(line: 1305, column: 34, scope: !7282)
!7286 = !DILocation(line: 1305, column: 19, scope: !7243)
!7287 = !DILocation(line: 1306, column: 17, scope: !7282)
!7288 = !DILocation(line: 1308, column: 26, scope: !7243)
!7289 = !DILocation(line: 1308, column: 30, scope: !7243)
!7290 = !DILocation(line: 1308, column: 15, scope: !7243)
!7291 = distinct !{!7291, !7236, !7292}
!7292 = !DILocation(line: 1309, column: 13, scope: !7199)
!7293 = !DILocation(line: 1313, column: 15, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7199, file: !398, line: 1313, column: 15)
!7295 = !DILocation(line: 1313, column: 19, scope: !7294)
!7296 = !DILocation(line: 1313, column: 15, scope: !7199)
!7297 = !DILocation(line: 1314, column: 13, scope: !7294)
!7298 = distinct !{!7298, !7196, !7299}
!7299 = !DILocation(line: 1318, column: 9, scope: !7197)
!7300 = !DILocation(line: 1317, column: 11, scope: !7199)
!7301 = !DILocation(line: 1320, column: 11, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7197, file: !398, line: 1320, column: 11)
!7303 = !DILocation(line: 1320, column: 15, scope: !7302)
!7304 = !DILocation(line: 1320, column: 11, scope: !7197)
!7305 = !DILocalVariable(name: "bb", scope: !7306, file: !398, line: 1322, type: !1362)
!7306 = distinct !DILexicalBlock(scope: !7302, file: !398, line: 1321, column: 2)
!7307 = !DILocation(line: 1322, column: 16, scope: !7306)
!7308 = !DILocation(line: 1322, column: 21, scope: !7306)
!7309 = !DILocation(line: 1322, column: 25, scope: !7306)
!7310 = !DILocation(line: 1322, column: 29, scope: !7306)
!7311 = !DILocation(line: 1324, column: 8, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7306, file: !398, line: 1324, column: 8)
!7313 = !DILocation(line: 1324, column: 14, scope: !7312)
!7314 = !DILocation(line: 1324, column: 11, scope: !7312)
!7315 = !DILocation(line: 1324, column: 29, scope: !7312)
!7316 = !DILocation(line: 1324, column: 32, scope: !7312)
!7317 = !DILocation(line: 1324, column: 38, scope: !7312)
!7318 = !DILocation(line: 1324, column: 35, scope: !7312)
!7319 = !DILocation(line: 1324, column: 8, scope: !7306)
!7320 = !DILocation(line: 1325, column: 15, scope: !7312)
!7321 = !DILocation(line: 1325, column: 7, scope: !7312)
!7322 = !DILocation(line: 1325, column: 13, scope: !7312)
!7323 = !DILocation(line: 1325, column: 6, scope: !7312)
!7324 = !DILocation(line: 1328, column: 37, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7312, file: !398, line: 1327, column: 6)
!7326 = !DILocation(line: 1328, column: 24, scope: !7325)
!7327 = !DILocation(line: 1328, column: 16, scope: !7325)
!7328 = !DILocation(line: 1328, column: 22, scope: !7325)
!7329 = !DILocation(line: 1330, column: 15, scope: !7325)
!7330 = !DILocation(line: 1332, column: 8, scope: !7325)
!7331 = !DILocation(line: 1335, column: 4, scope: !7306)
!7332 = !DILocation(line: 1338, column: 2, scope: !7302)
!7333 = !DILocation(line: 1340, column: 1, scope: !7158)
!7334 = distinct !DISubprogram(name: "_eligible_successor_edge_p", scope: !398, file: !398, line: 1356, type: !7163, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7335 = !DILocalVariable(name: "e1", arg: 1, scope: !7334, file: !398, line: 1356, type: !1379)
!7336 = !DILocation(line: 1356, column: 34, scope: !7334)
!7337 = !DILocalVariable(name: "ip", arg: 2, scope: !7334, file: !398, line: 1356, type: !7161)
!7338 = !DILocation(line: 1356, column: 53, scope: !7334)
!7339 = !DILocalVariable(name: "e2", scope: !7334, file: !398, line: 1358, type: !1379)
!7340 = !DILocation(line: 1358, column: 8, scope: !7334)
!7341 = !DILocation(line: 1358, column: 13, scope: !7334)
!7342 = !DILocalVariable(name: "bb", scope: !7334, file: !398, line: 1359, type: !1362)
!7343 = !DILocation(line: 1359, column: 15, scope: !7334)
!7344 = !DILocalVariable(name: "flags", scope: !7334, file: !398, line: 1360, type: !849)
!7345 = !DILocation(line: 1360, column: 7, scope: !7334)
!7346 = !DILocation(line: 1360, column: 15, scope: !7334)
!7347 = !DILocation(line: 1360, column: 19, scope: !7334)
!7348 = !DILocalVariable(name: "src_outside_rgn", scope: !7334, file: !398, line: 1361, type: !1057)
!7349 = !DILocation(line: 1361, column: 8, scope: !7334)
!7350 = !DILocation(line: 1361, column: 48, scope: !7334)
!7351 = !DILocation(line: 1361, column: 52, scope: !7334)
!7352 = !DILocation(line: 1361, column: 27, scope: !7334)
!7353 = !DILocation(line: 1361, column: 26, scope: !7334)
!7354 = !DILocation(line: 1363, column: 3, scope: !7334)
!7355 = !DILocation(line: 1365, column: 7, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7334, file: !398, line: 1365, column: 7)
!7357 = !DILocation(line: 1365, column: 7, scope: !7334)
!7358 = !DILocation(line: 1369, column: 7, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7356, file: !398, line: 1366, column: 5)
!7360 = !DILocation(line: 1371, column: 11, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7359, file: !398, line: 1371, column: 11)
!7362 = !DILocation(line: 1371, column: 17, scope: !7361)
!7363 = !DILocation(line: 1371, column: 11, scope: !7359)
!7364 = !DILocation(line: 1372, column: 2, scope: !7361)
!7365 = !DILocation(line: 1373, column: 5, scope: !7359)
!7366 = !DILocation(line: 1375, column: 8, scope: !7334)
!7367 = !DILocation(line: 1375, column: 12, scope: !7334)
!7368 = !DILocation(line: 1375, column: 6, scope: !7334)
!7369 = !DILocation(line: 1378, column: 3, scope: !7334)
!7370 = !DILocation(line: 1380, column: 28, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7372, file: !398, line: 1380, column: 11)
!7372 = distinct !DILexicalBlock(scope: !7334, file: !398, line: 1379, column: 5)
!7373 = !DILocation(line: 1380, column: 12, scope: !7371)
!7374 = !DILocation(line: 1380, column: 11, scope: !7372)
!7375 = !DILocalVariable(name: "ne", scope: !7376, file: !398, line: 1382, type: !1379)
!7376 = distinct !DILexicalBlock(scope: !7371, file: !398, line: 1381, column: 2)
!7377 = !DILocation(line: 1382, column: 9, scope: !7376)
!7378 = !DILocalVariable(name: "nbb", scope: !7376, file: !398, line: 1383, type: !1362)
!7379 = !DILocation(line: 1383, column: 16, scope: !7376)
!7380 = !DILocation(line: 1385, column: 32, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7376, file: !398, line: 1385, column: 8)
!7382 = !DILocation(line: 1385, column: 9, scope: !7381)
!7383 = !DILocation(line: 1385, column: 8, scope: !7376)
!7384 = !DILocation(line: 1386, column: 6, scope: !7381)
!7385 = !DILocation(line: 1388, column: 9, scope: !7376)
!7386 = !DILocation(line: 1388, column: 7, scope: !7376)
!7387 = !DILocation(line: 1389, column: 10, scope: !7376)
!7388 = !DILocation(line: 1389, column: 14, scope: !7376)
!7389 = !DILocation(line: 1389, column: 8, scope: !7376)
!7390 = !DILocation(line: 1391, column: 30, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7376, file: !398, line: 1391, column: 8)
!7392 = !DILocation(line: 1391, column: 9, scope: !7391)
!7393 = !DILocation(line: 1392, column: 8, scope: !7391)
!7394 = !DILocation(line: 1392, column: 13, scope: !7391)
!7395 = !DILocation(line: 1392, column: 19, scope: !7391)
!7396 = !DILocation(line: 1391, column: 8, scope: !7376)
!7397 = !DILocation(line: 1393, column: 6, scope: !7391)
!7398 = !DILocation(line: 1395, column: 9, scope: !7376)
!7399 = !DILocation(line: 1395, column: 7, scope: !7376)
!7400 = !DILocation(line: 1396, column: 9, scope: !7376)
!7401 = !DILocation(line: 1396, column: 7, scope: !7376)
!7402 = !DILocation(line: 1397, column: 4, scope: !7376)
!7403 = distinct !{!7403, !7369, !7404}
!7404 = !DILocation(line: 1409, column: 5, scope: !7334)
!7405 = !DILocation(line: 1400, column: 33, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7372, file: !398, line: 1400, column: 11)
!7407 = !DILocation(line: 1400, column: 12, scope: !7406)
!7408 = !DILocation(line: 1401, column: 11, scope: !7406)
!7409 = !DILocation(line: 1401, column: 16, scope: !7406)
!7410 = !DILocation(line: 1401, column: 22, scope: !7406)
!7411 = !DILocation(line: 1400, column: 11, scope: !7372)
!7412 = !DILocation(line: 1402, column: 9, scope: !7406)
!7413 = !DILocation(line: 1404, column: 11, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7372, file: !398, line: 1404, column: 11)
!7415 = !DILocation(line: 1404, column: 34, scope: !7414)
!7416 = !DILocation(line: 1404, column: 11, scope: !7372)
!7417 = !DILocation(line: 1405, column: 2, scope: !7414)
!7418 = !DILocation(line: 1407, column: 12, scope: !7372)
!7419 = !DILocation(line: 1407, column: 10, scope: !7372)
!7420 = !DILocation(line: 1408, column: 12, scope: !7372)
!7421 = !DILocation(line: 1408, column: 16, scope: !7372)
!7422 = !DILocation(line: 1408, column: 10, scope: !7372)
!7423 = !DILocation(line: 1412, column: 12, scope: !7334)
!7424 = !DILocation(line: 1412, column: 3, scope: !7334)
!7425 = !DILocation(line: 1412, column: 7, scope: !7334)
!7426 = !DILocation(line: 1412, column: 10, scope: !7334)
!7427 = !DILocation(line: 1414, column: 28, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7334, file: !398, line: 1414, column: 7)
!7429 = !DILocation(line: 1414, column: 7, scope: !7428)
!7430 = !DILocation(line: 1414, column: 7, scope: !7334)
!7431 = !DILocalVariable(name: "succeeds_in_top_order", scope: !7432, file: !398, line: 1420, type: !1057)
!7432 = distinct !DILexicalBlock(scope: !7428, file: !398, line: 1415, column: 5)
!7433 = !DILocation(line: 1420, column: 12, scope: !7432)
!7434 = !DILocation(line: 1420, column: 37, scope: !7432)
!7435 = !DILocation(line: 1421, column: 11, scope: !7432)
!7436 = !DILocation(line: 1421, column: 9, scope: !7432)
!7437 = !DILocation(line: 1420, column: 36, scope: !7432)
!7438 = !DILocation(line: 1424, column: 7, scope: !7432)
!7439 = !DILocation(line: 1424, column: 11, scope: !7432)
!7440 = !DILocation(line: 1424, column: 25, scope: !7432)
!7441 = !DILocation(line: 1427, column: 11, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7432, file: !398, line: 1427, column: 11)
!7443 = !DILocation(line: 1427, column: 11, scope: !7432)
!7444 = !DILocation(line: 1430, column: 11, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7442, file: !398, line: 1428, column: 9)
!7446 = !DILocation(line: 1432, column: 21, scope: !7445)
!7447 = !DILocation(line: 1432, column: 27, scope: !7445)
!7448 = !DILocation(line: 1432, column: 19, scope: !7445)
!7449 = !DILocation(line: 1432, column: 18, scope: !7445)
!7450 = !DILocation(line: 1432, column: 11, scope: !7445)
!7451 = !DILocation(line: 1439, column: 11, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7432, file: !398, line: 1439, column: 11)
!7453 = !DILocation(line: 1440, column: 12, scope: !7452)
!7454 = !DILocation(line: 1440, column: 15, scope: !7452)
!7455 = !DILocation(line: 1440, column: 19, scope: !7452)
!7456 = !DILocation(line: 1440, column: 24, scope: !7452)
!7457 = !DILocation(line: 1440, column: 39, scope: !7452)
!7458 = !DILocation(line: 1440, column: 43, scope: !7452)
!7459 = !DILocation(line: 1440, column: 36, scope: !7452)
!7460 = !DILocation(line: 1439, column: 11, scope: !7432)
!7461 = !DILocation(line: 1441, column: 19, scope: !7452)
!7462 = !DILocation(line: 1441, column: 25, scope: !7452)
!7463 = !DILocation(line: 1441, column: 17, scope: !7452)
!7464 = !DILocation(line: 1441, column: 16, scope: !7452)
!7465 = !DILocation(line: 1441, column: 9, scope: !7452)
!7466 = !DILocation(line: 1444, column: 7, scope: !7432)
!7467 = !DILocation(line: 1444, column: 11, scope: !7432)
!7468 = !DILocation(line: 1444, column: 25, scope: !7432)
!7469 = !DILocation(line: 1445, column: 17, scope: !7432)
!7470 = !DILocation(line: 1445, column: 23, scope: !7432)
!7471 = !DILocation(line: 1445, column: 15, scope: !7432)
!7472 = !DILocation(line: 1445, column: 14, scope: !7432)
!7473 = !DILocation(line: 1445, column: 7, scope: !7432)
!7474 = !DILocation(line: 1448, column: 3, scope: !7334)
!7475 = !DILocation(line: 1448, column: 7, scope: !7334)
!7476 = !DILocation(line: 1448, column: 21, scope: !7334)
!7477 = !DILocation(line: 1449, column: 13, scope: !7334)
!7478 = !DILocation(line: 1449, column: 19, scope: !7334)
!7479 = !DILocation(line: 1449, column: 11, scope: !7334)
!7480 = !DILocation(line: 1449, column: 10, scope: !7334)
!7481 = !DILocation(line: 1449, column: 3, scope: !7334)
!7482 = !DILocation(line: 1450, column: 1, scope: !7334)
!7483 = distinct !DISubprogram(name: "_succ_iter_next", scope: !398, file: !398, line: 1343, type: !7484, scopeLine: 1344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7484 = !DISubroutineType(types: !7485)
!7485 = !{null, !7161}
!7486 = !DILocalVariable(name: "ip", arg: 1, scope: !7483, file: !398, line: 1343, type: !7161)
!7487 = !DILocation(line: 1343, column: 33, scope: !7483)
!7488 = !DILocation(line: 1345, column: 3, scope: !7483)
!7489 = !DILocation(line: 1347, column: 7, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7483, file: !398, line: 1347, column: 7)
!7491 = !DILocation(line: 1347, column: 11, scope: !7490)
!7492 = !DILocation(line: 1347, column: 18, scope: !7490)
!7493 = !DILocation(line: 1347, column: 21, scope: !7490)
!7494 = !DILocation(line: 1347, column: 25, scope: !7490)
!7495 = !DILocation(line: 1347, column: 28, scope: !7490)
!7496 = !DILocation(line: 1347, column: 32, scope: !7490)
!7497 = !DILocation(line: 1347, column: 36, scope: !7490)
!7498 = !DILocation(line: 1347, column: 7, scope: !7483)
!7499 = !DILocation(line: 1348, column: 16, scope: !7490)
!7500 = !DILocation(line: 1348, column: 20, scope: !7490)
!7501 = !DILocation(line: 1348, column: 5, scope: !7490)
!7502 = !DILocation(line: 1349, column: 1, scope: !7483)
!7503 = distinct !DISubprogram(name: "VEC_edge_base_iterate", scope: !155, file: !155, line: 150, type: !7504, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7504 = !DISubroutineType(types: !7505)
!7505 = !{!849, !3657, !7, !3608}
!7506 = !DILocalVariable(name: "vec_", arg: 1, scope: !7503, file: !155, line: 150, type: !3657)
!7507 = !DILocation(line: 150, column: 1, scope: !7503)
!7508 = !DILocalVariable(name: "ix_", arg: 2, scope: !7503, file: !155, line: 150, type: !7)
!7509 = !DILocalVariable(name: "ptr", arg: 3, scope: !7503, file: !155, line: 150, type: !3608)
!7510 = !DILocation(line: 150, column: 1, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7503, file: !155, line: 150, column: 1)
!7512 = !DILocation(line: 150, column: 1, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7511, file: !155, line: 150, column: 1)
!7514 = !DILocation(line: 150, column: 1, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7511, file: !155, line: 150, column: 1)
!7516 = distinct !DISubprogram(name: "VEC_edge_heap_free", scope: !155, file: !155, line: 152, type: !7517, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7517 = !DISubroutineType(types: !7518)
!7518 = !{null, !7519}
!7519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!7520 = !DILocalVariable(name: "vec_", arg: 1, scope: !7516, file: !155, line: 152, type: !7519)
!7521 = !DILocation(line: 152, column: 1, scope: !7516)
!7522 = !DILocation(line: 152, column: 1, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7516, file: !155, line: 152, column: 1)
!7524 = distinct !DISubprogram(name: "get_all_loop_exits", scope: !398, file: !398, line: 1115, type: !7525, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7525 = !DISubroutineType(types: !7526)
!7526 = !{!2255, !1362}
!7527 = !DILocalVariable(name: "bb", arg: 1, scope: !7524, file: !398, line: 1115, type: !1362)
!7528 = !DILocation(line: 1115, column: 33, scope: !7524)
!7529 = !DILocalVariable(name: "exits", scope: !7524, file: !398, line: 1117, type: !2255)
!7530 = !DILocation(line: 1117, column: 20, scope: !7524)
!7531 = !DILocation(line: 1121, column: 3, scope: !7524)
!7532 = !DILocation(line: 1121, column: 33, scope: !7524)
!7533 = !DILocation(line: 1121, column: 10, scope: !7524)
!7534 = !DILocation(line: 1122, column: 3, scope: !7524)
!7535 = !DILocation(line: 1122, column: 27, scope: !7524)
!7536 = !DILocation(line: 1122, column: 6, scope: !7524)
!7537 = !DILocation(line: 0, scope: !7524)
!7538 = !DILocation(line: 1124, column: 25, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7524, file: !398, line: 1123, column: 5)
!7540 = !DILocation(line: 1124, column: 12, scope: !7539)
!7541 = !DILocation(line: 1124, column: 10, scope: !7539)
!7542 = !DILocation(line: 1127, column: 7, scope: !7539)
!7543 = distinct !{!7543, !7531, !7544}
!7544 = !DILocation(line: 1128, column: 5, scope: !7524)
!7545 = !DILocation(line: 1131, column: 28, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7524, file: !398, line: 1131, column: 7)
!7547 = !DILocation(line: 1131, column: 7, scope: !7546)
!7548 = !DILocation(line: 1131, column: 7, scope: !7524)
!7549 = !DILocalVariable(name: "this_loop", scope: !7550, file: !398, line: 1133, type: !1404)
!7550 = distinct !DILexicalBlock(scope: !7546, file: !398, line: 1132, column: 5)
!7551 = !DILocation(line: 1133, column: 20, scope: !7550)
!7552 = !DILocalVariable(name: "pred_loop", scope: !7550, file: !398, line: 1134, type: !1404)
!7553 = !DILocation(line: 1134, column: 20, scope: !7550)
!7554 = !DILocalVariable(name: "i", scope: !7550, file: !398, line: 1135, type: !849)
!7555 = !DILocation(line: 1135, column: 11, scope: !7550)
!7556 = !DILocalVariable(name: "e", scope: !7550, file: !398, line: 1136, type: !1379)
!7557 = !DILocation(line: 1136, column: 12, scope: !7550)
!7558 = !DILocation(line: 1138, column: 24, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7550, file: !398, line: 1138, column: 7)
!7560 = !DILocation(line: 1138, column: 28, scope: !7559)
!7561 = !DILocation(line: 1138, column: 22, scope: !7559)
!7562 = !DILocation(line: 1138, column: 12, scope: !7559)
!7563 = !DILocation(line: 1139, column: 12, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7559, file: !398, line: 1138, column: 7)
!7565 = !DILocation(line: 1139, column: 22, scope: !7564)
!7566 = !DILocation(line: 1139, column: 25, scope: !7564)
!7567 = !DILocation(line: 1139, column: 38, scope: !7564)
!7568 = !DILocation(line: 1139, column: 35, scope: !7564)
!7569 = !DILocation(line: 0, scope: !7564)
!7570 = !DILocation(line: 1138, column: 7, scope: !7559)
!7571 = !DILocation(line: 1141, column: 21, scope: !7564)
!7572 = !DILocation(line: 1141, column: 19, scope: !7564)
!7573 = !DILocation(line: 1141, column: 9, scope: !7564)
!7574 = !DILocation(line: 1140, column: 36, scope: !7564)
!7575 = !DILocation(line: 1140, column: 24, scope: !7564)
!7576 = !DILocation(line: 1140, column: 22, scope: !7564)
!7577 = !DILocation(line: 1138, column: 7, scope: !7564)
!7578 = distinct !{!7578, !7570, !7579}
!7579 = !DILocation(line: 1141, column: 21, scope: !7559)
!7580 = !DILocation(line: 1143, column: 19, scope: !7550)
!7581 = !DILocation(line: 1143, column: 17, scope: !7550)
!7582 = !DILocation(line: 1144, column: 7, scope: !7550)
!7583 = !DILocation(line: 1146, column: 49, scope: !7550)
!7584 = !DILocation(line: 1146, column: 15, scope: !7550)
!7585 = !DILocation(line: 1146, column: 13, scope: !7550)
!7586 = !DILocation(line: 1149, column: 14, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7550, file: !398, line: 1149, column: 7)
!7588 = !DILocation(line: 1149, column: 12, scope: !7587)
!7589 = !DILocation(line: 1149, column: 19, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7587, file: !398, line: 1149, column: 7)
!7591 = !DILocation(line: 1149, column: 7, scope: !7587)
!7592 = !DILocation(line: 1150, column: 27, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7590, file: !398, line: 1150, column: 6)
!7594 = !DILocation(line: 1150, column: 30, scope: !7593)
!7595 = !DILocation(line: 1150, column: 6, scope: !7593)
!7596 = !DILocation(line: 1151, column: 6, scope: !7593)
!7597 = !DILocation(line: 1151, column: 30, scope: !7593)
!7598 = !DILocation(line: 1151, column: 33, scope: !7593)
!7599 = !DILocation(line: 1151, column: 9, scope: !7593)
!7600 = !DILocation(line: 1150, column: 6, scope: !7590)
!7601 = !DILocalVariable(name: "next_exits", scope: !7602, file: !398, line: 1153, type: !2255)
!7602 = distinct !DILexicalBlock(scope: !7593, file: !398, line: 1152, column: 4)
!7603 = !DILocation(line: 1153, column: 23, scope: !7602)
!7604 = !DILocation(line: 1153, column: 56, scope: !7602)
!7605 = !DILocation(line: 1153, column: 59, scope: !7602)
!7606 = !DILocation(line: 1153, column: 36, scope: !7602)
!7607 = !DILocation(line: 1155, column: 10, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7602, file: !398, line: 1155, column: 10)
!7609 = !DILocation(line: 1155, column: 10, scope: !7602)
!7610 = !DILocalVariable(name: "j", scope: !7611, file: !398, line: 1157, type: !849)
!7611 = distinct !DILexicalBlock(scope: !7608, file: !398, line: 1156, column: 8)
!7612 = !DILocation(line: 1157, column: 7, scope: !7611)
!7613 = !DILocalVariable(name: "ne", scope: !7611, file: !398, line: 1158, type: !1379)
!7614 = !DILocation(line: 1158, column: 8, scope: !7611)
!7615 = !DILocation(line: 1162, column: 10, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7611, file: !398, line: 1162, column: 3)
!7617 = !DILocation(line: 1162, column: 8, scope: !7616)
!7618 = !DILocation(line: 1162, column: 15, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7616, file: !398, line: 1162, column: 3)
!7620 = !DILocation(line: 1162, column: 3, scope: !7616)
!7621 = !DILocation(line: 1163, column: 5, scope: !7619)
!7622 = !DILocation(line: 1162, column: 55, scope: !7619)
!7623 = !DILocation(line: 1162, column: 3, scope: !7619)
!7624 = distinct !{!7624, !7620, !7625}
!7625 = !DILocation(line: 1163, column: 5, scope: !7616)
!7626 = !DILocation(line: 1166, column: 3, scope: !7611)
!7627 = !DILocation(line: 1169, column: 4, scope: !7611)
!7628 = !DILocation(line: 1170, column: 3, scope: !7611)
!7629 = !DILocation(line: 1172, column: 4, scope: !7602)
!7630 = !DILocation(line: 1151, column: 37, scope: !7593)
!7631 = !DILocation(line: 1149, column: 53, scope: !7590)
!7632 = !DILocation(line: 1149, column: 7, scope: !7590)
!7633 = distinct !{!7633, !7591, !7634}
!7634 = !DILocation(line: 1172, column: 4, scope: !7587)
!7635 = !DILocation(line: 1173, column: 5, scope: !7550)
!7636 = !DILocation(line: 1175, column: 10, scope: !7524)
!7637 = !DILocation(line: 1175, column: 3, scope: !7524)
!7638 = distinct !DISubprogram(name: "sel_bb_empty_or_nop_p", scope: !398, file: !398, line: 1089, type: !5412, scopeLine: 1090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7639 = !DILocalVariable(name: "bb", arg: 1, scope: !7638, file: !398, line: 1089, type: !1362)
!7640 = !DILocation(line: 1089, column: 36, scope: !7638)
!7641 = !DILocalVariable(name: "first", scope: !7638, file: !398, line: 1091, type: !2132)
!7642 = !DILocation(line: 1091, column: 10, scope: !7638)
!7643 = !DILocation(line: 1091, column: 31, scope: !7638)
!7644 = !DILocation(line: 1091, column: 18, scope: !7638)
!7645 = !DILocalVariable(name: "last", scope: !7638, file: !398, line: 1091, type: !2132)
!7646 = !DILocation(line: 1091, column: 36, scope: !7638)
!7647 = !DILocation(line: 1093, column: 7, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7638, file: !398, line: 1093, column: 7)
!7649 = !DILocation(line: 1093, column: 13, scope: !7648)
!7650 = !DILocation(line: 1093, column: 7, scope: !7638)
!7651 = !DILocation(line: 1094, column: 5, scope: !7648)
!7652 = !DILocation(line: 1096, column: 8, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7638, file: !398, line: 1096, column: 7)
!7654 = !DILocation(line: 1096, column: 7, scope: !7638)
!7655 = !DILocation(line: 1097, column: 5, scope: !7653)
!7656 = !DILocation(line: 1099, column: 7, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7638, file: !398, line: 1099, column: 7)
!7658 = !DILocation(line: 1099, column: 13, scope: !7657)
!7659 = !DILocation(line: 1099, column: 10, scope: !7657)
!7660 = !DILocation(line: 1099, column: 7, scope: !7638)
!7661 = !DILocation(line: 1100, column: 5, scope: !7657)
!7662 = !DILocation(line: 1102, column: 22, scope: !7638)
!7663 = !DILocation(line: 1102, column: 10, scope: !7638)
!7664 = !DILocation(line: 1102, column: 8, scope: !7638)
!7665 = !DILocation(line: 1103, column: 7, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7638, file: !398, line: 1103, column: 7)
!7667 = !DILocation(line: 1103, column: 16, scope: !7666)
!7668 = !DILocation(line: 1103, column: 13, scope: !7666)
!7669 = !DILocation(line: 1103, column: 7, scope: !7638)
!7670 = !DILocation(line: 1104, column: 5, scope: !7666)
!7671 = !DILocation(line: 1106, column: 3, scope: !7638)
!7672 = !DILocation(line: 1107, column: 1, scope: !7638)
!7673 = distinct !DISubprogram(name: "inner_loop_header_p", scope: !398, file: !398, line: 1033, type: !5412, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7674 = !DILocalVariable(name: "bb", arg: 1, scope: !7673, file: !398, line: 1033, type: !1362)
!7675 = !DILocation(line: 1033, column: 34, scope: !7673)
!7676 = !DILocalVariable(name: "inner_loop", scope: !7673, file: !398, line: 1035, type: !1404)
!7677 = !DILocation(line: 1035, column: 16, scope: !7673)
!7678 = !DILocation(line: 1037, column: 8, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7673, file: !398, line: 1037, column: 7)
!7680 = !DILocation(line: 1037, column: 7, scope: !7673)
!7681 = !DILocation(line: 1038, column: 5, scope: !7679)
!7682 = !DILocation(line: 1040, column: 7, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7673, file: !398, line: 1040, column: 7)
!7684 = !DILocation(line: 1040, column: 13, scope: !7683)
!7685 = !DILocation(line: 1040, column: 10, scope: !7683)
!7686 = !DILocation(line: 1040, column: 7, scope: !7673)
!7687 = !DILocation(line: 1041, column: 5, scope: !7683)
!7688 = !DILocation(line: 1043, column: 16, scope: !7673)
!7689 = !DILocation(line: 1043, column: 20, scope: !7673)
!7690 = !DILocation(line: 1043, column: 14, scope: !7673)
!7691 = !DILocation(line: 1044, column: 7, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7673, file: !398, line: 1044, column: 7)
!7693 = !DILocation(line: 1044, column: 21, scope: !7692)
!7694 = !DILocation(line: 1044, column: 18, scope: !7692)
!7695 = !DILocation(line: 1044, column: 7, scope: !7673)
!7696 = !DILocation(line: 1045, column: 5, scope: !7692)
!7697 = !DILocation(line: 1048, column: 7, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7673, file: !398, line: 1048, column: 7)
!7699 = !DILocation(line: 1048, column: 13, scope: !7698)
!7700 = !DILocation(line: 1048, column: 25, scope: !7698)
!7701 = !DILocation(line: 1048, column: 10, scope: !7698)
!7702 = !DILocation(line: 1049, column: 7, scope: !7698)
!7703 = !DILocation(line: 1049, column: 33, scope: !7698)
!7704 = !DILocation(line: 1049, column: 52, scope: !7698)
!7705 = !DILocation(line: 1049, column: 10, scope: !7698)
!7706 = !DILocation(line: 1048, column: 7, scope: !7673)
!7707 = !DILocation(line: 1052, column: 7, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7698, file: !398, line: 1050, column: 5)
!7709 = !DILocation(line: 1053, column: 7, scope: !7708)
!7710 = !DILocation(line: 1056, column: 3, scope: !7673)
!7711 = !DILocation(line: 1057, column: 1, scope: !7673)
!7712 = distinct !DISubprogram(name: "loop_outer", scope: !142, file: !142, line: 434, type: !7713, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7713 = !DISubroutineType(types: !7714)
!7714 = !{!1404, !7715}
!7715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7716, size: 64)
!7716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1405)
!7717 = !DILocalVariable(name: "loop", arg: 1, scope: !7712, file: !142, line: 434, type: !7715)
!7718 = !DILocation(line: 434, column: 32, scope: !7712)
!7719 = !DILocalVariable(name: "n", scope: !7712, file: !142, line: 436, type: !7)
!7720 = !DILocation(line: 436, column: 12, scope: !7712)
!7721 = !DILocation(line: 436, column: 16, scope: !7712)
!7722 = !DILocation(line: 438, column: 7, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7712, file: !142, line: 438, column: 7)
!7724 = !DILocation(line: 438, column: 9, scope: !7723)
!7725 = !DILocation(line: 438, column: 7, scope: !7712)
!7726 = !DILocation(line: 439, column: 5, scope: !7723)
!7727 = !DILocation(line: 441, column: 10, scope: !7712)
!7728 = !DILocation(line: 441, column: 3, scope: !7712)
!7729 = !DILocation(line: 442, column: 1, scope: !7712)
!7730 = distinct !DISubprogram(name: "get_loop_exit_edges_unique_dests", scope: !398, file: !398, line: 1061, type: !7731, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7731 = !DISubroutineType(types: !7732)
!7732 = !{!2255, !7715}
!7733 = !DILocalVariable(name: "loop", arg: 1, scope: !7730, file: !398, line: 1061, type: !7715)
!7734 = !DILocation(line: 1061, column: 54, scope: !7730)
!7735 = !DILocalVariable(name: "edges", scope: !7730, file: !398, line: 1063, type: !2255)
!7736 = !DILocation(line: 1063, column: 21, scope: !7730)
!7737 = !DILocalVariable(name: "exit", scope: !7730, file: !398, line: 1064, type: !1453)
!7738 = !DILocation(line: 1064, column: 21, scope: !7730)
!7739 = !DILocation(line: 1066, column: 3, scope: !7730)
!7740 = !DILocation(line: 1069, column: 15, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7730, file: !398, line: 1069, column: 3)
!7742 = !DILocation(line: 1069, column: 21, scope: !7741)
!7743 = !DILocation(line: 1069, column: 28, scope: !7741)
!7744 = !DILocation(line: 1069, column: 13, scope: !7741)
!7745 = !DILocation(line: 1069, column: 8, scope: !7741)
!7746 = !DILocation(line: 1069, column: 34, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7741, file: !398, line: 1069, column: 3)
!7748 = !DILocation(line: 1069, column: 40, scope: !7747)
!7749 = !DILocation(line: 1069, column: 3, scope: !7741)
!7750 = !DILocalVariable(name: "i", scope: !7751, file: !398, line: 1071, type: !849)
!7751 = distinct !DILexicalBlock(scope: !7747, file: !398, line: 1070, column: 5)
!7752 = !DILocation(line: 1071, column: 11, scope: !7751)
!7753 = !DILocalVariable(name: "e", scope: !7751, file: !398, line: 1072, type: !1379)
!7754 = !DILocation(line: 1072, column: 12, scope: !7751)
!7755 = !DILocalVariable(name: "was_dest", scope: !7751, file: !398, line: 1073, type: !1057)
!7756 = !DILocation(line: 1073, column: 12, scope: !7751)
!7757 = !DILocation(line: 1075, column: 14, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7751, file: !398, line: 1075, column: 7)
!7759 = !DILocation(line: 1075, column: 12, scope: !7758)
!7760 = !DILocation(line: 1075, column: 19, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7758, file: !398, line: 1075, column: 7)
!7762 = !DILocation(line: 1075, column: 7, scope: !7758)
!7763 = !DILocation(line: 1076, column: 13, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7761, file: !398, line: 1076, column: 13)
!7765 = !DILocation(line: 1076, column: 16, scope: !7764)
!7766 = !DILocation(line: 1076, column: 24, scope: !7764)
!7767 = !DILocation(line: 1076, column: 30, scope: !7764)
!7768 = !DILocation(line: 1076, column: 33, scope: !7764)
!7769 = !DILocation(line: 1076, column: 21, scope: !7764)
!7770 = !DILocation(line: 1076, column: 13, scope: !7761)
!7771 = !DILocation(line: 1078, column: 22, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7764, file: !398, line: 1077, column: 11)
!7773 = !DILocation(line: 1079, column: 13, scope: !7772)
!7774 = !DILocation(line: 1075, column: 53, scope: !7761)
!7775 = !DILocation(line: 1075, column: 7, scope: !7761)
!7776 = distinct !{!7776, !7762, !7777}
!7777 = !DILocation(line: 1080, column: 11, scope: !7758)
!7778 = !DILocation(line: 1082, column: 12, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7751, file: !398, line: 1082, column: 11)
!7780 = !DILocation(line: 1082, column: 11, scope: !7751)
!7781 = !DILocation(line: 1083, column: 9, scope: !7779)
!7782 = !DILocation(line: 1084, column: 5, scope: !7751)
!7783 = !DILocation(line: 1069, column: 50, scope: !7747)
!7784 = !DILocation(line: 1069, column: 56, scope: !7747)
!7785 = !DILocation(line: 1069, column: 48, scope: !7747)
!7786 = !DILocation(line: 1069, column: 3, scope: !7747)
!7787 = distinct !{!7787, !7749, !7788}
!7788 = !DILocation(line: 1084, column: 5, scope: !7741)
!7789 = !DILocation(line: 1085, column: 10, scope: !7730)
!7790 = !DILocation(line: 1085, column: 3, scope: !7730)
!7791 = distinct !DISubprogram(name: "VEC_edge_heap_safe_push", scope: !155, file: !155, line: 152, type: !7792, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7792 = !DISubroutineType(types: !7793)
!7793 = !{!3608, !7519, !1379}
!7794 = !DILocalVariable(name: "vec_", arg: 1, scope: !7791, file: !155, line: 152, type: !7519)
!7795 = !DILocation(line: 152, column: 1, scope: !7791)
!7796 = !DILocalVariable(name: "obj_", arg: 2, scope: !7791, file: !155, line: 152, type: !1379)
!7797 = distinct !DISubprogram(name: "VEC_edge_base_ordered_remove", scope: !155, file: !155, line: 150, type: !7798, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7798 = !DISubroutineType(types: !7799)
!7799 = !{!1379, !7800, !7}
!7800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!7801 = !DILocalVariable(name: "vec_", arg: 1, scope: !7797, file: !155, line: 150, type: !7800)
!7802 = !DILocation(line: 150, column: 1, scope: !7797)
!7803 = !DILocalVariable(name: "ix_", arg: 2, scope: !7797, file: !155, line: 150, type: !7)
!7804 = !DILocalVariable(name: "slot_", scope: !7797, file: !155, line: 150, type: !3608)
!7805 = !DILocalVariable(name: "obj_", scope: !7797, file: !155, line: 150, type: !1379)
!7806 = distinct !DISubprogram(name: "loop_depth", scope: !142, file: !142, line: 425, type: !7807, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{!7, !7715}
!7809 = !DILocalVariable(name: "loop", arg: 1, scope: !7806, file: !142, line: 425, type: !7715)
!7810 = !DILocation(line: 425, column: 32, scope: !7806)
!7811 = !DILocation(line: 427, column: 10, scope: !7806)
!7812 = !DILocation(line: 427, column: 3, scope: !7806)
!7813 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !142, file: !142, line: 85, type: !7814, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7814 = !DISubroutineType(types: !7815)
!7815 = !{!7, !7816}
!7816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7817, size: 64)
!7817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1424)
!7818 = !DILocalVariable(name: "vec_", arg: 1, scope: !7813, file: !142, line: 85, type: !7816)
!7819 = !DILocation(line: 85, column: 1, scope: !7813)
!7820 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !142, file: !142, line: 85, type: !7821, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7821 = !DISubroutineType(types: !7822)
!7822 = !{!1431, !7816, !7}
!7823 = !DILocalVariable(name: "vec_", arg: 1, scope: !7820, file: !142, line: 85, type: !7816)
!7824 = !DILocation(line: 85, column: 1, scope: !7820)
!7825 = !DILocalVariable(name: "ix_", arg: 2, scope: !7820, file: !142, line: 85, type: !7)
!7826 = !DILocation(line: 0, scope: !7820)
!7827 = distinct !DISubprogram(name: "VEC_edge_heap_reserve", scope: !155, file: !155, line: 152, type: !7828, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7828 = !DISubroutineType(types: !7829)
!7829 = !{!849, !7519, !849}
!7830 = !DILocalVariable(name: "vec_", arg: 1, scope: !7827, file: !155, line: 152, type: !7519)
!7831 = !DILocation(line: 152, column: 1, scope: !7827)
!7832 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7827, file: !155, line: 152, type: !849)
!7833 = !DILocalVariable(name: "extend", scope: !7827, file: !155, line: 152, type: !849)
!7834 = !DILocation(line: 152, column: 1, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7827, file: !155, line: 152, column: 1)
!7836 = distinct !DISubprogram(name: "VEC_edge_base_quick_push", scope: !155, file: !155, line: 150, type: !7837, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7837 = !DISubroutineType(types: !7838)
!7838 = !{!3608, !7800, !1379}
!7839 = !DILocalVariable(name: "vec_", arg: 1, scope: !7836, file: !155, line: 150, type: !7800)
!7840 = !DILocation(line: 150, column: 1, scope: !7836)
!7841 = !DILocalVariable(name: "obj_", arg: 2, scope: !7836, file: !155, line: 150, type: !1379)
!7842 = !DILocalVariable(name: "slot_", scope: !7836, file: !155, line: 150, type: !3608)
!7843 = distinct !DISubprogram(name: "VEC_edge_base_space", scope: !155, file: !155, line: 150, type: !7844, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7844 = !DISubroutineType(types: !7845)
!7845 = !{!849, !7800, !849}
!7846 = !DILocalVariable(name: "vec_", arg: 1, scope: !7843, file: !155, line: 150, type: !7800)
!7847 = !DILocation(line: 150, column: 1, scope: !7843)
!7848 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7843, file: !155, line: 150, type: !849)
!7849 = distinct !DISubprogram(name: "current_region_empty_p", scope: !3, file: !3, line: 6768, type: !3528, scopeLine: 6769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7850 = !DILocalVariable(name: "i", scope: !7849, file: !3, line: 6770, type: !849)
!7851 = !DILocation(line: 6770, column: 7, scope: !7849)
!7852 = !DILocation(line: 6771, column: 10, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 6771, column: 3)
!7854 = !DILocation(line: 6771, column: 8, scope: !7853)
!7855 = !DILocation(line: 6771, column: 15, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 6771, column: 3)
!7857 = !DILocation(line: 6771, column: 19, scope: !7856)
!7858 = !DILocation(line: 6771, column: 17, scope: !7856)
!7859 = !DILocation(line: 6771, column: 3, scope: !7853)
!7860 = !DILocation(line: 6772, column: 27, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 6772, column: 9)
!7862 = !DILocation(line: 6772, column: 11, scope: !7861)
!7863 = !DILocation(line: 6772, column: 9, scope: !7856)
!7864 = !DILocation(line: 6773, column: 7, scope: !7861)
!7865 = !DILocation(line: 6772, column: 56, scope: !7861)
!7866 = !DILocation(line: 6771, column: 39, scope: !7856)
!7867 = !DILocation(line: 6771, column: 3, scope: !7856)
!7868 = distinct !{!7868, !7859, !7869}
!7869 = !DILocation(line: 6773, column: 14, scope: !7853)
!7870 = !DILocation(line: 6775, column: 3, scope: !7849)
!7871 = !DILocation(line: 6776, column: 1, scope: !7849)
!7872 = distinct !DISubprogram(name: "setup_current_loop_nest", scope: !3, file: !3, line: 6780, type: !3146, scopeLine: 6781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7873 = !DILocalVariable(name: "rgn", arg: 1, scope: !7872, file: !3, line: 6780, type: !849)
!7874 = !DILocation(line: 6780, column: 30, scope: !7872)
!7875 = !DILocation(line: 6782, column: 46, scope: !7872)
!7876 = !DILocation(line: 6782, column: 23, scope: !7872)
!7877 = !DILocation(line: 6782, column: 21, scope: !7872)
!7878 = !DILocation(line: 6784, column: 8, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 6784, column: 7)
!7880 = !DILocation(line: 6784, column: 7, scope: !7872)
!7881 = !DILocation(line: 6785, column: 5, scope: !7879)
!7882 = !DILocation(line: 6789, column: 3, scope: !7872)
!7883 = !DILocation(line: 6792, column: 3, scope: !7872)
!7884 = !DILocation(line: 6793, column: 3, scope: !7872)
!7885 = !DILocation(line: 6794, column: 1, scope: !7872)
!7886 = distinct !DISubprogram(name: "sel_setup_region_sched_flags", scope: !3, file: !3, line: 6755, type: !3289, scopeLine: 6756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7887 = !DILocation(line: 6757, column: 28, scope: !7886)
!7888 = !DILocation(line: 6758, column: 17, scope: !7886)
!7889 = !DILocation(line: 6759, column: 19, scope: !7886)
!7890 = !DILocation(line: 6760, column: 19, scope: !7886)
!7891 = !DILocation(line: 6760, column: 23, scope: !7886)
!7892 = !DILocation(line: 6760, column: 49, scope: !7886)
!7893 = !DILocation(line: 6761, column: 5, scope: !7886)
!7894 = !DILocation(line: 6761, column: 8, scope: !7886)
!7895 = !DILocation(line: 6761, column: 26, scope: !7886)
!7896 = !DILocation(line: 0, scope: !7886)
!7897 = !DILocation(line: 6759, column: 18, scope: !7886)
!7898 = !DILocation(line: 6759, column: 16, scope: !7886)
!7899 = !DILocation(line: 6762, column: 25, scope: !7886)
!7900 = !DILocation(line: 6762, column: 23, scope: !7886)
!7901 = !DILocation(line: 6763, column: 12, scope: !7886)
!7902 = !DILocation(line: 6763, column: 10, scope: !7886)
!7903 = !DILocation(line: 6764, column: 1, scope: !7886)
!7904 = distinct !DISubprogram(name: "VEC_basic_block_heap_alloc", scope: !155, file: !155, line: 283, type: !7905, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7905 = !DISubroutineType(types: !7906)
!7906 = !{!2260, !849}
!7907 = !DILocalVariable(name: "alloc_", arg: 1, scope: !7904, file: !155, line: 283, type: !849)
!7908 = !DILocation(line: 283, column: 1, scope: !7904)
!7909 = distinct !DISubprogram(name: "VEC_basic_block_base_quick_push", scope: !155, file: !155, line: 281, type: !7910, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{!7912, !6165, !1362}
!7912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!7913 = !DILocalVariable(name: "vec_", arg: 1, scope: !7909, file: !155, line: 281, type: !6165)
!7914 = !DILocation(line: 281, column: 1, scope: !7909)
!7915 = !DILocalVariable(name: "obj_", arg: 2, scope: !7909, file: !155, line: 281, type: !1362)
!7916 = !DILocalVariable(name: "slot_", scope: !7909, file: !155, line: 281, type: !7912)
!7917 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !155, file: !155, line: 281, type: !7918, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7918 = !DISubroutineType(types: !7919)
!7919 = !{!1362, !7920, !7}
!7920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7921, size: 64)
!7921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1499)
!7922 = !DILocalVariable(name: "vec_", arg: 1, scope: !7917, file: !155, line: 281, type: !7920)
!7923 = !DILocation(line: 281, column: 1, scope: !7917)
!7924 = !DILocalVariable(name: "ix_", arg: 2, scope: !7917, file: !155, line: 281, type: !7)
!7925 = !DILocation(line: 0, scope: !7917)
!7926 = distinct !DISubprogram(name: "sel_compute_priorities", scope: !3, file: !3, line: 6798, type: !3146, scopeLine: 6799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7927 = !DILocalVariable(name: "rgn", arg: 1, scope: !7926, file: !3, line: 6798, type: !849)
!7928 = !DILocation(line: 6798, column: 29, scope: !7926)
!7929 = !DILocation(line: 6800, column: 35, scope: !7926)
!7930 = !DILocation(line: 6800, column: 3, scope: !7926)
!7931 = !DILocation(line: 6804, column: 3, scope: !7926)
!7932 = !DILocation(line: 6806, column: 7, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 6806, column: 7)
!7934 = !DILocation(line: 6806, column: 21, scope: !7933)
!7935 = !DILocation(line: 6806, column: 7, scope: !7926)
!7936 = !DILocation(line: 6807, column: 5, scope: !7933)
!7937 = !DILocation(line: 6809, column: 3, scope: !7926)
!7938 = !DILocation(line: 6810, column: 1, scope: !7926)
!7939 = distinct !DISubprogram(name: "VEC_basic_block_heap_free", scope: !155, file: !155, line: 283, type: !7940, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{null, !7942}
!7942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!7943 = !DILocalVariable(name: "vec_", arg: 1, scope: !7939, file: !155, line: 283, type: !7942)
!7944 = !DILocation(line: 283, column: 1, scope: !7939)
!7945 = !DILocation(line: 283, column: 1, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7939, file: !155, line: 283, column: 1)
!7947 = distinct !DISubprogram(name: "bitmap_initialize_stat", scope: !884, file: !884, line: 165, type: !7948, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{null, !2074, !904}
!7950 = !DILocalVariable(name: "head", arg: 1, scope: !7947, file: !884, line: 165, type: !2074)
!7951 = !DILocation(line: 165, column: 32, scope: !7947)
!7952 = !DILocalVariable(name: "obstack", arg: 2, scope: !7947, file: !884, line: 165, type: !904)
!7953 = !DILocation(line: 165, column: 54, scope: !7947)
!7954 = !DILocation(line: 167, column: 17, scope: !7947)
!7955 = !DILocation(line: 167, column: 23, scope: !7947)
!7956 = !DILocation(line: 167, column: 31, scope: !7947)
!7957 = !DILocation(line: 167, column: 3, scope: !7947)
!7958 = !DILocation(line: 167, column: 9, scope: !7947)
!7959 = !DILocation(line: 167, column: 15, scope: !7947)
!7960 = !DILocation(line: 168, column: 19, scope: !7947)
!7961 = !DILocation(line: 168, column: 3, scope: !7947)
!7962 = !DILocation(line: 168, column: 9, scope: !7947)
!7963 = !DILocation(line: 168, column: 17, scope: !7947)
!7964 = !DILocation(line: 172, column: 1, scope: !7947)
!7965 = distinct !DISubprogram(name: "init_seqno", scope: !3, file: !3, line: 6722, type: !7966, scopeLine: 6723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!7966 = !DISubroutineType(types: !7967)
!7967 = !{!849, !849, !2074, !1362}
!7968 = !DILocalVariable(name: "number_of_insns", arg: 1, scope: !7965, file: !3, line: 6722, type: !849)
!7969 = !DILocation(line: 6722, column: 17, scope: !7965)
!7970 = !DILocalVariable(name: "blocks_to_reschedule", arg: 2, scope: !7965, file: !3, line: 6722, type: !2074)
!7971 = !DILocation(line: 6722, column: 41, scope: !7965)
!7972 = !DILocalVariable(name: "from", arg: 3, scope: !7965, file: !3, line: 6722, type: !1362)
!7973 = !DILocation(line: 6722, column: 75, scope: !7965)
!7974 = !DILocalVariable(name: "visited_bbs", scope: !7965, file: !3, line: 6724, type: !7975)
!7975 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !7976, line: 45, baseType: !7977)
!7976 = !DIFile(filename: "./sbitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7978, size: 64)
!7978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !7976, line: 39, size: 192, elements: !7979)
!7979 = !{!7980, !7981, !7982, !7983}
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !7978, file: !7976, line: 41, baseType: !2281, size: 64)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !7978, file: !7976, line: 42, baseType: !7, size: 32, offset: 64)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7978, file: !7976, line: 43, baseType: !7, size: 32, offset: 96)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !7978, file: !7976, line: 44, baseType: !7984, size: 64, offset: 128)
!7984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 64, elements: !863)
!7985 = !DILocation(line: 6724, column: 11, scope: !7965)
!7986 = !DILocalVariable(name: "bi", scope: !7965, file: !3, line: 6725, type: !7987)
!7987 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !884, line: 218, baseType: !7988)
!7988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !884, line: 203, size: 256, elements: !7989)
!7989 = !{!7990, !7991, !7992, !7993}
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !7988, file: !884, line: 206, baseType: !887, size: 64)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !7988, file: !884, line: 209, baseType: !887, size: 64, offset: 64)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !7988, file: !884, line: 212, baseType: !7, size: 32, offset: 128)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !7988, file: !884, line: 217, baseType: !897, size: 64, offset: 192)
!7994 = !DILocation(line: 6725, column: 19, scope: !7965)
!7995 = !DILocalVariable(name: "bbi", scope: !7965, file: !3, line: 6726, type: !7)
!7996 = !DILocation(line: 6726, column: 12, scope: !7965)
!7997 = !DILocation(line: 6728, column: 32, scope: !7965)
!7998 = !DILocation(line: 6728, column: 17, scope: !7965)
!7999 = !DILocation(line: 6728, column: 15, scope: !7965)
!8000 = !DILocation(line: 6730, column: 7, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 6730, column: 7)
!8002 = !DILocation(line: 6730, column: 7, scope: !7965)
!8003 = !DILocation(line: 6732, column: 21, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 6731, column: 5)
!8005 = !DILocation(line: 6732, column: 7, scope: !8004)
!8006 = !DILocation(line: 6733, column: 7, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8004, file: !3, line: 6733, column: 7)
!8008 = !DILocation(line: 6733, column: 7, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 6733, column: 7)
!8010 = !DILocation(line: 6735, column: 4, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 6734, column: 9)
!8012 = !DILocation(line: 6736, column: 22, scope: !8011)
!8013 = !DILocation(line: 6736, column: 35, scope: !8011)
!8014 = !DILocation(line: 6736, column: 11, scope: !8011)
!8015 = !DILocation(line: 6737, column: 2, scope: !8011)
!8016 = distinct !{!8016, !8006, !8017}
!8017 = !DILocation(line: 6737, column: 2, scope: !8007)
!8018 = !DILocation(line: 6738, column: 5, scope: !8004)
!8019 = !DILocation(line: 6741, column: 21, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 6740, column: 5)
!8021 = !DILocation(line: 6741, column: 7, scope: !8020)
!8022 = !DILocation(line: 6742, column: 14, scope: !8020)
!8023 = !DILocation(line: 6742, column: 12, scope: !8020)
!8024 = !DILocation(line: 6745, column: 15, scope: !7965)
!8025 = !DILocation(line: 6745, column: 31, scope: !7965)
!8026 = !DILocation(line: 6745, column: 37, scope: !7965)
!8027 = !DILocation(line: 6745, column: 55, scope: !7965)
!8028 = !DILocation(line: 6745, column: 70, scope: !7965)
!8029 = !DILocation(line: 6745, column: 13, scope: !7965)
!8030 = !DILocation(line: 6746, column: 17, scope: !7965)
!8031 = !DILocation(line: 6746, column: 23, scope: !7965)
!8032 = !DILocation(line: 6746, column: 36, scope: !7965)
!8033 = !DILocation(line: 6746, column: 3, scope: !7965)
!8034 = !DILocation(line: 6747, column: 3, scope: !7965)
!8035 = !DILocation(line: 6749, column: 3, scope: !7965)
!8036 = !DILocation(line: 6750, column: 10, scope: !7965)
!8037 = !DILocation(line: 6750, column: 25, scope: !7965)
!8038 = !DILocation(line: 6750, column: 3, scope: !7965)
!8039 = distinct !DISubprogram(name: "sel_sched_region_2", scope: !3, file: !3, line: 7394, type: !3146, scopeLine: 7395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8040 = !DILocalVariable(name: "orig_max_seqno", arg: 1, scope: !8039, file: !3, line: 7394, type: !849)
!8041 = !DILocation(line: 7394, column: 25, scope: !8039)
!8042 = !DILocalVariable(name: "highest_seqno_in_use", scope: !8039, file: !3, line: 7396, type: !849)
!8043 = !DILocation(line: 7396, column: 7, scope: !8039)
!8044 = !DILocation(line: 7396, column: 30, scope: !8039)
!8045 = !DILocation(line: 7398, column: 27, scope: !8039)
!8046 = !DILocation(line: 7399, column: 33, scope: !8039)
!8047 = !DILocation(line: 7400, column: 26, scope: !8039)
!8048 = !DILocation(line: 7401, column: 28, scope: !8039)
!8049 = !DILocation(line: 7402, column: 23, scope: !8039)
!8050 = !DILocation(line: 7404, column: 3, scope: !8039)
!8051 = !DILocation(line: 7404, column: 10, scope: !8039)
!8052 = !DILocalVariable(name: "min_seqno", scope: !8053, file: !3, line: 7406, type: !849)
!8053 = distinct !DILexicalBlock(scope: !8039, file: !3, line: 7405, column: 5)
!8054 = !DILocation(line: 7406, column: 11, scope: !8053)
!8055 = !DILocalVariable(name: "max_seqno", scope: !8053, file: !3, line: 7406, type: !849)
!8056 = !DILocation(line: 7406, column: 22, scope: !8053)
!8057 = !DILocalVariable(name: "scheduled_insns", scope: !8053, file: !3, line: 7407, type: !2163)
!8058 = !DILocation(line: 7407, column: 15, scope: !8053)
!8059 = !DILocalVariable(name: "scheduled_insns_tailp", scope: !8053, file: !3, line: 7408, type: !8060)
!8060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!8061 = !DILocation(line: 7408, column: 16, scope: !8053)
!8062 = !DILocation(line: 7410, column: 27, scope: !8053)
!8063 = !DILocation(line: 7410, column: 7, scope: !8053)
!8064 = !DILocation(line: 7411, column: 27, scope: !8053)
!8065 = !DILocation(line: 7411, column: 35, scope: !8053)
!8066 = !DILocation(line: 7411, column: 7, scope: !8053)
!8067 = !DILocation(line: 7412, column: 38, scope: !8053)
!8068 = !DILocation(line: 7412, column: 46, scope: !8053)
!8069 = !DILocation(line: 7412, column: 16, scope: !8053)
!8070 = !DILocation(line: 7412, column: 14, scope: !8053)
!8071 = !DILocation(line: 7413, column: 55, scope: !8053)
!8072 = !DILocation(line: 7413, column: 66, scope: !8053)
!8073 = !DILocation(line: 7414, column: 55, scope: !8053)
!8074 = !DILocation(line: 7413, column: 30, scope: !8053)
!8075 = !DILocation(line: 7413, column: 28, scope: !8053)
!8076 = distinct !{!8076, !8050, !8077}
!8077 = !DILocation(line: 7416, column: 5, scope: !8039)
!8078 = !DILocation(line: 7418, column: 7, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8039, file: !3, line: 7418, column: 7)
!8080 = !DILocation(line: 7418, column: 21, scope: !8079)
!8081 = !DILocation(line: 7418, column: 7, scope: !8039)
!8082 = !DILocation(line: 7419, column: 5, scope: !8079)
!8083 = !DILocation(line: 7419, column: 5, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 7419, column: 5)
!8085 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 7419, column: 5)
!8086 = !DILocation(line: 7419, column: 5, scope: !8085)
!8087 = !DILocalVariable(name: "__j", scope: !8088, file: !3, line: 7419, type: !849)
!8088 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 7419, column: 5)
!8089 = !DILocation(line: 7419, column: 5, scope: !8088)
!8090 = !DILocalVariable(name: "__s", scope: !8088, file: !3, line: 7419, type: !817)
!8091 = !DILocation(line: 7425, column: 1, scope: !8039)
!8092 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !884, file: !884, line: 224, type: !8093, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{null, !8095, !8096, !7, !8099}
!8095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7987, size: 64)
!8096 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !826, line: 48, baseType: !8097)
!8097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8098, size: 64)
!8098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !883)
!8099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!8100 = !DILocalVariable(name: "bi", arg: 1, scope: !8092, file: !884, line: 224, type: !8095)
!8101 = !DILocation(line: 224, column: 37, scope: !8092)
!8102 = !DILocalVariable(name: "map", arg: 2, scope: !8092, file: !884, line: 224, type: !8096)
!8103 = !DILocation(line: 224, column: 54, scope: !8092)
!8104 = !DILocalVariable(name: "start_bit", arg: 3, scope: !8092, file: !884, line: 225, type: !7)
!8105 = !DILocation(line: 225, column: 15, scope: !8092)
!8106 = !DILocalVariable(name: "bit_no", arg: 4, scope: !8092, file: !884, line: 225, type: !8099)
!8107 = !DILocation(line: 225, column: 36, scope: !8092)
!8108 = !DILocation(line: 227, column: 14, scope: !8092)
!8109 = !DILocation(line: 227, column: 19, scope: !8092)
!8110 = !DILocation(line: 227, column: 3, scope: !8092)
!8111 = !DILocation(line: 227, column: 7, scope: !8092)
!8112 = !DILocation(line: 227, column: 12, scope: !8092)
!8113 = !DILocation(line: 228, column: 3, scope: !8092)
!8114 = !DILocation(line: 228, column: 7, scope: !8092)
!8115 = !DILocation(line: 228, column: 12, scope: !8092)
!8116 = !DILocation(line: 231, column: 3, scope: !8092)
!8117 = !DILocation(line: 233, column: 12, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !884, line: 233, column: 11)
!8119 = distinct !DILexicalBlock(scope: !8092, file: !884, line: 232, column: 5)
!8120 = !DILocation(line: 233, column: 16, scope: !8118)
!8121 = !DILocation(line: 233, column: 11, scope: !8119)
!8122 = !DILocation(line: 235, column: 4, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8118, file: !884, line: 234, column: 2)
!8124 = !DILocation(line: 235, column: 8, scope: !8123)
!8125 = !DILocation(line: 235, column: 13, scope: !8123)
!8126 = !DILocation(line: 236, column: 4, scope: !8123)
!8127 = !DILocation(line: 239, column: 11, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8119, file: !884, line: 239, column: 11)
!8129 = !DILocation(line: 239, column: 15, scope: !8128)
!8130 = !DILocation(line: 239, column: 21, scope: !8128)
!8131 = !DILocation(line: 239, column: 29, scope: !8128)
!8132 = !DILocation(line: 239, column: 39, scope: !8128)
!8133 = !DILocation(line: 239, column: 26, scope: !8128)
!8134 = !DILocation(line: 239, column: 11, scope: !8119)
!8135 = !DILocation(line: 240, column: 2, scope: !8128)
!8136 = !DILocation(line: 241, column: 18, scope: !8119)
!8137 = !DILocation(line: 241, column: 22, scope: !8119)
!8138 = !DILocation(line: 241, column: 28, scope: !8119)
!8139 = !DILocation(line: 241, column: 7, scope: !8119)
!8140 = !DILocation(line: 241, column: 11, scope: !8119)
!8141 = !DILocation(line: 241, column: 16, scope: !8119)
!8142 = distinct !{!8142, !8116, !8143}
!8143 = !DILocation(line: 242, column: 5, scope: !8092)
!8144 = !DILocation(line: 245, column: 7, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8092, file: !884, line: 245, column: 7)
!8146 = !DILocation(line: 245, column: 11, scope: !8145)
!8147 = !DILocation(line: 245, column: 17, scope: !8145)
!8148 = !DILocation(line: 245, column: 25, scope: !8145)
!8149 = !DILocation(line: 245, column: 35, scope: !8145)
!8150 = !DILocation(line: 245, column: 22, scope: !8145)
!8151 = !DILocation(line: 245, column: 7, scope: !8092)
!8152 = !DILocation(line: 246, column: 17, scope: !8145)
!8153 = !DILocation(line: 246, column: 21, scope: !8145)
!8154 = !DILocation(line: 246, column: 27, scope: !8145)
!8155 = !DILocation(line: 246, column: 32, scope: !8145)
!8156 = !DILocation(line: 246, column: 15, scope: !8145)
!8157 = !DILocation(line: 246, column: 5, scope: !8145)
!8158 = !DILocation(line: 249, column: 17, scope: !8092)
!8159 = !DILocation(line: 249, column: 27, scope: !8092)
!8160 = !DILocation(line: 249, column: 46, scope: !8092)
!8161 = !DILocation(line: 249, column: 3, scope: !8092)
!8162 = !DILocation(line: 249, column: 7, scope: !8092)
!8163 = !DILocation(line: 249, column: 15, scope: !8092)
!8164 = !DILocation(line: 250, column: 14, scope: !8092)
!8165 = !DILocation(line: 250, column: 18, scope: !8092)
!8166 = !DILocation(line: 250, column: 24, scope: !8092)
!8167 = !DILocation(line: 250, column: 29, scope: !8092)
!8168 = !DILocation(line: 250, column: 33, scope: !8092)
!8169 = !DILocation(line: 250, column: 3, scope: !8092)
!8170 = !DILocation(line: 250, column: 7, scope: !8092)
!8171 = !DILocation(line: 250, column: 12, scope: !8092)
!8172 = !DILocation(line: 251, column: 16, scope: !8092)
!8173 = !DILocation(line: 251, column: 26, scope: !8092)
!8174 = !DILocation(line: 251, column: 3, scope: !8092)
!8175 = !DILocation(line: 251, column: 7, scope: !8092)
!8176 = !DILocation(line: 251, column: 12, scope: !8092)
!8177 = !DILocation(line: 257, column: 17, scope: !8092)
!8178 = !DILocation(line: 257, column: 21, scope: !8092)
!8179 = !DILocation(line: 257, column: 16, scope: !8092)
!8180 = !DILocation(line: 257, column: 13, scope: !8092)
!8181 = !DILocation(line: 259, column: 13, scope: !8092)
!8182 = !DILocation(line: 259, column: 4, scope: !8092)
!8183 = !DILocation(line: 259, column: 11, scope: !8092)
!8184 = !DILocation(line: 260, column: 1, scope: !8092)
!8185 = distinct !DISubprogram(name: "bmp_iter_set", scope: !884, file: !884, line: 393, type: !8186, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8186 = !DISubroutineType(types: !8187)
!8187 = !{!1057, !8095, !8099}
!8188 = !DILocalVariable(name: "bi", arg: 1, scope: !8185, file: !884, line: 393, type: !8095)
!8189 = !DILocation(line: 393, column: 32, scope: !8185)
!8190 = !DILocalVariable(name: "bit_no", arg: 2, scope: !8185, file: !884, line: 393, type: !8099)
!8191 = !DILocation(line: 393, column: 46, scope: !8185)
!8192 = !DILocation(line: 396, column: 7, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8185, file: !884, line: 396, column: 7)
!8194 = !DILocation(line: 396, column: 11, scope: !8193)
!8195 = !DILocation(line: 396, column: 7, scope: !8185)
!8196 = !DILocation(line: 397, column: 5, scope: !8193)
!8197 = !DILabel(scope: !8198, name: "next_bit", file: !884, line: 398)
!8198 = distinct !DILexicalBlock(scope: !8193, file: !884, line: 397, column: 5)
!8199 = !DILocation(line: 398, column: 5, scope: !8198)
!8200 = !DILocation(line: 399, column: 7, scope: !8198)
!8201 = !DILocation(line: 399, column: 16, scope: !8198)
!8202 = !DILocation(line: 399, column: 20, scope: !8198)
!8203 = !DILocation(line: 399, column: 25, scope: !8198)
!8204 = !DILocation(line: 399, column: 14, scope: !8198)
!8205 = !DILocation(line: 401, column: 4, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8198, file: !884, line: 400, column: 2)
!8207 = !DILocation(line: 401, column: 8, scope: !8206)
!8208 = !DILocation(line: 401, column: 13, scope: !8206)
!8209 = !DILocation(line: 402, column: 5, scope: !8206)
!8210 = !DILocation(line: 402, column: 12, scope: !8206)
!8211 = distinct !{!8211, !8200, !8212}
!8212 = !DILocation(line: 403, column: 2, scope: !8198)
!8213 = !DILocation(line: 404, column: 7, scope: !8198)
!8214 = !DILocation(line: 410, column: 16, scope: !8185)
!8215 = !DILocation(line: 410, column: 15, scope: !8185)
!8216 = !DILocation(line: 410, column: 23, scope: !8185)
!8217 = !DILocation(line: 410, column: 42, scope: !8185)
!8218 = !DILocation(line: 411, column: 7, scope: !8185)
!8219 = !DILocation(line: 411, column: 26, scope: !8185)
!8220 = !DILocation(line: 410, column: 4, scope: !8185)
!8221 = !DILocation(line: 410, column: 11, scope: !8185)
!8222 = !DILocation(line: 412, column: 3, scope: !8185)
!8223 = !DILocation(line: 412, column: 7, scope: !8185)
!8224 = !DILocation(line: 412, column: 14, scope: !8185)
!8225 = !DILocation(line: 414, column: 3, scope: !8185)
!8226 = !DILocation(line: 417, column: 7, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8185, file: !884, line: 415, column: 5)
!8228 = !DILocation(line: 417, column: 14, scope: !8227)
!8229 = !DILocation(line: 417, column: 18, scope: !8227)
!8230 = !DILocation(line: 417, column: 26, scope: !8227)
!8231 = !DILocation(line: 419, column: 15, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8227, file: !884, line: 418, column: 2)
!8233 = !DILocation(line: 419, column: 19, scope: !8232)
!8234 = !DILocation(line: 419, column: 25, scope: !8232)
!8235 = !DILocation(line: 419, column: 30, scope: !8232)
!8236 = !DILocation(line: 419, column: 34, scope: !8232)
!8237 = !DILocation(line: 419, column: 4, scope: !8232)
!8238 = !DILocation(line: 419, column: 8, scope: !8232)
!8239 = !DILocation(line: 419, column: 13, scope: !8232)
!8240 = !DILocation(line: 420, column: 8, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8232, file: !884, line: 420, column: 8)
!8242 = !DILocation(line: 420, column: 12, scope: !8241)
!8243 = !DILocation(line: 420, column: 8, scope: !8232)
!8244 = !DILocation(line: 421, column: 6, scope: !8241)
!8245 = !DILocation(line: 422, column: 5, scope: !8232)
!8246 = !DILocation(line: 422, column: 12, scope: !8232)
!8247 = !DILocation(line: 423, column: 4, scope: !8232)
!8248 = !DILocation(line: 423, column: 8, scope: !8232)
!8249 = !DILocation(line: 423, column: 15, scope: !8232)
!8250 = distinct !{!8250, !8226, !8251}
!8251 = !DILocation(line: 424, column: 2, scope: !8227)
!8252 = !DILocation(line: 427, column: 18, scope: !8227)
!8253 = !DILocation(line: 427, column: 22, scope: !8227)
!8254 = !DILocation(line: 427, column: 28, scope: !8227)
!8255 = !DILocation(line: 427, column: 7, scope: !8227)
!8256 = !DILocation(line: 427, column: 11, scope: !8227)
!8257 = !DILocation(line: 427, column: 16, scope: !8227)
!8258 = !DILocation(line: 428, column: 12, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8227, file: !884, line: 428, column: 11)
!8260 = !DILocation(line: 428, column: 16, scope: !8259)
!8261 = !DILocation(line: 428, column: 11, scope: !8227)
!8262 = !DILocation(line: 429, column: 2, scope: !8259)
!8263 = !DILocation(line: 430, column: 17, scope: !8227)
!8264 = !DILocation(line: 430, column: 21, scope: !8227)
!8265 = !DILocation(line: 430, column: 27, scope: !8227)
!8266 = !DILocation(line: 430, column: 32, scope: !8227)
!8267 = !DILocation(line: 430, column: 8, scope: !8227)
!8268 = !DILocation(line: 430, column: 15, scope: !8227)
!8269 = !DILocation(line: 431, column: 7, scope: !8227)
!8270 = !DILocation(line: 431, column: 11, scope: !8227)
!8271 = !DILocation(line: 431, column: 19, scope: !8227)
!8272 = distinct !{!8272, !8225, !8273}
!8273 = !DILocation(line: 432, column: 5, scope: !8185)
!8274 = !DILocation(line: 433, column: 1, scope: !8185)
!8275 = distinct !DISubprogram(name: "RESET_BIT", scope: !7976, file: !7976, line: 82, type: !8276, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8276 = !DISubroutineType(types: !8277)
!8277 = !{null, !7975, !7}
!8278 = !DILocalVariable(name: "map", arg: 1, scope: !8275, file: !7976, line: 82, type: !7975)
!8279 = !DILocation(line: 82, column: 20, scope: !8275)
!8280 = !DILocalVariable(name: "bitno", arg: 2, scope: !8275, file: !7976, line: 82, type: !7)
!8281 = !DILocation(line: 82, column: 39, scope: !8275)
!8282 = !DILocation(line: 84, column: 7, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8275, file: !7976, line: 84, column: 7)
!8284 = !DILocation(line: 84, column: 12, scope: !8283)
!8285 = !DILocation(line: 84, column: 7, scope: !8275)
!8286 = !DILocalVariable(name: "oldbit", scope: !8287, file: !7976, line: 86, type: !1057)
!8287 = distinct !DILexicalBlock(scope: !8283, file: !7976, line: 85, column: 5)
!8288 = !DILocation(line: 86, column: 12, scope: !8287)
!8289 = !DILocation(line: 87, column: 16, scope: !8287)
!8290 = !DILocation(line: 87, column: 14, scope: !8287)
!8291 = !DILocation(line: 88, column: 11, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8287, file: !7976, line: 88, column: 11)
!8293 = !DILocation(line: 88, column: 11, scope: !8287)
!8294 = !DILocation(line: 89, column: 2, scope: !8292)
!8295 = !DILocation(line: 89, column: 7, scope: !8292)
!8296 = !DILocation(line: 89, column: 16, scope: !8292)
!8297 = !DILocation(line: 89, column: 22, scope: !8292)
!8298 = !DILocation(line: 89, column: 41, scope: !8292)
!8299 = !DILocation(line: 90, column: 5, scope: !8287)
!8300 = !DILocation(line: 92, column: 35, scope: !8275)
!8301 = !DILocation(line: 92, column: 42, scope: !8275)
!8302 = !DILocation(line: 92, column: 31, scope: !8275)
!8303 = !DILocation(line: 92, column: 8, scope: !8275)
!8304 = !DILocation(line: 91, column: 3, scope: !8275)
!8305 = !DILocation(line: 91, column: 8, scope: !8275)
!8306 = !DILocation(line: 91, column: 13, scope: !8275)
!8307 = !DILocation(line: 91, column: 19, scope: !8275)
!8308 = !DILocation(line: 92, column: 5, scope: !8275)
!8309 = !DILocation(line: 93, column: 1, scope: !8275)
!8310 = distinct !DISubprogram(name: "bmp_iter_next", scope: !884, file: !884, line: 382, type: !8311, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8311 = !DISubroutineType(types: !8312)
!8312 = !{null, !8095, !8099}
!8313 = !DILocalVariable(name: "bi", arg: 1, scope: !8310, file: !884, line: 382, type: !8095)
!8314 = !DILocation(line: 382, column: 33, scope: !8310)
!8315 = !DILocalVariable(name: "bit_no", arg: 2, scope: !8310, file: !884, line: 382, type: !8099)
!8316 = !DILocation(line: 382, column: 47, scope: !8310)
!8317 = !DILocation(line: 384, column: 3, scope: !8310)
!8318 = !DILocation(line: 384, column: 7, scope: !8310)
!8319 = !DILocation(line: 384, column: 12, scope: !8310)
!8320 = !DILocation(line: 385, column: 4, scope: !8310)
!8321 = !DILocation(line: 385, column: 11, scope: !8310)
!8322 = !DILocation(line: 386, column: 1, scope: !8310)
!8323 = distinct !DISubprogram(name: "init_seqno_1", scope: !3, file: !3, line: 6683, type: !8324, scopeLine: 6684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8324 = !DISubroutineType(types: !8325)
!8325 = !{null, !1362, !7975, !2074}
!8326 = !DILocalVariable(name: "bb", arg: 1, scope: !8323, file: !3, line: 6683, type: !1362)
!8327 = !DILocation(line: 6683, column: 27, scope: !8323)
!8328 = !DILocalVariable(name: "visited_bbs", arg: 2, scope: !8323, file: !3, line: 6683, type: !7975)
!8329 = !DILocation(line: 6683, column: 39, scope: !8323)
!8330 = !DILocalVariable(name: "blocks_to_reschedule", arg: 3, scope: !8323, file: !3, line: 6683, type: !2074)
!8331 = !DILocation(line: 6683, column: 59, scope: !8323)
!8332 = !DILocalVariable(name: "bbi", scope: !8323, file: !3, line: 6685, type: !849)
!8333 = !DILocation(line: 6685, column: 7, scope: !8323)
!8334 = !DILocation(line: 6685, column: 13, scope: !8323)
!8335 = !DILocalVariable(name: "insn", scope: !8323, file: !3, line: 6686, type: !2132)
!8336 = !DILocation(line: 6686, column: 10, scope: !8323)
!8337 = !DILocalVariable(name: "note", scope: !8323, file: !3, line: 6686, type: !2132)
!8338 = !DILocation(line: 6686, column: 16, scope: !8323)
!8339 = !DILocation(line: 6686, column: 32, scope: !8323)
!8340 = !DILocation(line: 6686, column: 23, scope: !8323)
!8341 = !DILocalVariable(name: "succ_insn", scope: !8323, file: !3, line: 6687, type: !2132)
!8342 = !DILocation(line: 6687, column: 10, scope: !8323)
!8343 = !DILocalVariable(name: "si", scope: !8323, file: !3, line: 6688, type: !3479)
!8344 = !DILocation(line: 6688, column: 17, scope: !8323)
!8345 = !DILocation(line: 6690, column: 12, scope: !8323)
!8346 = !DILocation(line: 6690, column: 25, scope: !8323)
!8347 = !DILocation(line: 6690, column: 3, scope: !8323)
!8348 = !DILocation(line: 6691, column: 7, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 6691, column: 7)
!8350 = !DILocation(line: 6691, column: 7, scope: !8323)
!8351 = !DILocation(line: 6692, column: 23, scope: !8349)
!8352 = !DILocation(line: 6692, column: 45, scope: !8349)
!8353 = !DILocation(line: 6692, column: 49, scope: !8349)
!8354 = !DILocation(line: 6692, column: 5, scope: !8349)
!8355 = !DILocation(line: 6694, column: 3, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 6694, column: 3)
!8357 = !DILocation(line: 6694, column: 3, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8356, file: !3, line: 6694, column: 3)
!8359 = !DILocalVariable(name: "succ", scope: !8360, file: !3, line: 6697, type: !1362)
!8360 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 6696, column: 5)
!8361 = !DILocation(line: 6697, column: 19, scope: !8360)
!8362 = !DILocation(line: 6697, column: 26, scope: !8360)
!8363 = !DILocalVariable(name: "succ_bbi", scope: !8360, file: !3, line: 6698, type: !849)
!8364 = !DILocation(line: 6698, column: 11, scope: !8360)
!8365 = !DILocation(line: 6698, column: 22, scope: !8360)
!8366 = !DILocation(line: 6700, column: 7, scope: !8360)
!8367 = !DILocation(line: 6702, column: 12, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 6702, column: 11)
!8369 = !DILocation(line: 6702, column: 11, scope: !8360)
!8370 = !DILocation(line: 6704, column: 4, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 6703, column: 2)
!8372 = !DILocation(line: 6706, column: 18, scope: !8371)
!8373 = !DILocation(line: 6706, column: 24, scope: !8371)
!8374 = !DILocation(line: 6706, column: 37, scope: !8371)
!8375 = !DILocation(line: 6706, column: 4, scope: !8371)
!8376 = !DILocation(line: 6707, column: 2, scope: !8371)
!8377 = !DILocation(line: 6708, column: 5, scope: !8360)
!8378 = distinct !{!8378, !8355, !8379}
!8379 = !DILocation(line: 6708, column: 5, scope: !8356)
!8380 = !DILocation(line: 6710, column: 15, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 6710, column: 3)
!8382 = !DILocation(line: 6710, column: 13, scope: !8381)
!8383 = !DILocation(line: 6710, column: 8, scope: !8381)
!8384 = !DILocation(line: 6710, column: 28, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 6710, column: 3)
!8386 = !DILocation(line: 6710, column: 36, scope: !8385)
!8387 = !DILocation(line: 6710, column: 33, scope: !8385)
!8388 = !DILocation(line: 6710, column: 3, scope: !8381)
!8389 = !DILocation(line: 6711, column: 34, scope: !8385)
!8390 = !DILocation(line: 6711, column: 5, scope: !8385)
!8391 = !DILocation(line: 6711, column: 23, scope: !8385)
!8392 = !DILocation(line: 6710, column: 49, scope: !8385)
!8393 = !DILocation(line: 6710, column: 47, scope: !8385)
!8394 = !DILocation(line: 6710, column: 3, scope: !8385)
!8395 = distinct !{!8395, !8388, !8396}
!8396 = !DILocation(line: 6711, column: 34, scope: !8381)
!8397 = !DILocation(line: 6712, column: 1, scope: !8323)
!8398 = distinct !DISubprogram(name: "SET_BIT", scope: !7976, file: !7976, line: 63, type: !8276, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8399 = !DILocalVariable(name: "map", arg: 1, scope: !8398, file: !7976, line: 63, type: !7975)
!8400 = !DILocation(line: 63, column: 18, scope: !8398)
!8401 = !DILocalVariable(name: "bitno", arg: 2, scope: !8398, file: !7976, line: 63, type: !7)
!8402 = !DILocation(line: 63, column: 36, scope: !8398)
!8403 = !DILocation(line: 65, column: 7, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8398, file: !7976, line: 65, column: 7)
!8405 = !DILocation(line: 65, column: 12, scope: !8404)
!8406 = !DILocation(line: 65, column: 7, scope: !8398)
!8407 = !DILocalVariable(name: "oldbit", scope: !8408, file: !7976, line: 67, type: !1057)
!8408 = distinct !DILexicalBlock(scope: !8404, file: !7976, line: 66, column: 5)
!8409 = !DILocation(line: 67, column: 12, scope: !8408)
!8410 = !DILocation(line: 68, column: 16, scope: !8408)
!8411 = !DILocation(line: 68, column: 14, scope: !8408)
!8412 = !DILocation(line: 69, column: 12, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8408, file: !7976, line: 69, column: 11)
!8414 = !DILocation(line: 69, column: 11, scope: !8408)
!8415 = !DILocation(line: 70, column: 2, scope: !8413)
!8416 = !DILocation(line: 70, column: 7, scope: !8413)
!8417 = !DILocation(line: 70, column: 16, scope: !8413)
!8418 = !DILocation(line: 70, column: 22, scope: !8413)
!8419 = !DILocation(line: 70, column: 41, scope: !8413)
!8420 = !DILocation(line: 71, column: 5, scope: !8408)
!8421 = !DILocation(line: 73, column: 33, scope: !8398)
!8422 = !DILocation(line: 73, column: 40, scope: !8398)
!8423 = !DILocation(line: 73, column: 29, scope: !8398)
!8424 = !DILocation(line: 72, column: 3, scope: !8398)
!8425 = !DILocation(line: 72, column: 8, scope: !8398)
!8426 = !DILocation(line: 72, column: 13, scope: !8398)
!8427 = !DILocation(line: 72, column: 19, scope: !8398)
!8428 = !DILocation(line: 73, column: 5, scope: !8398)
!8429 = !DILocation(line: 74, column: 1, scope: !8398)
!8430 = distinct !DISubprogram(name: "find_min_max_seqno", scope: !3, file: !3, line: 7290, type: !8431, scopeLine: 7291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8431 = !DISubroutineType(types: !8432)
!8432 = !{null, !2349, !2219, !2219}
!8433 = !DILocalVariable(name: "fences", arg: 1, scope: !8430, file: !3, line: 7290, type: !2349)
!8434 = !DILocation(line: 7290, column: 29, scope: !8430)
!8435 = !DILocalVariable(name: "min_seqno", arg: 2, scope: !8430, file: !3, line: 7290, type: !2219)
!8436 = !DILocation(line: 7290, column: 42, scope: !8430)
!8437 = !DILocalVariable(name: "max_seqno", arg: 3, scope: !8430, file: !3, line: 7290, type: !2219)
!8438 = !DILocation(line: 7290, column: 58, scope: !8430)
!8439 = !DILocation(line: 7292, column: 29, scope: !8430)
!8440 = !DILocation(line: 7292, column: 17, scope: !8430)
!8441 = !DILocation(line: 7292, column: 27, scope: !8430)
!8442 = !DILocation(line: 7292, column: 4, scope: !8430)
!8443 = !DILocation(line: 7292, column: 14, scope: !8430)
!8444 = !DILocation(line: 7295, column: 3, scope: !8430)
!8445 = !DILocation(line: 7295, column: 20, scope: !8430)
!8446 = !DILocation(line: 7295, column: 18, scope: !8430)
!8447 = !DILocalVariable(name: "seqno", scope: !8448, file: !3, line: 7297, type: !849)
!8448 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 7296, column: 5)
!8449 = !DILocation(line: 7297, column: 11, scope: !8448)
!8450 = !DILocation(line: 7297, column: 19, scope: !8448)
!8451 = !DILocation(line: 7299, column: 12, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 7299, column: 11)
!8453 = !DILocation(line: 7299, column: 11, scope: !8452)
!8454 = !DILocation(line: 7299, column: 24, scope: !8452)
!8455 = !DILocation(line: 7299, column: 22, scope: !8452)
!8456 = !DILocation(line: 7299, column: 11, scope: !8448)
!8457 = !DILocation(line: 7300, column: 22, scope: !8452)
!8458 = !DILocation(line: 7300, column: 10, scope: !8452)
!8459 = !DILocation(line: 7300, column: 20, scope: !8452)
!8460 = !DILocation(line: 7300, column: 9, scope: !8452)
!8461 = !DILocation(line: 7301, column: 17, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 7301, column: 16)
!8463 = !DILocation(line: 7301, column: 16, scope: !8462)
!8464 = !DILocation(line: 7301, column: 29, scope: !8462)
!8465 = !DILocation(line: 7301, column: 27, scope: !8462)
!8466 = !DILocation(line: 7301, column: 16, scope: !8452)
!8467 = !DILocation(line: 7302, column: 22, scope: !8462)
!8468 = !DILocation(line: 7302, column: 10, scope: !8462)
!8469 = !DILocation(line: 7302, column: 20, scope: !8462)
!8470 = !DILocation(line: 7302, column: 9, scope: !8462)
!8471 = distinct !{!8471, !8444, !8472}
!8472 = !DILocation(line: 7303, column: 5, scope: !8430)
!8473 = !DILocation(line: 7304, column: 1, scope: !8430)
!8474 = distinct !DISubprogram(name: "schedule_on_fences", scope: !3, file: !3, line: 7227, type: !8475, scopeLine: 7229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8475 = !DISubroutineType(types: !8476)
!8476 = !{null, !2349, !849, !8477}
!8477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8060, size: 64)
!8478 = !DILocalVariable(name: "fences", arg: 1, scope: !8474, file: !3, line: 7227, type: !2349)
!8479 = !DILocation(line: 7227, column: 29, scope: !8474)
!8480 = !DILocalVariable(name: "max_seqno", arg: 2, scope: !8474, file: !3, line: 7227, type: !849)
!8481 = !DILocation(line: 7227, column: 41, scope: !8474)
!8482 = !DILocalVariable(name: "scheduled_insns_tailpp", arg: 3, scope: !8474, file: !3, line: 7228, type: !8477)
!8483 = !DILocation(line: 7228, column: 31, scope: !8474)
!8484 = !DILocalVariable(name: "old_fences", scope: !8474, file: !3, line: 7230, type: !2349)
!8485 = !DILocation(line: 7230, column: 11, scope: !8474)
!8486 = !DILocation(line: 7230, column: 24, scope: !8474)
!8487 = !DILocation(line: 7232, column: 7, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 7232, column: 7)
!8489 = !DILocation(line: 7232, column: 21, scope: !8488)
!8490 = !DILocation(line: 7232, column: 7, scope: !8474)
!8491 = !DILocation(line: 7234, column: 7, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 7233, column: 5)
!8493 = !DILocation(line: 7234, column: 7, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 7234, column: 7)
!8495 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 7234, column: 7)
!8496 = !DILocation(line: 7234, column: 7, scope: !8495)
!8497 = !DILocalVariable(name: "__j", scope: !8498, file: !3, line: 7234, type: !849)
!8498 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 7234, column: 7)
!8499 = !DILocation(line: 7234, column: 7, scope: !8498)
!8500 = !DILocalVariable(name: "__s", scope: !8498, file: !3, line: 7234, type: !817)
!8501 = !DILocation(line: 7235, column: 19, scope: !8492)
!8502 = !DILocation(line: 7235, column: 7, scope: !8492)
!8503 = !DILocation(line: 7236, column: 7, scope: !8492)
!8504 = !DILocation(line: 7236, column: 7, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 7236, column: 7)
!8506 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 7236, column: 7)
!8507 = !DILocation(line: 7236, column: 7, scope: !8506)
!8508 = !DILocalVariable(name: "__j", scope: !8509, file: !3, line: 7236, type: !849)
!8509 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 7236, column: 7)
!8510 = !DILocation(line: 7236, column: 7, scope: !8509)
!8511 = !DILocalVariable(name: "__s", scope: !8509, file: !3, line: 7236, type: !817)
!8512 = !DILocation(line: 7237, column: 5, scope: !8492)
!8513 = !DILocation(line: 7239, column: 41, scope: !8474)
!8514 = !DILocation(line: 7240, column: 3, scope: !8474)
!8515 = !DILocation(line: 7240, column: 10, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 7240, column: 3)
!8517 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 7240, column: 3)
!8518 = !DILocation(line: 7240, column: 3, scope: !8517)
!8519 = !DILocalVariable(name: "fence", scope: !8520, file: !3, line: 7242, type: !2402)
!8520 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 7241, column: 5)
!8521 = !DILocation(line: 7242, column: 15, scope: !8520)
!8522 = !DILocalVariable(name: "seqno", scope: !8520, file: !3, line: 7243, type: !849)
!8523 = !DILocation(line: 7243, column: 11, scope: !8520)
!8524 = !DILocalVariable(name: "fences2", scope: !8520, file: !3, line: 7244, type: !2349)
!8525 = !DILocation(line: 7244, column: 15, scope: !8520)
!8526 = !DILocalVariable(name: "first_p", scope: !8520, file: !3, line: 7245, type: !1057)
!8527 = !DILocation(line: 7245, column: 12, scope: !8520)
!8528 = !DILocation(line: 7253, column: 22, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 7253, column: 7)
!8530 = !DILocation(line: 7253, column: 20, scope: !8529)
!8531 = !DILocation(line: 7253, column: 12, scope: !8529)
!8532 = !DILocation(line: 7253, column: 34, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 7253, column: 7)
!8534 = !DILocation(line: 7253, column: 7, scope: !8529)
!8535 = !DILocalVariable(name: "f", scope: !8536, file: !3, line: 7255, type: !2402)
!8536 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 7254, column: 9)
!8537 = !DILocation(line: 7255, column: 19, scope: !8536)
!8538 = !DILocation(line: 7255, column: 23, scope: !8536)
!8539 = !DILocation(line: 7257, column: 16, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 7257, column: 15)
!8541 = !DILocation(line: 7257, column: 15, scope: !8536)
!8542 = !DILocalVariable(name: "i", scope: !8543, file: !3, line: 7259, type: !849)
!8543 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 7258, column: 13)
!8544 = !DILocation(line: 7259, column: 19, scope: !8543)
!8545 = !DILocation(line: 7259, column: 23, scope: !8543)
!8546 = !DILocation(line: 7261, column: 19, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 7261, column: 19)
!8548 = !DILocation(line: 7261, column: 27, scope: !8547)
!8549 = !DILocation(line: 7261, column: 30, scope: !8547)
!8550 = !DILocation(line: 7261, column: 34, scope: !8547)
!8551 = !DILocation(line: 7261, column: 32, scope: !8547)
!8552 = !DILocation(line: 7261, column: 19, scope: !8543)
!8553 = !DILocation(line: 7263, column: 27, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 7262, column: 17)
!8555 = !DILocation(line: 7263, column: 25, scope: !8554)
!8556 = !DILocation(line: 7264, column: 27, scope: !8554)
!8557 = !DILocation(line: 7264, column: 25, scope: !8554)
!8558 = !DILocation(line: 7265, column: 27, scope: !8554)
!8559 = !DILocation(line: 7266, column: 17, scope: !8554)
!8560 = !DILocation(line: 7270, column: 13, scope: !8543)
!8561 = !DILocation(line: 7271, column: 9, scope: !8536)
!8562 = !DILocation(line: 7253, column: 53, scope: !8533)
!8563 = !DILocation(line: 7253, column: 51, scope: !8533)
!8564 = !DILocation(line: 7253, column: 7, scope: !8533)
!8565 = distinct !{!8565, !8534, !8566}
!8566 = !DILocation(line: 7271, column: 9, scope: !8529)
!8567 = !DILocation(line: 7273, column: 7, scope: !8520)
!8568 = !DILocation(line: 7276, column: 16, scope: !8520)
!8569 = !DILocation(line: 7276, column: 26, scope: !8520)
!8570 = !DILocation(line: 7276, column: 13, scope: !8520)
!8571 = !DILocation(line: 7277, column: 19, scope: !8520)
!8572 = !DILocation(line: 7277, column: 26, scope: !8520)
!8573 = !DILocation(line: 7277, column: 33, scope: !8520)
!8574 = !DILocation(line: 7277, column: 7, scope: !8520)
!8575 = !DILocation(line: 7278, column: 7, scope: !8520)
!8576 = !DILocation(line: 7278, column: 33, scope: !8520)
!8577 = !DILocation(line: 7279, column: 5, scope: !8520)
!8578 = !DILocation(line: 7240, column: 27, scope: !8516)
!8579 = !DILocation(line: 7240, column: 25, scope: !8516)
!8580 = !DILocation(line: 7240, column: 3, scope: !8516)
!8581 = distinct !{!8581, !8518, !8582}
!8582 = !DILocation(line: 7279, column: 5, scope: !8517)
!8583 = !DILocation(line: 7284, column: 3, scope: !8474)
!8584 = !DILocation(line: 7285, column: 3, scope: !8474)
!8585 = !DILocation(line: 7286, column: 1, scope: !8474)
!8586 = distinct !DISubprogram(name: "calculate_new_fences", scope: !3, file: !3, line: 7308, type: !8587, scopeLine: 7309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8587 = !DISubroutineType(types: !8588)
!8588 = !{!2349, !2349, !849}
!8589 = !DILocalVariable(name: "fences", arg: 1, scope: !8586, file: !3, line: 7308, type: !2349)
!8590 = !DILocation(line: 7308, column: 31, scope: !8586)
!8591 = !DILocalVariable(name: "orig_max_seqno", arg: 2, scope: !8586, file: !3, line: 7308, type: !849)
!8592 = !DILocation(line: 7308, column: 43, scope: !8586)
!8593 = !DILocalVariable(name: "old_fences", scope: !8586, file: !3, line: 7310, type: !2349)
!8594 = !DILocation(line: 7310, column: 11, scope: !8586)
!8595 = !DILocation(line: 7310, column: 24, scope: !8586)
!8596 = !DILocalVariable(name: "_new_fences", scope: !8586, file: !3, line: 7311, type: !3325)
!8597 = !DILocation(line: 7311, column: 25, scope: !8586)
!8598 = !DILocalVariable(name: "new_fences", scope: !8586, file: !3, line: 7311, type: !3333)
!8599 = !DILocation(line: 7311, column: 39, scope: !8586)
!8600 = !DILocation(line: 7313, column: 20, scope: !8586)
!8601 = !DILocation(line: 7313, column: 3, scope: !8586)
!8602 = !DILocation(line: 7314, column: 3, scope: !8586)
!8603 = !DILocation(line: 7314, column: 10, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 7314, column: 3)
!8605 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 7314, column: 3)
!8606 = !DILocation(line: 7314, column: 3, scope: !8605)
!8607 = !DILocalVariable(name: "fence", scope: !8608, file: !3, line: 7316, type: !2402)
!8608 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 7315, column: 5)
!8609 = !DILocation(line: 7316, column: 15, scope: !8608)
!8610 = !DILocation(line: 7316, column: 23, scope: !8608)
!8611 = !DILocalVariable(name: "insn", scope: !8608, file: !3, line: 7317, type: !2132)
!8612 = !DILocation(line: 7317, column: 14, scope: !8608)
!8613 = !DILocation(line: 7319, column: 12, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 7319, column: 11)
!8615 = !DILocation(line: 7319, column: 11, scope: !8608)
!8616 = !DILocation(line: 7322, column: 16, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 7322, column: 15)
!8618 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 7320, column: 9)
!8619 = !DILocation(line: 7322, column: 15, scope: !8618)
!8620 = !DILocalVariable(name: "seqno", scope: !8621, file: !3, line: 7325, type: !849)
!8621 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 7323, column: 13)
!8622 = !DILocation(line: 7325, column: 19, scope: !8621)
!8623 = !DILocation(line: 7327, column: 22, scope: !8621)
!8624 = !DILocation(line: 7327, column: 20, scope: !8621)
!8625 = !DILocation(line: 7328, column: 23, scope: !8621)
!8626 = !DILocation(line: 7328, column: 21, scope: !8621)
!8627 = !DILocation(line: 7329, column: 15, scope: !8621)
!8628 = !DILocation(line: 7331, column: 19, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 7331, column: 19)
!8630 = !DILocation(line: 7331, column: 33, scope: !8629)
!8631 = !DILocation(line: 7331, column: 19, scope: !8621)
!8632 = !DILocation(line: 7332, column: 17, scope: !8629)
!8633 = !DILocation(line: 7332, column: 17, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 7332, column: 17)
!8635 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 7332, column: 17)
!8636 = !DILocation(line: 7332, column: 17, scope: !8635)
!8637 = !DILocalVariable(name: "__j", scope: !8638, file: !3, line: 7332, type: !849)
!8638 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 7332, column: 17)
!8639 = !DILocation(line: 7332, column: 17, scope: !8638)
!8640 = !DILocalVariable(name: "__s", scope: !8638, file: !3, line: 7332, type: !817)
!8641 = !DILocation(line: 7335, column: 37, scope: !8621)
!8642 = !DILocation(line: 7335, column: 45, scope: !8621)
!8643 = !DILocation(line: 7335, column: 15, scope: !8621)
!8644 = !DILocation(line: 7336, column: 13, scope: !8621)
!8645 = !DILocation(line: 7337, column: 9, scope: !8618)
!8646 = !DILocation(line: 7339, column: 34, scope: !8614)
!8647 = !DILocation(line: 7339, column: 42, scope: !8614)
!8648 = !DILocation(line: 7339, column: 54, scope: !8614)
!8649 = !DILocation(line: 7339, column: 9, scope: !8614)
!8650 = !DILocation(line: 7340, column: 5, scope: !8608)
!8651 = !DILocation(line: 7314, column: 27, scope: !8604)
!8652 = !DILocation(line: 7314, column: 25, scope: !8604)
!8653 = !DILocation(line: 7314, column: 3, scope: !8604)
!8654 = distinct !{!8654, !8606, !8655}
!8655 = !DILocation(line: 7340, column: 5, scope: !8605)
!8656 = !DILocation(line: 7342, column: 3, scope: !8586)
!8657 = !DILocation(line: 7343, column: 10, scope: !8586)
!8658 = !DILocation(line: 7343, column: 3, scope: !8586)
!8659 = distinct !DISubprogram(name: "update_seqnos_and_stage", scope: !3, file: !3, line: 7350, type: !8660, scopeLine: 7353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8660 = !DISubroutineType(types: !8661)
!8661 = !{!849, !849, !849, !849, !8060}
!8662 = !DILocalVariable(name: "min_seqno", arg: 1, scope: !8659, file: !3, line: 7350, type: !849)
!8663 = !DILocation(line: 7350, column: 30, scope: !8659)
!8664 = !DILocalVariable(name: "max_seqno", arg: 2, scope: !8659, file: !3, line: 7350, type: !849)
!8665 = !DILocation(line: 7350, column: 45, scope: !8659)
!8666 = !DILocalVariable(name: "highest_seqno_in_use", arg: 3, scope: !8659, file: !3, line: 7351, type: !849)
!8667 = !DILocation(line: 7351, column: 30, scope: !8659)
!8668 = !DILocalVariable(name: "pscheduled_insns", arg: 4, scope: !8659, file: !3, line: 7352, type: !8060)
!8669 = !DILocation(line: 7352, column: 35, scope: !8659)
!8670 = !DILocalVariable(name: "new_hs", scope: !8659, file: !3, line: 7354, type: !849)
!8671 = !DILocation(line: 7354, column: 7, scope: !8659)
!8672 = !DILocalVariable(name: "ii", scope: !8659, file: !3, line: 7355, type: !8673)
!8673 = !DIDerivedType(tag: DW_TAG_typedef, name: "ilist_iterator", file: !398, line: 527, baseType: !8674)
!8674 = !DIDerivedType(tag: DW_TAG_typedef, name: "_xlist_iterator", file: !398, line: 514, baseType: !3061)
!8675 = !DILocation(line: 7355, column: 18, scope: !8659)
!8676 = !DILocalVariable(name: "insn", scope: !8659, file: !3, line: 7356, type: !2132)
!8677 = !DILocation(line: 7356, column: 10, scope: !8659)
!8678 = !DILocation(line: 7360, column: 8, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 7360, column: 7)
!8680 = !DILocation(line: 7360, column: 7, scope: !8679)
!8681 = !DILocation(line: 7360, column: 7, scope: !8659)
!8682 = !DILocation(line: 7362, column: 17, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 7361, column: 5)
!8684 = !DILocation(line: 7363, column: 19, scope: !8683)
!8685 = !DILocation(line: 7363, column: 17, scope: !8683)
!8686 = !DILocation(line: 7363, column: 42, scope: !8683)
!8687 = !DILocation(line: 7363, column: 40, scope: !8683)
!8688 = !DILocation(line: 7363, column: 54, scope: !8683)
!8689 = !DILocation(line: 7363, column: 52, scope: !8683)
!8690 = !DILocation(line: 7363, column: 64, scope: !8683)
!8691 = !DILocation(line: 7362, column: 14, scope: !8683)
!8692 = !DILocation(line: 7364, column: 7, scope: !8683)
!8693 = !DILocation(line: 7365, column: 5, scope: !8683)
!8694 = !DILocation(line: 7367, column: 14, scope: !8679)
!8695 = !DILocation(line: 7367, column: 12, scope: !8679)
!8696 = !DILocation(line: 7369, column: 3, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 7369, column: 3)
!8698 = !DILocation(line: 7369, column: 3, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 7369, column: 3)
!8700 = !DILocation(line: 7371, column: 7, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 7370, column: 5)
!8702 = !DILocation(line: 7372, column: 28, scope: !8701)
!8703 = !DILocation(line: 7372, column: 51, scope: !8701)
!8704 = !DILocation(line: 7372, column: 49, scope: !8701)
!8705 = !DILocation(line: 7372, column: 63, scope: !8701)
!8706 = !DILocation(line: 7372, column: 61, scope: !8701)
!8707 = !DILocation(line: 7372, column: 73, scope: !8701)
!8708 = !DILocation(line: 7372, column: 7, scope: !8701)
!8709 = !DILocation(line: 7372, column: 25, scope: !8701)
!8710 = !DILocation(line: 7373, column: 7, scope: !8701)
!8711 = !DILocation(line: 7378, column: 13, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 7378, column: 11)
!8713 = !DILocation(line: 7378, column: 11, scope: !8701)
!8714 = !DILocation(line: 7379, column: 39, scope: !8712)
!8715 = !DILocation(line: 7379, column: 9, scope: !8712)
!8716 = !DILocation(line: 7380, column: 5, scope: !8701)
!8717 = distinct !{!8717, !8696, !8718}
!8718 = !DILocation(line: 7380, column: 5, scope: !8697)
!8719 = !DILocation(line: 7382, column: 3, scope: !8659)
!8720 = !DILocation(line: 7383, column: 15, scope: !8659)
!8721 = !DILocation(line: 7385, column: 10, scope: !8659)
!8722 = !DILocation(line: 7385, column: 3, scope: !8659)
!8723 = distinct !DISubprogram(name: "fill_insns", scope: !3, file: !3, line: 5483, type: !8724, scopeLine: 5484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8724 = !DISubroutineType(types: !8725)
!8725 = !{null, !2402, !849, !8477}
!8726 = !DILocalVariable(name: "fence", arg: 1, scope: !8723, file: !3, line: 5483, type: !2402)
!8727 = !DILocation(line: 5483, column: 21, scope: !8723)
!8728 = !DILocalVariable(name: "seqno", arg: 2, scope: !8723, file: !3, line: 5483, type: !849)
!8729 = !DILocation(line: 5483, column: 32, scope: !8723)
!8730 = !DILocalVariable(name: "scheduled_insns_tailpp", arg: 3, scope: !8723, file: !3, line: 5483, type: !8477)
!8731 = !DILocation(line: 5483, column: 49, scope: !8723)
!8732 = !DILocalVariable(name: "bnds", scope: !8723, file: !3, line: 5485, type: !2401)
!8733 = !DILocation(line: 5485, column: 11, scope: !8723)
!8734 = !DILocalVariable(name: "bnds_tailp", scope: !8723, file: !3, line: 5485, type: !8735)
!8735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!8736 = !DILocation(line: 5485, column: 25, scope: !8723)
!8737 = !DILocalVariable(name: "av_vliw", scope: !8723, file: !3, line: 5486, type: !2166)
!8738 = !DILocation(line: 5486, column: 12, scope: !8723)
!8739 = !DILocalVariable(name: "insn", scope: !8723, file: !3, line: 5487, type: !2132)
!8740 = !DILocation(line: 5487, column: 10, scope: !8723)
!8741 = !DILocation(line: 5487, column: 17, scope: !8723)
!8742 = !DILocation(line: 5489, column: 7, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 5489, column: 7)
!8744 = !DILocation(line: 5489, column: 21, scope: !8743)
!8745 = !DILocation(line: 5489, column: 7, scope: !8723)
!8746 = !DILocation(line: 5490, column: 5, scope: !8743)
!8747 = !DILocation(line: 5490, column: 5, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8749, file: !3, line: 5490, column: 5)
!8749 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 5490, column: 5)
!8750 = !DILocation(line: 5490, column: 5, scope: !8749)
!8751 = !DILocalVariable(name: "__j", scope: !8752, file: !3, line: 5490, type: !849)
!8752 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 5490, column: 5)
!8753 = !DILocation(line: 5490, column: 5, scope: !8752)
!8754 = !DILocalVariable(name: "__s", scope: !8752, file: !3, line: 5490, type: !817)
!8755 = !DILocation(line: 5493, column: 21, scope: !8723)
!8756 = !DILocation(line: 5493, column: 33, scope: !8723)
!8757 = !DILocation(line: 5493, column: 3, scope: !8723)
!8758 = !DILocation(line: 5494, column: 17, scope: !8723)
!8759 = !DILocation(line: 5494, column: 14, scope: !8723)
!8760 = !DILocation(line: 5495, column: 23, scope: !8723)
!8761 = !DILocation(line: 5495, column: 3, scope: !8723)
!8762 = !DILocation(line: 5496, column: 20, scope: !8723)
!8763 = !DILocation(line: 5496, column: 18, scope: !8723)
!8764 = !DILocation(line: 5497, column: 15, scope: !8723)
!8765 = !DILocation(line: 5497, column: 13, scope: !8723)
!8766 = !DILocation(line: 5500, column: 3, scope: !8723)
!8767 = !DILocalVariable(name: "bnds_tailp1", scope: !8768, file: !3, line: 5502, type: !8735)
!8768 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 5501, column: 5)
!8769 = !DILocation(line: 5502, column: 16, scope: !8768)
!8770 = !DILocalVariable(name: "bndsp", scope: !8768, file: !3, line: 5502, type: !8735)
!8771 = !DILocation(line: 5502, column: 30, scope: !8768)
!8772 = !DILocalVariable(name: "expr_vliw", scope: !8768, file: !3, line: 5503, type: !2055)
!8773 = !DILocation(line: 5503, column: 14, scope: !8768)
!8774 = !DILocalVariable(name: "need_stall", scope: !8768, file: !3, line: 5504, type: !849)
!8775 = !DILocation(line: 5504, column: 11, scope: !8768)
!8776 = !DILocalVariable(name: "was_stall", scope: !8768, file: !3, line: 5505, type: !849)
!8777 = !DILocation(line: 5505, column: 11, scope: !8768)
!8778 = !DILocalVariable(name: "scheduled_insns", scope: !8768, file: !3, line: 5505, type: !849)
!8779 = !DILocation(line: 5505, column: 26, scope: !8768)
!8780 = !DILocalVariable(name: "stall_iterations", scope: !8768, file: !3, line: 5505, type: !849)
!8781 = !DILocation(line: 5505, column: 47, scope: !8768)
!8782 = !DILocalVariable(name: "max_insns", scope: !8768, file: !3, line: 5506, type: !849)
!8783 = !DILocation(line: 5506, column: 11, scope: !8768)
!8784 = !DILocation(line: 5506, column: 23, scope: !8768)
!8785 = !DILocation(line: 5506, column: 38, scope: !8768)
!8786 = !DILocation(line: 5506, column: 55, scope: !8768)
!8787 = !DILocation(line: 5506, column: 53, scope: !8768)
!8788 = !DILocalVariable(name: "max_stall", scope: !8768, file: !3, line: 5507, type: !849)
!8789 = !DILocation(line: 5507, column: 11, scope: !8768)
!8790 = !DILocation(line: 5507, column: 23, scope: !8768)
!8791 = !DILocalVariable(name: "last_insn_was_debug", scope: !8768, file: !3, line: 5508, type: !1057)
!8792 = !DILocation(line: 5508, column: 12, scope: !8768)
!8793 = !DILocalVariable(name: "was_debug_bb_end_p", scope: !8768, file: !3, line: 5509, type: !1057)
!8794 = !DILocation(line: 5509, column: 12, scope: !8768)
!8795 = !DILocation(line: 5511, column: 37, scope: !8768)
!8796 = !DILocation(line: 5511, column: 44, scope: !8768)
!8797 = !DILocation(line: 5511, column: 7, scope: !8768)
!8798 = !DILocation(line: 5512, column: 43, scope: !8768)
!8799 = !DILocation(line: 5512, column: 7, scope: !8768)
!8800 = !DILocation(line: 5513, column: 31, scope: !8768)
!8801 = !DILocation(line: 5513, column: 7, scope: !8768)
!8802 = !DILocation(line: 5516, column: 11, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 5516, column: 11)
!8804 = !DILocation(line: 5516, column: 19, scope: !8803)
!8805 = !DILocation(line: 5516, column: 11, scope: !8768)
!8806 = !DILocation(line: 5517, column: 9, scope: !8803)
!8807 = !DILocation(line: 5521, column: 7, scope: !8768)
!8808 = !DILocation(line: 5523, column: 49, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 5522, column: 9)
!8810 = !DILocation(line: 5523, column: 55, scope: !8809)
!8811 = !DILocation(line: 5523, column: 23, scope: !8809)
!8812 = !DILocation(line: 5523, column: 21, scope: !8809)
!8813 = !DILocation(line: 5524, column: 16, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 5524, column: 15)
!8815 = !DILocation(line: 5524, column: 26, scope: !8814)
!8816 = !DILocation(line: 5524, column: 29, scope: !8814)
!8817 = !DILocation(line: 5524, column: 15, scope: !8809)
!8818 = !DILocation(line: 5530, column: 15, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 5525, column: 13)
!8820 = !DILocation(line: 5531, column: 24, scope: !8819)
!8821 = !DILocation(line: 5534, column: 12, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 5534, column: 12)
!8823 = !DILocation(line: 5534, column: 23, scope: !8822)
!8824 = !DILocation(line: 5534, column: 12, scope: !8819)
!8825 = !DILocation(line: 5535, column: 21, scope: !8822)
!8826 = !DILocation(line: 5535, column: 28, scope: !8822)
!8827 = !DILocation(line: 5535, column: 3, scope: !8822)
!8828 = !DILocation(line: 5538, column: 23, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 5537, column: 3)
!8830 = !DILocation(line: 5538, column: 5, scope: !8829)
!8831 = !DILocation(line: 5539, column: 5, scope: !8829)
!8832 = !DILocation(line: 5541, column: 13, scope: !8819)
!8833 = !DILocation(line: 5542, column: 9, scope: !8809)
!8834 = !DILocation(line: 5543, column: 16, scope: !8768)
!8835 = !DILocation(line: 5543, column: 26, scope: !8768)
!8836 = !DILocation(line: 5543, column: 29, scope: !8768)
!8837 = !DILocation(line: 0, scope: !8768)
!8838 = distinct !{!8838, !8807, !8839}
!8839 = !DILocation(line: 5543, column: 39, scope: !8768)
!8840 = !DILocation(line: 5546, column: 12, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 5546, column: 11)
!8842 = !DILocation(line: 5546, column: 11, scope: !8768)
!8843 = !DILocation(line: 5548, column: 4, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 5547, column: 9)
!8845 = !DILocation(line: 5549, column: 11, scope: !8844)
!8846 = !DILocation(line: 5552, column: 13, scope: !8768)
!8847 = !DILocation(line: 5553, column: 21, scope: !8768)
!8848 = !DILocation(line: 5553, column: 19, scope: !8768)
!8849 = !DILocation(line: 5555, column: 7, scope: !8768)
!8850 = !DILocalVariable(name: "bnd", scope: !8851, file: !3, line: 5559, type: !8852)
!8851 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 5558, column: 9)
!8852 = !DIDerivedType(tag: DW_TAG_typedef, name: "bnd_t", file: !398, line: 241, baseType: !8853)
!8853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!8854 = !DILocation(line: 5559, column: 10, scope: !8851)
!8855 = !DILocation(line: 5559, column: 16, scope: !8851)
!8856 = !DILocation(line: 5561, column: 25, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 5561, column: 8)
!8858 = !DILocation(line: 5561, column: 40, scope: !8857)
!8859 = !DILocation(line: 5561, column: 9, scope: !8857)
!8860 = !DILocation(line: 5561, column: 8, scope: !8851)
!8861 = !DILocation(line: 5563, column: 17, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8857, file: !3, line: 5562, column: 6)
!8863 = !DILocation(line: 5563, column: 14, scope: !8862)
!8864 = !DILocation(line: 5564, column: 8, scope: !8862)
!8865 = !DILocation(line: 5567, column: 45, scope: !8851)
!8866 = !DILocation(line: 5567, column: 50, scope: !8851)
!8867 = !DILocation(line: 5567, column: 61, scope: !8851)
!8868 = !DILocation(line: 5567, column: 18, scope: !8851)
!8869 = !DILocation(line: 5567, column: 16, scope: !8851)
!8870 = !DILocation(line: 5568, column: 26, scope: !8851)
!8871 = !DILocation(line: 5568, column: 24, scope: !8851)
!8872 = !DILocation(line: 5569, column: 8, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 5569, column: 8)
!8874 = !DILocation(line: 5569, column: 8, scope: !8851)
!8875 = !DILocation(line: 5570, column: 28, scope: !8873)
!8876 = !DILocation(line: 5570, column: 36, scope: !8873)
!8877 = !DILocation(line: 5570, column: 33, scope: !8873)
!8878 = !DILocation(line: 5570, column: 49, scope: !8873)
!8879 = !DILocation(line: 5570, column: 66, scope: !8873)
!8880 = !DILocation(line: 5570, column: 52, scope: !8873)
!8881 = !DILocation(line: 0, scope: !8873)
!8882 = !DILocation(line: 5570, column: 27, scope: !8873)
!8883 = !DILocation(line: 5570, column: 25, scope: !8873)
!8884 = !DILocation(line: 5570, column: 6, scope: !8873)
!8885 = !DILocation(line: 5571, column: 34, scope: !8851)
!8886 = !DILocation(line: 5571, column: 41, scope: !8851)
!8887 = !DILocation(line: 5571, column: 47, scope: !8851)
!8888 = !DILocation(line: 5571, column: 11, scope: !8851)
!8889 = !DILocation(line: 5572, column: 43, scope: !8851)
!8890 = !DILocation(line: 5572, column: 50, scope: !8851)
!8891 = !DILocation(line: 5572, column: 55, scope: !8851)
!8892 = !DILocation(line: 5572, column: 61, scope: !8851)
!8893 = !DILocation(line: 5572, column: 68, scope: !8851)
!8894 = !DILocation(line: 5572, column: 24, scope: !8851)
!8895 = !DILocation(line: 5572, column: 22, scope: !8851)
!8896 = !DILocation(line: 5575, column: 4, scope: !8851)
!8897 = !DILocation(line: 5576, column: 31, scope: !8851)
!8898 = !DILocation(line: 5576, column: 5, scope: !8851)
!8899 = !DILocation(line: 5576, column: 28, scope: !8851)
!8900 = !DILocation(line: 5577, column: 9, scope: !8851)
!8901 = !DILocation(line: 5578, column: 15, scope: !8768)
!8902 = !DILocation(line: 5578, column: 14, scope: !8768)
!8903 = !DILocation(line: 5578, column: 25, scope: !8768)
!8904 = !DILocation(line: 5578, column: 24, scope: !8768)
!8905 = !DILocation(line: 5578, column: 21, scope: !8768)
!8906 = distinct !{!8906, !8849, !8907}
!8907 = !DILocation(line: 5578, column: 36, scope: !8768)
!8908 = !DILocation(line: 5580, column: 7, scope: !8768)
!8909 = !DILocation(line: 5581, column: 12, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 5581, column: 11)
!8911 = !DILocation(line: 5581, column: 11, scope: !8768)
!8912 = !DILocation(line: 5582, column: 17, scope: !8910)
!8913 = !DILocation(line: 5582, column: 2, scope: !8910)
!8914 = !DILocation(line: 5588, column: 12, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 5588, column: 11)
!8916 = !DILocation(line: 5589, column: 11, scope: !8915)
!8917 = !DILocation(line: 5588, column: 34, scope: !8915)
!8918 = !DILocation(line: 5588, column: 69, scope: !8915)
!8919 = !DILocation(line: 5588, column: 55, scope: !8915)
!8920 = !DILocation(line: 5589, column: 15, scope: !8915)
!8921 = !DILocation(line: 5590, column: 15, scope: !8915)
!8922 = !DILocation(line: 5590, column: 19, scope: !8915)
!8923 = !DILocation(line: 5590, column: 32, scope: !8915)
!8924 = !DILocation(line: 5590, column: 29, scope: !8915)
!8925 = !DILocation(line: 5591, column: 19, scope: !8915)
!8926 = !DILocation(line: 5591, column: 22, scope: !8915)
!8927 = !DILocation(line: 5591, column: 41, scope: !8915)
!8928 = !DILocation(line: 5591, column: 38, scope: !8915)
!8929 = !DILocation(line: 5588, column: 11, scope: !8768)
!8930 = !DILocation(line: 5592, column: 9, scope: !8915)
!8931 = !DILocation(line: 5593, column: 5, scope: !8768)
!8932 = !DILocation(line: 5594, column: 10, scope: !8723)
!8933 = distinct !{!8933, !8766, !8934}
!8934 = !DILocation(line: 5594, column: 14, scope: !8723)
!8935 = !DILocation(line: 5596, column: 3, scope: !8723)
!8936 = !DILocation(line: 5599, column: 3, scope: !8723)
!8937 = !DILocation(line: 5599, column: 10, scope: !8723)
!8938 = !DILocalVariable(name: "ptr", scope: !8939, file: !3, line: 5601, type: !2163)
!8939 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 5600, column: 5)
!8940 = !DILocation(line: 5601, column: 15, scope: !8939)
!8941 = !DILocation(line: 5601, column: 21, scope: !8939)
!8942 = !DILocation(line: 5603, column: 11, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 5603, column: 11)
!8944 = !DILocation(line: 5603, column: 11, scope: !8939)
!8945 = !DILocation(line: 5605, column: 11, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8943, file: !3, line: 5604, column: 2)
!8947 = !DILocation(line: 5605, column: 9, scope: !8946)
!8948 = !DILocation(line: 5607, column: 9, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 5607, column: 8)
!8950 = !DILocation(line: 5607, column: 8, scope: !8946)
!8951 = !DILocation(line: 5608, column: 6, scope: !8949)
!8952 = !DILocation(line: 5609, column: 2, scope: !8946)
!8953 = !DILocation(line: 5611, column: 7, scope: !8939)
!8954 = distinct !{!8954, !8936, !8955}
!8955 = !DILocation(line: 5612, column: 5, scope: !8723)
!8956 = !DILocation(line: 5615, column: 25, scope: !8723)
!8957 = !DILocation(line: 5615, column: 3, scope: !8723)
!8958 = !DILocation(line: 5616, column: 1, scope: !8723)
!8959 = distinct !DISubprogram(name: "vinsn_vec_clear", scope: !3, file: !3, line: 3641, type: !8960, scopeLine: 3642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8960 = !DISubroutineType(types: !8961)
!8961 = !{null, !7042}
!8962 = !DILocalVariable(name: "vinsn_vec", arg: 1, scope: !8959, file: !3, line: 3641, type: !7042)
!8963 = !DILocation(line: 3641, column: 31, scope: !8959)
!8964 = !DILocalVariable(name: "len", scope: !8959, file: !3, line: 3643, type: !7)
!8965 = !DILocation(line: 3643, column: 12, scope: !8959)
!8966 = !DILocation(line: 3643, column: 18, scope: !8959)
!8967 = !DILocation(line: 3644, column: 7, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 3644, column: 7)
!8969 = !DILocation(line: 3644, column: 11, scope: !8968)
!8970 = !DILocation(line: 3644, column: 7, scope: !8959)
!8971 = !DILocalVariable(name: "vinsn", scope: !8972, file: !3, line: 3646, type: !2061)
!8972 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 3645, column: 5)
!8973 = !DILocation(line: 3646, column: 15, scope: !8972)
!8974 = !DILocalVariable(name: "n", scope: !8972, file: !3, line: 3647, type: !849)
!8975 = !DILocation(line: 3647, column: 11, scope: !8972)
!8976 = !DILocation(line: 3649, column: 14, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8972, file: !3, line: 3649, column: 7)
!8978 = !DILocation(line: 3649, column: 12, scope: !8977)
!8979 = !DILocation(line: 3649, column: 19, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 3649, column: 7)
!8981 = !DILocation(line: 3649, column: 7, scope: !8977)
!8982 = !DILocation(line: 3650, column: 23, scope: !8980)
!8983 = !DILocation(line: 3650, column: 9, scope: !8980)
!8984 = !DILocation(line: 3649, column: 65, scope: !8980)
!8985 = !DILocation(line: 3649, column: 7, scope: !8980)
!8986 = distinct !{!8986, !8981, !8987}
!8987 = !DILocation(line: 3650, column: 28, scope: !8977)
!8988 = !DILocation(line: 3651, column: 7, scope: !8972)
!8989 = !DILocation(line: 3652, column: 5, scope: !8972)
!8990 = !DILocation(line: 3653, column: 1, scope: !8959)
!8991 = distinct !DISubprogram(name: "compute_av_set_on_boundaries", scope: !3, file: !3, line: 5010, type: !8992, scopeLine: 5011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!8992 = !DISubroutineType(types: !8993)
!8993 = !{null, !2402, !2401, !6872}
!8994 = !DILocalVariable(name: "fence", arg: 1, scope: !8991, file: !3, line: 5010, type: !2402)
!8995 = !DILocation(line: 5010, column: 39, scope: !8991)
!8996 = !DILocalVariable(name: "bnds", arg: 2, scope: !8991, file: !3, line: 5010, type: !2401)
!8997 = !DILocation(line: 5010, column: 54, scope: !8991)
!8998 = !DILocalVariable(name: "av_vliw_p", arg: 3, scope: !8991, file: !3, line: 5010, type: !6872)
!8999 = !DILocation(line: 5010, column: 70, scope: !8991)
!9000 = !DILocation(line: 5012, column: 7, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 5012, column: 7)
!9002 = !DILocation(line: 5012, column: 21, scope: !9001)
!9003 = !DILocation(line: 5012, column: 7, scope: !8991)
!9004 = !DILocation(line: 5014, column: 7, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 5013, column: 5)
!9006 = !DILocation(line: 5014, column: 7, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 5014, column: 7)
!9008 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 5014, column: 7)
!9009 = !DILocation(line: 5014, column: 7, scope: !9008)
!9010 = !DILocalVariable(name: "__j", scope: !9011, file: !3, line: 5014, type: !849)
!9011 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 5014, column: 7)
!9012 = !DILocation(line: 5014, column: 7, scope: !9011)
!9013 = !DILocalVariable(name: "__s", scope: !9011, file: !3, line: 5014, type: !817)
!9014 = !DILocation(line: 5015, column: 19, scope: !9005)
!9015 = !DILocation(line: 5015, column: 7, scope: !9005)
!9016 = !DILocation(line: 5016, column: 7, scope: !9005)
!9017 = !DILocation(line: 5016, column: 7, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 5016, column: 7)
!9019 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 5016, column: 7)
!9020 = !DILocation(line: 5016, column: 7, scope: !9019)
!9021 = !DILocalVariable(name: "__j", scope: !9022, file: !3, line: 5016, type: !849)
!9022 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5016, column: 7)
!9023 = !DILocation(line: 5016, column: 7, scope: !9022)
!9024 = !DILocalVariable(name: "__s", scope: !9022, file: !3, line: 5016, type: !817)
!9025 = !DILocation(line: 5017, column: 5, scope: !9005)
!9026 = !DILocation(line: 5019, column: 3, scope: !8991)
!9027 = !DILocation(line: 5019, column: 10, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 5019, column: 3)
!9029 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 5019, column: 3)
!9030 = !DILocation(line: 5019, column: 3, scope: !9029)
!9031 = !DILocalVariable(name: "bnd", scope: !9032, file: !3, line: 5021, type: !8852)
!9032 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 5020, column: 5)
!9033 = !DILocation(line: 5021, column: 13, scope: !9032)
!9034 = !DILocation(line: 5021, column: 19, scope: !9032)
!9035 = !DILocalVariable(name: "av1_copy", scope: !9032, file: !3, line: 5022, type: !2166)
!9036 = !DILocation(line: 5022, column: 16, scope: !9032)
!9037 = !DILocalVariable(name: "bnd_to", scope: !9032, file: !3, line: 5023, type: !2132)
!9038 = !DILocation(line: 5023, column: 14, scope: !9032)
!9039 = !DILocation(line: 5023, column: 23, scope: !9032)
!9040 = !DILocation(line: 5028, column: 26, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 5028, column: 11)
!9042 = !DILocation(line: 5028, column: 11, scope: !9041)
!9043 = !DILocation(line: 5028, column: 11, scope: !9032)
!9044 = !DILocation(line: 5029, column: 9, scope: !9041)
!9045 = !DILocation(line: 5031, column: 9, scope: !9041)
!9046 = !DILocation(line: 5031, column: 16, scope: !9041)
!9047 = !DILocation(line: 5031, column: 54, scope: !9041)
!9048 = !DILocation(line: 5033, column: 22, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9041, file: !3, line: 5032, column: 11)
!9050 = !DILocation(line: 5033, column: 20, scope: !9049)
!9051 = !DILocation(line: 5034, column: 32, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 5034, column: 17)
!9053 = !DILocation(line: 5034, column: 17, scope: !9052)
!9054 = !DILocation(line: 5034, column: 17, scope: !9049)
!9055 = !DILocation(line: 5035, column: 15, scope: !9052)
!9056 = distinct !{!9056, !9045, !9057}
!9057 = !DILocation(line: 5036, column: 11, scope: !9041)
!9058 = !DILocation(line: 5038, column: 11, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 5038, column: 11)
!9060 = !DILocation(line: 5038, column: 27, scope: !9059)
!9061 = !DILocation(line: 5038, column: 24, scope: !9059)
!9062 = !DILocation(line: 5038, column: 11, scope: !9032)
!9063 = !DILocation(line: 5040, column: 6, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 5039, column: 2)
!9065 = !DILocation(line: 5041, column: 25, scope: !9064)
!9066 = !DILocation(line: 5041, column: 4, scope: !9064)
!9067 = !DILocation(line: 5041, column: 23, scope: !9064)
!9068 = !DILocation(line: 5042, column: 19, scope: !9064)
!9069 = !DILocation(line: 5042, column: 4, scope: !9064)
!9070 = !DILocation(line: 5042, column: 17, scope: !9064)
!9071 = !DILocation(line: 5043, column: 2, scope: !9064)
!9072 = !DILocation(line: 5045, column: 22, scope: !9032)
!9073 = !DILocation(line: 5045, column: 7, scope: !9032)
!9074 = !DILocation(line: 5046, column: 38, scope: !9032)
!9075 = !DILocation(line: 5046, column: 22, scope: !9032)
!9076 = !DILocation(line: 5046, column: 7, scope: !9032)
!9077 = !DILocation(line: 5046, column: 20, scope: !9032)
!9078 = !DILocation(line: 5048, column: 22, scope: !9032)
!9079 = !DILocation(line: 5048, column: 7, scope: !9032)
!9080 = !DILocation(line: 5049, column: 36, scope: !9032)
!9081 = !DILocation(line: 5049, column: 23, scope: !9032)
!9082 = !DILocation(line: 5049, column: 7, scope: !9032)
!9083 = !DILocation(line: 5049, column: 21, scope: !9032)
!9084 = !DILocation(line: 5051, column: 38, scope: !9032)
!9085 = !DILocation(line: 5051, column: 7, scope: !9032)
!9086 = !DILocation(line: 5053, column: 31, scope: !9032)
!9087 = !DILocation(line: 5053, column: 18, scope: !9032)
!9088 = !DILocation(line: 5053, column: 16, scope: !9032)
!9089 = !DILocation(line: 5054, column: 31, scope: !9032)
!9090 = !DILocation(line: 5054, column: 7, scope: !9032)
!9091 = !DILocation(line: 5055, column: 5, scope: !9032)
!9092 = !DILocation(line: 5019, column: 23, scope: !9028)
!9093 = !DILocation(line: 5019, column: 21, scope: !9028)
!9094 = !DILocation(line: 5019, column: 3, scope: !9028)
!9095 = distinct !{!9095, !9030, !9096}
!9096 = !DILocation(line: 5055, column: 5, scope: !9029)
!9097 = !DILocation(line: 5057, column: 7, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 5057, column: 7)
!9099 = !DILocation(line: 5057, column: 21, scope: !9098)
!9100 = !DILocation(line: 5057, column: 7, scope: !8991)
!9101 = !DILocation(line: 5059, column: 7, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 5058, column: 5)
!9103 = !DILocation(line: 5059, column: 7, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 5059, column: 7)
!9105 = distinct !DILexicalBlock(scope: !9102, file: !3, line: 5059, column: 7)
!9106 = !DILocation(line: 5059, column: 7, scope: !9105)
!9107 = !DILocalVariable(name: "__j", scope: !9108, file: !3, line: 5059, type: !849)
!9108 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 5059, column: 7)
!9109 = !DILocation(line: 5059, column: 7, scope: !9108)
!9110 = !DILocalVariable(name: "__s", scope: !9108, file: !3, line: 5059, type: !817)
!9111 = !DILocation(line: 5060, column: 21, scope: !9102)
!9112 = !DILocation(line: 5060, column: 20, scope: !9102)
!9113 = !DILocation(line: 5060, column: 7, scope: !9102)
!9114 = !DILocation(line: 5061, column: 7, scope: !9102)
!9115 = !DILocation(line: 5061, column: 7, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 5061, column: 7)
!9117 = distinct !DILexicalBlock(scope: !9102, file: !3, line: 5061, column: 7)
!9118 = !DILocation(line: 5061, column: 7, scope: !9117)
!9119 = !DILocalVariable(name: "__j", scope: !9120, file: !3, line: 5061, type: !849)
!9120 = distinct !DILexicalBlock(scope: !9116, file: !3, line: 5061, column: 7)
!9121 = !DILocation(line: 5061, column: 7, scope: !9120)
!9122 = !DILocalVariable(name: "__s", scope: !9120, file: !3, line: 5061, type: !817)
!9123 = !DILocation(line: 5062, column: 5, scope: !9102)
!9124 = !DILocation(line: 5063, column: 1, scope: !8991)
!9125 = distinct !DISubprogram(name: "remove_insns_that_need_bookkeeping", scope: !3, file: !3, line: 4829, type: !9126, scopeLine: 4830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9126 = !DISubroutineType(types: !9127)
!9127 = !{null, !2402, !6872}
!9128 = !DILocalVariable(name: "fence", arg: 1, scope: !9125, file: !3, line: 4829, type: !2402)
!9129 = !DILocation(line: 4829, column: 45, scope: !9125)
!9130 = !DILocalVariable(name: "av_ptr", arg: 2, scope: !9125, file: !3, line: 4829, type: !6872)
!9131 = !DILocation(line: 4829, column: 62, scope: !9125)
!9132 = !DILocalVariable(name: "expr", scope: !9125, file: !3, line: 4831, type: !2055)
!9133 = !DILocation(line: 4831, column: 10, scope: !9125)
!9134 = !DILocalVariable(name: "i", scope: !9125, file: !3, line: 4832, type: !3060)
!9135 = !DILocation(line: 4832, column: 19, scope: !9125)
!9136 = !DILocation(line: 4841, column: 3, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 4841, column: 3)
!9138 = !DILocation(line: 4841, column: 3, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 4841, column: 3)
!9140 = !DILocation(line: 4843, column: 33, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 4843, column: 11)
!9142 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 4842, column: 5)
!9143 = !DILocation(line: 4843, column: 12, scope: !9141)
!9144 = !DILocation(line: 4844, column: 4, scope: !9141)
!9145 = !DILocation(line: 4844, column: 9, scope: !9141)
!9146 = !DILocation(line: 4844, column: 23, scope: !9141)
!9147 = !DILocation(line: 4844, column: 26, scope: !9141)
!9148 = !DILocation(line: 4845, column: 4, scope: !9141)
!9149 = !DILocation(line: 4845, column: 8, scope: !9141)
!9150 = !DILocation(line: 4846, column: 8, scope: !9141)
!9151 = !DILocation(line: 4846, column: 12, scope: !9141)
!9152 = !DILocation(line: 4847, column: 8, scope: !9141)
!9153 = !DILocation(line: 4848, column: 7, scope: !9141)
!9154 = !DILocation(line: 4849, column: 7, scope: !9141)
!9155 = !DILocation(line: 4847, column: 12, scope: !9141)
!9156 = !DILocation(line: 4843, column: 11, scope: !9142)
!9157 = !DILocation(line: 4851, column: 15, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 4851, column: 15)
!9159 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 4850, column: 2)
!9160 = !DILocation(line: 4851, column: 29, scope: !9158)
!9161 = !DILocation(line: 4851, column: 15, scope: !9159)
!9162 = !DILocation(line: 4852, column: 13, scope: !9158)
!9163 = !DILocation(line: 4852, column: 13, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 4852, column: 13)
!9165 = distinct !DILexicalBlock(scope: !9158, file: !3, line: 4852, column: 13)
!9166 = !DILocation(line: 4852, column: 13, scope: !9165)
!9167 = !DILocalVariable(name: "__j", scope: !9168, file: !3, line: 4852, type: !849)
!9168 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 4852, column: 13)
!9169 = !DILocation(line: 4852, column: 13, scope: !9168)
!9170 = !DILocalVariable(name: "__s", scope: !9168, file: !3, line: 4852, type: !817)
!9171 = !DILocation(line: 4854, column: 4, scope: !9159)
!9172 = !DILocation(line: 4855, column: 2, scope: !9159)
!9173 = !DILocation(line: 4856, column: 5, scope: !9142)
!9174 = distinct !{!9174, !9136, !9175}
!9175 = !DILocation(line: 4856, column: 5, scope: !9137)
!9176 = !DILocation(line: 4857, column: 1, scope: !9125)
!9177 = distinct !DISubprogram(name: "remove_insns_for_debug", scope: !3, file: !3, line: 4989, type: !9178, scopeLine: 4990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9178 = !DISubroutineType(types: !9179)
!9179 = !{null, !2401, !6872}
!9180 = !DILocalVariable(name: "bnds", arg: 1, scope: !9177, file: !3, line: 4989, type: !2401)
!9181 = !DILocation(line: 4989, column: 33, scope: !9177)
!9182 = !DILocalVariable(name: "av_vliw_p", arg: 2, scope: !9177, file: !3, line: 4989, type: !6872)
!9183 = !DILocation(line: 4989, column: 49, scope: !9177)
!9184 = !DILocation(line: 4991, column: 9, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 4991, column: 7)
!9186 = !DILocation(line: 4991, column: 7, scope: !9177)
!9187 = !DILocalVariable(name: "av_it", scope: !9188, file: !3, line: 4994, type: !3060)
!9188 = distinct !DILexicalBlock(scope: !9185, file: !3, line: 4993, column: 5)
!9189 = !DILocation(line: 4994, column: 23, scope: !9188)
!9190 = !DILocalVariable(name: "expr", scope: !9188, file: !3, line: 4995, type: !2055)
!9191 = !DILocation(line: 4995, column: 14, scope: !9188)
!9192 = !DILocalVariable(name: "bnd", scope: !9188, file: !3, line: 4996, type: !8852)
!9193 = !DILocation(line: 4996, column: 13, scope: !9188)
!9194 = !DILocation(line: 4996, column: 19, scope: !9188)
!9195 = !DILocalVariable(name: "next", scope: !9188, file: !3, line: 4997, type: !2132)
!9196 = !DILocation(line: 4997, column: 14, scope: !9188)
!9197 = !DILocation(line: 4997, column: 21, scope: !9188)
!9198 = !DILocation(line: 4999, column: 7, scope: !9188)
!9199 = !DILocation(line: 5001, column: 7, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 5001, column: 7)
!9201 = !DILocation(line: 5001, column: 7, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 5001, column: 7)
!9203 = !DILocation(line: 5002, column: 13, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 5002, column: 13)
!9205 = !DILocation(line: 5002, column: 37, scope: !9204)
!9206 = !DILocation(line: 5002, column: 34, scope: !9204)
!9207 = !DILocation(line: 5002, column: 13, scope: !9202)
!9208 = !DILocation(line: 5003, column: 11, scope: !9204)
!9209 = distinct !{!9209, !9199, !9210}
!9210 = !DILocation(line: 5003, column: 37, scope: !9200)
!9211 = !DILocation(line: 5004, column: 5, scope: !9188)
!9212 = !DILocation(line: 5005, column: 1, scope: !9177)
!9213 = distinct !DISubprogram(name: "find_best_expr", scope: !3, file: !3, line: 4375, type: !9214, scopeLine: 4377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9214 = !DISubroutineType(types: !9215)
!9215 = !{!2055, !6872, !2401, !2402, !2219}
!9216 = !DILocalVariable(name: "av_vliw_ptr", arg: 1, scope: !9213, file: !3, line: 4375, type: !6872)
!9217 = !DILocation(line: 4375, column: 27, scope: !9213)
!9218 = !DILocalVariable(name: "bnds", arg: 2, scope: !9213, file: !3, line: 4375, type: !2401)
!9219 = !DILocation(line: 4375, column: 48, scope: !9213)
!9220 = !DILocalVariable(name: "fence", arg: 3, scope: !9213, file: !3, line: 4375, type: !2402)
!9221 = !DILocation(line: 4375, column: 62, scope: !9213)
!9222 = !DILocalVariable(name: "pneed_stall", arg: 4, scope: !9213, file: !3, line: 4376, type: !2219)
!9223 = !DILocation(line: 4376, column: 22, scope: !9213)
!9224 = !DILocalVariable(name: "best", scope: !9213, file: !3, line: 4378, type: !2055)
!9225 = !DILocation(line: 4378, column: 10, scope: !9213)
!9226 = !DILocation(line: 4384, column: 27, scope: !9213)
!9227 = !DILocation(line: 4384, column: 40, scope: !9213)
!9228 = !DILocation(line: 4384, column: 46, scope: !9213)
!9229 = !DILocation(line: 4384, column: 53, scope: !9213)
!9230 = !DILocation(line: 4384, column: 10, scope: !9213)
!9231 = !DILocation(line: 4384, column: 8, scope: !9213)
!9232 = !DILocation(line: 4385, column: 7, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 4385, column: 7)
!9234 = !DILocation(line: 4385, column: 12, scope: !9233)
!9235 = !DILocation(line: 4385, column: 20, scope: !9233)
!9236 = !DILocation(line: 4385, column: 29, scope: !9233)
!9237 = !DILocation(line: 4385, column: 37, scope: !9233)
!9238 = !DILocation(line: 4385, column: 7, scope: !9213)
!9239 = !DILocalVariable(name: "privileged_n", scope: !9240, file: !3, line: 4387, type: !849)
!9240 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 4386, column: 5)
!9241 = !DILocation(line: 4387, column: 11, scope: !9240)
!9242 = !DILocalVariable(name: "index", scope: !9240, file: !3, line: 4387, type: !849)
!9243 = !DILocation(line: 4387, column: 25, scope: !9240)
!9244 = !DILocation(line: 4389, column: 46, scope: !9240)
!9245 = !DILocation(line: 4389, column: 24, scope: !9240)
!9246 = !DILocation(line: 4389, column: 22, scope: !9240)
!9247 = !DILocation(line: 4390, column: 11, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 4390, column: 11)
!9249 = !DILocation(line: 4390, column: 26, scope: !9248)
!9250 = !DILocation(line: 4390, column: 11, scope: !9240)
!9251 = !DILocation(line: 4396, column: 11, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 4391, column: 9)
!9253 = !DILocation(line: 4397, column: 26, scope: !9252)
!9254 = !DILocation(line: 4397, column: 24, scope: !9252)
!9255 = !DILocation(line: 4398, column: 46, scope: !9252)
!9256 = !DILocation(line: 4398, column: 53, scope: !9252)
!9257 = !DILocation(line: 4398, column: 28, scope: !9252)
!9258 = !DILocation(line: 4398, column: 26, scope: !9252)
!9259 = !DILocation(line: 4399, column: 15, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 4399, column: 15)
!9261 = !DILocation(line: 4399, column: 15, scope: !9252)
!9262 = !DILocation(line: 4400, column: 41, scope: !9260)
!9263 = !DILocation(line: 4400, column: 20, scope: !9260)
!9264 = !DILocation(line: 4400, column: 18, scope: !9260)
!9265 = !DILocation(line: 4400, column: 13, scope: !9260)
!9266 = !DILocation(line: 4401, column: 9, scope: !9252)
!9267 = !DILocation(line: 4404, column: 11, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 4404, column: 11)
!9269 = !DILocation(line: 4404, column: 26, scope: !9268)
!9270 = !DILocation(line: 4404, column: 11, scope: !9240)
!9271 = !DILocation(line: 4406, column: 16, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 4405, column: 9)
!9273 = !DILocation(line: 4407, column: 12, scope: !9272)
!9274 = !DILocation(line: 4407, column: 24, scope: !9272)
!9275 = !DILocation(line: 4408, column: 9, scope: !9272)
!9276 = !DILocation(line: 4409, column: 5, scope: !9240)
!9277 = !DILocation(line: 4411, column: 7, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 4411, column: 7)
!9279 = !DILocation(line: 4411, column: 12, scope: !9278)
!9280 = !DILocation(line: 4411, column: 7, scope: !9213)
!9281 = !DILocation(line: 4413, column: 48, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 4412, column: 5)
!9283 = !DILocation(line: 4413, column: 55, scope: !9282)
!9284 = !DILocation(line: 4414, column: 48, scope: !9282)
!9285 = !DILocation(line: 4413, column: 24, scope: !9282)
!9286 = !DILocation(line: 4413, column: 22, scope: !9282)
!9287 = !DILocation(line: 4415, column: 11, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 4415, column: 11)
!9289 = !DILocation(line: 4415, column: 26, scope: !9288)
!9290 = !DILocation(line: 4415, column: 11, scope: !9282)
!9291 = !DILocation(line: 4416, column: 10, scope: !9288)
!9292 = !DILocation(line: 4416, column: 22, scope: !9288)
!9293 = !DILocation(line: 4416, column: 9, scope: !9288)
!9294 = !DILocation(line: 4417, column: 5, scope: !9282)
!9295 = !DILocation(line: 4419, column: 7, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 4419, column: 7)
!9297 = !DILocation(line: 4419, column: 21, scope: !9296)
!9298 = !DILocation(line: 4419, column: 7, scope: !9213)
!9299 = !DILocation(line: 4421, column: 11, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 4421, column: 11)
!9301 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 4420, column: 5)
!9302 = !DILocation(line: 4421, column: 16, scope: !9300)
!9303 = !DILocation(line: 4421, column: 11, scope: !9301)
!9304 = !DILocation(line: 4423, column: 11, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 4422, column: 9)
!9306 = !DILocation(line: 4423, column: 11, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9308, file: !3, line: 4423, column: 11)
!9308 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 4423, column: 11)
!9309 = !DILocation(line: 4423, column: 11, scope: !9308)
!9310 = !DILocalVariable(name: "__j", scope: !9311, file: !3, line: 4423, type: !849)
!9311 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 4423, column: 11)
!9312 = !DILocation(line: 4423, column: 11, scope: !9311)
!9313 = !DILocalVariable(name: "__s", scope: !9311, file: !3, line: 4423, type: !817)
!9314 = !DILocation(line: 4424, column: 22, scope: !9305)
!9315 = !DILocation(line: 4424, column: 11, scope: !9305)
!9316 = !DILocation(line: 4425, column: 11, scope: !9305)
!9317 = !DILocation(line: 4425, column: 11, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 4425, column: 11)
!9319 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 4425, column: 11)
!9320 = !DILocation(line: 4425, column: 11, scope: !9319)
!9321 = !DILocalVariable(name: "__j", scope: !9322, file: !3, line: 4425, type: !849)
!9322 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 4425, column: 11)
!9323 = !DILocation(line: 4425, column: 11, scope: !9322)
!9324 = !DILocalVariable(name: "__s", scope: !9322, file: !3, line: 4425, type: !817)
!9325 = !DILocation(line: 4426, column: 9, scope: !9305)
!9326 = !DILocation(line: 4428, column: 9, scope: !9300)
!9327 = !DILocation(line: 4428, column: 9, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 4428, column: 9)
!9329 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 4428, column: 9)
!9330 = !DILocation(line: 4428, column: 9, scope: !9329)
!9331 = !DILocalVariable(name: "__j", scope: !9332, file: !3, line: 4428, type: !849)
!9332 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 4428, column: 9)
!9333 = !DILocation(line: 4428, column: 9, scope: !9332)
!9334 = !DILocalVariable(name: "__s", scope: !9332, file: !3, line: 4428, type: !817)
!9335 = !DILocation(line: 4429, column: 5, scope: !9301)
!9336 = !DILocation(line: 4431, column: 10, scope: !9213)
!9337 = !DILocation(line: 4431, column: 3, scope: !9213)
!9338 = distinct !DISubprogram(name: "stall_for_cycles", scope: !3, file: !3, line: 5468, type: !9339, scopeLine: 5469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9339 = !DISubroutineType(types: !9340)
!9340 = !{null, !2402, !849}
!9341 = !DILocalVariable(name: "fence", arg: 1, scope: !9338, file: !3, line: 5468, type: !2402)
!9342 = !DILocation(line: 5468, column: 27, scope: !9338)
!9343 = !DILocalVariable(name: "n", arg: 2, scope: !9338, file: !3, line: 5468, type: !849)
!9344 = !DILocation(line: 5468, column: 38, scope: !9338)
!9345 = !DILocalVariable(name: "could_more", scope: !9338, file: !3, line: 5470, type: !849)
!9346 = !DILocation(line: 5470, column: 7, scope: !9338)
!9347 = !DILocation(line: 5472, column: 16, scope: !9338)
!9348 = !DILocation(line: 5472, column: 18, scope: !9338)
!9349 = !DILocation(line: 5472, column: 22, scope: !9338)
!9350 = !DILocation(line: 5472, column: 25, scope: !9338)
!9351 = !DILocation(line: 5472, column: 54, scope: !9338)
!9352 = !DILocation(line: 5472, column: 52, scope: !9338)
!9353 = !DILocation(line: 5472, column: 14, scope: !9338)
!9354 = !DILocation(line: 5473, column: 3, scope: !9338)
!9355 = !DILocation(line: 5473, column: 11, scope: !9338)
!9356 = !DILocation(line: 5474, column: 24, scope: !9338)
!9357 = !DILocation(line: 5474, column: 5, scope: !9338)
!9358 = distinct !{!9358, !9354, !9359}
!9359 = !DILocation(line: 5474, column: 29, scope: !9338)
!9360 = !DILocation(line: 5475, column: 7, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 5475, column: 7)
!9362 = !DILocation(line: 5475, column: 7, scope: !9338)
!9363 = !DILocation(line: 5476, column: 5, scope: !9361)
!9364 = !DILocation(line: 5476, column: 33, scope: !9361)
!9365 = !DILocation(line: 5477, column: 1, scope: !9338)
!9366 = distinct !DISubprogram(name: "schedule_expr_on_boundary", scope: !3, file: !3, line: 5399, type: !9367, scopeLine: 5400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9367 = !DISubroutineType(types: !9368)
!9368 = !{!2132, !8852, !2055, !849}
!9369 = !DILocalVariable(name: "bnd", arg: 1, scope: !9366, file: !3, line: 5399, type: !8852)
!9370 = !DILocation(line: 5399, column: 34, scope: !9366)
!9371 = !DILocalVariable(name: "expr_vliw", arg: 2, scope: !9366, file: !3, line: 5399, type: !2055)
!9372 = !DILocation(line: 5399, column: 46, scope: !9366)
!9373 = !DILocalVariable(name: "seqno", arg: 3, scope: !9366, file: !3, line: 5399, type: !849)
!9374 = !DILocation(line: 5399, column: 61, scope: !9366)
!9375 = !DILocalVariable(name: "expr_seq", scope: !9366, file: !3, line: 5401, type: !2166)
!9376 = !DILocation(line: 5401, column: 12, scope: !9366)
!9377 = !DILocalVariable(name: "c_expr", scope: !9366, file: !3, line: 5402, type: !2055)
!9378 = !DILocation(line: 5402, column: 10, scope: !9366)
!9379 = !DILocation(line: 5402, column: 19, scope: !9366)
!9380 = !DILocalVariable(name: "place_to_insert", scope: !9366, file: !3, line: 5403, type: !2132)
!9381 = !DILocation(line: 5403, column: 10, scope: !9366)
!9382 = !DILocalVariable(name: "insn", scope: !9366, file: !3, line: 5404, type: !2132)
!9383 = !DILocation(line: 5404, column: 10, scope: !9366)
!9384 = !DILocalVariable(name: "should_move", scope: !9366, file: !3, line: 5405, type: !1057)
!9385 = !DILocation(line: 5405, column: 8, scope: !9366)
!9386 = !DILocation(line: 5407, column: 42, scope: !9366)
!9387 = !DILocation(line: 5407, column: 47, scope: !9366)
!9388 = !DILocation(line: 5407, column: 14, scope: !9366)
!9389 = !DILocation(line: 5407, column: 12, scope: !9366)
!9390 = !DILocation(line: 5412, column: 28, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 5412, column: 7)
!9392 = !DILocation(line: 5412, column: 7, scope: !9391)
!9393 = !DILocation(line: 5412, column: 7, scope: !9366)
!9394 = !DILocation(line: 5414, column: 14, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 5413, column: 5)
!9396 = !DILocation(line: 5414, column: 12, scope: !9395)
!9397 = !DILocation(line: 5417, column: 11, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 5417, column: 11)
!9399 = !DILocation(line: 5417, column: 19, scope: !9398)
!9400 = !DILocation(line: 5417, column: 16, scope: !9398)
!9401 = !DILocation(line: 5418, column: 11, scope: !9398)
!9402 = !DILocation(line: 5418, column: 46, scope: !9398)
!9403 = !DILocation(line: 5418, column: 15, scope: !9398)
!9404 = !DILocation(line: 5417, column: 11, scope: !9395)
!9405 = !DILocation(line: 5419, column: 25, scope: !9398)
!9406 = !DILocation(line: 5419, column: 31, scope: !9398)
!9407 = !DILocation(line: 5419, column: 9, scope: !9398)
!9408 = !DILocation(line: 5420, column: 5, scope: !9395)
!9409 = !DILocation(line: 5423, column: 46, scope: !9366)
!9410 = !DILocation(line: 5423, column: 21, scope: !9366)
!9411 = !DILocation(line: 5423, column: 19, scope: !9366)
!9412 = !DILocation(line: 5424, column: 41, scope: !9366)
!9413 = !DILocation(line: 5424, column: 46, scope: !9366)
!9414 = !DILocation(line: 5424, column: 57, scope: !9366)
!9415 = !DILocation(line: 5424, column: 67, scope: !9366)
!9416 = !DILocation(line: 5424, column: 17, scope: !9366)
!9417 = !DILocation(line: 5424, column: 15, scope: !9366)
!9418 = !DILocation(line: 5425, column: 15, scope: !9366)
!9419 = !DILocation(line: 5425, column: 3, scope: !9366)
!9420 = !DILocation(line: 5431, column: 7, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 5431, column: 7)
!9422 = !DILocation(line: 5431, column: 7, scope: !9366)
!9423 = !DILocalVariable(name: "vinsn_new", scope: !9424, file: !3, line: 5433, type: !2061)
!9424 = distinct !DILexicalBlock(scope: !9421, file: !3, line: 5432, column: 5)
!9425 = !DILocation(line: 5433, column: 15, scope: !9424)
!9426 = !DILocation(line: 5435, column: 31, scope: !9424)
!9427 = !DILocation(line: 5435, column: 19, scope: !9424)
!9428 = !DILocation(line: 5435, column: 17, scope: !9424)
!9429 = !DILocation(line: 5436, column: 29, scope: !9424)
!9430 = !DILocation(line: 5436, column: 40, scope: !9424)
!9431 = !DILocation(line: 5436, column: 7, scope: !9424)
!9432 = !DILocation(line: 5437, column: 19, scope: !9424)
!9433 = !DILocation(line: 5438, column: 5, scope: !9424)
!9434 = !DILocation(line: 5439, column: 7, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 5439, column: 7)
!9436 = !DILocation(line: 5439, column: 7, scope: !9366)
!9437 = !DILocation(line: 5440, column: 27, scope: !9435)
!9438 = !DILocation(line: 5440, column: 38, scope: !9435)
!9439 = !DILocation(line: 5440, column: 45, scope: !9435)
!9440 = !DILocation(line: 5440, column: 12, scope: !9435)
!9441 = !DILocation(line: 5440, column: 10, scope: !9435)
!9442 = !DILocation(line: 5440, column: 5, scope: !9435)
!9443 = !DILocation(line: 5442, column: 39, scope: !9435)
!9444 = !DILocation(line: 5442, column: 56, scope: !9435)
!9445 = !DILocation(line: 5443, column: 39, scope: !9435)
!9446 = !DILocation(line: 5442, column: 12, scope: !9435)
!9447 = !DILocation(line: 5442, column: 10, scope: !9435)
!9448 = !DILocation(line: 5447, column: 7, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 5447, column: 7)
!9450 = !DILocation(line: 5447, column: 7, scope: !9366)
!9451 = !DILocation(line: 5448, column: 25, scope: !9449)
!9452 = !DILocation(line: 5448, column: 43, scope: !9449)
!9453 = !DILocation(line: 5448, column: 42, scope: !9449)
!9454 = !DILocation(line: 5448, column: 5, scope: !9449)
!9455 = !DILocation(line: 5449, column: 29, scope: !9366)
!9456 = !DILocation(line: 5449, column: 28, scope: !9366)
!9457 = !DILocation(line: 5449, column: 3, scope: !9366)
!9458 = !DILocation(line: 5451, column: 3, scope: !9366)
!9459 = !DILocation(line: 5455, column: 7, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 5455, column: 7)
!9461 = !DILocation(line: 5455, column: 7, scope: !9366)
!9462 = !DILocation(line: 5456, column: 52, scope: !9460)
!9463 = !DILocation(line: 5456, column: 5, scope: !9460)
!9464 = !DILocation(line: 5460, column: 3, scope: !9366)
!9465 = !DILocation(line: 5463, column: 10, scope: !9366)
!9466 = !DILocation(line: 5463, column: 3, scope: !9366)
!9467 = distinct !DISubprogram(name: "update_fence_and_insn", scope: !3, file: !3, line: 5305, type: !9468, scopeLine: 5306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9468 = !DISubroutineType(types: !9469)
!9469 = !{null, !2402, !2132, !849}
!9470 = !DILocalVariable(name: "fence", arg: 1, scope: !9467, file: !3, line: 5305, type: !2402)
!9471 = !DILocation(line: 5305, column: 32, scope: !9467)
!9472 = !DILocalVariable(name: "insn", arg: 2, scope: !9467, file: !3, line: 5305, type: !2132)
!9473 = !DILocation(line: 5305, column: 46, scope: !9467)
!9474 = !DILocalVariable(name: "need_stall", arg: 3, scope: !9467, file: !3, line: 5305, type: !849)
!9475 = !DILocation(line: 5305, column: 56, scope: !9467)
!9476 = !DILocalVariable(name: "asm_p", scope: !9467, file: !3, line: 5307, type: !1057)
!9477 = !DILocation(line: 5307, column: 8, scope: !9467)
!9478 = !DILocation(line: 5310, column: 35, scope: !9467)
!9479 = !DILocation(line: 5310, column: 42, scope: !9467)
!9480 = !DILocation(line: 5310, column: 11, scope: !9467)
!9481 = !DILocation(line: 5310, column: 9, scope: !9467)
!9482 = !DILocation(line: 5311, column: 39, scope: !9467)
!9483 = !DILocation(line: 5311, column: 3, scope: !9467)
!9484 = !DILocation(line: 5311, column: 37, scope: !9467)
!9485 = !DILocation(line: 5312, column: 3, scope: !9467)
!9486 = !DILocation(line: 5313, column: 7, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 5313, column: 7)
!9488 = !DILocation(line: 5313, column: 7, scope: !9467)
!9489 = !DILocation(line: 5315, column: 34, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 5314, column: 5)
!9491 = !DILocation(line: 5315, column: 7, scope: !9490)
!9492 = !DILocation(line: 5315, column: 32, scope: !9490)
!9493 = !DILocation(line: 5316, column: 7, scope: !9490)
!9494 = !DILocation(line: 5316, column: 28, scope: !9490)
!9495 = !DILocation(line: 5317, column: 5, scope: !9490)
!9496 = !DILocation(line: 5319, column: 5, scope: !9487)
!9497 = !DILocation(line: 5319, column: 30, scope: !9487)
!9498 = !DILocation(line: 5320, column: 7, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 5320, column: 7)
!9500 = !DILocation(line: 5320, column: 25, scope: !9499)
!9501 = !DILocation(line: 5320, column: 23, scope: !9499)
!9502 = !DILocation(line: 5320, column: 7, scope: !9467)
!9503 = !DILocation(line: 5321, column: 5, scope: !9499)
!9504 = !DILocation(line: 5321, column: 32, scope: !9499)
!9505 = !DILocation(line: 5321, column: 49, scope: !9499)
!9506 = !DILocation(line: 5325, column: 5, scope: !9467)
!9507 = !DILocation(line: 5325, column: 3, scope: !9467)
!9508 = !DILocation(line: 5326, column: 3, scope: !9467)
!9509 = !DILocation(line: 5326, column: 44, scope: !9467)
!9510 = !DILocation(line: 5327, column: 46, scope: !9467)
!9511 = !DILocation(line: 5327, column: 3, scope: !9467)
!9512 = !DILocation(line: 5327, column: 44, scope: !9467)
!9513 = !DILocation(line: 5328, column: 31, scope: !9467)
!9514 = !DILocation(line: 5328, column: 3, scope: !9467)
!9515 = !DILocation(line: 5328, column: 29, scope: !9467)
!9516 = !DILocation(line: 5329, column: 29, scope: !9467)
!9517 = !DILocation(line: 5329, column: 3, scope: !9467)
!9518 = !DILocation(line: 5329, column: 27, scope: !9467)
!9519 = !DILocation(line: 5335, column: 7, scope: !9467)
!9520 = !DILocation(line: 5335, column: 34, scope: !9467)
!9521 = !DILocation(line: 5335, column: 51, scope: !9467)
!9522 = !DILocation(line: 5337, column: 58, scope: !9467)
!9523 = !DILocation(line: 5337, column: 36, scope: !9467)
!9524 = !DILocation(line: 5337, column: 64, scope: !9467)
!9525 = !DILocation(line: 5335, column: 31, scope: !9467)
!9526 = !DILocation(line: 5334, column: 3, scope: !9467)
!9527 = !DILocation(line: 5335, column: 5, scope: !9467)
!9528 = !DILocation(line: 5340, column: 3, scope: !9467)
!9529 = !DILocation(line: 5340, column: 31, scope: !9467)
!9530 = !DILocation(line: 5341, column: 7, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 5341, column: 7)
!9532 = !DILocation(line: 5341, column: 13, scope: !9531)
!9533 = !DILocation(line: 5341, column: 16, scope: !9531)
!9534 = !DILocation(line: 5341, column: 7, scope: !9467)
!9535 = !DILocation(line: 5342, column: 24, scope: !9531)
!9536 = !DILocation(line: 5342, column: 5, scope: !9531)
!9537 = !DILocation(line: 5345, column: 3, scope: !9467)
!9538 = !DILocation(line: 5345, column: 29, scope: !9467)
!9539 = !DILocation(line: 5346, column: 41, scope: !9467)
!9540 = !DILocation(line: 5349, column: 7, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 5349, column: 7)
!9542 = !DILocation(line: 5349, column: 21, scope: !9541)
!9543 = !DILocation(line: 5349, column: 7, scope: !9467)
!9544 = !DILocation(line: 5351, column: 7, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 5350, column: 5)
!9546 = !DILocation(line: 5351, column: 7, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 5351, column: 7)
!9548 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 5351, column: 7)
!9549 = !DILocation(line: 5351, column: 7, scope: !9548)
!9550 = !DILocalVariable(name: "__j", scope: !9551, file: !3, line: 5351, type: !849)
!9551 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 5351, column: 7)
!9552 = !DILocation(line: 5351, column: 7, scope: !9551)
!9553 = !DILocalVariable(name: "__s", scope: !9551, file: !3, line: 5351, type: !817)
!9554 = !DILocation(line: 5352, column: 20, scope: !9545)
!9555 = !DILocation(line: 5352, column: 7, scope: !9545)
!9556 = !DILocation(line: 5353, column: 7, scope: !9545)
!9557 = !DILocation(line: 5353, column: 7, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 5353, column: 7)
!9559 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 5353, column: 7)
!9560 = !DILocation(line: 5353, column: 7, scope: !9559)
!9561 = !DILocalVariable(name: "__j", scope: !9562, file: !3, line: 5353, type: !849)
!9562 = distinct !DILexicalBlock(scope: !9558, file: !3, line: 5353, column: 7)
!9563 = !DILocation(line: 5353, column: 7, scope: !9562)
!9564 = !DILocalVariable(name: "__s", scope: !9562, file: !3, line: 5353, type: !817)
!9565 = !DILocation(line: 5354, column: 5, scope: !9545)
!9566 = !DILocation(line: 5355, column: 1, scope: !9467)
!9567 = distinct !DISubprogram(name: "update_boundaries", scope: !3, file: !3, line: 5361, type: !9568, scopeLine: 5363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9568 = !DISubroutineType(types: !9569)
!9569 = !{!8735, !2402, !8852, !2132, !8735, !8735}
!9570 = !DILocalVariable(name: "fence", arg: 1, scope: !9567, file: !3, line: 5361, type: !2402)
!9571 = !DILocation(line: 5361, column: 28, scope: !9567)
!9572 = !DILocalVariable(name: "bnd", arg: 2, scope: !9567, file: !3, line: 5361, type: !8852)
!9573 = !DILocation(line: 5361, column: 41, scope: !9567)
!9574 = !DILocalVariable(name: "insn", arg: 3, scope: !9567, file: !3, line: 5361, type: !2132)
!9575 = !DILocation(line: 5361, column: 53, scope: !9567)
!9576 = !DILocalVariable(name: "bndsp", arg: 4, scope: !9567, file: !3, line: 5361, type: !8735)
!9577 = !DILocation(line: 5361, column: 68, scope: !9567)
!9578 = !DILocalVariable(name: "bnds_tailp", arg: 5, scope: !9567, file: !3, line: 5362, type: !8735)
!9579 = !DILocation(line: 5362, column: 29, scope: !9567)
!9580 = !DILocalVariable(name: "si", scope: !9567, file: !3, line: 5364, type: !3479)
!9581 = !DILocation(line: 5364, column: 17, scope: !9567)
!9582 = !DILocalVariable(name: "succ", scope: !9567, file: !3, line: 5365, type: !2132)
!9583 = !DILocation(line: 5365, column: 10, scope: !9567)
!9584 = !DILocation(line: 5367, column: 25, scope: !9567)
!9585 = !DILocation(line: 5367, column: 39, scope: !9567)
!9586 = !DILocation(line: 5367, column: 3, scope: !9567)
!9587 = !DILocation(line: 5368, column: 3, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 5368, column: 3)
!9589 = !DILocation(line: 5368, column: 3, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 5368, column: 3)
!9591 = !DILocalVariable(name: "ptr", scope: !9592, file: !3, line: 5371, type: !2163)
!9592 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 5370, column: 5)
!9593 = !DILocation(line: 5371, column: 15, scope: !9592)
!9594 = !DILocation(line: 5371, column: 33, scope: !9592)
!9595 = !DILocation(line: 5371, column: 21, scope: !9592)
!9596 = !DILocation(line: 5373, column: 7, scope: !9592)
!9597 = !DILocation(line: 5375, column: 11, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 5375, column: 11)
!9599 = !DILocation(line: 5375, column: 31, scope: !9598)
!9600 = !DILocation(line: 5375, column: 48, scope: !9598)
!9601 = !DILocation(line: 5375, column: 34, scope: !9598)
!9602 = !DILocation(line: 5376, column: 4, scope: !9598)
!9603 = !DILocation(line: 5376, column: 32, scope: !9598)
!9604 = !DILocation(line: 5376, column: 38, scope: !9598)
!9605 = !DILocation(line: 5376, column: 7, scope: !9598)
!9606 = !DILocation(line: 5375, column: 11, scope: !9592)
!9607 = !DILocation(line: 5378, column: 4, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 5377, column: 2)
!9609 = !DILocation(line: 5379, column: 4, scope: !9608)
!9610 = !DILocation(line: 5382, column: 11, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 5382, column: 11)
!9612 = !DILocation(line: 5382, column: 33, scope: !9611)
!9613 = !DILocation(line: 5382, column: 30, scope: !9611)
!9614 = !DILocation(line: 5382, column: 38, scope: !9611)
!9615 = !DILocation(line: 5382, column: 56, scope: !9611)
!9616 = !DILocation(line: 5382, column: 42, scope: !9611)
!9617 = !DILocation(line: 5382, column: 11, scope: !9592)
!9618 = !DILocation(line: 5384, column: 8, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 5384, column: 8)
!9620 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 5383, column: 2)
!9621 = !DILocation(line: 5384, column: 22, scope: !9619)
!9622 = !DILocation(line: 5384, column: 8, scope: !9620)
!9623 = !DILocation(line: 5385, column: 6, scope: !9619)
!9624 = !DILocation(line: 5385, column: 6, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 5385, column: 6)
!9626 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 5385, column: 6)
!9627 = !DILocation(line: 5385, column: 6, scope: !9626)
!9628 = !DILocalVariable(name: "__j", scope: !9629, file: !3, line: 5385, type: !849)
!9629 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 5385, column: 6)
!9630 = !DILocation(line: 5385, column: 6, scope: !9629)
!9631 = !DILocalVariable(name: "__s", scope: !9629, file: !3, line: 5385, type: !817)
!9632 = !DILocation(line: 5387, column: 25, scope: !9620)
!9633 = !DILocation(line: 5387, column: 4, scope: !9620)
!9634 = !DILocation(line: 5387, column: 23, scope: !9620)
!9635 = !DILocation(line: 5388, column: 2, scope: !9620)
!9636 = !DILocation(line: 5389, column: 18, scope: !9592)
!9637 = !DILocation(line: 5389, column: 30, scope: !9592)
!9638 = !DILocation(line: 5389, column: 36, scope: !9592)
!9639 = !DILocation(line: 5389, column: 41, scope: !9592)
!9640 = !DILocation(line: 5389, column: 7, scope: !9592)
!9641 = !DILocation(line: 5390, column: 21, scope: !9592)
!9642 = !DILocation(line: 5390, column: 18, scope: !9592)
!9643 = !DILocation(line: 5391, column: 5, scope: !9592)
!9644 = distinct !{!9644, !9587, !9645}
!9645 = !DILocation(line: 5391, column: 5, scope: !9588)
!9646 = !DILocation(line: 5393, column: 17, scope: !9567)
!9647 = !DILocation(line: 5393, column: 3, scope: !9567)
!9648 = !DILocation(line: 5394, column: 10, scope: !9567)
!9649 = !DILocation(line: 5394, column: 3, scope: !9567)
!9650 = distinct !DISubprogram(name: "moveup_set_inside_insn_group", scope: !3, file: !3, line: 2612, type: !9651, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9651 = !DISubroutineType(types: !9652)
!9652 = !{null, !6872, !2163}
!9653 = !DILocalVariable(name: "avp", arg: 1, scope: !9650, file: !3, line: 2612, type: !6872)
!9654 = !DILocation(line: 2612, column: 41, scope: !9650)
!9655 = !DILocalVariable(name: "path", arg: 2, scope: !9650, file: !3, line: 2612, type: !2163)
!9656 = !DILocation(line: 2612, column: 54, scope: !9650)
!9657 = !DILocalVariable(name: "last_cycle", scope: !9650, file: !3, line: 2614, type: !849)
!9658 = !DILocation(line: 2614, column: 7, scope: !9650)
!9659 = !DILocation(line: 2616, column: 7, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 2616, column: 7)
!9661 = !DILocation(line: 2616, column: 21, scope: !9660)
!9662 = !DILocation(line: 2616, column: 7, scope: !9650)
!9663 = !DILocation(line: 2617, column: 5, scope: !9660)
!9664 = !DILocation(line: 2617, column: 5, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 2617, column: 5)
!9666 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2617, column: 5)
!9667 = !DILocation(line: 2617, column: 5, scope: !9666)
!9668 = !DILocalVariable(name: "__j", scope: !9669, file: !3, line: 2617, type: !849)
!9669 = distinct !DILexicalBlock(scope: !9665, file: !3, line: 2617, column: 5)
!9670 = !DILocation(line: 2617, column: 5, scope: !9669)
!9671 = !DILocalVariable(name: "__s", scope: !9669, file: !3, line: 2617, type: !817)
!9672 = !DILocation(line: 2618, column: 9, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 2618, column: 7)
!9674 = !DILocation(line: 2618, column: 7, scope: !9650)
!9675 = !DILocation(line: 2619, column: 5, scope: !9673)
!9676 = !DILocation(line: 2620, column: 16, scope: !9650)
!9677 = !DILocation(line: 2620, column: 14, scope: !9650)
!9678 = !DILocation(line: 2621, column: 3, scope: !9650)
!9679 = !DILocation(line: 2621, column: 10, scope: !9650)
!9680 = !DILocation(line: 2622, column: 10, scope: !9650)
!9681 = !DILocation(line: 2622, column: 13, scope: !9650)
!9682 = !DILocation(line: 2622, column: 53, scope: !9650)
!9683 = !DILocation(line: 2622, column: 50, scope: !9650)
!9684 = !DILocation(line: 0, scope: !9650)
!9685 = !DILocation(line: 2624, column: 24, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 2623, column: 5)
!9687 = !DILocation(line: 2624, column: 29, scope: !9686)
!9688 = !DILocation(line: 2624, column: 7, scope: !9686)
!9689 = !DILocation(line: 2625, column: 14, scope: !9686)
!9690 = !DILocation(line: 2625, column: 12, scope: !9686)
!9691 = distinct !{!9691, !9678, !9692}
!9692 = !DILocation(line: 2626, column: 5, scope: !9650)
!9693 = !DILocation(line: 2627, column: 1, scope: !9650)
!9694 = distinct !DISubprogram(name: "fill_ready_list", scope: !3, file: !3, line: 4000, type: !9214, scopeLine: 4002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9695 = !DILocalVariable(name: "av_ptr", arg: 1, scope: !9694, file: !3, line: 4000, type: !6872)
!9696 = !DILocation(line: 4000, column: 28, scope: !9694)
!9697 = !DILocalVariable(name: "bnds", arg: 2, scope: !9694, file: !3, line: 4000, type: !2401)
!9698 = !DILocation(line: 4000, column: 44, scope: !9694)
!9699 = !DILocalVariable(name: "fence", arg: 3, scope: !9694, file: !3, line: 4000, type: !2402)
!9700 = !DILocation(line: 4000, column: 58, scope: !9694)
!9701 = !DILocalVariable(name: "pneed_stall", arg: 4, scope: !9694, file: !3, line: 4001, type: !2219)
!9702 = !DILocation(line: 4001, column: 23, scope: !9694)
!9703 = !DILocalVariable(name: "expr", scope: !9694, file: !3, line: 4003, type: !2055)
!9704 = !DILocation(line: 4003, column: 10, scope: !9694)
!9705 = !DILocation(line: 4006, column: 3, scope: !9694)
!9706 = !DILocation(line: 4010, column: 28, scope: !9694)
!9707 = !DILocation(line: 4010, column: 3, scope: !9694)
!9708 = !DILocation(line: 4011, column: 23, scope: !9694)
!9709 = !DILocation(line: 4011, column: 3, scope: !9694)
!9710 = !DILocation(line: 4014, column: 29, scope: !9694)
!9711 = !DILocation(line: 4014, column: 10, scope: !9694)
!9712 = !DILocation(line: 4014, column: 8, scope: !9694)
!9713 = !DILocation(line: 4015, column: 7, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 4015, column: 7)
!9715 = !DILocation(line: 4015, column: 7, scope: !9694)
!9716 = !DILocation(line: 4017, column: 8, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 4016, column: 5)
!9718 = !DILocation(line: 4017, column: 20, scope: !9717)
!9719 = !DILocation(line: 4018, column: 14, scope: !9717)
!9720 = !DILocation(line: 4018, column: 7, scope: !9717)
!9721 = !DILocation(line: 4022, column: 27, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 4022, column: 7)
!9723 = !DILocation(line: 4022, column: 26, scope: !9722)
!9724 = !DILocation(line: 4022, column: 35, scope: !9722)
!9725 = !DILocation(line: 4022, column: 41, scope: !9722)
!9726 = !DILocation(line: 4022, column: 48, scope: !9722)
!9727 = !DILocation(line: 4022, column: 9, scope: !9722)
!9728 = !DILocation(line: 4022, column: 7, scope: !9694)
!9729 = !DILocation(line: 4024, column: 21, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9722, file: !3, line: 4023, column: 5)
!9731 = !DILocation(line: 4025, column: 7, scope: !9730)
!9732 = !DILocation(line: 4029, column: 3, scope: !9694)
!9733 = !DILocation(line: 4030, column: 3, scope: !9694)
!9734 = !DILocation(line: 4031, column: 1, scope: !9694)
!9735 = distinct !DISubprogram(name: "invoke_reorder_hooks", scope: !3, file: !3, line: 4064, type: !9736, scopeLine: 4065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9736 = !DISubroutineType(types: !9737)
!9737 = !{!849, !2402}
!9738 = !DILocalVariable(name: "fence", arg: 1, scope: !9735, file: !3, line: 4064, type: !2402)
!9739 = !DILocation(line: 4064, column: 31, scope: !9735)
!9740 = !DILocalVariable(name: "issue_more", scope: !9735, file: !3, line: 4066, type: !849)
!9741 = !DILocation(line: 4066, column: 7, scope: !9735)
!9742 = !DILocalVariable(name: "ran_hook", scope: !9735, file: !3, line: 4067, type: !1057)
!9743 = !DILocation(line: 4067, column: 8, scope: !9735)
!9744 = !DILocation(line: 4071, column: 7, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 4071, column: 7)
!9746 = !DILocation(line: 4071, column: 34, scope: !9745)
!9747 = !DILocation(line: 4071, column: 7, scope: !9735)
!9748 = !DILocation(line: 4073, column: 25, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 4073, column: 11)
!9750 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 4072, column: 5)
!9751 = !DILocation(line: 4073, column: 11, scope: !9749)
!9752 = !DILocation(line: 4074, column: 11, scope: !9749)
!9753 = !DILocation(line: 4074, column: 15, scope: !9749)
!9754 = !DILocation(line: 4075, column: 11, scope: !9749)
!9755 = !DILocation(line: 4075, column: 20, scope: !9749)
!9756 = !DILocation(line: 4075, column: 28, scope: !9749)
!9757 = !DILocation(line: 4073, column: 11, scope: !9750)
!9758 = !DILocation(line: 4079, column: 15, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 4079, column: 15)
!9760 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 4076, column: 9)
!9761 = !DILocation(line: 4079, column: 15, scope: !9760)
!9762 = !DILocation(line: 4080, column: 13, scope: !9759)
!9763 = !DILocation(line: 4083, column: 29, scope: !9760)
!9764 = !DILocation(line: 4083, column: 38, scope: !9760)
!9765 = !DILocation(line: 4083, column: 50, scope: !9760)
!9766 = !DILocation(line: 4084, column: 38, scope: !9760)
!9767 = !DILocation(line: 4085, column: 54, scope: !9760)
!9768 = !DILocation(line: 4083, column: 15, scope: !9760)
!9769 = !DILocation(line: 4083, column: 13, scope: !9760)
!9770 = !DILocation(line: 4087, column: 15, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 4087, column: 15)
!9772 = !DILocation(line: 4087, column: 15, scope: !9760)
!9773 = !DILocation(line: 4088, column: 13, scope: !9771)
!9774 = !DILocation(line: 4090, column: 20, scope: !9760)
!9775 = !DILocation(line: 4091, column: 9, scope: !9760)
!9776 = !DILocation(line: 4094, column: 22, scope: !9749)
!9777 = !DILocation(line: 4094, column: 20, scope: !9749)
!9778 = !DILocation(line: 4095, column: 5, scope: !9750)
!9779 = !DILocation(line: 4096, column: 26, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 4096, column: 12)
!9781 = !DILocation(line: 4096, column: 12, scope: !9780)
!9782 = !DILocation(line: 4097, column: 12, scope: !9780)
!9783 = !DILocation(line: 4097, column: 16, scope: !9780)
!9784 = !DILocation(line: 4096, column: 12, scope: !9745)
!9785 = !DILocation(line: 4099, column: 17, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9787, file: !3, line: 4099, column: 11)
!9787 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 4098, column: 5)
!9788 = !DILocation(line: 4099, column: 25, scope: !9786)
!9789 = !DILocation(line: 4099, column: 11, scope: !9787)
!9790 = !DILocation(line: 4101, column: 25, scope: !9786)
!9791 = !DILocation(line: 4101, column: 35, scope: !9786)
!9792 = !DILocation(line: 4101, column: 47, scope: !9786)
!9793 = !DILocation(line: 4102, column: 35, scope: !9786)
!9794 = !DILocation(line: 4103, column: 51, scope: !9786)
!9795 = !DILocation(line: 4101, column: 11, scope: !9786)
!9796 = !DILocation(line: 4100, column: 20, scope: !9786)
!9797 = !DILocation(line: 4100, column: 9, scope: !9786)
!9798 = !DILocation(line: 4106, column: 15, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 4106, column: 15)
!9800 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 4105, column: 9)
!9801 = !DILocation(line: 4106, column: 15, scope: !9800)
!9802 = !DILocation(line: 4107, column: 13, scope: !9799)
!9803 = !DILocation(line: 4110, column: 27, scope: !9800)
!9804 = !DILocation(line: 4110, column: 37, scope: !9800)
!9805 = !DILocation(line: 4110, column: 49, scope: !9800)
!9806 = !DILocation(line: 4111, column: 43, scope: !9800)
!9807 = !DILocation(line: 4111, column: 37, scope: !9800)
!9808 = !DILocation(line: 4112, column: 39, scope: !9800)
!9809 = !DILocation(line: 4113, column: 53, scope: !9800)
!9810 = !DILocation(line: 4110, column: 13, scope: !9800)
!9811 = !DILocation(line: 4109, column: 22, scope: !9800)
!9812 = !DILocation(line: 4115, column: 15, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 4115, column: 15)
!9814 = !DILocation(line: 4115, column: 15, scope: !9800)
!9815 = !DILocation(line: 4116, column: 13, scope: !9813)
!9816 = !DILocation(line: 4119, column: 16, scope: !9787)
!9817 = !DILocation(line: 4120, column: 5, scope: !9787)
!9818 = !DILocation(line: 4122, column: 18, scope: !9780)
!9819 = !DILocation(line: 4122, column: 16, scope: !9780)
!9820 = !DILocation(line: 4126, column: 7, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 4126, column: 7)
!9822 = !DILocation(line: 4126, column: 18, scope: !9821)
!9823 = !DILocation(line: 4126, column: 21, scope: !9821)
!9824 = !DILocation(line: 4126, column: 7, scope: !9735)
!9825 = !DILocalVariable(name: "i", scope: !9826, file: !3, line: 4128, type: !849)
!9826 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 4127, column: 5)
!9827 = !DILocation(line: 4128, column: 11, scope: !9826)
!9828 = !DILocalVariable(name: "j", scope: !9826, file: !3, line: 4128, type: !849)
!9829 = !DILocation(line: 4128, column: 14, scope: !9826)
!9830 = !DILocalVariable(name: "n", scope: !9826, file: !3, line: 4128, type: !849)
!9831 = !DILocation(line: 4128, column: 17, scope: !9826)
!9832 = !DILocalVariable(name: "arr", scope: !9826, file: !3, line: 4129, type: !5250)
!9833 = !DILocation(line: 4129, column: 12, scope: !9826)
!9834 = !DILocation(line: 4129, column: 24, scope: !9826)
!9835 = !DILocalVariable(name: "vec", scope: !9826, file: !3, line: 4130, type: !7007)
!9836 = !DILocation(line: 4130, column: 15, scope: !9826)
!9837 = !DILocation(line: 4130, column: 21, scope: !9826)
!9838 = !DILocation(line: 4132, column: 14, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9826, file: !3, line: 4132, column: 7)
!9840 = !DILocation(line: 4132, column: 29, scope: !9839)
!9841 = !DILocation(line: 4132, column: 21, scope: !9839)
!9842 = !DILocation(line: 4132, column: 12, scope: !9839)
!9843 = !DILocation(line: 4132, column: 38, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9839, file: !3, line: 4132, column: 7)
!9845 = !DILocation(line: 4132, column: 42, scope: !9844)
!9846 = !DILocation(line: 4132, column: 40, scope: !9844)
!9847 = !DILocation(line: 4132, column: 7, scope: !9839)
!9848 = !DILocation(line: 4133, column: 13, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9844, file: !3, line: 4133, column: 13)
!9850 = !DILocation(line: 4133, column: 39, scope: !9849)
!9851 = !DILocation(line: 4133, column: 43, scope: !9849)
!9852 = !DILocation(line: 4133, column: 36, scope: !9849)
!9853 = !DILocation(line: 4133, column: 13, scope: !9844)
!9854 = !DILocalVariable(name: "tmp", scope: !9855, file: !3, line: 4135, type: !2055)
!9855 = distinct !DILexicalBlock(scope: !9849, file: !3, line: 4134, column: 11)
!9856 = !DILocation(line: 4135, column: 20, scope: !9855)
!9857 = !DILocation(line: 4137, column: 22, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 4137, column: 13)
!9859 = !DILocation(line: 4137, column: 20, scope: !9858)
!9860 = !DILocation(line: 4137, column: 18, scope: !9858)
!9861 = !DILocation(line: 4137, column: 25, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 4137, column: 13)
!9863 = !DILocation(line: 4137, column: 29, scope: !9862)
!9864 = !DILocation(line: 4137, column: 27, scope: !9862)
!9865 = !DILocation(line: 4137, column: 13, scope: !9858)
!9866 = !DILocation(line: 4138, column: 19, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 4138, column: 19)
!9868 = !DILocation(line: 4138, column: 45, scope: !9867)
!9869 = !DILocation(line: 4138, column: 49, scope: !9867)
!9870 = !DILocation(line: 4138, column: 42, scope: !9867)
!9871 = !DILocation(line: 4138, column: 19, scope: !9862)
!9872 = !DILocation(line: 4139, column: 17, scope: !9867)
!9873 = !DILocation(line: 4138, column: 50, scope: !9867)
!9874 = !DILocation(line: 4137, column: 33, scope: !9862)
!9875 = !DILocation(line: 4137, column: 13, scope: !9862)
!9876 = distinct !{!9876, !9865, !9877}
!9877 = !DILocation(line: 4139, column: 17, scope: !9858)
!9878 = !DILocation(line: 4140, column: 13, scope: !9855)
!9879 = !DILocation(line: 4142, column: 19, scope: !9855)
!9880 = !DILocation(line: 4142, column: 23, scope: !9855)
!9881 = !DILocation(line: 4142, column: 17, scope: !9855)
!9882 = !DILocation(line: 4143, column: 22, scope: !9855)
!9883 = !DILocation(line: 4143, column: 26, scope: !9855)
!9884 = !DILocation(line: 4143, column: 13, scope: !9855)
!9885 = !DILocation(line: 4143, column: 17, scope: !9855)
!9886 = !DILocation(line: 4143, column: 20, scope: !9855)
!9887 = !DILocation(line: 4144, column: 22, scope: !9855)
!9888 = !DILocation(line: 4144, column: 13, scope: !9855)
!9889 = !DILocation(line: 4144, column: 17, scope: !9855)
!9890 = !DILocation(line: 4144, column: 20, scope: !9855)
!9891 = !DILocation(line: 4145, column: 11, scope: !9855)
!9892 = !DILocation(line: 4133, column: 44, scope: !9849)
!9893 = !DILocation(line: 4132, column: 46, scope: !9844)
!9894 = !DILocation(line: 4132, column: 7, scope: !9844)
!9895 = distinct !{!9895, !9847, !9896}
!9896 = !DILocation(line: 4145, column: 11, scope: !9839)
!9897 = !DILocation(line: 4146, column: 5, scope: !9826)
!9898 = !DILocation(line: 4148, column: 10, scope: !9735)
!9899 = !DILocation(line: 4148, column: 3, scope: !9735)
!9900 = distinct !DISubprogram(name: "invoke_dfa_lookahead_guard", scope: !3, file: !3, line: 4172, type: !9901, scopeLine: 4173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!9901 = !DISubroutineType(types: !9902)
!9902 = !{!849}
!9903 = !DILocalVariable(name: "i", scope: !9900, file: !3, line: 4174, type: !849)
!9904 = !DILocation(line: 4174, column: 7, scope: !9900)
!9905 = !DILocalVariable(name: "n", scope: !9900, file: !3, line: 4174, type: !849)
!9906 = !DILocation(line: 4174, column: 10, scope: !9900)
!9907 = !DILocalVariable(name: "have_hook", scope: !9900, file: !3, line: 4175, type: !1057)
!9908 = !DILocation(line: 4175, column: 8, scope: !9900)
!9909 = !DILocation(line: 4176, column: 21, scope: !9900)
!9910 = !DILocation(line: 4176, column: 63, scope: !9900)
!9911 = !DILocation(line: 4176, column: 7, scope: !9900)
!9912 = !DILocation(line: 4178, column: 7, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 4178, column: 7)
!9914 = !DILocation(line: 4178, column: 21, scope: !9913)
!9915 = !DILocation(line: 4178, column: 7, scope: !9900)
!9916 = !DILocation(line: 4179, column: 5, scope: !9913)
!9917 = !DILocation(line: 4179, column: 5, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 4179, column: 5)
!9919 = distinct !DILexicalBlock(scope: !9913, file: !3, line: 4179, column: 5)
!9920 = !DILocation(line: 4179, column: 5, scope: !9919)
!9921 = !DILocalVariable(name: "__j", scope: !9922, file: !3, line: 4179, type: !849)
!9922 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 4179, column: 5)
!9923 = !DILocation(line: 4179, column: 5, scope: !9922)
!9924 = !DILocalVariable(name: "__s", scope: !9922, file: !3, line: 4179, type: !817)
!9925 = !DILocation(line: 4181, column: 10, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 4181, column: 3)
!9927 = !DILocation(line: 4181, column: 17, scope: !9926)
!9928 = !DILocation(line: 4181, column: 8, scope: !9926)
!9929 = !DILocation(line: 4181, column: 22, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9926, file: !3, line: 4181, column: 3)
!9931 = !DILocation(line: 4181, column: 32, scope: !9930)
!9932 = !DILocation(line: 4181, column: 24, scope: !9930)
!9933 = !DILocation(line: 4181, column: 3, scope: !9926)
!9934 = !DILocalVariable(name: "expr", scope: !9935, file: !3, line: 4183, type: !2055)
!9935 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4182, column: 5)
!9936 = !DILocation(line: 4183, column: 14, scope: !9935)
!9937 = !DILocalVariable(name: "insn", scope: !9935, file: !3, line: 4184, type: !2132)
!9938 = !DILocation(line: 4184, column: 14, scope: !9935)
!9939 = !DILocalVariable(name: "r", scope: !9935, file: !3, line: 4185, type: !849)
!9940 = !DILocation(line: 4185, column: 11, scope: !9935)
!9941 = !DILocation(line: 4189, column: 37, scope: !9935)
!9942 = !DILocation(line: 4189, column: 14, scope: !9935)
!9943 = !DILocation(line: 4189, column: 12, scope: !9935)
!9944 = !DILocation(line: 4191, column: 13, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 4191, column: 11)
!9946 = !DILocation(line: 4191, column: 23, scope: !9945)
!9947 = !DILocation(line: 4191, column: 26, scope: !9945)
!9948 = !DILocation(line: 4191, column: 28, scope: !9945)
!9949 = !DILocation(line: 4191, column: 11, scope: !9935)
!9950 = !DILocation(line: 4192, column: 11, scope: !9945)
!9951 = !DILocation(line: 4192, column: 9, scope: !9945)
!9952 = !DILocation(line: 4194, column: 28, scope: !9945)
!9953 = !DILocation(line: 4194, column: 71, scope: !9945)
!9954 = !DILocation(line: 4194, column: 14, scope: !9945)
!9955 = !DILocation(line: 4194, column: 13, scope: !9945)
!9956 = !DILocation(line: 4194, column: 11, scope: !9945)
!9957 = !DILocation(line: 4196, column: 7, scope: !9935)
!9958 = !DILocation(line: 4200, column: 7, scope: !9935)
!9959 = !DILocation(line: 4201, column: 22, scope: !9935)
!9960 = !DILocation(line: 4201, column: 7, scope: !9935)
!9961 = !DILocation(line: 4201, column: 17, scope: !9935)
!9962 = !DILocation(line: 4201, column: 20, scope: !9935)
!9963 = !DILocation(line: 4202, column: 12, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 4202, column: 11)
!9965 = !DILocation(line: 4202, column: 11, scope: !9935)
!9966 = !DILocation(line: 4203, column: 10, scope: !9964)
!9967 = !DILocation(line: 4203, column: 9, scope: !9964)
!9968 = !DILocation(line: 4205, column: 35, scope: !9935)
!9969 = !DILocation(line: 4205, column: 14, scope: !9935)
!9970 = !DILocation(line: 4205, column: 12, scope: !9935)
!9971 = !DILocation(line: 4207, column: 11, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 4207, column: 11)
!9973 = !DILocation(line: 4207, column: 25, scope: !9972)
!9974 = !DILocation(line: 4207, column: 11, scope: !9935)
!9975 = !DILocation(line: 4209, column: 23, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 4208, column: 9)
!9977 = !DILocation(line: 4209, column: 11, scope: !9976)
!9978 = !DILocation(line: 4210, column: 11, scope: !9976)
!9979 = !DILocation(line: 4210, column: 11, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 4210, column: 11)
!9981 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 4210, column: 11)
!9982 = !DILocation(line: 4210, column: 11, scope: !9981)
!9983 = !DILocalVariable(name: "__j", scope: !9984, file: !3, line: 4210, type: !849)
!9984 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 4210, column: 11)
!9985 = !DILocation(line: 4210, column: 11, scope: !9984)
!9986 = !DILocalVariable(name: "__s", scope: !9984, file: !3, line: 4210, type: !817)
!9987 = !DILocation(line: 4211, column: 9, scope: !9976)
!9988 = !DILocation(line: 4212, column: 5, scope: !9935)
!9989 = !DILocation(line: 4181, column: 42, scope: !9930)
!9990 = !DILocation(line: 4181, column: 3, scope: !9930)
!9991 = distinct !{!9991, !9933, !9992}
!9992 = !DILocation(line: 4212, column: 5, scope: !9926)
!9993 = !DILocation(line: 4214, column: 7, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 4214, column: 7)
!9995 = !DILocation(line: 4214, column: 21, scope: !9994)
!9996 = !DILocation(line: 4214, column: 7, scope: !9900)
!9997 = !DILocation(line: 4215, column: 5, scope: !9994)
!9998 = !DILocation(line: 4215, column: 5, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 4215, column: 5)
!10000 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 4215, column: 5)
!10001 = !DILocation(line: 4215, column: 5, scope: !10000)
!10002 = !DILocalVariable(name: "__j", scope: !10003, file: !3, line: 4215, type: !849)
!10003 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 4215, column: 5)
!10004 = !DILocation(line: 4215, column: 5, scope: !10003)
!10005 = !DILocalVariable(name: "__s", scope: !10003, file: !3, line: 4215, type: !817)
!10006 = !DILocation(line: 4216, column: 10, scope: !9900)
!10007 = !DILocation(line: 4216, column: 3, scope: !9900)
!10008 = distinct !DISubprogram(name: "calculate_privileged_insns", scope: !3, file: !3, line: 4221, type: !9901, scopeLine: 4222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!10009 = !DILocalVariable(name: "cur_expr", scope: !10008, file: !3, line: 4223, type: !2055)
!10010 = !DILocation(line: 4223, column: 10, scope: !10008)
!10011 = !DILocalVariable(name: "min_spec_expr", scope: !10008, file: !3, line: 4223, type: !2055)
!10012 = !DILocation(line: 4223, column: 20, scope: !10008)
!10013 = !DILocalVariable(name: "privileged_n", scope: !10008, file: !3, line: 4224, type: !849)
!10014 = !DILocation(line: 4224, column: 7, scope: !10008)
!10015 = !DILocalVariable(name: "i", scope: !10008, file: !3, line: 4224, type: !849)
!10016 = !DILocation(line: 4224, column: 25, scope: !10008)
!10017 = !DILocation(line: 4226, column: 10, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 4226, column: 3)
!10019 = !DILocation(line: 4226, column: 8, scope: !10018)
!10020 = !DILocation(line: 4226, column: 15, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 4226, column: 3)
!10022 = !DILocation(line: 4226, column: 25, scope: !10021)
!10023 = !DILocation(line: 4226, column: 17, scope: !10021)
!10024 = !DILocation(line: 4226, column: 3, scope: !10018)
!10025 = !DILocation(line: 4228, column: 11, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 4228, column: 11)
!10027 = distinct !DILexicalBlock(scope: !10021, file: !3, line: 4227, column: 5)
!10028 = !DILocation(line: 4228, column: 21, scope: !10026)
!10029 = !DILocation(line: 4228, column: 11, scope: !10027)
!10030 = !DILocation(line: 4229, column: 9, scope: !10026)
!10031 = !DILocation(line: 4231, column: 13, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 4231, column: 11)
!10033 = !DILocation(line: 4231, column: 11, scope: !10027)
!10034 = !DILocation(line: 4232, column: 39, scope: !10032)
!10035 = !DILocation(line: 4232, column: 18, scope: !10032)
!10036 = !DILocation(line: 4232, column: 16, scope: !10032)
!10037 = !DILocation(line: 4232, column: 2, scope: !10032)
!10038 = !DILocation(line: 4234, column: 39, scope: !10027)
!10039 = !DILocation(line: 4234, column: 18, scope: !10027)
!10040 = !DILocation(line: 4234, column: 16, scope: !10027)
!10041 = !DILocation(line: 4236, column: 11, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 4236, column: 11)
!10043 = !DILocation(line: 4236, column: 34, scope: !10042)
!10044 = !DILocation(line: 4236, column: 32, scope: !10042)
!10045 = !DILocation(line: 4236, column: 11, scope: !10027)
!10046 = !DILocation(line: 4237, column: 9, scope: !10042)
!10047 = !DILocation(line: 4239, column: 7, scope: !10027)
!10048 = !DILocation(line: 4240, column: 5, scope: !10027)
!10049 = !DILocation(line: 4226, column: 35, scope: !10021)
!10050 = !DILocation(line: 4226, column: 3, scope: !10021)
!10051 = distinct !{!10051, !10024, !10052}
!10052 = !DILocation(line: 4240, column: 5, scope: !10018)
!10053 = !DILocation(line: 4242, column: 7, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 4242, column: 7)
!10055 = !DILocation(line: 4242, column: 18, scope: !10054)
!10056 = !DILocation(line: 4242, column: 9, scope: !10054)
!10057 = !DILocation(line: 4242, column: 7, scope: !10008)
!10058 = !DILocation(line: 4243, column: 18, scope: !10054)
!10059 = !DILocation(line: 4243, column: 5, scope: !10054)
!10060 = !DILocation(line: 4245, column: 7, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 4245, column: 7)
!10062 = !DILocation(line: 4245, column: 21, scope: !10061)
!10063 = !DILocation(line: 4245, column: 7, scope: !10008)
!10064 = !DILocation(line: 4246, column: 5, scope: !10061)
!10065 = !DILocation(line: 4246, column: 5, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10067, file: !3, line: 4246, column: 5)
!10067 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 4246, column: 5)
!10068 = !DILocation(line: 4246, column: 5, scope: !10067)
!10069 = !DILocalVariable(name: "__j", scope: !10070, file: !3, line: 4246, type: !849)
!10070 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 4246, column: 5)
!10071 = !DILocation(line: 4246, column: 5, scope: !10070)
!10072 = !DILocalVariable(name: "__s", scope: !10070, file: !3, line: 4246, type: !817)
!10073 = !DILocation(line: 4248, column: 10, scope: !10008)
!10074 = !DILocation(line: 4248, column: 3, scope: !10008)
!10075 = distinct !DISubprogram(name: "choose_best_insn", scope: !3, file: !3, line: 4326, type: !10076, scopeLine: 4327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!10076 = !DISubroutineType(types: !10077)
!10077 = !{!849, !2402, !849, !2219}
!10078 = !DILocalVariable(name: "fence", arg: 1, scope: !10075, file: !3, line: 4326, type: !2402)
!10079 = !DILocation(line: 4326, column: 27, scope: !10075)
!10080 = !DILocalVariable(name: "privileged_n", arg: 2, scope: !10075, file: !3, line: 4326, type: !849)
!10081 = !DILocation(line: 4326, column: 38, scope: !10075)
!10082 = !DILocalVariable(name: "index", arg: 3, scope: !10075, file: !3, line: 4326, type: !2219)
!10083 = !DILocation(line: 4326, column: 57, scope: !10075)
!10084 = !DILocalVariable(name: "can_issue", scope: !10075, file: !3, line: 4328, type: !849)
!10085 = !DILocation(line: 4328, column: 7, scope: !10075)
!10086 = !DILocation(line: 4330, column: 7, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 4330, column: 7)
!10088 = !DILocation(line: 4330, column: 21, scope: !10087)
!10089 = !DILocation(line: 4330, column: 7, scope: !10075)
!10090 = !DILocation(line: 4332, column: 28, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 4331, column: 5)
!10092 = !DILocation(line: 4332, column: 26, scope: !10091)
!10093 = !DILocation(line: 4333, column: 38, scope: !10091)
!10094 = !DILocation(line: 4334, column: 30, scope: !10091)
!10095 = !DILocation(line: 4334, column: 51, scope: !10091)
!10096 = !DILocation(line: 4333, column: 19, scope: !10091)
!10097 = !DILocation(line: 4333, column: 17, scope: !10091)
!10098 = !DILocation(line: 4335, column: 11, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 4335, column: 11)
!10100 = !DILocation(line: 4335, column: 25, scope: !10099)
!10101 = !DILocation(line: 4335, column: 11, scope: !10091)
!10102 = !DILocation(line: 4336, column: 9, scope: !10099)
!10103 = !DILocation(line: 4336, column: 9, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 4336, column: 9)
!10105 = distinct !DILexicalBlock(scope: !10099, file: !3, line: 4336, column: 9)
!10106 = !DILocation(line: 4336, column: 9, scope: !10105)
!10107 = !DILocalVariable(name: "__j", scope: !10108, file: !3, line: 4336, type: !849)
!10108 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 4336, column: 9)
!10109 = !DILocation(line: 4336, column: 9, scope: !10108)
!10110 = !DILocalVariable(name: "__s", scope: !10108, file: !3, line: 4336, type: !817)
!10111 = !DILocation(line: 4338, column: 5, scope: !10091)
!10112 = !DILocalVariable(name: "i", scope: !10113, file: !3, line: 4342, type: !849)
!10113 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 4340, column: 5)
!10114 = !DILocation(line: 4342, column: 11, scope: !10113)
!10115 = !DILocation(line: 4344, column: 14, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 4344, column: 7)
!10117 = !DILocation(line: 4344, column: 12, scope: !10116)
!10118 = !DILocation(line: 4344, column: 19, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 4344, column: 7)
!10120 = !DILocation(line: 4344, column: 29, scope: !10119)
!10121 = !DILocation(line: 4344, column: 21, scope: !10119)
!10122 = !DILocation(line: 4344, column: 7, scope: !10116)
!10123 = !DILocalVariable(name: "expr", scope: !10124, file: !3, line: 4346, type: !2055)
!10124 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 4345, column: 2)
!10125 = !DILocation(line: 4346, column: 11, scope: !10124)
!10126 = !DILocation(line: 4346, column: 39, scope: !10124)
!10127 = !DILocation(line: 4346, column: 18, scope: !10124)
!10128 = !DILocation(line: 4348, column: 23, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 4348, column: 8)
!10130 = !DILocation(line: 4348, column: 29, scope: !10129)
!10131 = !DILocation(line: 4348, column: 8, scope: !10129)
!10132 = !DILocation(line: 4348, column: 36, scope: !10129)
!10133 = !DILocation(line: 4348, column: 8, scope: !10124)
!10134 = !DILocation(line: 4350, column: 20, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 4349, column: 6)
!10136 = !DILocation(line: 4350, column: 18, scope: !10135)
!10137 = !DILocation(line: 4351, column: 17, scope: !10135)
!10138 = !DILocation(line: 4351, column: 9, scope: !10135)
!10139 = !DILocation(line: 4351, column: 15, scope: !10135)
!10140 = !DILocation(line: 4353, column: 12, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 4353, column: 12)
!10142 = !DILocation(line: 4353, column: 26, scope: !10141)
!10143 = !DILocation(line: 4353, column: 12, scope: !10135)
!10144 = !DILocation(line: 4354, column: 3, scope: !10141)
!10145 = !DILocation(line: 4354, column: 3, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10147, file: !3, line: 4354, column: 3)
!10147 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 4354, column: 3)
!10148 = !DILocation(line: 4354, column: 3, scope: !10147)
!10149 = !DILocalVariable(name: "__j", scope: !10150, file: !3, line: 4354, type: !849)
!10150 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 4354, column: 3)
!10151 = !DILocation(line: 4354, column: 3, scope: !10150)
!10152 = !DILocalVariable(name: "__s", scope: !10150, file: !3, line: 4354, type: !817)
!10153 = !DILocation(line: 4356, column: 8, scope: !10135)
!10154 = !DILocation(line: 4358, column: 2, scope: !10124)
!10155 = !DILocation(line: 4344, column: 39, scope: !10119)
!10156 = !DILocation(line: 4344, column: 7, scope: !10119)
!10157 = distinct !{!10157, !10122, !10158}
!10158 = !DILocation(line: 4358, column: 2, scope: !10116)
!10159 = !DILocation(line: 4360, column: 11, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 4360, column: 11)
!10161 = !DILocation(line: 4360, column: 22, scope: !10160)
!10162 = !DILocation(line: 4360, column: 13, scope: !10160)
!10163 = !DILocation(line: 4360, column: 11, scope: !10113)
!10164 = !DILocation(line: 4362, column: 14, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10160, file: !3, line: 4361, column: 2)
!10166 = !DILocation(line: 4363, column: 5, scope: !10165)
!10167 = !DILocation(line: 4363, column: 11, scope: !10165)
!10168 = !DILocation(line: 4364, column: 2, scope: !10165)
!10169 = !DILocation(line: 4367, column: 10, scope: !10075)
!10170 = !DILocation(line: 4367, column: 3, scope: !10075)
!10171 = distinct !DISubprogram(name: "find_expr_for_ready", scope: !3, file: !3, line: 4156, type: !10172, scopeLine: 4157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!10172 = !DISubroutineType(types: !10173)
!10173 = !{!2055, !849, !1057}
!10174 = !DILocalVariable(name: "index", arg: 1, scope: !10171, file: !3, line: 4156, type: !849)
!10175 = !DILocation(line: 4156, column: 26, scope: !10171)
!10176 = !DILocalVariable(name: "follow_ready_element", arg: 2, scope: !10171, file: !3, line: 4156, type: !1057)
!10177 = !DILocation(line: 4156, column: 38, scope: !10171)
!10178 = !DILocalVariable(name: "expr", scope: !10171, file: !3, line: 4158, type: !2055)
!10179 = !DILocation(line: 4158, column: 10, scope: !10171)
!10180 = !DILocalVariable(name: "real_index", scope: !10171, file: !3, line: 4159, type: !849)
!10181 = !DILocation(line: 4159, column: 7, scope: !10171)
!10182 = !DILocation(line: 4161, column: 16, scope: !10171)
!10183 = !DILocation(line: 4161, column: 45, scope: !10171)
!10184 = !DILocation(line: 4161, column: 53, scope: !10171)
!10185 = !DILocation(line: 4161, column: 51, scope: !10171)
!10186 = !DILocation(line: 4161, column: 61, scope: !10171)
!10187 = !DILocation(line: 4161, column: 14, scope: !10171)
!10188 = !DILocation(line: 4163, column: 10, scope: !10171)
!10189 = !DILocation(line: 4163, column: 8, scope: !10171)
!10190 = !DILocation(line: 4164, column: 3, scope: !10171)
!10191 = !DILocation(line: 4166, column: 10, scope: !10171)
!10192 = !DILocation(line: 4166, column: 3, scope: !10171)
!10193 = distinct !DISubprogram(name: "invoke_aftermath_hooks", scope: !3, file: !3, line: 4256, type: !10194, scopeLine: 4257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!10194 = !DISubroutineType(types: !10195)
!10195 = !{!849, !2402, !825, !849}
!10196 = !DILocalVariable(name: "fence", arg: 1, scope: !10193, file: !3, line: 4256, type: !2402)
!10197 = !DILocation(line: 4256, column: 33, scope: !10193)
!10198 = !DILocalVariable(name: "best_insn", arg: 2, scope: !10193, file: !3, line: 4256, type: !825)
!10199 = !DILocation(line: 4256, column: 44, scope: !10193)
!10200 = !DILocalVariable(name: "issue_more", arg: 3, scope: !10193, file: !3, line: 4256, type: !849)
!10201 = !DILocation(line: 4256, column: 59, scope: !10193)
!10202 = !DILocation(line: 4258, column: 3, scope: !10193)
!10203 = !DILocation(line: 4261, column: 22, scope: !10193)
!10204 = !DILocation(line: 4261, column: 33, scope: !10193)
!10205 = !DILocation(line: 4261, column: 3, scope: !10193)
!10206 = !DILocation(line: 4263, column: 21, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 4263, column: 7)
!10208 = !DILocation(line: 4263, column: 7, scope: !10207)
!10209 = !DILocation(line: 4263, column: 7, scope: !10193)
!10210 = !DILocation(line: 4265, column: 15, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 4264, column: 5)
!10212 = !DILocation(line: 4265, column: 27, scope: !10211)
!10213 = !DILocation(line: 4265, column: 48, scope: !10211)
!10214 = !DILocation(line: 4265, column: 7, scope: !10211)
!10215 = !DILocation(line: 4267, column: 23, scope: !10211)
!10216 = !DILocation(line: 4267, column: 39, scope: !10211)
!10217 = !DILocation(line: 4267, column: 51, scope: !10211)
!10218 = !DILocation(line: 4267, column: 66, scope: !10211)
!10219 = !DILocation(line: 4268, column: 39, scope: !10211)
!10220 = !DILocation(line: 4267, column: 9, scope: !10211)
!10221 = !DILocation(line: 4266, column: 18, scope: !10211)
!10222 = !DILocation(line: 4269, column: 15, scope: !10211)
!10223 = !DILocation(line: 4269, column: 36, scope: !10211)
!10224 = !DILocation(line: 4269, column: 48, scope: !10211)
!10225 = !DILocation(line: 4269, column: 7, scope: !10211)
!10226 = !DILocation(line: 4270, column: 5, scope: !10211)
!10227 = !DILocation(line: 4271, column: 12, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 4271, column: 12)
!10229 = !DILocation(line: 4271, column: 43, scope: !10228)
!10230 = !DILocation(line: 4272, column: 12, scope: !10228)
!10231 = !DILocation(line: 4272, column: 15, scope: !10228)
!10232 = !DILocation(line: 4272, column: 46, scope: !10228)
!10233 = !DILocation(line: 4271, column: 12, scope: !10207)
!10234 = !DILocation(line: 4273, column: 15, scope: !10228)
!10235 = !DILocation(line: 4273, column: 5, scope: !10228)
!10236 = !DILocation(line: 4275, column: 10, scope: !10193)
!10237 = !DILocation(line: 4275, column: 3, scope: !10193)
!10238 = distinct !DISubprogram(name: "process_pipelined_exprs", scope: !3, file: !3, line: 3427, type: !10239, scopeLine: 3428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!10239 = !DISubroutineType(types: !10240)
!10240 = !{null, !6872}
!10241 = !DILocalVariable(name: "av_ptr", arg: 1, scope: !10238, file: !3, line: 3427, type: !6872)
!10242 = !DILocation(line: 3427, column: 36, scope: !10238)
!10243 = !DILocalVariable(name: "expr", scope: !10238, file: !3, line: 3429, type: !2055)
!10244 = !DILocation(line: 3429, column: 10, scope: !10238)
!10245 = !DILocalVariable(name: "si", scope: !10238, file: !3, line: 3430, type: !3060)
!10246 = !DILocation(line: 3430, column: 19, scope: !10238)
!10247 = !DILocation(line: 3434, column: 3, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 3434, column: 3)
!10249 = !DILocation(line: 3434, column: 3, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 3434, column: 3)
!10251 = !DILocation(line: 3436, column: 11, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10253, file: !3, line: 3436, column: 11)
!10253 = distinct !DILexicalBlock(scope: !10250, file: !3, line: 3435, column: 5)
!10254 = !DILocation(line: 3437, column: 7, scope: !10252)
!10255 = !DILocation(line: 3437, column: 4, scope: !10252)
!10256 = !DILocation(line: 3436, column: 11, scope: !10253)
!10257 = !DILocation(line: 3438, column: 2, scope: !10252)
!10258 = !DILocation(line: 3439, column: 5, scope: !10253)
!10259 = distinct !{!10259, !10247, !10260}
!10260 = !DILocation(line: 3439, column: 5, scope: !10248)
!10261 = !DILocation(line: 3440, column: 1, scope: !10238)
!10262 = distinct !DISubprogram(name: "process_spec_exprs", scope: !3, file: !3, line: 3444, type: !10239, scopeLine: 3445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!10263 = !DILocalVariable(name: "av_ptr", arg: 1, scope: !10262, file: !3, line: 3444, type: !6872)
!10264 = !DILocation(line: 3444, column: 31, scope: !10262)
!10265 = !DILocalVariable(name: "try_data_p", scope: !10262, file: !3, line: 3446, type: !1057)
!10266 = !DILocation(line: 3446, column: 8, scope: !10262)
!10267 = !DILocalVariable(name: "try_control_p", scope: !10262, file: !3, line: 3447, type: !1057)
!10268 = !DILocation(line: 3447, column: 8, scope: !10262)
!10269 = !DILocalVariable(name: "expr", scope: !10262, file: !3, line: 3448, type: !2055)
!10270 = !DILocation(line: 3448, column: 10, scope: !10262)
!10271 = !DILocalVariable(name: "si", scope: !10262, file: !3, line: 3449, type: !3060)
!10272 = !DILocation(line: 3449, column: 19, scope: !10262)
!10273 = !DILocation(line: 3451, column: 7, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 3451, column: 7)
!10275 = !DILocation(line: 3451, column: 17, scope: !10274)
!10276 = !DILocation(line: 3451, column: 7, scope: !10262)
!10277 = !DILocation(line: 3452, column: 5, scope: !10274)
!10278 = !DILocation(line: 3456, column: 3, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 3456, column: 3)
!10280 = !DILocation(line: 3456, column: 3, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10279, file: !3, line: 3456, column: 3)
!10282 = !DILocalVariable(name: "ds", scope: !10283, file: !3, line: 3458, type: !2089)
!10283 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 3457, column: 5)
!10284 = !DILocation(line: 3458, column: 12, scope: !10283)
!10285 = !DILocation(line: 3460, column: 12, scope: !10283)
!10286 = !DILocation(line: 3460, column: 10, scope: !10283)
!10287 = !DILocation(line: 3463, column: 12, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 3463, column: 11)
!10289 = !DILocation(line: 3463, column: 15, scope: !10288)
!10290 = !DILocation(line: 3464, column: 11, scope: !10288)
!10291 = !DILocation(line: 3464, column: 24, scope: !10288)
!10292 = !DILocation(line: 3464, column: 15, scope: !10288)
!10293 = !DILocation(line: 3464, column: 30, scope: !10288)
!10294 = !DILocation(line: 3464, column: 41, scope: !10288)
!10295 = !DILocation(line: 3464, column: 28, scope: !10288)
!10296 = !DILocation(line: 3465, column: 15, scope: !10288)
!10297 = !DILocation(line: 3465, column: 18, scope: !10288)
!10298 = !DILocation(line: 3465, column: 43, scope: !10288)
!10299 = !DILocation(line: 3465, column: 54, scope: !10288)
!10300 = !DILocation(line: 3465, column: 41, scope: !10288)
!10301 = !DILocation(line: 3466, column: 8, scope: !10288)
!10302 = !DILocation(line: 3466, column: 12, scope: !10288)
!10303 = !DILocation(line: 3466, column: 25, scope: !10288)
!10304 = !DILocation(line: 3467, column: 5, scope: !10288)
!10305 = !DILocation(line: 3467, column: 9, scope: !10288)
!10306 = !DILocation(line: 3467, column: 12, scope: !10288)
!10307 = !DILocation(line: 3468, column: 5, scope: !10288)
!10308 = !DILocation(line: 3468, column: 9, scope: !10288)
!10309 = !DILocation(line: 3468, column: 12, scope: !10288)
!10310 = !DILocation(line: 3463, column: 11, scope: !10283)
!10311 = !DILocation(line: 3470, column: 11, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10288, file: !3, line: 3469, column: 9)
!10313 = !DILocation(line: 3471, column: 11, scope: !10312)
!10314 = !DILocation(line: 3474, column: 12, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 3474, column: 11)
!10316 = !DILocation(line: 3474, column: 23, scope: !10315)
!10317 = !DILocation(line: 3474, column: 29, scope: !10315)
!10318 = !DILocation(line: 3475, column: 11, scope: !10315)
!10319 = !DILocation(line: 3475, column: 16, scope: !10315)
!10320 = !DILocation(line: 3475, column: 19, scope: !10315)
!10321 = !DILocation(line: 3474, column: 11, scope: !10283)
!10322 = !DILocation(line: 3476, column: 20, scope: !10315)
!10323 = !DILocation(line: 3476, column: 9, scope: !10315)
!10324 = !DILocation(line: 3478, column: 12, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 3478, column: 11)
!10326 = !DILocation(line: 3478, column: 23, scope: !10325)
!10327 = !DILocation(line: 3478, column: 29, scope: !10325)
!10328 = !DILocation(line: 3479, column: 11, scope: !10325)
!10329 = !DILocation(line: 3479, column: 16, scope: !10325)
!10330 = !DILocation(line: 3479, column: 19, scope: !10325)
!10331 = !DILocation(line: 3478, column: 11, scope: !10283)
!10332 = !DILocation(line: 3480, column: 23, scope: !10325)
!10333 = !DILocation(line: 3480, column: 9, scope: !10325)
!10334 = !DILocation(line: 3481, column: 5, scope: !10283)
!10335 = distinct !{!10335, !10278, !10336}
!10336 = !DILocation(line: 3481, column: 5, scope: !10279)
!10337 = !DILocation(line: 3483, column: 3, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 3483, column: 3)
!10339 = !DILocation(line: 3483, column: 3, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 3483, column: 3)
!10341 = !DILocalVariable(name: "ds", scope: !10342, file: !3, line: 3485, type: !2089)
!10342 = distinct !DILexicalBlock(scope: !10340, file: !3, line: 3484, column: 5)
!10343 = !DILocation(line: 3485, column: 12, scope: !10342)
!10344 = !DILocation(line: 3487, column: 12, scope: !10342)
!10345 = !DILocation(line: 3487, column: 10, scope: !10342)
!10346 = !DILocation(line: 3489, column: 11, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 3489, column: 11)
!10348 = !DILocation(line: 3489, column: 14, scope: !10347)
!10349 = !DILocation(line: 3489, column: 11, scope: !10342)
!10350 = !DILocation(line: 3491, column: 16, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 3491, column: 15)
!10352 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 3490, column: 9)
!10353 = !DILocation(line: 3491, column: 19, scope: !10351)
!10354 = !DILocation(line: 3491, column: 33, scope: !10351)
!10355 = !DILocation(line: 3491, column: 37, scope: !10351)
!10356 = !DILocation(line: 3491, column: 15, scope: !10352)
!10357 = !DILocation(line: 3494, column: 13, scope: !10351)
!10358 = !DILocation(line: 3496, column: 16, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 3496, column: 15)
!10360 = !DILocation(line: 3496, column: 19, scope: !10359)
!10361 = !DILocation(line: 3496, column: 36, scope: !10359)
!10362 = !DILocation(line: 3496, column: 40, scope: !10359)
!10363 = !DILocation(line: 3496, column: 15, scope: !10352)
!10364 = !DILocation(line: 3499, column: 13, scope: !10359)
!10365 = !DILocation(line: 3500, column: 9, scope: !10352)
!10366 = !DILocation(line: 3501, column: 5, scope: !10342)
!10367 = distinct !{!10367, !10337, !10368}
!10368 = !DILocation(line: 3501, column: 5, scope: !10338)
!10369 = !DILocation(line: 3502, column: 1, scope: !10262)
!10370 = distinct !DISubprogram(name: "process_use_exprs", scope: !3, file: !3, line: 3509, type: !10371, scopeLine: 3510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!10371 = !DISubroutineType(types: !10372)
!10372 = !{!2055, !6872}
!10373 = !DILocalVariable(name: "av_ptr", arg: 1, scope: !10370, file: !3, line: 3509, type: !6872)
!10374 = !DILocation(line: 3509, column: 30, scope: !10370)
!10375 = !DILocalVariable(name: "expr", scope: !10370, file: !3, line: 3511, type: !2055)
!10376 = !DILocation(line: 3511, column: 10, scope: !10370)
!10377 = !DILocalVariable(name: "si", scope: !10370, file: !3, line: 3512, type: !3060)
!10378 = !DILocation(line: 3512, column: 19, scope: !10370)
!10379 = !DILocalVariable(name: "uses_present_p", scope: !10370, file: !3, line: 3513, type: !1057)
!10380 = !DILocation(line: 3513, column: 8, scope: !10370)
!10381 = !DILocalVariable(name: "try_uses_p", scope: !10370, file: !3, line: 3514, type: !1057)
!10382 = !DILocation(line: 3514, column: 8, scope: !10370)
!10383 = !DILocation(line: 3516, column: 3, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 3516, column: 3)
!10385 = !DILocation(line: 3516, column: 3, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10384, file: !3, line: 3516, column: 3)
!10387 = !DILocation(line: 3519, column: 27, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !3, line: 3519, column: 11)
!10389 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 3517, column: 5)
!10390 = !DILocation(line: 3519, column: 11, scope: !10388)
!10391 = !DILocation(line: 3519, column: 49, scope: !10388)
!10392 = !DILocation(line: 3519, column: 11, scope: !10389)
!10393 = !DILocation(line: 3523, column: 15, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 3523, column: 15)
!10395 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 3520, column: 9)
!10396 = !DILocation(line: 3523, column: 39, scope: !10394)
!10397 = !DILocation(line: 3523, column: 15, scope: !10395)
!10398 = !DILocation(line: 3525, column: 19, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 3525, column: 19)
!10400 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 3524, column: 13)
!10401 = !DILocation(line: 3525, column: 48, scope: !10399)
!10402 = !DILocation(line: 3525, column: 19, scope: !10400)
!10403 = !DILocation(line: 3526, column: 24, scope: !10399)
!10404 = !DILocation(line: 3526, column: 17, scope: !10399)
!10405 = !DILocation(line: 3528, column: 15, scope: !10400)
!10406 = !DILocation(line: 3529, column: 13, scope: !10400)
!10407 = !DILocation(line: 3532, column: 15, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 3531, column: 13)
!10409 = !DILocation(line: 3534, column: 30, scope: !10408)
!10410 = !DILocation(line: 3536, column: 9, scope: !10395)
!10411 = !DILocation(line: 3538, column: 20, scope: !10388)
!10412 = !DILocation(line: 3539, column: 5, scope: !10389)
!10413 = distinct !{!10413, !10383, !10414}
!10414 = !DILocation(line: 3539, column: 5, scope: !10384)
!10415 = !DILocation(line: 3541, column: 7, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 3541, column: 7)
!10417 = !DILocation(line: 3541, column: 7, scope: !10370)
!10418 = !DILocation(line: 3545, column: 12, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !3, line: 3545, column: 11)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 3542, column: 5)
!10421 = !DILocation(line: 3545, column: 11, scope: !10420)
!10422 = !DILocation(line: 3547, column: 11, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 3547, column: 11)
!10424 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 3546, column: 9)
!10425 = !DILocation(line: 3547, column: 11, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 3547, column: 11)
!10427 = !DILocation(line: 3548, column: 17, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10426, file: !3, line: 3548, column: 17)
!10429 = !DILocation(line: 3548, column: 50, scope: !10428)
!10430 = !DILocation(line: 3548, column: 17, scope: !10426)
!10431 = !DILocation(line: 3549, column: 15, scope: !10428)
!10432 = !DILocation(line: 3548, column: 52, scope: !10428)
!10433 = distinct !{!10433, !10422, !10434}
!10434 = !DILocation(line: 3549, column: 38, scope: !10423)
!10435 = !DILocation(line: 3550, column: 9, scope: !10424)
!10436 = !DILocation(line: 3553, column: 11, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 3553, column: 11)
!10438 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 3552, column: 9)
!10439 = !DILocation(line: 3553, column: 11, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 3553, column: 11)
!10441 = !DILocation(line: 3555, column: 15, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 3554, column: 13)
!10443 = !DILocation(line: 3557, column: 19, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 3557, column: 19)
!10445 = !DILocation(line: 3557, column: 48, scope: !10444)
!10446 = !DILocation(line: 3557, column: 19, scope: !10442)
!10447 = !DILocation(line: 3558, column: 24, scope: !10444)
!10448 = !DILocation(line: 3558, column: 17, scope: !10444)
!10449 = !DILocation(line: 3560, column: 15, scope: !10442)
!10450 = !DILocation(line: 3561, column: 13, scope: !10442)
!10451 = distinct !{!10451, !10436, !10452}
!10452 = !DILocation(line: 3561, column: 13, scope: !10437)
!10453 = !DILocation(line: 3563, column: 5, scope: !10420)
!10454 = !DILocation(line: 3565, column: 3, scope: !10370)
!10455 = !DILocation(line: 3566, column: 1, scope: !10370)
!10456 = !DILocalVariable(name: "av", arg: 1, scope: !2398, file: !3, line: 3689, type: !2166)
!10457 = !DILocation(line: 3689, column: 27, scope: !2398)
!10458 = !DILocalVariable(name: "bnds", arg: 2, scope: !2398, file: !3, line: 3689, type: !2401)
!10459 = !DILocation(line: 3689, column: 39, scope: !2398)
!10460 = !DILocalVariable(name: "fence", arg: 3, scope: !2398, file: !3, line: 3689, type: !2402)
!10461 = !DILocation(line: 3689, column: 53, scope: !2398)
!10462 = !DILocalVariable(name: "pneed_stall", arg: 4, scope: !2398, file: !3, line: 3690, type: !2219)
!10463 = !DILocation(line: 3690, column: 23, scope: !2398)
!10464 = !DILocalVariable(name: "si", scope: !2398, file: !3, line: 3692, type: !3060)
!10465 = !DILocation(line: 3692, column: 19, scope: !2398)
!10466 = !DILocalVariable(name: "expr", scope: !2398, file: !3, line: 3693, type: !2055)
!10467 = !DILocation(line: 3693, column: 10, scope: !2398)
!10468 = !DILocalVariable(name: "sched_next_worked", scope: !2398, file: !3, line: 3694, type: !849)
!10469 = !DILocation(line: 3694, column: 7, scope: !2398)
!10470 = !DILocalVariable(name: "stalled", scope: !2398, file: !3, line: 3694, type: !849)
!10471 = !DILocation(line: 3694, column: 30, scope: !2398)
!10472 = !DILocalVariable(name: "n", scope: !2398, file: !3, line: 3694, type: !849)
!10473 = !DILocation(line: 3694, column: 39, scope: !2398)
!10474 = !DILocalVariable(name: "min_need_stall", scope: !2398, file: !3, line: 3696, type: !849)
!10475 = !DILocation(line: 3696, column: 7, scope: !2398)
!10476 = !DILocalVariable(name: "dc", scope: !2398, file: !3, line: 3697, type: !2169)
!10477 = !DILocation(line: 3697, column: 10, scope: !2398)
!10478 = !DILocation(line: 3697, column: 15, scope: !2398)
!10479 = !DILocation(line: 3701, column: 7, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 3701, column: 7)
!10481 = !DILocation(line: 3701, column: 10, scope: !10480)
!10482 = !DILocation(line: 3701, column: 7, scope: !2398)
!10483 = !DILocation(line: 3702, column: 5, scope: !10480)
!10484 = !DILocation(line: 3705, column: 7, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 3705, column: 7)
!10486 = !DILocation(line: 3705, column: 39, scope: !10485)
!10487 = !DILocation(line: 3705, column: 7, scope: !2398)
!10488 = !DILocation(line: 3706, column: 5, scope: !10485)
!10489 = !DILocation(line: 3710, column: 3, scope: !2398)
!10490 = !DILocation(line: 3711, column: 3, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 3711, column: 3)
!10492 = !DILocation(line: 3711, column: 3, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 3711, column: 3)
!10494 = !DILocation(line: 3713, column: 7, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 3712, column: 5)
!10496 = !DILocation(line: 3715, column: 7, scope: !10495)
!10497 = !DILocation(line: 3718, column: 35, scope: !10495)
!10498 = !DILocation(line: 3718, column: 7, scope: !10495)
!10499 = !DILocation(line: 3719, column: 5, scope: !10495)
!10500 = distinct !{!10500, !10490, !10501}
!10501 = !DILocation(line: 3719, column: 5, scope: !10491)
!10502 = !DILocation(line: 3723, column: 15, scope: !2398)
!10503 = !DILocation(line: 3723, column: 49, scope: !2398)
!10504 = !DILocation(line: 3723, column: 3, scope: !2398)
!10505 = !DILocation(line: 3732, column: 7, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 3732, column: 7)
!10507 = !DILocation(line: 3732, column: 7, scope: !2398)
!10508 = !DILocation(line: 3733, column: 41, scope: !10506)
!10509 = !DILocation(line: 3733, column: 17, scope: !10506)
!10510 = !DILocation(line: 3733, column: 5, scope: !10506)
!10511 = !DILocation(line: 3738, column: 12, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 3738, column: 3)
!10513 = !DILocation(line: 3738, column: 44, scope: !10512)
!10514 = !DILocation(line: 3738, column: 10, scope: !10512)
!10515 = !DILocation(line: 3738, column: 57, scope: !10512)
!10516 = !DILocation(line: 3738, column: 8, scope: !10512)
!10517 = !DILocation(line: 3738, column: 62, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 3738, column: 3)
!10519 = !DILocation(line: 3738, column: 64, scope: !10518)
!10520 = !DILocation(line: 3738, column: 3, scope: !10512)
!10521 = !DILocalVariable(name: "expr", scope: !10522, file: !3, line: 3740, type: !2055)
!10522 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 3739, column: 5)
!10523 = !DILocation(line: 3740, column: 14, scope: !10522)
!10524 = !DILocation(line: 3740, column: 21, scope: !10522)
!10525 = !DILocalVariable(name: "insn", scope: !10522, file: !3, line: 3741, type: !2132)
!10526 = !DILocation(line: 3741, column: 14, scope: !10522)
!10527 = !DILocation(line: 3741, column: 21, scope: !10522)
!10528 = !DILocalVariable(name: "target_available", scope: !10522, file: !3, line: 3742, type: !818)
!10529 = !DILocation(line: 3742, column: 12, scope: !10522)
!10530 = !DILocalVariable(name: "is_orig_reg_p", scope: !10522, file: !3, line: 3743, type: !1057)
!10531 = !DILocation(line: 3743, column: 12, scope: !10522)
!10532 = !DILocalVariable(name: "need_cycles", scope: !10522, file: !3, line: 3744, type: !849)
!10533 = !DILocation(line: 3744, column: 11, scope: !10522)
!10534 = !DILocalVariable(name: "new_prio", scope: !10522, file: !3, line: 3744, type: !849)
!10535 = !DILocation(line: 3744, column: 24, scope: !10522)
!10536 = !DILocation(line: 3747, column: 11, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3747, column: 11)
!10538 = !DILocation(line: 3747, column: 36, scope: !10537)
!10539 = !DILocation(line: 3747, column: 39, scope: !10537)
!10540 = !DILocation(line: 3747, column: 47, scope: !10537)
!10541 = !DILocation(line: 3747, column: 44, scope: !10537)
!10542 = !DILocation(line: 3747, column: 11, scope: !10522)
!10543 = !DILocation(line: 3749, column: 11, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10537, file: !3, line: 3748, column: 9)
!10545 = !DILocation(line: 3750, column: 11, scope: !10544)
!10546 = !DILocation(line: 3755, column: 11, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3755, column: 11)
!10548 = !DILocation(line: 3755, column: 11, scope: !10522)
!10549 = !DILocation(line: 3756, column: 26, scope: !10547)
!10550 = !DILocation(line: 3756, column: 9, scope: !10547)
!10551 = !DILocation(line: 3760, column: 26, scope: !10522)
!10552 = !DILocation(line: 3760, column: 24, scope: !10522)
!10553 = !DILocation(line: 3764, column: 33, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3764, column: 11)
!10555 = !DILocation(line: 3764, column: 64, scope: !10554)
!10556 = !DILocation(line: 3764, column: 11, scope: !10554)
!10557 = !DILocation(line: 3764, column: 11, scope: !10522)
!10558 = !DILocation(line: 3765, column: 19, scope: !10554)
!10559 = !DILocation(line: 3765, column: 2, scope: !10554)
!10560 = !DILocation(line: 3771, column: 33, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3771, column: 11)
!10562 = !DILocation(line: 3771, column: 65, scope: !10561)
!10563 = !DILocation(line: 3771, column: 11, scope: !10561)
!10564 = !DILocation(line: 3771, column: 11, scope: !10522)
!10565 = !DILocation(line: 3773, column: 11, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10561, file: !3, line: 3772, column: 2)
!10567 = !DILocation(line: 3774, column: 15, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 3774, column: 15)
!10569 = !DILocation(line: 3774, column: 29, scope: !10568)
!10570 = !DILocation(line: 3774, column: 15, scope: !10566)
!10571 = !DILocation(line: 3775, column: 13, scope: !10568)
!10572 = !DILocation(line: 3775, column: 13, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 3775, column: 13)
!10574 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 3775, column: 13)
!10575 = !DILocation(line: 3775, column: 13, scope: !10574)
!10576 = !DILocalVariable(name: "__j", scope: !10577, file: !3, line: 3775, type: !849)
!10577 = distinct !DILexicalBlock(scope: !10573, file: !3, line: 3775, column: 13)
!10578 = !DILocation(line: 3775, column: 13, scope: !10577)
!10579 = !DILocalVariable(name: "__s", scope: !10577, file: !3, line: 3775, type: !817)
!10580 = !DILocation(line: 3777, column: 11, scope: !10566)
!10581 = !DILocation(line: 3780, column: 11, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3780, column: 11)
!10583 = !DILocation(line: 3780, column: 28, scope: !10582)
!10584 = !DILocation(line: 3780, column: 11, scope: !10522)
!10585 = !DILocation(line: 3783, column: 20, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 3781, column: 2)
!10587 = !DILocation(line: 3783, column: 18, scope: !10586)
!10588 = !DILocation(line: 3784, column: 9, scope: !10586)
!10589 = !DILocation(line: 3787, column: 17, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 3787, column: 16)
!10591 = !DILocation(line: 3787, column: 34, scope: !10590)
!10592 = !DILocation(line: 3788, column: 17, scope: !10590)
!10593 = !DILocation(line: 3788, column: 21, scope: !10590)
!10594 = !DILocation(line: 3790, column: 16, scope: !10590)
!10595 = !DILocation(line: 3790, column: 25, scope: !10590)
!10596 = !DILocation(line: 3790, column: 57, scope: !10590)
!10597 = !DILocation(line: 3790, column: 63, scope: !10590)
!10598 = !DILocation(line: 3790, column: 61, scope: !10590)
!10599 = !DILocation(line: 3790, column: 68, scope: !10590)
!10600 = !DILocation(line: 3790, column: 65, scope: !10590)
!10601 = !DILocation(line: 3792, column: 16, scope: !10590)
!10602 = !DILocation(line: 3792, column: 20, scope: !10590)
!10603 = !DILocation(line: 3792, column: 45, scope: !10590)
!10604 = !DILocation(line: 3793, column: 16, scope: !10590)
!10605 = !DILocation(line: 3793, column: 45, scope: !10590)
!10606 = !DILocation(line: 3793, column: 51, scope: !10590)
!10607 = !DILocation(line: 3793, column: 21, scope: !10590)
!10608 = !DILocation(line: 3787, column: 16, scope: !10582)
!10609 = !DILocation(line: 3795, column: 11, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 3794, column: 9)
!10611 = !DILocation(line: 3796, column: 15, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 3796, column: 15)
!10613 = !DILocation(line: 3796, column: 29, scope: !10612)
!10614 = !DILocation(line: 3796, column: 15, scope: !10610)
!10615 = !DILocation(line: 3797, column: 13, scope: !10612)
!10616 = !DILocation(line: 3797, column: 13, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 3797, column: 13)
!10618 = distinct !DILexicalBlock(scope: !10612, file: !3, line: 3797, column: 13)
!10619 = !DILocation(line: 3797, column: 13, scope: !10618)
!10620 = !DILocalVariable(name: "__j", scope: !10621, file: !3, line: 3797, type: !849)
!10621 = distinct !DILexicalBlock(scope: !10617, file: !3, line: 3797, column: 13)
!10622 = !DILocation(line: 3797, column: 13, scope: !10621)
!10623 = !DILocalVariable(name: "__s", scope: !10621, file: !3, line: 3797, type: !817)
!10624 = !DILocation(line: 3799, column: 11, scope: !10610)
!10625 = !DILocation(line: 3806, column: 11, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3806, column: 11)
!10627 = !DILocation(line: 3806, column: 24, scope: !10626)
!10628 = !DILocation(line: 3806, column: 27, scope: !10626)
!10629 = !DILocation(line: 3806, column: 56, scope: !10626)
!10630 = !DILocation(line: 3807, column: 4, scope: !10626)
!10631 = !DILocation(line: 3807, column: 9, scope: !10626)
!10632 = !DILocation(line: 3807, column: 23, scope: !10626)
!10633 = !DILocation(line: 3807, column: 26, scope: !10626)
!10634 = !DILocation(line: 3807, column: 51, scope: !10626)
!10635 = !DILocation(line: 3806, column: 11, scope: !10522)
!10636 = !DILocalVariable(name: "need_n_ticks_till_branch", scope: !10637, file: !3, line: 3811, type: !849)
!10637 = distinct !DILexicalBlock(scope: !10626, file: !3, line: 3808, column: 2)
!10638 = !DILocation(line: 3811, column: 8, scope: !10637)
!10639 = !DILocation(line: 3811, column: 51, scope: !10637)
!10640 = !DILocation(line: 3811, column: 35, scope: !10637)
!10641 = !DILocation(line: 3813, column: 14, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 3813, column: 8)
!10643 = !DILocation(line: 3813, column: 33, scope: !10642)
!10644 = !DILocation(line: 3813, column: 40, scope: !10642)
!10645 = !DILocation(line: 3813, column: 8, scope: !10637)
!10646 = !DILocation(line: 3815, column: 8, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 3814, column: 6)
!10648 = !DILocation(line: 3816, column: 12, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10647, file: !3, line: 3816, column: 12)
!10650 = !DILocation(line: 3816, column: 26, scope: !10649)
!10651 = !DILocation(line: 3816, column: 12, scope: !10647)
!10652 = !DILocation(line: 3817, column: 3, scope: !10649)
!10653 = !DILocation(line: 3817, column: 3, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 3817, column: 3)
!10655 = distinct !DILexicalBlock(scope: !10649, file: !3, line: 3817, column: 3)
!10656 = !DILocation(line: 3817, column: 3, scope: !10655)
!10657 = !DILocalVariable(name: "__j", scope: !10658, file: !3, line: 3817, type: !849)
!10658 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 3817, column: 3)
!10659 = !DILocation(line: 3817, column: 3, scope: !10658)
!10660 = !DILocalVariable(name: "__s", scope: !10658, file: !3, line: 3817, type: !817)
!10661 = !DILocation(line: 3819, column: 8, scope: !10647)
!10662 = !DILocation(line: 3822, column: 14, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 3822, column: 8)
!10664 = !DILocation(line: 3822, column: 33, scope: !10663)
!10665 = !DILocation(line: 3822, column: 42, scope: !10663)
!10666 = !DILocation(line: 3822, column: 40, scope: !10663)
!10667 = !DILocation(line: 3823, column: 10, scope: !10663)
!10668 = !DILocation(line: 3823, column: 37, scope: !10663)
!10669 = !DILocation(line: 3823, column: 35, scope: !10663)
!10670 = !DILocation(line: 3823, column: 48, scope: !10663)
!10671 = !DILocation(line: 3823, column: 8, scope: !10663)
!10672 = !DILocation(line: 3824, column: 8, scope: !10663)
!10673 = !DILocation(line: 3824, column: 11, scope: !10663)
!10674 = !DILocation(line: 3824, column: 35, scope: !10663)
!10675 = !DILocation(line: 3824, column: 33, scope: !10663)
!10676 = !DILocation(line: 3822, column: 8, scope: !10637)
!10677 = !DILocation(line: 3826, column: 9, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 3825, column: 7)
!10679 = !DILocation(line: 3827, column: 13, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10678, file: !3, line: 3827, column: 13)
!10681 = !DILocation(line: 3827, column: 27, scope: !10680)
!10682 = !DILocation(line: 3827, column: 13, scope: !10678)
!10683 = !DILocation(line: 3828, column: 4, scope: !10680)
!10684 = !DILocation(line: 3828, column: 4, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 3828, column: 4)
!10686 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 3828, column: 4)
!10687 = !DILocation(line: 3828, column: 4, scope: !10686)
!10688 = !DILocalVariable(name: "__j", scope: !10689, file: !3, line: 3828, type: !849)
!10689 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 3828, column: 4)
!10690 = !DILocation(line: 3828, column: 4, scope: !10689)
!10691 = !DILocalVariable(name: "__s", scope: !10689, file: !3, line: 3828, type: !817)
!10692 = !DILocation(line: 3830, column: 9, scope: !10678)
!10693 = !DILocation(line: 3832, column: 2, scope: !10637)
!10694 = !DILocation(line: 3836, column: 42, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3836, column: 11)
!10696 = !DILocation(line: 3836, column: 11, scope: !10695)
!10697 = !DILocation(line: 3837, column: 4, scope: !10695)
!10698 = !DILocation(line: 3837, column: 7, scope: !10695)
!10699 = !DILocation(line: 3837, column: 30, scope: !10695)
!10700 = !DILocation(line: 3837, column: 28, scope: !10695)
!10701 = !DILocation(line: 3836, column: 11, scope: !10522)
!10702 = !DILocation(line: 3839, column: 18, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 3838, column: 2)
!10704 = !DILocation(line: 3840, column: 28, scope: !10703)
!10705 = !DILocation(line: 3840, column: 43, scope: !10703)
!10706 = !DILocation(line: 3840, column: 53, scope: !10703)
!10707 = !DILocation(line: 3840, column: 26, scope: !10703)
!10708 = !DILocation(line: 3841, column: 11, scope: !10703)
!10709 = !DILocation(line: 3842, column: 8, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 3842, column: 8)
!10711 = !DILocation(line: 3842, column: 22, scope: !10710)
!10712 = !DILocation(line: 3842, column: 8, scope: !10703)
!10713 = !DILocation(line: 3843, column: 6, scope: !10710)
!10714 = !DILocation(line: 3843, column: 6, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10716, file: !3, line: 3843, column: 6)
!10716 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 3843, column: 6)
!10717 = !DILocation(line: 3843, column: 6, scope: !10716)
!10718 = !DILocalVariable(name: "__j", scope: !10719, file: !3, line: 3843, type: !849)
!10719 = distinct !DILexicalBlock(scope: !10715, file: !3, line: 3843, column: 6)
!10720 = !DILocation(line: 3843, column: 6, scope: !10719)
!10721 = !DILocalVariable(name: "__s", scope: !10719, file: !3, line: 3843, type: !817)
!10722 = !DILocation(line: 3845, column: 4, scope: !10703)
!10723 = !DILocation(line: 3849, column: 11, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3849, column: 11)
!10725 = !DILocation(line: 3849, column: 40, scope: !10724)
!10726 = !DILocation(line: 3849, column: 11, scope: !10522)
!10727 = !DILocation(line: 3850, column: 16, scope: !10724)
!10728 = !DILocation(line: 3850, column: 14, scope: !10724)
!10729 = !DILocation(line: 3850, column: 2, scope: !10724)
!10730 = !DILocation(line: 3854, column: 11, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3854, column: 11)
!10732 = !DILocation(line: 3854, column: 29, scope: !10731)
!10733 = !DILocation(line: 3854, column: 27, scope: !10731)
!10734 = !DILocation(line: 3854, column: 11, scope: !10522)
!10735 = !DILocation(line: 3856, column: 26, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10731, file: !3, line: 3855, column: 2)
!10737 = !DILocation(line: 3856, column: 52, scope: !10736)
!10738 = !DILocation(line: 3857, column: 7, scope: !10736)
!10739 = !DILocation(line: 3857, column: 5, scope: !10736)
!10740 = !DILocation(line: 3856, column: 23, scope: !10736)
!10741 = !DILocation(line: 3858, column: 8, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10736, file: !3, line: 3858, column: 8)
!10743 = !DILocation(line: 3858, column: 37, scope: !10742)
!10744 = !DILocation(line: 3858, column: 8, scope: !10736)
!10745 = !DILocation(line: 3859, column: 30, scope: !10742)
!10746 = !DILocation(line: 3859, column: 28, scope: !10742)
!10747 = !DILocation(line: 3859, column: 6, scope: !10742)
!10748 = !DILocation(line: 3862, column: 8, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10736, file: !3, line: 3862, column: 8)
!10750 = !DILocation(line: 3862, column: 20, scope: !10749)
!10751 = !DILocation(line: 3862, column: 8, scope: !10736)
!10752 = !DILocation(line: 3864, column: 15, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 3863, column: 6)
!10754 = !DILocation(line: 3865, column: 26, scope: !10753)
!10755 = !DILocation(line: 3865, column: 41, scope: !10753)
!10756 = !DILocation(line: 3866, column: 7, scope: !10753)
!10757 = !DILocation(line: 3867, column: 7, scope: !10753)
!10758 = !DILocation(line: 3865, column: 23, scope: !10753)
!10759 = !DILocation(line: 3868, column: 8, scope: !10753)
!10760 = !DILocation(line: 3870, column: 12, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 3870, column: 12)
!10762 = !DILocation(line: 3870, column: 26, scope: !10761)
!10763 = !DILocation(line: 3870, column: 12, scope: !10753)
!10764 = !DILocation(line: 3871, column: 3, scope: !10761)
!10765 = !DILocation(line: 3871, column: 3, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 3871, column: 3)
!10767 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 3871, column: 3)
!10768 = !DILocation(line: 3871, column: 3, scope: !10767)
!10769 = !DILocalVariable(name: "__j", scope: !10770, file: !3, line: 3871, type: !849)
!10770 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 3871, column: 3)
!10771 = !DILocation(line: 3871, column: 3, scope: !10770)
!10772 = !DILocalVariable(name: "__s", scope: !10770, file: !3, line: 3871, type: !817)
!10773 = !DILocation(line: 3874, column: 8, scope: !10753)
!10774 = !DILocation(line: 3876, column: 2, scope: !10736)
!10775 = !DILocation(line: 3880, column: 35, scope: !10522)
!10776 = !DILocation(line: 3880, column: 41, scope: !10522)
!10777 = !DILocation(line: 3880, column: 45, scope: !10522)
!10778 = !DILocation(line: 3880, column: 21, scope: !10522)
!10779 = !DILocation(line: 3880, column: 19, scope: !10522)
!10780 = !DILocation(line: 3881, column: 18, scope: !10522)
!10781 = !DILocation(line: 3881, column: 41, scope: !10522)
!10782 = !DILocation(line: 3881, column: 39, scope: !10522)
!10783 = !DILocation(line: 3881, column: 68, scope: !10522)
!10784 = !DILocation(line: 3881, column: 66, scope: !10522)
!10785 = !DILocation(line: 3881, column: 16, scope: !10522)
!10786 = !DILocation(line: 3883, column: 11, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3883, column: 11)
!10788 = !DILocation(line: 3883, column: 40, scope: !10787)
!10789 = !DILocation(line: 3883, column: 11, scope: !10522)
!10790 = !DILocation(line: 3884, column: 26, scope: !10787)
!10791 = !DILocation(line: 3884, column: 24, scope: !10787)
!10792 = !DILocation(line: 3884, column: 2, scope: !10787)
!10793 = !DILocation(line: 3887, column: 11, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3887, column: 11)
!10795 = !DILocation(line: 3887, column: 23, scope: !10794)
!10796 = !DILocation(line: 3887, column: 11, scope: !10522)
!10797 = !DILocation(line: 3889, column: 15, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10799, file: !3, line: 3889, column: 15)
!10799 = distinct !DILexicalBlock(scope: !10794, file: !3, line: 3888, column: 9)
!10800 = !DILocation(line: 3889, column: 34, scope: !10798)
!10801 = !DILocation(line: 3889, column: 31, scope: !10798)
!10802 = !DILocation(line: 3889, column: 15, scope: !10799)
!10803 = !DILocalVariable(name: "new_size", scope: !10804, file: !3, line: 3891, type: !849)
!10804 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 3890, column: 13)
!10805 = !DILocation(line: 3891, column: 19, scope: !10804)
!10806 = !DILocation(line: 3891, column: 30, scope: !10804)
!10807 = !DILocation(line: 3891, column: 46, scope: !10804)
!10808 = !DILocation(line: 3891, column: 50, scope: !10804)
!10809 = !DILocation(line: 3894, column: 38, scope: !10804)
!10810 = !DILocation(line: 3895, column: 38, scope: !10804)
!10811 = !DILocation(line: 3895, column: 48, scope: !10804)
!10812 = !DILocation(line: 3894, column: 27, scope: !10804)
!10813 = !DILocation(line: 3894, column: 19, scope: !10804)
!10814 = !DILocation(line: 3893, column: 15, scope: !10804)
!10815 = !DILocation(line: 3894, column: 17, scope: !10804)
!10816 = !DILocation(line: 3897, column: 13, scope: !10804)
!10817 = !DILocation(line: 3899, column: 15, scope: !10799)
!10818 = !DILocation(line: 3899, column: 37, scope: !10799)
!10819 = !DILocation(line: 3899, column: 35, scope: !10799)
!10820 = !DILocation(line: 3898, column: 11, scope: !10799)
!10821 = !DILocation(line: 3898, column: 37, scope: !10799)
!10822 = !DILocation(line: 3899, column: 13, scope: !10799)
!10823 = !DILocation(line: 3901, column: 18, scope: !10799)
!10824 = !DILocation(line: 3902, column: 29, scope: !10799)
!10825 = !DILocation(line: 3902, column: 44, scope: !10799)
!10826 = !DILocation(line: 3903, column: 31, scope: !10799)
!10827 = !DILocation(line: 3904, column: 31, scope: !10799)
!10828 = !DILocation(line: 3902, column: 26, scope: !10799)
!10829 = !DILocation(line: 3906, column: 11, scope: !10799)
!10830 = !DILocation(line: 3908, column: 15, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10799, file: !3, line: 3908, column: 15)
!10832 = !DILocation(line: 3908, column: 29, scope: !10831)
!10833 = !DILocation(line: 3908, column: 15, scope: !10799)
!10834 = !DILocation(line: 3909, column: 13, scope: !10831)
!10835 = !DILocation(line: 3909, column: 13, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3909, column: 13)
!10837 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 3909, column: 13)
!10838 = !DILocation(line: 3909, column: 13, scope: !10837)
!10839 = !DILocalVariable(name: "__j", scope: !10840, file: !3, line: 3909, type: !849)
!10840 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 3909, column: 13)
!10841 = !DILocation(line: 3909, column: 13, scope: !10840)
!10842 = !DILocalVariable(name: "__s", scope: !10840, file: !3, line: 3909, type: !817)
!10843 = !DILocation(line: 3912, column: 11, scope: !10799)
!10844 = !DILocation(line: 3915, column: 11, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 3915, column: 11)
!10846 = !DILocation(line: 3915, column: 25, scope: !10845)
!10847 = !DILocation(line: 3915, column: 11, scope: !10522)
!10848 = !DILocation(line: 3916, column: 9, scope: !10845)
!10849 = !DILocation(line: 3916, column: 9, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 3916, column: 9)
!10851 = distinct !DILexicalBlock(scope: !10845, file: !3, line: 3916, column: 9)
!10852 = !DILocation(line: 3916, column: 9, scope: !10851)
!10853 = !DILocalVariable(name: "__j", scope: !10854, file: !3, line: 3916, type: !849)
!10854 = distinct !DILexicalBlock(scope: !10850, file: !3, line: 3916, column: 9)
!10855 = !DILocation(line: 3916, column: 9, scope: !10854)
!10856 = !DILocalVariable(name: "__s", scope: !10854, file: !3, line: 3916, type: !817)
!10857 = !DILocation(line: 3917, column: 22, scope: !10522)
!10858 = !DILocation(line: 3918, column: 5, scope: !10522)
!10859 = !DILocation(line: 3738, column: 71, scope: !10518)
!10860 = !DILocation(line: 3738, column: 3, scope: !10518)
!10861 = distinct !{!10861, !10520, !10862}
!10862 = !DILocation(line: 3918, column: 5, scope: !10512)
!10863 = !DILocation(line: 3921, column: 7, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 3921, column: 7)
!10865 = !DILocation(line: 3921, column: 7, scope: !2398)
!10866 = !DILocation(line: 3923, column: 7, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 3922, column: 5)
!10868 = !DILocation(line: 3924, column: 7, scope: !10867)
!10869 = !DILocation(line: 3924, column: 32, scope: !10867)
!10870 = !DILocation(line: 3925, column: 5, scope: !10867)
!10871 = !DILocation(line: 3928, column: 7, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 3928, column: 7)
!10873 = !DILocation(line: 3928, column: 22, scope: !10872)
!10874 = !DILocation(line: 3928, column: 7, scope: !2398)
!10875 = !DILocation(line: 3929, column: 20, scope: !10872)
!10876 = !DILocation(line: 3929, column: 5, scope: !10872)
!10877 = !DILocation(line: 3931, column: 7, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 3931, column: 7)
!10879 = !DILocation(line: 3931, column: 7, scope: !2398)
!10880 = !DILocation(line: 3935, column: 22, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10878, file: !3, line: 3932, column: 5)
!10882 = !DILocation(line: 3935, column: 8, scope: !10881)
!10883 = !DILocation(line: 3935, column: 20, scope: !10881)
!10884 = !DILocation(line: 3936, column: 7, scope: !10881)
!10885 = !DILocation(line: 3939, column: 5, scope: !10878)
!10886 = !DILocation(line: 3943, column: 15, scope: !2398)
!10887 = !DILocation(line: 3943, column: 49, scope: !2398)
!10888 = !DILocation(line: 3943, column: 3, scope: !2398)
!10889 = !DILocation(line: 3950, column: 7, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 3950, column: 7)
!10891 = !DILocation(line: 3950, column: 21, scope: !10890)
!10892 = !DILocation(line: 3950, column: 7, scope: !2398)
!10893 = !DILocation(line: 3952, column: 7, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 3951, column: 5)
!10895 = !DILocation(line: 3952, column: 7, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 3952, column: 7)
!10897 = distinct !DILexicalBlock(scope: !10894, file: !3, line: 3952, column: 7)
!10898 = !DILocation(line: 3952, column: 7, scope: !10897)
!10899 = !DILocalVariable(name: "__j", scope: !10900, file: !3, line: 3952, type: !849)
!10900 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 3952, column: 7)
!10901 = !DILocation(line: 3952, column: 7, scope: !10900)
!10902 = !DILocalVariable(name: "__s", scope: !10900, file: !3, line: 3952, type: !817)
!10903 = !DILocation(line: 3954, column: 7, scope: !10894)
!10904 = !DILocation(line: 3954, column: 7, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10906, file: !3, line: 3954, column: 7)
!10906 = distinct !DILexicalBlock(scope: !10894, file: !3, line: 3954, column: 7)
!10907 = !DILocation(line: 3954, column: 7, scope: !10906)
!10908 = !DILocalVariable(name: "__j", scope: !10909, file: !3, line: 3954, type: !849)
!10909 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 3954, column: 7)
!10910 = !DILocation(line: 3954, column: 7, scope: !10909)
!10911 = !DILocalVariable(name: "__s", scope: !10909, file: !3, line: 3954, type: !817)
!10912 = !DILocation(line: 3955, column: 14, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10894, file: !3, line: 3955, column: 7)
!10914 = !DILocation(line: 3955, column: 12, scope: !10913)
!10915 = !DILocation(line: 3955, column: 19, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 3955, column: 7)
!10917 = !DILocation(line: 3955, column: 7, scope: !10913)
!10918 = !DILocation(line: 3956, column: 20, scope: !10916)
!10919 = !DILocation(line: 3956, column: 9, scope: !10916)
!10920 = !DILocation(line: 3955, column: 63, scope: !10916)
!10921 = !DILocation(line: 3955, column: 7, scope: !10916)
!10922 = distinct !{!10922, !10917, !10923}
!10923 = !DILocation(line: 3956, column: 24, scope: !10913)
!10924 = !DILocation(line: 3957, column: 7, scope: !10894)
!10925 = !DILocation(line: 3957, column: 7, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 3957, column: 7)
!10927 = distinct !DILexicalBlock(scope: !10894, file: !3, line: 3957, column: 7)
!10928 = !DILocation(line: 3957, column: 7, scope: !10927)
!10929 = !DILocalVariable(name: "__j", scope: !10930, file: !3, line: 3957, type: !849)
!10930 = distinct !DILexicalBlock(scope: !10926, file: !3, line: 3957, column: 7)
!10931 = !DILocation(line: 3957, column: 7, scope: !10930)
!10932 = !DILocalVariable(name: "__s", scope: !10930, file: !3, line: 3957, type: !817)
!10933 = !DILocation(line: 3958, column: 5, scope: !10894)
!10934 = !DILocation(line: 3960, column: 4, scope: !2398)
!10935 = !DILocation(line: 3960, column: 16, scope: !2398)
!10936 = !DILocation(line: 3961, column: 3, scope: !2398)
!10937 = !DILocation(line: 3962, column: 1, scope: !2398)
!10938 = distinct !DISubprogram(name: "convert_vec_av_set_to_ready", scope: !3, file: !3, line: 3967, type: !3289, scopeLine: 3968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!10939 = !DILocalVariable(name: "n", scope: !10938, file: !3, line: 3969, type: !849)
!10940 = !DILocation(line: 3969, column: 7, scope: !10938)
!10941 = !DILocalVariable(name: "expr", scope: !10938, file: !3, line: 3970, type: !2055)
!10942 = !DILocation(line: 3970, column: 10, scope: !10938)
!10943 = !DILocation(line: 3973, column: 19, scope: !10938)
!10944 = !DILocation(line: 3973, column: 17, scope: !10938)
!10945 = !DILocation(line: 3974, column: 23, scope: !10938)
!10946 = !DILocation(line: 3974, column: 31, scope: !10938)
!10947 = !DILocation(line: 3974, column: 15, scope: !10938)
!10948 = !DILocation(line: 3976, column: 3, scope: !10938)
!10949 = !DILocation(line: 3978, column: 13, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10938, file: !3, line: 3978, column: 7)
!10951 = !DILocation(line: 3978, column: 23, scope: !10950)
!10952 = !DILocation(line: 3978, column: 21, scope: !10950)
!10953 = !DILocation(line: 3978, column: 7, scope: !10938)
!10954 = !DILocation(line: 3980, column: 30, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 3979, column: 5)
!10956 = !DILocation(line: 3980, column: 22, scope: !10955)
!10957 = !DILocation(line: 3981, column: 38, scope: !10955)
!10958 = !DILocation(line: 3981, column: 7, scope: !10955)
!10959 = !DILocation(line: 3982, column: 5, scope: !10955)
!10960 = !DILocation(line: 3984, column: 10, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10938, file: !3, line: 3984, column: 3)
!10962 = !DILocation(line: 3984, column: 8, scope: !10961)
!10963 = !DILocation(line: 3984, column: 15, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10961, file: !3, line: 3984, column: 3)
!10965 = !DILocation(line: 3984, column: 3, scope: !10961)
!10966 = !DILocalVariable(name: "vi", scope: !10967, file: !3, line: 3986, type: !2061)
!10967 = distinct !DILexicalBlock(scope: !10964, file: !3, line: 3985, column: 5)
!10968 = !DILocation(line: 3986, column: 15, scope: !10967)
!10969 = !DILocation(line: 3986, column: 20, scope: !10967)
!10970 = !DILocalVariable(name: "insn", scope: !10967, file: !3, line: 3987, type: !2132)
!10971 = !DILocation(line: 3987, column: 14, scope: !10967)
!10972 = !DILocation(line: 3987, column: 21, scope: !10967)
!10973 = !DILocation(line: 3989, column: 7, scope: !10967)
!10974 = !DILocation(line: 3989, column: 17, scope: !10967)
!10975 = !DILocation(line: 3989, column: 20, scope: !10967)
!10976 = !DILocation(line: 3990, column: 22, scope: !10967)
!10977 = !DILocation(line: 3990, column: 13, scope: !10967)
!10978 = !DILocation(line: 3990, column: 17, scope: !10967)
!10979 = !DILocation(line: 3990, column: 7, scope: !10967)
!10980 = !DILocation(line: 3990, column: 20, scope: !10967)
!10981 = !DILocation(line: 3991, column: 5, scope: !10967)
!10982 = !DILocation(line: 3984, column: 59, scope: !10964)
!10983 = !DILocation(line: 3984, column: 3, scope: !10964)
!10984 = distinct !{!10984, !10965, !10985}
!10985 = !DILocation(line: 3991, column: 5, scope: !10961)
!10986 = !DILocation(line: 3992, column: 1, scope: !10938)
!10987 = distinct !DISubprogram(name: "recog_memoized", scope: !811, file: !811, line: 150, type: !10988, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!10988 = !DISubroutineType(types: !10989)
!10989 = !{!849, !825}
!10990 = !DILocalVariable(name: "insn", arg: 1, scope: !10987, file: !811, line: 150, type: !825)
!10991 = !DILocation(line: 150, column: 21, scope: !10987)
!10992 = !DILocation(line: 152, column: 7, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10987, file: !811, line: 152, column: 7)
!10994 = !DILocation(line: 152, column: 24, scope: !10993)
!10995 = !DILocation(line: 152, column: 7, scope: !10987)
!10996 = !DILocation(line: 153, column: 31, scope: !10993)
!10997 = !DILocation(line: 153, column: 47, scope: !10993)
!10998 = !DILocation(line: 153, column: 24, scope: !10993)
!10999 = !DILocation(line: 153, column: 5, scope: !10993)
!11000 = !DILocation(line: 153, column: 22, scope: !10993)
!11001 = !DILocation(line: 154, column: 10, scope: !10987)
!11002 = !DILocation(line: 154, column: 3, scope: !10987)
!11003 = distinct !DISubprogram(name: "VEC_expr_t_base_length", scope: !3, file: !3, line: 506, type: !11004, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11004 = !DISubroutineType(types: !11005)
!11005 = !{!7, !11006}
!11006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11007, size: 64)
!11007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2270)
!11008 = !DILocalVariable(name: "vec_", arg: 1, scope: !11003, file: !3, line: 506, type: !11006)
!11009 = !DILocation(line: 506, column: 1, scope: !11003)
!11010 = distinct !DISubprogram(name: "VEC_expr_t_base_block_remove", scope: !3, file: !3, line: 506, type: !11011, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11011 = !DISubroutineType(types: !11012)
!11012 = !{null, !11013, !7, !7}
!11013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!11014 = !DILocalVariable(name: "vec_", arg: 1, scope: !11010, file: !3, line: 506, type: !11013)
!11015 = !DILocation(line: 506, column: 1, scope: !11010)
!11016 = !DILocalVariable(name: "ix_", arg: 2, scope: !11010, file: !3, line: 506, type: !7)
!11017 = !DILocalVariable(name: "len_", arg: 3, scope: !11010, file: !3, line: 506, type: !7)
!11018 = !DILocalVariable(name: "slot_", scope: !11010, file: !3, line: 506, type: !7007)
!11019 = distinct !DISubprogram(name: "VEC_expr_t_heap_safe_push", scope: !3, file: !3, line: 507, type: !11020, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11020 = !DISubroutineType(types: !11021)
!11021 = !{!7007, !11022, !2055}
!11022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!11023 = !DILocalVariable(name: "vec_", arg: 1, scope: !11019, file: !3, line: 507, type: !11022)
!11024 = !DILocation(line: 507, column: 1, scope: !11019)
!11025 = !DILocalVariable(name: "obj_", arg: 2, scope: !11019, file: !3, line: 507, type: !2055)
!11026 = distinct !DISubprogram(name: "sel_target_adjust_priority", scope: !3, file: !3, line: 3295, type: !11027, scopeLine: 3296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11027 = !DISubroutineType(types: !11028)
!11028 = !{!849, !2055}
!11029 = !DILocalVariable(name: "expr", arg: 1, scope: !11026, file: !3, line: 3295, type: !2055)
!11030 = !DILocation(line: 3295, column: 36, scope: !11026)
!11031 = !DILocalVariable(name: "priority", scope: !11026, file: !3, line: 3297, type: !849)
!11032 = !DILocation(line: 3297, column: 7, scope: !11026)
!11033 = !DILocation(line: 3297, column: 18, scope: !11026)
!11034 = !DILocalVariable(name: "new_priority", scope: !11026, file: !3, line: 3298, type: !849)
!11035 = !DILocation(line: 3298, column: 7, scope: !11026)
!11036 = !DILocation(line: 3300, column: 21, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11026, file: !3, line: 3300, column: 7)
!11038 = !DILocation(line: 3300, column: 7, scope: !11037)
!11039 = !DILocation(line: 3300, column: 7, scope: !11026)
!11040 = !DILocation(line: 3301, column: 34, scope: !11037)
!11041 = !DILocation(line: 3301, column: 51, scope: !11037)
!11042 = !DILocation(line: 3301, column: 73, scope: !11037)
!11043 = !DILocation(line: 3301, column: 20, scope: !11037)
!11044 = !DILocation(line: 3301, column: 18, scope: !11037)
!11045 = !DILocation(line: 3301, column: 5, scope: !11037)
!11046 = !DILocation(line: 3303, column: 20, scope: !11037)
!11047 = !DILocation(line: 3303, column: 18, scope: !11037)
!11048 = !DILocation(line: 3306, column: 30, scope: !11026)
!11049 = !DILocation(line: 3306, column: 45, scope: !11026)
!11050 = !DILocation(line: 3306, column: 43, scope: !11026)
!11051 = !DILocation(line: 3306, column: 3, scope: !11026)
!11052 = !DILocation(line: 3306, column: 28, scope: !11026)
!11053 = !DILocation(line: 3308, column: 3, scope: !11026)
!11054 = !DILocation(line: 3310, column: 7, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11026, file: !3, line: 3310, column: 7)
!11056 = !DILocation(line: 3310, column: 21, scope: !11055)
!11057 = !DILocation(line: 3310, column: 7, scope: !11026)
!11058 = !DILocation(line: 3311, column: 5, scope: !11055)
!11059 = !DILocation(line: 3311, column: 5, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 3311, column: 5)
!11061 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 3311, column: 5)
!11062 = !DILocation(line: 3311, column: 5, scope: !11061)
!11063 = !DILocalVariable(name: "__j", scope: !11064, file: !3, line: 3311, type: !849)
!11064 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 3311, column: 5)
!11065 = !DILocation(line: 3311, column: 5, scope: !11064)
!11066 = !DILocalVariable(name: "__s", scope: !11064, file: !3, line: 3311, type: !817)
!11067 = !DILocation(line: 3315, column: 10, scope: !11026)
!11068 = !DILocation(line: 3315, column: 3, scope: !11026)
!11069 = distinct !DISubprogram(name: "VEC_expr_t_base_address", scope: !3, file: !3, line: 506, type: !11070, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11070 = !DISubroutineType(types: !11071)
!11071 = !{!7007, !11013}
!11072 = !DILocalVariable(name: "vec_", arg: 1, scope: !11069, file: !3, line: 506, type: !11013)
!11073 = !DILocation(line: 506, column: 1, scope: !11069)
!11074 = distinct !DISubprogram(name: "sel_rank_for_schedule", scope: !3, file: !3, line: 3320, type: !1290, scopeLine: 3321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11075 = !DILocalVariable(name: "x", arg: 1, scope: !11074, file: !3, line: 3320, type: !1285)
!11076 = !DILocation(line: 3320, column: 36, scope: !11074)
!11077 = !DILocalVariable(name: "y", arg: 2, scope: !11074, file: !3, line: 3320, type: !1285)
!11078 = !DILocation(line: 3320, column: 51, scope: !11074)
!11079 = !DILocalVariable(name: "tmp", scope: !11074, file: !3, line: 3322, type: !2055)
!11080 = !DILocation(line: 3322, column: 10, scope: !11074)
!11081 = !DILocation(line: 3322, column: 34, scope: !11074)
!11082 = !DILocation(line: 3322, column: 17, scope: !11074)
!11083 = !DILocation(line: 3322, column: 16, scope: !11074)
!11084 = !DILocalVariable(name: "tmp2", scope: !11074, file: !3, line: 3323, type: !2055)
!11085 = !DILocation(line: 3323, column: 10, scope: !11074)
!11086 = !DILocation(line: 3323, column: 35, scope: !11074)
!11087 = !DILocation(line: 3323, column: 18, scope: !11074)
!11088 = !DILocation(line: 3323, column: 17, scope: !11074)
!11089 = !DILocalVariable(name: "tmp_insn", scope: !11074, file: !3, line: 3324, type: !2132)
!11090 = !DILocation(line: 3324, column: 10, scope: !11074)
!11091 = !DILocalVariable(name: "tmp2_insn", scope: !11074, file: !3, line: 3324, type: !2132)
!11092 = !DILocation(line: 3324, column: 20, scope: !11074)
!11093 = !DILocalVariable(name: "tmp_vinsn", scope: !11074, file: !3, line: 3325, type: !2061)
!11094 = !DILocation(line: 3325, column: 11, scope: !11074)
!11095 = !DILocalVariable(name: "tmp2_vinsn", scope: !11074, file: !3, line: 3325, type: !2061)
!11096 = !DILocation(line: 3325, column: 22, scope: !11074)
!11097 = !DILocalVariable(name: "val", scope: !11074, file: !3, line: 3326, type: !849)
!11098 = !DILocation(line: 3326, column: 7, scope: !11074)
!11099 = !DILocation(line: 3328, column: 15, scope: !11074)
!11100 = !DILocation(line: 3328, column: 13, scope: !11074)
!11101 = !DILocation(line: 3329, column: 16, scope: !11074)
!11102 = !DILocation(line: 3329, column: 14, scope: !11074)
!11103 = !DILocation(line: 3330, column: 14, scope: !11074)
!11104 = !DILocation(line: 3330, column: 12, scope: !11074)
!11105 = !DILocation(line: 3331, column: 15, scope: !11074)
!11106 = !DILocation(line: 3331, column: 13, scope: !11074)
!11107 = !DILocation(line: 3334, column: 7, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3334, column: 7)
!11109 = !DILocation(line: 3334, column: 31, scope: !11108)
!11110 = !DILocation(line: 3334, column: 35, scope: !11108)
!11111 = !DILocation(line: 3334, column: 7, scope: !11074)
!11112 = !DILocation(line: 3335, column: 5, scope: !11108)
!11113 = !DILocation(line: 3336, column: 12, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 3336, column: 12)
!11115 = !DILocation(line: 3336, column: 12, scope: !11108)
!11116 = !DILocation(line: 3337, column: 5, scope: !11114)
!11117 = !DILocation(line: 3340, column: 7, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3340, column: 7)
!11119 = !DILocation(line: 3340, column: 35, scope: !11118)
!11120 = !DILocation(line: 3340, column: 32, scope: !11118)
!11121 = !DILocation(line: 3340, column: 7, scope: !11074)
!11122 = !DILocation(line: 3342, column: 11, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 3342, column: 11)
!11124 = distinct !DILexicalBlock(scope: !11118, file: !3, line: 3341, column: 5)
!11125 = !DILocation(line: 3342, column: 38, scope: !11123)
!11126 = !DILocation(line: 3342, column: 41, scope: !11123)
!11127 = !DILocation(line: 3342, column: 11, scope: !11124)
!11128 = !DILocation(line: 3343, column: 16, scope: !11123)
!11129 = !DILocation(line: 3343, column: 9, scope: !11123)
!11130 = !DILocation(line: 3347, column: 11, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 3347, column: 11)
!11132 = !DILocation(line: 3347, column: 11, scope: !11124)
!11133 = !DILocation(line: 3348, column: 9, scope: !11131)
!11134 = !DILocation(line: 3349, column: 7, scope: !11124)
!11135 = !DILocation(line: 3353, column: 41, scope: !11074)
!11136 = !DILocation(line: 3353, column: 10, scope: !11074)
!11137 = !DILocation(line: 3354, column: 36, scope: !11074)
!11138 = !DILocation(line: 3354, column: 5, scope: !11074)
!11139 = !DILocation(line: 3354, column: 3, scope: !11074)
!11140 = !DILocation(line: 3353, column: 7, scope: !11074)
!11141 = !DILocation(line: 3355, column: 7, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3355, column: 7)
!11143 = !DILocation(line: 3355, column: 7, scope: !11074)
!11144 = !DILocation(line: 3356, column: 12, scope: !11142)
!11145 = !DILocation(line: 3356, column: 5, scope: !11142)
!11146 = !DILocation(line: 3359, column: 7, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3359, column: 7)
!11148 = !DILocation(line: 3359, column: 30, scope: !11147)
!11149 = !DILocation(line: 3359, column: 34, scope: !11147)
!11150 = !DILocation(line: 3359, column: 37, scope: !11147)
!11151 = !DILocation(line: 3359, column: 61, scope: !11147)
!11152 = !DILocation(line: 3359, column: 7, scope: !11074)
!11153 = !DILocation(line: 3361, column: 13, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11147, file: !3, line: 3360, column: 5)
!11155 = !DILocation(line: 3361, column: 38, scope: !11154)
!11156 = !DILocation(line: 3361, column: 36, scope: !11154)
!11157 = !DILocation(line: 3361, column: 11, scope: !11154)
!11158 = !DILocation(line: 3362, column: 11, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 3362, column: 11)
!11160 = !DILocation(line: 3362, column: 11, scope: !11154)
!11161 = !DILocation(line: 3363, column: 9, scope: !11159)
!11162 = !DILocation(line: 3363, column: 2, scope: !11159)
!11163 = !DILocation(line: 3364, column: 5, scope: !11154)
!11164 = !DILocation(line: 3367, column: 28, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3367, column: 7)
!11166 = !DILocation(line: 3367, column: 7, scope: !11165)
!11167 = !DILocation(line: 3367, column: 38, scope: !11165)
!11168 = !DILocation(line: 3367, column: 63, scope: !11165)
!11169 = !DILocation(line: 3367, column: 42, scope: !11165)
!11170 = !DILocation(line: 3367, column: 7, scope: !11074)
!11171 = !DILocation(line: 3368, column: 5, scope: !11165)
!11172 = !DILocation(line: 3369, column: 33, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11165, file: !3, line: 3369, column: 12)
!11174 = !DILocation(line: 3369, column: 12, scope: !11173)
!11175 = !DILocation(line: 3369, column: 44, scope: !11173)
!11176 = !DILocation(line: 3369, column: 69, scope: !11173)
!11177 = !DILocation(line: 3369, column: 48, scope: !11173)
!11178 = !DILocation(line: 3369, column: 12, scope: !11165)
!11179 = !DILocation(line: 3370, column: 5, scope: !11173)
!11180 = !DILocation(line: 3373, column: 7, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3373, column: 7)
!11182 = !DILocation(line: 3373, column: 29, scope: !11181)
!11183 = !DILocation(line: 3373, column: 34, scope: !11181)
!11184 = !DILocation(line: 3373, column: 37, scope: !11181)
!11185 = !DILocation(line: 3373, column: 60, scope: !11181)
!11186 = !DILocation(line: 3373, column: 7, scope: !11074)
!11187 = !DILocalVariable(name: "p2", scope: !11188, file: !3, line: 3375, type: !849)
!11188 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 3374, column: 5)
!11189 = !DILocation(line: 3375, column: 11, scope: !11188)
!11190 = !DILocation(line: 3375, column: 16, scope: !11188)
!11191 = !DILocation(line: 3375, column: 39, scope: !11188)
!11192 = !DILocation(line: 3375, column: 37, scope: !11188)
!11193 = !DILocalVariable(name: "p1", scope: !11188, file: !3, line: 3376, type: !849)
!11194 = !DILocation(line: 3376, column: 11, scope: !11188)
!11195 = !DILocation(line: 3376, column: 16, scope: !11188)
!11196 = !DILocation(line: 3376, column: 38, scope: !11188)
!11197 = !DILocation(line: 3376, column: 36, scope: !11188)
!11198 = !DILocation(line: 3378, column: 13, scope: !11188)
!11199 = !DILocation(line: 3378, column: 18, scope: !11188)
!11200 = !DILocation(line: 3378, column: 16, scope: !11188)
!11201 = !DILocation(line: 3378, column: 43, scope: !11188)
!11202 = !DILocation(line: 3378, column: 48, scope: !11188)
!11203 = !DILocation(line: 3378, column: 46, scope: !11188)
!11204 = !DILocation(line: 3378, column: 41, scope: !11188)
!11205 = !DILocation(line: 3378, column: 11, scope: !11188)
!11206 = !DILocation(line: 3379, column: 5, scope: !11188)
!11207 = !DILocation(line: 3381, column: 11, scope: !11181)
!11208 = !DILocation(line: 3381, column: 34, scope: !11181)
!11209 = !DILocation(line: 3381, column: 32, scope: !11181)
!11210 = !DILocation(line: 3382, column: 6, scope: !11181)
!11211 = !DILocation(line: 3382, column: 4, scope: !11181)
!11212 = !DILocation(line: 3382, column: 33, scope: !11181)
!11213 = !DILocation(line: 3382, column: 31, scope: !11181)
!11214 = !DILocation(line: 3381, column: 9, scope: !11181)
!11215 = !DILocation(line: 3383, column: 7, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3383, column: 7)
!11217 = !DILocation(line: 3383, column: 7, scope: !11074)
!11218 = !DILocation(line: 3384, column: 12, scope: !11216)
!11219 = !DILocation(line: 3384, column: 5, scope: !11216)
!11220 = !DILocation(line: 3386, column: 7, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3386, column: 7)
!11222 = !DILocation(line: 3386, column: 17, scope: !11221)
!11223 = !DILocation(line: 3386, column: 25, scope: !11221)
!11224 = !DILocation(line: 3386, column: 28, scope: !11221)
!11225 = !DILocation(line: 3386, column: 39, scope: !11221)
!11226 = !DILocation(line: 3386, column: 44, scope: !11221)
!11227 = !DILocation(line: 3386, column: 7, scope: !11074)
!11228 = !DILocalVariable(name: "ds1", scope: !11229, file: !3, line: 3389, type: !2089)
!11229 = distinct !DILexicalBlock(scope: !11221, file: !3, line: 3388, column: 5)
!11230 = !DILocation(line: 3389, column: 12, scope: !11229)
!11231 = !DILocalVariable(name: "ds2", scope: !11229, file: !3, line: 3389, type: !2089)
!11232 = !DILocation(line: 3389, column: 17, scope: !11229)
!11233 = !DILocalVariable(name: "dw1", scope: !11229, file: !3, line: 3390, type: !11234)
!11234 = !DIDerivedType(tag: DW_TAG_typedef, name: "dw_t", file: !403, line: 221, baseType: !849)
!11235 = !DILocation(line: 3390, column: 12, scope: !11229)
!11236 = !DILocalVariable(name: "dw2", scope: !11229, file: !3, line: 3390, type: !11234)
!11237 = !DILocation(line: 3390, column: 17, scope: !11229)
!11238 = !DILocalVariable(name: "dw", scope: !11229, file: !3, line: 3391, type: !849)
!11239 = !DILocation(line: 3391, column: 11, scope: !11229)
!11240 = !DILocation(line: 3393, column: 13, scope: !11229)
!11241 = !DILocation(line: 3393, column: 11, scope: !11229)
!11242 = !DILocation(line: 3394, column: 11, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 3394, column: 11)
!11244 = !DILocation(line: 3394, column: 11, scope: !11229)
!11245 = !DILocation(line: 3395, column: 17, scope: !11243)
!11246 = !DILocation(line: 3395, column: 8, scope: !11243)
!11247 = !DILocation(line: 3395, column: 6, scope: !11243)
!11248 = !DILocation(line: 3395, column: 2, scope: !11243)
!11249 = !DILocation(line: 3397, column: 6, scope: !11243)
!11250 = !DILocation(line: 3399, column: 13, scope: !11229)
!11251 = !DILocation(line: 3399, column: 11, scope: !11229)
!11252 = !DILocation(line: 3400, column: 11, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 3400, column: 11)
!11254 = !DILocation(line: 3400, column: 11, scope: !11229)
!11255 = !DILocation(line: 3401, column: 17, scope: !11253)
!11256 = !DILocation(line: 3401, column: 8, scope: !11253)
!11257 = !DILocation(line: 3401, column: 6, scope: !11253)
!11258 = !DILocation(line: 3401, column: 2, scope: !11253)
!11259 = !DILocation(line: 3403, column: 6, scope: !11253)
!11260 = !DILocation(line: 3405, column: 12, scope: !11229)
!11261 = !DILocation(line: 3405, column: 18, scope: !11229)
!11262 = !DILocation(line: 3405, column: 16, scope: !11229)
!11263 = !DILocation(line: 3405, column: 10, scope: !11229)
!11264 = !DILocation(line: 3406, column: 11, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 3406, column: 11)
!11266 = !DILocation(line: 3406, column: 14, scope: !11265)
!11267 = !DILocation(line: 3406, column: 34, scope: !11265)
!11268 = !DILocation(line: 3406, column: 37, scope: !11265)
!11269 = !DILocation(line: 3406, column: 40, scope: !11265)
!11270 = !DILocation(line: 3406, column: 11, scope: !11229)
!11271 = !DILocation(line: 3407, column: 9, scope: !11265)
!11272 = !DILocation(line: 3407, column: 2, scope: !11265)
!11273 = !DILocation(line: 3408, column: 5, scope: !11229)
!11274 = !DILocation(line: 3411, column: 7, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3411, column: 7)
!11276 = !DILocation(line: 3411, column: 29, scope: !11275)
!11277 = !DILocation(line: 3411, column: 27, scope: !11275)
!11278 = !DILocation(line: 3412, column: 7, scope: !11275)
!11279 = !DILocation(line: 3412, column: 10, scope: !11275)
!11280 = !DILocation(line: 3412, column: 34, scope: !11275)
!11281 = !DILocation(line: 3412, column: 31, scope: !11275)
!11282 = !DILocation(line: 3411, column: 7, scope: !11074)
!11283 = !DILocation(line: 3413, column: 5, scope: !11275)
!11284 = !DILocation(line: 3414, column: 7, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3414, column: 7)
!11286 = !DILocation(line: 3414, column: 30, scope: !11285)
!11287 = !DILocation(line: 3414, column: 27, scope: !11285)
!11288 = !DILocation(line: 3415, column: 7, scope: !11285)
!11289 = !DILocation(line: 3415, column: 10, scope: !11285)
!11290 = !DILocation(line: 3415, column: 33, scope: !11285)
!11291 = !DILocation(line: 3415, column: 31, scope: !11285)
!11292 = !DILocation(line: 3414, column: 7, scope: !11074)
!11293 = !DILocation(line: 3416, column: 5, scope: !11285)
!11294 = !DILocation(line: 3421, column: 10, scope: !11074)
!11295 = !DILocation(line: 3421, column: 32, scope: !11074)
!11296 = !DILocation(line: 3421, column: 30, scope: !11074)
!11297 = !DILocation(line: 3421, column: 3, scope: !11074)
!11298 = !DILocation(line: 3422, column: 1, scope: !11074)
!11299 = distinct !DISubprogram(name: "VEC_expr_t_base_index", scope: !3, file: !3, line: 506, type: !11300, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11300 = !DISubroutineType(types: !11301)
!11301 = !{!2055, !11006, !7}
!11302 = !DILocalVariable(name: "vec_", arg: 1, scope: !11299, file: !3, line: 506, type: !11006)
!11303 = !DILocation(line: 506, column: 1, scope: !11299)
!11304 = !DILocalVariable(name: "ix_", arg: 2, scope: !11299, file: !3, line: 506, type: !7)
!11305 = !DILocation(line: 0, scope: !11299)
!11306 = distinct !DISubprogram(name: "VEC_expr_t_base_unordered_remove", scope: !3, file: !3, line: 506, type: !11307, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11307 = !DISubroutineType(types: !11308)
!11308 = !{!2055, !11013, !7}
!11309 = !DILocalVariable(name: "vec_", arg: 1, scope: !11306, file: !3, line: 506, type: !11013)
!11310 = !DILocation(line: 506, column: 1, scope: !11306)
!11311 = !DILocalVariable(name: "ix_", arg: 2, scope: !11306, file: !3, line: 506, type: !7)
!11312 = !DILocalVariable(name: "slot_", scope: !11306, file: !3, line: 506, type: !7007)
!11313 = !DILocalVariable(name: "obj_", scope: !11306, file: !3, line: 506, type: !2055)
!11314 = distinct !DISubprogram(name: "vinsn_vec_has_expr_p", scope: !3, file: !3, line: 3570, type: !11315, scopeLine: 3571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11315 = !DISubroutineType(types: !11316)
!11316 = !{!1057, !2383, !2055}
!11317 = !DILocalVariable(name: "vinsn_vec", arg: 1, scope: !11314, file: !3, line: 3570, type: !2383)
!11318 = !DILocation(line: 3570, column: 35, scope: !11314)
!11319 = !DILocalVariable(name: "expr", arg: 2, scope: !11314, file: !3, line: 3570, type: !2055)
!11320 = !DILocation(line: 3570, column: 53, scope: !11314)
!11321 = !DILocalVariable(name: "vinsn", scope: !11314, file: !3, line: 3572, type: !2061)
!11322 = !DILocation(line: 3572, column: 11, scope: !11314)
!11323 = !DILocalVariable(name: "n", scope: !11314, file: !3, line: 3573, type: !849)
!11324 = !DILocation(line: 3573, column: 7, scope: !11314)
!11325 = !DILocation(line: 3575, column: 10, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 3575, column: 3)
!11327 = !DILocation(line: 3575, column: 8, scope: !11326)
!11328 = !DILocation(line: 3575, column: 15, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11326, file: !3, line: 3575, column: 3)
!11330 = !DILocation(line: 3575, column: 3, scope: !11326)
!11331 = !DILocation(line: 3576, column: 9, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 3576, column: 9)
!11333 = !DILocation(line: 3576, column: 9, scope: !11329)
!11334 = !DILocation(line: 3578, column: 28, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 3578, column: 13)
!11336 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 3577, column: 7)
!11337 = !DILocation(line: 3578, column: 35, scope: !11335)
!11338 = !DILocation(line: 3578, column: 13, scope: !11335)
!11339 = !DILocation(line: 3578, column: 13, scope: !11336)
!11340 = !DILocation(line: 3579, column: 11, scope: !11335)
!11341 = !DILocation(line: 3580, column: 7, scope: !11336)
!11342 = !DILocation(line: 3587, column: 33, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 3587, column: 13)
!11344 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 3582, column: 7)
!11345 = !DILocation(line: 3588, column: 33, scope: !11343)
!11346 = !DILocation(line: 3587, column: 13, scope: !11343)
!11347 = !DILocation(line: 3587, column: 13, scope: !11344)
!11348 = !DILocation(line: 3589, column: 11, scope: !11343)
!11349 = !DILocation(line: 3575, column: 60, scope: !11329)
!11350 = !DILocation(line: 3575, column: 3, scope: !11329)
!11351 = distinct !{!11351, !11330, !11352}
!11352 = !DILocation(line: 3590, column: 7, scope: !11326)
!11353 = !DILocation(line: 3592, column: 3, scope: !11314)
!11354 = !DILocation(line: 3593, column: 1, scope: !11314)
!11355 = !DILocalVariable(name: "expr", arg: 1, scope: !2411, file: !3, line: 1688, type: !2055)
!11356 = !DILocation(line: 1688, column: 32, scope: !2411)
!11357 = !DILocalVariable(name: "bnds", arg: 2, scope: !2411, file: !3, line: 1688, type: !2401)
!11358 = !DILocation(line: 1688, column: 46, scope: !2411)
!11359 = !DILocalVariable(name: "is_orig_reg_p", arg: 3, scope: !2411, file: !3, line: 1688, type: !2281)
!11360 = !DILocation(line: 1688, column: 58, scope: !2411)
!11361 = !DILocalVariable(name: "used_regs", scope: !2411, file: !3, line: 1692, type: !2073)
!11362 = !DILocation(line: 1692, column: 10, scope: !2411)
!11363 = !DILocalVariable(name: "original_insns", scope: !2411, file: !3, line: 1693, type: !2253)
!11364 = !DILocation(line: 1693, column: 14, scope: !2411)
!11365 = !DILocalVariable(name: "reg_ok", scope: !2411, file: !3, line: 1694, type: !1057)
!11366 = !DILocation(line: 1694, column: 8, scope: !2411)
!11367 = !DILocation(line: 1696, column: 4, scope: !2411)
!11368 = !DILocation(line: 1696, column: 18, scope: !2411)
!11369 = !DILocation(line: 1699, column: 7, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !2411, file: !3, line: 1699, column: 7)
!11371 = !DILocation(line: 1700, column: 7, scope: !11370)
!11372 = !DILocation(line: 1700, column: 10, scope: !11370)
!11373 = !DILocation(line: 1699, column: 7, scope: !2411)
!11374 = !DILocation(line: 1701, column: 5, scope: !11370)
!11375 = !DILocation(line: 1703, column: 15, scope: !2411)
!11376 = !DILocation(line: 1703, column: 13, scope: !2411)
!11377 = !DILocation(line: 1704, column: 3, scope: !2411)
!11378 = !DILocation(line: 1706, column: 39, scope: !2411)
!11379 = !DILocation(line: 1706, column: 45, scope: !2411)
!11380 = !DILocation(line: 1706, column: 51, scope: !2411)
!11381 = !DILocation(line: 1706, column: 3, scope: !2411)
!11382 = !DILocation(line: 1721, column: 7, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !2411, file: !3, line: 1721, column: 7)
!11384 = !DILocation(line: 1721, column: 7, scope: !2411)
!11385 = !DILocalVariable(name: "best_reg", scope: !11386, file: !3, line: 1723, type: !825)
!11386 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 1722, column: 5)
!11387 = !DILocation(line: 1723, column: 11, scope: !11386)
!11388 = !DILocation(line: 1726, column: 35, scope: !11386)
!11389 = !DILocation(line: 1726, column: 41, scope: !11386)
!11390 = !DILocation(line: 1726, column: 7, scope: !11386)
!11391 = !DILocation(line: 1729, column: 11, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11386, file: !3, line: 1729, column: 11)
!11393 = !DILocation(line: 1729, column: 11, scope: !11386)
!11394 = !DILocalVariable(name: "hard_regs_used", scope: !11395, file: !3, line: 1731, type: !2279)
!11395 = distinct !DILexicalBlock(scope: !11392, file: !3, line: 1730, column: 2)
!11396 = !DILocation(line: 1731, column: 17, scope: !11395)
!11397 = !DILocation(line: 1732, column: 4, scope: !11395)
!11398 = !DILocation(line: 1732, column: 4, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 1732, column: 4)
!11400 = !DILocation(line: 1736, column: 4, scope: !11395)
!11401 = !DILocation(line: 1739, column: 32, scope: !11395)
!11402 = !DILocation(line: 1740, column: 11, scope: !11395)
!11403 = !DILocation(line: 1740, column: 27, scope: !11395)
!11404 = !DILocation(line: 1739, column: 15, scope: !11395)
!11405 = !DILocation(line: 1739, column: 13, scope: !11395)
!11406 = !DILocation(line: 1741, column: 2, scope: !11395)
!11407 = !DILocation(line: 1743, column: 37, scope: !11392)
!11408 = !DILocation(line: 1744, column: 9, scope: !11392)
!11409 = !DILocation(line: 1744, column: 25, scope: !11392)
!11410 = !DILocation(line: 1743, column: 13, scope: !11392)
!11411 = !DILocation(line: 1743, column: 11, scope: !11392)
!11412 = !DILocation(line: 1746, column: 12, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11386, file: !3, line: 1746, column: 11)
!11414 = !DILocation(line: 1746, column: 11, scope: !11386)
!11415 = !DILocation(line: 1747, column: 9, scope: !11413)
!11416 = !DILocation(line: 1747, column: 2, scope: !11413)
!11417 = !DILocation(line: 1748, column: 17, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 1748, column: 16)
!11419 = !DILocation(line: 1748, column: 16, scope: !11418)
!11420 = !DILocation(line: 1748, column: 16, scope: !11413)
!11421 = !DILocation(line: 1753, column: 35, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 1749, column: 2)
!11423 = !DILocation(line: 1753, column: 51, scope: !11422)
!11424 = !DILocation(line: 1753, column: 61, scope: !11422)
!11425 = !DILocation(line: 1753, column: 13, scope: !11422)
!11426 = !DILocation(line: 1753, column: 11, scope: !11422)
!11427 = !DILocation(line: 1754, column: 2, scope: !11422)
!11428 = !DILocation(line: 1758, column: 24, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 1758, column: 8)
!11430 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 1756, column: 2)
!11431 = !DILocation(line: 1758, column: 8, scope: !11429)
!11432 = !DILocation(line: 1758, column: 43, scope: !11429)
!11433 = !DILocation(line: 1758, column: 8, scope: !11430)
!11434 = !DILocation(line: 1759, column: 13, scope: !11429)
!11435 = !DILocation(line: 1759, column: 6, scope: !11429)
!11436 = !DILocation(line: 1761, column: 37, scope: !11429)
!11437 = !DILocation(line: 1761, column: 53, scope: !11429)
!11438 = !DILocation(line: 1761, column: 63, scope: !11429)
!11439 = !DILocation(line: 1761, column: 15, scope: !11429)
!11440 = !DILocation(line: 1761, column: 13, scope: !11429)
!11441 = !DILocation(line: 1763, column: 5, scope: !11386)
!11442 = !DILocation(line: 1768, column: 39, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11444, file: !3, line: 1768, column: 11)
!11444 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 1765, column: 5)
!11445 = !DILocation(line: 1768, column: 58, scope: !11443)
!11446 = !DILocation(line: 1769, column: 27, scope: !11443)
!11447 = !DILocation(line: 1768, column: 11, scope: !11443)
!11448 = !DILocation(line: 1768, column: 11, scope: !11444)
!11449 = !DILocation(line: 1771, column: 11, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11443, file: !3, line: 1770, column: 2)
!11451 = !DILocation(line: 1772, column: 4, scope: !11450)
!11452 = !DILocation(line: 1773, column: 2, scope: !11450)
!11453 = !DILocation(line: 1776, column: 11, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11443, file: !3, line: 1775, column: 2)
!11455 = !DILocation(line: 1777, column: 4, scope: !11454)
!11456 = !DILocation(line: 1781, column: 3, scope: !2411)
!11457 = !DILocation(line: 1782, column: 26, scope: !2411)
!11458 = !DILocation(line: 1782, column: 3, scope: !2411)
!11459 = !DILocation(line: 1784, column: 10, scope: !2411)
!11460 = !DILocation(line: 1784, column: 3, scope: !2411)
!11461 = !DILocation(line: 1785, column: 1, scope: !2411)
!11462 = distinct !DISubprogram(name: "VEC_expr_t_base_iterate", scope: !3, file: !3, line: 506, type: !11463, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11463 = !DISubroutineType(types: !11464)
!11464 = !{!849, !11006, !7, !7007}
!11465 = !DILocalVariable(name: "vec_", arg: 1, scope: !11462, file: !3, line: 506, type: !11006)
!11466 = !DILocation(line: 506, column: 1, scope: !11462)
!11467 = !DILocalVariable(name: "ix_", arg: 2, scope: !11462, file: !3, line: 506, type: !7)
!11468 = !DILocalVariable(name: "ptr", arg: 3, scope: !11462, file: !3, line: 506, type: !7007)
!11469 = !DILocation(line: 506, column: 1, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11462, file: !3, line: 506, column: 1)
!11471 = !DILocation(line: 506, column: 1, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 506, column: 1)
!11473 = !DILocation(line: 506, column: 1, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 506, column: 1)
!11475 = distinct !DISubprogram(name: "VEC_expr_t_heap_reserve", scope: !3, file: !3, line: 507, type: !11476, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11476 = !DISubroutineType(types: !11477)
!11477 = !{!849, !11022, !849}
!11478 = !DILocalVariable(name: "vec_", arg: 1, scope: !11475, file: !3, line: 507, type: !11022)
!11479 = !DILocation(line: 507, column: 1, scope: !11475)
!11480 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11475, file: !3, line: 507, type: !849)
!11481 = !DILocalVariable(name: "extend", scope: !11475, file: !3, line: 507, type: !849)
!11482 = !DILocation(line: 507, column: 1, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 507, column: 1)
!11484 = distinct !DISubprogram(name: "VEC_expr_t_base_quick_push", scope: !3, file: !3, line: 506, type: !11485, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11485 = !DISubroutineType(types: !11486)
!11486 = !{!7007, !11013, !2055}
!11487 = !DILocalVariable(name: "vec_", arg: 1, scope: !11484, file: !3, line: 506, type: !11013)
!11488 = !DILocation(line: 506, column: 1, scope: !11484)
!11489 = !DILocalVariable(name: "obj_", arg: 2, scope: !11484, file: !3, line: 506, type: !2055)
!11490 = !DILocalVariable(name: "slot_", scope: !11484, file: !3, line: 506, type: !7007)
!11491 = distinct !DISubprogram(name: "VEC_expr_t_base_space", scope: !3, file: !3, line: 506, type: !11492, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11492 = !DISubroutineType(types: !11493)
!11493 = !{!849, !11013, !849}
!11494 = !DILocalVariable(name: "vec_", arg: 1, scope: !11491, file: !3, line: 506, type: !11013)
!11495 = !DILocation(line: 506, column: 1, scope: !11491)
!11496 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11491, file: !3, line: 506, type: !849)
!11497 = distinct !DISubprogram(name: "VEC_vinsn_t_base_iterate", scope: !3, file: !3, line: 511, type: !11498, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11498 = !DISubroutineType(types: !11499)
!11499 = !{!849, !11500, !7, !5255}
!11500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11501, size: 64)
!11501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2239)
!11502 = !DILocalVariable(name: "vec_", arg: 1, scope: !11497, file: !3, line: 511, type: !11500)
!11503 = !DILocation(line: 511, column: 1, scope: !11497)
!11504 = !DILocalVariable(name: "ix_", arg: 2, scope: !11497, file: !3, line: 511, type: !7)
!11505 = !DILocalVariable(name: "ptr", arg: 3, scope: !11497, file: !3, line: 511, type: !5255)
!11506 = !DILocation(line: 511, column: 1, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11497, file: !3, line: 511, column: 1)
!11508 = !DILocation(line: 511, column: 1, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 511, column: 1)
!11510 = !DILocation(line: 511, column: 1, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 511, column: 1)
!11512 = distinct !DISubprogram(name: "collect_unavailable_regs_from_bnds", scope: !3, file: !3, line: 1623, type: !11513, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11513 = !DISubroutineType(types: !11514)
!11514 = !{null, !2055, !2401, !2073, !11515, !2252}
!11515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!11516 = !DILocalVariable(name: "expr", arg: 1, scope: !11512, file: !3, line: 1623, type: !2055)
!11517 = !DILocation(line: 1623, column: 44, scope: !11512)
!11518 = !DILocalVariable(name: "bnds", arg: 2, scope: !11512, file: !3, line: 1623, type: !2401)
!11519 = !DILocation(line: 1623, column: 58, scope: !11512)
!11520 = !DILocalVariable(name: "used_regs", arg: 3, scope: !11512, file: !3, line: 1623, type: !2073)
!11521 = !DILocation(line: 1623, column: 71, scope: !11512)
!11522 = !DILocalVariable(name: "reg_rename_p", arg: 4, scope: !11512, file: !3, line: 1624, type: !11515)
!11523 = !DILocation(line: 1624, column: 28, scope: !11512)
!11524 = !DILocalVariable(name: "original_insns", arg: 5, scope: !11512, file: !3, line: 1625, type: !2252)
!11525 = !DILocation(line: 1625, column: 21, scope: !11512)
!11526 = !DILocation(line: 1627, column: 3, scope: !11512)
!11527 = !DILocation(line: 1627, column: 10, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 1627, column: 3)
!11529 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 1627, column: 3)
!11530 = !DILocation(line: 1627, column: 3, scope: !11529)
!11531 = !DILocalVariable(name: "res", scope: !11532, file: !3, line: 1629, type: !1057)
!11532 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 1628, column: 5)
!11533 = !DILocation(line: 1629, column: 12, scope: !11532)
!11534 = !DILocalVariable(name: "orig_ops", scope: !11532, file: !3, line: 1630, type: !2166)
!11535 = !DILocation(line: 1630, column: 16, scope: !11532)
!11536 = !DILocalVariable(name: "bnd", scope: !11532, file: !3, line: 1631, type: !8852)
!11537 = !DILocation(line: 1631, column: 13, scope: !11532)
!11538 = !DILocation(line: 1631, column: 19, scope: !11532)
!11539 = !DILocation(line: 1635, column: 28, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11532, file: !3, line: 1635, column: 11)
!11541 = !DILocation(line: 1635, column: 43, scope: !11540)
!11542 = !DILocation(line: 1635, column: 12, scope: !11540)
!11543 = !DILocation(line: 1635, column: 11, scope: !11532)
!11544 = !DILocation(line: 1636, column: 2, scope: !11540)
!11545 = !DILocation(line: 1640, column: 46, scope: !11532)
!11546 = !DILocation(line: 1640, column: 51, scope: !11532)
!11547 = !DILocation(line: 1640, column: 18, scope: !11532)
!11548 = !DILocation(line: 1640, column: 16, scope: !11532)
!11549 = !DILocation(line: 1643, column: 29, scope: !11532)
!11550 = !DILocation(line: 1643, column: 43, scope: !11532)
!11551 = !DILocation(line: 1643, column: 53, scope: !11532)
!11552 = !DILocation(line: 1644, column: 8, scope: !11532)
!11553 = !DILocation(line: 1644, column: 22, scope: !11532)
!11554 = !DILocation(line: 1643, column: 13, scope: !11532)
!11555 = !DILocation(line: 1643, column: 11, scope: !11532)
!11556 = !DILocation(line: 1647, column: 7, scope: !11532)
!11557 = !DILocation(line: 1648, column: 7, scope: !11532)
!11558 = !DILocation(line: 1649, column: 5, scope: !11532)
!11559 = !DILocation(line: 1627, column: 23, scope: !11528)
!11560 = !DILocation(line: 1627, column: 21, scope: !11528)
!11561 = !DILocation(line: 1627, column: 3, scope: !11528)
!11562 = distinct !{!11562, !11530, !11563}
!11563 = !DILocation(line: 1649, column: 5, scope: !11529)
!11564 = !DILocation(line: 1650, column: 1, scope: !11512)
!11565 = distinct !DISubprogram(name: "verify_target_availability", scope: !3, file: !3, line: 1570, type: !11566, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11566 = !DISubroutineType(types: !11567)
!11567 = !{null, !2055, !2073, !11515}
!11568 = !DILocalVariable(name: "expr", arg: 1, scope: !11565, file: !3, line: 1570, type: !2055)
!11569 = !DILocation(line: 1570, column: 36, scope: !11565)
!11570 = !DILocalVariable(name: "used_regs", arg: 2, scope: !11565, file: !3, line: 1570, type: !2073)
!11571 = !DILocation(line: 1570, column: 49, scope: !11565)
!11572 = !DILocalVariable(name: "reg_rename_p", arg: 3, scope: !11565, file: !3, line: 1571, type: !11515)
!11573 = !DILocation(line: 1571, column: 27, scope: !11565)
!11574 = !DILocalVariable(name: "n", scope: !11565, file: !3, line: 1573, type: !7)
!11575 = !DILocation(line: 1573, column: 12, scope: !11565)
!11576 = !DILocalVariable(name: "i", scope: !11565, file: !3, line: 1573, type: !7)
!11577 = !DILocation(line: 1573, column: 15, scope: !11565)
!11578 = !DILocalVariable(name: "regno", scope: !11565, file: !3, line: 1573, type: !7)
!11579 = !DILocation(line: 1573, column: 18, scope: !11565)
!11580 = !DILocalVariable(name: "mode", scope: !11565, file: !3, line: 1574, type: !5)
!11581 = !DILocation(line: 1574, column: 21, scope: !11565)
!11582 = !DILocalVariable(name: "target_available", scope: !11565, file: !3, line: 1575, type: !1057)
!11583 = !DILocation(line: 1575, column: 8, scope: !11565)
!11584 = !DILocalVariable(name: "live_available", scope: !11565, file: !3, line: 1575, type: !1057)
!11585 = !DILocation(line: 1575, column: 26, scope: !11565)
!11586 = !DILocalVariable(name: "hard_available", scope: !11565, file: !3, line: 1575, type: !1057)
!11587 = !DILocation(line: 1575, column: 42, scope: !11565)
!11588 = !DILocation(line: 1577, column: 8, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 1577, column: 7)
!11590 = !DILocation(line: 1577, column: 32, scope: !11589)
!11591 = !DILocation(line: 1577, column: 35, scope: !11589)
!11592 = !DILocation(line: 1577, column: 64, scope: !11589)
!11593 = !DILocation(line: 1577, column: 7, scope: !11565)
!11594 = !DILocation(line: 1578, column: 5, scope: !11589)
!11595 = !DILocation(line: 1580, column: 28, scope: !11565)
!11596 = !DILocation(line: 1580, column: 11, scope: !11565)
!11597 = !DILocation(line: 1580, column: 9, scope: !11565)
!11598 = !DILocation(line: 1581, column: 10, scope: !11565)
!11599 = !DILocation(line: 1581, column: 8, scope: !11565)
!11600 = !DILocation(line: 1582, column: 22, scope: !11565)
!11601 = !DILocation(line: 1582, column: 51, scope: !11565)
!11602 = !DILocation(line: 1582, column: 20, scope: !11565)
!11603 = !DILocation(line: 1583, column: 7, scope: !11565)
!11604 = !DILocation(line: 1583, column: 43, scope: !11565)
!11605 = !DILocation(line: 1583, column: 26, scope: !11565)
!11606 = !DILocation(line: 1583, column: 50, scope: !11565)
!11607 = !DILocation(line: 1583, column: 5, scope: !11565)
!11608 = !DILocation(line: 1585, column: 35, scope: !11565)
!11609 = !DILocation(line: 1585, column: 18, scope: !11565)
!11610 = !DILocation(line: 1586, column: 10, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 1586, column: 3)
!11612 = !DILocation(line: 1586, column: 8, scope: !11611)
!11613 = !DILocation(line: 1586, column: 15, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11611, file: !3, line: 1586, column: 3)
!11615 = !DILocation(line: 1586, column: 19, scope: !11614)
!11616 = !DILocation(line: 1586, column: 17, scope: !11614)
!11617 = !DILocation(line: 1586, column: 3, scope: !11611)
!11618 = !DILocation(line: 1588, column: 25, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 1588, column: 11)
!11620 = distinct !DILexicalBlock(scope: !11614, file: !3, line: 1587, column: 5)
!11621 = !DILocation(line: 1588, column: 36, scope: !11619)
!11622 = !DILocation(line: 1588, column: 44, scope: !11619)
!11623 = !DILocation(line: 1588, column: 42, scope: !11619)
!11624 = !DILocation(line: 1588, column: 11, scope: !11619)
!11625 = !DILocation(line: 1588, column: 11, scope: !11620)
!11626 = !DILocation(line: 1589, column: 24, scope: !11619)
!11627 = !DILocation(line: 1589, column: 9, scope: !11619)
!11628 = !DILocation(line: 1590, column: 11, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 1590, column: 11)
!11630 = !DILocation(line: 1590, column: 11, scope: !11620)
!11631 = !DILocation(line: 1591, column: 24, scope: !11629)
!11632 = !DILocation(line: 1591, column: 9, scope: !11629)
!11633 = !DILocation(line: 1592, column: 5, scope: !11620)
!11634 = !DILocation(line: 1586, column: 23, scope: !11614)
!11635 = !DILocation(line: 1586, column: 3, scope: !11614)
!11636 = distinct !{!11636, !11617, !11637}
!11637 = !DILocation(line: 1592, column: 5, scope: !11611)
!11638 = !DILocation(line: 1596, column: 7, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 1596, column: 7)
!11640 = !DILocation(line: 1596, column: 7, scope: !11565)
!11641 = !DILocation(line: 1597, column: 5, scope: !11639)
!11642 = !DILocation(line: 1611, column: 5, scope: !11639)
!11643 = !DILocation(line: 1615, column: 1, scope: !11565)
!11644 = distinct !DISubprogram(name: "choose_best_reg", scope: !3, file: !3, line: 1467, type: !11645, scopeLine: 1469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11645 = !DISubroutineType(types: !11646)
!11646 = !{!825, !2279, !11515, !2253, !2281}
!11647 = !DILocalVariable(name: "hard_regs_used", arg: 1, scope: !11644, file: !3, line: 1467, type: !2279)
!11648 = !DILocation(line: 1467, column: 31, scope: !11644)
!11649 = !DILocalVariable(name: "reg_rename_p", arg: 2, scope: !11644, file: !3, line: 1467, type: !11515)
!11650 = !DILocation(line: 1467, column: 66, scope: !11644)
!11651 = !DILocalVariable(name: "original_insns", arg: 3, scope: !11644, file: !3, line: 1468, type: !2253)
!11652 = !DILocation(line: 1468, column: 29, scope: !11644)
!11653 = !DILocalVariable(name: "is_orig_reg_p_ptr", arg: 4, scope: !11644, file: !3, line: 1468, type: !2281)
!11654 = !DILocation(line: 1468, column: 51, scope: !11644)
!11655 = !DILocalVariable(name: "best_reg", scope: !11644, file: !3, line: 1470, type: !825)
!11656 = !DILocation(line: 1470, column: 7, scope: !11644)
!11657 = !DILocation(line: 1470, column: 37, scope: !11644)
!11658 = !DILocation(line: 1470, column: 53, scope: !11644)
!11659 = !DILocation(line: 1471, column: 37, scope: !11644)
!11660 = !DILocation(line: 1471, column: 53, scope: !11644)
!11661 = !DILocation(line: 1470, column: 18, scope: !11644)
!11662 = !DILocation(line: 1474, column: 3, scope: !11644)
!11663 = !DILocation(line: 1477, column: 10, scope: !11644)
!11664 = !DILocation(line: 1477, column: 3, scope: !11644)
!11665 = distinct !DISubprogram(name: "choose_best_pseudo_reg", scope: !3, file: !3, line: 1490, type: !11666, scopeLine: 1493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11666 = !DISubroutineType(types: !11667)
!11667 = !{!825, !2073, !11515, !2253, !2281}
!11668 = !DILocalVariable(name: "used_regs", arg: 1, scope: !11665, file: !3, line: 1490, type: !2073)
!11669 = !DILocation(line: 1490, column: 32, scope: !11665)
!11670 = !DILocalVariable(name: "reg_rename_p", arg: 2, scope: !11665, file: !3, line: 1491, type: !11515)
!11671 = !DILocation(line: 1491, column: 44, scope: !11665)
!11672 = !DILocalVariable(name: "original_insns", arg: 3, scope: !11665, file: !3, line: 1492, type: !2253)
!11673 = !DILocation(line: 1492, column: 36, scope: !11665)
!11674 = !DILocalVariable(name: "is_orig_reg_p_ptr", arg: 4, scope: !11665, file: !3, line: 1492, type: !2281)
!11675 = !DILocation(line: 1492, column: 58, scope: !11665)
!11676 = !DILocalVariable(name: "i", scope: !11665, file: !3, line: 1494, type: !11677)
!11677 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_list_iterator", file: !398, line: 552, baseType: !3061)
!11678 = !DILocation(line: 1494, column: 21, scope: !11665)
!11679 = !DILocalVariable(name: "def", scope: !11665, file: !3, line: 1495, type: !11680)
!11680 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_t", file: !398, line: 212, baseType: !11681)
!11681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!11682 = !DILocation(line: 1495, column: 9, scope: !11665)
!11683 = !DILocalVariable(name: "mode", scope: !11665, file: !3, line: 1496, type: !5)
!11684 = !DILocation(line: 1496, column: 21, scope: !11665)
!11685 = !DILocalVariable(name: "bad_hard_regs", scope: !11665, file: !3, line: 1497, type: !1057)
!11686 = !DILocation(line: 1497, column: 8, scope: !11665)
!11687 = !DILocation(line: 1500, column: 3, scope: !11665)
!11688 = !DILocation(line: 1503, column: 4, scope: !11665)
!11689 = !DILocation(line: 1503, column: 22, scope: !11665)
!11690 = !DILocation(line: 1505, column: 3, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11665, file: !3, line: 1505, column: 3)
!11692 = !DILocation(line: 1505, column: 3, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 1505, column: 3)
!11694 = !DILocalVariable(name: "dest", scope: !11695, file: !3, line: 1507, type: !825)
!11695 = distinct !DILexicalBlock(scope: !11693, file: !3, line: 1506, column: 5)
!11696 = !DILocation(line: 1507, column: 11, scope: !11695)
!11697 = !DILocation(line: 1507, column: 18, scope: !11695)
!11698 = !DILocalVariable(name: "orig_regno", scope: !11695, file: !3, line: 1508, type: !849)
!11699 = !DILocation(line: 1508, column: 11, scope: !11695)
!11700 = !DILocation(line: 1510, column: 7, scope: !11695)
!11701 = !DILocation(line: 1513, column: 11, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11695, file: !3, line: 1513, column: 11)
!11703 = !DILocation(line: 1513, column: 16, scope: !11702)
!11704 = !DILocation(line: 1513, column: 11, scope: !11695)
!11705 = !DILocation(line: 1514, column: 16, scope: !11702)
!11706 = !DILocation(line: 1514, column: 14, scope: !11702)
!11707 = !DILocation(line: 1514, column: 9, scope: !11702)
!11708 = !DILocation(line: 1516, column: 9, scope: !11702)
!11709 = !DILocation(line: 1517, column: 20, scope: !11695)
!11710 = !DILocation(line: 1517, column: 18, scope: !11695)
!11711 = !DILocation(line: 1519, column: 12, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11695, file: !3, line: 1519, column: 11)
!11713 = !DILocation(line: 1519, column: 11, scope: !11695)
!11714 = !DILocation(line: 1521, column: 15, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 1521, column: 15)
!11716 = distinct !DILexicalBlock(scope: !11712, file: !3, line: 1520, column: 9)
!11717 = !DILocation(line: 1521, column: 26, scope: !11715)
!11718 = !DILocation(line: 1521, column: 15, scope: !11716)
!11719 = !DILocation(line: 1523, column: 15, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 1522, column: 13)
!11721 = !DILocation(line: 1527, column: 20, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 1527, column: 19)
!11723 = !DILocation(line: 1527, column: 19, scope: !11720)
!11724 = !DILocation(line: 1533, column: 10, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 1533, column: 9)
!11726 = distinct !DILexicalBlock(scope: !11722, file: !3, line: 1529, column: 3)
!11727 = !DILocation(line: 1533, column: 24, scope: !11725)
!11728 = !DILocation(line: 1534, column: 9, scope: !11725)
!11729 = !DILocation(line: 1534, column: 12, scope: !11725)
!11730 = !DILocation(line: 1534, column: 45, scope: !11725)
!11731 = !DILocation(line: 1533, column: 9, scope: !11726)
!11732 = !DILocation(line: 1535, column: 27, scope: !11725)
!11733 = !DILocation(line: 1535, column: 33, scope: !11725)
!11734 = !DILocation(line: 1535, column: 14, scope: !11725)
!11735 = !DILocation(line: 1535, column: 7, scope: !11725)
!11736 = !DILocation(line: 1536, column: 3, scope: !11726)
!11737 = !DILocation(line: 1538, column: 29, scope: !11720)
!11738 = !DILocation(line: 1539, column: 13, scope: !11720)
!11739 = !DILocation(line: 1541, column: 20, scope: !11715)
!11740 = !DILocation(line: 1541, column: 13, scope: !11715)
!11741 = !DILocation(line: 1542, column: 9, scope: !11716)
!11742 = !DILocation(line: 1543, column: 6, scope: !11695)
!11743 = distinct !{!11743, !11690, !11744}
!11744 = !DILocation(line: 1543, column: 6, scope: !11691)
!11745 = !DILocation(line: 1545, column: 4, scope: !11665)
!11746 = !DILocation(line: 1545, column: 22, scope: !11665)
!11747 = !DILocation(line: 1549, column: 7, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11665, file: !3, line: 1549, column: 7)
!11749 = !DILocation(line: 1549, column: 7, scope: !11665)
!11750 = !DILocation(line: 1550, column: 5, scope: !11748)
!11751 = !DILocalVariable(name: "new_reg", scope: !11752, file: !3, line: 1555, type: !825)
!11752 = distinct !DILexicalBlock(scope: !11665, file: !3, line: 1554, column: 3)
!11753 = !DILocation(line: 1555, column: 9, scope: !11752)
!11754 = !DILocation(line: 1555, column: 32, scope: !11752)
!11755 = !DILocation(line: 1555, column: 19, scope: !11752)
!11756 = !DILocation(line: 1557, column: 5, scope: !11752)
!11757 = !DILocation(line: 1559, column: 17, scope: !11752)
!11758 = !DILocation(line: 1559, column: 15, scope: !11752)
!11759 = !DILocation(line: 1560, column: 5, scope: !11752)
!11760 = !DILocation(line: 1561, column: 45, scope: !11752)
!11761 = !DILocation(line: 1561, column: 59, scope: !11752)
!11762 = !DILocation(line: 1561, column: 5, scope: !11752)
!11763 = !DILocation(line: 1561, column: 43, scope: !11752)
!11764 = !DILocation(line: 1563, column: 12, scope: !11752)
!11765 = !DILocation(line: 1563, column: 5, scope: !11752)
!11766 = !DILocation(line: 1565, column: 1, scope: !11665)
!11767 = distinct !DISubprogram(name: "try_replace_dest_reg", scope: !3, file: !3, line: 1655, type: !11768, scopeLine: 1656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{!1057, !2163, !825, !2055}
!11770 = !DILocalVariable(name: "orig_insns", arg: 1, scope: !11767, file: !3, line: 1655, type: !2163)
!11771 = !DILocation(line: 1655, column: 31, scope: !11767)
!11772 = !DILocalVariable(name: "best_reg", arg: 2, scope: !11767, file: !3, line: 1655, type: !825)
!11773 = !DILocation(line: 1655, column: 47, scope: !11767)
!11774 = !DILocalVariable(name: "expr", arg: 3, scope: !11767, file: !3, line: 1655, type: !2055)
!11775 = !DILocation(line: 1655, column: 64, scope: !11767)
!11776 = !DILocation(line: 1659, column: 3, scope: !11767)
!11777 = !DILocation(line: 1659, column: 10, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11779, file: !3, line: 1659, column: 3)
!11779 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 1659, column: 3)
!11780 = !DILocation(line: 1659, column: 3, scope: !11779)
!11781 = !DILocalVariable(name: "orig_insn", scope: !11782, file: !3, line: 1661, type: !2132)
!11782 = distinct !DILexicalBlock(scope: !11778, file: !3, line: 1660, column: 5)
!11783 = !DILocation(line: 1661, column: 14, scope: !11782)
!11784 = !DILocation(line: 1661, column: 26, scope: !11782)
!11785 = !DILocation(line: 1661, column: 53, scope: !11782)
!11786 = !DILocation(line: 1663, column: 7, scope: !11782)
!11787 = !DILocation(line: 1665, column: 11, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 1665, column: 11)
!11789 = !DILocation(line: 1665, column: 31, scope: !11788)
!11790 = !DILocation(line: 1665, column: 28, scope: !11788)
!11791 = !DILocation(line: 1666, column: 4, scope: !11788)
!11792 = !DILocation(line: 1666, column: 37, scope: !11788)
!11793 = !DILocation(line: 1666, column: 48, scope: !11788)
!11794 = !DILocation(line: 1666, column: 10, scope: !11788)
!11795 = !DILocation(line: 1667, column: 8, scope: !11788)
!11796 = !DILocation(line: 1667, column: 41, scope: !11788)
!11797 = !DILocation(line: 1667, column: 52, scope: !11788)
!11798 = !DILocation(line: 1667, column: 13, scope: !11788)
!11799 = !DILocation(line: 1665, column: 11, scope: !11782)
!11800 = !DILocation(line: 1668, column: 2, scope: !11788)
!11801 = !DILocation(line: 1669, column: 5, scope: !11782)
!11802 = !DILocation(line: 1659, column: 35, scope: !11778)
!11803 = !DILocation(line: 1659, column: 33, scope: !11778)
!11804 = !DILocation(line: 1659, column: 3, scope: !11778)
!11805 = distinct !{!11805, !11780, !11806}
!11806 = !DILocation(line: 1669, column: 5, scope: !11779)
!11807 = !DILocation(line: 1673, column: 24, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 1673, column: 7)
!11809 = !DILocation(line: 1673, column: 7, scope: !11808)
!11810 = !DILocation(line: 1673, column: 33, scope: !11808)
!11811 = !DILocation(line: 1673, column: 30, scope: !11808)
!11812 = !DILocation(line: 1673, column: 7, scope: !11767)
!11813 = !DILocation(line: 1674, column: 36, scope: !11808)
!11814 = !DILocation(line: 1674, column: 42, scope: !11808)
!11815 = !DILocation(line: 1674, column: 5, scope: !11808)
!11816 = !DILocation(line: 1676, column: 5, scope: !11808)
!11817 = !DILocation(line: 1676, column: 34, scope: !11808)
!11818 = !DILocation(line: 1678, column: 3, scope: !11767)
!11819 = !DILocation(line: 1679, column: 1, scope: !11767)
!11820 = distinct !DISubprogram(name: "vinsn_writes_one_of_regs_p", scope: !3, file: !3, line: 994, type: !11821, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11821 = !DISubroutineType(types: !11822)
!11822 = !{!1057, !2061, !2073, !2279}
!11823 = !DILocalVariable(name: "vi", arg: 1, scope: !11820, file: !3, line: 994, type: !2061)
!11824 = !DILocation(line: 994, column: 37, scope: !11820)
!11825 = !DILocalVariable(name: "used_regs", arg: 2, scope: !11820, file: !3, line: 994, type: !2073)
!11826 = !DILocation(line: 994, column: 48, scope: !11820)
!11827 = !DILocalVariable(name: "unavailable_hard_regs", arg: 3, scope: !11820, file: !3, line: 995, type: !2279)
!11828 = !DILocation(line: 995, column: 42, scope: !11820)
!11829 = !DILocalVariable(name: "regno", scope: !11820, file: !3, line: 997, type: !7)
!11830 = !DILocation(line: 997, column: 12, scope: !11820)
!11831 = !DILocalVariable(name: "rsi", scope: !11820, file: !3, line: 998, type: !11832)
!11832 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_set_iterator", file: !155, line: 90, baseType: !7987)
!11833 = !DILocation(line: 998, column: 20, scope: !11820)
!11834 = !DILocation(line: 1000, column: 3, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 1000, column: 3)
!11836 = !DILocation(line: 1000, column: 3, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 1000, column: 3)
!11838 = !DILocation(line: 1002, column: 11, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11840, file: !3, line: 1002, column: 11)
!11840 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 1001, column: 5)
!11841 = !DILocation(line: 1002, column: 11, scope: !11840)
!11842 = !DILocation(line: 1003, column: 9, scope: !11839)
!11843 = !DILocation(line: 1004, column: 11, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11840, file: !3, line: 1004, column: 11)
!11845 = !DILocation(line: 1005, column: 11, scope: !11844)
!11846 = !DILocation(line: 1005, column: 14, scope: !11844)
!11847 = !DILocation(line: 1004, column: 11, scope: !11840)
!11848 = !DILocation(line: 1006, column: 2, scope: !11844)
!11849 = !DILocation(line: 1007, column: 5, scope: !11840)
!11850 = distinct !{!11850, !11834, !11851}
!11851 = !DILocation(line: 1007, column: 5, scope: !11835)
!11852 = !DILocation(line: 1009, column: 3, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 1009, column: 3)
!11854 = !DILocation(line: 1009, column: 3, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11853, file: !3, line: 1009, column: 3)
!11856 = !DILocation(line: 1011, column: 11, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11858, file: !3, line: 1011, column: 11)
!11858 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 1010, column: 5)
!11859 = !DILocation(line: 1011, column: 11, scope: !11858)
!11860 = !DILocation(line: 1012, column: 9, scope: !11857)
!11861 = !DILocation(line: 1013, column: 11, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11858, file: !3, line: 1013, column: 11)
!11863 = !DILocation(line: 1014, column: 11, scope: !11862)
!11864 = !DILocation(line: 1014, column: 14, scope: !11862)
!11865 = !DILocation(line: 1013, column: 11, scope: !11858)
!11866 = !DILocation(line: 1015, column: 2, scope: !11862)
!11867 = !DILocation(line: 1016, column: 5, scope: !11858)
!11868 = distinct !{!11868, !11852, !11869}
!11869 = !DILocation(line: 1016, column: 5, scope: !11853)
!11870 = !DILocation(line: 1018, column: 3, scope: !11820)
!11871 = !DILocation(line: 1019, column: 1, scope: !11820)
!11872 = distinct !DISubprogram(name: "_list_clear", scope: !398, file: !398, line: 408, type: !6909, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11873 = !DILocalVariable(name: "l", arg: 1, scope: !11872, file: !398, line: 408, type: !3065)
!11874 = !DILocation(line: 408, column: 23, scope: !11872)
!11875 = !DILocation(line: 410, column: 3, scope: !11872)
!11876 = !DILocation(line: 410, column: 11, scope: !11872)
!11877 = !DILocation(line: 410, column: 10, scope: !11872)
!11878 = !DILocation(line: 411, column: 19, scope: !11872)
!11879 = !DILocation(line: 411, column: 5, scope: !11872)
!11880 = distinct !{!11880, !11875, !11881}
!11881 = !DILocation(line: 411, column: 20, scope: !11872)
!11882 = !DILocation(line: 412, column: 1, scope: !11872)
!11883 = distinct !DISubprogram(name: "find_sequential_best_exprs", scope: !3, file: !3, line: 5069, type: !11884, scopeLine: 5070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11884 = !DISubroutineType(types: !11885)
!11885 = !{!2166, !8852, !2055, !1057}
!11886 = !DILocalVariable(name: "bnd", arg: 1, scope: !11883, file: !3, line: 5069, type: !8852)
!11887 = !DILocation(line: 5069, column: 35, scope: !11883)
!11888 = !DILocalVariable(name: "expr_vliw", arg: 2, scope: !11883, file: !3, line: 5069, type: !2055)
!11889 = !DILocation(line: 5069, column: 47, scope: !11883)
!11890 = !DILocalVariable(name: "for_moveop", arg: 3, scope: !11883, file: !3, line: 5069, type: !1057)
!11891 = !DILocation(line: 5069, column: 63, scope: !11883)
!11892 = !DILocalVariable(name: "expr_seq", scope: !11883, file: !3, line: 5071, type: !2166)
!11893 = !DILocation(line: 5071, column: 12, scope: !11883)
!11894 = !DILocalVariable(name: "expr", scope: !11883, file: !3, line: 5072, type: !2055)
!11895 = !DILocation(line: 5072, column: 10, scope: !11883)
!11896 = !DILocalVariable(name: "i", scope: !11883, file: !3, line: 5073, type: !3060)
!11897 = !DILocation(line: 5073, column: 19, scope: !11883)
!11898 = !DILocation(line: 5075, column: 3, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 5075, column: 3)
!11900 = !DILocation(line: 5075, column: 3, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11899, file: !3, line: 5075, column: 3)
!11902 = !DILocation(line: 5077, column: 38, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 5077, column: 11)
!11904 = distinct !DILexicalBlock(scope: !11901, file: !3, line: 5076, column: 5)
!11905 = !DILocation(line: 5077, column: 50, scope: !11903)
!11906 = !DILocation(line: 5077, column: 11, scope: !11903)
!11907 = !DILocation(line: 5077, column: 11, scope: !11904)
!11908 = !DILocation(line: 5079, column: 15, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 5079, column: 15)
!11910 = distinct !DILexicalBlock(scope: !11903, file: !3, line: 5078, column: 9)
!11911 = !DILocation(line: 5079, column: 15, scope: !11910)
!11912 = !DILocation(line: 5084, column: 19, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 5084, column: 19)
!11914 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 5080, column: 13)
!11915 = !DILocation(line: 5084, column: 43, scope: !11913)
!11916 = !DILocation(line: 5084, column: 46, scope: !11913)
!11917 = !DILocation(line: 5084, column: 19, scope: !11914)
!11918 = !DILocation(line: 5086, column: 40, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11920, file: !3, line: 5086, column: 23)
!11920 = distinct !DILexicalBlock(scope: !11913, file: !3, line: 5085, column: 3)
!11921 = !DILocation(line: 5086, column: 23, scope: !11919)
!11922 = !DILocation(line: 5086, column: 66, scope: !11919)
!11923 = !DILocation(line: 5086, column: 49, scope: !11919)
!11924 = !DILocation(line: 5086, column: 46, scope: !11919)
!11925 = !DILocation(line: 5086, column: 23, scope: !11920)
!11926 = !DILocation(line: 5088, column: 40, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11919, file: !3, line: 5087, column: 7)
!11928 = !DILocation(line: 5088, column: 46, scope: !11927)
!11929 = !DILocation(line: 5088, column: 9, scope: !11927)
!11930 = !DILocation(line: 5089, column: 31, scope: !11927)
!11931 = !DILocation(line: 5090, column: 7, scope: !11927)
!11932 = !DILocation(line: 5094, column: 28, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11919, file: !3, line: 5094, column: 28)
!11934 = !DILocation(line: 5095, column: 31, scope: !11933)
!11935 = !DILocation(line: 5095, column: 28, scope: !11933)
!11936 = !DILocation(line: 5094, column: 28, scope: !11919)
!11937 = !DILocation(line: 5097, column: 9, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11933, file: !3, line: 5096, column: 7)
!11939 = !DILocation(line: 5098, column: 9, scope: !11938)
!11940 = !DILocation(line: 5098, column: 38, scope: !11938)
!11941 = !DILocation(line: 5099, column: 7, scope: !11938)
!11942 = !DILocation(line: 5100, column: 3, scope: !11920)
!11943 = !DILocation(line: 5101, column: 19, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 5101, column: 19)
!11945 = !DILocation(line: 5101, column: 19, scope: !11914)
!11946 = !DILocation(line: 5102, column: 41, scope: !11944)
!11947 = !DILocation(line: 5102, column: 17, scope: !11944)
!11948 = !DILocation(line: 5103, column: 13, scope: !11914)
!11949 = !DILocation(line: 5105, column: 34, scope: !11910)
!11950 = !DILocation(line: 5105, column: 11, scope: !11910)
!11951 = !DILocation(line: 5111, column: 11, scope: !11910)
!11952 = !DILocation(line: 5113, column: 5, scope: !11904)
!11953 = distinct !{!11953, !11898, !11954}
!11954 = !DILocation(line: 5113, column: 5, scope: !11899)
!11955 = !DILocation(line: 5115, column: 7, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 5115, column: 7)
!11957 = !DILocation(line: 5115, column: 18, scope: !11956)
!11958 = !DILocation(line: 5115, column: 21, scope: !11956)
!11959 = !DILocation(line: 5115, column: 35, scope: !11956)
!11960 = !DILocation(line: 5115, column: 7, scope: !11883)
!11961 = !DILocation(line: 5117, column: 7, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 5116, column: 5)
!11963 = !DILocation(line: 5117, column: 7, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11965, file: !3, line: 5117, column: 7)
!11965 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 5117, column: 7)
!11966 = !DILocation(line: 5117, column: 7, scope: !11965)
!11967 = !DILocalVariable(name: "__j", scope: !11968, file: !3, line: 5117, type: !849)
!11968 = distinct !DILexicalBlock(scope: !11964, file: !3, line: 5117, column: 7)
!11969 = !DILocation(line: 5117, column: 7, scope: !11968)
!11970 = !DILocalVariable(name: "__s", scope: !11968, file: !3, line: 5117, type: !817)
!11971 = !DILocation(line: 5118, column: 20, scope: !11962)
!11972 = !DILocation(line: 5118, column: 7, scope: !11962)
!11973 = !DILocation(line: 5119, column: 7, scope: !11962)
!11974 = !DILocation(line: 5119, column: 7, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11976, file: !3, line: 5119, column: 7)
!11976 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 5119, column: 7)
!11977 = !DILocation(line: 5119, column: 7, scope: !11976)
!11978 = !DILocalVariable(name: "__j", scope: !11979, file: !3, line: 5119, type: !849)
!11979 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 5119, column: 7)
!11980 = !DILocation(line: 5119, column: 7, scope: !11979)
!11981 = !DILocalVariable(name: "__s", scope: !11979, file: !3, line: 5119, type: !817)
!11982 = !DILocation(line: 5120, column: 5, scope: !11962)
!11983 = !DILocation(line: 5122, column: 10, scope: !11883)
!11984 = !DILocation(line: 5122, column: 3, scope: !11883)
!11985 = distinct !DISubprogram(name: "find_used_regs", scope: !3, file: !3, line: 3233, type: !11986, scopeLine: 3235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!11986 = !DISubroutineType(types: !11987)
!11987 = !{!1057, !2132, !2166, !2073, !11515, !2252}
!11988 = !DILocalVariable(name: "insn", arg: 1, scope: !11985, file: !3, line: 3233, type: !2132)
!11989 = !DILocation(line: 3233, column: 24, scope: !11985)
!11990 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !11985, file: !3, line: 3233, type: !2166)
!11991 = !DILocation(line: 3233, column: 39, scope: !11985)
!11992 = !DILocalVariable(name: "used_regs", arg: 3, scope: !11985, file: !3, line: 3233, type: !2073)
!11993 = !DILocation(line: 3233, column: 56, scope: !11985)
!11994 = !DILocalVariable(name: "reg_rename_p", arg: 4, scope: !11985, file: !3, line: 3234, type: !11515)
!11995 = !DILocation(line: 3234, column: 23, scope: !11985)
!11996 = !DILocalVariable(name: "original_insns", arg: 5, scope: !11985, file: !3, line: 3234, type: !2252)
!11997 = !DILocation(line: 3234, column: 49, scope: !11985)
!11998 = !DILocalVariable(name: "i", scope: !11985, file: !3, line: 3236, type: !11677)
!11999 = !DILocation(line: 3236, column: 21, scope: !11985)
!12000 = !DILocalVariable(name: "def", scope: !11985, file: !3, line: 3237, type: !11680)
!12001 = !DILocation(line: 3237, column: 9, scope: !11985)
!12002 = !DILocalVariable(name: "res", scope: !11985, file: !3, line: 3238, type: !849)
!12003 = !DILocation(line: 3238, column: 7, scope: !11985)
!12004 = !DILocalVariable(name: "needs_spec_check_p", scope: !11985, file: !3, line: 3239, type: !1057)
!12005 = !DILocation(line: 3239, column: 8, scope: !11985)
!12006 = !DILocalVariable(name: "expr", scope: !11985, file: !3, line: 3240, type: !2055)
!12007 = !DILocation(line: 3240, column: 10, scope: !11985)
!12008 = !DILocalVariable(name: "expr_iter", scope: !11985, file: !3, line: 3241, type: !3060)
!12009 = !DILocation(line: 3241, column: 19, scope: !11985)
!12010 = !DILocalVariable(name: "sparams", scope: !11985, file: !3, line: 3242, type: !2248)
!12011 = !DILocation(line: 3242, column: 28, scope: !11985)
!12012 = !DILocalVariable(name: "lparams", scope: !11985, file: !3, line: 3243, type: !2298)
!12013 = !DILocation(line: 3243, column: 28, scope: !11985)
!12014 = !DILocation(line: 3246, column: 17, scope: !11985)
!12015 = !DILocation(line: 3246, column: 3, scope: !11985)
!12016 = !DILocation(line: 3249, column: 11, scope: !11985)
!12017 = !DILocation(line: 3249, column: 24, scope: !11985)
!12018 = !DILocation(line: 3250, column: 28, scope: !11985)
!12019 = !DILocation(line: 3250, column: 11, scope: !11985)
!12020 = !DILocation(line: 3250, column: 26, scope: !11985)
!12021 = !DILocation(line: 3251, column: 23, scope: !11985)
!12022 = !DILocation(line: 3251, column: 11, scope: !11985)
!12023 = !DILocation(line: 3251, column: 21, scope: !11985)
!12024 = !DILocation(line: 3254, column: 32, scope: !11985)
!12025 = !DILocation(line: 3256, column: 34, scope: !11985)
!12026 = !DILocation(line: 3256, column: 40, scope: !11985)
!12027 = !DILocation(line: 3256, column: 66, scope: !11985)
!12028 = !DILocation(line: 3256, column: 9, scope: !11985)
!12029 = !DILocation(line: 3256, column: 7, scope: !11985)
!12030 = !DILocation(line: 3258, column: 41, scope: !11985)
!12031 = !DILocation(line: 3258, column: 33, scope: !11985)
!12032 = !DILocation(line: 3258, column: 3, scope: !11985)
!12033 = !DILocation(line: 3258, column: 17, scope: !11985)
!12034 = !DILocation(line: 3258, column: 30, scope: !11985)
!12035 = !DILocation(line: 3260, column: 3, scope: !11985)
!12036 = !DILocation(line: 3261, column: 3, scope: !11985)
!12037 = !DILocation(line: 3268, column: 3, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 3268, column: 3)
!12039 = !DILocation(line: 3268, column: 3, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 3268, column: 3)
!12041 = !DILocation(line: 3269, column: 27, scope: !12040)
!12042 = !DILocation(line: 3269, column: 24, scope: !12040)
!12043 = !DILocation(line: 3269, column: 5, scope: !12040)
!12044 = distinct !{!12044, !12037, !12045}
!12045 = !DILocation(line: 3269, column: 27, scope: !12038)
!12046 = !DILocation(line: 3274, column: 3, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 3274, column: 3)
!12048 = !DILocation(line: 3274, column: 3, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12047, file: !3, line: 3274, column: 3)
!12050 = !DILocalVariable(name: "vinsn", scope: !12051, file: !3, line: 3276, type: !2061)
!12051 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 3275, column: 5)
!12052 = !DILocation(line: 3276, column: 15, scope: !12051)
!12053 = !DILocation(line: 3276, column: 23, scope: !12051)
!12054 = !DILocation(line: 3278, column: 11, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12051, file: !3, line: 3278, column: 11)
!12056 = !DILocation(line: 3278, column: 11, scope: !12051)
!12057 = !DILocation(line: 3279, column: 30, scope: !12055)
!12058 = !DILocation(line: 3279, column: 35, scope: !12055)
!12059 = !DILocation(line: 3279, column: 49, scope: !12055)
!12060 = !DILocation(line: 3279, column: 2, scope: !12055)
!12061 = !DILocation(line: 3283, column: 11, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12051, file: !3, line: 3283, column: 11)
!12063 = !DILocation(line: 3283, column: 11, scope: !12051)
!12064 = !DILocation(line: 3284, column: 2, scope: !12062)
!12065 = !DILocation(line: 3285, column: 5, scope: !12051)
!12066 = distinct !{!12066, !12046, !12067}
!12067 = !DILocation(line: 3285, column: 5, scope: !12047)
!12068 = !DILocation(line: 3287, column: 3, scope: !11985)
!12069 = distinct !DISubprogram(name: "equal_after_moveup_path_p", scope: !3, file: !3, line: 2631, type: !12070, scopeLine: 2632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!12070 = !DISubroutineType(types: !12071)
!12071 = !{!1057, !2055, !2163, !2055}
!12072 = !DILocalVariable(name: "expr", arg: 1, scope: !12069, file: !3, line: 2631, type: !2055)
!12073 = !DILocation(line: 2631, column: 35, scope: !12069)
!12074 = !DILocalVariable(name: "path", arg: 2, scope: !12069, file: !3, line: 2631, type: !2163)
!12075 = !DILocation(line: 2631, column: 49, scope: !12069)
!12076 = !DILocalVariable(name: "expr_vliw", arg: 3, scope: !12069, file: !3, line: 2631, type: !2055)
!12077 = !DILocation(line: 2631, column: 62, scope: !12069)
!12078 = !DILocalVariable(name: "_tmp", scope: !12069, file: !3, line: 2633, type: !2057)
!12079 = !DILocation(line: 2633, column: 12, scope: !12069)
!12080 = !DILocalVariable(name: "tmp", scope: !12069, file: !3, line: 2633, type: !2056)
!12081 = !DILocation(line: 2633, column: 19, scope: !12069)
!12082 = !DILocalVariable(name: "last_cycle", scope: !12069, file: !3, line: 2634, type: !849)
!12083 = !DILocation(line: 2634, column: 7, scope: !12069)
!12084 = !DILocalVariable(name: "res", scope: !12069, file: !3, line: 2635, type: !1057)
!12085 = !DILocation(line: 2635, column: 8, scope: !12069)
!12086 = !DILocation(line: 2637, column: 21, scope: !12069)
!12087 = !DILocation(line: 2637, column: 26, scope: !12069)
!12088 = !DILocation(line: 2637, column: 3, scope: !12069)
!12089 = !DILocation(line: 2638, column: 16, scope: !12069)
!12090 = !DILocation(line: 2638, column: 23, scope: !12069)
!12091 = !DILocation(line: 2638, column: 14, scope: !12069)
!12092 = !DILocation(line: 2639, column: 3, scope: !12069)
!12093 = !DILocation(line: 2639, column: 10, scope: !12069)
!12094 = !DILocation(line: 2640, column: 10, scope: !12069)
!12095 = !DILocation(line: 2640, column: 13, scope: !12069)
!12096 = !DILocation(line: 2641, column: 10, scope: !12069)
!12097 = !DILocation(line: 2641, column: 13, scope: !12069)
!12098 = !DILocation(line: 2641, column: 53, scope: !12069)
!12099 = !DILocation(line: 2641, column: 50, scope: !12069)
!12100 = !DILocation(line: 0, scope: !12069)
!12101 = !DILocation(line: 2643, column: 34, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 2642, column: 5)
!12103 = !DILocation(line: 2643, column: 39, scope: !12102)
!12104 = !DILocation(line: 2643, column: 14, scope: !12102)
!12105 = !DILocation(line: 2644, column: 14, scope: !12102)
!12106 = !DILocation(line: 2643, column: 13, scope: !12102)
!12107 = !DILocation(line: 2643, column: 11, scope: !12102)
!12108 = !DILocation(line: 2645, column: 14, scope: !12102)
!12109 = !DILocation(line: 2645, column: 12, scope: !12102)
!12110 = distinct !{!12110, !12092, !12111}
!12111 = !DILocation(line: 2646, column: 5, scope: !12069)
!12112 = !DILocation(line: 2648, column: 7, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 2648, column: 7)
!12114 = !DILocation(line: 2648, column: 7, scope: !12069)
!12115 = !DILocalVariable(name: "tmp_vinsn", scope: !12116, file: !3, line: 2650, type: !2061)
!12116 = distinct !DILexicalBlock(scope: !12113, file: !3, line: 2649, column: 5)
!12117 = !DILocation(line: 2650, column: 15, scope: !12116)
!12118 = !DILocation(line: 2650, column: 27, scope: !12116)
!12119 = !DILocalVariable(name: "expr_vliw_vinsn", scope: !12116, file: !3, line: 2651, type: !2061)
!12120 = !DILocation(line: 2651, column: 15, scope: !12116)
!12121 = !DILocation(line: 2651, column: 33, scope: !12116)
!12122 = !DILocation(line: 2653, column: 11, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 2653, column: 11)
!12124 = !DILocation(line: 2653, column: 24, scope: !12123)
!12125 = !DILocation(line: 2653, column: 21, scope: !12123)
!12126 = !DILocation(line: 2653, column: 11, scope: !12116)
!12127 = !DILocation(line: 2654, column: 23, scope: !12123)
!12128 = !DILocation(line: 2654, column: 34, scope: !12123)
!12129 = !DILocation(line: 2654, column: 8, scope: !12123)
!12130 = !DILocation(line: 2654, column: 6, scope: !12123)
!12131 = !DILocation(line: 2654, column: 2, scope: !12123)
!12132 = !DILocation(line: 2655, column: 5, scope: !12116)
!12133 = !DILocation(line: 2657, column: 15, scope: !12069)
!12134 = !DILocation(line: 2657, column: 3, scope: !12069)
!12135 = !DILocation(line: 2658, column: 10, scope: !12069)
!12136 = !DILocation(line: 2658, column: 3, scope: !12069)
!12137 = distinct !DISubprogram(name: "code_motion_path_driver", scope: !3, file: !3, line: 6402, type: !12138, scopeLine: 6405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!12138 = !DISubroutineType(types: !12139)
!12139 = !{!849, !2132, !2166, !2163, !2296, !819}
!12140 = !DILocalVariable(name: "insn", arg: 1, scope: !12137, file: !3, line: 6402, type: !2132)
!12141 = !DILocation(line: 6402, column: 33, scope: !12137)
!12142 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !12137, file: !3, line: 6402, type: !2166)
!12143 = !DILocation(line: 6402, column: 48, scope: !12137)
!12144 = !DILocalVariable(name: "path", arg: 3, scope: !12137, file: !3, line: 6402, type: !2163)
!12145 = !DILocation(line: 6402, column: 66, scope: !12137)
!12146 = !DILocalVariable(name: "local_params_in", arg: 4, scope: !12137, file: !3, line: 6403, type: !2296)
!12147 = !DILocation(line: 6403, column: 25, scope: !12137)
!12148 = !DILocalVariable(name: "static_params", arg: 5, scope: !12137, file: !3, line: 6404, type: !819)
!12149 = !DILocation(line: 6404, column: 11, scope: !12137)
!12150 = !DILocalVariable(name: "expr", scope: !12137, file: !3, line: 6406, type: !2055)
!12151 = !DILocation(line: 6406, column: 10, scope: !12137)
!12152 = !DILocalVariable(name: "bb", scope: !12137, file: !3, line: 6407, type: !1362)
!12153 = !DILocation(line: 6407, column: 15, scope: !12137)
!12154 = !DILocation(line: 6407, column: 20, scope: !12137)
!12155 = !DILocalVariable(name: "first_insn", scope: !12137, file: !3, line: 6408, type: !2132)
!12156 = !DILocation(line: 6408, column: 10, scope: !12137)
!12157 = !DILocalVariable(name: "bb_tail", scope: !12137, file: !3, line: 6408, type: !2132)
!12158 = !DILocation(line: 6408, column: 22, scope: !12137)
!12159 = !DILocalVariable(name: "before_first", scope: !12137, file: !3, line: 6408, type: !2132)
!12160 = !DILocation(line: 6408, column: 31, scope: !12137)
!12161 = !DILocalVariable(name: "removed_last_insn", scope: !12137, file: !3, line: 6409, type: !1057)
!12162 = !DILocation(line: 6409, column: 8, scope: !12137)
!12163 = !DILocation(line: 6411, column: 7, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 6411, column: 7)
!12165 = !DILocation(line: 6411, column: 21, scope: !12164)
!12166 = !DILocation(line: 6411, column: 7, scope: !12137)
!12167 = !DILocation(line: 6413, column: 7, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 6412, column: 5)
!12169 = !DILocation(line: 6413, column: 7, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !3, line: 6413, column: 7)
!12171 = distinct !DILexicalBlock(scope: !12168, file: !3, line: 6413, column: 7)
!12172 = !DILocation(line: 6413, column: 7, scope: !12171)
!12173 = !DILocalVariable(name: "__j", scope: !12174, file: !3, line: 6413, type: !849)
!12174 = distinct !DILexicalBlock(scope: !12170, file: !3, line: 6413, column: 7)
!12175 = !DILocation(line: 6413, column: 7, scope: !12174)
!12176 = !DILocalVariable(name: "__s", scope: !12174, file: !3, line: 6413, type: !817)
!12177 = !DILocation(line: 6414, column: 18, scope: !12168)
!12178 = !DILocation(line: 6414, column: 7, scope: !12168)
!12179 = !DILocation(line: 6415, column: 7, scope: !12168)
!12180 = !DILocation(line: 6415, column: 7, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 6415, column: 7)
!12182 = distinct !DILexicalBlock(scope: !12168, file: !3, line: 6415, column: 7)
!12183 = !DILocation(line: 6415, column: 7, scope: !12182)
!12184 = !DILocalVariable(name: "__j", scope: !12185, file: !3, line: 6415, type: !849)
!12185 = distinct !DILexicalBlock(scope: !12181, file: !3, line: 6415, column: 7)
!12186 = !DILocation(line: 6415, column: 7, scope: !12185)
!12187 = !DILocalVariable(name: "__s", scope: !12185, file: !3, line: 6415, type: !817)
!12188 = !DILocation(line: 6416, column: 20, scope: !12168)
!12189 = !DILocation(line: 6416, column: 7, scope: !12168)
!12190 = !DILocation(line: 6417, column: 7, scope: !12168)
!12191 = !DILocation(line: 6417, column: 7, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12193, file: !3, line: 6417, column: 7)
!12193 = distinct !DILexicalBlock(scope: !12168, file: !3, line: 6417, column: 7)
!12194 = !DILocation(line: 6417, column: 7, scope: !12193)
!12195 = !DILocalVariable(name: "__j", scope: !12196, file: !3, line: 6417, type: !849)
!12196 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 6417, column: 7)
!12197 = !DILocation(line: 6417, column: 7, scope: !12196)
!12198 = !DILocalVariable(name: "__s", scope: !12196, file: !3, line: 6417, type: !817)
!12199 = !DILocation(line: 6418, column: 5, scope: !12168)
!12200 = !DILocation(line: 6420, column: 3, scope: !12137)
!12201 = !DILocation(line: 6423, column: 32, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 6423, column: 7)
!12203 = !DILocation(line: 6423, column: 38, scope: !12202)
!12204 = !DILocation(line: 6423, column: 7, scope: !12202)
!12205 = !DILocation(line: 6423, column: 7, scope: !12137)
!12206 = !DILocation(line: 6425, column: 11, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12208, file: !3, line: 6425, column: 11)
!12208 = distinct !DILexicalBlock(scope: !12202, file: !3, line: 6424, column: 5)
!12209 = !DILocation(line: 6425, column: 25, scope: !12207)
!12210 = !DILocation(line: 6425, column: 11, scope: !12208)
!12211 = !DILocation(line: 6426, column: 9, scope: !12207)
!12212 = !DILocation(line: 6426, column: 9, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12214, file: !3, line: 6426, column: 9)
!12214 = distinct !DILexicalBlock(scope: !12207, file: !3, line: 6426, column: 9)
!12215 = !DILocation(line: 6426, column: 9, scope: !12214)
!12216 = !DILocalVariable(name: "__j", scope: !12217, file: !3, line: 6426, type: !849)
!12217 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 6426, column: 9)
!12218 = !DILocation(line: 6426, column: 9, scope: !12217)
!12219 = !DILocalVariable(name: "__s", scope: !12217, file: !3, line: 6426, type: !817)
!12220 = !DILocation(line: 6427, column: 7, scope: !12208)
!12221 = !DILocation(line: 6432, column: 22, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 6432, column: 7)
!12223 = !DILocation(line: 6432, column: 7, scope: !12222)
!12224 = !DILocation(line: 6432, column: 7, scope: !12137)
!12225 = !DILocation(line: 6434, column: 13, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12227, file: !3, line: 6434, column: 11)
!12227 = distinct !DILexicalBlock(scope: !12222, file: !3, line: 6433, column: 5)
!12228 = !DILocation(line: 6434, column: 11, scope: !12227)
!12229 = !DILocation(line: 6436, column: 15, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12231, file: !3, line: 6436, column: 15)
!12231 = distinct !DILexicalBlock(scope: !12226, file: !3, line: 6435, column: 9)
!12232 = !DILocation(line: 6436, column: 29, scope: !12230)
!12233 = !DILocation(line: 6436, column: 15, scope: !12231)
!12234 = !DILocation(line: 6437, column: 13, scope: !12230)
!12235 = !DILocation(line: 6437, column: 13, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12237, file: !3, line: 6437, column: 13)
!12237 = distinct !DILexicalBlock(scope: !12230, file: !3, line: 6437, column: 13)
!12238 = !DILocation(line: 6437, column: 13, scope: !12237)
!12239 = !DILocalVariable(name: "__j", scope: !12240, file: !3, line: 6437, type: !849)
!12240 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 6437, column: 13)
!12241 = !DILocation(line: 6437, column: 13, scope: !12240)
!12242 = !DILocalVariable(name: "__s", scope: !12240, file: !3, line: 6437, type: !817)
!12243 = !DILocation(line: 6439, column: 11, scope: !12231)
!12244 = !DILocation(line: 6442, column: 25, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12227, file: !3, line: 6442, column: 11)
!12246 = !DILocation(line: 6442, column: 53, scope: !12245)
!12247 = !DILocation(line: 6442, column: 57, scope: !12245)
!12248 = !DILocation(line: 6442, column: 11, scope: !12245)
!12249 = !DILocation(line: 6442, column: 11, scope: !12227)
!12250 = !DILocation(line: 6449, column: 15, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12252, file: !3, line: 6449, column: 15)
!12252 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 6443, column: 9)
!12253 = !DILocation(line: 6449, column: 29, scope: !12251)
!12254 = !DILocation(line: 6449, column: 15, scope: !12252)
!12255 = !DILocation(line: 6450, column: 13, scope: !12251)
!12256 = !DILocation(line: 6450, column: 13, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 6450, column: 13)
!12258 = distinct !DILexicalBlock(scope: !12251, file: !3, line: 6450, column: 13)
!12259 = !DILocation(line: 6450, column: 13, scope: !12258)
!12260 = !DILocalVariable(name: "__j", scope: !12261, file: !3, line: 6450, type: !849)
!12261 = distinct !DILexicalBlock(scope: !12257, file: !3, line: 6450, column: 13)
!12262 = !DILocation(line: 6450, column: 13, scope: !12261)
!12263 = !DILocalVariable(name: "__s", scope: !12261, file: !3, line: 6450, type: !817)
!12264 = !DILocation(line: 6451, column: 15, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12252, file: !3, line: 6451, column: 15)
!12266 = !DILocation(line: 6451, column: 45, scope: !12265)
!12267 = !DILocation(line: 6451, column: 15, scope: !12252)
!12268 = !DILocation(line: 6452, column: 20, scope: !12265)
!12269 = !DILocation(line: 6452, column: 50, scope: !12265)
!12270 = !DILocation(line: 6452, column: 60, scope: !12265)
!12271 = !DILocation(line: 6453, column: 60, scope: !12265)
!12272 = !DILocation(line: 6454, column: 60, scope: !12265)
!12273 = !DILocation(line: 6452, column: 13, scope: !12265)
!12274 = !DILocation(line: 6456, column: 9, scope: !12252)
!12275 = !DILocation(line: 6457, column: 5, scope: !12227)
!12276 = !DILocation(line: 6459, column: 7, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 6459, column: 7)
!12278 = !DILocation(line: 6459, column: 37, scope: !12277)
!12279 = !DILocation(line: 6459, column: 7, scope: !12137)
!12280 = !DILocation(line: 6460, column: 5, scope: !12277)
!12281 = !DILocation(line: 6460, column: 35, scope: !12277)
!12282 = !DILocation(line: 6460, column: 45, scope: !12277)
!12283 = !DILocation(line: 6460, column: 51, scope: !12277)
!12284 = !DILocation(line: 6461, column: 45, scope: !12277)
!12285 = !DILocation(line: 6462, column: 27, scope: !12137)
!12286 = !DILocation(line: 6462, column: 14, scope: !12137)
!12287 = !DILocation(line: 6462, column: 12, scope: !12137)
!12288 = !DILocation(line: 6465, column: 7, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 6465, column: 7)
!12290 = !DILocation(line: 6465, column: 7, scope: !12137)
!12291 = !DILocation(line: 6466, column: 34, scope: !12289)
!12292 = !DILocation(line: 6466, column: 5, scope: !12289)
!12293 = !DILocation(line: 6469, column: 8, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 6469, column: 7)
!12295 = !DILocation(line: 6469, column: 7, scope: !12137)
!12296 = !DILocation(line: 6471, column: 11, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 6471, column: 11)
!12298 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 6470, column: 5)
!12299 = !DILocation(line: 6471, column: 25, scope: !12297)
!12300 = !DILocation(line: 6471, column: 11, scope: !12298)
!12301 = !DILocation(line: 6472, column: 9, scope: !12297)
!12302 = !DILocation(line: 6472, column: 9, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 6472, column: 9)
!12304 = distinct !DILexicalBlock(scope: !12297, file: !3, line: 6472, column: 9)
!12305 = !DILocation(line: 6472, column: 9, scope: !12304)
!12306 = !DILocalVariable(name: "__j", scope: !12307, file: !3, line: 6472, type: !849)
!12307 = distinct !DILexicalBlock(scope: !12303, file: !3, line: 6472, column: 9)
!12308 = !DILocation(line: 6472, column: 9, scope: !12307)
!12309 = !DILocalVariable(name: "__s", scope: !12307, file: !3, line: 6472, type: !817)
!12310 = !DILocation(line: 6473, column: 7, scope: !12298)
!12311 = !DILocation(line: 6484, column: 3, scope: !12137)
!12312 = !DILocation(line: 6487, column: 3, scope: !12137)
!12313 = !DILocation(line: 6491, column: 3, scope: !12137)
!12314 = !DILocation(line: 6492, column: 16, scope: !12137)
!12315 = !DILocation(line: 6492, column: 14, scope: !12137)
!12316 = !DILocation(line: 6493, column: 25, scope: !12137)
!12317 = !DILocation(line: 6493, column: 13, scope: !12137)
!12318 = !DILocation(line: 6493, column: 11, scope: !12137)
!12319 = !DILocation(line: 6498, column: 3, scope: !12137)
!12320 = !DILocation(line: 6514, column: 29, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 6499, column: 5)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !3, line: 6498, column: 3)
!12323 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 6498, column: 3)
!12324 = !DILocation(line: 6514, column: 39, scope: !12321)
!12325 = !DILocation(line: 6514, column: 14, scope: !12321)
!12326 = !DILocation(line: 6514, column: 12, scope: !12321)
!12327 = !DILocation(line: 6515, column: 11, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 6515, column: 11)
!12329 = !DILocation(line: 6515, column: 11, scope: !12321)
!12330 = !DILocalVariable(name: "last_insn", scope: !12331, file: !3, line: 6517, type: !2132)
!12331 = distinct !DILexicalBlock(scope: !12328, file: !3, line: 6516, column: 2)
!12332 = !DILocation(line: 6517, column: 11, scope: !12331)
!12333 = !DILocation(line: 6517, column: 23, scope: !12331)
!12334 = !DILocation(line: 6520, column: 15, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12331, file: !3, line: 6520, column: 15)
!12336 = !DILocation(line: 6520, column: 29, scope: !12335)
!12337 = !DILocation(line: 6520, column: 15, scope: !12331)
!12338 = !DILocation(line: 6521, column: 13, scope: !12335)
!12339 = !DILocation(line: 6521, column: 13, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12341, file: !3, line: 6521, column: 13)
!12341 = distinct !DILexicalBlock(scope: !12335, file: !3, line: 6521, column: 13)
!12342 = !DILocation(line: 6521, column: 13, scope: !12341)
!12343 = !DILocalVariable(name: "__j", scope: !12344, file: !3, line: 6521, type: !849)
!12344 = distinct !DILexicalBlock(scope: !12340, file: !3, line: 6521, column: 13)
!12345 = !DILocation(line: 6521, column: 13, scope: !12344)
!12346 = !DILocalVariable(name: "__s", scope: !12344, file: !3, line: 6521, type: !817)
!12347 = !DILocation(line: 6523, column: 4, scope: !12331)
!12348 = !DILocation(line: 6523, column: 34, scope: !12331)
!12349 = !DILocation(line: 6524, column: 14, scope: !12331)
!12350 = !DILocation(line: 6524, column: 20, scope: !12331)
!12351 = !DILocation(line: 6524, column: 26, scope: !12331)
!12352 = !DILocation(line: 6524, column: 43, scope: !12331)
!12353 = !DILocation(line: 6529, column: 15, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12331, file: !3, line: 6529, column: 15)
!12355 = !DILocation(line: 6529, column: 23, scope: !12354)
!12356 = !DILocation(line: 6529, column: 20, scope: !12354)
!12357 = !DILocation(line: 6529, column: 15, scope: !12331)
!12358 = !DILocation(line: 6531, column: 28, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 6530, column: 13)
!12360 = !DILocation(line: 6531, column: 26, scope: !12359)
!12361 = !DILocation(line: 6532, column: 49, scope: !12359)
!12362 = !DILocation(line: 6532, column: 35, scope: !12359)
!12363 = !DILocation(line: 6532, column: 33, scope: !12359)
!12364 = !DILocation(line: 6533, column: 13, scope: !12359)
!12365 = !DILocation(line: 6534, column: 11, scope: !12331)
!12366 = !DILocation(line: 6534, column: 9, scope: !12331)
!12367 = !DILocation(line: 6535, column: 4, scope: !12331)
!12368 = !DILocation(line: 6541, column: 8, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12370, file: !3, line: 6541, column: 8)
!12370 = distinct !DILexicalBlock(scope: !12328, file: !3, line: 6538, column: 2)
!12371 = !DILocation(line: 6541, column: 38, scope: !12369)
!12372 = !DILocation(line: 6542, column: 16, scope: !12369)
!12373 = !DILocation(line: 6542, column: 22, scope: !12369)
!12374 = !DILocation(line: 6542, column: 32, scope: !12369)
!12375 = !DILocation(line: 6541, column: 8, scope: !12370)
!12376 = !DILocation(line: 6546, column: 41, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12369, file: !3, line: 6543, column: 6)
!12378 = !DILocation(line: 6546, column: 8, scope: !12377)
!12379 = !DILocation(line: 6547, column: 6, scope: !12377)
!12380 = !DILocation(line: 6553, column: 8, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12369, file: !3, line: 6549, column: 6)
!12382 = !DILocation(line: 6554, column: 8, scope: !12381)
!12383 = !DILocation(line: 6557, column: 4, scope: !12370)
!12384 = !DILocation(line: 6561, column: 11, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 6561, column: 11)
!12386 = !DILocation(line: 6561, column: 19, scope: !12385)
!12387 = !DILocation(line: 6561, column: 16, scope: !12385)
!12388 = !DILocation(line: 6561, column: 11, scope: !12321)
!12389 = !DILocation(line: 6562, column: 2, scope: !12385)
!12390 = !DILocation(line: 6564, column: 14, scope: !12321)
!12391 = !DILocation(line: 6564, column: 12, scope: !12321)
!12392 = !DILocation(line: 6498, column: 3, scope: !12322)
!12393 = distinct !{!12393, !12394, !12395}
!12394 = !DILocation(line: 6498, column: 3, scope: !12323)
!12395 = !DILocation(line: 6565, column: 5, scope: !12323)
!12396 = !DILocation(line: 6569, column: 8, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 6569, column: 7)
!12398 = !DILocation(line: 6569, column: 7, scope: !12137)
!12399 = !DILocalVariable(name: "res", scope: !12400, file: !3, line: 6571, type: !849)
!12400 = distinct !DILexicalBlock(scope: !12397, file: !3, line: 6570, column: 5)
!12401 = !DILocation(line: 6571, column: 11, scope: !12400)
!12402 = !DILocation(line: 6573, column: 7, scope: !12400)
!12403 = !DILocation(line: 6577, column: 11, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 6577, column: 11)
!12405 = !DILocation(line: 6577, column: 19, scope: !12404)
!12406 = !DILocation(line: 6577, column: 16, scope: !12404)
!12407 = !DILocation(line: 6577, column: 11, scope: !12400)
!12408 = !DILocation(line: 6578, column: 2, scope: !12404)
!12409 = !DILocation(line: 6582, column: 45, scope: !12400)
!12410 = !DILocation(line: 6582, column: 51, scope: !12400)
!12411 = !DILocation(line: 6583, column: 45, scope: !12400)
!12412 = !DILocation(line: 6583, column: 51, scope: !12400)
!12413 = !DILocation(line: 6582, column: 13, scope: !12400)
!12414 = !DILocation(line: 6582, column: 11, scope: !12400)
!12415 = !DILocation(line: 6586, column: 11, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 6586, column: 11)
!12417 = !DILocation(line: 6586, column: 19, scope: !12416)
!12418 = !DILocation(line: 6586, column: 16, scope: !12416)
!12419 = !DILocation(line: 6586, column: 11, scope: !12400)
!12420 = !DILocation(line: 6587, column: 2, scope: !12416)
!12421 = !DILocation(line: 6589, column: 11, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 6589, column: 11)
!12423 = !DILocation(line: 6589, column: 15, scope: !12422)
!12424 = !DILocation(line: 6589, column: 11, scope: !12400)
!12425 = !DILocation(line: 6597, column: 4, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 6590, column: 2)
!12427 = !DILocation(line: 6598, column: 11, scope: !12426)
!12428 = !DILocation(line: 6598, column: 4, scope: !12426)
!12429 = !DILocation(line: 6600, column: 5, scope: !12400)
!12430 = !DILocation(line: 6603, column: 3, scope: !12137)
!12431 = !DILocation(line: 6607, column: 18, scope: !12137)
!12432 = !DILocation(line: 6607, column: 16, scope: !12137)
!12433 = !DILocation(line: 6608, column: 3, scope: !12137)
!12434 = !DILocation(line: 6608, column: 10, scope: !12137)
!12435 = !DILocation(line: 6608, column: 18, scope: !12137)
!12436 = !DILocation(line: 6608, column: 15, scope: !12137)
!12437 = !DILocation(line: 6610, column: 11, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12439, file: !3, line: 6610, column: 11)
!12439 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 6609, column: 5)
!12440 = !DILocation(line: 6610, column: 41, scope: !12438)
!12441 = !DILocation(line: 6610, column: 11, scope: !12439)
!12442 = !DILocation(line: 6611, column: 2, scope: !12438)
!12443 = !DILocation(line: 6611, column: 32, scope: !12438)
!12444 = !DILocation(line: 6611, column: 40, scope: !12438)
!12445 = !DILocation(line: 6611, column: 46, scope: !12438)
!12446 = !DILocation(line: 6613, column: 14, scope: !12439)
!12447 = !DILocation(line: 6613, column: 12, scope: !12439)
!12448 = distinct !{!12448, !12433, !12449}
!12449 = !DILocation(line: 6614, column: 5, scope: !12137)
!12450 = !DILocation(line: 6617, column: 10, scope: !12137)
!12451 = !DILocation(line: 6617, column: 8, scope: !12137)
!12452 = !DILocation(line: 6618, column: 3, scope: !12137)
!12453 = !DILocation(line: 6619, column: 40, scope: !12137)
!12454 = !DILocation(line: 6619, column: 3, scope: !12137)
!12455 = !DILocation(line: 6619, column: 20, scope: !12137)
!12456 = !DILocation(line: 6619, column: 38, scope: !12137)
!12457 = !DILocation(line: 6620, column: 3, scope: !12137)
!12458 = !DILocation(line: 6620, column: 33, scope: !12137)
!12459 = !DILocation(line: 6620, column: 48, scope: !12137)
!12460 = !DILocation(line: 6620, column: 54, scope: !12137)
!12461 = !DILocation(line: 6620, column: 71, scope: !12137)
!12462 = !DILocation(line: 6624, column: 7, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 6624, column: 7)
!12464 = !DILocation(line: 6624, column: 7, scope: !12137)
!12465 = !DILocation(line: 6625, column: 12, scope: !12463)
!12466 = !DILocation(line: 6625, column: 10, scope: !12463)
!12467 = !DILocation(line: 6625, column: 5, scope: !12463)
!12468 = !DILocation(line: 6626, column: 19, scope: !12137)
!12469 = !DILocation(line: 6626, column: 47, scope: !12137)
!12470 = !DILocation(line: 6626, column: 70, scope: !12137)
!12471 = !DILocation(line: 6626, column: 3, scope: !12137)
!12472 = !DILocation(line: 6627, column: 3, scope: !12137)
!12473 = !DILocation(line: 6628, column: 1, scope: !12137)
!12474 = distinct !DISubprogram(name: "_list_iter_cond_def", scope: !398, file: !398, line: 560, type: !12475, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!12475 = !DISubroutineType(types: !12476)
!12476 = !{!1057, !2253, !12477}
!12477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11680, size: 64)
!12478 = !DILocalVariable(name: "def_list", arg: 1, scope: !12474, file: !398, line: 560, type: !2253)
!12479 = !DILocation(line: 560, column: 33, scope: !12474)
!12480 = !DILocalVariable(name: "def", arg: 2, scope: !12474, file: !398, line: 560, type: !12477)
!12481 = !DILocation(line: 560, column: 50, scope: !12474)
!12482 = !DILocation(line: 562, column: 7, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12474, file: !398, line: 562, column: 7)
!12484 = !DILocation(line: 562, column: 7, scope: !12474)
!12485 = !DILocation(line: 564, column: 14, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12483, file: !398, line: 563, column: 5)
!12487 = !DILocation(line: 564, column: 8, scope: !12486)
!12488 = !DILocation(line: 564, column: 12, scope: !12486)
!12489 = !DILocation(line: 565, column: 7, scope: !12486)
!12490 = !DILocation(line: 568, column: 3, scope: !12474)
!12491 = !DILocation(line: 569, column: 1, scope: !12474)
!12492 = distinct !DISubprogram(name: "mark_unavailable_hard_regs", scope: !3, file: !3, line: 1207, type: !12493, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!12493 = !DISubroutineType(types: !12494)
!12494 = !{null, !11680, !11515, !2073}
!12495 = !DILocalVariable(name: "def", arg: 1, scope: !12492, file: !3, line: 1207, type: !11680)
!12496 = !DILocation(line: 1207, column: 35, scope: !12492)
!12497 = !DILocalVariable(name: "reg_rename_p", arg: 2, scope: !12492, file: !3, line: 1207, type: !11515)
!12498 = !DILocation(line: 1207, column: 59, scope: !12492)
!12499 = !DILocalVariable(name: "used_regs", arg: 3, scope: !12492, file: !3, line: 1208, type: !2073)
!12500 = !DILocation(line: 1208, column: 36, scope: !12492)
!12501 = !DILocalVariable(name: "mode", scope: !12492, file: !3, line: 1210, type: !5)
!12502 = !DILocation(line: 1210, column: 21, scope: !12492)
!12503 = !DILocalVariable(name: "cl", scope: !12492, file: !3, line: 1211, type: !780)
!12504 = !DILocation(line: 1211, column: 18, scope: !12492)
!12505 = !DILocalVariable(name: "orig_dest", scope: !12492, file: !3, line: 1212, type: !825)
!12506 = !DILocation(line: 1212, column: 7, scope: !12492)
!12507 = !DILocalVariable(name: "cur_reg", scope: !12492, file: !3, line: 1213, type: !7)
!12508 = !DILocation(line: 1213, column: 12, scope: !12492)
!12509 = !DILocalVariable(name: "regno", scope: !12492, file: !3, line: 1213, type: !7)
!12510 = !DILocation(line: 1213, column: 21, scope: !12492)
!12511 = !DILocalVariable(name: "hrsi", scope: !12492, file: !3, line: 1214, type: !12512)
!12512 = !DIDerivedType(tag: DW_TAG_typedef, name: "hard_reg_set_iterator", file: !2280, line: 499, baseType: !12513)
!12513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2280, line: 484, size: 192, elements: !12514)
!12514 = !{!12515, !12517, !12519, !12520}
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "pelt", scope: !12513, file: !2280, line: 487, baseType: !12516, size: 64)
!12516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12513, file: !2280, line: 490, baseType: !12518, size: 16, offset: 64)
!12518 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !12513, file: !2280, line: 493, baseType: !12518, size: 16, offset: 80)
!12520 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !12513, file: !2280, line: 498, baseType: !2279, size: 64, offset: 128)
!12521 = !DILocation(line: 1214, column: 25, scope: !12492)
!12522 = !DILocation(line: 1216, column: 3, scope: !12492)
!12523 = !DILocation(line: 1217, column: 3, scope: !12492)
!12524 = !DILocation(line: 1219, column: 15, scope: !12492)
!12525 = !DILocation(line: 1219, column: 13, scope: !12492)
!12526 = !DILocation(line: 1223, column: 8, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1223, column: 7)
!12528 = !DILocation(line: 1223, column: 7, scope: !12492)
!12529 = !DILocation(line: 1224, column: 5, scope: !12527)
!12530 = !DILocation(line: 1226, column: 11, scope: !12492)
!12531 = !DILocation(line: 1226, column: 9, scope: !12492)
!12532 = !DILocation(line: 1229, column: 8, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1229, column: 7)
!12534 = !DILocation(line: 1229, column: 25, scope: !12533)
!12535 = !DILocation(line: 1229, column: 29, scope: !12533)
!12536 = !DILocation(line: 1229, column: 7, scope: !12492)
!12537 = !DILocation(line: 1230, column: 5, scope: !12533)
!12538 = !DILocation(line: 1232, column: 7, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1232, column: 7)
!12540 = !DILocation(line: 1232, column: 7, scope: !12492)
!12541 = !DILocation(line: 1233, column: 25, scope: !12539)
!12542 = !DILocation(line: 1233, column: 30, scope: !12539)
!12543 = !DILocation(line: 1233, column: 10, scope: !12539)
!12544 = !DILocation(line: 1233, column: 8, scope: !12539)
!12545 = !DILocation(line: 1233, column: 5, scope: !12539)
!12546 = !DILocation(line: 1237, column: 18, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1237, column: 7)
!12548 = !DILocation(line: 1237, column: 7, scope: !12547)
!12549 = !DILocation(line: 1238, column: 7, scope: !12547)
!12550 = !DILocation(line: 1238, column: 22, scope: !12547)
!12551 = !DILocation(line: 1238, column: 10, scope: !12547)
!12552 = !DILocation(line: 1240, column: 7, scope: !12547)
!12553 = !DILocation(line: 1240, column: 11, scope: !12547)
!12554 = !DILocation(line: 1240, column: 32, scope: !12547)
!12555 = !DILocation(line: 1240, column: 35, scope: !12547)
!12556 = !DILocation(line: 1240, column: 41, scope: !12547)
!12557 = !DILocation(line: 1244, column: 7, scope: !12547)
!12558 = !DILocation(line: 1244, column: 11, scope: !12547)
!12559 = !DILocation(line: 1244, column: 28, scope: !12547)
!12560 = !DILocation(line: 1244, column: 31, scope: !12547)
!12561 = !DILocation(line: 1244, column: 34, scope: !12547)
!12562 = !DILocation(line: 1237, column: 7, scope: !12492)
!12563 = !DILocation(line: 1246, column: 7, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12547, file: !3, line: 1245, column: 5)
!12565 = !DILocation(line: 1249, column: 12, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12564, file: !3, line: 1249, column: 11)
!12567 = !DILocation(line: 1249, column: 17, scope: !12566)
!12568 = !DILocation(line: 1249, column: 11, scope: !12564)
!12569 = !DILocation(line: 1250, column: 9, scope: !12566)
!12570 = !DILocation(line: 1252, column: 7, scope: !12564)
!12571 = !DILocation(line: 1258, column: 7, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1258, column: 7)
!12573 = !DILocation(line: 1258, column: 7, scope: !12492)
!12574 = !DILocalVariable(name: "i", scope: !12575, file: !3, line: 1260, type: !849)
!12575 = distinct !DILexicalBlock(scope: !12572, file: !3, line: 1259, column: 5)
!12576 = !DILocation(line: 1260, column: 11, scope: !12575)
!12577 = !DILocation(line: 1262, column: 16, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 1262, column: 7)
!12579 = !DILocation(line: 1262, column: 14, scope: !12578)
!12580 = !DILocation(line: 1262, column: 12, scope: !12578)
!12581 = !DILocation(line: 1262, column: 64, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12578, file: !3, line: 1262, column: 7)
!12583 = !DILocation(line: 1262, column: 7, scope: !12578)
!12584 = !DILocation(line: 1263, column: 2, scope: !12582)
!12585 = !DILocation(line: 1262, column: 7, scope: !12582)
!12586 = distinct !{!12586, !12583, !12587}
!12587 = !DILocation(line: 1263, column: 2, scope: !12578)
!12588 = !DILocation(line: 1267, column: 16, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 1267, column: 7)
!12590 = !DILocation(line: 1267, column: 14, scope: !12589)
!12591 = !DILocation(line: 1267, column: 12, scope: !12589)
!12592 = !DILocation(line: 1267, column: 69, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12589, file: !3, line: 1267, column: 7)
!12594 = !DILocation(line: 1267, column: 7, scope: !12589)
!12595 = !DILocation(line: 1268, column: 2, scope: !12593)
!12596 = !DILocation(line: 1267, column: 7, scope: !12593)
!12597 = distinct !{!12597, !12594, !12598}
!12598 = !DILocation(line: 1268, column: 2, scope: !12589)
!12599 = !DILocation(line: 1271, column: 5, scope: !12575)
!12600 = !DILocation(line: 1280, column: 7, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1280, column: 7)
!12602 = !DILocation(line: 1281, column: 7, scope: !12601)
!12603 = !DILocation(line: 1281, column: 10, scope: !12601)
!12604 = !DILocation(line: 1280, column: 7, scope: !12492)
!12605 = !DILocation(line: 1282, column: 5, scope: !12601)
!12606 = !DILocation(line: 1288, column: 7, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1288, column: 7)
!12608 = !DILocation(line: 1288, column: 12, scope: !12607)
!12609 = !DILocation(line: 1288, column: 7, scope: !12492)
!12610 = !DILocation(line: 1289, column: 5, scope: !12607)
!12611 = !DILocation(line: 1294, column: 8, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1294, column: 7)
!12613 = !DILocation(line: 1294, column: 7, scope: !12492)
!12614 = !DILocation(line: 1295, column: 5, scope: !12612)
!12615 = !DILocation(line: 1299, column: 3, scope: !12492)
!12616 = !DILocation(line: 1302, column: 10, scope: !12492)
!12617 = !DILocation(line: 1302, column: 8, scope: !12492)
!12618 = !DILocation(line: 1305, column: 33, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1305, column: 7)
!12620 = !DILocation(line: 1305, column: 8, scope: !12619)
!12621 = !DILocation(line: 1305, column: 7, scope: !12492)
!12622 = !DILocation(line: 1306, column: 25, scope: !12619)
!12623 = !DILocation(line: 1306, column: 5, scope: !12619)
!12624 = !DILocation(line: 1307, column: 3, scope: !12492)
!12625 = !DILocation(line: 1311, column: 7, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1311, column: 7)
!12627 = !DILocation(line: 1311, column: 12, scope: !12626)
!12628 = !DILocation(line: 1311, column: 7, scope: !12492)
!12629 = !DILocation(line: 1313, column: 5, scope: !12626)
!12630 = !DILocation(line: 1317, column: 3, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 1317, column: 3)
!12632 = !DILocation(line: 1317, column: 3, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12631, file: !3, line: 1317, column: 3)
!12634 = !DILocalVariable(name: "nregs", scope: !12635, file: !3, line: 1320, type: !849)
!12635 = distinct !DILexicalBlock(scope: !12633, file: !3, line: 1319, column: 5)
!12636 = !DILocation(line: 1320, column: 11, scope: !12635)
!12637 = !DILocalVariable(name: "i", scope: !12635, file: !3, line: 1321, type: !849)
!12638 = !DILocation(line: 1321, column: 11, scope: !12635)
!12639 = !DILocation(line: 1323, column: 32, scope: !12635)
!12640 = !DILocation(line: 1323, column: 15, scope: !12635)
!12641 = !DILocation(line: 1323, column: 41, scope: !12635)
!12642 = !DILocation(line: 1323, column: 13, scope: !12635)
!12643 = !DILocation(line: 1324, column: 7, scope: !12635)
!12644 = !DILocation(line: 1326, column: 16, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 1326, column: 7)
!12646 = !DILocation(line: 1326, column: 22, scope: !12645)
!12647 = !DILocation(line: 1326, column: 14, scope: !12645)
!12648 = !DILocation(line: 1326, column: 12, scope: !12645)
!12649 = !DILocation(line: 1326, column: 27, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1326, column: 7)
!12651 = !DILocation(line: 1326, column: 29, scope: !12650)
!12652 = !DILocation(line: 1326, column: 7, scope: !12645)
!12653 = !DILocation(line: 1327, column: 41, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12650, file: !3, line: 1327, column: 13)
!12655 = !DILocation(line: 1327, column: 49, scope: !12654)
!12656 = !DILocation(line: 1327, column: 47, scope: !12654)
!12657 = !DILocation(line: 1327, column: 52, scope: !12654)
!12658 = !DILocation(line: 1327, column: 62, scope: !12654)
!12659 = !DILocation(line: 1327, column: 60, scope: !12654)
!12660 = !DILocation(line: 1327, column: 15, scope: !12654)
!12661 = !DILocation(line: 1327, column: 13, scope: !12650)
!12662 = !DILocation(line: 1328, column: 11, scope: !12654)
!12663 = !DILocation(line: 1327, column: 63, scope: !12654)
!12664 = !DILocation(line: 1326, column: 35, scope: !12650)
!12665 = !DILocation(line: 1326, column: 7, scope: !12650)
!12666 = distinct !{!12666, !12652, !12667}
!12667 = !DILocation(line: 1328, column: 11, scope: !12645)
!12668 = !DILocation(line: 1330, column: 11, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 1330, column: 11)
!12670 = !DILocation(line: 1330, column: 13, scope: !12669)
!12671 = !DILocation(line: 1330, column: 11, scope: !12635)
!12672 = !DILocation(line: 1331, column: 9, scope: !12669)
!12673 = !DILocation(line: 1333, column: 5, scope: !12635)
!12674 = distinct !{!12674, !12630, !12675}
!12675 = !DILocation(line: 1333, column: 5, scope: !12631)
!12676 = !DILocation(line: 1335, column: 3, scope: !12492)
!12677 = !DILocation(line: 1341, column: 3, scope: !12492)
!12678 = !DILocation(line: 1342, column: 1, scope: !12492)
!12679 = distinct !DISubprogram(name: "undo_transformations", scope: !3, file: !3, line: 1916, type: !12680, scopeLine: 1917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!12680 = !DISubroutineType(types: !12681)
!12681 = !{null, !6872, !825}
!12682 = !DILocalVariable(name: "av_ptr", arg: 1, scope: !12679, file: !3, line: 1916, type: !6872)
!12683 = !DILocation(line: 1916, column: 33, scope: !12679)
!12684 = !DILocalVariable(name: "insn", arg: 2, scope: !12679, file: !3, line: 1916, type: !825)
!12685 = !DILocation(line: 1916, column: 45, scope: !12679)
!12686 = !DILocalVariable(name: "av_iter", scope: !12679, file: !3, line: 1918, type: !3060)
!12687 = !DILocation(line: 1918, column: 19, scope: !12679)
!12688 = !DILocalVariable(name: "expr", scope: !12679, file: !3, line: 1919, type: !2055)
!12689 = !DILocation(line: 1919, column: 10, scope: !12679)
!12690 = !DILocalVariable(name: "new_set", scope: !12679, file: !3, line: 1920, type: !2166)
!12691 = !DILocation(line: 1920, column: 12, scope: !12679)
!12692 = !DILocation(line: 1924, column: 3, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 1924, column: 3)
!12694 = !DILocation(line: 1924, column: 3, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 1924, column: 3)
!12696 = !DILocation(line: 1925, column: 42, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12695, file: !3, line: 1925, column: 9)
!12698 = !DILocation(line: 1925, column: 48, scope: !12697)
!12699 = !DILocation(line: 1925, column: 10, scope: !12697)
!12700 = !DILocation(line: 1926, column: 9, scope: !12697)
!12701 = !DILocation(line: 1926, column: 32, scope: !12697)
!12702 = !DILocation(line: 1927, column: 32, scope: !12697)
!12703 = !DILocation(line: 1926, column: 12, scope: !12697)
!12704 = !DILocation(line: 1931, column: 9, scope: !12697)
!12705 = !DILocation(line: 1931, column: 31, scope: !12697)
!12706 = !DILocation(line: 1931, column: 13, scope: !12697)
!12707 = !DILocation(line: 1925, column: 9, scope: !12695)
!12708 = !DILocation(line: 1933, column: 13, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 1933, column: 13)
!12710 = distinct !DILexicalBlock(scope: !12697, file: !3, line: 1932, column: 7)
!12711 = !DILocation(line: 1933, column: 27, scope: !12709)
!12712 = !DILocation(line: 1933, column: 13, scope: !12710)
!12713 = !DILocation(line: 1934, column: 11, scope: !12709)
!12714 = !DILocation(line: 1934, column: 11, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !3, line: 1934, column: 11)
!12716 = distinct !DILexicalBlock(scope: !12709, file: !3, line: 1934, column: 11)
!12717 = !DILocation(line: 1934, column: 11, scope: !12716)
!12718 = !DILocalVariable(name: "__j", scope: !12719, file: !3, line: 1934, type: !849)
!12719 = distinct !DILexicalBlock(scope: !12715, file: !3, line: 1934, column: 11)
!12720 = !DILocation(line: 1934, column: 11, scope: !12719)
!12721 = !DILocalVariable(name: "__s", scope: !12719, file: !3, line: 1934, type: !817)
!12722 = !DILocation(line: 1936, column: 9, scope: !12710)
!12723 = !DILocation(line: 1937, column: 7, scope: !12710)
!12724 = !DILocation(line: 1931, column: 35, scope: !12697)
!12725 = distinct !{!12725, !12692, !12726}
!12726 = !DILocation(line: 1937, column: 7, scope: !12693)
!12727 = !DILocation(line: 1940, column: 3, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 1940, column: 3)
!12729 = !DILocation(line: 1940, column: 3, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 1940, column: 3)
!12731 = !DILocalVariable(name: "index", scope: !12732, file: !3, line: 1942, type: !849)
!12732 = distinct !DILexicalBlock(scope: !12730, file: !3, line: 1941, column: 5)
!12733 = !DILocation(line: 1942, column: 11, scope: !12732)
!12734 = !DILocation(line: 1942, column: 41, scope: !12732)
!12735 = !DILocation(line: 1943, column: 41, scope: !12732)
!12736 = !DILocation(line: 1943, column: 47, scope: !12732)
!12737 = !DILocation(line: 1942, column: 19, scope: !12732)
!12738 = !DILocation(line: 1945, column: 11, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 1945, column: 11)
!12740 = !DILocation(line: 1945, column: 17, scope: !12739)
!12741 = !DILocation(line: 1945, column: 11, scope: !12732)
!12742 = !DILocalVariable(name: "phist", scope: !12743, file: !3, line: 1947, type: !12744)
!12743 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1946, column: 9)
!12744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!12745 = !DILocation(line: 1947, column: 29, scope: !12743)
!12746 = !DILocation(line: 1949, column: 19, scope: !12743)
!12747 = !DILocation(line: 1949, column: 17, scope: !12743)
!12748 = !DILocation(line: 1953, column: 19, scope: !12743)
!12749 = !DILocation(line: 1953, column: 26, scope: !12743)
!12750 = !DILocation(line: 1953, column: 11, scope: !12743)
!12751 = !DILocalVariable(name: "old_ds", scope: !12752, file: !3, line: 1957, type: !2089)
!12752 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 1956, column: 15)
!12753 = distinct !DILexicalBlock(scope: !12743, file: !3, line: 1954, column: 13)
!12754 = !DILocation(line: 1957, column: 22, scope: !12752)
!12755 = !DILocalVariable(name: "new_ds", scope: !12752, file: !3, line: 1957, type: !2089)
!12756 = !DILocation(line: 1957, column: 30, scope: !12752)
!12757 = !DILocation(line: 1967, column: 26, scope: !12752)
!12758 = !DILocation(line: 1967, column: 33, scope: !12752)
!12759 = !DILocation(line: 1967, column: 24, scope: !12752)
!12760 = !DILocation(line: 1968, column: 26, scope: !12752)
!12761 = !DILocation(line: 1968, column: 24, scope: !12752)
!12762 = !DILocation(line: 1970, column: 24, scope: !12752)
!12763 = !DILocation(line: 1971, column: 24, scope: !12752)
!12764 = !DILocation(line: 1972, column: 28, scope: !12752)
!12765 = !DILocation(line: 1972, column: 27, scope: !12752)
!12766 = !DILocation(line: 1972, column: 24, scope: !12752)
!12767 = !DILocation(line: 1974, column: 49, scope: !12752)
!12768 = !DILocation(line: 1974, column: 17, scope: !12752)
!12769 = !DILocation(line: 1974, column: 46, scope: !12752)
!12770 = !DILocation(line: 1975, column: 17, scope: !12752)
!12771 = !DILocalVariable(name: "_tmp_expr", scope: !12772, file: !3, line: 1979, type: !2057)
!12772 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 1978, column: 15)
!12773 = !DILocation(line: 1979, column: 26, scope: !12772)
!12774 = !DILocalVariable(name: "tmp_expr", scope: !12772, file: !3, line: 1979, type: !2056)
!12775 = !DILocation(line: 1979, column: 38, scope: !12772)
!12776 = !DILocalVariable(name: "new_vi", scope: !12772, file: !3, line: 1980, type: !2061)
!12777 = !DILocation(line: 1980, column: 25, scope: !12772)
!12778 = !DILocalVariable(name: "add", scope: !12772, file: !3, line: 1981, type: !1057)
!12779 = !DILocation(line: 1981, column: 22, scope: !12772)
!12780 = !DILocation(line: 1983, column: 26, scope: !12772)
!12781 = !DILocation(line: 1983, column: 33, scope: !12772)
!12782 = !DILocation(line: 1983, column: 24, scope: !12772)
!12783 = !DILocation(line: 1985, column: 17, scope: !12772)
!12784 = !DILocation(line: 1987, column: 28, scope: !12772)
!12785 = !DILocation(line: 1987, column: 38, scope: !12772)
!12786 = !DILocation(line: 1987, column: 17, scope: !12772)
!12787 = !DILocation(line: 1989, column: 36, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12772, file: !3, line: 1989, column: 21)
!12789 = !DILocation(line: 1989, column: 43, scope: !12788)
!12790 = !DILocation(line: 1990, column: 36, scope: !12788)
!12791 = !DILocation(line: 1989, column: 21, scope: !12788)
!12792 = !DILocation(line: 1989, column: 21, scope: !12772)
!12793 = !DILocation(line: 1991, column: 41, scope: !12788)
!12794 = !DILocation(line: 1991, column: 51, scope: !12788)
!12795 = !DILocation(line: 1991, column: 19, scope: !12788)
!12796 = !DILocation(line: 1996, column: 49, scope: !12788)
!12797 = !DILocation(line: 1996, column: 59, scope: !12788)
!12798 = !DILocation(line: 1996, column: 25, scope: !12788)
!12799 = !DILocation(line: 1996, column: 23, scope: !12788)
!12800 = !DILocation(line: 1997, column: 21, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12772, file: !3, line: 1997, column: 21)
!12802 = !DILocation(line: 1997, column: 21, scope: !12772)
!12803 = !DILocation(line: 1998, column: 41, scope: !12801)
!12804 = !DILocation(line: 1998, column: 19, scope: !12801)
!12805 = !DILocation(line: 1999, column: 29, scope: !12772)
!12806 = !DILocation(line: 1999, column: 17, scope: !12772)
!12807 = !DILocation(line: 2000, column: 17, scope: !12772)
!12808 = !DILocation(line: 2003, column: 15, scope: !12753)
!12809 = !DILocation(line: 2004, column: 13, scope: !12753)
!12810 = !DILocation(line: 2005, column: 9, scope: !12743)
!12811 = !DILocation(line: 2007, column: 5, scope: !12732)
!12812 = distinct !{!12812, !12727, !12813}
!12813 = !DILocation(line: 2007, column: 5, scope: !12728)
!12814 = !DILocation(line: 2009, column: 27, scope: !12679)
!12815 = !DILocation(line: 2009, column: 3, scope: !12679)
!12816 = !DILocation(line: 2010, column: 1, scope: !12679)
!12817 = distinct !DISubprogram(name: "code_motion_path_driver_cleanup", scope: !3, file: !3, line: 6384, type: !12818, scopeLine: 6385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!12818 = !DISubroutineType(types: !12819)
!12819 = !{null, !6872, !8060}
!12820 = !DILocalVariable(name: "orig_ops_p", arg: 1, scope: !12817, file: !3, line: 6384, type: !6872)
!12821 = !DILocation(line: 6384, column: 44, scope: !12817)
!12822 = !DILocalVariable(name: "path_p", arg: 2, scope: !12817, file: !3, line: 6384, type: !8060)
!12823 = !DILocation(line: 6384, column: 65, scope: !12817)
!12824 = !DILocation(line: 6386, column: 3, scope: !12817)
!12825 = !DILocation(line: 6387, column: 17, scope: !12817)
!12826 = !DILocation(line: 6387, column: 3, scope: !12817)
!12827 = !DILocation(line: 6388, column: 1, scope: !12817)
!12828 = distinct !DISubprogram(name: "code_motion_process_successors", scope: !3, file: !3, line: 6296, type: !12829, scopeLine: 6298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!12829 = !DISubroutineType(types: !12830)
!12830 = !{!849, !2132, !2166, !2163, !819}
!12831 = !DILocalVariable(name: "insn", arg: 1, scope: !12828, file: !3, line: 6296, type: !2132)
!12832 = !DILocation(line: 6296, column: 40, scope: !12828)
!12833 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !12828, file: !3, line: 6296, type: !2166)
!12834 = !DILocation(line: 6296, column: 55, scope: !12828)
!12835 = !DILocalVariable(name: "path", arg: 3, scope: !12828, file: !3, line: 6297, type: !2163)
!12836 = !DILocation(line: 6297, column: 41, scope: !12828)
!12837 = !DILocalVariable(name: "static_params", arg: 4, scope: !12828, file: !3, line: 6297, type: !819)
!12838 = !DILocation(line: 6297, column: 53, scope: !12828)
!12839 = !DILocalVariable(name: "res", scope: !12828, file: !3, line: 6299, type: !849)
!12840 = !DILocation(line: 6299, column: 7, scope: !12828)
!12841 = !DILocalVariable(name: "succ_i", scope: !12828, file: !3, line: 6300, type: !3479)
!12842 = !DILocation(line: 6300, column: 17, scope: !12828)
!12843 = !DILocalVariable(name: "succ", scope: !12828, file: !3, line: 6301, type: !825)
!12844 = !DILocation(line: 6301, column: 7, scope: !12828)
!12845 = !DILocalVariable(name: "bb", scope: !12828, file: !3, line: 6302, type: !1362)
!12846 = !DILocation(line: 6302, column: 15, scope: !12828)
!12847 = !DILocalVariable(name: "old_index", scope: !12828, file: !3, line: 6303, type: !849)
!12848 = !DILocation(line: 6303, column: 7, scope: !12828)
!12849 = !DILocalVariable(name: "old_succs", scope: !12828, file: !3, line: 6304, type: !7)
!12850 = !DILocation(line: 6304, column: 12, scope: !12828)
!12851 = !DILocalVariable(name: "lparams", scope: !12828, file: !3, line: 6306, type: !2298)
!12852 = !DILocation(line: 6306, column: 28, scope: !12828)
!12853 = !DILocalVariable(name: "_x", scope: !12828, file: !3, line: 6307, type: !2057)
!12854 = !DILocation(line: 6307, column: 12, scope: !12828)
!12855 = !DILocation(line: 6309, column: 11, scope: !12828)
!12856 = !DILocation(line: 6309, column: 24, scope: !12828)
!12857 = !DILocation(line: 6310, column: 11, scope: !12828)
!12858 = !DILocation(line: 6310, column: 25, scope: !12828)
!12859 = !DILocation(line: 6310, column: 3, scope: !12828)
!12860 = !DILabel(scope: !12828, name: "rescan", file: !3, line: 6321)
!12861 = !DILocation(line: 6321, column: 2, scope: !12828)
!12862 = !DILocation(line: 6322, column: 8, scope: !12828)
!12863 = !DILocation(line: 6322, column: 6, scope: !12828)
!12864 = !DILocation(line: 6323, column: 15, scope: !12828)
!12865 = !DILocation(line: 6323, column: 19, scope: !12828)
!12866 = !DILocation(line: 6323, column: 13, scope: !12828)
!12867 = !DILocation(line: 6324, column: 15, scope: !12828)
!12868 = !DILocation(line: 6324, column: 13, scope: !12828)
!12869 = !DILocation(line: 6326, column: 3, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12828, file: !3, line: 6326, column: 3)
!12871 = !DILocation(line: 6326, column: 3, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 6326, column: 3)
!12873 = !DILocalVariable(name: "b", scope: !12874, file: !3, line: 6328, type: !849)
!12874 = distinct !DILexicalBlock(scope: !12872, file: !3, line: 6327, column: 5)
!12875 = !DILocation(line: 6328, column: 11, scope: !12874)
!12876 = !DILocation(line: 6330, column: 27, scope: !12874)
!12877 = !DILocation(line: 6330, column: 15, scope: !12874)
!12878 = !DILocation(line: 6330, column: 18, scope: !12874)
!12879 = !DILocation(line: 6331, column: 27, scope: !12874)
!12880 = !DILocation(line: 6331, column: 15, scope: !12874)
!12881 = !DILocation(line: 6331, column: 18, scope: !12874)
!12882 = !DILocation(line: 6335, column: 18, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12874, file: !3, line: 6335, column: 11)
!12884 = !DILocation(line: 6335, column: 11, scope: !12883)
!12885 = !DILocation(line: 6335, column: 32, scope: !12883)
!12886 = !DILocation(line: 6335, column: 11, scope: !12874)
!12887 = !DILocation(line: 6336, column: 31, scope: !12883)
!12888 = !DILocation(line: 6336, column: 37, scope: !12883)
!12889 = !DILocation(line: 6336, column: 47, scope: !12883)
!12890 = !DILocation(line: 6337, column: 10, scope: !12883)
!12891 = !DILocation(line: 6336, column: 6, scope: !12883)
!12892 = !DILocation(line: 6336, column: 4, scope: !12883)
!12893 = !DILocation(line: 6336, column: 2, scope: !12883)
!12894 = !DILocation(line: 6339, column: 4, scope: !12883)
!12895 = !DILocation(line: 6343, column: 7, scope: !12874)
!12896 = !DILocation(line: 6343, column: 37, scope: !12874)
!12897 = !DILocation(line: 6343, column: 50, scope: !12874)
!12898 = !DILocation(line: 6343, column: 56, scope: !12874)
!12899 = !DILocation(line: 6343, column: 62, scope: !12874)
!12900 = !DILocation(line: 6344, column: 8, scope: !12874)
!12901 = !DILocation(line: 6345, column: 11, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12874, file: !3, line: 6345, column: 11)
!12903 = !DILocation(line: 6345, column: 13, scope: !12902)
!12904 = !DILocation(line: 6345, column: 11, scope: !12874)
!12905 = !DILocation(line: 6346, column: 15, scope: !12902)
!12906 = !DILocation(line: 6346, column: 13, scope: !12902)
!12907 = !DILocation(line: 6346, column: 9, scope: !12902)
!12908 = !DILocation(line: 6347, column: 16, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12902, file: !3, line: 6347, column: 16)
!12910 = !DILocation(line: 6347, column: 18, scope: !12909)
!12911 = !DILocation(line: 6347, column: 24, scope: !12909)
!12912 = !DILocation(line: 6347, column: 27, scope: !12909)
!12913 = !DILocation(line: 6347, column: 31, scope: !12909)
!12914 = !DILocation(line: 6347, column: 16, scope: !12902)
!12915 = !DILocation(line: 6348, column: 15, scope: !12909)
!12916 = !DILocation(line: 6348, column: 13, scope: !12909)
!12917 = !DILocation(line: 6348, column: 9, scope: !12909)
!12918 = !DILocation(line: 6352, column: 11, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12874, file: !3, line: 6352, column: 11)
!12920 = !DILocation(line: 6352, column: 34, scope: !12919)
!12921 = !DILocation(line: 6352, column: 43, scope: !12919)
!12922 = !DILocation(line: 6352, column: 40, scope: !12919)
!12923 = !DILocation(line: 6353, column: 11, scope: !12919)
!12924 = !DILocation(line: 6353, column: 14, scope: !12919)
!12925 = !DILocation(line: 6353, column: 40, scope: !12919)
!12926 = !DILocation(line: 6353, column: 37, scope: !12919)
!12927 = !DILocation(line: 6352, column: 11, scope: !12874)
!12928 = !DILocation(line: 6354, column: 9, scope: !12919)
!12929 = !DILocation(line: 6355, column: 5, scope: !12874)
!12930 = distinct !{!12930, !12869, !12931}
!12931 = !DILocation(line: 6355, column: 5, scope: !12870)
!12932 = !DILocation(line: 6373, column: 7, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12828, file: !3, line: 6373, column: 7)
!12934 = !DILocation(line: 6373, column: 11, scope: !12933)
!12935 = !DILocation(line: 6373, column: 17, scope: !12933)
!12936 = !DILocation(line: 6373, column: 20, scope: !12933)
!12937 = !DILocation(line: 6373, column: 50, scope: !12933)
!12938 = !DILocation(line: 6373, column: 7, scope: !12828)
!12939 = !DILocation(line: 6374, column: 5, scope: !12933)
!12940 = !DILocation(line: 6374, column: 35, scope: !12933)
!12941 = !DILocation(line: 6374, column: 64, scope: !12933)
!12942 = !DILocation(line: 6376, column: 10, scope: !12828)
!12943 = !DILocation(line: 6376, column: 3, scope: !12828)
!12944 = distinct !DISubprogram(name: "identical_copy_p", scope: !3, file: !3, line: 1893, type: !4082, scopeLine: 1894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!12945 = !DILocalVariable(name: "insn", arg: 1, scope: !12944, file: !3, line: 1893, type: !825)
!12946 = !DILocation(line: 1893, column: 23, scope: !12944)
!12947 = !DILocalVariable(name: "lhs", scope: !12944, file: !3, line: 1895, type: !825)
!12948 = !DILocation(line: 1895, column: 7, scope: !12944)
!12949 = !DILocalVariable(name: "rhs", scope: !12944, file: !3, line: 1895, type: !825)
!12950 = !DILocation(line: 1895, column: 12, scope: !12944)
!12951 = !DILocalVariable(name: "pat", scope: !12944, file: !3, line: 1895, type: !825)
!12952 = !DILocation(line: 1895, column: 17, scope: !12944)
!12953 = !DILocation(line: 1897, column: 9, scope: !12944)
!12954 = !DILocation(line: 1897, column: 7, scope: !12944)
!12955 = !DILocation(line: 1899, column: 7, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12944, file: !3, line: 1899, column: 7)
!12957 = !DILocation(line: 1899, column: 22, scope: !12956)
!12958 = !DILocation(line: 1899, column: 7, scope: !12944)
!12959 = !DILocation(line: 1900, column: 5, scope: !12956)
!12960 = !DILocation(line: 1902, column: 9, scope: !12944)
!12961 = !DILocation(line: 1902, column: 7, scope: !12944)
!12962 = !DILocation(line: 1903, column: 8, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12944, file: !3, line: 1903, column: 7)
!12964 = !DILocation(line: 1903, column: 7, scope: !12944)
!12965 = !DILocation(line: 1904, column: 5, scope: !12963)
!12966 = !DILocation(line: 1906, column: 9, scope: !12944)
!12967 = !DILocation(line: 1906, column: 7, scope: !12944)
!12968 = !DILocation(line: 1907, column: 8, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12944, file: !3, line: 1907, column: 7)
!12970 = !DILocation(line: 1907, column: 7, scope: !12944)
!12971 = !DILocation(line: 1908, column: 5, scope: !12969)
!12972 = !DILocation(line: 1910, column: 10, scope: !12944)
!12973 = !DILocation(line: 1910, column: 25, scope: !12944)
!12974 = !DILocation(line: 1910, column: 22, scope: !12944)
!12975 = !DILocation(line: 1910, column: 3, scope: !12944)
!12976 = !DILocation(line: 1911, column: 1, scope: !12944)
!12977 = distinct !DISubprogram(name: "VEC_expr_history_def_base_index", scope: !398, file: !398, line: 101, type: !12978, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!12978 = !DISubroutineType(types: !12979)
!12979 = !{!12744, !12980, !7}
!12980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!12981 = !DILocalVariable(name: "vec_", arg: 1, scope: !12977, file: !398, line: 101, type: !12980)
!12982 = !DILocation(line: 101, column: 1, scope: !12977)
!12983 = !DILocalVariable(name: "ix_", arg: 2, scope: !12977, file: !398, line: 101, type: !7)
!12984 = !DILocation(line: 0, scope: !12977)
!12985 = distinct !DISubprogram(name: "get_reg_class", scope: !3, file: !3, line: 1027, type: !12986, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!12986 = !DISubroutineType(types: !12987)
!12987 = !{!780, !825}
!12988 = !DILocalVariable(name: "insn", arg: 1, scope: !12985, file: !3, line: 1027, type: !825)
!12989 = !DILocation(line: 1027, column: 20, scope: !12985)
!12990 = !DILocalVariable(name: "alt", scope: !12985, file: !3, line: 1029, type: !849)
!12991 = !DILocation(line: 1029, column: 7, scope: !12985)
!12992 = !DILocalVariable(name: "i", scope: !12985, file: !3, line: 1029, type: !849)
!12993 = !DILocation(line: 1029, column: 12, scope: !12985)
!12994 = !DILocalVariable(name: "n_ops", scope: !12985, file: !3, line: 1029, type: !849)
!12995 = !DILocation(line: 1029, column: 15, scope: !12985)
!12996 = !DILocation(line: 1031, column: 17, scope: !12985)
!12997 = !DILocation(line: 1031, column: 3, scope: !12985)
!12998 = !DILocation(line: 1032, column: 9, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 1032, column: 7)
!13000 = !DILocation(line: 1032, column: 7, scope: !12985)
!13001 = !DILocation(line: 1033, column: 5, scope: !12999)
!13002 = !DILocation(line: 1034, column: 3, scope: !12985)
!13003 = !DILocation(line: 1035, column: 9, scope: !12985)
!13004 = !DILocation(line: 1035, column: 7, scope: !12985)
!13005 = !DILocation(line: 1036, column: 22, scope: !12985)
!13006 = !DILocation(line: 1036, column: 11, scope: !12985)
!13007 = !DILocation(line: 1036, column: 9, scope: !12985)
!13008 = !DILocation(line: 1038, column: 10, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 1038, column: 3)
!13010 = !DILocation(line: 1038, column: 8, scope: !13009)
!13011 = !DILocation(line: 1038, column: 15, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 1038, column: 3)
!13013 = !DILocation(line: 1038, column: 19, scope: !13012)
!13014 = !DILocation(line: 1038, column: 17, scope: !13012)
!13015 = !DILocation(line: 1038, column: 3, scope: !13009)
!13016 = !DILocalVariable(name: "matches", scope: !13017, file: !3, line: 1040, type: !849)
!13017 = distinct !DILexicalBlock(scope: !13012, file: !3, line: 1039, column: 5)
!13018 = !DILocation(line: 1040, column: 11, scope: !13017)
!13019 = !DILocation(line: 1040, column: 34, scope: !13017)
!13020 = !DILocation(line: 1040, column: 21, scope: !13017)
!13021 = !DILocation(line: 1040, column: 37, scope: !13017)
!13022 = !DILocation(line: 1040, column: 42, scope: !13017)
!13023 = !DILocation(line: 1041, column: 11, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13017, file: !3, line: 1041, column: 11)
!13025 = !DILocation(line: 1041, column: 19, scope: !13024)
!13026 = !DILocation(line: 1041, column: 11, scope: !13017)
!13027 = !DILocation(line: 1042, column: 41, scope: !13024)
!13028 = !DILocation(line: 1042, column: 28, scope: !13024)
!13029 = !DILocation(line: 1042, column: 50, scope: !13024)
!13030 = !DILocation(line: 1042, column: 55, scope: !13024)
!13031 = !DILocation(line: 1042, column: 15, scope: !13024)
!13032 = !DILocation(line: 1042, column: 2, scope: !13024)
!13033 = !DILocation(line: 1042, column: 18, scope: !13024)
!13034 = !DILocation(line: 1042, column: 23, scope: !13024)
!13035 = !DILocation(line: 1042, column: 26, scope: !13024)
!13036 = !DILocation(line: 1043, column: 5, scope: !13017)
!13037 = !DILocation(line: 1038, column: 26, scope: !13012)
!13038 = !DILocation(line: 1038, column: 3, scope: !13012)
!13039 = distinct !{!13039, !13015, !13040}
!13040 = !DILocation(line: 1043, column: 5, scope: !13009)
!13041 = !DILocation(line: 1045, column: 22, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 1045, column: 7)
!13043 = !DILocation(line: 1045, column: 7, scope: !13042)
!13044 = !DILocation(line: 1045, column: 38, scope: !13042)
!13045 = !DILocation(line: 1045, column: 7, scope: !12985)
!13046 = !DILocation(line: 1047, column: 14, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13048, file: !3, line: 1047, column: 7)
!13048 = distinct !DILexicalBlock(scope: !13042, file: !3, line: 1046, column: 5)
!13049 = !DILocation(line: 1047, column: 12, scope: !13047)
!13050 = !DILocation(line: 1047, column: 19, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 1047, column: 7)
!13052 = !DILocation(line: 1047, column: 23, scope: !13051)
!13053 = !DILocation(line: 1047, column: 21, scope: !13051)
!13054 = !DILocation(line: 1047, column: 7, scope: !13047)
!13055 = !DILocation(line: 1048, column: 30, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13051, file: !3, line: 1048, column: 6)
!13057 = !DILocation(line: 1048, column: 6, scope: !13056)
!13058 = !DILocation(line: 1048, column: 33, scope: !13056)
!13059 = !DILocation(line: 1048, column: 6, scope: !13051)
!13060 = !DILocalVariable(name: "loc", scope: !13061, file: !3, line: 1050, type: !5250)
!13061 = distinct !DILexicalBlock(scope: !13056, file: !3, line: 1049, column: 4)
!13062 = !DILocation(line: 1050, column: 11, scope: !13061)
!13063 = !DILocation(line: 1050, column: 40, scope: !13061)
!13064 = !DILocation(line: 1050, column: 17, scope: !13061)
!13065 = !DILocalVariable(name: "op", scope: !13061, file: !3, line: 1051, type: !825)
!13066 = !DILocation(line: 1051, column: 10, scope: !13061)
!13067 = !DILocation(line: 1051, column: 16, scope: !13061)
!13068 = !DILocation(line: 1051, column: 15, scope: !13061)
!13069 = !DILocalVariable(name: "cl", scope: !13061, file: !3, line: 1052, type: !780)
!13070 = !DILocation(line: 1052, column: 21, scope: !13061)
!13071 = !DILocation(line: 1052, column: 39, scope: !13061)
!13072 = !DILocation(line: 1052, column: 26, scope: !13061)
!13073 = !DILocation(line: 1052, column: 42, scope: !13061)
!13074 = !DILocation(line: 1052, column: 47, scope: !13061)
!13075 = !DILocation(line: 1054, column: 10, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 1054, column: 10)
!13077 = !DILocation(line: 1055, column: 3, scope: !13076)
!13078 = !DILocation(line: 1055, column: 6, scope: !13076)
!13079 = !DILocation(line: 1055, column: 20, scope: !13076)
!13080 = !DILocation(line: 1055, column: 17, scope: !13076)
!13081 = !DILocation(line: 1054, column: 10, scope: !13061)
!13082 = !DILocation(line: 1056, column: 8, scope: !13076)
!13083 = !DILocation(line: 1058, column: 13, scope: !13061)
!13084 = !DILocation(line: 1058, column: 6, scope: !13061)
!13085 = !DILocation(line: 1048, column: 36, scope: !13056)
!13086 = !DILocation(line: 1047, column: 31, scope: !13051)
!13087 = !DILocation(line: 1047, column: 7, scope: !13051)
!13088 = distinct !{!13088, !13054, !13089}
!13089 = !DILocation(line: 1059, column: 4, scope: !13047)
!13090 = !DILocation(line: 1060, column: 5, scope: !13048)
!13091 = !DILocation(line: 1061, column: 13, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13042, file: !3, line: 1061, column: 12)
!13093 = !DILocation(line: 1061, column: 12, scope: !13042)
!13094 = !DILocation(line: 1063, column: 14, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 1063, column: 7)
!13096 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 1062, column: 5)
!13097 = !DILocation(line: 1063, column: 12, scope: !13095)
!13098 = !DILocation(line: 1063, column: 19, scope: !13099)
!13099 = distinct !DILexicalBlock(scope: !13095, file: !3, line: 1063, column: 7)
!13100 = !DILocation(line: 1063, column: 23, scope: !13099)
!13101 = !DILocation(line: 1063, column: 42, scope: !13099)
!13102 = !DILocation(line: 1063, column: 31, scope: !13099)
!13103 = !DILocation(line: 1063, column: 29, scope: !13099)
!13104 = !DILocation(line: 1063, column: 21, scope: !13099)
!13105 = !DILocation(line: 1063, column: 7, scope: !13095)
!13106 = !DILocalVariable(name: "opn", scope: !13107, file: !3, line: 1065, type: !849)
!13107 = distinct !DILexicalBlock(scope: !13099, file: !3, line: 1064, column: 8)
!13108 = !DILocation(line: 1065, column: 7, scope: !13107)
!13109 = !DILocation(line: 1065, column: 13, scope: !13107)
!13110 = !DILocation(line: 1065, column: 17, scope: !13107)
!13111 = !DILocation(line: 1065, column: 15, scope: !13107)
!13112 = !DILocation(line: 1065, column: 25, scope: !13107)
!13113 = !DILocation(line: 1065, column: 48, scope: !13107)
!13114 = !DILocation(line: 1065, column: 52, scope: !13107)
!13115 = !DILocation(line: 1065, column: 50, scope: !13107)
!13116 = !DILocation(line: 1065, column: 29, scope: !13107)
!13117 = !DILocalVariable(name: "cl", scope: !13107, file: !3, line: 1066, type: !780)
!13118 = !DILocation(line: 1066, column: 18, scope: !13107)
!13119 = !DILocation(line: 1066, column: 36, scope: !13107)
!13120 = !DILocation(line: 1066, column: 23, scope: !13107)
!13121 = !DILocation(line: 1066, column: 41, scope: !13107)
!13122 = !DILocation(line: 1066, column: 46, scope: !13107)
!13123 = !DILocation(line: 1068, column: 31, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 1068, column: 7)
!13125 = !DILocation(line: 1068, column: 7, scope: !13124)
!13126 = !DILocation(line: 1068, column: 36, scope: !13124)
!13127 = !DILocation(line: 1068, column: 46, scope: !13124)
!13128 = !DILocation(line: 1069, column: 31, scope: !13124)
!13129 = !DILocation(line: 1069, column: 7, scope: !13124)
!13130 = !DILocation(line: 1069, column: 36, scope: !13124)
!13131 = !DILocation(line: 1068, column: 7, scope: !13107)
!13132 = !DILocation(line: 1070, column: 12, scope: !13124)
!13133 = !DILocation(line: 1070, column: 5, scope: !13124)
!13134 = !DILocation(line: 1071, column: 8, scope: !13107)
!13135 = !DILocation(line: 1063, column: 51, scope: !13099)
!13136 = !DILocation(line: 1063, column: 7, scope: !13099)
!13137 = distinct !{!13137, !13105, !13138}
!13138 = !DILocation(line: 1071, column: 8, scope: !13095)
!13139 = !DILocation(line: 1072, column: 5, scope: !13096)
!13140 = !DILocation(line: 1078, column: 3, scope: !12985)
!13141 = !DILocation(line: 1079, column: 1, scope: !12985)
!13142 = distinct !DISubprogram(name: "init_regs_for_mode", scope: !3, file: !3, line: 1122, type: !13143, scopeLine: 1123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13143 = !DISubroutineType(types: !13144)
!13144 = !{null, !5}
!13145 = !DILocalVariable(name: "mode", arg: 1, scope: !13142, file: !3, line: 1122, type: !5)
!13146 = !DILocation(line: 1122, column: 39, scope: !13142)
!13147 = !DILocalVariable(name: "cur_reg", scope: !13142, file: !3, line: 1124, type: !849)
!13148 = !DILocation(line: 1124, column: 7, scope: !13142)
!13149 = !DILocation(line: 1126, column: 3, scope: !13142)
!13150 = !DILocation(line: 1127, column: 3, scope: !13142)
!13151 = !DILocation(line: 1129, column: 16, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13142, file: !3, line: 1129, column: 3)
!13153 = !DILocation(line: 1129, column: 8, scope: !13152)
!13154 = !DILocation(line: 1129, column: 21, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13152, file: !3, line: 1129, column: 3)
!13156 = !DILocation(line: 1129, column: 29, scope: !13155)
!13157 = !DILocation(line: 1129, column: 3, scope: !13152)
!13158 = !DILocalVariable(name: "nregs", scope: !13159, file: !3, line: 1131, type: !849)
!13159 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 1130, column: 5)
!13160 = !DILocation(line: 1131, column: 11, scope: !13159)
!13161 = !DILocation(line: 1131, column: 36, scope: !13159)
!13162 = !DILocation(line: 1131, column: 19, scope: !13159)
!13163 = !DILocation(line: 1131, column: 45, scope: !13159)
!13164 = !DILocalVariable(name: "i", scope: !13159, file: !3, line: 1132, type: !849)
!13165 = !DILocation(line: 1132, column: 11, scope: !13159)
!13166 = !DILocation(line: 1134, column: 16, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 1134, column: 7)
!13168 = !DILocation(line: 1134, column: 22, scope: !13167)
!13169 = !DILocation(line: 1134, column: 14, scope: !13167)
!13170 = !DILocation(line: 1134, column: 12, scope: !13167)
!13171 = !DILocation(line: 1134, column: 27, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 1134, column: 7)
!13173 = !DILocation(line: 1134, column: 29, scope: !13172)
!13174 = !DILocation(line: 1134, column: 7, scope: !13167)
!13175 = !DILocation(line: 1135, column: 24, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13172, file: !3, line: 1135, column: 13)
!13177 = !DILocation(line: 1135, column: 34, scope: !13176)
!13178 = !DILocation(line: 1135, column: 32, scope: !13176)
!13179 = !DILocation(line: 1135, column: 13, scope: !13176)
!13180 = !DILocation(line: 1136, column: 17, scope: !13176)
!13181 = !DILocation(line: 1136, column: 32, scope: !13176)
!13182 = !DILocation(line: 1136, column: 42, scope: !13176)
!13183 = !DILocation(line: 1136, column: 40, scope: !13176)
!13184 = !DILocation(line: 1136, column: 20, scope: !13176)
!13185 = !DILocation(line: 1139, column: 13, scope: !13176)
!13186 = !DILocation(line: 1139, column: 17, scope: !13176)
!13187 = !DILocation(line: 1135, column: 13, scope: !13172)
!13188 = !DILocation(line: 1147, column: 11, scope: !13176)
!13189 = !DILocation(line: 1134, column: 35, scope: !13172)
!13190 = !DILocation(line: 1134, column: 7, scope: !13172)
!13191 = distinct !{!13191, !13174, !13192}
!13192 = !DILocation(line: 1147, column: 11, scope: !13167)
!13193 = !DILocation(line: 1149, column: 11, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 1149, column: 11)
!13195 = !DILocation(line: 1149, column: 13, scope: !13194)
!13196 = !DILocation(line: 1149, column: 11, scope: !13159)
!13197 = !DILocation(line: 1150, column: 9, scope: !13194)
!13198 = !DILocation(line: 1154, column: 13, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 1154, column: 11)
!13200 = !DILocation(line: 1154, column: 11, scope: !13159)
!13201 = !DILocation(line: 1155, column: 9, scope: !13199)
!13202 = !DILocation(line: 1163, column: 7, scope: !13159)
!13203 = !DILocation(line: 1164, column: 5, scope: !13159)
!13204 = !DILocation(line: 1129, column: 61, scope: !13155)
!13205 = !DILocation(line: 1129, column: 3, scope: !13155)
!13206 = distinct !{!13206, !13157, !13207}
!13207 = !DILocation(line: 1164, column: 5, scope: !13152)
!13208 = !DILocation(line: 1166, column: 28, scope: !13142)
!13209 = !DILocation(line: 1166, column: 3, scope: !13142)
!13210 = !DILocation(line: 1166, column: 34, scope: !13142)
!13211 = !DILocation(line: 1167, column: 1, scope: !13142)
!13212 = distinct !DISubprogram(name: "hard_reg_set_iter_init", scope: !2280, file: !2280, line: 506, type: !13213, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13213 = !DISubroutineType(types: !13214)
!13214 = !{null, !13215, !2279, !7, !8099}
!13215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12512, size: 64)
!13216 = !DILocalVariable(name: "iter", arg: 1, scope: !13212, file: !2280, line: 506, type: !13215)
!13217 = !DILocation(line: 506, column: 48, scope: !13212)
!13218 = !DILocalVariable(name: "set", arg: 2, scope: !13212, file: !2280, line: 506, type: !2279)
!13219 = !DILocation(line: 506, column: 67, scope: !13212)
!13220 = !DILocalVariable(name: "min", arg: 3, scope: !13212, file: !2280, line: 507, type: !7)
!13221 = !DILocation(line: 507, column: 34, scope: !13212)
!13222 = !DILocalVariable(name: "regno", arg: 4, scope: !13212, file: !2280, line: 507, type: !8099)
!13223 = !DILocation(line: 507, column: 49, scope: !13212)
!13224 = !DILocation(line: 513, column: 3, scope: !13212)
!13225 = !DILocation(line: 513, column: 9, scope: !13212)
!13226 = !DILocation(line: 513, column: 14, scope: !13212)
!13227 = !DILocation(line: 514, column: 3, scope: !13212)
!13228 = !DILocation(line: 514, column: 9, scope: !13212)
!13229 = !DILocation(line: 514, column: 16, scope: !13212)
!13230 = !DILocation(line: 516, column: 19, scope: !13212)
!13231 = !DILocation(line: 516, column: 23, scope: !13212)
!13232 = !DILocation(line: 516, column: 3, scope: !13212)
!13233 = !DILocation(line: 516, column: 9, scope: !13212)
!13234 = !DILocation(line: 516, column: 17, scope: !13212)
!13235 = !DILocation(line: 517, column: 7, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13212, file: !2280, line: 517, column: 7)
!13237 = !DILocation(line: 517, column: 13, scope: !13236)
!13238 = !DILocation(line: 517, column: 23, scope: !13236)
!13239 = !DILocation(line: 517, column: 29, scope: !13236)
!13240 = !DILocation(line: 517, column: 21, scope: !13236)
!13241 = !DILocation(line: 517, column: 7, scope: !13212)
!13242 = !DILocation(line: 519, column: 20, scope: !13243)
!13243 = distinct !DILexicalBlock(scope: !13236, file: !2280, line: 518, column: 5)
!13244 = !DILocation(line: 519, column: 26, scope: !13243)
!13245 = !DILocation(line: 519, column: 31, scope: !13243)
!13246 = !DILocation(line: 519, column: 37, scope: !13243)
!13247 = !DILocation(line: 519, column: 7, scope: !13243)
!13248 = !DILocation(line: 519, column: 13, scope: !13243)
!13249 = !DILocation(line: 519, column: 18, scope: !13243)
!13250 = !DILocation(line: 520, column: 22, scope: !13243)
!13251 = !DILocation(line: 520, column: 26, scope: !13243)
!13252 = !DILocation(line: 520, column: 7, scope: !13243)
!13253 = !DILocation(line: 520, column: 13, scope: !13243)
!13254 = !DILocation(line: 520, column: 18, scope: !13243)
!13255 = !DILocation(line: 523, column: 15, scope: !13243)
!13256 = !DILocation(line: 523, column: 21, scope: !13243)
!13257 = !DILocation(line: 523, column: 14, scope: !13243)
!13258 = !DILocation(line: 523, column: 11, scope: !13243)
!13259 = !DILocation(line: 524, column: 5, scope: !13243)
!13260 = !DILocation(line: 525, column: 12, scope: !13212)
!13261 = !DILocation(line: 525, column: 4, scope: !13212)
!13262 = !DILocation(line: 525, column: 10, scope: !13212)
!13263 = !DILocation(line: 526, column: 1, scope: !13212)
!13264 = distinct !DISubprogram(name: "hard_reg_set_iter_set", scope: !2280, file: !2280, line: 529, type: !13265, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13265 = !DISubroutineType(types: !13266)
!13266 = !{!1057, !13215, !8099}
!13267 = !DILocalVariable(name: "iter", arg: 1, scope: !13264, file: !2280, line: 529, type: !13215)
!13268 = !DILocation(line: 529, column: 47, scope: !13264)
!13269 = !DILocalVariable(name: "regno", arg: 2, scope: !13264, file: !2280, line: 529, type: !8099)
!13270 = !DILocation(line: 529, column: 63, scope: !13264)
!13271 = !DILocation(line: 531, column: 3, scope: !13264)
!13272 = !DILocation(line: 534, column: 11, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13274, file: !2280, line: 534, column: 11)
!13274 = distinct !DILexicalBlock(scope: !13264, file: !2280, line: 532, column: 5)
!13275 = !DILocation(line: 534, column: 17, scope: !13273)
!13276 = !DILocation(line: 534, column: 28, scope: !13273)
!13277 = !DILocation(line: 534, column: 34, scope: !13273)
!13278 = !DILocation(line: 534, column: 25, scope: !13273)
!13279 = !DILocation(line: 534, column: 11, scope: !13274)
!13280 = !DILocation(line: 535, column: 9, scope: !13273)
!13281 = !DILocation(line: 537, column: 11, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13274, file: !2280, line: 537, column: 11)
!13283 = !DILocation(line: 537, column: 17, scope: !13282)
!13284 = !DILocation(line: 537, column: 11, scope: !13274)
!13285 = !DILocation(line: 540, column: 11, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13282, file: !2280, line: 538, column: 9)
!13287 = !DILocation(line: 540, column: 20, scope: !13286)
!13288 = !DILocation(line: 540, column: 26, scope: !13286)
!13289 = !DILocation(line: 540, column: 31, scope: !13286)
!13290 = !DILocation(line: 540, column: 18, scope: !13286)
!13291 = !DILocation(line: 542, column: 15, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13286, file: !2280, line: 541, column: 13)
!13293 = !DILocation(line: 542, column: 21, scope: !13292)
!13294 = !DILocation(line: 542, column: 26, scope: !13292)
!13295 = !DILocation(line: 543, column: 16, scope: !13292)
!13296 = !DILocation(line: 543, column: 22, scope: !13292)
!13297 = distinct !{!13297, !13285, !13298}
!13298 = !DILocation(line: 544, column: 13, scope: !13286)
!13299 = !DILocation(line: 545, column: 20, scope: !13286)
!13300 = !DILocation(line: 545, column: 19, scope: !13286)
!13301 = !DILocation(line: 545, column: 26, scope: !13286)
!13302 = !DILocation(line: 545, column: 18, scope: !13286)
!13303 = !DILocation(line: 545, column: 11, scope: !13286)
!13304 = !DILocation(line: 549, column: 18, scope: !13274)
!13305 = !DILocation(line: 549, column: 17, scope: !13274)
!13306 = !DILocation(line: 549, column: 24, scope: !13274)
!13307 = !DILocation(line: 549, column: 44, scope: !13274)
!13308 = !DILocation(line: 549, column: 8, scope: !13274)
!13309 = !DILocation(line: 549, column: 14, scope: !13274)
!13310 = !DILocation(line: 550, column: 18, scope: !13274)
!13311 = !DILocation(line: 550, column: 17, scope: !13274)
!13312 = !DILocation(line: 550, column: 24, scope: !13274)
!13313 = !DILocation(line: 550, column: 8, scope: !13274)
!13314 = !DILocation(line: 550, column: 14, scope: !13274)
!13315 = !DILocation(line: 553, column: 7, scope: !13274)
!13316 = !DILocation(line: 553, column: 16, scope: !13274)
!13317 = !DILocation(line: 553, column: 22, scope: !13274)
!13318 = !DILocation(line: 553, column: 14, scope: !13274)
!13319 = !DILocation(line: 553, column: 32, scope: !13274)
!13320 = !DILocation(line: 553, column: 38, scope: !13274)
!13321 = !DILocation(line: 553, column: 30, scope: !13274)
!13322 = !DILocation(line: 555, column: 24, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13274, file: !2280, line: 554, column: 9)
!13324 = !DILocation(line: 555, column: 30, scope: !13323)
!13325 = !DILocation(line: 555, column: 35, scope: !13323)
!13326 = !DILocation(line: 555, column: 41, scope: !13323)
!13327 = !DILocation(line: 555, column: 11, scope: !13323)
!13328 = !DILocation(line: 555, column: 17, scope: !13323)
!13329 = !DILocation(line: 555, column: 22, scope: !13323)
!13330 = !DILocation(line: 556, column: 15, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13323, file: !2280, line: 556, column: 15)
!13332 = !DILocation(line: 556, column: 21, scope: !13331)
!13333 = !DILocation(line: 556, column: 15, scope: !13323)
!13334 = !DILocation(line: 557, column: 13, scope: !13331)
!13335 = !DILocation(line: 558, column: 12, scope: !13323)
!13336 = !DILocation(line: 558, column: 18, scope: !13323)
!13337 = distinct !{!13337, !13315, !13338}
!13338 = !DILocation(line: 559, column: 9, scope: !13274)
!13339 = distinct !{!13339, !13271, !13340}
!13340 = !DILocation(line: 560, column: 5, scope: !13264)
!13341 = !DILocation(line: 561, column: 1, scope: !13264)
!13342 = distinct !DISubprogram(name: "sel_hard_regno_rename_ok", scope: !3, file: !3, line: 1105, type: !13343, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13343 = !DISubroutineType(types: !13344)
!13344 = !{!1057, !849, !849}
!13345 = !DILocalVariable(name: "from", arg: 1, scope: !13342, file: !3, line: 1105, type: !849)
!13346 = !DILocation(line: 1105, column: 31, scope: !13342)
!13347 = !DILocalVariable(name: "to", arg: 2, scope: !13342, file: !3, line: 1105, type: !849)
!13348 = !DILocation(line: 1105, column: 58, scope: !13342)
!13349 = !DILocation(line: 1109, column: 7, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13342, file: !3, line: 1109, column: 7)
!13351 = !DILocation(line: 1109, column: 7, scope: !13342)
!13352 = !DILocation(line: 1110, column: 12, scope: !13350)
!13353 = !DILocation(line: 1110, column: 5, scope: !13350)
!13354 = !DILocation(line: 1112, column: 27, scope: !13342)
!13355 = !DILocation(line: 1112, column: 3, scope: !13342)
!13356 = !DILocation(line: 1114, column: 10, scope: !13342)
!13357 = !DILocation(line: 1114, column: 3, scope: !13342)
!13358 = !DILocation(line: 1118, column: 1, scope: !13342)
!13359 = distinct !DISubprogram(name: "hard_reg_set_iter_next", scope: !2280, file: !2280, line: 564, type: !13360, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13360 = !DISubroutineType(types: !13361)
!13361 = !{null, !13215, !8099}
!13362 = !DILocalVariable(name: "iter", arg: 1, scope: !13359, file: !2280, line: 564, type: !13215)
!13363 = !DILocation(line: 564, column: 48, scope: !13359)
!13364 = !DILocalVariable(name: "regno", arg: 2, scope: !13359, file: !2280, line: 564, type: !8099)
!13365 = !DILocation(line: 564, column: 64, scope: !13359)
!13366 = !DILocation(line: 566, column: 3, scope: !13359)
!13367 = !DILocation(line: 566, column: 9, scope: !13359)
!13368 = !DILocation(line: 566, column: 14, scope: !13359)
!13369 = !DILocation(line: 567, column: 4, scope: !13359)
!13370 = !DILocation(line: 567, column: 10, scope: !13359)
!13371 = !DILocation(line: 568, column: 1, scope: !13359)
!13372 = distinct !DISubprogram(name: "init_hard_regno_rename", scope: !3, file: !3, line: 1084, type: !3146, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13373 = !DILocalVariable(name: "regno", arg: 1, scope: !13372, file: !3, line: 1084, type: !849)
!13374 = !DILocation(line: 1084, column: 29, scope: !13372)
!13375 = !DILocalVariable(name: "cur_reg", scope: !13372, file: !3, line: 1086, type: !849)
!13376 = !DILocation(line: 1086, column: 7, scope: !13372)
!13377 = !DILocation(line: 1088, column: 3, scope: !13372)
!13378 = !DILocation(line: 1090, column: 16, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13372, file: !3, line: 1090, column: 3)
!13380 = !DILocation(line: 1090, column: 8, scope: !13379)
!13381 = !DILocation(line: 1090, column: 21, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13379, file: !3, line: 1090, column: 3)
!13383 = !DILocation(line: 1090, column: 29, scope: !13382)
!13384 = !DILocation(line: 1090, column: 3, scope: !13379)
!13385 = !DILocation(line: 1093, column: 12, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13387, file: !3, line: 1093, column: 11)
!13387 = distinct !DILexicalBlock(scope: !13382, file: !3, line: 1091, column: 5)
!13388 = !DILocation(line: 1093, column: 11, scope: !13387)
!13389 = !DILocation(line: 1094, column: 9, scope: !13386)
!13390 = !DILocation(line: 1096, column: 11, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13387, file: !3, line: 1096, column: 11)
!13392 = !DILocation(line: 1096, column: 11, scope: !13387)
!13393 = !DILocation(line: 1097, column: 9, scope: !13391)
!13394 = !DILocation(line: 1098, column: 5, scope: !13387)
!13395 = !DILocation(line: 1090, column: 61, scope: !13382)
!13396 = !DILocation(line: 1090, column: 3, scope: !13382)
!13397 = distinct !{!13397, !13384, !13398}
!13398 = !DILocation(line: 1098, column: 5, scope: !13379)
!13399 = !DILocation(line: 1099, column: 1, scope: !13372)
!13400 = distinct !DISubprogram(name: "choose_best_reg_1", scope: !3, file: !3, line: 1379, type: !11645, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13401 = !DILocalVariable(name: "hard_regs_used", arg: 1, scope: !13400, file: !3, line: 1379, type: !2279)
!13402 = !DILocation(line: 1379, column: 33, scope: !13400)
!13403 = !DILocalVariable(name: "reg_rename_p", arg: 2, scope: !13400, file: !3, line: 1380, type: !11515)
!13404 = !DILocation(line: 1380, column: 39, scope: !13400)
!13405 = !DILocalVariable(name: "original_insns", arg: 3, scope: !13400, file: !3, line: 1381, type: !2253)
!13406 = !DILocation(line: 1381, column: 31, scope: !13400)
!13407 = !DILocalVariable(name: "is_orig_reg_p_ptr", arg: 4, scope: !13400, file: !3, line: 1381, type: !2281)
!13408 = !DILocation(line: 1381, column: 53, scope: !13400)
!13409 = !DILocalVariable(name: "best_new_reg", scope: !13400, file: !3, line: 1383, type: !849)
!13410 = !DILocation(line: 1383, column: 7, scope: !13400)
!13411 = !DILocalVariable(name: "cur_reg", scope: !13400, file: !3, line: 1384, type: !7)
!13412 = !DILocation(line: 1384, column: 12, scope: !13400)
!13413 = !DILocalVariable(name: "mode", scope: !13400, file: !3, line: 1385, type: !5)
!13414 = !DILocation(line: 1385, column: 21, scope: !13400)
!13415 = !DILocalVariable(name: "regno", scope: !13400, file: !3, line: 1386, type: !7)
!13416 = !DILocation(line: 1386, column: 12, scope: !13400)
!13417 = !DILocalVariable(name: "i", scope: !13400, file: !3, line: 1386, type: !7)
!13418 = !DILocation(line: 1386, column: 19, scope: !13400)
!13419 = !DILocalVariable(name: "n", scope: !13400, file: !3, line: 1386, type: !7)
!13420 = !DILocation(line: 1386, column: 22, scope: !13400)
!13421 = !DILocalVariable(name: "hrsi", scope: !13400, file: !3, line: 1387, type: !12512)
!13422 = !DILocation(line: 1387, column: 25, scope: !13400)
!13423 = !DILocalVariable(name: "di", scope: !13400, file: !3, line: 1388, type: !11677)
!13424 = !DILocation(line: 1388, column: 21, scope: !13400)
!13425 = !DILocalVariable(name: "def", scope: !13400, file: !3, line: 1389, type: !11680)
!13426 = !DILocation(line: 1389, column: 9, scope: !13400)
!13427 = !DILocation(line: 1392, column: 4, scope: !13400)
!13428 = !DILocation(line: 1392, column: 22, scope: !13400)
!13429 = !DILocation(line: 1394, column: 3, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13400, file: !3, line: 1394, column: 3)
!13431 = !DILocation(line: 1394, column: 3, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13430, file: !3, line: 1394, column: 3)
!13433 = !DILocalVariable(name: "orig_dest", scope: !13434, file: !3, line: 1396, type: !825)
!13434 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 1395, column: 5)
!13435 = !DILocation(line: 1396, column: 11, scope: !13434)
!13436 = !DILocation(line: 1396, column: 23, scope: !13434)
!13437 = !DILocation(line: 1398, column: 7, scope: !13434)
!13438 = !DILocation(line: 1404, column: 11, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 1404, column: 11)
!13440 = !DILocation(line: 1404, column: 16, scope: !13439)
!13441 = !DILocation(line: 1404, column: 11, scope: !13434)
!13442 = !DILocation(line: 1405, column: 16, scope: !13439)
!13443 = !DILocation(line: 1405, column: 14, scope: !13439)
!13444 = !DILocation(line: 1405, column: 9, scope: !13439)
!13445 = !DILocation(line: 1406, column: 7, scope: !13434)
!13446 = !DILocation(line: 1408, column: 15, scope: !13434)
!13447 = !DILocation(line: 1408, column: 13, scope: !13434)
!13448 = !DILocation(line: 1409, column: 14, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 1409, column: 7)
!13450 = !DILocation(line: 1409, column: 40, scope: !13449)
!13451 = !DILocation(line: 1409, column: 23, scope: !13449)
!13452 = !DILocation(line: 1409, column: 47, scope: !13449)
!13453 = !DILocation(line: 1409, column: 21, scope: !13449)
!13454 = !DILocation(line: 1409, column: 12, scope: !13449)
!13455 = !DILocation(line: 1409, column: 54, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13449, file: !3, line: 1409, column: 7)
!13457 = !DILocation(line: 1409, column: 58, scope: !13456)
!13458 = !DILocation(line: 1409, column: 56, scope: !13456)
!13459 = !DILocation(line: 1409, column: 7, scope: !13449)
!13460 = !DILocation(line: 1410, column: 13, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13456, file: !3, line: 1410, column: 13)
!13462 = !DILocation(line: 1410, column: 13, scope: !13456)
!13463 = !DILocation(line: 1411, column: 11, scope: !13461)
!13464 = !DILocation(line: 1409, column: 62, scope: !13456)
!13465 = !DILocation(line: 1409, column: 7, scope: !13456)
!13466 = distinct !{!13466, !13459, !13467}
!13467 = !DILocation(line: 1411, column: 11, scope: !13449)
!13468 = !DILocation(line: 1414, column: 11, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 1414, column: 11)
!13470 = !DILocation(line: 1414, column: 16, scope: !13469)
!13471 = !DILocation(line: 1414, column: 13, scope: !13469)
!13472 = !DILocation(line: 1414, column: 11, scope: !13434)
!13473 = !DILocation(line: 1416, column: 11, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13469, file: !3, line: 1415, column: 9)
!13475 = !DILocation(line: 1419, column: 31, scope: !13474)
!13476 = !DILocation(line: 1419, column: 37, scope: !13474)
!13477 = !DILocation(line: 1419, column: 18, scope: !13474)
!13478 = !DILocation(line: 1419, column: 11, scope: !13474)
!13479 = !DILocation(line: 1421, column: 5, scope: !13434)
!13480 = distinct !{!13480, !13429, !13481}
!13481 = !DILocation(line: 1421, column: 5, scope: !13430)
!13482 = !DILocation(line: 1423, column: 4, scope: !13400)
!13483 = !DILocation(line: 1423, column: 22, scope: !13400)
!13484 = !DILocation(line: 1424, column: 16, scope: !13400)
!13485 = !DILocation(line: 1428, column: 3, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13400, file: !3, line: 1428, column: 3)
!13487 = !DILocation(line: 1428, column: 3, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 1428, column: 3)
!13489 = !DILocation(line: 1430, column: 11, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 1430, column: 9)
!13491 = !DILocation(line: 1430, column: 9, scope: !13488)
!13492 = !DILocation(line: 1433, column: 9, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 1433, column: 2)
!13494 = distinct !DILexicalBlock(scope: !13490, file: !3, line: 1431, column: 7)
!13495 = !DILocation(line: 1433, column: 35, scope: !13493)
!13496 = !DILocation(line: 1433, column: 18, scope: !13493)
!13497 = !DILocation(line: 1433, column: 44, scope: !13493)
!13498 = !DILocation(line: 1433, column: 16, scope: !13493)
!13499 = !DILocation(line: 1433, column: 7, scope: !13493)
!13500 = !DILocation(line: 1433, column: 51, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13493, file: !3, line: 1433, column: 2)
!13502 = !DILocation(line: 1433, column: 55, scope: !13501)
!13503 = !DILocation(line: 1433, column: 53, scope: !13501)
!13504 = !DILocation(line: 1433, column: 2, scope: !13493)
!13505 = !DILocation(line: 1434, column: 8, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13501, file: !3, line: 1434, column: 8)
!13507 = !DILocation(line: 1435, column: 8, scope: !13506)
!13508 = !DILocation(line: 1435, column: 12, scope: !13506)
!13509 = !DILocation(line: 1434, column: 8, scope: !13501)
!13510 = !DILocation(line: 1437, column: 6, scope: !13506)
!13511 = !DILocation(line: 1433, column: 59, scope: !13501)
!13512 = !DILocation(line: 1433, column: 2, scope: !13501)
!13513 = distinct !{!13513, !13504, !13514}
!13514 = !DILocation(line: 1437, column: 6, scope: !13493)
!13515 = !DILocation(line: 1439, column: 6, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 1439, column: 6)
!13517 = !DILocation(line: 1439, column: 10, scope: !13516)
!13518 = !DILocation(line: 1439, column: 8, scope: !13516)
!13519 = !DILocation(line: 1439, column: 6, scope: !13494)
!13520 = !DILocation(line: 1440, column: 4, scope: !13516)
!13521 = !DILocation(line: 1443, column: 13, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 1443, column: 13)
!13523 = !DILocation(line: 1443, column: 26, scope: !13522)
!13524 = !DILocation(line: 1444, column: 13, scope: !13522)
!13525 = !DILocation(line: 1444, column: 32, scope: !13522)
!13526 = !DILocation(line: 1444, column: 16, scope: !13522)
!13527 = !DILocation(line: 1444, column: 59, scope: !13522)
!13528 = !DILocation(line: 1444, column: 43, scope: !13522)
!13529 = !DILocation(line: 1444, column: 41, scope: !13522)
!13530 = !DILocation(line: 1443, column: 13, scope: !13494)
!13531 = !DILocation(line: 1446, column: 28, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 1445, column: 11)
!13533 = !DILocation(line: 1446, column: 26, scope: !13532)
!13534 = !DILocation(line: 1449, column: 35, scope: !13535)
!13535 = distinct !DILexicalBlock(scope: !13532, file: !3, line: 1449, column: 17)
!13536 = !DILocation(line: 1449, column: 19, scope: !13535)
!13537 = !DILocation(line: 1449, column: 17, scope: !13532)
!13538 = !DILocation(line: 1450, column: 15, scope: !13535)
!13539 = !DILocation(line: 1451, column: 11, scope: !13532)
!13540 = !DILocation(line: 1452, column: 7, scope: !13494)
!13541 = distinct !{!13541, !13485, !13542}
!13542 = !DILocation(line: 1452, column: 7, scope: !13486)
!13543 = !DILocation(line: 1454, column: 7, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13400, file: !3, line: 1454, column: 7)
!13545 = !DILocation(line: 1454, column: 20, scope: !13544)
!13546 = !DILocation(line: 1454, column: 7, scope: !13400)
!13547 = !DILocation(line: 1457, column: 7, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13544, file: !3, line: 1455, column: 5)
!13549 = !DILocation(line: 1458, column: 27, scope: !13548)
!13550 = !DILocation(line: 1458, column: 33, scope: !13548)
!13551 = !DILocation(line: 1458, column: 14, scope: !13548)
!13552 = !DILocation(line: 1458, column: 7, scope: !13548)
!13553 = !DILocation(line: 1461, column: 3, scope: !13400)
!13554 = !DILocation(line: 1462, column: 1, scope: !13400)
!13555 = distinct !DISubprogram(name: "replace_src_with_reg_ok_p", scope: !3, file: !3, line: 916, type: !13556, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13556 = !DISubroutineType(types: !13557)
!13557 = !{!1057, !2132, !825}
!13558 = !DILocalVariable(name: "insn", arg: 1, scope: !13555, file: !3, line: 916, type: !2132)
!13559 = !DILocation(line: 916, column: 35, scope: !13555)
!13560 = !DILocalVariable(name: "new_src_reg", arg: 2, scope: !13555, file: !3, line: 916, type: !825)
!13561 = !DILocation(line: 916, column: 45, scope: !13555)
!13562 = !DILocalVariable(name: "vi", scope: !13555, file: !3, line: 918, type: !2061)
!13563 = !DILocation(line: 918, column: 11, scope: !13555)
!13564 = !DILocation(line: 918, column: 16, scope: !13555)
!13565 = !DILocalVariable(name: "mode", scope: !13555, file: !3, line: 919, type: !5)
!13566 = !DILocation(line: 919, column: 21, scope: !13555)
!13567 = !DILocalVariable(name: "dst_loc", scope: !13555, file: !3, line: 920, type: !825)
!13568 = !DILocation(line: 920, column: 7, scope: !13555)
!13569 = !DILocalVariable(name: "res", scope: !13555, file: !3, line: 921, type: !1057)
!13570 = !DILocation(line: 921, column: 8, scope: !13555)
!13571 = !DILocation(line: 923, column: 3, scope: !13555)
!13572 = !DILocation(line: 925, column: 22, scope: !13555)
!13573 = !DILocation(line: 925, column: 3, scope: !13555)
!13574 = !DILocation(line: 926, column: 3, scope: !13555)
!13575 = !DILocation(line: 928, column: 7, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13555, file: !3, line: 928, column: 7)
!13577 = !DILocation(line: 928, column: 23, scope: !13576)
!13578 = !DILocation(line: 928, column: 26, scope: !13576)
!13579 = !DILocation(line: 928, column: 49, scope: !13576)
!13580 = !DILocation(line: 928, column: 46, scope: !13576)
!13581 = !DILocation(line: 928, column: 7, scope: !13555)
!13582 = !DILocation(line: 929, column: 5, scope: !13576)
!13583 = !DILocation(line: 932, column: 20, scope: !13555)
!13584 = !DILocation(line: 932, column: 27, scope: !13555)
!13585 = !DILocation(line: 932, column: 53, scope: !13555)
!13586 = !DILocation(line: 932, column: 3, scope: !13555)
!13587 = !DILocation(line: 933, column: 9, scope: !13555)
!13588 = !DILocation(line: 933, column: 7, scope: !13555)
!13589 = !DILocation(line: 934, column: 3, scope: !13555)
!13590 = !DILocation(line: 936, column: 10, scope: !13555)
!13591 = !DILocation(line: 936, column: 3, scope: !13555)
!13592 = !DILocation(line: 937, column: 1, scope: !13555)
!13593 = distinct !DISubprogram(name: "replace_dest_with_reg_ok_p", scope: !3, file: !3, line: 942, type: !13556, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13594 = !DILocalVariable(name: "insn", arg: 1, scope: !13593, file: !3, line: 942, type: !2132)
!13595 = !DILocation(line: 942, column: 36, scope: !13593)
!13596 = !DILocalVariable(name: "new_reg", arg: 2, scope: !13593, file: !3, line: 942, type: !825)
!13597 = !DILocation(line: 942, column: 46, scope: !13593)
!13598 = !DILocalVariable(name: "vi", scope: !13593, file: !3, line: 944, type: !2061)
!13599 = !DILocation(line: 944, column: 11, scope: !13593)
!13600 = !DILocation(line: 944, column: 16, scope: !13593)
!13601 = !DILocalVariable(name: "res", scope: !13593, file: !3, line: 945, type: !1057)
!13602 = !DILocation(line: 945, column: 8, scope: !13593)
!13603 = !DILocation(line: 948, column: 3, scope: !13593)
!13604 = !DILocation(line: 949, column: 3, scope: !13593)
!13605 = !DILocation(line: 952, column: 20, scope: !13593)
!13606 = !DILocation(line: 952, column: 27, scope: !13593)
!13607 = !DILocation(line: 952, column: 54, scope: !13593)
!13608 = !DILocation(line: 952, column: 3, scope: !13593)
!13609 = !DILocation(line: 953, column: 9, scope: !13593)
!13610 = !DILocation(line: 953, column: 7, scope: !13593)
!13611 = !DILocation(line: 954, column: 3, scope: !13593)
!13612 = !DILocation(line: 956, column: 10, scope: !13593)
!13613 = !DILocation(line: 956, column: 3, scope: !13593)
!13614 = distinct !DISubprogram(name: "get_expr_cost", scope: !3, file: !3, line: 4301, type: !13615, scopeLine: 4302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13615 = !DISubroutineType(types: !13616)
!13616 = !{!849, !2055, !2402}
!13617 = !DILocalVariable(name: "expr", arg: 1, scope: !13614, file: !3, line: 4301, type: !2055)
!13618 = !DILocation(line: 4301, column: 23, scope: !13614)
!13619 = !DILocalVariable(name: "fence", arg: 2, scope: !13614, file: !3, line: 4301, type: !2402)
!13620 = !DILocation(line: 4301, column: 37, scope: !13614)
!13621 = !DILocalVariable(name: "insn", scope: !13614, file: !3, line: 4303, type: !825)
!13622 = !DILocation(line: 4303, column: 7, scope: !13614)
!13623 = !DILocation(line: 4303, column: 14, scope: !13614)
!13624 = !DILocation(line: 4305, column: 23, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13614, file: !3, line: 4305, column: 7)
!13626 = !DILocation(line: 4305, column: 7, scope: !13625)
!13627 = !DILocation(line: 4305, column: 29, scope: !13625)
!13628 = !DILocation(line: 4305, column: 7, scope: !13614)
!13629 = !DILocation(line: 4307, column: 12, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13631, file: !3, line: 4307, column: 11)
!13631 = distinct !DILexicalBlock(scope: !13625, file: !3, line: 4306, column: 5)
!13632 = !DILocation(line: 4308, column: 4, scope: !13630)
!13633 = !DILocation(line: 4308, column: 7, scope: !13630)
!13634 = !DILocation(line: 4307, column: 11, scope: !13631)
!13635 = !DILocation(line: 4311, column: 2, scope: !13630)
!13636 = !DILocation(line: 4317, column: 2, scope: !13630)
!13637 = !DILocation(line: 4320, column: 32, scope: !13625)
!13638 = !DILocation(line: 4320, column: 38, scope: !13625)
!13639 = !DILocation(line: 4320, column: 12, scope: !13625)
!13640 = !DILocation(line: 4320, column: 5, scope: !13625)
!13641 = !DILocation(line: 4321, column: 1, scope: !13614)
!13642 = !DILocalVariable(name: "insn", arg: 1, scope: !2438, file: !3, line: 4280, type: !825)
!13643 = !DILocation(line: 4280, column: 25, scope: !2438)
!13644 = !DILocalVariable(name: "state", arg: 2, scope: !2438, file: !3, line: 4280, type: !2209)
!13645 = !DILocation(line: 4280, column: 39, scope: !2438)
!13646 = !DILocalVariable(name: "cost", scope: !2438, file: !3, line: 4283, type: !849)
!13647 = !DILocation(line: 4283, column: 7, scope: !2438)
!13648 = !DILocation(line: 4285, column: 8, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !2438, file: !3, line: 4285, column: 7)
!13650 = !DILocation(line: 4285, column: 7, scope: !2438)
!13651 = !DILocation(line: 4286, column: 21, scope: !13649)
!13652 = !DILocation(line: 4286, column: 12, scope: !13649)
!13653 = !DILocation(line: 4286, column: 10, scope: !13649)
!13654 = !DILocation(line: 4286, column: 5, scope: !13649)
!13655 = !DILocation(line: 4288, column: 11, scope: !2438)
!13656 = !DILocation(line: 4288, column: 17, scope: !2438)
!13657 = !DILocation(line: 4288, column: 24, scope: !2438)
!13658 = !DILocation(line: 4288, column: 3, scope: !2438)
!13659 = !DILocation(line: 4289, column: 28, scope: !2438)
!13660 = !DILocation(line: 4289, column: 34, scope: !2438)
!13661 = !DILocation(line: 4289, column: 10, scope: !2438)
!13662 = !DILocation(line: 4289, column: 8, scope: !2438)
!13663 = !DILocation(line: 4291, column: 7, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !2438, file: !3, line: 4291, column: 7)
!13665 = !DILocation(line: 4291, column: 12, scope: !13664)
!13666 = !DILocation(line: 4291, column: 7, scope: !2438)
!13667 = !DILocation(line: 4292, column: 5, scope: !13664)
!13668 = !DILocation(line: 4293, column: 12, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13664, file: !3, line: 4293, column: 12)
!13670 = !DILocation(line: 4293, column: 17, scope: !13669)
!13671 = !DILocation(line: 4293, column: 12, scope: !13664)
!13672 = !DILocation(line: 4294, column: 5, scope: !13669)
!13673 = !DILocation(line: 4295, column: 10, scope: !2438)
!13674 = !DILocation(line: 4295, column: 3, scope: !2438)
!13675 = !DILocation(line: 4296, column: 1, scope: !2438)
!13676 = distinct !DISubprogram(name: "sel_dfa_new_cycle", scope: !3, file: !3, line: 4035, type: !13677, scopeLine: 4036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13677 = !DISubroutineType(types: !13678)
!13678 = !{!1057, !2132, !2402}
!13679 = !DILocalVariable(name: "insn", arg: 1, scope: !13676, file: !3, line: 4035, type: !2132)
!13680 = !DILocation(line: 4035, column: 27, scope: !13676)
!13681 = !DILocalVariable(name: "fence", arg: 2, scope: !13676, file: !3, line: 4035, type: !2402)
!13682 = !DILocation(line: 4035, column: 41, scope: !13676)
!13683 = !DILocalVariable(name: "last_scheduled_cycle", scope: !13676, file: !3, line: 4037, type: !849)
!13684 = !DILocation(line: 4037, column: 7, scope: !13676)
!13685 = !DILocation(line: 4037, column: 30, scope: !13676)
!13686 = !DILocation(line: 4038, column: 32, scope: !13676)
!13687 = !DILocation(line: 4039, column: 32, scope: !13676)
!13688 = !DILocation(line: 4039, column: 52, scope: !13676)
!13689 = !DILocalVariable(name: "res", scope: !13676, file: !3, line: 4040, type: !1057)
!13690 = !DILocation(line: 4040, column: 8, scope: !13676)
!13691 = !DILocalVariable(name: "sort_p", scope: !13676, file: !3, line: 4041, type: !849)
!13692 = !DILocation(line: 4041, column: 7, scope: !13676)
!13693 = !DILocation(line: 4043, column: 22, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13676, file: !3, line: 4043, column: 7)
!13695 = !DILocation(line: 4043, column: 8, scope: !13694)
!13696 = !DILocation(line: 4043, column: 7, scope: !13676)
!13697 = !DILocation(line: 4044, column: 5, scope: !13694)
!13698 = !DILocation(line: 4046, column: 11, scope: !13676)
!13699 = !DILocation(line: 4046, column: 23, scope: !13676)
!13700 = !DILocation(line: 4046, column: 44, scope: !13676)
!13701 = !DILocation(line: 4046, column: 3, scope: !13676)
!13702 = !DILocation(line: 4048, column: 3, scope: !13676)
!13703 = !DILocation(line: 4048, column: 11, scope: !13676)
!13704 = !DILocation(line: 4048, column: 18, scope: !13676)
!13705 = !DILocation(line: 4048, column: 35, scope: !13676)
!13706 = !DILocation(line: 4048, column: 50, scope: !13676)
!13707 = !DILocation(line: 4048, column: 62, scope: !13676)
!13708 = !DILocation(line: 4049, column: 50, scope: !13676)
!13709 = !DILocation(line: 4049, column: 56, scope: !13676)
!13710 = !DILocation(line: 4050, column: 50, scope: !13676)
!13711 = !DILocation(line: 4048, column: 21, scope: !13676)
!13712 = !DILocation(line: 0, scope: !13676)
!13713 = !DILocation(line: 4052, column: 15, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13676, file: !3, line: 4051, column: 5)
!13715 = !DILocation(line: 4052, column: 36, scope: !13714)
!13716 = !DILocation(line: 4052, column: 48, scope: !13714)
!13717 = !DILocation(line: 4052, column: 7, scope: !13714)
!13718 = !DILocation(line: 4053, column: 26, scope: !13714)
!13719 = !DILocation(line: 4053, column: 7, scope: !13714)
!13720 = !DILocation(line: 4054, column: 15, scope: !13714)
!13721 = !DILocation(line: 4054, column: 27, scope: !13714)
!13722 = !DILocation(line: 4054, column: 48, scope: !13714)
!13723 = !DILocation(line: 4054, column: 7, scope: !13714)
!13724 = !DILocation(line: 4055, column: 11, scope: !13714)
!13725 = distinct !{!13725, !13702, !13726}
!13726 = !DILocation(line: 4056, column: 5, scope: !13676)
!13727 = !DILocation(line: 4058, column: 10, scope: !13676)
!13728 = !DILocation(line: 4058, column: 3, scope: !13676)
!13729 = !DILocation(line: 4059, column: 1, scope: !13676)
!13730 = distinct !DISubprogram(name: "advance_one_cycle", scope: !3, file: !3, line: 580, type: !13731, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13731 = !DISubroutineType(types: !13732)
!13732 = !{null, !2402}
!13733 = !DILocalVariable(name: "fence", arg: 1, scope: !13730, file: !3, line: 580, type: !2402)
!13734 = !DILocation(line: 580, column: 28, scope: !13730)
!13735 = !DILocalVariable(name: "i", scope: !13730, file: !3, line: 582, type: !7)
!13736 = !DILocation(line: 582, column: 12, scope: !13730)
!13737 = !DILocalVariable(name: "cycle", scope: !13730, file: !3, line: 583, type: !849)
!13738 = !DILocation(line: 583, column: 7, scope: !13730)
!13739 = !DILocalVariable(name: "insn", scope: !13730, file: !3, line: 584, type: !825)
!13740 = !DILocation(line: 584, column: 7, scope: !13730)
!13741 = !DILocation(line: 586, column: 18, scope: !13730)
!13742 = !DILocation(line: 586, column: 3, scope: !13730)
!13743 = !DILocation(line: 587, column: 13, scope: !13730)
!13744 = !DILocation(line: 587, column: 11, scope: !13730)
!13745 = !DILocation(line: 587, column: 9, scope: !13730)
!13746 = !DILocation(line: 588, column: 3, scope: !13730)
!13747 = !DILocation(line: 588, column: 30, scope: !13730)
!13748 = !DILocation(line: 589, column: 3, scope: !13730)
!13749 = !DILocation(line: 589, column: 32, scope: !13730)
!13750 = !DILocation(line: 590, column: 20, scope: !13730)
!13751 = !DILocation(line: 590, column: 18, scope: !13730)
!13752 = !DILocation(line: 591, column: 30, scope: !13730)
!13753 = !DILocation(line: 591, column: 3, scope: !13730)
!13754 = !DILocation(line: 591, column: 28, scope: !13730)
!13755 = !DILocation(line: 593, column: 10, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13730, file: !3, line: 593, column: 3)
!13757 = !DILocation(line: 593, column: 8, scope: !13756)
!13758 = !DILocation(line: 593, column: 15, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13756, file: !3, line: 593, column: 3)
!13760 = !DILocation(line: 593, column: 3, scope: !13756)
!13761 = !DILocation(line: 595, column: 11, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13763, file: !3, line: 595, column: 11)
!13763 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 594, column: 5)
!13764 = !DILocation(line: 595, column: 37, scope: !13762)
!13765 = !DILocation(line: 595, column: 35, scope: !13762)
!13766 = !DILocation(line: 595, column: 11, scope: !13763)
!13767 = !DILocation(line: 597, column: 29, scope: !13768)
!13768 = distinct !DILexicalBlock(scope: !13762, file: !3, line: 596, column: 9)
!13769 = !DILocation(line: 597, column: 47, scope: !13768)
!13770 = !DILocation(line: 597, column: 11, scope: !13768)
!13771 = !DILocation(line: 598, column: 11, scope: !13768)
!13772 = !DILocation(line: 599, column: 11, scope: !13768)
!13773 = distinct !{!13773, !13760, !13774}
!13774 = !DILocation(line: 602, column: 5, scope: !13756)
!13775 = !DILocation(line: 601, column: 8, scope: !13763)
!13776 = !DILocation(line: 593, column: 3, scope: !13759)
!13777 = !DILocation(line: 603, column: 7, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13730, file: !3, line: 603, column: 7)
!13779 = !DILocation(line: 603, column: 21, scope: !13778)
!13780 = !DILocation(line: 603, column: 7, scope: !13730)
!13781 = !DILocation(line: 605, column: 7, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13778, file: !3, line: 604, column: 5)
!13783 = !DILocation(line: 605, column: 7, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13785, file: !3, line: 605, column: 7)
!13785 = distinct !DILexicalBlock(scope: !13782, file: !3, line: 605, column: 7)
!13786 = !DILocation(line: 605, column: 7, scope: !13785)
!13787 = !DILocalVariable(name: "__j", scope: !13788, file: !3, line: 605, type: !849)
!13788 = distinct !DILexicalBlock(scope: !13784, file: !3, line: 605, column: 7)
!13789 = !DILocation(line: 605, column: 7, scope: !13788)
!13790 = !DILocalVariable(name: "__s", scope: !13788, file: !3, line: 605, type: !817)
!13791 = !DILocation(line: 606, column: 20, scope: !13782)
!13792 = !DILocation(line: 606, column: 7, scope: !13782)
!13793 = !DILocation(line: 607, column: 5, scope: !13782)
!13794 = !DILocation(line: 608, column: 1, scope: !13730)
!13795 = distinct !DISubprogram(name: "VEC_rtx_base_unordered_remove", scope: !456, file: !456, line: 200, type: !13796, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13796 = !DISubroutineType(types: !13797)
!13797 = !{!825, !13798, !7}
!13798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!13799 = !DILocalVariable(name: "vec_", arg: 1, scope: !13795, file: !456, line: 200, type: !13798)
!13800 = !DILocation(line: 200, column: 1, scope: !13795)
!13801 = !DILocalVariable(name: "ix_", arg: 2, scope: !13795, file: !456, line: 200, type: !7)
!13802 = !DILocalVariable(name: "slot_", scope: !13795, file: !456, line: 200, type: !5250)
!13803 = !DILocalVariable(name: "obj_", scope: !13795, file: !456, line: 200, type: !825)
!13804 = distinct !DISubprogram(name: "debug_state", scope: !3, file: !3, line: 5246, type: !13805, scopeLine: 5247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13805 = !DISubroutineType(types: !13806)
!13806 = !{null, !2209}
!13807 = !DILocalVariable(name: "state", arg: 1, scope: !13804, file: !3, line: 5246, type: !2209)
!13808 = !DILocation(line: 5246, column: 22, scope: !13804)
!13809 = !DILocalVariable(name: "p", scope: !13804, file: !3, line: 5248, type: !2281)
!13810 = !DILocation(line: 5248, column: 18, scope: !13804)
!13811 = !DILocalVariable(name: "i", scope: !13804, file: !3, line: 5249, type: !7)
!13812 = !DILocation(line: 5249, column: 16, scope: !13804)
!13813 = !DILocalVariable(name: "size", scope: !13804, file: !3, line: 5249, type: !7)
!13814 = !DILocation(line: 5249, column: 19, scope: !13804)
!13815 = !DILocation(line: 5249, column: 26, scope: !13804)
!13816 = !DILocation(line: 5251, column: 3, scope: !13804)
!13817 = !DILocation(line: 5251, column: 3, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 5251, column: 3)
!13819 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 5251, column: 3)
!13820 = !DILocation(line: 5251, column: 3, scope: !13819)
!13821 = !DILocalVariable(name: "__j", scope: !13822, file: !3, line: 5251, type: !849)
!13822 = distinct !DILexicalBlock(scope: !13818, file: !3, line: 5251, column: 3)
!13823 = !DILocation(line: 5251, column: 3, scope: !13822)
!13824 = !DILocalVariable(name: "__s", scope: !13822, file: !3, line: 5251, type: !817)
!13825 = !DILocation(line: 5252, column: 10, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 5252, column: 3)
!13827 = !DILocation(line: 5252, column: 37, scope: !13826)
!13828 = !DILocation(line: 5252, column: 17, scope: !13826)
!13829 = !DILocation(line: 5252, column: 8, scope: !13826)
!13830 = !DILocation(line: 5252, column: 44, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13826, file: !3, line: 5252, column: 3)
!13832 = !DILocation(line: 5252, column: 48, scope: !13831)
!13833 = !DILocation(line: 5252, column: 46, scope: !13831)
!13834 = !DILocation(line: 5252, column: 3, scope: !13826)
!13835 = !DILocation(line: 5253, column: 5, scope: !13831)
!13836 = !DILocation(line: 5253, column: 5, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13838, file: !3, line: 5253, column: 5)
!13838 = distinct !DILexicalBlock(scope: !13831, file: !3, line: 5253, column: 5)
!13839 = !DILocation(line: 5253, column: 5, scope: !13838)
!13840 = !DILocalVariable(name: "__j", scope: !13841, file: !3, line: 5253, type: !849)
!13841 = distinct !DILexicalBlock(scope: !13837, file: !3, line: 5253, column: 5)
!13842 = !DILocation(line: 5253, column: 5, scope: !13841)
!13843 = !DILocalVariable(name: "__s", scope: !13841, file: !3, line: 5253, type: !817)
!13844 = !DILocation(line: 5252, column: 55, scope: !13831)
!13845 = !DILocation(line: 5252, column: 3, scope: !13831)
!13846 = distinct !{!13846, !13834, !13847}
!13847 = !DILocation(line: 5253, column: 5, scope: !13826)
!13848 = !DILocation(line: 5254, column: 3, scope: !13804)
!13849 = !DILocation(line: 5254, column: 3, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13851, file: !3, line: 5254, column: 3)
!13851 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 5254, column: 3)
!13852 = !DILocation(line: 5254, column: 3, scope: !13851)
!13853 = !DILocalVariable(name: "__j", scope: !13854, file: !3, line: 5254, type: !849)
!13854 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 5254, column: 3)
!13855 = !DILocation(line: 5254, column: 3, scope: !13854)
!13856 = !DILocalVariable(name: "__s", scope: !13854, file: !3, line: 5254, type: !817)
!13857 = !DILocation(line: 5255, column: 1, scope: !13804)
!13858 = distinct !DISubprogram(name: "move_cond_jump", scope: !3, file: !3, line: 4891, type: !13859, scopeLine: 4892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13859 = !DISubroutineType(types: !13860)
!13860 = !{null, !825, !8852}
!13861 = !DILocalVariable(name: "insn", arg: 1, scope: !13858, file: !3, line: 4891, type: !825)
!13862 = !DILocation(line: 4891, column: 21, scope: !13858)
!13863 = !DILocalVariable(name: "bnd", arg: 2, scope: !13858, file: !3, line: 4891, type: !8852)
!13864 = !DILocation(line: 4891, column: 33, scope: !13858)
!13865 = !DILocalVariable(name: "ft_edge", scope: !13858, file: !3, line: 4893, type: !1379)
!13866 = !DILocation(line: 4893, column: 8, scope: !13858)
!13867 = !DILocalVariable(name: "block_from", scope: !13858, file: !3, line: 4894, type: !1362)
!13868 = !DILocation(line: 4894, column: 15, scope: !13858)
!13869 = !DILocalVariable(name: "block_next", scope: !13858, file: !3, line: 4894, type: !1362)
!13870 = !DILocation(line: 4894, column: 27, scope: !13858)
!13871 = !DILocalVariable(name: "block_new", scope: !13858, file: !3, line: 4894, type: !1362)
!13872 = !DILocation(line: 4894, column: 39, scope: !13858)
!13873 = !DILocalVariable(name: "next", scope: !13858, file: !3, line: 4895, type: !825)
!13874 = !DILocation(line: 4895, column: 7, scope: !13858)
!13875 = !DILocalVariable(name: "prev", scope: !13858, file: !3, line: 4895, type: !825)
!13876 = !DILocation(line: 4895, column: 13, scope: !13858)
!13877 = !DILocalVariable(name: "link", scope: !13858, file: !3, line: 4895, type: !825)
!13878 = !DILocation(line: 4895, column: 19, scope: !13858)
!13879 = !DILocation(line: 4898, column: 16, scope: !13858)
!13880 = !DILocation(line: 4898, column: 14, scope: !13858)
!13881 = !DILocation(line: 4902, column: 3, scope: !13858)
!13882 = !DILocation(line: 4905, column: 10, scope: !13858)
!13883 = !DILocation(line: 4905, column: 8, scope: !13858)
!13884 = !DILocation(line: 4906, column: 10, scope: !13858)
!13885 = !DILocation(line: 4906, column: 8, scope: !13858)
!13886 = !DILocation(line: 4907, column: 18, scope: !13858)
!13887 = !DILocation(line: 4907, column: 3, scope: !13858)
!13888 = !DILocation(line: 4907, column: 16, scope: !13858)
!13889 = !DILocation(line: 4909, column: 33, scope: !13858)
!13890 = !DILocation(line: 4909, column: 13, scope: !13858)
!13891 = !DILocation(line: 4909, column: 11, scope: !13858)
!13892 = !DILocation(line: 4910, column: 16, scope: !13858)
!13893 = !DILocation(line: 4910, column: 25, scope: !13858)
!13894 = !DILocation(line: 4910, column: 14, scope: !13858)
!13895 = !DILocation(line: 4913, column: 3, scope: !13858)
!13896 = !DILocation(line: 4916, column: 31, scope: !13858)
!13897 = !DILocation(line: 4916, column: 15, scope: !13858)
!13898 = !DILocation(line: 4916, column: 13, scope: !13858)
!13899 = !DILocation(line: 4917, column: 3, scope: !13858)
!13900 = !DILocation(line: 4920, column: 3, scope: !13858)
!13901 = !DILocation(line: 4924, column: 15, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13858, file: !3, line: 4924, column: 3)
!13903 = !DILocation(line: 4924, column: 13, scope: !13902)
!13904 = !DILocation(line: 4924, column: 8, scope: !13902)
!13905 = !DILocation(line: 4924, column: 21, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13902, file: !3, line: 4924, column: 3)
!13907 = !DILocation(line: 4924, column: 29, scope: !13906)
!13908 = !DILocation(line: 4924, column: 26, scope: !13906)
!13909 = !DILocation(line: 4924, column: 3, scope: !13902)
!13910 = !DILocation(line: 4926, column: 47, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13906, file: !3, line: 4925, column: 5)
!13912 = !DILocation(line: 4926, column: 58, scope: !13911)
!13913 = !DILocation(line: 4926, column: 7, scope: !13911)
!13914 = !DILocation(line: 4926, column: 45, scope: !13911)
!13915 = !DILocation(line: 4927, column: 26, scope: !13911)
!13916 = !DILocation(line: 4927, column: 32, scope: !13911)
!13917 = !DILocation(line: 4927, column: 7, scope: !13911)
!13918 = !DILocation(line: 4928, column: 5, scope: !13911)
!13919 = !DILocation(line: 4924, column: 42, scope: !13906)
!13920 = !DILocation(line: 4924, column: 40, scope: !13906)
!13921 = !DILocation(line: 4924, column: 3, scope: !13906)
!13922 = distinct !{!13922, !13909, !13923}
!13923 = !DILocation(line: 4928, column: 5, scope: !13902)
!13924 = !DILocation(line: 4931, column: 24, scope: !13858)
!13925 = !DILocation(line: 4931, column: 3, scope: !13858)
!13926 = !DILocation(line: 4931, column: 22, scope: !13858)
!13927 = !DILocation(line: 4933, column: 34, scope: !13858)
!13928 = !DILocation(line: 4933, column: 3, scope: !13858)
!13929 = !DILocation(line: 4933, column: 32, scope: !13858)
!13930 = !DILocation(line: 4934, column: 22, scope: !13858)
!13931 = !DILocation(line: 4934, column: 3, scope: !13858)
!13932 = !DILocation(line: 4934, column: 20, scope: !13858)
!13933 = !DILocation(line: 4937, column: 3, scope: !13858)
!13934 = !DILocation(line: 4938, column: 22, scope: !13858)
!13935 = !DILocation(line: 4938, column: 3, scope: !13858)
!13936 = !DILocation(line: 4938, column: 20, scope: !13858)
!13937 = !DILocation(line: 4939, column: 22, scope: !13858)
!13938 = !DILocation(line: 4939, column: 3, scope: !13858)
!13939 = !DILocation(line: 4939, column: 20, scope: !13858)
!13940 = !DILocation(line: 4940, column: 37, scope: !13858)
!13941 = !DILocation(line: 4940, column: 3, scope: !13858)
!13942 = !DILocation(line: 4940, column: 35, scope: !13858)
!13943 = !DILocation(line: 4941, column: 34, scope: !13858)
!13944 = !DILocation(line: 4941, column: 3, scope: !13858)
!13945 = !DILocation(line: 4941, column: 32, scope: !13858)
!13946 = !DILocation(line: 4943, column: 3, scope: !13858)
!13947 = !DILocation(line: 4949, column: 29, scope: !13858)
!13948 = !DILocation(line: 4949, column: 3, scope: !13858)
!13949 = !DILocation(line: 4949, column: 27, scope: !13858)
!13950 = !DILocation(line: 4950, column: 3, scope: !13858)
!13951 = !DILocation(line: 4951, column: 27, scope: !13858)
!13952 = !DILocation(line: 4951, column: 3, scope: !13858)
!13953 = !DILocation(line: 4951, column: 25, scope: !13858)
!13954 = !DILocation(line: 4952, column: 34, scope: !13858)
!13955 = !DILocation(line: 4952, column: 21, scope: !13858)
!13956 = !DILocation(line: 4952, column: 3, scope: !13858)
!13957 = !DILocation(line: 4956, column: 21, scope: !13858)
!13958 = !DILocation(line: 4956, column: 3, scope: !13858)
!13959 = !DILocation(line: 4958, column: 7, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13858, file: !3, line: 4958, column: 7)
!13961 = !DILocation(line: 4958, column: 21, scope: !13960)
!13962 = !DILocation(line: 4958, column: 7, scope: !13858)
!13963 = !DILocation(line: 4959, column: 5, scope: !13960)
!13964 = !DILocation(line: 4959, column: 5, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !3, line: 4959, column: 5)
!13966 = distinct !DILexicalBlock(scope: !13960, file: !3, line: 4959, column: 5)
!13967 = !DILocation(line: 4959, column: 5, scope: !13966)
!13968 = !DILocalVariable(name: "__j", scope: !13969, file: !3, line: 4959, type: !849)
!13969 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 4959, column: 5)
!13970 = !DILocation(line: 4959, column: 5, scope: !13969)
!13971 = !DILocalVariable(name: "__s", scope: !13969, file: !3, line: 4959, type: !817)
!13972 = !DILocation(line: 4960, column: 1, scope: !13858)
!13973 = distinct !DISubprogram(name: "prepare_place_to_insert", scope: !3, file: !3, line: 5155, type: !13974, scopeLine: 5156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!13974 = !DISubroutineType(types: !13975)
!13975 = !{!2132, !8852}
!13976 = !DILocalVariable(name: "bnd", arg: 1, scope: !13973, file: !3, line: 5155, type: !8852)
!13977 = !DILocation(line: 5155, column: 32, scope: !13973)
!13978 = !DILocalVariable(name: "place_to_insert", scope: !13973, file: !3, line: 5157, type: !2132)
!13979 = !DILocation(line: 5157, column: 10, scope: !13973)
!13980 = !DILocation(line: 5162, column: 7, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13973, file: !3, line: 5162, column: 7)
!13982 = !DILocation(line: 5162, column: 7, scope: !13973)
!13983 = !DILocation(line: 5165, column: 25, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13981, file: !3, line: 5163, column: 5)
!13985 = !DILocation(line: 5165, column: 23, scope: !13984)
!13986 = !DILocation(line: 5166, column: 11, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13984, file: !3, line: 5166, column: 11)
!13988 = !DILocation(line: 5166, column: 11, scope: !13984)
!13989 = !DILocalVariable(name: "l", scope: !13990, file: !3, line: 5168, type: !2163)
!13990 = distinct !DILexicalBlock(scope: !13987, file: !3, line: 5167, column: 2)
!13991 = !DILocation(line: 5168, column: 12, scope: !13990)
!13992 = !DILocation(line: 5168, column: 16, scope: !13990)
!13993 = !DILocation(line: 5169, column: 4, scope: !13990)
!13994 = !DILocation(line: 5169, column: 16, scope: !13990)
!13995 = !DILocation(line: 5169, column: 14, scope: !13990)
!13996 = !DILocation(line: 5169, column: 32, scope: !13990)
!13997 = !DILocation(line: 5170, column: 4, scope: !13990)
!13998 = !DILocation(line: 0, scope: !13990)
!13999 = distinct !{!13999, !13993, !14000}
!14000 = !DILocation(line: 5171, column: 6, scope: !13990)
!14001 = !DILocation(line: 5172, column: 9, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 5172, column: 8)
!14003 = !DILocation(line: 5172, column: 8, scope: !13990)
!14004 = !DILocation(line: 5173, column: 22, scope: !14002)
!14005 = !DILocation(line: 5173, column: 6, scope: !14002)
!14006 = !DILocation(line: 5174, column: 2, scope: !13990)
!14007 = !DILocation(line: 5175, column: 5, scope: !13984)
!14008 = !DILocation(line: 5177, column: 21, scope: !13981)
!14009 = !DILocation(line: 5179, column: 8, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !13973, file: !3, line: 5179, column: 7)
!14011 = !DILocation(line: 5179, column: 7, scope: !13973)
!14012 = !DILocation(line: 5183, column: 44, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14010, file: !3, line: 5180, column: 5)
!14014 = !DILocation(line: 5183, column: 25, scope: !14013)
!14015 = !DILocation(line: 5183, column: 23, scope: !14013)
!14016 = !DILocation(line: 5184, column: 7, scope: !14013)
!14017 = !DILocation(line: 5186, column: 5, scope: !14013)
!14018 = !DILocation(line: 5188, column: 10, scope: !13973)
!14019 = !DILocation(line: 5188, column: 3, scope: !13973)
!14020 = distinct !DISubprogram(name: "move_exprs_to_boundary", scope: !3, file: !3, line: 5194, type: !14021, scopeLine: 5196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14021 = !DISubroutineType(types: !14022)
!14022 = !{!1057, !8852, !2055, !2166, !2055}
!14023 = !DILocalVariable(name: "bnd", arg: 1, scope: !14020, file: !3, line: 5194, type: !8852)
!14024 = !DILocation(line: 5194, column: 31, scope: !14020)
!14025 = !DILocalVariable(name: "expr_vliw", arg: 2, scope: !14020, file: !3, line: 5194, type: !2055)
!14026 = !DILocation(line: 5194, column: 43, scope: !14020)
!14027 = !DILocalVariable(name: "expr_seq", arg: 3, scope: !14020, file: !3, line: 5195, type: !2166)
!14028 = !DILocation(line: 5195, column: 34, scope: !14020)
!14029 = !DILocalVariable(name: "c_expr", arg: 4, scope: !14020, file: !3, line: 5195, type: !2055)
!14030 = !DILocation(line: 5195, column: 51, scope: !14020)
!14031 = !DILocalVariable(name: "b", scope: !14020, file: !3, line: 5197, type: !1057)
!14032 = !DILocation(line: 5197, column: 8, scope: !14020)
!14033 = !DILocalVariable(name: "should_move", scope: !14020, file: !3, line: 5197, type: !1057)
!14034 = !DILocation(line: 5197, column: 11, scope: !14020)
!14035 = !DILocalVariable(name: "book_uid", scope: !14020, file: !3, line: 5198, type: !7)
!14036 = !DILocation(line: 5198, column: 12, scope: !14020)
!14037 = !DILocalVariable(name: "bi", scope: !14020, file: !3, line: 5199, type: !7987)
!14038 = !DILocation(line: 5199, column: 19, scope: !14020)
!14039 = !DILocalVariable(name: "n_bookkeeping_copies_before_moveop", scope: !14020, file: !3, line: 5200, type: !849)
!14040 = !DILocation(line: 5200, column: 7, scope: !14020)
!14041 = !DILocation(line: 5206, column: 40, scope: !14020)
!14042 = !DILocation(line: 5206, column: 38, scope: !14020)
!14043 = !DILocation(line: 5207, column: 28, scope: !14020)
!14044 = !DILocation(line: 5207, column: 26, scope: !14020)
!14045 = !DILocation(line: 5208, column: 17, scope: !14020)
!14046 = !DILocation(line: 5208, column: 3, scope: !14020)
!14047 = !DILocation(line: 5209, column: 17, scope: !14020)
!14048 = !DILocation(line: 5209, column: 3, scope: !14020)
!14049 = !DILocation(line: 5211, column: 16, scope: !14020)
!14050 = !DILocation(line: 5211, column: 30, scope: !14020)
!14051 = !DILocation(line: 5211, column: 40, scope: !14020)
!14052 = !DILocation(line: 5212, column: 40, scope: !14020)
!14053 = !DILocation(line: 5212, column: 16, scope: !14020)
!14054 = !DILocation(line: 5212, column: 51, scope: !14020)
!14055 = !DILocation(line: 5211, column: 7, scope: !14020)
!14056 = !DILocation(line: 5211, column: 5, scope: !14020)
!14057 = !DILocation(line: 5216, column: 3, scope: !14020)
!14058 = !DILocation(line: 5218, column: 7, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14020, file: !3, line: 5218, column: 7)
!14060 = !DILocation(line: 5218, column: 33, scope: !14059)
!14061 = !DILocation(line: 5218, column: 31, scope: !14059)
!14062 = !DILocation(line: 5218, column: 7, scope: !14020)
!14063 = !DILocation(line: 5219, column: 34, scope: !14059)
!14064 = !DILocation(line: 5219, column: 5, scope: !14059)
!14065 = !DILocation(line: 5221, column: 3, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14020, file: !3, line: 5221, column: 3)
!14067 = !DILocation(line: 5221, column: 3, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 5221, column: 3)
!14069 = !DILocalVariable(name: "uid", scope: !14070, file: !3, line: 5223, type: !7)
!14070 = distinct !DILexicalBlock(scope: !14068, file: !3, line: 5222, column: 5)
!14071 = !DILocation(line: 5223, column: 16, scope: !14070)
!14072 = !DILocalVariable(name: "bi", scope: !14070, file: !3, line: 5224, type: !7987)
!14073 = !DILocation(line: 5224, column: 23, scope: !14070)
!14074 = !DILocation(line: 5227, column: 13, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14070, file: !3, line: 5227, column: 11)
!14076 = !DILocation(line: 5227, column: 11, scope: !14070)
!14077 = !DILocation(line: 5228, column: 46, scope: !14075)
!14078 = !DILocation(line: 5228, column: 9, scope: !14075)
!14079 = !DILocation(line: 5228, column: 44, scope: !14075)
!14080 = !DILocation(line: 5230, column: 20, scope: !14070)
!14081 = !DILocation(line: 5231, column: 20, scope: !14070)
!14082 = !DILocation(line: 5230, column: 7, scope: !14070)
!14083 = !DILocation(line: 5234, column: 7, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14070, file: !3, line: 5234, column: 7)
!14085 = !DILocation(line: 5234, column: 7, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14084, file: !3, line: 5234, column: 7)
!14087 = !DILocation(line: 5235, column: 12, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14086, file: !3, line: 5235, column: 12)
!14089 = !DILocation(line: 5235, column: 12, scope: !14086)
!14090 = !DILocation(line: 5236, column: 20, scope: !14088)
!14091 = !DILocation(line: 5237, column: 6, scope: !14088)
!14092 = !DILocation(line: 5236, column: 3, scope: !14088)
!14093 = distinct !{!14093, !14083, !14094}
!14094 = !DILocation(line: 5237, column: 35, scope: !14084)
!14095 = !DILocation(line: 5238, column: 5, scope: !14070)
!14096 = distinct !{!14096, !14065, !14097}
!14097 = !DILocation(line: 5238, column: 5, scope: !14066)
!14098 = !DILocation(line: 5240, column: 10, scope: !14020)
!14099 = !DILocation(line: 5240, column: 3, scope: !14020)
!14100 = distinct !DISubprogram(name: "remove_temp_moveop_nops", scope: !3, file: !3, line: 4965, type: !3461, scopeLine: 4966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14101 = !DILocalVariable(name: "full_tidying", arg: 1, scope: !14100, file: !3, line: 4965, type: !1057)
!14102 = !DILocation(line: 4965, column: 31, scope: !14100)
!14103 = !DILocalVariable(name: "i", scope: !14100, file: !3, line: 4967, type: !849)
!14104 = !DILocation(line: 4967, column: 7, scope: !14100)
!14105 = !DILocalVariable(name: "insn", scope: !14100, file: !3, line: 4968, type: !2132)
!14106 = !DILocation(line: 4968, column: 10, scope: !14100)
!14107 = !DILocation(line: 4970, column: 10, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14100, file: !3, line: 4970, column: 3)
!14109 = !DILocation(line: 4970, column: 8, scope: !14108)
!14110 = !DILocation(line: 4970, column: 15, scope: !14111)
!14111 = distinct !DILexicalBlock(scope: !14108, file: !3, line: 4970, column: 3)
!14112 = !DILocation(line: 4970, column: 3, scope: !14108)
!14113 = !DILocation(line: 4972, column: 7, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14111, file: !3, line: 4971, column: 5)
!14115 = !DILocation(line: 4973, column: 27, scope: !14114)
!14116 = !DILocation(line: 4973, column: 33, scope: !14114)
!14117 = !DILocation(line: 4973, column: 7, scope: !14114)
!14118 = !DILocation(line: 4974, column: 5, scope: !14114)
!14119 = !DILocation(line: 4970, column: 69, scope: !14111)
!14120 = !DILocation(line: 4970, column: 3, scope: !14111)
!14121 = distinct !{!14121, !14112, !14122}
!14122 = !DILocation(line: 4974, column: 5, scope: !14108)
!14123 = !DILocation(line: 4977, column: 7, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14100, file: !3, line: 4977, column: 7)
!14125 = !DILocation(line: 4977, column: 49, scope: !14124)
!14126 = !DILocation(line: 4977, column: 7, scope: !14100)
!14127 = !DILocation(line: 4978, column: 5, scope: !14124)
!14128 = !DILocation(line: 4980, column: 1, scope: !14100)
!14129 = distinct !DISubprogram(name: "move_op", scope: !3, file: !3, line: 6641, type: !14130, scopeLine: 6643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14130 = !DISubroutineType(types: !14131)
!14131 = !{!1057, !2132, !2166, !2055, !825, !2055, !2281}
!14132 = !DILocalVariable(name: "insn", arg: 1, scope: !14129, file: !3, line: 6641, type: !2132)
!14133 = !DILocation(line: 6641, column: 17, scope: !14129)
!14134 = !DILocalVariable(name: "orig_ops", arg: 2, scope: !14129, file: !3, line: 6641, type: !2166)
!14135 = !DILocation(line: 6641, column: 32, scope: !14129)
!14136 = !DILocalVariable(name: "expr_vliw", arg: 3, scope: !14129, file: !3, line: 6641, type: !2055)
!14137 = !DILocation(line: 6641, column: 49, scope: !14129)
!14138 = !DILocalVariable(name: "dest", arg: 4, scope: !14129, file: !3, line: 6642, type: !825)
!14139 = !DILocation(line: 6642, column: 14, scope: !14129)
!14140 = !DILocalVariable(name: "c_expr", arg: 5, scope: !14129, file: !3, line: 6642, type: !2055)
!14141 = !DILocation(line: 6642, column: 27, scope: !14129)
!14142 = !DILocalVariable(name: "should_move", arg: 6, scope: !14129, file: !3, line: 6642, type: !2281)
!14143 = !DILocation(line: 6642, column: 41, scope: !14129)
!14144 = !DILocalVariable(name: "sparams", scope: !14129, file: !3, line: 6644, type: !822)
!14145 = !DILocation(line: 6644, column: 31, scope: !14129)
!14146 = !DILocalVariable(name: "lparams", scope: !14129, file: !3, line: 6645, type: !2298)
!14147 = !DILocation(line: 6645, column: 28, scope: !14129)
!14148 = !DILocalVariable(name: "res", scope: !14129, file: !3, line: 6646, type: !1057)
!14149 = !DILocation(line: 6646, column: 8, scope: !14129)
!14150 = !DILocation(line: 6649, column: 18, scope: !14129)
!14151 = !DILocation(line: 6649, column: 11, scope: !14129)
!14152 = !DILocation(line: 6649, column: 16, scope: !14129)
!14153 = !DILocation(line: 6650, column: 20, scope: !14129)
!14154 = !DILocation(line: 6650, column: 11, scope: !14129)
!14155 = !DILocation(line: 6650, column: 18, scope: !14129)
!14156 = !DILocation(line: 6651, column: 17, scope: !14129)
!14157 = !DILocation(line: 6651, column: 11, scope: !14129)
!14158 = !DILocation(line: 6651, column: 15, scope: !14129)
!14159 = !DILocation(line: 6655, column: 11, scope: !14129)
!14160 = !DILocation(line: 6655, column: 23, scope: !14129)
!14161 = !DILocation(line: 6656, column: 11, scope: !14129)
!14162 = !DILocation(line: 6656, column: 14, scope: !14129)
!14163 = !DILocation(line: 6659, column: 17, scope: !14129)
!14164 = !DILocation(line: 6659, column: 3, scope: !14129)
!14165 = !DILocation(line: 6662, column: 32, scope: !14129)
!14166 = !DILocation(line: 6663, column: 34, scope: !14129)
!14167 = !DILocation(line: 6663, column: 40, scope: !14129)
!14168 = !DILocation(line: 6663, column: 66, scope: !14129)
!14169 = !DILocation(line: 6663, column: 9, scope: !14129)
!14170 = !DILocation(line: 6663, column: 7, scope: !14129)
!14171 = !DILocation(line: 6665, column: 15, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14129, file: !3, line: 6665, column: 7)
!14173 = !DILocation(line: 6665, column: 7, scope: !14172)
!14174 = !DILocation(line: 6665, column: 7, scope: !14129)
!14175 = !DILocation(line: 6666, column: 5, scope: !14172)
!14176 = !DILocation(line: 6666, column: 34, scope: !14172)
!14177 = !DILocation(line: 6668, column: 27, scope: !14129)
!14178 = !DILocation(line: 6668, column: 31, scope: !14129)
!14179 = !DILocation(line: 6668, column: 18, scope: !14129)
!14180 = !DILocation(line: 6668, column: 4, scope: !14129)
!14181 = !DILocation(line: 6668, column: 16, scope: !14129)
!14182 = !DILocation(line: 6670, column: 10, scope: !14129)
!14183 = !DILocation(line: 6670, column: 3, scope: !14129)
!14184 = distinct !DISubprogram(name: "get_dest_from_orig_ops", scope: !3, file: !3, line: 5621, type: !14185, scopeLine: 5622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14185 = !DISubroutineType(types: !14186)
!14186 = !{!825, !2166}
!14187 = !DILocalVariable(name: "orig_ops", arg: 1, scope: !14184, file: !3, line: 5621, type: !2166)
!14188 = !DILocation(line: 5621, column: 34, scope: !14184)
!14189 = !DILocalVariable(name: "dest", scope: !14184, file: !3, line: 5623, type: !825)
!14190 = !DILocation(line: 5623, column: 7, scope: !14184)
!14191 = !DILocalVariable(name: "av_it", scope: !14184, file: !3, line: 5624, type: !3060)
!14192 = !DILocation(line: 5624, column: 19, scope: !14184)
!14193 = !DILocalVariable(name: "expr", scope: !14184, file: !3, line: 5625, type: !2055)
!14194 = !DILocation(line: 5625, column: 10, scope: !14184)
!14195 = !DILocalVariable(name: "first_p", scope: !14184, file: !3, line: 5626, type: !1057)
!14196 = !DILocation(line: 5626, column: 8, scope: !14184)
!14197 = !DILocation(line: 5628, column: 3, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14184, file: !3, line: 5628, column: 3)
!14199 = !DILocation(line: 5628, column: 3, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14198, file: !3, line: 5628, column: 3)
!14201 = !DILocalVariable(name: "x", scope: !14202, file: !3, line: 5630, type: !825)
!14202 = distinct !DILexicalBlock(scope: !14200, file: !3, line: 5629, column: 5)
!14203 = !DILocation(line: 5630, column: 11, scope: !14202)
!14204 = !DILocation(line: 5630, column: 15, scope: !14202)
!14205 = !DILocation(line: 5632, column: 11, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14202, file: !3, line: 5632, column: 11)
!14207 = !DILocation(line: 5632, column: 11, scope: !14202)
!14208 = !DILocation(line: 5634, column: 12, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14206, file: !3, line: 5633, column: 2)
!14210 = !DILocation(line: 5635, column: 11, scope: !14209)
!14211 = !DILocation(line: 5635, column: 9, scope: !14209)
!14212 = !DILocation(line: 5636, column: 2, scope: !14209)
!14213 = !DILocation(line: 5638, column: 2, scope: !14206)
!14214 = !DILocation(line: 5641, column: 5, scope: !14202)
!14215 = distinct !{!14215, !14197, !14216}
!14216 = !DILocation(line: 5641, column: 5, scope: !14198)
!14217 = !DILocation(line: 5643, column: 10, scope: !14184)
!14218 = !DILocation(line: 5643, column: 3, scope: !14184)
!14219 = distinct !DISubprogram(name: "VEC_insn_t_base_iterate", scope: !3, file: !3, line: 528, type: !14220, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{!849, !14222, !7, !4175}
!14222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14223, size: 64)
!14223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2125)
!14224 = !DILocalVariable(name: "vec_", arg: 1, scope: !14219, file: !3, line: 528, type: !14222)
!14225 = !DILocation(line: 528, column: 1, scope: !14219)
!14226 = !DILocalVariable(name: "ix_", arg: 2, scope: !14219, file: !3, line: 528, type: !7)
!14227 = !DILocalVariable(name: "ptr", arg: 3, scope: !14219, file: !3, line: 528, type: !4175)
!14228 = !DILocation(line: 528, column: 1, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14219, file: !3, line: 528, column: 1)
!14230 = !DILocation(line: 528, column: 1, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14229, file: !3, line: 528, column: 1)
!14232 = !DILocation(line: 528, column: 1, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14229, file: !3, line: 528, column: 1)
!14234 = distinct !DISubprogram(name: "VEC_insn_t_base_length", scope: !3, file: !3, line: 528, type: !14235, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14235 = !DISubroutineType(types: !14236)
!14236 = !{!7, !14222}
!14237 = !DILocalVariable(name: "vec_", arg: 1, scope: !14234, file: !3, line: 528, type: !14222)
!14238 = !DILocation(line: 528, column: 1, scope: !14234)
!14239 = distinct !DISubprogram(name: "VEC_insn_t_base_block_remove", scope: !3, file: !3, line: 528, type: !14240, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14240 = !DISubroutineType(types: !14241)
!14241 = !{null, !4192, !7, !7}
!14242 = !DILocalVariable(name: "vec_", arg: 1, scope: !14239, file: !3, line: 528, type: !4192)
!14243 = !DILocation(line: 528, column: 1, scope: !14239)
!14244 = !DILocalVariable(name: "ix_", arg: 2, scope: !14239, file: !3, line: 528, type: !7)
!14245 = !DILocalVariable(name: "len_", arg: 3, scope: !14239, file: !3, line: 528, type: !7)
!14246 = !DILocalVariable(name: "slot_", scope: !14239, file: !3, line: 528, type: !4175)
!14247 = distinct !DISubprogram(name: "advance_state_on_fence", scope: !3, file: !3, line: 5260, type: !14248, scopeLine: 5261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14248 = !DISubroutineType(types: !14249)
!14249 = !{!1057, !2402, !2132}
!14250 = !DILocalVariable(name: "fence", arg: 1, scope: !14247, file: !3, line: 5260, type: !2402)
!14251 = !DILocation(line: 5260, column: 33, scope: !14247)
!14252 = !DILocalVariable(name: "insn", arg: 2, scope: !14247, file: !3, line: 5260, type: !2132)
!14253 = !DILocation(line: 5260, column: 47, scope: !14247)
!14254 = !DILocalVariable(name: "asm_p", scope: !14247, file: !3, line: 5262, type: !1057)
!14255 = !DILocation(line: 5262, column: 8, scope: !14247)
!14256 = !DILocation(line: 5264, column: 23, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14247, file: !3, line: 5264, column: 7)
!14258 = !DILocation(line: 5264, column: 7, scope: !14257)
!14259 = !DILocation(line: 5264, column: 29, scope: !14257)
!14260 = !DILocation(line: 5264, column: 7, scope: !14247)
!14261 = !DILocalVariable(name: "res", scope: !14262, file: !3, line: 5266, type: !849)
!14262 = distinct !DILexicalBlock(scope: !14257, file: !3, line: 5265, column: 5)
!14263 = !DILocation(line: 5266, column: 11, scope: !14262)
!14264 = !DILocalVariable(name: "temp_state", scope: !14262, file: !3, line: 5267, type: !2209)
!14265 = !DILocation(line: 5267, column: 15, scope: !14262)
!14266 = !DILocation(line: 5267, column: 28, scope: !14262)
!14267 = !DILocation(line: 5269, column: 7, scope: !14262)
!14268 = !DILocation(line: 5270, column: 13, scope: !14262)
!14269 = !DILocation(line: 5272, column: 15, scope: !14262)
!14270 = !DILocation(line: 5272, column: 27, scope: !14262)
!14271 = !DILocation(line: 5272, column: 48, scope: !14262)
!14272 = !DILocation(line: 5272, column: 7, scope: !14262)
!14273 = !DILocation(line: 5273, column: 31, scope: !14262)
!14274 = !DILocation(line: 5273, column: 52, scope: !14262)
!14275 = !DILocation(line: 5273, column: 13, scope: !14262)
!14276 = !DILocation(line: 5273, column: 11, scope: !14262)
!14277 = !DILocation(line: 5274, column: 7, scope: !14262)
!14278 = !DILocation(line: 5276, column: 19, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14262, file: !3, line: 5276, column: 11)
!14280 = !DILocation(line: 5276, column: 31, scope: !14279)
!14281 = !DILocation(line: 5276, column: 52, scope: !14279)
!14282 = !DILocation(line: 5276, column: 11, scope: !14279)
!14283 = !DILocation(line: 5276, column: 11, scope: !14262)
!14284 = !DILocation(line: 5278, column: 11, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 5277, column: 9)
!14286 = !DILocation(line: 5278, column: 37, scope: !14285)
!14287 = !DILocation(line: 5281, column: 15, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14285, file: !3, line: 5281, column: 15)
!14289 = !DILocation(line: 5281, column: 44, scope: !14288)
!14290 = !DILocation(line: 5281, column: 42, scope: !14288)
!14291 = !DILocation(line: 5281, column: 15, scope: !14285)
!14292 = !DILocation(line: 5282, column: 13, scope: !14288)
!14293 = !DILocation(line: 5283, column: 9, scope: !14285)
!14294 = !DILocation(line: 5284, column: 5, scope: !14262)
!14295 = !DILocation(line: 5289, column: 15, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14257, file: !3, line: 5286, column: 5)
!14297 = !DILocation(line: 5289, column: 13, scope: !14296)
!14298 = !DILocation(line: 5290, column: 12, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14296, file: !3, line: 5290, column: 11)
!14300 = !DILocation(line: 5290, column: 41, scope: !14299)
!14301 = !DILocation(line: 5290, column: 44, scope: !14299)
!14302 = !DILocation(line: 5290, column: 11, scope: !14296)
!14303 = !DILocation(line: 5291, column: 28, scope: !14299)
!14304 = !DILocation(line: 5291, column: 9, scope: !14299)
!14305 = !DILocation(line: 5294, column: 7, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14247, file: !3, line: 5294, column: 7)
!14307 = !DILocation(line: 5294, column: 21, scope: !14306)
!14308 = !DILocation(line: 5294, column: 7, scope: !14247)
!14309 = !DILocation(line: 5295, column: 18, scope: !14306)
!14310 = !DILocation(line: 5295, column: 5, scope: !14306)
!14311 = !DILocation(line: 5296, column: 8, scope: !14312)
!14312 = distinct !DILexicalBlock(scope: !14247, file: !3, line: 5296, column: 7)
!14313 = !DILocation(line: 5296, column: 7, scope: !14247)
!14314 = !DILocation(line: 5297, column: 5, scope: !14312)
!14315 = !DILocation(line: 5297, column: 34, scope: !14312)
!14316 = !DILocation(line: 5298, column: 30, scope: !14247)
!14317 = !DILocation(line: 5298, column: 3, scope: !14247)
!14318 = !DILocation(line: 5298, column: 28, scope: !14247)
!14319 = !DILocation(line: 5299, column: 10, scope: !14247)
!14320 = !DILocation(line: 5299, column: 3, scope: !14247)
!14321 = distinct !DISubprogram(name: "VEC_rtx_gc_safe_push", scope: !456, file: !456, line: 202, type: !14322, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14322 = !DISubroutineType(types: !14323)
!14323 = !{!5250, !14324, !825}
!14324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!14325 = !DILocalVariable(name: "vec_", arg: 1, scope: !14321, file: !456, line: 202, type: !14324)
!14326 = !DILocation(line: 202, column: 1, scope: !14321)
!14327 = !DILocalVariable(name: "obj_", arg: 2, scope: !14321, file: !456, line: 202, type: !825)
!14328 = distinct !DISubprogram(name: "VEC_rtx_gc_reserve", scope: !456, file: !456, line: 202, type: !14329, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14329 = !DISubroutineType(types: !14330)
!14330 = !{!849, !14324, !849}
!14331 = !DILocalVariable(name: "vec_", arg: 1, scope: !14328, file: !456, line: 202, type: !14324)
!14332 = !DILocation(line: 202, column: 1, scope: !14328)
!14333 = !DILocalVariable(name: "alloc_", arg: 2, scope: !14328, file: !456, line: 202, type: !849)
!14334 = !DILocalVariable(name: "extend", scope: !14328, file: !456, line: 202, type: !849)
!14335 = !DILocation(line: 202, column: 1, scope: !14336)
!14336 = distinct !DILexicalBlock(scope: !14328, file: !456, line: 202, column: 1)
!14337 = distinct !DISubprogram(name: "VEC_rtx_base_quick_push", scope: !456, file: !456, line: 200, type: !14338, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{!5250, !13798, !825}
!14340 = !DILocalVariable(name: "vec_", arg: 1, scope: !14337, file: !456, line: 200, type: !13798)
!14341 = !DILocation(line: 200, column: 1, scope: !14337)
!14342 = !DILocalVariable(name: "obj_", arg: 2, scope: !14337, file: !456, line: 200, type: !825)
!14343 = !DILocalVariable(name: "slot_", scope: !14337, file: !456, line: 200, type: !5250)
!14344 = distinct !DISubprogram(name: "VEC_rtx_base_space", scope: !456, file: !456, line: 200, type: !14345, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14345 = !DISubroutineType(types: !14346)
!14346 = !{!849, !13798, !849}
!14347 = !DILocalVariable(name: "vec_", arg: 1, scope: !14344, file: !456, line: 200, type: !13798)
!14348 = !DILocation(line: 200, column: 1, scope: !14344)
!14349 = !DILocalVariable(name: "alloc_", arg: 2, scope: !14344, file: !456, line: 200, type: !849)
!14350 = distinct !DISubprogram(name: "VEC_vinsn_t_base_length", scope: !3, file: !3, line: 511, type: !14351, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14351 = !DISubroutineType(types: !14352)
!14352 = !{!7, !11500}
!14353 = !DILocalVariable(name: "vec_", arg: 1, scope: !14350, file: !3, line: 511, type: !11500)
!14354 = !DILocation(line: 511, column: 1, scope: !14350)
!14355 = distinct !DISubprogram(name: "VEC_vinsn_t_base_block_remove", scope: !3, file: !3, line: 511, type: !14356, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14356 = !DISubroutineType(types: !14357)
!14357 = !{null, !7070, !7, !7}
!14358 = !DILocalVariable(name: "vec_", arg: 1, scope: !14355, file: !3, line: 511, type: !7070)
!14359 = !DILocation(line: 511, column: 1, scope: !14355)
!14360 = !DILocalVariable(name: "ix_", arg: 2, scope: !14355, file: !3, line: 511, type: !7)
!14361 = !DILocalVariable(name: "len_", arg: 3, scope: !14355, file: !3, line: 511, type: !7)
!14362 = !DILocalVariable(name: "slot_", scope: !14355, file: !3, line: 511, type: !5255)
!14363 = distinct !DISubprogram(name: "extract_new_fences_from", scope: !3, file: !3, line: 636, type: !14364, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14364 = !DISubroutineType(types: !14365)
!14365 = !{null, !2349, !3332, !849}
!14366 = !DILocalVariable(name: "old_fences", arg: 1, scope: !14363, file: !3, line: 636, type: !2349)
!14367 = !DILocation(line: 636, column: 34, scope: !14363)
!14368 = !DILocalVariable(name: "new_fences", arg: 2, scope: !14363, file: !3, line: 636, type: !3332)
!14369 = !DILocation(line: 636, column: 59, scope: !14363)
!14370 = !DILocalVariable(name: "orig_max_seqno", arg: 3, scope: !14363, file: !3, line: 637, type: !849)
!14371 = !DILocation(line: 637, column: 9, scope: !14363)
!14372 = !DILocalVariable(name: "was_here_p", scope: !14363, file: !3, line: 639, type: !1057)
!14373 = !DILocation(line: 639, column: 8, scope: !14363)
!14374 = !DILocalVariable(name: "insn", scope: !14363, file: !3, line: 640, type: !2132)
!14375 = !DILocation(line: 640, column: 10, scope: !14363)
!14376 = !DILocalVariable(name: "succ", scope: !14363, file: !3, line: 641, type: !2132)
!14377 = !DILocation(line: 641, column: 10, scope: !14363)
!14378 = !DILocalVariable(name: "si", scope: !14363, file: !3, line: 642, type: !3479)
!14379 = !DILocation(line: 642, column: 17, scope: !14363)
!14380 = !DILocalVariable(name: "ii", scope: !14363, file: !3, line: 643, type: !8673)
!14381 = !DILocation(line: 643, column: 18, scope: !14363)
!14382 = !DILocalVariable(name: "fence", scope: !14363, file: !3, line: 644, type: !2402)
!14383 = !DILocation(line: 644, column: 11, scope: !14363)
!14384 = !DILocation(line: 644, column: 19, scope: !14363)
!14385 = !DILocalVariable(name: "bb", scope: !14363, file: !3, line: 645, type: !1362)
!14386 = !DILocation(line: 645, column: 15, scope: !14363)
!14387 = !DILocation(line: 648, column: 3, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14363, file: !3, line: 648, column: 3)
!14389 = !DILocation(line: 648, column: 3, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14388, file: !3, line: 648, column: 3)
!14391 = !DILocation(line: 650, column: 7, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14390, file: !3, line: 649, column: 5)
!14393 = !DILocation(line: 651, column: 18, scope: !14392)
!14394 = !DILocation(line: 652, column: 5, scope: !14392)
!14395 = distinct !{!14395, !14387, !14396}
!14396 = !DILocation(line: 652, column: 5, scope: !14388)
!14397 = !DILocation(line: 653, column: 3, scope: !14363)
!14398 = !DILocation(line: 657, column: 8, scope: !14363)
!14399 = !DILocation(line: 657, column: 6, scope: !14363)
!14400 = !DILocation(line: 658, column: 23, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14363, file: !3, line: 658, column: 7)
!14402 = !DILocation(line: 658, column: 9, scope: !14401)
!14403 = !DILocation(line: 659, column: 7, scope: !14401)
!14404 = !DILocation(line: 659, column: 26, scope: !14401)
!14405 = !DILocation(line: 659, column: 11, scope: !14401)
!14406 = !DILocation(line: 660, column: 11, scope: !14401)
!14407 = !DILocation(line: 660, column: 42, scope: !14401)
!14408 = !DILocation(line: 660, column: 29, scope: !14401)
!14409 = !DILocation(line: 660, column: 14, scope: !14401)
!14410 = !DILocation(line: 658, column: 7, scope: !14363)
!14411 = !DILocalVariable(name: "succ", scope: !14412, file: !3, line: 662, type: !2132)
!14412 = distinct !DILexicalBlock(scope: !14401, file: !3, line: 661, column: 5)
!14413 = !DILocation(line: 662, column: 14, scope: !14412)
!14414 = !DILocation(line: 664, column: 29, scope: !14412)
!14415 = !DILocation(line: 664, column: 15, scope: !14412)
!14416 = !DILocation(line: 665, column: 43, scope: !14412)
!14417 = !DILocation(line: 665, column: 30, scope: !14412)
!14418 = !DILocation(line: 665, column: 17, scope: !14412)
!14419 = !DILocation(line: 666, column: 17, scope: !14412)
!14420 = !DILocation(line: 664, column: 12, scope: !14412)
!14421 = !DILocation(line: 668, column: 11, scope: !14422)
!14422 = distinct !DILexicalBlock(scope: !14412, file: !3, line: 668, column: 11)
!14423 = !DILocation(line: 668, column: 29, scope: !14422)
!14424 = !DILocation(line: 669, column: 11, scope: !14422)
!14425 = !DILocation(line: 669, column: 14, scope: !14422)
!14426 = !DILocation(line: 669, column: 35, scope: !14422)
!14427 = !DILocation(line: 669, column: 32, scope: !14422)
!14428 = !DILocation(line: 670, column: 11, scope: !14422)
!14429 = !DILocation(line: 670, column: 14, scope: !14422)
!14430 = !DILocation(line: 670, column: 38, scope: !14422)
!14431 = !DILocation(line: 668, column: 11, scope: !14412)
!14432 = !DILocation(line: 672, column: 32, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14422, file: !3, line: 671, column: 9)
!14434 = !DILocation(line: 672, column: 11, scope: !14433)
!14435 = !DILocation(line: 672, column: 30, scope: !14433)
!14436 = !DILocation(line: 673, column: 33, scope: !14433)
!14437 = !DILocation(line: 673, column: 45, scope: !14433)
!14438 = !DILocation(line: 673, column: 11, scope: !14433)
!14439 = !DILocation(line: 675, column: 15, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14433, file: !3, line: 675, column: 15)
!14441 = !DILocation(line: 675, column: 29, scope: !14440)
!14442 = !DILocation(line: 675, column: 15, scope: !14433)
!14443 = !DILocation(line: 676, column: 13, scope: !14440)
!14444 = !DILocation(line: 676, column: 13, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14446, file: !3, line: 676, column: 13)
!14446 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 676, column: 13)
!14447 = !DILocation(line: 676, column: 13, scope: !14446)
!14448 = !DILocalVariable(name: "__j", scope: !14449, file: !3, line: 676, type: !849)
!14449 = distinct !DILexicalBlock(scope: !14445, file: !3, line: 676, column: 13)
!14450 = !DILocation(line: 676, column: 13, scope: !14449)
!14451 = !DILocalVariable(name: "__s", scope: !14449, file: !3, line: 676, type: !817)
!14452 = !DILocation(line: 678, column: 9, scope: !14433)
!14453 = !DILocation(line: 679, column: 7, scope: !14412)
!14454 = !DILocation(line: 683, column: 3, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14363, file: !3, line: 683, column: 3)
!14456 = !DILocation(line: 683, column: 3, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14455, file: !3, line: 683, column: 3)
!14458 = !DILocalVariable(name: "seqno", scope: !14459, file: !3, line: 685, type: !849)
!14459 = distinct !DILexicalBlock(scope: !14457, file: !3, line: 684, column: 5)
!14460 = !DILocation(line: 685, column: 11, scope: !14459)
!14461 = !DILocation(line: 685, column: 19, scope: !14459)
!14462 = !DILocation(line: 687, column: 15, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14459, file: !3, line: 687, column: 11)
!14464 = !DILocation(line: 687, column: 13, scope: !14463)
!14465 = !DILocation(line: 687, column: 21, scope: !14463)
!14466 = !DILocation(line: 687, column: 24, scope: !14463)
!14467 = !DILocation(line: 687, column: 33, scope: !14463)
!14468 = !DILocation(line: 687, column: 30, scope: !14463)
!14469 = !DILocation(line: 688, column: 11, scope: !14463)
!14470 = !DILocation(line: 688, column: 15, scope: !14463)
!14471 = !DILocation(line: 688, column: 28, scope: !14463)
!14472 = !DILocation(line: 688, column: 31, scope: !14463)
!14473 = !DILocation(line: 688, column: 55, scope: !14463)
!14474 = !DILocation(line: 687, column: 11, scope: !14459)
!14475 = !DILocalVariable(name: "b", scope: !14476, file: !3, line: 690, type: !1057)
!14476 = distinct !DILexicalBlock(scope: !14463, file: !3, line: 689, column: 9)
!14477 = !DILocation(line: 690, column: 16, scope: !14476)
!14478 = !DILocation(line: 690, column: 36, scope: !14476)
!14479 = !DILocation(line: 690, column: 42, scope: !14476)
!14480 = !DILocation(line: 690, column: 21, scope: !14476)
!14481 = !DILocation(line: 691, column: 21, scope: !14476)
!14482 = !DILocation(line: 691, column: 42, scope: !14476)
!14483 = !DILocation(line: 691, column: 48, scope: !14476)
!14484 = !DILocation(line: 691, column: 24, scope: !14476)
!14485 = !DILocation(line: 690, column: 20, scope: !14476)
!14486 = !DILocation(line: 693, column: 15, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14476, file: !3, line: 693, column: 15)
!14488 = !DILocation(line: 693, column: 29, scope: !14487)
!14489 = !DILocation(line: 693, column: 15, scope: !14476)
!14490 = !DILocation(line: 694, column: 13, scope: !14487)
!14491 = !DILocation(line: 694, column: 13, scope: !14492)
!14492 = distinct !DILexicalBlock(scope: !14493, file: !3, line: 694, column: 13)
!14493 = distinct !DILexicalBlock(scope: !14487, file: !3, line: 694, column: 13)
!14494 = !DILocation(line: 694, column: 13, scope: !14493)
!14495 = !DILocalVariable(name: "__j", scope: !14496, file: !3, line: 694, type: !849)
!14496 = distinct !DILexicalBlock(scope: !14492, file: !3, line: 694, column: 13)
!14497 = !DILocation(line: 694, column: 13, scope: !14496)
!14498 = !DILocalVariable(name: "__s", scope: !14496, file: !3, line: 694, type: !817)
!14499 = !DILocation(line: 698, column: 15, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14476, file: !3, line: 698, column: 15)
!14501 = !DILocation(line: 698, column: 15, scope: !14476)
!14502 = !DILocation(line: 699, column: 40, scope: !14500)
!14503 = !DILocation(line: 699, column: 52, scope: !14500)
!14504 = !DILocation(line: 699, column: 58, scope: !14500)
!14505 = !DILocation(line: 699, column: 13, scope: !14500)
!14506 = !DILocation(line: 703, column: 31, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14500, file: !3, line: 701, column: 13)
!14508 = !DILocation(line: 703, column: 49, scope: !14507)
!14509 = !DILocation(line: 703, column: 15, scope: !14507)
!14510 = !DILocation(line: 704, column: 42, scope: !14507)
!14511 = !DILocation(line: 704, column: 54, scope: !14507)
!14512 = !DILocation(line: 704, column: 60, scope: !14507)
!14513 = !DILocation(line: 704, column: 15, scope: !14507)
!14514 = !DILocation(line: 706, column: 9, scope: !14476)
!14515 = !DILocation(line: 707, column: 5, scope: !14459)
!14516 = distinct !{!14516, !14454, !14517}
!14517 = !DILocation(line: 707, column: 5, scope: !14455)
!14518 = !DILocation(line: 708, column: 1, scope: !14363)
!14519 = distinct !DISubprogram(name: "_list_iter_cond_x", scope: !398, file: !398, line: 501, type: !14520, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{!1057, !2164, !5250}
!14522 = !DILocalVariable(name: "l", arg: 1, scope: !14519, file: !398, line: 501, type: !2164)
!14523 = !DILocation(line: 501, column: 29, scope: !14519)
!14524 = !DILocalVariable(name: "xp", arg: 2, scope: !14519, file: !398, line: 501, type: !5250)
!14525 = !DILocation(line: 501, column: 37, scope: !14519)
!14526 = !DILocation(line: 503, column: 7, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14519, file: !398, line: 503, column: 7)
!14528 = !DILocation(line: 503, column: 7, scope: !14519)
!14529 = !DILocation(line: 505, column: 13, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14527, file: !398, line: 504, column: 5)
!14531 = !DILocation(line: 505, column: 8, scope: !14530)
!14532 = !DILocation(line: 505, column: 11, scope: !14530)
!14533 = !DILocation(line: 506, column: 7, scope: !14530)
!14534 = !DILocation(line: 509, column: 3, scope: !14519)
!14535 = !DILocation(line: 510, column: 1, scope: !14519)
!14536 = distinct !DISubprogram(name: "in_fallthru_bb_p", scope: !3, file: !3, line: 613, type: !5441, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14537 = !DILocalVariable(name: "insn", arg: 1, scope: !14536, file: !3, line: 613, type: !825)
!14538 = !DILocation(line: 613, column: 23, scope: !14536)
!14539 = !DILocalVariable(name: "succ", arg: 2, scope: !14536, file: !3, line: 613, type: !825)
!14540 = !DILocation(line: 613, column: 33, scope: !14536)
!14541 = !DILocalVariable(name: "bb", scope: !14536, file: !3, line: 615, type: !1362)
!14542 = !DILocation(line: 615, column: 15, scope: !14536)
!14543 = !DILocation(line: 615, column: 20, scope: !14536)
!14544 = !DILocation(line: 617, column: 7, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14536, file: !3, line: 617, column: 7)
!14546 = !DILocation(line: 617, column: 13, scope: !14545)
!14547 = !DILocation(line: 617, column: 10, scope: !14545)
!14548 = !DILocation(line: 617, column: 7, scope: !14536)
!14549 = !DILocation(line: 618, column: 5, scope: !14545)
!14550 = !DILocation(line: 620, column: 27, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14536, file: !3, line: 620, column: 7)
!14552 = !DILocation(line: 620, column: 7, scope: !14551)
!14553 = !DILocation(line: 620, column: 7, scope: !14536)
!14554 = !DILocation(line: 621, column: 30, scope: !14551)
!14555 = !DILocation(line: 621, column: 10, scope: !14551)
!14556 = !DILocation(line: 621, column: 35, scope: !14551)
!14557 = !DILocation(line: 621, column: 8, scope: !14551)
!14558 = !DILocation(line: 621, column: 5, scope: !14551)
!14559 = !DILocation(line: 623, column: 5, scope: !14551)
!14560 = !DILocation(line: 625, column: 3, scope: !14536)
!14561 = !DILocation(line: 625, column: 26, scope: !14536)
!14562 = !DILocation(line: 625, column: 10, scope: !14536)
!14563 = !DILocation(line: 626, column: 10, scope: !14536)
!14564 = !DILocation(line: 626, column: 14, scope: !14536)
!14565 = !DILocation(line: 626, column: 8, scope: !14536)
!14566 = distinct !{!14566, !14560, !14564}
!14567 = !DILocation(line: 628, column: 10, scope: !14536)
!14568 = !DILocation(line: 628, column: 16, scope: !14536)
!14569 = !DILocation(line: 628, column: 13, scope: !14536)
!14570 = !DILocation(line: 628, column: 3, scope: !14536)
!14571 = !DILocation(line: 629, column: 1, scope: !14536)
!14572 = distinct !DISubprogram(name: "simplify_changed_insns", scope: !3, file: !3, line: 6904, type: !3289, scopeLine: 6905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14573 = !DILocalVariable(name: "i", scope: !14572, file: !3, line: 6906, type: !849)
!14574 = !DILocation(line: 6906, column: 7, scope: !14572)
!14575 = !DILocation(line: 6908, column: 10, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14572, file: !3, line: 6908, column: 3)
!14577 = !DILocation(line: 6908, column: 8, scope: !14576)
!14578 = !DILocation(line: 6908, column: 15, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14576, file: !3, line: 6908, column: 3)
!14580 = !DILocation(line: 6908, column: 19, scope: !14579)
!14581 = !DILocation(line: 6908, column: 17, scope: !14579)
!14582 = !DILocation(line: 6908, column: 3, scope: !14576)
!14583 = !DILocalVariable(name: "bb", scope: !14584, file: !3, line: 6910, type: !1362)
!14584 = distinct !DILexicalBlock(scope: !14579, file: !3, line: 6909, column: 5)
!14585 = !DILocation(line: 6910, column: 19, scope: !14584)
!14586 = !DILocation(line: 6910, column: 24, scope: !14584)
!14587 = !DILocalVariable(name: "insn", scope: !14584, file: !3, line: 6911, type: !825)
!14588 = !DILocation(line: 6911, column: 11, scope: !14584)
!14589 = !DILocation(line: 6913, column: 7, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14584, file: !3, line: 6913, column: 7)
!14591 = !DILocation(line: 6913, column: 7, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14590, file: !3, line: 6913, column: 7)
!14593 = !DILocation(line: 0, scope: !14592)
!14594 = !DILocation(line: 6914, column: 6, scope: !14595)
!14595 = distinct !DILexicalBlock(scope: !14592, file: !3, line: 6914, column: 6)
!14596 = !DILocation(line: 6914, column: 6, scope: !14592)
!14597 = !DILocalVariable(name: "expr", scope: !14598, file: !3, line: 6916, type: !2055)
!14598 = distinct !DILexicalBlock(scope: !14595, file: !3, line: 6915, column: 4)
!14599 = !DILocation(line: 6916, column: 13, scope: !14598)
!14600 = !DILocation(line: 6916, column: 20, scope: !14598)
!14601 = !DILocation(line: 6918, column: 10, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 6918, column: 10)
!14603 = !DILocation(line: 6918, column: 10, scope: !14598)
!14604 = !DILocation(line: 6919, column: 32, scope: !14602)
!14605 = !DILocation(line: 6919, column: 8, scope: !14602)
!14606 = !DILocation(line: 6920, column: 4, scope: !14598)
!14607 = distinct !{!14607, !14589, !14608}
!14608 = !DILocation(line: 6920, column: 4, scope: !14590)
!14609 = !DILocation(line: 6921, column: 5, scope: !14584)
!14610 = !DILocation(line: 6908, column: 39, scope: !14579)
!14611 = !DILocation(line: 6908, column: 3, scope: !14579)
!14612 = distinct !{!14612, !14582, !14613}
!14613 = !DILocation(line: 6921, column: 5, scope: !14576)
!14614 = !DILocation(line: 6922, column: 1, scope: !14572)
!14615 = distinct !DISubprogram(name: "VEC_expr_t_heap_free", scope: !3, file: !3, line: 507, type: !14616, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14616 = !DISubroutineType(types: !14617)
!14617 = !{null, !11022}
!14618 = !DILocalVariable(name: "vec_", arg: 1, scope: !14615, file: !3, line: 507, type: !11022)
!14619 = !DILocation(line: 507, column: 1, scope: !14615)
!14620 = !DILocation(line: 507, column: 1, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14615, file: !3, line: 507, column: 1)
!14622 = distinct !DISubprogram(name: "vinsn_vec_free", scope: !3, file: !3, line: 3665, type: !8960, scopeLine: 3666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14623 = !DILocalVariable(name: "vinsn_vec", arg: 1, scope: !14622, file: !3, line: 3665, type: !7042)
!14624 = !DILocation(line: 3665, column: 30, scope: !14622)
!14625 = !DILocation(line: 3667, column: 8, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 3667, column: 7)
!14627 = !DILocation(line: 3667, column: 7, scope: !14626)
!14628 = !DILocation(line: 3667, column: 7, scope: !14622)
!14629 = !DILocation(line: 3668, column: 5, scope: !14626)
!14630 = !DILocation(line: 3669, column: 1, scope: !14622)
!14631 = distinct !DISubprogram(name: "sel_region_target_finish", scope: !3, file: !3, line: 7123, type: !3461, scopeLine: 7124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14632 = !DILocalVariable(name: "reset_sched_cycles_p", arg: 1, scope: !14631, file: !3, line: 7123, type: !1057)
!14633 = !DILocation(line: 7123, column: 32, scope: !14631)
!14634 = !DILocalVariable(name: "i", scope: !14631, file: !3, line: 7125, type: !849)
!14635 = !DILocation(line: 7125, column: 7, scope: !14631)
!14636 = !DILocalVariable(name: "scheduled_blocks", scope: !14631, file: !3, line: 7126, type: !2074)
!14637 = !DILocation(line: 7126, column: 10, scope: !14631)
!14638 = !DILocation(line: 7126, column: 29, scope: !14631)
!14639 = !DILocation(line: 7128, column: 10, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14631, file: !3, line: 7128, column: 3)
!14641 = !DILocation(line: 7128, column: 8, scope: !14640)
!14642 = !DILocation(line: 7128, column: 15, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14640, file: !3, line: 7128, column: 3)
!14644 = !DILocation(line: 7128, column: 19, scope: !14643)
!14645 = !DILocation(line: 7128, column: 17, scope: !14643)
!14646 = !DILocation(line: 7128, column: 3, scope: !14640)
!14647 = !DILocation(line: 7130, column: 25, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14649, file: !3, line: 7130, column: 11)
!14649 = distinct !DILexicalBlock(scope: !14643, file: !3, line: 7129, column: 5)
!14650 = !DILocation(line: 7130, column: 43, scope: !14648)
!14651 = !DILocation(line: 7130, column: 11, scope: !14648)
!14652 = !DILocation(line: 7130, column: 11, scope: !14649)
!14653 = !DILocation(line: 7131, column: 2, scope: !14648)
!14654 = !DILocation(line: 7135, column: 36, scope: !14655)
!14655 = distinct !DILexicalBlock(scope: !14649, file: !3, line: 7135, column: 11)
!14656 = !DILocation(line: 7135, column: 11, scope: !14655)
!14657 = !DILocation(line: 7135, column: 11, scope: !14649)
!14658 = !DILocation(line: 7136, column: 2, scope: !14655)
!14659 = !DILocation(line: 7138, column: 28, scope: !14649)
!14660 = !DILocation(line: 7138, column: 46, scope: !14649)
!14661 = !DILocation(line: 7138, column: 7, scope: !14649)
!14662 = !DILocation(line: 7140, column: 28, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14649, file: !3, line: 7140, column: 11)
!14664 = !DILocation(line: 7140, column: 48, scope: !14663)
!14665 = !DILocation(line: 7140, column: 54, scope: !14663)
!14666 = !DILocation(line: 7140, column: 74, scope: !14663)
!14667 = !DILocation(line: 7140, column: 11, scope: !14663)
!14668 = !DILocation(line: 7140, column: 11, scope: !14649)
!14669 = !DILocation(line: 7141, column: 2, scope: !14663)
!14670 = !DILocation(line: 7143, column: 11, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14649, file: !3, line: 7143, column: 11)
!14672 = !DILocation(line: 7143, column: 11, scope: !14649)
!14673 = !DILocation(line: 7144, column: 2, scope: !14671)
!14674 = !DILocation(line: 7146, column: 25, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14649, file: !3, line: 7146, column: 11)
!14676 = !DILocation(line: 7146, column: 11, scope: !14675)
!14677 = !DILocation(line: 7146, column: 11, scope: !14649)
!14678 = !DILocation(line: 7147, column: 16, scope: !14675)
!14679 = !DILocation(line: 7147, column: 25, scope: !14675)
!14680 = !DILocation(line: 7147, column: 37, scope: !14675)
!14681 = !DILocation(line: 7147, column: 2, scope: !14675)
!14682 = !DILocation(line: 7149, column: 7, scope: !14649)
!14683 = !DILocation(line: 7151, column: 25, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14649, file: !3, line: 7151, column: 11)
!14685 = !DILocation(line: 7151, column: 11, scope: !14684)
!14686 = !DILocation(line: 7151, column: 11, scope: !14649)
!14687 = !DILocation(line: 7153, column: 18, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14684, file: !3, line: 7152, column: 2)
!14689 = !DILocation(line: 7153, column: 29, scope: !14688)
!14690 = !DILocation(line: 7153, column: 41, scope: !14688)
!14691 = !DILocation(line: 7153, column: 4, scope: !14688)
!14692 = !DILocation(line: 7157, column: 4, scope: !14688)
!14693 = !DILocation(line: 7158, column: 2, scope: !14688)
!14694 = !DILocation(line: 7159, column: 5, scope: !14649)
!14695 = !DILocation(line: 7128, column: 39, scope: !14643)
!14696 = !DILocation(line: 7128, column: 3, scope: !14643)
!14697 = distinct !{!14697, !14646, !14698}
!14698 = !DILocation(line: 7159, column: 5, scope: !14640)
!14699 = !DILocation(line: 7161, column: 3, scope: !14631)
!14700 = !DILocation(line: 7162, column: 1, scope: !14631)
!14701 = distinct !DISubprogram(name: "VEC_vinsn_t_heap_free", scope: !3, file: !3, line: 512, type: !14702, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14702 = !DISubroutineType(types: !14703)
!14703 = !{null, !7054}
!14704 = !DILocalVariable(name: "vec_", arg: 1, scope: !14701, file: !3, line: 512, type: !7054)
!14705 = !DILocation(line: 512, column: 1, scope: !14701)
!14706 = !DILocation(line: 512, column: 1, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14701, file: !3, line: 512, column: 1)
!14708 = distinct !DISubprogram(name: "find_ebb_boundaries", scope: !3, file: !3, line: 6928, type: !14709, scopeLine: 6929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14709 = !DISubroutineType(types: !14710)
!14710 = !{null, !1362, !2074}
!14711 = !DILocalVariable(name: "bb", arg: 1, scope: !14708, file: !3, line: 6928, type: !1362)
!14712 = !DILocation(line: 6928, column: 34, scope: !14708)
!14713 = !DILocalVariable(name: "scheduled_blocks", arg: 2, scope: !14708, file: !3, line: 6928, type: !2074)
!14714 = !DILocation(line: 6928, column: 45, scope: !14708)
!14715 = !DILocalVariable(name: "head", scope: !14708, file: !3, line: 6930, type: !2132)
!14716 = !DILocation(line: 6930, column: 10, scope: !14708)
!14717 = !DILocalVariable(name: "tail", scope: !14708, file: !3, line: 6930, type: !2132)
!14718 = !DILocation(line: 6930, column: 16, scope: !14708)
!14719 = !DILocalVariable(name: "bb1", scope: !14708, file: !3, line: 6931, type: !1362)
!14720 = !DILocation(line: 6931, column: 15, scope: !14708)
!14721 = !DILocation(line: 6931, column: 21, scope: !14708)
!14722 = !DILocation(line: 6932, column: 7, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14708, file: !3, line: 6932, column: 7)
!14724 = !DILocation(line: 6932, column: 21, scope: !14723)
!14725 = !DILocation(line: 6932, column: 7, scope: !14708)
!14726 = !DILocation(line: 6933, column: 5, scope: !14723)
!14727 = !DILocation(line: 6933, column: 5, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !14729, file: !3, line: 6933, column: 5)
!14729 = distinct !DILexicalBlock(scope: !14723, file: !3, line: 6933, column: 5)
!14730 = !DILocation(line: 6933, column: 5, scope: !14729)
!14731 = !DILocalVariable(name: "__j", scope: !14732, file: !3, line: 6933, type: !849)
!14732 = distinct !DILexicalBlock(scope: !14728, file: !3, line: 6933, column: 5)
!14733 = !DILocation(line: 6933, column: 5, scope: !14732)
!14734 = !DILocalVariable(name: "__s", scope: !14732, file: !3, line: 6933, type: !817)
!14735 = !DILocation(line: 6935, column: 3, scope: !14708)
!14736 = !DILocation(line: 6937, column: 23, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14708, file: !3, line: 6936, column: 5)
!14738 = !DILocation(line: 6937, column: 41, scope: !14737)
!14739 = !DILocation(line: 6937, column: 7, scope: !14737)
!14740 = !DILocation(line: 6939, column: 11, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14737, file: !3, line: 6939, column: 11)
!14742 = !DILocation(line: 6939, column: 25, scope: !14741)
!14743 = !DILocation(line: 6939, column: 11, scope: !14737)
!14744 = !DILocation(line: 6940, column: 2, scope: !14741)
!14745 = !DILocation(line: 6940, column: 2, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14747, file: !3, line: 6940, column: 2)
!14747 = distinct !DILexicalBlock(scope: !14741, file: !3, line: 6940, column: 2)
!14748 = !DILocation(line: 6940, column: 2, scope: !14747)
!14749 = !DILocalVariable(name: "__j", scope: !14750, file: !3, line: 6940, type: !849)
!14750 = distinct !DILexicalBlock(scope: !14746, file: !3, line: 6940, column: 2)
!14751 = !DILocation(line: 6940, column: 2, scope: !14750)
!14752 = !DILocalVariable(name: "__s", scope: !14750, file: !3, line: 6940, type: !817)
!14753 = !DILocation(line: 6941, column: 5, scope: !14737)
!14754 = !DILocation(line: 6942, column: 26, scope: !14708)
!14755 = !DILocation(line: 6942, column: 11, scope: !14708)
!14756 = !DILocation(line: 6942, column: 31, scope: !14708)
!14757 = !DILocation(line: 6942, column: 53, scope: !14708)
!14758 = !DILocation(line: 6942, column: 41, scope: !14708)
!14759 = !DILocation(line: 6942, column: 39, scope: !14708)
!14760 = !DILocation(line: 0, scope: !14708)
!14761 = distinct !{!14761, !14735, !14762}
!14762 = !DILocation(line: 6942, column: 58, scope: !14708)
!14763 = !DILocation(line: 6944, column: 7, scope: !14764)
!14764 = distinct !DILexicalBlock(scope: !14708, file: !3, line: 6944, column: 7)
!14765 = !DILocation(line: 6944, column: 21, scope: !14764)
!14766 = !DILocation(line: 6944, column: 7, scope: !14708)
!14767 = !DILocation(line: 6945, column: 5, scope: !14764)
!14768 = !DILocation(line: 6945, column: 5, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14770, file: !3, line: 6945, column: 5)
!14770 = distinct !DILexicalBlock(scope: !14764, file: !3, line: 6945, column: 5)
!14771 = !DILocation(line: 6945, column: 5, scope: !14770)
!14772 = !DILocalVariable(name: "__j", scope: !14773, file: !3, line: 6945, type: !849)
!14773 = distinct !DILexicalBlock(scope: !14769, file: !3, line: 6945, column: 5)
!14774 = !DILocation(line: 6945, column: 5, scope: !14773)
!14775 = !DILocalVariable(name: "__s", scope: !14773, file: !3, line: 6945, type: !817)
!14776 = !DILocation(line: 6947, column: 22, scope: !14708)
!14777 = !DILocation(line: 6947, column: 26, scope: !14708)
!14778 = !DILocation(line: 6947, column: 3, scope: !14708)
!14779 = !DILocation(line: 6949, column: 30, scope: !14708)
!14780 = !DILocation(line: 6949, column: 3, scope: !14708)
!14781 = !DILocation(line: 6949, column: 23, scope: !14708)
!14782 = !DILocation(line: 6949, column: 28, scope: !14708)
!14783 = !DILocation(line: 6950, column: 30, scope: !14708)
!14784 = !DILocation(line: 6950, column: 3, scope: !14708)
!14785 = !DILocation(line: 6950, column: 23, scope: !14708)
!14786 = !DILocation(line: 6950, column: 28, scope: !14708)
!14787 = !DILocation(line: 6951, column: 35, scope: !14708)
!14788 = !DILocation(line: 6951, column: 3, scope: !14708)
!14789 = !DILocation(line: 6951, column: 23, scope: !14708)
!14790 = !DILocation(line: 6951, column: 33, scope: !14708)
!14791 = !DILocation(line: 6952, column: 35, scope: !14708)
!14792 = !DILocation(line: 6952, column: 3, scope: !14708)
!14793 = !DILocation(line: 6952, column: 23, scope: !14708)
!14794 = !DILocation(line: 6952, column: 33, scope: !14708)
!14795 = !DILocation(line: 6953, column: 1, scope: !14708)
!14796 = distinct !DISubprogram(name: "reset_sched_cycles_in_current_ebb", scope: !3, file: !3, line: 6957, type: !3289, scopeLine: 6958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!14797 = !DILocalVariable(name: "last_clock", scope: !14796, file: !3, line: 6959, type: !849)
!14798 = !DILocation(line: 6959, column: 7, scope: !14796)
!14799 = !DILocalVariable(name: "haifa_last_clock", scope: !14796, file: !3, line: 6960, type: !849)
!14800 = !DILocation(line: 6960, column: 7, scope: !14796)
!14801 = !DILocalVariable(name: "haifa_clock", scope: !14796, file: !3, line: 6961, type: !849)
!14802 = !DILocation(line: 6961, column: 7, scope: !14796)
!14803 = !DILocalVariable(name: "insn", scope: !14796, file: !3, line: 6962, type: !2132)
!14804 = !DILocation(line: 6962, column: 10, scope: !14796)
!14805 = !DILocation(line: 6964, column: 21, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14796, file: !3, line: 6964, column: 7)
!14807 = !DILocation(line: 6964, column: 7, scope: !14806)
!14808 = !DILocation(line: 6964, column: 7, scope: !14796)
!14809 = !DILocation(line: 6968, column: 21, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14806, file: !3, line: 6965, column: 5)
!14811 = !DILocation(line: 6968, column: 30, scope: !14810)
!14812 = !DILocation(line: 6968, column: 42, scope: !14810)
!14813 = !DILocation(line: 6968, column: 7, scope: !14810)
!14814 = !DILocation(line: 6969, column: 5, scope: !14810)
!14815 = !DILocation(line: 6971, column: 16, scope: !14796)
!14816 = !DILocation(line: 6971, column: 3, scope: !14796)
!14817 = !DILocation(line: 6972, column: 18, scope: !14796)
!14818 = !DILocation(line: 6972, column: 3, scope: !14796)
!14819 = !DILocation(line: 6974, column: 15, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14796, file: !3, line: 6974, column: 3)
!14821 = !DILocation(line: 6974, column: 35, scope: !14820)
!14822 = !DILocation(line: 6974, column: 13, scope: !14820)
!14823 = !DILocation(line: 6974, column: 8, scope: !14820)
!14824 = !DILocation(line: 6975, column: 8, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14820, file: !3, line: 6974, column: 3)
!14826 = !DILocation(line: 6975, column: 16, scope: !14825)
!14827 = !DILocation(line: 6975, column: 36, scope: !14825)
!14828 = !DILocation(line: 6975, column: 13, scope: !14825)
!14829 = !DILocation(line: 6974, column: 3, scope: !14820)
!14830 = !DILocalVariable(name: "cost", scope: !14831, file: !3, line: 6978, type: !849)
!14831 = distinct !DILexicalBlock(scope: !14825, file: !3, line: 6977, column: 5)
!14832 = !DILocation(line: 6978, column: 11, scope: !14831)
!14833 = !DILocalVariable(name: "haifa_cost", scope: !14831, file: !3, line: 6978, type: !849)
!14834 = !DILocation(line: 6978, column: 17, scope: !14831)
!14835 = !DILocalVariable(name: "sort_p", scope: !14831, file: !3, line: 6979, type: !849)
!14836 = !DILocation(line: 6979, column: 11, scope: !14831)
!14837 = !DILocalVariable(name: "asm_p", scope: !14831, file: !3, line: 6980, type: !1057)
!14838 = !DILocation(line: 6980, column: 12, scope: !14831)
!14839 = !DILocalVariable(name: "real_insn", scope: !14831, file: !3, line: 6980, type: !1057)
!14840 = !DILocation(line: 6980, column: 19, scope: !14831)
!14841 = !DILocalVariable(name: "after_stall", scope: !14831, file: !3, line: 6980, type: !1057)
!14842 = !DILocation(line: 6980, column: 30, scope: !14831)
!14843 = !DILocalVariable(name: "clock", scope: !14831, file: !3, line: 6981, type: !849)
!14844 = !DILocation(line: 6981, column: 11, scope: !14831)
!14845 = !DILocation(line: 6983, column: 12, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 6983, column: 11)
!14847 = !DILocation(line: 6983, column: 11, scope: !14831)
!14848 = !DILocation(line: 6984, column: 2, scope: !14846)
!14849 = !DILocation(line: 6986, column: 13, scope: !14831)
!14850 = !DILocation(line: 6987, column: 35, scope: !14831)
!14851 = !DILocation(line: 6987, column: 19, scope: !14831)
!14852 = !DILocation(line: 6987, column: 41, scope: !14831)
!14853 = !DILocation(line: 6987, column: 17, scope: !14831)
!14854 = !DILocation(line: 6988, column: 15, scope: !14831)
!14855 = !DILocation(line: 6988, column: 13, scope: !14831)
!14856 = !DILocation(line: 6990, column: 14, scope: !14831)
!14857 = !DILocation(line: 6990, column: 22, scope: !14831)
!14858 = !DILocation(line: 6990, column: 20, scope: !14831)
!14859 = !DILocation(line: 6990, column: 12, scope: !14831)
!14860 = !DILocation(line: 6993, column: 13, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 6993, column: 11)
!14862 = !DILocation(line: 6993, column: 11, scope: !14831)
!14863 = !DILocation(line: 6995, column: 12, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 6994, column: 2)
!14865 = !DILocation(line: 6995, column: 10, scope: !14864)
!14866 = !DILocation(line: 6997, column: 8, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14864, file: !3, line: 6997, column: 8)
!14868 = !DILocation(line: 6997, column: 8, scope: !14864)
!14869 = !DILocation(line: 7000, column: 17, scope: !14867)
!14870 = !DILocation(line: 7000, column: 6, scope: !14867)
!14871 = !DILocation(line: 7004, column: 17, scope: !14867)
!14872 = !DILocation(line: 7005, column: 2, scope: !14864)
!14873 = !DILocation(line: 7007, column: 42, scope: !14861)
!14874 = !DILocation(line: 7007, column: 48, scope: !14861)
!14875 = !DILocation(line: 7007, column: 22, scope: !14861)
!14876 = !DILocation(line: 7007, column: 20, scope: !14861)
!14877 = !DILocation(line: 7010, column: 19, scope: !14831)
!14878 = !DILocation(line: 7011, column: 11, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 7011, column: 11)
!14880 = !DILocation(line: 7011, column: 37, scope: !14879)
!14881 = !DILocation(line: 7011, column: 40, scope: !14879)
!14882 = !DILocation(line: 7011, column: 47, scope: !14879)
!14883 = !DILocation(line: 7011, column: 45, scope: !14879)
!14884 = !DILocation(line: 7011, column: 11, scope: !14831)
!14885 = !DILocation(line: 7013, column: 24, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14879, file: !3, line: 7012, column: 9)
!14887 = !DILocation(line: 7013, column: 22, scope: !14886)
!14888 = !DILocation(line: 7014, column: 23, scope: !14886)
!14889 = !DILocation(line: 7015, column: 9, scope: !14886)
!14890 = !DILocation(line: 7017, column: 11, scope: !14891)
!14891 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 7017, column: 11)
!14892 = !DILocation(line: 7017, column: 22, scope: !14891)
!14893 = !DILocation(line: 7017, column: 11, scope: !14831)
!14894 = !DILocalVariable(name: "i", scope: !14895, file: !3, line: 7019, type: !849)
!14895 = distinct !DILexicalBlock(scope: !14891, file: !3, line: 7018, column: 2)
!14896 = !DILocation(line: 7019, column: 8, scope: !14895)
!14897 = !DILocation(line: 7021, column: 4, scope: !14895)
!14898 = !DILocation(line: 7021, column: 21, scope: !14895)
!14899 = !DILocation(line: 7023, column: 23, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14895, file: !3, line: 7022, column: 6)
!14901 = !DILocation(line: 7023, column: 8, scope: !14900)
!14902 = !DILocation(line: 7024, column: 16, scope: !14900)
!14903 = !DILocation(line: 7026, column: 12, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14900, file: !3, line: 7026, column: 12)
!14905 = !DILocation(line: 7026, column: 26, scope: !14904)
!14906 = !DILocation(line: 7026, column: 12, scope: !14900)
!14907 = !DILocation(line: 7028, column: 19, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14904, file: !3, line: 7027, column: 17)
!14909 = !DILocation(line: 7028, column: 19, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14911, file: !3, line: 7028, column: 19)
!14911 = distinct !DILexicalBlock(scope: !14908, file: !3, line: 7028, column: 19)
!14912 = !DILocation(line: 7028, column: 19, scope: !14911)
!14913 = !DILocalVariable(name: "__j", scope: !14914, file: !3, line: 7028, type: !849)
!14914 = distinct !DILexicalBlock(scope: !14910, file: !3, line: 7028, column: 19)
!14915 = !DILocation(line: 7028, column: 19, scope: !14914)
!14916 = !DILocalVariable(name: "__s", scope: !14914, file: !3, line: 7028, type: !817)
!14917 = !DILocation(line: 7029, column: 32, scope: !14908)
!14918 = !DILocation(line: 7029, column: 19, scope: !14908)
!14919 = !DILocation(line: 7030, column: 17, scope: !14908)
!14920 = !DILocation(line: 7035, column: 20, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14900, file: !3, line: 7035, column: 19)
!14922 = !DILocation(line: 7036, column: 19, scope: !14921)
!14923 = !DILocation(line: 7036, column: 22, scope: !14921)
!14924 = !DILocation(line: 7037, column: 19, scope: !14921)
!14925 = !DILocation(line: 7037, column: 22, scope: !14921)
!14926 = !DILocation(line: 7037, column: 33, scope: !14921)
!14927 = !DILocation(line: 7038, column: 19, scope: !14921)
!14928 = !DILocation(line: 7038, column: 42, scope: !14921)
!14929 = !DILocation(line: 7038, column: 48, scope: !14921)
!14930 = !DILocation(line: 7038, column: 22, scope: !14921)
!14931 = !DILocation(line: 7038, column: 60, scope: !14921)
!14932 = !DILocation(line: 7035, column: 19, scope: !14900)
!14933 = !DILocation(line: 7039, column: 17, scope: !14921)
!14934 = distinct !{!14934, !14897, !14935}
!14935 = !DILocation(line: 7040, column: 6, scope: !14895)
!14936 = !DILocation(line: 7042, column: 19, scope: !14895)
!14937 = !DILocation(line: 7042, column: 16, scope: !14895)
!14938 = !DILocation(line: 7043, column: 2, scope: !14895)
!14939 = !DILocation(line: 7045, column: 2, scope: !14891)
!14940 = !DILocation(line: 7047, column: 11, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 7047, column: 11)
!14942 = !DILocation(line: 7047, column: 25, scope: !14941)
!14943 = !DILocation(line: 7047, column: 11, scope: !14831)
!14944 = !DILocation(line: 7048, column: 2, scope: !14941)
!14945 = !DILocation(line: 7048, column: 2, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14947, file: !3, line: 7048, column: 2)
!14947 = distinct !DILexicalBlock(scope: !14941, file: !3, line: 7048, column: 2)
!14948 = !DILocation(line: 7048, column: 2, scope: !14947)
!14949 = !DILocalVariable(name: "__j", scope: !14950, file: !3, line: 7048, type: !849)
!14950 = distinct !DILexicalBlock(scope: !14946, file: !3, line: 7048, column: 2)
!14951 = !DILocation(line: 7048, column: 2, scope: !14950)
!14952 = !DILocalVariable(name: "__s", scope: !14950, file: !3, line: 7048, type: !817)
!14953 = !DILocation(line: 7050, column: 25, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 7050, column: 11)
!14955 = !DILocation(line: 7050, column: 11, scope: !14954)
!14956 = !DILocation(line: 7050, column: 11, scope: !14831)
!14957 = !DILocation(line: 7051, column: 2, scope: !14954)
!14958 = !DILocation(line: 7051, column: 23, scope: !14954)
!14959 = !DILocation(line: 7051, column: 38, scope: !14954)
!14960 = !DILocation(line: 7051, column: 50, scope: !14954)
!14961 = !DILocation(line: 7051, column: 65, scope: !14954)
!14962 = !DILocation(line: 7052, column: 10, scope: !14954)
!14963 = !DILocation(line: 7052, column: 28, scope: !14954)
!14964 = !DILocation(line: 7051, column: 9, scope: !14954)
!14965 = !DILocation(line: 7055, column: 21, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14954, file: !3, line: 7054, column: 4)
!14967 = !DILocation(line: 7055, column: 6, scope: !14966)
!14968 = !DILocation(line: 7056, column: 17, scope: !14966)
!14969 = !DILocation(line: 7057, column: 10, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14966, file: !3, line: 7057, column: 10)
!14971 = !DILocation(line: 7057, column: 24, scope: !14970)
!14972 = !DILocation(line: 7057, column: 10, scope: !14966)
!14973 = !DILocation(line: 7059, column: 17, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14970, file: !3, line: 7058, column: 15)
!14975 = !DILocation(line: 7059, column: 17, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14977, file: !3, line: 7059, column: 17)
!14977 = distinct !DILexicalBlock(scope: !14974, file: !3, line: 7059, column: 17)
!14978 = !DILocation(line: 7059, column: 17, scope: !14977)
!14979 = !DILocalVariable(name: "__j", scope: !14980, file: !3, line: 7059, type: !849)
!14980 = distinct !DILexicalBlock(scope: !14976, file: !3, line: 7059, column: 17)
!14981 = !DILocation(line: 7059, column: 17, scope: !14980)
!14982 = !DILocalVariable(name: "__s", scope: !14980, file: !3, line: 7059, type: !817)
!14983 = !DILocation(line: 7060, column: 30, scope: !14974)
!14984 = !DILocation(line: 7060, column: 17, scope: !14974)
!14985 = !DILocation(line: 7061, column: 15, scope: !14974)
!14986 = distinct !{!14986, !14957, !14987}
!14987 = !DILocation(line: 7062, column: 11, scope: !14954)
!14988 = !DILocation(line: 7064, column: 11, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 7064, column: 11)
!14990 = !DILocation(line: 7064, column: 11, scope: !14831)
!14991 = !DILocation(line: 7066, column: 29, scope: !14992)
!14992 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 7065, column: 2)
!14993 = !DILocation(line: 7066, column: 41, scope: !14992)
!14994 = !DILocation(line: 7066, column: 11, scope: !14992)
!14995 = !DILocation(line: 7066, column: 9, scope: !14992)
!14996 = !DILocation(line: 7068, column: 15, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14992, file: !3, line: 7068, column: 15)
!14998 = !DILocation(line: 7068, column: 29, scope: !14997)
!14999 = !DILocation(line: 7068, column: 15, scope: !14992)
!15000 = !DILocation(line: 7069, column: 26, scope: !14997)
!15001 = !DILocation(line: 7069, column: 13, scope: !14997)
!15002 = !DILocation(line: 7071, column: 4, scope: !14992)
!15003 = !DILocation(line: 7072, column: 2, scope: !14992)
!15004 = !DILocation(line: 7074, column: 25, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 7074, column: 11)
!15006 = !DILocation(line: 7074, column: 11, scope: !15005)
!15007 = !DILocation(line: 7074, column: 11, scope: !14831)
!15008 = !DILocation(line: 7075, column: 16, scope: !15005)
!15009 = !DILocation(line: 7075, column: 32, scope: !15005)
!15010 = !DILocation(line: 7075, column: 44, scope: !15005)
!15011 = !DILocation(line: 7075, column: 59, scope: !15005)
!15012 = !DILocation(line: 7075, column: 2, scope: !15005)
!15013 = !DILocation(line: 7077, column: 33, scope: !14831)
!15014 = !DILocation(line: 7077, column: 7, scope: !14831)
!15015 = !DILocation(line: 7077, column: 31, scope: !14831)
!15016 = !DILocation(line: 7079, column: 20, scope: !14831)
!15017 = !DILocation(line: 7079, column: 18, scope: !14831)
!15018 = !DILocation(line: 7080, column: 26, scope: !14831)
!15019 = !DILocation(line: 7080, column: 24, scope: !14831)
!15020 = !DILocation(line: 7081, column: 5, scope: !14831)
!15021 = !DILocation(line: 6976, column: 15, scope: !14825)
!15022 = !DILocation(line: 6976, column: 13, scope: !14825)
!15023 = !DILocation(line: 6974, column: 3, scope: !14825)
!15024 = distinct !{!15024, !14829, !15025}
!15025 = !DILocation(line: 7081, column: 5, scope: !14820)
!15026 = !DILocation(line: 7082, column: 1, scope: !14796)
!15027 = distinct !DISubprogram(name: "put_TImodes", scope: !3, file: !3, line: 7086, type: !3289, scopeLine: 7087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!15028 = !DILocalVariable(name: "last_clock", scope: !15027, file: !3, line: 7088, type: !849)
!15029 = !DILocation(line: 7088, column: 7, scope: !15027)
!15030 = !DILocalVariable(name: "insn", scope: !15027, file: !3, line: 7089, type: !2132)
!15031 = !DILocation(line: 7089, column: 10, scope: !15027)
!15032 = !DILocation(line: 7091, column: 15, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !15027, file: !3, line: 7091, column: 3)
!15034 = !DILocation(line: 7091, column: 35, scope: !15033)
!15035 = !DILocation(line: 7091, column: 13, scope: !15033)
!15036 = !DILocation(line: 7091, column: 8, scope: !15033)
!15037 = !DILocation(line: 7091, column: 41, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15033, file: !3, line: 7091, column: 3)
!15039 = !DILocation(line: 7091, column: 49, scope: !15038)
!15040 = !DILocation(line: 7091, column: 69, scope: !15038)
!15041 = !DILocation(line: 7091, column: 46, scope: !15038)
!15042 = !DILocation(line: 7091, column: 3, scope: !15033)
!15043 = !DILocalVariable(name: "cost", scope: !15044, file: !3, line: 7094, type: !849)
!15044 = distinct !DILexicalBlock(scope: !15038, file: !3, line: 7093, column: 5)
!15045 = !DILocation(line: 7094, column: 11, scope: !15044)
!15046 = !DILocalVariable(name: "clock", scope: !15044, file: !3, line: 7094, type: !849)
!15047 = !DILocation(line: 7094, column: 17, scope: !15044)
!15048 = !DILocation(line: 7096, column: 12, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15044, file: !3, line: 7096, column: 11)
!15050 = !DILocation(line: 7096, column: 11, scope: !15044)
!15051 = !DILocation(line: 7097, column: 2, scope: !15049)
!15052 = !DILocation(line: 7099, column: 15, scope: !15044)
!15053 = !DILocation(line: 7099, column: 13, scope: !15044)
!15054 = !DILocation(line: 7100, column: 15, scope: !15044)
!15055 = !DILocation(line: 7100, column: 26, scope: !15044)
!15056 = !DILocation(line: 7100, column: 14, scope: !15044)
!15057 = !DILocation(line: 7100, column: 39, scope: !15044)
!15058 = !DILocation(line: 7100, column: 47, scope: !15044)
!15059 = !DILocation(line: 7100, column: 45, scope: !15044)
!15060 = !DILocation(line: 7100, column: 12, scope: !15044)
!15061 = !DILocation(line: 7102, column: 7, scope: !15044)
!15062 = !DILocation(line: 7104, column: 11, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15044, file: !3, line: 7104, column: 11)
!15064 = !DILocation(line: 7104, column: 22, scope: !15063)
!15065 = !DILocation(line: 7105, column: 4, scope: !15063)
!15066 = !DILocation(line: 7105, column: 7, scope: !15063)
!15067 = !DILocation(line: 7105, column: 33, scope: !15063)
!15068 = !DILocation(line: 7106, column: 4, scope: !15063)
!15069 = !DILocation(line: 7106, column: 7, scope: !15063)
!15070 = !DILocation(line: 7106, column: 33, scope: !15063)
!15071 = !DILocation(line: 7104, column: 11, scope: !15044)
!15072 = !DILocation(line: 7108, column: 8, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15074, file: !3, line: 7108, column: 8)
!15074 = distinct !DILexicalBlock(scope: !15063, file: !3, line: 7107, column: 2)
!15075 = !DILocation(line: 7108, column: 25, scope: !15073)
!15076 = !DILocation(line: 7108, column: 28, scope: !15073)
!15077 = !DILocation(line: 7108, column: 33, scope: !15073)
!15078 = !DILocation(line: 7108, column: 8, scope: !15074)
!15079 = !DILocation(line: 7109, column: 6, scope: !15073)
!15080 = !DILocation(line: 7111, column: 17, scope: !15074)
!15081 = !DILocation(line: 7111, column: 15, scope: !15074)
!15082 = !DILocation(line: 7112, column: 2, scope: !15074)
!15083 = !DILocation(line: 7114, column: 11, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15044, file: !3, line: 7114, column: 11)
!15085 = !DILocation(line: 7114, column: 25, scope: !15084)
!15086 = !DILocation(line: 7114, column: 11, scope: !15044)
!15087 = !DILocation(line: 7115, column: 2, scope: !15084)
!15088 = !DILocation(line: 7115, column: 2, scope: !15089)
!15089 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 7115, column: 2)
!15090 = distinct !DILexicalBlock(scope: !15084, file: !3, line: 7115, column: 2)
!15091 = !DILocation(line: 7115, column: 2, scope: !15090)
!15092 = !DILocalVariable(name: "__j", scope: !15093, file: !3, line: 7115, type: !849)
!15093 = distinct !DILexicalBlock(scope: !15089, file: !3, line: 7115, column: 2)
!15094 = !DILocation(line: 7115, column: 2, scope: !15093)
!15095 = !DILocalVariable(name: "__s", scope: !15093, file: !3, line: 7115, type: !817)
!15096 = !DILocation(line: 7116, column: 5, scope: !15044)
!15097 = !DILocation(line: 7092, column: 15, scope: !15038)
!15098 = !DILocation(line: 7092, column: 13, scope: !15038)
!15099 = !DILocation(line: 7091, column: 3, scope: !15038)
!15100 = distinct !{!15100, !15042, !15101}
!15101 = !DILocation(line: 7116, column: 5, scope: !15033)
!15102 = !DILocation(line: 7117, column: 1, scope: !15027)
!15103 = distinct !DISubprogram(name: "bb_next_bb", scope: !398, file: !398, line: 1465, type: !15104, scopeLine: 1466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!15104 = !DISubroutineType(types: !15105)
!15105 = !{!1362, !1362}
!15106 = !DILocalVariable(name: "bb", arg: 1, scope: !15103, file: !398, line: 1465, type: !1362)
!15107 = !DILocation(line: 1465, column: 25, scope: !15103)
!15108 = !DILocation(line: 1467, column: 11, scope: !15103)
!15109 = !DILocation(line: 1467, column: 3, scope: !15103)
!15110 = !DILocation(line: 1470, column: 14, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15103, file: !398, line: 1468, column: 5)
!15112 = !DILocation(line: 1470, column: 18, scope: !15111)
!15113 = !DILocation(line: 1470, column: 7, scope: !15111)
!15114 = !DILocation(line: 1473, column: 27, scope: !15111)
!15115 = !DILocation(line: 1473, column: 14, scope: !15111)
!15116 = !DILocation(line: 1473, column: 7, scope: !15111)
!15117 = !DILocation(line: 1476, column: 14, scope: !15111)
!15118 = !DILocation(line: 1476, column: 34, scope: !15111)
!15119 = !DILocation(line: 1476, column: 7, scope: !15111)
!15120 = !DILocation(line: 1479, column: 14, scope: !15111)
!15121 = !DILocation(line: 1479, column: 18, scope: !15111)
!15122 = !DILocation(line: 1479, column: 7, scope: !15111)
!15123 = !DILocation(line: 1483, column: 1, scope: !15103)
!15124 = distinct !DISubprogram(name: "init_hard_regs_data", scope: !3, file: !3, line: 1171, type: !3289, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2404)
!15125 = !DILocalVariable(name: "cur_reg", scope: !15124, file: !3, line: 1173, type: !849)
!15126 = !DILocation(line: 1173, column: 7, scope: !15124)
!15127 = !DILocalVariable(name: "cur_mode", scope: !15124, file: !3, line: 1174, type: !849)
!15128 = !DILocation(line: 1174, column: 7, scope: !15124)
!15129 = !DILocation(line: 1176, column: 3, scope: !15124)
!15130 = !DILocation(line: 1177, column: 16, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15124, file: !3, line: 1177, column: 3)
!15132 = !DILocation(line: 1177, column: 8, scope: !15131)
!15133 = !DILocation(line: 1177, column: 21, scope: !15134)
!15134 = distinct !DILexicalBlock(scope: !15131, file: !3, line: 1177, column: 3)
!15135 = !DILocation(line: 1177, column: 29, scope: !15134)
!15136 = !DILocation(line: 1177, column: 3, scope: !15131)
!15137 = !DILocation(line: 1178, column: 30, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !15134, file: !3, line: 1178, column: 9)
!15139 = !DILocation(line: 1178, column: 9, scope: !15138)
!15140 = !DILocation(line: 1178, column: 39, scope: !15138)
!15141 = !DILocation(line: 1178, column: 57, scope: !15138)
!15142 = !DILocation(line: 1178, column: 42, scope: !15138)
!15143 = !DILocation(line: 1178, column: 9, scope: !15134)
!15144 = !DILocation(line: 1179, column: 7, scope: !15138)
!15145 = !DILocation(line: 1178, column: 64, scope: !15138)
!15146 = !DILocation(line: 1177, column: 61, scope: !15134)
!15147 = !DILocation(line: 1177, column: 3, scope: !15134)
!15148 = distinct !{!15148, !15136, !15149}
!15149 = !DILocation(line: 1179, column: 7, scope: !15131)
!15150 = !DILocation(line: 1183, column: 17, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15124, file: !3, line: 1183, column: 3)
!15152 = !DILocation(line: 1183, column: 8, scope: !15151)
!15153 = !DILocation(line: 1183, column: 22, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15151, file: !3, line: 1183, column: 3)
!15155 = !DILocation(line: 1183, column: 31, scope: !15154)
!15156 = !DILocation(line: 1183, column: 3, scope: !15151)
!15157 = !DILocation(line: 1184, column: 30, scope: !15154)
!15158 = !DILocation(line: 1184, column: 5, scope: !15154)
!15159 = !DILocation(line: 1184, column: 40, scope: !15154)
!15160 = !DILocation(line: 1183, column: 60, scope: !15154)
!15161 = !DILocation(line: 1183, column: 3, scope: !15154)
!15162 = distinct !{!15162, !15156, !15163}
!15163 = !DILocation(line: 1184, column: 42, scope: !15151)
!15164 = !DILocation(line: 1187, column: 16, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15124, file: !3, line: 1187, column: 3)
!15166 = !DILocation(line: 1187, column: 8, scope: !15165)
!15167 = !DILocation(line: 1187, column: 21, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !15165, file: !3, line: 1187, column: 3)
!15169 = !DILocation(line: 1187, column: 29, scope: !15168)
!15170 = !DILocation(line: 1187, column: 3, scope: !15165)
!15171 = !DILocation(line: 1188, column: 5, scope: !15168)
!15172 = !DILocation(line: 1187, column: 61, scope: !15168)
!15173 = !DILocation(line: 1187, column: 3, scope: !15168)
!15174 = distinct !{!15174, !15170, !15175}
!15175 = !DILocation(line: 1188, column: 5, scope: !15165)
!15176 = !DILocation(line: 1191, column: 3, scope: !15124)
!15177 = !DILocation(line: 1193, column: 16, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15124, file: !3, line: 1193, column: 3)
!15179 = !DILocation(line: 1193, column: 8, scope: !15178)
!15180 = !DILocation(line: 1193, column: 35, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 1193, column: 3)
!15182 = !DILocation(line: 1193, column: 43, scope: !15181)
!15183 = !DILocation(line: 1193, column: 3, scope: !15178)
!15184 = !DILocation(line: 1194, column: 5, scope: !15181)
!15185 = !DILocation(line: 1193, column: 69, scope: !15181)
!15186 = !DILocation(line: 1193, column: 3, scope: !15181)
!15187 = distinct !{!15187, !15183, !15188}
!15188 = !DILocation(line: 1194, column: 5, scope: !15178)
!15189 = !DILocation(line: 1196, column: 1, scope: !15124)
