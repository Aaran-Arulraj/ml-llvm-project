; ModuleID = 'blender/source/blender/render/intern/source/rayshade.c'
source_filename = "blender/source/blender/render/intern/source/rayshade.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Group = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.MainLock = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type opaque
%struct.SpaceNode = type opaque
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon.0, %struct.StructRNA*, i8* }
%struct.anon.0 = type { i8* }
%struct.ImBuf = type opaque
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.Text = type opaque
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.RenderEngine = type opaque
%struct.RayObject = type { %struct.RayObjectAPI*, %struct.RayObjectControl }
%struct.RayObjectAPI = type { i32 (%struct.RayObject*, %struct.Isect*)*, void (%struct.RayObject*, %struct.RayObject*)*, void (%struct.RayObject*)*, void (%struct.RayObject*)*, void (%struct.RayObject*, float*, float*)*, float (%struct.RayObject*)*, void (%struct.RayObject*, %struct.RayHint*, float*, float*)* }
%struct.Isect = type { [3 x float], [3 x float], float, [3 x float], [3 x float], [6 x i32], [3 x float], i32, i32, i32, i32, i8*, float, float, i32, %struct.anon, %struct.anon, %struct.RayObject*, %struct.RayHint* }
%struct.anon = type { i8*, i8* }
%struct.RayHint = type { %union.anon }
%union.anon = type { %struct.LCTSHint }
%struct.LCTSHint = type { i32, [256 x %struct.RayObject*] }
%struct.RayObjectControl = type { i8*, i32 (i8*)* }
%struct.RayFace = type { [4 x float], [4 x float], [4 x float], [3 x float], i32, i8*, i8* }
%struct.VlakPrimitive = type { %struct.ObjectInstanceRen*, %struct.VlakRen* }
%struct.VlakRen = type { %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, [3 x float], %struct.Material*, i8, i8, i8, i32 }
%struct.VertRen = type { [3 x float], [3 x float], float*, i32, float, i32 }
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.VertTableNode = type { %struct.VertRen*, float*, float*, float*, float*, float*, i32* }
%struct.VlakTableNode = type { %struct.VlakRen*, %struct.MTFace*, %struct.MCol*, i32*, i32, i32, float*, float*, %struct.RadFace** }
%struct.MTFace = type opaque
%struct.MCol = type opaque
%struct.RadFace = type { [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.StrandTableNode = type { %struct.StrandRen*, float*, float*, float*, i32*, %struct.MCol*, float*, i32, i32 }
%struct.StrandRen = type { %struct.StrandVert*, %struct.StrandBuffer*, i32, i32, i32, i32, [3 x float] }
%struct.StrandVert = type { [3 x float], float }
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.anim = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.GHash = type opaque
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.ListBase = type { i8*, i8* }
%struct.MemArena = type opaque
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type opaque
%struct.ImagePool = type opaque
%struct.EvaluationContext = type opaque
%struct.ShadeInput = type { %struct.Material*, %struct.VlakRen*, %struct.StrandRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, i32, [3 x float], i16, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, i16, i16, i16, i16, i16, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], float, [3 x float], [3 x float], [4 x float], float, [4 x float], [3 x float], [3 x float], [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputCol], i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], i32, i32, i32, [3 x float], i32, i32, i32, [3 x float], float, i8, i8, i16, i16, i16, i32, i32, i32, i32, %struct.Group*, %struct.Material* }
%struct.ShadeInputUV = type { [3 x float], [3 x float], [3 x float], i8* }
%struct.ShadeInputCol = type { [4 x float], i8* }
%struct.ShadeResult = type { [4 x float], [4 x float], float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float] }
%struct.LampRen = type { %struct.LampRen*, %struct.LampRen*, float, float, float, [3 x float], i16, i32, float, float, float, float, float, float, float, float, float, i32, float, float, [3 x float], float, float, float, float, float, float, i16, float, float, %struct.CurveMapping*, i16, i16, float, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, [1 x i16], [1 x i16], float, float, float, float, %struct.SunSky*, %struct.ShadBuf*, float*, [3 x [3 x float]], float, [3 x float], float, [4 x [4 x float]], [3 x [3 x float]], [8 x [3 x float]], float, %struct.LampShadowSample*, [1 x %struct.RayObject*], [18 x %struct.MTex*], i32, i32 }
%struct.SunSky = type { i16, i16, i16, float, float, float, [3 x float], float, float, float, float, [5 x float], [5 x float], [5 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.ShadBuf = type { i16, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float*, float*, float, float, float, float, float, [3 x i32], i32, i32, %struct.ListBase, [1 x %struct.ISBData*] }
%struct.ISBData = type opaque
%struct.LampShadowSample = type { [16 x %struct.LampShadowSubSample] }
%struct.LampShadowSubSample = type { i32, [4 x float] }
%struct.RNG = type opaque
%struct.QMCSampler = type { %struct.QMCSampler*, %struct.QMCSampler*, i32, i32, i32, double*, [1 x [2 x double]] }

@.str = private unnamed_addr constant [55 x i8] c"Warning: Using VBVH (SSE was disabled at compile time)\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"ObjectRen primitives\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"ObjectRen faces\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"Raytree.. preparing\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"Raytree building canceled\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"Raytree finished\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"lamp jitter tab\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"QMCListBase\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.8 = private unnamed_addr constant [10 x i8] c"AO sphere\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"AO tables\00", align 1
@R = external dso_local global %struct.Render, align 8
@__const.ray_shadow.col = private unnamed_addr constant [4 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 16
@.str.10 = private unnamed_addr constant [25 x i8] c"Raytrace vlak-primitives\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"Render ray faces\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"Raytree.. building\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"qmc sampler\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"qmc sample table\00", align 1
@threadsafe_table_sphere.xso = internal global [1 x i32] zeroinitializer, align 4, !dbg !0
@threadsafe_table_sphere.yso = internal global [1 x i32] zeroinitializer, align 4, !dbg !2769
@threadsafe_table_sphere.firsttime = internal global i32 1, align 4, !dbg !2771
@__const.ray_shadow_qmc.col = private unnamed_addr constant [4 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 16
@__const.ray_shadow_jittered_coords.order8 = private unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 5, i32 6, i32 2, i32 3, i32 4, i32 7], align 16
@__const.ray_shadow_jittered_coords.order11 = private unnamed_addr constant [11 x i32] [i32 1, i32 3, i32 8, i32 10, i32 0, i32 2, i32 4, i32 5, i32 6, i32 7, i32 9], align 16
@__const.ray_shadow_jittered_coords.order16 = private unnamed_addr constant [16 x i32] [i32 1, i32 3, i32 9, i32 12, i32 0, i32 6, i32 7, i32 8, i32 13, i32 2, i32 4, i32 5, i32 10, i32 11, i32 14, i32 15], align 16
@__const.ray_shadow_jitter.col = private unnamed_addr constant [4 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 16

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RayObject* @RE_rayobject_create(i32 %type, i32 %size, i32 %octree_resolution) #0 !dbg !2778 {
entry:
  %type.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %octree_resolution.addr = alloca i32, align 4
  %res = alloca %struct.RayObject*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2781, metadata !DIExpression()), !dbg !2782
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !2783, metadata !DIExpression()), !dbg !2784
  store i32 %octree_resolution, i32* %octree_resolution.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %octree_resolution.addr, metadata !2785, metadata !DIExpression()), !dbg !2786
  call void @llvm.dbg.declare(metadata %struct.RayObject** %res, metadata !2787, metadata !DIExpression()), !dbg !2788
  store %struct.RayObject* null, %struct.RayObject** %res, align 8, !dbg !2788
  %0 = load i32, i32* %type.addr, align 4, !dbg !2789
  %cmp = icmp eq i32 %0, 0, !dbg !2791
  br i1 %cmp, label %if.then, label %if.end, !dbg !2792

if.then:                                          ; preds = %entry
  store i32 3, i32* %type.addr, align 4, !dbg !2793
  br label %if.end, !dbg !2795

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !2796
  %cmp1 = icmp eq i32 %1, 4, !dbg !2798
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !2799

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i32, i32* %type.addr, align 4, !dbg !2800
  %cmp2 = icmp eq i32 %2, 5, !dbg !2801
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2802

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %call = call i32 @puts(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0)), !dbg !2803
  store i32 3, i32* %type.addr, align 4, !dbg !2805
  br label %if.end4, !dbg !2806

if.end4:                                          ; preds = %if.then3, %lor.lhs.false
  %3 = load i32, i32* %type.addr, align 4, !dbg !2807
  %cmp5 = icmp eq i32 %3, 1, !dbg !2809
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !2810

if.then6:                                         ; preds = %if.end4
  %4 = load i32, i32* %octree_resolution.addr, align 4, !dbg !2811
  %5 = load i32, i32* %size.addr, align 4, !dbg !2812
  %call7 = call %struct.RayObject* @RE_rayobject_octree_create(i32 %4, i32 %5), !dbg !2813
  store %struct.RayObject* %call7, %struct.RayObject** %res, align 8, !dbg !2814
  br label %if.end24, !dbg !2815

if.else:                                          ; preds = %if.end4
  %6 = load i32, i32* %type.addr, align 4, !dbg !2816
  %cmp8 = icmp eq i32 %6, 3, !dbg !2818
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !2819

if.then9:                                         ; preds = %if.else
  %7 = load i32, i32* %size.addr, align 4, !dbg !2820
  %call10 = call %struct.RayObject* @RE_rayobject_vbvh_create(i32 %7), !dbg !2821
  store %struct.RayObject* %call10, %struct.RayObject** %res, align 8, !dbg !2822
  br label %if.end23, !dbg !2823

if.else11:                                        ; preds = %if.else
  %8 = load i32, i32* %type.addr, align 4, !dbg !2824
  %cmp12 = icmp eq i32 %8, 4, !dbg !2826
  br i1 %cmp12, label %if.then13, label %if.else15, !dbg !2827

if.then13:                                        ; preds = %if.else11
  %9 = load i32, i32* %size.addr, align 4, !dbg !2828
  %call14 = call %struct.RayObject* @RE_rayobject_svbvh_create(i32 %9), !dbg !2829
  store %struct.RayObject* %call14, %struct.RayObject** %res, align 8, !dbg !2830
  br label %if.end22, !dbg !2831

if.else15:                                        ; preds = %if.else11
  %10 = load i32, i32* %type.addr, align 4, !dbg !2832
  %cmp16 = icmp eq i32 %10, 5, !dbg !2834
  br i1 %cmp16, label %if.then17, label %if.else19, !dbg !2835

if.then17:                                        ; preds = %if.else15
  %11 = load i32, i32* %size.addr, align 4, !dbg !2836
  %call18 = call %struct.RayObject* @RE_rayobject_qbvh_create(i32 %11), !dbg !2837
  store %struct.RayObject* %call18, %struct.RayObject** %res, align 8, !dbg !2838
  br label %if.end21, !dbg !2839

if.else19:                                        ; preds = %if.else15
  %12 = load i32, i32* %size.addr, align 4, !dbg !2840
  %call20 = call %struct.RayObject* @RE_rayobject_vbvh_create(i32 %12), !dbg !2841
  store %struct.RayObject* %call20, %struct.RayObject** %res, align 8, !dbg !2842
  br label %if.end21

if.end21:                                         ; preds = %if.else19, %if.then17
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then13
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then9
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then6
  %13 = load %struct.RayObject*, %struct.RayObject** %res, align 8, !dbg !2843
  ret %struct.RayObject* %13, !dbg !2844
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @puts(i8*) #2

declare dso_local %struct.RayObject* @RE_rayobject_octree_create(i32, i32) #2

declare dso_local %struct.RayObject* @RE_rayobject_vbvh_create(i32) #2

declare dso_local %struct.RayObject* @RE_rayobject_svbvh_create(i32) #2

declare dso_local %struct.RayObject* @RE_rayobject_qbvh_create(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @freeraytree(%struct.Render* %re) #0 !dbg !2845 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !2848, metadata !DIExpression()), !dbg !2849
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !2850, metadata !DIExpression()), !dbg !2851
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2852
  %raytree = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 52, !dbg !2854
  %1 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !2854
  %tobool = icmp ne %struct.RayObject* %1, null, !dbg !2852
  br i1 %tobool, label %if.then, label %if.end, !dbg !2855

if.then:                                          ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2856
  %raytree1 = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 52, !dbg !2858
  %3 = load %struct.RayObject*, %struct.RayObject** %raytree1, align 8, !dbg !2858
  call void @RE_rayobject_free(%struct.RayObject* %3), !dbg !2859
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2860
  %raytree2 = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 52, !dbg !2861
  store %struct.RayObject* null, %struct.RayObject** %raytree2, align 8, !dbg !2862
  br label %if.end, !dbg !2863

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2864
  %rayfaces = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 53, !dbg !2866
  %6 = load %struct.RayFace*, %struct.RayFace** %rayfaces, align 8, !dbg !2866
  %tobool3 = icmp ne %struct.RayFace* %6, null, !dbg !2864
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !2867

if.then4:                                         ; preds = %if.end
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2868
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2870
  %rayfaces5 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 53, !dbg !2871
  %9 = load %struct.RayFace*, %struct.RayFace** %rayfaces5, align 8, !dbg !2871
  %10 = bitcast %struct.RayFace* %9 to i8*, !dbg !2870
  call void %7(i8* %10), !dbg !2868
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2872
  %rayfaces6 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 53, !dbg !2873
  store %struct.RayFace* null, %struct.RayFace** %rayfaces6, align 8, !dbg !2874
  br label %if.end7, !dbg !2875

if.end7:                                          ; preds = %if.then4, %if.end
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2876
  %rayprimitives = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 54, !dbg !2878
  %13 = load %struct.VlakPrimitive*, %struct.VlakPrimitive** %rayprimitives, align 8, !dbg !2878
  %tobool8 = icmp ne %struct.VlakPrimitive* %13, null, !dbg !2876
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !2879

if.then9:                                         ; preds = %if.end7
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2880
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2882
  %rayprimitives10 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 54, !dbg !2883
  %16 = load %struct.VlakPrimitive*, %struct.VlakPrimitive** %rayprimitives10, align 8, !dbg !2883
  %17 = bitcast %struct.VlakPrimitive* %16 to i8*, !dbg !2882
  call void %14(i8* %17), !dbg !2880
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2884
  %rayprimitives11 = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 54, !dbg !2885
  store %struct.VlakPrimitive* null, %struct.VlakPrimitive** %rayprimitives11, align 8, !dbg !2886
  br label %if.end12, !dbg !2887

if.end12:                                         ; preds = %if.then9, %if.end7
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2888
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 70, !dbg !2890
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !2891
  %20 = load i8*, i8** %first, align 8, !dbg !2891
  %21 = bitcast i8* %20 to %struct.ObjectInstanceRen*, !dbg !2888
  store %struct.ObjectInstanceRen* %21, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2892
  br label %for.cond, !dbg !2893

for.cond:                                         ; preds = %for.inc, %if.end12
  %22 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2894
  %tobool13 = icmp ne %struct.ObjectInstanceRen* %22, null, !dbg !2896
  br i1 %tobool13, label %for.body, label %for.end, !dbg !2896

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !2897, metadata !DIExpression()), !dbg !2899
  %23 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2900
  %obr14 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %23, i32 0, i32 2, !dbg !2901
  %24 = load %struct.ObjectRen*, %struct.ObjectRen** %obr14, align 8, !dbg !2901
  store %struct.ObjectRen* %24, %struct.ObjectRen** %obr, align 8, !dbg !2899
  %25 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2902
  %raytree15 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %25, i32 0, i32 29, !dbg !2904
  %26 = load %struct.RayObject*, %struct.RayObject** %raytree15, align 8, !dbg !2904
  %tobool16 = icmp ne %struct.RayObject* %26, null, !dbg !2902
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !2905

if.then17:                                        ; preds = %for.body
  %27 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2906
  %raytree18 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %27, i32 0, i32 29, !dbg !2908
  %28 = load %struct.RayObject*, %struct.RayObject** %raytree18, align 8, !dbg !2908
  call void @RE_rayobject_free(%struct.RayObject* %28), !dbg !2909
  %29 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2910
  %raytree19 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %29, i32 0, i32 29, !dbg !2911
  store %struct.RayObject* null, %struct.RayObject** %raytree19, align 8, !dbg !2912
  br label %if.end20, !dbg !2913

if.end20:                                         ; preds = %if.then17, %for.body
  %30 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2914
  %rayfaces21 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %30, i32 0, i32 30, !dbg !2916
  %31 = load %struct.RayFace*, %struct.RayFace** %rayfaces21, align 8, !dbg !2916
  %tobool22 = icmp ne %struct.RayFace* %31, null, !dbg !2914
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !2917

if.then23:                                        ; preds = %if.end20
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2918
  %33 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2920
  %rayfaces24 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %33, i32 0, i32 30, !dbg !2921
  %34 = load %struct.RayFace*, %struct.RayFace** %rayfaces24, align 8, !dbg !2921
  %35 = bitcast %struct.RayFace* %34 to i8*, !dbg !2920
  call void %32(i8* %35), !dbg !2918
  %36 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2922
  %rayfaces25 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %36, i32 0, i32 30, !dbg !2923
  store %struct.RayFace* null, %struct.RayFace** %rayfaces25, align 8, !dbg !2924
  br label %if.end26, !dbg !2925

if.end26:                                         ; preds = %if.then23, %if.end20
  %37 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2926
  %raytree27 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %37, i32 0, i32 18, !dbg !2928
  %38 = load %struct.RayObject*, %struct.RayObject** %raytree27, align 8, !dbg !2928
  %tobool28 = icmp ne %struct.RayObject* %38, null, !dbg !2926
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !2929

if.then29:                                        ; preds = %if.end26
  %39 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2930
  %raytree30 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %39, i32 0, i32 18, !dbg !2932
  %40 = load %struct.RayObject*, %struct.RayObject** %raytree30, align 8, !dbg !2932
  call void @RE_rayobject_free(%struct.RayObject* %40), !dbg !2933
  %41 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2934
  %raytree31 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %41, i32 0, i32 18, !dbg !2935
  store %struct.RayObject* null, %struct.RayObject** %raytree31, align 8, !dbg !2936
  br label %if.end32, !dbg !2937

if.end32:                                         ; preds = %if.then29, %if.end26
  br label %for.inc, !dbg !2938

for.inc:                                          ; preds = %if.end32
  %42 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2939
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %42, i32 0, i32 0, !dbg !2940
  %43 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !2940
  store %struct.ObjectInstanceRen* %43, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2941
  br label %for.cond, !dbg !2942, !llvm.loop !2943

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2945
}

declare dso_local void @RE_rayobject_free(%struct.RayObject*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RayObject* @makeraytree_object(%struct.Render* %re, %struct.ObjectInstanceRen* %obi) #0 !dbg !2946 {
entry:
  %retval = alloca %struct.RayObject*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %raytree2 = alloca %struct.RayObject*, align 8
  %face = alloca %struct.RayFace*, align 8
  %vlakprimitive = alloca %struct.VlakPrimitive*, align 8
  %v = alloca i32, align 4
  %faces = alloca i32, align 4
  %vlr = alloca %struct.VlakRen*, align 8
  %vlr25 = alloca %struct.VlakRen*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !2949, metadata !DIExpression()), !dbg !2950
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !2951, metadata !DIExpression()), !dbg !2952
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !2953, metadata !DIExpression()), !dbg !2954
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !2955
  %obr1 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i32 0, i32 2, !dbg !2956
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr1, align 8, !dbg !2956
  store %struct.ObjectRen* %1, %struct.ObjectRen** %obr, align 8, !dbg !2954
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2957
  %raytree = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 29, !dbg !2959
  %3 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !2959
  %cmp = icmp eq %struct.RayObject* %3, null, !dbg !2960
  br i1 %cmp, label %if.then, label %if.end57, !dbg !2961

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.RayObject** %raytree2, metadata !2962, metadata !DIExpression()), !dbg !2964
  call void @llvm.dbg.declare(metadata %struct.RayFace** %face, metadata !2965, metadata !DIExpression()), !dbg !2966
  store %struct.RayFace* null, %struct.RayFace** %face, align 8, !dbg !2966
  call void @llvm.dbg.declare(metadata %struct.VlakPrimitive** %vlakprimitive, metadata !2967, metadata !DIExpression()), !dbg !2968
  store %struct.VlakPrimitive* null, %struct.VlakPrimitive** %vlakprimitive, align 8, !dbg !2968
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2969, metadata !DIExpression()), !dbg !2970
  call void @llvm.dbg.declare(metadata i32* %faces, metadata !2971, metadata !DIExpression()), !dbg !2972
  store i32 0, i32* %faces, align 4, !dbg !2972
  store i32 0, i32* %v, align 4, !dbg !2973
  br label %for.cond, !dbg !2975

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %v, align 4, !dbg !2976
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2978
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %5, i32 0, i32 11, !dbg !2979
  %6 = load i32, i32* %totvlak, align 4, !dbg !2979
  %cmp3 = icmp slt i32 %4, %6, !dbg !2980
  br i1 %cmp3, label %for.body, label %for.end, !dbg !2981

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !2982, metadata !DIExpression()), !dbg !2984
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2985
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %7, i32 0, i32 19, !dbg !2986
  %8 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !2986
  %9 = load i32, i32* %v, align 4, !dbg !2987
  %shr = ashr i32 %9, 8, !dbg !2988
  %idxprom = sext i32 %shr to i64, !dbg !2985
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %8, i64 %idxprom, !dbg !2985
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 0, !dbg !2989
  %10 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !2989
  %11 = load i32, i32* %v, align 4, !dbg !2990
  %and = and i32 %11, 255, !dbg !2991
  %idx.ext = sext i32 %and to i64, !dbg !2992
  %add.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %10, i64 %idx.ext, !dbg !2992
  store %struct.VlakRen* %add.ptr, %struct.VlakRen** %vlr, align 8, !dbg !2984
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2993
  %13 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !2995
  %call = call i32 @is_raytraceable_vlr(%struct.Render* %12, %struct.VlakRen* %13), !dbg !2996
  %tobool = icmp ne i32 %call, 0, !dbg !2996
  br i1 %tobool, label %if.then4, label %if.end, !dbg !2997

if.then4:                                         ; preds = %for.body
  %14 = load i32, i32* %faces, align 4, !dbg !2998
  %inc = add nsw i32 %14, 1, !dbg !2998
  store i32 %inc, i32* %faces, align 4, !dbg !2998
  br label %if.end, !dbg !2999

if.end:                                           ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !3000

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %v, align 4, !dbg !3001
  %inc5 = add nsw i32 %15, 1, !dbg !3001
  store i32 %inc5, i32* %v, align 4, !dbg !3001
  br label %for.cond, !dbg !3002, !llvm.loop !3003

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %faces, align 4, !dbg !3005
  %cmp6 = icmp eq i32 %16, 0, !dbg !3007
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3008

if.then7:                                         ; preds = %for.end
  store %struct.RayObject* null, %struct.RayObject** %retval, align 8, !dbg !3009
  br label %return, !dbg !3009

if.end8:                                          ; preds = %for.end
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3010
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3011
  %r = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 45, !dbg !3012
  %raytrace_structure = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 49, !dbg !3013
  %19 = load i16, i16* %raytrace_structure, align 8, !dbg !3013
  %conv = sext i16 %19 to i32, !dbg !3011
  %20 = load i32, i32* %faces, align 4, !dbg !3014
  %call9 = call %struct.RayObject* @rayobject_create(%struct.Render* %17, i32 %conv, i32 %20), !dbg !3015
  store %struct.RayObject* %call9, %struct.RayObject** %raytree2, align 8, !dbg !3016
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3017
  %r10 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 45, !dbg !3019
  %raytrace_options = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r10, i32 0, i32 48, !dbg !3020
  %22 = load i32, i32* %raytrace_options, align 4, !dbg !3020
  %and11 = and i32 %22, 1, !dbg !3021
  %tobool12 = icmp ne i32 %and11, 0, !dbg !3021
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !3022

if.then13:                                        ; preds = %if.end8
  %23 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3023
  %24 = load i32, i32* %faces, align 4, !dbg !3024
  %conv14 = sext i32 %24 to i64, !dbg !3024
  %mul = mul i64 %conv14, 16, !dbg !3025
  %call15 = call i8* %23(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)), !dbg !3023
  %25 = bitcast i8* %call15 to %struct.VlakPrimitive*, !dbg !3026
  %26 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3027
  %rayprimitives = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %26, i32 0, i32 31, !dbg !3028
  store %struct.VlakPrimitive* %25, %struct.VlakPrimitive** %rayprimitives, align 8, !dbg !3029
  store %struct.VlakPrimitive* %25, %struct.VlakPrimitive** %vlakprimitive, align 8, !dbg !3030
  br label %if.end19, !dbg !3031

if.else:                                          ; preds = %if.end8
  %27 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3032
  %28 = load i32, i32* %faces, align 4, !dbg !3033
  %conv16 = sext i32 %28 to i64, !dbg !3033
  %mul17 = mul i64 %conv16, 80, !dbg !3034
  %call18 = call i8* %27(i64 %mul17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)), !dbg !3032
  %29 = bitcast i8* %call18 to %struct.RayFace*, !dbg !3035
  %30 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3036
  %rayfaces = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %30, i32 0, i32 30, !dbg !3037
  store %struct.RayFace* %29, %struct.RayFace** %rayfaces, align 8, !dbg !3038
  store %struct.RayFace* %29, %struct.RayFace** %face, align 8, !dbg !3039
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then13
  %31 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3040
  %32 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3041
  %rayobi = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %32, i32 0, i32 32, !dbg !3042
  store %struct.ObjectInstanceRen* %31, %struct.ObjectInstanceRen** %rayobi, align 8, !dbg !3043
  store i32 0, i32* %v, align 4, !dbg !3044
  br label %for.cond20, !dbg !3046

for.cond20:                                       ; preds = %for.inc48, %if.end19
  %33 = load i32, i32* %v, align 4, !dbg !3047
  %34 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3049
  %totvlak21 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %34, i32 0, i32 11, !dbg !3050
  %35 = load i32, i32* %totvlak21, align 4, !dbg !3050
  %cmp22 = icmp slt i32 %33, %35, !dbg !3051
  br i1 %cmp22, label %for.body24, label %for.end50, !dbg !3052

for.body24:                                       ; preds = %for.cond20
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr25, metadata !3053, metadata !DIExpression()), !dbg !3055
  %36 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3056
  %vlaknodes26 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %36, i32 0, i32 19, !dbg !3057
  %37 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes26, align 8, !dbg !3057
  %38 = load i32, i32* %v, align 4, !dbg !3058
  %shr27 = ashr i32 %38, 8, !dbg !3059
  %idxprom28 = sext i32 %shr27 to i64, !dbg !3056
  %arrayidx29 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %37, i64 %idxprom28, !dbg !3056
  %vlak30 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx29, i32 0, i32 0, !dbg !3060
  %39 = load %struct.VlakRen*, %struct.VlakRen** %vlak30, align 8, !dbg !3060
  %40 = load i32, i32* %v, align 4, !dbg !3061
  %and31 = and i32 %40, 255, !dbg !3062
  %idx.ext32 = sext i32 %and31 to i64, !dbg !3063
  %add.ptr33 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %39, i64 %idx.ext32, !dbg !3063
  store %struct.VlakRen* %add.ptr33, %struct.VlakRen** %vlr25, align 8, !dbg !3055
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3064
  %42 = load %struct.VlakRen*, %struct.VlakRen** %vlr25, align 8, !dbg !3066
  %call34 = call i32 @is_raytraceable_vlr(%struct.Render* %41, %struct.VlakRen* %42), !dbg !3067
  %tobool35 = icmp ne i32 %call34, 0, !dbg !3067
  br i1 %tobool35, label %if.then36, label %if.end47, !dbg !3068

if.then36:                                        ; preds = %for.body24
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3069
  %r37 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 45, !dbg !3072
  %raytrace_options38 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r37, i32 0, i32 48, !dbg !3073
  %44 = load i32, i32* %raytrace_options38, align 4, !dbg !3073
  %and39 = and i32 %44, 1, !dbg !3074
  %tobool40 = icmp ne i32 %and39, 0, !dbg !3074
  br i1 %tobool40, label %if.then41, label %if.else43, !dbg !3075

if.then41:                                        ; preds = %if.then36
  %45 = load %struct.RayObject*, %struct.RayObject** %raytree2, align 8, !dbg !3076
  %46 = load %struct.VlakPrimitive*, %struct.VlakPrimitive** %vlakprimitive, align 8, !dbg !3078
  %47 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3079
  %48 = load %struct.VlakRen*, %struct.VlakRen** %vlr25, align 8, !dbg !3080
  %call42 = call %struct.RayObject* @RE_vlakprimitive_from_vlak(%struct.VlakPrimitive* %46, %struct.ObjectInstanceRen* %47, %struct.VlakRen* %48), !dbg !3081
  call void @RE_rayobject_add(%struct.RayObject* %45, %struct.RayObject* %call42), !dbg !3082
  %49 = load %struct.VlakPrimitive*, %struct.VlakPrimitive** %vlakprimitive, align 8, !dbg !3083
  %incdec.ptr = getelementptr inbounds %struct.VlakPrimitive, %struct.VlakPrimitive* %49, i32 1, !dbg !3083
  store %struct.VlakPrimitive* %incdec.ptr, %struct.VlakPrimitive** %vlakprimitive, align 8, !dbg !3083
  br label %if.end46, !dbg !3084

if.else43:                                        ; preds = %if.then36
  %50 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3085
  %51 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3087
  %52 = load %struct.VlakRen*, %struct.VlakRen** %vlr25, align 8, !dbg !3088
  %call44 = call %struct.RayObject* @RE_rayface_from_vlak(%struct.RayFace* %50, %struct.ObjectInstanceRen* %51, %struct.VlakRen* %52), !dbg !3089
  %53 = load %struct.RayObject*, %struct.RayObject** %raytree2, align 8, !dbg !3090
  %54 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3091
  %55 = ptrtoint %struct.RayFace* %54 to i64, !dbg !3091
  %or = or i64 %55, 1, !dbg !3091
  %56 = inttoptr i64 %or to %struct.RayObject*, !dbg !3091
  call void @RE_rayobject_add(%struct.RayObject* %53, %struct.RayObject* %56), !dbg !3092
  %57 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3093
  %incdec.ptr45 = getelementptr inbounds %struct.RayFace, %struct.RayFace* %57, i32 1, !dbg !3093
  store %struct.RayFace* %incdec.ptr45, %struct.RayFace** %face, align 8, !dbg !3093
  br label %if.end46

if.end46:                                         ; preds = %if.else43, %if.then41
  br label %if.end47, !dbg !3094

if.end47:                                         ; preds = %if.end46, %for.body24
  br label %for.inc48, !dbg !3095

for.inc48:                                        ; preds = %if.end47
  %58 = load i32, i32* %v, align 4, !dbg !3096
  %inc49 = add nsw i32 %58, 1, !dbg !3096
  store i32 %inc49, i32* %v, align 4, !dbg !3096
  br label %for.cond20, !dbg !3097, !llvm.loop !3098

for.end50:                                        ; preds = %for.cond20
  %59 = load %struct.RayObject*, %struct.RayObject** %raytree2, align 8, !dbg !3100
  call void @RE_rayobject_done(%struct.RayObject* %59), !dbg !3101
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3102
  %61 = bitcast %struct.Render* %60 to i8*, !dbg !3102
  %call51 = call i32 @test_break(i8* %61), !dbg !3104
  %tobool52 = icmp ne i32 %call51, 0, !dbg !3104
  br i1 %tobool52, label %if.then53, label %if.else54, !dbg !3105

if.then53:                                        ; preds = %for.end50
  %62 = load %struct.RayObject*, %struct.RayObject** %raytree2, align 8, !dbg !3106
  call void @RE_rayobject_free(%struct.RayObject* %62), !dbg !3107
  br label %if.end56, !dbg !3107

if.else54:                                        ; preds = %for.end50
  %63 = load %struct.RayObject*, %struct.RayObject** %raytree2, align 8, !dbg !3108
  %64 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3109
  %raytree55 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %64, i32 0, i32 29, !dbg !3110
  store %struct.RayObject* %63, %struct.RayObject** %raytree55, align 8, !dbg !3111
  br label %if.end56

if.end56:                                         ; preds = %if.else54, %if.then53
  br label %if.end57, !dbg !3112

if.end57:                                         ; preds = %if.end56, %entry
  %65 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3113
  %raytree58 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %65, i32 0, i32 29, !dbg !3115
  %66 = load %struct.RayObject*, %struct.RayObject** %raytree58, align 8, !dbg !3115
  %tobool59 = icmp ne %struct.RayObject* %66, null, !dbg !3113
  br i1 %tobool59, label %if.then60, label %if.end74, !dbg !3116

if.then60:                                        ; preds = %if.end57
  %67 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3117
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %67, i32 0, i32 11, !dbg !3120
  %68 = load i16, i16* %flag, align 8, !dbg !3120
  %conv61 = sext i16 %68 to i32, !dbg !3117
  %and62 = and i32 %conv61, 3, !dbg !3121
  %tobool63 = icmp ne i32 %and62, 0, !dbg !3121
  br i1 %tobool63, label %land.lhs.true, label %if.end73, !dbg !3122

land.lhs.true:                                    ; preds = %if.then60
  %69 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3123
  %raytree64 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %69, i32 0, i32 18, !dbg !3124
  %70 = load %struct.RayObject*, %struct.RayObject** %raytree64, align 8, !dbg !3124
  %cmp65 = icmp eq %struct.RayObject* %70, null, !dbg !3125
  br i1 %cmp65, label %if.then67, label %if.end73, !dbg !3126

if.then67:                                        ; preds = %land.lhs.true
  %71 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3127
  %transform_primitives = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %71, i32 0, i32 19, !dbg !3129
  store i32 0, i32* %transform_primitives, align 8, !dbg !3130
  %72 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3131
  %raytree68 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %72, i32 0, i32 29, !dbg !3132
  %73 = load %struct.RayObject*, %struct.RayObject** %raytree68, align 8, !dbg !3132
  %74 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3133
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %74, i32 0, i32 8, !dbg !3134
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !3133
  %75 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3135
  %76 = bitcast %struct.ObjectInstanceRen* %75 to i8*, !dbg !3135
  %77 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3136
  %obr69 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %77, i32 0, i32 2, !dbg !3137
  %78 = load %struct.ObjectRen*, %struct.ObjectRen** %obr69, align 8, !dbg !3137
  %rayobi70 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %78, i32 0, i32 32, !dbg !3138
  %79 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %rayobi70, align 8, !dbg !3138
  %80 = bitcast %struct.ObjectInstanceRen* %79 to i8*, !dbg !3136
  %call71 = call %struct.RayObject* @RE_rayobject_instance_create(%struct.RayObject* %73, [4 x float]* %arraydecay, i8* %76, i8* %80), !dbg !3139
  %81 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3140
  %raytree72 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %81, i32 0, i32 18, !dbg !3141
  store %struct.RayObject* %call71, %struct.RayObject** %raytree72, align 8, !dbg !3142
  br label %if.end73, !dbg !3143

if.end73:                                         ; preds = %if.then67, %land.lhs.true, %if.then60
  br label %if.end74, !dbg !3144

if.end74:                                         ; preds = %if.end73, %if.end57
  %82 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3145
  %raytree75 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %82, i32 0, i32 18, !dbg !3147
  %83 = load %struct.RayObject*, %struct.RayObject** %raytree75, align 8, !dbg !3147
  %tobool76 = icmp ne %struct.RayObject* %83, null, !dbg !3145
  br i1 %tobool76, label %if.then77, label %if.end79, !dbg !3148

if.then77:                                        ; preds = %if.end74
  %84 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3149
  %raytree78 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %84, i32 0, i32 18, !dbg !3150
  %85 = load %struct.RayObject*, %struct.RayObject** %raytree78, align 8, !dbg !3150
  store %struct.RayObject* %85, %struct.RayObject** %retval, align 8, !dbg !3151
  br label %return, !dbg !3151

if.end79:                                         ; preds = %if.end74
  %86 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !3152
  %obr80 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %86, i32 0, i32 2, !dbg !3153
  %87 = load %struct.ObjectRen*, %struct.ObjectRen** %obr80, align 8, !dbg !3153
  %raytree81 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %87, i32 0, i32 29, !dbg !3154
  %88 = load %struct.RayObject*, %struct.RayObject** %raytree81, align 8, !dbg !3154
  store %struct.RayObject* %88, %struct.RayObject** %retval, align 8, !dbg !3155
  br label %return, !dbg !3155

return:                                           ; preds = %if.end79, %if.then77, %if.then7
  %89 = load %struct.RayObject*, %struct.RayObject** %retval, align 8, !dbg !3156
  ret %struct.RayObject* %89, !dbg !3156
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @is_raytraceable_vlr(%struct.Render* %re, %struct.VlakRen* %vlr) #0 !dbg !3157 {
entry:
  %retval = alloca i32, align 4
  %re.addr = alloca %struct.Render*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3160, metadata !DIExpression()), !dbg !3161
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !3162, metadata !DIExpression()), !dbg !3163
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3164
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 4, !dbg !3166
  %1 = load i16, i16* %flag, align 8, !dbg !3166
  %conv = sext i16 %1 to i32, !dbg !3164
  %and = and i32 %conv, 32, !dbg !3167
  %tobool = icmp ne i32 %and, 0, !dbg !3167
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3168

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3169
  %flag1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %2, i32 0, i32 7, !dbg !3170
  %3 = load i8, i8* %flag1, align 1, !dbg !3170
  %conv2 = zext i8 %3 to i32, !dbg !3169
  %and3 = and i32 %conv2, 128, !dbg !3171
  %tobool4 = icmp ne i32 %and3, 0, !dbg !3171
  br i1 %tobool4, label %if.then, label %lor.lhs.false5, !dbg !3172

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %4 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3173
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %4, i32 0, i32 5, !dbg !3174
  %5 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !3174
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 2, !dbg !3175
  %6 = load i16, i16* %material_type, align 8, !dbg !3175
  %conv6 = sext i16 %6 to i32, !dbg !3173
  %cmp = icmp eq i32 %conv6, 2, !dbg !3176
  br i1 %cmp, label %if.then, label %if.end14, !dbg !3177

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  %7 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3178
  %mat8 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %7, i32 0, i32 5, !dbg !3180
  %8 = load %struct.Material*, %struct.Material** %mat8, align 8, !dbg !3180
  %material_type9 = getelementptr inbounds %struct.Material, %struct.Material* %8, i32 0, i32 2, !dbg !3181
  %9 = load i16, i16* %material_type9, align 8, !dbg !3181
  %conv10 = sext i16 %9 to i32, !dbg !3178
  %cmp11 = icmp ne i32 %conv10, 3, !dbg !3182
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !3183

if.then13:                                        ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !3184
  br label %return, !dbg !3184

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !3185

if.end14:                                         ; preds = %if.end, %lor.lhs.false5
  store i32 0, i32* %retval, align 4, !dbg !3186
  br label %return, !dbg !3186

return:                                           ; preds = %if.end14, %if.then13
  %10 = load i32, i32* %retval, align 4, !dbg !3187
  ret i32 %10, !dbg !3187
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.RayObject* @rayobject_create(%struct.Render* %re, i32 %type, i32 %size) #0 !dbg !3188 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %type.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %res = alloca %struct.RayObject*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3191, metadata !DIExpression()), !dbg !3192
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3193, metadata !DIExpression()), !dbg !3194
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !3195, metadata !DIExpression()), !dbg !3196
  call void @llvm.dbg.declare(metadata %struct.RayObject** %res, metadata !3197, metadata !DIExpression()), !dbg !3198
  store %struct.RayObject* null, %struct.RayObject** %res, align 8, !dbg !3198
  %0 = load i32, i32* %type.addr, align 4, !dbg !3199
  %1 = load i32, i32* %size.addr, align 4, !dbg !3200
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3201
  %r = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 45, !dbg !3202
  %ocres = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 51, !dbg !3203
  %3 = load i16, i16* %ocres, align 4, !dbg !3203
  %conv = sext i16 %3 to i32, !dbg !3201
  %call = call %struct.RayObject* @RE_rayobject_create(i32 %0, i32 %1, i32 %conv), !dbg !3204
  store %struct.RayObject* %call, %struct.RayObject** %res, align 8, !dbg !3205
  %4 = load %struct.RayObject*, %struct.RayObject** %res, align 8, !dbg !3206
  %tobool = icmp ne %struct.RayObject* %4, null, !dbg !3206
  br i1 %tobool, label %if.then, label %if.end, !dbg !3208

if.then:                                          ; preds = %entry
  %5 = load %struct.RayObject*, %struct.RayObject** %res, align 8, !dbg !3209
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3210
  call void @RE_rayobject_config_control(%struct.RayObject* %5, %struct.Render* %6), !dbg !3211
  br label %if.end, !dbg !3211

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.RayObject*, %struct.RayObject** %res, align 8, !dbg !3212
  ret %struct.RayObject* %7, !dbg !3213
}

declare dso_local void @RE_rayobject_add(%struct.RayObject*, %struct.RayObject*) #2

declare dso_local %struct.RayObject* @RE_vlakprimitive_from_vlak(%struct.VlakPrimitive*, %struct.ObjectInstanceRen*, %struct.VlakRen*) #2

declare dso_local %struct.RayObject* @RE_rayface_from_vlak(%struct.RayFace*, %struct.ObjectInstanceRen*, %struct.VlakRen*) #2

declare dso_local void @RE_rayobject_done(%struct.RayObject*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_break(i8* %data) #0 !dbg !3214 {
entry:
  %data.addr = alloca i8*, align 8
  %re = alloca %struct.Render*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3215, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !3217, metadata !DIExpression()), !dbg !3218
  %0 = load i8*, i8** %data.addr, align 8, !dbg !3219
  %1 = bitcast i8* %0 to %struct.Render*, !dbg !3220
  store %struct.Render* %1, %struct.Render** %re, align 8, !dbg !3218
  %2 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3221
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 96, !dbg !3222
  %3 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !3222
  %4 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3223
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 97, !dbg !3224
  %5 = load i8*, i8** %tbh, align 8, !dbg !3224
  %call = call i32 %3(i8* %5), !dbg !3221
  ret i32 %call, !dbg !3225
}

declare dso_local %struct.RayObject* @RE_rayobject_instance_create(%struct.RayObject*, [4 x float]*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @makeraytree(%struct.Render* %re) #0 !dbg !3226 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  %sub = alloca [3 x float], align 4
  %i = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3227, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !3229, metadata !DIExpression()), !dbg !3230
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !3231, metadata !DIExpression()), !dbg !3232
  call void @llvm.dbg.declare(metadata [3 x float]* %sub, metadata !3233, metadata !DIExpression()), !dbg !3234
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3235, metadata !DIExpression()), !dbg !3236
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3237
  %i1 = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 98, !dbg !3238
  %infostr = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i1, i32 0, i32 16, !dbg !3239
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i8** %infostr, align 8, !dbg !3240
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3241
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 90, !dbg !3242
  %2 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !3242
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3243
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 91, !dbg !3244
  %4 = load i8*, i8** %sdh, align 8, !dbg !3244
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3245
  %i2 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 98, !dbg !3246
  call void %2(i8* %4, %struct.RenderStats* %i2), !dbg !3241
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3247
  %r = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 45, !dbg !3249
  %raytrace_structure = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 49, !dbg !3250
  %7 = load i16, i16* %raytrace_structure, align 8, !dbg !3250
  %conv = sext i16 %7 to i32, !dbg !3247
  %cmp = icmp eq i32 %conv, 1, !dbg !3251
  br i1 %cmp, label %if.then, label %if.end, !dbg !3252

if.then:                                          ; preds = %entry
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3253
  %r4 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 45, !dbg !3254
  %raytrace_options = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r4, i32 0, i32 48, !dbg !3255
  %9 = load i32, i32* %raytrace_options, align 4, !dbg !3256
  %and = and i32 %9, -4, !dbg !3256
  store i32 %and, i32* %raytrace_options, align 4, !dbg !3256
  br label %if.end, !dbg !3253

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3257
  call void @makeraytree_single(%struct.Render* %10), !dbg !3258
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3259
  %12 = bitcast %struct.Render* %11 to i8*, !dbg !3259
  %call = call i32 @test_break(i8* %12), !dbg !3261
  %tobool = icmp ne i32 %call, 0, !dbg !3261
  br i1 %tobool, label %if.then5, label %if.else, !dbg !3262

if.then5:                                         ; preds = %if.end
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3263
  call void @freeraytree(%struct.Render* %13), !dbg !3265
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3266
  %i6 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 98, !dbg !3267
  %infostr7 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i6, i32 0, i32 16, !dbg !3268
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8** %infostr7, align 8, !dbg !3269
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3270
  %stats_draw8 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 90, !dbg !3271
  %16 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw8, align 8, !dbg !3271
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3272
  %sdh9 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 91, !dbg !3273
  %18 = load i8*, i8** %sdh9, align 8, !dbg !3273
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3274
  %i10 = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 98, !dbg !3275
  call void %16(i8* %18, %struct.RenderStats* %i10), !dbg !3270
  br label %if.end45, !dbg !3276

if.else:                                          ; preds = %if.end
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !3277
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !3277
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !3277
  store float 0x46293E5940000000, float* %arrayidx11, align 4, !dbg !3277
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3277
  store float 0x46293E5940000000, float* %arrayidx12, align 4, !dbg !3277
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !3277
  store float 0xC6293E5940000000, float* %arrayidx13, align 4, !dbg !3277
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !3277
  store float 0xC6293E5940000000, float* %arrayidx14, align 4, !dbg !3277
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3277
  store float 0xC6293E5940000000, float* %arrayidx15, align 4, !dbg !3277
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3280
  %raytree = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 52, !dbg !3281
  %21 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !3281
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3282
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3283
  call void @RE_rayobject_merge_bb(%struct.RayObject* %21, float* %arraydecay, float* %arraydecay16), !dbg !3284
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3285
  %22 = load float, float* %arrayidx17, align 4, !dbg !3285
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3287
  %23 = load float, float* %arrayidx18, align 4, !dbg !3287
  %cmp19 = fcmp ogt float %22, %23, !dbg !3288
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !3289

if.then21:                                        ; preds = %if.else
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3290
  call void @zero_v3(float* %arraydecay22), !dbg !3292
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3293
  call void @zero_v3(float* %arraydecay23), !dbg !3294
  br label %if.end24, !dbg !3295

if.end24:                                         ; preds = %if.then21, %if.else
  store i32 0, i32* %i, align 4, !dbg !3296
  br label %for.cond, !dbg !3298

for.cond:                                         ; preds = %for.inc, %if.end24
  %24 = load i32, i32* %i, align 4, !dbg !3299
  %cmp25 = icmp slt i32 %24, 3, !dbg !3301
  br i1 %cmp25, label %for.body, label %for.end, !dbg !3302

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %i, align 4, !dbg !3303
  %idxprom = sext i32 %25 to i64, !dbg !3305
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 %idxprom, !dbg !3305
  %26 = load float, float* %arrayidx27, align 4, !dbg !3306
  %add = fadd float %26, 0x3F847AE140000000, !dbg !3306
  store float %add, float* %arrayidx27, align 4, !dbg !3306
  %27 = load i32, i32* %i, align 4, !dbg !3307
  %idxprom28 = sext i32 %27 to i64, !dbg !3308
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 %idxprom28, !dbg !3308
  %28 = load float, float* %arrayidx29, align 4, !dbg !3309
  %add30 = fadd float %28, 0x3F847AE140000000, !dbg !3309
  store float %add30, float* %arrayidx29, align 4, !dbg !3309
  %29 = load i32, i32* %i, align 4, !dbg !3310
  %idxprom31 = sext i32 %29 to i64, !dbg !3311
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 %idxprom31, !dbg !3311
  %30 = load float, float* %arrayidx32, align 4, !dbg !3311
  %31 = load i32, i32* %i, align 4, !dbg !3312
  %idxprom33 = sext i32 %31 to i64, !dbg !3313
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 %idxprom33, !dbg !3313
  %32 = load float, float* %arrayidx34, align 4, !dbg !3313
  %sub35 = fsub float %30, %32, !dbg !3314
  %33 = load i32, i32* %i, align 4, !dbg !3315
  %idxprom36 = sext i32 %33 to i64, !dbg !3316
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %sub, i64 0, i64 %idxprom36, !dbg !3316
  store float %sub35, float* %arrayidx37, align 4, !dbg !3317
  br label %for.inc, !dbg !3318

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !3319
  %inc = add nsw i32 %34, 1, !dbg !3319
  store i32 %inc, i32* %i, align 4, !dbg !3319
  br label %for.cond, !dbg !3320, !llvm.loop !3321

for.end:                                          ; preds = %for.cond
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %sub, i64 0, i64 0, !dbg !3323
  %call39 = call float @len_v3(float* %arraydecay38), !dbg !3324
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3325
  %maxdist = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 55, !dbg !3326
  store float %call39, float* %maxdist, align 8, !dbg !3327
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3328
  %i40 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 98, !dbg !3329
  %infostr41 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i40, i32 0, i32 16, !dbg !3330
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8** %infostr41, align 8, !dbg !3331
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3332
  %stats_draw42 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 90, !dbg !3333
  %38 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw42, align 8, !dbg !3333
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3334
  %sdh43 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 91, !dbg !3335
  %40 = load i8*, i8** %sdh43, align 8, !dbg !3335
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3336
  %i44 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 98, !dbg !3337
  call void %38(i8* %40, %struct.RenderStats* %i44), !dbg !3332
  br label %if.end45

if.end45:                                         ; preds = %for.end, %if.then5
  ret void, !dbg !3338
}

; Function Attrs: noinline nounwind uwtable
define internal void @makeraytree_single(%struct.Render* %re) #0 !dbg !3339 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %raytree = alloca %struct.RayObject*, align 8
  %face = alloca %struct.RayFace*, align 8
  %vlakprimitive = alloca %struct.VlakPrimitive*, align 8
  %faces = alloca i32, align 4
  %obs = alloca i32, align 4
  %special = alloca i32, align 4
  %obr = alloca %struct.ObjectRen*, align 8
  %v = alloca i32, align 4
  %vlr = alloca %struct.VlakRen*, align 8
  %obj = alloca %struct.RayObject*, align 8
  %v62 = alloca i32, align 4
  %obr63 = alloca %struct.ObjectRen*, align 8
  %vlr75 = alloca %struct.VlakRen*, align 8
  %obj92 = alloca %struct.RayObject*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3340, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !3342, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.declare(metadata %struct.RayObject** %raytree, metadata !3344, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.declare(metadata %struct.RayFace** %face, metadata !3346, metadata !DIExpression()), !dbg !3347
  store %struct.RayFace* null, %struct.RayFace** %face, align 8, !dbg !3347
  call void @llvm.dbg.declare(metadata %struct.VlakPrimitive** %vlakprimitive, metadata !3348, metadata !DIExpression()), !dbg !3349
  store %struct.VlakPrimitive* null, %struct.VlakPrimitive** %vlakprimitive, align 8, !dbg !3349
  call void @llvm.dbg.declare(metadata i32* %faces, metadata !3350, metadata !DIExpression()), !dbg !3351
  store i32 0, i32* %faces, align 4, !dbg !3351
  call void @llvm.dbg.declare(metadata i32* %obs, metadata !3352, metadata !DIExpression()), !dbg !3353
  store i32 0, i32* %obs, align 4, !dbg !3353
  call void @llvm.dbg.declare(metadata i32* %special, metadata !3354, metadata !DIExpression()), !dbg !3355
  store i32 0, i32* %special, align 4, !dbg !3355
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3356
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 70, !dbg !3358
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !3359
  %1 = load i8*, i8** %first, align 8, !dbg !3359
  %2 = bitcast i8* %1 to %struct.ObjectInstanceRen*, !dbg !3356
  store %struct.ObjectInstanceRen* %2, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3360
  br label %for.cond, !dbg !3361

for.cond:                                         ; preds = %for.inc16, %entry
  %3 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3362
  %tobool = icmp ne %struct.ObjectInstanceRen* %3, null, !dbg !3364
  br i1 %tobool, label %for.body, label %for.end17, !dbg !3364

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3365
  %5 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3367
  %call = call i32 @is_raytraceable(%struct.Render* %4, %struct.ObjectInstanceRen* %5), !dbg !3368
  %tobool1 = icmp ne i32 %call, 0, !dbg !3368
  br i1 %tobool1, label %if.then, label %if.end15, !dbg !3369

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !3370, metadata !DIExpression()), !dbg !3372
  %6 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3373
  %obr2 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %6, i32 0, i32 2, !dbg !3374
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr2, align 8, !dbg !3374
  store %struct.ObjectRen* %7, %struct.ObjectRen** %obr, align 8, !dbg !3372
  %8 = load i32, i32* %obs, align 4, !dbg !3375
  %inc = add nsw i32 %8, 1, !dbg !3375
  store i32 %inc, i32* %obs, align 4, !dbg !3375
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3376
  %10 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3378
  %call3 = call zeroext i8 @has_special_rayobject(%struct.Render* %9, %struct.ObjectInstanceRen* %10), !dbg !3379
  %tobool4 = icmp ne i8 %call3, 0, !dbg !3379
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !3380

if.then5:                                         ; preds = %if.then
  %11 = load i32, i32* %special, align 4, !dbg !3381
  %inc6 = add nsw i32 %11, 1, !dbg !3381
  store i32 %inc6, i32* %special, align 4, !dbg !3381
  br label %if.end14, !dbg !3383

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3384, metadata !DIExpression()), !dbg !3386
  store i32 0, i32* %v, align 4, !dbg !3387
  br label %for.cond7, !dbg !3389

for.cond7:                                        ; preds = %for.inc, %if.else
  %12 = load i32, i32* %v, align 4, !dbg !3390
  %13 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3392
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %13, i32 0, i32 11, !dbg !3393
  %14 = load i32, i32* %totvlak, align 4, !dbg !3393
  %cmp = icmp slt i32 %12, %14, !dbg !3394
  br i1 %cmp, label %for.body8, label %for.end, !dbg !3395

for.body8:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !3396, metadata !DIExpression()), !dbg !3398
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3399
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %15, i32 0, i32 19, !dbg !3400
  %16 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !3400
  %17 = load i32, i32* %v, align 4, !dbg !3401
  %shr = ashr i32 %17, 8, !dbg !3402
  %idxprom = sext i32 %shr to i64, !dbg !3399
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %16, i64 %idxprom, !dbg !3399
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 0, !dbg !3403
  %18 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !3403
  %19 = load i32, i32* %v, align 4, !dbg !3404
  %and = and i32 %19, 255, !dbg !3405
  %idx.ext = sext i32 %and to i64, !dbg !3406
  %add.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %18, i64 %idx.ext, !dbg !3406
  store %struct.VlakRen* %add.ptr, %struct.VlakRen** %vlr, align 8, !dbg !3398
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3407
  %21 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3409
  %call9 = call i32 @is_raytraceable_vlr(%struct.Render* %20, %struct.VlakRen* %21), !dbg !3410
  %tobool10 = icmp ne i32 %call9, 0, !dbg !3410
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !3411

if.then11:                                        ; preds = %for.body8
  %22 = load i32, i32* %faces, align 4, !dbg !3412
  %inc12 = add nsw i32 %22, 1, !dbg !3412
  store i32 %inc12, i32* %faces, align 4, !dbg !3412
  br label %if.end, !dbg !3413

if.end:                                           ; preds = %if.then11, %for.body8
  br label %for.inc, !dbg !3414

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %v, align 4, !dbg !3415
  %inc13 = add nsw i32 %23, 1, !dbg !3415
  store i32 %inc13, i32* %v, align 4, !dbg !3415
  br label %for.cond7, !dbg !3416, !llvm.loop !3417

for.end:                                          ; preds = %for.cond7
  br label %if.end14

if.end14:                                         ; preds = %for.end, %if.then5
  br label %if.end15, !dbg !3419

if.end15:                                         ; preds = %if.end14, %for.body
  br label %for.inc16, !dbg !3420

for.inc16:                                        ; preds = %if.end15
  %24 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3421
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %24, i32 0, i32 0, !dbg !3422
  %25 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !3422
  store %struct.ObjectInstanceRen* %25, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3423
  br label %for.cond, !dbg !3424, !llvm.loop !3425

for.end17:                                        ; preds = %for.cond
  %26 = load i32, i32* %faces, align 4, !dbg !3427
  %27 = load i32, i32* %special, align 4, !dbg !3429
  %add = add nsw i32 %26, %27, !dbg !3430
  %cmp18 = icmp eq i32 %add, 0, !dbg !3431
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !3432

if.then19:                                        ; preds = %for.end17
  %call20 = call %struct.RayObject* @RE_rayobject_empty_create(), !dbg !3433
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3435
  %raytree21 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 52, !dbg !3436
  store %struct.RayObject* %call20, %struct.RayObject** %raytree21, align 8, !dbg !3437
  br label %if.end130, !dbg !3438

if.end22:                                         ; preds = %for.end17
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3439
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3440
  %r = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 45, !dbg !3441
  %raytrace_structure = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 49, !dbg !3442
  %31 = load i16, i16* %raytrace_structure, align 8, !dbg !3442
  %conv = sext i16 %31 to i32, !dbg !3440
  %32 = load i32, i32* %faces, align 4, !dbg !3443
  %33 = load i32, i32* %special, align 4, !dbg !3444
  %add23 = add nsw i32 %32, %33, !dbg !3445
  %call24 = call %struct.RayObject* @rayobject_create(%struct.Render* %29, i32 %conv, i32 %add23), !dbg !3446
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3447
  %raytree25 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 52, !dbg !3448
  store %struct.RayObject* %call24, %struct.RayObject** %raytree25, align 8, !dbg !3449
  store %struct.RayObject* %call24, %struct.RayObject** %raytree, align 8, !dbg !3450
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3451
  %r26 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 45, !dbg !3453
  %raytrace_options = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r26, i32 0, i32 48, !dbg !3454
  %36 = load i32, i32* %raytrace_options, align 4, !dbg !3454
  %and27 = and i32 %36, 1, !dbg !3455
  %tobool28 = icmp ne i32 %and27, 0, !dbg !3455
  br i1 %tobool28, label %if.then29, label %if.else32, !dbg !3456

if.then29:                                        ; preds = %if.end22
  %37 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3457
  %38 = load i32, i32* %faces, align 4, !dbg !3459
  %conv30 = sext i32 %38 to i64, !dbg !3459
  %mul = mul i64 %conv30, 16, !dbg !3460
  %call31 = call i8* %37(i64 %mul, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0)), !dbg !3457
  %39 = bitcast i8* %call31 to %struct.VlakPrimitive*, !dbg !3461
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3462
  %rayprimitives = getelementptr inbounds %struct.Render, %struct.Render* %40, i32 0, i32 54, !dbg !3463
  store %struct.VlakPrimitive* %39, %struct.VlakPrimitive** %rayprimitives, align 8, !dbg !3464
  store %struct.VlakPrimitive* %39, %struct.VlakPrimitive** %vlakprimitive, align 8, !dbg !3465
  br label %if.end36, !dbg !3466

if.else32:                                        ; preds = %if.end22
  %41 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3467
  %42 = load i32, i32* %faces, align 4, !dbg !3469
  %conv33 = sext i32 %42 to i64, !dbg !3469
  %mul34 = mul i64 %conv33, 80, !dbg !3470
  %call35 = call i8* %41(i64 %mul34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)), !dbg !3467
  %43 = bitcast i8* %call35 to %struct.RayFace*, !dbg !3471
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3472
  %rayfaces = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 53, !dbg !3473
  store %struct.RayFace* %43, %struct.RayFace** %rayfaces, align 8, !dbg !3474
  store %struct.RayFace* %43, %struct.RayFace** %face, align 8, !dbg !3475
  br label %if.end36

if.end36:                                         ; preds = %if.else32, %if.then29
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3476
  %instancetable37 = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 70, !dbg !3478
  %first38 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable37, i32 0, i32 0, !dbg !3479
  %46 = load i8*, i8** %first38, align 8, !dbg !3479
  %47 = bitcast i8* %46 to %struct.ObjectInstanceRen*, !dbg !3476
  store %struct.ObjectInstanceRen* %47, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3480
  br label %for.cond39, !dbg !3481

for.cond39:                                       ; preds = %for.inc123, %if.end36
  %48 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3482
  %tobool40 = icmp ne %struct.ObjectInstanceRen* %48, null, !dbg !3484
  br i1 %tobool40, label %for.body41, label %for.end125, !dbg !3484

for.body41:                                       ; preds = %for.cond39
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3485
  %50 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3487
  %call42 = call i32 @is_raytraceable(%struct.Render* %49, %struct.ObjectInstanceRen* %50), !dbg !3488
  %tobool43 = icmp ne i32 %call42, 0, !dbg !3488
  br i1 %tobool43, label %if.then44, label %if.end122, !dbg !3489

if.then44:                                        ; preds = %for.body41
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3490
  %52 = bitcast %struct.Render* %51 to i8*, !dbg !3490
  %call45 = call i32 @test_break(i8* %52), !dbg !3493
  %tobool46 = icmp ne i32 %call45, 0, !dbg !3493
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !3494

if.then47:                                        ; preds = %if.then44
  br label %for.end125, !dbg !3495

if.end48:                                         ; preds = %if.then44
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3496
  %54 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3498
  %call49 = call zeroext i8 @has_special_rayobject(%struct.Render* %53, %struct.ObjectInstanceRen* %54), !dbg !3499
  %tobool50 = icmp ne i8 %call49, 0, !dbg !3499
  br i1 %tobool50, label %if.then51, label %if.else61, !dbg !3500

if.then51:                                        ; preds = %if.end48
  call void @llvm.dbg.declare(metadata %struct.RayObject** %obj, metadata !3501, metadata !DIExpression()), !dbg !3503
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3504
  %56 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3505
  %call52 = call %struct.RayObject* @makeraytree_object(%struct.Render* %55, %struct.ObjectInstanceRen* %56), !dbg !3506
  store %struct.RayObject* %call52, %struct.RayObject** %obj, align 8, !dbg !3503
  %57 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3507
  %58 = bitcast %struct.Render* %57 to i8*, !dbg !3507
  %call53 = call i32 @test_break(i8* %58), !dbg !3509
  %tobool54 = icmp ne i32 %call53, 0, !dbg !3509
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !3510

if.then55:                                        ; preds = %if.then51
  br label %for.end125, !dbg !3511

if.end56:                                         ; preds = %if.then51
  %59 = load %struct.RayObject*, %struct.RayObject** %obj, align 8, !dbg !3512
  %tobool57 = icmp ne %struct.RayObject* %59, null, !dbg !3512
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !3514

if.then58:                                        ; preds = %if.end56
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3515
  %raytree59 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 52, !dbg !3516
  %61 = load %struct.RayObject*, %struct.RayObject** %raytree59, align 8, !dbg !3516
  %62 = load %struct.RayObject*, %struct.RayObject** %obj, align 8, !dbg !3517
  call void @RE_rayobject_add(%struct.RayObject* %61, %struct.RayObject* %62), !dbg !3518
  br label %if.end60, !dbg !3518

if.end60:                                         ; preds = %if.then58, %if.end56
  br label %if.end121, !dbg !3519

if.else61:                                        ; preds = %if.end48
  call void @llvm.dbg.declare(metadata i32* %v62, metadata !3520, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr63, metadata !3523, metadata !DIExpression()), !dbg !3524
  %63 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3525
  %obr64 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %63, i32 0, i32 2, !dbg !3526
  %64 = load %struct.ObjectRen*, %struct.ObjectRen** %obr64, align 8, !dbg !3526
  store %struct.ObjectRen* %64, %struct.ObjectRen** %obr63, align 8, !dbg !3524
  %65 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3527
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %65, i32 0, i32 11, !dbg !3529
  %66 = load i16, i16* %flag, align 8, !dbg !3529
  %conv65 = sext i16 %66 to i32, !dbg !3527
  %and66 = and i32 %conv65, 3, !dbg !3530
  %tobool67 = icmp ne i32 %and66, 0, !dbg !3530
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !3531

if.then68:                                        ; preds = %if.else61
  %67 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3532
  %transform_primitives = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %67, i32 0, i32 19, !dbg !3534
  store i32 1, i32* %transform_primitives, align 8, !dbg !3535
  br label %if.end69, !dbg !3536

if.end69:                                         ; preds = %if.then68, %if.else61
  store i32 0, i32* %v62, align 4, !dbg !3537
  br label %for.cond70, !dbg !3539

for.cond70:                                       ; preds = %for.inc118, %if.end69
  %68 = load i32, i32* %v62, align 4, !dbg !3540
  %69 = load %struct.ObjectRen*, %struct.ObjectRen** %obr63, align 8, !dbg !3542
  %totvlak71 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %69, i32 0, i32 11, !dbg !3543
  %70 = load i32, i32* %totvlak71, align 4, !dbg !3543
  %cmp72 = icmp slt i32 %68, %70, !dbg !3544
  br i1 %cmp72, label %for.body74, label %for.end120, !dbg !3545

for.body74:                                       ; preds = %for.cond70
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr75, metadata !3546, metadata !DIExpression()), !dbg !3548
  %71 = load %struct.ObjectRen*, %struct.ObjectRen** %obr63, align 8, !dbg !3549
  %vlaknodes76 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %71, i32 0, i32 19, !dbg !3550
  %72 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes76, align 8, !dbg !3550
  %73 = load i32, i32* %v62, align 4, !dbg !3551
  %shr77 = ashr i32 %73, 8, !dbg !3552
  %idxprom78 = sext i32 %shr77 to i64, !dbg !3549
  %arrayidx79 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %72, i64 %idxprom78, !dbg !3549
  %vlak80 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx79, i32 0, i32 0, !dbg !3553
  %74 = load %struct.VlakRen*, %struct.VlakRen** %vlak80, align 8, !dbg !3553
  %75 = load i32, i32* %v62, align 4, !dbg !3554
  %and81 = and i32 %75, 255, !dbg !3555
  %idx.ext82 = sext i32 %and81 to i64, !dbg !3556
  %add.ptr83 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %74, i64 %idx.ext82, !dbg !3556
  store %struct.VlakRen* %add.ptr83, %struct.VlakRen** %vlr75, align 8, !dbg !3548
  %76 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3557
  %77 = load %struct.VlakRen*, %struct.VlakRen** %vlr75, align 8, !dbg !3559
  %call84 = call i32 @is_raytraceable_vlr(%struct.Render* %76, %struct.VlakRen* %77), !dbg !3560
  %tobool85 = icmp ne i32 %call84, 0, !dbg !3560
  br i1 %tobool85, label %if.then86, label %if.end117, !dbg !3561

if.then86:                                        ; preds = %for.body74
  %78 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3562
  %r87 = getelementptr inbounds %struct.Render, %struct.Render* %78, i32 0, i32 45, !dbg !3565
  %raytrace_options88 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r87, i32 0, i32 48, !dbg !3566
  %79 = load i32, i32* %raytrace_options88, align 4, !dbg !3566
  %and89 = and i32 %79, 1, !dbg !3567
  %tobool90 = icmp ne i32 %and89, 0, !dbg !3567
  br i1 %tobool90, label %if.then91, label %if.else94, !dbg !3568

if.then91:                                        ; preds = %if.then86
  call void @llvm.dbg.declare(metadata %struct.RayObject** %obj92, metadata !3569, metadata !DIExpression()), !dbg !3571
  %80 = load %struct.VlakPrimitive*, %struct.VlakPrimitive** %vlakprimitive, align 8, !dbg !3572
  %81 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3573
  %82 = load %struct.VlakRen*, %struct.VlakRen** %vlr75, align 8, !dbg !3574
  %call93 = call %struct.RayObject* @RE_vlakprimitive_from_vlak(%struct.VlakPrimitive* %80, %struct.ObjectInstanceRen* %81, %struct.VlakRen* %82), !dbg !3575
  store %struct.RayObject* %call93, %struct.RayObject** %obj92, align 8, !dbg !3571
  %83 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !3576
  %84 = load %struct.RayObject*, %struct.RayObject** %obj92, align 8, !dbg !3577
  call void @RE_rayobject_add(%struct.RayObject* %83, %struct.RayObject* %84), !dbg !3578
  %85 = load %struct.VlakPrimitive*, %struct.VlakPrimitive** %vlakprimitive, align 8, !dbg !3579
  %incdec.ptr = getelementptr inbounds %struct.VlakPrimitive, %struct.VlakPrimitive* %85, i32 1, !dbg !3579
  store %struct.VlakPrimitive* %incdec.ptr, %struct.VlakPrimitive** %vlakprimitive, align 8, !dbg !3579
  br label %if.end116, !dbg !3580

if.else94:                                        ; preds = %if.then86
  %86 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3581
  %87 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3583
  %88 = load %struct.VlakRen*, %struct.VlakRen** %vlr75, align 8, !dbg !3584
  %call95 = call %struct.RayObject* @RE_rayface_from_vlak(%struct.RayFace* %86, %struct.ObjectInstanceRen* %87, %struct.VlakRen* %88), !dbg !3585
  %89 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3586
  %flag96 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %89, i32 0, i32 11, !dbg !3588
  %90 = load i16, i16* %flag96, align 8, !dbg !3588
  %conv97 = sext i16 %90 to i32, !dbg !3586
  %and98 = and i32 %conv97, 3, !dbg !3589
  %tobool99 = icmp ne i32 %and98, 0, !dbg !3589
  br i1 %tobool99, label %if.then100, label %if.end114, !dbg !3590

if.then100:                                       ; preds = %if.else94
  %91 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3591
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %91, i32 0, i32 8, !dbg !3593
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !3591
  %92 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3594
  %v1 = getelementptr inbounds %struct.RayFace, %struct.RayFace* %92, i32 0, i32 0, !dbg !3595
  %arraydecay101 = getelementptr inbounds [4 x float], [4 x float]* %v1, i64 0, i64 0, !dbg !3594
  call void @mul_m4_v3([4 x float]* %arraydecay, float* %arraydecay101), !dbg !3596
  %93 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3597
  %mat102 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %93, i32 0, i32 8, !dbg !3598
  %arraydecay103 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat102, i64 0, i64 0, !dbg !3597
  %94 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3599
  %v2 = getelementptr inbounds %struct.RayFace, %struct.RayFace* %94, i32 0, i32 1, !dbg !3600
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %v2, i64 0, i64 0, !dbg !3599
  call void @mul_m4_v3([4 x float]* %arraydecay103, float* %arraydecay104), !dbg !3601
  %95 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3602
  %mat105 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %95, i32 0, i32 8, !dbg !3603
  %arraydecay106 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat105, i64 0, i64 0, !dbg !3602
  %96 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3604
  %v3 = getelementptr inbounds %struct.RayFace, %struct.RayFace* %96, i32 0, i32 2, !dbg !3605
  %arraydecay107 = getelementptr inbounds [4 x float], [4 x float]* %v3, i64 0, i64 0, !dbg !3604
  call void @mul_m4_v3([4 x float]* %arraydecay106, float* %arraydecay107), !dbg !3606
  %97 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3607
  %quad = getelementptr inbounds %struct.RayFace, %struct.RayFace* %97, i32 0, i32 4, !dbg !3607
  %98 = load i32, i32* %quad, align 4, !dbg !3607
  %tobool108 = icmp ne i32 %98, 0, !dbg !3607
  br i1 %tobool108, label %if.then109, label %if.end113, !dbg !3609

if.then109:                                       ; preds = %if.then100
  %99 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3610
  %mat110 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %99, i32 0, i32 8, !dbg !3611
  %arraydecay111 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat110, i64 0, i64 0, !dbg !3610
  %100 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3612
  %v4 = getelementptr inbounds %struct.RayFace, %struct.RayFace* %100, i32 0, i32 3, !dbg !3613
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !3612
  call void @mul_m4_v3([4 x float]* %arraydecay111, float* %arraydecay112), !dbg !3614
  br label %if.end113, !dbg !3614

if.end113:                                        ; preds = %if.then109, %if.then100
  br label %if.end114, !dbg !3615

if.end114:                                        ; preds = %if.end113, %if.else94
  %101 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !3616
  %102 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3617
  %103 = ptrtoint %struct.RayFace* %102 to i64, !dbg !3617
  %or = or i64 %103, 1, !dbg !3617
  %104 = inttoptr i64 %or to %struct.RayObject*, !dbg !3617
  call void @RE_rayobject_add(%struct.RayObject* %101, %struct.RayObject* %104), !dbg !3618
  %105 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !3619
  %incdec.ptr115 = getelementptr inbounds %struct.RayFace, %struct.RayFace* %105, i32 1, !dbg !3619
  store %struct.RayFace* %incdec.ptr115, %struct.RayFace** %face, align 8, !dbg !3619
  br label %if.end116

if.end116:                                        ; preds = %if.end114, %if.then91
  br label %if.end117, !dbg !3620

if.end117:                                        ; preds = %if.end116, %for.body74
  br label %for.inc118, !dbg !3621

for.inc118:                                       ; preds = %if.end117
  %106 = load i32, i32* %v62, align 4, !dbg !3622
  %inc119 = add nsw i32 %106, 1, !dbg !3622
  store i32 %inc119, i32* %v62, align 4, !dbg !3622
  br label %for.cond70, !dbg !3623, !llvm.loop !3624

for.end120:                                       ; preds = %for.cond70
  br label %if.end121

if.end121:                                        ; preds = %for.end120, %if.end60
  br label %if.end122, !dbg !3626

if.end122:                                        ; preds = %if.end121, %for.body41
  br label %for.inc123, !dbg !3627

for.inc123:                                       ; preds = %if.end122
  %107 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3628
  %next124 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %107, i32 0, i32 0, !dbg !3629
  %108 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next124, align 8, !dbg !3629
  store %struct.ObjectInstanceRen* %108, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3630
  br label %for.cond39, !dbg !3631, !llvm.loop !3632

for.end125:                                       ; preds = %if.then55, %if.then47, %for.cond39
  %109 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3634
  %110 = bitcast %struct.Render* %109 to i8*, !dbg !3634
  %call126 = call i32 @test_break(i8* %110), !dbg !3636
  %tobool127 = icmp ne i32 %call126, 0, !dbg !3636
  br i1 %tobool127, label %if.end130, label %if.then128, !dbg !3637

if.then128:                                       ; preds = %for.end125
  %111 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3638
  %i = getelementptr inbounds %struct.Render, %struct.Render* %111, i32 0, i32 98, !dbg !3640
  %infostr = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 16, !dbg !3641
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i8** %infostr, align 8, !dbg !3642
  %112 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3643
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %112, i32 0, i32 90, !dbg !3644
  %113 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !3644
  %114 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3645
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %114, i32 0, i32 91, !dbg !3646
  %115 = load i8*, i8** %sdh, align 8, !dbg !3646
  %116 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3647
  %i129 = getelementptr inbounds %struct.Render, %struct.Render* %116, i32 0, i32 98, !dbg !3648
  call void %113(i8* %115, %struct.RenderStats* %i129), !dbg !3643
  %117 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !3649
  call void @RE_rayobject_done(%struct.RayObject* %117), !dbg !3650
  br label %if.end130, !dbg !3651

if.end130:                                        ; preds = %if.then19, %if.then128, %for.end125
  ret void, !dbg !3652
}

declare dso_local void @RE_rayobject_merge_bb(%struct.RayObject*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !3653 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3657, metadata !DIExpression()), !dbg !3658
  %0 = load float*, float** %r.addr, align 8, !dbg !3659
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3659
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !3660
  %1 = load float*, float** %r.addr, align 8, !dbg !3661
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !3661
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !3662
  %2 = load float*, float** %r.addr, align 8, !dbg !3663
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !3663
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !3664
  ret void, !dbg !3665
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !3666 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3671, metadata !DIExpression()), !dbg !3672
  %0 = load float*, float** %a.addr, align 8, !dbg !3673
  %1 = load float*, float** %a.addr, align 8, !dbg !3674
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !3675
  %call1 = call float @sqrtf(float %call) #5, !dbg !3676
  ret float %call1, !dbg !3677
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @shade_ray(%struct.Isect* %is, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !3678 {
entry:
  %is.addr = alloca %struct.Isect*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  store %struct.Isect* %is, %struct.Isect** %is.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %is.addr, metadata !3846, metadata !DIExpression()), !dbg !3847
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !3848, metadata !DIExpression()), !dbg !3849
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !3850, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !3852, metadata !DIExpression()), !dbg !3853
  %0 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3854
  %hit = getelementptr inbounds %struct.Isect, %struct.Isect* %0, i32 0, i32 15, !dbg !3855
  %ob = getelementptr inbounds %struct.anon, %struct.anon* %hit, i32 0, i32 0, !dbg !3856
  %1 = load i8*, i8** %ob, align 8, !dbg !3856
  %2 = bitcast i8* %1 to %struct.ObjectInstanceRen*, !dbg !3857
  store %struct.ObjectInstanceRen* %2, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3853
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !3858, metadata !DIExpression()), !dbg !3859
  %3 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3860
  %hit1 = getelementptr inbounds %struct.Isect, %struct.Isect* %3, i32 0, i32 15, !dbg !3861
  %face = getelementptr inbounds %struct.anon, %struct.anon* %hit1, i32 0, i32 1, !dbg !3862
  %4 = load i8*, i8** %face, align 8, !dbg !3862
  %5 = bitcast i8* %4 to %struct.VlakRen*, !dbg !3863
  store %struct.VlakRen* %5, %struct.VlakRen** %vlr, align 8, !dbg !3859
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3864
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 30, !dbg !3865
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !3864
  %7 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3866
  %dir = getelementptr inbounds %struct.Isect, %struct.Isect* %7, i32 0, i32 1, !dbg !3867
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !3866
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !3868
  %8 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3869
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %8, i32 0, i32 0, !dbg !3870
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !3869
  %9 = load float, float* %arrayidx, align 8, !dbg !3869
  %10 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3871
  %dist = getelementptr inbounds %struct.Isect, %struct.Isect* %10, i32 0, i32 2, !dbg !3872
  %11 = load float, float* %dist, align 8, !dbg !3872
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3873
  %view3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 30, !dbg !3874
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %view3, i64 0, i64 0, !dbg !3873
  %13 = load float, float* %arrayidx4, align 4, !dbg !3873
  %mul = fmul float %11, %13, !dbg !3875
  %add = fadd float %9, %mul, !dbg !3876
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3877
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 29, !dbg !3878
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3877
  store float %add, float* %arrayidx5, align 8, !dbg !3879
  %15 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3880
  %start6 = getelementptr inbounds %struct.Isect, %struct.Isect* %15, i32 0, i32 0, !dbg !3881
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %start6, i64 0, i64 1, !dbg !3880
  %16 = load float, float* %arrayidx7, align 4, !dbg !3880
  %17 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3882
  %dist8 = getelementptr inbounds %struct.Isect, %struct.Isect* %17, i32 0, i32 2, !dbg !3883
  %18 = load float, float* %dist8, align 8, !dbg !3883
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3884
  %view9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 30, !dbg !3885
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %view9, i64 0, i64 1, !dbg !3884
  %20 = load float, float* %arrayidx10, align 4, !dbg !3884
  %mul11 = fmul float %18, %20, !dbg !3886
  %add12 = fadd float %16, %mul11, !dbg !3887
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3888
  %co13 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %21, i32 0, i32 29, !dbg !3889
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %co13, i64 0, i64 1, !dbg !3888
  store float %add12, float* %arrayidx14, align 4, !dbg !3890
  %22 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3891
  %start15 = getelementptr inbounds %struct.Isect, %struct.Isect* %22, i32 0, i32 0, !dbg !3892
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %start15, i64 0, i64 2, !dbg !3891
  %23 = load float, float* %arrayidx16, align 8, !dbg !3891
  %24 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3893
  %dist17 = getelementptr inbounds %struct.Isect, %struct.Isect* %24, i32 0, i32 2, !dbg !3894
  %25 = load float, float* %dist17, align 8, !dbg !3894
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3895
  %view18 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 30, !dbg !3896
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %view18, i64 0, i64 2, !dbg !3895
  %27 = load float, float* %arrayidx19, align 4, !dbg !3895
  %mul20 = fmul float %25, %27, !dbg !3897
  %add21 = fadd float %23, %mul20, !dbg !3898
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3899
  %co22 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 29, !dbg !3900
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 2, !dbg !3899
  store float %add21, float* %arrayidx23, align 8, !dbg !3901
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3902
  %view24 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 30, !dbg !3903
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %view24, i64 0, i64 0, !dbg !3902
  %call = call float @normalize_v3(float* %arraydecay25), !dbg !3904
  %30 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3905
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3906
  %obi26 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 3, !dbg !3907
  store %struct.ObjectInstanceRen* %30, %struct.ObjectInstanceRen** %obi26, align 8, !dbg !3908
  %32 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3909
  %obr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %32, i32 0, i32 2, !dbg !3910
  %33 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3910
  %34 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3911
  %obr27 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %34, i32 0, i32 4, !dbg !3912
  store %struct.ObjectRen* %33, %struct.ObjectRen** %obr27, align 8, !dbg !3913
  %35 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3914
  %36 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3915
  %vlr28 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %36, i32 0, i32 1, !dbg !3916
  store %struct.VlakRen* %35, %struct.VlakRen** %vlr28, align 8, !dbg !3917
  %37 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3918
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %37, i32 0, i32 5, !dbg !3919
  %38 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !3919
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3920
  %mat29 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %39, i32 0, i32 0, !dbg !3921
  store %struct.Material* %38, %struct.Material** %mat29, align 8, !dbg !3922
  %40 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3923
  call void @shade_input_init_material(%struct.ShadeInput* %40), !dbg !3924
  %41 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3925
  %isect = getelementptr inbounds %struct.Isect, %struct.Isect* %41, i32 0, i32 14, !dbg !3927
  %42 = load i32, i32* %isect, align 8, !dbg !3927
  %cmp = icmp eq i32 %42, 2, !dbg !3928
  br i1 %cmp, label %if.then, label %if.else, !dbg !3929

if.then:                                          ; preds = %entry
  %43 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3930
  %44 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3931
  %45 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3932
  call void @shade_input_set_triangle_i(%struct.ShadeInput* %43, %struct.ObjectInstanceRen* %44, %struct.VlakRen* %45, i16 signext 0, i16 signext 2, i16 signext 3), !dbg !3933
  br label %if.end, !dbg !3933

if.else:                                          ; preds = %entry
  %46 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3934
  %47 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3935
  %48 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3936
  call void @shade_input_set_triangle_i(%struct.ShadeInput* %46, %struct.ObjectInstanceRen* %47, %struct.VlakRen* %48, i16 signext 0, i16 signext 1, i16 signext 2), !dbg !3937
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %49 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3938
  %u = getelementptr inbounds %struct.Isect, %struct.Isect* %49, i32 0, i32 12, !dbg !3939
  %50 = load float, float* %u, align 8, !dbg !3939
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3940
  %u30 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 0, i32 23, !dbg !3941
  store float %50, float* %u30, align 8, !dbg !3942
  %52 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3943
  %v = getelementptr inbounds %struct.Isect, %struct.Isect* %52, i32 0, i32 13, !dbg !3944
  %53 = load float, float* %v, align 4, !dbg !3944
  %54 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3945
  %v31 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %54, i32 0, i32 24, !dbg !3946
  store float %53, float* %v31, align 4, !dbg !3947
  %55 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3948
  %dy_v = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %55, i32 0, i32 28, !dbg !3949
  store float 0.000000e+00, float* %dy_v, align 4, !dbg !3950
  %56 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3951
  %dy_u = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %56, i32 0, i32 27, !dbg !3952
  store float 0.000000e+00, float* %dy_u, align 8, !dbg !3953
  %57 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3954
  %dx_v = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %57, i32 0, i32 26, !dbg !3955
  store float 0.000000e+00, float* %dx_v, align 4, !dbg !3956
  %58 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3957
  %dx_u = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %58, i32 0, i32 25, !dbg !3958
  store float 0.000000e+00, float* %dx_u, align 8, !dbg !3959
  %59 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3960
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %59, i32 0, i32 15, !dbg !3962
  %60 = load i16, i16* %osatex, align 8, !dbg !3962
  %tobool = icmp ne i16 %60, 0, !dbg !3960
  br i1 %tobool, label %if.then32, label %if.end33, !dbg !3963

if.then32:                                        ; preds = %if.end
  %61 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3964
  call void @shade_ray_set_derivative(%struct.ShadeInput* %61), !dbg !3965
  br label %if.end33, !dbg !3965

if.end33:                                         ; preds = %if.then32, %if.end
  %62 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3966
  call void @shade_input_set_normals(%struct.ShadeInput* %62), !dbg !3967
  %63 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3968
  call void @shade_input_set_shade_texco(%struct.ShadeInput* %63), !dbg !3969
  %64 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3970
  %mat34 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %64, i32 0, i32 0, !dbg !3972
  %65 = load %struct.Material*, %struct.Material** %mat34, align 8, !dbg !3972
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %65, i32 0, i32 2, !dbg !3973
  %66 = load i16, i16* %material_type, align 8, !dbg !3973
  %conv = sext i16 %66 to i32, !dbg !3970
  %cmp35 = icmp eq i32 %conv, 2, !dbg !3974
  br i1 %cmp35, label %if.then37, label %if.else46, !dbg !3975

if.then37:                                        ; preds = %if.end33
  %67 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3976
  %mode = getelementptr inbounds %struct.Isect, %struct.Isect* %67, i32 0, i32 7, !dbg !3976
  %68 = load i32, i32* %mode, align 8, !dbg !3976
  %cmp38 = icmp eq i32 %68, 0, !dbg !3976
  br i1 %cmp38, label %if.then43, label %lor.lhs.false, !dbg !3976

lor.lhs.false:                                    ; preds = %if.then37
  %69 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3976
  %mode40 = getelementptr inbounds %struct.Isect, %struct.Isect* %69, i32 0, i32 7, !dbg !3976
  %70 = load i32, i32* %mode40, align 8, !dbg !3976
  %cmp41 = icmp eq i32 %70, 2, !dbg !3976
  br i1 %cmp41, label %if.then43, label %if.else44, !dbg !3979

if.then43:                                        ; preds = %lor.lhs.false, %if.then37
  %71 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3980
  %72 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3982
  %73 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3983
  call void @shade_volume_shadow(%struct.ShadeInput* %71, %struct.ShadeResult* %72, %struct.Isect* %73), !dbg !3984
  br label %if.end45, !dbg !3985

if.else44:                                        ; preds = %lor.lhs.false
  %74 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3986
  %75 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3988
  call void @shade_volume_outside(%struct.ShadeInput* %74, %struct.ShadeResult* %75), !dbg !3989
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.then43
  br label %if.end92, !dbg !3990

if.else46:                                        ; preds = %if.end33
  %76 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !3991
  %mode47 = getelementptr inbounds %struct.Isect, %struct.Isect* %76, i32 0, i32 7, !dbg !3993
  %77 = load i32, i32* %mode47, align 8, !dbg !3993
  %cmp48 = icmp eq i32 %77, 2, !dbg !3994
  br i1 %cmp48, label %if.then50, label %if.else68, !dbg !3995

if.then50:                                        ; preds = %if.else46
  %78 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3996
  %nodes = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %78, i32 0, i32 116, !dbg !3999
  %79 = load i16, i16* %nodes, align 2, !dbg !3999
  %conv51 = sext i16 %79 to i32, !dbg !3996
  %cmp52 = icmp eq i32 %conv51, 0, !dbg !4000
  br i1 %cmp52, label %land.lhs.true, label %if.else66, !dbg !4001

land.lhs.true:                                    ; preds = %if.then50
  %80 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4002
  %mat54 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %80, i32 0, i32 0, !dbg !4003
  %81 = load %struct.Material*, %struct.Material** %mat54, align 8, !dbg !4003
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %81, i32 0, i32 103, !dbg !4004
  %82 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !4004
  %tobool55 = icmp ne %struct.bNodeTree* %82, null, !dbg !4002
  br i1 %tobool55, label %land.lhs.true56, label %if.else66, !dbg !4005

land.lhs.true56:                                  ; preds = %land.lhs.true
  %83 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4006
  %mat57 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %83, i32 0, i32 0, !dbg !4007
  %84 = load %struct.Material*, %struct.Material** %mat57, align 8, !dbg !4007
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %84, i32 0, i32 77, !dbg !4008
  %85 = load i8, i8* %use_nodes, align 1, !dbg !4008
  %conv58 = zext i8 %85 to i32, !dbg !4006
  %tobool59 = icmp ne i32 %conv58, 0, !dbg !4006
  br i1 %tobool59, label %if.then60, label %if.else66, !dbg !4009

if.then60:                                        ; preds = %land.lhs.true56
  %86 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4010
  %mat61 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %86, i32 0, i32 0, !dbg !4012
  %87 = load %struct.Material*, %struct.Material** %mat61, align 8, !dbg !4012
  %nodetree62 = getelementptr inbounds %struct.Material, %struct.Material* %87, i32 0, i32 103, !dbg !4013
  %88 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree62, align 8, !dbg !4013
  %89 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4014
  %90 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4015
  %call63 = call zeroext i8 @ntreeShaderExecTree(%struct.bNodeTree* %88, %struct.ShadeInput* %89, %struct.ShadeResult* %90), !dbg !4016
  %91 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !4017
  %mat64 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %91, i32 0, i32 5, !dbg !4018
  %92 = load %struct.Material*, %struct.Material** %mat64, align 8, !dbg !4018
  %93 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4019
  %mat65 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %93, i32 0, i32 0, !dbg !4020
  store %struct.Material* %92, %struct.Material** %mat65, align 8, !dbg !4021
  br label %if.end67, !dbg !4022

if.else66:                                        ; preds = %land.lhs.true56, %land.lhs.true, %if.then50
  %94 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4023
  %95 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4024
  call void @shade_color(%struct.ShadeInput* %94, %struct.ShadeResult* %95), !dbg !4025
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then60
  br label %if.end91, !dbg !4026

if.else68:                                        ; preds = %if.else46
  %96 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4027
  %mat69 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %96, i32 0, i32 0, !dbg !4030
  %97 = load %struct.Material*, %struct.Material** %mat69, align 8, !dbg !4030
  %nodetree70 = getelementptr inbounds %struct.Material, %struct.Material* %97, i32 0, i32 103, !dbg !4031
  %98 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree70, align 8, !dbg !4031
  %tobool71 = icmp ne %struct.bNodeTree* %98, null, !dbg !4027
  br i1 %tobool71, label %land.lhs.true72, label %if.else83, !dbg !4032

land.lhs.true72:                                  ; preds = %if.else68
  %99 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4033
  %mat73 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %99, i32 0, i32 0, !dbg !4034
  %100 = load %struct.Material*, %struct.Material** %mat73, align 8, !dbg !4034
  %use_nodes74 = getelementptr inbounds %struct.Material, %struct.Material* %100, i32 0, i32 77, !dbg !4035
  %101 = load i8, i8* %use_nodes74, align 1, !dbg !4035
  %conv75 = zext i8 %101 to i32, !dbg !4033
  %tobool76 = icmp ne i32 %conv75, 0, !dbg !4033
  br i1 %tobool76, label %if.then77, label %if.else83, !dbg !4036

if.then77:                                        ; preds = %land.lhs.true72
  %102 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4037
  %mat78 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %102, i32 0, i32 0, !dbg !4039
  %103 = load %struct.Material*, %struct.Material** %mat78, align 8, !dbg !4039
  %nodetree79 = getelementptr inbounds %struct.Material, %struct.Material* %103, i32 0, i32 103, !dbg !4040
  %104 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree79, align 8, !dbg !4040
  %105 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4041
  %106 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4042
  %call80 = call zeroext i8 @ntreeShaderExecTree(%struct.bNodeTree* %104, %struct.ShadeInput* %105, %struct.ShadeResult* %106), !dbg !4043
  %107 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !4044
  %mat81 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %107, i32 0, i32 5, !dbg !4045
  %108 = load %struct.Material*, %struct.Material** %mat81, align 8, !dbg !4045
  %109 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4046
  %mat82 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %109, i32 0, i32 0, !dbg !4047
  store %struct.Material* %108, %struct.Material** %mat82, align 8, !dbg !4048
  br label %if.end84, !dbg !4049

if.else83:                                        ; preds = %land.lhs.true72, %if.else68
  %110 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4050
  %111 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4052
  call void @shade_material_loop(%struct.ShadeInput* %110, %struct.ShadeResult* %111), !dbg !4053
  br label %if.end84

if.end84:                                         ; preds = %if.else83, %if.then77
  %112 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4054
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %112, i32 0, i32 6, !dbg !4055
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !4054
  %113 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4056
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %113, i32 0, i32 0, !dbg !4057
  %arraydecay86 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !4056
  %114 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4058
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %114, i32 0, i32 8, !dbg !4059
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !4058
  call void @sub_v3_v3v3(float* %arraydecay85, float* %arraydecay86, float* %arraydecay87), !dbg !4060
  %115 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4061
  %diffshad = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %115, i32 0, i32 7, !dbg !4062
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %diffshad, i64 0, i64 0, !dbg !4061
  %116 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4063
  %diff89 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %116, i32 0, i32 6, !dbg !4064
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %diff89, i64 0, i64 0, !dbg !4063
  call void @copy_v3_v3(float* %arraydecay88, float* %arraydecay90), !dbg !4065
  br label %if.end91

if.end91:                                         ; preds = %if.end84, %if.end67
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end45
  ret void, !dbg !4066
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4067 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4070, metadata !DIExpression()), !dbg !4071
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4072, metadata !DIExpression()), !dbg !4073
  %0 = load float*, float** %a.addr, align 8, !dbg !4074
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4074
  %1 = load float, float* %arrayidx, align 4, !dbg !4074
  %2 = load float*, float** %r.addr, align 8, !dbg !4075
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4075
  store float %1, float* %arrayidx1, align 4, !dbg !4076
  %3 = load float*, float** %a.addr, align 8, !dbg !4077
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4077
  %4 = load float, float* %arrayidx2, align 4, !dbg !4077
  %5 = load float*, float** %r.addr, align 8, !dbg !4078
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4078
  store float %4, float* %arrayidx3, align 4, !dbg !4079
  %6 = load float*, float** %a.addr, align 8, !dbg !4080
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4080
  %7 = load float, float* %arrayidx4, align 4, !dbg !4080
  %8 = load float*, float** %r.addr, align 8, !dbg !4081
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4081
  store float %7, float* %arrayidx5, align 4, !dbg !4082
  ret void, !dbg !4083
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !4084 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !4087, metadata !DIExpression()), !dbg !4088
  %0 = load float*, float** %n.addr, align 8, !dbg !4089
  %1 = load float*, float** %n.addr, align 8, !dbg !4090
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !4091
  ret float %call, !dbg !4092
}

declare dso_local void @shade_input_init_material(%struct.ShadeInput*) #2

declare dso_local void @shade_input_set_triangle_i(%struct.ShadeInput*, %struct.ObjectInstanceRen*, %struct.VlakRen*, i16 signext, i16 signext, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @shade_ray_set_derivative(%struct.ShadeInput* %shi) #0 !dbg !4093 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %detsh = alloca float, align 4
  %t00 = alloca float, align 4
  %t10 = alloca float, align 4
  %t01 = alloca float, align 4
  %t11 = alloca float, align 4
  %axis1 = alloca i32, align 4
  %axis2 = alloca i32, align 4
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %v3 = alloca [3 x float], align 4
  %v137 = alloca float*, align 8
  %v241 = alloca float*, align 8
  %v345 = alloca float*, align 8
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !4096, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.declare(metadata float* %detsh, metadata !4098, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.declare(metadata float* %t00, metadata !4100, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.declare(metadata float* %t10, metadata !4102, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.declare(metadata float* %t01, metadata !4104, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.declare(metadata float* %t11, metadata !4106, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.declare(metadata i32* %axis1, metadata !4108, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.declare(metadata i32* %axis2, metadata !4110, metadata !DIExpression()), !dbg !4111
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4112
  %facenor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 6, !dbg !4113
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %facenor, i64 0, i64 0, !dbg !4112
  call void @axis_dominant_v3(i32* %axis1, i32* %axis2, float* %arraydecay), !dbg !4114
  %1 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4115
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %1, i32 0, i32 3, !dbg !4117
  %2 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !4117
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %2, i32 0, i32 11, !dbg !4118
  %3 = load i16, i16* %flag, align 8, !dbg !4118
  %conv = sext i16 %3 to i32, !dbg !4115
  %and = and i32 %conv, 3, !dbg !4119
  %tobool = icmp ne i32 %and, 0, !dbg !4119
  br i1 %tobool, label %if.then, label %if.else, !dbg !4120

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !4121, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !4124, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.declare(metadata [3 x float]* %v3, metadata !4126, metadata !DIExpression()), !dbg !4127
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !4128
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4129
  %obi2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 3, !dbg !4130
  %5 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi2, align 8, !dbg !4130
  %nmat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %5, i32 0, i32 10, !dbg !4131
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat, i64 0, i64 0, !dbg !4129
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4132
  %v14 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 8, !dbg !4133
  %7 = load %struct.VertRen*, %struct.VertRen** %v14, align 8, !dbg !4133
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %7, i32 0, i32 0, !dbg !4134
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4132
  call void @mul_v3_m3v3(float* %arraydecay1, [3 x float]* %arraydecay3, float* %arraydecay5), !dbg !4135
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !4136
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4137
  %obi7 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 3, !dbg !4138
  %9 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi7, align 8, !dbg !4138
  %nmat8 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %9, i32 0, i32 10, !dbg !4139
  %arraydecay9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat8, i64 0, i64 0, !dbg !4137
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4140
  %v210 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 9, !dbg !4141
  %11 = load %struct.VertRen*, %struct.VertRen** %v210, align 8, !dbg !4141
  %co11 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %11, i32 0, i32 0, !dbg !4142
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co11, i64 0, i64 0, !dbg !4140
  call void @mul_v3_m3v3(float* %arraydecay6, [3 x float]* %arraydecay9, float* %arraydecay12), !dbg !4143
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !4144
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4145
  %obi14 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 3, !dbg !4146
  %13 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi14, align 8, !dbg !4146
  %nmat15 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %13, i32 0, i32 10, !dbg !4147
  %arraydecay16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat15, i64 0, i64 0, !dbg !4145
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4148
  %v317 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 10, !dbg !4149
  %15 = load %struct.VertRen*, %struct.VertRen** %v317, align 8, !dbg !4149
  %co18 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %15, i32 0, i32 0, !dbg !4150
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %co18, i64 0, i64 0, !dbg !4148
  call void @mul_v3_m3v3(float* %arraydecay13, [3 x float]* %arraydecay16, float* %arraydecay19), !dbg !4151
  %16 = load i32, i32* %axis1, align 4, !dbg !4152
  %idxprom = sext i32 %16 to i64, !dbg !4153
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 %idxprom, !dbg !4153
  %17 = load float, float* %arrayidx, align 4, !dbg !4153
  %18 = load i32, i32* %axis1, align 4, !dbg !4154
  %idxprom20 = sext i32 %18 to i64, !dbg !4155
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 %idxprom20, !dbg !4155
  %19 = load float, float* %arrayidx21, align 4, !dbg !4155
  %sub = fsub float %17, %19, !dbg !4156
  store float %sub, float* %t00, align 4, !dbg !4157
  %20 = load i32, i32* %axis2, align 4, !dbg !4158
  %idxprom22 = sext i32 %20 to i64, !dbg !4159
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 %idxprom22, !dbg !4159
  %21 = load float, float* %arrayidx23, align 4, !dbg !4159
  %22 = load i32, i32* %axis2, align 4, !dbg !4160
  %idxprom24 = sext i32 %22 to i64, !dbg !4161
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 %idxprom24, !dbg !4161
  %23 = load float, float* %arrayidx25, align 4, !dbg !4161
  %sub26 = fsub float %21, %23, !dbg !4162
  store float %sub26, float* %t01, align 4, !dbg !4163
  %24 = load i32, i32* %axis1, align 4, !dbg !4164
  %idxprom27 = sext i32 %24 to i64, !dbg !4165
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 %idxprom27, !dbg !4165
  %25 = load float, float* %arrayidx28, align 4, !dbg !4165
  %26 = load i32, i32* %axis1, align 4, !dbg !4166
  %idxprom29 = sext i32 %26 to i64, !dbg !4167
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 %idxprom29, !dbg !4167
  %27 = load float, float* %arrayidx30, align 4, !dbg !4167
  %sub31 = fsub float %25, %27, !dbg !4168
  store float %sub31, float* %t10, align 4, !dbg !4169
  %28 = load i32, i32* %axis2, align 4, !dbg !4170
  %idxprom32 = sext i32 %28 to i64, !dbg !4171
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 %idxprom32, !dbg !4171
  %29 = load float, float* %arrayidx33, align 4, !dbg !4171
  %30 = load i32, i32* %axis2, align 4, !dbg !4172
  %idxprom34 = sext i32 %30 to i64, !dbg !4173
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 %idxprom34, !dbg !4173
  %31 = load float, float* %arrayidx35, align 4, !dbg !4173
  %sub36 = fsub float %29, %31, !dbg !4174
  store float %sub36, float* %t11, align 4, !dbg !4175
  br label %if.end, !dbg !4176

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %v137, metadata !4177, metadata !DIExpression()), !dbg !4179
  %32 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4180
  %v138 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %32, i32 0, i32 8, !dbg !4181
  %33 = load %struct.VertRen*, %struct.VertRen** %v138, align 8, !dbg !4181
  %co39 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %33, i32 0, i32 0, !dbg !4182
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !4180
  store float* %arraydecay40, float** %v137, align 8, !dbg !4179
  call void @llvm.dbg.declare(metadata float** %v241, metadata !4183, metadata !DIExpression()), !dbg !4184
  %34 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4185
  %v242 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %34, i32 0, i32 9, !dbg !4186
  %35 = load %struct.VertRen*, %struct.VertRen** %v242, align 8, !dbg !4186
  %co43 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %35, i32 0, i32 0, !dbg !4187
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %co43, i64 0, i64 0, !dbg !4185
  store float* %arraydecay44, float** %v241, align 8, !dbg !4184
  call void @llvm.dbg.declare(metadata float** %v345, metadata !4188, metadata !DIExpression()), !dbg !4189
  %36 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4190
  %v346 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %36, i32 0, i32 10, !dbg !4191
  %37 = load %struct.VertRen*, %struct.VertRen** %v346, align 8, !dbg !4191
  %co47 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %37, i32 0, i32 0, !dbg !4192
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %co47, i64 0, i64 0, !dbg !4190
  store float* %arraydecay48, float** %v345, align 8, !dbg !4189
  %38 = load float*, float** %v345, align 8, !dbg !4193
  %39 = load i32, i32* %axis1, align 4, !dbg !4194
  %idxprom49 = sext i32 %39 to i64, !dbg !4193
  %arrayidx50 = getelementptr inbounds float, float* %38, i64 %idxprom49, !dbg !4193
  %40 = load float, float* %arrayidx50, align 4, !dbg !4193
  %41 = load float*, float** %v137, align 8, !dbg !4195
  %42 = load i32, i32* %axis1, align 4, !dbg !4196
  %idxprom51 = sext i32 %42 to i64, !dbg !4195
  %arrayidx52 = getelementptr inbounds float, float* %41, i64 %idxprom51, !dbg !4195
  %43 = load float, float* %arrayidx52, align 4, !dbg !4195
  %sub53 = fsub float %40, %43, !dbg !4197
  store float %sub53, float* %t00, align 4, !dbg !4198
  %44 = load float*, float** %v345, align 8, !dbg !4199
  %45 = load i32, i32* %axis2, align 4, !dbg !4200
  %idxprom54 = sext i32 %45 to i64, !dbg !4199
  %arrayidx55 = getelementptr inbounds float, float* %44, i64 %idxprom54, !dbg !4199
  %46 = load float, float* %arrayidx55, align 4, !dbg !4199
  %47 = load float*, float** %v137, align 8, !dbg !4201
  %48 = load i32, i32* %axis2, align 4, !dbg !4202
  %idxprom56 = sext i32 %48 to i64, !dbg !4201
  %arrayidx57 = getelementptr inbounds float, float* %47, i64 %idxprom56, !dbg !4201
  %49 = load float, float* %arrayidx57, align 4, !dbg !4201
  %sub58 = fsub float %46, %49, !dbg !4203
  store float %sub58, float* %t01, align 4, !dbg !4204
  %50 = load float*, float** %v345, align 8, !dbg !4205
  %51 = load i32, i32* %axis1, align 4, !dbg !4206
  %idxprom59 = sext i32 %51 to i64, !dbg !4205
  %arrayidx60 = getelementptr inbounds float, float* %50, i64 %idxprom59, !dbg !4205
  %52 = load float, float* %arrayidx60, align 4, !dbg !4205
  %53 = load float*, float** %v241, align 8, !dbg !4207
  %54 = load i32, i32* %axis1, align 4, !dbg !4208
  %idxprom61 = sext i32 %54 to i64, !dbg !4207
  %arrayidx62 = getelementptr inbounds float, float* %53, i64 %idxprom61, !dbg !4207
  %55 = load float, float* %arrayidx62, align 4, !dbg !4207
  %sub63 = fsub float %52, %55, !dbg !4209
  store float %sub63, float* %t10, align 4, !dbg !4210
  %56 = load float*, float** %v345, align 8, !dbg !4211
  %57 = load i32, i32* %axis2, align 4, !dbg !4212
  %idxprom64 = sext i32 %57 to i64, !dbg !4211
  %arrayidx65 = getelementptr inbounds float, float* %56, i64 %idxprom64, !dbg !4211
  %58 = load float, float* %arrayidx65, align 4, !dbg !4211
  %59 = load float*, float** %v241, align 8, !dbg !4213
  %60 = load i32, i32* %axis2, align 4, !dbg !4214
  %idxprom66 = sext i32 %60 to i64, !dbg !4213
  %arrayidx67 = getelementptr inbounds float, float* %59, i64 %idxprom66, !dbg !4213
  %61 = load float, float* %arrayidx67, align 4, !dbg !4213
  %sub68 = fsub float %58, %61, !dbg !4215
  store float %sub68, float* %t11, align 4, !dbg !4216
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %62 = load float, float* %t00, align 4, !dbg !4217
  %63 = load float, float* %t11, align 4, !dbg !4218
  %mul = fmul float %62, %63, !dbg !4219
  %64 = load float, float* %t10, align 4, !dbg !4220
  %65 = load float, float* %t01, align 4, !dbg !4221
  %mul69 = fmul float %64, %65, !dbg !4222
  %sub70 = fsub float %mul, %mul69, !dbg !4223
  %div = fdiv float 1.000000e+00, %sub70, !dbg !4224
  store float %div, float* %detsh, align 4, !dbg !4225
  %66 = load float, float* %detsh, align 4, !dbg !4226
  %67 = load float, float* %t00, align 4, !dbg !4227
  %mul71 = fmul float %67, %66, !dbg !4227
  store float %mul71, float* %t00, align 4, !dbg !4227
  %68 = load float, float* %detsh, align 4, !dbg !4228
  %69 = load float, float* %t01, align 4, !dbg !4229
  %mul72 = fmul float %69, %68, !dbg !4229
  store float %mul72, float* %t01, align 4, !dbg !4229
  %70 = load float, float* %detsh, align 4, !dbg !4230
  %71 = load float, float* %t10, align 4, !dbg !4231
  %mul73 = fmul float %71, %70, !dbg !4231
  store float %mul73, float* %t10, align 4, !dbg !4231
  %72 = load float, float* %detsh, align 4, !dbg !4232
  %73 = load float, float* %t11, align 4, !dbg !4233
  %mul74 = fmul float %73, %72, !dbg !4233
  store float %mul74, float* %t11, align 4, !dbg !4233
  %74 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4234
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %74, i32 0, i32 78, !dbg !4235
  %75 = load i32, i32* %axis1, align 4, !dbg !4236
  %idxprom75 = sext i32 %75 to i64, !dbg !4234
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 %idxprom75, !dbg !4234
  %76 = load float, float* %arrayidx76, align 4, !dbg !4234
  %77 = load float, float* %t11, align 4, !dbg !4237
  %mul77 = fmul float %76, %77, !dbg !4238
  %78 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4239
  %dxco78 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %78, i32 0, i32 78, !dbg !4240
  %79 = load i32, i32* %axis2, align 4, !dbg !4241
  %idxprom79 = sext i32 %79 to i64, !dbg !4239
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %dxco78, i64 0, i64 %idxprom79, !dbg !4239
  %80 = load float, float* %arrayidx80, align 4, !dbg !4239
  %81 = load float, float* %t10, align 4, !dbg !4242
  %mul81 = fmul float %80, %81, !dbg !4243
  %sub82 = fsub float %mul77, %mul81, !dbg !4244
  %82 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4245
  %dx_u = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %82, i32 0, i32 25, !dbg !4246
  store float %sub82, float* %dx_u, align 8, !dbg !4247
  %83 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4248
  %dxco83 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %83, i32 0, i32 78, !dbg !4249
  %84 = load i32, i32* %axis2, align 4, !dbg !4250
  %idxprom84 = sext i32 %84 to i64, !dbg !4248
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %dxco83, i64 0, i64 %idxprom84, !dbg !4248
  %85 = load float, float* %arrayidx85, align 4, !dbg !4248
  %86 = load float, float* %t00, align 4, !dbg !4251
  %mul86 = fmul float %85, %86, !dbg !4252
  %87 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4253
  %dxco87 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %87, i32 0, i32 78, !dbg !4254
  %88 = load i32, i32* %axis1, align 4, !dbg !4255
  %idxprom88 = sext i32 %88 to i64, !dbg !4253
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %dxco87, i64 0, i64 %idxprom88, !dbg !4253
  %89 = load float, float* %arrayidx89, align 4, !dbg !4253
  %90 = load float, float* %t01, align 4, !dbg !4256
  %mul90 = fmul float %89, %90, !dbg !4257
  %sub91 = fsub float %mul86, %mul90, !dbg !4258
  %91 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4259
  %dx_v = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %91, i32 0, i32 26, !dbg !4260
  store float %sub91, float* %dx_v, align 4, !dbg !4261
  %92 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4262
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %92, i32 0, i32 79, !dbg !4263
  %93 = load i32, i32* %axis1, align 4, !dbg !4264
  %idxprom92 = sext i32 %93 to i64, !dbg !4262
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 %idxprom92, !dbg !4262
  %94 = load float, float* %arrayidx93, align 4, !dbg !4262
  %95 = load float, float* %t11, align 4, !dbg !4265
  %mul94 = fmul float %94, %95, !dbg !4266
  %96 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4267
  %dyco95 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %96, i32 0, i32 79, !dbg !4268
  %97 = load i32, i32* %axis2, align 4, !dbg !4269
  %idxprom96 = sext i32 %97 to i64, !dbg !4267
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %dyco95, i64 0, i64 %idxprom96, !dbg !4267
  %98 = load float, float* %arrayidx97, align 4, !dbg !4267
  %99 = load float, float* %t10, align 4, !dbg !4270
  %mul98 = fmul float %98, %99, !dbg !4271
  %sub99 = fsub float %mul94, %mul98, !dbg !4272
  %100 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4273
  %dy_u = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %100, i32 0, i32 27, !dbg !4274
  store float %sub99, float* %dy_u, align 8, !dbg !4275
  %101 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4276
  %dyco100 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %101, i32 0, i32 79, !dbg !4277
  %102 = load i32, i32* %axis2, align 4, !dbg !4278
  %idxprom101 = sext i32 %102 to i64, !dbg !4276
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %dyco100, i64 0, i64 %idxprom101, !dbg !4276
  %103 = load float, float* %arrayidx102, align 4, !dbg !4276
  %104 = load float, float* %t00, align 4, !dbg !4279
  %mul103 = fmul float %103, %104, !dbg !4280
  %105 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4281
  %dyco104 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %105, i32 0, i32 79, !dbg !4282
  %106 = load i32, i32* %axis1, align 4, !dbg !4283
  %idxprom105 = sext i32 %106 to i64, !dbg !4281
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %dyco104, i64 0, i64 %idxprom105, !dbg !4281
  %107 = load float, float* %arrayidx106, align 4, !dbg !4281
  %108 = load float, float* %t01, align 4, !dbg !4284
  %mul107 = fmul float %107, %108, !dbg !4285
  %sub108 = fsub float %mul103, %mul107, !dbg !4286
  %109 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4287
  %dy_v = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %109, i32 0, i32 28, !dbg !4288
  store float %sub108, float* %dy_v, align 4, !dbg !4289
  ret void, !dbg !4290
}

declare dso_local void @shade_input_set_normals(%struct.ShadeInput*) #2

declare dso_local void @shade_input_set_shade_texco(%struct.ShadeInput*) #2

declare dso_local void @shade_volume_shadow(%struct.ShadeInput*, %struct.ShadeResult*, %struct.Isect*) #2

declare dso_local void @shade_volume_outside(%struct.ShadeInput*, %struct.ShadeResult*) #2

declare dso_local zeroext i8 @ntreeShaderExecTree(%struct.bNodeTree*, %struct.ShadeInput*, %struct.ShadeResult*) #2

declare dso_local void @shade_color(%struct.ShadeInput*, %struct.ShadeResult*) #2

declare dso_local void @shade_material_loop(%struct.ShadeInput*, %struct.ShadeResult*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !4291 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4294, metadata !DIExpression()), !dbg !4295
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4296, metadata !DIExpression()), !dbg !4297
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !4298, metadata !DIExpression()), !dbg !4299
  %0 = load float*, float** %a.addr, align 8, !dbg !4300
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4300
  %1 = load float, float* %arrayidx, align 4, !dbg !4300
  %2 = load float*, float** %b.addr, align 8, !dbg !4301
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4301
  %3 = load float, float* %arrayidx1, align 4, !dbg !4301
  %sub = fsub float %1, %3, !dbg !4302
  %4 = load float*, float** %r.addr, align 8, !dbg !4303
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !4303
  store float %sub, float* %arrayidx2, align 4, !dbg !4304
  %5 = load float*, float** %a.addr, align 8, !dbg !4305
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4305
  %6 = load float, float* %arrayidx3, align 4, !dbg !4305
  %7 = load float*, float** %b.addr, align 8, !dbg !4306
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !4306
  %8 = load float, float* %arrayidx4, align 4, !dbg !4306
  %sub5 = fsub float %6, %8, !dbg !4307
  %9 = load float*, float** %r.addr, align 8, !dbg !4308
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !4308
  store float %sub5, float* %arrayidx6, align 4, !dbg !4309
  %10 = load float*, float** %a.addr, align 8, !dbg !4310
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !4310
  %11 = load float, float* %arrayidx7, align 4, !dbg !4310
  %12 = load float*, float** %b.addr, align 8, !dbg !4311
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !4311
  %13 = load float, float* %arrayidx8, align 4, !dbg !4311
  %sub9 = fsub float %11, %13, !dbg !4312
  %14 = load float*, float** %r.addr, align 8, !dbg !4313
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !4313
  store float %sub9, float* %arrayidx10, align 4, !dbg !4314
  ret void, !dbg !4315
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_jitter_plane(%struct.LampRen* %lar) #0 !dbg !4316 {
entry:
  %lar.addr = alloca %struct.LampRen*, align 8
  %fp = alloca float*, align 8
  %x = alloca i32, align 4
  %tot = alloca i32, align 4
  %rng = alloca %struct.RNG*, align 8
  %iter = alloca i32, align 4
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !4471, metadata !DIExpression()), !dbg !4472
  call void @llvm.dbg.declare(metadata float** %fp, metadata !4473, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4475, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !4477, metadata !DIExpression()), !dbg !4478
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4479
  %ray_totsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 49, !dbg !4480
  %1 = load i16, i16* %ray_totsamp, align 8, !dbg !4480
  %conv = sext i16 %1 to i32, !dbg !4479
  store i32 %conv, i32* %tot, align 4, !dbg !4478
  %2 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4481
  %jitter = getelementptr inbounds %struct.LampRen, %struct.LampRen* %2, i32 0, i32 58, !dbg !4483
  %3 = load float*, float** %jitter, align 8, !dbg !4483
  %tobool = icmp ne float* %3, null, !dbg !4481
  br i1 %tobool, label %if.then, label %if.end, !dbg !4484

if.then:                                          ; preds = %entry
  br label %return, !dbg !4485

if.end:                                           ; preds = %entry
  store i32 4, i32* %x, align 4, !dbg !4486
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4488
  %5 = load i32, i32* %x, align 4, !dbg !4489
  %6 = load i32, i32* %tot, align 4, !dbg !4490
  %mul = mul nsw i32 %5, %6, !dbg !4491
  %mul1 = mul nsw i32 %mul, 2, !dbg !4492
  %conv2 = sext i32 %mul1 to i64, !dbg !4489
  %mul3 = mul i64 %conv2, 4, !dbg !4493
  %call = call i8* %4(i64 %mul3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)), !dbg !4488
  %7 = bitcast i8* %call to float*, !dbg !4488
  %8 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4494
  %jitter4 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %8, i32 0, i32 58, !dbg !4495
  store float* %7, float** %jitter4, align 8, !dbg !4496
  store float* %7, float** %fp, align 8, !dbg !4497
  %9 = load i32, i32* %tot, align 4, !dbg !4498
  %cmp = icmp sgt i32 %9, 1, !dbg !4500
  br i1 %cmp, label %if.then6, label %if.end29, !dbg !4501

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.RNG** %rng, metadata !4502, metadata !DIExpression()), !dbg !4508
  %10 = load i32, i32* %tot, align 4, !dbg !4509
  %call7 = call %struct.RNG* @BLI_rng_new_srandom(i32 %10), !dbg !4510
  store %struct.RNG* %call7, %struct.RNG** %rng, align 8, !dbg !4508
  call void @llvm.dbg.declare(metadata i32* %iter, metadata !4511, metadata !DIExpression()), !dbg !4512
  store i32 12, i32* %iter, align 4, !dbg !4512
  store i32 0, i32* %x, align 4, !dbg !4513
  br label %for.cond, !dbg !4515

for.cond:                                         ; preds = %for.inc, %if.then6
  %11 = load i32, i32* %x, align 4, !dbg !4516
  %12 = load i32, i32* %tot, align 4, !dbg !4518
  %cmp8 = icmp slt i32 %11, %12, !dbg !4519
  br i1 %cmp8, label %for.body, label %for.end, !dbg !4520

for.body:                                         ; preds = %for.cond
  %13 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !4521
  %call10 = call float @BLI_rng_get_float(%struct.RNG* %13), !dbg !4523
  %sub = fsub float %call10, 5.000000e-01, !dbg !4524
  %14 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4525
  %area_size = getelementptr inbounds %struct.LampRen, %struct.LampRen* %14, i32 0, i32 52, !dbg !4526
  %15 = load float, float* %area_size, align 8, !dbg !4526
  %mul11 = fmul float %sub, %15, !dbg !4527
  %16 = load float*, float** %fp, align 8, !dbg !4528
  %arrayidx = getelementptr inbounds float, float* %16, i64 0, !dbg !4528
  store float %mul11, float* %arrayidx, align 4, !dbg !4529
  %17 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !4530
  %call12 = call float @BLI_rng_get_float(%struct.RNG* %17), !dbg !4531
  %sub13 = fsub float %call12, 5.000000e-01, !dbg !4532
  %18 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4533
  %area_sizey = getelementptr inbounds %struct.LampRen, %struct.LampRen* %18, i32 0, i32 53, !dbg !4534
  %19 = load float, float* %area_sizey, align 4, !dbg !4534
  %mul14 = fmul float %sub13, %19, !dbg !4535
  %20 = load float*, float** %fp, align 8, !dbg !4536
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !4536
  store float %mul14, float* %arrayidx15, align 4, !dbg !4537
  br label %for.inc, !dbg !4538

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %x, align 4, !dbg !4539
  %inc = add nsw i32 %21, 1, !dbg !4539
  store i32 %inc, i32* %x, align 4, !dbg !4539
  %22 = load float*, float** %fp, align 8, !dbg !4540
  %add.ptr = getelementptr inbounds float, float* %22, i64 2, !dbg !4540
  store float* %add.ptr, float** %fp, align 8, !dbg !4540
  br label %for.cond, !dbg !4541, !llvm.loop !4542

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !4544

while.cond:                                       ; preds = %for.end28, %for.end
  %23 = load i32, i32* %iter, align 4, !dbg !4545
  %dec = add nsw i32 %23, -1, !dbg !4545
  store i32 %dec, i32* %iter, align 4, !dbg !4545
  %tobool16 = icmp ne i32 %23, 0, !dbg !4544
  br i1 %tobool16, label %while.body, label %while.end, !dbg !4544

while.body:                                       ; preds = %while.cond
  %24 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4546
  %jitter17 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %24, i32 0, i32 58, !dbg !4548
  %25 = load float*, float** %jitter17, align 8, !dbg !4548
  store float* %25, float** %fp, align 8, !dbg !4549
  %26 = load i32, i32* %tot, align 4, !dbg !4550
  store i32 %26, i32* %x, align 4, !dbg !4552
  br label %for.cond18, !dbg !4553

for.cond18:                                       ; preds = %for.inc25, %while.body
  %27 = load i32, i32* %x, align 4, !dbg !4554
  %cmp19 = icmp sgt i32 %27, 0, !dbg !4556
  br i1 %cmp19, label %for.body21, label %for.end28, !dbg !4557

for.body21:                                       ; preds = %for.cond18
  %28 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4558
  %jitter22 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %28, i32 0, i32 58, !dbg !4560
  %29 = load float*, float** %jitter22, align 8, !dbg !4560
  %30 = load float*, float** %fp, align 8, !dbg !4561
  %31 = load i32, i32* %tot, align 4, !dbg !4562
  %32 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4563
  %area_size23 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %32, i32 0, i32 52, !dbg !4564
  %33 = load float, float* %area_size23, align 8, !dbg !4564
  %34 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4565
  %area_sizey24 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %34, i32 0, i32 53, !dbg !4566
  %35 = load float, float* %area_sizey24, align 4, !dbg !4566
  call void @DP_energy(float* %29, float* %30, i32 %31, float %33, float %35), !dbg !4567
  br label %for.inc25, !dbg !4568

for.inc25:                                        ; preds = %for.body21
  %36 = load i32, i32* %x, align 4, !dbg !4569
  %dec26 = add nsw i32 %36, -1, !dbg !4569
  store i32 %dec26, i32* %x, align 4, !dbg !4569
  %37 = load float*, float** %fp, align 8, !dbg !4570
  %add.ptr27 = getelementptr inbounds float, float* %37, i64 2, !dbg !4570
  store float* %add.ptr27, float** %fp, align 8, !dbg !4570
  br label %for.cond18, !dbg !4571, !llvm.loop !4572

for.end28:                                        ; preds = %for.cond18
  br label %while.cond, !dbg !4544, !llvm.loop !4574

while.end:                                        ; preds = %while.cond
  %38 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !4576
  call void @BLI_rng_free(%struct.RNG* %38), !dbg !4577
  br label %if.end29, !dbg !4578

if.end29:                                         ; preds = %while.end, %if.end
  %39 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4579
  %jitter30 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %39, i32 0, i32 58, !dbg !4580
  %40 = load float*, float** %jitter30, align 8, !dbg !4580
  %41 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4581
  %jitter31 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %41, i32 0, i32 58, !dbg !4582
  %42 = load float*, float** %jitter31, align 8, !dbg !4582
  %43 = load i32, i32* %tot, align 4, !dbg !4583
  %mul32 = mul nsw i32 2, %43, !dbg !4584
  %idx.ext = sext i32 %mul32 to i64, !dbg !4585
  %add.ptr33 = getelementptr inbounds float, float* %42, i64 %idx.ext, !dbg !4585
  %44 = load i32, i32* %tot, align 4, !dbg !4586
  %45 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4587
  %area_size34 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %45, i32 0, i32 52, !dbg !4588
  %46 = load float, float* %area_size34, align 8, !dbg !4588
  %47 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4589
  %area_sizey35 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %47, i32 0, i32 53, !dbg !4590
  %48 = load float, float* %area_sizey35, align 4, !dbg !4590
  call void @jitter_plane_offset(float* %40, float* %add.ptr33, i32 %44, float %46, float %48, float 5.000000e-01, float 0.000000e+00), !dbg !4591
  %49 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4592
  %jitter36 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %49, i32 0, i32 58, !dbg !4593
  %50 = load float*, float** %jitter36, align 8, !dbg !4593
  %51 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4594
  %jitter37 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %51, i32 0, i32 58, !dbg !4595
  %52 = load float*, float** %jitter37, align 8, !dbg !4595
  %53 = load i32, i32* %tot, align 4, !dbg !4596
  %mul38 = mul nsw i32 4, %53, !dbg !4597
  %idx.ext39 = sext i32 %mul38 to i64, !dbg !4598
  %add.ptr40 = getelementptr inbounds float, float* %52, i64 %idx.ext39, !dbg !4598
  %54 = load i32, i32* %tot, align 4, !dbg !4599
  %55 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4600
  %area_size41 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %55, i32 0, i32 52, !dbg !4601
  %56 = load float, float* %area_size41, align 8, !dbg !4601
  %57 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4602
  %area_sizey42 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %57, i32 0, i32 53, !dbg !4603
  %58 = load float, float* %area_sizey42, align 4, !dbg !4603
  call void @jitter_plane_offset(float* %50, float* %add.ptr40, i32 %54, float %56, float %58, float 5.000000e-01, float 5.000000e-01), !dbg !4604
  %59 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4605
  %jitter43 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %59, i32 0, i32 58, !dbg !4606
  %60 = load float*, float** %jitter43, align 8, !dbg !4606
  %61 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4607
  %jitter44 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %61, i32 0, i32 58, !dbg !4608
  %62 = load float*, float** %jitter44, align 8, !dbg !4608
  %63 = load i32, i32* %tot, align 4, !dbg !4609
  %mul45 = mul nsw i32 6, %63, !dbg !4610
  %idx.ext46 = sext i32 %mul45 to i64, !dbg !4611
  %add.ptr47 = getelementptr inbounds float, float* %62, i64 %idx.ext46, !dbg !4611
  %64 = load i32, i32* %tot, align 4, !dbg !4612
  %65 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4613
  %area_size48 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %65, i32 0, i32 52, !dbg !4614
  %66 = load float, float* %area_size48, align 8, !dbg !4614
  %67 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4615
  %area_sizey49 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %67, i32 0, i32 53, !dbg !4616
  %68 = load float, float* %area_sizey49, align 4, !dbg !4616
  call void @jitter_plane_offset(float* %60, float* %add.ptr47, i32 %64, float %66, float %68, float 0.000000e+00, float 5.000000e-01), !dbg !4617
  br label %return, !dbg !4618

return:                                           ; preds = %if.end29, %if.then
  ret void, !dbg !4618
}

declare dso_local %struct.RNG* @BLI_rng_new_srandom(i32) #2

declare dso_local float @BLI_rng_get_float(%struct.RNG*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @DP_energy(float* %table, float* %vec, i32 %tot, float %xsize, float %ysize) #0 !dbg !4619 {
entry:
  %table.addr = alloca float*, align 8
  %vec.addr = alloca float*, align 8
  %tot.addr = alloca i32, align 4
  %xsize.addr = alloca float, align 4
  %ysize.addr = alloca float, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %a = alloca i32, align 4
  %fp = alloca float*, align 8
  %force = alloca [3 x float], align 4
  %result = alloca [3 x float], align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %dist = alloca float, align 4
  %min = alloca float, align 4
  store float* %table, float** %table.addr, align 8
  call void @llvm.dbg.declare(metadata float** %table.addr, metadata !4622, metadata !DIExpression()), !dbg !4623
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !4624, metadata !DIExpression()), !dbg !4625
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !4626, metadata !DIExpression()), !dbg !4627
  store float %xsize, float* %xsize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %xsize.addr, metadata !4628, metadata !DIExpression()), !dbg !4629
  store float %ysize, float* %ysize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ysize.addr, metadata !4630, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4632, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4634, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4636, metadata !DIExpression()), !dbg !4637
  call void @llvm.dbg.declare(metadata float** %fp, metadata !4638, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.declare(metadata [3 x float]* %force, metadata !4640, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.declare(metadata [3 x float]* %result, metadata !4642, metadata !DIExpression()), !dbg !4643
  call void @llvm.dbg.declare(metadata float* %dx, metadata !4644, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.declare(metadata float* %dy, metadata !4646, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.declare(metadata float* %dist, metadata !4648, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.declare(metadata float* %min, metadata !4650, metadata !DIExpression()), !dbg !4651
  %0 = load float, float* %xsize.addr, align 4, !dbg !4652
  %1 = load float, float* %ysize.addr, align 4, !dbg !4652
  %cmp = fcmp olt float %0, %1, !dbg !4652
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4652

cond.true:                                        ; preds = %entry
  %2 = load float, float* %xsize.addr, align 4, !dbg !4652
  br label %cond.end, !dbg !4652

cond.false:                                       ; preds = %entry
  %3 = load float, float* %ysize.addr, align 4, !dbg !4652
  br label %cond.end, !dbg !4652

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !4652
  store float %cond, float* %min, align 4, !dbg !4653
  %4 = load float, float* %min, align 4, !dbg !4654
  %5 = load float, float* %min, align 4, !dbg !4655
  %mul = fmul float %5, %4, !dbg !4655
  store float %mul, float* %min, align 4, !dbg !4655
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 1, !dbg !4656
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !4657
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 0, !dbg !4658
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !4659
  store i32 -1, i32* %y, align 4, !dbg !4660
  br label %for.cond, !dbg !4662

for.cond:                                         ; preds = %for.inc43, %cond.end
  %6 = load i32, i32* %y, align 4, !dbg !4663
  %cmp2 = icmp slt i32 %6, 2, !dbg !4665
  br i1 %cmp2, label %for.body, label %for.end45, !dbg !4666

for.body:                                         ; preds = %for.cond
  %7 = load float, float* %ysize.addr, align 4, !dbg !4667
  %8 = load i32, i32* %y, align 4, !dbg !4669
  %conv = sitofp i32 %8 to float, !dbg !4669
  %mul3 = fmul float %7, %conv, !dbg !4670
  store float %mul3, float* %dy, align 4, !dbg !4671
  store i32 -1, i32* %x, align 4, !dbg !4672
  br label %for.cond4, !dbg !4674

for.cond4:                                        ; preds = %for.inc40, %for.body
  %9 = load i32, i32* %x, align 4, !dbg !4675
  %cmp5 = icmp slt i32 %9, 2, !dbg !4677
  br i1 %cmp5, label %for.body7, label %for.end42, !dbg !4678

for.body7:                                        ; preds = %for.cond4
  %10 = load float, float* %xsize.addr, align 4, !dbg !4679
  %11 = load i32, i32* %x, align 4, !dbg !4681
  %conv8 = sitofp i32 %11 to float, !dbg !4681
  %mul9 = fmul float %10, %conv8, !dbg !4682
  store float %mul9, float* %dx, align 4, !dbg !4683
  %12 = load float*, float** %table.addr, align 8, !dbg !4684
  store float* %12, float** %fp, align 8, !dbg !4685
  store i32 0, i32* %a, align 4, !dbg !4686
  br label %for.cond10, !dbg !4688

for.cond10:                                       ; preds = %for.inc, %for.body7
  %13 = load i32, i32* %a, align 4, !dbg !4689
  %14 = load i32, i32* %tot.addr, align 4, !dbg !4691
  %cmp11 = icmp slt i32 %13, %14, !dbg !4692
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !4693

for.body13:                                       ; preds = %for.cond10
  %15 = load float*, float** %vec.addr, align 8, !dbg !4694
  %arrayidx14 = getelementptr inbounds float, float* %15, i64 0, !dbg !4694
  %16 = load float, float* %arrayidx14, align 4, !dbg !4694
  %17 = load float*, float** %fp, align 8, !dbg !4696
  %arrayidx15 = getelementptr inbounds float, float* %17, i64 0, !dbg !4696
  %18 = load float, float* %arrayidx15, align 4, !dbg !4696
  %sub = fsub float %16, %18, !dbg !4697
  %19 = load float, float* %dx, align 4, !dbg !4698
  %sub16 = fsub float %sub, %19, !dbg !4699
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !4700
  store float %sub16, float* %arrayidx17, align 4, !dbg !4701
  %20 = load float*, float** %vec.addr, align 8, !dbg !4702
  %arrayidx18 = getelementptr inbounds float, float* %20, i64 1, !dbg !4702
  %21 = load float, float* %arrayidx18, align 4, !dbg !4702
  %22 = load float*, float** %fp, align 8, !dbg !4703
  %arrayidx19 = getelementptr inbounds float, float* %22, i64 1, !dbg !4703
  %23 = load float, float* %arrayidx19, align 4, !dbg !4703
  %sub20 = fsub float %21, %23, !dbg !4704
  %24 = load float, float* %dy, align 4, !dbg !4705
  %sub21 = fsub float %sub20, %24, !dbg !4706
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 1, !dbg !4707
  store float %sub21, float* %arrayidx22, align 4, !dbg !4708
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !4709
  %25 = load float, float* %arrayidx23, align 4, !dbg !4709
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !4710
  %26 = load float, float* %arrayidx24, align 4, !dbg !4710
  %mul25 = fmul float %25, %26, !dbg !4711
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 1, !dbg !4712
  %27 = load float, float* %arrayidx26, align 4, !dbg !4712
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 1, !dbg !4713
  %28 = load float, float* %arrayidx27, align 4, !dbg !4713
  %mul28 = fmul float %27, %28, !dbg !4714
  %add = fadd float %mul25, %mul28, !dbg !4715
  store float %add, float* %dist, align 4, !dbg !4716
  %29 = load float, float* %dist, align 4, !dbg !4717
  %30 = load float, float* %min, align 4, !dbg !4719
  %cmp29 = fcmp olt float %29, %30, !dbg !4720
  br i1 %cmp29, label %land.lhs.true, label %if.end, !dbg !4721

land.lhs.true:                                    ; preds = %for.body13
  %31 = load float, float* %dist, align 4, !dbg !4722
  %cmp31 = fcmp ogt float %31, 0.000000e+00, !dbg !4723
  br i1 %cmp31, label %if.then, label %if.end, !dbg !4724

if.then:                                          ; preds = %land.lhs.true
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !4725
  %32 = load float, float* %arrayidx33, align 4, !dbg !4725
  %33 = load float, float* %dist, align 4, !dbg !4727
  %div = fdiv float %32, %33, !dbg !4728
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 0, !dbg !4729
  %34 = load float, float* %arrayidx34, align 4, !dbg !4730
  %add35 = fadd float %34, %div, !dbg !4730
  store float %add35, float* %arrayidx34, align 4, !dbg !4730
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 1, !dbg !4731
  %35 = load float, float* %arrayidx36, align 4, !dbg !4731
  %36 = load float, float* %dist, align 4, !dbg !4732
  %div37 = fdiv float %35, %36, !dbg !4733
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 1, !dbg !4734
  %37 = load float, float* %arrayidx38, align 4, !dbg !4735
  %add39 = fadd float %37, %div37, !dbg !4735
  store float %add39, float* %arrayidx38, align 4, !dbg !4735
  br label %if.end, !dbg !4736

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body13
  br label %for.inc, !dbg !4737

for.inc:                                          ; preds = %if.end
  %38 = load i32, i32* %a, align 4, !dbg !4738
  %inc = add nsw i32 %38, 1, !dbg !4738
  store i32 %inc, i32* %a, align 4, !dbg !4738
  %39 = load float*, float** %fp, align 8, !dbg !4739
  %add.ptr = getelementptr inbounds float, float* %39, i64 2, !dbg !4739
  store float* %add.ptr, float** %fp, align 8, !dbg !4739
  br label %for.cond10, !dbg !4740, !llvm.loop !4741

for.end:                                          ; preds = %for.cond10
  br label %for.inc40, !dbg !4743

for.inc40:                                        ; preds = %for.end
  %40 = load i32, i32* %x, align 4, !dbg !4744
  %inc41 = add nsw i32 %40, 1, !dbg !4744
  store i32 %inc41, i32* %x, align 4, !dbg !4744
  br label %for.cond4, !dbg !4745, !llvm.loop !4746

for.end42:                                        ; preds = %for.cond4
  br label %for.inc43, !dbg !4748

for.inc43:                                        ; preds = %for.end42
  %41 = load i32, i32* %y, align 4, !dbg !4749
  %inc44 = add nsw i32 %41, 1, !dbg !4749
  store i32 %inc44, i32* %y, align 4, !dbg !4749
  br label %for.cond, !dbg !4750, !llvm.loop !4751

for.end45:                                        ; preds = %for.cond
  %42 = load float, float* %min, align 4, !dbg !4753
  %mul46 = fmul float 0x3FB99999A0000000, %42, !dbg !4754
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 0, !dbg !4755
  %43 = load float, float* %arrayidx47, align 4, !dbg !4755
  %mul48 = fmul float %mul46, %43, !dbg !4756
  %44 = load i32, i32* %tot.addr, align 4, !dbg !4757
  %conv49 = sitofp i32 %44 to float, !dbg !4758
  %div50 = fdiv float %mul48, %conv49, !dbg !4759
  %45 = load float*, float** %vec.addr, align 8, !dbg !4760
  %arrayidx51 = getelementptr inbounds float, float* %45, i64 0, !dbg !4760
  %46 = load float, float* %arrayidx51, align 4, !dbg !4761
  %add52 = fadd float %46, %div50, !dbg !4761
  store float %add52, float* %arrayidx51, align 4, !dbg !4761
  %47 = load float, float* %min, align 4, !dbg !4762
  %mul53 = fmul float 0x3FB99999A0000000, %47, !dbg !4763
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 1, !dbg !4764
  %48 = load float, float* %arrayidx54, align 4, !dbg !4764
  %mul55 = fmul float %mul53, %48, !dbg !4765
  %49 = load i32, i32* %tot.addr, align 4, !dbg !4766
  %conv56 = sitofp i32 %49 to float, !dbg !4767
  %div57 = fdiv float %mul55, %conv56, !dbg !4768
  %50 = load float*, float** %vec.addr, align 8, !dbg !4769
  %arrayidx58 = getelementptr inbounds float, float* %50, i64 1, !dbg !4769
  %51 = load float, float* %arrayidx58, align 4, !dbg !4770
  %add59 = fadd float %51, %div57, !dbg !4770
  store float %add59, float* %arrayidx58, align 4, !dbg !4770
  %52 = load float*, float** %vec.addr, align 8, !dbg !4771
  %arrayidx60 = getelementptr inbounds float, float* %52, i64 0, !dbg !4771
  %53 = load float, float* %arrayidx60, align 4, !dbg !4771
  %54 = load float, float* %xsize.addr, align 4, !dbg !4772
  %55 = load float*, float** %vec.addr, align 8, !dbg !4773
  %arrayidx61 = getelementptr inbounds float, float* %55, i64 0, !dbg !4773
  %56 = load float, float* %arrayidx61, align 4, !dbg !4773
  %57 = load float, float* %xsize.addr, align 4, !dbg !4774
  %div62 = fdiv float %56, %57, !dbg !4775
  %add63 = fadd float %div62, 5.000000e-01, !dbg !4776
  %58 = call float @llvm.floor.f32(float %add63), !dbg !4777
  %mul64 = fmul float %54, %58, !dbg !4778
  %sub65 = fsub float %53, %mul64, !dbg !4779
  %59 = load float*, float** %vec.addr, align 8, !dbg !4780
  %arrayidx66 = getelementptr inbounds float, float* %59, i64 0, !dbg !4780
  store float %sub65, float* %arrayidx66, align 4, !dbg !4781
  %60 = load float*, float** %vec.addr, align 8, !dbg !4782
  %arrayidx67 = getelementptr inbounds float, float* %60, i64 1, !dbg !4782
  %61 = load float, float* %arrayidx67, align 4, !dbg !4782
  %62 = load float, float* %ysize.addr, align 4, !dbg !4783
  %63 = load float*, float** %vec.addr, align 8, !dbg !4784
  %arrayidx68 = getelementptr inbounds float, float* %63, i64 1, !dbg !4784
  %64 = load float, float* %arrayidx68, align 4, !dbg !4784
  %65 = load float, float* %ysize.addr, align 4, !dbg !4785
  %div69 = fdiv float %64, %65, !dbg !4786
  %add70 = fadd float %div69, 5.000000e-01, !dbg !4787
  %66 = call float @llvm.floor.f32(float %add70), !dbg !4788
  %mul71 = fmul float %62, %66, !dbg !4789
  %sub72 = fsub float %61, %mul71, !dbg !4790
  %67 = load float*, float** %vec.addr, align 8, !dbg !4791
  %arrayidx73 = getelementptr inbounds float, float* %67, i64 1, !dbg !4791
  store float %sub72, float* %arrayidx73, align 4, !dbg !4792
  ret void, !dbg !4793
}

declare dso_local void @BLI_rng_free(%struct.RNG*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @jitter_plane_offset(float* %jitter1, float* %jitter2, i32 %tot, float %sizex, float %sizey, float %ofsx, float %ofsy) #0 !dbg !4794 {
entry:
  %jitter1.addr = alloca float*, align 8
  %jitter2.addr = alloca float*, align 8
  %tot.addr = alloca i32, align 4
  %sizex.addr = alloca float, align 4
  %sizey.addr = alloca float, align 4
  %ofsx.addr = alloca float, align 4
  %ofsy.addr = alloca float, align 4
  %dsizex = alloca float, align 4
  %dsizey = alloca float, align 4
  %hsizex = alloca float, align 4
  %hsizey = alloca float, align 4
  %x = alloca i32, align 4
  store float* %jitter1, float** %jitter1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %jitter1.addr, metadata !4797, metadata !DIExpression()), !dbg !4798
  store float* %jitter2, float** %jitter2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %jitter2.addr, metadata !4799, metadata !DIExpression()), !dbg !4800
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !4801, metadata !DIExpression()), !dbg !4802
  store float %sizex, float* %sizex.addr, align 4
  call void @llvm.dbg.declare(metadata float* %sizex.addr, metadata !4803, metadata !DIExpression()), !dbg !4804
  store float %sizey, float* %sizey.addr, align 4
  call void @llvm.dbg.declare(metadata float* %sizey.addr, metadata !4805, metadata !DIExpression()), !dbg !4806
  store float %ofsx, float* %ofsx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ofsx.addr, metadata !4807, metadata !DIExpression()), !dbg !4808
  store float %ofsy, float* %ofsy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ofsy.addr, metadata !4809, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.declare(metadata float* %dsizex, metadata !4811, metadata !DIExpression()), !dbg !4812
  %0 = load float, float* %sizex.addr, align 4, !dbg !4813
  %1 = load float, float* %ofsx.addr, align 4, !dbg !4814
  %mul = fmul float %0, %1, !dbg !4815
  store float %mul, float* %dsizex, align 4, !dbg !4812
  call void @llvm.dbg.declare(metadata float* %dsizey, metadata !4816, metadata !DIExpression()), !dbg !4817
  %2 = load float, float* %sizey.addr, align 4, !dbg !4818
  %3 = load float, float* %ofsy.addr, align 4, !dbg !4819
  %mul1 = fmul float %2, %3, !dbg !4820
  store float %mul1, float* %dsizey, align 4, !dbg !4817
  call void @llvm.dbg.declare(metadata float* %hsizex, metadata !4821, metadata !DIExpression()), !dbg !4822
  %4 = load float, float* %sizex.addr, align 4, !dbg !4823
  %mul2 = fmul float 5.000000e-01, %4, !dbg !4824
  store float %mul2, float* %hsizex, align 4, !dbg !4822
  call void @llvm.dbg.declare(metadata float* %hsizey, metadata !4825, metadata !DIExpression()), !dbg !4826
  %5 = load float, float* %sizey.addr, align 4, !dbg !4827
  %mul3 = fmul float 5.000000e-01, %5, !dbg !4828
  store float %mul3, float* %hsizey, align 4, !dbg !4826
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4829, metadata !DIExpression()), !dbg !4830
  %6 = load i32, i32* %tot.addr, align 4, !dbg !4831
  store i32 %6, i32* %x, align 4, !dbg !4833
  br label %for.cond, !dbg !4834

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %x, align 4, !dbg !4835
  %cmp = icmp sgt i32 %7, 0, !dbg !4837
  br i1 %cmp, label %for.body, label %for.end, !dbg !4838

for.body:                                         ; preds = %for.cond
  %8 = load float*, float** %jitter1.addr, align 8, !dbg !4839
  %arrayidx = getelementptr inbounds float, float* %8, i64 0, !dbg !4839
  %9 = load float, float* %arrayidx, align 4, !dbg !4839
  %10 = load float, float* %dsizex, align 4, !dbg !4841
  %add = fadd float %9, %10, !dbg !4842
  %11 = load float*, float** %jitter2.addr, align 8, !dbg !4843
  %arrayidx4 = getelementptr inbounds float, float* %11, i64 0, !dbg !4843
  store float %add, float* %arrayidx4, align 4, !dbg !4844
  %12 = load float*, float** %jitter1.addr, align 8, !dbg !4845
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 1, !dbg !4845
  %13 = load float, float* %arrayidx5, align 4, !dbg !4845
  %14 = load float, float* %dsizey, align 4, !dbg !4846
  %add6 = fadd float %13, %14, !dbg !4847
  %15 = load float*, float** %jitter2.addr, align 8, !dbg !4848
  %arrayidx7 = getelementptr inbounds float, float* %15, i64 1, !dbg !4848
  store float %add6, float* %arrayidx7, align 4, !dbg !4849
  %16 = load float*, float** %jitter2.addr, align 8, !dbg !4850
  %arrayidx8 = getelementptr inbounds float, float* %16, i64 0, !dbg !4850
  %17 = load float, float* %arrayidx8, align 4, !dbg !4850
  %18 = load float, float* %hsizex, align 4, !dbg !4852
  %cmp9 = fcmp ogt float %17, %18, !dbg !4853
  br i1 %cmp9, label %if.then, label %if.end, !dbg !4854

if.then:                                          ; preds = %for.body
  %19 = load float, float* %sizex.addr, align 4, !dbg !4855
  %20 = load float*, float** %jitter2.addr, align 8, !dbg !4856
  %arrayidx10 = getelementptr inbounds float, float* %20, i64 0, !dbg !4856
  %21 = load float, float* %arrayidx10, align 4, !dbg !4857
  %sub = fsub float %21, %19, !dbg !4857
  store float %sub, float* %arrayidx10, align 4, !dbg !4857
  br label %if.end, !dbg !4856

if.end:                                           ; preds = %if.then, %for.body
  %22 = load float*, float** %jitter2.addr, align 8, !dbg !4858
  %arrayidx11 = getelementptr inbounds float, float* %22, i64 1, !dbg !4858
  %23 = load float, float* %arrayidx11, align 4, !dbg !4858
  %24 = load float, float* %hsizey, align 4, !dbg !4860
  %cmp12 = fcmp ogt float %23, %24, !dbg !4861
  br i1 %cmp12, label %if.then13, label %if.end16, !dbg !4862

if.then13:                                        ; preds = %if.end
  %25 = load float, float* %sizey.addr, align 4, !dbg !4863
  %26 = load float*, float** %jitter2.addr, align 8, !dbg !4864
  %arrayidx14 = getelementptr inbounds float, float* %26, i64 1, !dbg !4864
  %27 = load float, float* %arrayidx14, align 4, !dbg !4865
  %sub15 = fsub float %27, %25, !dbg !4865
  store float %sub15, float* %arrayidx14, align 4, !dbg !4865
  br label %if.end16, !dbg !4864

if.end16:                                         ; preds = %if.then13, %if.end
  br label %for.inc, !dbg !4866

for.inc:                                          ; preds = %if.end16
  %28 = load i32, i32* %x, align 4, !dbg !4867
  %dec = add nsw i32 %28, -1, !dbg !4867
  store i32 %dec, i32* %x, align 4, !dbg !4867
  %29 = load float*, float** %jitter1.addr, align 8, !dbg !4868
  %add.ptr = getelementptr inbounds float, float* %29, i64 2, !dbg !4868
  store float* %add.ptr, float** %jitter1.addr, align 8, !dbg !4868
  %30 = load float*, float** %jitter2.addr, align 8, !dbg !4869
  %add.ptr17 = getelementptr inbounds float, float* %30, i64 2, !dbg !4869
  store float* %add.ptr17, float** %jitter2.addr, align 8, !dbg !4869
  br label %for.cond, !dbg !4870, !llvm.loop !4871

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4873
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_render_qmcsampler(%struct.Render* %re) #0 !dbg !4874 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4875, metadata !DIExpression()), !dbg !4876
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4877
  %call = call i8* %0(i64 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0)), !dbg !4877
  %1 = bitcast i8* %call to %struct.ListBase*, !dbg !4877
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4878
  %qmcsamplers = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 41, !dbg !4879
  store %struct.ListBase* %1, %struct.ListBase** %qmcsamplers, align 8, !dbg !4880
  ret void, !dbg !4881
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_render_qmcsampler(%struct.Render* %re) #0 !dbg !4882 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %qsa = alloca %struct.QMCSampler*, align 8
  %next = alloca %struct.QMCSampler*, align 8
  %a = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4883, metadata !DIExpression()), !dbg !4884
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4885
  %qmcsamplers = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 41, !dbg !4887
  %1 = load %struct.ListBase*, %struct.ListBase** %qmcsamplers, align 8, !dbg !4887
  %tobool = icmp ne %struct.ListBase* %1, null, !dbg !4885
  br i1 %tobool, label %if.then, label %if.end, !dbg !4888

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa, metadata !4889, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %next, metadata !4907, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4909, metadata !DIExpression()), !dbg !4910
  store i32 0, i32* %a, align 4, !dbg !4911
  br label %for.cond, !dbg !4913

for.cond:                                         ; preds = %for.inc13, %if.then
  %2 = load i32, i32* %a, align 4, !dbg !4914
  %cmp = icmp slt i32 %2, 1, !dbg !4916
  br i1 %cmp, label %for.body, label %for.end14, !dbg !4917

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4918
  %qmcsamplers1 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 41, !dbg !4921
  %4 = load %struct.ListBase*, %struct.ListBase** %qmcsamplers1, align 8, !dbg !4921
  %5 = load i32, i32* %a, align 4, !dbg !4922
  %idxprom = sext i32 %5 to i64, !dbg !4918
  %arrayidx = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i64 %idxprom, !dbg !4918
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arrayidx, i32 0, i32 0, !dbg !4923
  %6 = load i8*, i8** %first, align 8, !dbg !4923
  %7 = bitcast i8* %6 to %struct.QMCSampler*, !dbg !4918
  store %struct.QMCSampler* %7, %struct.QMCSampler** %qsa, align 8, !dbg !4924
  br label %for.cond2, !dbg !4925

for.cond2:                                        ; preds = %for.inc, %for.body
  %8 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !4926
  %tobool3 = icmp ne %struct.QMCSampler* %8, null, !dbg !4928
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !4928

for.body4:                                        ; preds = %for.cond2
  %9 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !4929
  %next5 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %9, i32 0, i32 0, !dbg !4931
  %10 = load %struct.QMCSampler*, %struct.QMCSampler** %next5, align 8, !dbg !4931
  store %struct.QMCSampler* %10, %struct.QMCSampler** %next, align 8, !dbg !4932
  %11 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !4933
  call void @QMC_freeSampler(%struct.QMCSampler* %11), !dbg !4934
  br label %for.inc, !dbg !4935

for.inc:                                          ; preds = %for.body4
  %12 = load %struct.QMCSampler*, %struct.QMCSampler** %next, align 8, !dbg !4936
  store %struct.QMCSampler* %12, %struct.QMCSampler** %qsa, align 8, !dbg !4937
  br label %for.cond2, !dbg !4938, !llvm.loop !4939

for.end:                                          ; preds = %for.cond2
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4941
  %qmcsamplers6 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 41, !dbg !4942
  %14 = load %struct.ListBase*, %struct.ListBase** %qmcsamplers6, align 8, !dbg !4942
  %15 = load i32, i32* %a, align 4, !dbg !4943
  %idxprom7 = sext i32 %15 to i64, !dbg !4941
  %arrayidx8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %14, i64 %idxprom7, !dbg !4941
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arrayidx8, i32 0, i32 1, !dbg !4944
  store i8* null, i8** %last, align 8, !dbg !4945
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4946
  %qmcsamplers9 = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 41, !dbg !4947
  %17 = load %struct.ListBase*, %struct.ListBase** %qmcsamplers9, align 8, !dbg !4947
  %18 = load i32, i32* %a, align 4, !dbg !4948
  %idxprom10 = sext i32 %18 to i64, !dbg !4946
  %arrayidx11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %17, i64 %idxprom10, !dbg !4946
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arrayidx11, i32 0, i32 0, !dbg !4949
  store i8* null, i8** %first12, align 8, !dbg !4950
  br label %for.inc13, !dbg !4951

for.inc13:                                        ; preds = %for.end
  %19 = load i32, i32* %a, align 4, !dbg !4952
  %inc = add nsw i32 %19, 1, !dbg !4952
  store i32 %inc, i32* %a, align 4, !dbg !4952
  br label %for.cond, !dbg !4953, !llvm.loop !4954

for.end14:                                        ; preds = %for.cond
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4956
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4957
  %qmcsamplers15 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 41, !dbg !4958
  %22 = load %struct.ListBase*, %struct.ListBase** %qmcsamplers15, align 8, !dbg !4958
  %23 = bitcast %struct.ListBase* %22 to i8*, !dbg !4957
  call void %20(i8* %23), !dbg !4956
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4959
  %qmcsamplers16 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 41, !dbg !4960
  store %struct.ListBase* null, %struct.ListBase** %qmcsamplers16, align 8, !dbg !4961
  br label %if.end, !dbg !4962

if.end:                                           ; preds = %for.end14, %entry
  ret void, !dbg !4963
}

; Function Attrs: noinline nounwind uwtable
define internal void @QMC_freeSampler(%struct.QMCSampler* %qsa) #0 !dbg !4964 {
entry:
  %qsa.addr = alloca %struct.QMCSampler*, align 8
  store %struct.QMCSampler* %qsa, %struct.QMCSampler** %qsa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa.addr, metadata !4967, metadata !DIExpression()), !dbg !4968
  %0 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4969
  %1 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !4970
  %samp2d = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %1, i32 0, i32 5, !dbg !4971
  %2 = load double*, double** %samp2d, align 8, !dbg !4971
  %3 = bitcast double* %2 to i8*, !dbg !4970
  call void %0(i8* %3), !dbg !4969
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4972
  %5 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !4973
  %6 = bitcast %struct.QMCSampler* %5 to i8*, !dbg !4973
  call void %4(i8* %6), !dbg !4972
  ret void, !dbg !4974
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ray_trace(%struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !4975 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %f1 = alloca float, align 4
  %fr = alloca float, align 4
  %fg = alloca float, align 4
  %fb = alloca float, align 4
  %mircol = alloca [4 x float], align 16
  %tracol = alloca [4 x float], align 16
  %diff = alloca [3 x float], align 4
  %do_tra = alloca i32, align 4
  %do_mir = alloca i32, align 4
  %olddiff = alloca [3 x float], align 4
  %f = alloca float, align 4
  %i = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !4978, metadata !DIExpression()), !dbg !4979
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !4980, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.declare(metadata float* %f1, metadata !4982, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.declare(metadata float* %fr, metadata !4984, metadata !DIExpression()), !dbg !4985
  call void @llvm.dbg.declare(metadata float* %fg, metadata !4986, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.declare(metadata float* %fb, metadata !4988, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.declare(metadata [4 x float]* %mircol, metadata !4990, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.declare(metadata [4 x float]* %tracol, metadata !4992, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.declare(metadata [3 x float]* %diff, metadata !4994, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.declare(metadata i32* %do_tra, metadata !4996, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.declare(metadata i32* %do_mir, metadata !4998, metadata !DIExpression()), !dbg !4999
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5000
  %mode = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 21, !dbg !5001
  %1 = load i32, i32* %mode, align 8, !dbg !5001
  %and = and i32 %1, 65536, !dbg !5002
  %tobool = icmp ne i32 %and, 0, !dbg !5002
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !5003

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5004
  %mode1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %2, i32 0, i32 21, !dbg !5005
  %3 = load i32, i32* %mode1, align 8, !dbg !5005
  %and2 = and i32 %3, 131072, !dbg !5006
  %tobool3 = icmp ne i32 %and2, 0, !dbg !5006
  br i1 %tobool3, label %land.lhs.true4, label %land.end, !dbg !5007

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5008
  %alpha = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %4, i32 0, i32 2, !dbg !5009
  %5 = load float, float* %alpha, align 4, !dbg !5009
  %cmp = fcmp une float %5, 1.000000e+00, !dbg !5010
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5011

land.rhs:                                         ; preds = %land.lhs.true4
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5012
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 108, !dbg !5013
  %7 = load i32, i32* %depth, align 8, !dbg !5013
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5014
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 0, !dbg !5015
  %9 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !5015
  %ray_depth_tra = getelementptr inbounds %struct.Material, %struct.Material* %9, i32 0, i32 37, !dbg !5016
  %10 = load i16, i16* %ray_depth_tra, align 2, !dbg !5016
  %conv = sext i16 %10 to i32, !dbg !5014
  %cmp5 = icmp sle i32 %7, %conv, !dbg !5017
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true4, %land.lhs.true, %entry
  %11 = phi i1 [ false, %land.lhs.true4 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !5018
  %land.ext = zext i1 %11 to i32, !dbg !5011
  store i32 %land.ext, i32* %do_tra, align 4, !dbg !5019
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5020
  %mat7 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 0, !dbg !5021
  %13 = load %struct.Material*, %struct.Material** %mat7, align 8, !dbg !5021
  %mode8 = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 51, !dbg !5022
  %14 = load i32, i32* %mode8, align 4, !dbg !5022
  %and9 = and i32 %14, 262144, !dbg !5023
  %tobool10 = icmp ne i32 %and9, 0, !dbg !5023
  br i1 %tobool10, label %land.lhs.true11, label %land.end20, !dbg !5024

land.lhs.true11:                                  ; preds = %land.end
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5025
  %ray_mirror = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 48, !dbg !5026
  %16 = load float, float* %ray_mirror, align 4, !dbg !5026
  %cmp12 = fcmp une float %16, 0.000000e+00, !dbg !5027
  br i1 %cmp12, label %land.rhs14, label %land.end20, !dbg !5028

land.rhs14:                                       ; preds = %land.lhs.true11
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5029
  %depth15 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 108, !dbg !5030
  %18 = load i32, i32* %depth15, align 8, !dbg !5030
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5031
  %mat16 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 0, !dbg !5032
  %20 = load %struct.Material*, %struct.Material** %mat16, align 8, !dbg !5032
  %ray_depth = getelementptr inbounds %struct.Material, %struct.Material* %20, i32 0, i32 36, !dbg !5033
  %21 = load i16, i16* %ray_depth, align 4, !dbg !5033
  %conv17 = sext i16 %21 to i32, !dbg !5031
  %cmp18 = icmp sle i32 %18, %conv17, !dbg !5034
  br label %land.end20

land.end20:                                       ; preds = %land.rhs14, %land.lhs.true11, %land.end
  %22 = phi i1 [ false, %land.lhs.true11 ], [ false, %land.end ], [ %cmp18, %land.rhs14 ], !dbg !5018
  %land.ext21 = zext i1 %22 to i32, !dbg !5028
  store i32 %land.ext21, i32* %do_mir, align 4, !dbg !5035
  %23 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5036
  %combinedflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %23, i32 0, i32 120, !dbg !5038
  %24 = load i32, i32* %combinedflag, align 4, !dbg !5038
  %and22 = and i32 %24, 16, !dbg !5039
  %tobool23 = icmp ne i32 %and22, 0, !dbg !5039
  br i1 %tobool23, label %if.then, label %if.else, !dbg !5040

if.then:                                          ; preds = %land.end20
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5041
  %25 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5042
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %25, i32 0, i32 0, !dbg !5043
  %arraydecay24 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !5042
  %26 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5044
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %26, i32 0, i32 8, !dbg !5045
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !5044
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay24, float* %arraydecay25), !dbg !5046
  br label %if.end, !dbg !5046

if.else:                                          ; preds = %land.end20
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5047
  %27 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5048
  %combined27 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %27, i32 0, i32 0, !dbg !5049
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %combined27, i64 0, i64 0, !dbg !5048
  call void @copy_v3_v3(float* %arraydecay26, float* %arraydecay28), !dbg !5050
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %28 = load i32, i32* %do_tra, align 4, !dbg !5051
  %tobool29 = icmp ne i32 %28, 0, !dbg !5051
  br i1 %tobool29, label %if.then30, label %if.end85, !dbg !5053

if.then30:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata [3 x float]* %olddiff, metadata !5054, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.declare(metadata float* %f, metadata !5057, metadata !DIExpression()), !dbg !5058
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 0, !dbg !5059
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5060
  %30 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5061
  call void @trace_refract(float* %arraydecay31, %struct.ShadeInput* %29, %struct.ShadeResult* %30), !dbg !5062
  %31 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5063
  %alpha32 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %31, i32 0, i32 2, !dbg !5064
  %32 = load float, float* %alpha32, align 4, !dbg !5064
  store float %32, float* %f, align 4, !dbg !5065
  %33 = load float, float* %f, align 4, !dbg !5066
  %sub = fsub float 1.000000e+00, %33, !dbg !5067
  store float %sub, float* %f1, align 4, !dbg !5068
  %34 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5069
  %mat33 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %34, i32 0, i32 0, !dbg !5070
  %35 = load %struct.Material*, %struct.Material** %mat33, align 8, !dbg !5070
  %filter = getelementptr inbounds %struct.Material, %struct.Material* %35, i32 0, i32 33, !dbg !5071
  %36 = load float, float* %filter, align 8, !dbg !5071
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5072
  %r = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 32, !dbg !5073
  %38 = load float, float* %r, align 4, !dbg !5073
  %sub34 = fsub float %38, 1.000000e+00, !dbg !5074
  %mul = fmul float %36, %sub34, !dbg !5075
  %add = fadd float 1.000000e+00, %mul, !dbg !5076
  store float %add, float* %fr, align 4, !dbg !5077
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5078
  %mat35 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %39, i32 0, i32 0, !dbg !5079
  %40 = load %struct.Material*, %struct.Material** %mat35, align 8, !dbg !5079
  %filter36 = getelementptr inbounds %struct.Material, %struct.Material* %40, i32 0, i32 33, !dbg !5080
  %41 = load float, float* %filter36, align 8, !dbg !5080
  %42 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5081
  %g = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %42, i32 0, i32 33, !dbg !5082
  %43 = load float, float* %g, align 8, !dbg !5082
  %sub37 = fsub float %43, 1.000000e+00, !dbg !5083
  %mul38 = fmul float %41, %sub37, !dbg !5084
  %add39 = fadd float 1.000000e+00, %mul38, !dbg !5085
  store float %add39, float* %fg, align 4, !dbg !5086
  %44 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5087
  %mat40 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %44, i32 0, i32 0, !dbg !5088
  %45 = load %struct.Material*, %struct.Material** %mat40, align 8, !dbg !5088
  %filter41 = getelementptr inbounds %struct.Material, %struct.Material* %45, i32 0, i32 33, !dbg !5089
  %46 = load float, float* %filter41, align 8, !dbg !5089
  %47 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5090
  %b = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %47, i32 0, i32 34, !dbg !5091
  %48 = load float, float* %b, align 4, !dbg !5091
  %sub42 = fsub float %48, 1.000000e+00, !dbg !5092
  %mul43 = fmul float %46, %sub42, !dbg !5093
  %add44 = fadd float 1.000000e+00, %mul43, !dbg !5094
  store float %add44, float* %fb, align 4, !dbg !5095
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %olddiff, i64 0, i64 0, !dbg !5096
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5097
  call void @copy_v3_v3(float* %arraydecay45, float* %arraydecay46), !dbg !5098
  %49 = load float, float* %f, align 4, !dbg !5099
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5100
  %50 = load float, float* %arrayidx, align 4, !dbg !5100
  %mul47 = fmul float %49, %50, !dbg !5101
  %51 = load float, float* %f1, align 4, !dbg !5102
  %52 = load float, float* %fr, align 4, !dbg !5103
  %mul48 = fmul float %51, %52, !dbg !5104
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 0, !dbg !5105
  %53 = load float, float* %arrayidx49, align 16, !dbg !5105
  %mul50 = fmul float %mul48, %53, !dbg !5106
  %add51 = fadd float %mul47, %mul50, !dbg !5107
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5108
  store float %add51, float* %arrayidx52, align 4, !dbg !5109
  %54 = load float, float* %f, align 4, !dbg !5110
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 1, !dbg !5111
  %55 = load float, float* %arrayidx53, align 4, !dbg !5111
  %mul54 = fmul float %54, %55, !dbg !5112
  %56 = load float, float* %f1, align 4, !dbg !5113
  %57 = load float, float* %fg, align 4, !dbg !5114
  %mul55 = fmul float %56, %57, !dbg !5115
  %arrayidx56 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 1, !dbg !5116
  %58 = load float, float* %arrayidx56, align 4, !dbg !5116
  %mul57 = fmul float %mul55, %58, !dbg !5117
  %add58 = fadd float %mul54, %mul57, !dbg !5118
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 1, !dbg !5119
  store float %add58, float* %arrayidx59, align 4, !dbg !5120
  %59 = load float, float* %f, align 4, !dbg !5121
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 2, !dbg !5122
  %60 = load float, float* %arrayidx60, align 4, !dbg !5122
  %mul61 = fmul float %59, %60, !dbg !5123
  %61 = load float, float* %f1, align 4, !dbg !5124
  %62 = load float, float* %fb, align 4, !dbg !5125
  %mul62 = fmul float %61, %62, !dbg !5126
  %arrayidx63 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 2, !dbg !5127
  %63 = load float, float* %arrayidx63, align 8, !dbg !5127
  %mul64 = fmul float %mul62, %63, !dbg !5128
  %add65 = fadd float %mul61, %mul64, !dbg !5129
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 2, !dbg !5130
  store float %add65, float* %arrayidx66, align 4, !dbg !5131
  %64 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5132
  %passflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %64, i32 0, i32 119, !dbg !5134
  %65 = load i32, i32* %passflag, align 8, !dbg !5134
  %and67 = and i32 %65, 1024, !dbg !5135
  %tobool68 = icmp ne i32 %and67, 0, !dbg !5135
  br i1 %tobool68, label %if.then69, label %if.end73, !dbg !5136

if.then69:                                        ; preds = %if.then30
  %66 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5137
  %refr = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %66, i32 0, i32 14, !dbg !5138
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %refr, i64 0, i64 0, !dbg !5137
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5139
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %olddiff, i64 0, i64 0, !dbg !5140
  call void @sub_v3_v3v3(float* %arraydecay70, float* %arraydecay71, float* %arraydecay72), !dbg !5141
  br label %if.end73, !dbg !5141

if.end73:                                         ; preds = %if.then69, %if.then30
  %67 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5142
  %combinedflag74 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %67, i32 0, i32 120, !dbg !5144
  %68 = load i32, i32* %combinedflag74, align 4, !dbg !5144
  %and75 = and i32 %68, 1024, !dbg !5145
  %tobool76 = icmp ne i32 %and75, 0, !dbg !5145
  br i1 %tobool76, label %if.end82, label %if.then77, !dbg !5146

if.then77:                                        ; preds = %if.end73
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5147
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5148
  %69 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5149
  %refr80 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %69, i32 0, i32 14, !dbg !5150
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %refr80, i64 0, i64 0, !dbg !5149
  call void @sub_v3_v3v3(float* %arraydecay78, float* %arraydecay79, float* %arraydecay81), !dbg !5151
  br label %if.end82, !dbg !5151

if.end82:                                         ; preds = %if.then77, %if.end73
  %arrayidx83 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 3, !dbg !5152
  %70 = load float, float* %arrayidx83, align 4, !dbg !5152
  %call = call float @min_ff(float 1.000000e+00, float %70), !dbg !5153
  %71 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5154
  %alpha84 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %71, i32 0, i32 2, !dbg !5155
  store float %call, float* %alpha84, align 4, !dbg !5156
  br label %if.end85, !dbg !5157

if.end85:                                         ; preds = %if.end82, %if.end
  %72 = load i32, i32* %do_mir, align 4, !dbg !5158
  %tobool86 = icmp ne i32 %72, 0, !dbg !5158
  br i1 %tobool86, label %if.then87, label %if.end182, !dbg !5160

if.then87:                                        ; preds = %if.end85
  call void @llvm.dbg.declare(metadata float* %i, metadata !5161, metadata !DIExpression()), !dbg !5163
  %73 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5164
  %ray_mirror88 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %73, i32 0, i32 48, !dbg !5165
  %74 = load float, float* %ray_mirror88, align 4, !dbg !5165
  %75 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5166
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %75, i32 0, i32 30, !dbg !5167
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !5166
  %76 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5168
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %76, i32 0, i32 16, !dbg !5169
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !5168
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5170
  %mat91 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %77, i32 0, i32 0, !dbg !5171
  %78 = load %struct.Material*, %struct.Material** %mat91, align 8, !dbg !5171
  %fresnel_mir_i = getelementptr inbounds %struct.Material, %struct.Material* %78, i32 0, i32 30, !dbg !5172
  %79 = load float, float* %fresnel_mir_i, align 4, !dbg !5172
  %80 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5173
  %mat92 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %80, i32 0, i32 0, !dbg !5174
  %81 = load %struct.Material*, %struct.Material** %mat92, align 8, !dbg !5174
  %fresnel_mir = getelementptr inbounds %struct.Material, %struct.Material* %81, i32 0, i32 29, !dbg !5175
  %82 = load float, float* %fresnel_mir, align 8, !dbg !5175
  %call93 = call float @fresnel_fac(float* %arraydecay89, float* %arraydecay90, float %79, float %82), !dbg !5176
  %mul94 = fmul float %74, %call93, !dbg !5177
  store float %mul94, float* %i, align 4, !dbg !5163
  %83 = load float, float* %i, align 4, !dbg !5178
  %cmp95 = fcmp une float %83, 0.000000e+00, !dbg !5180
  br i1 %cmp95, label %if.then97, label %if.end181, !dbg !5181

if.then97:                                        ; preds = %if.then87
  %arraydecay98 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 0, !dbg !5182
  %84 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5184
  %85 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5185
  %86 = load float, float* %i, align 4, !dbg !5186
  call void @trace_reflect(float* %arraydecay98, %struct.ShadeInput* %84, %struct.ShadeResult* %85, float %86), !dbg !5187
  %87 = load float, float* %i, align 4, !dbg !5188
  %88 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5189
  %mirr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %88, i32 0, i32 38, !dbg !5190
  %89 = load float, float* %mirr, align 4, !dbg !5190
  %mul99 = fmul float %87, %89, !dbg !5191
  store float %mul99, float* %fr, align 4, !dbg !5192
  %90 = load float, float* %i, align 4, !dbg !5193
  %91 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5194
  %mirg = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %91, i32 0, i32 39, !dbg !5195
  %92 = load float, float* %mirg, align 8, !dbg !5195
  %mul100 = fmul float %90, %92, !dbg !5196
  store float %mul100, float* %fg, align 4, !dbg !5197
  %93 = load float, float* %i, align 4, !dbg !5198
  %94 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5199
  %mirb = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %94, i32 0, i32 40, !dbg !5200
  %95 = load float, float* %mirb, align 4, !dbg !5200
  %mul101 = fmul float %93, %95, !dbg !5201
  store float %mul101, float* %fb, align 4, !dbg !5202
  %96 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5203
  %passflag102 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %96, i32 0, i32 119, !dbg !5205
  %97 = load i32, i32* %passflag102, align 8, !dbg !5205
  %and103 = and i32 %97, 128, !dbg !5206
  %tobool104 = icmp ne i32 %and103, 0, !dbg !5206
  br i1 %tobool104, label %if.then105, label %if.end126, !dbg !5207

if.then105:                                       ; preds = %if.then97
  %98 = load float, float* %fr, align 4, !dbg !5208
  %arrayidx106 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 0, !dbg !5210
  %99 = load float, float* %arrayidx106, align 16, !dbg !5210
  %mul107 = fmul float %98, %99, !dbg !5211
  %100 = load float, float* %fr, align 4, !dbg !5212
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5213
  %101 = load float, float* %arrayidx108, align 4, !dbg !5213
  %mul109 = fmul float %100, %101, !dbg !5214
  %sub110 = fsub float %mul107, %mul109, !dbg !5215
  %102 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5216
  %refl = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %102, i32 0, i32 13, !dbg !5217
  %arrayidx111 = getelementptr inbounds [3 x float], [3 x float]* %refl, i64 0, i64 0, !dbg !5216
  store float %sub110, float* %arrayidx111, align 4, !dbg !5218
  %103 = load float, float* %fg, align 4, !dbg !5219
  %arrayidx112 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 1, !dbg !5220
  %104 = load float, float* %arrayidx112, align 4, !dbg !5220
  %mul113 = fmul float %103, %104, !dbg !5221
  %105 = load float, float* %fg, align 4, !dbg !5222
  %arrayidx114 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 1, !dbg !5223
  %106 = load float, float* %arrayidx114, align 4, !dbg !5223
  %mul115 = fmul float %105, %106, !dbg !5224
  %sub116 = fsub float %mul113, %mul115, !dbg !5225
  %107 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5226
  %refl117 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %107, i32 0, i32 13, !dbg !5227
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %refl117, i64 0, i64 1, !dbg !5226
  store float %sub116, float* %arrayidx118, align 4, !dbg !5228
  %108 = load float, float* %fb, align 4, !dbg !5229
  %arrayidx119 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 2, !dbg !5230
  %109 = load float, float* %arrayidx119, align 8, !dbg !5230
  %mul120 = fmul float %108, %109, !dbg !5231
  %110 = load float, float* %fb, align 4, !dbg !5232
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 2, !dbg !5233
  %111 = load float, float* %arrayidx121, align 4, !dbg !5233
  %mul122 = fmul float %110, %111, !dbg !5234
  %sub123 = fsub float %mul120, %mul122, !dbg !5235
  %112 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5236
  %refl124 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %112, i32 0, i32 13, !dbg !5237
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %refl124, i64 0, i64 2, !dbg !5236
  store float %sub123, float* %arrayidx125, align 4, !dbg !5238
  br label %if.end126, !dbg !5239

if.end126:                                        ; preds = %if.then105, %if.then97
  %113 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5240
  %combinedflag127 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %113, i32 0, i32 120, !dbg !5242
  %114 = load i32, i32* %combinedflag127, align 4, !dbg !5242
  %and128 = and i32 %114, 128, !dbg !5243
  %tobool129 = icmp ne i32 %and128, 0, !dbg !5243
  br i1 %tobool129, label %if.then130, label %if.end180, !dbg !5244

if.then130:                                       ; preds = %if.end126
  %115 = load float, float* %i, align 4, !dbg !5245
  %sub131 = fsub float 1.000000e+00, %115, !dbg !5247
  store float %sub131, float* %f1, align 4, !dbg !5248
  %116 = load float, float* %f1, align 4, !dbg !5249
  %arrayidx132 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5250
  %117 = load float, float* %arrayidx132, align 4, !dbg !5251
  %mul133 = fmul float %117, %116, !dbg !5251
  store float %mul133, float* %arrayidx132, align 4, !dbg !5251
  %118 = load float, float* %f1, align 4, !dbg !5252
  %arrayidx134 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 1, !dbg !5253
  %119 = load float, float* %arrayidx134, align 4, !dbg !5254
  %mul135 = fmul float %119, %118, !dbg !5254
  store float %mul135, float* %arrayidx134, align 4, !dbg !5254
  %120 = load float, float* %f1, align 4, !dbg !5255
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 2, !dbg !5256
  %121 = load float, float* %arrayidx136, align 4, !dbg !5257
  %mul137 = fmul float %121, %120, !dbg !5257
  store float %mul137, float* %arrayidx136, align 4, !dbg !5257
  %122 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5258
  %spec138 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %122, i32 0, i32 8, !dbg !5260
  %arrayidx139 = getelementptr inbounds [3 x float], [3 x float]* %spec138, i64 0, i64 0, !dbg !5258
  %123 = load float, float* %arrayidx139, align 4, !dbg !5258
  %cmp140 = fcmp olt float %123, 1.000000e+00, !dbg !5261
  br i1 %cmp140, label %if.then142, label %if.end151, !dbg !5262

if.then142:                                       ; preds = %if.then130
  %arrayidx143 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 0, !dbg !5263
  %124 = load float, float* %arrayidx143, align 16, !dbg !5263
  %125 = load float, float* %fr, align 4, !dbg !5264
  %126 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5265
  %spec144 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %126, i32 0, i32 8, !dbg !5266
  %arrayidx145 = getelementptr inbounds [3 x float], [3 x float]* %spec144, i64 0, i64 0, !dbg !5265
  %127 = load float, float* %arrayidx145, align 4, !dbg !5265
  %sub146 = fsub float 1.000000e+00, %127, !dbg !5267
  %mul147 = fmul float %125, %sub146, !dbg !5268
  %mul148 = fmul float %124, %mul147, !dbg !5269
  %arrayidx149 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5270
  %128 = load float, float* %arrayidx149, align 4, !dbg !5271
  %add150 = fadd float %128, %mul148, !dbg !5271
  store float %add150, float* %arrayidx149, align 4, !dbg !5271
  br label %if.end151, !dbg !5270

if.end151:                                        ; preds = %if.then142, %if.then130
  %129 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5272
  %spec152 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %129, i32 0, i32 8, !dbg !5274
  %arrayidx153 = getelementptr inbounds [3 x float], [3 x float]* %spec152, i64 0, i64 1, !dbg !5272
  %130 = load float, float* %arrayidx153, align 4, !dbg !5272
  %cmp154 = fcmp olt float %130, 1.000000e+00, !dbg !5275
  br i1 %cmp154, label %if.then156, label %if.end165, !dbg !5276

if.then156:                                       ; preds = %if.end151
  %arrayidx157 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 1, !dbg !5277
  %131 = load float, float* %arrayidx157, align 4, !dbg !5277
  %132 = load float, float* %fg, align 4, !dbg !5278
  %133 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5279
  %spec158 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %133, i32 0, i32 8, !dbg !5280
  %arrayidx159 = getelementptr inbounds [3 x float], [3 x float]* %spec158, i64 0, i64 1, !dbg !5279
  %134 = load float, float* %arrayidx159, align 4, !dbg !5279
  %sub160 = fsub float 1.000000e+00, %134, !dbg !5281
  %mul161 = fmul float %132, %sub160, !dbg !5282
  %mul162 = fmul float %131, %mul161, !dbg !5283
  %arrayidx163 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 1, !dbg !5284
  %135 = load float, float* %arrayidx163, align 4, !dbg !5285
  %add164 = fadd float %135, %mul162, !dbg !5285
  store float %add164, float* %arrayidx163, align 4, !dbg !5285
  br label %if.end165, !dbg !5284

if.end165:                                        ; preds = %if.then156, %if.end151
  %136 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5286
  %spec166 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %136, i32 0, i32 8, !dbg !5288
  %arrayidx167 = getelementptr inbounds [3 x float], [3 x float]* %spec166, i64 0, i64 2, !dbg !5286
  %137 = load float, float* %arrayidx167, align 4, !dbg !5286
  %cmp168 = fcmp olt float %137, 1.000000e+00, !dbg !5289
  br i1 %cmp168, label %if.then170, label %if.end179, !dbg !5290

if.then170:                                       ; preds = %if.end165
  %arrayidx171 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 2, !dbg !5291
  %138 = load float, float* %arrayidx171, align 8, !dbg !5291
  %139 = load float, float* %fb, align 4, !dbg !5292
  %140 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5293
  %spec172 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %140, i32 0, i32 8, !dbg !5294
  %arrayidx173 = getelementptr inbounds [3 x float], [3 x float]* %spec172, i64 0, i64 2, !dbg !5293
  %141 = load float, float* %arrayidx173, align 4, !dbg !5293
  %sub174 = fsub float 1.000000e+00, %141, !dbg !5295
  %mul175 = fmul float %139, %sub174, !dbg !5296
  %mul176 = fmul float %138, %mul175, !dbg !5297
  %arrayidx177 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 2, !dbg !5298
  %142 = load float, float* %arrayidx177, align 4, !dbg !5299
  %add178 = fadd float %142, %mul176, !dbg !5299
  store float %add178, float* %arrayidx177, align 4, !dbg !5299
  br label %if.end179, !dbg !5298

if.end179:                                        ; preds = %if.then170, %if.end165
  br label %if.end180, !dbg !5300

if.end180:                                        ; preds = %if.end179, %if.end126
  br label %if.end181, !dbg !5301

if.end181:                                        ; preds = %if.end180, %if.then87
  br label %if.end182, !dbg !5302

if.end182:                                        ; preds = %if.end181, %if.end85
  %143 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5303
  %combinedflag183 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %143, i32 0, i32 120, !dbg !5305
  %144 = load i32, i32* %combinedflag183, align 4, !dbg !5305
  %and184 = and i32 %144, 16, !dbg !5306
  %tobool185 = icmp ne i32 %and184, 0, !dbg !5306
  br i1 %tobool185, label %if.then186, label %if.else192, !dbg !5307

if.then186:                                       ; preds = %if.end182
  %145 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5308
  %combined187 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %145, i32 0, i32 0, !dbg !5309
  %arraydecay188 = getelementptr inbounds [4 x float], [4 x float]* %combined187, i64 0, i64 0, !dbg !5308
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5310
  %146 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5311
  %spec190 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %146, i32 0, i32 8, !dbg !5312
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %spec190, i64 0, i64 0, !dbg !5311
  call void @add_v3_v3v3(float* %arraydecay188, float* %arraydecay189, float* %arraydecay191), !dbg !5313
  br label %if.end196, !dbg !5313

if.else192:                                       ; preds = %if.end182
  %147 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5314
  %combined193 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %147, i32 0, i32 0, !dbg !5315
  %arraydecay194 = getelementptr inbounds [4 x float], [4 x float]* %combined193, i64 0, i64 0, !dbg !5314
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5316
  call void @copy_v3_v3(float* %arraydecay194, float* %arraydecay195), !dbg !5317
  br label %if.end196

if.end196:                                        ; preds = %if.else192, %if.then186
  ret void, !dbg !5318
}

; Function Attrs: noinline nounwind uwtable
define internal void @trace_refract(float* %col, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !5319 {
entry:
  %col.addr = alloca float*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %qsa = alloca %struct.QMCSampler*, align 8
  %samp_type = alloca i32, align 4
  %traflag = alloca i32, align 4
  %samp3d = alloca [3 x float], align 4
  %orthx = alloca [3 x float], align 4
  %orthy = alloca [3 x float], align 4
  %v_refract = alloca [3 x float], align 4
  %v_refract_new = alloca [3 x float], align 4
  %sampcol = alloca [4 x float], align 16
  %colsq = alloca [4 x float], align 16
  %blur = alloca float, align 4
  %max_samples = alloca i16, align 2
  %adapt_thresh = alloca float, align 4
  %samples = alloca i32, align 4
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !5322, metadata !DIExpression()), !dbg !5323
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !5324, metadata !DIExpression()), !dbg !5325
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !5326, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa, metadata !5328, metadata !DIExpression()), !dbg !5329
  store %struct.QMCSampler* null, %struct.QMCSampler** %qsa, align 8, !dbg !5329
  call void @llvm.dbg.declare(metadata i32* %samp_type, metadata !5330, metadata !DIExpression()), !dbg !5331
  call void @llvm.dbg.declare(metadata i32* %traflag, metadata !5332, metadata !DIExpression()), !dbg !5333
  store i32 0, i32* %traflag, align 4, !dbg !5333
  call void @llvm.dbg.declare(metadata [3 x float]* %samp3d, metadata !5334, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.declare(metadata [3 x float]* %orthx, metadata !5336, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.declare(metadata [3 x float]* %orthy, metadata !5338, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.declare(metadata [3 x float]* %v_refract, metadata !5340, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.declare(metadata [3 x float]* %v_refract_new, metadata !5342, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.declare(metadata [4 x float]* %sampcol, metadata !5344, metadata !DIExpression()), !dbg !5345
  call void @llvm.dbg.declare(metadata [4 x float]* %colsq, metadata !5346, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.declare(metadata float* %blur, metadata !5348, metadata !DIExpression()), !dbg !5349
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5350
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !5351
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !5351
  %gloss_tra = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 42, !dbg !5352
  %2 = load float, float* %gloss_tra, align 8, !dbg !5352
  %sub = fsub float 1.000000e+00, %2, !dbg !5353
  %call = call float @powf(float %sub, float 3.000000e+00) #5, !dbg !5354
  store float %call, float* %blur, align 4, !dbg !5349
  call void @llvm.dbg.declare(metadata i16* %max_samples, metadata !5355, metadata !DIExpression()), !dbg !5356
  %3 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5357
  %mat1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %3, i32 0, i32 0, !dbg !5358
  %4 = load %struct.Material*, %struct.Material** %mat1, align 8, !dbg !5358
  %samp_gloss_tra = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 44, !dbg !5359
  %5 = load i16, i16* %samp_gloss_tra, align 2, !dbg !5359
  store i16 %5, i16* %max_samples, align 2, !dbg !5356
  call void @llvm.dbg.declare(metadata float* %adapt_thresh, metadata !5360, metadata !DIExpression()), !dbg !5361
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5362
  %mat2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 0, !dbg !5363
  %7 = load %struct.Material*, %struct.Material** %mat2, align 8, !dbg !5363
  %adapt_thresh_tra = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 46, !dbg !5364
  %8 = load float, float* %adapt_thresh_tra, align 4, !dbg !5364
  store float %8, float* %adapt_thresh, align 4, !dbg !5361
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !5365, metadata !DIExpression()), !dbg !5366
  store i32 0, i32* %samples, align 4, !dbg !5366
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 2, !dbg !5367
  store float 0.000000e+00, float* %arrayidx, align 8, !dbg !5368
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 1, !dbg !5369
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !5370
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 0, !dbg !5371
  store float 0.000000e+00, float* %arrayidx4, align 16, !dbg !5372
  %9 = load float*, float** %col.addr, align 8, !dbg !5373
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 2, !dbg !5373
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !5374
  %10 = load float*, float** %col.addr, align 8, !dbg !5375
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !5375
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !5376
  %11 = load float*, float** %col.addr, align 8, !dbg !5377
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !5377
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !5378
  %12 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5379
  %alpha = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %12, i32 0, i32 2, !dbg !5380
  %13 = load float, float* %alpha, align 4, !dbg !5380
  %14 = load float*, float** %col.addr, align 8, !dbg !5381
  %arrayidx8 = getelementptr inbounds float, float* %14, i64 3, !dbg !5381
  store float %13, float* %arrayidx8, align 4, !dbg !5382
  %15 = load float, float* %blur, align 4, !dbg !5383
  %cmp = fcmp ogt float %15, 0.000000e+00, !dbg !5385
  br i1 %cmp, label %if.then, label %if.else15, !dbg !5386

if.then:                                          ; preds = %entry
  %16 = load float, float* %adapt_thresh, align 4, !dbg !5387
  %cmp9 = fcmp une float %16, 0.000000e+00, !dbg !5390
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !5391

if.then10:                                        ; preds = %if.then
  store i32 1, i32* %samp_type, align 4, !dbg !5392
  br label %if.end, !dbg !5393

if.else:                                          ; preds = %if.then
  store i32 2, i32* %samp_type, align 4, !dbg !5394
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5395
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 114, !dbg !5396
  %18 = load i16, i16* %thread, align 2, !dbg !5396
  %conv = sext i16 %18 to i32, !dbg !5395
  %19 = load i32, i32* %samp_type, align 4, !dbg !5397
  %20 = load i16, i16* %max_samples, align 2, !dbg !5398
  %conv11 = sext i16 %20 to i32, !dbg !5398
  %call12 = call %struct.QMCSampler* @get_thread_qmcsampler(%struct.Render* @R, i32 %conv, i32 %19, i32 %conv11), !dbg !5399
  store %struct.QMCSampler* %call12, %struct.QMCSampler** %qsa, align 8, !dbg !5400
  %21 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !5401
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5402
  %thread13 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %22, i32 0, i32 114, !dbg !5403
  %23 = load i16, i16* %thread13, align 2, !dbg !5403
  %conv14 = sext i16 %23 to i32, !dbg !5402
  call void @QMC_initPixel(%struct.QMCSampler* %21, i32 %conv14), !dbg !5404
  br label %if.end16, !dbg !5405

if.else15:                                        ; preds = %entry
  store i16 1, i16* %max_samples, align 2, !dbg !5406
  br label %if.end16

if.end16:                                         ; preds = %if.else15, %if.end
  br label %while.cond, !dbg !5407

while.cond:                                       ; preds = %if.end124, %if.end16
  %24 = load i32, i32* %samples, align 4, !dbg !5408
  %25 = load i16, i16* %max_samples, align 2, !dbg !5409
  %conv17 = sext i16 %25 to i32, !dbg !5409
  %cmp18 = icmp slt i32 %24, %conv17, !dbg !5410
  br i1 %cmp18, label %while.body, label %while.end, !dbg !5407

while.body:                                       ; preds = %while.cond
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v_refract, i64 0, i64 0, !dbg !5411
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5414
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 16, !dbg !5415
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !5414
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5416
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 30, !dbg !5417
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !5416
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5418
  %ang = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 46, !dbg !5419
  %29 = load float, float* %ang, align 4, !dbg !5419
  %call22 = call i32 @refraction(float* %arraydecay, float* %arraydecay20, float* %arraydecay21, float %29), !dbg !5420
  %tobool = icmp ne i32 %call22, 0, !dbg !5420
  br i1 %tobool, label %if.then23, label %if.else24, !dbg !5421

if.then23:                                        ; preds = %while.body
  %30 = load i32, i32* %traflag, align 4, !dbg !5422
  %or = or i32 %30, 2, !dbg !5422
  store i32 %or, i32* %traflag, align 4, !dbg !5422
  br label %if.end41, !dbg !5424

if.else24:                                        ; preds = %while.body
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5425
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 1, !dbg !5428
  %32 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5428
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %32, i32 0, i32 7, !dbg !5429
  %33 = load i8, i8* %flag, align 1, !dbg !5429
  %conv25 = zext i8 %33 to i32, !dbg !5425
  %and = and i32 %conv25, 1, !dbg !5430
  %tobool26 = icmp ne i32 %and, 0, !dbg !5430
  br i1 %tobool26, label %if.then27, label %if.else34, !dbg !5431

if.then27:                                        ; preds = %if.else24
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %v_refract, i64 0, i64 0, !dbg !5432
  %34 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5433
  %vn29 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %34, i32 0, i32 16, !dbg !5434
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %vn29, i64 0, i64 0, !dbg !5433
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5435
  %view31 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 30, !dbg !5436
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %view31, i64 0, i64 0, !dbg !5435
  %36 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5437
  %facenor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %36, i32 0, i32 6, !dbg !5438
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %facenor, i64 0, i64 0, !dbg !5437
  call void @reflection(float* %arraydecay28, float* %arraydecay30, float* %arraydecay32, float* %arraydecay33), !dbg !5439
  br label %if.end40, !dbg !5439

if.else34:                                        ; preds = %if.else24
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %v_refract, i64 0, i64 0, !dbg !5440
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5441
  %vn36 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 16, !dbg !5442
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %vn36, i64 0, i64 0, !dbg !5441
  %38 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5443
  %view38 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %38, i32 0, i32 30, !dbg !5444
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %view38, i64 0, i64 0, !dbg !5443
  call void @reflection_simple(float* %arraydecay35, float* %arraydecay37, float* %arraydecay39), !dbg !5445
  br label %if.end40

if.end40:                                         ; preds = %if.else34, %if.then27
  store i16 1, i16* %max_samples, align 2, !dbg !5446
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then23
  %39 = load i16, i16* %max_samples, align 2, !dbg !5447
  %conv42 = sext i16 %39 to i32, !dbg !5447
  %cmp43 = icmp sgt i32 %conv42, 1, !dbg !5449
  br i1 %cmp43, label %if.then45, label %if.else63, !dbg !5450

if.then45:                                        ; preds = %if.end41
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !5451
  %40 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !5453
  %41 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5454
  %thread47 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %41, i32 0, i32 114, !dbg !5455
  %42 = load i16, i16* %thread47, align 2, !dbg !5455
  %conv48 = sext i16 %42 to i32, !dbg !5454
  %43 = load i32, i32* %samples, align 4, !dbg !5456
  %44 = load float, float* %blur, align 4, !dbg !5457
  call void @QMC_samplePhong(float* %arraydecay46, %struct.QMCSampler* %40, i32 %conv48, i32 %43, float %44), !dbg !5458
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %orthx, i64 0, i64 0, !dbg !5459
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %orthy, i64 0, i64 0, !dbg !5460
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %v_refract, i64 0, i64 0, !dbg !5461
  call void @ortho_basis_v3v3_v3(float* %arraydecay49, float* %arraydecay50, float* %arraydecay51), !dbg !5462
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %orthx, i64 0, i64 0, !dbg !5463
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !5464
  %45 = load float, float* %arrayidx53, align 4, !dbg !5464
  call void @mul_v3_fl(float* %arraydecay52, float %45), !dbg !5465
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %orthy, i64 0, i64 0, !dbg !5466
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 1, !dbg !5467
  %46 = load float, float* %arrayidx55, align 4, !dbg !5467
  call void @mul_v3_fl(float* %arraydecay54, float %46), !dbg !5468
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %v_refract_new, i64 0, i64 0, !dbg !5469
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %v_refract, i64 0, i64 0, !dbg !5470
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %orthx, i64 0, i64 0, !dbg !5471
  call void @add_v3_v3v3(float* %arraydecay56, float* %arraydecay57, float* %arraydecay58), !dbg !5472
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %v_refract_new, i64 0, i64 0, !dbg !5473
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %orthy, i64 0, i64 0, !dbg !5474
  call void @add_v3_v3(float* %arraydecay59, float* %arraydecay60), !dbg !5475
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %v_refract_new, i64 0, i64 0, !dbg !5476
  %call62 = call float @normalize_v3(float* %arraydecay61), !dbg !5477
  br label %if.end66, !dbg !5478

if.else63:                                        ; preds = %if.end41
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %v_refract_new, i64 0, i64 0, !dbg !5479
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %v_refract, i64 0, i64 0, !dbg !5481
  call void @copy_v3_v3(float* %arraydecay64, float* %arraydecay65), !dbg !5482
  br label %if.end66

if.end66:                                         ; preds = %if.else63, %if.then45
  %arrayidx67 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 3, !dbg !5483
  store float 0.000000e+00, float* %arrayidx67, align 4, !dbg !5484
  %arrayidx68 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 2, !dbg !5485
  store float 0.000000e+00, float* %arrayidx68, align 8, !dbg !5486
  %arrayidx69 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 1, !dbg !5487
  store float 0.000000e+00, float* %arrayidx69, align 4, !dbg !5488
  %arrayidx70 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 0, !dbg !5489
  store float 0.000000e+00, float* %arrayidx70, align 16, !dbg !5490
  %47 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5491
  %48 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5492
  %49 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5493
  %mat71 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %49, i32 0, i32 0, !dbg !5494
  %50 = load %struct.Material*, %struct.Material** %mat71, align 8, !dbg !5494
  %ray_depth_tra = getelementptr inbounds %struct.Material, %struct.Material* %50, i32 0, i32 37, !dbg !5495
  %51 = load i16, i16* %ray_depth_tra, align 2, !dbg !5495
  %52 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5496
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %52, i32 0, i32 29, !dbg !5497
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5496
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %v_refract_new, i64 0, i64 0, !dbg !5498
  %arraydecay74 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 0, !dbg !5499
  %53 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5500
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %53, i32 0, i32 3, !dbg !5501
  %54 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5501
  %55 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5502
  %vlr75 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %55, i32 0, i32 1, !dbg !5503
  %56 = load %struct.VlakRen*, %struct.VlakRen** %vlr75, align 8, !dbg !5503
  %57 = load i32, i32* %traflag, align 4, !dbg !5504
  call void @traceray(%struct.ShadeInput* %47, %struct.ShadeResult* %48, i16 signext %51, float* %arraydecay72, float* %arraydecay73, float* %arraydecay74, %struct.ObjectInstanceRen* %54, %struct.VlakRen* %56, i32 %57), !dbg !5505
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 0, !dbg !5506
  %58 = load float, float* %arrayidx76, align 16, !dbg !5506
  %59 = load float*, float** %col.addr, align 8, !dbg !5507
  %arrayidx77 = getelementptr inbounds float, float* %59, i64 0, !dbg !5507
  %60 = load float, float* %arrayidx77, align 4, !dbg !5508
  %add = fadd float %60, %58, !dbg !5508
  store float %add, float* %arrayidx77, align 4, !dbg !5508
  %arrayidx78 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 1, !dbg !5509
  %61 = load float, float* %arrayidx78, align 4, !dbg !5509
  %62 = load float*, float** %col.addr, align 8, !dbg !5510
  %arrayidx79 = getelementptr inbounds float, float* %62, i64 1, !dbg !5510
  %63 = load float, float* %arrayidx79, align 4, !dbg !5511
  %add80 = fadd float %63, %61, !dbg !5511
  store float %add80, float* %arrayidx79, align 4, !dbg !5511
  %arrayidx81 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 2, !dbg !5512
  %64 = load float, float* %arrayidx81, align 8, !dbg !5512
  %65 = load float*, float** %col.addr, align 8, !dbg !5513
  %arrayidx82 = getelementptr inbounds float, float* %65, i64 2, !dbg !5513
  %66 = load float, float* %arrayidx82, align 4, !dbg !5514
  %add83 = fadd float %66, %64, !dbg !5514
  store float %add83, float* %arrayidx82, align 4, !dbg !5514
  %arrayidx84 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 3, !dbg !5515
  %67 = load float, float* %arrayidx84, align 4, !dbg !5515
  %68 = load float*, float** %col.addr, align 8, !dbg !5516
  %arrayidx85 = getelementptr inbounds float, float* %68, i64 3, !dbg !5516
  %69 = load float, float* %arrayidx85, align 4, !dbg !5517
  %add86 = fadd float %69, %67, !dbg !5517
  store float %add86, float* %arrayidx85, align 4, !dbg !5517
  %arrayidx87 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 0, !dbg !5518
  %70 = load float, float* %arrayidx87, align 16, !dbg !5518
  %arrayidx88 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 0, !dbg !5519
  %71 = load float, float* %arrayidx88, align 16, !dbg !5519
  %mul = fmul float %70, %71, !dbg !5520
  %arrayidx89 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 0, !dbg !5521
  %72 = load float, float* %arrayidx89, align 16, !dbg !5522
  %add90 = fadd float %72, %mul, !dbg !5522
  store float %add90, float* %arrayidx89, align 16, !dbg !5522
  %arrayidx91 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 1, !dbg !5523
  %73 = load float, float* %arrayidx91, align 4, !dbg !5523
  %arrayidx92 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 1, !dbg !5524
  %74 = load float, float* %arrayidx92, align 4, !dbg !5524
  %mul93 = fmul float %73, %74, !dbg !5525
  %arrayidx94 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 1, !dbg !5526
  %75 = load float, float* %arrayidx94, align 4, !dbg !5527
  %add95 = fadd float %75, %mul93, !dbg !5527
  store float %add95, float* %arrayidx94, align 4, !dbg !5527
  %arrayidx96 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 2, !dbg !5528
  %76 = load float, float* %arrayidx96, align 8, !dbg !5528
  %arrayidx97 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 2, !dbg !5529
  %77 = load float, float* %arrayidx97, align 8, !dbg !5529
  %mul98 = fmul float %76, %77, !dbg !5530
  %arrayidx99 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 2, !dbg !5531
  %78 = load float, float* %arrayidx99, align 8, !dbg !5532
  %add100 = fadd float %78, %mul98, !dbg !5532
  store float %add100, float* %arrayidx99, align 8, !dbg !5532
  %79 = load i32, i32* %samples, align 4, !dbg !5533
  %inc = add nsw i32 %79, 1, !dbg !5533
  store i32 %inc, i32* %samples, align 4, !dbg !5533
  %80 = load float, float* %adapt_thresh, align 4, !dbg !5534
  %cmp101 = fcmp olt float %80, 1.000000e+00, !dbg !5536
  br i1 %cmp101, label %land.lhs.true, label %if.end124, !dbg !5537

land.lhs.true:                                    ; preds = %if.end66
  %81 = load i32, i32* %samples, align 4, !dbg !5538
  %82 = load i16, i16* %max_samples, align 2, !dbg !5539
  %conv103 = sext i16 %82 to i32, !dbg !5539
  %div = sdiv i32 %conv103, 2, !dbg !5540
  %cmp104 = icmp sgt i32 %81, %div, !dbg !5541
  br i1 %cmp104, label %if.then106, label %if.end124, !dbg !5542

if.then106:                                       ; preds = %land.lhs.true
  %83 = load i32, i32* %samples, align 4, !dbg !5543
  %84 = load float*, float** %col.addr, align 8, !dbg !5546
  %arraydecay107 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 0, !dbg !5547
  %85 = load float, float* %adapt_thresh, align 4, !dbg !5548
  %call108 = call i32 @adaptive_sample_variance(i32 %83, float* %84, float* %arraydecay107, float %85), !dbg !5549
  %tobool109 = icmp ne i32 %call108, 0, !dbg !5549
  br i1 %tobool109, label %if.then110, label %if.end111, !dbg !5550

if.then110:                                       ; preds = %if.then106
  br label %while.end, !dbg !5551

if.end111:                                        ; preds = %if.then106
  %86 = load float*, float** %col.addr, align 8, !dbg !5552
  %arrayidx112 = getelementptr inbounds float, float* %86, i64 0, !dbg !5552
  %87 = load float, float* %arrayidx112, align 4, !dbg !5552
  %88 = load float*, float** %col.addr, align 8, !dbg !5554
  %arrayidx113 = getelementptr inbounds float, float* %88, i64 1, !dbg !5554
  %89 = load float, float* %arrayidx113, align 4, !dbg !5554
  %add114 = fadd float %87, %89, !dbg !5555
  %90 = load float*, float** %col.addr, align 8, !dbg !5556
  %arrayidx115 = getelementptr inbounds float, float* %90, i64 2, !dbg !5556
  %91 = load float, float* %arrayidx115, align 4, !dbg !5556
  %add116 = fadd float %add114, %91, !dbg !5557
  %div117 = fdiv float %add116, 3.000000e+00, !dbg !5558
  %92 = load i32, i32* %samples, align 4, !dbg !5559
  %conv118 = sitofp i32 %92 to float, !dbg !5560
  %div119 = fdiv float %div117, %conv118, !dbg !5561
  %cmp120 = fcmp olt float %div119, 0x3F847AE140000000, !dbg !5562
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !5563

if.then122:                                       ; preds = %if.end111
  %93 = load i16, i16* %max_samples, align 2, !dbg !5564
  %dec = add i16 %93, -1, !dbg !5564
  store i16 %dec, i16* %max_samples, align 2, !dbg !5564
  br label %if.end123, !dbg !5565

if.end123:                                        ; preds = %if.then122, %if.end111
  br label %if.end124, !dbg !5566

if.end124:                                        ; preds = %if.end123, %land.lhs.true, %if.end66
  br label %while.cond, !dbg !5407, !llvm.loop !5567

while.end:                                        ; preds = %if.then110, %while.cond
  %94 = load i32, i32* %samples, align 4, !dbg !5569
  %conv125 = sitofp i32 %94 to float, !dbg !5570
  %95 = load float*, float** %col.addr, align 8, !dbg !5571
  %arrayidx126 = getelementptr inbounds float, float* %95, i64 0, !dbg !5571
  %96 = load float, float* %arrayidx126, align 4, !dbg !5572
  %div127 = fdiv float %96, %conv125, !dbg !5572
  store float %div127, float* %arrayidx126, align 4, !dbg !5572
  %97 = load i32, i32* %samples, align 4, !dbg !5573
  %conv128 = sitofp i32 %97 to float, !dbg !5574
  %98 = load float*, float** %col.addr, align 8, !dbg !5575
  %arrayidx129 = getelementptr inbounds float, float* %98, i64 1, !dbg !5575
  %99 = load float, float* %arrayidx129, align 4, !dbg !5576
  %div130 = fdiv float %99, %conv128, !dbg !5576
  store float %div130, float* %arrayidx129, align 4, !dbg !5576
  %100 = load i32, i32* %samples, align 4, !dbg !5577
  %conv131 = sitofp i32 %100 to float, !dbg !5578
  %101 = load float*, float** %col.addr, align 8, !dbg !5579
  %arrayidx132 = getelementptr inbounds float, float* %101, i64 2, !dbg !5579
  %102 = load float, float* %arrayidx132, align 4, !dbg !5580
  %div133 = fdiv float %102, %conv131, !dbg !5580
  store float %div133, float* %arrayidx132, align 4, !dbg !5580
  %103 = load i32, i32* %samples, align 4, !dbg !5581
  %conv134 = sitofp i32 %103 to float, !dbg !5582
  %104 = load float*, float** %col.addr, align 8, !dbg !5583
  %arrayidx135 = getelementptr inbounds float, float* %104, i64 3, !dbg !5583
  %105 = load float, float* %arrayidx135, align 4, !dbg !5584
  %div136 = fdiv float %105, %conv134, !dbg !5584
  store float %div136, float* %arrayidx135, align 4, !dbg !5584
  %106 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !5585
  %tobool137 = icmp ne %struct.QMCSampler* %106, null, !dbg !5585
  br i1 %tobool137, label %if.then138, label %if.end141, !dbg !5587

if.then138:                                       ; preds = %while.end
  %107 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5588
  %thread139 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %107, i32 0, i32 114, !dbg !5589
  %108 = load i16, i16* %thread139, align 2, !dbg !5589
  %conv140 = sext i16 %108 to i32, !dbg !5588
  %109 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !5590
  call void @release_thread_qmcsampler(%struct.Render* @R, i32 %conv140, %struct.QMCSampler* %109), !dbg !5591
  br label %if.end141, !dbg !5591

if.end141:                                        ; preds = %if.then138, %while.end
  ret void, !dbg !5592
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !5593 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !5597, metadata !DIExpression()), !dbg !5598
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !5599, metadata !DIExpression()), !dbg !5600
  %0 = load float, float* %a.addr, align 4, !dbg !5601
  %1 = load float, float* %b.addr, align 4, !dbg !5602
  %cmp = fcmp olt float %0, %1, !dbg !5603
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5604

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !5605
  br label %cond.end, !dbg !5604

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !5606
  br label %cond.end, !dbg !5604

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5604
  ret float %cond, !dbg !5607
}

declare dso_local float @fresnel_fac(float*, float*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @trace_reflect(float* %col, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr, float %fresnelfac) #0 !dbg !5608 {
entry:
  %col.addr = alloca float*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %fresnelfac.addr = alloca float, align 4
  %qsa = alloca %struct.QMCSampler*, align 8
  %samp_type = alloca i32, align 4
  %samp3d = alloca [3 x float], align 4
  %orthx = alloca [3 x float], align 4
  %orthy = alloca [3 x float], align 4
  %v_nor_new = alloca [3 x float], align 4
  %v_reflect = alloca [3 x float], align 4
  %sampcol = alloca [4 x float], align 16
  %colsq = alloca [4 x float], align 16
  %blur = alloca float, align 4
  %max_samples = alloca i16, align 2
  %adapt_thresh = alloca float, align 4
  %aniso = alloca float, align 4
  %samples = alloca i32, align 4
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !5611, metadata !DIExpression()), !dbg !5612
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !5613, metadata !DIExpression()), !dbg !5614
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !5615, metadata !DIExpression()), !dbg !5616
  store float %fresnelfac, float* %fresnelfac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fresnelfac.addr, metadata !5617, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa, metadata !5619, metadata !DIExpression()), !dbg !5620
  store %struct.QMCSampler* null, %struct.QMCSampler** %qsa, align 8, !dbg !5620
  call void @llvm.dbg.declare(metadata i32* %samp_type, metadata !5621, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.declare(metadata [3 x float]* %samp3d, metadata !5623, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.declare(metadata [3 x float]* %orthx, metadata !5625, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.declare(metadata [3 x float]* %orthy, metadata !5627, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.declare(metadata [3 x float]* %v_nor_new, metadata !5629, metadata !DIExpression()), !dbg !5630
  call void @llvm.dbg.declare(metadata [3 x float]* %v_reflect, metadata !5631, metadata !DIExpression()), !dbg !5632
  call void @llvm.dbg.declare(metadata [4 x float]* %sampcol, metadata !5633, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.declare(metadata [4 x float]* %colsq, metadata !5635, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.declare(metadata float* %blur, metadata !5637, metadata !DIExpression()), !dbg !5638
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5639
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !5640
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !5640
  %gloss_mir = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 41, !dbg !5641
  %2 = load float, float* %gloss_mir, align 4, !dbg !5641
  %sub = fsub float 1.000000e+00, %2, !dbg !5642
  %call = call float @powf(float %sub, float 3.000000e+00) #5, !dbg !5643
  store float %call, float* %blur, align 4, !dbg !5638
  call void @llvm.dbg.declare(metadata i16* %max_samples, metadata !5644, metadata !DIExpression()), !dbg !5645
  %3 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5646
  %mat1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %3, i32 0, i32 0, !dbg !5647
  %4 = load %struct.Material*, %struct.Material** %mat1, align 8, !dbg !5647
  %samp_gloss_mir = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 43, !dbg !5648
  %5 = load i16, i16* %samp_gloss_mir, align 4, !dbg !5648
  store i16 %5, i16* %max_samples, align 2, !dbg !5645
  call void @llvm.dbg.declare(metadata float* %adapt_thresh, metadata !5649, metadata !DIExpression()), !dbg !5650
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5651
  %mat2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 0, !dbg !5652
  %7 = load %struct.Material*, %struct.Material** %mat2, align 8, !dbg !5652
  %adapt_thresh_mir = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 45, !dbg !5653
  %8 = load float, float* %adapt_thresh_mir, align 8, !dbg !5653
  store float %8, float* %adapt_thresh, align 4, !dbg !5650
  call void @llvm.dbg.declare(metadata float* %aniso, metadata !5654, metadata !DIExpression()), !dbg !5655
  %9 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5656
  %mat3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %9, i32 0, i32 0, !dbg !5657
  %10 = load %struct.Material*, %struct.Material** %mat3, align 8, !dbg !5657
  %aniso_gloss_mir = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 47, !dbg !5658
  %11 = load float, float* %aniso_gloss_mir, align 8, !dbg !5658
  %sub4 = fsub float 1.000000e+00, %11, !dbg !5659
  store float %sub4, float* %aniso, align 4, !dbg !5655
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !5660, metadata !DIExpression()), !dbg !5661
  store i32 0, i32* %samples, align 4, !dbg !5661
  %12 = load float*, float** %col.addr, align 8, !dbg !5662
  %arrayidx = getelementptr inbounds float, float* %12, i64 2, !dbg !5662
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5663
  %13 = load float*, float** %col.addr, align 8, !dbg !5664
  %arrayidx5 = getelementptr inbounds float, float* %13, i64 1, !dbg !5664
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !5665
  %14 = load float*, float** %col.addr, align 8, !dbg !5666
  %arrayidx6 = getelementptr inbounds float, float* %14, i64 0, !dbg !5666
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !5667
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 2, !dbg !5668
  store float 0.000000e+00, float* %arrayidx7, align 8, !dbg !5669
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 1, !dbg !5670
  store float 0.000000e+00, float* %arrayidx8, align 4, !dbg !5671
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 0, !dbg !5672
  store float 0.000000e+00, float* %arrayidx9, align 16, !dbg !5673
  %15 = load float, float* %blur, align 4, !dbg !5674
  %cmp = fcmp ogt float %15, 0.000000e+00, !dbg !5676
  br i1 %cmp, label %if.then, label %if.else16, !dbg !5677

if.then:                                          ; preds = %entry
  %16 = load float, float* %adapt_thresh, align 4, !dbg !5678
  %cmp10 = fcmp une float %16, 0.000000e+00, !dbg !5681
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !5682

if.then11:                                        ; preds = %if.then
  store i32 1, i32* %samp_type, align 4, !dbg !5683
  br label %if.end, !dbg !5684

if.else:                                          ; preds = %if.then
  store i32 2, i32* %samp_type, align 4, !dbg !5685
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5686
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 114, !dbg !5687
  %18 = load i16, i16* %thread, align 2, !dbg !5687
  %conv = sext i16 %18 to i32, !dbg !5686
  %19 = load i32, i32* %samp_type, align 4, !dbg !5688
  %20 = load i16, i16* %max_samples, align 2, !dbg !5689
  %conv12 = sext i16 %20 to i32, !dbg !5689
  %call13 = call %struct.QMCSampler* @get_thread_qmcsampler(%struct.Render* @R, i32 %conv, i32 %19, i32 %conv12), !dbg !5690
  store %struct.QMCSampler* %call13, %struct.QMCSampler** %qsa, align 8, !dbg !5691
  %21 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !5692
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5693
  %thread14 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %22, i32 0, i32 114, !dbg !5694
  %23 = load i16, i16* %thread14, align 2, !dbg !5694
  %conv15 = sext i16 %23 to i32, !dbg !5693
  call void @QMC_initPixel(%struct.QMCSampler* %21, i32 %conv15), !dbg !5695
  br label %if.end17, !dbg !5696

if.else16:                                        ; preds = %entry
  store i16 1, i16* %max_samples, align 2, !dbg !5697
  br label %if.end17

if.end17:                                         ; preds = %if.else16, %if.end
  br label %while.cond, !dbg !5698

while.cond:                                       ; preds = %if.end145, %if.end17
  %24 = load i32, i32* %samples, align 4, !dbg !5699
  %25 = load i16, i16* %max_samples, align 2, !dbg !5700
  %conv18 = sext i16 %25 to i32, !dbg !5700
  %cmp19 = icmp slt i32 %24, %conv18, !dbg !5701
  br i1 %cmp19, label %while.body, label %while.end, !dbg !5698

while.body:                                       ; preds = %while.cond
  %26 = load i16, i16* %max_samples, align 2, !dbg !5702
  %conv21 = sext i16 %26 to i32, !dbg !5702
  %cmp22 = icmp sgt i32 %conv21, 1, !dbg !5705
  br i1 %cmp22, label %if.then24, label %if.else57, !dbg !5706

if.then24:                                        ; preds = %while.body
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !5707
  %27 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !5709
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5710
  %thread25 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 114, !dbg !5711
  %29 = load i16, i16* %thread25, align 2, !dbg !5711
  %conv26 = sext i16 %29 to i32, !dbg !5710
  %30 = load i32, i32* %samples, align 4, !dbg !5712
  %31 = load float, float* %blur, align 4, !dbg !5713
  call void @QMC_samplePhong(float* %arraydecay, %struct.QMCSampler* %27, i32 %conv26, i32 %30, float %31), !dbg !5714
  %32 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5715
  %mat27 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %32, i32 0, i32 0, !dbg !5717
  %33 = load %struct.Material*, %struct.Material** %mat27, align 8, !dbg !5717
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %33, i32 0, i32 51, !dbg !5718
  %34 = load i32, i32* %mode, align 4, !dbg !5718
  %and = and i32 %34, 67108864, !dbg !5719
  %tobool = icmp ne i32 %and, 0, !dbg !5719
  br i1 %tobool, label %if.then28, label %if.else39, !dbg !5720

if.then28:                                        ; preds = %if.then24
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %orthx, i64 0, i64 0, !dbg !5721
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5723
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 16, !dbg !5724
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !5723
  %36 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5725
  %tang = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %36, i32 0, i32 65, !dbg !5726
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !5725
  call void @cross_v3_v3v3(float* %arraydecay29, float* %arraydecay30, float* %arraydecay31), !dbg !5727
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %orthy, i64 0, i64 0, !dbg !5728
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5729
  %tang33 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 65, !dbg !5730
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %tang33, i64 0, i64 0, !dbg !5729
  call void @copy_v3_v3(float* %arraydecay32, float* %arraydecay34), !dbg !5731
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %orthx, i64 0, i64 0, !dbg !5732
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !5733
  %38 = load float, float* %arrayidx36, align 4, !dbg !5733
  call void @mul_v3_fl(float* %arraydecay35, float %38), !dbg !5734
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %orthy, i64 0, i64 0, !dbg !5735
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 1, !dbg !5736
  %39 = load float, float* %arrayidx38, align 4, !dbg !5736
  %40 = load float, float* %aniso, align 4, !dbg !5737
  %mul = fmul float %39, %40, !dbg !5738
  call void @mul_v3_fl(float* %arraydecay37, float %mul), !dbg !5739
  br label %if.end48, !dbg !5740

if.else39:                                        ; preds = %if.then24
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %orthx, i64 0, i64 0, !dbg !5741
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %orthy, i64 0, i64 0, !dbg !5743
  %41 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5744
  %vn42 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %41, i32 0, i32 16, !dbg !5745
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %vn42, i64 0, i64 0, !dbg !5744
  call void @ortho_basis_v3v3_v3(float* %arraydecay40, float* %arraydecay41, float* %arraydecay43), !dbg !5746
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %orthx, i64 0, i64 0, !dbg !5747
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !5748
  %42 = load float, float* %arrayidx45, align 4, !dbg !5748
  call void @mul_v3_fl(float* %arraydecay44, float %42), !dbg !5749
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %orthy, i64 0, i64 0, !dbg !5750
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 1, !dbg !5751
  %43 = load float, float* %arrayidx47, align 4, !dbg !5751
  call void @mul_v3_fl(float* %arraydecay46, float %43), !dbg !5752
  br label %if.end48

if.end48:                                         ; preds = %if.else39, %if.then28
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %v_nor_new, i64 0, i64 0, !dbg !5753
  %44 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5754
  %vn50 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %44, i32 0, i32 16, !dbg !5755
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %vn50, i64 0, i64 0, !dbg !5754
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %orthx, i64 0, i64 0, !dbg !5756
  call void @add_v3_v3v3(float* %arraydecay49, float* %arraydecay51, float* %arraydecay52), !dbg !5757
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %v_nor_new, i64 0, i64 0, !dbg !5758
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %orthy, i64 0, i64 0, !dbg !5759
  call void @add_v3_v3(float* %arraydecay53, float* %arraydecay54), !dbg !5760
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %v_nor_new, i64 0, i64 0, !dbg !5761
  %call56 = call float @normalize_v3(float* %arraydecay55), !dbg !5762
  br label %if.end61, !dbg !5763

if.else57:                                        ; preds = %while.body
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %v_nor_new, i64 0, i64 0, !dbg !5764
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5766
  %vn59 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 16, !dbg !5767
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %vn59, i64 0, i64 0, !dbg !5766
  call void @copy_v3_v3(float* %arraydecay58, float* %arraydecay60), !dbg !5768
  br label %if.end61

if.end61:                                         ; preds = %if.else57, %if.end48
  %46 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5769
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %46, i32 0, i32 1, !dbg !5771
  %47 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5771
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %47, i32 0, i32 7, !dbg !5772
  %48 = load i8, i8* %flag, align 1, !dbg !5772
  %conv62 = zext i8 %48 to i32, !dbg !5769
  %and63 = and i32 %conv62, 1, !dbg !5773
  %tobool64 = icmp ne i32 %and63, 0, !dbg !5773
  br i1 %tobool64, label %if.then65, label %if.else70, !dbg !5774

if.then65:                                        ; preds = %if.end61
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %v_reflect, i64 0, i64 0, !dbg !5775
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %v_nor_new, i64 0, i64 0, !dbg !5776
  %49 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5777
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %49, i32 0, i32 30, !dbg !5778
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !5777
  %50 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5779
  %facenor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %50, i32 0, i32 6, !dbg !5780
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %facenor, i64 0, i64 0, !dbg !5779
  call void @reflection(float* %arraydecay66, float* %arraydecay67, float* %arraydecay68, float* %arraydecay69), !dbg !5781
  br label %if.end75, !dbg !5781

if.else70:                                        ; preds = %if.end61
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %v_reflect, i64 0, i64 0, !dbg !5782
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %v_nor_new, i64 0, i64 0, !dbg !5783
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5784
  %view73 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 0, i32 30, !dbg !5785
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %view73, i64 0, i64 0, !dbg !5784
  call void @reflection_simple(float* %arraydecay71, float* %arraydecay72, float* %arraydecay74), !dbg !5786
  br label %if.end75

if.end75:                                         ; preds = %if.else70, %if.then65
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 3, !dbg !5787
  store float 0.000000e+00, float* %arrayidx76, align 4, !dbg !5788
  %arrayidx77 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 2, !dbg !5789
  store float 0.000000e+00, float* %arrayidx77, align 8, !dbg !5790
  %arrayidx78 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 1, !dbg !5791
  store float 0.000000e+00, float* %arrayidx78, align 4, !dbg !5792
  %arrayidx79 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 0, !dbg !5793
  store float 0.000000e+00, float* %arrayidx79, align 16, !dbg !5794
  %52 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5795
  %53 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5796
  %54 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5797
  %mat80 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %54, i32 0, i32 0, !dbg !5798
  %55 = load %struct.Material*, %struct.Material** %mat80, align 8, !dbg !5798
  %ray_depth = getelementptr inbounds %struct.Material, %struct.Material* %55, i32 0, i32 36, !dbg !5799
  %56 = load i16, i16* %ray_depth, align 4, !dbg !5799
  %57 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5800
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %57, i32 0, i32 29, !dbg !5801
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5800
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %v_reflect, i64 0, i64 0, !dbg !5802
  %arraydecay83 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 0, !dbg !5803
  %58 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5804
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %58, i32 0, i32 3, !dbg !5805
  %59 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5805
  %60 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5806
  %vlr84 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %60, i32 0, i32 1, !dbg !5807
  %61 = load %struct.VlakRen*, %struct.VlakRen** %vlr84, align 8, !dbg !5807
  call void @traceray(%struct.ShadeInput* %52, %struct.ShadeResult* %53, i16 signext %56, float* %arraydecay81, float* %arraydecay82, float* %arraydecay83, %struct.ObjectInstanceRen* %59, %struct.VlakRen* %61, i32 0), !dbg !5808
  %arrayidx85 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 0, !dbg !5809
  %62 = load float, float* %arrayidx85, align 16, !dbg !5809
  %63 = load float*, float** %col.addr, align 8, !dbg !5810
  %arrayidx86 = getelementptr inbounds float, float* %63, i64 0, !dbg !5810
  %64 = load float, float* %arrayidx86, align 4, !dbg !5811
  %add = fadd float %64, %62, !dbg !5811
  store float %add, float* %arrayidx86, align 4, !dbg !5811
  %arrayidx87 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 1, !dbg !5812
  %65 = load float, float* %arrayidx87, align 4, !dbg !5812
  %66 = load float*, float** %col.addr, align 8, !dbg !5813
  %arrayidx88 = getelementptr inbounds float, float* %66, i64 1, !dbg !5813
  %67 = load float, float* %arrayidx88, align 4, !dbg !5814
  %add89 = fadd float %67, %65, !dbg !5814
  store float %add89, float* %arrayidx88, align 4, !dbg !5814
  %arrayidx90 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 2, !dbg !5815
  %68 = load float, float* %arrayidx90, align 8, !dbg !5815
  %69 = load float*, float** %col.addr, align 8, !dbg !5816
  %arrayidx91 = getelementptr inbounds float, float* %69, i64 2, !dbg !5816
  %70 = load float, float* %arrayidx91, align 4, !dbg !5817
  %add92 = fadd float %70, %68, !dbg !5817
  store float %add92, float* %arrayidx91, align 4, !dbg !5817
  %arrayidx93 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 0, !dbg !5818
  %71 = load float, float* %arrayidx93, align 16, !dbg !5818
  %arrayidx94 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 0, !dbg !5819
  %72 = load float, float* %arrayidx94, align 16, !dbg !5819
  %mul95 = fmul float %71, %72, !dbg !5820
  %arrayidx96 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 0, !dbg !5821
  %73 = load float, float* %arrayidx96, align 16, !dbg !5822
  %add97 = fadd float %73, %mul95, !dbg !5822
  store float %add97, float* %arrayidx96, align 16, !dbg !5822
  %arrayidx98 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 1, !dbg !5823
  %74 = load float, float* %arrayidx98, align 4, !dbg !5823
  %arrayidx99 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 1, !dbg !5824
  %75 = load float, float* %arrayidx99, align 4, !dbg !5824
  %mul100 = fmul float %74, %75, !dbg !5825
  %arrayidx101 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 1, !dbg !5826
  %76 = load float, float* %arrayidx101, align 4, !dbg !5827
  %add102 = fadd float %76, %mul100, !dbg !5827
  store float %add102, float* %arrayidx101, align 4, !dbg !5827
  %arrayidx103 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 2, !dbg !5828
  %77 = load float, float* %arrayidx103, align 8, !dbg !5828
  %arrayidx104 = getelementptr inbounds [4 x float], [4 x float]* %sampcol, i64 0, i64 2, !dbg !5829
  %78 = load float, float* %arrayidx104, align 8, !dbg !5829
  %mul105 = fmul float %77, %78, !dbg !5830
  %arrayidx106 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 2, !dbg !5831
  %79 = load float, float* %arrayidx106, align 8, !dbg !5832
  %add107 = fadd float %79, %mul105, !dbg !5832
  store float %add107, float* %arrayidx106, align 8, !dbg !5832
  %80 = load i32, i32* %samples, align 4, !dbg !5833
  %inc = add nsw i32 %80, 1, !dbg !5833
  store i32 %inc, i32* %samples, align 4, !dbg !5833
  %81 = load float, float* %adapt_thresh, align 4, !dbg !5834
  %cmp108 = fcmp ogt float %81, 0.000000e+00, !dbg !5836
  br i1 %cmp108, label %land.lhs.true, label %if.end145, !dbg !5837

land.lhs.true:                                    ; preds = %if.end75
  %82 = load i32, i32* %samples, align 4, !dbg !5838
  %83 = load i16, i16* %max_samples, align 2, !dbg !5839
  %conv110 = sext i16 %83 to i32, !dbg !5839
  %div = sdiv i32 %conv110, 3, !dbg !5840
  %cmp111 = icmp sgt i32 %82, %div, !dbg !5841
  br i1 %cmp111, label %if.then113, label %if.end145, !dbg !5842

if.then113:                                       ; preds = %land.lhs.true
  %84 = load i32, i32* %samples, align 4, !dbg !5843
  %85 = load float*, float** %col.addr, align 8, !dbg !5846
  %arraydecay114 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 0, !dbg !5847
  %86 = load float, float* %adapt_thresh, align 4, !dbg !5848
  %call115 = call i32 @adaptive_sample_variance(i32 %84, float* %85, float* %arraydecay114, float %86), !dbg !5849
  %tobool116 = icmp ne i32 %call115, 0, !dbg !5849
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !5850

if.then117:                                       ; preds = %if.then113
  br label %while.end, !dbg !5851

if.end118:                                        ; preds = %if.then113
  %87 = load float*, float** %col.addr, align 8, !dbg !5852
  %arrayidx119 = getelementptr inbounds float, float* %87, i64 0, !dbg !5852
  %88 = load float, float* %arrayidx119, align 4, !dbg !5852
  %89 = load float*, float** %col.addr, align 8, !dbg !5854
  %arrayidx120 = getelementptr inbounds float, float* %89, i64 1, !dbg !5854
  %90 = load float, float* %arrayidx120, align 4, !dbg !5854
  %add121 = fadd float %88, %90, !dbg !5855
  %91 = load float*, float** %col.addr, align 8, !dbg !5856
  %arrayidx122 = getelementptr inbounds float, float* %91, i64 2, !dbg !5856
  %92 = load float, float* %arrayidx122, align 4, !dbg !5856
  %add123 = fadd float %add121, %92, !dbg !5857
  %div124 = fdiv float %add123, 3.000000e+00, !dbg !5858
  %93 = load i32, i32* %samples, align 4, !dbg !5859
  %conv125 = sitofp i32 %93 to float, !dbg !5860
  %div126 = fdiv float %div124, %conv125, !dbg !5861
  %cmp127 = fcmp olt float %div126, 0x3F847AE140000000, !dbg !5862
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !5863

if.then129:                                       ; preds = %if.end118
  %94 = load i16, i16* %max_samples, align 2, !dbg !5864
  %dec = add i16 %94, -1, !dbg !5864
  store i16 %dec, i16* %max_samples, align 2, !dbg !5864
  br label %if.end130, !dbg !5865

if.end130:                                        ; preds = %if.then129, %if.end118
  %95 = load float, float* %fresnelfac.addr, align 4, !dbg !5866
  %96 = load float, float* %blur, align 4, !dbg !5868
  %add131 = fadd float %96, 1.000000e+00, !dbg !5869
  %mul132 = fmul float 0x3FB99999A0000000, %add131, !dbg !5870
  %cmp133 = fcmp olt float %95, %mul132, !dbg !5871
  br i1 %cmp133, label %if.then135, label %if.end144, !dbg !5872

if.then135:                                       ; preds = %if.end130
  %97 = load i16, i16* %max_samples, align 2, !dbg !5873
  %dec136 = add i16 %97, -1, !dbg !5873
  store i16 %dec136, i16* %max_samples, align 2, !dbg !5873
  %98 = load float, float* %fresnelfac.addr, align 4, !dbg !5875
  %99 = load float, float* %blur, align 4, !dbg !5877
  %add137 = fadd float %99, 1.000000e+00, !dbg !5878
  %mul138 = fmul float 0x3FA99999A0000000, %add137, !dbg !5879
  %cmp139 = fcmp olt float %98, %mul138, !dbg !5880
  br i1 %cmp139, label %if.then141, label %if.end143, !dbg !5881

if.then141:                                       ; preds = %if.then135
  %100 = load i16, i16* %max_samples, align 2, !dbg !5882
  %dec142 = add i16 %100, -1, !dbg !5882
  store i16 %dec142, i16* %max_samples, align 2, !dbg !5882
  br label %if.end143, !dbg !5883

if.end143:                                        ; preds = %if.then141, %if.then135
  br label %if.end144, !dbg !5884

if.end144:                                        ; preds = %if.end143, %if.end130
  br label %if.end145, !dbg !5885

if.end145:                                        ; preds = %if.end144, %land.lhs.true, %if.end75
  br label %while.cond, !dbg !5698, !llvm.loop !5886

while.end:                                        ; preds = %if.then117, %while.cond
  %101 = load i32, i32* %samples, align 4, !dbg !5888
  %conv146 = sitofp i32 %101 to float, !dbg !5889
  %102 = load float*, float** %col.addr, align 8, !dbg !5890
  %arrayidx147 = getelementptr inbounds float, float* %102, i64 0, !dbg !5890
  %103 = load float, float* %arrayidx147, align 4, !dbg !5891
  %div148 = fdiv float %103, %conv146, !dbg !5891
  store float %div148, float* %arrayidx147, align 4, !dbg !5891
  %104 = load i32, i32* %samples, align 4, !dbg !5892
  %conv149 = sitofp i32 %104 to float, !dbg !5893
  %105 = load float*, float** %col.addr, align 8, !dbg !5894
  %arrayidx150 = getelementptr inbounds float, float* %105, i64 1, !dbg !5894
  %106 = load float, float* %arrayidx150, align 4, !dbg !5895
  %div151 = fdiv float %106, %conv149, !dbg !5895
  store float %div151, float* %arrayidx150, align 4, !dbg !5895
  %107 = load i32, i32* %samples, align 4, !dbg !5896
  %conv152 = sitofp i32 %107 to float, !dbg !5897
  %108 = load float*, float** %col.addr, align 8, !dbg !5898
  %arrayidx153 = getelementptr inbounds float, float* %108, i64 2, !dbg !5898
  %109 = load float, float* %arrayidx153, align 4, !dbg !5899
  %div154 = fdiv float %109, %conv152, !dbg !5899
  store float %div154, float* %arrayidx153, align 4, !dbg !5899
  %110 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !5900
  %tobool155 = icmp ne %struct.QMCSampler* %110, null, !dbg !5900
  br i1 %tobool155, label %if.then156, label %if.end159, !dbg !5902

if.then156:                                       ; preds = %while.end
  %111 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5903
  %thread157 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %111, i32 0, i32 114, !dbg !5904
  %112 = load i16, i16* %thread157, align 2, !dbg !5904
  %conv158 = sext i16 %112 to i32, !dbg !5903
  %113 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !5905
  call void @release_thread_qmcsampler(%struct.Render* @R, i32 %conv158, %struct.QMCSampler* %113), !dbg !5906
  br label %if.end159, !dbg !5906

if.end159:                                        ; preds = %if.then156, %while.end
  ret void, !dbg !5907
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5908 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5909, metadata !DIExpression()), !dbg !5910
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5911, metadata !DIExpression()), !dbg !5912
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5913, metadata !DIExpression()), !dbg !5914
  %0 = load float*, float** %a.addr, align 8, !dbg !5915
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5915
  %1 = load float, float* %arrayidx, align 4, !dbg !5915
  %2 = load float*, float** %b.addr, align 8, !dbg !5916
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5916
  %3 = load float, float* %arrayidx1, align 4, !dbg !5916
  %add = fadd float %1, %3, !dbg !5917
  %4 = load float*, float** %r.addr, align 8, !dbg !5918
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5918
  store float %add, float* %arrayidx2, align 4, !dbg !5919
  %5 = load float*, float** %a.addr, align 8, !dbg !5920
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5920
  %6 = load float, float* %arrayidx3, align 4, !dbg !5920
  %7 = load float*, float** %b.addr, align 8, !dbg !5921
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5921
  %8 = load float, float* %arrayidx4, align 4, !dbg !5921
  %add5 = fadd float %6, %8, !dbg !5922
  %9 = load float*, float** %r.addr, align 8, !dbg !5923
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5923
  store float %add5, float* %arrayidx6, align 4, !dbg !5924
  %10 = load float*, float** %a.addr, align 8, !dbg !5925
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5925
  %11 = load float, float* %arrayidx7, align 4, !dbg !5925
  %12 = load float*, float** %b.addr, align 8, !dbg !5926
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !5926
  %13 = load float, float* %arrayidx8, align 4, !dbg !5926
  %add9 = fadd float %11, %13, !dbg !5927
  %14 = load float*, float** %r.addr, align 8, !dbg !5928
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5928
  store float %add9, float* %arrayidx10, align 4, !dbg !5929
  ret void, !dbg !5930
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_ao_sphere(%struct.World* %wrld) #0 !dbg !5931 {
entry:
  %wrld.addr = alloca %struct.World*, align 8
  %rng = alloca %struct.RNG*, align 8
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  %iter = alloca i32, align 4
  store %struct.World* %wrld, %struct.World** %wrld.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.World** %wrld.addr, metadata !5935, metadata !DIExpression()), !dbg !5936
  call void @llvm.dbg.declare(metadata %struct.RNG** %rng, metadata !5937, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5939, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5941, metadata !DIExpression()), !dbg !5942
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5943, metadata !DIExpression()), !dbg !5944
  call void @llvm.dbg.declare(metadata i32* %iter, metadata !5945, metadata !DIExpression()), !dbg !5946
  store i32 16, i32* %iter, align 4, !dbg !5946
  %0 = load %struct.World*, %struct.World** %wrld.addr, align 8, !dbg !5947
  %aosamp = getelementptr inbounds %struct.World, %struct.World* %0, i32 0, i32 51, !dbg !5948
  %1 = load i16, i16* %aosamp, align 2, !dbg !5948
  %conv = sext i16 %1 to i32, !dbg !5947
  %mul = mul nsw i32 2, %conv, !dbg !5949
  %2 = load %struct.World*, %struct.World** %wrld.addr, align 8, !dbg !5950
  %aosamp1 = getelementptr inbounds %struct.World, %struct.World* %2, i32 0, i32 51, !dbg !5951
  %3 = load i16, i16* %aosamp1, align 2, !dbg !5951
  %conv2 = sext i16 %3 to i32, !dbg !5950
  %mul3 = mul nsw i32 %mul, %conv2, !dbg !5952
  store i32 %mul3, i32* %tot, align 4, !dbg !5953
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5954
  %5 = load i32, i32* %tot, align 4, !dbg !5955
  %mul4 = mul nsw i32 3, %5, !dbg !5956
  %conv5 = sext i32 %mul4 to i64, !dbg !5957
  %mul6 = mul i64 %conv5, 4, !dbg !5958
  %call = call i8* %4(i64 %mul6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0)), !dbg !5954
  %6 = bitcast i8* %call to float*, !dbg !5954
  %7 = load %struct.World*, %struct.World** %wrld.addr, align 8, !dbg !5959
  %aosphere = getelementptr inbounds %struct.World, %struct.World* %7, i32 0, i32 67, !dbg !5960
  store float* %6, float** %aosphere, align 8, !dbg !5961
  %8 = load i32, i32* %tot, align 4, !dbg !5962
  %call7 = call %struct.RNG* @BLI_rng_new_srandom(i32 %8), !dbg !5963
  store %struct.RNG* %call7, %struct.RNG** %rng, align 8, !dbg !5964
  %9 = load %struct.World*, %struct.World** %wrld.addr, align 8, !dbg !5965
  %aosphere8 = getelementptr inbounds %struct.World, %struct.World* %9, i32 0, i32 67, !dbg !5966
  %10 = load float*, float** %aosphere8, align 8, !dbg !5966
  store float* %10, float** %fp, align 8, !dbg !5967
  store i32 0, i32* %a, align 4, !dbg !5968
  br label %for.cond, !dbg !5970

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %a, align 4, !dbg !5971
  %12 = load i32, i32* %tot, align 4, !dbg !5973
  %cmp = icmp slt i32 %11, %12, !dbg !5974
  br i1 %cmp, label %for.body, label %for.end, !dbg !5975

for.body:                                         ; preds = %for.cond
  %13 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !5976
  %14 = load float*, float** %fp, align 8, !dbg !5978
  call void @BLI_rng_get_float_unit_v3(%struct.RNG* %13, float* %14), !dbg !5979
  br label %for.inc, !dbg !5980

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %a, align 4, !dbg !5981
  %inc = add nsw i32 %15, 1, !dbg !5981
  store i32 %inc, i32* %a, align 4, !dbg !5981
  %16 = load float*, float** %fp, align 8, !dbg !5982
  %add.ptr = getelementptr inbounds float, float* %16, i64 3, !dbg !5982
  store float* %add.ptr, float** %fp, align 8, !dbg !5982
  br label %for.cond, !dbg !5983, !llvm.loop !5984

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !5986

while.cond:                                       ; preds = %for.end19, %for.end
  %17 = load i32, i32* %iter, align 4, !dbg !5987
  %dec = add nsw i32 %17, -1, !dbg !5987
  store i32 %dec, i32* %iter, align 4, !dbg !5987
  %tobool = icmp ne i32 %17, 0, !dbg !5986
  br i1 %tobool, label %while.body, label %while.end, !dbg !5986

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %a, align 4, !dbg !5988
  %18 = load %struct.World*, %struct.World** %wrld.addr, align 8, !dbg !5991
  %aosphere10 = getelementptr inbounds %struct.World, %struct.World* %18, i32 0, i32 67, !dbg !5992
  %19 = load float*, float** %aosphere10, align 8, !dbg !5992
  store float* %19, float** %fp, align 8, !dbg !5993
  br label %for.cond11, !dbg !5994

for.cond11:                                       ; preds = %for.inc16, %while.body
  %20 = load i32, i32* %a, align 4, !dbg !5995
  %21 = load i32, i32* %tot, align 4, !dbg !5997
  %cmp12 = icmp slt i32 %20, %21, !dbg !5998
  br i1 %cmp12, label %for.body14, label %for.end19, !dbg !5999

for.body14:                                       ; preds = %for.cond11
  %22 = load %struct.World*, %struct.World** %wrld.addr, align 8, !dbg !6000
  %aosphere15 = getelementptr inbounds %struct.World, %struct.World* %22, i32 0, i32 67, !dbg !6002
  %23 = load float*, float** %aosphere15, align 8, !dbg !6002
  %24 = load i32, i32* %tot, align 4, !dbg !6003
  %25 = load float*, float** %fp, align 8, !dbg !6004
  call void @DS_energy(float* %23, i32 %24, float* %25), !dbg !6005
  br label %for.inc16, !dbg !6006

for.inc16:                                        ; preds = %for.body14
  %26 = load i32, i32* %a, align 4, !dbg !6007
  %inc17 = add nsw i32 %26, 1, !dbg !6007
  store i32 %inc17, i32* %a, align 4, !dbg !6007
  %27 = load float*, float** %fp, align 8, !dbg !6008
  %add.ptr18 = getelementptr inbounds float, float* %27, i64 3, !dbg !6008
  store float* %add.ptr18, float** %fp, align 8, !dbg !6008
  br label %for.cond11, !dbg !6009, !llvm.loop !6010

for.end19:                                        ; preds = %for.cond11
  br label %while.cond, !dbg !5986, !llvm.loop !6012

while.end:                                        ; preds = %while.cond
  %28 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6014
  %29 = load i32, i32* %tot, align 4, !dbg !6015
  %mul20 = mul nsw i32 3, %29, !dbg !6016
  %conv21 = sext i32 %mul20 to i64, !dbg !6017
  %mul22 = mul i64 %conv21, 4, !dbg !6018
  %call23 = call i8* %28(i64 %mul22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)), !dbg !6014
  %30 = bitcast i8* %call23 to float*, !dbg !6014
  %31 = load %struct.World*, %struct.World** %wrld.addr, align 8, !dbg !6019
  %aotables = getelementptr inbounds %struct.World, %struct.World* %31, i32 0, i32 68, !dbg !6020
  store float* %30, float** %aotables, align 8, !dbg !6021
  %32 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !6022
  call void @BLI_rng_free(%struct.RNG* %32), !dbg !6023
  ret void, !dbg !6024
}

declare dso_local void @BLI_rng_get_float_unit_v3(%struct.RNG*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @DS_energy(float* %sphere, i32 %tot, float* %vec) #0 !dbg !6025 {
entry:
  %sphere.addr = alloca float*, align 8
  %tot.addr = alloca i32, align 4
  %vec.addr = alloca float*, align 8
  %fp = alloca float*, align 8
  %fac = alloca float, align 4
  %force = alloca [3 x float], align 4
  %res = alloca [3 x float], align 4
  %a = alloca i32, align 4
  store float* %sphere, float** %sphere.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sphere.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !6030, metadata !DIExpression()), !dbg !6031
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !6032, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.declare(metadata float** %fp, metadata !6034, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6036, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.declare(metadata [3 x float]* %force, metadata !6038, metadata !DIExpression()), !dbg !6039
  call void @llvm.dbg.declare(metadata [3 x float]* %res, metadata !6040, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6042, metadata !DIExpression()), !dbg !6043
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %res, i64 0, i64 2, !dbg !6044
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6045
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %res, i64 0, i64 1, !dbg !6046
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6047
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %res, i64 0, i64 0, !dbg !6048
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6049
  store i32 0, i32* %a, align 4, !dbg !6050
  %0 = load float*, float** %sphere.addr, align 8, !dbg !6052
  store float* %0, float** %fp, align 8, !dbg !6053
  br label %for.cond, !dbg !6054

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a, align 4, !dbg !6055
  %2 = load i32, i32* %tot.addr, align 4, !dbg !6057
  %cmp = icmp slt i32 %1, %2, !dbg !6058
  br i1 %cmp, label %for.body, label %for.end, !dbg !6059

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !6060
  %3 = load float*, float** %vec.addr, align 8, !dbg !6062
  %4 = load float*, float** %fp, align 8, !dbg !6063
  call void @sub_v3_v3v3(float* %arraydecay, float* %3, float* %4), !dbg !6064
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !6065
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !6066
  %call = call float @dot_v3v3(float* %arraydecay3, float* %arraydecay4), !dbg !6067
  store float %call, float* %fac, align 4, !dbg !6068
  %5 = load float, float* %fac, align 4, !dbg !6069
  %cmp5 = fcmp une float %5, 0.000000e+00, !dbg !6071
  br i1 %cmp5, label %if.then, label %if.end, !dbg !6072

if.then:                                          ; preds = %for.body
  %6 = load float, float* %fac, align 4, !dbg !6073
  %div = fdiv float 1.000000e+00, %6, !dbg !6075
  store float %div, float* %fac, align 4, !dbg !6076
  %7 = load float, float* %fac, align 4, !dbg !6077
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !6078
  %8 = load float, float* %arrayidx6, align 4, !dbg !6078
  %mul = fmul float %7, %8, !dbg !6079
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %res, i64 0, i64 0, !dbg !6080
  %9 = load float, float* %arrayidx7, align 4, !dbg !6081
  %add = fadd float %9, %mul, !dbg !6081
  store float %add, float* %arrayidx7, align 4, !dbg !6081
  %10 = load float, float* %fac, align 4, !dbg !6082
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 1, !dbg !6083
  %11 = load float, float* %arrayidx8, align 4, !dbg !6083
  %mul9 = fmul float %10, %11, !dbg !6084
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %res, i64 0, i64 1, !dbg !6085
  %12 = load float, float* %arrayidx10, align 4, !dbg !6086
  %add11 = fadd float %12, %mul9, !dbg !6086
  store float %add11, float* %arrayidx10, align 4, !dbg !6086
  %13 = load float, float* %fac, align 4, !dbg !6087
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 2, !dbg !6088
  %14 = load float, float* %arrayidx12, align 4, !dbg !6088
  %mul13 = fmul float %13, %14, !dbg !6089
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %res, i64 0, i64 2, !dbg !6090
  %15 = load float, float* %arrayidx14, align 4, !dbg !6091
  %add15 = fadd float %15, %mul13, !dbg !6091
  store float %add15, float* %arrayidx14, align 4, !dbg !6091
  br label %if.end, !dbg !6092

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6093

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %a, align 4, !dbg !6094
  %inc = add nsw i32 %16, 1, !dbg !6094
  store i32 %inc, i32* %a, align 4, !dbg !6094
  %17 = load float*, float** %fp, align 8, !dbg !6095
  %add.ptr = getelementptr inbounds float, float* %17, i64 3, !dbg !6095
  store float* %add.ptr, float** %fp, align 8, !dbg !6095
  br label %for.cond, !dbg !6096, !llvm.loop !6097

for.end:                                          ; preds = %for.cond
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %res, i64 0, i64 0, !dbg !6099
  call void @mul_v3_fl(float* %arraydecay16, float 5.000000e-01), !dbg !6100
  %18 = load float*, float** %vec.addr, align 8, !dbg !6101
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %res, i64 0, i64 0, !dbg !6102
  call void @add_v3_v3(float* %18, float* %arraydecay17), !dbg !6103
  %19 = load float*, float** %vec.addr, align 8, !dbg !6104
  %call18 = call float @normalize_v3(float* %19), !dbg !6105
  ret void, !dbg !6106
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ray_ao(%struct.ShadeInput* %shi, float* %ao, float* %env) #0 !dbg !6107 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %ao.addr = alloca float*, align 8
  %env.addr = alloca float*, align 8
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !6110, metadata !DIExpression()), !dbg !6111
  store float* %ao, float** %ao.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ao.addr, metadata !6112, metadata !DIExpression()), !dbg !6113
  store float* %env, float** %env.addr, align 8
  call void @llvm.dbg.declare(metadata float** %env.addr, metadata !6114, metadata !DIExpression()), !dbg !6115
  %0 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 63), align 8, !dbg !6116
  %conv = sext i16 %0 to i32, !dbg !6116
  %cmp = icmp eq i32 %conv, 2, !dbg !6116
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6116

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 63), align 8, !dbg !6116
  %conv2 = sext i16 %1 to i32, !dbg !6116
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !6116
  br i1 %cmp3, label %if.then, label %if.else, !dbg !6118

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6119
  %3 = load float*, float** %ao.addr, align 8, !dbg !6120
  %4 = load float*, float** %env.addr, align 8, !dbg !6121
  call void @ray_ao_qmc(%struct.ShadeInput* %2, float* %3, float* %4), !dbg !6122
  br label %if.end9, !dbg !6122

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 63), align 8, !dbg !6123
  %conv5 = sext i16 %5 to i32, !dbg !6125
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !6126
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !6127

if.then8:                                         ; preds = %if.else
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6128
  %7 = load float*, float** %ao.addr, align 8, !dbg !6129
  %8 = load float*, float** %env.addr, align 8, !dbg !6130
  call void @ray_ao_spheresamp(%struct.ShadeInput* %6, float* %7, float* %8), !dbg !6131
  br label %if.end, !dbg !6131

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  ret void, !dbg !6132
}

; Function Attrs: noinline nounwind uwtable
define internal void @ray_ao_qmc(%struct.ShadeInput* %shi, float* %ao, float* %env) #0 !dbg !6133 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %ao.addr = alloca float*, align 8
  %env.addr = alloca float*, align 8
  %isec = alloca %struct.Isect, align 8
  %point_hint = alloca %struct.RayHint, align 8
  %qsa = alloca %struct.QMCSampler*, align 8
  %samp3d = alloca [3 x float], align 4
  %up = alloca [3 x float], align 4
  %side = alloca [3 x float], align 4
  %dir = alloca [3 x float], align 4
  %nrm = alloca [3 x float], align 4
  %maxdist = alloca float, align 4
  %fac = alloca float, align 4
  %prev = alloca float, align 4
  %adapt_thresh = alloca float, align 4
  %adapt_speed_fac = alloca float, align 4
  %samples = alloca i32, align 4
  %max_samples = alloca i32, align 4
  %dxyview = alloca [3 x float], align 4
  %skyadded = alloca float, align 4
  %envcolor = alloca i32, align 4
  %speedfac = alloca float, align 4
  %skycol = alloca [4 x float], align 16
  %view = alloca [3 x float], align 4
  %skyfac = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !6134, metadata !DIExpression()), !dbg !6135
  store float* %ao, float** %ao.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ao.addr, metadata !6136, metadata !DIExpression()), !dbg !6137
  store float* %env, float** %env.addr, align 8
  call void @llvm.dbg.declare(metadata float** %env.addr, metadata !6138, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.declare(metadata %struct.Isect* %isec, metadata !6140, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.declare(metadata %struct.RayHint* %point_hint, metadata !6142, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa, metadata !6144, metadata !DIExpression()), !dbg !6145
  store %struct.QMCSampler* null, %struct.QMCSampler** %qsa, align 8, !dbg !6145
  call void @llvm.dbg.declare(metadata [3 x float]* %samp3d, metadata !6146, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.declare(metadata [3 x float]* %up, metadata !6148, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.declare(metadata [3 x float]* %side, metadata !6150, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.declare(metadata [3 x float]* %dir, metadata !6152, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.declare(metadata [3 x float]* %nrm, metadata !6154, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.declare(metadata float* %maxdist, metadata !6156, metadata !DIExpression()), !dbg !6157
  %0 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 46), align 8, !dbg !6158
  store float %0, float* %maxdist, align 4, !dbg !6157
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6159, metadata !DIExpression()), !dbg !6160
  store float 0.000000e+00, float* %fac, align 4, !dbg !6160
  call void @llvm.dbg.declare(metadata float* %prev, metadata !6161, metadata !DIExpression()), !dbg !6162
  store float 0.000000e+00, float* %prev, align 4, !dbg !6162
  call void @llvm.dbg.declare(metadata float* %adapt_thresh, metadata !6163, metadata !DIExpression()), !dbg !6164
  %1 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 54), align 8, !dbg !6165
  store float %1, float* %adapt_thresh, align 4, !dbg !6164
  call void @llvm.dbg.declare(metadata float* %adapt_speed_fac, metadata !6166, metadata !DIExpression()), !dbg !6167
  %2 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 55), align 4, !dbg !6168
  store float %2, float* %adapt_speed_fac, align 4, !dbg !6167
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !6169, metadata !DIExpression()), !dbg !6170
  store i32 0, i32* %samples, align 4, !dbg !6170
  call void @llvm.dbg.declare(metadata i32* %max_samples, metadata !6171, metadata !DIExpression()), !dbg !6172
  %3 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 51), align 2, !dbg !6173
  %conv = sext i16 %3 to i32, !dbg !6174
  %4 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 51), align 2, !dbg !6175
  %conv1 = sext i16 %4 to i32, !dbg !6176
  %mul = mul nsw i32 %conv, %conv1, !dbg !6177
  store i32 %mul, i32* %max_samples, align 4, !dbg !6172
  call void @llvm.dbg.declare(metadata [3 x float]* %dxyview, metadata !6178, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.declare(metadata float* %skyadded, metadata !6180, metadata !DIExpression()), !dbg !6181
  store float 0.000000e+00, float* %skyadded, align 4, !dbg !6181
  call void @llvm.dbg.declare(metadata i32* %envcolor, metadata !6182, metadata !DIExpression()), !dbg !6183
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6184
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 3, !dbg !6185
  %6 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6185
  %7 = bitcast %struct.ObjectInstanceRen* %6 to i8*, !dbg !6184
  %orig = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 16, !dbg !6186
  %ob = getelementptr inbounds %struct.anon, %struct.anon* %orig, i32 0, i32 0, !dbg !6187
  store i8* %7, i8** %ob, align 8, !dbg !6188
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6189
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 1, !dbg !6190
  %9 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6190
  %10 = bitcast %struct.VlakRen* %9 to i8*, !dbg !6189
  %orig2 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 16, !dbg !6191
  %face = getelementptr inbounds %struct.anon, %struct.anon* %orig2, i32 0, i32 1, !dbg !6192
  store i8* %10, i8** %face, align 8, !dbg !6193
  %check = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 10, !dbg !6194
  store i32 2, i32* %check, align 4, !dbg !6195
  %skip = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 9, !dbg !6196
  store i32 2, i32* %skip, align 8, !dbg !6197
  %hint = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 18, !dbg !6198
  store %struct.RayHint* null, %struct.RayHint** %hint, align 8, !dbg !6199
  %hit = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 15, !dbg !6200
  %ob3 = getelementptr inbounds %struct.anon, %struct.anon* %hit, i32 0, i32 0, !dbg !6201
  store i8* null, i8** %ob3, align 8, !dbg !6202
  %hit4 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 15, !dbg !6203
  %face5 = getelementptr inbounds %struct.anon, %struct.anon* %hit4, i32 0, i32 1, !dbg !6204
  store i8* null, i8** %face5, align 8, !dbg !6205
  %last_hit = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 17, !dbg !6206
  store %struct.RayObject* null, %struct.RayObject** %last_hit, align 8, !dbg !6207
  %11 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 50), align 8, !dbg !6208
  %conv6 = sext i16 %11 to i32, !dbg !6209
  %and = and i32 %conv6, 1, !dbg !6210
  %tobool = icmp ne i32 %and, 0, !dbg !6211
  %12 = zext i1 %tobool to i64, !dbg !6211
  %cond = select i1 %tobool, i32 2, i32 0, !dbg !6211
  %mode = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 7, !dbg !6212
  store i32 %cond, i32* %mode, align 8, !dbg !6213
  %lay = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 8, !dbg !6214
  store i32 -1, i32* %lay, align 4, !dbg !6215
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !6216
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !6217
  %13 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6218
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %13, i32 0, i32 29, !dbg !6219
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6218
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay7), !dbg !6220
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6221
  %obi8 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 3, !dbg !6222
  %15 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi8, align 8, !dbg !6222
  call void @RE_instance_rotate_ray_start(%struct.ObjectInstanceRen* %15, %struct.Isect* %isec), !dbg !6223
  %16 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !6224
  %start9 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !6225
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %start9, i64 0, i64 0, !dbg !6226
  %start11 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !6227
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %start11, i64 0, i64 0, !dbg !6228
  call void @RE_rayobject_hint_bb(%struct.RayObject* %16, %struct.RayHint* %point_hint, float* %arraydecay10, float* %arraydecay12), !dbg !6229
  %hint13 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 18, !dbg !6230
  store %struct.RayHint* %point_hint, %struct.RayHint** %hint13, align 8, !dbg !6231
  %17 = load float*, float** %ao.addr, align 8, !dbg !6232
  call void @zero_v3(float* %17), !dbg !6233
  %18 = load float*, float** %env.addr, align 8, !dbg !6234
  call void @zero_v3(float* %18), !dbg !6235
  %19 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 53), align 2, !dbg !6236
  %conv14 = sext i16 %19 to i32, !dbg !6237
  store i32 %conv14, i32* %envcolor, align 4, !dbg !6238
  %20 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6239
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %20, i32 0, i32 0, !dbg !6241
  %21 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !6241
  %mode15 = getelementptr inbounds %struct.Material, %struct.Material* %21, i32 0, i32 51, !dbg !6242
  %22 = load i32, i32* %mode15, align 4, !dbg !6242
  %and16 = and i32 %22, 1024, !dbg !6243
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6243
  br i1 %tobool17, label %if.then, label %if.end, !dbg !6244

if.then:                                          ; preds = %entry
  store i32 0, i32* %envcolor, align 4, !dbg !6245
  br label %if.end, !dbg !6246

if.end:                                           ; preds = %if.then, %entry
  %23 = load i32, i32* %envcolor, align 4, !dbg !6247
  %cmp = icmp eq i32 %23, 2, !dbg !6249
  br i1 %cmp, label %if.then19, label %if.end25, !dbg !6250

if.then19:                                        ; preds = %if.end
  %24 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 51), align 2, !dbg !6251
  %conv20 = sitofp i16 %24 to float, !dbg !6253
  %div = fdiv float 1.000000e+00, %conv20, !dbg !6254
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %dxyview, i64 0, i64 0, !dbg !6255
  store float %div, float* %arrayidx, align 4, !dbg !6256
  %25 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 51), align 2, !dbg !6257
  %conv21 = sitofp i16 %25 to float, !dbg !6258
  %div22 = fdiv float 1.000000e+00, %conv21, !dbg !6259
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %dxyview, i64 0, i64 1, !dbg !6260
  store float %div22, float* %arrayidx23, align 4, !dbg !6261
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %dxyview, i64 0, i64 2, !dbg !6262
  store float 0.000000e+00, float* %arrayidx24, align 4, !dbg !6263
  br label %if.end25, !dbg !6264

if.end25:                                         ; preds = %if.then19, %if.end
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6265
  %vlr26 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 1, !dbg !6267
  %27 = load %struct.VlakRen*, %struct.VlakRen** %vlr26, align 8, !dbg !6267
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %27, i32 0, i32 7, !dbg !6268
  %28 = load i8, i8* %flag, align 1, !dbg !6268
  %conv27 = zext i8 %28 to i32, !dbg !6265
  %and28 = and i32 %conv27, 1, !dbg !6269
  %tobool29 = icmp ne i32 %and28, 0, !dbg !6269
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !6270

if.then30:                                        ; preds = %if.end25
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %nrm, i64 0, i64 0, !dbg !6271
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6273
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 16, !dbg !6274
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !6273
  call void @copy_v3_v3(float* %arraydecay31, float* %arraydecay32), !dbg !6275
  br label %if.end35, !dbg !6276

if.else:                                          ; preds = %if.end25
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %nrm, i64 0, i64 0, !dbg !6277
  %30 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6279
  %facenor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %30, i32 0, i32 6, !dbg !6280
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %facenor, i64 0, i64 0, !dbg !6279
  call void @copy_v3_v3(float* %arraydecay33, float* %arraydecay34), !dbg !6281
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then30
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %up, i64 0, i64 0, !dbg !6282
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %side, i64 0, i64 0, !dbg !6283
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %nrm, i64 0, i64 0, !dbg !6284
  call void @ortho_basis_v3v3_v3(float* %arraydecay36, float* %arraydecay37, float* %arraydecay38), !dbg !6285
  %31 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 63), align 8, !dbg !6286
  %conv39 = sext i16 %31 to i32, !dbg !6288
  %cmp40 = icmp eq i32 %conv39, 1, !dbg !6289
  br i1 %cmp40, label %if.then42, label %if.else62, !dbg !6290

if.then42:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata float* %speedfac, metadata !6291, metadata !DIExpression()), !dbg !6293
  %32 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6294
  %call = call float @get_avg_speed(%struct.ShadeInput* %32), !dbg !6295
  %33 = load float, float* %adapt_speed_fac, align 4, !dbg !6296
  %mul43 = fmul float %call, %33, !dbg !6297
  store float %mul43, float* %speedfac, align 4, !dbg !6298
  %34 = load float, float* %speedfac, align 4, !dbg !6299
  %cmp44 = fcmp olt float %34, 1.000000e+00, !dbg !6299
  br i1 %cmp44, label %if.then46, label %if.else47, !dbg !6302

if.then46:                                        ; preds = %if.then42
  store float 1.000000e+00, float* %speedfac, align 4, !dbg !6299
  br label %if.end52, !dbg !6299

if.else47:                                        ; preds = %if.then42
  %35 = load float, float* %speedfac, align 4, !dbg !6303
  %cmp48 = fcmp ogt float %35, 1.000000e+03, !dbg !6303
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !6299

if.then50:                                        ; preds = %if.else47
  store float 1.000000e+03, float* %speedfac, align 4, !dbg !6303
  br label %if.end51, !dbg !6303

if.end51:                                         ; preds = %if.then50, %if.else47
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then46
  %36 = load float, float* %speedfac, align 4, !dbg !6305
  %37 = load i32, i32* %max_samples, align 4, !dbg !6306
  %conv53 = sitofp i32 %37 to float, !dbg !6306
  %div54 = fdiv float %conv53, %36, !dbg !6306
  %conv55 = fptosi float %div54 to i32, !dbg !6306
  store i32 %conv55, i32* %max_samples, align 4, !dbg !6306
  %38 = load i32, i32* %max_samples, align 4, !dbg !6307
  %cmp56 = icmp slt i32 %38, 5, !dbg !6309
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !6310

if.then58:                                        ; preds = %if.end52
  store i32 5, i32* %max_samples, align 4, !dbg !6311
  br label %if.end59, !dbg !6312

if.end59:                                         ; preds = %if.then58, %if.end52
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6313
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %39, i32 0, i32 114, !dbg !6314
  %40 = load i16, i16* %thread, align 2, !dbg !6314
  %conv60 = sext i16 %40 to i32, !dbg !6313
  %41 = load i32, i32* %max_samples, align 4, !dbg !6315
  %call61 = call %struct.QMCSampler* @get_thread_qmcsampler(%struct.Render* @R, i32 %conv60, i32 1, i32 %41), !dbg !6316
  store %struct.QMCSampler* %call61, %struct.QMCSampler** %qsa, align 8, !dbg !6317
  br label %if.end71, !dbg !6318

if.else62:                                        ; preds = %if.end35
  %42 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 63), align 8, !dbg !6319
  %conv63 = sext i16 %42 to i32, !dbg !6321
  %cmp64 = icmp eq i32 %conv63, 2, !dbg !6322
  br i1 %cmp64, label %if.then66, label %if.end70, !dbg !6323

if.then66:                                        ; preds = %if.else62
  %43 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6324
  %thread67 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %43, i32 0, i32 114, !dbg !6325
  %44 = load i16, i16* %thread67, align 2, !dbg !6325
  %conv68 = sext i16 %44 to i32, !dbg !6324
  %45 = load i32, i32* %max_samples, align 4, !dbg !6326
  %call69 = call %struct.QMCSampler* @get_thread_qmcsampler(%struct.Render* @R, i32 %conv68, i32 2, i32 %45), !dbg !6327
  store %struct.QMCSampler* %call69, %struct.QMCSampler** %qsa, align 8, !dbg !6328
  br label %if.end70, !dbg !6329

if.end70:                                         ; preds = %if.then66, %if.else62
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end59
  %46 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !6330
  %47 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6331
  %thread72 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %47, i32 0, i32 114, !dbg !6332
  %48 = load i16, i16* %thread72, align 2, !dbg !6332
  %conv73 = sext i16 %48 to i32, !dbg !6331
  call void @QMC_initPixel(%struct.QMCSampler* %46, i32 %conv73), !dbg !6333
  br label %while.cond, !dbg !6334

while.cond:                                       ; preds = %if.end221, %if.end71
  %49 = load i32, i32* %samples, align 4, !dbg !6335
  %50 = load i32, i32* %max_samples, align 4, !dbg !6336
  %cmp74 = icmp slt i32 %49, %50, !dbg !6337
  br i1 %cmp74, label %while.body, label %while.end, !dbg !6334

while.body:                                       ; preds = %while.cond
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !6338
  %51 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !6340
  %52 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6341
  %thread77 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %52, i32 0, i32 114, !dbg !6342
  %53 = load i16, i16* %thread77, align 2, !dbg !6342
  %conv78 = sext i16 %53 to i32, !dbg !6341
  %54 = load i32, i32* %samples, align 4, !dbg !6343
  call void @QMC_sampleHemi(float* %arraydecay76, %struct.QMCSampler* %51, i32 %conv78, i32 %54), !dbg !6344
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !6345
  %55 = load float, float* %arrayidx79, align 4, !dbg !6345
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %up, i64 0, i64 0, !dbg !6346
  %56 = load float, float* %arrayidx80, align 4, !dbg !6346
  %mul81 = fmul float %55, %56, !dbg !6347
  %arrayidx82 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 1, !dbg !6348
  %57 = load float, float* %arrayidx82, align 4, !dbg !6348
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %side, i64 0, i64 0, !dbg !6349
  %58 = load float, float* %arrayidx83, align 4, !dbg !6349
  %mul84 = fmul float %57, %58, !dbg !6350
  %add = fadd float %mul81, %mul84, !dbg !6351
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 2, !dbg !6352
  %59 = load float, float* %arrayidx85, align 4, !dbg !6352
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %nrm, i64 0, i64 0, !dbg !6353
  %60 = load float, float* %arrayidx86, align 4, !dbg !6353
  %mul87 = fmul float %59, %60, !dbg !6354
  %add88 = fadd float %add, %mul87, !dbg !6355
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !6356
  store float %add88, float* %arrayidx89, align 4, !dbg !6357
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !6358
  %61 = load float, float* %arrayidx90, align 4, !dbg !6358
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %up, i64 0, i64 1, !dbg !6359
  %62 = load float, float* %arrayidx91, align 4, !dbg !6359
  %mul92 = fmul float %61, %62, !dbg !6360
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 1, !dbg !6361
  %63 = load float, float* %arrayidx93, align 4, !dbg !6361
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %side, i64 0, i64 1, !dbg !6362
  %64 = load float, float* %arrayidx94, align 4, !dbg !6362
  %mul95 = fmul float %63, %64, !dbg !6363
  %add96 = fadd float %mul92, %mul95, !dbg !6364
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 2, !dbg !6365
  %65 = load float, float* %arrayidx97, align 4, !dbg !6365
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %nrm, i64 0, i64 1, !dbg !6366
  %66 = load float, float* %arrayidx98, align 4, !dbg !6366
  %mul99 = fmul float %65, %66, !dbg !6367
  %add100 = fadd float %add96, %mul99, !dbg !6368
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 1, !dbg !6369
  store float %add100, float* %arrayidx101, align 4, !dbg !6370
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !6371
  %67 = load float, float* %arrayidx102, align 4, !dbg !6371
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %up, i64 0, i64 2, !dbg !6372
  %68 = load float, float* %arrayidx103, align 4, !dbg !6372
  %mul104 = fmul float %67, %68, !dbg !6373
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 1, !dbg !6374
  %69 = load float, float* %arrayidx105, align 4, !dbg !6374
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %side, i64 0, i64 2, !dbg !6375
  %70 = load float, float* %arrayidx106, align 4, !dbg !6375
  %mul107 = fmul float %69, %70, !dbg !6376
  %add108 = fadd float %mul104, %mul107, !dbg !6377
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 2, !dbg !6378
  %71 = load float, float* %arrayidx109, align 4, !dbg !6378
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %nrm, i64 0, i64 2, !dbg !6379
  %72 = load float, float* %arrayidx110, align 4, !dbg !6379
  %mul111 = fmul float %71, %72, !dbg !6380
  %add112 = fadd float %add108, %mul111, !dbg !6381
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 2, !dbg !6382
  store float %add112, float* %arrayidx113, align 4, !dbg !6383
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !6384
  %call115 = call float @normalize_v3(float* %arraydecay114), !dbg !6385
  %arrayidx116 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !6386
  %73 = load float, float* %arrayidx116, align 4, !dbg !6386
  %fneg = fneg float %73, !dbg !6387
  %dir117 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 1, !dbg !6388
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %dir117, i64 0, i64 0, !dbg !6389
  store float %fneg, float* %arrayidx118, align 4, !dbg !6390
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 1, !dbg !6391
  %74 = load float, float* %arrayidx119, align 4, !dbg !6391
  %fneg120 = fneg float %74, !dbg !6392
  %dir121 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 1, !dbg !6393
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %dir121, i64 0, i64 1, !dbg !6394
  store float %fneg120, float* %arrayidx122, align 4, !dbg !6395
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 2, !dbg !6396
  %75 = load float, float* %arrayidx123, align 4, !dbg !6396
  %fneg124 = fneg float %75, !dbg !6397
  %dir125 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 1, !dbg !6398
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %dir125, i64 0, i64 2, !dbg !6399
  store float %fneg124, float* %arrayidx126, align 4, !dbg !6400
  %76 = load float, float* %maxdist, align 4, !dbg !6401
  %dist = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 2, !dbg !6402
  store float %76, float* %dist, align 8, !dbg !6403
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6404
  %obi127 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %77, i32 0, i32 3, !dbg !6405
  %78 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi127, align 8, !dbg !6405
  call void @RE_instance_rotate_ray_dir(%struct.ObjectInstanceRen* %78, %struct.Isect* %isec), !dbg !6406
  %79 = load float, float* %fac, align 4, !dbg !6407
  store float %79, float* %prev, align 4, !dbg !6408
  %80 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !6409
  %call128 = call i32 @RE_rayobject_raycast(%struct.RayObject* %80, %struct.Isect* %isec), !dbg !6411
  %tobool129 = icmp ne i32 %call128, 0, !dbg !6411
  br i1 %tobool129, label %if.then130, label %if.else143, !dbg !6412

if.then130:                                       ; preds = %while.body
  %81 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 50), align 8, !dbg !6413
  %conv131 = sext i16 %81 to i32, !dbg !6416
  %and132 = and i32 %conv131, 1, !dbg !6417
  %tobool133 = icmp ne i32 %and132, 0, !dbg !6417
  br i1 %tobool133, label %if.then134, label %if.else140, !dbg !6418

if.then134:                                       ; preds = %if.then130
  %dist135 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 2, !dbg !6419
  %82 = load float, float* %dist135, align 8, !dbg !6419
  %fneg136 = fneg float %82, !dbg !6420
  %83 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 47), align 4, !dbg !6421
  %mul137 = fmul float %fneg136, %83, !dbg !6422
  %call138 = call float @expf(float %mul137) #5, !dbg !6423
  %84 = load float, float* %fac, align 4, !dbg !6424
  %add139 = fadd float %84, %call138, !dbg !6424
  store float %add139, float* %fac, align 4, !dbg !6424
  br label %if.end142, !dbg !6425

if.else140:                                       ; preds = %if.then130
  %85 = load float, float* %fac, align 4, !dbg !6426
  %add141 = fadd float %85, 1.000000e+00, !dbg !6426
  store float %add141, float* %fac, align 4, !dbg !6426
  br label %if.end142

if.end142:                                        ; preds = %if.else140, %if.then134
  br label %if.end203, !dbg !6427

if.else143:                                       ; preds = %while.body
  %86 = load i32, i32* %envcolor, align 4, !dbg !6428
  %cmp144 = icmp ne i32 %86, 0, !dbg !6430
  br i1 %cmp144, label %if.then146, label %if.end202, !dbg !6431

if.then146:                                       ; preds = %if.else143
  call void @llvm.dbg.declare(metadata [4 x float]* %skycol, metadata !6432, metadata !DIExpression()), !dbg !6434
  call void @llvm.dbg.declare(metadata [3 x float]* %view, metadata !6435, metadata !DIExpression()), !dbg !6436
  %arrayidx147 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !6437
  %87 = load float, float* %arrayidx147, align 4, !dbg !6437
  %fneg148 = fneg float %87, !dbg !6438
  %arrayidx149 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !6439
  store float %fneg148, float* %arrayidx149, align 4, !dbg !6440
  %arrayidx150 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 1, !dbg !6441
  %88 = load float, float* %arrayidx150, align 4, !dbg !6441
  %fneg151 = fneg float %88, !dbg !6442
  %arrayidx152 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 1, !dbg !6443
  store float %fneg151, float* %arrayidx152, align 4, !dbg !6444
  %arrayidx153 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 2, !dbg !6445
  %89 = load float, float* %arrayidx153, align 4, !dbg !6445
  %fneg154 = fneg float %89, !dbg !6446
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 2, !dbg !6447
  store float %fneg154, float* %arrayidx155, align 4, !dbg !6448
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !6449
  %call157 = call float @normalize_v3(float* %arraydecay156), !dbg !6450
  %90 = load i32, i32* %envcolor, align 4, !dbg !6451
  %cmp158 = icmp eq i32 %90, 1, !dbg !6453
  br i1 %cmp158, label %if.then160, label %if.else182, !dbg !6454

if.then160:                                       ; preds = %if.then146
  call void @llvm.dbg.declare(metadata float* %skyfac, metadata !6455, metadata !DIExpression()), !dbg !6457
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !6458
  %call162 = call float @dot_v3v3(float* %arraydecay161, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 30, i64 0)), !dbg !6459
  %add163 = fadd float 1.000000e+00, %call162, !dbg !6460
  %mul164 = fmul float 5.000000e-01, %add163, !dbg !6461
  store float %mul164, float* %skyfac, align 4, !dbg !6457
  %91 = load float, float* %skyfac, align 4, !dbg !6462
  %sub = fsub float 1.000000e+00, %91, !dbg !6463
  %92 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 6), align 8, !dbg !6464
  %mul165 = fmul float %sub, %92, !dbg !6465
  %93 = load float, float* %skyfac, align 4, !dbg !6466
  %94 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 9), align 4, !dbg !6467
  %mul166 = fmul float %93, %94, !dbg !6468
  %add167 = fadd float %mul165, %mul166, !dbg !6469
  %95 = load float*, float** %env.addr, align 8, !dbg !6470
  %arrayidx168 = getelementptr inbounds float, float* %95, i64 0, !dbg !6470
  %96 = load float, float* %arrayidx168, align 4, !dbg !6471
  %add169 = fadd float %96, %add167, !dbg !6471
  store float %add169, float* %arrayidx168, align 4, !dbg !6471
  %97 = load float, float* %skyfac, align 4, !dbg !6472
  %sub170 = fsub float 1.000000e+00, %97, !dbg !6473
  %98 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 7), align 4, !dbg !6474
  %mul171 = fmul float %sub170, %98, !dbg !6475
  %99 = load float, float* %skyfac, align 4, !dbg !6476
  %100 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 10), align 8, !dbg !6477
  %mul172 = fmul float %99, %100, !dbg !6478
  %add173 = fadd float %mul171, %mul172, !dbg !6479
  %101 = load float*, float** %env.addr, align 8, !dbg !6480
  %arrayidx174 = getelementptr inbounds float, float* %101, i64 1, !dbg !6480
  %102 = load float, float* %arrayidx174, align 4, !dbg !6481
  %add175 = fadd float %102, %add173, !dbg !6481
  store float %add175, float* %arrayidx174, align 4, !dbg !6481
  %103 = load float, float* %skyfac, align 4, !dbg !6482
  %sub176 = fsub float 1.000000e+00, %103, !dbg !6483
  %104 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 8), align 8, !dbg !6484
  %mul177 = fmul float %sub176, %104, !dbg !6485
  %105 = load float, float* %skyfac, align 4, !dbg !6486
  %106 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 11), align 4, !dbg !6487
  %mul178 = fmul float %105, %106, !dbg !6488
  %add179 = fadd float %mul177, %mul178, !dbg !6489
  %107 = load float*, float** %env.addr, align 8, !dbg !6490
  %arrayidx180 = getelementptr inbounds float, float* %107, i64 2, !dbg !6490
  %108 = load float, float* %arrayidx180, align 4, !dbg !6491
  %add181 = fadd float %108, %add179, !dbg !6491
  store float %add181, float* %arrayidx180, align 4, !dbg !6491
  br label %if.end201, !dbg !6492

if.else182:                                       ; preds = %if.then146
  %arraydecay183 = getelementptr inbounds [4 x float], [4 x float]* %skycol, i64 0, i64 0, !dbg !6493
  %start184 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !6495
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %start184, i64 0, i64 0, !dbg !6496
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !6497
  %arraydecay187 = getelementptr inbounds [3 x float], [3 x float]* %dxyview, i64 0, i64 0, !dbg !6498
  %109 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6499
  %thread188 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %109, i32 0, i32 114, !dbg !6500
  %110 = load i16, i16* %thread188, align 2, !dbg !6500
  call void @shadeSkyView(float* %arraydecay183, float* %arraydecay185, float* %arraydecay186, float* %arraydecay187, i16 signext %110), !dbg !6501
  %arraydecay189 = getelementptr inbounds [4 x float], [4 x float]* %skycol, i64 0, i64 0, !dbg !6502
  %111 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6503
  %view190 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %111, i32 0, i32 30, !dbg !6504
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %view190, i64 0, i64 0, !dbg !6503
  call void @shadeSunView(float* %arraydecay189, float* %arraydecay191), !dbg !6505
  %arrayidx192 = getelementptr inbounds [4 x float], [4 x float]* %skycol, i64 0, i64 0, !dbg !6506
  %112 = load float, float* %arrayidx192, align 16, !dbg !6506
  %113 = load float*, float** %env.addr, align 8, !dbg !6507
  %arrayidx193 = getelementptr inbounds float, float* %113, i64 0, !dbg !6507
  %114 = load float, float* %arrayidx193, align 4, !dbg !6508
  %add194 = fadd float %114, %112, !dbg !6508
  store float %add194, float* %arrayidx193, align 4, !dbg !6508
  %arrayidx195 = getelementptr inbounds [4 x float], [4 x float]* %skycol, i64 0, i64 1, !dbg !6509
  %115 = load float, float* %arrayidx195, align 4, !dbg !6509
  %116 = load float*, float** %env.addr, align 8, !dbg !6510
  %arrayidx196 = getelementptr inbounds float, float* %116, i64 1, !dbg !6510
  %117 = load float, float* %arrayidx196, align 4, !dbg !6511
  %add197 = fadd float %117, %115, !dbg !6511
  store float %add197, float* %arrayidx196, align 4, !dbg !6511
  %arrayidx198 = getelementptr inbounds [4 x float], [4 x float]* %skycol, i64 0, i64 2, !dbg !6512
  %118 = load float, float* %arrayidx198, align 8, !dbg !6512
  %119 = load float*, float** %env.addr, align 8, !dbg !6513
  %arrayidx199 = getelementptr inbounds float, float* %119, i64 2, !dbg !6513
  %120 = load float, float* %arrayidx199, align 4, !dbg !6514
  %add200 = fadd float %120, %118, !dbg !6514
  store float %add200, float* %arrayidx199, align 4, !dbg !6514
  br label %if.end201

if.end201:                                        ; preds = %if.else182, %if.then160
  %121 = load float, float* %skyadded, align 4, !dbg !6515
  %inc = fadd float %121, 1.000000e+00, !dbg !6515
  store float %inc, float* %skyadded, align 4, !dbg !6515
  br label %if.end202, !dbg !6516

if.end202:                                        ; preds = %if.end201, %if.else143
  br label %if.end203

if.end203:                                        ; preds = %if.end202, %if.end142
  %122 = load i32, i32* %samples, align 4, !dbg !6517
  %inc204 = add nsw i32 %122, 1, !dbg !6517
  store i32 %inc204, i32* %samples, align 4, !dbg !6517
  %123 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !6518
  %tobool205 = icmp ne %struct.QMCSampler* %123, null, !dbg !6518
  br i1 %tobool205, label %land.lhs.true, label %if.end221, !dbg !6520

land.lhs.true:                                    ; preds = %if.end203
  %124 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !6521
  %type = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %124, i32 0, i32 2, !dbg !6522
  %125 = load i32, i32* %type, align 8, !dbg !6522
  %cmp206 = icmp eq i32 %125, 1, !dbg !6523
  br i1 %cmp206, label %if.then208, label %if.end221, !dbg !6524

if.then208:                                       ; preds = %land.lhs.true
  %126 = load float, float* %adapt_thresh, align 4, !dbg !6525
  %cmp209 = fcmp ogt float %126, 0.000000e+00, !dbg !6528
  br i1 %cmp209, label %land.lhs.true211, label %if.end220, !dbg !6529

land.lhs.true211:                                 ; preds = %if.then208
  %127 = load i32, i32* %samples, align 4, !dbg !6530
  %128 = load i32, i32* %max_samples, align 4, !dbg !6531
  %div212 = sdiv i32 %128, 2, !dbg !6532
  %cmp213 = icmp sgt i32 %127, %div212, !dbg !6533
  br i1 %cmp213, label %if.then215, label %if.end220, !dbg !6534

if.then215:                                       ; preds = %land.lhs.true211
  %129 = load i32, i32* %samples, align 4, !dbg !6535
  %130 = load float, float* %prev, align 4, !dbg !6538
  %131 = load float, float* %fac, align 4, !dbg !6539
  %132 = load float, float* %adapt_thresh, align 4, !dbg !6540
  %call216 = call i32 @adaptive_sample_contrast_val(i32 %129, float %130, float %131, float %132), !dbg !6541
  %tobool217 = icmp ne i32 %call216, 0, !dbg !6541
  br i1 %tobool217, label %if.then218, label %if.end219, !dbg !6542

if.then218:                                       ; preds = %if.then215
  br label %while.end, !dbg !6543

if.end219:                                        ; preds = %if.then215
  br label %if.end220, !dbg !6545

if.end220:                                        ; preds = %if.end219, %land.lhs.true211, %if.then208
  br label %if.end221, !dbg !6546

if.end221:                                        ; preds = %if.end220, %land.lhs.true, %if.end203
  br label %while.cond, !dbg !6334, !llvm.loop !6547

while.end:                                        ; preds = %if.then218, %while.cond
  %133 = load float, float* %fac, align 4, !dbg !6549
  %134 = load i32, i32* %samples, align 4, !dbg !6550
  %conv222 = sitofp i32 %134 to float, !dbg !6551
  %div223 = fdiv float %133, %conv222, !dbg !6552
  %sub224 = fsub float 1.000000e+00, %div223, !dbg !6553
  %135 = load float*, float** %ao.addr, align 8, !dbg !6554
  %arrayidx225 = getelementptr inbounds float, float* %135, i64 2, !dbg !6554
  store float %sub224, float* %arrayidx225, align 4, !dbg !6555
  %136 = load float*, float** %ao.addr, align 8, !dbg !6556
  %arrayidx226 = getelementptr inbounds float, float* %136, i64 1, !dbg !6556
  store float %sub224, float* %arrayidx226, align 4, !dbg !6557
  %137 = load float*, float** %ao.addr, align 8, !dbg !6558
  %arrayidx227 = getelementptr inbounds float, float* %137, i64 0, !dbg !6558
  store float %sub224, float* %arrayidx227, align 4, !dbg !6559
  %138 = load i32, i32* %envcolor, align 4, !dbg !6560
  %cmp228 = icmp ne i32 %138, 0, !dbg !6562
  br i1 %cmp228, label %land.lhs.true230, label %if.else237, !dbg !6563

land.lhs.true230:                                 ; preds = %while.end
  %139 = load float, float* %skyadded, align 4, !dbg !6564
  %tobool231 = fcmp une float %139, 0.000000e+00, !dbg !6564
  br i1 %tobool231, label %if.then232, label %if.else237, !dbg !6565

if.then232:                                       ; preds = %land.lhs.true230
  %140 = load float*, float** %env.addr, align 8, !dbg !6566
  %141 = load float, float* %fac, align 4, !dbg !6567
  %142 = load i32, i32* %samples, align 4, !dbg !6568
  %conv233 = sitofp i32 %142 to float, !dbg !6569
  %div234 = fdiv float %141, %conv233, !dbg !6570
  %sub235 = fsub float 1.000000e+00, %div234, !dbg !6571
  %143 = load float, float* %skyadded, align 4, !dbg !6572
  %div236 = fdiv float %sub235, %143, !dbg !6573
  call void @mul_v3_fl(float* %140, float %div236), !dbg !6574
  br label %if.end238, !dbg !6574

if.else237:                                       ; preds = %land.lhs.true230, %while.end
  %144 = load float*, float** %env.addr, align 8, !dbg !6575
  %145 = load float*, float** %ao.addr, align 8, !dbg !6576
  call void @copy_v3_v3(float* %144, float* %145), !dbg !6577
  br label %if.end238

if.end238:                                        ; preds = %if.else237, %if.then232
  %146 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !6578
  %tobool239 = icmp ne %struct.QMCSampler* %146, null, !dbg !6578
  br i1 %tobool239, label %if.then240, label %if.end243, !dbg !6580

if.then240:                                       ; preds = %if.end238
  %147 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6581
  %thread241 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %147, i32 0, i32 114, !dbg !6582
  %148 = load i16, i16* %thread241, align 2, !dbg !6582
  %conv242 = sext i16 %148 to i32, !dbg !6581
  %149 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !6583
  call void @release_thread_qmcsampler(%struct.Render* @R, i32 %conv242, %struct.QMCSampler* %149), !dbg !6584
  br label %if.end243, !dbg !6584

if.end243:                                        ; preds = %if.then240, %if.end238
  ret void, !dbg !6585
}

; Function Attrs: noinline nounwind uwtable
define internal void @ray_ao_spheresamp(%struct.ShadeInput* %shi, float* %ao, float* %env) #0 !dbg !6586 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %ao.addr = alloca float*, align 8
  %env.addr = alloca float*, align 8
  %isec = alloca %struct.Isect, align 8
  %point_hint = alloca %struct.RayHint, align 8
  %vec = alloca float*, align 8
  %nrm = alloca float*, align 8
  %bias = alloca float, align 4
  %sh = alloca float, align 4
  %maxdist = alloca float, align 4
  %dxyview = alloca [3 x float], align 4
  %j = alloca i32, align 4
  %tot = alloca i32, align 4
  %actual = alloca i32, align 4
  %skyadded = alloca i32, align 4
  %envcolor = alloca i32, align 4
  %resol = alloca i32, align 4
  %skycol = alloca [4 x float], align 16
  %view = alloca [3 x float], align 4
  %fac = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !6587, metadata !DIExpression()), !dbg !6588
  store float* %ao, float** %ao.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ao.addr, metadata !6589, metadata !DIExpression()), !dbg !6590
  store float* %env, float** %env.addr, align 8
  call void @llvm.dbg.declare(metadata float** %env.addr, metadata !6591, metadata !DIExpression()), !dbg !6592
  call void @llvm.dbg.declare(metadata %struct.Isect* %isec, metadata !6593, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.declare(metadata %struct.RayHint* %point_hint, metadata !6595, metadata !DIExpression()), !dbg !6596
  call void @llvm.dbg.declare(metadata float** %vec, metadata !6597, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.declare(metadata float** %nrm, metadata !6599, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.declare(metadata float* %bias, metadata !6601, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.declare(metadata float* %sh, metadata !6603, metadata !DIExpression()), !dbg !6604
  store float 0.000000e+00, float* %sh, align 4, !dbg !6604
  call void @llvm.dbg.declare(metadata float* %maxdist, metadata !6605, metadata !DIExpression()), !dbg !6606
  %0 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 46), align 8, !dbg !6607
  store float %0, float* %maxdist, align 4, !dbg !6606
  call void @llvm.dbg.declare(metadata [3 x float]* %dxyview, metadata !6608, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6610, metadata !DIExpression()), !dbg !6611
  store i32 -1, i32* %j, align 4, !dbg !6611
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6612, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.declare(metadata i32* %actual, metadata !6614, metadata !DIExpression()), !dbg !6615
  store i32 0, i32* %actual, align 4, !dbg !6615
  call void @llvm.dbg.declare(metadata i32* %skyadded, metadata !6616, metadata !DIExpression()), !dbg !6617
  store i32 0, i32* %skyadded, align 4, !dbg !6617
  call void @llvm.dbg.declare(metadata i32* %envcolor, metadata !6618, metadata !DIExpression()), !dbg !6619
  call void @llvm.dbg.declare(metadata i32* %resol, metadata !6620, metadata !DIExpression()), !dbg !6621
  %1 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 51), align 2, !dbg !6622
  %conv = sext i16 %1 to i32, !dbg !6623
  store i32 %conv, i32* %resol, align 4, !dbg !6621
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6624
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %2, i32 0, i32 3, !dbg !6625
  %3 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6625
  %4 = bitcast %struct.ObjectInstanceRen* %3 to i8*, !dbg !6624
  %orig = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 16, !dbg !6626
  %ob = getelementptr inbounds %struct.anon, %struct.anon* %orig, i32 0, i32 0, !dbg !6627
  store i8* %4, i8** %ob, align 8, !dbg !6628
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6629
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 1, !dbg !6630
  %6 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6630
  %7 = bitcast %struct.VlakRen* %6 to i8*, !dbg !6629
  %orig1 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 16, !dbg !6631
  %face = getelementptr inbounds %struct.anon, %struct.anon* %orig1, i32 0, i32 1, !dbg !6632
  store i8* %7, i8** %face, align 8, !dbg !6633
  %check = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 10, !dbg !6634
  store i32 1, i32* %check, align 4, !dbg !6635
  %skip = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 9, !dbg !6636
  store i32 2, i32* %skip, align 8, !dbg !6637
  %hint = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 18, !dbg !6638
  store %struct.RayHint* null, %struct.RayHint** %hint, align 8, !dbg !6639
  %hit = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 15, !dbg !6640
  %ob2 = getelementptr inbounds %struct.anon, %struct.anon* %hit, i32 0, i32 0, !dbg !6641
  store i8* null, i8** %ob2, align 8, !dbg !6642
  %hit3 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 15, !dbg !6643
  %face4 = getelementptr inbounds %struct.anon, %struct.anon* %hit3, i32 0, i32 1, !dbg !6644
  store i8* null, i8** %face4, align 8, !dbg !6645
  %last_hit = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 17, !dbg !6646
  store %struct.RayObject* null, %struct.RayObject** %last_hit, align 8, !dbg !6647
  %8 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 50), align 8, !dbg !6648
  %conv5 = sext i16 %8 to i32, !dbg !6649
  %and = and i32 %conv5, 1, !dbg !6650
  %tobool = icmp ne i32 %and, 0, !dbg !6651
  %9 = zext i1 %tobool to i64, !dbg !6651
  %cond = select i1 %tobool, i32 2, i32 0, !dbg !6651
  %mode = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 7, !dbg !6652
  store i32 %cond, i32* %mode, align 8, !dbg !6653
  %lay = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 8, !dbg !6654
  store i32 -1, i32* %lay, align 4, !dbg !6655
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !6656
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !6657
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6658
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 29, !dbg !6659
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6658
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay6), !dbg !6660
  %11 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6661
  %obi7 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %11, i32 0, i32 3, !dbg !6662
  %12 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi7, align 8, !dbg !6662
  call void @RE_instance_rotate_ray_start(%struct.ObjectInstanceRen* %12, %struct.Isect* %isec), !dbg !6663
  %13 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !6664
  %start8 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !6665
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %start8, i64 0, i64 0, !dbg !6666
  %start10 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !6667
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %start10, i64 0, i64 0, !dbg !6668
  call void @RE_rayobject_hint_bb(%struct.RayObject* %13, %struct.RayHint* %point_hint, float* %arraydecay9, float* %arraydecay11), !dbg !6669
  %hint12 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 18, !dbg !6670
  store %struct.RayHint* %point_hint, %struct.RayHint** %hint12, align 8, !dbg !6671
  %14 = load float*, float** %ao.addr, align 8, !dbg !6672
  call void @zero_v3(float* %14), !dbg !6673
  %15 = load float*, float** %env.addr, align 8, !dbg !6674
  call void @zero_v3(float* %15), !dbg !6675
  %16 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6676
  %vlr13 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %16, i32 0, i32 1, !dbg !6678
  %17 = load %struct.VlakRen*, %struct.VlakRen** %vlr13, align 8, !dbg !6678
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %17, i32 0, i32 7, !dbg !6679
  %18 = load i8, i8* %flag, align 1, !dbg !6679
  %conv14 = zext i8 %18 to i32, !dbg !6676
  %and15 = and i32 %conv14, 1, !dbg !6680
  %tobool16 = icmp ne i32 %and15, 0, !dbg !6680
  br i1 %tobool16, label %if.then, label %if.else, !dbg !6681

if.then:                                          ; preds = %entry
  %19 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 49), align 4, !dbg !6682
  store float %19, float* %bias, align 4, !dbg !6684
  %20 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6685
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %20, i32 0, i32 16, !dbg !6686
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !6685
  store float* %arraydecay17, float** %nrm, align 8, !dbg !6687
  br label %if.end, !dbg !6688

if.else:                                          ; preds = %entry
  store float 0.000000e+00, float* %bias, align 4, !dbg !6689
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6691
  %facenor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %21, i32 0, i32 6, !dbg !6692
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %facenor, i64 0, i64 0, !dbg !6691
  store float* %arraydecay18, float** %nrm, align 8, !dbg !6693
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 53), align 2, !dbg !6694
  %conv19 = sext i16 %22 to i32, !dbg !6695
  store i32 %conv19, i32* %envcolor, align 4, !dbg !6696
  %23 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6697
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %23, i32 0, i32 0, !dbg !6699
  %24 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !6699
  %mode20 = getelementptr inbounds %struct.Material, %struct.Material* %24, i32 0, i32 51, !dbg !6700
  %25 = load i32, i32* %mode20, align 4, !dbg !6700
  %and21 = and i32 %25, 1024, !dbg !6701
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6701
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !6702

if.then23:                                        ; preds = %if.end
  store i32 0, i32* %envcolor, align 4, !dbg !6703
  br label %if.end24, !dbg !6704

if.end24:                                         ; preds = %if.then23, %if.end
  %26 = load i32, i32* %resol, align 4, !dbg !6705
  %cmp = icmp sgt i32 %26, 32, !dbg !6707
  br i1 %cmp, label %if.then26, label %if.end27, !dbg !6708

if.then26:                                        ; preds = %if.end24
  store i32 32, i32* %resol, align 4, !dbg !6709
  br label %if.end27, !dbg !6710

if.end27:                                         ; preds = %if.then26, %if.end24
  %27 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 50), align 8, !dbg !6711
  %conv28 = sext i16 %27 to i32, !dbg !6712
  %28 = load i32, i32* %resol, align 4, !dbg !6713
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6714
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 114, !dbg !6715
  %30 = load i16, i16* %thread, align 2, !dbg !6715
  %conv29 = sext i16 %30 to i32, !dbg !6714
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6716
  %xs = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 103, !dbg !6717
  %32 = load i32, i32* %xs, align 4, !dbg !6717
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6718
  %ys = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 104, !dbg !6719
  %34 = load i32, i32* %ys, align 8, !dbg !6719
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6720
  %strand = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 2, !dbg !6721
  %36 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !6721
  %cmp30 = icmp ne %struct.StrandRen* %36, null, !dbg !6722
  %conv31 = zext i1 %cmp30 to i32, !dbg !6722
  %call = call float* @sphere_sampler(i32 %conv28, i32 %28, i32 %conv29, i32 %32, i32 %34, i32 %conv31), !dbg !6723
  store float* %call, float** %vec, align 8, !dbg !6724
  %37 = load i32, i32* %resol, align 4, !dbg !6725
  %mul = mul nsw i32 2, %37, !dbg !6726
  %38 = load i32, i32* %resol, align 4, !dbg !6727
  %mul32 = mul nsw i32 %mul, %38, !dbg !6728
  store i32 %mul32, i32* %tot, align 4, !dbg !6729
  %39 = load i32, i32* %envcolor, align 4, !dbg !6730
  %cmp33 = icmp eq i32 %39, 2, !dbg !6732
  br i1 %cmp33, label %if.then35, label %if.end41, !dbg !6733

if.then35:                                        ; preds = %if.end27
  %40 = load i32, i32* %resol, align 4, !dbg !6734
  %conv36 = sitofp i32 %40 to float, !dbg !6736
  %div = fdiv float 1.000000e+00, %conv36, !dbg !6737
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %dxyview, i64 0, i64 0, !dbg !6738
  store float %div, float* %arrayidx, align 4, !dbg !6739
  %41 = load i32, i32* %resol, align 4, !dbg !6740
  %conv37 = sitofp i32 %41 to float, !dbg !6741
  %div38 = fdiv float 1.000000e+00, %conv37, !dbg !6742
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %dxyview, i64 0, i64 1, !dbg !6743
  store float %div38, float* %arrayidx39, align 4, !dbg !6744
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %dxyview, i64 0, i64 2, !dbg !6745
  store float 0.000000e+00, float* %arrayidx40, align 4, !dbg !6746
  br label %if.end41, !dbg !6747

if.end41:                                         ; preds = %if.then35, %if.end27
  br label %while.cond, !dbg !6748

while.cond:                                       ; preds = %if.end148, %if.then57, %if.end41
  %42 = load i32, i32* %tot, align 4, !dbg !6749
  %dec = add nsw i32 %42, -1, !dbg !6749
  store i32 %dec, i32* %tot, align 4, !dbg !6749
  %tobool42 = icmp ne i32 %42, 0, !dbg !6748
  br i1 %tobool42, label %while.body, label %while.end, !dbg !6748

while.body:                                       ; preds = %while.cond
  %43 = load float*, float** %vec, align 8, !dbg !6750
  %44 = load float*, float** %nrm, align 8, !dbg !6753
  %call43 = call float @dot_v3v3(float* %43, float* %44), !dbg !6754
  %45 = load float, float* %bias, align 4, !dbg !6755
  %cmp44 = fcmp ogt float %call43, %45, !dbg !6756
  br i1 %cmp44, label %if.then46, label %if.end148, !dbg !6757

if.then46:                                        ; preds = %while.body
  %46 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !6758
  %and47 = and i32 %46, 1, !dbg !6761
  %tobool48 = icmp ne i32 %and47, 0, !dbg !6761
  br i1 %tobool48, label %if.then49, label %if.end59, !dbg !6762

if.then49:                                        ; preds = %if.then46
  %47 = load i32, i32* %j, align 4, !dbg !6763
  %inc = add nsw i32 %47, 1, !dbg !6763
  store i32 %inc, i32* %j, align 4, !dbg !6763
  %48 = load i32, i32* %j, align 4, !dbg !6765
  %49 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6767
  %conv50 = sext i16 %49 to i32, !dbg !6768
  %cmp51 = icmp eq i32 %48, %conv50, !dbg !6769
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !6770

if.then53:                                        ; preds = %if.then49
  store i32 0, i32* %j, align 4, !dbg !6771
  br label %if.end54, !dbg !6772

if.end54:                                         ; preds = %if.then53, %if.then49
  %50 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6773
  %mask = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %50, i32 0, i32 105, !dbg !6775
  %51 = load i32, i32* %mask, align 4, !dbg !6775
  %52 = load i32, i32* %j, align 4, !dbg !6776
  %shl = shl i32 1, %52, !dbg !6777
  %and55 = and i32 %51, %shl, !dbg !6778
  %tobool56 = icmp ne i32 %and55, 0, !dbg !6778
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !6779

if.then57:                                        ; preds = %if.end54
  %53 = load float*, float** %vec, align 8, !dbg !6780
  %add.ptr = getelementptr inbounds float, float* %53, i64 3, !dbg !6780
  store float* %add.ptr, float** %vec, align 8, !dbg !6780
  br label %while.cond, !dbg !6782, !llvm.loop !6783

if.end58:                                         ; preds = %if.end54
  br label %if.end59, !dbg !6785

if.end59:                                         ; preds = %if.end58, %if.then46
  %54 = load i32, i32* %actual, align 4, !dbg !6786
  %inc60 = add nsw i32 %54, 1, !dbg !6786
  store i32 %inc60, i32* %actual, align 4, !dbg !6786
  %55 = load float*, float** %vec, align 8, !dbg !6787
  %arrayidx61 = getelementptr inbounds float, float* %55, i64 0, !dbg !6787
  %56 = load float, float* %arrayidx61, align 4, !dbg !6787
  %fneg = fneg float %56, !dbg !6788
  %dir = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 1, !dbg !6789
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !6790
  store float %fneg, float* %arrayidx62, align 4, !dbg !6791
  %57 = load float*, float** %vec, align 8, !dbg !6792
  %arrayidx63 = getelementptr inbounds float, float* %57, i64 1, !dbg !6792
  %58 = load float, float* %arrayidx63, align 4, !dbg !6792
  %fneg64 = fneg float %58, !dbg !6793
  %dir65 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 1, !dbg !6794
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %dir65, i64 0, i64 1, !dbg !6795
  store float %fneg64, float* %arrayidx66, align 4, !dbg !6796
  %59 = load float*, float** %vec, align 8, !dbg !6797
  %arrayidx67 = getelementptr inbounds float, float* %59, i64 2, !dbg !6797
  %60 = load float, float* %arrayidx67, align 4, !dbg !6797
  %fneg68 = fneg float %60, !dbg !6798
  %dir69 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 1, !dbg !6799
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %dir69, i64 0, i64 2, !dbg !6800
  store float %fneg68, float* %arrayidx70, align 4, !dbg !6801
  %61 = load float, float* %maxdist, align 4, !dbg !6802
  %dist = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 2, !dbg !6803
  store float %61, float* %dist, align 8, !dbg !6804
  %62 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6805
  %obi71 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %62, i32 0, i32 3, !dbg !6806
  %63 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi71, align 8, !dbg !6806
  call void @RE_instance_rotate_ray_dir(%struct.ObjectInstanceRen* %63, %struct.Isect* %isec), !dbg !6807
  %64 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !6808
  %call72 = call i32 @RE_rayobject_raycast(%struct.RayObject* %64, %struct.Isect* %isec), !dbg !6810
  %tobool73 = icmp ne i32 %call72, 0, !dbg !6810
  br i1 %tobool73, label %if.then74, label %if.else86, !dbg !6811

if.then74:                                        ; preds = %if.end59
  %65 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 50), align 8, !dbg !6812
  %conv75 = sext i16 %65 to i32, !dbg !6815
  %and76 = and i32 %conv75, 1, !dbg !6816
  %tobool77 = icmp ne i32 %and76, 0, !dbg !6816
  br i1 %tobool77, label %if.then78, label %if.else83, !dbg !6817

if.then78:                                        ; preds = %if.then74
  %dist79 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 2, !dbg !6818
  %66 = load float, float* %dist79, align 8, !dbg !6818
  %fneg80 = fneg float %66, !dbg !6819
  %67 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 47), align 4, !dbg !6820
  %mul81 = fmul float %fneg80, %67, !dbg !6821
  %call82 = call float @expf(float %mul81) #5, !dbg !6822
  %68 = load float, float* %sh, align 4, !dbg !6823
  %add = fadd float %68, %call82, !dbg !6823
  store float %add, float* %sh, align 4, !dbg !6823
  br label %if.end85, !dbg !6824

if.else83:                                        ; preds = %if.then74
  %69 = load float, float* %sh, align 4, !dbg !6825
  %add84 = fadd float %69, 1.000000e+00, !dbg !6825
  store float %add84, float* %sh, align 4, !dbg !6825
  br label %if.end85

if.end85:                                         ; preds = %if.else83, %if.then78
  br label %if.end147, !dbg !6826

if.else86:                                        ; preds = %if.end59
  %70 = load i32, i32* %envcolor, align 4, !dbg !6827
  %cmp87 = icmp ne i32 %70, 0, !dbg !6829
  br i1 %cmp87, label %if.then89, label %if.end146, !dbg !6830

if.then89:                                        ; preds = %if.else86
  call void @llvm.dbg.declare(metadata [4 x float]* %skycol, metadata !6831, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.declare(metadata [3 x float]* %view, metadata !6834, metadata !DIExpression()), !dbg !6835
  %71 = load float*, float** %vec, align 8, !dbg !6836
  %arrayidx90 = getelementptr inbounds float, float* %71, i64 0, !dbg !6836
  %72 = load float, float* %arrayidx90, align 4, !dbg !6836
  %fneg91 = fneg float %72, !dbg !6837
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !6838
  store float %fneg91, float* %arrayidx92, align 4, !dbg !6839
  %73 = load float*, float** %vec, align 8, !dbg !6840
  %arrayidx93 = getelementptr inbounds float, float* %73, i64 1, !dbg !6840
  %74 = load float, float* %arrayidx93, align 4, !dbg !6840
  %fneg94 = fneg float %74, !dbg !6841
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 1, !dbg !6842
  store float %fneg94, float* %arrayidx95, align 4, !dbg !6843
  %75 = load float*, float** %vec, align 8, !dbg !6844
  %arrayidx96 = getelementptr inbounds float, float* %75, i64 2, !dbg !6844
  %76 = load float, float* %arrayidx96, align 4, !dbg !6844
  %fneg97 = fneg float %76, !dbg !6845
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 2, !dbg !6846
  store float %fneg97, float* %arrayidx98, align 4, !dbg !6847
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !6848
  %call100 = call float @normalize_v3(float* %arraydecay99), !dbg !6849
  %77 = load i32, i32* %envcolor, align 4, !dbg !6850
  %cmp101 = icmp eq i32 %77, 1, !dbg !6852
  br i1 %cmp101, label %if.then103, label %if.else125, !dbg !6853

if.then103:                                       ; preds = %if.then89
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6854, metadata !DIExpression()), !dbg !6856
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !6857
  %call105 = call float @dot_v3v3(float* %arraydecay104, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 30, i64 0)), !dbg !6858
  %add106 = fadd float 1.000000e+00, %call105, !dbg !6859
  %mul107 = fmul float 5.000000e-01, %add106, !dbg !6860
  store float %mul107, float* %fac, align 4, !dbg !6856
  %78 = load float, float* %fac, align 4, !dbg !6861
  %sub = fsub float 1.000000e+00, %78, !dbg !6862
  %79 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 6), align 8, !dbg !6863
  %mul108 = fmul float %sub, %79, !dbg !6864
  %80 = load float, float* %fac, align 4, !dbg !6865
  %81 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 9), align 4, !dbg !6866
  %mul109 = fmul float %80, %81, !dbg !6867
  %add110 = fadd float %mul108, %mul109, !dbg !6868
  %82 = load float*, float** %env.addr, align 8, !dbg !6869
  %arrayidx111 = getelementptr inbounds float, float* %82, i64 0, !dbg !6869
  %83 = load float, float* %arrayidx111, align 4, !dbg !6870
  %add112 = fadd float %83, %add110, !dbg !6870
  store float %add112, float* %arrayidx111, align 4, !dbg !6870
  %84 = load float, float* %fac, align 4, !dbg !6871
  %sub113 = fsub float 1.000000e+00, %84, !dbg !6872
  %85 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 7), align 4, !dbg !6873
  %mul114 = fmul float %sub113, %85, !dbg !6874
  %86 = load float, float* %fac, align 4, !dbg !6875
  %87 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 10), align 8, !dbg !6876
  %mul115 = fmul float %86, %87, !dbg !6877
  %add116 = fadd float %mul114, %mul115, !dbg !6878
  %88 = load float*, float** %env.addr, align 8, !dbg !6879
  %arrayidx117 = getelementptr inbounds float, float* %88, i64 1, !dbg !6879
  %89 = load float, float* %arrayidx117, align 4, !dbg !6880
  %add118 = fadd float %89, %add116, !dbg !6880
  store float %add118, float* %arrayidx117, align 4, !dbg !6880
  %90 = load float, float* %fac, align 4, !dbg !6881
  %sub119 = fsub float 1.000000e+00, %90, !dbg !6882
  %91 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 8), align 8, !dbg !6883
  %mul120 = fmul float %sub119, %91, !dbg !6884
  %92 = load float, float* %fac, align 4, !dbg !6885
  %93 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 11), align 4, !dbg !6886
  %mul121 = fmul float %92, %93, !dbg !6887
  %add122 = fadd float %mul120, %mul121, !dbg !6888
  %94 = load float*, float** %env.addr, align 8, !dbg !6889
  %arrayidx123 = getelementptr inbounds float, float* %94, i64 2, !dbg !6889
  %95 = load float, float* %arrayidx123, align 4, !dbg !6890
  %add124 = fadd float %95, %add122, !dbg !6890
  store float %add124, float* %arrayidx123, align 4, !dbg !6890
  br label %if.end144, !dbg !6891

if.else125:                                       ; preds = %if.then89
  %arraydecay126 = getelementptr inbounds [4 x float], [4 x float]* %skycol, i64 0, i64 0, !dbg !6892
  %start127 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !6894
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %start127, i64 0, i64 0, !dbg !6895
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !6896
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %dxyview, i64 0, i64 0, !dbg !6897
  %96 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6898
  %thread131 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %96, i32 0, i32 114, !dbg !6899
  %97 = load i16, i16* %thread131, align 2, !dbg !6899
  call void @shadeSkyView(float* %arraydecay126, float* %arraydecay128, float* %arraydecay129, float* %arraydecay130, i16 signext %97), !dbg !6900
  %arraydecay132 = getelementptr inbounds [4 x float], [4 x float]* %skycol, i64 0, i64 0, !dbg !6901
  %98 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6902
  %view133 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %98, i32 0, i32 30, !dbg !6903
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %view133, i64 0, i64 0, !dbg !6902
  call void @shadeSunView(float* %arraydecay132, float* %arraydecay134), !dbg !6904
  %arrayidx135 = getelementptr inbounds [4 x float], [4 x float]* %skycol, i64 0, i64 0, !dbg !6905
  %99 = load float, float* %arrayidx135, align 16, !dbg !6905
  %100 = load float*, float** %env.addr, align 8, !dbg !6906
  %arrayidx136 = getelementptr inbounds float, float* %100, i64 0, !dbg !6906
  %101 = load float, float* %arrayidx136, align 4, !dbg !6907
  %add137 = fadd float %101, %99, !dbg !6907
  store float %add137, float* %arrayidx136, align 4, !dbg !6907
  %arrayidx138 = getelementptr inbounds [4 x float], [4 x float]* %skycol, i64 0, i64 1, !dbg !6908
  %102 = load float, float* %arrayidx138, align 4, !dbg !6908
  %103 = load float*, float** %env.addr, align 8, !dbg !6909
  %arrayidx139 = getelementptr inbounds float, float* %103, i64 1, !dbg !6909
  %104 = load float, float* %arrayidx139, align 4, !dbg !6910
  %add140 = fadd float %104, %102, !dbg !6910
  store float %add140, float* %arrayidx139, align 4, !dbg !6910
  %arrayidx141 = getelementptr inbounds [4 x float], [4 x float]* %skycol, i64 0, i64 2, !dbg !6911
  %105 = load float, float* %arrayidx141, align 8, !dbg !6911
  %106 = load float*, float** %env.addr, align 8, !dbg !6912
  %arrayidx142 = getelementptr inbounds float, float* %106, i64 2, !dbg !6912
  %107 = load float, float* %arrayidx142, align 4, !dbg !6913
  %add143 = fadd float %107, %105, !dbg !6913
  store float %add143, float* %arrayidx142, align 4, !dbg !6913
  br label %if.end144

if.end144:                                        ; preds = %if.else125, %if.then103
  %108 = load i32, i32* %skyadded, align 4, !dbg !6914
  %inc145 = add nsw i32 %108, 1, !dbg !6914
  store i32 %inc145, i32* %skyadded, align 4, !dbg !6914
  br label %if.end146, !dbg !6915

if.end146:                                        ; preds = %if.end144, %if.else86
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.end85
  br label %if.end148, !dbg !6916

if.end148:                                        ; preds = %if.end147, %while.body
  %109 = load float*, float** %vec, align 8, !dbg !6917
  %add.ptr149 = getelementptr inbounds float, float* %109, i64 3, !dbg !6917
  store float* %add.ptr149, float** %vec, align 8, !dbg !6917
  br label %while.cond, !dbg !6748, !llvm.loop !6783

while.end:                                        ; preds = %while.cond
  %110 = load i32, i32* %actual, align 4, !dbg !6918
  %cmp150 = icmp eq i32 %110, 0, !dbg !6920
  br i1 %cmp150, label %if.then152, label %if.else153, !dbg !6921

if.then152:                                       ; preds = %while.end
  store float 1.000000e+00, float* %sh, align 4, !dbg !6922
  br label %if.end157, !dbg !6923

if.else153:                                       ; preds = %while.end
  %111 = load float, float* %sh, align 4, !dbg !6924
  %112 = load i32, i32* %actual, align 4, !dbg !6925
  %conv154 = sitofp i32 %112 to float, !dbg !6926
  %div155 = fdiv float %111, %conv154, !dbg !6927
  %sub156 = fsub float 1.000000e+00, %div155, !dbg !6928
  store float %sub156, float* %sh, align 4, !dbg !6929
  br label %if.end157

if.end157:                                        ; preds = %if.else153, %if.then152
  %113 = load float, float* %sh, align 4, !dbg !6930
  %114 = load float*, float** %ao.addr, align 8, !dbg !6931
  %arrayidx158 = getelementptr inbounds float, float* %114, i64 2, !dbg !6931
  store float %113, float* %arrayidx158, align 4, !dbg !6932
  %115 = load float*, float** %ao.addr, align 8, !dbg !6933
  %arrayidx159 = getelementptr inbounds float, float* %115, i64 1, !dbg !6933
  store float %113, float* %arrayidx159, align 4, !dbg !6934
  %116 = load float*, float** %ao.addr, align 8, !dbg !6935
  %arrayidx160 = getelementptr inbounds float, float* %116, i64 0, !dbg !6935
  store float %113, float* %arrayidx160, align 4, !dbg !6936
  %117 = load i32, i32* %envcolor, align 4, !dbg !6937
  %cmp161 = icmp ne i32 %117, 0, !dbg !6939
  br i1 %cmp161, label %land.lhs.true, label %if.else167, !dbg !6940

land.lhs.true:                                    ; preds = %if.end157
  %118 = load i32, i32* %skyadded, align 4, !dbg !6941
  %tobool163 = icmp ne i32 %118, 0, !dbg !6941
  br i1 %tobool163, label %if.then164, label %if.else167, !dbg !6942

if.then164:                                       ; preds = %land.lhs.true
  %119 = load float*, float** %env.addr, align 8, !dbg !6943
  %120 = load float, float* %sh, align 4, !dbg !6944
  %121 = load i32, i32* %skyadded, align 4, !dbg !6945
  %conv165 = sitofp i32 %121 to float, !dbg !6946
  %div166 = fdiv float %120, %conv165, !dbg !6947
  call void @mul_v3_fl(float* %119, float %div166), !dbg !6948
  br label %if.end168, !dbg !6948

if.else167:                                       ; preds = %land.lhs.true, %if.end157
  %122 = load float*, float** %env.addr, align 8, !dbg !6949
  %123 = load float*, float** %ao.addr, align 8, !dbg !6950
  call void @copy_v3_v3(float* %122, float* %123), !dbg !6951
  br label %if.end168

if.end168:                                        ; preds = %if.else167, %if.then164
  ret void, !dbg !6952
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ray_shadow(%struct.ShadeInput* %shi, %struct.LampRen* %lar, float* %shadfac) #0 !dbg !6953 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %shadfac.addr = alloca float*, align 8
  %isec = alloca %struct.Isect, align 8
  %lampco = alloca [3 x float], align 4
  %col = alloca [4 x float], align 16
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !6958, metadata !DIExpression()), !dbg !6959
  store float* %shadfac, float** %shadfac.addr, align 8
  call void @llvm.dbg.declare(metadata float** %shadfac.addr, metadata !6960, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.declare(metadata %struct.Isect* %isec, metadata !6962, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata [3 x float]* %lampco, metadata !6964, metadata !DIExpression()), !dbg !6965
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6966
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !6968
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !6968
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 51, !dbg !6969
  %2 = load i32, i32* %mode, align 4, !dbg !6969
  %and = and i32 %2, 524288, !dbg !6970
  %tobool = icmp ne i32 %and, 0, !dbg !6970
  br i1 %tobool, label %if.then, label %if.else, !dbg !6971

if.then:                                          ; preds = %entry
  %mode1 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 7, !dbg !6972
  store i32 2, i32* %mode1, align 8, !dbg !6973
  br label %if.end, !dbg !6974

if.else:                                          ; preds = %entry
  %mode2 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 7, !dbg !6975
  store i32 0, i32* %mode2, align 8, !dbg !6976
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %hint = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 18, !dbg !6977
  store %struct.RayHint* null, %struct.RayHint** %hint, align 8, !dbg !6978
  %3 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6979
  %mode3 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %3, i32 0, i32 7, !dbg !6981
  %4 = load i32, i32* %mode3, align 4, !dbg !6981
  %and4 = and i32 %4, 32772, !dbg !6982
  %tobool5 = icmp ne i32 %and4, 0, !dbg !6982
  br i1 %tobool5, label %if.then6, label %if.else8, !dbg !6983

if.then6:                                         ; preds = %if.end
  %5 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6984
  %lay = getelementptr inbounds %struct.LampRen, %struct.LampRen* %5, i32 0, i32 17, !dbg !6985
  %6 = load i32, i32* %lay, align 4, !dbg !6985
  %lay7 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 8, !dbg !6986
  store i32 %6, i32* %lay7, align 4, !dbg !6987
  br label %if.end10, !dbg !6988

if.else8:                                         ; preds = %if.end
  %lay9 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 8, !dbg !6989
  store i32 -1, i32* %lay9, align 4, !dbg !6990
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.then6
  %7 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6991
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %7, i32 0, i32 108, !dbg !6993
  %8 = load i32, i32* %depth, align 8, !dbg !6993
  %cmp = icmp eq i32 %8, 0, !dbg !6994
  br i1 %cmp, label %if.then11, label %if.else13, !dbg !6995

if.then11:                                        ; preds = %if.end10
  %9 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6996
  %last_hit = getelementptr inbounds %struct.LampRen, %struct.LampRen* %9, i32 0, i32 68, !dbg !6998
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6999
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 114, !dbg !7000
  %11 = load i16, i16* %thread, align 2, !dbg !7000
  %idxprom = sext i16 %11 to i64, !dbg !6996
  %arrayidx = getelementptr inbounds [1 x %struct.RayObject*], [1 x %struct.RayObject*]* %last_hit, i64 0, i64 %idxprom, !dbg !6996
  %12 = load %struct.RayObject*, %struct.RayObject** %arrayidx, align 8, !dbg !6996
  %last_hit12 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 17, !dbg !7001
  store %struct.RayObject* %12, %struct.RayObject** %last_hit12, align 8, !dbg !7002
  br label %if.end15, !dbg !7003

if.else13:                                        ; preds = %if.end10
  %last_hit14 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 17, !dbg !7004
  store %struct.RayObject* null, %struct.RayObject** %last_hit14, align 8, !dbg !7006
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  %13 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7007
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %13, i32 0, i32 6, !dbg !7009
  %14 = load i16, i16* %type, align 8, !dbg !7009
  %conv = sext i16 %14 to i32, !dbg !7007
  %cmp16 = icmp eq i32 %conv, 1, !dbg !7010
  br i1 %cmp16, label %if.then22, label %lor.lhs.false, !dbg !7011

lor.lhs.false:                                    ; preds = %if.end15
  %15 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7012
  %type18 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %15, i32 0, i32 6, !dbg !7013
  %16 = load i16, i16* %type18, align 8, !dbg !7013
  %conv19 = sext i16 %16 to i32, !dbg !7012
  %cmp20 = icmp eq i32 %conv19, 3, !dbg !7014
  br i1 %cmp20, label %if.then22, label %if.else40, !dbg !7015

if.then22:                                        ; preds = %lor.lhs.false, %if.end15
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7016
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 29, !dbg !7018
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7016
  %18 = load float, float* %arrayidx23, align 8, !dbg !7016
  %19 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 55), align 8, !dbg !7019
  %20 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7020
  %vec = getelementptr inbounds %struct.LampRen, %struct.LampRen* %20, i32 0, i32 20, !dbg !7021
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7020
  %21 = load float, float* %arrayidx24, align 8, !dbg !7020
  %mul = fmul float %19, %21, !dbg !7022
  %sub = fsub float %18, %mul, !dbg !7023
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %lampco, i64 0, i64 0, !dbg !7024
  store float %sub, float* %arrayidx25, align 4, !dbg !7025
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7026
  %co26 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %22, i32 0, i32 29, !dbg !7027
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %co26, i64 0, i64 1, !dbg !7026
  %23 = load float, float* %arrayidx27, align 4, !dbg !7026
  %24 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 55), align 8, !dbg !7028
  %25 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7029
  %vec28 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %25, i32 0, i32 20, !dbg !7030
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %vec28, i64 0, i64 1, !dbg !7029
  %26 = load float, float* %arrayidx29, align 4, !dbg !7029
  %mul30 = fmul float %24, %26, !dbg !7031
  %sub31 = fsub float %23, %mul30, !dbg !7032
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %lampco, i64 0, i64 1, !dbg !7033
  store float %sub31, float* %arrayidx32, align 4, !dbg !7034
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7035
  %co33 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 29, !dbg !7036
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %co33, i64 0, i64 2, !dbg !7035
  %28 = load float, float* %arrayidx34, align 8, !dbg !7035
  %29 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 55), align 8, !dbg !7037
  %30 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7038
  %vec35 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %30, i32 0, i32 20, !dbg !7039
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %vec35, i64 0, i64 2, !dbg !7038
  %31 = load float, float* %arrayidx36, align 8, !dbg !7038
  %mul37 = fmul float %29, %31, !dbg !7040
  %sub38 = fsub float %28, %mul37, !dbg !7041
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %lampco, i64 0, i64 2, !dbg !7042
  store float %sub38, float* %arrayidx39, align 4, !dbg !7043
  br label %if.end43, !dbg !7044

if.else40:                                        ; preds = %lor.lhs.false
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %lampco, i64 0, i64 0, !dbg !7045
  %32 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7047
  %co41 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %32, i32 0, i32 5, !dbg !7048
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 0, !dbg !7047
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay42), !dbg !7049
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.then22
  %33 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7050
  %ray_samp_method = getelementptr inbounds %struct.LampRen, %struct.LampRen* %33, i32 0, i32 46, !dbg !7050
  %34 = load i16, i16* %ray_samp_method, align 2, !dbg !7050
  %conv44 = sext i16 %34 to i32, !dbg !7050
  %cmp45 = icmp eq i32 %conv44, 1, !dbg !7050
  br i1 %cmp45, label %if.then52, label %lor.lhs.false47, !dbg !7050

lor.lhs.false47:                                  ; preds = %if.end43
  %35 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7050
  %ray_samp_method48 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %35, i32 0, i32 46, !dbg !7050
  %36 = load i16, i16* %ray_samp_method48, align 2, !dbg !7050
  %conv49 = sext i16 %36 to i32, !dbg !7050
  %cmp50 = icmp eq i32 %conv49, 2, !dbg !7050
  br i1 %cmp50, label %if.then52, label %if.else54, !dbg !7052

if.then52:                                        ; preds = %lor.lhs.false47, %if.end43
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7053
  %38 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7055
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %lampco, i64 0, i64 0, !dbg !7056
  %39 = load float*, float** %shadfac.addr, align 8, !dbg !7057
  call void @ray_shadow_qmc(%struct.ShadeInput* %37, %struct.LampRen* %38, float* %arraydecay53, float* %39, %struct.Isect* %isec), !dbg !7058
  br label %if.end87, !dbg !7059

if.else54:                                        ; preds = %lor.lhs.false47
  %40 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7060
  %ray_totsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %40, i32 0, i32 49, !dbg !7063
  %41 = load i16, i16* %ray_totsamp, align 8, !dbg !7063
  %conv55 = sext i16 %41 to i32, !dbg !7060
  %cmp56 = icmp slt i32 %conv55, 2, !dbg !7064
  br i1 %cmp56, label %if.then58, label %if.else84, !dbg !7065

if.then58:                                        ; preds = %if.else54
  %42 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7066
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %42, i32 0, i32 3, !dbg !7068
  %43 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7068
  %44 = bitcast %struct.ObjectInstanceRen* %43 to i8*, !dbg !7066
  %orig = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 16, !dbg !7069
  %ob = getelementptr inbounds %struct.anon, %struct.anon* %orig, i32 0, i32 0, !dbg !7070
  store i8* %44, i8** %ob, align 8, !dbg !7071
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7072
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 1, !dbg !7073
  %46 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7073
  %47 = bitcast %struct.VlakRen* %46 to i8*, !dbg !7072
  %orig59 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 16, !dbg !7074
  %face = getelementptr inbounds %struct.anon, %struct.anon* %orig59, i32 0, i32 1, !dbg !7075
  store i8* %47, i8** %face, align 8, !dbg !7076
  %48 = load float*, float** %shadfac.addr, align 8, !dbg !7077
  %arrayidx60 = getelementptr inbounds float, float* %48, i64 3, !dbg !7077
  store float 1.000000e+00, float* %arrayidx60, align 4, !dbg !7078
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !7079
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7080
  %49 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7081
  %co62 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %49, i32 0, i32 29, !dbg !7082
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %co62, i64 0, i64 0, !dbg !7081
  call void @copy_v3_v3(float* %arraydecay61, float* %arraydecay63), !dbg !7083
  %dir = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 1, !dbg !7084
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !7085
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %lampco, i64 0, i64 0, !dbg !7086
  %start66 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !7087
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %start66, i64 0, i64 0, !dbg !7088
  call void @sub_v3_v3v3(float* %arraydecay64, float* %arraydecay65, float* %arraydecay67), !dbg !7089
  %dir68 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 1, !dbg !7090
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %dir68, i64 0, i64 0, !dbg !7091
  %call = call float @normalize_v3(float* %arraydecay69), !dbg !7092
  %dist = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 2, !dbg !7093
  store float %call, float* %dist, align 8, !dbg !7094
  %50 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7095
  %obi70 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %50, i32 0, i32 3, !dbg !7096
  %51 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi70, align 8, !dbg !7096
  call void @RE_instance_rotate_ray(%struct.ObjectInstanceRen* %51, %struct.Isect* %isec), !dbg !7097
  %mode71 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 7, !dbg !7098
  %52 = load i32, i32* %mode71, align 8, !dbg !7098
  %cmp72 = icmp eq i32 %52, 2, !dbg !7100
  br i1 %cmp72, label %if.then74, label %if.else77, !dbg !7101

if.then74:                                        ; preds = %if.then58
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !7102, metadata !DIExpression()), !dbg !7104
  %53 = bitcast [4 x float]* %col to i8*, !dbg !7104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %53, i8* align 16 bitcast ([4 x float]* @__const.ray_shadow.col to i8*), i64 16, i1 false), !dbg !7104
  %54 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7105
  %arraydecay75 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7106
  call void @ray_trace_shadow_tra(%struct.Isect* %isec, %struct.ShadeInput* %54, i32 10, i32 0, float* %arraydecay75), !dbg !7107
  %55 = load float*, float** %shadfac.addr, align 8, !dbg !7108
  %arraydecay76 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7109
  call void @copy_v4_v4(float* %55, float* %arraydecay76), !dbg !7110
  br label %if.end83, !dbg !7111

if.else77:                                        ; preds = %if.then58
  %56 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !7112
  %call78 = call i32 @RE_rayobject_raycast(%struct.RayObject* %56, %struct.Isect* %isec), !dbg !7114
  %tobool79 = icmp ne i32 %call78, 0, !dbg !7114
  br i1 %tobool79, label %if.then80, label %if.end82, !dbg !7115

if.then80:                                        ; preds = %if.else77
  %57 = load float*, float** %shadfac.addr, align 8, !dbg !7116
  %arrayidx81 = getelementptr inbounds float, float* %57, i64 3, !dbg !7116
  store float 0.000000e+00, float* %arrayidx81, align 4, !dbg !7117
  br label %if.end82, !dbg !7116

if.end82:                                         ; preds = %if.then80, %if.else77
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then74
  br label %if.end86, !dbg !7118

if.else84:                                        ; preds = %if.else54
  %58 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7119
  %59 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7121
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %lampco, i64 0, i64 0, !dbg !7122
  %60 = load float*, float** %shadfac.addr, align 8, !dbg !7123
  call void @ray_shadow_jitter(%struct.ShadeInput* %58, %struct.LampRen* %59, float* %arraydecay85, float* %60, %struct.Isect* %isec), !dbg !7124
  br label %if.end86

if.end86:                                         ; preds = %if.else84, %if.end83
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then52
  %61 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7125
  %depth88 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %61, i32 0, i32 108, !dbg !7127
  %62 = load i32, i32* %depth88, align 8, !dbg !7127
  %cmp89 = icmp eq i32 %62, 0, !dbg !7128
  br i1 %cmp89, label %if.then91, label %if.end97, !dbg !7129

if.then91:                                        ; preds = %if.end87
  %last_hit92 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 17, !dbg !7130
  %63 = load %struct.RayObject*, %struct.RayObject** %last_hit92, align 8, !dbg !7130
  %64 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7132
  %last_hit93 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %64, i32 0, i32 68, !dbg !7133
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7134
  %thread94 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %65, i32 0, i32 114, !dbg !7135
  %66 = load i16, i16* %thread94, align 2, !dbg !7135
  %idxprom95 = sext i16 %66 to i64, !dbg !7132
  %arrayidx96 = getelementptr inbounds [1 x %struct.RayObject*], [1 x %struct.RayObject*]* %last_hit93, i64 0, i64 %idxprom95, !dbg !7132
  store %struct.RayObject* %63, %struct.RayObject** %arrayidx96, align 8, !dbg !7136
  br label %if.end97, !dbg !7137

if.end97:                                         ; preds = %if.then91, %if.end87
  ret void, !dbg !7138
}

; Function Attrs: noinline nounwind uwtable
define internal void @ray_shadow_qmc(%struct.ShadeInput* %shi, %struct.LampRen* %lar, float* %lampco, float* %shadfac, %struct.Isect* %isec) #0 !dbg !7139 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %lampco.addr = alloca float*, align 8
  %shadfac.addr = alloca float*, align 8
  %isec.addr = alloca %struct.Isect*, align 8
  %qsa = alloca %struct.QMCSampler*, align 8
  %samples = alloca i32, align 4
  %samp3d = alloca [3 x float], align 4
  %fac = alloca float, align 4
  %vec = alloca [3 x float], align 4
  %end = alloca [3 x float], align 4
  %colsq = alloca [4 x float], align 16
  %adapt_thresh = alloca float, align 4
  %min_adapt_samples = alloca i32, align 4
  %max_samples = alloca i32, align 4
  %start = alloca [3 x float], align 4
  %do_soft = alloca i8, align 1
  %full_osa = alloca i8, align 1
  %i = alloca i32, align 4
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  %bb_hint = alloca %struct.RayHint, align 8
  %jitco = alloca [16 x [3 x float]], align 16
  %totjitco = alloca i32, align 4
  %ru = alloca [3 x float], align 4
  %rv = alloca [3 x float], align 4
  %v = alloca [3 x float], align 4
  %s = alloca [3 x float], align 4
  %jitbias = alloca float, align 4
  %v177 = alloca [3 x float], align 4
  %col = alloca [4 x float], align 16
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !7142, metadata !DIExpression()), !dbg !7143
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !7144, metadata !DIExpression()), !dbg !7145
  store float* %lampco, float** %lampco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lampco.addr, metadata !7146, metadata !DIExpression()), !dbg !7147
  store float* %shadfac, float** %shadfac.addr, align 8
  call void @llvm.dbg.declare(metadata float** %shadfac.addr, metadata !7148, metadata !DIExpression()), !dbg !7149
  store %struct.Isect* %isec, %struct.Isect** %isec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %isec.addr, metadata !7150, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa, metadata !7152, metadata !DIExpression()), !dbg !7153
  store %struct.QMCSampler* null, %struct.QMCSampler** %qsa, align 8, !dbg !7153
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !7154, metadata !DIExpression()), !dbg !7155
  store i32 0, i32* %samples, align 4, !dbg !7155
  call void @llvm.dbg.declare(metadata [3 x float]* %samp3d, metadata !7156, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.declare(metadata float* %fac, metadata !7158, metadata !DIExpression()), !dbg !7159
  store float 0.000000e+00, float* %fac, align 4, !dbg !7159
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !7160, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.declare(metadata [3 x float]* %end, metadata !7162, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.declare(metadata [4 x float]* %colsq, metadata !7164, metadata !DIExpression()), !dbg !7165
  call void @llvm.dbg.declare(metadata float* %adapt_thresh, metadata !7166, metadata !DIExpression()), !dbg !7167
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7168
  %adapt_thresh1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 55, !dbg !7169
  %1 = load float, float* %adapt_thresh1, align 4, !dbg !7169
  store float %1, float* %adapt_thresh, align 4, !dbg !7167
  call void @llvm.dbg.declare(metadata i32* %min_adapt_samples, metadata !7170, metadata !DIExpression()), !dbg !7171
  store i32 4, i32* %min_adapt_samples, align 4, !dbg !7171
  call void @llvm.dbg.declare(metadata i32* %max_samples, metadata !7172, metadata !DIExpression()), !dbg !7173
  %2 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7174
  %ray_totsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %2, i32 0, i32 49, !dbg !7175
  %3 = load i16, i16* %ray_totsamp, align 8, !dbg !7175
  %conv = sext i16 %3 to i32, !dbg !7174
  store i32 %conv, i32* %max_samples, align 4, !dbg !7173
  call void @llvm.dbg.declare(metadata [3 x float]* %start, metadata !7176, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.declare(metadata i8* %do_soft, metadata !7178, metadata !DIExpression()), !dbg !7179
  store i8 1, i8* %do_soft, align 1, !dbg !7179
  call void @llvm.dbg.declare(metadata i8* %full_osa, metadata !7180, metadata !DIExpression()), !dbg !7181
  store i8 0, i8* %full_osa, align 1, !dbg !7181
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7182, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !7184, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !7186, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.declare(metadata %struct.RayHint* %bb_hint, metadata !7188, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.declare(metadata [16 x [3 x float]]* %jitco, metadata !7190, metadata !DIExpression()), !dbg !7193
  call void @llvm.dbg.declare(metadata i32* %totjitco, metadata !7194, metadata !DIExpression()), !dbg !7195
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 2, !dbg !7196
  store float 0.000000e+00, float* %arrayidx, align 8, !dbg !7197
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 1, !dbg !7198
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !7199
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 0, !dbg !7200
  store float 0.000000e+00, float* %arrayidx3, align 16, !dbg !7201
  %4 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7202
  %mode = getelementptr inbounds %struct.Isect, %struct.Isect* %4, i32 0, i32 7, !dbg !7204
  %5 = load i32, i32* %mode, align 8, !dbg !7204
  %cmp = icmp eq i32 %5, 2, !dbg !7205
  br i1 %cmp, label %if.then, label %if.else, !dbg !7206

if.then:                                          ; preds = %entry
  %6 = load float*, float** %shadfac.addr, align 8, !dbg !7207
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 3, !dbg !7207
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !7209
  %7 = load float*, float** %shadfac.addr, align 8, !dbg !7210
  %arrayidx6 = getelementptr inbounds float, float* %7, i64 2, !dbg !7210
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !7211
  %8 = load float*, float** %shadfac.addr, align 8, !dbg !7212
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 1, !dbg !7212
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !7213
  %9 = load float*, float** %shadfac.addr, align 8, !dbg !7214
  %arrayidx8 = getelementptr inbounds float, float* %9, i64 0, !dbg !7214
  store float 0.000000e+00, float* %arrayidx8, align 4, !dbg !7215
  br label %if.end, !dbg !7216

if.else:                                          ; preds = %entry
  %10 = load float*, float** %shadfac.addr, align 8, !dbg !7217
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 3, !dbg !7217
  store float 1.000000e+00, float* %arrayidx9, align 4, !dbg !7218
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7219
  %ray_totsamp10 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %11, i32 0, i32 49, !dbg !7221
  %12 = load i16, i16* %ray_totsamp10, align 8, !dbg !7221
  %conv11 = sext i16 %12 to i32, !dbg !7219
  %cmp12 = icmp slt i32 %conv11, 2, !dbg !7222
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !7223

if.then14:                                        ; preds = %if.end
  store i8 0, i8* %do_soft, align 1, !dbg !7224
  br label %if.end15, !dbg !7225

if.end15:                                         ; preds = %if.then14, %if.end
  %13 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !7226
  %and = and i32 %13, 1, !dbg !7228
  %tobool = icmp ne i32 %and, 0, !dbg !7228
  br i1 %tobool, label %land.lhs.true, label %if.end24, !dbg !7229

land.lhs.true:                                    ; preds = %if.end15
  %14 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !7230
  %conv16 = sext i16 %14 to i32, !dbg !7231
  %cmp17 = icmp sgt i32 %conv16, 0, !dbg !7232
  br i1 %cmp17, label %land.lhs.true19, label %if.end24, !dbg !7233

land.lhs.true19:                                  ; preds = %land.lhs.true
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7234
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 1, !dbg !7235
  %16 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7235
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %16, i32 0, i32 7, !dbg !7236
  %17 = load i8, i8* %flag, align 1, !dbg !7236
  %conv20 = zext i8 %17 to i32, !dbg !7234
  %and21 = and i32 %conv20, 8, !dbg !7237
  %tobool22 = icmp ne i32 %and21, 0, !dbg !7237
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !7238

if.then23:                                        ; preds = %land.lhs.true19
  store i8 1, i8* %full_osa, align 1, !dbg !7239
  br label %if.end24, !dbg !7240

if.end24:                                         ; preds = %if.then23, %land.lhs.true19, %land.lhs.true, %if.end15
  %18 = load i8, i8* %full_osa, align 1, !dbg !7241
  %tobool25 = icmp ne i8 %18, 0, !dbg !7241
  br i1 %tobool25, label %if.then26, label %if.else32, !dbg !7243

if.then26:                                        ; preds = %if.end24
  %19 = load i8, i8* %do_soft, align 1, !dbg !7244
  %tobool27 = icmp ne i8 %19, 0, !dbg !7244
  br i1 %tobool27, label %if.then28, label %if.else30, !dbg !7247

if.then28:                                        ; preds = %if.then26
  %20 = load i32, i32* %max_samples, align 4, !dbg !7248
  %21 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !7249
  %conv29 = sext i16 %21 to i32, !dbg !7250
  %div = sdiv i32 %20, %conv29, !dbg !7251
  %add = add nsw i32 %div, 1, !dbg !7252
  store i32 %add, i32* %max_samples, align 4, !dbg !7253
  br label %if.end31, !dbg !7254

if.else30:                                        ; preds = %if.then26
  store i32 1, i32* %max_samples, align 4, !dbg !7255
  br label %if.end31

if.end31:                                         ; preds = %if.else30, %if.then28
  br label %if.end48, !dbg !7256

if.else32:                                        ; preds = %if.end24
  %22 = load i8, i8* %do_soft, align 1, !dbg !7257
  %tobool33 = icmp ne i8 %22, 0, !dbg !7257
  br i1 %tobool33, label %if.then34, label %if.else37, !dbg !7260

if.then34:                                        ; preds = %if.else32
  %23 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7261
  %ray_totsamp35 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %23, i32 0, i32 49, !dbg !7262
  %24 = load i16, i16* %ray_totsamp35, align 8, !dbg !7262
  %conv36 = sext i16 %24 to i32, !dbg !7261
  store i32 %conv36, i32* %max_samples, align 4, !dbg !7263
  br label %if.end47, !dbg !7264

if.else37:                                        ; preds = %if.else32
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7265
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 108, !dbg !7267
  %26 = load i32, i32* %depth, align 8, !dbg !7267
  %cmp38 = icmp eq i32 %26, 0, !dbg !7268
  br i1 %cmp38, label %if.then40, label %if.else45, !dbg !7269

if.then40:                                        ; preds = %if.else37
  %27 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !7270
  %conv41 = sext i16 %27 to i32, !dbg !7271
  %cmp42 = icmp sgt i32 %conv41, 4, !dbg !7272
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !7273

cond.true:                                        ; preds = %if.then40
  %28 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !7274
  %conv44 = sext i16 %28 to i32, !dbg !7275
  br label %cond.end, !dbg !7273

cond.false:                                       ; preds = %if.then40
  br label %cond.end, !dbg !7273

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv44, %cond.true ], [ 5, %cond.false ], !dbg !7273
  store i32 %cond, i32* %max_samples, align 4, !dbg !7276
  br label %if.end46, !dbg !7277

if.else45:                                        ; preds = %if.else37
  store i32 1, i32* %max_samples, align 4, !dbg !7278
  br label %if.end46

if.end46:                                         ; preds = %if.else45, %cond.end
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then34
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end31
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7279
  %30 = load i32, i32* %max_samples, align 4, !dbg !7280
  %arraydecay = getelementptr inbounds [16 x [3 x float]], [16 x [3 x float]]* %jitco, i64 0, i64 0, !dbg !7281
  call void @ray_shadow_jittered_coords(%struct.ShadeInput* %29, i32 %30, [3 x float]* %arraydecay, i32* %totjitco), !dbg !7282
  %31 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7283
  %ray_samp_method = getelementptr inbounds %struct.LampRen, %struct.LampRen* %31, i32 0, i32 46, !dbg !7285
  %32 = load i16, i16* %ray_samp_method, align 2, !dbg !7285
  %conv49 = sext i16 %32 to i32, !dbg !7283
  %cmp50 = icmp eq i32 %conv49, 1, !dbg !7286
  br i1 %cmp50, label %if.then52, label %if.else54, !dbg !7287

if.then52:                                        ; preds = %if.end48
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7288
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 114, !dbg !7289
  %34 = load i16, i16* %thread, align 2, !dbg !7289
  %conv53 = sext i16 %34 to i32, !dbg !7288
  %35 = load i32, i32* %max_samples, align 4, !dbg !7290
  %call = call %struct.QMCSampler* @get_thread_qmcsampler(%struct.Render* @R, i32 %conv53, i32 1, i32 %35), !dbg !7291
  store %struct.QMCSampler* %call, %struct.QMCSampler** %qsa, align 8, !dbg !7292
  br label %if.end64, !dbg !7293

if.else54:                                        ; preds = %if.end48
  %36 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7294
  %ray_samp_method55 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %36, i32 0, i32 46, !dbg !7296
  %37 = load i16, i16* %ray_samp_method55, align 2, !dbg !7296
  %conv56 = sext i16 %37 to i32, !dbg !7294
  %cmp57 = icmp eq i32 %conv56, 2, !dbg !7297
  br i1 %cmp57, label %if.then59, label %if.end63, !dbg !7298

if.then59:                                        ; preds = %if.else54
  %38 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7299
  %thread60 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %38, i32 0, i32 114, !dbg !7300
  %39 = load i16, i16* %thread60, align 2, !dbg !7300
  %conv61 = sext i16 %39 to i32, !dbg !7299
  %40 = load i32, i32* %max_samples, align 4, !dbg !7301
  %call62 = call %struct.QMCSampler* @get_thread_qmcsampler(%struct.Render* @R, i32 %conv61, i32 2, i32 %40), !dbg !7302
  store %struct.QMCSampler* %call62, %struct.QMCSampler** %qsa, align 8, !dbg !7303
  br label %if.end63, !dbg !7304

if.end63:                                         ; preds = %if.then59, %if.else54
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then52
  %41 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !7305
  %42 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7306
  %thread65 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %42, i32 0, i32 114, !dbg !7307
  %43 = load i16, i16* %thread65, align 2, !dbg !7307
  %conv66 = sext i16 %43 to i32, !dbg !7306
  call void @QMC_initPixel(%struct.QMCSampler* %41, i32 %conv66), !dbg !7308
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !7309
  store float 0x46293E5940000000, float* %arrayidx67, align 4, !dbg !7309
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !7309
  store float 0x46293E5940000000, float* %arrayidx68, align 4, !dbg !7309
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !7309
  store float 0x46293E5940000000, float* %arrayidx69, align 4, !dbg !7309
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !7309
  store float 0xC6293E5940000000, float* %arrayidx70, align 4, !dbg !7309
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !7309
  store float 0xC6293E5940000000, float* %arrayidx71, align 4, !dbg !7309
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !7309
  store float 0xC6293E5940000000, float* %arrayidx72, align 4, !dbg !7309
  store i32 0, i32* %i, align 4, !dbg !7311
  br label %for.cond, !dbg !7313

for.cond:                                         ; preds = %for.inc, %if.end64
  %44 = load i32, i32* %i, align 4, !dbg !7314
  %45 = load i32, i32* %totjitco, align 4, !dbg !7316
  %cmp73 = icmp slt i32 %44, %45, !dbg !7317
  br i1 %cmp73, label %for.body, label %for.end, !dbg !7318

for.body:                                         ; preds = %for.cond
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !7319
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !7321
  %46 = load i32, i32* %i, align 4, !dbg !7322
  %idxprom = sext i32 %46 to i64, !dbg !7323
  %arrayidx77 = getelementptr inbounds [16 x [3 x float]], [16 x [3 x float]]* %jitco, i64 0, i64 %idxprom, !dbg !7323
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx77, i64 0, i64 0, !dbg !7323
  call void @minmax_v3v3_v3(float* %arraydecay75, float* %arraydecay76, float* %arraydecay78), !dbg !7324
  br label %for.inc, !dbg !7325

for.inc:                                          ; preds = %for.body
  %47 = load i32, i32* %i, align 4, !dbg !7326
  %inc = add nsw i32 %47, 1, !dbg !7326
  store i32 %inc, i32* %i, align 4, !dbg !7326
  br label %for.cond, !dbg !7327, !llvm.loop !7328

for.end:                                          ; preds = %for.cond
  %48 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7330
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %48, i32 0, i32 3, !dbg !7332
  %49 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7332
  %flag79 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %49, i32 0, i32 11, !dbg !7333
  %50 = load i16, i16* %flag79, align 8, !dbg !7333
  %conv80 = sext i16 %50 to i32, !dbg !7330
  %and81 = and i32 %conv80, 2, !dbg !7334
  %tobool82 = icmp ne i32 %and81, 0, !dbg !7334
  br i1 %tobool82, label %if.then83, label %if.end91, !dbg !7335

if.then83:                                        ; preds = %for.end
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7336
  %obi84 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 0, i32 3, !dbg !7338
  %52 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi84, align 8, !dbg !7338
  %imat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %52, i32 0, i32 9, !dbg !7339
  %arraydecay85 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7336
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !7340
  call void @mul_m4_v3([4 x float]* %arraydecay85, float* %arraydecay86), !dbg !7341
  %53 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7342
  %obi87 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %53, i32 0, i32 3, !dbg !7343
  %54 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi87, align 8, !dbg !7343
  %imat88 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %54, i32 0, i32 9, !dbg !7344
  %arraydecay89 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat88, i64 0, i64 0, !dbg !7342
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !7345
  call void @mul_m4_v3([4 x float]* %arraydecay89, float* %arraydecay90), !dbg !7346
  br label %if.end91, !dbg !7347

if.end91:                                         ; preds = %if.then83, %for.end
  %55 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !7348
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !7349
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !7350
  call void @RE_rayobject_hint_bb(%struct.RayObject* %55, %struct.RayHint* %bb_hint, float* %arraydecay92, float* %arraydecay93), !dbg !7351
  %56 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7352
  %hint = getelementptr inbounds %struct.Isect, %struct.Isect* %56, i32 0, i32 18, !dbg !7353
  store %struct.RayHint* %bb_hint, %struct.RayHint** %hint, align 8, !dbg !7354
  %57 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7355
  %check = getelementptr inbounds %struct.Isect, %struct.Isect* %57, i32 0, i32 10, !dbg !7356
  store i32 1, i32* %check, align 4, !dbg !7357
  %58 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7358
  %skip = getelementptr inbounds %struct.Isect, %struct.Isect* %58, i32 0, i32 9, !dbg !7359
  store i32 2, i32* %skip, align 8, !dbg !7360
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7361
  %59 = load float*, float** %lampco.addr, align 8, !dbg !7362
  call void @copy_v3_v3(float* %arraydecay94, float* %59), !dbg !7363
  br label %while.cond, !dbg !7364

while.cond:                                       ; preds = %if.end298, %if.end91
  %60 = load i32, i32* %samples, align 4, !dbg !7365
  %61 = load i32, i32* %max_samples, align 4, !dbg !7366
  %cmp95 = icmp slt i32 %60, %61, !dbg !7367
  br i1 %cmp95, label %while.body, label %while.end, !dbg !7364

while.body:                                       ; preds = %while.cond
  %62 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7368
  %obi97 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %62, i32 0, i32 3, !dbg !7370
  %63 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi97, align 8, !dbg !7370
  %64 = bitcast %struct.ObjectInstanceRen* %63 to i8*, !dbg !7368
  %65 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7371
  %orig = getelementptr inbounds %struct.Isect, %struct.Isect* %65, i32 0, i32 16, !dbg !7372
  %ob = getelementptr inbounds %struct.anon, %struct.anon* %orig, i32 0, i32 0, !dbg !7373
  store i8* %64, i8** %ob, align 8, !dbg !7374
  %66 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7375
  %vlr98 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %66, i32 0, i32 1, !dbg !7376
  %67 = load %struct.VlakRen*, %struct.VlakRen** %vlr98, align 8, !dbg !7376
  %68 = bitcast %struct.VlakRen* %67 to i8*, !dbg !7375
  %69 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7377
  %orig99 = getelementptr inbounds %struct.Isect, %struct.Isect* %69, i32 0, i32 16, !dbg !7378
  %face = getelementptr inbounds %struct.anon, %struct.anon* %orig99, i32 0, i32 1, !dbg !7379
  store i8* %68, i8** %face, align 8, !dbg !7380
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7381
  %70 = load i32, i32* %samples, align 4, !dbg !7382
  %71 = load i32, i32* %totjitco, align 4, !dbg !7383
  %rem = srem i32 %70, %71, !dbg !7384
  %idxprom101 = sext i32 %rem to i64, !dbg !7385
  %arrayidx102 = getelementptr inbounds [16 x [3 x float]], [16 x [3 x float]]* %jitco, i64 0, i64 %idxprom101, !dbg !7385
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx102, i64 0, i64 0, !dbg !7385
  call void @copy_v3_v3(float* %arraydecay100, float* %arraydecay103), !dbg !7386
  %72 = load i8, i8* %do_soft, align 1, !dbg !7387
  %tobool104 = icmp ne i8 %72, 0, !dbg !7387
  br i1 %tobool104, label %if.then105, label %if.else165, !dbg !7389

if.then105:                                       ; preds = %while.body
  %73 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7390
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %73, i32 0, i32 6, !dbg !7393
  %74 = load i16, i16* %type, align 8, !dbg !7393
  %conv106 = sext i16 %74 to i32, !dbg !7390
  %cmp107 = icmp eq i32 %conv106, 0, !dbg !7394
  br i1 %cmp107, label %if.then109, label %if.else145, !dbg !7395

if.then109:                                       ; preds = %if.then105
  call void @llvm.dbg.declare(metadata [3 x float]* %ru, metadata !7396, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.declare(metadata [3 x float]* %rv, metadata !7399, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.declare(metadata [3 x float]* %v, metadata !7401, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.declare(metadata [3 x float]* %s, metadata !7403, metadata !DIExpression()), !dbg !7404
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7405
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7406
  %75 = load float*, float** %lampco.addr, align 8, !dbg !7407
  call void @sub_v3_v3v3(float* %arraydecay110, float* %arraydecay111, float* %75), !dbg !7408
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7409
  %call113 = call float @normalize_v3(float* %arraydecay112), !dbg !7410
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %ru, i64 0, i64 0, !dbg !7411
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %rv, i64 0, i64 0, !dbg !7412
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7413
  call void @ortho_basis_v3v3_v3(float* %arraydecay114, float* %arraydecay115, float* %arraydecay116), !dbg !7414
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !7415
  %76 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !7416
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7417
  %thread118 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %77, i32 0, i32 114, !dbg !7418
  %78 = load i16, i16* %thread118, align 2, !dbg !7418
  %conv119 = sext i16 %78 to i32, !dbg !7417
  %79 = load i32, i32* %samples, align 4, !dbg !7419
  %80 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7420
  %area_size = getelementptr inbounds %struct.LampRen, %struct.LampRen* %80, i32 0, i32 52, !dbg !7421
  %81 = load float, float* %area_size, align 8, !dbg !7421
  call void @QMC_sampleDisc(float* %arraydecay117, %struct.QMCSampler* %76, i32 %conv119, i32 %79, float %81), !dbg !7422
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !7423
  %82 = load float, float* %arrayidx120, align 4, !dbg !7423
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %ru, i64 0, i64 0, !dbg !7424
  %83 = load float, float* %arrayidx121, align 4, !dbg !7424
  %mul = fmul float %82, %83, !dbg !7425
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 1, !dbg !7426
  %84 = load float, float* %arrayidx122, align 4, !dbg !7426
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %rv, i64 0, i64 0, !dbg !7427
  %85 = load float, float* %arrayidx123, align 4, !dbg !7427
  %mul124 = fmul float %84, %85, !dbg !7428
  %add125 = fadd float %mul, %mul124, !dbg !7429
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !7430
  store float %add125, float* %arrayidx126, align 4, !dbg !7431
  %arrayidx127 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !7432
  %86 = load float, float* %arrayidx127, align 4, !dbg !7432
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %ru, i64 0, i64 1, !dbg !7433
  %87 = load float, float* %arrayidx128, align 4, !dbg !7433
  %mul129 = fmul float %86, %87, !dbg !7434
  %arrayidx130 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 1, !dbg !7435
  %88 = load float, float* %arrayidx130, align 4, !dbg !7435
  %arrayidx131 = getelementptr inbounds [3 x float], [3 x float]* %rv, i64 0, i64 1, !dbg !7436
  %89 = load float, float* %arrayidx131, align 4, !dbg !7436
  %mul132 = fmul float %88, %89, !dbg !7437
  %add133 = fadd float %mul129, %mul132, !dbg !7438
  %arrayidx134 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 1, !dbg !7439
  store float %add133, float* %arrayidx134, align 4, !dbg !7440
  %arrayidx135 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !7441
  %90 = load float, float* %arrayidx135, align 4, !dbg !7441
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %ru, i64 0, i64 2, !dbg !7442
  %91 = load float, float* %arrayidx136, align 4, !dbg !7442
  %mul137 = fmul float %90, %91, !dbg !7443
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 1, !dbg !7444
  %92 = load float, float* %arrayidx138, align 4, !dbg !7444
  %arrayidx139 = getelementptr inbounds [3 x float], [3 x float]* %rv, i64 0, i64 2, !dbg !7445
  %93 = load float, float* %arrayidx139, align 4, !dbg !7445
  %mul140 = fmul float %92, %93, !dbg !7446
  %add141 = fadd float %mul137, %mul140, !dbg !7447
  %arrayidx142 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 2, !dbg !7448
  store float %add141, float* %arrayidx142, align 4, !dbg !7449
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !7450
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !7451
  call void @copy_v3_v3(float* %arraydecay143, float* %arraydecay144), !dbg !7452
  br label %if.end152, !dbg !7453

if.else145:                                       ; preds = %if.then105
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !7454
  %94 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !7456
  %95 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7457
  %thread147 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %95, i32 0, i32 114, !dbg !7458
  %96 = load i16, i16* %thread147, align 2, !dbg !7458
  %conv148 = sext i16 %96 to i32, !dbg !7457
  %97 = load i32, i32* %samples, align 4, !dbg !7459
  %98 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7460
  %area_size149 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %98, i32 0, i32 52, !dbg !7461
  %99 = load float, float* %area_size149, align 8, !dbg !7461
  %100 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7462
  %area_sizey = getelementptr inbounds %struct.LampRen, %struct.LampRen* %100, i32 0, i32 53, !dbg !7463
  %101 = load float, float* %area_sizey, align 4, !dbg !7463
  call void @QMC_sampleRect(float* %arraydecay146, %struct.QMCSampler* %94, i32 %conv148, i32 %97, float %99, float %101), !dbg !7464
  %102 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7465
  %mat = getelementptr inbounds %struct.LampRen, %struct.LampRen* %102, i32 0, i32 64, !dbg !7466
  %arraydecay150 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !7465
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !7467
  call void @mul_m3_v3([3 x float]* %arraydecay150, float* %arraydecay151), !dbg !7468
  br label %if.end152

if.end152:                                        ; preds = %if.else145, %if.then109
  %arrayidx153 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7469
  %103 = load float, float* %arrayidx153, align 4, !dbg !7469
  %arrayidx154 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 0, !dbg !7470
  %104 = load float, float* %arrayidx154, align 4, !dbg !7470
  %add155 = fadd float %103, %104, !dbg !7471
  %arrayidx156 = getelementptr inbounds [3 x float], [3 x float]* %end, i64 0, i64 0, !dbg !7472
  store float %add155, float* %arrayidx156, align 4, !dbg !7473
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !7474
  %105 = load float, float* %arrayidx157, align 4, !dbg !7474
  %arrayidx158 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 1, !dbg !7475
  %106 = load float, float* %arrayidx158, align 4, !dbg !7475
  %add159 = fadd float %105, %106, !dbg !7476
  %arrayidx160 = getelementptr inbounds [3 x float], [3 x float]* %end, i64 0, i64 1, !dbg !7477
  store float %add159, float* %arrayidx160, align 4, !dbg !7478
  %arrayidx161 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !7479
  %107 = load float, float* %arrayidx161, align 4, !dbg !7479
  %arrayidx162 = getelementptr inbounds [3 x float], [3 x float]* %samp3d, i64 0, i64 2, !dbg !7480
  %108 = load float, float* %arrayidx162, align 4, !dbg !7480
  %add163 = fadd float %107, %108, !dbg !7481
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %end, i64 0, i64 2, !dbg !7482
  store float %add163, float* %arrayidx164, align 4, !dbg !7483
  br label %if.end168, !dbg !7484

if.else165:                                       ; preds = %while.body
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %end, i64 0, i64 0, !dbg !7485
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7487
  call void @copy_v3_v3(float* %arraydecay166, float* %arraydecay167), !dbg !7488
  br label %if.end168

if.end168:                                        ; preds = %if.else165, %if.end152
  %109 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7489
  %strand = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %109, i32 0, i32 2, !dbg !7491
  %110 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !7491
  %tobool169 = icmp ne %struct.StrandRen* %110, null, !dbg !7489
  br i1 %tobool169, label %if.then170, label %if.end194, !dbg !7492

if.then170:                                       ; preds = %if.end168
  call void @llvm.dbg.declare(metadata float* %jitbias, metadata !7493, metadata !DIExpression()), !dbg !7495
  %111 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7496
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %111, i32 0, i32 78, !dbg !7497
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 0, !dbg !7496
  %call172 = call float @len_v3(float* %arraydecay171), !dbg !7498
  %112 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7499
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %112, i32 0, i32 79, !dbg !7500
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 0, !dbg !7499
  %call174 = call float @len_v3(float* %arraydecay173), !dbg !7501
  %add175 = fadd float %call172, %call174, !dbg !7502
  %mul176 = fmul float 5.000000e-01, %add175, !dbg !7503
  store float %mul176, float* %jitbias, align 4, !dbg !7495
  call void @llvm.dbg.declare(metadata [3 x float]* %v177, metadata !7504, metadata !DIExpression()), !dbg !7505
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %v177, i64 0, i64 0, !dbg !7506
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7507
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %end, i64 0, i64 0, !dbg !7508
  call void @sub_v3_v3v3(float* %arraydecay178, float* %arraydecay179, float* %arraydecay180), !dbg !7509
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %v177, i64 0, i64 0, !dbg !7510
  %call182 = call float @normalize_v3(float* %arraydecay181), !dbg !7511
  %113 = load float, float* %jitbias, align 4, !dbg !7512
  %arrayidx183 = getelementptr inbounds [3 x float], [3 x float]* %v177, i64 0, i64 0, !dbg !7513
  %114 = load float, float* %arrayidx183, align 4, !dbg !7513
  %mul184 = fmul float %113, %114, !dbg !7514
  %arrayidx185 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7515
  %115 = load float, float* %arrayidx185, align 4, !dbg !7516
  %sub = fsub float %115, %mul184, !dbg !7516
  store float %sub, float* %arrayidx185, align 4, !dbg !7516
  %116 = load float, float* %jitbias, align 4, !dbg !7517
  %arrayidx186 = getelementptr inbounds [3 x float], [3 x float]* %v177, i64 0, i64 1, !dbg !7518
  %117 = load float, float* %arrayidx186, align 4, !dbg !7518
  %mul187 = fmul float %116, %117, !dbg !7519
  %arrayidx188 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 1, !dbg !7520
  %118 = load float, float* %arrayidx188, align 4, !dbg !7521
  %sub189 = fsub float %118, %mul187, !dbg !7521
  store float %sub189, float* %arrayidx188, align 4, !dbg !7521
  %119 = load float, float* %jitbias, align 4, !dbg !7522
  %arrayidx190 = getelementptr inbounds [3 x float], [3 x float]* %v177, i64 0, i64 2, !dbg !7523
  %120 = load float, float* %arrayidx190, align 4, !dbg !7523
  %mul191 = fmul float %119, %120, !dbg !7524
  %arrayidx192 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 2, !dbg !7525
  %121 = load float, float* %arrayidx192, align 4, !dbg !7526
  %sub193 = fsub float %121, %mul191, !dbg !7526
  store float %sub193, float* %arrayidx192, align 4, !dbg !7526
  br label %if.end194, !dbg !7527

if.end194:                                        ; preds = %if.then170, %if.end168
  %122 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7528
  %start195 = getelementptr inbounds %struct.Isect, %struct.Isect* %122, i32 0, i32 0, !dbg !7529
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %start195, i64 0, i64 0, !dbg !7528
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7530
  call void @copy_v3_v3(float* %arraydecay196, float* %arraydecay197), !dbg !7531
  %123 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7532
  %dir = getelementptr inbounds %struct.Isect, %struct.Isect* %123, i32 0, i32 1, !dbg !7533
  %arraydecay198 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !7532
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %end, i64 0, i64 0, !dbg !7534
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7535
  call void @sub_v3_v3v3(float* %arraydecay198, float* %arraydecay199, float* %arraydecay200), !dbg !7536
  %124 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7537
  %dir201 = getelementptr inbounds %struct.Isect, %struct.Isect* %124, i32 0, i32 1, !dbg !7538
  %arraydecay202 = getelementptr inbounds [3 x float], [3 x float]* %dir201, i64 0, i64 0, !dbg !7537
  %call203 = call float @normalize_v3(float* %arraydecay202), !dbg !7539
  %125 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7540
  %dist = getelementptr inbounds %struct.Isect, %struct.Isect* %125, i32 0, i32 2, !dbg !7541
  store float %call203, float* %dist, align 8, !dbg !7542
  %126 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7543
  %obi204 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %126, i32 0, i32 3, !dbg !7544
  %127 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi204, align 8, !dbg !7544
  %128 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7545
  call void @RE_instance_rotate_ray(%struct.ObjectInstanceRen* %127, %struct.Isect* %128), !dbg !7546
  %129 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7547
  %mode205 = getelementptr inbounds %struct.Isect, %struct.Isect* %129, i32 0, i32 7, !dbg !7549
  %130 = load i32, i32* %mode205, align 8, !dbg !7549
  %cmp206 = icmp eq i32 %130, 2, !dbg !7550
  br i1 %cmp206, label %if.then208, label %if.else237, !dbg !7551

if.then208:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !7552, metadata !DIExpression()), !dbg !7554
  %131 = bitcast [4 x float]* %col to i8*, !dbg !7554
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %131, i8* align 16 bitcast ([4 x float]* @__const.ray_shadow_qmc.col to i8*), i64 16, i1 false), !dbg !7554
  %132 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7555
  %133 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7556
  %arraydecay209 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7557
  call void @ray_trace_shadow_tra(%struct.Isect* %132, %struct.ShadeInput* %133, i32 10, i32 0, float* %arraydecay209), !dbg !7558
  %arrayidx210 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7559
  %134 = load float, float* %arrayidx210, align 16, !dbg !7559
  %135 = load float*, float** %shadfac.addr, align 8, !dbg !7560
  %arrayidx211 = getelementptr inbounds float, float* %135, i64 0, !dbg !7560
  %136 = load float, float* %arrayidx211, align 4, !dbg !7561
  %add212 = fadd float %136, %134, !dbg !7561
  store float %add212, float* %arrayidx211, align 4, !dbg !7561
  %arrayidx213 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !7562
  %137 = load float, float* %arrayidx213, align 4, !dbg !7562
  %138 = load float*, float** %shadfac.addr, align 8, !dbg !7563
  %arrayidx214 = getelementptr inbounds float, float* %138, i64 1, !dbg !7563
  %139 = load float, float* %arrayidx214, align 4, !dbg !7564
  %add215 = fadd float %139, %137, !dbg !7564
  store float %add215, float* %arrayidx214, align 4, !dbg !7564
  %arrayidx216 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !7565
  %140 = load float, float* %arrayidx216, align 8, !dbg !7565
  %141 = load float*, float** %shadfac.addr, align 8, !dbg !7566
  %arrayidx217 = getelementptr inbounds float, float* %141, i64 2, !dbg !7566
  %142 = load float, float* %arrayidx217, align 4, !dbg !7567
  %add218 = fadd float %142, %140, !dbg !7567
  store float %add218, float* %arrayidx217, align 4, !dbg !7567
  %arrayidx219 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !7568
  %143 = load float, float* %arrayidx219, align 4, !dbg !7568
  %144 = load float*, float** %shadfac.addr, align 8, !dbg !7569
  %arrayidx220 = getelementptr inbounds float, float* %144, i64 3, !dbg !7569
  %145 = load float, float* %arrayidx220, align 4, !dbg !7570
  %add221 = fadd float %145, %143, !dbg !7570
  store float %add221, float* %arrayidx220, align 4, !dbg !7570
  %arrayidx222 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7571
  %146 = load float, float* %arrayidx222, align 16, !dbg !7571
  %arrayidx223 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7572
  %147 = load float, float* %arrayidx223, align 16, !dbg !7572
  %mul224 = fmul float %146, %147, !dbg !7573
  %arrayidx225 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 0, !dbg !7574
  %148 = load float, float* %arrayidx225, align 16, !dbg !7575
  %add226 = fadd float %148, %mul224, !dbg !7575
  store float %add226, float* %arrayidx225, align 16, !dbg !7575
  %arrayidx227 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !7576
  %149 = load float, float* %arrayidx227, align 4, !dbg !7576
  %arrayidx228 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !7577
  %150 = load float, float* %arrayidx228, align 4, !dbg !7577
  %mul229 = fmul float %149, %150, !dbg !7578
  %arrayidx230 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 1, !dbg !7579
  %151 = load float, float* %arrayidx230, align 4, !dbg !7580
  %add231 = fadd float %151, %mul229, !dbg !7580
  store float %add231, float* %arrayidx230, align 4, !dbg !7580
  %arrayidx232 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !7581
  %152 = load float, float* %arrayidx232, align 8, !dbg !7581
  %arrayidx233 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !7582
  %153 = load float, float* %arrayidx233, align 8, !dbg !7582
  %mul234 = fmul float %152, %153, !dbg !7583
  %arrayidx235 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 2, !dbg !7584
  %154 = load float, float* %arrayidx235, align 8, !dbg !7585
  %add236 = fadd float %154, %mul234, !dbg !7585
  store float %add236, float* %arrayidx235, align 8, !dbg !7585
  br label %if.end243, !dbg !7586

if.else237:                                       ; preds = %if.end194
  %155 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !7587
  %156 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7590
  %call238 = call i32 @RE_rayobject_raycast(%struct.RayObject* %155, %struct.Isect* %156), !dbg !7591
  %tobool239 = icmp ne i32 %call238, 0, !dbg !7591
  br i1 %tobool239, label %if.then240, label %if.end242, !dbg !7592

if.then240:                                       ; preds = %if.else237
  %157 = load float, float* %fac, align 4, !dbg !7593
  %add241 = fadd float %157, 1.000000e+00, !dbg !7593
  store float %add241, float* %fac, align 4, !dbg !7593
  br label %if.end242, !dbg !7594

if.end242:                                        ; preds = %if.then240, %if.else237
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.then208
  %158 = load i32, i32* %samples, align 4, !dbg !7595
  %inc244 = add nsw i32 %158, 1, !dbg !7595
  store i32 %inc244, i32* %samples, align 4, !dbg !7595
  %159 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7596
  %ray_samp_method245 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %159, i32 0, i32 46, !dbg !7598
  %160 = load i16, i16* %ray_samp_method245, align 2, !dbg !7598
  %conv246 = sext i16 %160 to i32, !dbg !7596
  %cmp247 = icmp eq i32 %conv246, 1, !dbg !7599
  br i1 %cmp247, label %if.then249, label %if.end298, !dbg !7600

if.then249:                                       ; preds = %if.end243
  %161 = load i32, i32* %max_samples, align 4, !dbg !7601
  %162 = load i32, i32* %min_adapt_samples, align 4, !dbg !7604
  %cmp250 = icmp sgt i32 %161, %162, !dbg !7605
  br i1 %cmp250, label %land.lhs.true252, label %if.end297, !dbg !7606

land.lhs.true252:                                 ; preds = %if.then249
  %163 = load float, float* %adapt_thresh, align 4, !dbg !7607
  %cmp253 = fcmp ogt float %163, 0.000000e+00, !dbg !7608
  br i1 %cmp253, label %land.lhs.true255, label %if.end297, !dbg !7609

land.lhs.true255:                                 ; preds = %land.lhs.true252
  %164 = load i32, i32* %samples, align 4, !dbg !7610
  %165 = load i32, i32* %max_samples, align 4, !dbg !7611
  %div256 = sdiv i32 %165, 3, !dbg !7612
  %cmp257 = icmp sgt i32 %164, %div256, !dbg !7613
  br i1 %cmp257, label %if.then259, label %if.end297, !dbg !7614

if.then259:                                       ; preds = %land.lhs.true255
  %166 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7615
  %mode260 = getelementptr inbounds %struct.Isect, %struct.Isect* %166, i32 0, i32 7, !dbg !7618
  %167 = load i32, i32* %mode260, align 8, !dbg !7618
  %cmp261 = icmp eq i32 %167, 2, !dbg !7619
  br i1 %cmp261, label %if.then263, label %if.else283, !dbg !7620

if.then263:                                       ; preds = %if.then259
  %168 = load float*, float** %shadfac.addr, align 8, !dbg !7621
  %arrayidx264 = getelementptr inbounds float, float* %168, i64 3, !dbg !7621
  %169 = load float, float* %arrayidx264, align 4, !dbg !7621
  %170 = load i32, i32* %samples, align 4, !dbg !7624
  %conv265 = sitofp i32 %170 to float, !dbg !7624
  %div266 = fdiv float %169, %conv265, !dbg !7625
  %171 = load float, float* %adapt_thresh, align 4, !dbg !7626
  %sub267 = fsub float 1.000000e+00, %171, !dbg !7627
  %cmp268 = fcmp ogt float %div266, %sub267, !dbg !7628
  br i1 %cmp268, label %if.then275, label %lor.lhs.false, !dbg !7629

lor.lhs.false:                                    ; preds = %if.then263
  %172 = load float*, float** %shadfac.addr, align 8, !dbg !7630
  %arrayidx270 = getelementptr inbounds float, float* %172, i64 3, !dbg !7630
  %173 = load float, float* %arrayidx270, align 4, !dbg !7630
  %174 = load i32, i32* %samples, align 4, !dbg !7631
  %conv271 = sitofp i32 %174 to float, !dbg !7631
  %div272 = fdiv float %173, %conv271, !dbg !7632
  %175 = load float, float* %adapt_thresh, align 4, !dbg !7633
  %cmp273 = fcmp olt float %div272, %175, !dbg !7634
  br i1 %cmp273, label %if.then275, label %if.else276, !dbg !7635

if.then275:                                       ; preds = %lor.lhs.false, %if.then263
  br label %while.end, !dbg !7636

if.else276:                                       ; preds = %lor.lhs.false
  %176 = load i32, i32* %samples, align 4, !dbg !7637
  %177 = load float*, float** %shadfac.addr, align 8, !dbg !7639
  %arraydecay277 = getelementptr inbounds [4 x float], [4 x float]* %colsq, i64 0, i64 0, !dbg !7640
  %178 = load float, float* %adapt_thresh, align 4, !dbg !7641
  %call278 = call i32 @adaptive_sample_variance(i32 %176, float* %177, float* %arraydecay277, float %178), !dbg !7642
  %tobool279 = icmp ne i32 %call278, 0, !dbg !7642
  br i1 %tobool279, label %if.then280, label %if.end281, !dbg !7643

if.then280:                                       ; preds = %if.else276
  br label %while.end, !dbg !7644

if.end281:                                        ; preds = %if.else276
  br label %if.end282

if.end282:                                        ; preds = %if.end281
  br label %if.end296, !dbg !7645

if.else283:                                       ; preds = %if.then259
  %179 = load float, float* %fac, align 4, !dbg !7646
  %180 = load i32, i32* %samples, align 4, !dbg !7649
  %conv284 = sitofp i32 %180 to float, !dbg !7649
  %div285 = fdiv float %179, %conv284, !dbg !7650
  %181 = load float, float* %adapt_thresh, align 4, !dbg !7651
  %sub286 = fsub float 1.000000e+00, %181, !dbg !7652
  %cmp287 = fcmp ogt float %div285, %sub286, !dbg !7653
  br i1 %cmp287, label %if.then294, label %lor.lhs.false289, !dbg !7654

lor.lhs.false289:                                 ; preds = %if.else283
  %182 = load float, float* %fac, align 4, !dbg !7655
  %183 = load i32, i32* %samples, align 4, !dbg !7656
  %conv290 = sitofp i32 %183 to float, !dbg !7656
  %div291 = fdiv float %182, %conv290, !dbg !7657
  %184 = load float, float* %adapt_thresh, align 4, !dbg !7658
  %cmp292 = fcmp olt float %div291, %184, !dbg !7659
  br i1 %cmp292, label %if.then294, label %if.end295, !dbg !7660

if.then294:                                       ; preds = %lor.lhs.false289, %if.else283
  br label %while.end, !dbg !7661

if.end295:                                        ; preds = %lor.lhs.false289
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %if.end282
  br label %if.end297, !dbg !7662

if.end297:                                        ; preds = %if.end296, %land.lhs.true255, %land.lhs.true252, %if.then249
  br label %if.end298, !dbg !7663

if.end298:                                        ; preds = %if.end297, %if.end243
  br label %while.cond, !dbg !7364, !llvm.loop !7664

while.end:                                        ; preds = %if.then294, %if.then280, %if.then275, %while.cond
  %185 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7666
  %mode299 = getelementptr inbounds %struct.Isect, %struct.Isect* %185, i32 0, i32 7, !dbg !7668
  %186 = load i32, i32* %mode299, align 8, !dbg !7668
  %cmp300 = icmp eq i32 %186, 2, !dbg !7669
  br i1 %cmp300, label %if.then302, label %if.else315, !dbg !7670

if.then302:                                       ; preds = %while.end
  %187 = load i32, i32* %samples, align 4, !dbg !7671
  %conv303 = sitofp i32 %187 to float, !dbg !7671
  %188 = load float*, float** %shadfac.addr, align 8, !dbg !7673
  %arrayidx304 = getelementptr inbounds float, float* %188, i64 0, !dbg !7673
  %189 = load float, float* %arrayidx304, align 4, !dbg !7674
  %div305 = fdiv float %189, %conv303, !dbg !7674
  store float %div305, float* %arrayidx304, align 4, !dbg !7674
  %190 = load i32, i32* %samples, align 4, !dbg !7675
  %conv306 = sitofp i32 %190 to float, !dbg !7675
  %191 = load float*, float** %shadfac.addr, align 8, !dbg !7676
  %arrayidx307 = getelementptr inbounds float, float* %191, i64 1, !dbg !7676
  %192 = load float, float* %arrayidx307, align 4, !dbg !7677
  %div308 = fdiv float %192, %conv306, !dbg !7677
  store float %div308, float* %arrayidx307, align 4, !dbg !7677
  %193 = load i32, i32* %samples, align 4, !dbg !7678
  %conv309 = sitofp i32 %193 to float, !dbg !7678
  %194 = load float*, float** %shadfac.addr, align 8, !dbg !7679
  %arrayidx310 = getelementptr inbounds float, float* %194, i64 2, !dbg !7679
  %195 = load float, float* %arrayidx310, align 4, !dbg !7680
  %div311 = fdiv float %195, %conv309, !dbg !7680
  store float %div311, float* %arrayidx310, align 4, !dbg !7680
  %196 = load i32, i32* %samples, align 4, !dbg !7681
  %conv312 = sitofp i32 %196 to float, !dbg !7681
  %197 = load float*, float** %shadfac.addr, align 8, !dbg !7682
  %arrayidx313 = getelementptr inbounds float, float* %197, i64 3, !dbg !7682
  %198 = load float, float* %arrayidx313, align 4, !dbg !7683
  %div314 = fdiv float %198, %conv312, !dbg !7683
  store float %div314, float* %arrayidx313, align 4, !dbg !7683
  br label %if.end320, !dbg !7684

if.else315:                                       ; preds = %while.end
  %199 = load float, float* %fac, align 4, !dbg !7685
  %200 = load i32, i32* %samples, align 4, !dbg !7686
  %conv316 = sitofp i32 %200 to float, !dbg !7686
  %div317 = fdiv float %199, %conv316, !dbg !7687
  %sub318 = fsub float 1.000000e+00, %div317, !dbg !7688
  %201 = load float*, float** %shadfac.addr, align 8, !dbg !7689
  %arrayidx319 = getelementptr inbounds float, float* %201, i64 3, !dbg !7689
  store float %sub318, float* %arrayidx319, align 4, !dbg !7690
  br label %if.end320

if.end320:                                        ; preds = %if.else315, %if.then302
  %202 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !7691
  %tobool321 = icmp ne %struct.QMCSampler* %202, null, !dbg !7691
  br i1 %tobool321, label %if.then322, label %if.end325, !dbg !7693

if.then322:                                       ; preds = %if.end320
  %203 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7694
  %thread323 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %203, i32 0, i32 114, !dbg !7695
  %204 = load i16, i16* %thread323, align 2, !dbg !7695
  %conv324 = sext i16 %204 to i32, !dbg !7694
  %205 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !7696
  call void @release_thread_qmcsampler(%struct.Render* @R, i32 %conv324, %struct.QMCSampler* %205), !dbg !7697
  br label %if.end325, !dbg !7697

if.end325:                                        ; preds = %if.then322, %if.end320
  ret void, !dbg !7698
}

declare dso_local void @RE_instance_rotate_ray(%struct.ObjectInstanceRen*, %struct.Isect*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ray_trace_shadow_tra(%struct.Isect* %is, %struct.ShadeInput* %origshi, i32 %depth, i32 %traflag, float* %col) #0 !dbg !7699 {
entry:
  %is.addr = alloca %struct.Isect*, align 8
  %origshi.addr = alloca %struct.ShadeInput*, align 8
  %depth.addr = alloca i32, align 4
  %traflag.addr = alloca i32, align 4
  %col.addr = alloca float*, align 8
  %initial_dist = alloca float, align 4
  %shi = alloca %struct.ShadeInput, align 8
  %shr = alloca %struct.ShadeResult, align 4
  %d = alloca float, align 4
  %a = alloca float, align 4
  store %struct.Isect* %is, %struct.Isect** %is.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %is.addr, metadata !7702, metadata !DIExpression()), !dbg !7703
  store %struct.ShadeInput* %origshi, %struct.ShadeInput** %origshi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %origshi.addr, metadata !7704, metadata !DIExpression()), !dbg !7705
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !7706, metadata !DIExpression()), !dbg !7707
  store i32 %traflag, i32* %traflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %traflag.addr, metadata !7708, metadata !DIExpression()), !dbg !7709
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !7710, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.declare(metadata float* %initial_dist, metadata !7712, metadata !DIExpression()), !dbg !7713
  %0 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7714
  %dist = getelementptr inbounds %struct.Isect, %struct.Isect* %0, i32 0, i32 2, !dbg !7715
  %1 = load float, float* %dist, align 8, !dbg !7715
  store float %1, float* %initial_dist, align 4, !dbg !7713
  %2 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !7716
  %3 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7718
  %call = call i32 @RE_rayobject_raycast(%struct.RayObject* %2, %struct.Isect* %3), !dbg !7719
  %tobool = icmp ne i32 %call, 0, !dbg !7719
  br i1 %tobool, label %if.then, label %if.end62, !dbg !7720

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ShadeInput* %shi, metadata !7721, metadata !DIExpression()), !dbg !7723
  %4 = bitcast %struct.ShadeInput* %shi to i8*, !dbg !7723
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 1472, i1 false), !dbg !7723
  call void @llvm.dbg.declare(metadata %struct.ShadeResult* %shr, metadata !7724, metadata !DIExpression()), !dbg !7725
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !7726
  %depth1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 108, !dbg !7727
  %6 = load i32, i32* %depth1, align 8, !dbg !7727
  %add = add nsw i32 %6, 1, !dbg !7728
  %depth2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 108, !dbg !7729
  store i32 %add, i32* %depth2, align 8, !dbg !7730
  %7 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !7731
  %mask = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %7, i32 0, i32 105, !dbg !7732
  %8 = load i32, i32* %mask, align 4, !dbg !7732
  %mask3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 105, !dbg !7733
  store i32 %8, i32* %mask3, align 4, !dbg !7734
  %9 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !7735
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %9, i32 0, i32 114, !dbg !7736
  %10 = load i16, i16* %thread, align 2, !dbg !7736
  %thread4 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 114, !dbg !7737
  store i16 %10, i16* %thread4, align 2, !dbg !7738
  %passflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 119, !dbg !7739
  store i32 1, i32* %passflag, align 8, !dbg !7740
  %combinedflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 120, !dbg !7741
  store i32 16777215, i32* %combinedflag, align 4, !dbg !7742
  %11 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !7743
  %xs = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %11, i32 0, i32 103, !dbg !7744
  %12 = load i32, i32* %xs, align 4, !dbg !7744
  %xs5 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 103, !dbg !7745
  store i32 %12, i32* %xs5, align 4, !dbg !7746
  %13 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !7747
  %ys = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %13, i32 0, i32 104, !dbg !7748
  %14 = load i32, i32* %ys, align 8, !dbg !7748
  %ys6 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 104, !dbg !7749
  store i32 %14, i32* %ys6, align 8, !dbg !7750
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !7751
  %lay = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 117, !dbg !7752
  %16 = load i32, i32* %lay, align 8, !dbg !7752
  %lay7 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 117, !dbg !7753
  store i32 %16, i32* %lay7, align 8, !dbg !7754
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !7755
  %nodes = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 116, !dbg !7756
  %18 = load i16, i16* %nodes, align 2, !dbg !7756
  %nodes8 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 116, !dbg !7757
  store i16 %18, i16* %nodes8, align 2, !dbg !7758
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !7759
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 3, !dbg !7760
  %20 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7760
  %21 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7761
  call void @RE_instance_rotate_ray_restore(%struct.ObjectInstanceRen* %20, %struct.Isect* %21), !dbg !7762
  %22 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7763
  call void @shade_ray(%struct.Isect* %22, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr), !dbg !7764
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !7765
  %23 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7765
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %23, i32 0, i32 2, !dbg !7767
  %24 = load i16, i16* %material_type, align 8, !dbg !7767
  %conv = sext i16 %24 to i32, !dbg !7768
  %cmp = icmp eq i32 %conv, 0, !dbg !7769
  br i1 %cmp, label %if.then10, label %if.else, !dbg !7770

if.then10:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata float* %d, metadata !7771, metadata !DIExpression()), !dbg !7773
  %25 = load i32, i32* %traflag.addr, align 4, !dbg !7774
  %and = and i32 %25, 1, !dbg !7775
  %tobool11 = icmp ne i32 %and, 0, !dbg !7775
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !7776

cond.true:                                        ; preds = %if.then10
  %26 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7777
  %call12 = call float @shade_by_transmission(%struct.Isect* %26, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr), !dbg !7778
  br label %cond.end, !dbg !7776

cond.false:                                       ; preds = %if.then10
  br label %cond.end, !dbg !7776

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %call12, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !7776
  store float %cond, float* %d, align 4, !dbg !7773
  %27 = load float*, float** %col.addr, align 8, !dbg !7779
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !7780
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !7781
  %alpha = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 2, !dbg !7782
  %28 = load float, float* %alpha, align 4, !dbg !7782
  %29 = load float, float* %d, align 4, !dbg !7783
  %mat13 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !7784
  %30 = load %struct.Material*, %struct.Material** %mat13, align 8, !dbg !7784
  %filter = getelementptr inbounds %struct.Material, %struct.Material* %30, i32 0, i32 33, !dbg !7785
  %31 = load float, float* %filter, align 8, !dbg !7785
  %mul = fmul float %29, %31, !dbg !7786
  call void @addAlphaLight(float* %27, float* %arraydecay, float %28, float %mul), !dbg !7787
  br label %if.end46, !dbg !7788

if.else:                                          ; preds = %if.then
  %mat14 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !7789
  %32 = load %struct.Material*, %struct.Material** %mat14, align 8, !dbg !7789
  %material_type15 = getelementptr inbounds %struct.Material, %struct.Material* %32, i32 0, i32 2, !dbg !7791
  %33 = load i16, i16* %material_type15, align 8, !dbg !7791
  %conv16 = sext i16 %33 to i32, !dbg !7792
  %cmp17 = icmp eq i32 %conv16, 2, !dbg !7793
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !7794

if.then19:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %a, metadata !7795, metadata !DIExpression()), !dbg !7797
  %34 = load float*, float** %col.addr, align 8, !dbg !7798
  %arrayidx = getelementptr inbounds float, float* %34, i64 3, !dbg !7798
  %35 = load float, float* %arrayidx, align 4, !dbg !7798
  store float %35, float* %a, align 4, !dbg !7797
  %36 = load float, float* %a, align 4, !dbg !7799
  %37 = load float*, float** %col.addr, align 8, !dbg !7800
  %arrayidx20 = getelementptr inbounds float, float* %37, i64 0, !dbg !7800
  %38 = load float, float* %arrayidx20, align 4, !dbg !7800
  %mul21 = fmul float %36, %38, !dbg !7801
  %alpha22 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 2, !dbg !7802
  %39 = load float, float* %alpha22, align 4, !dbg !7802
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 0, !dbg !7803
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !7804
  %40 = load float, float* %arrayidx23, align 4, !dbg !7804
  %mul24 = fmul float %39, %40, !dbg !7805
  %add25 = fadd float %mul21, %mul24, !dbg !7806
  %41 = load float*, float** %col.addr, align 8, !dbg !7807
  %arrayidx26 = getelementptr inbounds float, float* %41, i64 0, !dbg !7807
  store float %add25, float* %arrayidx26, align 4, !dbg !7808
  %42 = load float, float* %a, align 4, !dbg !7809
  %43 = load float*, float** %col.addr, align 8, !dbg !7810
  %arrayidx27 = getelementptr inbounds float, float* %43, i64 1, !dbg !7810
  %44 = load float, float* %arrayidx27, align 4, !dbg !7810
  %mul28 = fmul float %42, %44, !dbg !7811
  %alpha29 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 2, !dbg !7812
  %45 = load float, float* %alpha29, align 4, !dbg !7812
  %combined30 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 0, !dbg !7813
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %combined30, i64 0, i64 1, !dbg !7814
  %46 = load float, float* %arrayidx31, align 4, !dbg !7814
  %mul32 = fmul float %45, %46, !dbg !7815
  %add33 = fadd float %mul28, %mul32, !dbg !7816
  %47 = load float*, float** %col.addr, align 8, !dbg !7817
  %arrayidx34 = getelementptr inbounds float, float* %47, i64 1, !dbg !7817
  store float %add33, float* %arrayidx34, align 4, !dbg !7818
  %48 = load float, float* %a, align 4, !dbg !7819
  %49 = load float*, float** %col.addr, align 8, !dbg !7820
  %arrayidx35 = getelementptr inbounds float, float* %49, i64 2, !dbg !7820
  %50 = load float, float* %arrayidx35, align 4, !dbg !7820
  %mul36 = fmul float %48, %50, !dbg !7821
  %alpha37 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 2, !dbg !7822
  %51 = load float, float* %alpha37, align 4, !dbg !7822
  %combined38 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 0, !dbg !7823
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %combined38, i64 0, i64 2, !dbg !7824
  %52 = load float, float* %arrayidx39, align 4, !dbg !7824
  %mul40 = fmul float %51, %52, !dbg !7825
  %add41 = fadd float %mul36, %mul40, !dbg !7826
  %53 = load float*, float** %col.addr, align 8, !dbg !7827
  %arrayidx42 = getelementptr inbounds float, float* %53, i64 2, !dbg !7827
  store float %add41, float* %arrayidx42, align 4, !dbg !7828
  %alpha43 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 2, !dbg !7829
  %54 = load float, float* %alpha43, align 4, !dbg !7829
  %sub = fsub float 1.000000e+00, %54, !dbg !7830
  %55 = load float, float* %a, align 4, !dbg !7831
  %mul44 = fmul float %sub, %55, !dbg !7832
  %56 = load float*, float** %col.addr, align 8, !dbg !7833
  %arrayidx45 = getelementptr inbounds float, float* %56, i64 3, !dbg !7833
  store float %mul44, float* %arrayidx45, align 4, !dbg !7834
  br label %if.end, !dbg !7835

if.end:                                           ; preds = %if.then19, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end, %cond.end
  %57 = load i32, i32* %depth.addr, align 4, !dbg !7836
  %cmp47 = icmp sgt i32 %57, 0, !dbg !7838
  br i1 %cmp47, label %land.lhs.true, label %if.end61, !dbg !7839

land.lhs.true:                                    ; preds = %if.end46
  %58 = load float*, float** %col.addr, align 8, !dbg !7840
  %arrayidx49 = getelementptr inbounds float, float* %58, i64 3, !dbg !7840
  %59 = load float, float* %arrayidx49, align 4, !dbg !7840
  %cmp50 = fcmp ogt float %59, 0.000000e+00, !dbg !7841
  br i1 %cmp50, label %if.then52, label %if.end61, !dbg !7842

if.then52:                                        ; preds = %land.lhs.true
  %60 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7843
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %60, i32 0, i32 0, !dbg !7845
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7843
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !7846
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7847
  call void @copy_v3_v3(float* %arraydecay53, float* %arraydecay54), !dbg !7848
  %61 = load float, float* %initial_dist, align 4, !dbg !7849
  %62 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7850
  %dist55 = getelementptr inbounds %struct.Isect, %struct.Isect* %62, i32 0, i32 2, !dbg !7851
  %63 = load float, float* %dist55, align 8, !dbg !7851
  %sub56 = fsub float %61, %63, !dbg !7852
  %64 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7853
  %dist57 = getelementptr inbounds %struct.Isect, %struct.Isect* %64, i32 0, i32 2, !dbg !7854
  store float %sub56, float* %dist57, align 8, !dbg !7855
  %obi58 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 3, !dbg !7856
  %65 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi58, align 8, !dbg !7856
  %66 = bitcast %struct.ObjectInstanceRen* %65 to i8*, !dbg !7857
  %67 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7858
  %orig = getelementptr inbounds %struct.Isect, %struct.Isect* %67, i32 0, i32 16, !dbg !7859
  %ob = getelementptr inbounds %struct.anon, %struct.anon* %orig, i32 0, i32 0, !dbg !7860
  store i8* %66, i8** %ob, align 8, !dbg !7861
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 1, !dbg !7862
  %68 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7862
  %69 = bitcast %struct.VlakRen* %68 to i8*, !dbg !7863
  %70 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7864
  %orig59 = getelementptr inbounds %struct.Isect, %struct.Isect* %70, i32 0, i32 16, !dbg !7865
  %face = getelementptr inbounds %struct.anon, %struct.anon* %orig59, i32 0, i32 1, !dbg !7866
  store i8* %69, i8** %face, align 8, !dbg !7867
  %71 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7868
  %72 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !7869
  %73 = load i32, i32* %depth.addr, align 4, !dbg !7870
  %sub60 = sub nsw i32 %73, 1, !dbg !7871
  %74 = load i32, i32* %traflag.addr, align 4, !dbg !7872
  %or = or i32 %74, 1, !dbg !7873
  %75 = load float*, float** %col.addr, align 8, !dbg !7874
  call void @ray_trace_shadow_tra(%struct.Isect* %71, %struct.ShadeInput* %72, i32 %sub60, i32 %or, float* %75), !dbg !7875
  br label %if.end61, !dbg !7876

if.end61:                                         ; preds = %if.then52, %land.lhs.true, %if.end46
  br label %if.end62, !dbg !7877

if.end62:                                         ; preds = %if.end61, %entry
  ret void, !dbg !7878
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !7879 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7880, metadata !DIExpression()), !dbg !7881
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7882, metadata !DIExpression()), !dbg !7883
  %0 = load float*, float** %a.addr, align 8, !dbg !7884
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7884
  %1 = load float, float* %arrayidx, align 4, !dbg !7884
  %2 = load float*, float** %r.addr, align 8, !dbg !7885
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7885
  store float %1, float* %arrayidx1, align 4, !dbg !7886
  %3 = load float*, float** %a.addr, align 8, !dbg !7887
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7887
  %4 = load float, float* %arrayidx2, align 4, !dbg !7887
  %5 = load float*, float** %r.addr, align 8, !dbg !7888
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7888
  store float %4, float* %arrayidx3, align 4, !dbg !7889
  %6 = load float*, float** %a.addr, align 8, !dbg !7890
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !7890
  %7 = load float, float* %arrayidx4, align 4, !dbg !7890
  %8 = load float*, float** %r.addr, align 8, !dbg !7891
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7891
  store float %7, float* %arrayidx5, align 4, !dbg !7892
  %9 = load float*, float** %a.addr, align 8, !dbg !7893
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !7893
  %10 = load float, float* %arrayidx6, align 4, !dbg !7893
  %11 = load float*, float** %r.addr, align 8, !dbg !7894
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !7894
  store float %10, float* %arrayidx7, align 4, !dbg !7895
  ret void, !dbg !7896
}

declare dso_local i32 @RE_rayobject_raycast(%struct.RayObject*, %struct.Isect*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ray_shadow_jitter(%struct.ShadeInput* %shi, %struct.LampRen* %lar, float* %lampco, float* %shadfac, %struct.Isect* %isec) #0 !dbg !7897 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %lampco.addr = alloca float*, align 8
  %shadfac.addr = alloca float*, align 8
  %isec.addr = alloca %struct.Isect*, align 8
  %jitlamp = alloca float*, align 8
  %fac = alloca float, align 4
  %div = alloca float, align 4
  %vec = alloca [3 x float], align 4
  %a = alloca i32, align 4
  %j = alloca i32, align 4
  %mask = alloca i32, align 4
  %point_hint = alloca %struct.RayHint, align 8
  %col = alloca [4 x float], align 16
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !7898, metadata !DIExpression()), !dbg !7899
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !7900, metadata !DIExpression()), !dbg !7901
  store float* %lampco, float** %lampco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lampco.addr, metadata !7902, metadata !DIExpression()), !dbg !7903
  store float* %shadfac, float** %shadfac.addr, align 8
  call void @llvm.dbg.declare(metadata float** %shadfac.addr, metadata !7904, metadata !DIExpression()), !dbg !7905
  store %struct.Isect* %isec, %struct.Isect** %isec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %isec.addr, metadata !7906, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.declare(metadata float** %jitlamp, metadata !7908, metadata !DIExpression()), !dbg !7909
  call void @llvm.dbg.declare(metadata float* %fac, metadata !7910, metadata !DIExpression()), !dbg !7911
  store float 0.000000e+00, float* %fac, align 4, !dbg !7911
  call void @llvm.dbg.declare(metadata float* %div, metadata !7912, metadata !DIExpression()), !dbg !7913
  store float 0.000000e+00, float* %div, align 4, !dbg !7913
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !7914, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7916, metadata !DIExpression()), !dbg !7917
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7918, metadata !DIExpression()), !dbg !7919
  store i32 -1, i32* %j, align 4, !dbg !7919
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7920, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.declare(metadata %struct.RayHint* %point_hint, metadata !7922, metadata !DIExpression()), !dbg !7923
  %0 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7924
  %mode = getelementptr inbounds %struct.Isect, %struct.Isect* %0, i32 0, i32 7, !dbg !7926
  %1 = load i32, i32* %mode, align 8, !dbg !7926
  %cmp = icmp eq i32 %1, 2, !dbg !7927
  br i1 %cmp, label %if.then, label %if.else, !dbg !7928

if.then:                                          ; preds = %entry
  %2 = load float*, float** %shadfac.addr, align 8, !dbg !7929
  %arrayidx = getelementptr inbounds float, float* %2, i64 3, !dbg !7929
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7931
  %3 = load float*, float** %shadfac.addr, align 8, !dbg !7932
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 2, !dbg !7932
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !7933
  %4 = load float*, float** %shadfac.addr, align 8, !dbg !7934
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7934
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !7935
  %5 = load float*, float** %shadfac.addr, align 8, !dbg !7936
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 0, !dbg !7936
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !7937
  br label %if.end, !dbg !7938

if.else:                                          ; preds = %entry
  %6 = load float*, float** %shadfac.addr, align 8, !dbg !7939
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 3, !dbg !7939
  store float 1.000000e+00, float* %arrayidx4, align 4, !dbg !7940
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store float 0.000000e+00, float* %fac, align 4, !dbg !7941
  %7 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7942
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7943
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 114, !dbg !7944
  %9 = load i16, i16* %thread, align 2, !dbg !7944
  %conv = sext i16 %9 to i32, !dbg !7943
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7945
  %xs = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 103, !dbg !7946
  %11 = load i32, i32* %xs, align 4, !dbg !7946
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7947
  %ys = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 104, !dbg !7948
  %13 = load i32, i32* %ys, align 8, !dbg !7948
  %call = call float* @give_jitter_plane(%struct.LampRen* %7, i32 %conv, i32 %11, i32 %13), !dbg !7949
  store float* %call, float** %jitlamp, align 8, !dbg !7950
  %14 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7951
  %ray_totsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %14, i32 0, i32 49, !dbg !7952
  %15 = load i16, i16* %ray_totsamp, align 8, !dbg !7952
  %conv5 = sext i16 %15 to i32, !dbg !7951
  store i32 %conv5, i32* %a, align 4, !dbg !7953
  %16 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7954
  %mask6 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %16, i32 0, i32 105, !dbg !7955
  %17 = load i32, i32* %mask6, align 4, !dbg !7955
  store i32 %17, i32* %mask, align 4, !dbg !7956
  %18 = load i32, i32* %a, align 4, !dbg !7957
  %cmp7 = icmp eq i32 %18, 4, !dbg !7959
  br i1 %cmp7, label %if.then9, label %if.else12, !dbg !7960

if.then9:                                         ; preds = %if.end
  %19 = load i32, i32* %mask, align 4, !dbg !7961
  %shr = ashr i32 %19, 4, !dbg !7962
  %20 = load i32, i32* %mask, align 4, !dbg !7963
  %shr10 = ashr i32 %20, 8, !dbg !7964
  %or = or i32 %shr, %shr10, !dbg !7965
  %21 = load i32, i32* %mask, align 4, !dbg !7966
  %or11 = or i32 %21, %or, !dbg !7966
  store i32 %or11, i32* %mask, align 4, !dbg !7966
  br label %if.end19, !dbg !7967

if.else12:                                        ; preds = %if.end
  %22 = load i32, i32* %a, align 4, !dbg !7968
  %cmp13 = icmp eq i32 %22, 9, !dbg !7970
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !7971

if.then15:                                        ; preds = %if.else12
  %23 = load i32, i32* %mask, align 4, !dbg !7972
  %shr16 = ashr i32 %23, 9, !dbg !7973
  %24 = load i32, i32* %mask, align 4, !dbg !7974
  %or17 = or i32 %24, %shr16, !dbg !7974
  store i32 %or17, i32* %mask, align 4, !dbg !7974
  br label %if.end18, !dbg !7975

if.end18:                                         ; preds = %if.then15, %if.else12
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then9
  %25 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7976
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %25, i32 0, i32 0, !dbg !7977
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7976
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7978
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 29, !dbg !7979
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7978
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay20), !dbg !7980
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7981
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 3, !dbg !7982
  %28 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7982
  %29 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7983
  call void @RE_instance_rotate_ray_start(%struct.ObjectInstanceRen* %28, %struct.Isect* %29), !dbg !7984
  %30 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7985
  %obi21 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %30, i32 0, i32 3, !dbg !7986
  %31 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi21, align 8, !dbg !7986
  %32 = bitcast %struct.ObjectInstanceRen* %31 to i8*, !dbg !7985
  %33 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7987
  %orig = getelementptr inbounds %struct.Isect, %struct.Isect* %33, i32 0, i32 16, !dbg !7988
  %ob = getelementptr inbounds %struct.anon, %struct.anon* %orig, i32 0, i32 0, !dbg !7989
  store i8* %32, i8** %ob, align 8, !dbg !7990
  %34 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7991
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %34, i32 0, i32 1, !dbg !7992
  %35 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7992
  %36 = bitcast %struct.VlakRen* %35 to i8*, !dbg !7991
  %37 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7993
  %orig22 = getelementptr inbounds %struct.Isect, %struct.Isect* %37, i32 0, i32 16, !dbg !7994
  %face = getelementptr inbounds %struct.anon, %struct.anon* %orig22, i32 0, i32 1, !dbg !7995
  store i8* %36, i8** %face, align 8, !dbg !7996
  %38 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !7997
  %39 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !7998
  %start23 = getelementptr inbounds %struct.Isect, %struct.Isect* %39, i32 0, i32 0, !dbg !7999
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %start23, i64 0, i64 0, !dbg !7998
  %40 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8000
  %start25 = getelementptr inbounds %struct.Isect, %struct.Isect* %40, i32 0, i32 0, !dbg !8001
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %start25, i64 0, i64 0, !dbg !8000
  call void @RE_rayobject_hint_bb(%struct.RayObject* %38, %struct.RayHint* %point_hint, float* %arraydecay24, float* %arraydecay26), !dbg !8002
  %41 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8003
  %hint = getelementptr inbounds %struct.Isect, %struct.Isect* %41, i32 0, i32 18, !dbg !8004
  store %struct.RayHint* %point_hint, %struct.RayHint** %hint, align 8, !dbg !8005
  br label %while.cond, !dbg !8006

while.cond:                                       ; preds = %if.end91, %if.then36, %if.end19
  %42 = load i32, i32* %a, align 4, !dbg !8007
  %dec = add nsw i32 %42, -1, !dbg !8007
  store i32 %dec, i32* %a, align 4, !dbg !8007
  %tobool = icmp ne i32 %42, 0, !dbg !8006
  br i1 %tobool, label %while.body, label %while.end, !dbg !8006

while.body:                                       ; preds = %while.cond
  %43 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !8008
  %and = and i32 %43, 1, !dbg !8011
  %tobool27 = icmp ne i32 %and, 0, !dbg !8011
  br i1 %tobool27, label %if.then28, label %if.end38, !dbg !8012

if.then28:                                        ; preds = %while.body
  %44 = load i32, i32* %j, align 4, !dbg !8013
  %inc = add nsw i32 %44, 1, !dbg !8013
  store i32 %inc, i32* %j, align 4, !dbg !8013
  %45 = load i32, i32* %j, align 4, !dbg !8015
  %46 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !8017
  %conv29 = sext i16 %46 to i32, !dbg !8018
  %cmp30 = icmp sge i32 %45, %conv29, !dbg !8019
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8020

if.then32:                                        ; preds = %if.then28
  store i32 0, i32* %j, align 4, !dbg !8021
  br label %if.end33, !dbg !8022

if.end33:                                         ; preds = %if.then32, %if.then28
  %47 = load i32, i32* %mask, align 4, !dbg !8023
  %48 = load i32, i32* %j, align 4, !dbg !8025
  %shl = shl i32 1, %48, !dbg !8026
  %and34 = and i32 %47, %shl, !dbg !8027
  %tobool35 = icmp ne i32 %and34, 0, !dbg !8027
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !8028

if.then36:                                        ; preds = %if.end33
  %49 = load float*, float** %jitlamp, align 8, !dbg !8029
  %add.ptr = getelementptr inbounds float, float* %49, i64 2, !dbg !8029
  store float* %add.ptr, float** %jitlamp, align 8, !dbg !8029
  br label %while.cond, !dbg !8031, !llvm.loop !8032

if.end37:                                         ; preds = %if.end33
  br label %if.end38, !dbg !8034

if.end38:                                         ; preds = %if.end37, %while.body
  %50 = load float*, float** %jitlamp, align 8, !dbg !8035
  %arrayidx39 = getelementptr inbounds float, float* %50, i64 0, !dbg !8035
  %51 = load float, float* %arrayidx39, align 4, !dbg !8035
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8036
  store float %51, float* %arrayidx40, align 4, !dbg !8037
  %52 = load float*, float** %jitlamp, align 8, !dbg !8038
  %arrayidx41 = getelementptr inbounds float, float* %52, i64 1, !dbg !8038
  %53 = load float, float* %arrayidx41, align 4, !dbg !8038
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !8039
  store float %53, float* %arrayidx42, align 4, !dbg !8040
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !8041
  store float 0.000000e+00, float* %arrayidx43, align 4, !dbg !8042
  %54 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8043
  %mat = getelementptr inbounds %struct.LampRen, %struct.LampRen* %54, i32 0, i32 64, !dbg !8044
  %arraydecay44 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !8043
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8045
  call void @mul_m3_v3([3 x float]* %arraydecay44, float* %arraydecay45), !dbg !8046
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8047
  %55 = load float, float* %arrayidx46, align 4, !dbg !8047
  %56 = load float*, float** %lampco.addr, align 8, !dbg !8048
  %arrayidx47 = getelementptr inbounds float, float* %56, i64 0, !dbg !8048
  %57 = load float, float* %arrayidx47, align 4, !dbg !8048
  %add = fadd float %55, %57, !dbg !8049
  %58 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8050
  %co48 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %58, i32 0, i32 29, !dbg !8051
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %co48, i64 0, i64 0, !dbg !8050
  %59 = load float, float* %arrayidx49, align 8, !dbg !8050
  %sub = fsub float %add, %59, !dbg !8052
  %60 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8053
  %dir = getelementptr inbounds %struct.Isect, %struct.Isect* %60, i32 0, i32 1, !dbg !8054
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !8053
  store float %sub, float* %arrayidx50, align 4, !dbg !8055
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !8056
  %61 = load float, float* %arrayidx51, align 4, !dbg !8056
  %62 = load float*, float** %lampco.addr, align 8, !dbg !8057
  %arrayidx52 = getelementptr inbounds float, float* %62, i64 1, !dbg !8057
  %63 = load float, float* %arrayidx52, align 4, !dbg !8057
  %add53 = fadd float %61, %63, !dbg !8058
  %64 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8059
  %co54 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %64, i32 0, i32 29, !dbg !8060
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %co54, i64 0, i64 1, !dbg !8059
  %65 = load float, float* %arrayidx55, align 4, !dbg !8059
  %sub56 = fsub float %add53, %65, !dbg !8061
  %66 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8062
  %dir57 = getelementptr inbounds %struct.Isect, %struct.Isect* %66, i32 0, i32 1, !dbg !8063
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %dir57, i64 0, i64 1, !dbg !8062
  store float %sub56, float* %arrayidx58, align 4, !dbg !8064
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !8065
  %67 = load float, float* %arrayidx59, align 4, !dbg !8065
  %68 = load float*, float** %lampco.addr, align 8, !dbg !8066
  %arrayidx60 = getelementptr inbounds float, float* %68, i64 2, !dbg !8066
  %69 = load float, float* %arrayidx60, align 4, !dbg !8066
  %add61 = fadd float %67, %69, !dbg !8067
  %70 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8068
  %co62 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %70, i32 0, i32 29, !dbg !8069
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %co62, i64 0, i64 2, !dbg !8068
  %71 = load float, float* %arrayidx63, align 8, !dbg !8068
  %sub64 = fsub float %add61, %71, !dbg !8070
  %72 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8071
  %dir65 = getelementptr inbounds %struct.Isect, %struct.Isect* %72, i32 0, i32 1, !dbg !8072
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %dir65, i64 0, i64 2, !dbg !8071
  store float %sub64, float* %arrayidx66, align 4, !dbg !8073
  %73 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8074
  %obi67 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %73, i32 0, i32 3, !dbg !8075
  %74 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi67, align 8, !dbg !8075
  %75 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8076
  call void @RE_instance_rotate_ray_dir(%struct.ObjectInstanceRen* %74, %struct.Isect* %75), !dbg !8077
  %76 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8078
  %dist = getelementptr inbounds %struct.Isect, %struct.Isect* %76, i32 0, i32 2, !dbg !8079
  store float 1.000000e+00, float* %dist, align 8, !dbg !8080
  %77 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8081
  %check = getelementptr inbounds %struct.Isect, %struct.Isect* %77, i32 0, i32 10, !dbg !8082
  store i32 1, i32* %check, align 4, !dbg !8083
  %78 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8084
  %skip = getelementptr inbounds %struct.Isect, %struct.Isect* %78, i32 0, i32 9, !dbg !8085
  store i32 2, i32* %skip, align 8, !dbg !8086
  %79 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8087
  %mode68 = getelementptr inbounds %struct.Isect, %struct.Isect* %79, i32 0, i32 7, !dbg !8089
  %80 = load i32, i32* %mode68, align 8, !dbg !8089
  %cmp69 = icmp eq i32 %80, 2, !dbg !8090
  br i1 %cmp69, label %if.then71, label %if.else85, !dbg !8091

if.then71:                                        ; preds = %if.end38
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !8092, metadata !DIExpression()), !dbg !8094
  %81 = bitcast [4 x float]* %col to i8*, !dbg !8094
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %81, i8* align 16 bitcast ([4 x float]* @__const.ray_shadow_jitter.col to i8*), i64 16, i1 false), !dbg !8094
  %82 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8095
  %83 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8096
  %arraydecay72 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8097
  call void @ray_trace_shadow_tra(%struct.Isect* %82, %struct.ShadeInput* %83, i32 10, i32 0, float* %arraydecay72), !dbg !8098
  %arrayidx73 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8099
  %84 = load float, float* %arrayidx73, align 16, !dbg !8099
  %85 = load float*, float** %shadfac.addr, align 8, !dbg !8100
  %arrayidx74 = getelementptr inbounds float, float* %85, i64 0, !dbg !8100
  %86 = load float, float* %arrayidx74, align 4, !dbg !8101
  %add75 = fadd float %86, %84, !dbg !8101
  store float %add75, float* %arrayidx74, align 4, !dbg !8101
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !8102
  %87 = load float, float* %arrayidx76, align 4, !dbg !8102
  %88 = load float*, float** %shadfac.addr, align 8, !dbg !8103
  %arrayidx77 = getelementptr inbounds float, float* %88, i64 1, !dbg !8103
  %89 = load float, float* %arrayidx77, align 4, !dbg !8104
  %add78 = fadd float %89, %87, !dbg !8104
  store float %add78, float* %arrayidx77, align 4, !dbg !8104
  %arrayidx79 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !8105
  %90 = load float, float* %arrayidx79, align 8, !dbg !8105
  %91 = load float*, float** %shadfac.addr, align 8, !dbg !8106
  %arrayidx80 = getelementptr inbounds float, float* %91, i64 2, !dbg !8106
  %92 = load float, float* %arrayidx80, align 4, !dbg !8107
  %add81 = fadd float %92, %90, !dbg !8107
  store float %add81, float* %arrayidx80, align 4, !dbg !8107
  %arrayidx82 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !8108
  %93 = load float, float* %arrayidx82, align 4, !dbg !8108
  %94 = load float*, float** %shadfac.addr, align 8, !dbg !8109
  %arrayidx83 = getelementptr inbounds float, float* %94, i64 3, !dbg !8109
  %95 = load float, float* %arrayidx83, align 4, !dbg !8110
  %add84 = fadd float %95, %93, !dbg !8110
  store float %add84, float* %arrayidx83, align 4, !dbg !8110
  br label %if.end91, !dbg !8111

if.else85:                                        ; preds = %if.end38
  %96 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !8112
  %97 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8114
  %call86 = call i32 @RE_rayobject_raycast(%struct.RayObject* %96, %struct.Isect* %97), !dbg !8115
  %tobool87 = icmp ne i32 %call86, 0, !dbg !8115
  br i1 %tobool87, label %if.then88, label %if.end90, !dbg !8116

if.then88:                                        ; preds = %if.else85
  %98 = load float, float* %fac, align 4, !dbg !8117
  %add89 = fadd float %98, 1.000000e+00, !dbg !8117
  store float %add89, float* %fac, align 4, !dbg !8117
  br label %if.end90, !dbg !8118

if.end90:                                         ; preds = %if.then88, %if.else85
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then71
  %99 = load float, float* %div, align 4, !dbg !8119
  %add92 = fadd float %99, 1.000000e+00, !dbg !8119
  store float %add92, float* %div, align 4, !dbg !8119
  %100 = load float*, float** %jitlamp, align 8, !dbg !8120
  %add.ptr93 = getelementptr inbounds float, float* %100, i64 2, !dbg !8120
  store float* %add.ptr93, float** %jitlamp, align 8, !dbg !8120
  br label %while.cond, !dbg !8006, !llvm.loop !8032

while.end:                                        ; preds = %while.cond
  %101 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !8121
  %mode94 = getelementptr inbounds %struct.Isect, %struct.Isect* %101, i32 0, i32 7, !dbg !8123
  %102 = load i32, i32* %mode94, align 8, !dbg !8123
  %cmp95 = icmp eq i32 %102, 2, !dbg !8124
  br i1 %cmp95, label %if.then97, label %if.else106, !dbg !8125

if.then97:                                        ; preds = %while.end
  %103 = load float, float* %div, align 4, !dbg !8126
  %104 = load float*, float** %shadfac.addr, align 8, !dbg !8128
  %arrayidx98 = getelementptr inbounds float, float* %104, i64 0, !dbg !8128
  %105 = load float, float* %arrayidx98, align 4, !dbg !8129
  %div99 = fdiv float %105, %103, !dbg !8129
  store float %div99, float* %arrayidx98, align 4, !dbg !8129
  %106 = load float, float* %div, align 4, !dbg !8130
  %107 = load float*, float** %shadfac.addr, align 8, !dbg !8131
  %arrayidx100 = getelementptr inbounds float, float* %107, i64 1, !dbg !8131
  %108 = load float, float* %arrayidx100, align 4, !dbg !8132
  %div101 = fdiv float %108, %106, !dbg !8132
  store float %div101, float* %arrayidx100, align 4, !dbg !8132
  %109 = load float, float* %div, align 4, !dbg !8133
  %110 = load float*, float** %shadfac.addr, align 8, !dbg !8134
  %arrayidx102 = getelementptr inbounds float, float* %110, i64 2, !dbg !8134
  %111 = load float, float* %arrayidx102, align 4, !dbg !8135
  %div103 = fdiv float %111, %109, !dbg !8135
  store float %div103, float* %arrayidx102, align 4, !dbg !8135
  %112 = load float, float* %div, align 4, !dbg !8136
  %113 = load float*, float** %shadfac.addr, align 8, !dbg !8137
  %arrayidx104 = getelementptr inbounds float, float* %113, i64 3, !dbg !8137
  %114 = load float, float* %arrayidx104, align 4, !dbg !8138
  %div105 = fdiv float %114, %112, !dbg !8138
  store float %div105, float* %arrayidx104, align 4, !dbg !8138
  br label %if.end120, !dbg !8139

if.else106:                                       ; preds = %while.end
  %115 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8140
  %ray_samp_type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %115, i32 0, i32 47, !dbg !8143
  %116 = load i16, i16* %ray_samp_type, align 4, !dbg !8143
  %conv107 = sext i16 %116 to i32, !dbg !8140
  %and108 = and i32 %conv107, 2, !dbg !8144
  %tobool109 = icmp ne i32 %and108, 0, !dbg !8144
  br i1 %tobool109, label %if.then110, label %if.else115, !dbg !8145

if.then110:                                       ; preds = %if.else106
  %117 = load float, float* %fac, align 4, !dbg !8146
  %118 = load float, float* %div, align 4, !dbg !8147
  %div111 = fdiv float %117, %118, !dbg !8148
  %sub112 = fsub float 1.000000e+00, %div111, !dbg !8149
  %call113 = call float @sqrtf(float %sub112) #5, !dbg !8150
  %119 = load float*, float** %shadfac.addr, align 8, !dbg !8151
  %arrayidx114 = getelementptr inbounds float, float* %119, i64 3, !dbg !8151
  store float %call113, float* %arrayidx114, align 4, !dbg !8152
  br label %if.end119, !dbg !8151

if.else115:                                       ; preds = %if.else106
  %120 = load float, float* %fac, align 4, !dbg !8153
  %121 = load float, float* %div, align 4, !dbg !8154
  %div116 = fdiv float %120, %121, !dbg !8155
  %sub117 = fsub float 1.000000e+00, %div116, !dbg !8156
  %122 = load float*, float** %shadfac.addr, align 8, !dbg !8157
  %arrayidx118 = getelementptr inbounds float, float* %122, i64 3, !dbg !8157
  store float %sub117, float* %arrayidx118, align 4, !dbg !8158
  br label %if.end119

if.end119:                                        ; preds = %if.else115, %if.then110
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then97
  ret void, !dbg !8159
}

; Function Attrs: noinline nounwind uwtable
define internal void @RE_rayobject_config_control(%struct.RayObject* %r, %struct.Render* %re) #0 !dbg !8160 {
entry:
  %r.addr = alloca %struct.RayObject*, align 8
  %re.addr = alloca %struct.Render*, align 8
  store %struct.RayObject* %r, %struct.RayObject** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RayObject** %r.addr, metadata !8163, metadata !DIExpression()), !dbg !8164
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8165, metadata !DIExpression()), !dbg !8166
  %0 = load %struct.RayObject*, %struct.RayObject** %r.addr, align 8, !dbg !8167
  %1 = ptrtoint %struct.RayObject* %0 to i64, !dbg !8167
  %and = and i64 %1, 3, !dbg !8167
  %cmp = icmp eq i64 %and, 2, !dbg !8167
  br i1 %cmp, label %if.then, label %if.end, !dbg !8169

if.then:                                          ; preds = %entry
  %2 = load %struct.RayObject*, %struct.RayObject** %r.addr, align 8, !dbg !8170
  %3 = ptrtoint %struct.RayObject* %2 to i64, !dbg !8170
  %and1 = and i64 %3, -4, !dbg !8170
  %4 = inttoptr i64 %and1 to %struct.RayObject*, !dbg !8170
  store %struct.RayObject* %4, %struct.RayObject** %r.addr, align 8, !dbg !8172
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8173
  %6 = bitcast %struct.Render* %5 to i8*, !dbg !8173
  %7 = load %struct.RayObject*, %struct.RayObject** %r.addr, align 8, !dbg !8174
  %control = getelementptr inbounds %struct.RayObject, %struct.RayObject* %7, i32 0, i32 1, !dbg !8175
  %data = getelementptr inbounds %struct.RayObjectControl, %struct.RayObjectControl* %control, i32 0, i32 0, !dbg !8176
  store i8* %6, i8** %data, align 8, !dbg !8177
  %8 = load %struct.RayObject*, %struct.RayObject** %r.addr, align 8, !dbg !8178
  %control2 = getelementptr inbounds %struct.RayObject, %struct.RayObject* %8, i32 0, i32 1, !dbg !8179
  %test_break = getelementptr inbounds %struct.RayObjectControl, %struct.RayObjectControl* %control2, i32 0, i32 1, !dbg !8180
  store i32 (i8*)* @test_break, i32 (i8*)** %test_break, align 8, !dbg !8181
  br label %if.end, !dbg !8182

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8183
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @is_raytraceable(%struct.Render* %re, %struct.ObjectInstanceRen* %obi) #0 !dbg !8184 {
entry:
  %retval = alloca i32, align 4
  %re.addr = alloca %struct.Render*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %v = alloca i32, align 4
  %obr = alloca %struct.ObjectRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8187, metadata !DIExpression()), !dbg !8188
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !8189, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.declare(metadata i32* %v, metadata !8191, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !8193, metadata !DIExpression()), !dbg !8194
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8195
  %obr1 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i32 0, i32 2, !dbg !8196
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr1, align 8, !dbg !8196
  store %struct.ObjectRen* %1, %struct.ObjectRen** %obr, align 8, !dbg !8194
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8197
  %excludeob = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 78, !dbg !8199
  %3 = load %struct.Object*, %struct.Object** %excludeob, align 8, !dbg !8199
  %tobool = icmp ne %struct.Object* %3, null, !dbg !8197
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8200

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8201
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %4, i32 0, i32 2, !dbg !8202
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8202
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8203
  %excludeob2 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 78, !dbg !8204
  %7 = load %struct.Object*, %struct.Object** %excludeob2, align 8, !dbg !8204
  %cmp = icmp eq %struct.Object* %5, %7, !dbg !8205
  br i1 %cmp, label %if.then, label %if.end, !dbg !8206

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !8207
  br label %return, !dbg !8207

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %v, align 4, !dbg !8208
  br label %for.cond, !dbg !8210

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %v, align 4, !dbg !8211
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8213
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 11, !dbg !8214
  %10 = load i32, i32* %totvlak, align 4, !dbg !8214
  %cmp3 = icmp slt i32 %8, %10, !dbg !8215
  br i1 %cmp3, label %for.body, label %for.end, !dbg !8216

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !8217, metadata !DIExpression()), !dbg !8219
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8220
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %11, i32 0, i32 19, !dbg !8221
  %12 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !8221
  %13 = load i32, i32* %v, align 4, !dbg !8222
  %shr = ashr i32 %13, 8, !dbg !8223
  %idxprom = sext i32 %shr to i64, !dbg !8220
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %12, i64 %idxprom, !dbg !8220
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 0, !dbg !8224
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !8224
  %15 = load i32, i32* %v, align 4, !dbg !8225
  %and = and i32 %15, 255, !dbg !8226
  %idx.ext = sext i32 %and to i64, !dbg !8227
  %add.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i64 %idx.ext, !dbg !8227
  store %struct.VlakRen* %add.ptr, %struct.VlakRen** %vlr, align 8, !dbg !8219
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8228
  %17 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8230
  %call = call i32 @is_raytraceable_vlr(%struct.Render* %16, %struct.VlakRen* %17), !dbg !8231
  %tobool4 = icmp ne i32 %call, 0, !dbg !8231
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !8232

if.then5:                                         ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !8233
  br label %return, !dbg !8233

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !8234

for.inc:                                          ; preds = %if.end6
  %18 = load i32, i32* %v, align 4, !dbg !8235
  %inc = add nsw i32 %18, 1, !dbg !8235
  store i32 %inc, i32* %v, align 4, !dbg !8235
  br label %for.cond, !dbg !8236, !llvm.loop !8237

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8239
  br label %return, !dbg !8239

return:                                           ; preds = %for.end, %if.then5, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !8240
  ret i32 %19, !dbg !8240
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @has_special_rayobject(%struct.Render* %re, %struct.ObjectInstanceRen* %obi) #0 !dbg !8241 {
entry:
  %retval = alloca i8, align 1
  %re.addr = alloca %struct.Render*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %v = alloca i32, align 4
  %faces = alloca i32, align 4
  %vlr = alloca %struct.VlakRen*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8244, metadata !DIExpression()), !dbg !8245
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8248
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i32 0, i32 11, !dbg !8250
  %1 = load i16, i16* %flag, align 8, !dbg !8250
  %conv = sext i16 %1 to i32, !dbg !8248
  %and = and i32 %conv, 3, !dbg !8251
  %tobool = icmp ne i32 %and, 0, !dbg !8251
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !8252

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8253
  %r = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 45, !dbg !8254
  %raytrace_options = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 48, !dbg !8255
  %3 = load i32, i32* %raytrace_options, align 4, !dbg !8255
  %and1 = and i32 %3, 2, !dbg !8256
  %tobool2 = icmp ne i32 %and1, 0, !dbg !8256
  br i1 %tobool2, label %if.then, label %if.end13, !dbg !8257

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !8258, metadata !DIExpression()), !dbg !8260
  %4 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8261
  %obr3 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %4, i32 0, i32 2, !dbg !8262
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr3, align 8, !dbg !8262
  store %struct.ObjectRen* %5, %struct.ObjectRen** %obr, align 8, !dbg !8260
  call void @llvm.dbg.declare(metadata i32* %v, metadata !8263, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.declare(metadata i32* %faces, metadata !8265, metadata !DIExpression()), !dbg !8266
  store i32 0, i32* %faces, align 4, !dbg !8266
  store i32 0, i32* %v, align 4, !dbg !8267
  br label %for.cond, !dbg !8269

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %v, align 4, !dbg !8270
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8272
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %7, i32 0, i32 11, !dbg !8273
  %8 = load i32, i32* %totvlak, align 4, !dbg !8273
  %cmp = icmp slt i32 %6, %8, !dbg !8274
  br i1 %cmp, label %for.body, label %for.end, !dbg !8275

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !8276, metadata !DIExpression()), !dbg !8278
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8279
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 19, !dbg !8280
  %10 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !8280
  %11 = load i32, i32* %v, align 4, !dbg !8281
  %shr = ashr i32 %11, 8, !dbg !8282
  %idxprom = sext i32 %shr to i64, !dbg !8279
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %10, i64 %idxprom, !dbg !8279
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 0, !dbg !8283
  %12 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !8283
  %13 = load i32, i32* %v, align 4, !dbg !8284
  %and5 = and i32 %13, 255, !dbg !8285
  %idx.ext = sext i32 %and5 to i64, !dbg !8286
  %add.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %12, i64 %idx.ext, !dbg !8286
  store %struct.VlakRen* %add.ptr, %struct.VlakRen** %vlr, align 8, !dbg !8278
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8287
  %15 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8289
  %call = call i32 @is_raytraceable_vlr(%struct.Render* %14, %struct.VlakRen* %15), !dbg !8290
  %tobool6 = icmp ne i32 %call, 0, !dbg !8290
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !8291

if.then7:                                         ; preds = %for.body
  %16 = load i32, i32* %faces, align 4, !dbg !8292
  %inc = add nsw i32 %16, 1, !dbg !8292
  store i32 %inc, i32* %faces, align 4, !dbg !8292
  %17 = load i32, i32* %faces, align 4, !dbg !8294
  %cmp8 = icmp sgt i32 %17, 4, !dbg !8296
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !8297

if.then10:                                        ; preds = %if.then7
  store i8 1, i8* %retval, align 1, !dbg !8298
  br label %return, !dbg !8298

if.end:                                           ; preds = %if.then7
  br label %if.end11, !dbg !8299

if.end11:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !8300

for.inc:                                          ; preds = %if.end11
  %18 = load i32, i32* %v, align 4, !dbg !8301
  %inc12 = add nsw i32 %18, 1, !dbg !8301
  store i32 %inc12, i32* %v, align 4, !dbg !8301
  br label %for.cond, !dbg !8302, !llvm.loop !8303

for.end:                                          ; preds = %for.cond
  br label %if.end13, !dbg !8305

if.end13:                                         ; preds = %for.end, %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !8306
  br label %return, !dbg !8306

return:                                           ; preds = %if.end13, %if.then10
  %19 = load i8, i8* %retval, align 1, !dbg !8307
  ret i8 %19, !dbg !8307
}

declare dso_local %struct.RayObject* @RE_rayobject_empty_create() #2

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !8308 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8311, metadata !DIExpression()), !dbg !8312
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  %0 = load float*, float** %a.addr, align 8, !dbg !8315
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8315
  %1 = load float, float* %arrayidx, align 4, !dbg !8315
  %2 = load float*, float** %b.addr, align 8, !dbg !8316
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8316
  %3 = load float, float* %arrayidx1, align 4, !dbg !8316
  %mul = fmul float %1, %3, !dbg !8317
  %4 = load float*, float** %a.addr, align 8, !dbg !8318
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8318
  %5 = load float, float* %arrayidx2, align 4, !dbg !8318
  %6 = load float*, float** %b.addr, align 8, !dbg !8319
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8319
  %7 = load float, float* %arrayidx3, align 4, !dbg !8319
  %mul4 = fmul float %5, %7, !dbg !8320
  %add = fadd float %mul, %mul4, !dbg !8321
  %8 = load float*, float** %a.addr, align 8, !dbg !8322
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8322
  %9 = load float, float* %arrayidx5, align 4, !dbg !8322
  %10 = load float*, float** %b.addr, align 8, !dbg !8323
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8323
  %11 = load float, float* %arrayidx6, align 4, !dbg !8323
  %mul7 = fmul float %9, %11, !dbg !8324
  %add8 = fadd float %add, %mul7, !dbg !8325
  ret float %add8, !dbg !8326
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !8327 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8330, metadata !DIExpression()), !dbg !8331
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8332, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.declare(metadata float* %d, metadata !8334, metadata !DIExpression()), !dbg !8335
  %0 = load float*, float** %a.addr, align 8, !dbg !8336
  %1 = load float*, float** %a.addr, align 8, !dbg !8337
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !8338
  store float %call, float* %d, align 4, !dbg !8335
  %2 = load float, float* %d, align 4, !dbg !8339
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !8341
  br i1 %cmp, label %if.then, label %if.else, !dbg !8342

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !8343
  %call1 = call float @sqrtf(float %3) #5, !dbg !8345
  store float %call1, float* %d, align 4, !dbg !8346
  %4 = load float*, float** %r.addr, align 8, !dbg !8347
  %5 = load float*, float** %a.addr, align 8, !dbg !8348
  %6 = load float, float* %d, align 4, !dbg !8349
  %div = fdiv float 1.000000e+00, %6, !dbg !8350
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !8351
  br label %if.end, !dbg !8352

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !8353
  call void @zero_v3(float* %7), !dbg !8355
  store float 0.000000e+00, float* %d, align 4, !dbg !8356
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !8357
  ret float %8, !dbg !8358
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !8359 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8364, metadata !DIExpression()), !dbg !8365
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8366, metadata !DIExpression()), !dbg !8367
  %0 = load float*, float** %a.addr, align 8, !dbg !8368
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8368
  %1 = load float, float* %arrayidx, align 4, !dbg !8368
  %2 = load float, float* %f.addr, align 4, !dbg !8369
  %mul = fmul float %1, %2, !dbg !8370
  %3 = load float*, float** %r.addr, align 8, !dbg !8371
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !8371
  store float %mul, float* %arrayidx1, align 4, !dbg !8372
  %4 = load float*, float** %a.addr, align 8, !dbg !8373
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8373
  %5 = load float, float* %arrayidx2, align 4, !dbg !8373
  %6 = load float, float* %f.addr, align 4, !dbg !8374
  %mul3 = fmul float %5, %6, !dbg !8375
  %7 = load float*, float** %r.addr, align 8, !dbg !8376
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8376
  store float %mul3, float* %arrayidx4, align 4, !dbg !8377
  %8 = load float*, float** %a.addr, align 8, !dbg !8378
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8378
  %9 = load float, float* %arrayidx5, align 4, !dbg !8378
  %10 = load float, float* %f.addr, align 4, !dbg !8379
  %mul6 = fmul float %9, %10, !dbg !8380
  %11 = load float*, float** %r.addr, align 8, !dbg !8381
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !8381
  store float %mul6, float* %arrayidx7, align 4, !dbg !8382
  ret void, !dbg !8383
}

; Function Attrs: noinline nounwind uwtable
define internal void @axis_dominant_v3(i32* %r_axis_a, i32* %r_axis_b, float* %axis) #0 !dbg !8384 {
entry:
  %r_axis_a.addr = alloca i32*, align 8
  %r_axis_b.addr = alloca i32*, align 8
  %axis.addr = alloca float*, align 8
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %zn = alloca float, align 4
  store i32* %r_axis_a, i32** %r_axis_a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_axis_a.addr, metadata !8388, metadata !DIExpression()), !dbg !8389
  store i32* %r_axis_b, i32** %r_axis_b.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_axis_b.addr, metadata !8390, metadata !DIExpression()), !dbg !8391
  store float* %axis, float** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis.addr, metadata !8392, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.declare(metadata float* %xn, metadata !8394, metadata !DIExpression()), !dbg !8395
  %0 = load float*, float** %axis.addr, align 8, !dbg !8396
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8396
  %1 = load float, float* %arrayidx, align 4, !dbg !8396
  %2 = call float @llvm.fabs.f32(float %1), !dbg !8397
  store float %2, float* %xn, align 4, !dbg !8395
  call void @llvm.dbg.declare(metadata float* %yn, metadata !8398, metadata !DIExpression()), !dbg !8399
  %3 = load float*, float** %axis.addr, align 8, !dbg !8400
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !8400
  %4 = load float, float* %arrayidx1, align 4, !dbg !8400
  %5 = call float @llvm.fabs.f32(float %4), !dbg !8401
  store float %5, float* %yn, align 4, !dbg !8399
  call void @llvm.dbg.declare(metadata float* %zn, metadata !8402, metadata !DIExpression()), !dbg !8403
  %6 = load float*, float** %axis.addr, align 8, !dbg !8404
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 2, !dbg !8404
  %7 = load float, float* %arrayidx2, align 4, !dbg !8404
  %8 = call float @llvm.fabs.f32(float %7), !dbg !8405
  store float %8, float* %zn, align 4, !dbg !8403
  %9 = load float, float* %zn, align 4, !dbg !8406
  %10 = load float, float* %xn, align 4, !dbg !8408
  %cmp = fcmp oge float %9, %10, !dbg !8409
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8410

land.lhs.true:                                    ; preds = %entry
  %11 = load float, float* %zn, align 4, !dbg !8411
  %12 = load float, float* %yn, align 4, !dbg !8412
  %cmp3 = fcmp oge float %11, %12, !dbg !8413
  br i1 %cmp3, label %if.then, label %if.else, !dbg !8414

if.then:                                          ; preds = %land.lhs.true
  %13 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !8415
  store i32 0, i32* %13, align 4, !dbg !8417
  %14 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !8418
  store i32 1, i32* %14, align 4, !dbg !8419
  br label %if.end9, !dbg !8420

if.else:                                          ; preds = %land.lhs.true, %entry
  %15 = load float, float* %yn, align 4, !dbg !8421
  %16 = load float, float* %xn, align 4, !dbg !8423
  %cmp4 = fcmp oge float %15, %16, !dbg !8424
  br i1 %cmp4, label %land.lhs.true5, label %if.else8, !dbg !8425

land.lhs.true5:                                   ; preds = %if.else
  %17 = load float, float* %yn, align 4, !dbg !8426
  %18 = load float, float* %zn, align 4, !dbg !8427
  %cmp6 = fcmp oge float %17, %18, !dbg !8428
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !8429

if.then7:                                         ; preds = %land.lhs.true5
  %19 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !8430
  store i32 0, i32* %19, align 4, !dbg !8432
  %20 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !8433
  store i32 2, i32* %20, align 4, !dbg !8434
  br label %if.end, !dbg !8435

if.else8:                                         ; preds = %land.lhs.true5, %if.else
  %21 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !8436
  store i32 1, i32* %21, align 4, !dbg !8438
  %22 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !8439
  store i32 2, i32* %22, align 4, !dbg !8440
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then7
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  ret void, !dbg !8441
}

declare dso_local void @mul_v3_m3v3(float*, [3 x float]*, float*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #1

; Function Attrs: nounwind
declare dso_local float @powf(float, float) #4

; Function Attrs: noinline nounwind uwtable
define internal %struct.QMCSampler* @get_thread_qmcsampler(%struct.Render* %re, i32 %thread, i32 %type, i32 %tot) #0 !dbg !8442 {
entry:
  %retval = alloca %struct.QMCSampler*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %thread.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %tot.addr = alloca i32, align 4
  %qsa = alloca %struct.QMCSampler*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8445, metadata !DIExpression()), !dbg !8446
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !8447, metadata !DIExpression()), !dbg !8448
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8449, metadata !DIExpression()), !dbg !8450
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !8451, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa, metadata !8453, metadata !DIExpression()), !dbg !8454
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8455
  %qmcsamplers = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 41, !dbg !8457
  %1 = load %struct.ListBase*, %struct.ListBase** %qmcsamplers, align 8, !dbg !8457
  %2 = load i32, i32* %thread.addr, align 4, !dbg !8458
  %idxprom = sext i32 %2 to i64, !dbg !8455
  %arrayidx = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i64 %idxprom, !dbg !8455
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arrayidx, i32 0, i32 0, !dbg !8459
  %3 = load i8*, i8** %first, align 8, !dbg !8459
  %4 = bitcast i8* %3 to %struct.QMCSampler*, !dbg !8455
  store %struct.QMCSampler* %4, %struct.QMCSampler** %qsa, align 8, !dbg !8460
  br label %for.cond, !dbg !8461

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !8462
  %tobool = icmp ne %struct.QMCSampler* %5, null, !dbg !8464
  br i1 %tobool, label %for.body, label %for.end, !dbg !8464

for.body:                                         ; preds = %for.cond
  %6 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !8465
  %type1 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %6, i32 0, i32 2, !dbg !8468
  %7 = load i32, i32* %type1, align 8, !dbg !8468
  %8 = load i32, i32* %type.addr, align 4, !dbg !8469
  %cmp = icmp eq i32 %7, %8, !dbg !8470
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8471

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !8472
  %tot2 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %9, i32 0, i32 3, !dbg !8473
  %10 = load i32, i32* %tot2, align 4, !dbg !8473
  %11 = load i32, i32* %tot.addr, align 4, !dbg !8474
  %cmp3 = icmp eq i32 %10, %11, !dbg !8475
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !8476

land.lhs.true4:                                   ; preds = %land.lhs.true
  %12 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !8477
  %used = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %12, i32 0, i32 4, !dbg !8478
  %13 = load i32, i32* %used, align 8, !dbg !8478
  %tobool5 = icmp ne i32 %13, 0, !dbg !8477
  br i1 %tobool5, label %if.end, label %if.then, !dbg !8479

if.then:                                          ; preds = %land.lhs.true4
  %14 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !8480
  %used6 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %14, i32 0, i32 4, !dbg !8482
  store i32 1, i32* %used6, align 8, !dbg !8483
  %15 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !8484
  store %struct.QMCSampler* %15, %struct.QMCSampler** %retval, align 8, !dbg !8485
  br label %return, !dbg !8485

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8486

for.inc:                                          ; preds = %if.end
  %16 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !8487
  %next = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %16, i32 0, i32 0, !dbg !8488
  %17 = load %struct.QMCSampler*, %struct.QMCSampler** %next, align 8, !dbg !8488
  store %struct.QMCSampler* %17, %struct.QMCSampler** %qsa, align 8, !dbg !8489
  br label %for.cond, !dbg !8490, !llvm.loop !8491

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %type.addr, align 4, !dbg !8493
  %19 = load i32, i32* %tot.addr, align 4, !dbg !8494
  %call = call %struct.QMCSampler* @QMC_initSampler(i32 %18, i32 %19), !dbg !8495
  store %struct.QMCSampler* %call, %struct.QMCSampler** %qsa, align 8, !dbg !8496
  %20 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !8497
  %used7 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %20, i32 0, i32 4, !dbg !8498
  store i32 1, i32* %used7, align 8, !dbg !8499
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8500
  %qmcsamplers8 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 41, !dbg !8501
  %22 = load %struct.ListBase*, %struct.ListBase** %qmcsamplers8, align 8, !dbg !8501
  %23 = load i32, i32* %thread.addr, align 4, !dbg !8502
  %idxprom9 = sext i32 %23 to i64, !dbg !8500
  %arrayidx10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %22, i64 %idxprom9, !dbg !8500
  %24 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !8503
  %25 = bitcast %struct.QMCSampler* %24 to i8*, !dbg !8503
  call void @BLI_addtail(%struct.ListBase* %arrayidx10, i8* %25), !dbg !8504
  %26 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !8505
  store %struct.QMCSampler* %26, %struct.QMCSampler** %retval, align 8, !dbg !8506
  br label %return, !dbg !8506

return:                                           ; preds = %for.end, %if.then
  %27 = load %struct.QMCSampler*, %struct.QMCSampler** %retval, align 8, !dbg !8507
  ret %struct.QMCSampler* %27, !dbg !8507
}

; Function Attrs: noinline nounwind uwtable
define internal void @QMC_initPixel(%struct.QMCSampler* %qsa, i32 %thread) #0 !dbg !8508 {
entry:
  %qsa.addr = alloca %struct.QMCSampler*, align 8
  %thread.addr = alloca i32, align 4
  %ht_invprimes = alloca [2 x double], align 16
  %ht_nums = alloca [2 x double], align 16
  %r = alloca [2 x double], align 16
  %i = alloca i32, align 4
  store %struct.QMCSampler* %qsa, %struct.QMCSampler** %qsa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa.addr, metadata !8511, metadata !DIExpression()), !dbg !8512
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !8513, metadata !DIExpression()), !dbg !8514
  %0 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !8515
  %type = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %0, i32 0, i32 2, !dbg !8517
  %1 = load i32, i32* %type, align 8, !dbg !8517
  %cmp = icmp eq i32 %1, 2, !dbg !8518
  br i1 %cmp, label %if.then, label %if.else, !dbg !8519

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %thread.addr, align 4, !dbg !8520
  %call = call float @BLI_thread_frand(i32 %2), !dbg !8522
  %mul = fmul float 5.000000e-01, %call, !dbg !8523
  %conv = fpext float %mul to double, !dbg !8524
  %3 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !8525
  %offs = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %3, i32 0, i32 6, !dbg !8526
  %4 = load i32, i32* %thread.addr, align 4, !dbg !8527
  %idxprom = sext i32 %4 to i64, !dbg !8525
  %arrayidx = getelementptr inbounds [1 x [2 x double]], [1 x [2 x double]]* %offs, i64 0, i64 %idxprom, !dbg !8525
  %arrayidx1 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx, i64 0, i64 0, !dbg !8525
  store double %conv, double* %arrayidx1, align 8, !dbg !8528
  %5 = load i32, i32* %thread.addr, align 4, !dbg !8529
  %call2 = call float @BLI_thread_frand(i32 %5), !dbg !8530
  %mul3 = fmul float 5.000000e-01, %call2, !dbg !8531
  %conv4 = fpext float %mul3 to double, !dbg !8532
  %6 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !8533
  %offs5 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %6, i32 0, i32 6, !dbg !8534
  %7 = load i32, i32* %thread.addr, align 4, !dbg !8535
  %idxprom6 = sext i32 %7 to i64, !dbg !8533
  %arrayidx7 = getelementptr inbounds [1 x [2 x double]], [1 x [2 x double]]* %offs5, i64 0, i64 %idxprom6, !dbg !8533
  %arrayidx8 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx7, i64 0, i64 1, !dbg !8533
  store double %conv4, double* %arrayidx8, align 8, !dbg !8536
  br label %if.end, !dbg !8537

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x double]* %ht_invprimes, metadata !8538, metadata !DIExpression()), !dbg !8541
  call void @llvm.dbg.declare(metadata [2 x double]* %ht_nums, metadata !8542, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.declare(metadata [2 x double]* %r, metadata !8544, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8546, metadata !DIExpression()), !dbg !8547
  %8 = load i32, i32* %thread.addr, align 4, !dbg !8548
  %call9 = call float @BLI_thread_frand(i32 %8), !dbg !8549
  %conv10 = fpext float %call9 to double, !dbg !8549
  %arrayidx11 = getelementptr inbounds [2 x double], [2 x double]* %ht_nums, i64 0, i64 0, !dbg !8550
  store double %conv10, double* %arrayidx11, align 16, !dbg !8551
  %9 = load i32, i32* %thread.addr, align 4, !dbg !8552
  %call12 = call float @BLI_thread_frand(i32 %9), !dbg !8553
  %conv13 = fpext float %call12 to double, !dbg !8553
  %arrayidx14 = getelementptr inbounds [2 x double], [2 x double]* %ht_nums, i64 0, i64 1, !dbg !8554
  store double %conv13, double* %arrayidx14, align 8, !dbg !8555
  %arrayidx15 = getelementptr inbounds [2 x double], [2 x double]* %ht_invprimes, i64 0, i64 0, !dbg !8556
  store double 5.000000e-01, double* %arrayidx15, align 16, !dbg !8557
  %arrayidx16 = getelementptr inbounds [2 x double], [2 x double]* %ht_invprimes, i64 0, i64 1, !dbg !8558
  store double 0x3FD5555555555555, double* %arrayidx16, align 8, !dbg !8559
  store i32 0, i32* %i, align 4, !dbg !8560
  br label %for.cond, !dbg !8562

for.cond:                                         ; preds = %for.inc, %if.else
  %10 = load i32, i32* %i, align 4, !dbg !8563
  %11 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !8565
  %tot = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %11, i32 0, i32 3, !dbg !8566
  %12 = load i32, i32* %tot, align 4, !dbg !8566
  %cmp17 = icmp slt i32 %10, %12, !dbg !8567
  br i1 %cmp17, label %for.body, label %for.end, !dbg !8568

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [2 x double], [2 x double]* %ht_invprimes, i64 0, i64 0, !dbg !8569
  %arraydecay19 = getelementptr inbounds [2 x double], [2 x double]* %ht_nums, i64 0, i64 0, !dbg !8571
  %arraydecay20 = getelementptr inbounds [2 x double], [2 x double]* %r, i64 0, i64 0, !dbg !8572
  call void @halton_sample(double* %arraydecay, double* %arraydecay19, double* %arraydecay20), !dbg !8573
  %arrayidx21 = getelementptr inbounds [2 x double], [2 x double]* %r, i64 0, i64 0, !dbg !8574
  %13 = load double, double* %arrayidx21, align 16, !dbg !8574
  %14 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !8575
  %samp2d = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %14, i32 0, i32 5, !dbg !8576
  %15 = load double*, double** %samp2d, align 8, !dbg !8576
  %16 = load i32, i32* %i, align 4, !dbg !8577
  %mul22 = mul nsw i32 2, %16, !dbg !8578
  %add = add nsw i32 %mul22, 0, !dbg !8579
  %idxprom23 = sext i32 %add to i64, !dbg !8575
  %arrayidx24 = getelementptr inbounds double, double* %15, i64 %idxprom23, !dbg !8575
  store double %13, double* %arrayidx24, align 8, !dbg !8580
  %arrayidx25 = getelementptr inbounds [2 x double], [2 x double]* %r, i64 0, i64 1, !dbg !8581
  %17 = load double, double* %arrayidx25, align 8, !dbg !8581
  %18 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !8582
  %samp2d26 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %18, i32 0, i32 5, !dbg !8583
  %19 = load double*, double** %samp2d26, align 8, !dbg !8583
  %20 = load i32, i32* %i, align 4, !dbg !8584
  %mul27 = mul nsw i32 2, %20, !dbg !8585
  %add28 = add nsw i32 %mul27, 1, !dbg !8586
  %idxprom29 = sext i32 %add28 to i64, !dbg !8582
  %arrayidx30 = getelementptr inbounds double, double* %19, i64 %idxprom29, !dbg !8582
  store double %17, double* %arrayidx30, align 8, !dbg !8587
  br label %for.inc, !dbg !8588

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !8589
  %inc = add nsw i32 %21, 1, !dbg !8589
  store i32 %inc, i32* %i, align 4, !dbg !8589
  br label %for.cond, !dbg !8590, !llvm.loop !8591

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  ret void, !dbg !8593
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @refraction(float* %refract, float* %n, float* %view, float %index) #0 !dbg !8594 {
entry:
  %retval = alloca i32, align 4
  %refract.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %view.addr = alloca float*, align 8
  %index.addr = alloca float, align 4
  %dot = alloca float, align 4
  %fac = alloca float, align 4
  store float* %refract, float** %refract.addr, align 8
  call void @llvm.dbg.declare(metadata float** %refract.addr, metadata !8597, metadata !DIExpression()), !dbg !8598
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8599, metadata !DIExpression()), !dbg !8600
  store float* %view, float** %view.addr, align 8
  call void @llvm.dbg.declare(metadata float** %view.addr, metadata !8601, metadata !DIExpression()), !dbg !8602
  store float %index, float* %index.addr, align 4
  call void @llvm.dbg.declare(metadata float* %index.addr, metadata !8603, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.declare(metadata float* %dot, metadata !8605, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.declare(metadata float* %fac, metadata !8607, metadata !DIExpression()), !dbg !8608
  %0 = load float*, float** %refract.addr, align 8, !dbg !8609
  %1 = load float*, float** %view.addr, align 8, !dbg !8610
  call void @copy_v3_v3(float* %0, float* %1), !dbg !8611
  %2 = load float*, float** %view.addr, align 8, !dbg !8612
  %3 = load float*, float** %n.addr, align 8, !dbg !8613
  %call = call float @dot_v3v3(float* %2, float* %3), !dbg !8614
  store float %call, float* %dot, align 4, !dbg !8615
  %4 = load float, float* %dot, align 4, !dbg !8616
  %cmp = fcmp ogt float %4, 0.000000e+00, !dbg !8618
  br i1 %cmp, label %if.then, label %if.else, !dbg !8619

if.then:                                          ; preds = %entry
  %5 = load float, float* %index.addr, align 4, !dbg !8620
  %div = fdiv float 1.000000e+00, %5, !dbg !8622
  store float %div, float* %index.addr, align 4, !dbg !8623
  %6 = load float, float* %dot, align 4, !dbg !8624
  %7 = load float, float* %dot, align 4, !dbg !8625
  %mul = fmul float %6, %7, !dbg !8626
  %sub = fsub float 1.000000e+00, %mul, !dbg !8627
  %8 = load float, float* %index.addr, align 4, !dbg !8628
  %mul1 = fmul float %sub, %8, !dbg !8629
  %9 = load float, float* %index.addr, align 4, !dbg !8630
  %mul2 = fmul float %mul1, %9, !dbg !8631
  %sub3 = fsub float 1.000000e+00, %mul2, !dbg !8632
  store float %sub3, float* %fac, align 4, !dbg !8633
  %10 = load float, float* %fac, align 4, !dbg !8634
  %cmp4 = fcmp ole float %10, 0.000000e+00, !dbg !8636
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !8637

if.then5:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !8638
  br label %return, !dbg !8638

if.end:                                           ; preds = %if.then
  %11 = load float, float* %dot, align 4, !dbg !8639
  %fneg = fneg float %11, !dbg !8640
  %12 = load float, float* %index.addr, align 4, !dbg !8641
  %mul6 = fmul float %fneg, %12, !dbg !8642
  %13 = load float, float* %fac, align 4, !dbg !8643
  %call7 = call float @sqrtf(float %13) #5, !dbg !8644
  %add = fadd float %mul6, %call7, !dbg !8645
  store float %add, float* %fac, align 4, !dbg !8646
  br label %if.end20, !dbg !8647

if.else:                                          ; preds = %entry
  %14 = load float, float* %dot, align 4, !dbg !8648
  %15 = load float, float* %dot, align 4, !dbg !8650
  %mul8 = fmul float %14, %15, !dbg !8651
  %sub9 = fsub float 1.000000e+00, %mul8, !dbg !8652
  %16 = load float, float* %index.addr, align 4, !dbg !8653
  %mul10 = fmul float %sub9, %16, !dbg !8654
  %17 = load float, float* %index.addr, align 4, !dbg !8655
  %mul11 = fmul float %mul10, %17, !dbg !8656
  %sub12 = fsub float 1.000000e+00, %mul11, !dbg !8657
  store float %sub12, float* %fac, align 4, !dbg !8658
  %18 = load float, float* %fac, align 4, !dbg !8659
  %cmp13 = fcmp ole float %18, 0.000000e+00, !dbg !8661
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !8662

if.then14:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !8663
  br label %return, !dbg !8663

if.end15:                                         ; preds = %if.else
  %19 = load float, float* %dot, align 4, !dbg !8664
  %fneg16 = fneg float %19, !dbg !8665
  %20 = load float, float* %index.addr, align 4, !dbg !8666
  %mul17 = fmul float %fneg16, %20, !dbg !8667
  %21 = load float, float* %fac, align 4, !dbg !8668
  %call18 = call float @sqrtf(float %21) #5, !dbg !8669
  %sub19 = fsub float %mul17, %call18, !dbg !8670
  store float %sub19, float* %fac, align 4, !dbg !8671
  br label %if.end20

if.end20:                                         ; preds = %if.end15, %if.end
  %22 = load float, float* %index.addr, align 4, !dbg !8672
  %23 = load float*, float** %view.addr, align 8, !dbg !8673
  %arrayidx = getelementptr inbounds float, float* %23, i64 0, !dbg !8673
  %24 = load float, float* %arrayidx, align 4, !dbg !8673
  %mul21 = fmul float %22, %24, !dbg !8674
  %25 = load float, float* %fac, align 4, !dbg !8675
  %26 = load float*, float** %n.addr, align 8, !dbg !8676
  %arrayidx22 = getelementptr inbounds float, float* %26, i64 0, !dbg !8676
  %27 = load float, float* %arrayidx22, align 4, !dbg !8676
  %mul23 = fmul float %25, %27, !dbg !8677
  %add24 = fadd float %mul21, %mul23, !dbg !8678
  %28 = load float*, float** %refract.addr, align 8, !dbg !8679
  %arrayidx25 = getelementptr inbounds float, float* %28, i64 0, !dbg !8679
  store float %add24, float* %arrayidx25, align 4, !dbg !8680
  %29 = load float, float* %index.addr, align 4, !dbg !8681
  %30 = load float*, float** %view.addr, align 8, !dbg !8682
  %arrayidx26 = getelementptr inbounds float, float* %30, i64 1, !dbg !8682
  %31 = load float, float* %arrayidx26, align 4, !dbg !8682
  %mul27 = fmul float %29, %31, !dbg !8683
  %32 = load float, float* %fac, align 4, !dbg !8684
  %33 = load float*, float** %n.addr, align 8, !dbg !8685
  %arrayidx28 = getelementptr inbounds float, float* %33, i64 1, !dbg !8685
  %34 = load float, float* %arrayidx28, align 4, !dbg !8685
  %mul29 = fmul float %32, %34, !dbg !8686
  %add30 = fadd float %mul27, %mul29, !dbg !8687
  %35 = load float*, float** %refract.addr, align 8, !dbg !8688
  %arrayidx31 = getelementptr inbounds float, float* %35, i64 1, !dbg !8688
  store float %add30, float* %arrayidx31, align 4, !dbg !8689
  %36 = load float, float* %index.addr, align 4, !dbg !8690
  %37 = load float*, float** %view.addr, align 8, !dbg !8691
  %arrayidx32 = getelementptr inbounds float, float* %37, i64 2, !dbg !8691
  %38 = load float, float* %arrayidx32, align 4, !dbg !8691
  %mul33 = fmul float %36, %38, !dbg !8692
  %39 = load float, float* %fac, align 4, !dbg !8693
  %40 = load float*, float** %n.addr, align 8, !dbg !8694
  %arrayidx34 = getelementptr inbounds float, float* %40, i64 2, !dbg !8694
  %41 = load float, float* %arrayidx34, align 4, !dbg !8694
  %mul35 = fmul float %39, %41, !dbg !8695
  %add36 = fadd float %mul33, %mul35, !dbg !8696
  %42 = load float*, float** %refract.addr, align 8, !dbg !8697
  %arrayidx37 = getelementptr inbounds float, float* %42, i64 2, !dbg !8697
  store float %add36, float* %arrayidx37, align 4, !dbg !8698
  store i32 1, i32* %retval, align 4, !dbg !8699
  br label %return, !dbg !8699

return:                                           ; preds = %if.end20, %if.then14, %if.then5
  %43 = load i32, i32* %retval, align 4, !dbg !8700
  ret i32 %43, !dbg !8700
}

; Function Attrs: noinline nounwind uwtable
define internal void @reflection(float* %ref, float* %n, float* %view, float* %orn) #0 !dbg !8701 {
entry:
  %ref.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %view.addr = alloca float*, align 8
  %orn.addr = alloca float*, align 8
  %f1 = alloca float, align 4
  store float* %ref, float** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ref.addr, metadata !8704, metadata !DIExpression()), !dbg !8705
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8706, metadata !DIExpression()), !dbg !8707
  store float* %view, float** %view.addr, align 8
  call void @llvm.dbg.declare(metadata float** %view.addr, metadata !8708, metadata !DIExpression()), !dbg !8709
  store float* %orn, float** %orn.addr, align 8
  call void @llvm.dbg.declare(metadata float** %orn.addr, metadata !8710, metadata !DIExpression()), !dbg !8711
  call void @llvm.dbg.declare(metadata float* %f1, metadata !8712, metadata !DIExpression()), !dbg !8713
  %0 = load float*, float** %ref.addr, align 8, !dbg !8714
  %1 = load float*, float** %n.addr, align 8, !dbg !8715
  %2 = load float*, float** %view.addr, align 8, !dbg !8716
  call void @reflection_simple(float* %0, float* %1, float* %2), !dbg !8717
  %3 = load float*, float** %ref.addr, align 8, !dbg !8718
  %4 = load float*, float** %orn.addr, align 8, !dbg !8719
  %call = call float @dot_v3v3(float* %3, float* %4), !dbg !8720
  store float %call, float* %f1, align 4, !dbg !8721
  %5 = load float, float* %f1, align 4, !dbg !8722
  %cmp = fcmp ogt float %5, 0.000000e+00, !dbg !8724
  br i1 %cmp, label %if.then, label %if.end, !dbg !8725

if.then:                                          ; preds = %entry
  %6 = load float, float* %f1, align 4, !dbg !8726
  %add = fadd float %6, 0x3F847AE140000000, !dbg !8726
  store float %add, float* %f1, align 4, !dbg !8726
  %7 = load float, float* %f1, align 4, !dbg !8728
  %8 = load float*, float** %orn.addr, align 8, !dbg !8729
  %arrayidx = getelementptr inbounds float, float* %8, i64 0, !dbg !8729
  %9 = load float, float* %arrayidx, align 4, !dbg !8729
  %mul = fmul float %7, %9, !dbg !8730
  %10 = load float*, float** %ref.addr, align 8, !dbg !8731
  %arrayidx1 = getelementptr inbounds float, float* %10, i64 0, !dbg !8731
  %11 = load float, float* %arrayidx1, align 4, !dbg !8732
  %sub = fsub float %11, %mul, !dbg !8732
  store float %sub, float* %arrayidx1, align 4, !dbg !8732
  %12 = load float, float* %f1, align 4, !dbg !8733
  %13 = load float*, float** %orn.addr, align 8, !dbg !8734
  %arrayidx2 = getelementptr inbounds float, float* %13, i64 1, !dbg !8734
  %14 = load float, float* %arrayidx2, align 4, !dbg !8734
  %mul3 = fmul float %12, %14, !dbg !8735
  %15 = load float*, float** %ref.addr, align 8, !dbg !8736
  %arrayidx4 = getelementptr inbounds float, float* %15, i64 1, !dbg !8736
  %16 = load float, float* %arrayidx4, align 4, !dbg !8737
  %sub5 = fsub float %16, %mul3, !dbg !8737
  store float %sub5, float* %arrayidx4, align 4, !dbg !8737
  %17 = load float, float* %f1, align 4, !dbg !8738
  %18 = load float*, float** %orn.addr, align 8, !dbg !8739
  %arrayidx6 = getelementptr inbounds float, float* %18, i64 2, !dbg !8739
  %19 = load float, float* %arrayidx6, align 4, !dbg !8739
  %mul7 = fmul float %17, %19, !dbg !8740
  %20 = load float*, float** %ref.addr, align 8, !dbg !8741
  %arrayidx8 = getelementptr inbounds float, float* %20, i64 2, !dbg !8741
  %21 = load float, float* %arrayidx8, align 4, !dbg !8742
  %sub9 = fsub float %21, %mul7, !dbg !8742
  store float %sub9, float* %arrayidx8, align 4, !dbg !8742
  br label %if.end, !dbg !8743

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8744
}

; Function Attrs: noinline nounwind uwtable
define internal void @reflection_simple(float* %ref, float* %n, float* %view) #0 !dbg !8745 {
entry:
  %ref.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %view.addr = alloca float*, align 8
  %f1 = alloca float, align 4
  store float* %ref, float** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ref.addr, metadata !8748, metadata !DIExpression()), !dbg !8749
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8750, metadata !DIExpression()), !dbg !8751
  store float* %view, float** %view.addr, align 8
  call void @llvm.dbg.declare(metadata float** %view.addr, metadata !8752, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.declare(metadata float* %f1, metadata !8754, metadata !DIExpression()), !dbg !8755
  %0 = load float*, float** %n.addr, align 8, !dbg !8756
  %1 = load float*, float** %view.addr, align 8, !dbg !8757
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !8758
  %mul = fmul float -2.000000e+00, %call, !dbg !8759
  store float %mul, float* %f1, align 4, !dbg !8755
  %2 = load float*, float** %ref.addr, align 8, !dbg !8760
  %3 = load float*, float** %view.addr, align 8, !dbg !8761
  %4 = load float*, float** %n.addr, align 8, !dbg !8762
  %5 = load float, float* %f1, align 4, !dbg !8763
  call void @madd_v3_v3v3fl(float* %2, float* %3, float* %4, float %5), !dbg !8764
  ret void, !dbg !8765
}

; Function Attrs: noinline nounwind uwtable
define internal void @QMC_samplePhong(float* %vec, %struct.QMCSampler* %qsa, i32 %thread, i32 %num, float %blur) #0 !dbg !8766 {
entry:
  %vec.addr = alloca float*, align 8
  %qsa.addr = alloca %struct.QMCSampler*, align 8
  %thread.addr = alloca i32, align 4
  %num.addr = alloca i32, align 4
  %blur.addr = alloca float, align 4
  %s = alloca [2 x double], align 16
  %phi = alloca float, align 4
  %pz = alloca float, align 4
  %sqr = alloca float, align 4
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !8769, metadata !DIExpression()), !dbg !8770
  store %struct.QMCSampler* %qsa, %struct.QMCSampler** %qsa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa.addr, metadata !8771, metadata !DIExpression()), !dbg !8772
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !8773, metadata !DIExpression()), !dbg !8774
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !8775, metadata !DIExpression()), !dbg !8776
  store float %blur, float* %blur.addr, align 4
  call void @llvm.dbg.declare(metadata float* %blur.addr, metadata !8777, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.declare(metadata [2 x double]* %s, metadata !8779, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.declare(metadata float* %phi, metadata !8781, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.declare(metadata float* %pz, metadata !8783, metadata !DIExpression()), !dbg !8784
  call void @llvm.dbg.declare(metadata float* %sqr, metadata !8785, metadata !DIExpression()), !dbg !8786
  %arraydecay = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 0, !dbg !8787
  %0 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !8788
  %1 = load i32, i32* %thread.addr, align 4, !dbg !8789
  %2 = load i32, i32* %num.addr, align 4, !dbg !8790
  call void @QMC_getSample(double* %arraydecay, %struct.QMCSampler* %0, i32 %1, i32 %2), !dbg !8791
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 0, !dbg !8792
  %3 = load double, double* %arrayidx, align 16, !dbg !8792
  %mul = fmul double %3, 2.000000e+00, !dbg !8793
  %mul1 = fmul double %mul, 0x400921FB54442D18, !dbg !8794
  %conv = fptrunc double %mul1 to float, !dbg !8792
  store float %conv, float* %phi, align 4, !dbg !8795
  %arrayidx2 = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 1, !dbg !8796
  %4 = load double, double* %arrayidx2, align 8, !dbg !8796
  %5 = load float, float* %blur.addr, align 4, !dbg !8797
  %conv3 = fpext float %5 to double, !dbg !8797
  %call = call double @pow(double %4, double %conv3) #5, !dbg !8798
  %conv4 = fptrunc double %call to float, !dbg !8798
  store float %conv4, float* %pz, align 4, !dbg !8799
  %6 = load float, float* %pz, align 4, !dbg !8800
  %7 = load float, float* %pz, align 4, !dbg !8801
  %mul5 = fmul float %6, %7, !dbg !8802
  %sub = fsub float 1.000000e+00, %mul5, !dbg !8803
  %call6 = call float @sqrtf(float %sub) #5, !dbg !8804
  store float %call6, float* %sqr, align 4, !dbg !8805
  %8 = load float, float* %phi, align 4, !dbg !8806
  %call7 = call float @cosf(float %8) #5, !dbg !8807
  %9 = load float, float* %sqr, align 4, !dbg !8808
  %mul8 = fmul float %call7, %9, !dbg !8809
  %10 = load float*, float** %vec.addr, align 8, !dbg !8810
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 0, !dbg !8810
  store float %mul8, float* %arrayidx9, align 4, !dbg !8811
  %11 = load float, float* %phi, align 4, !dbg !8812
  %call10 = call float @sinf(float %11) #5, !dbg !8813
  %12 = load float, float* %sqr, align 4, !dbg !8814
  %mul11 = fmul float %call10, %12, !dbg !8815
  %13 = load float*, float** %vec.addr, align 8, !dbg !8816
  %arrayidx12 = getelementptr inbounds float, float* %13, i64 1, !dbg !8816
  store float %mul11, float* %arrayidx12, align 4, !dbg !8817
  %14 = load float*, float** %vec.addr, align 8, !dbg !8818
  %arrayidx13 = getelementptr inbounds float, float* %14, i64 2, !dbg !8818
  store float 0.000000e+00, float* %arrayidx13, align 4, !dbg !8819
  ret void, !dbg !8820
}

declare dso_local void @ortho_basis_v3v3_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !8821 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8826, metadata !DIExpression()), !dbg !8827
  %0 = load float, float* %f.addr, align 4, !dbg !8828
  %1 = load float*, float** %r.addr, align 8, !dbg !8829
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !8829
  %2 = load float, float* %arrayidx, align 4, !dbg !8830
  %mul = fmul float %2, %0, !dbg !8830
  store float %mul, float* %arrayidx, align 4, !dbg !8830
  %3 = load float, float* %f.addr, align 4, !dbg !8831
  %4 = load float*, float** %r.addr, align 8, !dbg !8832
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !8832
  %5 = load float, float* %arrayidx1, align 4, !dbg !8833
  %mul2 = fmul float %5, %3, !dbg !8833
  store float %mul2, float* %arrayidx1, align 4, !dbg !8833
  %6 = load float, float* %f.addr, align 4, !dbg !8834
  %7 = load float*, float** %r.addr, align 8, !dbg !8835
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !8835
  %8 = load float, float* %arrayidx3, align 4, !dbg !8836
  %mul4 = fmul float %8, %6, !dbg !8836
  store float %mul4, float* %arrayidx3, align 4, !dbg !8836
  ret void, !dbg !8837
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !8838 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8839, metadata !DIExpression()), !dbg !8840
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8841, metadata !DIExpression()), !dbg !8842
  %0 = load float*, float** %a.addr, align 8, !dbg !8843
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8843
  %1 = load float, float* %arrayidx, align 4, !dbg !8843
  %2 = load float*, float** %r.addr, align 8, !dbg !8844
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8844
  %3 = load float, float* %arrayidx1, align 4, !dbg !8845
  %add = fadd float %3, %1, !dbg !8845
  store float %add, float* %arrayidx1, align 4, !dbg !8845
  %4 = load float*, float** %a.addr, align 8, !dbg !8846
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8846
  %5 = load float, float* %arrayidx2, align 4, !dbg !8846
  %6 = load float*, float** %r.addr, align 8, !dbg !8847
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8847
  %7 = load float, float* %arrayidx3, align 4, !dbg !8848
  %add4 = fadd float %7, %5, !dbg !8848
  store float %add4, float* %arrayidx3, align 4, !dbg !8848
  %8 = load float*, float** %a.addr, align 8, !dbg !8849
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8849
  %9 = load float, float* %arrayidx5, align 4, !dbg !8849
  %10 = load float*, float** %r.addr, align 8, !dbg !8850
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8850
  %11 = load float, float* %arrayidx6, align 4, !dbg !8851
  %add7 = fadd float %11, %9, !dbg !8851
  store float %add7, float* %arrayidx6, align 4, !dbg !8851
  ret void, !dbg !8852
}

; Function Attrs: noinline nounwind uwtable
define internal void @traceray(%struct.ShadeInput* %origshi, %struct.ShadeResult* %origshr, i16 signext %depth, float* %start, float* %dir, float* %col, %struct.ObjectInstanceRen* %obi, %struct.VlakRen* %vlr, i32 %traflag) #0 !dbg !8853 {
entry:
  %origshi.addr = alloca %struct.ShadeInput*, align 8
  %origshr.addr = alloca %struct.ShadeResult*, align 8
  %depth.addr = alloca i16, align 2
  %start.addr = alloca float*, align 8
  %dir.addr = alloca float*, align 8
  %col.addr = alloca float*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %traflag.addr = alloca i32, align 4
  %shi = alloca %struct.ShadeInput, align 8
  %isec = alloca %struct.Isect, align 8
  %dist_mir = alloca float, align 4
  %shr = alloca %struct.ShadeResult, align 4
  %d = alloca float, align 4
  %fr = alloca float, align 4
  %fg = alloca float, align 4
  %fb = alloca float, align 4
  %f = alloca float, align 4
  %f1 = alloca float, align 4
  %nf = alloca float, align 4
  %f45 = alloca float, align 4
  %refract = alloca [3 x float], align 4
  %tracol = alloca [4 x float], align 16
  %new_traflag = alloca i32, align 4
  %norm = alloca [3 x float], align 4
  %mircol = alloca [4 x float], align 16
  %ref = alloca [3 x float], align 4
  %blendcol = alloca [3 x float], align 4
  store %struct.ShadeInput* %origshi, %struct.ShadeInput** %origshi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %origshi.addr, metadata !8856, metadata !DIExpression()), !dbg !8857
  store %struct.ShadeResult* %origshr, %struct.ShadeResult** %origshr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %origshr.addr, metadata !8858, metadata !DIExpression()), !dbg !8859
  store i16 %depth, i16* %depth.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %depth.addr, metadata !8860, metadata !DIExpression()), !dbg !8861
  store float* %start, float** %start.addr, align 8
  call void @llvm.dbg.declare(metadata float** %start.addr, metadata !8862, metadata !DIExpression()), !dbg !8863
  store float* %dir, float** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dir.addr, metadata !8864, metadata !DIExpression()), !dbg !8865
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !8866, metadata !DIExpression()), !dbg !8867
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !8870, metadata !DIExpression()), !dbg !8871
  store i32 %traflag, i32* %traflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %traflag.addr, metadata !8872, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.declare(metadata %struct.ShadeInput* %shi, metadata !8874, metadata !DIExpression()), !dbg !8875
  %0 = bitcast %struct.ShadeInput* %shi to i8*, !dbg !8875
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 1472, i1 false), !dbg !8875
  call void @llvm.dbg.declare(metadata %struct.Isect* %isec, metadata !8876, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.declare(metadata float* %dist_mir, metadata !8878, metadata !DIExpression()), !dbg !8879
  %1 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8880
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %1, i32 0, i32 0, !dbg !8881
  %2 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !8881
  %dist_mir1 = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 48, !dbg !8882
  %3 = load float, float* %dist_mir1, align 4, !dbg !8882
  store float %3, float* %dist_mir, align 4, !dbg !8879
  %4 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !8883
  %5 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !8885
  %call = call i32 %4(i8* %5), !dbg !8886
  %tobool = icmp ne i32 %call, 0, !dbg !8886
  br i1 %tobool, label %if.then, label %if.end, !dbg !8887

if.then:                                          ; preds = %entry
  %6 = load float*, float** %col.addr, align 8, !dbg !8888
  call void @zero_v4(float* %6), !dbg !8890
  br label %if.end311, !dbg !8891

if.end:                                           ; preds = %entry
  %start2 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 0, !dbg !8892
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %start2, i64 0, i64 0, !dbg !8893
  %7 = load float*, float** %start.addr, align 8, !dbg !8894
  call void @copy_v3_v3(float* %arraydecay, float* %7), !dbg !8895
  %dir3 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 1, !dbg !8896
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %dir3, i64 0, i64 0, !dbg !8897
  %8 = load float*, float** %dir.addr, align 8, !dbg !8898
  call void @copy_v3_v3(float* %arraydecay4, float* %8), !dbg !8899
  %9 = load float, float* %dist_mir, align 4, !dbg !8900
  %cmp = fcmp ogt float %9, 0.000000e+00, !dbg !8901
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8900

cond.true:                                        ; preds = %if.end
  %10 = load float, float* %dist_mir, align 4, !dbg !8902
  br label %cond.end, !dbg !8900

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !8900

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %10, %cond.true ], [ 0x430C6BF520000000, %cond.false ], !dbg !8900
  %dist = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 2, !dbg !8903
  store float %cond, float* %dist, align 8, !dbg !8904
  %mode = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 7, !dbg !8905
  store i32 1, i32* %mode, align 8, !dbg !8906
  %check = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 10, !dbg !8907
  store i32 1, i32* %check, align 4, !dbg !8908
  %skip = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 9, !dbg !8909
  store i32 2, i32* %skip, align 8, !dbg !8910
  %hint = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 18, !dbg !8911
  store %struct.RayHint* null, %struct.RayHint** %hint, align 8, !dbg !8912
  %11 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8913
  %12 = bitcast %struct.ObjectInstanceRen* %11 to i8*, !dbg !8913
  %orig = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 16, !dbg !8914
  %ob = getelementptr inbounds %struct.anon, %struct.anon* %orig, i32 0, i32 0, !dbg !8915
  store i8* %12, i8** %ob, align 8, !dbg !8916
  %13 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !8917
  %14 = bitcast %struct.VlakRen* %13 to i8*, !dbg !8917
  %orig5 = getelementptr inbounds %struct.Isect, %struct.Isect* %isec, i32 0, i32 16, !dbg !8918
  %face = getelementptr inbounds %struct.anon, %struct.anon* %orig5, i32 0, i32 1, !dbg !8919
  store i8* %14, i8** %face, align 8, !dbg !8920
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8921
  %obi6 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 3, !dbg !8922
  %16 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi6, align 8, !dbg !8922
  call void @RE_instance_rotate_ray(%struct.ObjectInstanceRen* %16, %struct.Isect* %isec), !dbg !8923
  %17 = load %struct.RayObject*, %struct.RayObject** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 52), align 8, !dbg !8924
  %call7 = call i32 @RE_rayobject_raycast(%struct.RayObject* %17, %struct.Isect* %isec), !dbg !8926
  %tobool8 = icmp ne i32 %call7, 0, !dbg !8926
  br i1 %tobool8, label %if.then9, label %if.else310, !dbg !8927

if.then9:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.ShadeResult* %shr, metadata !8928, metadata !DIExpression()), !dbg !8930
  %18 = bitcast %struct.ShadeResult* %shr to i8*, !dbg !8930
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 212, i1 false), !dbg !8930
  call void @llvm.dbg.declare(metadata float* %d, metadata !8931, metadata !DIExpression()), !dbg !8932
  store float 1.000000e+00, float* %d, align 4, !dbg !8932
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8933
  %obi10 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 3, !dbg !8934
  %20 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi10, align 8, !dbg !8934
  call void @RE_instance_rotate_ray_restore(%struct.ObjectInstanceRen* %20, %struct.Isect* %isec), !dbg !8935
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 78, !dbg !8936
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 0, !dbg !8937
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8938
  %dxco12 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %21, i32 0, i32 78, !dbg !8939
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %dxco12, i64 0, i64 0, !dbg !8938
  call void @copy_v3_v3(float* %arraydecay11, float* %arraydecay13), !dbg !8940
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 79, !dbg !8941
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 0, !dbg !8942
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8943
  %dyco15 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %22, i32 0, i32 79, !dbg !8944
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %dyco15, i64 0, i64 0, !dbg !8943
  call void @copy_v3_v3(float* %arraydecay14, float* %arraydecay16), !dbg !8945
  %23 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8946
  %mask = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %23, i32 0, i32 105, !dbg !8947
  %24 = load i32, i32* %mask, align 4, !dbg !8947
  %mask17 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 105, !dbg !8948
  store i32 %24, i32* %mask17, align 4, !dbg !8949
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8950
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 15, !dbg !8951
  %26 = load i16, i16* %osatex, align 8, !dbg !8951
  %osatex18 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 15, !dbg !8952
  store i16 %26, i16* %osatex18, align 8, !dbg !8953
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8954
  %depth19 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 108, !dbg !8955
  %28 = load i32, i32* %depth19, align 8, !dbg !8955
  %add = add nsw i32 %28, 1, !dbg !8956
  %depth20 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 108, !dbg !8957
  store i32 %add, i32* %depth20, align 8, !dbg !8958
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8959
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 114, !dbg !8960
  %30 = load i16, i16* %thread, align 2, !dbg !8960
  %thread21 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 114, !dbg !8961
  store i16 %30, i16* %thread21, align 2, !dbg !8962
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8963
  %xs = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 103, !dbg !8964
  %32 = load i32, i32* %xs, align 4, !dbg !8964
  %xs22 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 103, !dbg !8965
  store i32 %32, i32* %xs22, align 4, !dbg !8966
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8967
  %ys = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 104, !dbg !8968
  %34 = load i32, i32* %ys, align 8, !dbg !8968
  %ys23 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 104, !dbg !8969
  store i32 %34, i32* %ys23, align 8, !dbg !8970
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8971
  %lay = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 117, !dbg !8972
  %36 = load i32, i32* %lay, align 8, !dbg !8972
  %lay24 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 117, !dbg !8973
  store i32 %36, i32* %lay24, align 8, !dbg !8974
  %passflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 119, !dbg !8975
  store i32 1, i32* %passflag, align 8, !dbg !8976
  %combinedflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 120, !dbg !8977
  store i32 16777215, i32* %combinedflag, align 4, !dbg !8978
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8979
  %light_override = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 121, !dbg !8980
  %38 = load %struct.Group*, %struct.Group** %light_override, align 8, !dbg !8980
  %light_override25 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 121, !dbg !8981
  store %struct.Group* %38, %struct.Group** %light_override25, align 8, !dbg !8982
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !8983
  %mat_override = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %39, i32 0, i32 122, !dbg !8984
  %40 = load %struct.Material*, %struct.Material** %mat_override, align 8, !dbg !8984
  %mat_override26 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 122, !dbg !8985
  store %struct.Material* %40, %struct.Material** %mat_override26, align 8, !dbg !8986
  call void @shade_ray(%struct.Isect* %isec, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr), !dbg !8987
  %41 = load i32, i32* %traflag.addr, align 4, !dbg !8988
  %and = and i32 %41, 2, !dbg !8990
  %tobool27 = icmp ne i32 %and, 0, !dbg !8990
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !8991

if.then28:                                        ; preds = %if.then9
  %call29 = call float @shade_by_transmission(%struct.Isect* %isec, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr), !dbg !8992
  store float %call29, float* %d, align 4, !dbg !8993
  br label %if.end30, !dbg !8994

if.end30:                                         ; preds = %if.then28, %if.then9
  %42 = load i16, i16* %depth.addr, align 2, !dbg !8995
  %conv = sext i16 %42 to i32, !dbg !8995
  %cmp31 = icmp sgt i32 %conv, 0, !dbg !8997
  br i1 %cmp31, label %if.then33, label %if.else290, !dbg !8998

if.then33:                                        ; preds = %if.end30
  call void @llvm.dbg.declare(metadata float* %fr, metadata !8999, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.declare(metadata float* %fg, metadata !9002, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.declare(metadata float* %fb, metadata !9004, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.declare(metadata float* %f, metadata !9006, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.declare(metadata float* %f1, metadata !9008, metadata !DIExpression()), !dbg !9009
  %mat34 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !9010
  %43 = load %struct.Material*, %struct.Material** %mat34, align 8, !dbg !9010
  %mode_l = getelementptr inbounds %struct.Material, %struct.Material* %43, i32 0, i32 52, !dbg !9012
  %44 = load i32, i32* %mode_l, align 8, !dbg !9012
  %and35 = and i32 %44, 65536, !dbg !9013
  %tobool36 = icmp ne i32 %and35, 0, !dbg !9013
  br i1 %tobool36, label %land.lhs.true, label %if.else179, !dbg !9014

land.lhs.true:                                    ; preds = %if.then33
  %alpha = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 2, !dbg !9015
  %45 = load float, float* %alpha, align 4, !dbg !9015
  %cmp37 = fcmp olt float %45, 1.000000e+00, !dbg !9016
  br i1 %cmp37, label %land.lhs.true39, label %if.else179, !dbg !9017

land.lhs.true39:                                  ; preds = %land.lhs.true
  %mat40 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !9018
  %46 = load %struct.Material*, %struct.Material** %mat40, align 8, !dbg !9018
  %mode_l41 = getelementptr inbounds %struct.Material, %struct.Material* %46, i32 0, i32 52, !dbg !9019
  %47 = load i32, i32* %mode_l41, align 8, !dbg !9019
  %and42 = and i32 %47, 131136, !dbg !9020
  %tobool43 = icmp ne i32 %and42, 0, !dbg !9020
  br i1 %tobool43, label %if.then44, label %if.else179, !dbg !9021

if.then44:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata float* %nf, metadata !9022, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.declare(metadata float* %f45, metadata !9025, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.declare(metadata [3 x float]* %refract, metadata !9027, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.declare(metadata [4 x float]* %tracol, metadata !9029, metadata !DIExpression()), !dbg !9030
  %r = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 32, !dbg !9031
  %48 = load float, float* %r, align 4, !dbg !9031
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 0, !dbg !9032
  store float %48, float* %arrayidx, align 16, !dbg !9033
  %g = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 33, !dbg !9034
  %49 = load float, float* %g, align 8, !dbg !9034
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 1, !dbg !9035
  store float %49, float* %arrayidx46, align 4, !dbg !9036
  %b = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 34, !dbg !9037
  %50 = load float, float* %b, align 4, !dbg !9037
  %arrayidx47 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 2, !dbg !9038
  store float %50, float* %arrayidx47, align 8, !dbg !9039
  %51 = load float*, float** %col.addr, align 8, !dbg !9040
  %arrayidx48 = getelementptr inbounds float, float* %51, i64 3, !dbg !9040
  %52 = load float, float* %arrayidx48, align 4, !dbg !9040
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 3, !dbg !9041
  store float %52, float* %arrayidx49, align 4, !dbg !9042
  %mat50 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !9043
  %53 = load %struct.Material*, %struct.Material** %mat50, align 8, !dbg !9043
  %mode51 = getelementptr inbounds %struct.Material, %struct.Material* %53, i32 0, i32 51, !dbg !9045
  %54 = load i32, i32* %mode51, align 4, !dbg !9045
  %and52 = and i32 %54, 65536, !dbg !9046
  %tobool53 = icmp ne i32 %and52, 0, !dbg !9046
  br i1 %tobool53, label %land.lhs.true54, label %if.else114, !dbg !9047

land.lhs.true54:                                  ; preds = %if.then44
  %mat55 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !9048
  %55 = load %struct.Material*, %struct.Material** %mat55, align 8, !dbg !9048
  %mode56 = getelementptr inbounds %struct.Material, %struct.Material* %55, i32 0, i32 51, !dbg !9049
  %56 = load i32, i32* %mode56, align 4, !dbg !9049
  %and57 = and i32 %56, 131072, !dbg !9050
  %tobool58 = icmp ne i32 %and57, 0, !dbg !9050
  br i1 %tobool58, label %if.then59, label %if.else114, !dbg !9051

if.then59:                                        ; preds = %land.lhs.true54
  call void @llvm.dbg.declare(metadata i32* %new_traflag, metadata !9052, metadata !DIExpression()), !dbg !9054
  %57 = load i32, i32* %traflag.addr, align 4, !dbg !9055
  store i32 %57, i32* %new_traflag, align 4, !dbg !9054
  %58 = load i32, i32* %new_traflag, align 4, !dbg !9056
  %and60 = and i32 %58, 2, !dbg !9058
  %tobool61 = icmp ne i32 %and60, 0, !dbg !9058
  br i1 %tobool61, label %if.then62, label %if.else87, !dbg !9059

if.then62:                                        ; preds = %if.then59
  call void @llvm.dbg.declare(metadata [3 x float]* %norm, metadata !9060, metadata !DIExpression()), !dbg !9062
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 16, !dbg !9063
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !9064
  %59 = load float, float* %arrayidx63, align 4, !dbg !9064
  %fneg = fneg float %59, !dbg !9065
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !9066
  store float %fneg, float* %arrayidx64, align 4, !dbg !9067
  %vn65 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 16, !dbg !9068
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %vn65, i64 0, i64 1, !dbg !9069
  %60 = load float, float* %arrayidx66, align 4, !dbg !9069
  %fneg67 = fneg float %60, !dbg !9070
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 1, !dbg !9071
  store float %fneg67, float* %arrayidx68, align 4, !dbg !9072
  %vn69 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 16, !dbg !9073
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %vn69, i64 0, i64 2, !dbg !9074
  %61 = load float, float* %arrayidx70, align 4, !dbg !9074
  %fneg71 = fneg float %61, !dbg !9075
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 2, !dbg !9076
  store float %fneg71, float* %arrayidx72, align 4, !dbg !9077
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %refract, i64 0, i64 0, !dbg !9078
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !9080
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 30, !dbg !9081
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !9082
  %ang = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 46, !dbg !9083
  %62 = load float, float* %ang, align 4, !dbg !9083
  %call76 = call i32 @refraction(float* %arraydecay73, float* %arraydecay74, float* %arraydecay75, float %62), !dbg !9084
  %tobool77 = icmp ne i32 %call76, 0, !dbg !9084
  br i1 %tobool77, label %if.then78, label %if.else, !dbg !9085

if.then78:                                        ; preds = %if.then62
  %63 = load i32, i32* %new_traflag, align 4, !dbg !9086
  %and79 = and i32 %63, -3, !dbg !9086
  store i32 %and79, i32* %new_traflag, align 4, !dbg !9086
  br label %if.end86, !dbg !9088

if.else:                                          ; preds = %if.then62
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %refract, i64 0, i64 0, !dbg !9089
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !9091
  %view82 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 30, !dbg !9092
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %view82, i64 0, i64 0, !dbg !9093
  %vn84 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 16, !dbg !9094
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %vn84, i64 0, i64 0, !dbg !9095
  call void @reflection(float* %arraydecay80, float* %arraydecay81, float* %arraydecay83, float* %arraydecay85), !dbg !9096
  br label %if.end86

if.end86:                                         ; preds = %if.else, %if.then78
  br label %if.end106, !dbg !9097

if.else87:                                        ; preds = %if.then59
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %refract, i64 0, i64 0, !dbg !9098
  %vn89 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 16, !dbg !9101
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %vn89, i64 0, i64 0, !dbg !9102
  %view91 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 30, !dbg !9103
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %view91, i64 0, i64 0, !dbg !9104
  %ang93 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 46, !dbg !9105
  %64 = load float, float* %ang93, align 4, !dbg !9105
  %call94 = call i32 @refraction(float* %arraydecay88, float* %arraydecay90, float* %arraydecay92, float %64), !dbg !9106
  %tobool95 = icmp ne i32 %call94, 0, !dbg !9106
  br i1 %tobool95, label %if.then96, label %if.else97, !dbg !9107

if.then96:                                        ; preds = %if.else87
  %65 = load i32, i32* %new_traflag, align 4, !dbg !9108
  %or = or i32 %65, 2, !dbg !9108
  store i32 %or, i32* %new_traflag, align 4, !dbg !9108
  br label %if.end105, !dbg !9110

if.else97:                                        ; preds = %if.else87
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %refract, i64 0, i64 0, !dbg !9111
  %vn99 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 16, !dbg !9113
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %vn99, i64 0, i64 0, !dbg !9114
  %view101 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 30, !dbg !9115
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %view101, i64 0, i64 0, !dbg !9116
  %vn103 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 16, !dbg !9117
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %vn103, i64 0, i64 0, !dbg !9118
  call void @reflection(float* %arraydecay98, float* %arraydecay100, float* %arraydecay102, float* %arraydecay104), !dbg !9119
  br label %if.end105

if.end105:                                        ; preds = %if.else97, %if.then96
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.end86
  %66 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !9120
  %67 = load %struct.ShadeResult*, %struct.ShadeResult** %origshr.addr, align 8, !dbg !9121
  %68 = load i16, i16* %depth.addr, align 2, !dbg !9122
  %conv107 = sext i16 %68 to i32, !dbg !9122
  %sub = sub nsw i32 %conv107, 1, !dbg !9123
  %conv108 = trunc i32 %sub to i16, !dbg !9122
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !9124
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9125
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %refract, i64 0, i64 0, !dbg !9126
  %arraydecay111 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 0, !dbg !9127
  %obi112 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 3, !dbg !9128
  %69 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi112, align 8, !dbg !9128
  %vlr113 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 1, !dbg !9129
  %70 = load %struct.VlakRen*, %struct.VlakRen** %vlr113, align 8, !dbg !9129
  %71 = load i32, i32* %new_traflag, align 4, !dbg !9130
  call void @traceray(%struct.ShadeInput* %66, %struct.ShadeResult* %67, i16 signext %conv108, float* %arraydecay109, float* %arraydecay110, float* %arraydecay111, %struct.ObjectInstanceRen* %69, %struct.VlakRen* %70, i32 %71), !dbg !9131
  br label %if.end125, !dbg !9132

if.else114:                                       ; preds = %land.lhs.true54, %if.then44
  %72 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !9133
  %73 = load %struct.ShadeResult*, %struct.ShadeResult** %origshr.addr, align 8, !dbg !9134
  %74 = load i16, i16* %depth.addr, align 2, !dbg !9135
  %conv115 = sext i16 %74 to i32, !dbg !9135
  %sub116 = sub nsw i32 %conv115, 1, !dbg !9136
  %conv117 = trunc i32 %sub116 to i16, !dbg !9135
  %co118 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !9137
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %co118, i64 0, i64 0, !dbg !9138
  %view120 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 30, !dbg !9139
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %view120, i64 0, i64 0, !dbg !9140
  %arraydecay122 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 0, !dbg !9141
  %obi123 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 3, !dbg !9142
  %75 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi123, align 8, !dbg !9142
  %vlr124 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 1, !dbg !9143
  %76 = load %struct.VlakRen*, %struct.VlakRen** %vlr124, align 8, !dbg !9143
  call void @traceray(%struct.ShadeInput* %72, %struct.ShadeResult* %73, i16 signext %conv117, float* %arraydecay119, float* %arraydecay121, float* %arraydecay122, %struct.ObjectInstanceRen* %75, %struct.VlakRen* %76, i32 0), !dbg !9144
  br label %if.end125

if.end125:                                        ; preds = %if.else114, %if.end106
  %alpha126 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 2, !dbg !9145
  %77 = load float, float* %alpha126, align 4, !dbg !9145
  store float %77, float* %f45, align 4, !dbg !9146
  %78 = load float, float* %f45, align 4, !dbg !9147
  %sub127 = fsub float 1.000000e+00, %78, !dbg !9148
  store float %sub127, float* %f1, align 4, !dbg !9149
  %79 = load float, float* %d, align 4, !dbg !9150
  %mat128 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !9151
  %80 = load %struct.Material*, %struct.Material** %mat128, align 8, !dbg !9151
  %filter = getelementptr inbounds %struct.Material, %struct.Material* %80, i32 0, i32 33, !dbg !9152
  %81 = load float, float* %filter, align 8, !dbg !9152
  %mul = fmul float %79, %81, !dbg !9153
  store float %mul, float* %nf, align 4, !dbg !9154
  %82 = load float, float* %nf, align 4, !dbg !9155
  %r129 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 32, !dbg !9156
  %83 = load float, float* %r129, align 4, !dbg !9156
  %sub130 = fsub float %83, 1.000000e+00, !dbg !9157
  %mul131 = fmul float %82, %sub130, !dbg !9158
  %add132 = fadd float 1.000000e+00, %mul131, !dbg !9159
  store float %add132, float* %fr, align 4, !dbg !9160
  %84 = load float, float* %nf, align 4, !dbg !9161
  %g133 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 33, !dbg !9162
  %85 = load float, float* %g133, align 8, !dbg !9162
  %sub134 = fsub float %85, 1.000000e+00, !dbg !9163
  %mul135 = fmul float %84, %sub134, !dbg !9164
  %add136 = fadd float 1.000000e+00, %mul135, !dbg !9165
  store float %add136, float* %fg, align 4, !dbg !9166
  %86 = load float, float* %nf, align 4, !dbg !9167
  %b137 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 34, !dbg !9168
  %87 = load float, float* %b137, align 4, !dbg !9168
  %sub138 = fsub float %87, 1.000000e+00, !dbg !9169
  %mul139 = fmul float %86, %sub138, !dbg !9170
  %add140 = fadd float 1.000000e+00, %mul139, !dbg !9171
  store float %add140, float* %fb, align 4, !dbg !9172
  %88 = load float, float* %f45, align 4, !dbg !9173
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9174
  %arrayidx141 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !9175
  %89 = load float, float* %arrayidx141, align 4, !dbg !9175
  %mul142 = fmul float %88, %89, !dbg !9176
  %90 = load float, float* %f1, align 4, !dbg !9177
  %91 = load float, float* %fr, align 4, !dbg !9178
  %mul143 = fmul float %90, %91, !dbg !9179
  %arrayidx144 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 0, !dbg !9180
  %92 = load float, float* %arrayidx144, align 16, !dbg !9180
  %mul145 = fmul float %mul143, %92, !dbg !9181
  %add146 = fadd float %mul142, %mul145, !dbg !9182
  %diff147 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9183
  %arrayidx148 = getelementptr inbounds [3 x float], [3 x float]* %diff147, i64 0, i64 0, !dbg !9184
  store float %add146, float* %arrayidx148, align 4, !dbg !9185
  %93 = load float, float* %f45, align 4, !dbg !9186
  %diff149 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9187
  %arrayidx150 = getelementptr inbounds [3 x float], [3 x float]* %diff149, i64 0, i64 1, !dbg !9188
  %94 = load float, float* %arrayidx150, align 4, !dbg !9188
  %mul151 = fmul float %93, %94, !dbg !9189
  %95 = load float, float* %f1, align 4, !dbg !9190
  %96 = load float, float* %fg, align 4, !dbg !9191
  %mul152 = fmul float %95, %96, !dbg !9192
  %arrayidx153 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 1, !dbg !9193
  %97 = load float, float* %arrayidx153, align 4, !dbg !9193
  %mul154 = fmul float %mul152, %97, !dbg !9194
  %add155 = fadd float %mul151, %mul154, !dbg !9195
  %diff156 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9196
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %diff156, i64 0, i64 1, !dbg !9197
  store float %add155, float* %arrayidx157, align 4, !dbg !9198
  %98 = load float, float* %f45, align 4, !dbg !9199
  %diff158 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9200
  %arrayidx159 = getelementptr inbounds [3 x float], [3 x float]* %diff158, i64 0, i64 2, !dbg !9201
  %99 = load float, float* %arrayidx159, align 4, !dbg !9201
  %mul160 = fmul float %98, %99, !dbg !9202
  %100 = load float, float* %f1, align 4, !dbg !9203
  %101 = load float, float* %fb, align 4, !dbg !9204
  %mul161 = fmul float %100, %101, !dbg !9205
  %arrayidx162 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 2, !dbg !9206
  %102 = load float, float* %arrayidx162, align 8, !dbg !9206
  %mul163 = fmul float %mul161, %102, !dbg !9207
  %add164 = fadd float %mul160, %mul163, !dbg !9208
  %diff165 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9209
  %arrayidx166 = getelementptr inbounds [3 x float], [3 x float]* %diff165, i64 0, i64 2, !dbg !9210
  store float %add164, float* %arrayidx166, align 4, !dbg !9211
  %103 = load float, float* %f45, align 4, !dbg !9212
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9213
  %arrayidx167 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !9214
  %104 = load float, float* %arrayidx167, align 4, !dbg !9215
  %mul168 = fmul float %104, %103, !dbg !9215
  store float %mul168, float* %arrayidx167, align 4, !dbg !9215
  %105 = load float, float* %f45, align 4, !dbg !9216
  %spec169 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9217
  %arrayidx170 = getelementptr inbounds [3 x float], [3 x float]* %spec169, i64 0, i64 1, !dbg !9218
  %106 = load float, float* %arrayidx170, align 4, !dbg !9219
  %mul171 = fmul float %106, %105, !dbg !9219
  store float %mul171, float* %arrayidx170, align 4, !dbg !9219
  %107 = load float, float* %f45, align 4, !dbg !9220
  %spec172 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9221
  %arrayidx173 = getelementptr inbounds [3 x float], [3 x float]* %spec172, i64 0, i64 2, !dbg !9222
  %108 = load float, float* %arrayidx173, align 4, !dbg !9223
  %mul174 = fmul float %108, %107, !dbg !9223
  store float %mul174, float* %arrayidx173, align 4, !dbg !9223
  %109 = load float, float* %f1, align 4, !dbg !9224
  %arrayidx175 = getelementptr inbounds [4 x float], [4 x float]* %tracol, i64 0, i64 3, !dbg !9225
  %110 = load float, float* %arrayidx175, align 4, !dbg !9225
  %mul176 = fmul float %109, %110, !dbg !9226
  %111 = load float, float* %f45, align 4, !dbg !9227
  %add177 = fadd float %mul176, %111, !dbg !9228
  %112 = load float*, float** %col.addr, align 8, !dbg !9229
  %arrayidx178 = getelementptr inbounds float, float* %112, i64 3, !dbg !9229
  store float %add177, float* %arrayidx178, align 4, !dbg !9230
  br label %if.end181, !dbg !9231

if.else179:                                       ; preds = %land.lhs.true39, %land.lhs.true, %if.then33
  %113 = load float*, float** %col.addr, align 8, !dbg !9232
  %arrayidx180 = getelementptr inbounds float, float* %113, i64 3, !dbg !9232
  store float 1.000000e+00, float* %arrayidx180, align 4, !dbg !9233
  br label %if.end181

if.end181:                                        ; preds = %if.else179, %if.end125
  %mat182 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !9234
  %114 = load %struct.Material*, %struct.Material** %mat182, align 8, !dbg !9234
  %mode_l183 = getelementptr inbounds %struct.Material, %struct.Material* %114, i32 0, i32 52, !dbg !9236
  %115 = load i32, i32* %mode_l183, align 8, !dbg !9236
  %and184 = and i32 %115, 262144, !dbg !9237
  %tobool185 = icmp ne i32 %and184, 0, !dbg !9237
  br i1 %tobool185, label %if.then186, label %if.else199, !dbg !9238

if.then186:                                       ; preds = %if.end181
  %ray_mirror = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 48, !dbg !9239
  %116 = load float, float* %ray_mirror, align 4, !dbg !9239
  store float %116, float* %f, align 4, !dbg !9241
  %117 = load float, float* %f, align 4, !dbg !9242
  %cmp187 = fcmp une float %117, 0.000000e+00, !dbg !9244
  br i1 %cmp187, label %if.then189, label %if.end198, !dbg !9245

if.then189:                                       ; preds = %if.then186
  %view190 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 30, !dbg !9246
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %view190, i64 0, i64 0, !dbg !9247
  %vn192 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 16, !dbg !9248
  %arraydecay193 = getelementptr inbounds [3 x float], [3 x float]* %vn192, i64 0, i64 0, !dbg !9249
  %mat194 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !9250
  %118 = load %struct.Material*, %struct.Material** %mat194, align 8, !dbg !9250
  %fresnel_mir_i = getelementptr inbounds %struct.Material, %struct.Material* %118, i32 0, i32 30, !dbg !9251
  %119 = load float, float* %fresnel_mir_i, align 4, !dbg !9251
  %mat195 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !9252
  %120 = load %struct.Material*, %struct.Material** %mat195, align 8, !dbg !9252
  %fresnel_mir = getelementptr inbounds %struct.Material, %struct.Material* %120, i32 0, i32 29, !dbg !9253
  %121 = load float, float* %fresnel_mir, align 8, !dbg !9253
  %call196 = call float @fresnel_fac(float* %arraydecay191, float* %arraydecay193, float %119, float %121), !dbg !9254
  %122 = load float, float* %f, align 4, !dbg !9255
  %mul197 = fmul float %122, %call196, !dbg !9255
  store float %mul197, float* %f, align 4, !dbg !9255
  br label %if.end198, !dbg !9256

if.end198:                                        ; preds = %if.then189, %if.then186
  br label %if.end200, !dbg !9257

if.else199:                                       ; preds = %if.end181
  store float 0.000000e+00, float* %f, align 4, !dbg !9258
  br label %if.end200

if.end200:                                        ; preds = %if.else199, %if.end198
  %123 = load float, float* %f, align 4, !dbg !9259
  %cmp201 = fcmp une float %123, 0.000000e+00, !dbg !9261
  br i1 %cmp201, label %if.then203, label %if.else264, !dbg !9262

if.then203:                                       ; preds = %if.end200
  call void @llvm.dbg.declare(metadata [4 x float]* %mircol, metadata !9263, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.declare(metadata [3 x float]* %ref, metadata !9266, metadata !DIExpression()), !dbg !9267
  %arraydecay204 = getelementptr inbounds [3 x float], [3 x float]* %ref, i64 0, i64 0, !dbg !9268
  %vn205 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 16, !dbg !9269
  %arraydecay206 = getelementptr inbounds [3 x float], [3 x float]* %vn205, i64 0, i64 0, !dbg !9270
  %view207 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 30, !dbg !9271
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %view207, i64 0, i64 0, !dbg !9272
  call void @reflection_simple(float* %arraydecay204, float* %arraydecay206, float* %arraydecay208), !dbg !9273
  %124 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !9274
  %125 = load %struct.ShadeResult*, %struct.ShadeResult** %origshr.addr, align 8, !dbg !9275
  %126 = load i16, i16* %depth.addr, align 2, !dbg !9276
  %conv209 = sext i16 %126 to i32, !dbg !9276
  %sub210 = sub nsw i32 %conv209, 1, !dbg !9277
  %conv211 = trunc i32 %sub210 to i16, !dbg !9276
  %co212 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !9278
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %co212, i64 0, i64 0, !dbg !9279
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %ref, i64 0, i64 0, !dbg !9280
  %arraydecay215 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 0, !dbg !9281
  %obi216 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 3, !dbg !9282
  %127 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi216, align 8, !dbg !9282
  %vlr217 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 1, !dbg !9283
  %128 = load %struct.VlakRen*, %struct.VlakRen** %vlr217, align 8, !dbg !9283
  %129 = load i32, i32* %traflag.addr, align 4, !dbg !9284
  call void @traceray(%struct.ShadeInput* %124, %struct.ShadeResult* %125, i16 signext %conv211, float* %arraydecay213, float* %arraydecay214, float* %arraydecay215, %struct.ObjectInstanceRen* %127, %struct.VlakRen* %128, i32 %129), !dbg !9285
  %130 = load float, float* %f, align 4, !dbg !9286
  %sub218 = fsub float 1.000000e+00, %130, !dbg !9287
  store float %sub218, float* %f1, align 4, !dbg !9288
  %mirr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 38, !dbg !9289
  %131 = load float, float* %mirr, align 4, !dbg !9289
  store float %131, float* %fr, align 4, !dbg !9290
  %mirg = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 39, !dbg !9291
  %132 = load float, float* %mirg, align 8, !dbg !9291
  store float %132, float* %fg, align 4, !dbg !9292
  %mirb = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 40, !dbg !9293
  %133 = load float, float* %mirb, align 4, !dbg !9293
  store float %133, float* %fb, align 4, !dbg !9294
  %134 = load float, float* %f, align 4, !dbg !9295
  %135 = load float, float* %fr, align 4, !dbg !9296
  %mul219 = fmul float %134, %135, !dbg !9297
  %spec220 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9298
  %arrayidx221 = getelementptr inbounds [3 x float], [3 x float]* %spec220, i64 0, i64 0, !dbg !9299
  %136 = load float, float* %arrayidx221, align 4, !dbg !9299
  %sub222 = fsub float 1.000000e+00, %136, !dbg !9300
  %mul223 = fmul float %mul219, %sub222, !dbg !9301
  %arrayidx224 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 0, !dbg !9302
  %137 = load float, float* %arrayidx224, align 16, !dbg !9302
  %mul225 = fmul float %mul223, %137, !dbg !9303
  %138 = load float, float* %f1, align 4, !dbg !9304
  %diff226 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9305
  %arrayidx227 = getelementptr inbounds [3 x float], [3 x float]* %diff226, i64 0, i64 0, !dbg !9306
  %139 = load float, float* %arrayidx227, align 4, !dbg !9306
  %mul228 = fmul float %138, %139, !dbg !9307
  %add229 = fadd float %mul225, %mul228, !dbg !9308
  %spec230 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9309
  %arrayidx231 = getelementptr inbounds [3 x float], [3 x float]* %spec230, i64 0, i64 0, !dbg !9310
  %140 = load float, float* %arrayidx231, align 4, !dbg !9310
  %add232 = fadd float %add229, %140, !dbg !9311
  %141 = load float*, float** %col.addr, align 8, !dbg !9312
  %arrayidx233 = getelementptr inbounds float, float* %141, i64 0, !dbg !9312
  store float %add232, float* %arrayidx233, align 4, !dbg !9313
  %142 = load float, float* %f, align 4, !dbg !9314
  %143 = load float, float* %fg, align 4, !dbg !9315
  %mul234 = fmul float %142, %143, !dbg !9316
  %spec235 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9317
  %arrayidx236 = getelementptr inbounds [3 x float], [3 x float]* %spec235, i64 0, i64 1, !dbg !9318
  %144 = load float, float* %arrayidx236, align 4, !dbg !9318
  %sub237 = fsub float 1.000000e+00, %144, !dbg !9319
  %mul238 = fmul float %mul234, %sub237, !dbg !9320
  %arrayidx239 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 1, !dbg !9321
  %145 = load float, float* %arrayidx239, align 4, !dbg !9321
  %mul240 = fmul float %mul238, %145, !dbg !9322
  %146 = load float, float* %f1, align 4, !dbg !9323
  %diff241 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9324
  %arrayidx242 = getelementptr inbounds [3 x float], [3 x float]* %diff241, i64 0, i64 1, !dbg !9325
  %147 = load float, float* %arrayidx242, align 4, !dbg !9325
  %mul243 = fmul float %146, %147, !dbg !9326
  %add244 = fadd float %mul240, %mul243, !dbg !9327
  %spec245 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9328
  %arrayidx246 = getelementptr inbounds [3 x float], [3 x float]* %spec245, i64 0, i64 1, !dbg !9329
  %148 = load float, float* %arrayidx246, align 4, !dbg !9329
  %add247 = fadd float %add244, %148, !dbg !9330
  %149 = load float*, float** %col.addr, align 8, !dbg !9331
  %arrayidx248 = getelementptr inbounds float, float* %149, i64 1, !dbg !9331
  store float %add247, float* %arrayidx248, align 4, !dbg !9332
  %150 = load float, float* %f, align 4, !dbg !9333
  %151 = load float, float* %fb, align 4, !dbg !9334
  %mul249 = fmul float %150, %151, !dbg !9335
  %spec250 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9336
  %arrayidx251 = getelementptr inbounds [3 x float], [3 x float]* %spec250, i64 0, i64 2, !dbg !9337
  %152 = load float, float* %arrayidx251, align 4, !dbg !9337
  %sub252 = fsub float 1.000000e+00, %152, !dbg !9338
  %mul253 = fmul float %mul249, %sub252, !dbg !9339
  %arrayidx254 = getelementptr inbounds [4 x float], [4 x float]* %mircol, i64 0, i64 2, !dbg !9340
  %153 = load float, float* %arrayidx254, align 8, !dbg !9340
  %mul255 = fmul float %mul253, %153, !dbg !9341
  %154 = load float, float* %f1, align 4, !dbg !9342
  %diff256 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9343
  %arrayidx257 = getelementptr inbounds [3 x float], [3 x float]* %diff256, i64 0, i64 2, !dbg !9344
  %155 = load float, float* %arrayidx257, align 4, !dbg !9344
  %mul258 = fmul float %154, %155, !dbg !9345
  %add259 = fadd float %mul255, %mul258, !dbg !9346
  %spec260 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9347
  %arrayidx261 = getelementptr inbounds [3 x float], [3 x float]* %spec260, i64 0, i64 2, !dbg !9348
  %156 = load float, float* %arrayidx261, align 4, !dbg !9348
  %add262 = fadd float %add259, %156, !dbg !9349
  %157 = load float*, float** %col.addr, align 8, !dbg !9350
  %arrayidx263 = getelementptr inbounds float, float* %157, i64 2, !dbg !9350
  store float %add262, float* %arrayidx263, align 4, !dbg !9351
  br label %if.end283, !dbg !9352

if.else264:                                       ; preds = %if.end200
  %diff265 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9353
  %arrayidx266 = getelementptr inbounds [3 x float], [3 x float]* %diff265, i64 0, i64 0, !dbg !9355
  %158 = load float, float* %arrayidx266, align 4, !dbg !9355
  %spec267 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9356
  %arrayidx268 = getelementptr inbounds [3 x float], [3 x float]* %spec267, i64 0, i64 0, !dbg !9357
  %159 = load float, float* %arrayidx268, align 4, !dbg !9357
  %add269 = fadd float %158, %159, !dbg !9358
  %160 = load float*, float** %col.addr, align 8, !dbg !9359
  %arrayidx270 = getelementptr inbounds float, float* %160, i64 0, !dbg !9359
  store float %add269, float* %arrayidx270, align 4, !dbg !9360
  %diff271 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9361
  %arrayidx272 = getelementptr inbounds [3 x float], [3 x float]* %diff271, i64 0, i64 1, !dbg !9362
  %161 = load float, float* %arrayidx272, align 4, !dbg !9362
  %spec273 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9363
  %arrayidx274 = getelementptr inbounds [3 x float], [3 x float]* %spec273, i64 0, i64 1, !dbg !9364
  %162 = load float, float* %arrayidx274, align 4, !dbg !9364
  %add275 = fadd float %161, %162, !dbg !9365
  %163 = load float*, float** %col.addr, align 8, !dbg !9366
  %arrayidx276 = getelementptr inbounds float, float* %163, i64 1, !dbg !9366
  store float %add275, float* %arrayidx276, align 4, !dbg !9367
  %diff277 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9368
  %arrayidx278 = getelementptr inbounds [3 x float], [3 x float]* %diff277, i64 0, i64 2, !dbg !9369
  %164 = load float, float* %arrayidx278, align 4, !dbg !9369
  %spec279 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9370
  %arrayidx280 = getelementptr inbounds [3 x float], [3 x float]* %spec279, i64 0, i64 2, !dbg !9371
  %165 = load float, float* %arrayidx280, align 4, !dbg !9371
  %add281 = fadd float %164, %165, !dbg !9372
  %166 = load float*, float** %col.addr, align 8, !dbg !9373
  %arrayidx282 = getelementptr inbounds float, float* %166, i64 2, !dbg !9373
  store float %add281, float* %arrayidx282, align 4, !dbg !9374
  br label %if.end283

if.end283:                                        ; preds = %if.else264, %if.then203
  %167 = load float, float* %dist_mir, align 4, !dbg !9375
  %cmp284 = fcmp ogt float %167, 0.000000e+00, !dbg !9377
  br i1 %cmp284, label %if.then286, label %if.end289, !dbg !9378

if.then286:                                       ; preds = %if.end283
  call void @llvm.dbg.declare(metadata [3 x float]* %blendcol, metadata !9379, metadata !DIExpression()), !dbg !9381
  %arraydecay287 = getelementptr inbounds [3 x float], [3 x float]* %blendcol, i64 0, i64 0, !dbg !9382
  %168 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !9383
  %169 = load %struct.ShadeResult*, %struct.ShadeResult** %origshr.addr, align 8, !dbg !9384
  %170 = load float*, float** %dir.addr, align 8, !dbg !9385
  call void @ray_fadeout_endcolor(float* %arraydecay287, %struct.ShadeInput* %168, %struct.ShadeInput* %shi, %struct.ShadeResult* %169, %struct.Isect* %isec, float* %170), !dbg !9386
  %171 = load float*, float** %col.addr, align 8, !dbg !9387
  %arraydecay288 = getelementptr inbounds [3 x float], [3 x float]* %blendcol, i64 0, i64 0, !dbg !9388
  %172 = load float, float* %dist_mir, align 4, !dbg !9389
  call void @ray_fadeout(%struct.Isect* %isec, %struct.ShadeInput* %shi, float* %171, float* %arraydecay288, float %172), !dbg !9390
  br label %if.end289, !dbg !9391

if.end289:                                        ; preds = %if.then286, %if.end283
  br label %if.end309, !dbg !9392

if.else290:                                       ; preds = %if.end30
  %diff291 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9393
  %arrayidx292 = getelementptr inbounds [3 x float], [3 x float]* %diff291, i64 0, i64 0, !dbg !9395
  %173 = load float, float* %arrayidx292, align 4, !dbg !9395
  %spec293 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9396
  %arrayidx294 = getelementptr inbounds [3 x float], [3 x float]* %spec293, i64 0, i64 0, !dbg !9397
  %174 = load float, float* %arrayidx294, align 4, !dbg !9397
  %add295 = fadd float %173, %174, !dbg !9398
  %175 = load float*, float** %col.addr, align 8, !dbg !9399
  %arrayidx296 = getelementptr inbounds float, float* %175, i64 0, !dbg !9399
  store float %add295, float* %arrayidx296, align 4, !dbg !9400
  %diff297 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9401
  %arrayidx298 = getelementptr inbounds [3 x float], [3 x float]* %diff297, i64 0, i64 1, !dbg !9402
  %176 = load float, float* %arrayidx298, align 4, !dbg !9402
  %spec299 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9403
  %arrayidx300 = getelementptr inbounds [3 x float], [3 x float]* %spec299, i64 0, i64 1, !dbg !9404
  %177 = load float, float* %arrayidx300, align 4, !dbg !9404
  %add301 = fadd float %176, %177, !dbg !9405
  %178 = load float*, float** %col.addr, align 8, !dbg !9406
  %arrayidx302 = getelementptr inbounds float, float* %178, i64 1, !dbg !9406
  store float %add301, float* %arrayidx302, align 4, !dbg !9407
  %diff303 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 6, !dbg !9408
  %arrayidx304 = getelementptr inbounds [3 x float], [3 x float]* %diff303, i64 0, i64 2, !dbg !9409
  %179 = load float, float* %arrayidx304, align 4, !dbg !9409
  %spec305 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 8, !dbg !9410
  %arrayidx306 = getelementptr inbounds [3 x float], [3 x float]* %spec305, i64 0, i64 2, !dbg !9411
  %180 = load float, float* %arrayidx306, align 4, !dbg !9411
  %add307 = fadd float %179, %180, !dbg !9412
  %181 = load float*, float** %col.addr, align 8, !dbg !9413
  %arrayidx308 = getelementptr inbounds float, float* %181, i64 2, !dbg !9413
  store float %add307, float* %arrayidx308, align 4, !dbg !9414
  br label %if.end309

if.end309:                                        ; preds = %if.else290, %if.end289
  br label %if.end311, !dbg !9415

if.else310:                                       ; preds = %cond.end
  %182 = load float*, float** %col.addr, align 8, !dbg !9416
  %183 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !9418
  %184 = load %struct.ShadeResult*, %struct.ShadeResult** %origshr.addr, align 8, !dbg !9419
  %185 = load float*, float** %dir.addr, align 8, !dbg !9420
  call void @ray_fadeout_endcolor(float* %182, %struct.ShadeInput* %183, %struct.ShadeInput* %shi, %struct.ShadeResult* %184, %struct.Isect* %isec, float* %185), !dbg !9421
  br label %if.end311

if.end311:                                        ; preds = %if.then, %if.else310, %if.end309
  ret void, !dbg !9422
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @adaptive_sample_variance(i32 %samples, float* %col, float* %colsq, float %thresh) #0 !dbg !9423 {
entry:
  %retval = alloca i32, align 4
  %samples.addr = alloca i32, align 4
  %col.addr = alloca float*, align 8
  %colsq.addr = alloca float*, align 8
  %thresh.addr = alloca float, align 4
  %var = alloca [3 x float], align 4
  %mean = alloca [3 x float], align 4
  store i32 %samples, i32* %samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samples.addr, metadata !9426, metadata !DIExpression()), !dbg !9427
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !9428, metadata !DIExpression()), !dbg !9429
  store float* %colsq, float** %colsq.addr, align 8
  call void @llvm.dbg.declare(metadata float** %colsq.addr, metadata !9430, metadata !DIExpression()), !dbg !9431
  store float %thresh, float* %thresh.addr, align 4
  call void @llvm.dbg.declare(metadata float* %thresh.addr, metadata !9432, metadata !DIExpression()), !dbg !9433
  call void @llvm.dbg.declare(metadata [3 x float]* %var, metadata !9434, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.declare(metadata [3 x float]* %mean, metadata !9436, metadata !DIExpression()), !dbg !9437
  %0 = load float, float* %thresh.addr, align 4, !dbg !9438
  %div = fdiv float %0, 2.000000e+00, !dbg !9438
  store float %div, float* %thresh.addr, align 4, !dbg !9438
  %1 = load float*, float** %col.addr, align 8, !dbg !9439
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !9439
  %2 = load float, float* %arrayidx, align 4, !dbg !9439
  %3 = load i32, i32* %samples.addr, align 4, !dbg !9440
  %conv = sitofp i32 %3 to float, !dbg !9441
  %div1 = fdiv float %2, %conv, !dbg !9442
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %mean, i64 0, i64 0, !dbg !9443
  store float %div1, float* %arrayidx2, align 4, !dbg !9444
  %4 = load float*, float** %col.addr, align 8, !dbg !9445
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !9445
  %5 = load float, float* %arrayidx3, align 4, !dbg !9445
  %6 = load i32, i32* %samples.addr, align 4, !dbg !9446
  %conv4 = sitofp i32 %6 to float, !dbg !9447
  %div5 = fdiv float %5, %conv4, !dbg !9448
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %mean, i64 0, i64 1, !dbg !9449
  store float %div5, float* %arrayidx6, align 4, !dbg !9450
  %7 = load float*, float** %col.addr, align 8, !dbg !9451
  %arrayidx7 = getelementptr inbounds float, float* %7, i64 2, !dbg !9451
  %8 = load float, float* %arrayidx7, align 4, !dbg !9451
  %9 = load i32, i32* %samples.addr, align 4, !dbg !9452
  %conv8 = sitofp i32 %9 to float, !dbg !9453
  %div9 = fdiv float %8, %conv8, !dbg !9454
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %mean, i64 0, i64 2, !dbg !9455
  store float %div9, float* %arrayidx10, align 4, !dbg !9456
  %10 = load float*, float** %colsq.addr, align 8, !dbg !9457
  %arrayidx11 = getelementptr inbounds float, float* %10, i64 0, !dbg !9457
  %11 = load float, float* %arrayidx11, align 4, !dbg !9457
  %12 = load i32, i32* %samples.addr, align 4, !dbg !9458
  %conv12 = sitofp i32 %12 to float, !dbg !9459
  %div13 = fdiv float %11, %conv12, !dbg !9460
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %mean, i64 0, i64 0, !dbg !9461
  %13 = load float, float* %arrayidx14, align 4, !dbg !9461
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %mean, i64 0, i64 0, !dbg !9462
  %14 = load float, float* %arrayidx15, align 4, !dbg !9462
  %mul = fmul float %13, %14, !dbg !9463
  %sub = fsub float %div13, %mul, !dbg !9464
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %var, i64 0, i64 0, !dbg !9465
  store float %sub, float* %arrayidx16, align 4, !dbg !9466
  %15 = load float*, float** %colsq.addr, align 8, !dbg !9467
  %arrayidx17 = getelementptr inbounds float, float* %15, i64 1, !dbg !9467
  %16 = load float, float* %arrayidx17, align 4, !dbg !9467
  %17 = load i32, i32* %samples.addr, align 4, !dbg !9468
  %conv18 = sitofp i32 %17 to float, !dbg !9469
  %div19 = fdiv float %16, %conv18, !dbg !9470
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %mean, i64 0, i64 1, !dbg !9471
  %18 = load float, float* %arrayidx20, align 4, !dbg !9471
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %mean, i64 0, i64 1, !dbg !9472
  %19 = load float, float* %arrayidx21, align 4, !dbg !9472
  %mul22 = fmul float %18, %19, !dbg !9473
  %sub23 = fsub float %div19, %mul22, !dbg !9474
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %var, i64 0, i64 1, !dbg !9475
  store float %sub23, float* %arrayidx24, align 4, !dbg !9476
  %20 = load float*, float** %colsq.addr, align 8, !dbg !9477
  %arrayidx25 = getelementptr inbounds float, float* %20, i64 2, !dbg !9477
  %21 = load float, float* %arrayidx25, align 4, !dbg !9477
  %22 = load i32, i32* %samples.addr, align 4, !dbg !9478
  %conv26 = sitofp i32 %22 to float, !dbg !9479
  %div27 = fdiv float %21, %conv26, !dbg !9480
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %mean, i64 0, i64 2, !dbg !9481
  %23 = load float, float* %arrayidx28, align 4, !dbg !9481
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %mean, i64 0, i64 2, !dbg !9482
  %24 = load float, float* %arrayidx29, align 4, !dbg !9482
  %mul30 = fmul float %23, %24, !dbg !9483
  %sub31 = fsub float %div27, %mul30, !dbg !9484
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %var, i64 0, i64 2, !dbg !9485
  store float %sub31, float* %arrayidx32, align 4, !dbg !9486
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %var, i64 0, i64 0, !dbg !9487
  %25 = load float, float* %arrayidx33, align 4, !dbg !9487
  %mul34 = fmul float %25, 0x3FD99999A0000000, !dbg !9489
  %26 = load float, float* %thresh.addr, align 4, !dbg !9490
  %cmp = fcmp olt float %mul34, %26, !dbg !9491
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9492

land.lhs.true:                                    ; preds = %entry
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %var, i64 0, i64 1, !dbg !9493
  %27 = load float, float* %arrayidx36, align 4, !dbg !9493
  %mul37 = fmul float %27, 0x3FD3333340000000, !dbg !9494
  %28 = load float, float* %thresh.addr, align 4, !dbg !9495
  %cmp38 = fcmp olt float %mul37, %28, !dbg !9496
  br i1 %cmp38, label %land.lhs.true40, label %if.else, !dbg !9497

land.lhs.true40:                                  ; preds = %land.lhs.true
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %var, i64 0, i64 2, !dbg !9498
  %29 = load float, float* %arrayidx41, align 4, !dbg !9498
  %mul42 = fmul float %29, 0x3FE3333340000000, !dbg !9499
  %30 = load float, float* %thresh.addr, align 4, !dbg !9500
  %cmp43 = fcmp olt float %mul42, %30, !dbg !9501
  br i1 %cmp43, label %if.then, label %if.else, !dbg !9502

if.then:                                          ; preds = %land.lhs.true40
  store i32 1, i32* %retval, align 4, !dbg !9503
  br label %return, !dbg !9503

if.else:                                          ; preds = %land.lhs.true40, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !9504
  br label %return, !dbg !9504

return:                                           ; preds = %if.else, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !9505
  ret i32 %31, !dbg !9505
}

; Function Attrs: noinline nounwind uwtable
define internal void @release_thread_qmcsampler(%struct.Render* %UNUSED_re, i32 %UNUSED_thread, %struct.QMCSampler* %qsa) #0 !dbg !9506 {
entry:
  %UNUSED_re.addr = alloca %struct.Render*, align 8
  %UNUSED_thread.addr = alloca i32, align 4
  %qsa.addr = alloca %struct.QMCSampler*, align 8
  store %struct.Render* %UNUSED_re, %struct.Render** %UNUSED_re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %UNUSED_re.addr, metadata !9509, metadata !DIExpression()), !dbg !9510
  store i32 %UNUSED_thread, i32* %UNUSED_thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_thread.addr, metadata !9511, metadata !DIExpression()), !dbg !9512
  store %struct.QMCSampler* %qsa, %struct.QMCSampler** %qsa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa.addr, metadata !9513, metadata !DIExpression()), !dbg !9514
  %0 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !9515
  %used = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %0, i32 0, i32 4, !dbg !9516
  store i32 0, i32* %used, align 8, !dbg !9517
  ret void, !dbg !9518
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.QMCSampler* @QMC_initSampler(i32 %type, i32 %tot) #0 !dbg !9519 {
entry:
  %type.addr = alloca i32, align 4
  %tot.addr = alloca i32, align 4
  %qsa = alloca %struct.QMCSampler*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9522, metadata !DIExpression()), !dbg !9523
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !9524, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa, metadata !9526, metadata !DIExpression()), !dbg !9527
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9528
  %call = call i8* %0(i64 56, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0)), !dbg !9528
  %1 = bitcast i8* %call to %struct.QMCSampler*, !dbg !9528
  store %struct.QMCSampler* %1, %struct.QMCSampler** %qsa, align 8, !dbg !9527
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9529
  %3 = load i32, i32* %tot.addr, align 4, !dbg !9530
  %conv = sext i32 %3 to i64, !dbg !9530
  %mul = mul i64 16, %conv, !dbg !9531
  %call1 = call i8* %2(i64 %mul, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)), !dbg !9529
  %4 = bitcast i8* %call1 to double*, !dbg !9529
  %5 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !9532
  %samp2d = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %5, i32 0, i32 5, !dbg !9533
  store double* %4, double** %samp2d, align 8, !dbg !9534
  %6 = load i32, i32* %tot.addr, align 4, !dbg !9535
  %7 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !9536
  %tot2 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %7, i32 0, i32 3, !dbg !9537
  store i32 %6, i32* %tot2, align 4, !dbg !9538
  %8 = load i32, i32* %type.addr, align 4, !dbg !9539
  %9 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !9540
  %type3 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %9, i32 0, i32 2, !dbg !9541
  store i32 %8, i32* %type3, align 8, !dbg !9542
  %10 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !9543
  %type4 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %10, i32 0, i32 2, !dbg !9545
  %11 = load i32, i32* %type4, align 8, !dbg !9545
  %cmp = icmp eq i32 %11, 2, !dbg !9546
  br i1 %cmp, label %if.then, label %if.end, !dbg !9547

if.then:                                          ; preds = %entry
  %12 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !9548
  %samp2d6 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %12, i32 0, i32 5, !dbg !9549
  %13 = load double*, double** %samp2d6, align 8, !dbg !9549
  %14 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !9550
  %tot7 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %14, i32 0, i32 3, !dbg !9551
  %15 = load i32, i32* %tot7, align 4, !dbg !9551
  call void @hammersley_create(double* %13, i32 %15), !dbg !9552
  br label %if.end, !dbg !9552

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa, align 8, !dbg !9553
  ret %struct.QMCSampler* %16, !dbg !9554
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @hammersley_create(double* %out, i32 %n) #0 !dbg !9555 {
entry:
  %out.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %p = alloca double, align 8
  %t = alloca double, align 8
  %k = alloca i32, align 4
  %kk = alloca i32, align 4
  store double* %out, double** %out.addr, align 8
  call void @llvm.dbg.declare(metadata double** %out.addr, metadata !9558, metadata !DIExpression()), !dbg !9559
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9560, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.declare(metadata double* %p, metadata !9562, metadata !DIExpression()), !dbg !9563
  call void @llvm.dbg.declare(metadata double* %t, metadata !9564, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9566, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.declare(metadata i32* %kk, metadata !9568, metadata !DIExpression()), !dbg !9569
  store i32 0, i32* %k, align 4, !dbg !9570
  br label %for.cond, !dbg !9572

for.cond:                                         ; preds = %for.inc11, %entry
  %0 = load i32, i32* %k, align 4, !dbg !9573
  %1 = load i32, i32* %n.addr, align 4, !dbg !9575
  %cmp = icmp slt i32 %0, %1, !dbg !9576
  br i1 %cmp, label %for.body, label %for.end12, !dbg !9577

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %t, align 8, !dbg !9578
  store double 5.000000e-01, double* %p, align 8, !dbg !9580
  %2 = load i32, i32* %k, align 4, !dbg !9582
  store i32 %2, i32* %kk, align 4, !dbg !9583
  br label %for.cond1, !dbg !9584

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %kk, align 4, !dbg !9585
  %tobool = icmp ne i32 %3, 0, !dbg !9587
  br i1 %tobool, label %for.body2, label %for.end, !dbg !9587

for.body2:                                        ; preds = %for.cond1
  %4 = load i32, i32* %kk, align 4, !dbg !9588
  %and = and i32 %4, 1, !dbg !9591
  %tobool3 = icmp ne i32 %and, 0, !dbg !9591
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9592

if.then:                                          ; preds = %for.body2
  %5 = load double, double* %p, align 8, !dbg !9593
  %6 = load double, double* %t, align 8, !dbg !9595
  %add = fadd double %6, %5, !dbg !9595
  store double %add, double* %t, align 8, !dbg !9595
  br label %if.end, !dbg !9596

if.end:                                           ; preds = %if.then, %for.body2
  br label %for.inc, !dbg !9597

for.inc:                                          ; preds = %if.end
  %7 = load double, double* %p, align 8, !dbg !9598
  %mul = fmul double %7, 5.000000e-01, !dbg !9598
  store double %mul, double* %p, align 8, !dbg !9598
  %8 = load i32, i32* %kk, align 4, !dbg !9599
  %shr = ashr i32 %8, 1, !dbg !9599
  store i32 %shr, i32* %kk, align 4, !dbg !9599
  br label %for.cond1, !dbg !9600, !llvm.loop !9601

for.end:                                          ; preds = %for.cond1
  %9 = load i32, i32* %k, align 4, !dbg !9603
  %conv = sitofp i32 %9 to double, !dbg !9604
  %10 = load i32, i32* %n.addr, align 4, !dbg !9605
  %conv4 = sitofp i32 %10 to double, !dbg !9606
  %div = fdiv double %conv, %conv4, !dbg !9607
  %11 = load double*, double** %out.addr, align 8, !dbg !9608
  %12 = load i32, i32* %k, align 4, !dbg !9609
  %mul5 = mul nsw i32 2, %12, !dbg !9610
  %add6 = add nsw i32 %mul5, 0, !dbg !9611
  %idxprom = sext i32 %add6 to i64, !dbg !9608
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom, !dbg !9608
  store double %div, double* %arrayidx, align 8, !dbg !9612
  %13 = load double, double* %t, align 8, !dbg !9613
  %14 = load double*, double** %out.addr, align 8, !dbg !9614
  %15 = load i32, i32* %k, align 4, !dbg !9615
  %mul7 = mul nsw i32 2, %15, !dbg !9616
  %add8 = add nsw i32 %mul7, 1, !dbg !9617
  %idxprom9 = sext i32 %add8 to i64, !dbg !9614
  %arrayidx10 = getelementptr inbounds double, double* %14, i64 %idxprom9, !dbg !9614
  store double %13, double* %arrayidx10, align 8, !dbg !9618
  br label %for.inc11, !dbg !9619

for.inc11:                                        ; preds = %for.end
  %16 = load i32, i32* %k, align 4, !dbg !9620
  %inc = add nsw i32 %16, 1, !dbg !9620
  store i32 %inc, i32* %k, align 4, !dbg !9620
  br label %for.cond, !dbg !9621, !llvm.loop !9622

for.end12:                                        ; preds = %for.cond
  ret void, !dbg !9624
}

declare dso_local float @BLI_thread_frand(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @halton_sample(double* %ht_invprimes, double* %ht_nums, double* %v) #0 !dbg !9625 {
entry:
  %ht_invprimes.addr = alloca double*, align 8
  %ht_nums.addr = alloca double*, align 8
  %v.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %r = alloca double, align 8
  %lasth = alloca double, align 8
  %h = alloca double, align 8
  store double* %ht_invprimes, double** %ht_invprimes.addr, align 8
  call void @llvm.dbg.declare(metadata double** %ht_invprimes.addr, metadata !9628, metadata !DIExpression()), !dbg !9629
  store double* %ht_nums, double** %ht_nums.addr, align 8
  call void @llvm.dbg.declare(metadata double** %ht_nums.addr, metadata !9630, metadata !DIExpression()), !dbg !9631
  store double* %v, double** %v.addr, align 8
  call void @llvm.dbg.declare(metadata double** %v.addr, metadata !9632, metadata !DIExpression()), !dbg !9633
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9634, metadata !DIExpression()), !dbg !9635
  store i32 0, i32* %i, align 4, !dbg !9636
  br label %for.cond, !dbg !9638

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9639
  %cmp = icmp ult i32 %0, 2, !dbg !9641
  br i1 %cmp, label %for.body, label %for.end, !dbg !9642

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata double* %r, metadata !9643, metadata !DIExpression()), !dbg !9645
  %1 = load double*, double** %ht_nums.addr, align 8, !dbg !9646
  %2 = load i32, i32* %i, align 4, !dbg !9647
  %idxprom = zext i32 %2 to i64, !dbg !9646
  %arrayidx = getelementptr inbounds double, double* %1, i64 %idxprom, !dbg !9646
  %3 = load double, double* %arrayidx, align 8, !dbg !9646
  %sub = fsub double 1.000000e+00, %3, !dbg !9648
  %sub1 = fsub double %sub, 1.000000e-10, !dbg !9649
  %4 = call double @llvm.fabs.f64(double %sub1), !dbg !9650
  store double %4, double* %r, align 8, !dbg !9645
  %5 = load double*, double** %ht_invprimes.addr, align 8, !dbg !9651
  %6 = load i32, i32* %i, align 4, !dbg !9653
  %idxprom2 = zext i32 %6 to i64, !dbg !9651
  %arrayidx3 = getelementptr inbounds double, double* %5, i64 %idxprom2, !dbg !9651
  %7 = load double, double* %arrayidx3, align 8, !dbg !9651
  %8 = load double, double* %r, align 8, !dbg !9654
  %cmp4 = fcmp oge double %7, %8, !dbg !9655
  br i1 %cmp4, label %if.then, label %if.else, !dbg !9656

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata double* %lasth, metadata !9657, metadata !DIExpression()), !dbg !9659
  call void @llvm.dbg.declare(metadata double* %h, metadata !9660, metadata !DIExpression()), !dbg !9661
  %9 = load double*, double** %ht_invprimes.addr, align 8, !dbg !9662
  %10 = load i32, i32* %i, align 4, !dbg !9663
  %idxprom5 = zext i32 %10 to i64, !dbg !9662
  %arrayidx6 = getelementptr inbounds double, double* %9, i64 %idxprom5, !dbg !9662
  %11 = load double, double* %arrayidx6, align 8, !dbg !9662
  store double %11, double* %h, align 8, !dbg !9661
  br label %do.body, !dbg !9664

do.body:                                          ; preds = %do.cond, %if.then
  %12 = load double, double* %h, align 8, !dbg !9665
  store double %12, double* %lasth, align 8, !dbg !9667
  %13 = load double*, double** %ht_invprimes.addr, align 8, !dbg !9668
  %14 = load i32, i32* %i, align 4, !dbg !9669
  %idxprom7 = zext i32 %14 to i64, !dbg !9668
  %arrayidx8 = getelementptr inbounds double, double* %13, i64 %idxprom7, !dbg !9668
  %15 = load double, double* %arrayidx8, align 8, !dbg !9668
  %16 = load double, double* %h, align 8, !dbg !9670
  %mul = fmul double %16, %15, !dbg !9670
  store double %mul, double* %h, align 8, !dbg !9670
  br label %do.cond, !dbg !9671

do.cond:                                          ; preds = %do.body
  %17 = load double, double* %h, align 8, !dbg !9672
  %18 = load double, double* %r, align 8, !dbg !9673
  %cmp9 = fcmp oge double %17, %18, !dbg !9674
  br i1 %cmp9, label %do.body, label %do.end, !dbg !9671, !llvm.loop !9675

do.end:                                           ; preds = %do.cond
  %19 = load double, double* %lasth, align 8, !dbg !9677
  %20 = load double, double* %h, align 8, !dbg !9678
  %add = fadd double %19, %20, !dbg !9679
  %sub10 = fsub double %add, 1.000000e+00, !dbg !9680
  %21 = load double*, double** %ht_nums.addr, align 8, !dbg !9681
  %22 = load i32, i32* %i, align 4, !dbg !9682
  %idxprom11 = zext i32 %22 to i64, !dbg !9681
  %arrayidx12 = getelementptr inbounds double, double* %21, i64 %idxprom11, !dbg !9681
  %23 = load double, double* %arrayidx12, align 8, !dbg !9683
  %add13 = fadd double %23, %sub10, !dbg !9683
  store double %add13, double* %arrayidx12, align 8, !dbg !9683
  br label %if.end, !dbg !9684

if.else:                                          ; preds = %for.body
  %24 = load double*, double** %ht_invprimes.addr, align 8, !dbg !9685
  %25 = load i32, i32* %i, align 4, !dbg !9686
  %idxprom14 = zext i32 %25 to i64, !dbg !9685
  %arrayidx15 = getelementptr inbounds double, double* %24, i64 %idxprom14, !dbg !9685
  %26 = load double, double* %arrayidx15, align 8, !dbg !9685
  %27 = load double*, double** %ht_nums.addr, align 8, !dbg !9687
  %28 = load i32, i32* %i, align 4, !dbg !9688
  %idxprom16 = zext i32 %28 to i64, !dbg !9687
  %arrayidx17 = getelementptr inbounds double, double* %27, i64 %idxprom16, !dbg !9687
  %29 = load double, double* %arrayidx17, align 8, !dbg !9689
  %add18 = fadd double %29, %26, !dbg !9689
  store double %add18, double* %arrayidx17, align 8, !dbg !9689
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %30 = load double*, double** %ht_nums.addr, align 8, !dbg !9690
  %31 = load i32, i32* %i, align 4, !dbg !9691
  %idxprom19 = zext i32 %31 to i64, !dbg !9690
  %arrayidx20 = getelementptr inbounds double, double* %30, i64 %idxprom19, !dbg !9690
  %32 = load double, double* %arrayidx20, align 8, !dbg !9690
  %conv = fptrunc double %32 to float, !dbg !9692
  %conv21 = fpext float %conv to double, !dbg !9692
  %33 = load double*, double** %v.addr, align 8, !dbg !9693
  %34 = load i32, i32* %i, align 4, !dbg !9694
  %idxprom22 = zext i32 %34 to i64, !dbg !9693
  %arrayidx23 = getelementptr inbounds double, double* %33, i64 %idxprom22, !dbg !9693
  store double %conv21, double* %arrayidx23, align 8, !dbg !9695
  br label %for.inc, !dbg !9696

for.inc:                                          ; preds = %if.end
  %35 = load i32, i32* %i, align 4, !dbg !9697
  %inc = add i32 %35, 1, !dbg !9697
  store i32 %inc, i32* %i, align 4, !dbg !9697
  br label %for.cond, !dbg !9698, !llvm.loop !9699

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9701
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3v3fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !9702 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9705, metadata !DIExpression()), !dbg !9706
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9707, metadata !DIExpression()), !dbg !9708
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9709, metadata !DIExpression()), !dbg !9710
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !9711, metadata !DIExpression()), !dbg !9712
  %0 = load float*, float** %a.addr, align 8, !dbg !9713
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9713
  %1 = load float, float* %arrayidx, align 4, !dbg !9713
  %2 = load float*, float** %b.addr, align 8, !dbg !9714
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9714
  %3 = load float, float* %arrayidx1, align 4, !dbg !9714
  %4 = load float, float* %f.addr, align 4, !dbg !9715
  %mul = fmul float %3, %4, !dbg !9716
  %add = fadd float %1, %mul, !dbg !9717
  %5 = load float*, float** %r.addr, align 8, !dbg !9718
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !9718
  store float %add, float* %arrayidx2, align 4, !dbg !9719
  %6 = load float*, float** %a.addr, align 8, !dbg !9720
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9720
  %7 = load float, float* %arrayidx3, align 4, !dbg !9720
  %8 = load float*, float** %b.addr, align 8, !dbg !9721
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !9721
  %9 = load float, float* %arrayidx4, align 4, !dbg !9721
  %10 = load float, float* %f.addr, align 4, !dbg !9722
  %mul5 = fmul float %9, %10, !dbg !9723
  %add6 = fadd float %7, %mul5, !dbg !9724
  %11 = load float*, float** %r.addr, align 8, !dbg !9725
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !9725
  store float %add6, float* %arrayidx7, align 4, !dbg !9726
  %12 = load float*, float** %a.addr, align 8, !dbg !9727
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !9727
  %13 = load float, float* %arrayidx8, align 4, !dbg !9727
  %14 = load float*, float** %b.addr, align 8, !dbg !9728
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 2, !dbg !9728
  %15 = load float, float* %arrayidx9, align 4, !dbg !9728
  %16 = load float, float* %f.addr, align 4, !dbg !9729
  %mul10 = fmul float %15, %16, !dbg !9730
  %add11 = fadd float %13, %mul10, !dbg !9731
  %17 = load float*, float** %r.addr, align 8, !dbg !9732
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 2, !dbg !9732
  store float %add11, float* %arrayidx12, align 4, !dbg !9733
  ret void, !dbg !9734
}

; Function Attrs: noinline nounwind uwtable
define internal void @QMC_getSample(double* %s, %struct.QMCSampler* %qsa, i32 %thread, i32 %num) #0 !dbg !9735 {
entry:
  %s.addr = alloca double*, align 8
  %qsa.addr = alloca %struct.QMCSampler*, align 8
  %thread.addr = alloca i32, align 4
  %num.addr = alloca i32, align 4
  store double* %s, double** %s.addr, align 8
  call void @llvm.dbg.declare(metadata double** %s.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  store %struct.QMCSampler* %qsa, %struct.QMCSampler** %qsa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa.addr, metadata !9740, metadata !DIExpression()), !dbg !9741
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  %0 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !9746
  %type = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %0, i32 0, i32 2, !dbg !9748
  %1 = load i32, i32* %type, align 8, !dbg !9748
  %cmp = icmp eq i32 %1, 2, !dbg !9749
  br i1 %cmp, label %if.then, label %if.else, !dbg !9750

if.then:                                          ; preds = %entry
  %2 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !9751
  %samp2d = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %2, i32 0, i32 5, !dbg !9753
  %3 = load double*, double** %samp2d, align 8, !dbg !9753
  %4 = load i32, i32* %num.addr, align 4, !dbg !9754
  %mul = mul nsw i32 2, %4, !dbg !9755
  %add = add nsw i32 %mul, 0, !dbg !9756
  %idxprom = sext i32 %add to i64, !dbg !9751
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom, !dbg !9751
  %5 = load double, double* %arrayidx, align 8, !dbg !9751
  %6 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !9757
  %offs = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %6, i32 0, i32 6, !dbg !9758
  %7 = load i32, i32* %thread.addr, align 4, !dbg !9759
  %idxprom1 = sext i32 %7 to i64, !dbg !9757
  %arrayidx2 = getelementptr inbounds [1 x [2 x double]], [1 x [2 x double]]* %offs, i64 0, i64 %idxprom1, !dbg !9757
  %arrayidx3 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2, i64 0, i64 0, !dbg !9757
  %8 = load double, double* %arrayidx3, align 8, !dbg !9757
  %add4 = fadd double %5, %8, !dbg !9760
  %call = call double @fmod(double %add4, double 1.000000e+00) #5, !dbg !9761
  %9 = load double*, double** %s.addr, align 8, !dbg !9762
  %arrayidx5 = getelementptr inbounds double, double* %9, i64 0, !dbg !9762
  store double %call, double* %arrayidx5, align 8, !dbg !9763
  %10 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !9764
  %samp2d6 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %10, i32 0, i32 5, !dbg !9765
  %11 = load double*, double** %samp2d6, align 8, !dbg !9765
  %12 = load i32, i32* %num.addr, align 4, !dbg !9766
  %mul7 = mul nsw i32 2, %12, !dbg !9767
  %add8 = add nsw i32 %mul7, 1, !dbg !9768
  %idxprom9 = sext i32 %add8 to i64, !dbg !9764
  %arrayidx10 = getelementptr inbounds double, double* %11, i64 %idxprom9, !dbg !9764
  %13 = load double, double* %arrayidx10, align 8, !dbg !9764
  %14 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !9769
  %offs11 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %14, i32 0, i32 6, !dbg !9770
  %15 = load i32, i32* %thread.addr, align 4, !dbg !9771
  %idxprom12 = sext i32 %15 to i64, !dbg !9769
  %arrayidx13 = getelementptr inbounds [1 x [2 x double]], [1 x [2 x double]]* %offs11, i64 0, i64 %idxprom12, !dbg !9769
  %arrayidx14 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx13, i64 0, i64 1, !dbg !9769
  %16 = load double, double* %arrayidx14, align 8, !dbg !9769
  %add15 = fadd double %13, %16, !dbg !9772
  %call16 = call double @fmod(double %add15, double 1.000000e+00) #5, !dbg !9773
  %17 = load double*, double** %s.addr, align 8, !dbg !9774
  %arrayidx17 = getelementptr inbounds double, double* %17, i64 1, !dbg !9774
  store double %call16, double* %arrayidx17, align 8, !dbg !9775
  br label %if.end, !dbg !9776

if.else:                                          ; preds = %entry
  %18 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !9777
  %samp2d18 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %18, i32 0, i32 5, !dbg !9779
  %19 = load double*, double** %samp2d18, align 8, !dbg !9779
  %20 = load i32, i32* %num.addr, align 4, !dbg !9780
  %mul19 = mul nsw i32 2, %20, !dbg !9781
  %add20 = add nsw i32 %mul19, 0, !dbg !9782
  %idxprom21 = sext i32 %add20 to i64, !dbg !9777
  %arrayidx22 = getelementptr inbounds double, double* %19, i64 %idxprom21, !dbg !9777
  %21 = load double, double* %arrayidx22, align 8, !dbg !9777
  %22 = load double*, double** %s.addr, align 8, !dbg !9783
  %arrayidx23 = getelementptr inbounds double, double* %22, i64 0, !dbg !9783
  store double %21, double* %arrayidx23, align 8, !dbg !9784
  %23 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !9785
  %samp2d24 = getelementptr inbounds %struct.QMCSampler, %struct.QMCSampler* %23, i32 0, i32 5, !dbg !9786
  %24 = load double*, double** %samp2d24, align 8, !dbg !9786
  %25 = load i32, i32* %num.addr, align 4, !dbg !9787
  %mul25 = mul nsw i32 2, %25, !dbg !9788
  %add26 = add nsw i32 %mul25, 1, !dbg !9789
  %idxprom27 = sext i32 %add26 to i64, !dbg !9785
  %arrayidx28 = getelementptr inbounds double, double* %24, i64 %idxprom27, !dbg !9785
  %26 = load double, double* %arrayidx28, align 8, !dbg !9785
  %27 = load double*, double** %s.addr, align 8, !dbg !9790
  %arrayidx29 = getelementptr inbounds double, double* %27, i64 1, !dbg !9790
  store double %26, double* %arrayidx29, align 8, !dbg !9791
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9792
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #4

; Function Attrs: nounwind
declare dso_local float @cosf(float) #4

; Function Attrs: nounwind
declare dso_local float @sinf(float) #4

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v4(float* %r) #0 !dbg !9793 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9794, metadata !DIExpression()), !dbg !9795
  %0 = load float*, float** %r.addr, align 8, !dbg !9796
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9796
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9797
  %1 = load float*, float** %r.addr, align 8, !dbg !9798
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !9798
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !9799
  %2 = load float*, float** %r.addr, align 8, !dbg !9800
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !9800
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !9801
  %3 = load float*, float** %r.addr, align 8, !dbg !9802
  %arrayidx3 = getelementptr inbounds float, float* %3, i64 3, !dbg !9802
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !9803
  ret void, !dbg !9804
}

declare dso_local void @RE_instance_rotate_ray_restore(%struct.ObjectInstanceRen*, %struct.Isect*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @shade_by_transmission(%struct.Isect* %is, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !9805 {
entry:
  %retval = alloca float, align 4
  %is.addr = alloca %struct.Isect*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %d = alloca float, align 4
  %p = alloca float, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %dz = alloca float, align 4
  store %struct.Isect* %is, %struct.Isect** %is.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %is.addr, metadata !9808, metadata !DIExpression()), !dbg !9809
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !9810, metadata !DIExpression()), !dbg !9811
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !9812, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.declare(metadata float* %d, metadata !9814, metadata !DIExpression()), !dbg !9815
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9816
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !9818
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !9818
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 51, !dbg !9819
  %2 = load i32, i32* %mode, align 4, !dbg !9819
  %and = and i32 %2, 65536, !dbg !9820
  %cmp = icmp eq i32 0, %and, !dbg !9821
  br i1 %cmp, label %if.then, label %if.end, !dbg !9822

if.then:                                          ; preds = %entry
  store float -1.000000e+00, float* %retval, align 4, !dbg !9823
  br label %return, !dbg !9823

if.end:                                           ; preds = %entry
  %3 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9824
  %mat1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %3, i32 0, i32 0, !dbg !9826
  %4 = load %struct.Material*, %struct.Material** %mat1, align 8, !dbg !9826
  %tx_limit = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 34, !dbg !9827
  %5 = load float, float* %tx_limit, align 4, !dbg !9827
  %cmp2 = fcmp ole float %5, 0.000000e+00, !dbg !9828
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !9829

if.then3:                                         ; preds = %if.end
  store float 1.000000e+00, float* %d, align 4, !dbg !9830
  br label %if.end40, !dbg !9832

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %p, metadata !9833, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.declare(metadata float* %dx, metadata !9836, metadata !DIExpression()), !dbg !9837
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9838
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 29, !dbg !9839
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9838
  %7 = load float, float* %arrayidx, align 8, !dbg !9838
  %8 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !9840
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %8, i32 0, i32 0, !dbg !9841
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !9840
  %9 = load float, float* %arrayidx4, align 8, !dbg !9840
  %sub = fsub float %7, %9, !dbg !9842
  store float %sub, float* %dx, align 4, !dbg !9837
  call void @llvm.dbg.declare(metadata float* %dy, metadata !9843, metadata !DIExpression()), !dbg !9844
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9845
  %co5 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 29, !dbg !9846
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %co5, i64 0, i64 1, !dbg !9845
  %11 = load float, float* %arrayidx6, align 4, !dbg !9845
  %12 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !9847
  %start7 = getelementptr inbounds %struct.Isect, %struct.Isect* %12, i32 0, i32 0, !dbg !9848
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %start7, i64 0, i64 1, !dbg !9847
  %13 = load float, float* %arrayidx8, align 4, !dbg !9847
  %sub9 = fsub float %11, %13, !dbg !9849
  store float %sub9, float* %dy, align 4, !dbg !9844
  call void @llvm.dbg.declare(metadata float* %dz, metadata !9850, metadata !DIExpression()), !dbg !9851
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9852
  %co10 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 29, !dbg !9853
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %co10, i64 0, i64 2, !dbg !9852
  %15 = load float, float* %arrayidx11, align 8, !dbg !9852
  %16 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !9854
  %start12 = getelementptr inbounds %struct.Isect, %struct.Isect* %16, i32 0, i32 0, !dbg !9855
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %start12, i64 0, i64 2, !dbg !9854
  %17 = load float, float* %arrayidx13, align 8, !dbg !9854
  %sub14 = fsub float %15, %17, !dbg !9856
  store float %sub14, float* %dz, align 4, !dbg !9851
  %18 = load float, float* %dx, align 4, !dbg !9857
  %19 = load float, float* %dx, align 4, !dbg !9858
  %mul = fmul float %18, %19, !dbg !9859
  %20 = load float, float* %dy, align 4, !dbg !9860
  %21 = load float, float* %dy, align 4, !dbg !9861
  %mul15 = fmul float %20, %21, !dbg !9862
  %add = fadd float %mul, %mul15, !dbg !9863
  %22 = load float, float* %dz, align 4, !dbg !9864
  %23 = load float, float* %dz, align 4, !dbg !9865
  %mul16 = fmul float %22, %23, !dbg !9866
  %add17 = fadd float %add, %mul16, !dbg !9867
  %call = call float @sqrtf(float %add17) #5, !dbg !9868
  store float %call, float* %d, align 4, !dbg !9869
  %24 = load float, float* %d, align 4, !dbg !9870
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9872
  %mat18 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 0, !dbg !9873
  %26 = load %struct.Material*, %struct.Material** %mat18, align 8, !dbg !9873
  %tx_limit19 = getelementptr inbounds %struct.Material, %struct.Material* %26, i32 0, i32 34, !dbg !9874
  %27 = load float, float* %tx_limit19, align 4, !dbg !9874
  %cmp20 = fcmp ogt float %24, %27, !dbg !9875
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !9876

if.then21:                                        ; preds = %if.else
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9877
  %mat22 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 0, !dbg !9878
  %29 = load %struct.Material*, %struct.Material** %mat22, align 8, !dbg !9878
  %tx_limit23 = getelementptr inbounds %struct.Material, %struct.Material* %29, i32 0, i32 34, !dbg !9879
  %30 = load float, float* %tx_limit23, align 4, !dbg !9879
  store float %30, float* %d, align 4, !dbg !9880
  br label %if.end24, !dbg !9881

if.end24:                                         ; preds = %if.then21, %if.else
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9882
  %mat25 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 0, !dbg !9883
  %32 = load %struct.Material*, %struct.Material** %mat25, align 8, !dbg !9883
  %tx_falloff = getelementptr inbounds %struct.Material, %struct.Material* %32, i32 0, i32 35, !dbg !9884
  %33 = load float, float* %tx_falloff, align 8, !dbg !9884
  store float %33, float* %p, align 4, !dbg !9885
  %34 = load float, float* %p, align 4, !dbg !9886
  %cmp26 = fcmp olt float %34, 0.000000e+00, !dbg !9888
  br i1 %cmp26, label %if.then27, label %if.else28, !dbg !9889

if.then27:                                        ; preds = %if.end24
  store float 0.000000e+00, float* %p, align 4, !dbg !9890
  br label %if.end32, !dbg !9891

if.else28:                                        ; preds = %if.end24
  %35 = load float, float* %p, align 4, !dbg !9892
  %cmp29 = fcmp ogt float %35, 1.000000e+01, !dbg !9894
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9895

if.then30:                                        ; preds = %if.else28
  store float 1.000000e+01, float* %p, align 4, !dbg !9896
  br label %if.end31, !dbg !9897

if.end31:                                         ; preds = %if.then30, %if.else28
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then27
  %36 = load float, float* %d, align 4, !dbg !9898
  %37 = load float, float* %p, align 4, !dbg !9899
  %call33 = call float @powf(float %36, float %37) #5, !dbg !9900
  %38 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !9901
  %alpha = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %38, i32 0, i32 2, !dbg !9902
  %39 = load float, float* %alpha, align 4, !dbg !9903
  %mul34 = fmul float %39, %call33, !dbg !9903
  store float %mul34, float* %alpha, align 4, !dbg !9903
  %40 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !9904
  %alpha35 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %40, i32 0, i32 2, !dbg !9906
  %41 = load float, float* %alpha35, align 4, !dbg !9906
  %cmp36 = fcmp ogt float %41, 1.000000e+00, !dbg !9907
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !9908

if.then37:                                        ; preds = %if.end32
  %42 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !9909
  %alpha38 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %42, i32 0, i32 2, !dbg !9910
  store float 1.000000e+00, float* %alpha38, align 4, !dbg !9911
  br label %if.end39, !dbg !9909

if.end39:                                         ; preds = %if.then37, %if.end32
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then3
  %43 = load float, float* %d, align 4, !dbg !9912
  store float %43, float* %retval, align 4, !dbg !9913
  br label %return, !dbg !9913

return:                                           ; preds = %if.end40, %if.then
  %44 = load float, float* %retval, align 4, !dbg !9914
  ret float %44, !dbg !9914
}

; Function Attrs: noinline nounwind uwtable
define internal void @ray_fadeout_endcolor(float* %col, %struct.ShadeInput* %origshi, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr, %struct.Isect* %isec, float* %vec) #0 !dbg !9915 {
entry:
  %col.addr = alloca float*, align 8
  %origshi.addr = alloca %struct.ShadeInput*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %isec.addr = alloca %struct.Isect*, align 8
  %vec.addr = alloca float*, align 8
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !9918, metadata !DIExpression()), !dbg !9919
  store %struct.ShadeInput* %origshi, %struct.ShadeInput** %origshi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %origshi.addr, metadata !9920, metadata !DIExpression()), !dbg !9921
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !9922, metadata !DIExpression()), !dbg !9923
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !9924, metadata !DIExpression()), !dbg !9925
  store %struct.Isect* %isec, %struct.Isect** %isec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %isec.addr, metadata !9926, metadata !DIExpression()), !dbg !9927
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !9928, metadata !DIExpression()), !dbg !9929
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !9930
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !9932
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !9932
  %fadeto_mir = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 49, !dbg !9933
  %2 = load i16, i16* %fadeto_mir, align 8, !dbg !9933
  %conv = sext i16 %2 to i32, !dbg !9930
  %cmp = icmp eq i32 %conv, 1, !dbg !9934
  br i1 %cmp, label %if.then, label %if.else, !dbg !9935

if.then:                                          ; preds = %entry
  %3 = load float*, float** %col.addr, align 8, !dbg !9936
  %4 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !9938
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %4, i32 0, i32 0, !dbg !9939
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !9938
  call void @copy_v3_v3(float* %3, float* %arraydecay), !dbg !9940
  br label %if.end16, !dbg !9941

if.else:                                          ; preds = %entry
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %origshi.addr, align 8, !dbg !9942
  %mat2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 0, !dbg !9944
  %6 = load %struct.Material*, %struct.Material** %mat2, align 8, !dbg !9944
  %fadeto_mir3 = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 49, !dbg !9945
  %7 = load i16, i16* %fadeto_mir3, align 8, !dbg !9945
  %conv4 = sext i16 %7 to i32, !dbg !9942
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !9946
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !9947

if.then7:                                         ; preds = %if.else
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9948
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 30, !dbg !9950
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !9948
  %9 = load float*, float** %vec.addr, align 8, !dbg !9951
  call void @copy_v3_v3(float* %arraydecay8, float* %9), !dbg !9952
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9953
  %view9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 30, !dbg !9954
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %view9, i64 0, i64 0, !dbg !9953
  %call = call float @normalize_v3(float* %arraydecay10), !dbg !9955
  %11 = load float*, float** %col.addr, align 8, !dbg !9956
  %12 = load %struct.Isect*, %struct.Isect** %isec.addr, align 8, !dbg !9957
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %12, i32 0, i32 0, !dbg !9958
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !9957
  %13 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9959
  %view12 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %13, i32 0, i32 30, !dbg !9960
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %view12, i64 0, i64 0, !dbg !9959
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9961
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 114, !dbg !9962
  %15 = load i16, i16* %thread, align 2, !dbg !9962
  call void @shadeSkyView(float* %11, float* %arraydecay11, float* %arraydecay13, float* null, i16 signext %15), !dbg !9963
  %16 = load float*, float** %col.addr, align 8, !dbg !9964
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9965
  %view14 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 30, !dbg !9966
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %view14, i64 0, i64 0, !dbg !9965
  call void @shadeSunView(float* %16, float* %arraydecay15), !dbg !9967
  br label %if.end, !dbg !9968

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  ret void, !dbg !9969
}

; Function Attrs: noinline nounwind uwtable
define internal void @ray_fadeout(%struct.Isect* %is, %struct.ShadeInput* %shi, float* %col, float* %blendcol, float %dist_mir) #0 !dbg !9970 {
entry:
  %is.addr = alloca %struct.Isect*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %col.addr = alloca float*, align 8
  %blendcol.addr = alloca float*, align 8
  %dist_mir.addr = alloca float, align 4
  %blendfac = alloca float, align 4
  store %struct.Isect* %is, %struct.Isect** %is.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %is.addr, metadata !9973, metadata !DIExpression()), !dbg !9974
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !9975, metadata !DIExpression()), !dbg !9976
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !9977, metadata !DIExpression()), !dbg !9978
  store float* %blendcol, float** %blendcol.addr, align 8
  call void @llvm.dbg.declare(metadata float** %blendcol.addr, metadata !9979, metadata !DIExpression()), !dbg !9980
  store float %dist_mir, float* %dist_mir.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dist_mir.addr, metadata !9981, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.declare(metadata float* %blendfac, metadata !9983, metadata !DIExpression()), !dbg !9984
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9985
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 29, !dbg !9986
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9985
  %1 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !9987
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %1, i32 0, i32 0, !dbg !9988
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !9987
  %call = call float @len_v3v3(float* %arraydecay, float* %arraydecay1), !dbg !9989
  %2 = load float, float* %dist_mir.addr, align 4, !dbg !9990
  %div = fdiv float %call, %2, !dbg !9991
  %sub = fsub float 1.000000e+00, %div, !dbg !9992
  store float %sub, float* %blendfac, align 4, !dbg !9993
  %3 = load float*, float** %col.addr, align 8, !dbg !9994
  %arrayidx = getelementptr inbounds float, float* %3, i64 0, !dbg !9994
  %4 = load float, float* %arrayidx, align 4, !dbg !9994
  %5 = load float, float* %blendfac, align 4, !dbg !9995
  %mul = fmul float %4, %5, !dbg !9996
  %6 = load float, float* %blendfac, align 4, !dbg !9997
  %sub2 = fsub float 1.000000e+00, %6, !dbg !9998
  %7 = load float*, float** %blendcol.addr, align 8, !dbg !9999
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 0, !dbg !9999
  %8 = load float, float* %arrayidx3, align 4, !dbg !9999
  %mul4 = fmul float %sub2, %8, !dbg !10000
  %add = fadd float %mul, %mul4, !dbg !10001
  %9 = load float*, float** %col.addr, align 8, !dbg !10002
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 0, !dbg !10002
  store float %add, float* %arrayidx5, align 4, !dbg !10003
  %10 = load float*, float** %col.addr, align 8, !dbg !10004
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !10004
  %11 = load float, float* %arrayidx6, align 4, !dbg !10004
  %12 = load float, float* %blendfac, align 4, !dbg !10005
  %mul7 = fmul float %11, %12, !dbg !10006
  %13 = load float, float* %blendfac, align 4, !dbg !10007
  %sub8 = fsub float 1.000000e+00, %13, !dbg !10008
  %14 = load float*, float** %blendcol.addr, align 8, !dbg !10009
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !10009
  %15 = load float, float* %arrayidx9, align 4, !dbg !10009
  %mul10 = fmul float %sub8, %15, !dbg !10010
  %add11 = fadd float %mul7, %mul10, !dbg !10011
  %16 = load float*, float** %col.addr, align 8, !dbg !10012
  %arrayidx12 = getelementptr inbounds float, float* %16, i64 1, !dbg !10012
  store float %add11, float* %arrayidx12, align 4, !dbg !10013
  %17 = load float*, float** %col.addr, align 8, !dbg !10014
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 2, !dbg !10014
  %18 = load float, float* %arrayidx13, align 4, !dbg !10014
  %19 = load float, float* %blendfac, align 4, !dbg !10015
  %mul14 = fmul float %18, %19, !dbg !10016
  %20 = load float, float* %blendfac, align 4, !dbg !10017
  %sub15 = fsub float 1.000000e+00, %20, !dbg !10018
  %21 = load float*, float** %blendcol.addr, align 8, !dbg !10019
  %arrayidx16 = getelementptr inbounds float, float* %21, i64 2, !dbg !10019
  %22 = load float, float* %arrayidx16, align 4, !dbg !10019
  %mul17 = fmul float %sub15, %22, !dbg !10020
  %add18 = fadd float %mul14, %mul17, !dbg !10021
  %23 = load float*, float** %col.addr, align 8, !dbg !10022
  %arrayidx19 = getelementptr inbounds float, float* %23, i64 2, !dbg !10022
  store float %add18, float* %arrayidx19, align 4, !dbg !10023
  ret void, !dbg !10024
}

declare dso_local void @shadeSkyView(float*, float*, float*, float*, i16 signext) #2

declare dso_local void @shadeSunView(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !10025 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10026, metadata !DIExpression()), !dbg !10027
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10028, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !10030, metadata !DIExpression()), !dbg !10031
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !10032
  %0 = load float*, float** %b.addr, align 8, !dbg !10033
  %1 = load float*, float** %a.addr, align 8, !dbg !10034
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !10035
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !10036
  %call = call float @len_v3(float* %arraydecay1), !dbg !10037
  ret float %call, !dbg !10038
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !10039 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10040, metadata !DIExpression()), !dbg !10041
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10042, metadata !DIExpression()), !dbg !10043
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10044, metadata !DIExpression()), !dbg !10045
  %0 = load float*, float** %a.addr, align 8, !dbg !10046
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !10046
  %1 = load float, float* %arrayidx, align 4, !dbg !10046
  %2 = load float*, float** %b.addr, align 8, !dbg !10047
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !10047
  %3 = load float, float* %arrayidx1, align 4, !dbg !10047
  %mul = fmul float %1, %3, !dbg !10048
  %4 = load float*, float** %a.addr, align 8, !dbg !10049
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !10049
  %5 = load float, float* %arrayidx2, align 4, !dbg !10049
  %6 = load float*, float** %b.addr, align 8, !dbg !10050
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !10050
  %7 = load float, float* %arrayidx3, align 4, !dbg !10050
  %mul4 = fmul float %5, %7, !dbg !10051
  %sub = fsub float %mul, %mul4, !dbg !10052
  %8 = load float*, float** %r.addr, align 8, !dbg !10053
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !10053
  store float %sub, float* %arrayidx5, align 4, !dbg !10054
  %9 = load float*, float** %a.addr, align 8, !dbg !10055
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !10055
  %10 = load float, float* %arrayidx6, align 4, !dbg !10055
  %11 = load float*, float** %b.addr, align 8, !dbg !10056
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !10056
  %12 = load float, float* %arrayidx7, align 4, !dbg !10056
  %mul8 = fmul float %10, %12, !dbg !10057
  %13 = load float*, float** %a.addr, align 8, !dbg !10058
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !10058
  %14 = load float, float* %arrayidx9, align 4, !dbg !10058
  %15 = load float*, float** %b.addr, align 8, !dbg !10059
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !10059
  %16 = load float, float* %arrayidx10, align 4, !dbg !10059
  %mul11 = fmul float %14, %16, !dbg !10060
  %sub12 = fsub float %mul8, %mul11, !dbg !10061
  %17 = load float*, float** %r.addr, align 8, !dbg !10062
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !10062
  store float %sub12, float* %arrayidx13, align 4, !dbg !10063
  %18 = load float*, float** %a.addr, align 8, !dbg !10064
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !10064
  %19 = load float, float* %arrayidx14, align 4, !dbg !10064
  %20 = load float*, float** %b.addr, align 8, !dbg !10065
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !10065
  %21 = load float, float* %arrayidx15, align 4, !dbg !10065
  %mul16 = fmul float %19, %21, !dbg !10066
  %22 = load float*, float** %a.addr, align 8, !dbg !10067
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !10067
  %23 = load float, float* %arrayidx17, align 4, !dbg !10067
  %24 = load float*, float** %b.addr, align 8, !dbg !10068
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !10068
  %25 = load float, float* %arrayidx18, align 4, !dbg !10068
  %mul19 = fmul float %23, %25, !dbg !10069
  %sub20 = fsub float %mul16, %mul19, !dbg !10070
  %26 = load float*, float** %r.addr, align 8, !dbg !10071
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !10071
  store float %sub20, float* %arrayidx21, align 4, !dbg !10072
  ret void, !dbg !10073
}

declare dso_local void @RE_instance_rotate_ray_start(%struct.ObjectInstanceRen*, %struct.Isect*) #2

declare dso_local void @RE_rayobject_hint_bb(%struct.RayObject*, %struct.RayHint*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @get_avg_speed(%struct.ShadeInput* %shi) #0 !dbg !10074 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %pre_x = alloca float, align 4
  %pre_y = alloca float, align 4
  %post_x = alloca float, align 4
  %post_y = alloca float, align 4
  %speedavg = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !10077, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.declare(metadata float* %pre_x, metadata !10079, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.declare(metadata float* %pre_y, metadata !10081, metadata !DIExpression()), !dbg !10082
  call void @llvm.dbg.declare(metadata float* %post_x, metadata !10083, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.declare(metadata float* %post_y, metadata !10085, metadata !DIExpression()), !dbg !10086
  call void @llvm.dbg.declare(metadata float* %speedavg, metadata !10087, metadata !DIExpression()), !dbg !10088
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10089
  %winspeed = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 69, !dbg !10090
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %winspeed, i64 0, i64 0, !dbg !10089
  %1 = load float, float* %arrayidx, align 4, !dbg !10089
  %cmp = fcmp oeq float %1, 1.000000e+04, !dbg !10091
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10092

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10092

cond.false:                                       ; preds = %entry
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10093
  %winspeed1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %2, i32 0, i32 69, !dbg !10094
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %winspeed1, i64 0, i64 0, !dbg !10093
  %3 = load float, float* %arrayidx2, align 4, !dbg !10093
  br label %cond.end, !dbg !10092

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 0.000000e+00, %cond.true ], [ %3, %cond.false ], !dbg !10092
  store float %cond, float* %pre_x, align 4, !dbg !10095
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10096
  %winspeed3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 69, !dbg !10097
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %winspeed3, i64 0, i64 1, !dbg !10096
  %5 = load float, float* %arrayidx4, align 4, !dbg !10096
  %cmp5 = fcmp oeq float %5, 1.000000e+04, !dbg !10098
  br i1 %cmp5, label %cond.true6, label %cond.false7, !dbg !10099

cond.true6:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !10099

cond.false7:                                      ; preds = %cond.end
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10100
  %winspeed8 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 69, !dbg !10101
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %winspeed8, i64 0, i64 1, !dbg !10100
  %7 = load float, float* %arrayidx9, align 4, !dbg !10100
  br label %cond.end10, !dbg !10099

cond.end10:                                       ; preds = %cond.false7, %cond.true6
  %cond11 = phi float [ 0.000000e+00, %cond.true6 ], [ %7, %cond.false7 ], !dbg !10099
  store float %cond11, float* %pre_y, align 4, !dbg !10102
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10103
  %winspeed12 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 69, !dbg !10104
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %winspeed12, i64 0, i64 2, !dbg !10103
  %9 = load float, float* %arrayidx13, align 4, !dbg !10103
  %cmp14 = fcmp oeq float %9, 1.000000e+04, !dbg !10105
  br i1 %cmp14, label %cond.true15, label %cond.false16, !dbg !10106

cond.true15:                                      ; preds = %cond.end10
  br label %cond.end19, !dbg !10106

cond.false16:                                     ; preds = %cond.end10
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10107
  %winspeed17 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 69, !dbg !10108
  %arrayidx18 = getelementptr inbounds [4 x float], [4 x float]* %winspeed17, i64 0, i64 2, !dbg !10107
  %11 = load float, float* %arrayidx18, align 4, !dbg !10107
  br label %cond.end19, !dbg !10106

cond.end19:                                       ; preds = %cond.false16, %cond.true15
  %cond20 = phi float [ 0.000000e+00, %cond.true15 ], [ %11, %cond.false16 ], !dbg !10106
  store float %cond20, float* %post_x, align 4, !dbg !10109
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10110
  %winspeed21 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 69, !dbg !10111
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %winspeed21, i64 0, i64 3, !dbg !10110
  %13 = load float, float* %arrayidx22, align 4, !dbg !10110
  %cmp23 = fcmp oeq float %13, 1.000000e+04, !dbg !10112
  br i1 %cmp23, label %cond.true24, label %cond.false25, !dbg !10113

cond.true24:                                      ; preds = %cond.end19
  br label %cond.end28, !dbg !10113

cond.false25:                                     ; preds = %cond.end19
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10114
  %winspeed26 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 69, !dbg !10115
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %winspeed26, i64 0, i64 3, !dbg !10114
  %15 = load float, float* %arrayidx27, align 4, !dbg !10114
  br label %cond.end28, !dbg !10113

cond.end28:                                       ; preds = %cond.false25, %cond.true24
  %cond29 = phi float [ 0.000000e+00, %cond.true24 ], [ %15, %cond.false25 ], !dbg !10113
  store float %cond29, float* %post_y, align 4, !dbg !10116
  %16 = load float, float* %pre_x, align 4, !dbg !10117
  %17 = load float, float* %pre_x, align 4, !dbg !10118
  %mul = fmul float %16, %17, !dbg !10119
  %18 = load float, float* %pre_y, align 4, !dbg !10120
  %19 = load float, float* %pre_y, align 4, !dbg !10121
  %mul30 = fmul float %18, %19, !dbg !10122
  %add = fadd float %mul, %mul30, !dbg !10123
  %call = call float @sqrtf(float %add) #5, !dbg !10124
  %20 = load float, float* %post_x, align 4, !dbg !10125
  %21 = load float, float* %post_x, align 4, !dbg !10126
  %mul31 = fmul float %20, %21, !dbg !10127
  %22 = load float, float* %post_y, align 4, !dbg !10128
  %23 = load float, float* %post_y, align 4, !dbg !10129
  %mul32 = fmul float %22, %23, !dbg !10130
  %add33 = fadd float %mul31, %mul32, !dbg !10131
  %call34 = call float @sqrtf(float %add33) #5, !dbg !10132
  %add35 = fadd float %call, %call34, !dbg !10133
  %conv = fpext float %add35 to double, !dbg !10134
  %div = fdiv double %conv, 2.000000e+00, !dbg !10135
  %conv36 = fptrunc double %div to float, !dbg !10134
  store float %conv36, float* %speedavg, align 4, !dbg !10136
  %24 = load float, float* %speedavg, align 4, !dbg !10137
  ret float %24, !dbg !10138
}

; Function Attrs: noinline nounwind uwtable
define internal void @QMC_sampleHemi(float* %vec, %struct.QMCSampler* %qsa, i32 %thread, i32 %num) #0 !dbg !10139 {
entry:
  %vec.addr = alloca float*, align 8
  %qsa.addr = alloca %struct.QMCSampler*, align 8
  %thread.addr = alloca i32, align 4
  %num.addr = alloca i32, align 4
  %s = alloca [2 x double], align 16
  %phi = alloca float, align 4
  %sqr = alloca float, align 4
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !10142, metadata !DIExpression()), !dbg !10143
  store %struct.QMCSampler* %qsa, %struct.QMCSampler** %qsa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa.addr, metadata !10144, metadata !DIExpression()), !dbg !10145
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !10146, metadata !DIExpression()), !dbg !10147
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !10148, metadata !DIExpression()), !dbg !10149
  call void @llvm.dbg.declare(metadata [2 x double]* %s, metadata !10150, metadata !DIExpression()), !dbg !10151
  call void @llvm.dbg.declare(metadata float* %phi, metadata !10152, metadata !DIExpression()), !dbg !10153
  call void @llvm.dbg.declare(metadata float* %sqr, metadata !10154, metadata !DIExpression()), !dbg !10155
  %arraydecay = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 0, !dbg !10156
  %0 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !10157
  %1 = load i32, i32* %thread.addr, align 4, !dbg !10158
  %2 = load i32, i32* %num.addr, align 4, !dbg !10159
  call void @QMC_getSample(double* %arraydecay, %struct.QMCSampler* %0, i32 %1, i32 %2), !dbg !10160
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 0, !dbg !10161
  %3 = load double, double* %arrayidx, align 16, !dbg !10161
  %mul = fmul double %3, 2.000000e+00, !dbg !10162
  %mul1 = fmul double %mul, 0x400921FB54442D18, !dbg !10163
  %conv = fptrunc double %mul1 to float, !dbg !10161
  store float %conv, float* %phi, align 4, !dbg !10164
  %arrayidx2 = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 1, !dbg !10165
  %4 = load double, double* %arrayidx2, align 8, !dbg !10165
  %call = call double @sqrt(double %4) #5, !dbg !10166
  %conv3 = fptrunc double %call to float, !dbg !10166
  store float %conv3, float* %sqr, align 4, !dbg !10167
  %5 = load float, float* %phi, align 4, !dbg !10168
  %call4 = call float @cosf(float %5) #5, !dbg !10169
  %6 = load float, float* %sqr, align 4, !dbg !10170
  %mul5 = fmul float %call4, %6, !dbg !10171
  %7 = load float*, float** %vec.addr, align 8, !dbg !10172
  %arrayidx6 = getelementptr inbounds float, float* %7, i64 0, !dbg !10172
  store float %mul5, float* %arrayidx6, align 4, !dbg !10173
  %8 = load float, float* %phi, align 4, !dbg !10174
  %call7 = call float @sinf(float %8) #5, !dbg !10175
  %9 = load float, float* %sqr, align 4, !dbg !10176
  %mul8 = fmul float %call7, %9, !dbg !10177
  %10 = load float*, float** %vec.addr, align 8, !dbg !10178
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 1, !dbg !10178
  store float %mul8, float* %arrayidx9, align 4, !dbg !10179
  %arrayidx10 = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 1, !dbg !10180
  %11 = load double, double* %arrayidx10, align 8, !dbg !10180
  %arrayidx11 = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 1, !dbg !10181
  %12 = load double, double* %arrayidx11, align 8, !dbg !10181
  %mul12 = fmul double %11, %12, !dbg !10182
  %sub = fsub double 1.000000e+00, %mul12, !dbg !10183
  %conv13 = fptrunc double %sub to float, !dbg !10184
  %13 = load float*, float** %vec.addr, align 8, !dbg !10185
  %arrayidx14 = getelementptr inbounds float, float* %13, i64 2, !dbg !10185
  store float %conv13, float* %arrayidx14, align 4, !dbg !10186
  ret void, !dbg !10187
}

declare dso_local void @RE_instance_rotate_ray_dir(%struct.ObjectInstanceRen*, %struct.Isect*) #2

; Function Attrs: nounwind
declare dso_local float @expf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @adaptive_sample_contrast_val(i32 %samples, float %prev, float %val, float %thresh) #0 !dbg !10188 {
entry:
  %retval = alloca i32, align 4
  %samples.addr = alloca i32, align 4
  %prev.addr = alloca float, align 4
  %val.addr = alloca float, align 4
  %thresh.addr = alloca float, align 4
  store i32 %samples, i32* %samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samples.addr, metadata !10191, metadata !DIExpression()), !dbg !10192
  store float %prev, float* %prev.addr, align 4
  call void @llvm.dbg.declare(metadata float* %prev.addr, metadata !10193, metadata !DIExpression()), !dbg !10194
  store float %val, float* %val.addr, align 4
  call void @llvm.dbg.declare(metadata float* %val.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  store float %thresh, float* %thresh.addr, align 4
  call void @llvm.dbg.declare(metadata float* %thresh.addr, metadata !10197, metadata !DIExpression()), !dbg !10198
  %0 = load float, float* %prev.addr, align 4, !dbg !10199
  %1 = load i32, i32* %samples.addr, align 4, !dbg !10201
  %sub = sub nsw i32 %1, 1, !dbg !10202
  %conv = sitofp i32 %sub to float, !dbg !10203
  %div = fdiv float %0, %conv, !dbg !10204
  %2 = load float, float* %val.addr, align 4, !dbg !10205
  %3 = load i32, i32* %samples.addr, align 4, !dbg !10206
  %conv1 = sitofp i32 %3 to float, !dbg !10207
  %div2 = fdiv float %2, %conv1, !dbg !10208
  %sub3 = fsub float %div, %div2, !dbg !10209
  %4 = call float @llvm.fabs.f32(float %sub3), !dbg !10210
  %5 = load float, float* %thresh.addr, align 4, !dbg !10211
  %cmp = fcmp olt float %4, %5, !dbg !10212
  br i1 %cmp, label %if.then, label %if.else, !dbg !10213

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !10214
  br label %return, !dbg !10214

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10216
  br label %return, !dbg !10216

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !10217
  ret i32 %6, !dbg !10217
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #4

; Function Attrs: noinline nounwind uwtable
define internal float* @sphere_sampler(i32 %type, i32 %resol, i32 %thread, i32 %xs, i32 %ys, i32 %reset) #0 !dbg !10218 {
entry:
  %retval = alloca float*, align 8
  %type.addr = alloca i32, align 4
  %resol.addr = alloca i32, align 4
  %thread.addr = alloca i32, align 4
  %xs.addr = alloca i32, align 4
  %ys.addr = alloca i32, align 4
  %reset.addr = alloca i32, align 4
  %tot = alloca i32, align 4
  %vec = alloca float*, align 8
  %rng = alloca %struct.RNG*, align 8
  %sphere = alloca float*, align 8
  %a = alloca i32, align 4
  %sphere4 = alloca float*, align 8
  %vec1 = alloca float*, align 8
  %cosfi = alloca float, align 4
  %sinfi = alloca float, align 4
  %cost = alloca float, align 4
  %sint = alloca float, align 4
  %ang = alloca float, align 4
  %a9 = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10221, metadata !DIExpression()), !dbg !10222
  store i32 %resol, i32* %resol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resol.addr, metadata !10223, metadata !DIExpression()), !dbg !10224
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !10225, metadata !DIExpression()), !dbg !10226
  store i32 %xs, i32* %xs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xs.addr, metadata !10227, metadata !DIExpression()), !dbg !10228
  store i32 %ys, i32* %ys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ys.addr, metadata !10229, metadata !DIExpression()), !dbg !10230
  store i32 %reset, i32* %reset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reset.addr, metadata !10231, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !10233, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.declare(metadata float** %vec, metadata !10235, metadata !DIExpression()), !dbg !10236
  %0 = load i32, i32* %resol.addr, align 4, !dbg !10237
  %mul = mul nsw i32 2, %0, !dbg !10238
  %1 = load i32, i32* %resol.addr, align 4, !dbg !10239
  %mul1 = mul nsw i32 %mul, %1, !dbg !10240
  store i32 %mul1, i32* %tot, align 4, !dbg !10241
  %2 = load i32, i32* %type.addr, align 4, !dbg !10242
  %and = and i32 %2, 2, !dbg !10244
  %tobool = icmp ne i32 %and, 0, !dbg !10244
  br i1 %tobool, label %if.then, label %if.else, !dbg !10245

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.RNG** %rng, metadata !10246, metadata !DIExpression()), !dbg !10248
  %3 = load i32, i32* %thread.addr, align 4, !dbg !10249
  %call = call i32 @BLI_thread_rand(i32 %3), !dbg !10250
  %call2 = call %struct.RNG* @BLI_rng_new(i32 %call), !dbg !10251
  store %struct.RNG* %call2, %struct.RNG** %rng, align 8, !dbg !10248
  call void @llvm.dbg.declare(metadata float** %sphere, metadata !10252, metadata !DIExpression()), !dbg !10253
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10254, metadata !DIExpression()), !dbg !10255
  %4 = load i32, i32* %thread.addr, align 4, !dbg !10256
  %5 = load i32, i32* %xs.addr, align 4, !dbg !10257
  %6 = load i32, i32* %ys.addr, align 4, !dbg !10258
  %7 = load i32, i32* %tot, align 4, !dbg !10259
  %call3 = call float* @threadsafe_table_sphere(i32 0, i32 %4, i32 %5, i32 %6, i32 %7), !dbg !10260
  store float* %call3, float** %sphere, align 8, !dbg !10261
  %8 = load float*, float** %sphere, align 8, !dbg !10262
  store float* %8, float** %vec, align 8, !dbg !10263
  store i32 0, i32* %a, align 4, !dbg !10264
  br label %for.cond, !dbg !10266

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %a, align 4, !dbg !10267
  %10 = load i32, i32* %tot, align 4, !dbg !10269
  %cmp = icmp slt i32 %9, %10, !dbg !10270
  br i1 %cmp, label %for.body, label %for.end, !dbg !10271

for.body:                                         ; preds = %for.cond
  %11 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !10272
  %12 = load float*, float** %vec, align 8, !dbg !10274
  call void @BLI_rng_get_float_unit_v3(%struct.RNG* %11, float* %12), !dbg !10275
  br label %for.inc, !dbg !10276

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %a, align 4, !dbg !10277
  %inc = add nsw i32 %13, 1, !dbg !10277
  store i32 %inc, i32* %a, align 4, !dbg !10277
  %14 = load float*, float** %vec, align 8, !dbg !10278
  %add.ptr = getelementptr inbounds float, float* %14, i64 3, !dbg !10278
  store float* %add.ptr, float** %vec, align 8, !dbg !10278
  br label %for.cond, !dbg !10279, !llvm.loop !10280

for.end:                                          ; preds = %for.cond
  %15 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !10282
  call void @BLI_rng_free(%struct.RNG* %15), !dbg !10283
  %16 = load float*, float** %sphere, align 8, !dbg !10284
  store float* %16, float** %retval, align 8, !dbg !10285
  br label %return, !dbg !10285

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %sphere4, metadata !10286, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.declare(metadata float** %vec1, metadata !10289, metadata !DIExpression()), !dbg !10290
  %17 = load i32, i32* %reset.addr, align 4, !dbg !10291
  %tobool5 = icmp ne i32 %17, 0, !dbg !10292
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !10292

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !10292

cond.false:                                       ; preds = %if.else
  %18 = load i32, i32* %thread.addr, align 4, !dbg !10293
  %19 = load i32, i32* %xs.addr, align 4, !dbg !10294
  %20 = load i32, i32* %ys.addr, align 4, !dbg !10295
  %21 = load i32, i32* %tot, align 4, !dbg !10296
  %call6 = call float* @threadsafe_table_sphere(i32 1, i32 %18, i32 %19, i32 %20, i32 %21), !dbg !10297
  br label %cond.end, !dbg !10292

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ null, %cond.true ], [ %call6, %cond.false ], !dbg !10292
  store float* %cond, float** %sphere4, align 8, !dbg !10298
  %22 = load float*, float** %sphere4, align 8, !dbg !10299
  %cmp7 = icmp eq float* %22, null, !dbg !10301
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !10302

if.then8:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata float* %cosfi, metadata !10303, metadata !DIExpression()), !dbg !10305
  call void @llvm.dbg.declare(metadata float* %sinfi, metadata !10306, metadata !DIExpression()), !dbg !10307
  call void @llvm.dbg.declare(metadata float* %cost, metadata !10308, metadata !DIExpression()), !dbg !10309
  call void @llvm.dbg.declare(metadata float* %sint, metadata !10310, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.declare(metadata float* %ang, metadata !10312, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.declare(metadata i32* %a9, metadata !10314, metadata !DIExpression()), !dbg !10315
  %23 = load i32, i32* %thread.addr, align 4, !dbg !10316
  %24 = load i32, i32* %xs.addr, align 4, !dbg !10317
  %25 = load i32, i32* %ys.addr, align 4, !dbg !10318
  %26 = load i32, i32* %tot, align 4, !dbg !10319
  %call10 = call float* @threadsafe_table_sphere(i32 0, i32 %23, i32 %24, i32 %25, i32 %26), !dbg !10320
  store float* %call10, float** %sphere4, align 8, !dbg !10321
  %27 = load i32, i32* %thread.addr, align 4, !dbg !10322
  %call11 = call float @BLI_thread_frand(i32 %27), !dbg !10323
  store float %call11, float* %ang, align 4, !dbg !10324
  %28 = load float, float* %ang, align 4, !dbg !10325
  %call12 = call float @sinf(float %28) #5, !dbg !10326
  store float %call12, float* %sinfi, align 4, !dbg !10327
  %29 = load float, float* %ang, align 4, !dbg !10328
  %call13 = call float @cosf(float %29) #5, !dbg !10329
  store float %call13, float* %cosfi, align 4, !dbg !10330
  %30 = load i32, i32* %thread.addr, align 4, !dbg !10331
  %call14 = call float @BLI_thread_frand(i32 %30), !dbg !10332
  store float %call14, float* %ang, align 4, !dbg !10333
  %31 = load float, float* %ang, align 4, !dbg !10334
  %call15 = call float @sinf(float %31) #5, !dbg !10335
  store float %call15, float* %sint, align 4, !dbg !10336
  %32 = load float, float* %ang, align 4, !dbg !10337
  %call16 = call float @cosf(float %32) #5, !dbg !10338
  store float %call16, float* %cost, align 4, !dbg !10339
  %33 = load float*, float** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 67), align 8, !dbg !10340
  store float* %33, float** %vec, align 8, !dbg !10341
  %34 = load float*, float** %sphere4, align 8, !dbg !10342
  store float* %34, float** %vec1, align 8, !dbg !10343
  store i32 0, i32* %a9, align 4, !dbg !10344
  br label %for.cond17, !dbg !10346

for.cond17:                                       ; preds = %for.inc45, %if.then8
  %35 = load i32, i32* %a9, align 4, !dbg !10347
  %36 = load i32, i32* %tot, align 4, !dbg !10349
  %cmp18 = icmp slt i32 %35, %36, !dbg !10350
  br i1 %cmp18, label %for.body19, label %for.end49, !dbg !10351

for.body19:                                       ; preds = %for.cond17
  %37 = load float, float* %cost, align 4, !dbg !10352
  %38 = load float, float* %cosfi, align 4, !dbg !10354
  %mul20 = fmul float %37, %38, !dbg !10355
  %39 = load float*, float** %vec, align 8, !dbg !10356
  %arrayidx = getelementptr inbounds float, float* %39, i64 0, !dbg !10356
  %40 = load float, float* %arrayidx, align 4, !dbg !10356
  %mul21 = fmul float %mul20, %40, !dbg !10357
  %41 = load float, float* %sinfi, align 4, !dbg !10358
  %42 = load float*, float** %vec, align 8, !dbg !10359
  %arrayidx22 = getelementptr inbounds float, float* %42, i64 1, !dbg !10359
  %43 = load float, float* %arrayidx22, align 4, !dbg !10359
  %mul23 = fmul float %41, %43, !dbg !10360
  %sub = fsub float %mul21, %mul23, !dbg !10361
  %44 = load float, float* %sint, align 4, !dbg !10362
  %45 = load float, float* %cosfi, align 4, !dbg !10363
  %mul24 = fmul float %44, %45, !dbg !10364
  %46 = load float*, float** %vec, align 8, !dbg !10365
  %arrayidx25 = getelementptr inbounds float, float* %46, i64 2, !dbg !10365
  %47 = load float, float* %arrayidx25, align 4, !dbg !10365
  %mul26 = fmul float %mul24, %47, !dbg !10366
  %add = fadd float %sub, %mul26, !dbg !10367
  %48 = load float*, float** %vec1, align 8, !dbg !10368
  %arrayidx27 = getelementptr inbounds float, float* %48, i64 0, !dbg !10368
  store float %add, float* %arrayidx27, align 4, !dbg !10369
  %49 = load float, float* %cost, align 4, !dbg !10370
  %50 = load float, float* %sinfi, align 4, !dbg !10371
  %mul28 = fmul float %49, %50, !dbg !10372
  %51 = load float*, float** %vec, align 8, !dbg !10373
  %arrayidx29 = getelementptr inbounds float, float* %51, i64 0, !dbg !10373
  %52 = load float, float* %arrayidx29, align 4, !dbg !10373
  %mul30 = fmul float %mul28, %52, !dbg !10374
  %53 = load float, float* %cosfi, align 4, !dbg !10375
  %54 = load float*, float** %vec, align 8, !dbg !10376
  %arrayidx31 = getelementptr inbounds float, float* %54, i64 1, !dbg !10376
  %55 = load float, float* %arrayidx31, align 4, !dbg !10376
  %mul32 = fmul float %53, %55, !dbg !10377
  %add33 = fadd float %mul30, %mul32, !dbg !10378
  %56 = load float, float* %sint, align 4, !dbg !10379
  %57 = load float, float* %sinfi, align 4, !dbg !10380
  %mul34 = fmul float %56, %57, !dbg !10381
  %58 = load float*, float** %vec, align 8, !dbg !10382
  %arrayidx35 = getelementptr inbounds float, float* %58, i64 2, !dbg !10382
  %59 = load float, float* %arrayidx35, align 4, !dbg !10382
  %mul36 = fmul float %mul34, %59, !dbg !10383
  %add37 = fadd float %add33, %mul36, !dbg !10384
  %60 = load float*, float** %vec1, align 8, !dbg !10385
  %arrayidx38 = getelementptr inbounds float, float* %60, i64 1, !dbg !10385
  store float %add37, float* %arrayidx38, align 4, !dbg !10386
  %61 = load float, float* %sint, align 4, !dbg !10387
  %fneg = fneg float %61, !dbg !10388
  %62 = load float*, float** %vec, align 8, !dbg !10389
  %arrayidx39 = getelementptr inbounds float, float* %62, i64 0, !dbg !10389
  %63 = load float, float* %arrayidx39, align 4, !dbg !10389
  %mul40 = fmul float %fneg, %63, !dbg !10390
  %64 = load float, float* %cost, align 4, !dbg !10391
  %65 = load float*, float** %vec, align 8, !dbg !10392
  %arrayidx41 = getelementptr inbounds float, float* %65, i64 2, !dbg !10392
  %66 = load float, float* %arrayidx41, align 4, !dbg !10392
  %mul42 = fmul float %64, %66, !dbg !10393
  %add43 = fadd float %mul40, %mul42, !dbg !10394
  %67 = load float*, float** %vec1, align 8, !dbg !10395
  %arrayidx44 = getelementptr inbounds float, float* %67, i64 2, !dbg !10395
  store float %add43, float* %arrayidx44, align 4, !dbg !10396
  br label %for.inc45, !dbg !10397

for.inc45:                                        ; preds = %for.body19
  %68 = load i32, i32* %a9, align 4, !dbg !10398
  %inc46 = add nsw i32 %68, 1, !dbg !10398
  store i32 %inc46, i32* %a9, align 4, !dbg !10398
  %69 = load float*, float** %vec, align 8, !dbg !10399
  %add.ptr47 = getelementptr inbounds float, float* %69, i64 3, !dbg !10399
  store float* %add.ptr47, float** %vec, align 8, !dbg !10399
  %70 = load float*, float** %vec1, align 8, !dbg !10400
  %add.ptr48 = getelementptr inbounds float, float* %70, i64 3, !dbg !10400
  store float* %add.ptr48, float** %vec1, align 8, !dbg !10400
  br label %for.cond17, !dbg !10401, !llvm.loop !10402

for.end49:                                        ; preds = %for.cond17
  br label %if.end, !dbg !10404

if.end:                                           ; preds = %for.end49, %cond.end
  %71 = load float*, float** %sphere4, align 8, !dbg !10405
  store float* %71, float** %retval, align 8, !dbg !10406
  br label %return, !dbg !10406

return:                                           ; preds = %if.end, %for.end
  %72 = load float*, float** %retval, align 8, !dbg !10407
  ret float* %72, !dbg !10407
}

declare dso_local %struct.RNG* @BLI_rng_new(i32) #2

declare dso_local i32 @BLI_thread_rand(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float* @threadsafe_table_sphere(i32 %test, i32 %thread, i32 %xs, i32 %ys, i32 %tot) #0 !dbg !2 {
entry:
  %retval = alloca float*, align 8
  %test.addr = alloca i32, align 4
  %thread.addr = alloca i32, align 4
  %xs.addr = alloca i32, align 4
  %ys.addr = alloca i32, align 4
  %tot.addr = alloca i32, align 4
  store i32 %test, i32* %test.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %test.addr, metadata !10408, metadata !DIExpression()), !dbg !10409
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !10410, metadata !DIExpression()), !dbg !10411
  store i32 %xs, i32* %xs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xs.addr, metadata !10412, metadata !DIExpression()), !dbg !10413
  store i32 %ys, i32* %ys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ys.addr, metadata !10414, metadata !DIExpression()), !dbg !10415
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !10416, metadata !DIExpression()), !dbg !10417
  %0 = load i32, i32* @threadsafe_table_sphere.firsttime, align 4, !dbg !10418
  %tobool = icmp ne i32 %0, 0, !dbg !10418
  br i1 %tobool, label %if.then, label %if.end, !dbg !10420

if.then:                                          ; preds = %entry
  call void @llvm.memset.p0i8.i64(i8* align 4 bitcast ([1 x i32]* @threadsafe_table_sphere.xso to i8*), i8 -1, i64 4, i1 false), !dbg !10421
  call void @llvm.memset.p0i8.i64(i8* align 4 bitcast ([1 x i32]* @threadsafe_table_sphere.yso to i8*), i8 -1, i64 4, i1 false), !dbg !10423
  store i32 0, i32* @threadsafe_table_sphere.firsttime, align 4, !dbg !10424
  br label %if.end, !dbg !10425

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %xs.addr, align 4, !dbg !10426
  %2 = load i32, i32* %thread.addr, align 4, !dbg !10428
  %idxprom = sext i32 %2 to i64, !dbg !10429
  %arrayidx = getelementptr inbounds [1 x i32], [1 x i32]* @threadsafe_table_sphere.xso, i64 0, i64 %idxprom, !dbg !10429
  %3 = load i32, i32* %arrayidx, align 4, !dbg !10429
  %cmp = icmp eq i32 %1, %3, !dbg !10430
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !10431

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32, i32* %ys.addr, align 4, !dbg !10432
  %5 = load i32, i32* %thread.addr, align 4, !dbg !10433
  %idxprom1 = sext i32 %5 to i64, !dbg !10434
  %arrayidx2 = getelementptr inbounds [1 x i32], [1 x i32]* @threadsafe_table_sphere.yso, i64 0, i64 %idxprom1, !dbg !10434
  %6 = load i32, i32* %arrayidx2, align 4, !dbg !10434
  %cmp3 = icmp eq i32 %4, %6, !dbg !10435
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !10436

if.then4:                                         ; preds = %land.lhs.true
  %7 = load float*, float** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 68), align 8, !dbg !10437
  %8 = load i32, i32* %thread.addr, align 4, !dbg !10438
  %9 = load i32, i32* %tot.addr, align 4, !dbg !10439
  %mul = mul nsw i32 %8, %9, !dbg !10440
  %mul5 = mul nsw i32 %mul, 3, !dbg !10441
  %idx.ext = sext i32 %mul5 to i64, !dbg !10442
  %add.ptr = getelementptr inbounds float, float* %7, i64 %idx.ext, !dbg !10442
  store float* %add.ptr, float** %retval, align 8, !dbg !10443
  br label %return, !dbg !10443

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %10 = load i32, i32* %test.addr, align 4, !dbg !10444
  %tobool7 = icmp ne i32 %10, 0, !dbg !10444
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !10446

if.then8:                                         ; preds = %if.end6
  store float* null, float** %retval, align 8, !dbg !10447
  br label %return, !dbg !10447

if.end9:                                          ; preds = %if.end6
  %11 = load i32, i32* %xs.addr, align 4, !dbg !10448
  %12 = load i32, i32* %thread.addr, align 4, !dbg !10449
  %idxprom10 = sext i32 %12 to i64, !dbg !10450
  %arrayidx11 = getelementptr inbounds [1 x i32], [1 x i32]* @threadsafe_table_sphere.xso, i64 0, i64 %idxprom10, !dbg !10450
  store i32 %11, i32* %arrayidx11, align 4, !dbg !10451
  %13 = load i32, i32* %ys.addr, align 4, !dbg !10452
  %14 = load i32, i32* %thread.addr, align 4, !dbg !10453
  %idxprom12 = sext i32 %14 to i64, !dbg !10454
  %arrayidx13 = getelementptr inbounds [1 x i32], [1 x i32]* @threadsafe_table_sphere.yso, i64 0, i64 %idxprom12, !dbg !10454
  store i32 %13, i32* %arrayidx13, align 4, !dbg !10455
  %15 = load float*, float** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 68), align 8, !dbg !10456
  %16 = load i32, i32* %thread.addr, align 4, !dbg !10457
  %17 = load i32, i32* %tot.addr, align 4, !dbg !10458
  %mul14 = mul nsw i32 %16, %17, !dbg !10459
  %mul15 = mul nsw i32 %mul14, 3, !dbg !10460
  %idx.ext16 = sext i32 %mul15 to i64, !dbg !10461
  %add.ptr17 = getelementptr inbounds float, float* %15, i64 %idx.ext16, !dbg !10461
  store float* %add.ptr17, float** %retval, align 8, !dbg !10462
  br label %return, !dbg !10462

return:                                           ; preds = %if.end9, %if.then8, %if.then4
  %18 = load float*, float** %retval, align 8, !dbg !10463
  ret float* %18, !dbg !10463
}

; Function Attrs: noinline nounwind uwtable
define internal void @ray_shadow_jittered_coords(%struct.ShadeInput* %shi, i32 %max, [3 x float]* %jitco, i32* %totjitco) #0 !dbg !10464 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %max.addr = alloca i32, align 4
  %jitco.addr = alloca [3 x float]*, align 8
  %totjitco.addr = alloca i32*, align 8
  %order8 = alloca [8 x i32], align 16
  %order11 = alloca [11 x i32], align 16
  %order16 = alloca [16 x i32], align 16
  %count = alloca i32, align 4
  %xs = alloca float, align 4
  %ys = alloca float, align 4
  %zs = alloca float, align 4
  %view = alloca [3 x float], align 4
  %samp = alloca i32, align 4
  %ordsamp = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !10467, metadata !DIExpression()), !dbg !10468
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !10469, metadata !DIExpression()), !dbg !10470
  store [3 x float]* %jitco, [3 x float]** %jitco.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %jitco.addr, metadata !10471, metadata !DIExpression()), !dbg !10472
  store i32* %totjitco, i32** %totjitco.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totjitco.addr, metadata !10473, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.declare(metadata [8 x i32]* %order8, metadata !10475, metadata !DIExpression()), !dbg !10477
  %0 = bitcast [8 x i32]* %order8 to i8*, !dbg !10477
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([8 x i32]* @__const.ray_shadow_jittered_coords.order8 to i8*), i64 32, i1 false), !dbg !10477
  call void @llvm.dbg.declare(metadata [11 x i32]* %order11, metadata !10478, metadata !DIExpression()), !dbg !10482
  %1 = bitcast [11 x i32]* %order11 to i8*, !dbg !10482
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1, i8* align 16 bitcast ([11 x i32]* @__const.ray_shadow_jittered_coords.order11 to i8*), i64 44, i1 false), !dbg !10482
  call void @llvm.dbg.declare(metadata [16 x i32]* %order16, metadata !10483, metadata !DIExpression()), !dbg !10485
  %2 = bitcast [16 x i32]* %order16 to i8*, !dbg !10485
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %2, i8* align 16 bitcast ([16 x i32]* @__const.ray_shadow_jittered_coords.order16 to i8*), i64 64, i1 false), !dbg !10485
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10486, metadata !DIExpression()), !dbg !10487
  %3 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10488
  %mask = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %3, i32 0, i32 105, !dbg !10489
  %4 = load i32, i32* %mask, align 4, !dbg !10489
  %conv = trunc i32 %4 to i16, !dbg !10488
  %call = call i32 @count_mask(i16 zeroext %conv), !dbg !10490
  store i32 %call, i32* %count, align 4, !dbg !10487
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10491
  %strand = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 2, !dbg !10493
  %6 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !10493
  %tobool = icmp ne %struct.StrandRen* %6, null, !dbg !10491
  br i1 %tobool, label %if.else53, label %land.lhs.true, !dbg !10494

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10495
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %7, i32 0, i32 108, !dbg !10496
  %8 = load i32, i32* %depth, align 8, !dbg !10496
  %cmp = icmp eq i32 %8, 0, !dbg !10497
  br i1 %cmp, label %land.lhs.true2, label %if.else53, !dbg !10498

land.lhs.true2:                                   ; preds = %land.lhs.true
  %9 = load i32, i32* %count, align 4, !dbg !10499
  %cmp3 = icmp sgt i32 %9, 1, !dbg !10500
  br i1 %cmp3, label %land.lhs.true5, label %if.else53, !dbg !10501

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %10 = load i32, i32* %count, align 4, !dbg !10502
  %11 = load i32, i32* %max.addr, align 4, !dbg !10503
  %cmp6 = icmp sle i32 %10, %11, !dbg !10504
  br i1 %cmp6, label %if.then, label %if.else53, !dbg !10505

if.then:                                          ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata float* %xs, metadata !10506, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.declare(metadata float* %ys, metadata !10509, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.declare(metadata float* %zs, metadata !10511, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.declare(metadata [3 x float]* %view, metadata !10513, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.declare(metadata i32* %samp, metadata !10515, metadata !DIExpression()), !dbg !10516
  call void @llvm.dbg.declare(metadata i32* %ordsamp, metadata !10517, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !10519, metadata !DIExpression()), !dbg !10520
  store i32 0, i32* %tot, align 4, !dbg !10520
  store i32 0, i32* %samp, align 4, !dbg !10521
  br label %for.cond, !dbg !10523

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %samp, align 4, !dbg !10524
  %13 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !10526
  %conv8 = sext i16 %13 to i32, !dbg !10527
  %cmp9 = icmp slt i32 %12, %conv8, !dbg !10528
  br i1 %cmp9, label %for.body, label %for.end, !dbg !10529

for.body:                                         ; preds = %for.cond
  %14 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !10530
  %conv11 = sext i16 %14 to i32, !dbg !10533
  %cmp12 = icmp eq i32 %conv11, 8, !dbg !10534
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !10535

if.then14:                                        ; preds = %for.body
  %15 = load i32, i32* %samp, align 4, !dbg !10536
  %idxprom = sext i32 %15 to i64, !dbg !10537
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %order8, i64 0, i64 %idxprom, !dbg !10537
  %16 = load i32, i32* %arrayidx, align 4, !dbg !10537
  store i32 %16, i32* %ordsamp, align 4, !dbg !10538
  br label %if.end30, !dbg !10539

if.else:                                          ; preds = %for.body
  %17 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !10540
  %conv15 = sext i16 %17 to i32, !dbg !10542
  %cmp16 = icmp eq i32 %conv15, 11, !dbg !10543
  br i1 %cmp16, label %if.then18, label %if.else21, !dbg !10544

if.then18:                                        ; preds = %if.else
  %18 = load i32, i32* %samp, align 4, !dbg !10545
  %idxprom19 = sext i32 %18 to i64, !dbg !10546
  %arrayidx20 = getelementptr inbounds [11 x i32], [11 x i32]* %order11, i64 0, i64 %idxprom19, !dbg !10546
  %19 = load i32, i32* %arrayidx20, align 4, !dbg !10546
  store i32 %19, i32* %ordsamp, align 4, !dbg !10547
  br label %if.end29, !dbg !10548

if.else21:                                        ; preds = %if.else
  %20 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !10549
  %conv22 = sext i16 %20 to i32, !dbg !10551
  %cmp23 = icmp eq i32 %conv22, 16, !dbg !10552
  br i1 %cmp23, label %if.then25, label %if.else28, !dbg !10553

if.then25:                                        ; preds = %if.else21
  %21 = load i32, i32* %samp, align 4, !dbg !10554
  %idxprom26 = sext i32 %21 to i64, !dbg !10555
  %arrayidx27 = getelementptr inbounds [16 x i32], [16 x i32]* %order16, i64 0, i64 %idxprom26, !dbg !10555
  %22 = load i32, i32* %arrayidx27, align 4, !dbg !10555
  store i32 %22, i32* %ordsamp, align 4, !dbg !10556
  br label %if.end, !dbg !10557

if.else28:                                        ; preds = %if.else21
  %23 = load i32, i32* %samp, align 4, !dbg !10558
  store i32 %23, i32* %ordsamp, align 4, !dbg !10559
  br label %if.end

if.end:                                           ; preds = %if.else28, %if.then25
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.then18
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then14
  %24 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10560
  %mask31 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %24, i32 0, i32 105, !dbg !10562
  %25 = load i32, i32* %mask31, align 4, !dbg !10562
  %26 = load i32, i32* %ordsamp, align 4, !dbg !10563
  %shl = shl i32 1, %26, !dbg !10564
  %and = and i32 %25, %shl, !dbg !10565
  %tobool32 = icmp ne i32 %and, 0, !dbg !10565
  br i1 %tobool32, label %if.then33, label %if.end51, !dbg !10566

if.then33:                                        ; preds = %if.end30
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10567
  %scanco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 106, !dbg !10569
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %scanco, i64 0, i64 0, !dbg !10567
  %28 = load float, float* %arrayidx34, align 8, !dbg !10567
  %29 = load i32, i32* %ordsamp, align 4, !dbg !10570
  %idxprom35 = sext i32 %29 to i64, !dbg !10571
  %arrayidx36 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39), i64 0, i64 %idxprom35, !dbg !10571
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx36, i64 0, i64 0, !dbg !10571
  %30 = load float, float* %arrayidx37, align 8, !dbg !10571
  %add = fadd float %28, %30, !dbg !10572
  %add38 = fadd float %add, 5.000000e-01, !dbg !10573
  store float %add38, float* %xs, align 4, !dbg !10574
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10575
  %scanco39 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 106, !dbg !10576
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %scanco39, i64 0, i64 1, !dbg !10575
  %32 = load float, float* %arrayidx40, align 4, !dbg !10575
  %33 = load i32, i32* %ordsamp, align 4, !dbg !10577
  %idxprom41 = sext i32 %33 to i64, !dbg !10578
  %arrayidx42 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39), i64 0, i64 %idxprom41, !dbg !10578
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx42, i64 0, i64 1, !dbg !10578
  %34 = load float, float* %arrayidx43, align 4, !dbg !10578
  %add44 = fadd float %32, %34, !dbg !10579
  %add45 = fadd float %add44, 5.000000e-01, !dbg !10580
  store float %add45, float* %ys, align 4, !dbg !10581
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10582
  %scanco46 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 106, !dbg !10583
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %scanco46, i64 0, i64 2, !dbg !10582
  %36 = load float, float* %arrayidx47, align 8, !dbg !10582
  store float %36, float* %zs, align 4, !dbg !10584
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10585
  %38 = load float, float* %xs, align 4, !dbg !10586
  %39 = load float, float* %ys, align 4, !dbg !10587
  %40 = load float, float* %zs, align 4, !dbg !10588
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !10589
  %41 = load [3 x float]*, [3 x float]** %jitco.addr, align 8, !dbg !10590
  %42 = load i32, i32* %tot, align 4, !dbg !10591
  %idxprom48 = sext i32 %42 to i64, !dbg !10590
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %41, i64 %idxprom48, !dbg !10590
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx49, i64 0, i64 0, !dbg !10590
  call void @shade_input_calc_viewco(%struct.ShadeInput* %37, float %38, float %39, float %40, float* %arraydecay, float* null, float* %arraydecay50, float* null, float* null), !dbg !10592
  %43 = load i32, i32* %tot, align 4, !dbg !10593
  %inc = add nsw i32 %43, 1, !dbg !10593
  store i32 %inc, i32* %tot, align 4, !dbg !10593
  br label %if.end51, !dbg !10594

if.end51:                                         ; preds = %if.then33, %if.end30
  br label %for.inc, !dbg !10595

for.inc:                                          ; preds = %if.end51
  %44 = load i32, i32* %samp, align 4, !dbg !10596
  %inc52 = add nsw i32 %44, 1, !dbg !10596
  store i32 %inc52, i32* %samp, align 4, !dbg !10596
  br label %for.cond, !dbg !10597, !llvm.loop !10598

for.end:                                          ; preds = %for.cond
  %45 = load i32, i32* %tot, align 4, !dbg !10600
  %46 = load i32*, i32** %totjitco.addr, align 8, !dbg !10601
  store i32 %45, i32* %46, align 4, !dbg !10602
  br label %if.end57, !dbg !10603

if.else53:                                        ; preds = %land.lhs.true5, %land.lhs.true2, %land.lhs.true, %entry
  %47 = load [3 x float]*, [3 x float]** %jitco.addr, align 8, !dbg !10604
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %47, i64 0, !dbg !10604
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx54, i64 0, i64 0, !dbg !10604
  %48 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !10606
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %48, i32 0, i32 29, !dbg !10607
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10606
  call void @copy_v3_v3(float* %arraydecay55, float* %arraydecay56), !dbg !10608
  %49 = load i32*, i32** %totjitco.addr, align 8, !dbg !10609
  store i32 1, i32* %49, align 4, !dbg !10610
  br label %if.end57

if.end57:                                         ; preds = %if.else53, %for.end
  ret void, !dbg !10611
}

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @QMC_sampleDisc(float* %vec, %struct.QMCSampler* %qsa, i32 %thread, i32 %num, float %radius) #0 !dbg !10612 {
entry:
  %vec.addr = alloca float*, align 8
  %qsa.addr = alloca %struct.QMCSampler*, align 8
  %thread.addr = alloca i32, align 4
  %num.addr = alloca i32, align 4
  %radius.addr = alloca float, align 4
  %s = alloca [2 x double], align 16
  %phi = alloca float, align 4
  %sqr = alloca float, align 4
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !10613, metadata !DIExpression()), !dbg !10614
  store %struct.QMCSampler* %qsa, %struct.QMCSampler** %qsa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa.addr, metadata !10615, metadata !DIExpression()), !dbg !10616
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !10617, metadata !DIExpression()), !dbg !10618
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !10619, metadata !DIExpression()), !dbg !10620
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !10621, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.declare(metadata [2 x double]* %s, metadata !10623, metadata !DIExpression()), !dbg !10624
  call void @llvm.dbg.declare(metadata float* %phi, metadata !10625, metadata !DIExpression()), !dbg !10626
  call void @llvm.dbg.declare(metadata float* %sqr, metadata !10627, metadata !DIExpression()), !dbg !10628
  %arraydecay = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 0, !dbg !10629
  %0 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !10630
  %1 = load i32, i32* %thread.addr, align 4, !dbg !10631
  %2 = load i32, i32* %num.addr, align 4, !dbg !10632
  call void @QMC_getSample(double* %arraydecay, %struct.QMCSampler* %0, i32 %1, i32 %2), !dbg !10633
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 0, !dbg !10634
  %3 = load double, double* %arrayidx, align 16, !dbg !10634
  %mul = fmul double %3, 2.000000e+00, !dbg !10635
  %mul1 = fmul double %mul, 0x400921FB54442D18, !dbg !10636
  %conv = fptrunc double %mul1 to float, !dbg !10634
  store float %conv, float* %phi, align 4, !dbg !10637
  %arrayidx2 = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 1, !dbg !10638
  %4 = load double, double* %arrayidx2, align 8, !dbg !10638
  %call = call double @sqrt(double %4) #5, !dbg !10639
  %conv3 = fptrunc double %call to float, !dbg !10639
  store float %conv3, float* %sqr, align 4, !dbg !10640
  %5 = load float, float* %phi, align 4, !dbg !10641
  %call4 = call float @cosf(float %5) #5, !dbg !10642
  %6 = load float, float* %sqr, align 4, !dbg !10643
  %mul5 = fmul float %call4, %6, !dbg !10644
  %7 = load float, float* %radius.addr, align 4, !dbg !10645
  %mul6 = fmul float %mul5, %7, !dbg !10646
  %div = fdiv float %mul6, 2.000000e+00, !dbg !10647
  %8 = load float*, float** %vec.addr, align 8, !dbg !10648
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 0, !dbg !10648
  store float %div, float* %arrayidx7, align 4, !dbg !10649
  %9 = load float, float* %phi, align 4, !dbg !10650
  %call8 = call float @sinf(float %9) #5, !dbg !10651
  %10 = load float, float* %sqr, align 4, !dbg !10652
  %mul9 = fmul float %call8, %10, !dbg !10653
  %11 = load float, float* %radius.addr, align 4, !dbg !10654
  %mul10 = fmul float %mul9, %11, !dbg !10655
  %div11 = fdiv float %mul10, 2.000000e+00, !dbg !10656
  %12 = load float*, float** %vec.addr, align 8, !dbg !10657
  %arrayidx12 = getelementptr inbounds float, float* %12, i64 1, !dbg !10657
  store float %div11, float* %arrayidx12, align 4, !dbg !10658
  %13 = load float*, float** %vec.addr, align 8, !dbg !10659
  %arrayidx13 = getelementptr inbounds float, float* %13, i64 2, !dbg !10659
  store float 0.000000e+00, float* %arrayidx13, align 4, !dbg !10660
  ret void, !dbg !10661
}

; Function Attrs: noinline nounwind uwtable
define internal void @QMC_sampleRect(float* %vec, %struct.QMCSampler* %qsa, i32 %thread, i32 %num, float %sizex, float %sizey) #0 !dbg !10662 {
entry:
  %vec.addr = alloca float*, align 8
  %qsa.addr = alloca %struct.QMCSampler*, align 8
  %thread.addr = alloca i32, align 4
  %num.addr = alloca i32, align 4
  %sizex.addr = alloca float, align 4
  %sizey.addr = alloca float, align 4
  %s = alloca [2 x double], align 16
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !10665, metadata !DIExpression()), !dbg !10666
  store %struct.QMCSampler* %qsa, %struct.QMCSampler** %qsa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QMCSampler** %qsa.addr, metadata !10667, metadata !DIExpression()), !dbg !10668
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !10669, metadata !DIExpression()), !dbg !10670
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !10671, metadata !DIExpression()), !dbg !10672
  store float %sizex, float* %sizex.addr, align 4
  call void @llvm.dbg.declare(metadata float* %sizex.addr, metadata !10673, metadata !DIExpression()), !dbg !10674
  store float %sizey, float* %sizey.addr, align 4
  call void @llvm.dbg.declare(metadata float* %sizey.addr, metadata !10675, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.declare(metadata [2 x double]* %s, metadata !10677, metadata !DIExpression()), !dbg !10678
  %arraydecay = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 0, !dbg !10679
  %0 = load %struct.QMCSampler*, %struct.QMCSampler** %qsa.addr, align 8, !dbg !10680
  %1 = load i32, i32* %thread.addr, align 4, !dbg !10681
  %2 = load i32, i32* %num.addr, align 4, !dbg !10682
  call void @QMC_getSample(double* %arraydecay, %struct.QMCSampler* %0, i32 %1, i32 %2), !dbg !10683
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 0, !dbg !10684
  %3 = load double, double* %arrayidx, align 16, !dbg !10684
  %sub = fsub double %3, 5.000000e-01, !dbg !10685
  %conv = fptrunc double %sub to float, !dbg !10686
  %4 = load float, float* %sizex.addr, align 4, !dbg !10687
  %mul = fmul float %conv, %4, !dbg !10688
  %5 = load float*, float** %vec.addr, align 8, !dbg !10689
  %arrayidx1 = getelementptr inbounds float, float* %5, i64 0, !dbg !10689
  store float %mul, float* %arrayidx1, align 4, !dbg !10690
  %arrayidx2 = getelementptr inbounds [2 x double], [2 x double]* %s, i64 0, i64 1, !dbg !10691
  %6 = load double, double* %arrayidx2, align 8, !dbg !10691
  %sub3 = fsub double %6, 5.000000e-01, !dbg !10692
  %conv4 = fptrunc double %sub3 to float, !dbg !10693
  %7 = load float, float* %sizey.addr, align 4, !dbg !10694
  %mul5 = fmul float %conv4, %7, !dbg !10695
  %8 = load float*, float** %vec.addr, align 8, !dbg !10696
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 1, !dbg !10696
  store float %mul5, float* %arrayidx6, align 4, !dbg !10697
  %9 = load float*, float** %vec.addr, align 8, !dbg !10698
  %arrayidx7 = getelementptr inbounds float, float* %9, i64 2, !dbg !10698
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !10699
  ret void, !dbg !10700
}

declare dso_local void @mul_m3_v3([3 x float]*, float*) #2

declare dso_local i32 @count_mask(i16 zeroext) #2

declare dso_local void @shade_input_calc_viewco(%struct.ShadeInput*, float, float, float, float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @addAlphaLight(float* %shadfac, float* %col, float %alpha, float %filter) #0 !dbg !10701 {
entry:
  %shadfac.addr = alloca float*, align 8
  %col.addr = alloca float*, align 8
  %alpha.addr = alloca float, align 4
  %filter.addr = alloca float, align 4
  %fr = alloca float, align 4
  %fg = alloca float, align 4
  %fb = alloca float, align 4
  store float* %shadfac, float** %shadfac.addr, align 8
  call void @llvm.dbg.declare(metadata float** %shadfac.addr, metadata !10704, metadata !DIExpression()), !dbg !10705
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !10706, metadata !DIExpression()), !dbg !10707
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !10708, metadata !DIExpression()), !dbg !10709
  store float %filter, float* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata float* %filter.addr, metadata !10710, metadata !DIExpression()), !dbg !10711
  call void @llvm.dbg.declare(metadata float* %fr, metadata !10712, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.declare(metadata float* %fg, metadata !10714, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.declare(metadata float* %fb, metadata !10716, metadata !DIExpression()), !dbg !10717
  %0 = load float, float* %filter.addr, align 4, !dbg !10718
  %1 = load float*, float** %col.addr, align 8, !dbg !10719
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !10719
  %2 = load float, float* %arrayidx, align 4, !dbg !10719
  %sub = fsub float %2, 1.000000e+00, !dbg !10720
  %mul = fmul float %0, %sub, !dbg !10721
  %add = fadd float 1.000000e+00, %mul, !dbg !10722
  store float %add, float* %fr, align 4, !dbg !10723
  %3 = load float, float* %filter.addr, align 4, !dbg !10724
  %4 = load float*, float** %col.addr, align 8, !dbg !10725
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !10725
  %5 = load float, float* %arrayidx1, align 4, !dbg !10725
  %sub2 = fsub float %5, 1.000000e+00, !dbg !10726
  %mul3 = fmul float %3, %sub2, !dbg !10727
  %add4 = fadd float 1.000000e+00, %mul3, !dbg !10728
  store float %add4, float* %fg, align 4, !dbg !10729
  %6 = load float, float* %filter.addr, align 4, !dbg !10730
  %7 = load float*, float** %col.addr, align 8, !dbg !10731
  %arrayidx5 = getelementptr inbounds float, float* %7, i64 2, !dbg !10731
  %8 = load float, float* %arrayidx5, align 4, !dbg !10731
  %sub6 = fsub float %8, 1.000000e+00, !dbg !10732
  %mul7 = fmul float %6, %sub6, !dbg !10733
  %add8 = fadd float 1.000000e+00, %mul7, !dbg !10734
  store float %add8, float* %fb, align 4, !dbg !10735
  %9 = load float, float* %alpha.addr, align 4, !dbg !10736
  %10 = load float*, float** %col.addr, align 8, !dbg !10737
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 0, !dbg !10737
  %11 = load float, float* %arrayidx9, align 4, !dbg !10737
  %mul10 = fmul float %9, %11, !dbg !10738
  %12 = load float, float* %fr, align 4, !dbg !10739
  %13 = load float, float* %alpha.addr, align 4, !dbg !10740
  %sub11 = fsub float 1.000000e+00, %13, !dbg !10741
  %mul12 = fmul float %12, %sub11, !dbg !10742
  %14 = load float*, float** %shadfac.addr, align 8, !dbg !10743
  %arrayidx13 = getelementptr inbounds float, float* %14, i64 0, !dbg !10743
  %15 = load float, float* %arrayidx13, align 4, !dbg !10743
  %mul14 = fmul float %mul12, %15, !dbg !10744
  %add15 = fadd float %mul10, %mul14, !dbg !10745
  %16 = load float*, float** %shadfac.addr, align 8, !dbg !10746
  %arrayidx16 = getelementptr inbounds float, float* %16, i64 0, !dbg !10746
  store float %add15, float* %arrayidx16, align 4, !dbg !10747
  %17 = load float, float* %alpha.addr, align 4, !dbg !10748
  %18 = load float*, float** %col.addr, align 8, !dbg !10749
  %arrayidx17 = getelementptr inbounds float, float* %18, i64 1, !dbg !10749
  %19 = load float, float* %arrayidx17, align 4, !dbg !10749
  %mul18 = fmul float %17, %19, !dbg !10750
  %20 = load float, float* %fg, align 4, !dbg !10751
  %21 = load float, float* %alpha.addr, align 4, !dbg !10752
  %sub19 = fsub float 1.000000e+00, %21, !dbg !10753
  %mul20 = fmul float %20, %sub19, !dbg !10754
  %22 = load float*, float** %shadfac.addr, align 8, !dbg !10755
  %arrayidx21 = getelementptr inbounds float, float* %22, i64 1, !dbg !10755
  %23 = load float, float* %arrayidx21, align 4, !dbg !10755
  %mul22 = fmul float %mul20, %23, !dbg !10756
  %add23 = fadd float %mul18, %mul22, !dbg !10757
  %24 = load float*, float** %shadfac.addr, align 8, !dbg !10758
  %arrayidx24 = getelementptr inbounds float, float* %24, i64 1, !dbg !10758
  store float %add23, float* %arrayidx24, align 4, !dbg !10759
  %25 = load float, float* %alpha.addr, align 4, !dbg !10760
  %26 = load float*, float** %col.addr, align 8, !dbg !10761
  %arrayidx25 = getelementptr inbounds float, float* %26, i64 2, !dbg !10761
  %27 = load float, float* %arrayidx25, align 4, !dbg !10761
  %mul26 = fmul float %25, %27, !dbg !10762
  %28 = load float, float* %fb, align 4, !dbg !10763
  %29 = load float, float* %alpha.addr, align 4, !dbg !10764
  %sub27 = fsub float 1.000000e+00, %29, !dbg !10765
  %mul28 = fmul float %28, %sub27, !dbg !10766
  %30 = load float*, float** %shadfac.addr, align 8, !dbg !10767
  %arrayidx29 = getelementptr inbounds float, float* %30, i64 2, !dbg !10767
  %31 = load float, float* %arrayidx29, align 4, !dbg !10767
  %mul30 = fmul float %mul28, %31, !dbg !10768
  %add31 = fadd float %mul26, %mul30, !dbg !10769
  %32 = load float*, float** %shadfac.addr, align 8, !dbg !10770
  %arrayidx32 = getelementptr inbounds float, float* %32, i64 2, !dbg !10770
  store float %add31, float* %arrayidx32, align 4, !dbg !10771
  %33 = load float, float* %alpha.addr, align 4, !dbg !10772
  %sub33 = fsub float 1.000000e+00, %33, !dbg !10773
  %34 = load float*, float** %shadfac.addr, align 8, !dbg !10774
  %arrayidx34 = getelementptr inbounds float, float* %34, i64 3, !dbg !10774
  %35 = load float, float* %arrayidx34, align 4, !dbg !10774
  %mul35 = fmul float %sub33, %35, !dbg !10775
  %36 = load float*, float** %shadfac.addr, align 8, !dbg !10776
  %arrayidx36 = getelementptr inbounds float, float* %36, i64 3, !dbg !10776
  store float %mul35, float* %arrayidx36, align 4, !dbg !10777
  ret void, !dbg !10778
}

; Function Attrs: noinline nounwind uwtable
define internal float* @give_jitter_plane(%struct.LampRen* %lar, i32 %thread, i32 %xs, i32 %ys) #0 !dbg !10779 {
entry:
  %retval = alloca float*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %thread.addr = alloca i32, align 4
  %xs.addr = alloca i32, align 4
  %ys.addr = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !10782, metadata !DIExpression()), !dbg !10783
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !10784, metadata !DIExpression()), !dbg !10785
  store i32 %xs, i32* %xs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xs.addr, metadata !10786, metadata !DIExpression()), !dbg !10787
  store i32 %ys, i32* %ys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ys.addr, metadata !10788, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !10790, metadata !DIExpression()), !dbg !10791
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10792
  %ray_totsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 49, !dbg !10793
  %1 = load i16, i16* %ray_totsamp, align 8, !dbg !10793
  %conv = sext i16 %1 to i32, !dbg !10792
  store i32 %conv, i32* %tot, align 4, !dbg !10794
  %2 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10795
  %ray_samp_type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %2, i32 0, i32 47, !dbg !10797
  %3 = load i16, i16* %ray_samp_type, align 4, !dbg !10797
  %conv1 = sext i16 %3 to i32, !dbg !10795
  %and = and i32 %conv1, 8, !dbg !10798
  %tobool = icmp ne i32 %and, 0, !dbg !10798
  br i1 %tobool, label %if.then, label %if.end27, !dbg !10799

if.then:                                          ; preds = %entry
  %4 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10800
  %xold = getelementptr inbounds %struct.LampRen, %struct.LampRen* %4, i32 0, i32 50, !dbg !10803
  %5 = load i32, i32* %thread.addr, align 4, !dbg !10804
  %idxprom = sext i32 %5 to i64, !dbg !10800
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %xold, i64 0, i64 %idxprom, !dbg !10800
  %6 = load i16, i16* %arrayidx, align 2, !dbg !10800
  %conv2 = sext i16 %6 to i32, !dbg !10800
  %7 = load i32, i32* %xs.addr, align 4, !dbg !10805
  %cmp = icmp ne i32 %conv2, %7, !dbg !10806
  br i1 %cmp, label %if.then9, label %lor.lhs.false, !dbg !10807

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10808
  %yold = getelementptr inbounds %struct.LampRen, %struct.LampRen* %8, i32 0, i32 51, !dbg !10809
  %9 = load i32, i32* %thread.addr, align 4, !dbg !10810
  %idxprom4 = sext i32 %9 to i64, !dbg !10808
  %arrayidx5 = getelementptr inbounds [1 x i16], [1 x i16]* %yold, i64 0, i64 %idxprom4, !dbg !10808
  %10 = load i16, i16* %arrayidx5, align 2, !dbg !10808
  %conv6 = sext i16 %10 to i32, !dbg !10808
  %11 = load i32, i32* %ys.addr, align 4, !dbg !10811
  %cmp7 = icmp ne i32 %conv6, %11, !dbg !10812
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !10813

if.then9:                                         ; preds = %lor.lhs.false, %if.then
  %12 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10814
  %jitter = getelementptr inbounds %struct.LampRen, %struct.LampRen* %12, i32 0, i32 58, !dbg !10816
  %13 = load float*, float** %jitter, align 8, !dbg !10816
  %14 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10817
  %jitter10 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %14, i32 0, i32 58, !dbg !10818
  %15 = load float*, float** %jitter10, align 8, !dbg !10818
  %16 = load i32, i32* %thread.addr, align 4, !dbg !10819
  %add = add nsw i32 %16, 1, !dbg !10820
  %mul = mul nsw i32 2, %add, !dbg !10821
  %17 = load i32, i32* %tot, align 4, !dbg !10822
  %mul11 = mul nsw i32 %mul, %17, !dbg !10823
  %idx.ext = sext i32 %mul11 to i64, !dbg !10824
  %add.ptr = getelementptr inbounds float, float* %15, i64 %idx.ext, !dbg !10824
  %18 = load i32, i32* %tot, align 4, !dbg !10825
  %19 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10826
  %area_size = getelementptr inbounds %struct.LampRen, %struct.LampRen* %19, i32 0, i32 52, !dbg !10827
  %20 = load float, float* %area_size, align 8, !dbg !10827
  %21 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10828
  %area_sizey = getelementptr inbounds %struct.LampRen, %struct.LampRen* %21, i32 0, i32 53, !dbg !10829
  %22 = load float, float* %area_sizey, align 4, !dbg !10829
  %23 = load i32, i32* %thread.addr, align 4, !dbg !10830
  %call = call float @BLI_thread_frand(i32 %23), !dbg !10831
  %24 = load i32, i32* %thread.addr, align 4, !dbg !10832
  %call12 = call float @BLI_thread_frand(i32 %24), !dbg !10833
  call void @jitter_plane_offset(float* %13, float* %add.ptr, i32 %18, float %20, float %22, float %call, float %call12), !dbg !10834
  %25 = load i32, i32* %xs.addr, align 4, !dbg !10835
  %conv13 = trunc i32 %25 to i16, !dbg !10835
  %26 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10836
  %xold14 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %26, i32 0, i32 50, !dbg !10837
  %27 = load i32, i32* %thread.addr, align 4, !dbg !10838
  %idxprom15 = sext i32 %27 to i64, !dbg !10836
  %arrayidx16 = getelementptr inbounds [1 x i16], [1 x i16]* %xold14, i64 0, i64 %idxprom15, !dbg !10836
  store i16 %conv13, i16* %arrayidx16, align 2, !dbg !10839
  %28 = load i32, i32* %ys.addr, align 4, !dbg !10840
  %conv17 = trunc i32 %28 to i16, !dbg !10840
  %29 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10841
  %yold18 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %29, i32 0, i32 51, !dbg !10842
  %30 = load i32, i32* %thread.addr, align 4, !dbg !10843
  %idxprom19 = sext i32 %30 to i64, !dbg !10841
  %arrayidx20 = getelementptr inbounds [1 x i16], [1 x i16]* %yold18, i64 0, i64 %idxprom19, !dbg !10841
  store i16 %conv17, i16* %arrayidx20, align 2, !dbg !10844
  br label %if.end, !dbg !10845

if.end:                                           ; preds = %if.then9, %lor.lhs.false
  %31 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10846
  %jitter21 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %31, i32 0, i32 58, !dbg !10847
  %32 = load float*, float** %jitter21, align 8, !dbg !10847
  %33 = load i32, i32* %thread.addr, align 4, !dbg !10848
  %add22 = add nsw i32 %33, 1, !dbg !10849
  %mul23 = mul nsw i32 2, %add22, !dbg !10850
  %34 = load i32, i32* %tot, align 4, !dbg !10851
  %mul24 = mul nsw i32 %mul23, %34, !dbg !10852
  %idx.ext25 = sext i32 %mul24 to i64, !dbg !10853
  %add.ptr26 = getelementptr inbounds float, float* %32, i64 %idx.ext25, !dbg !10853
  store float* %add.ptr26, float** %retval, align 8, !dbg !10854
  br label %return, !dbg !10854

if.end27:                                         ; preds = %entry
  %35 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10855
  %ray_samp_type28 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %35, i32 0, i32 47, !dbg !10857
  %36 = load i16, i16* %ray_samp_type28, align 4, !dbg !10857
  %conv29 = sext i16 %36 to i32, !dbg !10855
  %and30 = and i32 %conv29, 4, !dbg !10858
  %tobool31 = icmp ne i32 %and30, 0, !dbg !10858
  br i1 %tobool31, label %if.then32, label %if.end42, !dbg !10859

if.then32:                                        ; preds = %if.end27
  %37 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10860
  %jitter33 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %37, i32 0, i32 58, !dbg !10862
  %38 = load float*, float** %jitter33, align 8, !dbg !10862
  %39 = load i32, i32* %tot, align 4, !dbg !10863
  %mul34 = mul nsw i32 2, %39, !dbg !10864
  %40 = load i32, i32* %xs.addr, align 4, !dbg !10865
  %and35 = and i32 %40, 1, !dbg !10866
  %41 = load i32, i32* %ys.addr, align 4, !dbg !10867
  %and36 = and i32 %41, 1, !dbg !10868
  %mul37 = mul nsw i32 2, %and36, !dbg !10869
  %add38 = add nsw i32 %and35, %mul37, !dbg !10870
  %mul39 = mul nsw i32 %mul34, %add38, !dbg !10871
  %idx.ext40 = sext i32 %mul39 to i64, !dbg !10872
  %add.ptr41 = getelementptr inbounds float, float* %38, i64 %idx.ext40, !dbg !10872
  store float* %add.ptr41, float** %retval, align 8, !dbg !10873
  br label %return, !dbg !10873

if.end42:                                         ; preds = %if.end27
  %42 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10874
  %jitter43 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %42, i32 0, i32 58, !dbg !10875
  %43 = load float*, float** %jitter43, align 8, !dbg !10875
  store float* %43, float** %retval, align 8, !dbg !10876
  br label %return, !dbg !10876

return:                                           ; preds = %if.end42, %if.then32, %if.end
  %44 = load float*, float** %retval, align 8, !dbg !10877
  ret float* %44, !dbg !10877
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!9}
!llvm.module.flags = !{!2774, !2775, !2776}
!llvm.ident = !{!2777}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "xso", scope: !2, file: !3, line: 1735, type: !2599, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "threadsafe_table_sphere", scope: !3, file: !3, line: 1733, type: !4, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!3 = !DIFile(filename: "blender/source/blender/render/intern/source/rayshade.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !8, !8, !8, !8, !8}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!8 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!9 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !10, retainedTypes: !46, globals: !2768, splitDebugInlining: false, nameTableKind: None)
!10 = !{!11}
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ScenePassType", file: !12, line: 213, baseType: !8, size: 32, elements: !13)
!12 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!14 = !DIEnumerator(name: "SCE_PASS_COMBINED", value: 1)
!15 = !DIEnumerator(name: "SCE_PASS_Z", value: 2)
!16 = !DIEnumerator(name: "SCE_PASS_RGBA", value: 4)
!17 = !DIEnumerator(name: "SCE_PASS_DIFFUSE", value: 8)
!18 = !DIEnumerator(name: "SCE_PASS_SPEC", value: 16)
!19 = !DIEnumerator(name: "SCE_PASS_SHADOW", value: 32)
!20 = !DIEnumerator(name: "SCE_PASS_AO", value: 64)
!21 = !DIEnumerator(name: "SCE_PASS_REFLECT", value: 128)
!22 = !DIEnumerator(name: "SCE_PASS_NORMAL", value: 256)
!23 = !DIEnumerator(name: "SCE_PASS_VECTOR", value: 512)
!24 = !DIEnumerator(name: "SCE_PASS_REFRACT", value: 1024)
!25 = !DIEnumerator(name: "SCE_PASS_INDEXOB", value: 2048)
!26 = !DIEnumerator(name: "SCE_PASS_UV", value: 4096)
!27 = !DIEnumerator(name: "SCE_PASS_INDIRECT", value: 8192)
!28 = !DIEnumerator(name: "SCE_PASS_MIST", value: 16384)
!29 = !DIEnumerator(name: "SCE_PASS_RAYHITS", value: 32768)
!30 = !DIEnumerator(name: "SCE_PASS_EMIT", value: 65536)
!31 = !DIEnumerator(name: "SCE_PASS_ENVIRONMENT", value: 131072)
!32 = !DIEnumerator(name: "SCE_PASS_INDEXMA", value: 262144)
!33 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_DIRECT", value: 524288)
!34 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_INDIRECT", value: 1048576)
!35 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_COLOR", value: 2097152)
!36 = !DIEnumerator(name: "SCE_PASS_GLOSSY_DIRECT", value: 4194304)
!37 = !DIEnumerator(name: "SCE_PASS_GLOSSY_INDIRECT", value: 8388608)
!38 = !DIEnumerator(name: "SCE_PASS_GLOSSY_COLOR", value: 16777216)
!39 = !DIEnumerator(name: "SCE_PASS_TRANSM_DIRECT", value: 33554432)
!40 = !DIEnumerator(name: "SCE_PASS_TRANSM_INDIRECT", value: 67108864)
!41 = !DIEnumerator(name: "SCE_PASS_TRANSM_COLOR", value: 134217728)
!42 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_DIRECT", value: 268435456)
!43 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_INDIRECT", value: 536870912)
!44 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_COLOR", value: 1073741824)
!45 = !DIEnumerator(name: "SCE_PASS_DEBUG", value: -2147483648)
!46 = !{!47, !48, !2517, !2395, !2519, !2522, !2524, !2526, !7, !2745}
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakPrimitive", file: !50, line: 98, baseType: !51)
!50 = !DIFile(filename: "blender/source/blender/render/intern/include/rayobject.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!51 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakPrimitive", file: !50, line: 95, size: 128, elements: !52)
!52 = !{!53, !2516}
!53 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !51, file: !50, line: 96, baseType: !54, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!55 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectInstanceRen", file: !56, line: 345, size: 2304, elements: !57)
!56 = !DIFile(filename: "blender/source/blender/render/intern/include/render_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!57 = !{!58, !59, !60, !2487, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2502, !2512, !2513, !2514, !2515}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !55, file: !56, line: 346, baseType: !54, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !55, file: !56, line: 346, baseType: !54, size: 64, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !55, file: !56, line: 348, baseType: !61, size: 64, offset: 128)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectRen", file: !56, line: 343, baseType: !63)
!63 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectRen", file: !56, line: 315, size: 2240, elements: !64)
!64 = !{!65, !67, !68, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2215, !2255, !2334, !2373, !2374, !2376, !2377, !2378, !2379, !2380, !2381, !2473, !2484, !2486}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !63, file: !56, line: 316, baseType: !66, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !63, file: !56, line: 316, baseType: !66, size: 64, offset: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !63, file: !56, line: 317, baseType: !69, size: 64, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !71, line: 115, size: 11392, elements: !72)
!71 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!72 = !{!73, !143, !147, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !164, !175, !189, !190, !235, !236, !239, !240, !256, !257, !258, !259, !260, !261, !262, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2129, !2132, !2133, !2134, !2135, !2136, !2137, !2140, !2143, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2155, !2158, !2161, !2162, !2165, !2166}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !70, file: !71, line: 116, baseType: !74, size: 960)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !75, line: 130, baseType: !76)
!75 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!76 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !75, line: 117, size: 960, elements: !77)
!77 = !{!78, !79, !80, !82, !102, !106, !108, !109, !110, !111}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !76, file: !75, line: 118, baseType: !47, size: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !76, file: !75, line: 118, baseType: !47, size: 64, offset: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !76, file: !75, line: 119, baseType: !81, size: 64, offset: 128)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !76, file: !75, line: 120, baseType: !83, size: 64, offset: 192)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !75, line: 136, size: 17600, elements: !85)
!85 = !{!86, !87, !89, !92, !97, !98, !99}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !84, file: !75, line: 137, baseType: !74, size: 960)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !84, file: !75, line: 138, baseType: !88, size: 64, offset: 960)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !84, file: !75, line: 139, baseType: !90, size: 64, offset: 1024)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !75, line: 43, flags: DIFlagFwdDecl)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !84, file: !75, line: 140, baseType: !93, size: 8192, offset: 1088)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 8192, elements: !95)
!94 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!95 = !{!96}
!96 = !DISubrange(count: 1024)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !84, file: !75, line: 141, baseType: !93, size: 8192, offset: 9280)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !84, file: !75, line: 148, baseType: !83, size: 64, offset: 17472)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !84, file: !75, line: 150, baseType: !100, size: 64, offset: 17536)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !75, line: 45, flags: DIFlagFwdDecl)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !76, file: !75, line: 121, baseType: !103, size: 528, offset: 256)
!103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 528, elements: !104)
!104 = !{!105}
!105 = !DISubrange(count: 66)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !76, file: !75, line: 126, baseType: !107, size: 16, offset: 784)
!107 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !76, file: !75, line: 127, baseType: !8, size: 32, offset: 800)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !76, file: !75, line: 128, baseType: !8, size: 32, offset: 832)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !76, file: !75, line: 128, baseType: !8, size: 32, offset: 864)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !76, file: !75, line: 129, baseType: !112, size: 64, offset: 896)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !75, line: 75, baseType: !114)
!114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !75, line: 62, size: 1024, elements: !115)
!115 = !{!116, !118, !119, !120, !121, !122, !126, !127, !141, !142}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !114, file: !75, line: 63, baseType: !117, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !114, file: !75, line: 63, baseType: !117, size: 64, offset: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !114, file: !75, line: 64, baseType: !94, size: 8, offset: 128)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !114, file: !75, line: 64, baseType: !94, size: 8, offset: 136)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !114, file: !75, line: 65, baseType: !107, size: 16, offset: 144)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !114, file: !75, line: 66, baseType: !123, size: 512, offset: 160)
!123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 512, elements: !124)
!124 = !{!125}
!125 = !DISubrange(count: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !114, file: !75, line: 67, baseType: !8, size: 32, offset: 672)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !114, file: !75, line: 69, baseType: !128, size: 256, offset: 704)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !75, line: 60, baseType: !129)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !75, line: 48, size: 256, elements: !130)
!130 = !{!131, !132, !139, !140}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !129, file: !75, line: 49, baseType: !47, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !129, file: !75, line: 58, baseType: !133, size: 128, offset: 64)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !134, line: 71, baseType: !135)
!134 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !134, line: 69, size: 128, elements: !136)
!136 = !{!137, !138}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !135, file: !134, line: 70, baseType: !47, size: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !135, file: !134, line: 70, baseType: !47, size: 64, offset: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !129, file: !75, line: 59, baseType: !8, size: 32, offset: 192)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !129, file: !75, line: 59, baseType: !8, size: 32, offset: 224)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !114, file: !75, line: 70, baseType: !8, size: 32, offset: 960)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !114, file: !75, line: 74, baseType: !8, size: 32, offset: 992)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !70, file: !71, line: 117, baseType: !144, size: 64, offset: 960)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!145 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !146, line: 48, flags: DIFlagFwdDecl)
!146 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!147 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !70, file: !71, line: 119, baseType: !148, size: 64, offset: 1024)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !71, line: 57, flags: DIFlagFwdDecl)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !70, file: !71, line: 121, baseType: !107, size: 16, offset: 1088)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !70, file: !71, line: 121, baseType: !107, size: 16, offset: 1104)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !70, file: !71, line: 122, baseType: !8, size: 32, offset: 1120)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !70, file: !71, line: 122, baseType: !8, size: 32, offset: 1152)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !70, file: !71, line: 122, baseType: !8, size: 32, offset: 1184)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !70, file: !71, line: 123, baseType: !123, size: 512, offset: 1216)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !70, file: !71, line: 124, baseType: !69, size: 64, offset: 1728)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !70, file: !71, line: 124, baseType: !69, size: 64, offset: 1792)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !70, file: !71, line: 127, baseType: !69, size: 64, offset: 1856)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !70, file: !71, line: 127, baseType: !69, size: 64, offset: 1920)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !70, file: !71, line: 127, baseType: !69, size: 64, offset: 1984)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !70, file: !71, line: 128, baseType: !162, size: 64, offset: 2048)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!163 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !146, line: 49, flags: DIFlagFwdDecl)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !70, file: !71, line: 130, baseType: !165, size: 64, offset: 2112)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !71, line: 97, size: 832, elements: !167)
!167 = !{!168, !173, !174}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !166, file: !71, line: 98, baseType: !169, size: 768)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 768, elements: !170)
!170 = !{!171, !172}
!171 = !DISubrange(count: 8)
!172 = !DISubrange(count: 3)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !166, file: !71, line: 99, baseType: !8, size: 32, offset: 768)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !166, file: !71, line: 99, baseType: !8, size: 32, offset: 800)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !70, file: !71, line: 131, baseType: !176, size: 64, offset: 2176)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !178, line: 486, size: 1600, elements: !179)
!178 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!179 = !{!180, !181, !182, !183, !184, !185, !186, !187, !188}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !177, file: !178, line: 487, baseType: !74, size: 960)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !177, file: !178, line: 489, baseType: !133, size: 128, offset: 960)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !177, file: !178, line: 490, baseType: !133, size: 128, offset: 1088)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !177, file: !178, line: 491, baseType: !133, size: 128, offset: 1216)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !177, file: !178, line: 492, baseType: !133, size: 128, offset: 1344)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !177, file: !178, line: 494, baseType: !8, size: 32, offset: 1472)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !177, file: !178, line: 495, baseType: !8, size: 32, offset: 1504)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !177, file: !178, line: 497, baseType: !8, size: 32, offset: 1536)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !177, file: !178, line: 498, baseType: !8, size: 32, offset: 1568)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !70, file: !71, line: 132, baseType: !176, size: 64, offset: 2240)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !70, file: !71, line: 133, baseType: !191, size: 64, offset: 2304)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !178, line: 334, size: 1728, elements: !193)
!193 = !{!194, !195, !199, !200, !201, !203, !204, !205, !208, !209, !210, !211, !212, !213, !214, !234}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !192, file: !178, line: 335, baseType: !133, size: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !192, file: !178, line: 336, baseType: !196, size: 64, offset: 128)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!197 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !198, line: 48, flags: DIFlagFwdDecl)
!198 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!199 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !192, file: !178, line: 338, baseType: !107, size: 16, offset: 192)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !192, file: !178, line: 338, baseType: !107, size: 16, offset: 208)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !192, file: !178, line: 339, baseType: !202, size: 32, offset: 224)
!202 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !192, file: !178, line: 340, baseType: !8, size: 32, offset: 256)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !192, file: !178, line: 342, baseType: !7, size: 32, offset: 288)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !192, file: !178, line: 343, baseType: !206, size: 96, offset: 320)
!206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !207)
!207 = !{!172}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !192, file: !178, line: 344, baseType: !206, size: 96, offset: 416)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !192, file: !178, line: 347, baseType: !133, size: 128, offset: 512)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !192, file: !178, line: 349, baseType: !8, size: 32, offset: 640)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !192, file: !178, line: 350, baseType: !8, size: 32, offset: 672)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !192, file: !178, line: 351, baseType: !47, size: 64, offset: 704)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !192, file: !178, line: 352, baseType: !47, size: 64, offset: 768)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !192, file: !178, line: 354, baseType: !215, size: 384, offset: 832)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !178, line: 116, baseType: !216)
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !178, line: 94, size: 384, elements: !217)
!217 = !{!218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !216, file: !178, line: 96, baseType: !8, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !216, file: !178, line: 96, baseType: !8, size: 32, offset: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !216, file: !178, line: 97, baseType: !8, size: 32, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !216, file: !178, line: 97, baseType: !8, size: 32, offset: 96)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !216, file: !178, line: 99, baseType: !107, size: 16, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !216, file: !178, line: 100, baseType: !107, size: 16, offset: 144)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !216, file: !178, line: 102, baseType: !107, size: 16, offset: 160)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !216, file: !178, line: 105, baseType: !107, size: 16, offset: 176)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !216, file: !178, line: 108, baseType: !107, size: 16, offset: 192)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !216, file: !178, line: 109, baseType: !107, size: 16, offset: 208)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !216, file: !178, line: 111, baseType: !107, size: 16, offset: 224)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !216, file: !178, line: 112, baseType: !107, size: 16, offset: 240)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !216, file: !178, line: 114, baseType: !8, size: 32, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !216, file: !178, line: 114, baseType: !8, size: 32, offset: 288)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !216, file: !178, line: 115, baseType: !8, size: 32, offset: 320)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !216, file: !178, line: 115, baseType: !8, size: 32, offset: 352)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !192, file: !178, line: 355, baseType: !123, size: 512, offset: 1216)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !70, file: !71, line: 134, baseType: !47, size: 64, offset: 2368)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !70, file: !71, line: 136, baseType: !237, size: 64, offset: 2432)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !12, line: 61, flags: DIFlagFwdDecl)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !70, file: !71, line: 138, baseType: !215, size: 384, offset: 2496)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !70, file: !71, line: 139, baseType: !241, size: 64, offset: 2880)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !178, line: 80, baseType: !243)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !178, line: 72, size: 192, elements: !244)
!244 = !{!245, !252, !253, !254, !255}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !243, file: !178, line: 73, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !178, line: 59, baseType: !248)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !178, line: 56, size: 128, elements: !249)
!249 = !{!250, !251}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !248, file: !178, line: 57, baseType: !206, size: 96)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !248, file: !178, line: 58, baseType: !8, size: 32, offset: 96)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !243, file: !178, line: 74, baseType: !8, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !243, file: !178, line: 76, baseType: !8, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !243, file: !178, line: 77, baseType: !8, size: 32, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !243, file: !178, line: 79, baseType: !8, size: 32, offset: 160)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !70, file: !71, line: 141, baseType: !133, size: 128, offset: 2944)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !70, file: !71, line: 142, baseType: !133, size: 128, offset: 3072)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !70, file: !71, line: 143, baseType: !133, size: 128, offset: 3200)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !70, file: !71, line: 144, baseType: !133, size: 128, offset: 3328)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !70, file: !71, line: 146, baseType: !8, size: 32, offset: 3456)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !70, file: !71, line: 147, baseType: !8, size: 32, offset: 3488)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !70, file: !71, line: 150, baseType: !263, size: 64, offset: 3520)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !146, line: 93, size: 7552, elements: !266)
!266 = !{!267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !315, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !384, !385, !386, !387, !388, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2042}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !265, file: !146, line: 94, baseType: !74, size: 960)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !265, file: !146, line: 95, baseType: !144, size: 64, offset: 960)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !265, file: !146, line: 97, baseType: !107, size: 16, offset: 1024)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !265, file: !146, line: 97, baseType: !107, size: 16, offset: 1040)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !265, file: !146, line: 99, baseType: !7, size: 32, offset: 1056)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !265, file: !146, line: 99, baseType: !7, size: 32, offset: 1088)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !265, file: !146, line: 99, baseType: !7, size: 32, offset: 1120)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !265, file: !146, line: 100, baseType: !7, size: 32, offset: 1152)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !265, file: !146, line: 100, baseType: !7, size: 32, offset: 1184)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !265, file: !146, line: 100, baseType: !7, size: 32, offset: 1216)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !265, file: !146, line: 101, baseType: !7, size: 32, offset: 1248)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !265, file: !146, line: 101, baseType: !7, size: 32, offset: 1280)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !265, file: !146, line: 101, baseType: !7, size: 32, offset: 1312)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !265, file: !146, line: 102, baseType: !7, size: 32, offset: 1344)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !265, file: !146, line: 102, baseType: !7, size: 32, offset: 1376)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !265, file: !146, line: 102, baseType: !7, size: 32, offset: 1408)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !265, file: !146, line: 103, baseType: !7, size: 32, offset: 1440)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !265, file: !146, line: 103, baseType: !7, size: 32, offset: 1472)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !265, file: !146, line: 103, baseType: !7, size: 32, offset: 1504)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !265, file: !146, line: 103, baseType: !7, size: 32, offset: 1536)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !265, file: !146, line: 103, baseType: !7, size: 32, offset: 1568)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !265, file: !146, line: 104, baseType: !7, size: 32, offset: 1600)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !265, file: !146, line: 104, baseType: !7, size: 32, offset: 1632)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !265, file: !146, line: 104, baseType: !7, size: 32, offset: 1664)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !265, file: !146, line: 104, baseType: !7, size: 32, offset: 1696)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !265, file: !146, line: 104, baseType: !7, size: 32, offset: 1728)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !265, file: !146, line: 105, baseType: !7, size: 32, offset: 1760)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !265, file: !146, line: 108, baseType: !295, size: 704, offset: 1792)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !146, line: 53, size: 704, elements: !296)
!296 = !{!297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !295, file: !146, line: 54, baseType: !7, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !295, file: !146, line: 55, baseType: !7, size: 32, offset: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !295, file: !146, line: 56, baseType: !7, size: 32, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !295, file: !146, line: 57, baseType: !7, size: 32, offset: 96)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !295, file: !146, line: 59, baseType: !206, size: 96, offset: 128)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !295, file: !146, line: 60, baseType: !206, size: 96, offset: 224)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !295, file: !146, line: 61, baseType: !206, size: 96, offset: 320)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !295, file: !146, line: 63, baseType: !7, size: 32, offset: 416)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !295, file: !146, line: 64, baseType: !7, size: 32, offset: 448)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !295, file: !146, line: 65, baseType: !7, size: 32, offset: 480)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !295, file: !146, line: 67, baseType: !107, size: 16, offset: 512)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !295, file: !146, line: 68, baseType: !107, size: 16, offset: 528)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !295, file: !146, line: 69, baseType: !107, size: 16, offset: 544)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !295, file: !146, line: 70, baseType: !107, size: 16, offset: 560)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !295, file: !146, line: 72, baseType: !7, size: 32, offset: 576)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !295, file: !146, line: 73, baseType: !7, size: 32, offset: 608)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !295, file: !146, line: 74, baseType: !7, size: 32, offset: 640)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !295, file: !146, line: 75, baseType: !7, size: 32, offset: 672)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !265, file: !146, line: 109, baseType: !316, size: 128, offset: 2496)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !146, line: 79, size: 128, elements: !317)
!317 = !{!318, !319, !320, !321}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !316, file: !146, line: 80, baseType: !8, size: 32)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !316, file: !146, line: 81, baseType: !8, size: 32, offset: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !316, file: !146, line: 82, baseType: !8, size: 32, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !316, file: !146, line: 83, baseType: !8, size: 32, offset: 96)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !265, file: !146, line: 111, baseType: !7, size: 32, offset: 2624)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !265, file: !146, line: 111, baseType: !7, size: 32, offset: 2656)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !265, file: !146, line: 112, baseType: !7, size: 32, offset: 2688)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !265, file: !146, line: 112, baseType: !7, size: 32, offset: 2720)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !265, file: !146, line: 113, baseType: !7, size: 32, offset: 2752)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !265, file: !146, line: 114, baseType: !7, size: 32, offset: 2784)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !265, file: !146, line: 114, baseType: !7, size: 32, offset: 2816)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !265, file: !146, line: 115, baseType: !107, size: 16, offset: 2848)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !265, file: !146, line: 115, baseType: !107, size: 16, offset: 2864)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !265, file: !146, line: 116, baseType: !107, size: 16, offset: 2880)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !265, file: !146, line: 117, baseType: !94, size: 8, offset: 2896)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !265, file: !146, line: 117, baseType: !94, size: 8, offset: 2904)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !265, file: !146, line: 119, baseType: !7, size: 32, offset: 2912)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !265, file: !146, line: 119, baseType: !7, size: 32, offset: 2944)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !265, file: !146, line: 120, baseType: !107, size: 16, offset: 2976)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !265, file: !146, line: 120, baseType: !107, size: 16, offset: 2992)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !265, file: !146, line: 121, baseType: !7, size: 32, offset: 3008)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !265, file: !146, line: 121, baseType: !7, size: 32, offset: 3040)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !265, file: !146, line: 122, baseType: !7, size: 32, offset: 3072)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !265, file: !146, line: 123, baseType: !7, size: 32, offset: 3104)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !265, file: !146, line: 124, baseType: !107, size: 16, offset: 3136)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !265, file: !146, line: 125, baseType: !107, size: 16, offset: 3152)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !265, file: !146, line: 127, baseType: !8, size: 32, offset: 3168)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !265, file: !146, line: 127, baseType: !8, size: 32, offset: 3200)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !265, file: !146, line: 128, baseType: !8, size: 32, offset: 3232)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !265, file: !146, line: 128, baseType: !8, size: 32, offset: 3264)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !265, file: !146, line: 129, baseType: !107, size: 16, offset: 3296)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !265, file: !146, line: 129, baseType: !107, size: 16, offset: 3312)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !265, file: !146, line: 129, baseType: !107, size: 16, offset: 3328)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !265, file: !146, line: 129, baseType: !107, size: 16, offset: 3344)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !265, file: !146, line: 130, baseType: !7, size: 32, offset: 3360)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !265, file: !146, line: 130, baseType: !7, size: 32, offset: 3392)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !265, file: !146, line: 130, baseType: !7, size: 32, offset: 3424)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !265, file: !146, line: 130, baseType: !7, size: 32, offset: 3456)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !265, file: !146, line: 131, baseType: !7, size: 32, offset: 3488)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !265, file: !146, line: 131, baseType: !7, size: 32, offset: 3520)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !265, file: !146, line: 131, baseType: !7, size: 32, offset: 3552)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !265, file: !146, line: 131, baseType: !7, size: 32, offset: 3584)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !265, file: !146, line: 132, baseType: !7, size: 32, offset: 3616)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !265, file: !146, line: 132, baseType: !7, size: 32, offset: 3648)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !265, file: !146, line: 133, baseType: !123, size: 512, offset: 3680)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !265, file: !146, line: 135, baseType: !7, size: 32, offset: 4192)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !265, file: !146, line: 136, baseType: !7, size: 32, offset: 4224)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !265, file: !146, line: 137, baseType: !7, size: 32, offset: 4256)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !265, file: !146, line: 138, baseType: !8, size: 32, offset: 4288)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !265, file: !146, line: 141, baseType: !94, size: 8, offset: 4320)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !265, file: !146, line: 141, baseType: !94, size: 8, offset: 4328)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !265, file: !146, line: 141, baseType: !94, size: 8, offset: 4336)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !265, file: !146, line: 141, baseType: !94, size: 8, offset: 4344)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !265, file: !146, line: 142, baseType: !107, size: 16, offset: 4352)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !265, file: !146, line: 142, baseType: !107, size: 16, offset: 4368)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !265, file: !146, line: 142, baseType: !107, size: 16, offset: 4384)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !265, file: !146, line: 145, baseType: !94, size: 8, offset: 4400)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !265, file: !146, line: 145, baseType: !94, size: 8, offset: 4408)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !265, file: !146, line: 148, baseType: !107, size: 16, offset: 4416)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !265, file: !146, line: 148, baseType: !107, size: 16, offset: 4432)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !265, file: !146, line: 149, baseType: !7, size: 32, offset: 4448)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !265, file: !146, line: 149, baseType: !7, size: 32, offset: 4480)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !265, file: !146, line: 152, baseType: !381, size: 128, offset: 4512)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !382)
!382 = !{!383}
!383 = !DISubrange(count: 4)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !265, file: !146, line: 153, baseType: !7, size: 32, offset: 4640)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !265, file: !146, line: 154, baseType: !7, size: 32, offset: 4672)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !265, file: !146, line: 157, baseType: !107, size: 16, offset: 4704)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !265, file: !146, line: 157, baseType: !107, size: 16, offset: 4720)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !265, file: !146, line: 160, baseType: !389, size: 64, offset: 4736)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !391, line: 113, size: 6208, elements: !392)
!391 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!392 = !{!393, !394, !395, !396, !397, !398, !402}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !390, file: !391, line: 114, baseType: !107, size: 16)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !390, file: !391, line: 114, baseType: !107, size: 16, offset: 16)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !390, file: !391, line: 115, baseType: !94, size: 8, offset: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !390, file: !391, line: 115, baseType: !94, size: 8, offset: 40)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !390, file: !391, line: 116, baseType: !94, size: 8, offset: 48)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !390, file: !391, line: 117, baseType: !399, size: 8, offset: 56)
!399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 8, elements: !400)
!400 = !{!401}
!401 = !DISubrange(count: 1)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !390, file: !391, line: 119, baseType: !403, size: 6144, offset: 64)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 6144, elements: !413)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !391, line: 109, baseType: !405)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !391, line: 106, size: 192, elements: !406)
!406 = !{!407, !408, !409, !410, !411, !412}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !405, file: !391, line: 107, baseType: !7, size: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !405, file: !391, line: 107, baseType: !7, size: 32, offset: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !405, file: !391, line: 107, baseType: !7, size: 32, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !405, file: !391, line: 107, baseType: !7, size: 32, offset: 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !405, file: !391, line: 107, baseType: !7, size: 32, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !405, file: !391, line: 108, baseType: !8, size: 32, offset: 160)
!413 = !{!414}
!414 = !DISubrange(count: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !265, file: !146, line: 161, baseType: !389, size: 64, offset: 4800)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !265, file: !146, line: 162, baseType: !94, size: 8, offset: 4864)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !265, file: !146, line: 162, baseType: !94, size: 8, offset: 4872)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !265, file: !146, line: 163, baseType: !94, size: 8, offset: 4880)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !265, file: !146, line: 163, baseType: !94, size: 8, offset: 4888)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !265, file: !146, line: 164, baseType: !107, size: 16, offset: 4896)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !265, file: !146, line: 164, baseType: !107, size: 16, offset: 4912)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !265, file: !146, line: 165, baseType: !7, size: 32, offset: 4928)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !265, file: !146, line: 165, baseType: !7, size: 32, offset: 4960)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !265, file: !146, line: 167, baseType: !425, size: 1152, offset: 4992)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 1152, elements: !2000)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !391, line: 57, size: 2496, elements: !428)
!428 = !{!429, !430, !431, !432, !433, !434, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !427, file: !391, line: 59, baseType: !107, size: 16)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !427, file: !391, line: 59, baseType: !107, size: 16, offset: 16)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !427, file: !391, line: 59, baseType: !107, size: 16, offset: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !427, file: !391, line: 59, baseType: !107, size: 16, offset: 48)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !427, file: !391, line: 60, baseType: !69, size: 64, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !427, file: !391, line: 61, baseType: !435, size: 64, offset: 128)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !391, line: 202, size: 3328, elements: !437)
!437 = !{!438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !1851, !1852, !1853, !1854, !1855, !1881, !1882, !1911, !1931, !1939, !1940}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !436, file: !391, line: 203, baseType: !74, size: 960)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !436, file: !391, line: 204, baseType: !144, size: 64, offset: 960)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !436, file: !391, line: 206, baseType: !7, size: 32, offset: 1024)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !436, file: !391, line: 206, baseType: !7, size: 32, offset: 1056)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !436, file: !391, line: 207, baseType: !7, size: 32, offset: 1088)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !436, file: !391, line: 207, baseType: !7, size: 32, offset: 1120)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !436, file: !391, line: 207, baseType: !7, size: 32, offset: 1152)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !436, file: !391, line: 207, baseType: !7, size: 32, offset: 1184)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !436, file: !391, line: 207, baseType: !7, size: 32, offset: 1216)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !436, file: !391, line: 207, baseType: !7, size: 32, offset: 1248)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !436, file: !391, line: 208, baseType: !7, size: 32, offset: 1280)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !436, file: !391, line: 208, baseType: !7, size: 32, offset: 1312)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !436, file: !391, line: 211, baseType: !7, size: 32, offset: 1344)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !436, file: !391, line: 211, baseType: !7, size: 32, offset: 1376)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !436, file: !391, line: 211, baseType: !7, size: 32, offset: 1408)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !436, file: !391, line: 211, baseType: !7, size: 32, offset: 1440)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !436, file: !391, line: 211, baseType: !7, size: 32, offset: 1472)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !436, file: !391, line: 214, baseType: !7, size: 32, offset: 1504)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !436, file: !391, line: 214, baseType: !7, size: 32, offset: 1536)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !436, file: !391, line: 217, baseType: !7, size: 32, offset: 1568)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !436, file: !391, line: 218, baseType: !7, size: 32, offset: 1600)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !436, file: !391, line: 219, baseType: !7, size: 32, offset: 1632)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !436, file: !391, line: 220, baseType: !7, size: 32, offset: 1664)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !436, file: !391, line: 221, baseType: !7, size: 32, offset: 1696)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !436, file: !391, line: 222, baseType: !107, size: 16, offset: 1728)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !436, file: !391, line: 222, baseType: !107, size: 16, offset: 1744)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !436, file: !391, line: 224, baseType: !107, size: 16, offset: 1760)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !436, file: !391, line: 224, baseType: !107, size: 16, offset: 1776)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !436, file: !391, line: 227, baseType: !107, size: 16, offset: 1792)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !436, file: !391, line: 227, baseType: !107, size: 16, offset: 1808)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !436, file: !391, line: 229, baseType: !107, size: 16, offset: 1824)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !436, file: !391, line: 229, baseType: !107, size: 16, offset: 1840)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !436, file: !391, line: 230, baseType: !107, size: 16, offset: 1856)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !436, file: !391, line: 230, baseType: !107, size: 16, offset: 1872)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !436, file: !391, line: 232, baseType: !7, size: 32, offset: 1888)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !436, file: !391, line: 232, baseType: !7, size: 32, offset: 1920)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !436, file: !391, line: 232, baseType: !7, size: 32, offset: 1952)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !436, file: !391, line: 232, baseType: !7, size: 32, offset: 1984)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !436, file: !391, line: 233, baseType: !8, size: 32, offset: 2016)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !436, file: !391, line: 234, baseType: !8, size: 32, offset: 2048)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !436, file: !391, line: 235, baseType: !107, size: 16, offset: 2080)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !436, file: !391, line: 235, baseType: !107, size: 16, offset: 2096)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !436, file: !391, line: 236, baseType: !107, size: 16, offset: 2112)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !436, file: !391, line: 239, baseType: !107, size: 16, offset: 2128)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !436, file: !391, line: 240, baseType: !8, size: 32, offset: 2144)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !436, file: !391, line: 241, baseType: !8, size: 32, offset: 2176)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !436, file: !391, line: 241, baseType: !8, size: 32, offset: 2208)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !436, file: !391, line: 241, baseType: !8, size: 32, offset: 2240)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !436, file: !391, line: 243, baseType: !7, size: 32, offset: 2272)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !436, file: !391, line: 243, baseType: !7, size: 32, offset: 2304)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !436, file: !391, line: 244, baseType: !7, size: 32, offset: 2336)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !436, file: !391, line: 246, baseType: !490, size: 320, offset: 2368)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !491, line: 50, size: 320, elements: !492)
!491 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!492 = !{!493, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !490, file: !491, line: 51, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !12, line: 1216, size: 39680, elements: !496)
!496 = !{!497, !498, !499, !500, !1052, !1053, !1054, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1081, !1420, !1423, !1706, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1728, !1729, !1730, !1731, !1732, !1740, !1807, !1814, !1815, !1822, !1825, !1831, !1832, !1833, !1834, !1835}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !495, file: !12, line: 1217, baseType: !74, size: 960)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !495, file: !12, line: 1218, baseType: !144, size: 64, offset: 960)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !495, file: !12, line: 1220, baseType: !69, size: 64, offset: 1024)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !495, file: !12, line: 1221, baseType: !501, size: 64, offset: 1088)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !503, line: 52, size: 4224, elements: !504)
!503 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!504 = !{!505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !582, !598}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !502, file: !503, line: 53, baseType: !74, size: 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !502, file: !503, line: 54, baseType: !144, size: 64, offset: 960)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !502, file: !503, line: 56, baseType: !107, size: 16, offset: 1024)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !502, file: !503, line: 56, baseType: !107, size: 16, offset: 1040)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !502, file: !503, line: 57, baseType: !107, size: 16, offset: 1056)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !502, file: !503, line: 57, baseType: !107, size: 16, offset: 1072)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !502, file: !503, line: 59, baseType: !7, size: 32, offset: 1088)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !502, file: !503, line: 59, baseType: !7, size: 32, offset: 1120)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !502, file: !503, line: 59, baseType: !7, size: 32, offset: 1152)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !502, file: !503, line: 60, baseType: !7, size: 32, offset: 1184)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !502, file: !503, line: 60, baseType: !7, size: 32, offset: 1216)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !502, file: !503, line: 60, baseType: !7, size: 32, offset: 1248)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !502, file: !503, line: 61, baseType: !7, size: 32, offset: 1280)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !502, file: !503, line: 61, baseType: !7, size: 32, offset: 1312)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !502, file: !503, line: 61, baseType: !7, size: 32, offset: 1344)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !502, file: !503, line: 68, baseType: !7, size: 32, offset: 1376)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !502, file: !503, line: 68, baseType: !7, size: 32, offset: 1408)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !502, file: !503, line: 68, baseType: !7, size: 32, offset: 1440)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !502, file: !503, line: 69, baseType: !7, size: 32, offset: 1472)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !502, file: !503, line: 69, baseType: !7, size: 32, offset: 1504)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !502, file: !503, line: 74, baseType: !7, size: 32, offset: 1536)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !502, file: !503, line: 79, baseType: !7, size: 32, offset: 1568)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !502, file: !503, line: 81, baseType: !107, size: 16, offset: 1600)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !502, file: !503, line: 91, baseType: !107, size: 16, offset: 1616)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !502, file: !503, line: 92, baseType: !107, size: 16, offset: 1632)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !502, file: !503, line: 93, baseType: !107, size: 16, offset: 1648)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !502, file: !503, line: 94, baseType: !107, size: 16, offset: 1664)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !502, file: !503, line: 94, baseType: !107, size: 16, offset: 1680)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !502, file: !503, line: 94, baseType: !107, size: 16, offset: 1696)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !502, file: !503, line: 94, baseType: !107, size: 16, offset: 1712)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !502, file: !503, line: 96, baseType: !7, size: 32, offset: 1728)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !502, file: !503, line: 96, baseType: !7, size: 32, offset: 1760)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !502, file: !503, line: 96, baseType: !7, size: 32, offset: 1792)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !502, file: !503, line: 96, baseType: !7, size: 32, offset: 1824)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !502, file: !503, line: 98, baseType: !7, size: 32, offset: 1856)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !502, file: !503, line: 98, baseType: !7, size: 32, offset: 1888)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !502, file: !503, line: 98, baseType: !7, size: 32, offset: 1920)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !502, file: !503, line: 98, baseType: !7, size: 32, offset: 1952)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !502, file: !503, line: 99, baseType: !7, size: 32, offset: 1984)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !502, file: !503, line: 99, baseType: !7, size: 32, offset: 2016)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !502, file: !503, line: 100, baseType: !7, size: 32, offset: 2048)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !502, file: !503, line: 100, baseType: !7, size: 32, offset: 2080)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !502, file: !503, line: 103, baseType: !107, size: 16, offset: 2112)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !502, file: !503, line: 103, baseType: !107, size: 16, offset: 2128)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !502, file: !503, line: 103, baseType: !107, size: 16, offset: 2144)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !502, file: !503, line: 103, baseType: !107, size: 16, offset: 2160)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !502, file: !503, line: 106, baseType: !7, size: 32, offset: 2176)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !502, file: !503, line: 106, baseType: !7, size: 32, offset: 2208)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !502, file: !503, line: 106, baseType: !7, size: 32, offset: 2240)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !502, file: !503, line: 106, baseType: !7, size: 32, offset: 2272)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !502, file: !503, line: 107, baseType: !107, size: 16, offset: 2304)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !502, file: !503, line: 107, baseType: !107, size: 16, offset: 2320)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !502, file: !503, line: 107, baseType: !107, size: 16, offset: 2336)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !502, file: !503, line: 107, baseType: !107, size: 16, offset: 2352)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !502, file: !503, line: 108, baseType: !7, size: 32, offset: 2368)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !502, file: !503, line: 108, baseType: !7, size: 32, offset: 2400)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !502, file: !503, line: 109, baseType: !7, size: 32, offset: 2432)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !502, file: !503, line: 109, baseType: !7, size: 32, offset: 2464)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !502, file: !503, line: 110, baseType: !7, size: 32, offset: 2496)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !502, file: !503, line: 110, baseType: !7, size: 32, offset: 2528)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !502, file: !503, line: 110, baseType: !7, size: 32, offset: 2560)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !502, file: !503, line: 111, baseType: !107, size: 16, offset: 2592)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !502, file: !503, line: 111, baseType: !107, size: 16, offset: 2608)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !502, file: !503, line: 112, baseType: !107, size: 16, offset: 2624)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !502, file: !503, line: 112, baseType: !107, size: 16, offset: 2640)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !502, file: !503, line: 112, baseType: !107, size: 16, offset: 2656)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !502, file: !503, line: 115, baseType: !107, size: 16, offset: 2672)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !502, file: !503, line: 118, baseType: !6, size: 64, offset: 2688)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !502, file: !503, line: 118, baseType: !6, size: 64, offset: 2752)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !502, file: !503, line: 121, baseType: !162, size: 64, offset: 2816)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !502, file: !503, line: 122, baseType: !425, size: 1152, offset: 2880)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !502, file: !503, line: 123, baseType: !107, size: 16, offset: 4032)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !502, file: !503, line: 123, baseType: !107, size: 16, offset: 4048)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !502, file: !503, line: 123, baseType: !579, size: 32, offset: 4064)
!579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 32, elements: !580)
!580 = !{!581}
!581 = !DISubrange(count: 2)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !502, file: !503, line: 126, baseType: !583, size: 64, offset: 4096)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !75, line: 159, size: 448, elements: !585)
!585 = !{!586, !588, !589, !590, !591, !594}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !584, file: !75, line: 161, baseType: !587, size: 64)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 64, elements: !580)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !584, file: !75, line: 162, baseType: !587, size: 64, offset: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !584, file: !75, line: 163, baseType: !579, size: 32, offset: 128)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !584, file: !75, line: 164, baseType: !579, size: 32, offset: 160)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !584, file: !75, line: 165, baseType: !592, size: 128, offset: 192)
!592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !593, size: 128, elements: !580)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !584, file: !75, line: 166, baseType: !595, size: 128, offset: 320)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 128, elements: !580)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !75, line: 46, flags: DIFlagFwdDecl)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !502, file: !503, line: 129, baseType: !599, size: 64, offset: 4160)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !601, line: 328, size: 3456, elements: !602)
!601 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!602 = !{!603, !604, !605, !1001, !1002, !1003, !1004, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1030, !1031, !1032, !1035, !1039, !1043, !1047, !1048, !1049, !1050, !1051}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !600, file: !601, line: 329, baseType: !74, size: 960)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !600, file: !601, line: 330, baseType: !144, size: 64, offset: 960)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !600, file: !601, line: 332, baseType: !606, size: 64, offset: 1024)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !608, line: 283, size: 4096, elements: !609)
!608 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!609 = !{!610, !611, !612, !613, !617, !618, !622, !970, !978, !982, !988, !992, !993, !994, !995, !999, !1000}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !607, file: !608, line: 284, baseType: !8, size: 32)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !607, file: !608, line: 285, baseType: !123, size: 512, offset: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !607, file: !608, line: 287, baseType: !123, size: 512, offset: 544)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !607, file: !608, line: 288, baseType: !614, size: 2048, offset: 1056)
!614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 2048, elements: !615)
!615 = !{!616}
!616 = !DISubrange(count: 256)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !607, file: !608, line: 289, baseType: !8, size: 32, offset: 3104)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !607, file: !608, line: 292, baseType: !619, size: 64, offset: 3136)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DISubroutineType(types: !621)
!621 = !{null, !599}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !607, file: !608, line: 293, baseType: !623, size: 64, offset: 3200)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{null, !599, !626}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !601, line: 167, size: 3712, elements: !628)
!628 = !{!629, !630, !631, !632, !633, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !962, !963, !964, !965, !966, !967}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !627, file: !601, line: 168, baseType: !626, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !627, file: !601, line: 168, baseType: !626, size: 64, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !627, file: !601, line: 168, baseType: !626, size: 64, offset: 128)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !627, file: !601, line: 170, baseType: !112, size: 64, offset: 192)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !627, file: !601, line: 172, baseType: !634, size: 64, offset: 256)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !608, line: 144, size: 6016, elements: !636)
!636 = !{!637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !812, !813, !814, !828, !832, !836, !837, !844, !849, !853, !854, !855, !856, !860, !861, !865, !869, !873, !877, !881, !885, !889, !890, !897, !899, !908, !917}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !635, file: !608, line: 145, baseType: !47, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !635, file: !608, line: 145, baseType: !47, size: 64, offset: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !635, file: !608, line: 146, baseType: !107, size: 16, offset: 128)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !635, file: !608, line: 148, baseType: !123, size: 512, offset: 144)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !635, file: !608, line: 149, baseType: !8, size: 32, offset: 672)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !635, file: !608, line: 151, baseType: !123, size: 512, offset: 704)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !635, file: !608, line: 152, baseType: !614, size: 2048, offset: 1216)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !635, file: !608, line: 153, baseType: !8, size: 32, offset: 3264)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !635, file: !608, line: 155, baseType: !7, size: 32, offset: 3296)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !635, file: !608, line: 155, baseType: !7, size: 32, offset: 3328)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !635, file: !608, line: 155, baseType: !7, size: 32, offset: 3360)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !635, file: !608, line: 156, baseType: !7, size: 32, offset: 3392)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !635, file: !608, line: 156, baseType: !7, size: 32, offset: 3424)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !635, file: !608, line: 156, baseType: !7, size: 32, offset: 3456)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !635, file: !608, line: 157, baseType: !107, size: 16, offset: 3488)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !635, file: !608, line: 157, baseType: !107, size: 16, offset: 3504)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !635, file: !608, line: 157, baseType: !107, size: 16, offset: 3520)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !635, file: !608, line: 160, baseType: !655, size: 64, offset: 3584)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !608, line: 109, baseType: !657)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !608, line: 98, size: 1408, elements: !658)
!658 = !{!659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !811}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !657, file: !608, line: 99, baseType: !8, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !657, file: !608, line: 99, baseType: !8, size: 32, offset: 32)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !657, file: !608, line: 100, baseType: !123, size: 512, offset: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !657, file: !608, line: 101, baseType: !7, size: 32, offset: 576)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !657, file: !608, line: 101, baseType: !7, size: 32, offset: 608)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !657, file: !608, line: 101, baseType: !7, size: 32, offset: 640)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !657, file: !608, line: 101, baseType: !7, size: 32, offset: 672)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !657, file: !608, line: 102, baseType: !7, size: 32, offset: 704)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !657, file: !608, line: 102, baseType: !7, size: 32, offset: 736)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !657, file: !608, line: 103, baseType: !8, size: 32, offset: 768)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !657, file: !608, line: 104, baseType: !8, size: 32, offset: 800)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !657, file: !608, line: 107, baseType: !671, size: 64, offset: 832)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !601, line: 87, size: 2816, elements: !673)
!673 = !{!674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !796}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !672, file: !601, line: 88, baseType: !671, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !672, file: !601, line: 88, baseType: !671, size: 64, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !672, file: !601, line: 88, baseType: !671, size: 64, offset: 128)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !672, file: !601, line: 90, baseType: !112, size: 64, offset: 192)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !672, file: !601, line: 92, baseType: !123, size: 512, offset: 256)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !672, file: !601, line: 94, baseType: !123, size: 512, offset: 768)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !672, file: !601, line: 99, baseType: !47, size: 64, offset: 1280)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !672, file: !601, line: 101, baseType: !107, size: 16, offset: 1344)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !672, file: !601, line: 101, baseType: !107, size: 16, offset: 1360)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !672, file: !601, line: 102, baseType: !107, size: 16, offset: 1376)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !672, file: !601, line: 103, baseType: !107, size: 16, offset: 1392)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !672, file: !601, line: 104, baseType: !686, size: 64, offset: 1408)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !608, line: 114, size: 1600, elements: !688)
!688 = !{!689, !690, !712, !716, !720, !724, !728, !732, !733, !737, !766, !767, !768}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !687, file: !608, line: 115, baseType: !123, size: 512)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !687, file: !608, line: 117, baseType: !691, size: 64, offset: 512)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !694, !697, !699, !699, !710}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !696, line: 44, flags: DIFlagFwdDecl)
!696 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !608, line: 73, flags: DIFlagFwdDecl)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !696, line: 55, size: 192, elements: !701)
!701 = !{!702, !706, !709}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !700, file: !696, line: 58, baseType: !703, size: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !700, file: !696, line: 56, size: 64, elements: !704)
!704 = !{!705}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !703, file: !696, line: 57, baseType: !47, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !700, file: !696, line: 60, baseType: !707, size: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !601, line: 335, flags: DIFlagFwdDecl)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !700, file: !696, line: 61, baseType: !47, size: 64, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !94)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !687, file: !608, line: 118, baseType: !713, size: 64, offset: 576)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !694, !699, !699, !6}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !687, file: !608, line: 120, baseType: !717, size: 64, offset: 640)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{null, !694, !697, !699}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !687, file: !608, line: 121, baseType: !721, size: 64, offset: 704)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{null, !694, !699, !6}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !687, file: !608, line: 122, baseType: !725, size: 64, offset: 768)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DISubroutineType(types: !727)
!727 = !{null, !599, !671, !707}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !687, file: !608, line: 123, baseType: !729, size: 64, offset: 832)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{null, !599, !671, !626, !671, !710}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !687, file: !608, line: 124, baseType: !729, size: 64, offset: 896)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !687, file: !608, line: 125, baseType: !734, size: 64, offset: 960)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DISubroutineType(types: !736)
!736 = !{null, !599, !671, !626, !671}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !687, file: !608, line: 128, baseType: !738, size: 256, offset: 1024)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !696, line: 436, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !696, line: 430, size: 256, elements: !740)
!740 = !{!741, !742, !745, !761}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !739, file: !696, line: 431, baseType: !47, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !739, file: !696, line: 432, baseType: !743, size: 64, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !696, line: 417, baseType: !708)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !739, file: !696, line: 433, baseType: !746, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !696, line: 408, baseType: !747)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{!8, !694, !699, !750, !752}
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !696, line: 38, flags: DIFlagFwdDecl)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !696, line: 348, baseType: !754)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !696, line: 337, size: 256, elements: !755)
!755 = !{!756, !757, !758, !759, !760}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !754, file: !696, line: 339, baseType: !47, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !754, file: !696, line: 342, baseType: !750, size: 64, offset: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !754, file: !696, line: 345, baseType: !8, size: 32, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !754, file: !696, line: 347, baseType: !8, size: 32, offset: 160)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !754, file: !696, line: 347, baseType: !8, size: 32, offset: 192)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !739, file: !696, line: 434, baseType: !762, size: 64, offset: 192)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !696, line: 409, baseType: !763)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{null, !47}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !687, file: !608, line: 129, baseType: !738, size: 256, offset: 1280)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !687, file: !608, line: 132, baseType: !8, size: 32, offset: 1536)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !687, file: !608, line: 132, baseType: !8, size: 32, offset: 1568)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !672, file: !601, line: 105, baseType: !123, size: 512, offset: 1472)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !672, file: !601, line: 107, baseType: !7, size: 32, offset: 1984)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !672, file: !601, line: 107, baseType: !7, size: 32, offset: 2016)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !672, file: !601, line: 109, baseType: !47, size: 64, offset: 2048)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !672, file: !601, line: 112, baseType: !107, size: 16, offset: 2112)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !672, file: !601, line: 114, baseType: !107, size: 16, offset: 2128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !672, file: !601, line: 115, baseType: !8, size: 32, offset: 2144)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !672, file: !601, line: 117, baseType: !47, size: 64, offset: 2176)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !672, file: !601, line: 122, baseType: !8, size: 32, offset: 2240)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !672, file: !601, line: 124, baseType: !8, size: 32, offset: 2272)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !672, file: !601, line: 126, baseType: !671, size: 64, offset: 2304)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !672, file: !601, line: 128, baseType: !781, size: 64, offset: 2368)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !601, line: 298, size: 448, elements: !783)
!783 = !{!784, !785, !786, !789, !790, !793, !794, !795}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !782, file: !601, line: 299, baseType: !781, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !782, file: !601, line: 299, baseType: !781, size: 64, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !782, file: !601, line: 301, baseType: !787, size: 64, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !601, line: 218, baseType: !627)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !782, file: !601, line: 301, baseType: !787, size: 64, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !782, file: !601, line: 302, baseType: !791, size: 64, offset: 256)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !601, line: 132, baseType: !672)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !782, file: !601, line: 302, baseType: !791, size: 64, offset: 320)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !782, file: !601, line: 304, baseType: !8, size: 32, offset: 384)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !782, file: !601, line: 305, baseType: !8, size: 32, offset: 416)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !672, file: !601, line: 131, baseType: !797, size: 384, offset: 2432)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !601, line: 73, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !601, line: 62, size: 384, elements: !799)
!799 = !{!800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !798, file: !601, line: 63, baseType: !381, size: 128)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !798, file: !601, line: 64, baseType: !7, size: 32, offset: 128)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !798, file: !601, line: 64, baseType: !7, size: 32, offset: 160)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !798, file: !601, line: 65, baseType: !47, size: 64, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !798, file: !601, line: 66, baseType: !107, size: 16, offset: 256)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !798, file: !601, line: 67, baseType: !107, size: 16, offset: 272)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !798, file: !601, line: 68, baseType: !107, size: 16, offset: 288)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !798, file: !601, line: 69, baseType: !107, size: 16, offset: 304)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !798, file: !601, line: 70, baseType: !107, size: 16, offset: 320)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !798, file: !601, line: 71, baseType: !107, size: 16, offset: 336)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !798, file: !601, line: 72, baseType: !579, size: 32, offset: 352)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !657, file: !608, line: 108, baseType: !123, size: 512, offset: 896)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !635, file: !608, line: 160, baseType: !655, size: 64, offset: 3648)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !635, file: !608, line: 162, baseType: !123, size: 512, offset: 3712)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !635, file: !608, line: 165, baseType: !815, size: 64, offset: 4224)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{null, !818, !820, !822, !599, !626, !824}
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !695)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !608, line: 81, flags: DIFlagFwdDecl)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !601, line: 43, flags: DIFlagFwdDecl)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !601, line: 274, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !601, line: 271, size: 32, elements: !826)
!826 = !{!827}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !825, file: !601, line: 273, baseType: !202, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !635, file: !608, line: 168, baseType: !829, size: 64, offset: 4288)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{null, !818, !599, !626}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !635, file: !608, line: 171, baseType: !833, size: 64, offset: 4352)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{null, !697, !694, !699}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !635, file: !608, line: 173, baseType: !833, size: 64, offset: 4416)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !635, file: !608, line: 176, baseType: !838, size: 64, offset: 4480)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{null, !822, !841, !626, !8, !8}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !843, line: 136, flags: DIFlagFwdDecl)
!843 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!844 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !635, file: !608, line: 179, baseType: !845, size: 64, offset: 4544)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{null, !599, !626, !848, !8}
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !635, file: !608, line: 181, baseType: !850, size: 64, offset: 4608)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!8, !626, !8, !8}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !635, file: !608, line: 183, baseType: !850, size: 64, offset: 4672)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !635, file: !608, line: 185, baseType: !850, size: 64, offset: 4736)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !635, file: !608, line: 188, baseType: !623, size: 64, offset: 4800)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !635, file: !608, line: 190, baseType: !857, size: 64, offset: 4864)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{null, !599, !626, !81}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !635, file: !608, line: 193, baseType: !623, size: 64, offset: 4928)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !635, file: !608, line: 195, baseType: !862, size: 64, offset: 4992)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{null, !626}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !635, file: !608, line: 197, baseType: !866, size: 64, offset: 5056)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DISubroutineType(types: !868)
!868 = !{null, !599, !626, !626}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !635, file: !608, line: 200, baseType: !870, size: 64, offset: 5120)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DISubroutineType(types: !872)
!872 = !{null, !818, !699}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !635, file: !608, line: 201, baseType: !874, size: 64, offset: 5184)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{null, !699}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !635, file: !608, line: 202, baseType: !878, size: 64, offset: 5248)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{null, !699, !626}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !635, file: !608, line: 205, baseType: !882, size: 64, offset: 5312)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{!8, !634, !599}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !635, file: !608, line: 207, baseType: !886, size: 64, offset: 5376)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!8, !626, !599}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !635, file: !608, line: 210, baseType: !623, size: 64, offset: 5440)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !635, file: !608, line: 213, baseType: !891, size: 64, offset: 5504)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !608, line: 135, baseType: !892)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!47, !895, !626, !824}
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !608, line: 62, flags: DIFlagFwdDecl)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !635, file: !608, line: 214, baseType: !898, size: 64, offset: 5568)
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !608, line: 136, baseType: !763)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !635, file: !608, line: 215, baseType: !900, size: 64, offset: 5632)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !608, line: 137, baseType: !901)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{null, !47, !8, !626, !904, !906, !906}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !608, line: 63, flags: DIFlagFwdDecl)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !635, file: !608, line: 217, baseType: !909, size: 64, offset: 5696)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !608, line: 138, baseType: !910)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!8, !913, !626, !904, !915, !915}
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !608, line: 64, flags: DIFlagFwdDecl)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !608, line: 66, flags: DIFlagFwdDecl)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !635, file: !608, line: 220, baseType: !738, size: 256, offset: 5760)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !627, file: !601, line: 173, baseType: !123, size: 512, offset: 320)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !627, file: !601, line: 175, baseType: !123, size: 512, offset: 832)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !627, file: !601, line: 176, baseType: !8, size: 32, offset: 1344)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !627, file: !601, line: 177, baseType: !107, size: 16, offset: 1376)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !627, file: !601, line: 177, baseType: !107, size: 16, offset: 1392)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !627, file: !601, line: 178, baseType: !107, size: 16, offset: 1408)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !627, file: !601, line: 178, baseType: !107, size: 16, offset: 1424)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !627, file: !601, line: 179, baseType: !107, size: 16, offset: 1440)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !627, file: !601, line: 179, baseType: !107, size: 16, offset: 1456)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !627, file: !601, line: 180, baseType: !107, size: 16, offset: 1472)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !627, file: !601, line: 181, baseType: !107, size: 16, offset: 1488)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !627, file: !601, line: 182, baseType: !206, size: 96, offset: 1504)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !627, file: !601, line: 184, baseType: !133, size: 128, offset: 1600)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !627, file: !601, line: 184, baseType: !133, size: 128, offset: 1728)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !627, file: !601, line: 185, baseType: !626, size: 64, offset: 1856)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !627, file: !601, line: 186, baseType: !81, size: 64, offset: 1920)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !627, file: !601, line: 187, baseType: !47, size: 64, offset: 1984)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !627, file: !601, line: 188, baseType: !626, size: 64, offset: 2048)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !627, file: !601, line: 189, baseType: !133, size: 128, offset: 2112)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !627, file: !601, line: 191, baseType: !7, size: 32, offset: 2240)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !627, file: !601, line: 191, baseType: !7, size: 32, offset: 2272)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !627, file: !601, line: 192, baseType: !7, size: 32, offset: 2304)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !627, file: !601, line: 192, baseType: !7, size: 32, offset: 2336)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !627, file: !601, line: 193, baseType: !7, size: 32, offset: 2368)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !627, file: !601, line: 194, baseType: !7, size: 32, offset: 2400)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !627, file: !601, line: 194, baseType: !7, size: 32, offset: 2432)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !627, file: !601, line: 196, baseType: !8, size: 32, offset: 2464)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !627, file: !601, line: 198, baseType: !123, size: 512, offset: 2496)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !627, file: !601, line: 199, baseType: !107, size: 16, offset: 3008)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !627, file: !601, line: 199, baseType: !107, size: 16, offset: 3024)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !627, file: !601, line: 200, baseType: !7, size: 32, offset: 3040)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !627, file: !601, line: 200, baseType: !7, size: 32, offset: 3072)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !627, file: !601, line: 202, baseType: !107, size: 16, offset: 3104)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !627, file: !601, line: 202, baseType: !107, size: 16, offset: 3120)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !627, file: !601, line: 203, baseType: !47, size: 64, offset: 3136)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !627, file: !601, line: 204, baseType: !954, size: 128, offset: 3200)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !955, line: 95, baseType: !956)
!955 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !955, line: 92, size: 128, elements: !957)
!957 = !{!958, !959, !960, !961}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !956, file: !955, line: 93, baseType: !7, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !956, file: !955, line: 93, baseType: !7, size: 32, offset: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !956, file: !955, line: 94, baseType: !7, size: 32, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !956, file: !955, line: 94, baseType: !7, size: 32, offset: 96)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !627, file: !601, line: 205, baseType: !954, size: 128, offset: 3328)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !627, file: !601, line: 206, baseType: !954, size: 128, offset: 3456)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !627, file: !601, line: 215, baseType: !107, size: 16, offset: 3584)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !627, file: !601, line: 215, baseType: !107, size: 16, offset: 3600)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !627, file: !601, line: 216, baseType: !8, size: 32, offset: 3616)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !627, file: !601, line: 217, baseType: !968, size: 64, offset: 3648)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !601, line: 51, flags: DIFlagFwdDecl)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !607, file: !608, line: 294, baseType: !971, size: 64, offset: 3264)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !494, !47, !974}
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !608, line: 282, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !47, !8, !710}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !607, file: !608, line: 296, baseType: !979, size: 64, offset: 3328)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!8, !818, !606}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !607, file: !608, line: 298, baseType: !983, size: 64, offset: 3392)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{null, !818, !606, !986, !987, !987}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !607, file: !608, line: 302, baseType: !989, size: 64, offset: 3456)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DISubroutineType(types: !991)
!991 = !{null, !599, !599}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !607, file: !608, line: 303, baseType: !989, size: 64, offset: 3520)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !607, file: !608, line: 304, baseType: !989, size: 64, offset: 3584)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !607, file: !608, line: 307, baseType: !619, size: 64, offset: 3648)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !607, file: !608, line: 309, baseType: !996, size: 64, offset: 3712)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{!8, !599, !781}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !607, file: !608, line: 311, baseType: !623, size: 64, offset: 3776)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !607, file: !608, line: 314, baseType: !738, size: 256, offset: 3840)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !600, file: !601, line: 333, baseType: !123, size: 512, offset: 1088)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !600, file: !601, line: 335, baseType: !707, size: 64, offset: 1600)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !600, file: !601, line: 337, baseType: !237, size: 64, offset: 1664)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !600, file: !601, line: 338, baseType: !1005, size: 64, offset: 1728)
!1005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !580)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !600, file: !601, line: 340, baseType: !133, size: 128, offset: 1792)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !600, file: !601, line: 340, baseType: !133, size: 128, offset: 1920)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !600, file: !601, line: 342, baseType: !8, size: 32, offset: 2048)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !600, file: !601, line: 342, baseType: !8, size: 32, offset: 2080)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !600, file: !601, line: 343, baseType: !8, size: 32, offset: 2112)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !600, file: !601, line: 345, baseType: !8, size: 32, offset: 2144)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !600, file: !601, line: 346, baseType: !8, size: 32, offset: 2176)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !600, file: !601, line: 347, baseType: !107, size: 16, offset: 2208)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !600, file: !601, line: 348, baseType: !107, size: 16, offset: 2224)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !600, file: !601, line: 349, baseType: !8, size: 32, offset: 2240)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !600, file: !601, line: 351, baseType: !8, size: 32, offset: 2272)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !600, file: !601, line: 353, baseType: !107, size: 16, offset: 2304)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !600, file: !601, line: 354, baseType: !107, size: 16, offset: 2320)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !600, file: !601, line: 355, baseType: !8, size: 32, offset: 2336)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !600, file: !601, line: 357, baseType: !954, size: 128, offset: 2368)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !600, file: !601, line: 363, baseType: !133, size: 128, offset: 2496)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !600, file: !601, line: 363, baseType: !133, size: 128, offset: 2624)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !600, file: !601, line: 368, baseType: !1024, size: 64, offset: 2752)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !608, line: 500, size: 64, elements: !1026)
!1026 = !{!1027}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1025, file: !608, line: 502, baseType: !1028, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !198, line: 48, baseType: !197)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !600, file: !601, line: 372, baseType: !824, size: 32, offset: 2816)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !600, file: !601, line: 373, baseType: !8, size: 32, offset: 2848)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !600, file: !601, line: 382, baseType: !1033, size: 64, offset: 2880)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !601, line: 46, flags: DIFlagFwdDecl)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !600, file: !601, line: 385, baseType: !1036, size: 64, offset: 2944)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !47, !7}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !600, file: !601, line: 386, baseType: !1040, size: 64, offset: 3008)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{null, !47, !848}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !600, file: !601, line: 387, baseType: !1044, size: 64, offset: 3072)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!8, !47}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !600, file: !601, line: 388, baseType: !763, size: 64, offset: 3136)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !600, file: !601, line: 389, baseType: !47, size: 64, offset: 3200)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !600, file: !601, line: 389, baseType: !47, size: 64, offset: 3264)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !600, file: !601, line: 389, baseType: !47, size: 64, offset: 3328)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !600, file: !601, line: 389, baseType: !47, size: 64, offset: 3392)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !495, file: !12, line: 1223, baseType: !494, size: 64, offset: 1152)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !495, file: !12, line: 1225, baseType: !133, size: 128, offset: 1216)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !495, file: !12, line: 1226, baseType: !1055, size: 64, offset: 1344)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !12, line: 69, size: 320, elements: !1057)
!1057 = !{!1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1056, file: !12, line: 70, baseType: !1055, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1056, file: !12, line: 70, baseType: !1055, size: 64, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1056, file: !12, line: 71, baseType: !202, size: 32, offset: 128)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1056, file: !12, line: 71, baseType: !202, size: 32, offset: 160)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1056, file: !12, line: 72, baseType: !8, size: 32, offset: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1056, file: !12, line: 73, baseType: !107, size: 16, offset: 224)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1056, file: !12, line: 73, baseType: !107, size: 16, offset: 240)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1056, file: !12, line: 74, baseType: !69, size: 64, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !495, file: !12, line: 1227, baseType: !69, size: 64, offset: 1408)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !495, file: !12, line: 1229, baseType: !206, size: 96, offset: 1472)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !495, file: !12, line: 1230, baseType: !206, size: 96, offset: 1568)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !495, file: !12, line: 1231, baseType: !206, size: 96, offset: 1664)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !495, file: !12, line: 1231, baseType: !206, size: 96, offset: 1760)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !495, file: !12, line: 1233, baseType: !202, size: 32, offset: 1856)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !495, file: !12, line: 1234, baseType: !8, size: 32, offset: 1888)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !495, file: !12, line: 1235, baseType: !202, size: 32, offset: 1920)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !495, file: !12, line: 1237, baseType: !107, size: 16, offset: 1952)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !495, file: !12, line: 1239, baseType: !94, size: 8, offset: 1968)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !495, file: !12, line: 1240, baseType: !399, size: 8, offset: 1976)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !495, file: !12, line: 1242, baseType: !599, size: 64, offset: 1984)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !495, file: !12, line: 1244, baseType: !1079, size: 64, offset: 2048)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !12, line: 59, flags: DIFlagFwdDecl)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !495, file: !12, line: 1246, baseType: !1082, size: 64, offset: 2112)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !12, line: 1067, size: 5184, elements: !1084)
!1084 = !{!1085, !1115, !1116, !1131, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1153, !1292, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1403}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1083, file: !12, line: 1068, baseType: !1086, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !12, line: 934, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !12, line: 925, size: 576, elements: !1089)
!1089 = !{!1090, !1107, !1108, !1109, !1110, !1111, !1114}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1088, file: !12, line: 926, baseType: !1091, size: 320)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !12, line: 830, baseType: !1092)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !12, line: 813, size: 320, elements: !1093)
!1093 = !{!1094, !1097, !1100, !1101, !1104, !1105, !1106}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1092, file: !12, line: 814, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !12, line: 51, flags: DIFlagFwdDecl)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1092, file: !12, line: 815, baseType: !1098, size: 64, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !12, line: 815, flags: DIFlagFwdDecl)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1092, file: !12, line: 818, baseType: !47, size: 64, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1092, file: !12, line: 819, baseType: !1102, size: 32, offset: 192)
!1102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1103, size: 32, elements: !382)
!1103 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1092, file: !12, line: 822, baseType: !8, size: 32, offset: 224)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1092, file: !12, line: 826, baseType: !8, size: 32, offset: 256)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1092, file: !12, line: 829, baseType: !8, size: 32, offset: 288)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1088, file: !12, line: 928, baseType: !107, size: 16, offset: 320)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1088, file: !12, line: 928, baseType: !107, size: 16, offset: 336)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1088, file: !12, line: 929, baseType: !8, size: 32, offset: 352)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1088, file: !12, line: 930, baseType: !593, size: 64, offset: 384)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1088, file: !12, line: 931, baseType: !1112, size: 64, offset: 448)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !12, line: 931, flags: DIFlagFwdDecl)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1088, file: !12, line: 933, baseType: !47, size: 64, offset: 512)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1083, file: !12, line: 1069, baseType: !1086, size: 64, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1083, file: !12, line: 1070, baseType: !1117, size: 64, offset: 128)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !12, line: 916, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !12, line: 891, size: 704, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1125, !1126, !1127, !1128, !1129, !1130}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1119, file: !12, line: 892, baseType: !1091, size: 320)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1119, file: !12, line: 896, baseType: !8, size: 32, offset: 320)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1119, file: !12, line: 900, baseType: !1124, size: 96, offset: 352)
!1124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 96, elements: !207)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1119, file: !12, line: 903, baseType: !7, size: 32, offset: 448)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1119, file: !12, line: 906, baseType: !8, size: 32, offset: 480)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1119, file: !12, line: 909, baseType: !7, size: 32, offset: 512)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1119, file: !12, line: 912, baseType: !7, size: 32, offset: 544)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1119, file: !12, line: 914, baseType: !69, size: 64, offset: 576)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1119, file: !12, line: 915, baseType: !47, size: 64, offset: 640)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1083, file: !12, line: 1071, baseType: !1132, size: 64, offset: 192)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !12, line: 920, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !12, line: 918, size: 320, elements: !1135)
!1135 = !{!1136}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1134, file: !12, line: 919, baseType: !1091, size: 320)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1083, file: !12, line: 1075, baseType: !7, size: 32, offset: 256)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1083, file: !12, line: 1077, baseType: !7, size: 32, offset: 288)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1083, file: !12, line: 1078, baseType: !7, size: 32, offset: 320)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1083, file: !12, line: 1079, baseType: !107, size: 16, offset: 352)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1083, file: !12, line: 1082, baseType: !107, size: 16, offset: 368)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1083, file: !12, line: 1085, baseType: !94, size: 8, offset: 384)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1083, file: !12, line: 1086, baseType: !94, size: 8, offset: 392)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1083, file: !12, line: 1087, baseType: !94, size: 8, offset: 400)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1083, file: !12, line: 1088, baseType: !94, size: 8, offset: 408)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1083, file: !12, line: 1090, baseType: !7, size: 32, offset: 416)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1083, file: !12, line: 1093, baseType: !107, size: 16, offset: 448)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1083, file: !12, line: 1096, baseType: !94, size: 8, offset: 464)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1083, file: !12, line: 1098, baseType: !1150, size: 40, offset: 472)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 40, elements: !1151)
!1151 = !{!1152}
!1152 = !DISubrange(count: 5)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1083, file: !12, line: 1101, baseType: !1154, size: 832, offset: 512)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !12, line: 836, size: 832, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1288, !1289, !1290, !1291}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1154, file: !12, line: 837, baseType: !1091, size: 320)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1154, file: !12, line: 839, baseType: !107, size: 16, offset: 320)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1154, file: !12, line: 839, baseType: !107, size: 16, offset: 336)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1154, file: !12, line: 842, baseType: !107, size: 16, offset: 352)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1154, file: !12, line: 842, baseType: !107, size: 16, offset: 368)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1154, file: !12, line: 843, baseType: !579, size: 32, offset: 384)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1154, file: !12, line: 845, baseType: !8, size: 32, offset: 416)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1154, file: !12, line: 847, baseType: !47, size: 64, offset: 448)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1154, file: !12, line: 848, baseType: !1165, size: 64, offset: 512)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !491, line: 77, size: 15424, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1173, !1174, !1177, !1240, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1277, !1278, !1282}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1166, file: !491, line: 78, baseType: !74, size: 960)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1166, file: !491, line: 80, baseType: !93, size: 8192, offset: 960)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1166, file: !491, line: 82, baseType: !1171, size: 64, offset: 9152)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !491, line: 43, flags: DIFlagFwdDecl)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1166, file: !491, line: 83, baseType: !596, size: 64, offset: 9216)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1166, file: !491, line: 86, baseType: !1175, size: 64, offset: 9280)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !491, line: 41, flags: DIFlagFwdDecl)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1166, file: !491, line: 87, baseType: !1178, size: 64, offset: 9344)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1180, line: 110, size: 1152, elements: !1181)
!1180 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187, !1188, !1190, !1191, !1192, !1200, !1201, !1202, !1203, !1205, !1236, !1237, !1238, !1239}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1179, file: !1180, line: 111, baseType: !1178, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1179, file: !1180, line: 111, baseType: !1178, size: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !1179, file: !1180, line: 114, baseType: !8, size: 32, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !1179, file: !1180, line: 114, baseType: !8, size: 32, offset: 160)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1179, file: !1180, line: 115, baseType: !107, size: 16, offset: 192)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !1179, file: !1180, line: 115, baseType: !107, size: 16, offset: 208)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !1179, file: !1180, line: 118, baseType: !1189, size: 64, offset: 256)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !1179, file: !1180, line: 120, baseType: !6, size: 64, offset: 320)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !1179, file: !1180, line: 122, baseType: !6, size: 64, offset: 384)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !1179, file: !1180, line: 125, baseType: !1193, size: 128, offset: 448)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !955, line: 89, baseType: !1194)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !955, line: 86, size: 128, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1199}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1194, file: !955, line: 87, baseType: !8, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1194, file: !955, line: 87, baseType: !8, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1194, file: !955, line: 88, baseType: !8, size: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1194, file: !955, line: 88, baseType: !8, size: 32, offset: 96)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !1179, file: !1180, line: 127, baseType: !8, size: 32, offset: 576)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !1179, file: !1180, line: 127, baseType: !8, size: 32, offset: 608)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1179, file: !1180, line: 130, baseType: !133, size: 128, offset: 640)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !1179, file: !1180, line: 133, baseType: !1204, size: 128, offset: 768)
!1204 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1193)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !1179, file: !1180, line: 134, baseType: !1206, size: 64, offset: 896)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1208)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !1180, line: 108, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !1180, line: 85, size: 1600, elements: !1210)
!1210 = !{!1211, !1213, !1214, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1209, file: !1180, line: 86, baseType: !1212, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1209, file: !1180, line: 86, baseType: !1212, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1209, file: !1180, line: 89, baseType: !1215, size: 592, offset: 128)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 592, elements: !1216)
!1216 = !{!1217}
!1217 = !DISubrange(count: 74)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1209, file: !1180, line: 90, baseType: !202, size: 32, offset: 736)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !1209, file: !1180, line: 90, baseType: !202, size: 32, offset: 768)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !1209, file: !1180, line: 90, baseType: !202, size: 32, offset: 800)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !1209, file: !1180, line: 91, baseType: !8, size: 32, offset: 832)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !1209, file: !1180, line: 91, baseType: !8, size: 32, offset: 864)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !1209, file: !1180, line: 91, baseType: !8, size: 32, offset: 896)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !1209, file: !1180, line: 93, baseType: !264, size: 64, offset: 960)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !1209, file: !1180, line: 94, baseType: !1226, size: 64, offset: 1024)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !146, line: 46, flags: DIFlagFwdDecl)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !1209, file: !1180, line: 96, baseType: !6, size: 64, offset: 1088)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !1209, file: !1180, line: 97, baseType: !6, size: 64, offset: 1152)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !1209, file: !1180, line: 98, baseType: !6, size: 64, offset: 1216)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !1209, file: !1180, line: 99, baseType: !1189, size: 64, offset: 1280)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !1209, file: !1180, line: 101, baseType: !8, size: 32, offset: 1344)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !1209, file: !1180, line: 101, baseType: !8, size: 32, offset: 1376)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !1209, file: !1180, line: 104, baseType: !47, size: 64, offset: 1408)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !1209, file: !1180, line: 106, baseType: !133, size: 128, offset: 1472)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !1179, file: !1180, line: 137, baseType: !8, size: 32, offset: 960)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1179, file: !1180, line: 140, baseType: !8, size: 32, offset: 992)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !1179, file: !1180, line: 143, baseType: !8, size: 32, offset: 1024)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1179, file: !1180, line: 146, baseType: !848, size: 64, offset: 1088)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1166, file: !491, line: 89, baseType: !1241, size: 512, offset: 9408)
!1241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1178, size: 512, elements: !1242)
!1242 = !{!171}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1166, file: !491, line: 90, baseType: !107, size: 16, offset: 9920)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1166, file: !491, line: 90, baseType: !107, size: 16, offset: 9936)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1166, file: !491, line: 92, baseType: !107, size: 16, offset: 9952)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1166, file: !491, line: 92, baseType: !107, size: 16, offset: 9968)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1166, file: !491, line: 93, baseType: !107, size: 16, offset: 9984)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1166, file: !491, line: 93, baseType: !107, size: 16, offset: 10000)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1166, file: !491, line: 94, baseType: !8, size: 32, offset: 10016)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1166, file: !491, line: 97, baseType: !107, size: 16, offset: 10048)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1166, file: !491, line: 97, baseType: !107, size: 16, offset: 10064)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1166, file: !491, line: 98, baseType: !107, size: 16, offset: 10080)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1166, file: !491, line: 98, baseType: !107, size: 16, offset: 10096)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1166, file: !491, line: 99, baseType: !107, size: 16, offset: 10112)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1166, file: !491, line: 99, baseType: !107, size: 16, offset: 10128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1166, file: !491, line: 100, baseType: !202, size: 32, offset: 10144)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1166, file: !491, line: 101, baseType: !593, size: 64, offset: 10176)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1166, file: !491, line: 103, baseType: !100, size: 64, offset: 10240)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1166, file: !491, line: 104, baseType: !583, size: 64, offset: 10304)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1166, file: !491, line: 107, baseType: !7, size: 32, offset: 10368)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1166, file: !491, line: 108, baseType: !8, size: 32, offset: 10400)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1166, file: !491, line: 109, baseType: !107, size: 16, offset: 10432)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1166, file: !491, line: 110, baseType: !107, size: 16, offset: 10448)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1166, file: !491, line: 113, baseType: !8, size: 32, offset: 10464)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1166, file: !491, line: 113, baseType: !8, size: 32, offset: 10496)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1166, file: !491, line: 114, baseType: !94, size: 8, offset: 10528)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1166, file: !491, line: 114, baseType: !94, size: 8, offset: 10536)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1166, file: !491, line: 115, baseType: !107, size: 16, offset: 10544)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1166, file: !491, line: 116, baseType: !381, size: 128, offset: 10560)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1166, file: !491, line: 119, baseType: !7, size: 32, offset: 10688)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1166, file: !491, line: 119, baseType: !7, size: 32, offset: 10720)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1166, file: !491, line: 122, baseType: !1273, size: 512, offset: 10752)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !843, line: 182, baseType: !1274)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !843, line: 180, size: 512, elements: !1275)
!1275 = !{!1276}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1274, file: !843, line: 181, baseType: !123, size: 512)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1166, file: !491, line: 123, baseType: !94, size: 8, offset: 11264)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1166, file: !491, line: 125, baseType: !1279, size: 56, offset: 11272)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 56, elements: !1280)
!1280 = !{!1281}
!1281 = !DISubrange(count: 7)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1166, file: !491, line: 126, baseType: !1283, size: 4096, offset: 11328)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 4096, elements: !1242)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !491, line: 69, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !491, line: 67, size: 512, elements: !1286)
!1286 = !{!1287}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1285, file: !491, line: 68, baseType: !123, size: 512)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1154, file: !12, line: 849, baseType: !1165, size: 64, offset: 576)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1154, file: !12, line: 850, baseType: !1165, size: 64, offset: 640)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1154, file: !12, line: 851, baseType: !206, size: 96, offset: 704)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1154, file: !12, line: 852, baseType: !7, size: 32, offset: 800)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1083, file: !12, line: 1104, baseType: !1293, size: 1344, offset: 1344)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !12, line: 867, size: 1344, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298, !1299, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1293, file: !12, line: 868, baseType: !107, size: 16)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1293, file: !12, line: 869, baseType: !107, size: 16, offset: 16)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1293, file: !12, line: 870, baseType: !107, size: 16, offset: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1293, file: !12, line: 871, baseType: !107, size: 16, offset: 48)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1293, file: !12, line: 873, baseType: !1300, size: 896, offset: 64)
!1300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1301, size: 896, elements: !1280)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !12, line: 864, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !12, line: 859, size: 128, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307, !1308, !1309}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1302, file: !12, line: 860, baseType: !107, size: 16)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1302, file: !12, line: 861, baseType: !107, size: 16, offset: 16)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1302, file: !12, line: 861, baseType: !107, size: 16, offset: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1302, file: !12, line: 861, baseType: !107, size: 16, offset: 48)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1302, file: !12, line: 862, baseType: !8, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1302, file: !12, line: 863, baseType: !7, size: 32, offset: 96)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1293, file: !12, line: 874, baseType: !47, size: 64, offset: 960)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1293, file: !12, line: 876, baseType: !7, size: 32, offset: 1024)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1293, file: !12, line: 876, baseType: !7, size: 32, offset: 1056)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1293, file: !12, line: 878, baseType: !8, size: 32, offset: 1088)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1293, file: !12, line: 879, baseType: !8, size: 32, offset: 1120)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1293, file: !12, line: 881, baseType: !8, size: 32, offset: 1152)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1293, file: !12, line: 881, baseType: !8, size: 32, offset: 1184)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1293, file: !12, line: 883, baseType: !494, size: 64, offset: 1216)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1293, file: !12, line: 884, baseType: !69, size: 64, offset: 1280)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1083, file: !12, line: 1107, baseType: !7, size: 32, offset: 2688)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1083, file: !12, line: 1110, baseType: !7, size: 32, offset: 2720)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1083, file: !12, line: 1113, baseType: !107, size: 16, offset: 2752)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1083, file: !12, line: 1113, baseType: !107, size: 16, offset: 2768)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1083, file: !12, line: 1116, baseType: !94, size: 8, offset: 2784)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1083, file: !12, line: 1117, baseType: !399, size: 8, offset: 2792)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1083, file: !12, line: 1120, baseType: !107, size: 16, offset: 2800)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1083, file: !12, line: 1121, baseType: !7, size: 32, offset: 2816)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1083, file: !12, line: 1122, baseType: !7, size: 32, offset: 2848)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1083, file: !12, line: 1123, baseType: !7, size: 32, offset: 2880)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1083, file: !12, line: 1124, baseType: !7, size: 32, offset: 2912)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1083, file: !12, line: 1125, baseType: !7, size: 32, offset: 2944)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1083, file: !12, line: 1126, baseType: !7, size: 32, offset: 2976)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1083, file: !12, line: 1127, baseType: !7, size: 32, offset: 3008)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1083, file: !12, line: 1128, baseType: !7, size: 32, offset: 3040)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1083, file: !12, line: 1129, baseType: !7, size: 32, offset: 3072)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1083, file: !12, line: 1130, baseType: !7, size: 32, offset: 3104)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1083, file: !12, line: 1131, baseType: !107, size: 16, offset: 3136)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1083, file: !12, line: 1132, baseType: !94, size: 8, offset: 3152)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1083, file: !12, line: 1133, baseType: !94, size: 8, offset: 3160)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1083, file: !12, line: 1134, baseType: !1340, size: 24, offset: 3168)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 24, elements: !207)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1083, file: !12, line: 1135, baseType: !94, size: 8, offset: 3192)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1083, file: !12, line: 1138, baseType: !69, size: 64, offset: 3200)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1083, file: !12, line: 1139, baseType: !94, size: 8, offset: 3264)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1083, file: !12, line: 1140, baseType: !94, size: 8, offset: 3272)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1083, file: !12, line: 1141, baseType: !94, size: 8, offset: 3280)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1083, file: !12, line: 1142, baseType: !94, size: 8, offset: 3288)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1083, file: !12, line: 1143, baseType: !94, size: 8, offset: 3296)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1083, file: !12, line: 1144, baseType: !1349, size: 64, offset: 3304)
!1349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 64, elements: !1242)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1083, file: !12, line: 1145, baseType: !1349, size: 64, offset: 3368)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1083, file: !12, line: 1148, baseType: !94, size: 8, offset: 3432)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1083, file: !12, line: 1149, baseType: !94, size: 8, offset: 3440)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1083, file: !12, line: 1152, baseType: !94, size: 8, offset: 3448)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1083, file: !12, line: 1152, baseType: !94, size: 8, offset: 3456)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1083, file: !12, line: 1153, baseType: !94, size: 8, offset: 3464)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1083, file: !12, line: 1154, baseType: !107, size: 16, offset: 3472)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1083, file: !12, line: 1154, baseType: !107, size: 16, offset: 3488)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1083, file: !12, line: 1155, baseType: !107, size: 16, offset: 3504)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1083, file: !12, line: 1155, baseType: !107, size: 16, offset: 3520)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1083, file: !12, line: 1156, baseType: !94, size: 8, offset: 3536)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1083, file: !12, line: 1157, baseType: !94, size: 8, offset: 3544)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1083, file: !12, line: 1159, baseType: !94, size: 8, offset: 3552)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1083, file: !12, line: 1160, baseType: !94, size: 8, offset: 3560)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1083, file: !12, line: 1161, baseType: !94, size: 8, offset: 3568)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1083, file: !12, line: 1162, baseType: !94, size: 8, offset: 3576)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1083, file: !12, line: 1165, baseType: !8, size: 32, offset: 3584)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1083, file: !12, line: 1166, baseType: !8, size: 32, offset: 3616)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1083, file: !12, line: 1167, baseType: !8, size: 32, offset: 3648)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1083, file: !12, line: 1168, baseType: !8, size: 32, offset: 3680)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1083, file: !12, line: 1171, baseType: !107, size: 16, offset: 3712)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1083, file: !12, line: 1171, baseType: !107, size: 16, offset: 3728)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1083, file: !12, line: 1172, baseType: !8, size: 32, offset: 3744)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1083, file: !12, line: 1173, baseType: !7, size: 32, offset: 3776)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1083, file: !12, line: 1174, baseType: !7, size: 32, offset: 3808)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1083, file: !12, line: 1177, baseType: !1376, size: 1024, offset: 3840)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !12, line: 963, size: 1024, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1401, !1402}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1376, file: !12, line: 965, baseType: !8, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1376, file: !12, line: 968, baseType: !7, size: 32, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1376, file: !12, line: 971, baseType: !7, size: 32, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1376, file: !12, line: 974, baseType: !7, size: 32, offset: 96)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1376, file: !12, line: 977, baseType: !206, size: 96, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1376, file: !12, line: 979, baseType: !206, size: 96, offset: 224)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1376, file: !12, line: 982, baseType: !8, size: 32, offset: 320)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1376, file: !12, line: 987, baseType: !1005, size: 64, offset: 352)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1376, file: !12, line: 989, baseType: !7, size: 32, offset: 416)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1376, file: !12, line: 994, baseType: !8, size: 32, offset: 448)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1376, file: !12, line: 995, baseType: !8, size: 32, offset: 480)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1376, file: !12, line: 997, baseType: !94, size: 8, offset: 512)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1376, file: !12, line: 998, baseType: !1279, size: 56, offset: 520)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1376, file: !12, line: 1000, baseType: !7, size: 32, offset: 576)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1376, file: !12, line: 1003, baseType: !1005, size: 64, offset: 608)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1376, file: !12, line: 1006, baseType: !8, size: 32, offset: 672)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1376, file: !12, line: 1009, baseType: !7, size: 32, offset: 704)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1376, file: !12, line: 1012, baseType: !1005, size: 64, offset: 736)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1376, file: !12, line: 1015, baseType: !1005, size: 64, offset: 800)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1376, file: !12, line: 1018, baseType: !8, size: 32, offset: 864)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1376, file: !12, line: 1019, baseType: !1399, size: 64, offset: 896)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !12, line: 63, flags: DIFlagFwdDecl)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1376, file: !12, line: 1023, baseType: !7, size: 32, offset: 960)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1376, file: !12, line: 1024, baseType: !8, size: 32, offset: 992)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1083, file: !12, line: 1179, baseType: !1404, size: 320, offset: 4864)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !12, line: 1043, size: 320, elements: !1405)
!1405 = !{!1406, !1407, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1404, file: !12, line: 1044, baseType: !94, size: 8)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1404, file: !12, line: 1045, baseType: !1408, size: 16, offset: 8)
!1408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 16, elements: !580)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1404, file: !12, line: 1048, baseType: !94, size: 8, offset: 24)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1404, file: !12, line: 1049, baseType: !7, size: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1404, file: !12, line: 1049, baseType: !7, size: 32, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1404, file: !12, line: 1052, baseType: !7, size: 32, offset: 96)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1404, file: !12, line: 1052, baseType: !7, size: 32, offset: 128)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1404, file: !12, line: 1053, baseType: !94, size: 8, offset: 160)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1404, file: !12, line: 1054, baseType: !1340, size: 24, offset: 168)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1404, file: !12, line: 1057, baseType: !7, size: 32, offset: 192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1404, file: !12, line: 1057, baseType: !7, size: 32, offset: 224)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1404, file: !12, line: 1060, baseType: !7, size: 32, offset: 256)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1404, file: !12, line: 1060, baseType: !7, size: 32, offset: 288)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !495, file: !12, line: 1247, baseType: !1421, size: 64, offset: 2176)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !12, line: 60, flags: DIFlagFwdDecl)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !495, file: !12, line: 1251, baseType: !1424, size: 31872, offset: 2240)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !12, line: 403, size: 31872, elements: !1425)
!1425 = !{!1426, !1501, !1521, !1530, !1550, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1684, !1685, !1686, !1688, !1704, !1705}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1424, file: !12, line: 404, baseType: !1427, size: 1984)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !12, line: 259, size: 1984, elements: !1428)
!1428 = !{!1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1446, !1496}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1427, file: !12, line: 260, baseType: !94, size: 8)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1427, file: !12, line: 263, baseType: !94, size: 8, offset: 8)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1427, file: !12, line: 266, baseType: !94, size: 8, offset: 16)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1427, file: !12, line: 267, baseType: !94, size: 8, offset: 24)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1427, file: !12, line: 269, baseType: !94, size: 8, offset: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1427, file: !12, line: 270, baseType: !94, size: 8, offset: 40)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1427, file: !12, line: 276, baseType: !94, size: 8, offset: 48)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1427, file: !12, line: 279, baseType: !94, size: 8, offset: 56)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1427, file: !12, line: 280, baseType: !107, size: 16, offset: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1427, file: !12, line: 280, baseType: !107, size: 16, offset: 80)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1427, file: !12, line: 281, baseType: !7, size: 32, offset: 96)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1427, file: !12, line: 284, baseType: !94, size: 8, offset: 128)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1427, file: !12, line: 285, baseType: !94, size: 8, offset: 136)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1427, file: !12, line: 287, baseType: !1443, size: 48, offset: 144)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 48, elements: !1444)
!1444 = !{!1445}
!1445 = !DISubrange(count: 6)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1427, file: !12, line: 290, baseType: !1447, size: 1280, offset: 192)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !843, line: 174, baseType: !1448)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !843, line: 166, size: 1280, elements: !1449)
!1449 = !{!1450, !1451, !1452, !1453, !1454, !1455, !1456, !1495}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1448, file: !843, line: 167, baseType: !8, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1448, file: !843, line: 167, baseType: !8, size: 32, offset: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1448, file: !843, line: 168, baseType: !123, size: 512, offset: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1448, file: !843, line: 169, baseType: !123, size: 512, offset: 576)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1448, file: !843, line: 170, baseType: !7, size: 32, offset: 1088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1448, file: !843, line: 171, baseType: !7, size: 32, offset: 1120)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1448, file: !843, line: 172, baseType: !1457, size: 64, offset: 1152)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !843, line: 72, size: 3072, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1464, !1465, !1466, !1491, !1492, !1493, !1494}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1458, file: !843, line: 73, baseType: !8, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1458, file: !843, line: 73, baseType: !8, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1458, file: !843, line: 74, baseType: !8, size: 32, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1458, file: !843, line: 75, baseType: !8, size: 32, offset: 96)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1458, file: !843, line: 77, baseType: !954, size: 128, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1458, file: !843, line: 77, baseType: !954, size: 128, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1458, file: !843, line: 79, baseType: !1467, size: 2304, offset: 384)
!1467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1468, size: 2304, elements: !382)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !843, line: 67, baseType: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !843, line: 55, size: 576, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1487, !1488, !1489, !1490}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1469, file: !843, line: 56, baseType: !107, size: 16)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1469, file: !843, line: 56, baseType: !107, size: 16, offset: 16)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1469, file: !843, line: 58, baseType: !7, size: 32, offset: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1469, file: !843, line: 59, baseType: !7, size: 32, offset: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1469, file: !843, line: 59, baseType: !7, size: 32, offset: 96)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1469, file: !843, line: 60, baseType: !1005, size: 64, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1469, file: !843, line: 60, baseType: !1005, size: 64, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1469, file: !843, line: 61, baseType: !1479, size: 64, offset: 256)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !843, line: 47, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !843, line: 44, size: 96, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1481, file: !843, line: 45, baseType: !7, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1481, file: !843, line: 45, baseType: !7, size: 32, offset: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1481, file: !843, line: 46, baseType: !107, size: 16, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1481, file: !843, line: 46, baseType: !107, size: 16, offset: 80)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1469, file: !843, line: 62, baseType: !1479, size: 64, offset: 320)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1469, file: !843, line: 64, baseType: !1479, size: 64, offset: 384)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1469, file: !843, line: 65, baseType: !1005, size: 64, offset: 448)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1469, file: !843, line: 66, baseType: !1005, size: 64, offset: 512)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1458, file: !843, line: 80, baseType: !206, size: 96, offset: 2688)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1458, file: !843, line: 80, baseType: !206, size: 96, offset: 2784)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1458, file: !843, line: 81, baseType: !206, size: 96, offset: 2880)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1458, file: !843, line: 83, baseType: !206, size: 96, offset: 2976)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1448, file: !843, line: 173, baseType: !47, size: 64, offset: 1216)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1427, file: !12, line: 291, baseType: !1497, size: 512, offset: 1472)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !843, line: 178, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !843, line: 176, size: 512, elements: !1499)
!1499 = !{!1500}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1498, file: !843, line: 177, baseType: !123, size: 512)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1424, file: !12, line: 406, baseType: !1502, size: 64, offset: 1984)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !12, line: 80, size: 1472, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1503, file: !12, line: 81, baseType: !47, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1503, file: !12, line: 82, baseType: !47, size: 64, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1503, file: !12, line: 83, baseType: !202, size: 32, offset: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1503, file: !12, line: 84, baseType: !202, size: 32, offset: 160)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1503, file: !12, line: 86, baseType: !202, size: 32, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1503, file: !12, line: 87, baseType: !202, size: 32, offset: 224)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1503, file: !12, line: 88, baseType: !202, size: 32, offset: 256)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1503, file: !12, line: 89, baseType: !202, size: 32, offset: 288)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1503, file: !12, line: 90, baseType: !202, size: 32, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1503, file: !12, line: 91, baseType: !202, size: 32, offset: 352)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1503, file: !12, line: 92, baseType: !202, size: 32, offset: 384)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1503, file: !12, line: 93, baseType: !202, size: 32, offset: 416)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1503, file: !12, line: 95, baseType: !1518, size: 1024, offset: 448)
!1518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 1024, elements: !1519)
!1519 = !{!1520}
!1520 = !DISubrange(count: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1424, file: !12, line: 407, baseType: !1522, size: 64, offset: 2048)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !12, line: 98, size: 1216, elements: !1524)
!1524 = !{!1525, !1526, !1527, !1528, !1529}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1523, file: !12, line: 100, baseType: !47, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1523, file: !12, line: 101, baseType: !47, size: 64, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1523, file: !12, line: 103, baseType: !202, size: 32, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1523, file: !12, line: 104, baseType: !202, size: 32, offset: 160)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1523, file: !12, line: 106, baseType: !1518, size: 1024, offset: 192)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1424, file: !12, line: 408, baseType: !1531, size: 512, offset: 2112)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !12, line: 109, size: 512, elements: !1532)
!1532 = !{!1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1531, file: !12, line: 111, baseType: !8, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1531, file: !12, line: 112, baseType: !8, size: 32, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1531, file: !12, line: 115, baseType: !8, size: 32, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1531, file: !12, line: 116, baseType: !8, size: 32, offset: 96)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1531, file: !12, line: 117, baseType: !8, size: 32, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1531, file: !12, line: 118, baseType: !8, size: 32, offset: 160)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1531, file: !12, line: 119, baseType: !8, size: 32, offset: 192)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1531, file: !12, line: 120, baseType: !8, size: 32, offset: 224)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1531, file: !12, line: 121, baseType: !8, size: 32, offset: 256)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1531, file: !12, line: 122, baseType: !8, size: 32, offset: 288)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1531, file: !12, line: 125, baseType: !8, size: 32, offset: 320)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1531, file: !12, line: 126, baseType: !8, size: 32, offset: 352)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1531, file: !12, line: 127, baseType: !107, size: 16, offset: 384)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1531, file: !12, line: 128, baseType: !107, size: 16, offset: 400)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1531, file: !12, line: 129, baseType: !8, size: 32, offset: 416)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1531, file: !12, line: 130, baseType: !8, size: 32, offset: 448)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1531, file: !12, line: 131, baseType: !8, size: 32, offset: 480)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1424, file: !12, line: 409, baseType: !1551, size: 576, offset: 2624)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !12, line: 134, size: 576, elements: !1552)
!1552 = !{!1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1551, file: !12, line: 135, baseType: !8, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1551, file: !12, line: 136, baseType: !8, size: 32, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1551, file: !12, line: 137, baseType: !8, size: 32, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1551, file: !12, line: 138, baseType: !8, size: 32, offset: 96)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1551, file: !12, line: 139, baseType: !8, size: 32, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1551, file: !12, line: 140, baseType: !8, size: 32, offset: 160)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1551, file: !12, line: 141, baseType: !8, size: 32, offset: 192)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1551, file: !12, line: 142, baseType: !8, size: 32, offset: 224)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1551, file: !12, line: 143, baseType: !7, size: 32, offset: 256)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1551, file: !12, line: 144, baseType: !8, size: 32, offset: 288)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1551, file: !12, line: 145, baseType: !8, size: 32, offset: 320)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1551, file: !12, line: 147, baseType: !8, size: 32, offset: 352)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1551, file: !12, line: 148, baseType: !8, size: 32, offset: 384)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1551, file: !12, line: 149, baseType: !8, size: 32, offset: 416)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1551, file: !12, line: 150, baseType: !8, size: 32, offset: 448)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1551, file: !12, line: 151, baseType: !8, size: 32, offset: 480)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1551, file: !12, line: 152, baseType: !112, size: 64, offset: 512)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1424, file: !12, line: 411, baseType: !8, size: 32, offset: 3200)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1424, file: !12, line: 411, baseType: !8, size: 32, offset: 3232)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1424, file: !12, line: 411, baseType: !8, size: 32, offset: 3264)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1424, file: !12, line: 412, baseType: !7, size: 32, offset: 3296)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1424, file: !12, line: 413, baseType: !8, size: 32, offset: 3328)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1424, file: !12, line: 413, baseType: !8, size: 32, offset: 3360)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1424, file: !12, line: 415, baseType: !8, size: 32, offset: 3392)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1424, file: !12, line: 415, baseType: !8, size: 32, offset: 3424)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1424, file: !12, line: 416, baseType: !107, size: 16, offset: 3456)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1424, file: !12, line: 416, baseType: !107, size: 16, offset: 3472)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1424, file: !12, line: 418, baseType: !7, size: 32, offset: 3488)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1424, file: !12, line: 418, baseType: !7, size: 32, offset: 3520)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1424, file: !12, line: 421, baseType: !7, size: 32, offset: 3552)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1424, file: !12, line: 421, baseType: !7, size: 32, offset: 3584)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1424, file: !12, line: 421, baseType: !7, size: 32, offset: 3616)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1424, file: !12, line: 425, baseType: !107, size: 16, offset: 3648)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1424, file: !12, line: 425, baseType: !107, size: 16, offset: 3664)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1424, file: !12, line: 425, baseType: !107, size: 16, offset: 3680)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1424, file: !12, line: 426, baseType: !107, size: 16, offset: 3696)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1424, file: !12, line: 428, baseType: !107, size: 16, offset: 3712)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1424, file: !12, line: 428, baseType: !107, size: 16, offset: 3728)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1424, file: !12, line: 431, baseType: !8, size: 32, offset: 3744)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1424, file: !12, line: 433, baseType: !107, size: 16, offset: 3776)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1424, file: !12, line: 435, baseType: !107, size: 16, offset: 3792)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1424, file: !12, line: 437, baseType: !107, size: 16, offset: 3808)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1424, file: !12, line: 439, baseType: !107, size: 16, offset: 3824)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1424, file: !12, line: 441, baseType: !107, size: 16, offset: 3840)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1424, file: !12, line: 443, baseType: !107, size: 16, offset: 3856)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1424, file: !12, line: 449, baseType: !8, size: 32, offset: 3872)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1424, file: !12, line: 453, baseType: !8, size: 32, offset: 3904)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1424, file: !12, line: 458, baseType: !107, size: 16, offset: 3936)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1424, file: !12, line: 462, baseType: !107, size: 16, offset: 3952)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1424, file: !12, line: 467, baseType: !8, size: 32, offset: 3968)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1424, file: !12, line: 467, baseType: !8, size: 32, offset: 4000)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1424, file: !12, line: 469, baseType: !107, size: 16, offset: 4032)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1424, file: !12, line: 469, baseType: !107, size: 16, offset: 4048)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1424, file: !12, line: 469, baseType: !107, size: 16, offset: 4064)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1424, file: !12, line: 469, baseType: !107, size: 16, offset: 4080)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1424, file: !12, line: 474, baseType: !107, size: 16, offset: 4096)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1424, file: !12, line: 475, baseType: !94, size: 8, offset: 4112)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1424, file: !12, line: 476, baseType: !94, size: 8, offset: 4120)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1424, file: !12, line: 481, baseType: !8, size: 32, offset: 4128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1424, file: !12, line: 486, baseType: !8, size: 32, offset: 4160)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1424, file: !12, line: 491, baseType: !8, size: 32, offset: 4192)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1424, file: !12, line: 496, baseType: !107, size: 16, offset: 4224)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1424, file: !12, line: 498, baseType: !107, size: 16, offset: 4240)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1424, file: !12, line: 501, baseType: !107, size: 16, offset: 4256)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1424, file: !12, line: 502, baseType: !107, size: 16, offset: 4272)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1424, file: !12, line: 508, baseType: !107, size: 16, offset: 4288)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1424, file: !12, line: 513, baseType: !107, size: 16, offset: 4304)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1424, file: !12, line: 515, baseType: !107, size: 16, offset: 4320)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1424, file: !12, line: 515, baseType: !107, size: 16, offset: 4336)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1424, file: !12, line: 519, baseType: !954, size: 128, offset: 4352)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1424, file: !12, line: 519, baseType: !954, size: 128, offset: 4480)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1424, file: !12, line: 520, baseType: !1193, size: 128, offset: 4608)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1424, file: !12, line: 523, baseType: !133, size: 128, offset: 4736)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1424, file: !12, line: 524, baseType: !107, size: 16, offset: 4864)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1424, file: !12, line: 527, baseType: !107, size: 16, offset: 4880)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1424, file: !12, line: 532, baseType: !7, size: 32, offset: 4896)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1424, file: !12, line: 532, baseType: !7, size: 32, offset: 4928)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1424, file: !12, line: 534, baseType: !7, size: 32, offset: 4960)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1424, file: !12, line: 538, baseType: !7, size: 32, offset: 4992)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1424, file: !12, line: 542, baseType: !8, size: 32, offset: 5024)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1424, file: !12, line: 545, baseType: !7, size: 32, offset: 5056)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1424, file: !12, line: 545, baseType: !7, size: 32, offset: 5088)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1424, file: !12, line: 545, baseType: !7, size: 32, offset: 5120)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1424, file: !12, line: 548, baseType: !7, size: 32, offset: 5152)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1424, file: !12, line: 551, baseType: !107, size: 16, offset: 5184)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1424, file: !12, line: 551, baseType: !107, size: 16, offset: 5200)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1424, file: !12, line: 551, baseType: !107, size: 16, offset: 5216)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1424, file: !12, line: 551, baseType: !107, size: 16, offset: 5232)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1424, file: !12, line: 552, baseType: !107, size: 16, offset: 5248)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1424, file: !12, line: 552, baseType: !107, size: 16, offset: 5264)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1424, file: !12, line: 553, baseType: !7, size: 32, offset: 5280)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1424, file: !12, line: 553, baseType: !7, size: 32, offset: 5312)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1424, file: !12, line: 554, baseType: !107, size: 16, offset: 5344)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1424, file: !12, line: 554, baseType: !107, size: 16, offset: 5360)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1424, file: !12, line: 555, baseType: !7, size: 32, offset: 5376)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1424, file: !12, line: 555, baseType: !7, size: 32, offset: 5408)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1424, file: !12, line: 558, baseType: !93, size: 8192, offset: 5440)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1424, file: !12, line: 561, baseType: !8, size: 32, offset: 13632)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1424, file: !12, line: 562, baseType: !107, size: 16, offset: 13664)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1424, file: !12, line: 562, baseType: !107, size: 16, offset: 13680)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1424, file: !12, line: 565, baseType: !1654, size: 6144, offset: 13696)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 6144, elements: !1655)
!1655 = !{!1656}
!1656 = !DISubrange(count: 768)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1424, file: !12, line: 568, baseType: !381, size: 128, offset: 19840)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1424, file: !12, line: 569, baseType: !381, size: 128, offset: 19968)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1424, file: !12, line: 572, baseType: !94, size: 8, offset: 20096)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1424, file: !12, line: 573, baseType: !94, size: 8, offset: 20104)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1424, file: !12, line: 574, baseType: !94, size: 8, offset: 20112)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1424, file: !12, line: 575, baseType: !1150, size: 40, offset: 20120)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1424, file: !12, line: 578, baseType: !8, size: 32, offset: 20160)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1424, file: !12, line: 579, baseType: !107, size: 16, offset: 20192)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1424, file: !12, line: 580, baseType: !107, size: 16, offset: 20208)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1424, file: !12, line: 581, baseType: !7, size: 32, offset: 20224)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1424, file: !12, line: 582, baseType: !7, size: 32, offset: 20256)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1424, file: !12, line: 585, baseType: !107, size: 16, offset: 20288)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1424, file: !12, line: 585, baseType: !107, size: 16, offset: 20304)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1424, file: !12, line: 586, baseType: !7, size: 32, offset: 20320)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1424, file: !12, line: 589, baseType: !107, size: 16, offset: 20352)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1424, file: !12, line: 589, baseType: !107, size: 16, offset: 20368)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1424, file: !12, line: 590, baseType: !8, size: 32, offset: 20384)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1424, file: !12, line: 593, baseType: !107, size: 16, offset: 20416)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1424, file: !12, line: 593, baseType: !107, size: 16, offset: 20432)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1424, file: !12, line: 594, baseType: !107, size: 16, offset: 20448)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1424, file: !12, line: 594, baseType: !107, size: 16, offset: 20464)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1424, file: !12, line: 595, baseType: !7, size: 32, offset: 20480)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1424, file: !12, line: 596, baseType: !7, size: 32, offset: 20512)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1424, file: !12, line: 597, baseType: !1681, size: 64, offset: 20544)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1683, line: 44, flags: DIFlagFwdDecl)
!1683 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1424, file: !12, line: 600, baseType: !8, size: 32, offset: 20608)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1424, file: !12, line: 601, baseType: !7, size: 32, offset: 20640)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1424, file: !12, line: 604, baseType: !1687, size: 256, offset: 20672)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 256, elements: !413)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1424, file: !12, line: 607, baseType: !1689, size: 10880, offset: 20928)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !12, line: 364, size: 10880, elements: !1690)
!1690 = !{!1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1689, file: !12, line: 365, baseType: !1427, size: 1984)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1689, file: !12, line: 367, baseType: !93, size: 8192, offset: 1984)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1689, file: !12, line: 369, baseType: !107, size: 16, offset: 10176)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1689, file: !12, line: 369, baseType: !107, size: 16, offset: 10192)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1689, file: !12, line: 370, baseType: !107, size: 16, offset: 10208)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1689, file: !12, line: 370, baseType: !107, size: 16, offset: 10224)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1689, file: !12, line: 372, baseType: !7, size: 32, offset: 10240)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1689, file: !12, line: 373, baseType: !7, size: 32, offset: 10272)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1689, file: !12, line: 375, baseType: !1340, size: 24, offset: 10304)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1689, file: !12, line: 376, baseType: !94, size: 8, offset: 10328)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1689, file: !12, line: 378, baseType: !94, size: 8, offset: 10336)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1689, file: !12, line: 379, baseType: !1340, size: 24, offset: 10344)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1689, file: !12, line: 381, baseType: !123, size: 512, offset: 10368)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1424, file: !12, line: 609, baseType: !8, size: 32, offset: 31808)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1424, file: !12, line: 610, baseType: !8, size: 32, offset: 31840)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !495, file: !12, line: 1252, baseType: !1707, size: 256, offset: 34112)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !12, line: 158, size: 256, elements: !1708)
!1708 = !{!1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1707, file: !12, line: 159, baseType: !8, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1707, file: !12, line: 160, baseType: !7, size: 32, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1707, file: !12, line: 161, baseType: !7, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1707, file: !12, line: 162, baseType: !7, size: 32, offset: 96)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1707, file: !12, line: 163, baseType: !8, size: 32, offset: 128)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1707, file: !12, line: 164, baseType: !107, size: 16, offset: 160)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1707, file: !12, line: 165, baseType: !107, size: 16, offset: 176)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1707, file: !12, line: 166, baseType: !7, size: 32, offset: 192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1707, file: !12, line: 167, baseType: !7, size: 32, offset: 224)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !495, file: !12, line: 1254, baseType: !133, size: 128, offset: 34368)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !495, file: !12, line: 1255, baseType: !133, size: 128, offset: 34496)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !495, file: !12, line: 1257, baseType: !47, size: 64, offset: 34624)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !495, file: !12, line: 1258, baseType: !47, size: 64, offset: 34688)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !495, file: !12, line: 1259, baseType: !47, size: 64, offset: 34752)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !495, file: !12, line: 1260, baseType: !47, size: 64, offset: 34816)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !495, file: !12, line: 1262, baseType: !47, size: 64, offset: 34880)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !495, file: !12, line: 1265, baseType: !1726, size: 64, offset: 34944)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !12, line: 1265, flags: DIFlagFwdDecl)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !495, file: !12, line: 1266, baseType: !107, size: 16, offset: 35008)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !495, file: !12, line: 1267, baseType: !107, size: 16, offset: 35024)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !495, file: !12, line: 1270, baseType: !8, size: 32, offset: 35040)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !495, file: !12, line: 1271, baseType: !133, size: 128, offset: 35072)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !495, file: !12, line: 1274, baseType: !1733, size: 128, offset: 35200)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !12, line: 650, size: 128, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738, !1739}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1733, file: !12, line: 651, baseType: !206, size: 96)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1733, file: !12, line: 652, baseType: !94, size: 8, offset: 96)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1733, file: !12, line: 652, baseType: !94, size: 8, offset: 104)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1733, file: !12, line: 652, baseType: !94, size: 8, offset: 112)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1733, file: !12, line: 652, baseType: !94, size: 8, offset: 120)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !495, file: !12, line: 1275, baseType: !1741, size: 1472, offset: 35328)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !12, line: 676, size: 1472, elements: !1742)
!1742 = !{!1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1755, !1765, !1766, !1767, !1768, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1741, file: !12, line: 679, baseType: !1733, size: 128)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1741, file: !12, line: 680, baseType: !107, size: 16, offset: 128)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1741, file: !12, line: 680, baseType: !107, size: 16, offset: 144)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1741, file: !12, line: 680, baseType: !107, size: 16, offset: 160)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1741, file: !12, line: 680, baseType: !107, size: 16, offset: 176)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1741, file: !12, line: 681, baseType: !107, size: 16, offset: 192)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1741, file: !12, line: 681, baseType: !107, size: 16, offset: 208)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1741, file: !12, line: 681, baseType: !107, size: 16, offset: 224)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1741, file: !12, line: 681, baseType: !107, size: 16, offset: 240)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1741, file: !12, line: 682, baseType: !107, size: 16, offset: 256)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1741, file: !12, line: 682, baseType: !1754, size: 48, offset: 272)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 48, elements: !207)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1741, file: !12, line: 685, baseType: !1756, size: 192, offset: 320)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !12, line: 633, size: 192, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761, !1762, !1763, !1764}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1756, file: !12, line: 634, baseType: !107, size: 16)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1756, file: !12, line: 634, baseType: !107, size: 16, offset: 16)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1756, file: !12, line: 635, baseType: !107, size: 16, offset: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1756, file: !12, line: 635, baseType: !107, size: 16, offset: 48)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1756, file: !12, line: 636, baseType: !7, size: 32, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1756, file: !12, line: 636, baseType: !7, size: 32, offset: 96)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1756, file: !12, line: 637, baseType: !1681, size: 64, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1741, file: !12, line: 686, baseType: !107, size: 16, offset: 512)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1741, file: !12, line: 686, baseType: !107, size: 16, offset: 528)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1741, file: !12, line: 687, baseType: !7, size: 32, offset: 544)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1741, file: !12, line: 688, baseType: !1769, size: 448, offset: 576)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !12, line: 674, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !12, line: 659, size: 448, elements: !1771)
!1771 = !{!1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1770, file: !12, line: 660, baseType: !7, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1770, file: !12, line: 661, baseType: !7, size: 32, offset: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1770, file: !12, line: 662, baseType: !7, size: 32, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1770, file: !12, line: 663, baseType: !7, size: 32, offset: 96)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1770, file: !12, line: 664, baseType: !7, size: 32, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1770, file: !12, line: 665, baseType: !7, size: 32, offset: 160)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1770, file: !12, line: 666, baseType: !7, size: 32, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1770, file: !12, line: 667, baseType: !7, size: 32, offset: 224)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1770, file: !12, line: 668, baseType: !7, size: 32, offset: 256)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1770, file: !12, line: 669, baseType: !7, size: 32, offset: 288)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1770, file: !12, line: 670, baseType: !8, size: 32, offset: 320)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1770, file: !12, line: 671, baseType: !7, size: 32, offset: 352)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1770, file: !12, line: 672, baseType: !7, size: 32, offset: 384)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1770, file: !12, line: 673, baseType: !107, size: 16, offset: 416)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1770, file: !12, line: 673, baseType: !107, size: 16, offset: 432)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1741, file: !12, line: 692, baseType: !7, size: 32, offset: 1024)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1741, file: !12, line: 697, baseType: !7, size: 32, offset: 1056)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1741, file: !12, line: 703, baseType: !8, size: 32, offset: 1088)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1741, file: !12, line: 704, baseType: !107, size: 16, offset: 1120)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1741, file: !12, line: 704, baseType: !107, size: 16, offset: 1136)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1741, file: !12, line: 705, baseType: !107, size: 16, offset: 1152)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1741, file: !12, line: 706, baseType: !107, size: 16, offset: 1168)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1741, file: !12, line: 707, baseType: !107, size: 16, offset: 1184)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1741, file: !12, line: 708, baseType: !107, size: 16, offset: 1200)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1741, file: !12, line: 709, baseType: !107, size: 16, offset: 1216)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1741, file: !12, line: 709, baseType: !107, size: 16, offset: 1232)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1741, file: !12, line: 709, baseType: !107, size: 16, offset: 1248)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1741, file: !12, line: 709, baseType: !107, size: 16, offset: 1264)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1741, file: !12, line: 710, baseType: !107, size: 16, offset: 1280)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1741, file: !12, line: 711, baseType: !107, size: 16, offset: 1296)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1741, file: !12, line: 712, baseType: !7, size: 32, offset: 1312)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1741, file: !12, line: 713, baseType: !7, size: 32, offset: 1344)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1741, file: !12, line: 713, baseType: !7, size: 32, offset: 1376)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1741, file: !12, line: 713, baseType: !7, size: 32, offset: 1408)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1741, file: !12, line: 713, baseType: !7, size: 32, offset: 1440)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !495, file: !12, line: 1278, baseType: !1808, size: 64, offset: 36800)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !12, line: 1197, size: 64, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1808, file: !12, line: 1199, baseType: !7, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1808, file: !12, line: 1200, baseType: !94, size: 8, offset: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1808, file: !12, line: 1201, baseType: !94, size: 8, offset: 40)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1808, file: !12, line: 1202, baseType: !107, size: 16, offset: 48)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !495, file: !12, line: 1281, baseType: !237, size: 64, offset: 36864)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !495, file: !12, line: 1284, baseType: !1816, size: 192, offset: 36928)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !12, line: 1208, size: 192, elements: !1817)
!1817 = !{!1818, !1819, !1820, !1821}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1816, file: !12, line: 1209, baseType: !206, size: 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1816, file: !12, line: 1210, baseType: !8, size: 32, offset: 96)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1816, file: !12, line: 1210, baseType: !8, size: 32, offset: 128)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1816, file: !12, line: 1210, baseType: !8, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !495, file: !12, line: 1287, baseType: !1823, size: 64, offset: 37120)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !12, line: 62, flags: DIFlagFwdDecl)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !495, file: !12, line: 1289, baseType: !1826, size: 64, offset: 37184)
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1827, line: 27, baseType: !1828)
!1827 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1829, line: 45, baseType: !1830)
!1829 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1830 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !495, file: !12, line: 1290, baseType: !1826, size: 64, offset: 37248)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !495, file: !12, line: 1293, baseType: !1447, size: 1280, offset: 37312)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !495, file: !12, line: 1294, baseType: !1497, size: 512, offset: 38592)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !495, file: !12, line: 1295, baseType: !1273, size: 512, offset: 39104)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !495, file: !12, line: 1298, baseType: !1836, size: 64, offset: 39616)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !12, line: 1298, flags: DIFlagFwdDecl)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !490, file: !491, line: 53, baseType: !8, size: 32, offset: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !490, file: !491, line: 54, baseType: !8, size: 32, offset: 96)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !490, file: !491, line: 55, baseType: !8, size: 32, offset: 128)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !490, file: !491, line: 55, baseType: !8, size: 32, offset: 160)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !490, file: !491, line: 56, baseType: !94, size: 8, offset: 192)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !490, file: !491, line: 56, baseType: !94, size: 8, offset: 200)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !490, file: !491, line: 57, baseType: !94, size: 8, offset: 208)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !490, file: !491, line: 57, baseType: !94, size: 8, offset: 216)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !490, file: !491, line: 59, baseType: !107, size: 16, offset: 224)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !490, file: !491, line: 59, baseType: !107, size: 16, offset: 240)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !490, file: !491, line: 59, baseType: !107, size: 16, offset: 256)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !490, file: !491, line: 61, baseType: !107, size: 16, offset: 272)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !490, file: !491, line: 63, baseType: !8, size: 32, offset: 288)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !436, file: !391, line: 248, baseType: !599, size: 64, offset: 2688)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !436, file: !391, line: 249, baseType: !162, size: 64, offset: 2752)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !436, file: !391, line: 250, baseType: !1165, size: 64, offset: 2816)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !436, file: !391, line: 251, baseType: !389, size: 64, offset: 2880)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !436, file: !391, line: 252, baseType: !1856, size: 64, offset: 2944)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !391, line: 122, size: 1600, elements: !1858)
!1858 = !{!1859, !1860, !1861, !1863, !1866, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1857, file: !391, line: 123, baseType: !69, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1857, file: !391, line: 124, baseType: !1165, size: 64, offset: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1857, file: !391, line: 125, baseType: !1862, size: 384, offset: 128)
!1862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !841, size: 384, elements: !1444)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1857, file: !391, line: 126, baseType: !1864, size: 512, offset: 512)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 512, elements: !1865)
!1865 = !{!383, !383}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1857, file: !391, line: 127, baseType: !1867, size: 288, offset: 1024)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 288, elements: !1868)
!1868 = !{!172, !172}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1857, file: !391, line: 128, baseType: !107, size: 16, offset: 1312)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1857, file: !391, line: 128, baseType: !107, size: 16, offset: 1328)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1857, file: !391, line: 129, baseType: !7, size: 32, offset: 1344)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1857, file: !391, line: 129, baseType: !7, size: 32, offset: 1376)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1857, file: !391, line: 130, baseType: !7, size: 32, offset: 1408)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1857, file: !391, line: 131, baseType: !202, size: 32, offset: 1440)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1857, file: !391, line: 132, baseType: !107, size: 16, offset: 1472)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1857, file: !391, line: 132, baseType: !107, size: 16, offset: 1488)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1857, file: !391, line: 133, baseType: !8, size: 32, offset: 1504)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1857, file: !391, line: 133, baseType: !8, size: 32, offset: 1536)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1857, file: !391, line: 134, baseType: !107, size: 16, offset: 1568)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1857, file: !391, line: 134, baseType: !107, size: 16, offset: 1584)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !436, file: !391, line: 253, baseType: !583, size: 64, offset: 3008)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !436, file: !391, line: 254, baseType: !1883, size: 64, offset: 3072)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !391, line: 137, size: 832, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1884, file: !391, line: 138, baseType: !107, size: 16)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1884, file: !391, line: 140, baseType: !107, size: 16, offset: 16)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1884, file: !391, line: 141, baseType: !7, size: 32, offset: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1884, file: !391, line: 142, baseType: !7, size: 32, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1884, file: !391, line: 143, baseType: !107, size: 16, offset: 96)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1884, file: !391, line: 144, baseType: !107, size: 16, offset: 112)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1884, file: !391, line: 145, baseType: !8, size: 32, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1884, file: !391, line: 147, baseType: !8, size: 32, offset: 160)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1884, file: !391, line: 149, baseType: !69, size: 64, offset: 192)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1884, file: !391, line: 150, baseType: !8, size: 32, offset: 256)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1884, file: !391, line: 151, baseType: !107, size: 16, offset: 288)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1884, file: !391, line: 152, baseType: !107, size: 16, offset: 304)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1884, file: !391, line: 154, baseType: !47, size: 64, offset: 320)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1884, file: !391, line: 155, baseType: !6, size: 64, offset: 384)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1884, file: !391, line: 157, baseType: !7, size: 32, offset: 448)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1884, file: !391, line: 158, baseType: !107, size: 16, offset: 480)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1884, file: !391, line: 159, baseType: !107, size: 16, offset: 496)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1884, file: !391, line: 160, baseType: !107, size: 16, offset: 512)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1884, file: !391, line: 161, baseType: !1754, size: 48, offset: 528)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1884, file: !391, line: 162, baseType: !7, size: 32, offset: 576)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1884, file: !391, line: 164, baseType: !7, size: 32, offset: 608)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1884, file: !391, line: 164, baseType: !7, size: 32, offset: 640)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1884, file: !391, line: 164, baseType: !7, size: 32, offset: 672)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1884, file: !391, line: 165, baseType: !389, size: 64, offset: 704)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1884, file: !391, line: 167, baseType: !1457, size: 64, offset: 768)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !436, file: !391, line: 255, baseType: !1912, size: 64, offset: 3136)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !391, line: 170, size: 8704, elements: !1914)
!1914 = !{!1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1913, file: !391, line: 171, baseType: !1124, size: 96)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1913, file: !391, line: 172, baseType: !8, size: 32, offset: 96)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1913, file: !391, line: 173, baseType: !107, size: 16, offset: 128)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1913, file: !391, line: 174, baseType: !107, size: 16, offset: 144)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1913, file: !391, line: 175, baseType: !107, size: 16, offset: 160)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1913, file: !391, line: 176, baseType: !107, size: 16, offset: 176)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1913, file: !391, line: 177, baseType: !107, size: 16, offset: 192)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1913, file: !391, line: 178, baseType: !107, size: 16, offset: 208)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1913, file: !391, line: 179, baseType: !8, size: 32, offset: 224)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1913, file: !391, line: 181, baseType: !69, size: 64, offset: 256)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1913, file: !391, line: 182, baseType: !7, size: 32, offset: 320)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1913, file: !391, line: 183, baseType: !8, size: 32, offset: 352)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1913, file: !391, line: 184, baseType: !93, size: 8192, offset: 384)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1913, file: !391, line: 187, baseType: !6, size: 64, offset: 8576)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1913, file: !391, line: 188, baseType: !8, size: 32, offset: 8640)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1913, file: !391, line: 189, baseType: !8, size: 32, offset: 8672)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !436, file: !391, line: 256, baseType: !1932, size: 64, offset: 3200)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !391, line: 193, size: 640, elements: !1934)
!1934 = !{!1935, !1936, !1937, !1938}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1933, file: !391, line: 194, baseType: !69, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1933, file: !391, line: 195, baseType: !123, size: 512, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1933, file: !391, line: 197, baseType: !8, size: 32, offset: 576)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1933, file: !391, line: 198, baseType: !8, size: 32, offset: 608)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !436, file: !391, line: 258, baseType: !94, size: 8, offset: 3264)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !436, file: !391, line: 259, baseType: !1279, size: 56, offset: 3272)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !427, file: !391, line: 62, baseType: !123, size: 512, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !427, file: !391, line: 64, baseType: !94, size: 8, offset: 704)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !427, file: !391, line: 64, baseType: !94, size: 8, offset: 712)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !427, file: !391, line: 64, baseType: !94, size: 8, offset: 720)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !427, file: !391, line: 64, baseType: !94, size: 8, offset: 728)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !427, file: !391, line: 65, baseType: !206, size: 96, offset: 736)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !427, file: !391, line: 65, baseType: !206, size: 96, offset: 832)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !427, file: !391, line: 65, baseType: !7, size: 32, offset: 928)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !427, file: !391, line: 67, baseType: !107, size: 16, offset: 960)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !427, file: !391, line: 67, baseType: !107, size: 16, offset: 976)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !427, file: !391, line: 67, baseType: !107, size: 16, offset: 992)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !427, file: !391, line: 67, baseType: !107, size: 16, offset: 1008)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !427, file: !391, line: 68, baseType: !107, size: 16, offset: 1024)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !427, file: !391, line: 68, baseType: !107, size: 16, offset: 1040)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !427, file: !391, line: 69, baseType: !94, size: 8, offset: 1056)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !427, file: !391, line: 69, baseType: !1279, size: 56, offset: 1064)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !427, file: !391, line: 70, baseType: !7, size: 32, offset: 1120)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !427, file: !391, line: 70, baseType: !7, size: 32, offset: 1152)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !427, file: !391, line: 70, baseType: !7, size: 32, offset: 1184)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !427, file: !391, line: 70, baseType: !7, size: 32, offset: 1216)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !427, file: !391, line: 71, baseType: !7, size: 32, offset: 1248)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !427, file: !391, line: 71, baseType: !7, size: 32, offset: 1280)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !427, file: !391, line: 74, baseType: !7, size: 32, offset: 1312)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !427, file: !391, line: 74, baseType: !7, size: 32, offset: 1344)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !427, file: !391, line: 77, baseType: !7, size: 32, offset: 1376)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !427, file: !391, line: 77, baseType: !7, size: 32, offset: 1408)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !427, file: !391, line: 77, baseType: !7, size: 32, offset: 1440)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !427, file: !391, line: 78, baseType: !7, size: 32, offset: 1472)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !427, file: !391, line: 78, baseType: !7, size: 32, offset: 1504)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !427, file: !391, line: 78, baseType: !7, size: 32, offset: 1536)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !427, file: !391, line: 79, baseType: !7, size: 32, offset: 1568)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !427, file: !391, line: 79, baseType: !7, size: 32, offset: 1600)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !427, file: !391, line: 79, baseType: !7, size: 32, offset: 1632)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !427, file: !391, line: 79, baseType: !7, size: 32, offset: 1664)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !427, file: !391, line: 80, baseType: !7, size: 32, offset: 1696)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !427, file: !391, line: 80, baseType: !7, size: 32, offset: 1728)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !427, file: !391, line: 80, baseType: !7, size: 32, offset: 1760)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !427, file: !391, line: 81, baseType: !7, size: 32, offset: 1792)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !427, file: !391, line: 81, baseType: !7, size: 32, offset: 1824)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !427, file: !391, line: 81, baseType: !7, size: 32, offset: 1856)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !427, file: !391, line: 82, baseType: !7, size: 32, offset: 1888)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !427, file: !391, line: 82, baseType: !7, size: 32, offset: 1920)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !427, file: !391, line: 82, baseType: !7, size: 32, offset: 1952)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !427, file: !391, line: 85, baseType: !7, size: 32, offset: 1984)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !427, file: !391, line: 85, baseType: !7, size: 32, offset: 2016)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !427, file: !391, line: 85, baseType: !7, size: 32, offset: 2048)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !427, file: !391, line: 85, baseType: !7, size: 32, offset: 2080)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !427, file: !391, line: 86, baseType: !7, size: 32, offset: 2112)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !427, file: !391, line: 86, baseType: !7, size: 32, offset: 2144)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !427, file: !391, line: 86, baseType: !7, size: 32, offset: 2176)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !427, file: !391, line: 86, baseType: !7, size: 32, offset: 2208)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !427, file: !391, line: 87, baseType: !7, size: 32, offset: 2240)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !427, file: !391, line: 87, baseType: !7, size: 32, offset: 2272)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !427, file: !391, line: 87, baseType: !7, size: 32, offset: 2304)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !427, file: !391, line: 87, baseType: !7, size: 32, offset: 2336)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !427, file: !391, line: 90, baseType: !7, size: 32, offset: 2368)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !427, file: !391, line: 93, baseType: !7, size: 32, offset: 2400)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !427, file: !391, line: 93, baseType: !7, size: 32, offset: 2432)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !427, file: !391, line: 93, baseType: !7, size: 32, offset: 2464)
!2000 = !{!2001}
!2001 = !DISubrange(count: 18)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !265, file: !146, line: 168, baseType: !599, size: 64, offset: 6144)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !265, file: !146, line: 169, baseType: !162, size: 64, offset: 6208)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !265, file: !146, line: 170, baseType: !1226, size: 64, offset: 6272)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !265, file: !146, line: 171, baseType: !583, size: 64, offset: 6336)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !265, file: !146, line: 174, baseType: !7, size: 32, offset: 6400)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !265, file: !146, line: 174, baseType: !7, size: 32, offset: 6432)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !265, file: !146, line: 174, baseType: !7, size: 32, offset: 6464)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !265, file: !146, line: 175, baseType: !7, size: 32, offset: 6496)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !265, file: !146, line: 175, baseType: !7, size: 32, offset: 6528)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !265, file: !146, line: 176, baseType: !107, size: 16, offset: 6560)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !265, file: !146, line: 176, baseType: !107, size: 16, offset: 6576)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !265, file: !146, line: 179, baseType: !206, size: 96, offset: 6592)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !265, file: !146, line: 179, baseType: !206, size: 96, offset: 6688)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !265, file: !146, line: 180, baseType: !7, size: 32, offset: 6784)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !265, file: !146, line: 180, baseType: !7, size: 32, offset: 6816)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !265, file: !146, line: 180, baseType: !7, size: 32, offset: 6848)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !265, file: !146, line: 181, baseType: !7, size: 32, offset: 6880)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !265, file: !146, line: 181, baseType: !7, size: 32, offset: 6912)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !265, file: !146, line: 182, baseType: !7, size: 32, offset: 6944)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !265, file: !146, line: 182, baseType: !7, size: 32, offset: 6976)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !265, file: !146, line: 183, baseType: !107, size: 16, offset: 7008)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !265, file: !146, line: 183, baseType: !107, size: 16, offset: 7024)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !265, file: !146, line: 185, baseType: !8, size: 32, offset: 7040)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !265, file: !146, line: 186, baseType: !107, size: 16, offset: 7072)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !265, file: !146, line: 187, baseType: !107, size: 16, offset: 7088)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !265, file: !146, line: 190, baseType: !381, size: 128, offset: 7104)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !265, file: !146, line: 191, baseType: !107, size: 16, offset: 7232)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !265, file: !146, line: 192, baseType: !107, size: 16, offset: 7248)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !265, file: !146, line: 195, baseType: !107, size: 16, offset: 7264)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !265, file: !146, line: 196, baseType: !107, size: 16, offset: 7280)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !265, file: !146, line: 197, baseType: !107, size: 16, offset: 7296)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !265, file: !146, line: 198, baseType: !1754, size: 48, offset: 7312)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !265, file: !146, line: 200, baseType: !2035, size: 64, offset: 7360)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !146, line: 86, size: 192, elements: !2037)
!2037 = !{!2038, !2039, !2040, !2041}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2036, file: !146, line: 87, baseType: !1165, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2036, file: !146, line: 88, baseType: !848, size: 64, offset: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2036, file: !146, line: 89, baseType: !8, size: 32, offset: 128)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2036, file: !146, line: 90, baseType: !8, size: 32, offset: 160)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !265, file: !146, line: 202, baseType: !133, size: 128, offset: 7424)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !70, file: !71, line: 151, baseType: !848, size: 64, offset: 3584)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !70, file: !71, line: 152, baseType: !8, size: 32, offset: 3648)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !70, file: !71, line: 153, baseType: !8, size: 32, offset: 3680)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !70, file: !71, line: 156, baseType: !206, size: 96, offset: 3712)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !70, file: !71, line: 156, baseType: !206, size: 96, offset: 3808)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !70, file: !71, line: 156, baseType: !206, size: 96, offset: 3904)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !70, file: !71, line: 157, baseType: !206, size: 96, offset: 4000)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !70, file: !71, line: 158, baseType: !206, size: 96, offset: 4096)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !70, file: !71, line: 159, baseType: !206, size: 96, offset: 4192)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !70, file: !71, line: 160, baseType: !206, size: 96, offset: 4288)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !70, file: !71, line: 160, baseType: !206, size: 96, offset: 4384)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !70, file: !71, line: 161, baseType: !381, size: 128, offset: 4480)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !70, file: !71, line: 161, baseType: !381, size: 128, offset: 4608)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !70, file: !71, line: 162, baseType: !206, size: 96, offset: 4736)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !70, file: !71, line: 162, baseType: !206, size: 96, offset: 4832)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !70, file: !71, line: 163, baseType: !7, size: 32, offset: 4928)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !70, file: !71, line: 163, baseType: !7, size: 32, offset: 4960)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !70, file: !71, line: 164, baseType: !1864, size: 512, offset: 4992)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !70, file: !71, line: 165, baseType: !1864, size: 512, offset: 5504)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !70, file: !71, line: 166, baseType: !1864, size: 512, offset: 6016)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !70, file: !71, line: 167, baseType: !1864, size: 512, offset: 6528)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !70, file: !71, line: 176, baseType: !1864, size: 512, offset: 7040)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !70, file: !71, line: 178, baseType: !202, size: 32, offset: 7552)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !70, file: !71, line: 180, baseType: !107, size: 16, offset: 7584)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !70, file: !71, line: 181, baseType: !107, size: 16, offset: 7600)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !70, file: !71, line: 183, baseType: !107, size: 16, offset: 7616)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !70, file: !71, line: 183, baseType: !107, size: 16, offset: 7632)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !70, file: !71, line: 184, baseType: !107, size: 16, offset: 7648)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !70, file: !71, line: 184, baseType: !107, size: 16, offset: 7664)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !70, file: !71, line: 185, baseType: !107, size: 16, offset: 7680)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !70, file: !71, line: 186, baseType: !107, size: 16, offset: 7696)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !70, file: !71, line: 187, baseType: !107, size: 16, offset: 7712)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !70, file: !71, line: 188, baseType: !94, size: 8, offset: 7728)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !70, file: !71, line: 189, baseType: !94, size: 8, offset: 7736)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !70, file: !71, line: 192, baseType: !8, size: 32, offset: 7744)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !70, file: !71, line: 192, baseType: !8, size: 32, offset: 7776)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !70, file: !71, line: 192, baseType: !8, size: 32, offset: 7808)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !70, file: !71, line: 192, baseType: !8, size: 32, offset: 7840)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !70, file: !71, line: 194, baseType: !8, size: 32, offset: 7872)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !70, file: !71, line: 202, baseType: !7, size: 32, offset: 7904)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !70, file: !71, line: 202, baseType: !7, size: 32, offset: 7936)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !70, file: !71, line: 202, baseType: !7, size: 32, offset: 7968)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !70, file: !71, line: 211, baseType: !7, size: 32, offset: 8000)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !70, file: !71, line: 212, baseType: !7, size: 32, offset: 8032)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !70, file: !71, line: 213, baseType: !7, size: 32, offset: 8064)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !70, file: !71, line: 214, baseType: !7, size: 32, offset: 8096)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !70, file: !71, line: 215, baseType: !7, size: 32, offset: 8128)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !70, file: !71, line: 216, baseType: !7, size: 32, offset: 8160)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !70, file: !71, line: 219, baseType: !7, size: 32, offset: 8192)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !70, file: !71, line: 220, baseType: !7, size: 32, offset: 8224)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !70, file: !71, line: 221, baseType: !7, size: 32, offset: 8256)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !70, file: !71, line: 224, baseType: !2095, size: 16, offset: 8288)
!2095 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !70, file: !71, line: 224, baseType: !2095, size: 16, offset: 8304)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !70, file: !71, line: 226, baseType: !107, size: 16, offset: 8320)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !70, file: !71, line: 228, baseType: !94, size: 8, offset: 8336)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !70, file: !71, line: 229, baseType: !94, size: 8, offset: 8344)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !70, file: !71, line: 231, baseType: !107, size: 16, offset: 8352)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !70, file: !71, line: 232, baseType: !94, size: 8, offset: 8368)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !70, file: !71, line: 233, baseType: !94, size: 8, offset: 8376)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !70, file: !71, line: 234, baseType: !7, size: 32, offset: 8384)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !70, file: !71, line: 235, baseType: !7, size: 32, offset: 8416)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !70, file: !71, line: 237, baseType: !133, size: 128, offset: 8448)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !70, file: !71, line: 238, baseType: !133, size: 128, offset: 8576)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !70, file: !71, line: 239, baseType: !133, size: 128, offset: 8704)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !70, file: !71, line: 240, baseType: !133, size: 128, offset: 8832)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !70, file: !71, line: 242, baseType: !7, size: 32, offset: 8960)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !70, file: !71, line: 244, baseType: !107, size: 16, offset: 8992)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !70, file: !71, line: 245, baseType: !2095, size: 16, offset: 9008)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !70, file: !71, line: 246, baseType: !381, size: 128, offset: 9024)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !70, file: !71, line: 248, baseType: !8, size: 32, offset: 9152)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !70, file: !71, line: 249, baseType: !8, size: 32, offset: 9184)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !70, file: !71, line: 251, baseType: !2116, size: 64, offset: 9216)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !71, line: 251, flags: DIFlagFwdDecl)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !70, file: !71, line: 253, baseType: !94, size: 8, offset: 9280)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !70, file: !71, line: 254, baseType: !94, size: 8, offset: 9288)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !70, file: !71, line: 255, baseType: !107, size: 16, offset: 9296)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !70, file: !71, line: 256, baseType: !206, size: 96, offset: 9312)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !70, file: !71, line: 258, baseType: !133, size: 128, offset: 9408)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !70, file: !71, line: 259, baseType: !133, size: 128, offset: 9536)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !70, file: !71, line: 260, baseType: !133, size: 128, offset: 9664)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !70, file: !71, line: 261, baseType: !133, size: 128, offset: 9792)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !70, file: !71, line: 263, baseType: !2127, size: 64, offset: 9920)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !71, line: 52, flags: DIFlagFwdDecl)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !70, file: !71, line: 264, baseType: !2130, size: 64, offset: 9984)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !71, line: 53, flags: DIFlagFwdDecl)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !70, file: !71, line: 265, baseType: !1226, size: 64, offset: 10048)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !70, file: !71, line: 267, baseType: !94, size: 8, offset: 10112)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !70, file: !71, line: 268, baseType: !94, size: 8, offset: 10120)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !70, file: !71, line: 269, baseType: !107, size: 16, offset: 10128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !70, file: !71, line: 270, baseType: !7, size: 32, offset: 10144)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !70, file: !71, line: 272, baseType: !2138, size: 64, offset: 10176)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !71, line: 54, flags: DIFlagFwdDecl)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !70, file: !71, line: 275, baseType: !2141, size: 64, offset: 10240)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !71, line: 275, flags: DIFlagFwdDecl)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !70, file: !71, line: 277, baseType: !2144, size: 64, offset: 10304)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !71, line: 56, flags: DIFlagFwdDecl)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !70, file: !71, line: 277, baseType: !2144, size: 64, offset: 10368)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !70, file: !71, line: 278, baseType: !1826, size: 64, offset: 10432)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !70, file: !71, line: 279, baseType: !1826, size: 64, offset: 10496)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !70, file: !71, line: 280, baseType: !202, size: 32, offset: 10560)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !70, file: !71, line: 281, baseType: !202, size: 32, offset: 10592)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !70, file: !71, line: 283, baseType: !133, size: 128, offset: 10624)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !70, file: !71, line: 284, baseType: !133, size: 128, offset: 10752)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !70, file: !71, line: 285, baseType: !2154, size: 64, offset: 10880)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !70, file: !71, line: 287, baseType: !2156, size: 64, offset: 10944)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !71, line: 59, flags: DIFlagFwdDecl)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !70, file: !71, line: 288, baseType: !2159, size: 64, offset: 11008)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !71, line: 288, flags: DIFlagFwdDecl)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !70, file: !71, line: 290, baseType: !1005, size: 64, offset: 11072)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !70, file: !71, line: 291, baseType: !2163, size: 64, offset: 11136)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !491, line: 65, baseType: !490)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !70, file: !71, line: 293, baseType: !133, size: 128, offset: 11200)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !70, file: !71, line: 294, baseType: !2167, size: 64, offset: 11328)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !71, line: 113, baseType: !2169)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !71, line: 108, size: 256, elements: !2170)
!2170 = !{!2171, !2173, !2174, !2175, !2176}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2169, file: !71, line: 109, baseType: !2172, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2169, file: !71, line: 109, baseType: !2172, size: 64, offset: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2169, file: !71, line: 110, baseType: !69, size: 64, offset: 128)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2169, file: !71, line: 111, baseType: !8, size: 32, offset: 192)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2169, file: !71, line: 112, baseType: !7, size: 32, offset: 224)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !63, file: !56, line: 317, baseType: !69, size: 64, offset: 192)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "sce", scope: !63, file: !56, line: 318, baseType: !494, size: 64, offset: 256)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !63, file: !56, line: 319, baseType: !8, size: 32, offset: 320)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !63, file: !56, line: 319, baseType: !8, size: 32, offset: 352)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !63, file: !56, line: 319, baseType: !8, size: 32, offset: 384)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !63, file: !56, line: 319, baseType: !8, size: 32, offset: 416)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !63, file: !56, line: 321, baseType: !2184, size: 192, offset: 448)
!2184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 192, elements: !2185)
!2185 = !{!581, !172}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !63, file: !56, line: 323, baseType: !8, size: 32, offset: 640)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !63, file: !56, line: 323, baseType: !8, size: 32, offset: 672)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !63, file: !56, line: 323, baseType: !8, size: 32, offset: 704)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !63, file: !56, line: 323, baseType: !8, size: 32, offset: 736)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodeslen", scope: !63, file: !56, line: 324, baseType: !8, size: 32, offset: 768)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodeslen", scope: !63, file: !56, line: 324, baseType: !8, size: 32, offset: 800)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodeslen", scope: !63, file: !56, line: 324, baseType: !8, size: 32, offset: 832)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "blohalen", scope: !63, file: !56, line: 324, baseType: !8, size: 32, offset: 864)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodes", scope: !63, file: !56, line: 325, baseType: !2195, size: 64, offset: 896)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertTableNode", file: !2197, line: 60, size: 448, elements: !2198)
!2197 = !DIFile(filename: "blender/source/blender/render/intern/include/renderdatabase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2198 = !{!2199, !2209, !2210, !2211, !2212, !2213, !2214}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2196, file: !2197, line: 61, baseType: !2200, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertRen", file: !56, line: 372, size: 384, elements: !2202)
!2202 = !{!2203, !2204, !2205, !2206, !2207, !2208}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2201, file: !56, line: 373, baseType: !206, size: 96)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2201, file: !56, line: 374, baseType: !206, size: 96, offset: 96)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2201, file: !56, line: 375, baseType: !6, size: 64, offset: 192)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2201, file: !56, line: 376, baseType: !202, size: 32, offset: 256)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !2201, file: !56, line: 378, baseType: !7, size: 32, offset: 288)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2201, file: !56, line: 379, baseType: !8, size: 32, offset: 320)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !2196, file: !2197, line: 62, baseType: !6, size: 64, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2196, file: !2197, line: 63, baseType: !6, size: 64, offset: 128)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2196, file: !2197, line: 64, baseType: !6, size: 64, offset: 192)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !2196, file: !2197, line: 65, baseType: !6, size: 64, offset: 256)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2196, file: !2197, line: 66, baseType: !6, size: 64, offset: 320)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !2196, file: !2197, line: 68, baseType: !1189, size: 64, offset: 384)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodes", scope: !63, file: !56, line: 326, baseType: !2216, size: 64, offset: 960)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakTableNode", file: !2197, line: 71, size: 512, elements: !2218)
!2218 = !{!2219, !2233, !2236, !2239, !2240, !2241, !2242, !2243, !2244}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "vlak", scope: !2217, file: !2197, line: 72, baseType: !2220, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakRen", file: !56, line: 400, size: 512, elements: !2222)
!2222 = !{!2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2221, file: !56, line: 401, baseType: !2200, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2221, file: !56, line: 401, baseType: !2200, size: 64, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2221, file: !56, line: 401, baseType: !2200, size: 64, offset: 128)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2221, file: !56, line: 401, baseType: !2200, size: 64, offset: 192)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2221, file: !56, line: 402, baseType: !206, size: 96, offset: 256)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2221, file: !56, line: 403, baseType: !264, size: 64, offset: 384)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !2221, file: !56, line: 404, baseType: !94, size: 8, offset: 448)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2221, file: !56, line: 405, baseType: !94, size: 8, offset: 456)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !2221, file: !56, line: 405, baseType: !94, size: 8, offset: 464)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2221, file: !56, line: 410, baseType: !8, size: 32, offset: 480)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2217, file: !2197, line: 73, baseType: !2234, size: 64, offset: 64)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !56, line: 391, flags: DIFlagFwdDecl)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2217, file: !2197, line: 74, baseType: !2237, size: 64, offset: 128)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2238 = !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !2197, line: 47, flags: DIFlagFwdDecl)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !2217, file: !2197, line: 76, baseType: !1189, size: 64, offset: 192)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "totmtface", scope: !2217, file: !2197, line: 77, baseType: !8, size: 32, offset: 256)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !2217, file: !2197, line: 77, baseType: !8, size: 32, offset: 288)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2217, file: !2197, line: 78, baseType: !6, size: 64, offset: 320)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2217, file: !2197, line: 79, baseType: !6, size: 64, offset: 384)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "radface", scope: !2217, file: !2197, line: 80, baseType: !2245, size: 64, offset: 448)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadFace", file: !56, line: 394, size: 448, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2253, !2254}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "unshot", scope: !2247, file: !56, line: 395, baseType: !206, size: 96)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "totrad", scope: !2247, file: !56, line: 395, baseType: !206, size: 96, offset: 96)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "norm", scope: !2247, file: !56, line: 396, baseType: !206, size: 96, offset: 192)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !2247, file: !56, line: 396, baseType: !206, size: 96, offset: 288)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !2247, file: !56, line: 396, baseType: !7, size: 32, offset: 384)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2247, file: !56, line: 397, baseType: !8, size: 32, offset: 416)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodes", scope: !63, file: !56, line: 327, baseType: !2256, size: 64, offset: 1024)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandTableNode", file: !2197, line: 83, size: 512, elements: !2258)
!2258 = !{!2259, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2257, file: !2197, line: 84, baseType: !2260, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandRen", file: !56, line: 475, size: 384, elements: !2262)
!2262 = !{!2263, !2270, !2321, !2322, !2323, !2324, !2325}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2261, file: !56, line: 476, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandVert", file: !56, line: 434, baseType: !2266)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandVert", file: !56, line: 431, size: 128, elements: !2267)
!2267 = !{!2268, !2269}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2266, file: !56, line: 432, baseType: !206, size: 96)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !2266, file: !56, line: 433, baseType: !7, size: 32, offset: 96)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2261, file: !56, line: 477, baseType: !2271, size: 64, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBuffer", file: !56, line: 473, baseType: !2273)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBuffer", file: !56, line: 455, size: 1344, elements: !2274)
!2274 = !{!2275, !2277, !2278, !2280, !2287, !2288, !2289, !2290, !2291, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2273, file: !56, line: 456, baseType: !2276, size: 64)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2273, file: !56, line: 456, baseType: !2276, size: 64, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2273, file: !56, line: 457, baseType: !2279, size: 64, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2273, file: !56, line: 458, baseType: !2281, size: 64, offset: 192)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBound", file: !56, line: 450, size: 256, elements: !2283)
!2283 = !{!2284, !2285, !2286}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2282, file: !56, line: 451, baseType: !8, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2282, file: !56, line: 451, baseType: !8, size: 32, offset: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !2282, file: !56, line: 452, baseType: !2184, size: 192, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2273, file: !56, line: 459, baseType: !8, size: 32, offset: 256)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "totbound", scope: !2273, file: !56, line: 459, baseType: !8, size: 32, offset: 288)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2273, file: !56, line: 461, baseType: !66, size: 64, offset: 320)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !2273, file: !56, line: 462, baseType: !264, size: 64, offset: 384)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "surface", scope: !2273, file: !56, line: 463, baseType: !2292, size: 64, offset: 448)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSurface", file: !56, line: 436, size: 2880, elements: !2294)
!2294 = !{!2295, !2296, !2297, !2298, !2301, !2303, !2304, !2305, !2306, !2307, !2308, !2309}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2293, file: !56, line: 437, baseType: !2292, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2293, file: !56, line: 437, baseType: !2292, size: 64, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2293, file: !56, line: 438, baseType: !62, size: 2240, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2293, file: !56, line: 439, baseType: !2299, size: 64, offset: 2368)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !382)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2293, file: !56, line: 440, baseType: !2302, size: 64, offset: 2432)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !2293, file: !56, line: 442, baseType: !2302, size: 64, offset: 2496)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2293, file: !56, line: 443, baseType: !2302, size: 64, offset: 2560)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !2293, file: !56, line: 444, baseType: !2302, size: 64, offset: 2624)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "prevco", scope: !2293, file: !56, line: 446, baseType: !2302, size: 64, offset: 2688)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "nextco", scope: !2293, file: !56, line: 446, baseType: !2302, size: 64, offset: 2752)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2293, file: !56, line: 447, baseType: !8, size: 32, offset: 2816)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2293, file: !56, line: 447, baseType: !8, size: 32, offset: 2848)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2273, file: !56, line: 464, baseType: !202, size: 32, offset: 512)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "overrideuv", scope: !2273, file: !56, line: 465, baseType: !8, size: 32, offset: 544)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2273, file: !56, line: 466, baseType: !8, size: 32, offset: 576)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !2273, file: !56, line: 466, baseType: !8, size: 32, offset: 608)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcos", scope: !2273, file: !56, line: 467, baseType: !7, size: 32, offset: 640)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !2273, file: !56, line: 467, baseType: !7, size: 32, offset: 672)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "widthfade", scope: !2273, file: !56, line: 467, baseType: !7, size: 32, offset: 704)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !2273, file: !56, line: 469, baseType: !7, size: 32, offset: 736)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2273, file: !56, line: 471, baseType: !1864, size: 512, offset: 768)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2273, file: !56, line: 472, baseType: !8, size: 32, offset: 1280)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2273, file: !56, line: 472, baseType: !8, size: 32, offset: 1312)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2261, file: !56, line: 478, baseType: !8, size: 32, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2261, file: !56, line: 478, baseType: !8, size: 32, offset: 160)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2261, file: !56, line: 479, baseType: !8, size: 32, offset: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2261, file: !56, line: 479, baseType: !8, size: 32, offset: 224)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2261, file: !56, line: 480, baseType: !206, size: 96, offset: 256)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2257, file: !2197, line: 85, baseType: !6, size: 64, offset: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2257, file: !2197, line: 86, baseType: !6, size: 64, offset: 128)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "simplify", scope: !2257, file: !2197, line: 87, baseType: !6, size: 64, offset: 192)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2257, file: !2197, line: 88, baseType: !1189, size: 64, offset: 256)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2257, file: !2197, line: 89, baseType: !2237, size: 64, offset: 320)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2257, file: !2197, line: 90, baseType: !6, size: 64, offset: 384)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !2257, file: !2197, line: 91, baseType: !8, size: 32, offset: 448)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !2257, file: !2197, line: 91, baseType: !8, size: 32, offset: 480)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "bloha", scope: !63, file: !56, line: 328, baseType: !2335, size: 64, offset: 1088)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HaloRen", file: !56, line: 413, size: 1024, elements: !2338)
!2338 = !{!2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !2337, file: !56, line: 414, baseType: !107, size: 16)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !2337, file: !56, line: 414, baseType: !107, size: 16, offset: 16)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2337, file: !56, line: 415, baseType: !7, size: 32, offset: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !2337, file: !56, line: 415, baseType: !7, size: 32, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !2337, file: !56, line: 415, baseType: !7, size: 32, offset: 96)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !2337, file: !56, line: 415, baseType: !7, size: 32, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "radsq", scope: !2337, file: !56, line: 415, baseType: !7, size: 32, offset: 160)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !2337, file: !56, line: 415, baseType: !7, size: 32, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "cos", scope: !2337, file: !56, line: 415, baseType: !7, size: 32, offset: 224)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2337, file: !56, line: 415, baseType: !206, size: 96, offset: 256)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2337, file: !56, line: 415, baseType: !206, size: 96, offset: 352)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "hard", scope: !2337, file: !56, line: 416, baseType: !7, size: 32, offset: 448)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2337, file: !56, line: 416, baseType: !7, size: 32, offset: 480)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2337, file: !56, line: 416, baseType: !7, size: 32, offset: 512)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2337, file: !56, line: 416, baseType: !7, size: 32, offset: 544)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "zs", scope: !2337, file: !56, line: 417, baseType: !8, size: 32, offset: 576)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "zd", scope: !2337, file: !56, line: 417, baseType: !8, size: 32, offset: 608)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "zBufDist", scope: !2337, file: !56, line: 418, baseType: !8, size: 32, offset: 640)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "starpoints", scope: !2337, file: !56, line: 419, baseType: !94, size: 8, offset: 672)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2337, file: !56, line: 419, baseType: !94, size: 8, offset: 680)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2337, file: !56, line: 419, baseType: !94, size: 8, offset: 688)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2337, file: !56, line: 419, baseType: !94, size: 8, offset: 696)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !2337, file: !56, line: 420, baseType: !94, size: 8, offset: 704)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !2337, file: !56, line: 420, baseType: !94, size: 8, offset: 712)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2337, file: !56, line: 420, baseType: !94, size: 8, offset: 720)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !2337, file: !56, line: 421, baseType: !107, size: 16, offset: 736)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !2337, file: !56, line: 422, baseType: !7, size: 32, offset: 768)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !2337, file: !56, line: 423, baseType: !8, size: 32, offset: 800)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2337, file: !56, line: 424, baseType: !202, size: 32, offset: 832)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2337, file: !56, line: 425, baseType: !264, size: 64, offset: 896)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2337, file: !56, line: 426, baseType: !2370, size: 64, offset: 960)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !2372, line: 197, flags: DIFlagFwdDecl)
!2372 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "strandbuf", scope: !63, file: !56, line: 329, baseType: !2276, size: 64, offset: 1152)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !63, file: !56, line: 331, baseType: !2375, size: 64, offset: 1216)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !63, file: !56, line: 332, baseType: !2375, size: 64, offset: 1280)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "actmtface", scope: !63, file: !56, line: 333, baseType: !8, size: 32, offset: 1344)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "actmcol", scope: !63, file: !56, line: 333, baseType: !8, size: 32, offset: 1376)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "bakemtface", scope: !63, file: !56, line: 333, baseType: !8, size: 32, offset: 1408)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !63, file: !56, line: 335, baseType: !1864, size: 512, offset: 1440)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !63, file: !56, line: 338, baseType: !2382, size: 64, offset: 1984)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !2384, line: 118, size: 192, elements: !2385)
!2384 = !DIFile(filename: "blender/source/blender/render/intern/include/../raytrace/rayobject_internal.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2385 = !{!2386, !2467}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2383, file: !2384, line: 119, baseType: !2387, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObjectAPI", file: !2384, line: 131, size: 448, elements: !2389)
!2389 = !{!2390, !2439, !2444, !2449, !2451, !2456, !2461}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "raycast", scope: !2388, file: !2384, line: 132, baseType: !2391, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_raycast_callback", file: !2384, line: 123, baseType: !2392)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!8, !2395, !2397}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "RayObject", file: !50, line: 50, baseType: !2383)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Isect", file: !2399, line: 60, size: 1408, elements: !2400)
!2399 = !DIFile(filename: "blender/source/blender/render/intern/include/rayintersection.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2400 = !{!2401, !2402, !2403, !2404, !2405, !2406, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2422, !2423, !2424}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2398, file: !2399, line: 63, baseType: !206, size: 96)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2398, file: !2399, line: 64, baseType: !206, size: 96, offset: 96)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2398, file: !2399, line: 65, baseType: !7, size: 32, offset: 192)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "origstart", scope: !2398, file: !2399, line: 68, baseType: !206, size: 96, offset: 224)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "origdir", scope: !2398, file: !2399, line: 69, baseType: !206, size: 96, offset: 320)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "bv_index", scope: !2398, file: !2399, line: 72, baseType: !2407, size: 192, offset: 416)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 192, elements: !1444)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "idot_axis", scope: !2398, file: !2399, line: 73, baseType: !206, size: 96, offset: 608)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2398, file: !2399, line: 76, baseType: !8, size: 32, offset: 704)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2398, file: !2399, line: 77, baseType: !8, size: 32, offset: 736)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2398, file: !2399, line: 78, baseType: !8, size: 32, offset: 768)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2398, file: !2399, line: 79, baseType: !8, size: 32, offset: 800)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2398, file: !2399, line: 80, baseType: !47, size: 64, offset: 832)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2398, file: !2399, line: 83, baseType: !7, size: 32, offset: 896)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2398, file: !2399, line: 83, baseType: !7, size: 32, offset: 928)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "isect", scope: !2398, file: !2399, line: 84, baseType: !8, size: 32, offset: 960)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "hit", scope: !2398, file: !2399, line: 89, baseType: !2418, size: 128, offset: 1024)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2398, file: !2399, line: 86, size: 128, elements: !2419)
!2419 = !{!2420, !2421}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2418, file: !2399, line: 87, baseType: !47, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2418, file: !2399, line: 88, baseType: !47, size: 64, offset: 64)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !2398, file: !2399, line: 89, baseType: !2418, size: 128, offset: 1152)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !2398, file: !2399, line: 92, baseType: !2382, size: 64, offset: 1280)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "hint", scope: !2398, file: !2399, line: 98, baseType: !2425, size: 64, offset: 1344)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "RayHint", file: !2399, line: 56, baseType: !2427)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayHint", file: !2399, line: 54, size: 16448, elements: !2428)
!2428 = !{!2429}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2427, file: !2399, line: 55, baseType: !2430, size: 16448)
!2430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2427, file: !2399, line: 55, size: 16448, elements: !2431)
!2431 = !{!2432}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "lcts", scope: !2430, file: !2399, line: 55, baseType: !2433, size: 16448)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "LCTSHint", file: !2399, line: 52, baseType: !2434)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LCTSHint", file: !2399, line: 49, size: 16448, elements: !2435)
!2435 = !{!2436, !2437}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2434, file: !2399, line: 50, baseType: !8, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2434, file: !2399, line: 51, baseType: !2438, size: 16384, offset: 64)
!2438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, size: 16384, elements: !615)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2388, file: !2384, line: 133, baseType: !2440, size: 64, offset: 64)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_add_callback", file: !2384, line: 124, baseType: !2441)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{null, !2395, !2395}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2388, file: !2384, line: 134, baseType: !2445, size: 64, offset: 128)
!2445 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_done_callback", file: !2384, line: 125, baseType: !2446)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{null, !2395}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2388, file: !2384, line: 135, baseType: !2450, size: 64, offset: 192)
!2450 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_free_callback", file: !2384, line: 126, baseType: !2446)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2388, file: !2384, line: 136, baseType: !2452, size: 64, offset: 256)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_merge_bb_callback", file: !2384, line: 127, baseType: !2453)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{null, !2395, !6, !6}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2388, file: !2384, line: 137, baseType: !2457, size: 64, offset: 320)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_cost_callback", file: !2384, line: 128, baseType: !2458)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{!7, !2395}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "hint_bb", scope: !2388, file: !2384, line: 138, baseType: !2462, size: 64, offset: 384)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_hint_bb_callback", file: !2384, line: 129, baseType: !2463)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{null, !2395, !2466, !6, !6}
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2383, file: !2384, line: 120, baseType: !2468, size: 128, offset: 64)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObjectControl", file: !2384, line: 51, size: 128, elements: !2469)
!2469 = !{!2470, !2471}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2468, file: !2384, line: 52, baseType: !47, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !2468, file: !2384, line: 53, baseType: !2472, size: 64, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobjectcontrol_test_break_callback", file: !2384, line: 49, baseType: !1044)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !63, file: !56, line: 339, baseType: !2474, size: 64, offset: 2048)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !50, line: 78, size: 640, elements: !2476)
!2476 = !{!2477, !2478, !2479, !2480, !2481, !2482, !2483}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2475, file: !50, line: 79, baseType: !381, size: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2475, file: !50, line: 79, baseType: !381, size: 128, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2475, file: !50, line: 79, baseType: !381, size: 128, offset: 256)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2475, file: !50, line: 79, baseType: !206, size: 96, offset: 384)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "quad", scope: !2475, file: !50, line: 80, baseType: !8, size: 32, offset: 480)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2475, file: !50, line: 81, baseType: !47, size: 64, offset: 512)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2475, file: !50, line: 82, baseType: !47, size: 64, offset: 576)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !63, file: !56, line: 340, baseType: !2485, size: 64, offset: 2112)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "rayobi", scope: !63, file: !56, line: 341, baseType: !54, size: 64, offset: 2176)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !55, file: !56, line: 349, baseType: !2488, size: 64, offset: 192)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !71, line: 295, baseType: !70)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !55, file: !56, line: 349, baseType: !2488, size: 64, offset: 256)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !55, file: !56, line: 350, baseType: !8, size: 32, offset: 320)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !55, file: !56, line: 350, baseType: !8, size: 32, offset: 352)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !55, file: !56, line: 350, baseType: !8, size: 32, offset: 384)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !55, file: !56, line: 352, baseType: !1864, size: 512, offset: 416)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !55, file: !56, line: 352, baseType: !1864, size: 512, offset: 928)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "nmat", scope: !55, file: !56, line: 353, baseType: !1867, size: 288, offset: 1440)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !55, file: !56, line: 354, baseType: !107, size: 16, offset: 1728)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "dupliorco", scope: !55, file: !56, line: 356, baseType: !206, size: 96, offset: 1760)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !55, file: !56, line: 356, baseType: !1005, size: 64, offset: 1856)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "duplitexmat", scope: !55, file: !56, line: 357, baseType: !2501, size: 64, offset: 1920)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "volume_precache", scope: !55, file: !56, line: 359, baseType: !2503, size: 64, offset: 1984)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumePrecache", file: !56, line: 513, size: 448, elements: !2505)
!2505 = !{!2506, !2507, !2508, !2509, !2510, !2511}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2504, file: !56, line: 514, baseType: !1124, size: 96)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !2504, file: !56, line: 515, baseType: !6, size: 64, offset: 128)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !2504, file: !56, line: 515, baseType: !6, size: 64, offset: 192)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !2504, file: !56, line: 516, baseType: !6, size: 64, offset: 256)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !2504, file: !56, line: 517, baseType: !6, size: 64, offset: 320)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !2504, file: !56, line: 518, baseType: !6, size: 64, offset: 384)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "vectors", scope: !55, file: !56, line: 361, baseType: !6, size: 64, offset: 2048)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "totvector", scope: !55, file: !56, line: 362, baseType: !8, size: 32, offset: 2112)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !55, file: !56, line: 365, baseType: !2382, size: 64, offset: 2176)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "transform_primitives", scope: !55, file: !56, line: 366, baseType: !8, size: 32, offset: 2240)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !51, file: !50, line: 97, baseType: !2220, size: 64, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "RayFace", file: !50, line: 83, baseType: !2475)
!2519 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !2520, line: 87, baseType: !2521)
!2520 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2521 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectInstanceRen", file: !56, line: 368, baseType: !55)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakRen", file: !56, line: 411, baseType: !2221)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !1180, line: 58, baseType: !2528)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !56, line: 126, size: 49920, elements: !2529)
!2529 = !{!2530, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2543, !2544, !2545, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2593, !2596, !2597, !2598, !2600, !2658, !2661, !2663, !2665, !2666, !2667, !2668, !2669, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2704, !2708, !2709, !2710, !2711, !2716, !2717, !2721, !2722, !2752, !2753, !2754, !2755, !2759, !2760, !2761, !2762, !2763, !2766, !2767}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2528, file: !56, line: 128, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2528, file: !56, line: 128, baseType: !2531, size: 64, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2528, file: !56, line: 129, baseType: !1215, size: 592, offset: 128)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !2528, file: !56, line: 130, baseType: !8, size: 32, offset: 736)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2528, file: !56, line: 133, baseType: !107, size: 16, offset: 768)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2528, file: !56, line: 133, baseType: !107, size: 16, offset: 784)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2528, file: !56, line: 133, baseType: !107, size: 16, offset: 800)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "result_ok", scope: !2528, file: !56, line: 133, baseType: !107, size: 16, offset: 816)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "scene_color_manage", scope: !2528, file: !56, line: 136, baseType: !1103, size: 8, offset: 832)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2528, file: !56, line: 139, baseType: !2541, size: 64, offset: 896)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderResult", file: !1180, line: 148, baseType: !1179)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "pushedresult", scope: !2528, file: !56, line: 141, baseType: !2541, size: 64, offset: 960)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !2528, file: !56, line: 143, baseType: !133, size: 128, offset: 1024)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "resultmutex", scope: !2528, file: !56, line: 147, baseType: !2546, size: 32, offset: 1152)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !2547, line: 148, baseType: !2548)
!2547 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !2549, line: 10, baseType: !2550)
!2549 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1827, line: 26, baseType: !2551)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !1829, line: 42, baseType: !202)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2528, file: !56, line: 150, baseType: !8, size: 32, offset: 1184)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2528, file: !56, line: 150, baseType: !8, size: 32, offset: 1216)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2528, file: !56, line: 152, baseType: !1193, size: 128, offset: 1248)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !2528, file: !56, line: 153, baseType: !954, size: 128, offset: 1376)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !2528, file: !56, line: 154, baseType: !7, size: 32, offset: 1504)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !2528, file: !56, line: 154, baseType: !7, size: 32, offset: 1536)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !2528, file: !56, line: 155, baseType: !7, size: 32, offset: 1568)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !2528, file: !56, line: 158, baseType: !8, size: 32, offset: 1600)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !2528, file: !56, line: 158, baseType: !8, size: 32, offset: 1632)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "partx", scope: !2528, file: !56, line: 162, baseType: !8, size: 32, offset: 1664)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "party", scope: !2528, file: !56, line: 162, baseType: !8, size: 32, offset: 1696)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !2528, file: !56, line: 165, baseType: !7, size: 32, offset: 1728)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "panophi", scope: !2528, file: !56, line: 167, baseType: !7, size: 32, offset: 1760)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "panosi", scope: !2528, file: !56, line: 167, baseType: !7, size: 32, offset: 1792)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "panoco", scope: !2528, file: !56, line: 167, baseType: !7, size: 32, offset: 1824)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "panodxp", scope: !2528, file: !56, line: 167, baseType: !7, size: 32, offset: 1856)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "panodxv", scope: !2528, file: !56, line: 167, baseType: !7, size: 32, offset: 1888)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "grvec", scope: !2528, file: !56, line: 170, baseType: !206, size: 96, offset: 1920)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2528, file: !56, line: 171, baseType: !1867, size: 288, offset: 2016)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !2528, file: !56, line: 172, baseType: !1864, size: 512, offset: 2304)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !2528, file: !56, line: 172, baseType: !1864, size: 512, offset: 2816)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat_orig", scope: !2528, file: !56, line: 173, baseType: !1864, size: 512, offset: 3328)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2528, file: !56, line: 174, baseType: !1864, size: 512, offset: 3840)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2528, file: !56, line: 177, baseType: !7, size: 32, offset: 4352)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2528, file: !56, line: 178, baseType: !7, size: 32, offset: 4384)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !2528, file: !56, line: 181, baseType: !2578, size: 64, offset: 4416)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "SampleTables", file: !56, line: 77, baseType: !2580)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SampleTables", file: !56, line: 72, size: 3776, elements: !2581)
!2581 = !{!2582, !2586, !2590, !2591, !2592}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "centLut", scope: !2580, file: !56, line: 73, baseType: !2583, size: 512)
!2583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 512, elements: !2584)
!2584 = !{!2585}
!2585 = !DISubrange(count: 16)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "fmask1", scope: !2580, file: !56, line: 74, baseType: !2587, size: 576, offset: 512)
!2587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 576, elements: !2588)
!2588 = !{!2589}
!2589 = !DISubrange(count: 9)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "fmask2", scope: !2580, file: !56, line: 74, baseType: !2587, size: 576, offset: 1088)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "cmask", scope: !2580, file: !56, line: 75, baseType: !614, size: 2048, offset: 1664)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "centmask", scope: !2580, file: !56, line: 75, baseType: !848, size: 64, offset: 3712)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !2528, file: !56, line: 182, baseType: !2594, size: 2048, offset: 4480)
!2594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !2595)
!2595 = !{!414, !581}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_jit", scope: !2528, file: !56, line: 183, baseType: !2594, size: 2048, offset: 6528)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "qmcsamplers", scope: !2528, file: !56, line: 184, baseType: !2154, size: 64, offset: 8576)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "shadowsamplenr", scope: !2528, file: !56, line: 187, baseType: !2599, size: 32, offset: 8640)
!2599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32, elements: !400)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2528, file: !56, line: 190, baseType: !2601, size: 64, offset: 8704)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !2603, line: 53, size: 15232, elements: !2604)
!2603 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2604 = !{!2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2655}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2602, file: !2603, line: 54, baseType: !2601, size: 64)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2602, file: !2603, line: 54, baseType: !2601, size: 64, offset: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2602, file: !2603, line: 55, baseType: !93, size: 8192, offset: 128)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !2602, file: !2603, line: 56, baseType: !107, size: 16, offset: 8320)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !2602, file: !2603, line: 56, baseType: !107, size: 16, offset: 8336)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !2602, file: !2603, line: 57, baseType: !107, size: 16, offset: 8352)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !2602, file: !2603, line: 57, baseType: !107, size: 16, offset: 8368)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !2602, file: !2603, line: 58, baseType: !1826, size: 64, offset: 8384)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !2602, file: !2603, line: 59, baseType: !2614, size: 128, offset: 8448)
!2614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 128, elements: !2584)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !2602, file: !2603, line: 60, baseType: !107, size: 16, offset: 8576)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !2602, file: !2603, line: 62, baseType: !83, size: 64, offset: 8640)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2602, file: !2603, line: 63, baseType: !133, size: 128, offset: 8704)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2602, file: !2603, line: 64, baseType: !133, size: 128, offset: 8832)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2602, file: !2603, line: 65, baseType: !133, size: 128, offset: 8960)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !2602, file: !2603, line: 66, baseType: !133, size: 128, offset: 9088)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2602, file: !2603, line: 67, baseType: !133, size: 128, offset: 9216)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !2602, file: !2603, line: 68, baseType: !133, size: 128, offset: 9344)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2602, file: !2603, line: 69, baseType: !133, size: 128, offset: 9472)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2602, file: !2603, line: 70, baseType: !133, size: 128, offset: 9600)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2602, file: !2603, line: 71, baseType: !133, size: 128, offset: 9728)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !2602, file: !2603, line: 72, baseType: !133, size: 128, offset: 9856)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !2602, file: !2603, line: 73, baseType: !133, size: 128, offset: 9984)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2602, file: !2603, line: 74, baseType: !133, size: 128, offset: 10112)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2602, file: !2603, line: 75, baseType: !133, size: 128, offset: 10240)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2602, file: !2603, line: 76, baseType: !133, size: 128, offset: 10368)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2602, file: !2603, line: 77, baseType: !133, size: 128, offset: 10496)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2602, file: !2603, line: 78, baseType: !133, size: 128, offset: 10624)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !2602, file: !2603, line: 79, baseType: !133, size: 128, offset: 10752)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2602, file: !2603, line: 80, baseType: !133, size: 128, offset: 10880)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2602, file: !2603, line: 81, baseType: !133, size: 128, offset: 11008)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !2602, file: !2603, line: 82, baseType: !133, size: 128, offset: 11136)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2602, file: !2603, line: 83, baseType: !133, size: 128, offset: 11264)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2602, file: !2603, line: 84, baseType: !133, size: 128, offset: 11392)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !2602, file: !2603, line: 85, baseType: !133, size: 128, offset: 11520)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2602, file: !2603, line: 86, baseType: !133, size: 128, offset: 11648)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2602, file: !2603, line: 87, baseType: !133, size: 128, offset: 11776)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2602, file: !2603, line: 88, baseType: !133, size: 128, offset: 11904)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2602, file: !2603, line: 89, baseType: !133, size: 128, offset: 12032)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !2602, file: !2603, line: 90, baseType: !133, size: 128, offset: 12160)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !2602, file: !2603, line: 91, baseType: !133, size: 128, offset: 12288)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !2602, file: !2603, line: 92, baseType: !133, size: 128, offset: 12416)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !2602, file: !2603, line: 93, baseType: !133, size: 128, offset: 12544)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !2602, file: !2603, line: 94, baseType: !133, size: 128, offset: 12672)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2602, file: !2603, line: 95, baseType: !133, size: 128, offset: 12800)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !2602, file: !2603, line: 96, baseType: !133, size: 128, offset: 12928)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !2602, file: !2603, line: 98, baseType: !614, size: 2048, offset: 13056)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2602, file: !2603, line: 101, baseType: !2653, size: 64, offset: 15104)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !2603, line: 49, flags: DIFlagFwdDecl)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2602, file: !2603, line: 103, baseType: !2656, size: 64, offset: 15168)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !2603, line: 51, flags: DIFlagFwdDecl)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2528, file: !56, line: 191, baseType: !2659, size: 64, offset: 8768)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !12, line: 1299, baseType: !495)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2528, file: !56, line: 192, baseType: !2662, size: 31872, offset: 8832)
!2662 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderData", file: !12, line: 611, baseType: !1424)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "wrld", scope: !2528, file: !56, line: 193, baseType: !2664, size: 4224, offset: 40704)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !503, line: 131, baseType: !502)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !2528, file: !56, line: 194, baseType: !69, size: 64, offset: 44928)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2528, file: !56, line: 195, baseType: !202, size: 32, offset: 44992)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !2528, file: !56, line: 195, baseType: !202, size: 32, offset: 45024)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !2528, file: !56, line: 197, baseType: !133, size: 128, offset: 45056)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2528, file: !56, line: 200, baseType: !2670, size: 64, offset: 45184)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !56, line: 65, flags: DIFlagFwdDecl)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2528, file: !56, line: 203, baseType: !2382, size: 64, offset: 45248)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !2528, file: !56, line: 204, baseType: !2474, size: 64, offset: 45312)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !2528, file: !56, line: 205, baseType: !2485, size: 64, offset: 45376)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !2528, file: !56, line: 206, baseType: !7, size: 32, offset: 45440)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "occlusiontree", scope: !2528, file: !56, line: 209, baseType: !47, size: 64, offset: 45504)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "strandsurface", scope: !2528, file: !56, line: 210, baseType: !133, size: 128, offset: 45568)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_offs", scope: !2528, file: !56, line: 213, baseType: !7, size: 32, offset: 45696)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "field_offs", scope: !2528, file: !56, line: 213, baseType: !7, size: 32, offset: 45728)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !2528, file: !56, line: 216, baseType: !8, size: 32, offset: 45760)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2528, file: !56, line: 216, baseType: !8, size: 32, offset: 45792)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !2528, file: !56, line: 216, baseType: !8, size: 32, offset: 45824)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !2528, file: !56, line: 216, baseType: !8, size: 32, offset: 45856)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !2528, file: !56, line: 216, baseType: !8, size: 32, offset: 45888)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "sortedhalos", scope: !2528, file: !56, line: 217, baseType: !2335, size: 64, offset: 45952)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "lights", scope: !2528, file: !56, line: 219, baseType: !133, size: 128, offset: 46016)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !2528, file: !56, line: 220, baseType: !133, size: 128, offset: 46144)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "objecttable", scope: !2528, file: !56, line: 222, baseType: !133, size: 128, offset: 46272)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "objectinstance", scope: !2528, file: !56, line: 224, baseType: !54, size: 64, offset: 46400)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "instancetable", scope: !2528, file: !56, line: 225, baseType: !133, size: 128, offset: 46464)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "totinstance", scope: !2528, file: !56, line: 226, baseType: !8, size: 32, offset: 46592)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "bakebuf", scope: !2528, file: !56, line: 228, baseType: !1165, size: 64, offset: 46656)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "orco_hash", scope: !2528, file: !56, line: 230, baseType: !196, size: 64, offset: 46720)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "sss_hash", scope: !2528, file: !56, line: 232, baseType: !196, size: 64, offset: 46784)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "sss_points", scope: !2528, file: !56, line: 233, baseType: !2154, size: 64, offset: 46848)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "sss_mat", scope: !2528, file: !56, line: 234, baseType: !264, size: 64, offset: 46912)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_names", scope: !2528, file: !56, line: 236, baseType: !133, size: 128, offset: 46976)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "excludeob", scope: !2528, file: !56, line: 238, baseType: !69, size: 64, offset: 47104)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "render_volumes_inside", scope: !2528, file: !56, line: 239, baseType: !133, size: 128, offset: 47168)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "volumes", scope: !2528, file: !56, line: 240, baseType: !133, size: 128, offset: 47296)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "memArena", scope: !2528, file: !56, line: 250, baseType: !2702, size: 64, offset: 47424)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !56, line: 57, flags: DIFlagFwdDecl)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "display_init", scope: !2528, file: !56, line: 253, baseType: !2705, size: 64, offset: 47488)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{null, !47, !2541}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "dih", scope: !2528, file: !56, line: 254, baseType: !47, size: 64, offset: 47552)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "display_clear", scope: !2528, file: !56, line: 255, baseType: !2705, size: 64, offset: 47616)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "dch", scope: !2528, file: !56, line: 256, baseType: !47, size: 64, offset: 47680)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "display_update", scope: !2528, file: !56, line: 257, baseType: !2712, size: 64, offset: 47744)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = !DISubroutineType(types: !2714)
!2714 = !{null, !47, !2541, !2715}
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "duh", scope: !2528, file: !56, line: 258, baseType: !47, size: 64, offset: 47808)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "current_scene_update", scope: !2528, file: !56, line: 259, baseType: !2718, size: 64, offset: 47872)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{null, !47, !494}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "suh", scope: !2528, file: !56, line: 260, baseType: !47, size: 64, offset: 47936)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !2528, file: !56, line: 262, baseType: !2723, size: 64, offset: 48000)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{null, !47, !2726}
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderStats", file: !1180, line: 160, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderStats", file: !1180, line: 151, size: 1216, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2746, !2747, !2748, !2749, !2750, !2751}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2728, file: !1180, line: 152, baseType: !8, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2728, file: !1180, line: 153, baseType: !8, size: 32, offset: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2728, file: !1180, line: 153, baseType: !8, size: 32, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !2728, file: !1180, line: 153, baseType: !8, size: 32, offset: 96)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !2728, file: !1180, line: 153, baseType: !8, size: 32, offset: 128)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !2728, file: !1180, line: 153, baseType: !8, size: 32, offset: 160)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !2728, file: !1180, line: 153, baseType: !8, size: 32, offset: 192)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "curfield", scope: !2728, file: !1180, line: 154, baseType: !107, size: 16, offset: 224)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "curblur", scope: !2728, file: !1180, line: 154, baseType: !107, size: 16, offset: 240)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "curpart", scope: !2728, file: !1180, line: 154, baseType: !107, size: 16, offset: 256)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "partsdone", scope: !2728, file: !1180, line: 154, baseType: !107, size: 16, offset: 272)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "convertdone", scope: !2728, file: !1180, line: 154, baseType: !107, size: 16, offset: 288)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "curfsa", scope: !2728, file: !1180, line: 154, baseType: !107, size: 16, offset: 304)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "localview", scope: !2728, file: !1180, line: 155, baseType: !1103, size: 8, offset: 320)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !2728, file: !1180, line: 156, baseType: !2745, size: 64, offset: 384)
!2745 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "lastframetime", scope: !2728, file: !1180, line: 156, baseType: !2745, size: 64, offset: 448)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "infostr", scope: !2728, file: !1180, line: 157, baseType: !710, size: 64, offset: 512)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "statstr", scope: !2728, file: !1180, line: 157, baseType: !710, size: 64, offset: 576)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !2728, file: !1180, line: 158, baseType: !123, size: 512, offset: 640)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !2728, file: !1180, line: 159, baseType: !7, size: 32, offset: 1152)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "mem_peak", scope: !2728, file: !1180, line: 159, baseType: !7, size: 32, offset: 1184)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !2528, file: !56, line: 263, baseType: !47, size: 64, offset: 48064)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !2528, file: !56, line: 264, baseType: !1036, size: 64, offset: 48128)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !2528, file: !56, line: 265, baseType: !47, size: 64, offset: 48192)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "draw_lock", scope: !2528, file: !56, line: 267, baseType: !2756, size: 64, offset: 48256)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{null, !47, !8}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "dlh", scope: !2528, file: !56, line: 268, baseType: !47, size: 64, offset: 48320)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !2528, file: !56, line: 269, baseType: !1044, size: 64, offset: 48384)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !2528, file: !56, line: 270, baseType: !47, size: 64, offset: 48448)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2528, file: !56, line: 272, baseType: !2727, size: 1216, offset: 48512)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !2528, file: !56, line: 274, baseType: !2764, size: 64, offset: 49728)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !696, line: 46, flags: DIFlagFwdDecl)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2528, file: !56, line: 276, baseType: !2370, size: 64, offset: 49792)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2528, file: !56, line: 277, baseType: !2653, size: 64, offset: 49856)
!2768 = !{!0, !2769, !2771}
!2769 = !DIGlobalVariableExpression(var: !2770, expr: !DIExpression())
!2770 = distinct !DIGlobalVariable(name: "yso", scope: !2, file: !3, line: 1735, type: !2599, isLocal: true, isDefinition: true)
!2771 = !DIGlobalVariableExpression(var: !2772, expr: !DIExpression())
!2772 = distinct !DIGlobalVariable(name: "firsttime", scope: !2, file: !3, line: 1736, type: !8, isLocal: true, isDefinition: true)
!2773 = !{}
!2774 = !{i32 7, !"Dwarf Version", i32 4}
!2775 = !{i32 2, !"Debug Info Version", i32 3}
!2776 = !{i32 1, !"wchar_size", i32 4}
!2777 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2778 = distinct !DISubprogram(name: "RE_rayobject_create", scope: !3, file: !3, line: 97, type: !2779, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!2779 = !DISubroutineType(types: !2780)
!2780 = !{!2382, !8, !8, !8}
!2781 = !DILocalVariable(name: "type", arg: 1, scope: !2778, file: !3, line: 97, type: !8)
!2782 = !DILocation(line: 97, column: 36, scope: !2778)
!2783 = !DILocalVariable(name: "size", arg: 2, scope: !2778, file: !3, line: 97, type: !8)
!2784 = !DILocation(line: 97, column: 46, scope: !2778)
!2785 = !DILocalVariable(name: "octree_resolution", arg: 3, scope: !2778, file: !3, line: 97, type: !8)
!2786 = !DILocation(line: 97, column: 56, scope: !2778)
!2787 = !DILocalVariable(name: "res", scope: !2778, file: !3, line: 99, type: !2395)
!2788 = !DILocation(line: 99, column: 14, scope: !2778)
!2789 = !DILocation(line: 101, column: 6, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 101, column: 6)
!2791 = !DILocation(line: 101, column: 11, scope: !2790)
!2792 = !DILocation(line: 101, column: 6, scope: !2778)
!2793 = !DILocation(line: 107, column: 8, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 101, column: 35)
!2795 = !DILocation(line: 109, column: 2, scope: !2794)
!2796 = !DILocation(line: 112, column: 6, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 112, column: 6)
!2798 = !DILocation(line: 112, column: 11, scope: !2797)
!2799 = !DILocation(line: 112, column: 40, scope: !2797)
!2800 = !DILocation(line: 112, column: 43, scope: !2797)
!2801 = !DILocation(line: 112, column: 48, scope: !2797)
!2802 = !DILocation(line: 112, column: 6, scope: !2778)
!2803 = !DILocation(line: 113, column: 3, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 112, column: 77)
!2805 = !DILocation(line: 114, column: 8, scope: !2804)
!2806 = !DILocation(line: 115, column: 2, scope: !2804)
!2807 = !DILocation(line: 119, column: 6, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 119, column: 6)
!2809 = !DILocation(line: 119, column: 11, scope: !2808)
!2810 = !DILocation(line: 119, column: 6, scope: !2778)
!2811 = !DILocation(line: 120, column: 36, scope: !2808)
!2812 = !DILocation(line: 120, column: 55, scope: !2808)
!2813 = !DILocation(line: 120, column: 9, scope: !2808)
!2814 = !DILocation(line: 120, column: 7, scope: !2808)
!2815 = !DILocation(line: 120, column: 3, scope: !2808)
!2816 = !DILocation(line: 121, column: 11, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 121, column: 11)
!2818 = !DILocation(line: 121, column: 16, scope: !2817)
!2819 = !DILocation(line: 121, column: 11, scope: !2808)
!2820 = !DILocation(line: 122, column: 34, scope: !2817)
!2821 = !DILocation(line: 122, column: 9, scope: !2817)
!2822 = !DILocation(line: 122, column: 7, scope: !2817)
!2823 = !DILocation(line: 122, column: 3, scope: !2817)
!2824 = !DILocation(line: 123, column: 11, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2817, file: !3, line: 123, column: 11)
!2826 = !DILocation(line: 123, column: 16, scope: !2825)
!2827 = !DILocation(line: 123, column: 11, scope: !2817)
!2828 = !DILocation(line: 124, column: 35, scope: !2825)
!2829 = !DILocation(line: 124, column: 9, scope: !2825)
!2830 = !DILocation(line: 124, column: 7, scope: !2825)
!2831 = !DILocation(line: 124, column: 3, scope: !2825)
!2832 = !DILocation(line: 125, column: 11, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 125, column: 11)
!2834 = !DILocation(line: 125, column: 16, scope: !2833)
!2835 = !DILocation(line: 125, column: 11, scope: !2825)
!2836 = !DILocation(line: 126, column: 34, scope: !2833)
!2837 = !DILocation(line: 126, column: 9, scope: !2833)
!2838 = !DILocation(line: 126, column: 7, scope: !2833)
!2839 = !DILocation(line: 126, column: 3, scope: !2833)
!2840 = !DILocation(line: 128, column: 34, scope: !2833)
!2841 = !DILocation(line: 128, column: 9, scope: !2833)
!2842 = !DILocation(line: 128, column: 7, scope: !2833)
!2843 = !DILocation(line: 130, column: 9, scope: !2778)
!2844 = !DILocation(line: 130, column: 2, scope: !2778)
!2845 = distinct !DISubprogram(name: "freeraytree", scope: !3, file: !3, line: 150, type: !2846, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{null, !2526}
!2848 = !DILocalVariable(name: "re", arg: 1, scope: !2845, file: !3, line: 150, type: !2526)
!2849 = !DILocation(line: 150, column: 26, scope: !2845)
!2850 = !DILocalVariable(name: "obi", scope: !2845, file: !3, line: 152, type: !2522)
!2851 = !DILocation(line: 152, column: 21, scope: !2845)
!2852 = !DILocation(line: 154, column: 6, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2845, file: !3, line: 154, column: 6)
!2854 = !DILocation(line: 154, column: 10, scope: !2853)
!2855 = !DILocation(line: 154, column: 6, scope: !2845)
!2856 = !DILocation(line: 155, column: 21, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 154, column: 19)
!2858 = !DILocation(line: 155, column: 25, scope: !2857)
!2859 = !DILocation(line: 155, column: 3, scope: !2857)
!2860 = !DILocation(line: 156, column: 3, scope: !2857)
!2861 = !DILocation(line: 156, column: 7, scope: !2857)
!2862 = !DILocation(line: 156, column: 15, scope: !2857)
!2863 = !DILocation(line: 157, column: 2, scope: !2857)
!2864 = !DILocation(line: 158, column: 6, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2845, file: !3, line: 158, column: 6)
!2866 = !DILocation(line: 158, column: 10, scope: !2865)
!2867 = !DILocation(line: 158, column: 6, scope: !2845)
!2868 = !DILocation(line: 159, column: 3, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2865, file: !3, line: 158, column: 20)
!2870 = !DILocation(line: 159, column: 13, scope: !2869)
!2871 = !DILocation(line: 159, column: 17, scope: !2869)
!2872 = !DILocation(line: 160, column: 3, scope: !2869)
!2873 = !DILocation(line: 160, column: 7, scope: !2869)
!2874 = !DILocation(line: 160, column: 16, scope: !2869)
!2875 = !DILocation(line: 161, column: 2, scope: !2869)
!2876 = !DILocation(line: 162, column: 6, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2845, file: !3, line: 162, column: 6)
!2878 = !DILocation(line: 162, column: 10, scope: !2877)
!2879 = !DILocation(line: 162, column: 6, scope: !2845)
!2880 = !DILocation(line: 163, column: 3, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 162, column: 25)
!2882 = !DILocation(line: 163, column: 13, scope: !2881)
!2883 = !DILocation(line: 163, column: 17, scope: !2881)
!2884 = !DILocation(line: 164, column: 3, scope: !2881)
!2885 = !DILocation(line: 164, column: 7, scope: !2881)
!2886 = !DILocation(line: 164, column: 21, scope: !2881)
!2887 = !DILocation(line: 165, column: 2, scope: !2881)
!2888 = !DILocation(line: 167, column: 11, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2845, file: !3, line: 167, column: 2)
!2890 = !DILocation(line: 167, column: 15, scope: !2889)
!2891 = !DILocation(line: 167, column: 29, scope: !2889)
!2892 = !DILocation(line: 167, column: 10, scope: !2889)
!2893 = !DILocation(line: 167, column: 7, scope: !2889)
!2894 = !DILocation(line: 167, column: 36, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 167, column: 2)
!2896 = !DILocation(line: 167, column: 2, scope: !2889)
!2897 = !DILocalVariable(name: "obr", scope: !2898, file: !3, line: 168, type: !61)
!2898 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 167, column: 56)
!2899 = !DILocation(line: 168, column: 14, scope: !2898)
!2900 = !DILocation(line: 168, column: 20, scope: !2898)
!2901 = !DILocation(line: 168, column: 25, scope: !2898)
!2902 = !DILocation(line: 169, column: 7, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 169, column: 7)
!2904 = !DILocation(line: 169, column: 12, scope: !2903)
!2905 = !DILocation(line: 169, column: 7, scope: !2898)
!2906 = !DILocation(line: 170, column: 22, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 169, column: 21)
!2908 = !DILocation(line: 170, column: 27, scope: !2907)
!2909 = !DILocation(line: 170, column: 4, scope: !2907)
!2910 = !DILocation(line: 171, column: 4, scope: !2907)
!2911 = !DILocation(line: 171, column: 9, scope: !2907)
!2912 = !DILocation(line: 171, column: 17, scope: !2907)
!2913 = !DILocation(line: 172, column: 3, scope: !2907)
!2914 = !DILocation(line: 173, column: 7, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 173, column: 7)
!2916 = !DILocation(line: 173, column: 12, scope: !2915)
!2917 = !DILocation(line: 173, column: 7, scope: !2898)
!2918 = !DILocation(line: 174, column: 4, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 173, column: 22)
!2920 = !DILocation(line: 174, column: 14, scope: !2919)
!2921 = !DILocation(line: 174, column: 19, scope: !2919)
!2922 = !DILocation(line: 175, column: 4, scope: !2919)
!2923 = !DILocation(line: 175, column: 9, scope: !2919)
!2924 = !DILocation(line: 175, column: 18, scope: !2919)
!2925 = !DILocation(line: 176, column: 3, scope: !2919)
!2926 = !DILocation(line: 177, column: 7, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 177, column: 7)
!2928 = !DILocation(line: 177, column: 12, scope: !2927)
!2929 = !DILocation(line: 177, column: 7, scope: !2898)
!2930 = !DILocation(line: 178, column: 22, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2927, file: !3, line: 177, column: 21)
!2932 = !DILocation(line: 178, column: 27, scope: !2931)
!2933 = !DILocation(line: 178, column: 4, scope: !2931)
!2934 = !DILocation(line: 179, column: 4, scope: !2931)
!2935 = !DILocation(line: 179, column: 9, scope: !2931)
!2936 = !DILocation(line: 179, column: 17, scope: !2931)
!2937 = !DILocation(line: 180, column: 3, scope: !2931)
!2938 = !DILocation(line: 181, column: 2, scope: !2898)
!2939 = !DILocation(line: 167, column: 45, scope: !2895)
!2940 = !DILocation(line: 167, column: 50, scope: !2895)
!2941 = !DILocation(line: 167, column: 44, scope: !2895)
!2942 = !DILocation(line: 167, column: 2, scope: !2895)
!2943 = distinct !{!2943, !2896, !2944}
!2944 = !DILocation(line: 181, column: 2, scope: !2889)
!2945 = !DILocation(line: 193, column: 1, scope: !2845)
!2946 = distinct !DISubprogram(name: "makeraytree_object", scope: !3, file: !3, line: 223, type: !2947, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{!2382, !2526, !2522}
!2949 = !DILocalVariable(name: "re", arg: 1, scope: !2946, file: !3, line: 223, type: !2526)
!2950 = !DILocation(line: 223, column: 39, scope: !2946)
!2951 = !DILocalVariable(name: "obi", arg: 2, scope: !2946, file: !3, line: 223, type: !2522)
!2952 = !DILocation(line: 223, column: 62, scope: !2946)
!2953 = !DILocalVariable(name: "obr", scope: !2946, file: !3, line: 229, type: !61)
!2954 = !DILocation(line: 229, column: 13, scope: !2946)
!2955 = !DILocation(line: 229, column: 19, scope: !2946)
!2956 = !DILocation(line: 229, column: 24, scope: !2946)
!2957 = !DILocation(line: 231, column: 6, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 231, column: 6)
!2959 = !DILocation(line: 231, column: 11, scope: !2958)
!2960 = !DILocation(line: 231, column: 19, scope: !2958)
!2961 = !DILocation(line: 231, column: 6, scope: !2946)
!2962 = !DILocalVariable(name: "raytree", scope: !2963, file: !3, line: 232, type: !2395)
!2963 = distinct !DILexicalBlock(scope: !2958, file: !3, line: 231, column: 28)
!2964 = !DILocation(line: 232, column: 14, scope: !2963)
!2965 = !DILocalVariable(name: "face", scope: !2963, file: !3, line: 233, type: !2517)
!2966 = !DILocation(line: 233, column: 12, scope: !2963)
!2967 = !DILocalVariable(name: "vlakprimitive", scope: !2963, file: !3, line: 234, type: !48)
!2968 = !DILocation(line: 234, column: 18, scope: !2963)
!2969 = !DILocalVariable(name: "v", scope: !2963, file: !3, line: 235, type: !8)
!2970 = !DILocation(line: 235, column: 7, scope: !2963)
!2971 = !DILocalVariable(name: "faces", scope: !2963, file: !3, line: 238, type: !8)
!2972 = !DILocation(line: 238, column: 7, scope: !2963)
!2973 = !DILocation(line: 239, column: 9, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2963, file: !3, line: 239, column: 3)
!2975 = !DILocation(line: 239, column: 8, scope: !2974)
!2976 = !DILocation(line: 239, column: 12, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 239, column: 3)
!2978 = !DILocation(line: 239, column: 14, scope: !2977)
!2979 = !DILocation(line: 239, column: 19, scope: !2977)
!2980 = !DILocation(line: 239, column: 13, scope: !2977)
!2981 = !DILocation(line: 239, column: 3, scope: !2974)
!2982 = !DILocalVariable(name: "vlr", scope: !2983, file: !3, line: 240, type: !2524)
!2983 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 239, column: 32)
!2984 = !DILocation(line: 240, column: 13, scope: !2983)
!2985 = !DILocation(line: 240, column: 19, scope: !2983)
!2986 = !DILocation(line: 240, column: 24, scope: !2983)
!2987 = !DILocation(line: 240, column: 34, scope: !2983)
!2988 = !DILocation(line: 240, column: 35, scope: !2983)
!2989 = !DILocation(line: 240, column: 40, scope: !2983)
!2990 = !DILocation(line: 240, column: 48, scope: !2983)
!2991 = !DILocation(line: 240, column: 49, scope: !2983)
!2992 = !DILocation(line: 240, column: 45, scope: !2983)
!2993 = !DILocation(line: 241, column: 28, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2983, file: !3, line: 241, column: 8)
!2995 = !DILocation(line: 241, column: 32, scope: !2994)
!2996 = !DILocation(line: 241, column: 8, scope: !2994)
!2997 = !DILocation(line: 241, column: 8, scope: !2983)
!2998 = !DILocation(line: 242, column: 10, scope: !2994)
!2999 = !DILocation(line: 242, column: 5, scope: !2994)
!3000 = !DILocation(line: 243, column: 3, scope: !2983)
!3001 = !DILocation(line: 239, column: 28, scope: !2977)
!3002 = !DILocation(line: 239, column: 3, scope: !2977)
!3003 = distinct !{!3003, !2981, !3004}
!3004 = !DILocation(line: 243, column: 3, scope: !2974)
!3005 = !DILocation(line: 245, column: 7, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !2963, file: !3, line: 245, column: 7)
!3007 = !DILocation(line: 245, column: 13, scope: !3006)
!3008 = !DILocation(line: 245, column: 7, scope: !2963)
!3009 = !DILocation(line: 246, column: 4, scope: !3006)
!3010 = !DILocation(line: 249, column: 31, scope: !2963)
!3011 = !DILocation(line: 249, column: 36, scope: !2963)
!3012 = !DILocation(line: 249, column: 40, scope: !2963)
!3013 = !DILocation(line: 249, column: 42, scope: !2963)
!3014 = !DILocation(line: 249, column: 62, scope: !2963)
!3015 = !DILocation(line: 249, column: 13, scope: !2963)
!3016 = !DILocation(line: 249, column: 11, scope: !2963)
!3017 = !DILocation(line: 250, column: 10, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !2963, file: !3, line: 250, column: 9)
!3019 = !DILocation(line: 250, column: 14, scope: !3018)
!3020 = !DILocation(line: 250, column: 16, scope: !3018)
!3021 = !DILocation(line: 250, column: 33, scope: !3018)
!3022 = !DILocation(line: 250, column: 9, scope: !2963)
!3023 = !DILocation(line: 251, column: 58, scope: !3018)
!3024 = !DILocation(line: 251, column: 70, scope: !3018)
!3025 = !DILocation(line: 251, column: 76, scope: !3018)
!3026 = !DILocation(line: 251, column: 41, scope: !3018)
!3027 = !DILocation(line: 251, column: 20, scope: !3018)
!3028 = !DILocation(line: 251, column: 25, scope: !3018)
!3029 = !DILocation(line: 251, column: 39, scope: !3018)
!3030 = !DILocation(line: 251, column: 18, scope: !3018)
!3031 = !DILocation(line: 251, column: 4, scope: !3018)
!3032 = !DILocation(line: 253, column: 38, scope: !3018)
!3033 = !DILocation(line: 253, column: 50, scope: !3018)
!3034 = !DILocation(line: 253, column: 56, scope: !3018)
!3035 = !DILocation(line: 253, column: 27, scope: !3018)
!3036 = !DILocation(line: 253, column: 11, scope: !3018)
!3037 = !DILocation(line: 253, column: 16, scope: !3018)
!3038 = !DILocation(line: 253, column: 25, scope: !3018)
!3039 = !DILocation(line: 253, column: 9, scope: !3018)
!3040 = !DILocation(line: 255, column: 17, scope: !2963)
!3041 = !DILocation(line: 255, column: 3, scope: !2963)
!3042 = !DILocation(line: 255, column: 8, scope: !2963)
!3043 = !DILocation(line: 255, column: 15, scope: !2963)
!3044 = !DILocation(line: 257, column: 9, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !2963, file: !3, line: 257, column: 3)
!3046 = !DILocation(line: 257, column: 8, scope: !3045)
!3047 = !DILocation(line: 257, column: 12, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 257, column: 3)
!3049 = !DILocation(line: 257, column: 14, scope: !3048)
!3050 = !DILocation(line: 257, column: 19, scope: !3048)
!3051 = !DILocation(line: 257, column: 13, scope: !3048)
!3052 = !DILocation(line: 257, column: 3, scope: !3045)
!3053 = !DILocalVariable(name: "vlr", scope: !3054, file: !3, line: 258, type: !2524)
!3054 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 257, column: 32)
!3055 = !DILocation(line: 258, column: 13, scope: !3054)
!3056 = !DILocation(line: 258, column: 19, scope: !3054)
!3057 = !DILocation(line: 258, column: 24, scope: !3054)
!3058 = !DILocation(line: 258, column: 34, scope: !3054)
!3059 = !DILocation(line: 258, column: 35, scope: !3054)
!3060 = !DILocation(line: 258, column: 40, scope: !3054)
!3061 = !DILocation(line: 258, column: 48, scope: !3054)
!3062 = !DILocation(line: 258, column: 49, scope: !3054)
!3063 = !DILocation(line: 258, column: 45, scope: !3054)
!3064 = !DILocation(line: 259, column: 28, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 259, column: 8)
!3066 = !DILocation(line: 259, column: 32, scope: !3065)
!3067 = !DILocation(line: 259, column: 8, scope: !3065)
!3068 = !DILocation(line: 259, column: 8, scope: !3054)
!3069 = !DILocation(line: 260, column: 10, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3071, file: !3, line: 260, column: 9)
!3071 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 259, column: 38)
!3072 = !DILocation(line: 260, column: 14, scope: !3070)
!3073 = !DILocation(line: 260, column: 16, scope: !3070)
!3074 = !DILocation(line: 260, column: 33, scope: !3070)
!3075 = !DILocation(line: 260, column: 9, scope: !3071)
!3076 = !DILocation(line: 261, column: 23, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 260, column: 65)
!3078 = !DILocation(line: 261, column: 59, scope: !3077)
!3079 = !DILocation(line: 261, column: 74, scope: !3077)
!3080 = !DILocation(line: 261, column: 79, scope: !3077)
!3081 = !DILocation(line: 261, column: 32, scope: !3077)
!3082 = !DILocation(line: 261, column: 6, scope: !3077)
!3083 = !DILocation(line: 262, column: 19, scope: !3077)
!3084 = !DILocation(line: 263, column: 5, scope: !3077)
!3085 = !DILocation(line: 265, column: 27, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 264, column: 10)
!3087 = !DILocation(line: 265, column: 33, scope: !3086)
!3088 = !DILocation(line: 265, column: 38, scope: !3086)
!3089 = !DILocation(line: 265, column: 6, scope: !3086)
!3090 = !DILocation(line: 266, column: 23, scope: !3086)
!3091 = !DILocation(line: 266, column: 32, scope: !3086)
!3092 = !DILocation(line: 266, column: 6, scope: !3086)
!3093 = !DILocation(line: 267, column: 10, scope: !3086)
!3094 = !DILocation(line: 269, column: 4, scope: !3071)
!3095 = !DILocation(line: 270, column: 3, scope: !3054)
!3096 = !DILocation(line: 257, column: 28, scope: !3048)
!3097 = !DILocation(line: 257, column: 3, scope: !3048)
!3098 = distinct !{!3098, !3052, !3099}
!3099 = !DILocation(line: 270, column: 3, scope: !3045)
!3100 = !DILocation(line: 271, column: 21, scope: !2963)
!3101 = !DILocation(line: 271, column: 3, scope: !2963)
!3102 = !DILocation(line: 274, column: 18, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !2963, file: !3, line: 274, column: 7)
!3104 = !DILocation(line: 274, column: 7, scope: !3103)
!3105 = !DILocation(line: 274, column: 7, scope: !2963)
!3106 = !DILocation(line: 275, column: 22, scope: !3103)
!3107 = !DILocation(line: 275, column: 4, scope: !3103)
!3108 = !DILocation(line: 277, column: 18, scope: !3103)
!3109 = !DILocation(line: 277, column: 4, scope: !3103)
!3110 = !DILocation(line: 277, column: 9, scope: !3103)
!3111 = !DILocation(line: 277, column: 16, scope: !3103)
!3112 = !DILocation(line: 278, column: 2, scope: !2963)
!3113 = !DILocation(line: 280, column: 6, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 280, column: 6)
!3115 = !DILocation(line: 280, column: 11, scope: !3114)
!3116 = !DILocation(line: 280, column: 6, scope: !2946)
!3117 = !DILocation(line: 281, column: 8, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 281, column: 7)
!3119 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 280, column: 20)
!3120 = !DILocation(line: 281, column: 13, scope: !3118)
!3121 = !DILocation(line: 281, column: 18, scope: !3118)
!3122 = !DILocation(line: 281, column: 35, scope: !3118)
!3123 = !DILocation(line: 281, column: 38, scope: !3118)
!3124 = !DILocation(line: 281, column: 43, scope: !3118)
!3125 = !DILocation(line: 281, column: 51, scope: !3118)
!3126 = !DILocation(line: 281, column: 7, scope: !3119)
!3127 = !DILocation(line: 282, column: 4, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3118, file: !3, line: 281, column: 60)
!3129 = !DILocation(line: 282, column: 9, scope: !3128)
!3130 = !DILocation(line: 282, column: 30, scope: !3128)
!3131 = !DILocation(line: 283, column: 49, scope: !3128)
!3132 = !DILocation(line: 283, column: 54, scope: !3128)
!3133 = !DILocation(line: 283, column: 63, scope: !3128)
!3134 = !DILocation(line: 283, column: 68, scope: !3128)
!3135 = !DILocation(line: 283, column: 73, scope: !3128)
!3136 = !DILocation(line: 283, column: 78, scope: !3128)
!3137 = !DILocation(line: 283, column: 83, scope: !3128)
!3138 = !DILocation(line: 283, column: 88, scope: !3128)
!3139 = !DILocation(line: 283, column: 19, scope: !3128)
!3140 = !DILocation(line: 283, column: 4, scope: !3128)
!3141 = !DILocation(line: 283, column: 9, scope: !3128)
!3142 = !DILocation(line: 283, column: 17, scope: !3128)
!3143 = !DILocation(line: 284, column: 3, scope: !3128)
!3144 = !DILocation(line: 285, column: 2, scope: !3119)
!3145 = !DILocation(line: 287, column: 6, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 287, column: 6)
!3147 = !DILocation(line: 287, column: 11, scope: !3146)
!3148 = !DILocation(line: 287, column: 6, scope: !2946)
!3149 = !DILocation(line: 287, column: 27, scope: !3146)
!3150 = !DILocation(line: 287, column: 32, scope: !3146)
!3151 = !DILocation(line: 287, column: 20, scope: !3146)
!3152 = !DILocation(line: 288, column: 9, scope: !2946)
!3153 = !DILocation(line: 288, column: 14, scope: !2946)
!3154 = !DILocation(line: 288, column: 19, scope: !2946)
!3155 = !DILocation(line: 288, column: 2, scope: !2946)
!3156 = !DILocation(line: 289, column: 1, scope: !2946)
!3157 = distinct !DISubprogram(name: "is_raytraceable_vlr", scope: !3, file: !3, line: 195, type: !3158, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{!8, !2526, !2524}
!3160 = !DILocalVariable(name: "re", arg: 1, scope: !3157, file: !3, line: 195, type: !2526)
!3161 = !DILocation(line: 195, column: 40, scope: !3157)
!3162 = !DILocalVariable(name: "vlr", arg: 2, scope: !3157, file: !3, line: 195, type: !2524)
!3163 = !DILocation(line: 195, column: 53, scope: !3157)
!3164 = !DILocation(line: 198, column: 7, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3157, file: !3, line: 198, column: 6)
!3166 = !DILocation(line: 198, column: 11, scope: !3165)
!3167 = !DILocation(line: 198, column: 16, scope: !3165)
!3168 = !DILocation(line: 198, column: 32, scope: !3165)
!3169 = !DILocation(line: 198, column: 36, scope: !3165)
!3170 = !DILocation(line: 198, column: 41, scope: !3165)
!3171 = !DILocation(line: 198, column: 46, scope: !3165)
!3172 = !DILocation(line: 198, column: 60, scope: !3165)
!3173 = !DILocation(line: 198, column: 64, scope: !3165)
!3174 = !DILocation(line: 198, column: 69, scope: !3165)
!3175 = !DILocation(line: 198, column: 74, scope: !3165)
!3176 = !DILocation(line: 198, column: 88, scope: !3165)
!3177 = !DILocation(line: 198, column: 6, scope: !3157)
!3178 = !DILocation(line: 199, column: 7, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 199, column: 7)
!3180 = !DILocation(line: 199, column: 12, scope: !3179)
!3181 = !DILocation(line: 199, column: 17, scope: !3179)
!3182 = !DILocation(line: 199, column: 31, scope: !3179)
!3183 = !DILocation(line: 199, column: 7, scope: !3165)
!3184 = !DILocation(line: 200, column: 4, scope: !3179)
!3185 = !DILocation(line: 199, column: 34, scope: !3179)
!3186 = !DILocation(line: 201, column: 2, scope: !3157)
!3187 = !DILocation(line: 202, column: 1, scope: !3157)
!3188 = distinct !DISubprogram(name: "rayobject_create", scope: !3, file: !3, line: 133, type: !3189, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{!2395, !2526, !8, !8}
!3191 = !DILocalVariable(name: "re", arg: 1, scope: !3188, file: !3, line: 133, type: !2526)
!3192 = !DILocation(line: 133, column: 44, scope: !3188)
!3193 = !DILocalVariable(name: "type", arg: 2, scope: !3188, file: !3, line: 133, type: !8)
!3194 = !DILocation(line: 133, column: 52, scope: !3188)
!3195 = !DILocalVariable(name: "size", arg: 3, scope: !3188, file: !3, line: 133, type: !8)
!3196 = !DILocation(line: 133, column: 62, scope: !3188)
!3197 = !DILocalVariable(name: "res", scope: !3188, file: !3, line: 135, type: !2395)
!3198 = !DILocation(line: 135, column: 14, scope: !3188)
!3199 = !DILocation(line: 137, column: 28, scope: !3188)
!3200 = !DILocation(line: 137, column: 34, scope: !3188)
!3201 = !DILocation(line: 137, column: 40, scope: !3188)
!3202 = !DILocation(line: 137, column: 44, scope: !3188)
!3203 = !DILocation(line: 137, column: 46, scope: !3188)
!3204 = !DILocation(line: 137, column: 8, scope: !3188)
!3205 = !DILocation(line: 137, column: 6, scope: !3188)
!3206 = !DILocation(line: 139, column: 6, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 139, column: 6)
!3208 = !DILocation(line: 139, column: 6, scope: !3188)
!3209 = !DILocation(line: 140, column: 31, scope: !3207)
!3210 = !DILocation(line: 140, column: 36, scope: !3207)
!3211 = !DILocation(line: 140, column: 3, scope: !3207)
!3212 = !DILocation(line: 142, column: 9, scope: !3188)
!3213 = !DILocation(line: 142, column: 2, scope: !3188)
!3214 = distinct !DISubprogram(name: "test_break", scope: !3, file: !3, line: 82, type: !1045, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!3215 = !DILocalVariable(name: "data", arg: 1, scope: !3214, file: !3, line: 82, type: !47)
!3216 = !DILocation(line: 82, column: 29, scope: !3214)
!3217 = !DILocalVariable(name: "re", scope: !3214, file: !3, line: 84, type: !2526)
!3218 = !DILocation(line: 84, column: 10, scope: !3214)
!3219 = !DILocation(line: 84, column: 25, scope: !3214)
!3220 = !DILocation(line: 84, column: 15, scope: !3214)
!3221 = !DILocation(line: 85, column: 9, scope: !3214)
!3222 = !DILocation(line: 85, column: 13, scope: !3214)
!3223 = !DILocation(line: 85, column: 24, scope: !3214)
!3224 = !DILocation(line: 85, column: 28, scope: !3214)
!3225 = !DILocation(line: 85, column: 2, scope: !3214)
!3226 = distinct !DISubprogram(name: "makeraytree", scope: !3, file: !3, line: 408, type: !2846, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!3227 = !DILocalVariable(name: "re", arg: 1, scope: !3226, file: !3, line: 408, type: !2526)
!3228 = !DILocation(line: 408, column: 26, scope: !3226)
!3229 = !DILocalVariable(name: "min", scope: !3226, file: !3, line: 410, type: !206)
!3230 = !DILocation(line: 410, column: 8, scope: !3226)
!3231 = !DILocalVariable(name: "max", scope: !3226, file: !3, line: 410, type: !206)
!3232 = !DILocation(line: 410, column: 16, scope: !3226)
!3233 = !DILocalVariable(name: "sub", scope: !3226, file: !3, line: 410, type: !206)
!3234 = !DILocation(line: 410, column: 24, scope: !3226)
!3235 = !DILocalVariable(name: "i", scope: !3226, file: !3, line: 411, type: !8)
!3236 = !DILocation(line: 411, column: 6, scope: !3226)
!3237 = !DILocation(line: 413, column: 2, scope: !3226)
!3238 = !DILocation(line: 413, column: 6, scope: !3226)
!3239 = !DILocation(line: 413, column: 8, scope: !3226)
!3240 = !DILocation(line: 413, column: 16, scope: !3226)
!3241 = !DILocation(line: 414, column: 2, scope: !3226)
!3242 = !DILocation(line: 414, column: 6, scope: !3226)
!3243 = !DILocation(line: 414, column: 17, scope: !3226)
!3244 = !DILocation(line: 414, column: 21, scope: !3226)
!3245 = !DILocation(line: 414, column: 27, scope: !3226)
!3246 = !DILocation(line: 414, column: 31, scope: !3226)
!3247 = !DILocation(line: 418, column: 6, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 418, column: 6)
!3249 = !DILocation(line: 418, column: 10, scope: !3248)
!3250 = !DILocation(line: 418, column: 12, scope: !3248)
!3251 = !DILocation(line: 418, column: 31, scope: !3248)
!3252 = !DILocation(line: 418, column: 6, scope: !3226)
!3253 = !DILocation(line: 419, column: 3, scope: !3248)
!3254 = !DILocation(line: 419, column: 7, scope: !3248)
!3255 = !DILocation(line: 419, column: 9, scope: !3248)
!3256 = !DILocation(line: 419, column: 26, scope: !3248)
!3257 = !DILocation(line: 421, column: 21, scope: !3226)
!3258 = !DILocation(line: 421, column: 2, scope: !3226)
!3259 = !DILocation(line: 423, column: 17, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 423, column: 6)
!3261 = !DILocation(line: 423, column: 6, scope: !3260)
!3262 = !DILocation(line: 423, column: 6, scope: !3226)
!3263 = !DILocation(line: 424, column: 15, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 423, column: 22)
!3265 = !DILocation(line: 424, column: 3, scope: !3264)
!3266 = !DILocation(line: 426, column: 3, scope: !3264)
!3267 = !DILocation(line: 426, column: 7, scope: !3264)
!3268 = !DILocation(line: 426, column: 9, scope: !3264)
!3269 = !DILocation(line: 426, column: 17, scope: !3264)
!3270 = !DILocation(line: 427, column: 3, scope: !3264)
!3271 = !DILocation(line: 427, column: 7, scope: !3264)
!3272 = !DILocation(line: 427, column: 18, scope: !3264)
!3273 = !DILocation(line: 427, column: 22, scope: !3264)
!3274 = !DILocation(line: 427, column: 28, scope: !3264)
!3275 = !DILocation(line: 427, column: 32, scope: !3264)
!3276 = !DILocation(line: 428, column: 2, scope: !3264)
!3277 = !DILocation(line: 432, column: 3, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 432, column: 3)
!3279 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 429, column: 7)
!3280 = !DILocation(line: 433, column: 25, scope: !3279)
!3281 = !DILocation(line: 433, column: 29, scope: !3279)
!3282 = !DILocation(line: 433, column: 38, scope: !3279)
!3283 = !DILocation(line: 433, column: 43, scope: !3279)
!3284 = !DILocation(line: 433, column: 3, scope: !3279)
!3285 = !DILocation(line: 434, column: 7, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 434, column: 7)
!3287 = !DILocation(line: 434, column: 16, scope: !3286)
!3288 = !DILocation(line: 434, column: 14, scope: !3286)
!3289 = !DILocation(line: 434, column: 7, scope: !3279)
!3290 = !DILocation(line: 435, column: 12, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 434, column: 24)
!3292 = !DILocation(line: 435, column: 4, scope: !3291)
!3293 = !DILocation(line: 436, column: 12, scope: !3291)
!3294 = !DILocation(line: 436, column: 4, scope: !3291)
!3295 = !DILocation(line: 437, column: 3, scope: !3291)
!3296 = !DILocation(line: 438, column: 9, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 438, column: 3)
!3298 = !DILocation(line: 438, column: 8, scope: !3297)
!3299 = !DILocation(line: 438, column: 13, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 438, column: 3)
!3301 = !DILocation(line: 438, column: 14, scope: !3300)
!3302 = !DILocation(line: 438, column: 3, scope: !3297)
!3303 = !DILocation(line: 440, column: 8, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 438, column: 23)
!3305 = !DILocation(line: 440, column: 4, scope: !3304)
!3306 = !DILocation(line: 440, column: 11, scope: !3304)
!3307 = !DILocation(line: 441, column: 8, scope: !3304)
!3308 = !DILocation(line: 441, column: 4, scope: !3304)
!3309 = !DILocation(line: 441, column: 11, scope: !3304)
!3310 = !DILocation(line: 442, column: 17, scope: !3304)
!3311 = !DILocation(line: 442, column: 13, scope: !3304)
!3312 = !DILocation(line: 442, column: 24, scope: !3304)
!3313 = !DILocation(line: 442, column: 20, scope: !3304)
!3314 = !DILocation(line: 442, column: 19, scope: !3304)
!3315 = !DILocation(line: 442, column: 8, scope: !3304)
!3316 = !DILocation(line: 442, column: 4, scope: !3304)
!3317 = !DILocation(line: 442, column: 11, scope: !3304)
!3318 = !DILocation(line: 443, column: 3, scope: !3304)
!3319 = !DILocation(line: 438, column: 19, scope: !3300)
!3320 = !DILocation(line: 438, column: 3, scope: !3300)
!3321 = distinct !{!3321, !3302, !3322}
!3322 = !DILocation(line: 443, column: 3, scope: !3297)
!3323 = !DILocation(line: 445, column: 24, scope: !3279)
!3324 = !DILocation(line: 445, column: 17, scope: !3279)
!3325 = !DILocation(line: 445, column: 3, scope: !3279)
!3326 = !DILocation(line: 445, column: 7, scope: !3279)
!3327 = !DILocation(line: 445, column: 15, scope: !3279)
!3328 = !DILocation(line: 447, column: 3, scope: !3279)
!3329 = !DILocation(line: 447, column: 7, scope: !3279)
!3330 = !DILocation(line: 447, column: 9, scope: !3279)
!3331 = !DILocation(line: 447, column: 17, scope: !3279)
!3332 = !DILocation(line: 448, column: 3, scope: !3279)
!3333 = !DILocation(line: 448, column: 7, scope: !3279)
!3334 = !DILocation(line: 448, column: 18, scope: !3279)
!3335 = !DILocation(line: 448, column: 22, scope: !3279)
!3336 = !DILocation(line: 448, column: 28, scope: !3279)
!3337 = !DILocation(line: 448, column: 32, scope: !3279)
!3338 = !DILocation(line: 454, column: 1, scope: !3226)
!3339 = distinct !DISubprogram(name: "makeraytree_single", scope: !3, file: !3, line: 311, type: !2846, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!3340 = !DILocalVariable(name: "re", arg: 1, scope: !3339, file: !3, line: 311, type: !2526)
!3341 = !DILocation(line: 311, column: 40, scope: !3339)
!3342 = !DILocalVariable(name: "obi", scope: !3339, file: !3, line: 313, type: !2522)
!3343 = !DILocation(line: 313, column: 21, scope: !3339)
!3344 = !DILocalVariable(name: "raytree", scope: !3339, file: !3, line: 314, type: !2395)
!3345 = !DILocation(line: 314, column: 13, scope: !3339)
!3346 = !DILocalVariable(name: "face", scope: !3339, file: !3, line: 315, type: !2517)
!3347 = !DILocation(line: 315, column: 11, scope: !3339)
!3348 = !DILocalVariable(name: "vlakprimitive", scope: !3339, file: !3, line: 316, type: !48)
!3349 = !DILocation(line: 316, column: 17, scope: !3339)
!3350 = !DILocalVariable(name: "faces", scope: !3339, file: !3, line: 317, type: !8)
!3351 = !DILocation(line: 317, column: 6, scope: !3339)
!3352 = !DILocalVariable(name: "obs", scope: !3339, file: !3, line: 317, type: !8)
!3353 = !DILocation(line: 317, column: 17, scope: !3339)
!3354 = !DILocalVariable(name: "special", scope: !3339, file: !3, line: 317, type: !8)
!3355 = !DILocation(line: 317, column: 26, scope: !3339)
!3356 = !DILocation(line: 319, column: 11, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 319, column: 2)
!3358 = !DILocation(line: 319, column: 15, scope: !3357)
!3359 = !DILocation(line: 319, column: 29, scope: !3357)
!3360 = !DILocation(line: 319, column: 10, scope: !3357)
!3361 = !DILocation(line: 319, column: 7, scope: !3357)
!3362 = !DILocation(line: 319, column: 36, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 319, column: 2)
!3364 = !DILocation(line: 319, column: 2, scope: !3357)
!3365 = !DILocation(line: 320, column: 22, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 320, column: 6)
!3367 = !DILocation(line: 320, column: 26, scope: !3366)
!3368 = !DILocation(line: 320, column: 6, scope: !3366)
!3369 = !DILocation(line: 320, column: 6, scope: !3363)
!3370 = !DILocalVariable(name: "obr", scope: !3371, file: !3, line: 321, type: !61)
!3371 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 320, column: 32)
!3372 = !DILocation(line: 321, column: 14, scope: !3371)
!3373 = !DILocation(line: 321, column: 20, scope: !3371)
!3374 = !DILocation(line: 321, column: 25, scope: !3371)
!3375 = !DILocation(line: 322, column: 6, scope: !3371)
!3376 = !DILocation(line: 324, column: 29, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 324, column: 7)
!3378 = !DILocation(line: 324, column: 33, scope: !3377)
!3379 = !DILocation(line: 324, column: 7, scope: !3377)
!3380 = !DILocation(line: 324, column: 7, scope: !3371)
!3381 = !DILocation(line: 325, column: 11, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 324, column: 39)
!3383 = !DILocation(line: 326, column: 3, scope: !3382)
!3384 = !DILocalVariable(name: "v", scope: !3385, file: !3, line: 328, type: !8)
!3385 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 327, column: 8)
!3386 = !DILocation(line: 328, column: 8, scope: !3385)
!3387 = !DILocation(line: 329, column: 10, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 329, column: 4)
!3389 = !DILocation(line: 329, column: 9, scope: !3388)
!3390 = !DILocation(line: 329, column: 13, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 329, column: 4)
!3392 = !DILocation(line: 329, column: 15, scope: !3391)
!3393 = !DILocation(line: 329, column: 20, scope: !3391)
!3394 = !DILocation(line: 329, column: 14, scope: !3391)
!3395 = !DILocation(line: 329, column: 4, scope: !3388)
!3396 = !DILocalVariable(name: "vlr", scope: !3397, file: !3, line: 330, type: !2524)
!3397 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 329, column: 33)
!3398 = !DILocation(line: 330, column: 14, scope: !3397)
!3399 = !DILocation(line: 330, column: 20, scope: !3397)
!3400 = !DILocation(line: 330, column: 25, scope: !3397)
!3401 = !DILocation(line: 330, column: 35, scope: !3397)
!3402 = !DILocation(line: 330, column: 36, scope: !3397)
!3403 = !DILocation(line: 330, column: 41, scope: !3397)
!3404 = !DILocation(line: 330, column: 49, scope: !3397)
!3405 = !DILocation(line: 330, column: 50, scope: !3397)
!3406 = !DILocation(line: 330, column: 46, scope: !3397)
!3407 = !DILocation(line: 331, column: 29, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 331, column: 9)
!3409 = !DILocation(line: 331, column: 33, scope: !3408)
!3410 = !DILocation(line: 331, column: 9, scope: !3408)
!3411 = !DILocation(line: 331, column: 9, scope: !3397)
!3412 = !DILocation(line: 332, column: 11, scope: !3408)
!3413 = !DILocation(line: 332, column: 6, scope: !3408)
!3414 = !DILocation(line: 333, column: 4, scope: !3397)
!3415 = !DILocation(line: 329, column: 29, scope: !3391)
!3416 = !DILocation(line: 329, column: 4, scope: !3391)
!3417 = distinct !{!3417, !3395, !3418}
!3418 = !DILocation(line: 333, column: 4, scope: !3388)
!3419 = !DILocation(line: 335, column: 2, scope: !3371)
!3420 = !DILocation(line: 320, column: 29, scope: !3366)
!3421 = !DILocation(line: 319, column: 45, scope: !3363)
!3422 = !DILocation(line: 319, column: 50, scope: !3363)
!3423 = !DILocation(line: 319, column: 44, scope: !3363)
!3424 = !DILocation(line: 319, column: 2, scope: !3363)
!3425 = distinct !{!3425, !3364, !3426}
!3426 = !DILocation(line: 335, column: 2, scope: !3357)
!3427 = !DILocation(line: 337, column: 6, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 337, column: 6)
!3429 = !DILocation(line: 337, column: 14, scope: !3428)
!3430 = !DILocation(line: 337, column: 12, scope: !3428)
!3431 = !DILocation(line: 337, column: 22, scope: !3428)
!3432 = !DILocation(line: 337, column: 6, scope: !3339)
!3433 = !DILocation(line: 338, column: 17, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3428, file: !3, line: 337, column: 28)
!3435 = !DILocation(line: 338, column: 3, scope: !3434)
!3436 = !DILocation(line: 338, column: 7, scope: !3434)
!3437 = !DILocation(line: 338, column: 15, scope: !3434)
!3438 = !DILocation(line: 339, column: 3, scope: !3434)
!3439 = !DILocation(line: 343, column: 44, scope: !3339)
!3440 = !DILocation(line: 343, column: 48, scope: !3339)
!3441 = !DILocation(line: 343, column: 52, scope: !3339)
!3442 = !DILocation(line: 343, column: 54, scope: !3339)
!3443 = !DILocation(line: 343, column: 74, scope: !3339)
!3444 = !DILocation(line: 343, column: 80, scope: !3339)
!3445 = !DILocation(line: 343, column: 79, scope: !3339)
!3446 = !DILocation(line: 343, column: 26, scope: !3339)
!3447 = !DILocation(line: 343, column: 12, scope: !3339)
!3448 = !DILocation(line: 343, column: 16, scope: !3339)
!3449 = !DILocation(line: 343, column: 24, scope: !3339)
!3450 = !DILocation(line: 343, column: 10, scope: !3339)
!3451 = !DILocation(line: 345, column: 8, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 345, column: 7)
!3453 = !DILocation(line: 345, column: 12, scope: !3452)
!3454 = !DILocation(line: 345, column: 14, scope: !3452)
!3455 = !DILocation(line: 345, column: 31, scope: !3452)
!3456 = !DILocation(line: 345, column: 7, scope: !3339)
!3457 = !DILocation(line: 346, column: 56, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 345, column: 64)
!3459 = !DILocation(line: 346, column: 68, scope: !3458)
!3460 = !DILocation(line: 346, column: 74, scope: !3458)
!3461 = !DILocation(line: 346, column: 39, scope: !3458)
!3462 = !DILocation(line: 346, column: 19, scope: !3458)
!3463 = !DILocation(line: 346, column: 23, scope: !3458)
!3464 = !DILocation(line: 346, column: 37, scope: !3458)
!3465 = !DILocation(line: 346, column: 17, scope: !3458)
!3466 = !DILocation(line: 347, column: 2, scope: !3458)
!3467 = !DILocation(line: 349, column: 36, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 348, column: 7)
!3469 = !DILocation(line: 349, column: 48, scope: !3468)
!3470 = !DILocation(line: 349, column: 54, scope: !3468)
!3471 = !DILocation(line: 349, column: 25, scope: !3468)
!3472 = !DILocation(line: 349, column: 10, scope: !3468)
!3473 = !DILocation(line: 349, column: 14, scope: !3468)
!3474 = !DILocation(line: 349, column: 23, scope: !3468)
!3475 = !DILocation(line: 349, column: 8, scope: !3468)
!3476 = !DILocation(line: 352, column: 11, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 352, column: 2)
!3478 = !DILocation(line: 352, column: 15, scope: !3477)
!3479 = !DILocation(line: 352, column: 29, scope: !3477)
!3480 = !DILocation(line: 352, column: 10, scope: !3477)
!3481 = !DILocation(line: 352, column: 7, scope: !3477)
!3482 = !DILocation(line: 352, column: 36, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 352, column: 2)
!3484 = !DILocation(line: 352, column: 2, scope: !3477)
!3485 = !DILocation(line: 353, column: 22, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 353, column: 6)
!3487 = !DILocation(line: 353, column: 26, scope: !3486)
!3488 = !DILocation(line: 353, column: 6, scope: !3486)
!3489 = !DILocation(line: 353, column: 6, scope: !3483)
!3490 = !DILocation(line: 354, column: 18, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 354, column: 7)
!3492 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 353, column: 32)
!3493 = !DILocation(line: 354, column: 7, scope: !3491)
!3494 = !DILocation(line: 354, column: 7, scope: !3492)
!3495 = !DILocation(line: 355, column: 4, scope: !3491)
!3496 = !DILocation(line: 357, column: 29, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 357, column: 7)
!3498 = !DILocation(line: 357, column: 33, scope: !3497)
!3499 = !DILocation(line: 357, column: 7, scope: !3497)
!3500 = !DILocation(line: 357, column: 7, scope: !3492)
!3501 = !DILocalVariable(name: "obj", scope: !3502, file: !3, line: 358, type: !2395)
!3502 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 357, column: 39)
!3503 = !DILocation(line: 358, column: 15, scope: !3502)
!3504 = !DILocation(line: 358, column: 40, scope: !3502)
!3505 = !DILocation(line: 358, column: 44, scope: !3502)
!3506 = !DILocation(line: 358, column: 21, scope: !3502)
!3507 = !DILocation(line: 360, column: 19, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3502, file: !3, line: 360, column: 8)
!3509 = !DILocation(line: 360, column: 8, scope: !3508)
!3510 = !DILocation(line: 360, column: 8, scope: !3502)
!3511 = !DILocation(line: 361, column: 5, scope: !3508)
!3512 = !DILocation(line: 363, column: 8, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3502, file: !3, line: 363, column: 8)
!3514 = !DILocation(line: 363, column: 8, scope: !3502)
!3515 = !DILocation(line: 364, column: 22, scope: !3513)
!3516 = !DILocation(line: 364, column: 26, scope: !3513)
!3517 = !DILocation(line: 364, column: 35, scope: !3513)
!3518 = !DILocation(line: 364, column: 5, scope: !3513)
!3519 = !DILocation(line: 365, column: 3, scope: !3502)
!3520 = !DILocalVariable(name: "v", scope: !3521, file: !3, line: 367, type: !8)
!3521 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 366, column: 8)
!3522 = !DILocation(line: 367, column: 8, scope: !3521)
!3523 = !DILocalVariable(name: "obr", scope: !3521, file: !3, line: 368, type: !61)
!3524 = !DILocation(line: 368, column: 15, scope: !3521)
!3525 = !DILocation(line: 368, column: 21, scope: !3521)
!3526 = !DILocation(line: 368, column: 26, scope: !3521)
!3527 = !DILocation(line: 370, column: 8, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 370, column: 8)
!3529 = !DILocation(line: 370, column: 13, scope: !3528)
!3530 = !DILocation(line: 370, column: 18, scope: !3528)
!3531 = !DILocation(line: 370, column: 8, scope: !3521)
!3532 = !DILocation(line: 371, column: 5, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 370, column: 35)
!3534 = !DILocation(line: 371, column: 10, scope: !3533)
!3535 = !DILocation(line: 371, column: 31, scope: !3533)
!3536 = !DILocation(line: 372, column: 4, scope: !3533)
!3537 = !DILocation(line: 374, column: 10, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 374, column: 4)
!3539 = !DILocation(line: 374, column: 9, scope: !3538)
!3540 = !DILocation(line: 374, column: 13, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 374, column: 4)
!3542 = !DILocation(line: 374, column: 15, scope: !3541)
!3543 = !DILocation(line: 374, column: 20, scope: !3541)
!3544 = !DILocation(line: 374, column: 14, scope: !3541)
!3545 = !DILocation(line: 374, column: 4, scope: !3538)
!3546 = !DILocalVariable(name: "vlr", scope: !3547, file: !3, line: 375, type: !2524)
!3547 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 374, column: 33)
!3548 = !DILocation(line: 375, column: 14, scope: !3547)
!3549 = !DILocation(line: 375, column: 20, scope: !3547)
!3550 = !DILocation(line: 375, column: 25, scope: !3547)
!3551 = !DILocation(line: 375, column: 35, scope: !3547)
!3552 = !DILocation(line: 375, column: 36, scope: !3547)
!3553 = !DILocation(line: 375, column: 41, scope: !3547)
!3554 = !DILocation(line: 375, column: 49, scope: !3547)
!3555 = !DILocation(line: 375, column: 50, scope: !3547)
!3556 = !DILocation(line: 375, column: 46, scope: !3547)
!3557 = !DILocation(line: 376, column: 29, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 376, column: 9)
!3559 = !DILocation(line: 376, column: 33, scope: !3558)
!3560 = !DILocation(line: 376, column: 9, scope: !3558)
!3561 = !DILocation(line: 376, column: 9, scope: !3547)
!3562 = !DILocation(line: 377, column: 11, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3564, file: !3, line: 377, column: 10)
!3564 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 376, column: 39)
!3565 = !DILocation(line: 377, column: 15, scope: !3563)
!3566 = !DILocation(line: 377, column: 17, scope: !3563)
!3567 = !DILocation(line: 377, column: 34, scope: !3563)
!3568 = !DILocation(line: 377, column: 10, scope: !3564)
!3569 = !DILocalVariable(name: "obj", scope: !3570, file: !3, line: 378, type: !2395)
!3570 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 377, column: 66)
!3571 = !DILocation(line: 378, column: 18, scope: !3570)
!3572 = !DILocation(line: 378, column: 52, scope: !3570)
!3573 = !DILocation(line: 378, column: 67, scope: !3570)
!3574 = !DILocation(line: 378, column: 72, scope: !3570)
!3575 = !DILocation(line: 378, column: 24, scope: !3570)
!3576 = !DILocation(line: 379, column: 24, scope: !3570)
!3577 = !DILocation(line: 379, column: 33, scope: !3570)
!3578 = !DILocation(line: 379, column: 7, scope: !3570)
!3579 = !DILocation(line: 380, column: 20, scope: !3570)
!3580 = !DILocation(line: 381, column: 6, scope: !3570)
!3581 = !DILocation(line: 383, column: 28, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 382, column: 11)
!3583 = !DILocation(line: 383, column: 34, scope: !3582)
!3584 = !DILocation(line: 383, column: 39, scope: !3582)
!3585 = !DILocation(line: 383, column: 7, scope: !3582)
!3586 = !DILocation(line: 384, column: 12, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3582, file: !3, line: 384, column: 11)
!3588 = !DILocation(line: 384, column: 17, scope: !3587)
!3589 = !DILocation(line: 384, column: 22, scope: !3587)
!3590 = !DILocation(line: 384, column: 11, scope: !3582)
!3591 = !DILocation(line: 385, column: 18, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 384, column: 40)
!3593 = !DILocation(line: 385, column: 23, scope: !3592)
!3594 = !DILocation(line: 385, column: 28, scope: !3592)
!3595 = !DILocation(line: 385, column: 34, scope: !3592)
!3596 = !DILocation(line: 385, column: 8, scope: !3592)
!3597 = !DILocation(line: 386, column: 18, scope: !3592)
!3598 = !DILocation(line: 386, column: 23, scope: !3592)
!3599 = !DILocation(line: 386, column: 28, scope: !3592)
!3600 = !DILocation(line: 386, column: 34, scope: !3592)
!3601 = !DILocation(line: 386, column: 8, scope: !3592)
!3602 = !DILocation(line: 387, column: 18, scope: !3592)
!3603 = !DILocation(line: 387, column: 23, scope: !3592)
!3604 = !DILocation(line: 387, column: 28, scope: !3592)
!3605 = !DILocation(line: 387, column: 34, scope: !3592)
!3606 = !DILocation(line: 387, column: 8, scope: !3592)
!3607 = !DILocation(line: 388, column: 12, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 388, column: 12)
!3609 = !DILocation(line: 388, column: 12, scope: !3592)
!3610 = !DILocation(line: 389, column: 19, scope: !3608)
!3611 = !DILocation(line: 389, column: 24, scope: !3608)
!3612 = !DILocation(line: 389, column: 29, scope: !3608)
!3613 = !DILocation(line: 389, column: 35, scope: !3608)
!3614 = !DILocation(line: 389, column: 9, scope: !3608)
!3615 = !DILocation(line: 390, column: 7, scope: !3592)
!3616 = !DILocation(line: 392, column: 24, scope: !3582)
!3617 = !DILocation(line: 392, column: 33, scope: !3582)
!3618 = !DILocation(line: 392, column: 7, scope: !3582)
!3619 = !DILocation(line: 393, column: 11, scope: !3582)
!3620 = !DILocation(line: 395, column: 5, scope: !3564)
!3621 = !DILocation(line: 396, column: 4, scope: !3547)
!3622 = !DILocation(line: 374, column: 29, scope: !3541)
!3623 = !DILocation(line: 374, column: 4, scope: !3541)
!3624 = distinct !{!3624, !3545, !3625}
!3625 = !DILocation(line: 396, column: 4, scope: !3538)
!3626 = !DILocation(line: 398, column: 2, scope: !3492)
!3627 = !DILocation(line: 353, column: 29, scope: !3486)
!3628 = !DILocation(line: 352, column: 45, scope: !3483)
!3629 = !DILocation(line: 352, column: 50, scope: !3483)
!3630 = !DILocation(line: 352, column: 44, scope: !3483)
!3631 = !DILocation(line: 352, column: 2, scope: !3483)
!3632 = distinct !{!3632, !3484, !3633}
!3633 = !DILocation(line: 398, column: 2, scope: !3477)
!3634 = !DILocation(line: 400, column: 18, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 400, column: 6)
!3636 = !DILocation(line: 400, column: 7, scope: !3635)
!3637 = !DILocation(line: 400, column: 6, scope: !3339)
!3638 = !DILocation(line: 401, column: 3, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 400, column: 23)
!3640 = !DILocation(line: 401, column: 7, scope: !3639)
!3641 = !DILocation(line: 401, column: 9, scope: !3639)
!3642 = !DILocation(line: 401, column: 17, scope: !3639)
!3643 = !DILocation(line: 402, column: 3, scope: !3639)
!3644 = !DILocation(line: 402, column: 7, scope: !3639)
!3645 = !DILocation(line: 402, column: 18, scope: !3639)
!3646 = !DILocation(line: 402, column: 22, scope: !3639)
!3647 = !DILocation(line: 402, column: 28, scope: !3639)
!3648 = !DILocation(line: 402, column: 32, scope: !3639)
!3649 = !DILocation(line: 404, column: 21, scope: !3639)
!3650 = !DILocation(line: 404, column: 3, scope: !3639)
!3651 = !DILocation(line: 405, column: 2, scope: !3639)
!3652 = !DILocation(line: 406, column: 1, scope: !3339)
!3653 = distinct !DISubprogram(name: "zero_v3", scope: !3654, file: !3654, line: 43, type: !3655, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!3654 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3655 = !DISubroutineType(types: !3656)
!3656 = !{null, !6}
!3657 = !DILocalVariable(name: "r", arg: 1, scope: !3653, file: !3654, line: 43, type: !6)
!3658 = !DILocation(line: 43, column: 28, scope: !3653)
!3659 = !DILocation(line: 45, column: 2, scope: !3653)
!3660 = !DILocation(line: 45, column: 7, scope: !3653)
!3661 = !DILocation(line: 46, column: 2, scope: !3653)
!3662 = !DILocation(line: 46, column: 7, scope: !3653)
!3663 = !DILocation(line: 47, column: 2, scope: !3653)
!3664 = !DILocation(line: 47, column: 7, scope: !3653)
!3665 = !DILocation(line: 48, column: 1, scope: !3653)
!3666 = distinct !DISubprogram(name: "len_v3", scope: !3654, file: !3654, line: 714, type: !3667, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!7, !3669}
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 64)
!3670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3671 = !DILocalVariable(name: "a", arg: 1, scope: !3666, file: !3654, line: 714, type: !3669)
!3672 = !DILocation(line: 714, column: 34, scope: !3666)
!3673 = !DILocation(line: 716, column: 24, scope: !3666)
!3674 = !DILocation(line: 716, column: 27, scope: !3666)
!3675 = !DILocation(line: 716, column: 15, scope: !3666)
!3676 = !DILocation(line: 716, column: 9, scope: !3666)
!3677 = !DILocation(line: 716, column: 2, scope: !3666)
!3678 = distinct !DISubprogram(name: "shade_ray", scope: !3, file: !3, line: 499, type: !3679, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{null, !3681, !3683, !3824}
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_typedef, name: "Isect", file: !2399, line: 104, baseType: !2398)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInput", file: !2372, line: 186, baseType: !3685)
!3685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInput", file: !2372, line: 98, size: 11776, elements: !3686)
!3686 = !{!3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3768, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3685, file: !2372, line: 102, baseType: !264, size: 64)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "vlr", scope: !3685, file: !2372, line: 103, baseType: !2220, size: 64, offset: 64)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !3685, file: !2372, line: 104, baseType: !2260, size: 64, offset: 128)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !3685, file: !2372, line: 105, baseType: !54, size: 64, offset: 192)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !3685, file: !2372, line: 106, baseType: !66, size: 64, offset: 256)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !3685, file: !2372, line: 107, baseType: !8, size: 32, offset: 320)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "facenor", scope: !3685, file: !2372, line: 108, baseType: !206, size: 96, offset: 352)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "flippednor", scope: !3685, file: !2372, line: 109, baseType: !107, size: 16, offset: 448)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3685, file: !2372, line: 110, baseType: !2200, size: 64, offset: 512)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3685, file: !2372, line: 110, baseType: !2200, size: 64, offset: 576)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3685, file: !2372, line: 110, baseType: !2200, size: 64, offset: 640)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !3685, file: !2372, line: 111, baseType: !107, size: 16, offset: 704)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !3685, file: !2372, line: 111, baseType: !107, size: 16, offset: 720)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "i3", scope: !3685, file: !2372, line: 111, baseType: !107, size: 16, offset: 736)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !3685, file: !2372, line: 112, baseType: !107, size: 16, offset: 752)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "osatex", scope: !3685, file: !2372, line: 113, baseType: !107, size: 16, offset: 768)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "vn", scope: !3685, file: !2372, line: 114, baseType: !206, size: 96, offset: 800)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "vno", scope: !3685, file: !2372, line: 114, baseType: !206, size: 96, offset: 896)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "n1", scope: !3685, file: !2372, line: 115, baseType: !206, size: 96, offset: 992)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !3685, file: !2372, line: 115, baseType: !206, size: 96, offset: 1088)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "n3", scope: !3685, file: !2372, line: 115, baseType: !206, size: 96, offset: 1184)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3685, file: !2372, line: 116, baseType: !8, size: 32, offset: 1280)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !3685, file: !2372, line: 116, baseType: !8, size: 32, offset: 1312)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !3685, file: !2372, line: 119, baseType: !7, size: 32, offset: 1344)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3685, file: !2372, line: 119, baseType: !7, size: 32, offset: 1376)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "dx_u", scope: !3685, file: !2372, line: 119, baseType: !7, size: 32, offset: 1408)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "dx_v", scope: !3685, file: !2372, line: 119, baseType: !7, size: 32, offset: 1440)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "dy_u", scope: !3685, file: !2372, line: 119, baseType: !7, size: 32, offset: 1472)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "dy_v", scope: !3685, file: !2372, line: 119, baseType: !7, size: 32, offset: 1504)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3685, file: !2372, line: 120, baseType: !206, size: 96, offset: 1536)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3685, file: !2372, line: 120, baseType: !206, size: 96, offset: 1632)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "camera_co", scope: !3685, file: !2372, line: 120, baseType: !206, size: 96, offset: 1728)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3685, file: !2372, line: 124, baseType: !7, size: 32, offset: 1824)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3685, file: !2372, line: 124, baseType: !7, size: 32, offset: 1856)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3685, file: !2372, line: 124, baseType: !7, size: 32, offset: 1888)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !3685, file: !2372, line: 125, baseType: !7, size: 32, offset: 1920)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !3685, file: !2372, line: 125, baseType: !7, size: 32, offset: 1952)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !3685, file: !2372, line: 125, baseType: !7, size: 32, offset: 1984)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !3685, file: !2372, line: 126, baseType: !7, size: 32, offset: 2016)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !3685, file: !2372, line: 126, baseType: !7, size: 32, offset: 2048)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !3685, file: !2372, line: 126, baseType: !7, size: 32, offset: 2080)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !3685, file: !2372, line: 127, baseType: !7, size: 32, offset: 2112)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !3685, file: !2372, line: 127, baseType: !7, size: 32, offset: 2144)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !3685, file: !2372, line: 127, baseType: !7, size: 32, offset: 2176)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !3685, file: !2372, line: 129, baseType: !7, size: 32, offset: 2208)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !3685, file: !2372, line: 129, baseType: !7, size: 32, offset: 2240)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !3685, file: !2372, line: 129, baseType: !7, size: 32, offset: 2272)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !3685, file: !2372, line: 129, baseType: !7, size: 32, offset: 2304)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !3685, file: !2372, line: 129, baseType: !7, size: 32, offset: 2336)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !3685, file: !2372, line: 130, baseType: !7, size: 32, offset: 2368)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !3685, file: !2372, line: 130, baseType: !7, size: 32, offset: 2400)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !3685, file: !2372, line: 130, baseType: !7, size: 32, offset: 2432)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !3685, file: !2372, line: 130, baseType: !7, size: 32, offset: 2464)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !3685, file: !2372, line: 130, baseType: !7, size: 32, offset: 2496)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !3685, file: !2372, line: 131, baseType: !7, size: 32, offset: 2528)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !3685, file: !2372, line: 135, baseType: !8, size: 32, offset: 2560)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !3685, file: !2372, line: 138, baseType: !206, size: 96, offset: 2592)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "gl", scope: !3685, file: !2372, line: 138, baseType: !206, size: 96, offset: 2688)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3685, file: !2372, line: 138, baseType: !206, size: 96, offset: 2784)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !3685, file: !2372, line: 138, baseType: !206, size: 96, offset: 2880)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "winco", scope: !3685, file: !2372, line: 138, baseType: !206, size: 96, offset: 2976)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "vcol", scope: !3685, file: !2372, line: 138, baseType: !381, size: 128, offset: 3072)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "refcol", scope: !3685, file: !2372, line: 139, baseType: !381, size: 128, offset: 3200)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "displace", scope: !3685, file: !2372, line: 139, baseType: !206, size: 96, offset: 3328)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !3685, file: !2372, line: 140, baseType: !7, size: 32, offset: 3424)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !3685, file: !2372, line: 140, baseType: !206, size: 96, offset: 3456)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "nmapnorm", scope: !3685, file: !2372, line: 140, baseType: !206, size: 96, offset: 3552)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "nmaptang", scope: !3685, file: !2372, line: 140, baseType: !381, size: 128, offset: 3648)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !3685, file: !2372, line: 140, baseType: !7, size: 32, offset: 3776)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !3685, file: !2372, line: 140, baseType: !381, size: 128, offset: 3808)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "duplilo", scope: !3685, file: !2372, line: 141, baseType: !206, size: 96, offset: 3936)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !3685, file: !2372, line: 141, baseType: !206, size: 96, offset: 4032)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3685, file: !2372, line: 143, baseType: !3760, size: 3072, offset: 4160)
!3760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3761, size: 3072, elements: !1242)
!3761 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputUV", file: !2372, line: 90, baseType: !3762)
!3762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputUV", file: !2372, line: 87, size: 384, elements: !3763)
!3763 = !{!3764, !3765, !3766, !3767}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "dxuv", scope: !3762, file: !2372, line: 88, baseType: !206, size: 96)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "dyuv", scope: !3762, file: !2372, line: 88, baseType: !206, size: 96, offset: 96)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3762, file: !2372, line: 88, baseType: !206, size: 96, offset: 192)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3762, file: !2372, line: 89, baseType: !848, size: 64, offset: 320)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3685, file: !2372, line: 144, baseType: !3769, size: 1536, offset: 7232)
!3769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3770, size: 1536, elements: !1242)
!3770 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputCol", file: !2372, line: 95, baseType: !3771)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputCol", file: !2372, line: 92, size: 192, elements: !3772)
!3772 = !{!3773, !3774}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3771, file: !2372, line: 93, baseType: !381, size: 128)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3771, file: !2372, line: 94, baseType: !848, size: 64, offset: 128)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !3685, file: !2372, line: 145, baseType: !8, size: 32, offset: 8768)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !3685, file: !2372, line: 145, baseType: !8, size: 32, offset: 8800)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "actuv", scope: !3685, file: !2372, line: 145, baseType: !8, size: 32, offset: 8832)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !3685, file: !2372, line: 145, baseType: !8, size: 32, offset: 8864)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "dxco", scope: !3685, file: !2372, line: 148, baseType: !206, size: 96, offset: 8896)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "dyco", scope: !3685, file: !2372, line: 148, baseType: !206, size: 96, offset: 8992)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "dxlo", scope: !3685, file: !2372, line: 149, baseType: !206, size: 96, offset: 9088)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "dylo", scope: !3685, file: !2372, line: 149, baseType: !206, size: 96, offset: 9184)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "dxgl", scope: !3685, file: !2372, line: 149, baseType: !206, size: 96, offset: 9280)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "dygl", scope: !3685, file: !2372, line: 149, baseType: !206, size: 96, offset: 9376)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "dxref", scope: !3685, file: !2372, line: 150, baseType: !206, size: 96, offset: 9472)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "dyref", scope: !3685, file: !2372, line: 150, baseType: !206, size: 96, offset: 9568)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "dxorn", scope: !3685, file: !2372, line: 150, baseType: !206, size: 96, offset: 9664)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "dyorn", scope: !3685, file: !2372, line: 150, baseType: !206, size: 96, offset: 9760)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "dxno", scope: !3685, file: !2372, line: 151, baseType: !206, size: 96, offset: 9856)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "dyno", scope: !3685, file: !2372, line: 151, baseType: !206, size: 96, offset: 9952)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "dxview", scope: !3685, file: !2372, line: 151, baseType: !7, size: 32, offset: 10048)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "dyview", scope: !3685, file: !2372, line: 151, baseType: !7, size: 32, offset: 10080)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "dxlv", scope: !3685, file: !2372, line: 152, baseType: !206, size: 96, offset: 10112)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "dylv", scope: !3685, file: !2372, line: 152, baseType: !206, size: 96, offset: 10208)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "dxwin", scope: !3685, file: !2372, line: 153, baseType: !206, size: 96, offset: 10304)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "dywin", scope: !3685, file: !2372, line: 153, baseType: !206, size: 96, offset: 10400)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "dxrefract", scope: !3685, file: !2372, line: 154, baseType: !206, size: 96, offset: 10496)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "dyrefract", scope: !3685, file: !2372, line: 154, baseType: !206, size: 96, offset: 10592)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "dxstrand", scope: !3685, file: !2372, line: 155, baseType: !7, size: 32, offset: 10688)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "dystrand", scope: !3685, file: !2372, line: 155, baseType: !7, size: 32, offset: 10720)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !3685, file: !2372, line: 158, baseType: !206, size: 96, offset: 10752)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !3685, file: !2372, line: 158, baseType: !206, size: 96, offset: 10848)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !3685, file: !2372, line: 158, baseType: !206, size: 96, offset: 10944)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !3685, file: !2372, line: 160, baseType: !8, size: 32, offset: 11040)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !3685, file: !2372, line: 160, baseType: !8, size: 32, offset: 11072)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3685, file: !2372, line: 161, baseType: !8, size: 32, offset: 11104)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "scanco", scope: !3685, file: !2372, line: 162, baseType: !206, size: 96, offset: 11136)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !3685, file: !2372, line: 164, baseType: !8, size: 32, offset: 11232)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3685, file: !2372, line: 165, baseType: !8, size: 32, offset: 11264)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "volume_depth", scope: !3685, file: !2372, line: 166, baseType: !8, size: 32, offset: 11296)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !3685, file: !2372, line: 169, baseType: !206, size: 96, offset: 11328)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "surfdist", scope: !3685, file: !2372, line: 169, baseType: !7, size: 32, offset: 11424)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "do_preview", scope: !3685, file: !2372, line: 172, baseType: !1103, size: 8, offset: 11456)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "do_manage", scope: !3685, file: !2372, line: 173, baseType: !1103, size: 8, offset: 11464)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !3685, file: !2372, line: 174, baseType: !107, size: 16, offset: 11472)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !3685, file: !2372, line: 174, baseType: !107, size: 16, offset: 11488)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !3685, file: !2372, line: 175, baseType: !107, size: 16, offset: 11504)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3685, file: !2372, line: 177, baseType: !202, size: 32, offset: 11520)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !3685, file: !2372, line: 178, baseType: !8, size: 32, offset: 11552)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !3685, file: !2372, line: 178, baseType: !8, size: 32, offset: 11584)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "combinedflag", scope: !3685, file: !2372, line: 178, baseType: !8, size: 32, offset: 11616)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !3685, file: !2372, line: 179, baseType: !1226, size: 64, offset: 11648)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !3685, file: !2372, line: 180, baseType: !264, size: 64, offset: 11712)
!3824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3825, size: 64)
!3825 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeResult", file: !2372, line: 65, baseType: !3826)
!3826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeResult", file: !2372, line: 48, size: 1696, elements: !3827)
!3827 = !{!3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "combined", scope: !3826, file: !2372, line: 49, baseType: !381, size: 128)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3826, file: !2372, line: 50, baseType: !381, size: 128, offset: 128)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !3826, file: !2372, line: 51, baseType: !7, size: 32, offset: 256)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "mist", scope: !3826, file: !2372, line: 51, baseType: !7, size: 32, offset: 288)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !3826, file: !2372, line: 51, baseType: !7, size: 32, offset: 320)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !3826, file: !2372, line: 52, baseType: !206, size: 96, offset: 352)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "diff", scope: !3826, file: !2372, line: 53, baseType: !206, size: 96, offset: 448)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "diffshad", scope: !3826, file: !2372, line: 54, baseType: !206, size: 96, offset: 544)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !3826, file: !2372, line: 55, baseType: !206, size: 96, offset: 640)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "shad", scope: !3826, file: !2372, line: 56, baseType: !381, size: 128, offset: 736)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !3826, file: !2372, line: 57, baseType: !206, size: 96, offset: 864)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !3826, file: !2372, line: 58, baseType: !206, size: 96, offset: 960)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !3826, file: !2372, line: 59, baseType: !206, size: 96, offset: 1056)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !3826, file: !2372, line: 60, baseType: !206, size: 96, offset: 1152)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "refr", scope: !3826, file: !2372, line: 61, baseType: !206, size: 96, offset: 1248)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !3826, file: !2372, line: 62, baseType: !206, size: 96, offset: 1344)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !3826, file: !2372, line: 63, baseType: !381, size: 128, offset: 1440)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "rayhits", scope: !3826, file: !2372, line: 64, baseType: !381, size: 128, offset: 1568)
!3846 = !DILocalVariable(name: "is", arg: 1, scope: !3678, file: !3, line: 499, type: !3681)
!3847 = !DILocation(line: 499, column: 23, scope: !3678)
!3848 = !DILocalVariable(name: "shi", arg: 2, scope: !3678, file: !3, line: 499, type: !3683)
!3849 = !DILocation(line: 499, column: 39, scope: !3678)
!3850 = !DILocalVariable(name: "shr", arg: 3, scope: !3678, file: !3, line: 499, type: !3824)
!3851 = !DILocation(line: 499, column: 57, scope: !3678)
!3852 = !DILocalVariable(name: "obi", scope: !3678, file: !3, line: 501, type: !2522)
!3853 = !DILocation(line: 501, column: 21, scope: !3678)
!3854 = !DILocation(line: 501, column: 48, scope: !3678)
!3855 = !DILocation(line: 501, column: 52, scope: !3678)
!3856 = !DILocation(line: 501, column: 56, scope: !3678)
!3857 = !DILocation(line: 501, column: 27, scope: !3678)
!3858 = !DILocalVariable(name: "vlr", scope: !3678, file: !3, line: 502, type: !2524)
!3859 = !DILocation(line: 502, column: 11, scope: !3678)
!3860 = !DILocation(line: 502, column: 28, scope: !3678)
!3861 = !DILocation(line: 502, column: 32, scope: !3678)
!3862 = !DILocation(line: 502, column: 36, scope: !3678)
!3863 = !DILocation(line: 502, column: 17, scope: !3678)
!3864 = !DILocation(line: 505, column: 13, scope: !3678)
!3865 = !DILocation(line: 505, column: 18, scope: !3678)
!3866 = !DILocation(line: 505, column: 24, scope: !3678)
!3867 = !DILocation(line: 505, column: 28, scope: !3678)
!3868 = !DILocation(line: 505, column: 2, scope: !3678)
!3869 = !DILocation(line: 508, column: 14, scope: !3678)
!3870 = !DILocation(line: 508, column: 18, scope: !3678)
!3871 = !DILocation(line: 508, column: 27, scope: !3678)
!3872 = !DILocation(line: 508, column: 31, scope: !3678)
!3873 = !DILocation(line: 508, column: 37, scope: !3678)
!3874 = !DILocation(line: 508, column: 42, scope: !3678)
!3875 = !DILocation(line: 508, column: 35, scope: !3678)
!3876 = !DILocation(line: 508, column: 26, scope: !3678)
!3877 = !DILocation(line: 508, column: 2, scope: !3678)
!3878 = !DILocation(line: 508, column: 7, scope: !3678)
!3879 = !DILocation(line: 508, column: 12, scope: !3678)
!3880 = !DILocation(line: 509, column: 14, scope: !3678)
!3881 = !DILocation(line: 509, column: 18, scope: !3678)
!3882 = !DILocation(line: 509, column: 27, scope: !3678)
!3883 = !DILocation(line: 509, column: 31, scope: !3678)
!3884 = !DILocation(line: 509, column: 37, scope: !3678)
!3885 = !DILocation(line: 509, column: 42, scope: !3678)
!3886 = !DILocation(line: 509, column: 35, scope: !3678)
!3887 = !DILocation(line: 509, column: 26, scope: !3678)
!3888 = !DILocation(line: 509, column: 2, scope: !3678)
!3889 = !DILocation(line: 509, column: 7, scope: !3678)
!3890 = !DILocation(line: 509, column: 12, scope: !3678)
!3891 = !DILocation(line: 510, column: 14, scope: !3678)
!3892 = !DILocation(line: 510, column: 18, scope: !3678)
!3893 = !DILocation(line: 510, column: 27, scope: !3678)
!3894 = !DILocation(line: 510, column: 31, scope: !3678)
!3895 = !DILocation(line: 510, column: 37, scope: !3678)
!3896 = !DILocation(line: 510, column: 42, scope: !3678)
!3897 = !DILocation(line: 510, column: 35, scope: !3678)
!3898 = !DILocation(line: 510, column: 26, scope: !3678)
!3899 = !DILocation(line: 510, column: 2, scope: !3678)
!3900 = !DILocation(line: 510, column: 7, scope: !3678)
!3901 = !DILocation(line: 510, column: 12, scope: !3678)
!3902 = !DILocation(line: 512, column: 15, scope: !3678)
!3903 = !DILocation(line: 512, column: 20, scope: !3678)
!3904 = !DILocation(line: 512, column: 2, scope: !3678)
!3905 = !DILocation(line: 514, column: 12, scope: !3678)
!3906 = !DILocation(line: 514, column: 2, scope: !3678)
!3907 = !DILocation(line: 514, column: 7, scope: !3678)
!3908 = !DILocation(line: 514, column: 10, scope: !3678)
!3909 = !DILocation(line: 515, column: 12, scope: !3678)
!3910 = !DILocation(line: 515, column: 17, scope: !3678)
!3911 = !DILocation(line: 515, column: 2, scope: !3678)
!3912 = !DILocation(line: 515, column: 7, scope: !3678)
!3913 = !DILocation(line: 515, column: 10, scope: !3678)
!3914 = !DILocation(line: 516, column: 12, scope: !3678)
!3915 = !DILocation(line: 516, column: 2, scope: !3678)
!3916 = !DILocation(line: 516, column: 7, scope: !3678)
!3917 = !DILocation(line: 516, column: 10, scope: !3678)
!3918 = !DILocation(line: 517, column: 12, scope: !3678)
!3919 = !DILocation(line: 517, column: 17, scope: !3678)
!3920 = !DILocation(line: 517, column: 2, scope: !3678)
!3921 = !DILocation(line: 517, column: 7, scope: !3678)
!3922 = !DILocation(line: 517, column: 10, scope: !3678)
!3923 = !DILocation(line: 518, column: 28, scope: !3678)
!3924 = !DILocation(line: 518, column: 2, scope: !3678)
!3925 = !DILocation(line: 520, column: 6, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 520, column: 6)
!3927 = !DILocation(line: 520, column: 10, scope: !3926)
!3928 = !DILocation(line: 520, column: 15, scope: !3926)
!3929 = !DILocation(line: 520, column: 6, scope: !3678)
!3930 = !DILocation(line: 521, column: 30, scope: !3926)
!3931 = !DILocation(line: 521, column: 35, scope: !3926)
!3932 = !DILocation(line: 521, column: 40, scope: !3926)
!3933 = !DILocation(line: 521, column: 3, scope: !3926)
!3934 = !DILocation(line: 523, column: 30, scope: !3926)
!3935 = !DILocation(line: 523, column: 35, scope: !3926)
!3936 = !DILocation(line: 523, column: 40, scope: !3926)
!3937 = !DILocation(line: 523, column: 3, scope: !3926)
!3938 = !DILocation(line: 525, column: 10, scope: !3678)
!3939 = !DILocation(line: 525, column: 14, scope: !3678)
!3940 = !DILocation(line: 525, column: 2, scope: !3678)
!3941 = !DILocation(line: 525, column: 7, scope: !3678)
!3942 = !DILocation(line: 525, column: 8, scope: !3678)
!3943 = !DILocation(line: 526, column: 10, scope: !3678)
!3944 = !DILocation(line: 526, column: 14, scope: !3678)
!3945 = !DILocation(line: 526, column: 2, scope: !3678)
!3946 = !DILocation(line: 526, column: 7, scope: !3678)
!3947 = !DILocation(line: 526, column: 8, scope: !3678)
!3948 = !DILocation(line: 527, column: 35, scope: !3678)
!3949 = !DILocation(line: 527, column: 40, scope: !3678)
!3950 = !DILocation(line: 527, column: 44, scope: !3678)
!3951 = !DILocation(line: 527, column: 24, scope: !3678)
!3952 = !DILocation(line: 527, column: 29, scope: !3678)
!3953 = !DILocation(line: 527, column: 33, scope: !3678)
!3954 = !DILocation(line: 527, column: 13, scope: !3678)
!3955 = !DILocation(line: 527, column: 18, scope: !3678)
!3956 = !DILocation(line: 527, column: 22, scope: !3678)
!3957 = !DILocation(line: 527, column: 2, scope: !3678)
!3958 = !DILocation(line: 527, column: 7, scope: !3678)
!3959 = !DILocation(line: 527, column: 11, scope: !3678)
!3960 = !DILocation(line: 529, column: 6, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 529, column: 6)
!3962 = !DILocation(line: 529, column: 11, scope: !3961)
!3963 = !DILocation(line: 529, column: 6, scope: !3678)
!3964 = !DILocation(line: 530, column: 28, scope: !3961)
!3965 = !DILocation(line: 530, column: 3, scope: !3961)
!3966 = !DILocation(line: 531, column: 26, scope: !3678)
!3967 = !DILocation(line: 531, column: 2, scope: !3678)
!3968 = !DILocation(line: 533, column: 30, scope: !3678)
!3969 = !DILocation(line: 533, column: 2, scope: !3678)
!3970 = !DILocation(line: 534, column: 6, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 534, column: 6)
!3972 = !DILocation(line: 534, column: 11, scope: !3971)
!3973 = !DILocation(line: 534, column: 16, scope: !3971)
!3974 = !DILocation(line: 534, column: 30, scope: !3971)
!3975 = !DILocation(line: 534, column: 6, scope: !3678)
!3976 = !DILocation(line: 535, column: 7, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 535, column: 7)
!3978 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 534, column: 49)
!3979 = !DILocation(line: 535, column: 7, scope: !3978)
!3980 = !DILocation(line: 536, column: 24, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 535, column: 57)
!3982 = !DILocation(line: 536, column: 29, scope: !3981)
!3983 = !DILocation(line: 536, column: 34, scope: !3981)
!3984 = !DILocation(line: 536, column: 4, scope: !3981)
!3985 = !DILocation(line: 537, column: 3, scope: !3981)
!3986 = !DILocation(line: 539, column: 25, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 538, column: 8)
!3988 = !DILocation(line: 539, column: 30, scope: !3987)
!3989 = !DILocation(line: 539, column: 4, scope: !3987)
!3990 = !DILocation(line: 541, column: 2, scope: !3978)
!3991 = !DILocation(line: 542, column: 11, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 542, column: 11)
!3993 = !DILocation(line: 542, column: 15, scope: !3992)
!3994 = !DILocation(line: 542, column: 19, scope: !3992)
!3995 = !DILocation(line: 542, column: 11, scope: !3971)
!3996 = !DILocation(line: 544, column: 7, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 544, column: 7)
!3998 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 542, column: 40)
!3999 = !DILocation(line: 544, column: 12, scope: !3997)
!4000 = !DILocation(line: 544, column: 17, scope: !3997)
!4001 = !DILocation(line: 544, column: 21, scope: !3997)
!4002 = !DILocation(line: 544, column: 24, scope: !3997)
!4003 = !DILocation(line: 544, column: 29, scope: !3997)
!4004 = !DILocation(line: 544, column: 34, scope: !3997)
!4005 = !DILocation(line: 544, column: 43, scope: !3997)
!4006 = !DILocation(line: 544, column: 46, scope: !3997)
!4007 = !DILocation(line: 544, column: 51, scope: !3997)
!4008 = !DILocation(line: 544, column: 56, scope: !3997)
!4009 = !DILocation(line: 544, column: 7, scope: !3998)
!4010 = !DILocation(line: 545, column: 24, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 544, column: 67)
!4012 = !DILocation(line: 545, column: 29, scope: !4011)
!4013 = !DILocation(line: 545, column: 34, scope: !4011)
!4014 = !DILocation(line: 545, column: 44, scope: !4011)
!4015 = !DILocation(line: 545, column: 49, scope: !4011)
!4016 = !DILocation(line: 545, column: 4, scope: !4011)
!4017 = !DILocation(line: 546, column: 14, scope: !4011)
!4018 = !DILocation(line: 546, column: 19, scope: !4011)
!4019 = !DILocation(line: 546, column: 4, scope: !4011)
!4020 = !DILocation(line: 546, column: 9, scope: !4011)
!4021 = !DILocation(line: 546, column: 12, scope: !4011)
!4022 = !DILocation(line: 547, column: 3, scope: !4011)
!4023 = !DILocation(line: 549, column: 16, scope: !3997)
!4024 = !DILocation(line: 549, column: 21, scope: !3997)
!4025 = !DILocation(line: 549, column: 4, scope: !3997)
!4026 = !DILocation(line: 550, column: 2, scope: !3998)
!4027 = !DILocation(line: 552, column: 7, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 552, column: 7)
!4029 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 551, column: 7)
!4030 = !DILocation(line: 552, column: 12, scope: !4028)
!4031 = !DILocation(line: 552, column: 17, scope: !4028)
!4032 = !DILocation(line: 552, column: 26, scope: !4028)
!4033 = !DILocation(line: 552, column: 29, scope: !4028)
!4034 = !DILocation(line: 552, column: 34, scope: !4028)
!4035 = !DILocation(line: 552, column: 39, scope: !4028)
!4036 = !DILocation(line: 552, column: 7, scope: !4029)
!4037 = !DILocation(line: 553, column: 24, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 552, column: 50)
!4039 = !DILocation(line: 553, column: 29, scope: !4038)
!4040 = !DILocation(line: 553, column: 34, scope: !4038)
!4041 = !DILocation(line: 553, column: 44, scope: !4038)
!4042 = !DILocation(line: 553, column: 49, scope: !4038)
!4043 = !DILocation(line: 553, column: 4, scope: !4038)
!4044 = !DILocation(line: 554, column: 14, scope: !4038)
!4045 = !DILocation(line: 554, column: 19, scope: !4038)
!4046 = !DILocation(line: 554, column: 4, scope: !4038)
!4047 = !DILocation(line: 554, column: 9, scope: !4038)
!4048 = !DILocation(line: 554, column: 12, scope: !4038)
!4049 = !DILocation(line: 555, column: 3, scope: !4038)
!4050 = !DILocation(line: 557, column: 24, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 556, column: 8)
!4052 = !DILocation(line: 557, column: 29, scope: !4051)
!4053 = !DILocation(line: 557, column: 4, scope: !4051)
!4054 = !DILocation(line: 561, column: 15, scope: !4029)
!4055 = !DILocation(line: 561, column: 20, scope: !4029)
!4056 = !DILocation(line: 561, column: 26, scope: !4029)
!4057 = !DILocation(line: 561, column: 31, scope: !4029)
!4058 = !DILocation(line: 561, column: 41, scope: !4029)
!4059 = !DILocation(line: 561, column: 46, scope: !4029)
!4060 = !DILocation(line: 561, column: 3, scope: !4029)
!4061 = !DILocation(line: 562, column: 14, scope: !4029)
!4062 = !DILocation(line: 562, column: 19, scope: !4029)
!4063 = !DILocation(line: 562, column: 29, scope: !4029)
!4064 = !DILocation(line: 562, column: 34, scope: !4029)
!4065 = !DILocation(line: 562, column: 3, scope: !4029)
!4066 = !DILocation(line: 565, column: 1, scope: !3678)
!4067 = distinct !DISubprogram(name: "copy_v3_v3", scope: !3654, file: !3654, line: 64, type: !4068, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4068 = !DISubroutineType(types: !4069)
!4069 = !{null, !6, !3669}
!4070 = !DILocalVariable(name: "r", arg: 1, scope: !4067, file: !3654, line: 64, type: !6)
!4071 = !DILocation(line: 64, column: 31, scope: !4067)
!4072 = !DILocalVariable(name: "a", arg: 2, scope: !4067, file: !3654, line: 64, type: !3669)
!4073 = !DILocation(line: 64, column: 49, scope: !4067)
!4074 = !DILocation(line: 66, column: 9, scope: !4067)
!4075 = !DILocation(line: 66, column: 2, scope: !4067)
!4076 = !DILocation(line: 66, column: 7, scope: !4067)
!4077 = !DILocation(line: 67, column: 9, scope: !4067)
!4078 = !DILocation(line: 67, column: 2, scope: !4067)
!4079 = !DILocation(line: 67, column: 7, scope: !4067)
!4080 = !DILocation(line: 68, column: 9, scope: !4067)
!4081 = !DILocation(line: 68, column: 2, scope: !4067)
!4082 = !DILocation(line: 68, column: 7, scope: !4067)
!4083 = !DILocation(line: 69, column: 1, scope: !4067)
!4084 = distinct !DISubprogram(name: "normalize_v3", scope: !3654, file: !3654, line: 830, type: !4085, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{!7, !6}
!4087 = !DILocalVariable(name: "n", arg: 1, scope: !4084, file: !3654, line: 830, type: !6)
!4088 = !DILocation(line: 830, column: 34, scope: !4084)
!4089 = !DILocation(line: 832, column: 25, scope: !4084)
!4090 = !DILocation(line: 832, column: 28, scope: !4084)
!4091 = !DILocation(line: 832, column: 9, scope: !4084)
!4092 = !DILocation(line: 832, column: 2, scope: !4084)
!4093 = distinct !DISubprogram(name: "shade_ray_set_derivative", scope: !3, file: !3, line: 457, type: !4094, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{null, !3683}
!4096 = !DILocalVariable(name: "shi", arg: 1, scope: !4093, file: !3, line: 457, type: !3683)
!4097 = !DILocation(line: 457, column: 50, scope: !4093)
!4098 = !DILocalVariable(name: "detsh", scope: !4093, file: !3, line: 459, type: !7)
!4099 = !DILocation(line: 459, column: 8, scope: !4093)
!4100 = !DILocalVariable(name: "t00", scope: !4093, file: !3, line: 459, type: !7)
!4101 = !DILocation(line: 459, column: 15, scope: !4093)
!4102 = !DILocalVariable(name: "t10", scope: !4093, file: !3, line: 459, type: !7)
!4103 = !DILocation(line: 459, column: 20, scope: !4093)
!4104 = !DILocalVariable(name: "t01", scope: !4093, file: !3, line: 459, type: !7)
!4105 = !DILocation(line: 459, column: 25, scope: !4093)
!4106 = !DILocalVariable(name: "t11", scope: !4093, file: !3, line: 459, type: !7)
!4107 = !DILocation(line: 459, column: 30, scope: !4093)
!4108 = !DILocalVariable(name: "axis1", scope: !4093, file: !3, line: 460, type: !8)
!4109 = !DILocation(line: 460, column: 6, scope: !4093)
!4110 = !DILocalVariable(name: "axis2", scope: !4093, file: !3, line: 460, type: !8)
!4111 = !DILocation(line: 460, column: 13, scope: !4093)
!4112 = !DILocation(line: 463, column: 35, scope: !4093)
!4113 = !DILocation(line: 463, column: 40, scope: !4093)
!4114 = !DILocation(line: 463, column: 2, scope: !4093)
!4115 = !DILocation(line: 466, column: 6, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 466, column: 6)
!4117 = !DILocation(line: 466, column: 11, scope: !4116)
!4118 = !DILocation(line: 466, column: 16, scope: !4116)
!4119 = !DILocation(line: 466, column: 21, scope: !4116)
!4120 = !DILocation(line: 466, column: 6, scope: !4093)
!4121 = !DILocalVariable(name: "v1", scope: !4122, file: !3, line: 467, type: !206)
!4122 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 466, column: 38)
!4123 = !DILocation(line: 467, column: 9, scope: !4122)
!4124 = !DILocalVariable(name: "v2", scope: !4122, file: !3, line: 467, type: !206)
!4125 = !DILocation(line: 467, column: 16, scope: !4122)
!4126 = !DILocalVariable(name: "v3", scope: !4122, file: !3, line: 467, type: !206)
!4127 = !DILocation(line: 467, column: 23, scope: !4122)
!4128 = !DILocation(line: 469, column: 15, scope: !4122)
!4129 = !DILocation(line: 469, column: 19, scope: !4122)
!4130 = !DILocation(line: 469, column: 24, scope: !4122)
!4131 = !DILocation(line: 469, column: 29, scope: !4122)
!4132 = !DILocation(line: 469, column: 35, scope: !4122)
!4133 = !DILocation(line: 469, column: 40, scope: !4122)
!4134 = !DILocation(line: 469, column: 44, scope: !4122)
!4135 = !DILocation(line: 469, column: 3, scope: !4122)
!4136 = !DILocation(line: 470, column: 15, scope: !4122)
!4137 = !DILocation(line: 470, column: 19, scope: !4122)
!4138 = !DILocation(line: 470, column: 24, scope: !4122)
!4139 = !DILocation(line: 470, column: 29, scope: !4122)
!4140 = !DILocation(line: 470, column: 35, scope: !4122)
!4141 = !DILocation(line: 470, column: 40, scope: !4122)
!4142 = !DILocation(line: 470, column: 44, scope: !4122)
!4143 = !DILocation(line: 470, column: 3, scope: !4122)
!4144 = !DILocation(line: 471, column: 15, scope: !4122)
!4145 = !DILocation(line: 471, column: 19, scope: !4122)
!4146 = !DILocation(line: 471, column: 24, scope: !4122)
!4147 = !DILocation(line: 471, column: 29, scope: !4122)
!4148 = !DILocation(line: 471, column: 35, scope: !4122)
!4149 = !DILocation(line: 471, column: 40, scope: !4122)
!4150 = !DILocation(line: 471, column: 44, scope: !4122)
!4151 = !DILocation(line: 471, column: 3, scope: !4122)
!4152 = !DILocation(line: 474, column: 11, scope: !4122)
!4153 = !DILocation(line: 474, column: 8, scope: !4122)
!4154 = !DILocation(line: 474, column: 21, scope: !4122)
!4155 = !DILocation(line: 474, column: 18, scope: !4122)
!4156 = !DILocation(line: 474, column: 17, scope: !4122)
!4157 = !DILocation(line: 474, column: 6, scope: !4122)
!4158 = !DILocation(line: 474, column: 37, scope: !4122)
!4159 = !DILocation(line: 474, column: 34, scope: !4122)
!4160 = !DILocation(line: 474, column: 47, scope: !4122)
!4161 = !DILocation(line: 474, column: 44, scope: !4122)
!4162 = !DILocation(line: 474, column: 43, scope: !4122)
!4163 = !DILocation(line: 474, column: 32, scope: !4122)
!4164 = !DILocation(line: 475, column: 11, scope: !4122)
!4165 = !DILocation(line: 475, column: 8, scope: !4122)
!4166 = !DILocation(line: 475, column: 21, scope: !4122)
!4167 = !DILocation(line: 475, column: 18, scope: !4122)
!4168 = !DILocation(line: 475, column: 17, scope: !4122)
!4169 = !DILocation(line: 475, column: 6, scope: !4122)
!4170 = !DILocation(line: 475, column: 37, scope: !4122)
!4171 = !DILocation(line: 475, column: 34, scope: !4122)
!4172 = !DILocation(line: 475, column: 47, scope: !4122)
!4173 = !DILocation(line: 475, column: 44, scope: !4122)
!4174 = !DILocation(line: 475, column: 43, scope: !4122)
!4175 = !DILocation(line: 475, column: 32, scope: !4122)
!4176 = !DILocation(line: 476, column: 2, scope: !4122)
!4177 = !DILocalVariable(name: "v1", scope: !4178, file: !3, line: 478, type: !3669)
!4178 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 477, column: 7)
!4179 = !DILocation(line: 478, column: 16, scope: !4178)
!4180 = !DILocation(line: 478, column: 20, scope: !4178)
!4181 = !DILocation(line: 478, column: 25, scope: !4178)
!4182 = !DILocation(line: 478, column: 29, scope: !4178)
!4183 = !DILocalVariable(name: "v2", scope: !4178, file: !3, line: 479, type: !3669)
!4184 = !DILocation(line: 479, column: 16, scope: !4178)
!4185 = !DILocation(line: 479, column: 20, scope: !4178)
!4186 = !DILocation(line: 479, column: 25, scope: !4178)
!4187 = !DILocation(line: 479, column: 29, scope: !4178)
!4188 = !DILocalVariable(name: "v3", scope: !4178, file: !3, line: 480, type: !3669)
!4189 = !DILocation(line: 480, column: 16, scope: !4178)
!4190 = !DILocation(line: 480, column: 20, scope: !4178)
!4191 = !DILocation(line: 480, column: 25, scope: !4178)
!4192 = !DILocation(line: 480, column: 29, scope: !4178)
!4193 = !DILocation(line: 483, column: 8, scope: !4178)
!4194 = !DILocation(line: 483, column: 11, scope: !4178)
!4195 = !DILocation(line: 483, column: 18, scope: !4178)
!4196 = !DILocation(line: 483, column: 21, scope: !4178)
!4197 = !DILocation(line: 483, column: 17, scope: !4178)
!4198 = !DILocation(line: 483, column: 6, scope: !4178)
!4199 = !DILocation(line: 483, column: 34, scope: !4178)
!4200 = !DILocation(line: 483, column: 37, scope: !4178)
!4201 = !DILocation(line: 483, column: 44, scope: !4178)
!4202 = !DILocation(line: 483, column: 47, scope: !4178)
!4203 = !DILocation(line: 483, column: 43, scope: !4178)
!4204 = !DILocation(line: 483, column: 32, scope: !4178)
!4205 = !DILocation(line: 484, column: 8, scope: !4178)
!4206 = !DILocation(line: 484, column: 11, scope: !4178)
!4207 = !DILocation(line: 484, column: 18, scope: !4178)
!4208 = !DILocation(line: 484, column: 21, scope: !4178)
!4209 = !DILocation(line: 484, column: 17, scope: !4178)
!4210 = !DILocation(line: 484, column: 6, scope: !4178)
!4211 = !DILocation(line: 484, column: 34, scope: !4178)
!4212 = !DILocation(line: 484, column: 37, scope: !4178)
!4213 = !DILocation(line: 484, column: 44, scope: !4178)
!4214 = !DILocation(line: 484, column: 47, scope: !4178)
!4215 = !DILocation(line: 484, column: 43, scope: !4178)
!4216 = !DILocation(line: 484, column: 32, scope: !4178)
!4217 = !DILocation(line: 487, column: 15, scope: !4093)
!4218 = !DILocation(line: 487, column: 19, scope: !4093)
!4219 = !DILocation(line: 487, column: 18, scope: !4093)
!4220 = !DILocation(line: 487, column: 23, scope: !4093)
!4221 = !DILocation(line: 487, column: 27, scope: !4093)
!4222 = !DILocation(line: 487, column: 26, scope: !4093)
!4223 = !DILocation(line: 487, column: 22, scope: !4093)
!4224 = !DILocation(line: 487, column: 13, scope: !4093)
!4225 = !DILocation(line: 487, column: 7, scope: !4093)
!4226 = !DILocation(line: 488, column: 8, scope: !4093)
!4227 = !DILocation(line: 488, column: 5, scope: !4093)
!4228 = !DILocation(line: 488, column: 20, scope: !4093)
!4229 = !DILocation(line: 488, column: 18, scope: !4093)
!4230 = !DILocation(line: 489, column: 7, scope: !4093)
!4231 = !DILocation(line: 489, column: 5, scope: !4093)
!4232 = !DILocation(line: 489, column: 19, scope: !4093)
!4233 = !DILocation(line: 489, column: 17, scope: !4093)
!4234 = !DILocation(line: 491, column: 14, scope: !4093)
!4235 = !DILocation(line: 491, column: 19, scope: !4093)
!4236 = !DILocation(line: 491, column: 24, scope: !4093)
!4237 = !DILocation(line: 491, column: 31, scope: !4093)
!4238 = !DILocation(line: 491, column: 30, scope: !4093)
!4239 = !DILocation(line: 491, column: 36, scope: !4093)
!4240 = !DILocation(line: 491, column: 41, scope: !4093)
!4241 = !DILocation(line: 491, column: 46, scope: !4093)
!4242 = !DILocation(line: 491, column: 53, scope: !4093)
!4243 = !DILocation(line: 491, column: 52, scope: !4093)
!4244 = !DILocation(line: 491, column: 34, scope: !4093)
!4245 = !DILocation(line: 491, column: 2, scope: !4093)
!4246 = !DILocation(line: 491, column: 7, scope: !4093)
!4247 = !DILocation(line: 491, column: 11, scope: !4093)
!4248 = !DILocation(line: 492, column: 14, scope: !4093)
!4249 = !DILocation(line: 492, column: 19, scope: !4093)
!4250 = !DILocation(line: 492, column: 24, scope: !4093)
!4251 = !DILocation(line: 492, column: 31, scope: !4093)
!4252 = !DILocation(line: 492, column: 30, scope: !4093)
!4253 = !DILocation(line: 492, column: 36, scope: !4093)
!4254 = !DILocation(line: 492, column: 41, scope: !4093)
!4255 = !DILocation(line: 492, column: 46, scope: !4093)
!4256 = !DILocation(line: 492, column: 53, scope: !4093)
!4257 = !DILocation(line: 492, column: 52, scope: !4093)
!4258 = !DILocation(line: 492, column: 34, scope: !4093)
!4259 = !DILocation(line: 492, column: 2, scope: !4093)
!4260 = !DILocation(line: 492, column: 7, scope: !4093)
!4261 = !DILocation(line: 492, column: 11, scope: !4093)
!4262 = !DILocation(line: 493, column: 14, scope: !4093)
!4263 = !DILocation(line: 493, column: 19, scope: !4093)
!4264 = !DILocation(line: 493, column: 24, scope: !4093)
!4265 = !DILocation(line: 493, column: 31, scope: !4093)
!4266 = !DILocation(line: 493, column: 30, scope: !4093)
!4267 = !DILocation(line: 493, column: 36, scope: !4093)
!4268 = !DILocation(line: 493, column: 41, scope: !4093)
!4269 = !DILocation(line: 493, column: 46, scope: !4093)
!4270 = !DILocation(line: 493, column: 53, scope: !4093)
!4271 = !DILocation(line: 493, column: 52, scope: !4093)
!4272 = !DILocation(line: 493, column: 34, scope: !4093)
!4273 = !DILocation(line: 493, column: 2, scope: !4093)
!4274 = !DILocation(line: 493, column: 7, scope: !4093)
!4275 = !DILocation(line: 493, column: 11, scope: !4093)
!4276 = !DILocation(line: 494, column: 14, scope: !4093)
!4277 = !DILocation(line: 494, column: 19, scope: !4093)
!4278 = !DILocation(line: 494, column: 24, scope: !4093)
!4279 = !DILocation(line: 494, column: 31, scope: !4093)
!4280 = !DILocation(line: 494, column: 30, scope: !4093)
!4281 = !DILocation(line: 494, column: 36, scope: !4093)
!4282 = !DILocation(line: 494, column: 41, scope: !4093)
!4283 = !DILocation(line: 494, column: 46, scope: !4093)
!4284 = !DILocation(line: 494, column: 53, scope: !4093)
!4285 = !DILocation(line: 494, column: 52, scope: !4093)
!4286 = !DILocation(line: 494, column: 34, scope: !4093)
!4287 = !DILocation(line: 494, column: 2, scope: !4093)
!4288 = !DILocation(line: 494, column: 7, scope: !4093)
!4289 = !DILocation(line: 494, column: 11, scope: !4093)
!4290 = !DILocation(line: 496, column: 1, scope: !4093)
!4291 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !3654, file: !3654, line: 357, type: !4292, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{null, !6, !3669, !3669}
!4294 = !DILocalVariable(name: "r", arg: 1, scope: !4291, file: !3654, line: 357, type: !6)
!4295 = !DILocation(line: 357, column: 32, scope: !4291)
!4296 = !DILocalVariable(name: "a", arg: 2, scope: !4291, file: !3654, line: 357, type: !3669)
!4297 = !DILocation(line: 357, column: 50, scope: !4291)
!4298 = !DILocalVariable(name: "b", arg: 3, scope: !4291, file: !3654, line: 357, type: !3669)
!4299 = !DILocation(line: 357, column: 68, scope: !4291)
!4300 = !DILocation(line: 359, column: 9, scope: !4291)
!4301 = !DILocation(line: 359, column: 16, scope: !4291)
!4302 = !DILocation(line: 359, column: 14, scope: !4291)
!4303 = !DILocation(line: 359, column: 2, scope: !4291)
!4304 = !DILocation(line: 359, column: 7, scope: !4291)
!4305 = !DILocation(line: 360, column: 9, scope: !4291)
!4306 = !DILocation(line: 360, column: 16, scope: !4291)
!4307 = !DILocation(line: 360, column: 14, scope: !4291)
!4308 = !DILocation(line: 360, column: 2, scope: !4291)
!4309 = !DILocation(line: 360, column: 7, scope: !4291)
!4310 = !DILocation(line: 361, column: 9, scope: !4291)
!4311 = !DILocation(line: 361, column: 16, scope: !4291)
!4312 = !DILocation(line: 361, column: 14, scope: !4291)
!4313 = !DILocation(line: 361, column: 2, scope: !4291)
!4314 = !DILocation(line: 361, column: 7, scope: !4291)
!4315 = !DILocation(line: 362, column: 1, scope: !4291)
!4316 = distinct !DISubprogram(name: "init_jitter_plane", scope: !3, file: !3, line: 934, type: !4317, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{null, !4319}
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampRen", file: !56, line: 615, baseType: !4321)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampRen", file: !56, line: 540, size: 5376, elements: !4322)
!4322 = !{!4323, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4376, !4377, !4378, !4379, !4380, !4381, !4420, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4466, !4468, !4469, !4470}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4321, file: !56, line: 541, baseType: !4324, size: 64)
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4321, file: !56, line: 541, baseType: !4324, size: 64, offset: 64)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !4321, file: !56, line: 543, baseType: !7, size: 32, offset: 128)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !4321, file: !56, line: 543, baseType: !7, size: 32, offset: 160)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4321, file: !56, line: 543, baseType: !7, size: 32, offset: 192)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4321, file: !56, line: 544, baseType: !206, size: 96, offset: 224)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4321, file: !56, line: 545, baseType: !107, size: 16, offset: 320)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4321, file: !56, line: 546, baseType: !8, size: 32, offset: 352)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4321, file: !56, line: 547, baseType: !7, size: 32, offset: 384)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4321, file: !56, line: 547, baseType: !7, size: 32, offset: 416)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4321, file: !56, line: 547, baseType: !7, size: 32, offset: 448)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !4321, file: !56, line: 547, baseType: !7, size: 32, offset: 480)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !4321, file: !56, line: 548, baseType: !7, size: 32, offset: 512)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !4321, file: !56, line: 548, baseType: !7, size: 32, offset: 544)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !4321, file: !56, line: 548, baseType: !7, size: 32, offset: 576)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !4321, file: !56, line: 549, baseType: !7, size: 32, offset: 608)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !4321, file: !56, line: 549, baseType: !7, size: 32, offset: 640)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4321, file: !56, line: 550, baseType: !8, size: 32, offset: 672)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "spotsi", scope: !4321, file: !56, line: 551, baseType: !7, size: 32, offset: 704)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "spotbl", scope: !4321, file: !56, line: 551, baseType: !7, size: 32, offset: 736)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4321, file: !56, line: 552, baseType: !206, size: 96, offset: 768)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "xsp", scope: !4321, file: !56, line: 553, baseType: !7, size: 32, offset: 864)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "ysp", scope: !4321, file: !56, line: 553, baseType: !7, size: 32, offset: 896)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "distkw", scope: !4321, file: !56, line: 553, baseType: !7, size: 32, offset: 928)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "inpr", scope: !4321, file: !56, line: 553, baseType: !7, size: 32, offset: 960)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "halokw", scope: !4321, file: !56, line: 554, baseType: !7, size: 32, offset: 992)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "halo", scope: !4321, file: !56, line: 554, baseType: !7, size: 32, offset: 1024)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !4321, file: !56, line: 556, baseType: !107, size: 16, offset: 1056)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "ld1", scope: !4321, file: !56, line: 557, baseType: !7, size: 32, offset: 1088)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "ld2", scope: !4321, file: !56, line: 557, baseType: !7, size: 32, offset: 1120)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !4321, file: !56, line: 558, baseType: !1457, size: 64, offset: 1152)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !4321, file: !56, line: 562, baseType: !107, size: 16, offset: 1216)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !4321, file: !56, line: 564, baseType: !107, size: 16, offset: 1232)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4321, file: !56, line: 566, baseType: !7, size: 32, offset: 1248)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !4321, file: !56, line: 568, baseType: !107, size: 16, offset: 1280)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !4321, file: !56, line: 568, baseType: !107, size: 16, offset: 1296)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !4321, file: !56, line: 570, baseType: !107, size: 16, offset: 1312)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !4321, file: !56, line: 572, baseType: !107, size: 16, offset: 1328)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !4321, file: !56, line: 574, baseType: !107, size: 16, offset: 1344)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !4321, file: !56, line: 576, baseType: !7, size: 32, offset: 1376)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !4321, file: !56, line: 578, baseType: !7, size: 32, offset: 1408)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !4321, file: !56, line: 580, baseType: !7, size: 32, offset: 1440)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !4321, file: !56, line: 582, baseType: !7, size: 32, offset: 1472)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !4321, file: !56, line: 584, baseType: !107, size: 16, offset: 1504)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !4321, file: !56, line: 584, baseType: !107, size: 16, offset: 1520)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !4321, file: !56, line: 584, baseType: !107, size: 16, offset: 1536)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !4321, file: !56, line: 584, baseType: !107, size: 16, offset: 1552)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !4321, file: !56, line: 584, baseType: !107, size: 16, offset: 1568)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !4321, file: !56, line: 584, baseType: !107, size: 16, offset: 1584)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "ray_totsamp", scope: !4321, file: !56, line: 584, baseType: !107, size: 16, offset: 1600)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !4321, file: !56, line: 585, baseType: !4375, size: 16, offset: 1616)
!4375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 16, elements: !400)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "yold", scope: !4321, file: !56, line: 585, baseType: !4375, size: 16, offset: 1632)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !4321, file: !56, line: 586, baseType: !7, size: 32, offset: 1664)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !4321, file: !56, line: 586, baseType: !7, size: 32, offset: 1696)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !4321, file: !56, line: 586, baseType: !7, size: 32, offset: 1728)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !4321, file: !56, line: 587, baseType: !7, size: 32, offset: 1760)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "sunsky", scope: !4321, file: !56, line: 590, baseType: !4382, size: 64, offset: 1792)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SunSky", file: !4384, line: 32, size: 1792, elements: !4385)
!4384 = !DIFile(filename: "blender/source/blender/render/intern/include/sunsky.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4385 = !{!4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "effect_type", scope: !4383, file: !4384, line: 33, baseType: !107, size: 16)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !4383, file: !4384, line: 33, baseType: !107, size: 16, offset: 16)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !4383, file: !4384, line: 33, baseType: !107, size: 16, offset: 32)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "turbidity", scope: !4383, file: !4384, line: 34, baseType: !7, size: 32, offset: 64)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "theta", scope: !4383, file: !4384, line: 35, baseType: !7, size: 32, offset: 96)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "phi", scope: !4383, file: !4384, line: 35, baseType: !7, size: 32, offset: 128)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "toSun", scope: !4383, file: !4384, line: 37, baseType: !206, size: 96, offset: 160)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "sunSolidAngle", scope: !4383, file: !4384, line: 40, baseType: !7, size: 32, offset: 256)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_Y", scope: !4383, file: !4384, line: 42, baseType: !7, size: 32, offset: 288)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_x", scope: !4383, file: !4384, line: 42, baseType: !7, size: 32, offset: 320)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_y", scope: !4383, file: !4384, line: 42, baseType: !7, size: 32, offset: 352)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "perez_Y", scope: !4383, file: !4384, line: 44, baseType: !4398, size: 160, offset: 384)
!4398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !1151)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "perez_x", scope: !4383, file: !4384, line: 44, baseType: !4398, size: 160, offset: 544)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "perez_y", scope: !4383, file: !4384, line: 44, baseType: !4398, size: 160, offset: 704)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !4383, file: !4384, line: 47, baseType: !7, size: 32, offset: 864)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !4383, file: !4384, line: 48, baseType: !7, size: 32, offset: 896)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !4383, file: !4384, line: 49, baseType: !7, size: 32, offset: 928)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !4383, file: !4384, line: 50, baseType: !7, size: 32, offset: 960)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !4383, file: !4384, line: 51, baseType: !7, size: 32, offset: 992)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !4383, file: !4384, line: 52, baseType: !7, size: 32, offset: 1024)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !4383, file: !4384, line: 53, baseType: !7, size: 32, offset: 1056)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "atm_HGg", scope: !4383, file: !4384, line: 55, baseType: !7, size: 32, offset: 1088)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "atm_SunIntensity", scope: !4383, file: !4384, line: 57, baseType: !7, size: 32, offset: 1120)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "atm_InscatteringMultiplier", scope: !4383, file: !4384, line: 58, baseType: !7, size: 32, offset: 1152)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "atm_ExtinctionMultiplier", scope: !4383, file: !4384, line: 59, baseType: !7, size: 32, offset: 1184)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRayMultiplier", scope: !4383, file: !4384, line: 60, baseType: !7, size: 32, offset: 1216)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMieMultiplier", scope: !4383, file: !4384, line: 61, baseType: !7, size: 32, offset: 1248)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "atm_DistanceMultiplier", scope: !4383, file: !4384, line: 62, baseType: !7, size: 32, offset: 1280)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRay", scope: !4383, file: !4384, line: 64, baseType: !206, size: 96, offset: 1312)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashRay", scope: !4383, file: !4384, line: 65, baseType: !206, size: 96, offset: 1408)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMie", scope: !4383, file: !4384, line: 66, baseType: !206, size: 96, offset: 1504)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashMie", scope: !4383, file: !4384, line: 67, baseType: !206, size: 96, offset: 1600)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRM", scope: !4383, file: !4384, line: 68, baseType: !206, size: 96, offset: 1696)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "shb", scope: !4321, file: !56, line: 592, baseType: !4421, size: 64, offset: 1856)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadBuf", file: !56, line: 297, size: 2240, elements: !4423)
!4423 = !{!4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !4422, file: !56, line: 299, baseType: !107, size: 16)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !4422, file: !56, line: 299, baseType: !107, size: 16, offset: 16)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "totbuf", scope: !4422, file: !56, line: 299, baseType: !107, size: 16, offset: 32)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !4422, file: !56, line: 300, baseType: !1864, size: 512, offset: 64)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !4422, file: !56, line: 301, baseType: !1864, size: 512, offset: 576)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !4422, file: !56, line: 302, baseType: !1864, size: 512, offset: 1088)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !4422, file: !56, line: 303, baseType: !6, size: 64, offset: 1600)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4422, file: !56, line: 303, baseType: !6, size: 64, offset: 1664)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4422, file: !56, line: 304, baseType: !7, size: 32, offset: 1728)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !4422, file: !56, line: 304, baseType: !7, size: 32, offset: 1760)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !4422, file: !56, line: 304, baseType: !7, size: 32, offset: 1792)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4422, file: !56, line: 304, baseType: !7, size: 32, offset: 1824)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !4422, file: !56, line: 304, baseType: !7, size: 32, offset: 1856)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4422, file: !56, line: 305, baseType: !1124, size: 96, offset: 1888)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4422, file: !56, line: 306, baseType: !8, size: 32, offset: 1984)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !4422, file: !56, line: 306, baseType: !8, size: 32, offset: 2016)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !4422, file: !56, line: 307, baseType: !133, size: 128, offset: 2048)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "isb_result", scope: !4422, file: !56, line: 310, baseType: !4442, size: 64, offset: 2176)
!4442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4443, size: 64, elements: !400)
!4443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4444, size: 64)
!4444 = !DICompositeType(tag: DW_TAG_structure_type, name: "ISBData", file: !56, line: 282, flags: DIFlagFwdDecl)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !4321, file: !56, line: 593, baseType: !6, size: 64, offset: 1920)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !4321, file: !56, line: 595, baseType: !1867, size: 288, offset: 1984)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "spottexfac", scope: !4321, file: !56, line: 596, baseType: !7, size: 32, offset: 2272)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "sh_invcampos", scope: !4321, file: !56, line: 597, baseType: !206, size: 96, offset: 2304)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "sh_zfac", scope: !4321, file: !56, line: 597, baseType: !7, size: 32, offset: 2400)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "lampmat", scope: !4321, file: !56, line: 599, baseType: !1864, size: 512, offset: 2432)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4321, file: !56, line: 601, baseType: !1867, size: 288, offset: 2944)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !4321, file: !56, line: 602, baseType: !169, size: 768, offset: 3232)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "areasize", scope: !4321, file: !56, line: 602, baseType: !7, size: 32, offset: 4000)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "shadsamp", scope: !4321, file: !56, line: 605, baseType: !4455, size: 64, offset: 4032)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSample", file: !56, line: 538, baseType: !4457)
!4457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSample", file: !56, line: 536, size: 2560, elements: !4458)
!4458 = !{!4459}
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4457, file: !56, line: 537, baseType: !4460, size: 2560)
!4460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4461, size: 2560, elements: !2584)
!4461 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSubSample", file: !56, line: 534, baseType: !4462)
!4462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSubSample", file: !56, line: 531, size: 160, elements: !4463)
!4463 = !{!4464, !4465}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !4462, file: !56, line: 532, baseType: !8, size: 32)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !4462, file: !56, line: 533, baseType: !381, size: 128, offset: 32)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !4321, file: !56, line: 608, baseType: !4467, size: 64, offset: 4096)
!4467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, size: 64, elements: !400)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !4321, file: !56, line: 610, baseType: !425, size: 1152, offset: 4160)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "thread_assigned", scope: !4321, file: !56, line: 613, baseType: !8, size: 32, offset: 5312)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ready", scope: !4321, file: !56, line: 614, baseType: !8, size: 32, offset: 5344)
!4471 = !DILocalVariable(name: "lar", arg: 1, scope: !4316, file: !3, line: 934, type: !4319)
!4472 = !DILocation(line: 934, column: 33, scope: !4316)
!4473 = !DILocalVariable(name: "fp", scope: !4316, file: !3, line: 936, type: !6)
!4474 = !DILocation(line: 936, column: 9, scope: !4316)
!4475 = !DILocalVariable(name: "x", scope: !4316, file: !3, line: 937, type: !8)
!4476 = !DILocation(line: 937, column: 6, scope: !4316)
!4477 = !DILocalVariable(name: "tot", scope: !4316, file: !3, line: 937, type: !8)
!4478 = !DILocation(line: 937, column: 9, scope: !4316)
!4479 = !DILocation(line: 937, column: 14, scope: !4316)
!4480 = !DILocation(line: 937, column: 19, scope: !4316)
!4481 = !DILocation(line: 940, column: 6, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 940, column: 6)
!4483 = !DILocation(line: 940, column: 11, scope: !4482)
!4484 = !DILocation(line: 940, column: 6, scope: !4316)
!4485 = !DILocation(line: 940, column: 19, scope: !4482)
!4486 = !DILocation(line: 943, column: 32, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 943, column: 6)
!4488 = !DILocation(line: 945, column: 19, scope: !4316)
!4489 = !DILocation(line: 945, column: 31, scope: !4316)
!4490 = !DILocation(line: 945, column: 33, scope: !4316)
!4491 = !DILocation(line: 945, column: 32, scope: !4316)
!4492 = !DILocation(line: 945, column: 36, scope: !4316)
!4493 = !DILocation(line: 945, column: 38, scope: !4316)
!4494 = !DILocation(line: 945, column: 6, scope: !4316)
!4495 = !DILocation(line: 945, column: 11, scope: !4316)
!4496 = !DILocation(line: 945, column: 17, scope: !4316)
!4497 = !DILocation(line: 945, column: 4, scope: !4316)
!4498 = !DILocation(line: 948, column: 6, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 948, column: 6)
!4500 = !DILocation(line: 948, column: 9, scope: !4499)
!4501 = !DILocation(line: 948, column: 6, scope: !4316)
!4502 = !DILocalVariable(name: "rng", scope: !4503, file: !3, line: 950, type: !4504)
!4503 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 948, column: 13)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_typedef, name: "RNG", file: !4506, line: 41, baseType: !4507)
!4506 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4507 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !4506, line: 40, flags: DIFlagFwdDecl)
!4508 = !DILocation(line: 950, column: 8, scope: !4503)
!4509 = !DILocation(line: 950, column: 34, scope: !4503)
!4510 = !DILocation(line: 950, column: 14, scope: !4503)
!4511 = !DILocalVariable(name: "iter", scope: !4503, file: !3, line: 951, type: !8)
!4512 = !DILocation(line: 951, column: 7, scope: !4503)
!4513 = !DILocation(line: 954, column: 9, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 954, column: 3)
!4515 = !DILocation(line: 954, column: 8, scope: !4514)
!4516 = !DILocation(line: 954, column: 13, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 954, column: 3)
!4518 = !DILocation(line: 954, column: 15, scope: !4517)
!4519 = !DILocation(line: 954, column: 14, scope: !4517)
!4520 = !DILocation(line: 954, column: 3, scope: !4514)
!4521 = !DILocation(line: 955, column: 30, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 954, column: 32)
!4523 = !DILocation(line: 955, column: 12, scope: !4522)
!4524 = !DILocation(line: 955, column: 34, scope: !4522)
!4525 = !DILocation(line: 955, column: 41, scope: !4522)
!4526 = !DILocation(line: 955, column: 46, scope: !4522)
!4527 = !DILocation(line: 955, column: 40, scope: !4522)
!4528 = !DILocation(line: 955, column: 4, scope: !4522)
!4529 = !DILocation(line: 955, column: 9, scope: !4522)
!4530 = !DILocation(line: 956, column: 30, scope: !4522)
!4531 = !DILocation(line: 956, column: 12, scope: !4522)
!4532 = !DILocation(line: 956, column: 34, scope: !4522)
!4533 = !DILocation(line: 956, column: 41, scope: !4522)
!4534 = !DILocation(line: 956, column: 46, scope: !4522)
!4535 = !DILocation(line: 956, column: 40, scope: !4522)
!4536 = !DILocation(line: 956, column: 4, scope: !4522)
!4537 = !DILocation(line: 956, column: 9, scope: !4522)
!4538 = !DILocation(line: 957, column: 3, scope: !4522)
!4539 = !DILocation(line: 954, column: 21, scope: !4517)
!4540 = !DILocation(line: 954, column: 27, scope: !4517)
!4541 = !DILocation(line: 954, column: 3, scope: !4517)
!4542 = distinct !{!4542, !4520, !4543}
!4543 = !DILocation(line: 957, column: 3, scope: !4514)
!4544 = !DILocation(line: 959, column: 3, scope: !4503)
!4545 = !DILocation(line: 959, column: 14, scope: !4503)
!4546 = !DILocation(line: 960, column: 8, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 959, column: 18)
!4548 = !DILocation(line: 960, column: 13, scope: !4547)
!4549 = !DILocation(line: 960, column: 6, scope: !4547)
!4550 = !DILocation(line: 961, column: 11, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4547, file: !3, line: 961, column: 4)
!4552 = !DILocation(line: 961, column: 10, scope: !4551)
!4553 = !DILocation(line: 961, column: 9, scope: !4551)
!4554 = !DILocation(line: 961, column: 16, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 961, column: 4)
!4556 = !DILocation(line: 961, column: 17, scope: !4555)
!4557 = !DILocation(line: 961, column: 4, scope: !4551)
!4558 = !DILocation(line: 962, column: 15, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 961, column: 33)
!4560 = !DILocation(line: 962, column: 20, scope: !4559)
!4561 = !DILocation(line: 962, column: 28, scope: !4559)
!4562 = !DILocation(line: 962, column: 32, scope: !4559)
!4563 = !DILocation(line: 962, column: 37, scope: !4559)
!4564 = !DILocation(line: 962, column: 42, scope: !4559)
!4565 = !DILocation(line: 962, column: 53, scope: !4559)
!4566 = !DILocation(line: 962, column: 58, scope: !4559)
!4567 = !DILocation(line: 962, column: 5, scope: !4559)
!4568 = !DILocation(line: 963, column: 4, scope: !4559)
!4569 = !DILocation(line: 961, column: 22, scope: !4555)
!4570 = !DILocation(line: 961, column: 28, scope: !4555)
!4571 = !DILocation(line: 961, column: 4, scope: !4555)
!4572 = distinct !{!4572, !4557, !4573}
!4573 = !DILocation(line: 963, column: 4, scope: !4551)
!4574 = distinct !{!4574, !4544, !4575}
!4575 = !DILocation(line: 964, column: 3, scope: !4503)
!4576 = !DILocation(line: 966, column: 16, scope: !4503)
!4577 = !DILocation(line: 966, column: 3, scope: !4503)
!4578 = !DILocation(line: 967, column: 2, scope: !4503)
!4579 = !DILocation(line: 969, column: 22, scope: !4316)
!4580 = !DILocation(line: 969, column: 27, scope: !4316)
!4581 = !DILocation(line: 969, column: 35, scope: !4316)
!4582 = !DILocation(line: 969, column: 40, scope: !4316)
!4583 = !DILocation(line: 969, column: 49, scope: !4316)
!4584 = !DILocation(line: 969, column: 48, scope: !4316)
!4585 = !DILocation(line: 969, column: 46, scope: !4316)
!4586 = !DILocation(line: 969, column: 54, scope: !4316)
!4587 = !DILocation(line: 969, column: 59, scope: !4316)
!4588 = !DILocation(line: 969, column: 64, scope: !4316)
!4589 = !DILocation(line: 969, column: 75, scope: !4316)
!4590 = !DILocation(line: 969, column: 80, scope: !4316)
!4591 = !DILocation(line: 969, column: 2, scope: !4316)
!4592 = !DILocation(line: 970, column: 22, scope: !4316)
!4593 = !DILocation(line: 970, column: 27, scope: !4316)
!4594 = !DILocation(line: 970, column: 35, scope: !4316)
!4595 = !DILocation(line: 970, column: 40, scope: !4316)
!4596 = !DILocation(line: 970, column: 49, scope: !4316)
!4597 = !DILocation(line: 970, column: 48, scope: !4316)
!4598 = !DILocation(line: 970, column: 46, scope: !4316)
!4599 = !DILocation(line: 970, column: 54, scope: !4316)
!4600 = !DILocation(line: 970, column: 59, scope: !4316)
!4601 = !DILocation(line: 970, column: 64, scope: !4316)
!4602 = !DILocation(line: 970, column: 75, scope: !4316)
!4603 = !DILocation(line: 970, column: 80, scope: !4316)
!4604 = !DILocation(line: 970, column: 2, scope: !4316)
!4605 = !DILocation(line: 971, column: 22, scope: !4316)
!4606 = !DILocation(line: 971, column: 27, scope: !4316)
!4607 = !DILocation(line: 971, column: 35, scope: !4316)
!4608 = !DILocation(line: 971, column: 40, scope: !4316)
!4609 = !DILocation(line: 971, column: 49, scope: !4316)
!4610 = !DILocation(line: 971, column: 48, scope: !4316)
!4611 = !DILocation(line: 971, column: 46, scope: !4316)
!4612 = !DILocation(line: 971, column: 54, scope: !4316)
!4613 = !DILocation(line: 971, column: 59, scope: !4316)
!4614 = !DILocation(line: 971, column: 64, scope: !4316)
!4615 = !DILocation(line: 971, column: 75, scope: !4316)
!4616 = !DILocation(line: 971, column: 80, scope: !4316)
!4617 = !DILocation(line: 971, column: 2, scope: !4316)
!4618 = !DILocation(line: 972, column: 1, scope: !4316)
!4619 = distinct !DISubprogram(name: "DP_energy", scope: !3, file: !3, line: 883, type: !4620, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{null, !6, !6, !8, !7, !7}
!4622 = !DILocalVariable(name: "table", arg: 1, scope: !4619, file: !3, line: 883, type: !6)
!4623 = !DILocation(line: 883, column: 30, scope: !4619)
!4624 = !DILocalVariable(name: "vec", arg: 2, scope: !4619, file: !3, line: 883, type: !6)
!4625 = !DILocation(line: 883, column: 43, scope: !4619)
!4626 = !DILocalVariable(name: "tot", arg: 3, scope: !4619, file: !3, line: 883, type: !8)
!4627 = !DILocation(line: 883, column: 55, scope: !4619)
!4628 = !DILocalVariable(name: "xsize", arg: 4, scope: !4619, file: !3, line: 883, type: !7)
!4629 = !DILocation(line: 883, column: 66, scope: !4619)
!4630 = !DILocalVariable(name: "ysize", arg: 5, scope: !4619, file: !3, line: 883, type: !7)
!4631 = !DILocation(line: 883, column: 79, scope: !4619)
!4632 = !DILocalVariable(name: "x", scope: !4619, file: !3, line: 885, type: !8)
!4633 = !DILocation(line: 885, column: 6, scope: !4619)
!4634 = !DILocalVariable(name: "y", scope: !4619, file: !3, line: 885, type: !8)
!4635 = !DILocation(line: 885, column: 9, scope: !4619)
!4636 = !DILocalVariable(name: "a", scope: !4619, file: !3, line: 885, type: !8)
!4637 = !DILocation(line: 885, column: 12, scope: !4619)
!4638 = !DILocalVariable(name: "fp", scope: !4619, file: !3, line: 886, type: !6)
!4639 = !DILocation(line: 886, column: 9, scope: !4619)
!4640 = !DILocalVariable(name: "force", scope: !4619, file: !3, line: 886, type: !206)
!4641 = !DILocation(line: 886, column: 13, scope: !4619)
!4642 = !DILocalVariable(name: "result", scope: !4619, file: !3, line: 886, type: !206)
!4643 = !DILocation(line: 886, column: 23, scope: !4619)
!4644 = !DILocalVariable(name: "dx", scope: !4619, file: !3, line: 887, type: !7)
!4645 = !DILocation(line: 887, column: 8, scope: !4619)
!4646 = !DILocalVariable(name: "dy", scope: !4619, file: !3, line: 887, type: !7)
!4647 = !DILocation(line: 887, column: 12, scope: !4619)
!4648 = !DILocalVariable(name: "dist", scope: !4619, file: !3, line: 887, type: !7)
!4649 = !DILocation(line: 887, column: 16, scope: !4619)
!4650 = !DILocalVariable(name: "min", scope: !4619, file: !3, line: 887, type: !7)
!4651 = !DILocation(line: 887, column: 22, scope: !4619)
!4652 = !DILocation(line: 889, column: 7, scope: !4619)
!4653 = !DILocation(line: 889, column: 5, scope: !4619)
!4654 = !DILocation(line: 890, column: 8, scope: !4619)
!4655 = !DILocation(line: 890, column: 5, scope: !4619)
!4656 = !DILocation(line: 891, column: 13, scope: !4619)
!4657 = !DILocation(line: 891, column: 22, scope: !4619)
!4658 = !DILocation(line: 891, column: 2, scope: !4619)
!4659 = !DILocation(line: 891, column: 11, scope: !4619)
!4660 = !DILocation(line: 893, column: 8, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 893, column: 2)
!4662 = !DILocation(line: 893, column: 7, scope: !4661)
!4663 = !DILocation(line: 893, column: 14, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4661, file: !3, line: 893, column: 2)
!4665 = !DILocation(line: 893, column: 15, scope: !4664)
!4666 = !DILocation(line: 893, column: 2, scope: !4661)
!4667 = !DILocation(line: 894, column: 7, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 893, column: 24)
!4669 = !DILocation(line: 894, column: 13, scope: !4668)
!4670 = !DILocation(line: 894, column: 12, scope: !4668)
!4671 = !DILocation(line: 894, column: 5, scope: !4668)
!4672 = !DILocation(line: 895, column: 9, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 895, column: 3)
!4674 = !DILocation(line: 895, column: 8, scope: !4673)
!4675 = !DILocation(line: 895, column: 15, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 895, column: 3)
!4677 = !DILocation(line: 895, column: 16, scope: !4676)
!4678 = !DILocation(line: 895, column: 3, scope: !4673)
!4679 = !DILocation(line: 896, column: 8, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 895, column: 25)
!4681 = !DILocation(line: 896, column: 14, scope: !4680)
!4682 = !DILocation(line: 896, column: 13, scope: !4680)
!4683 = !DILocation(line: 896, column: 6, scope: !4680)
!4684 = !DILocation(line: 897, column: 8, scope: !4680)
!4685 = !DILocation(line: 897, column: 6, scope: !4680)
!4686 = !DILocation(line: 898, column: 10, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 898, column: 4)
!4688 = !DILocation(line: 898, column: 9, scope: !4687)
!4689 = !DILocation(line: 898, column: 14, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 898, column: 4)
!4691 = !DILocation(line: 898, column: 16, scope: !4690)
!4692 = !DILocation(line: 898, column: 15, scope: !4690)
!4693 = !DILocation(line: 898, column: 4, scope: !4687)
!4694 = !DILocation(line: 899, column: 15, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 898, column: 34)
!4696 = !DILocation(line: 899, column: 24, scope: !4695)
!4697 = !DILocation(line: 899, column: 22, scope: !4695)
!4698 = !DILocation(line: 899, column: 30, scope: !4695)
!4699 = !DILocation(line: 899, column: 29, scope: !4695)
!4700 = !DILocation(line: 899, column: 5, scope: !4695)
!4701 = !DILocation(line: 899, column: 13, scope: !4695)
!4702 = !DILocation(line: 900, column: 15, scope: !4695)
!4703 = !DILocation(line: 900, column: 24, scope: !4695)
!4704 = !DILocation(line: 900, column: 22, scope: !4695)
!4705 = !DILocation(line: 900, column: 30, scope: !4695)
!4706 = !DILocation(line: 900, column: 29, scope: !4695)
!4707 = !DILocation(line: 900, column: 5, scope: !4695)
!4708 = !DILocation(line: 900, column: 13, scope: !4695)
!4709 = !DILocation(line: 901, column: 11, scope: !4695)
!4710 = !DILocation(line: 901, column: 20, scope: !4695)
!4711 = !DILocation(line: 901, column: 19, scope: !4695)
!4712 = !DILocation(line: 901, column: 31, scope: !4695)
!4713 = !DILocation(line: 901, column: 40, scope: !4695)
!4714 = !DILocation(line: 901, column: 39, scope: !4695)
!4715 = !DILocation(line: 901, column: 29, scope: !4695)
!4716 = !DILocation(line: 901, column: 9, scope: !4695)
!4717 = !DILocation(line: 902, column: 9, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 902, column: 9)
!4719 = !DILocation(line: 902, column: 16, scope: !4718)
!4720 = !DILocation(line: 902, column: 14, scope: !4718)
!4721 = !DILocation(line: 902, column: 20, scope: !4718)
!4722 = !DILocation(line: 902, column: 23, scope: !4718)
!4723 = !DILocation(line: 902, column: 27, scope: !4718)
!4724 = !DILocation(line: 902, column: 9, scope: !4695)
!4725 = !DILocation(line: 903, column: 18, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 902, column: 34)
!4727 = !DILocation(line: 903, column: 27, scope: !4726)
!4728 = !DILocation(line: 903, column: 26, scope: !4726)
!4729 = !DILocation(line: 903, column: 6, scope: !4726)
!4730 = !DILocation(line: 903, column: 15, scope: !4726)
!4731 = !DILocation(line: 904, column: 18, scope: !4726)
!4732 = !DILocation(line: 904, column: 27, scope: !4726)
!4733 = !DILocation(line: 904, column: 26, scope: !4726)
!4734 = !DILocation(line: 904, column: 6, scope: !4726)
!4735 = !DILocation(line: 904, column: 15, scope: !4726)
!4736 = !DILocation(line: 905, column: 5, scope: !4726)
!4737 = !DILocation(line: 906, column: 4, scope: !4695)
!4738 = !DILocation(line: 898, column: 22, scope: !4690)
!4739 = !DILocation(line: 898, column: 28, scope: !4690)
!4740 = !DILocation(line: 898, column: 4, scope: !4690)
!4741 = distinct !{!4741, !4693, !4742}
!4742 = !DILocation(line: 906, column: 4, scope: !4687)
!4743 = !DILocation(line: 907, column: 3, scope: !4680)
!4744 = !DILocation(line: 895, column: 21, scope: !4676)
!4745 = !DILocation(line: 895, column: 3, scope: !4676)
!4746 = distinct !{!4746, !4678, !4747}
!4747 = !DILocation(line: 907, column: 3, scope: !4673)
!4748 = !DILocation(line: 908, column: 2, scope: !4668)
!4749 = !DILocation(line: 893, column: 20, scope: !4664)
!4750 = !DILocation(line: 893, column: 2, scope: !4664)
!4751 = distinct !{!4751, !4666, !4752}
!4752 = !DILocation(line: 908, column: 2, scope: !4661)
!4753 = !DILocation(line: 909, column: 17, scope: !4619)
!4754 = !DILocation(line: 909, column: 16, scope: !4619)
!4755 = !DILocation(line: 909, column: 21, scope: !4619)
!4756 = !DILocation(line: 909, column: 20, scope: !4619)
!4757 = !DILocation(line: 909, column: 38, scope: !4619)
!4758 = !DILocation(line: 909, column: 31, scope: !4619)
!4759 = !DILocation(line: 909, column: 30, scope: !4619)
!4760 = !DILocation(line: 909, column: 2, scope: !4619)
!4761 = !DILocation(line: 909, column: 9, scope: !4619)
!4762 = !DILocation(line: 910, column: 17, scope: !4619)
!4763 = !DILocation(line: 910, column: 16, scope: !4619)
!4764 = !DILocation(line: 910, column: 21, scope: !4619)
!4765 = !DILocation(line: 910, column: 20, scope: !4619)
!4766 = !DILocation(line: 910, column: 38, scope: !4619)
!4767 = !DILocation(line: 910, column: 31, scope: !4619)
!4768 = !DILocation(line: 910, column: 30, scope: !4619)
!4769 = !DILocation(line: 910, column: 2, scope: !4619)
!4770 = !DILocation(line: 910, column: 9, scope: !4619)
!4771 = !DILocation(line: 912, column: 10, scope: !4619)
!4772 = !DILocation(line: 912, column: 19, scope: !4619)
!4773 = !DILocation(line: 912, column: 32, scope: !4619)
!4774 = !DILocation(line: 912, column: 39, scope: !4619)
!4775 = !DILocation(line: 912, column: 38, scope: !4619)
!4776 = !DILocation(line: 912, column: 45, scope: !4619)
!4777 = !DILocation(line: 912, column: 25, scope: !4619)
!4778 = !DILocation(line: 912, column: 24, scope: !4619)
!4779 = !DILocation(line: 912, column: 17, scope: !4619)
!4780 = !DILocation(line: 912, column: 2, scope: !4619)
!4781 = !DILocation(line: 912, column: 8, scope: !4619)
!4782 = !DILocation(line: 913, column: 10, scope: !4619)
!4783 = !DILocation(line: 913, column: 19, scope: !4619)
!4784 = !DILocation(line: 913, column: 32, scope: !4619)
!4785 = !DILocation(line: 913, column: 39, scope: !4619)
!4786 = !DILocation(line: 913, column: 38, scope: !4619)
!4787 = !DILocation(line: 913, column: 45, scope: !4619)
!4788 = !DILocation(line: 913, column: 25, scope: !4619)
!4789 = !DILocation(line: 913, column: 24, scope: !4619)
!4790 = !DILocation(line: 913, column: 17, scope: !4619)
!4791 = !DILocation(line: 913, column: 2, scope: !4619)
!4792 = !DILocation(line: 913, column: 8, scope: !4619)
!4793 = !DILocation(line: 914, column: 1, scope: !4619)
!4794 = distinct !DISubprogram(name: "jitter_plane_offset", scope: !3, file: !3, line: 917, type: !4795, scopeLine: 918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4795 = !DISubroutineType(types: !4796)
!4796 = !{null, !6, !6, !8, !7, !7, !7, !7}
!4797 = !DILocalVariable(name: "jitter1", arg: 1, scope: !4794, file: !3, line: 917, type: !6)
!4798 = !DILocation(line: 917, column: 40, scope: !4794)
!4799 = !DILocalVariable(name: "jitter2", arg: 2, scope: !4794, file: !3, line: 917, type: !6)
!4800 = !DILocation(line: 917, column: 56, scope: !4794)
!4801 = !DILocalVariable(name: "tot", arg: 3, scope: !4794, file: !3, line: 917, type: !8)
!4802 = !DILocation(line: 917, column: 69, scope: !4794)
!4803 = !DILocalVariable(name: "sizex", arg: 4, scope: !4794, file: !3, line: 917, type: !7)
!4804 = !DILocation(line: 917, column: 80, scope: !4794)
!4805 = !DILocalVariable(name: "sizey", arg: 5, scope: !4794, file: !3, line: 917, type: !7)
!4806 = !DILocation(line: 917, column: 93, scope: !4794)
!4807 = !DILocalVariable(name: "ofsx", arg: 6, scope: !4794, file: !3, line: 917, type: !7)
!4808 = !DILocation(line: 917, column: 106, scope: !4794)
!4809 = !DILocalVariable(name: "ofsy", arg: 7, scope: !4794, file: !3, line: 917, type: !7)
!4810 = !DILocation(line: 917, column: 118, scope: !4794)
!4811 = !DILocalVariable(name: "dsizex", scope: !4794, file: !3, line: 919, type: !7)
!4812 = !DILocation(line: 919, column: 8, scope: !4794)
!4813 = !DILocation(line: 919, column: 16, scope: !4794)
!4814 = !DILocation(line: 919, column: 22, scope: !4794)
!4815 = !DILocation(line: 919, column: 21, scope: !4794)
!4816 = !DILocalVariable(name: "dsizey", scope: !4794, file: !3, line: 920, type: !7)
!4817 = !DILocation(line: 920, column: 8, scope: !4794)
!4818 = !DILocation(line: 920, column: 16, scope: !4794)
!4819 = !DILocation(line: 920, column: 22, scope: !4794)
!4820 = !DILocation(line: 920, column: 21, scope: !4794)
!4821 = !DILocalVariable(name: "hsizex", scope: !4794, file: !3, line: 921, type: !7)
!4822 = !DILocation(line: 921, column: 8, scope: !4794)
!4823 = !DILocation(line: 921, column: 21, scope: !4794)
!4824 = !DILocation(line: 921, column: 20, scope: !4794)
!4825 = !DILocalVariable(name: "hsizey", scope: !4794, file: !3, line: 921, type: !7)
!4826 = !DILocation(line: 921, column: 28, scope: !4794)
!4827 = !DILocation(line: 921, column: 41, scope: !4794)
!4828 = !DILocation(line: 921, column: 40, scope: !4794)
!4829 = !DILocalVariable(name: "x", scope: !4794, file: !3, line: 922, type: !8)
!4830 = !DILocation(line: 922, column: 6, scope: !4794)
!4831 = !DILocation(line: 924, column: 9, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 924, column: 2)
!4833 = !DILocation(line: 924, column: 8, scope: !4832)
!4834 = !DILocation(line: 924, column: 7, scope: !4832)
!4835 = !DILocation(line: 924, column: 14, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 924, column: 2)
!4837 = !DILocation(line: 924, column: 15, scope: !4836)
!4838 = !DILocation(line: 924, column: 2, scope: !4832)
!4839 = !DILocation(line: 925, column: 15, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 924, column: 48)
!4841 = !DILocation(line: 925, column: 28, scope: !4840)
!4842 = !DILocation(line: 925, column: 26, scope: !4840)
!4843 = !DILocation(line: 925, column: 3, scope: !4840)
!4844 = !DILocation(line: 925, column: 13, scope: !4840)
!4845 = !DILocation(line: 926, column: 15, scope: !4840)
!4846 = !DILocation(line: 926, column: 28, scope: !4840)
!4847 = !DILocation(line: 926, column: 26, scope: !4840)
!4848 = !DILocation(line: 926, column: 3, scope: !4840)
!4849 = !DILocation(line: 926, column: 13, scope: !4840)
!4850 = !DILocation(line: 927, column: 7, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4840, file: !3, line: 927, column: 7)
!4852 = !DILocation(line: 927, column: 20, scope: !4851)
!4853 = !DILocation(line: 927, column: 18, scope: !4851)
!4854 = !DILocation(line: 927, column: 7, scope: !4840)
!4855 = !DILocation(line: 927, column: 41, scope: !4851)
!4856 = !DILocation(line: 927, column: 28, scope: !4851)
!4857 = !DILocation(line: 927, column: 38, scope: !4851)
!4858 = !DILocation(line: 928, column: 7, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4840, file: !3, line: 928, column: 7)
!4860 = !DILocation(line: 928, column: 20, scope: !4859)
!4861 = !DILocation(line: 928, column: 18, scope: !4859)
!4862 = !DILocation(line: 928, column: 7, scope: !4840)
!4863 = !DILocation(line: 928, column: 41, scope: !4859)
!4864 = !DILocation(line: 928, column: 28, scope: !4859)
!4865 = !DILocation(line: 928, column: 38, scope: !4859)
!4866 = !DILocation(line: 929, column: 2, scope: !4840)
!4867 = !DILocation(line: 924, column: 20, scope: !4836)
!4868 = !DILocation(line: 924, column: 31, scope: !4836)
!4869 = !DILocation(line: 924, column: 43, scope: !4836)
!4870 = !DILocation(line: 924, column: 2, scope: !4836)
!4871 = distinct !{!4871, !4838, !4872}
!4872 = !DILocation(line: 929, column: 2, scope: !4832)
!4873 = !DILocation(line: 930, column: 1, scope: !4794)
!4874 = distinct !DISubprogram(name: "init_render_qmcsampler", scope: !3, file: !3, line: 1191, type: !2846, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4875 = !DILocalVariable(name: "re", arg: 1, scope: !4874, file: !3, line: 1191, type: !2526)
!4876 = !DILocation(line: 1191, column: 37, scope: !4874)
!4877 = !DILocation(line: 1193, column: 19, scope: !4874)
!4878 = !DILocation(line: 1193, column: 2, scope: !4874)
!4879 = !DILocation(line: 1193, column: 6, scope: !4874)
!4880 = !DILocation(line: 1193, column: 17, scope: !4874)
!4881 = !DILocation(line: 1194, column: 1, scope: !4874)
!4882 = distinct !DISubprogram(name: "free_render_qmcsampler", scope: !3, file: !3, line: 1222, type: !2846, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4883 = !DILocalVariable(name: "re", arg: 1, scope: !4882, file: !3, line: 1222, type: !2526)
!4884 = !DILocation(line: 1222, column: 37, scope: !4882)
!4885 = !DILocation(line: 1224, column: 6, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 1224, column: 6)
!4887 = !DILocation(line: 1224, column: 10, scope: !4886)
!4888 = !DILocation(line: 1224, column: 6, scope: !4882)
!4889 = !DILocalVariable(name: "qsa", scope: !4890, file: !3, line: 1225, type: !4891)
!4890 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 1224, column: 23)
!4891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4892, size: 64)
!4892 = !DIDerivedType(tag: DW_TAG_typedef, name: "QMCSampler", file: !56, line: 86, baseType: !4893)
!4893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QMCSampler", file: !56, line: 79, size: 448, elements: !4894)
!4894 = !{!4895, !4897, !4898, !4899, !4900, !4901, !4903}
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4893, file: !56, line: 80, baseType: !4896, size: 64)
!4896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4893, size: 64)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4893, file: !56, line: 80, baseType: !4896, size: 64, offset: 64)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4893, file: !56, line: 81, baseType: !8, size: 32, offset: 128)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !4893, file: !56, line: 82, baseType: !8, size: 32, offset: 160)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4893, file: !56, line: 83, baseType: !8, size: 32, offset: 192)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "samp2d", scope: !4893, file: !56, line: 84, baseType: !4902, size: 64, offset: 256)
!4902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "offs", scope: !4893, file: !56, line: 85, baseType: !4904, size: 128, offset: 320)
!4904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2745, size: 128, elements: !4905)
!4905 = !{!401, !581}
!4906 = !DILocation(line: 1225, column: 15, scope: !4890)
!4907 = !DILocalVariable(name: "next", scope: !4890, file: !3, line: 1225, type: !4891)
!4908 = !DILocation(line: 1225, column: 21, scope: !4890)
!4909 = !DILocalVariable(name: "a", scope: !4890, file: !3, line: 1226, type: !8)
!4910 = !DILocation(line: 1226, column: 7, scope: !4890)
!4911 = !DILocation(line: 1227, column: 9, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 1227, column: 3)
!4913 = !DILocation(line: 1227, column: 8, scope: !4912)
!4914 = !DILocation(line: 1227, column: 13, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 1227, column: 3)
!4916 = !DILocation(line: 1227, column: 14, scope: !4915)
!4917 = !DILocation(line: 1227, column: 3, scope: !4912)
!4918 = !DILocation(line: 1228, column: 13, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 1228, column: 4)
!4920 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 1227, column: 41)
!4921 = !DILocation(line: 1228, column: 17, scope: !4919)
!4922 = !DILocation(line: 1228, column: 29, scope: !4919)
!4923 = !DILocation(line: 1228, column: 32, scope: !4919)
!4924 = !DILocation(line: 1228, column: 12, scope: !4919)
!4925 = !DILocation(line: 1228, column: 9, scope: !4919)
!4926 = !DILocation(line: 1228, column: 39, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 1228, column: 4)
!4928 = !DILocation(line: 1228, column: 4, scope: !4919)
!4929 = !DILocation(line: 1229, column: 11, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 1228, column: 54)
!4931 = !DILocation(line: 1229, column: 16, scope: !4930)
!4932 = !DILocation(line: 1229, column: 9, scope: !4930)
!4933 = !DILocation(line: 1230, column: 21, scope: !4930)
!4934 = !DILocation(line: 1230, column: 5, scope: !4930)
!4935 = !DILocation(line: 1231, column: 4, scope: !4930)
!4936 = !DILocation(line: 1228, column: 48, scope: !4927)
!4937 = !DILocation(line: 1228, column: 47, scope: !4927)
!4938 = !DILocation(line: 1228, column: 4, scope: !4927)
!4939 = distinct !{!4939, !4928, !4940}
!4940 = !DILocation(line: 1231, column: 4, scope: !4919)
!4941 = !DILocation(line: 1233, column: 30, scope: !4920)
!4942 = !DILocation(line: 1233, column: 34, scope: !4920)
!4943 = !DILocation(line: 1233, column: 46, scope: !4920)
!4944 = !DILocation(line: 1233, column: 49, scope: !4920)
!4945 = !DILocation(line: 1233, column: 53, scope: !4920)
!4946 = !DILocation(line: 1233, column: 4, scope: !4920)
!4947 = !DILocation(line: 1233, column: 8, scope: !4920)
!4948 = !DILocation(line: 1233, column: 20, scope: !4920)
!4949 = !DILocation(line: 1233, column: 23, scope: !4920)
!4950 = !DILocation(line: 1233, column: 28, scope: !4920)
!4951 = !DILocation(line: 1234, column: 3, scope: !4920)
!4952 = !DILocation(line: 1227, column: 37, scope: !4915)
!4953 = !DILocation(line: 1227, column: 3, scope: !4915)
!4954 = distinct !{!4954, !4917, !4955}
!4955 = !DILocation(line: 1234, column: 3, scope: !4912)
!4956 = !DILocation(line: 1236, column: 3, scope: !4890)
!4957 = !DILocation(line: 1236, column: 13, scope: !4890)
!4958 = !DILocation(line: 1236, column: 17, scope: !4890)
!4959 = !DILocation(line: 1237, column: 3, scope: !4890)
!4960 = !DILocation(line: 1237, column: 7, scope: !4890)
!4961 = !DILocation(line: 1237, column: 18, scope: !4890)
!4962 = !DILocation(line: 1238, column: 2, scope: !4890)
!4963 = !DILocation(line: 1239, column: 1, scope: !4882)
!4964 = distinct !DISubprogram(name: "QMC_freeSampler", scope: !3, file: !3, line: 1092, type: !4965, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{null, !4891}
!4967 = !DILocalVariable(name: "qsa", arg: 1, scope: !4964, file: !3, line: 1092, type: !4891)
!4968 = !DILocation(line: 1092, column: 41, scope: !4964)
!4969 = !DILocation(line: 1094, column: 2, scope: !4964)
!4970 = !DILocation(line: 1094, column: 12, scope: !4964)
!4971 = !DILocation(line: 1094, column: 17, scope: !4964)
!4972 = !DILocation(line: 1095, column: 2, scope: !4964)
!4973 = !DILocation(line: 1095, column: 12, scope: !4964)
!4974 = !DILocation(line: 1096, column: 1, scope: !4964)
!4975 = distinct !DISubprogram(name: "ray_trace", scope: !3, file: !3, line: 1505, type: !4976, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{null, !3683, !3824}
!4978 = !DILocalVariable(name: "shi", arg: 1, scope: !4975, file: !3, line: 1505, type: !3683)
!4979 = !DILocation(line: 1505, column: 28, scope: !4975)
!4980 = !DILocalVariable(name: "shr", arg: 2, scope: !4975, file: !3, line: 1505, type: !3824)
!4981 = !DILocation(line: 1505, column: 46, scope: !4975)
!4982 = !DILocalVariable(name: "f1", scope: !4975, file: !3, line: 1507, type: !7)
!4983 = !DILocation(line: 1507, column: 8, scope: !4975)
!4984 = !DILocalVariable(name: "fr", scope: !4975, file: !3, line: 1507, type: !7)
!4985 = !DILocation(line: 1507, column: 12, scope: !4975)
!4986 = !DILocalVariable(name: "fg", scope: !4975, file: !3, line: 1507, type: !7)
!4987 = !DILocation(line: 1507, column: 16, scope: !4975)
!4988 = !DILocalVariable(name: "fb", scope: !4975, file: !3, line: 1507, type: !7)
!4989 = !DILocation(line: 1507, column: 20, scope: !4975)
!4990 = !DILocalVariable(name: "mircol", scope: !4975, file: !3, line: 1508, type: !381)
!4991 = !DILocation(line: 1508, column: 8, scope: !4975)
!4992 = !DILocalVariable(name: "tracol", scope: !4975, file: !3, line: 1508, type: !381)
!4993 = !DILocation(line: 1508, column: 19, scope: !4975)
!4994 = !DILocalVariable(name: "diff", scope: !4975, file: !3, line: 1509, type: !206)
!4995 = !DILocation(line: 1509, column: 8, scope: !4975)
!4996 = !DILocalVariable(name: "do_tra", scope: !4975, file: !3, line: 1510, type: !8)
!4997 = !DILocation(line: 1510, column: 6, scope: !4975)
!4998 = !DILocalVariable(name: "do_mir", scope: !4975, file: !3, line: 1510, type: !8)
!4999 = !DILocation(line: 1510, column: 14, scope: !4975)
!5000 = !DILocation(line: 1512, column: 13, scope: !4975)
!5001 = !DILocation(line: 1512, column: 18, scope: !4975)
!5002 = !DILocation(line: 1512, column: 23, scope: !4975)
!5003 = !DILocation(line: 1512, column: 36, scope: !4975)
!5004 = !DILocation(line: 1512, column: 40, scope: !4975)
!5005 = !DILocation(line: 1512, column: 45, scope: !4975)
!5006 = !DILocation(line: 1512, column: 50, scope: !4975)
!5007 = !DILocation(line: 1512, column: 66, scope: !4975)
!5008 = !DILocation(line: 1512, column: 69, scope: !4975)
!5009 = !DILocation(line: 1512, column: 74, scope: !4975)
!5010 = !DILocation(line: 1512, column: 80, scope: !4975)
!5011 = !DILocation(line: 1512, column: 88, scope: !4975)
!5012 = !DILocation(line: 1512, column: 92, scope: !4975)
!5013 = !DILocation(line: 1512, column: 97, scope: !4975)
!5014 = !DILocation(line: 1512, column: 106, scope: !4975)
!5015 = !DILocation(line: 1512, column: 111, scope: !4975)
!5016 = !DILocation(line: 1512, column: 116, scope: !4975)
!5017 = !DILocation(line: 1512, column: 103, scope: !4975)
!5018 = !DILocation(line: 0, scope: !4975)
!5019 = !DILocation(line: 1512, column: 9, scope: !4975)
!5020 = !DILocation(line: 1513, column: 13, scope: !4975)
!5021 = !DILocation(line: 1513, column: 18, scope: !4975)
!5022 = !DILocation(line: 1513, column: 23, scope: !4975)
!5023 = !DILocation(line: 1513, column: 28, scope: !4975)
!5024 = !DILocation(line: 1513, column: 44, scope: !4975)
!5025 = !DILocation(line: 1513, column: 47, scope: !4975)
!5026 = !DILocation(line: 1513, column: 52, scope: !4975)
!5027 = !DILocation(line: 1513, column: 63, scope: !4975)
!5028 = !DILocation(line: 1513, column: 71, scope: !4975)
!5029 = !DILocation(line: 1513, column: 75, scope: !4975)
!5030 = !DILocation(line: 1513, column: 80, scope: !4975)
!5031 = !DILocation(line: 1513, column: 89, scope: !4975)
!5032 = !DILocation(line: 1513, column: 94, scope: !4975)
!5033 = !DILocation(line: 1513, column: 99, scope: !4975)
!5034 = !DILocation(line: 1513, column: 86, scope: !4975)
!5035 = !DILocation(line: 1513, column: 9, scope: !4975)
!5036 = !DILocation(line: 1516, column: 6, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1516, column: 6)
!5038 = !DILocation(line: 1516, column: 11, scope: !5037)
!5039 = !DILocation(line: 1516, column: 24, scope: !5037)
!5040 = !DILocation(line: 1516, column: 6, scope: !4975)
!5041 = !DILocation(line: 1517, column: 15, scope: !5037)
!5042 = !DILocation(line: 1517, column: 21, scope: !5037)
!5043 = !DILocation(line: 1517, column: 26, scope: !5037)
!5044 = !DILocation(line: 1517, column: 36, scope: !5037)
!5045 = !DILocation(line: 1517, column: 41, scope: !5037)
!5046 = !DILocation(line: 1517, column: 3, scope: !5037)
!5047 = !DILocation(line: 1519, column: 14, scope: !5037)
!5048 = !DILocation(line: 1519, column: 20, scope: !5037)
!5049 = !DILocation(line: 1519, column: 25, scope: !5037)
!5050 = !DILocation(line: 1519, column: 3, scope: !5037)
!5051 = !DILocation(line: 1521, column: 6, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1521, column: 6)
!5053 = !DILocation(line: 1521, column: 6, scope: !4975)
!5054 = !DILocalVariable(name: "olddiff", scope: !5055, file: !3, line: 1522, type: !206)
!5055 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 1521, column: 14)
!5056 = !DILocation(line: 1522, column: 9, scope: !5055)
!5057 = !DILocalVariable(name: "f", scope: !5055, file: !3, line: 1522, type: !7)
!5058 = !DILocation(line: 1522, column: 21, scope: !5055)
!5059 = !DILocation(line: 1524, column: 17, scope: !5055)
!5060 = !DILocation(line: 1524, column: 25, scope: !5055)
!5061 = !DILocation(line: 1524, column: 30, scope: !5055)
!5062 = !DILocation(line: 1524, column: 3, scope: !5055)
!5063 = !DILocation(line: 1526, column: 6, scope: !5055)
!5064 = !DILocation(line: 1526, column: 11, scope: !5055)
!5065 = !DILocation(line: 1526, column: 4, scope: !5055)
!5066 = !DILocation(line: 1526, column: 27, scope: !5055)
!5067 = !DILocation(line: 1526, column: 26, scope: !5055)
!5068 = !DILocation(line: 1526, column: 20, scope: !5055)
!5069 = !DILocation(line: 1527, column: 13, scope: !5055)
!5070 = !DILocation(line: 1527, column: 18, scope: !5055)
!5071 = !DILocation(line: 1527, column: 23, scope: !5055)
!5072 = !DILocation(line: 1527, column: 31, scope: !5055)
!5073 = !DILocation(line: 1527, column: 36, scope: !5055)
!5074 = !DILocation(line: 1527, column: 37, scope: !5055)
!5075 = !DILocation(line: 1527, column: 29, scope: !5055)
!5076 = !DILocation(line: 1527, column: 11, scope: !5055)
!5077 = !DILocation(line: 1527, column: 5, scope: !5055)
!5078 = !DILocation(line: 1528, column: 13, scope: !5055)
!5079 = !DILocation(line: 1528, column: 18, scope: !5055)
!5080 = !DILocation(line: 1528, column: 23, scope: !5055)
!5081 = !DILocation(line: 1528, column: 31, scope: !5055)
!5082 = !DILocation(line: 1528, column: 36, scope: !5055)
!5083 = !DILocation(line: 1528, column: 37, scope: !5055)
!5084 = !DILocation(line: 1528, column: 29, scope: !5055)
!5085 = !DILocation(line: 1528, column: 11, scope: !5055)
!5086 = !DILocation(line: 1528, column: 5, scope: !5055)
!5087 = !DILocation(line: 1529, column: 13, scope: !5055)
!5088 = !DILocation(line: 1529, column: 18, scope: !5055)
!5089 = !DILocation(line: 1529, column: 23, scope: !5055)
!5090 = !DILocation(line: 1529, column: 31, scope: !5055)
!5091 = !DILocation(line: 1529, column: 36, scope: !5055)
!5092 = !DILocation(line: 1529, column: 37, scope: !5055)
!5093 = !DILocation(line: 1529, column: 29, scope: !5055)
!5094 = !DILocation(line: 1529, column: 11, scope: !5055)
!5095 = !DILocation(line: 1529, column: 5, scope: !5055)
!5096 = !DILocation(line: 1532, column: 14, scope: !5055)
!5097 = !DILocation(line: 1532, column: 23, scope: !5055)
!5098 = !DILocation(line: 1532, column: 3, scope: !5055)
!5099 = !DILocation(line: 1534, column: 12, scope: !5055)
!5100 = !DILocation(line: 1534, column: 14, scope: !5055)
!5101 = !DILocation(line: 1534, column: 13, scope: !5055)
!5102 = !DILocation(line: 1534, column: 24, scope: !5055)
!5103 = !DILocation(line: 1534, column: 27, scope: !5055)
!5104 = !DILocation(line: 1534, column: 26, scope: !5055)
!5105 = !DILocation(line: 1534, column: 30, scope: !5055)
!5106 = !DILocation(line: 1534, column: 29, scope: !5055)
!5107 = !DILocation(line: 1534, column: 22, scope: !5055)
!5108 = !DILocation(line: 1534, column: 3, scope: !5055)
!5109 = !DILocation(line: 1534, column: 10, scope: !5055)
!5110 = !DILocation(line: 1535, column: 12, scope: !5055)
!5111 = !DILocation(line: 1535, column: 14, scope: !5055)
!5112 = !DILocation(line: 1535, column: 13, scope: !5055)
!5113 = !DILocation(line: 1535, column: 24, scope: !5055)
!5114 = !DILocation(line: 1535, column: 27, scope: !5055)
!5115 = !DILocation(line: 1535, column: 26, scope: !5055)
!5116 = !DILocation(line: 1535, column: 30, scope: !5055)
!5117 = !DILocation(line: 1535, column: 29, scope: !5055)
!5118 = !DILocation(line: 1535, column: 22, scope: !5055)
!5119 = !DILocation(line: 1535, column: 3, scope: !5055)
!5120 = !DILocation(line: 1535, column: 10, scope: !5055)
!5121 = !DILocation(line: 1536, column: 12, scope: !5055)
!5122 = !DILocation(line: 1536, column: 14, scope: !5055)
!5123 = !DILocation(line: 1536, column: 13, scope: !5055)
!5124 = !DILocation(line: 1536, column: 24, scope: !5055)
!5125 = !DILocation(line: 1536, column: 27, scope: !5055)
!5126 = !DILocation(line: 1536, column: 26, scope: !5055)
!5127 = !DILocation(line: 1536, column: 30, scope: !5055)
!5128 = !DILocation(line: 1536, column: 29, scope: !5055)
!5129 = !DILocation(line: 1536, column: 22, scope: !5055)
!5130 = !DILocation(line: 1536, column: 3, scope: !5055)
!5131 = !DILocation(line: 1536, column: 10, scope: !5055)
!5132 = !DILocation(line: 1538, column: 7, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 1538, column: 7)
!5134 = !DILocation(line: 1538, column: 12, scope: !5133)
!5135 = !DILocation(line: 1538, column: 21, scope: !5133)
!5136 = !DILocation(line: 1538, column: 7, scope: !5055)
!5137 = !DILocation(line: 1539, column: 16, scope: !5133)
!5138 = !DILocation(line: 1539, column: 21, scope: !5133)
!5139 = !DILocation(line: 1539, column: 27, scope: !5133)
!5140 = !DILocation(line: 1539, column: 33, scope: !5133)
!5141 = !DILocation(line: 1539, column: 4, scope: !5133)
!5142 = !DILocation(line: 1541, column: 9, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 1541, column: 7)
!5144 = !DILocation(line: 1541, column: 14, scope: !5143)
!5145 = !DILocation(line: 1541, column: 27, scope: !5143)
!5146 = !DILocation(line: 1541, column: 7, scope: !5055)
!5147 = !DILocation(line: 1542, column: 16, scope: !5143)
!5148 = !DILocation(line: 1542, column: 22, scope: !5143)
!5149 = !DILocation(line: 1542, column: 28, scope: !5143)
!5150 = !DILocation(line: 1542, column: 33, scope: !5143)
!5151 = !DILocation(line: 1542, column: 4, scope: !5143)
!5152 = !DILocation(line: 1544, column: 29, scope: !5055)
!5153 = !DILocation(line: 1544, column: 16, scope: !5055)
!5154 = !DILocation(line: 1544, column: 3, scope: !5055)
!5155 = !DILocation(line: 1544, column: 8, scope: !5055)
!5156 = !DILocation(line: 1544, column: 14, scope: !5055)
!5157 = !DILocation(line: 1545, column: 2, scope: !5055)
!5158 = !DILocation(line: 1547, column: 6, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1547, column: 6)
!5160 = !DILocation(line: 1547, column: 6, scope: !4975)
!5161 = !DILocalVariable(name: "i", scope: !5162, file: !3, line: 1548, type: !3670)
!5162 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 1547, column: 14)
!5163 = !DILocation(line: 1548, column: 15, scope: !5162)
!5164 = !DILocation(line: 1548, column: 18, scope: !5162)
!5165 = !DILocation(line: 1548, column: 23, scope: !5162)
!5166 = !DILocation(line: 1548, column: 46, scope: !5162)
!5167 = !DILocation(line: 1548, column: 51, scope: !5162)
!5168 = !DILocation(line: 1548, column: 57, scope: !5162)
!5169 = !DILocation(line: 1548, column: 62, scope: !5162)
!5170 = !DILocation(line: 1548, column: 66, scope: !5162)
!5171 = !DILocation(line: 1548, column: 71, scope: !5162)
!5172 = !DILocation(line: 1548, column: 76, scope: !5162)
!5173 = !DILocation(line: 1548, column: 91, scope: !5162)
!5174 = !DILocation(line: 1548, column: 96, scope: !5162)
!5175 = !DILocation(line: 1548, column: 101, scope: !5162)
!5176 = !DILocation(line: 1548, column: 34, scope: !5162)
!5177 = !DILocation(line: 1548, column: 33, scope: !5162)
!5178 = !DILocation(line: 1549, column: 7, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 1549, column: 7)
!5180 = !DILocation(line: 1549, column: 8, scope: !5179)
!5181 = !DILocation(line: 1549, column: 7, scope: !5162)
!5182 = !DILocation(line: 1551, column: 18, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 1549, column: 16)
!5184 = !DILocation(line: 1551, column: 26, scope: !5183)
!5185 = !DILocation(line: 1551, column: 31, scope: !5183)
!5186 = !DILocation(line: 1551, column: 36, scope: !5183)
!5187 = !DILocation(line: 1551, column: 4, scope: !5183)
!5188 = !DILocation(line: 1553, column: 8, scope: !5183)
!5189 = !DILocation(line: 1553, column: 10, scope: !5183)
!5190 = !DILocation(line: 1553, column: 15, scope: !5183)
!5191 = !DILocation(line: 1553, column: 9, scope: !5183)
!5192 = !DILocation(line: 1553, column: 6, scope: !5183)
!5193 = !DILocation(line: 1554, column: 8, scope: !5183)
!5194 = !DILocation(line: 1554, column: 10, scope: !5183)
!5195 = !DILocation(line: 1554, column: 15, scope: !5183)
!5196 = !DILocation(line: 1554, column: 9, scope: !5183)
!5197 = !DILocation(line: 1554, column: 6, scope: !5183)
!5198 = !DILocation(line: 1555, column: 8, scope: !5183)
!5199 = !DILocation(line: 1555, column: 10, scope: !5183)
!5200 = !DILocation(line: 1555, column: 15, scope: !5183)
!5201 = !DILocation(line: 1555, column: 9, scope: !5183)
!5202 = !DILocation(line: 1555, column: 6, scope: !5183)
!5203 = !DILocation(line: 1557, column: 8, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 1557, column: 8)
!5205 = !DILocation(line: 1557, column: 13, scope: !5204)
!5206 = !DILocation(line: 1557, column: 22, scope: !5204)
!5207 = !DILocation(line: 1557, column: 8, scope: !5183)
!5208 = !DILocation(line: 1559, column: 19, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 1557, column: 42)
!5210 = !DILocation(line: 1559, column: 22, scope: !5209)
!5211 = !DILocation(line: 1559, column: 21, scope: !5209)
!5212 = !DILocation(line: 1559, column: 34, scope: !5209)
!5213 = !DILocation(line: 1559, column: 37, scope: !5209)
!5214 = !DILocation(line: 1559, column: 36, scope: !5209)
!5215 = !DILocation(line: 1559, column: 32, scope: !5209)
!5216 = !DILocation(line: 1559, column: 5, scope: !5209)
!5217 = !DILocation(line: 1559, column: 10, scope: !5209)
!5218 = !DILocation(line: 1559, column: 17, scope: !5209)
!5219 = !DILocation(line: 1560, column: 19, scope: !5209)
!5220 = !DILocation(line: 1560, column: 22, scope: !5209)
!5221 = !DILocation(line: 1560, column: 21, scope: !5209)
!5222 = !DILocation(line: 1560, column: 34, scope: !5209)
!5223 = !DILocation(line: 1560, column: 37, scope: !5209)
!5224 = !DILocation(line: 1560, column: 36, scope: !5209)
!5225 = !DILocation(line: 1560, column: 32, scope: !5209)
!5226 = !DILocation(line: 1560, column: 5, scope: !5209)
!5227 = !DILocation(line: 1560, column: 10, scope: !5209)
!5228 = !DILocation(line: 1560, column: 17, scope: !5209)
!5229 = !DILocation(line: 1561, column: 19, scope: !5209)
!5230 = !DILocation(line: 1561, column: 22, scope: !5209)
!5231 = !DILocation(line: 1561, column: 21, scope: !5209)
!5232 = !DILocation(line: 1561, column: 34, scope: !5209)
!5233 = !DILocation(line: 1561, column: 37, scope: !5209)
!5234 = !DILocation(line: 1561, column: 36, scope: !5209)
!5235 = !DILocation(line: 1561, column: 32, scope: !5209)
!5236 = !DILocation(line: 1561, column: 5, scope: !5209)
!5237 = !DILocation(line: 1561, column: 10, scope: !5209)
!5238 = !DILocation(line: 1561, column: 17, scope: !5209)
!5239 = !DILocation(line: 1562, column: 4, scope: !5209)
!5240 = !DILocation(line: 1564, column: 8, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 1564, column: 8)
!5242 = !DILocation(line: 1564, column: 13, scope: !5241)
!5243 = !DILocation(line: 1564, column: 26, scope: !5241)
!5244 = !DILocation(line: 1564, column: 8, scope: !5183)
!5245 = !DILocation(line: 1570, column: 14, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 1564, column: 46)
!5247 = !DILocation(line: 1570, column: 13, scope: !5246)
!5248 = !DILocation(line: 1570, column: 7, scope: !5246)
!5249 = !DILocation(line: 1572, column: 16, scope: !5246)
!5250 = !DILocation(line: 1572, column: 5, scope: !5246)
!5251 = !DILocation(line: 1572, column: 13, scope: !5246)
!5252 = !DILocation(line: 1573, column: 16, scope: !5246)
!5253 = !DILocation(line: 1573, column: 5, scope: !5246)
!5254 = !DILocation(line: 1573, column: 13, scope: !5246)
!5255 = !DILocation(line: 1574, column: 16, scope: !5246)
!5256 = !DILocation(line: 1574, column: 5, scope: !5246)
!5257 = !DILocation(line: 1574, column: 13, scope: !5246)
!5258 = !DILocation(line: 1576, column: 9, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 1576, column: 9)
!5260 = !DILocation(line: 1576, column: 14, scope: !5259)
!5261 = !DILocation(line: 1576, column: 21, scope: !5259)
!5262 = !DILocation(line: 1576, column: 9, scope: !5246)
!5263 = !DILocation(line: 1576, column: 39, scope: !5259)
!5264 = !DILocation(line: 1576, column: 52, scope: !5259)
!5265 = !DILocation(line: 1576, column: 61, scope: !5259)
!5266 = !DILocation(line: 1576, column: 66, scope: !5259)
!5267 = !DILocation(line: 1576, column: 60, scope: !5259)
!5268 = !DILocation(line: 1576, column: 54, scope: !5259)
!5269 = !DILocation(line: 1576, column: 49, scope: !5259)
!5270 = !DILocation(line: 1576, column: 28, scope: !5259)
!5271 = !DILocation(line: 1576, column: 36, scope: !5259)
!5272 = !DILocation(line: 1577, column: 9, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 1577, column: 9)
!5274 = !DILocation(line: 1577, column: 14, scope: !5273)
!5275 = !DILocation(line: 1577, column: 21, scope: !5273)
!5276 = !DILocation(line: 1577, column: 9, scope: !5246)
!5277 = !DILocation(line: 1577, column: 39, scope: !5273)
!5278 = !DILocation(line: 1577, column: 52, scope: !5273)
!5279 = !DILocation(line: 1577, column: 61, scope: !5273)
!5280 = !DILocation(line: 1577, column: 66, scope: !5273)
!5281 = !DILocation(line: 1577, column: 60, scope: !5273)
!5282 = !DILocation(line: 1577, column: 54, scope: !5273)
!5283 = !DILocation(line: 1577, column: 49, scope: !5273)
!5284 = !DILocation(line: 1577, column: 28, scope: !5273)
!5285 = !DILocation(line: 1577, column: 36, scope: !5273)
!5286 = !DILocation(line: 1578, column: 9, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 1578, column: 9)
!5288 = !DILocation(line: 1578, column: 14, scope: !5287)
!5289 = !DILocation(line: 1578, column: 21, scope: !5287)
!5290 = !DILocation(line: 1578, column: 9, scope: !5246)
!5291 = !DILocation(line: 1578, column: 39, scope: !5287)
!5292 = !DILocation(line: 1578, column: 52, scope: !5287)
!5293 = !DILocation(line: 1578, column: 61, scope: !5287)
!5294 = !DILocation(line: 1578, column: 66, scope: !5287)
!5295 = !DILocation(line: 1578, column: 60, scope: !5287)
!5296 = !DILocation(line: 1578, column: 54, scope: !5287)
!5297 = !DILocation(line: 1578, column: 49, scope: !5287)
!5298 = !DILocation(line: 1578, column: 28, scope: !5287)
!5299 = !DILocation(line: 1578, column: 36, scope: !5287)
!5300 = !DILocation(line: 1579, column: 4, scope: !5246)
!5301 = !DILocation(line: 1580, column: 3, scope: !5183)
!5302 = !DILocation(line: 1581, column: 2, scope: !5162)
!5303 = !DILocation(line: 1583, column: 6, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1583, column: 6)
!5305 = !DILocation(line: 1583, column: 11, scope: !5304)
!5306 = !DILocation(line: 1583, column: 24, scope: !5304)
!5307 = !DILocation(line: 1583, column: 6, scope: !4975)
!5308 = !DILocation(line: 1584, column: 15, scope: !5304)
!5309 = !DILocation(line: 1584, column: 20, scope: !5304)
!5310 = !DILocation(line: 1584, column: 30, scope: !5304)
!5311 = !DILocation(line: 1584, column: 36, scope: !5304)
!5312 = !DILocation(line: 1584, column: 41, scope: !5304)
!5313 = !DILocation(line: 1584, column: 3, scope: !5304)
!5314 = !DILocation(line: 1586, column: 14, scope: !5304)
!5315 = !DILocation(line: 1586, column: 19, scope: !5304)
!5316 = !DILocation(line: 1586, column: 29, scope: !5304)
!5317 = !DILocation(line: 1586, column: 3, scope: !5304)
!5318 = !DILocation(line: 1587, column: 1, scope: !4975)
!5319 = distinct !DISubprogram(name: "trace_refract", scope: !3, file: !3, line: 1292, type: !5320, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!5320 = !DISubroutineType(types: !5321)
!5321 = !{null, !6, !3683, !3824}
!5322 = !DILocalVariable(name: "col", arg: 1, scope: !5319, file: !3, line: 1292, type: !6)
!5323 = !DILocation(line: 1292, column: 33, scope: !5319)
!5324 = !DILocalVariable(name: "shi", arg: 2, scope: !5319, file: !3, line: 1292, type: !3683)
!5325 = !DILocation(line: 1292, column: 53, scope: !5319)
!5326 = !DILocalVariable(name: "shr", arg: 3, scope: !5319, file: !3, line: 1292, type: !3824)
!5327 = !DILocation(line: 1292, column: 71, scope: !5319)
!5328 = !DILocalVariable(name: "qsa", scope: !5319, file: !3, line: 1294, type: !4891)
!5329 = !DILocation(line: 1294, column: 14, scope: !5319)
!5330 = !DILocalVariable(name: "samp_type", scope: !5319, file: !3, line: 1295, type: !8)
!5331 = !DILocation(line: 1295, column: 6, scope: !5319)
!5332 = !DILocalVariable(name: "traflag", scope: !5319, file: !3, line: 1296, type: !8)
!5333 = !DILocation(line: 1296, column: 6, scope: !5319)
!5334 = !DILocalVariable(name: "samp3d", scope: !5319, file: !3, line: 1298, type: !206)
!5335 = !DILocation(line: 1298, column: 8, scope: !5319)
!5336 = !DILocalVariable(name: "orthx", scope: !5319, file: !3, line: 1298, type: !206)
!5337 = !DILocation(line: 1298, column: 19, scope: !5319)
!5338 = !DILocalVariable(name: "orthy", scope: !5319, file: !3, line: 1298, type: !206)
!5339 = !DILocation(line: 1298, column: 29, scope: !5319)
!5340 = !DILocalVariable(name: "v_refract", scope: !5319, file: !3, line: 1299, type: !206)
!5341 = !DILocation(line: 1299, column: 8, scope: !5319)
!5342 = !DILocalVariable(name: "v_refract_new", scope: !5319, file: !3, line: 1299, type: !206)
!5343 = !DILocation(line: 1299, column: 22, scope: !5319)
!5344 = !DILocalVariable(name: "sampcol", scope: !5319, file: !3, line: 1300, type: !381)
!5345 = !DILocation(line: 1300, column: 8, scope: !5319)
!5346 = !DILocalVariable(name: "colsq", scope: !5319, file: !3, line: 1300, type: !381)
!5347 = !DILocation(line: 1300, column: 20, scope: !5319)
!5348 = !DILocalVariable(name: "blur", scope: !5319, file: !3, line: 1302, type: !7)
!5349 = !DILocation(line: 1302, column: 8, scope: !5319)
!5350 = !DILocation(line: 1302, column: 27, scope: !5319)
!5351 = !DILocation(line: 1302, column: 32, scope: !5319)
!5352 = !DILocation(line: 1302, column: 37, scope: !5319)
!5353 = !DILocation(line: 1302, column: 25, scope: !5319)
!5354 = !DILocation(line: 1302, column: 15, scope: !5319)
!5355 = !DILocalVariable(name: "max_samples", scope: !5319, file: !3, line: 1303, type: !107)
!5356 = !DILocation(line: 1303, column: 8, scope: !5319)
!5357 = !DILocation(line: 1303, column: 22, scope: !5319)
!5358 = !DILocation(line: 1303, column: 27, scope: !5319)
!5359 = !DILocation(line: 1303, column: 32, scope: !5319)
!5360 = !DILocalVariable(name: "adapt_thresh", scope: !5319, file: !3, line: 1304, type: !7)
!5361 = !DILocation(line: 1304, column: 8, scope: !5319)
!5362 = !DILocation(line: 1304, column: 23, scope: !5319)
!5363 = !DILocation(line: 1304, column: 28, scope: !5319)
!5364 = !DILocation(line: 1304, column: 33, scope: !5319)
!5365 = !DILocalVariable(name: "samples", scope: !5319, file: !3, line: 1306, type: !8)
!5366 = !DILocation(line: 1306, column: 6, scope: !5319)
!5367 = !DILocation(line: 1308, column: 24, scope: !5319)
!5368 = !DILocation(line: 1308, column: 33, scope: !5319)
!5369 = !DILocation(line: 1308, column: 13, scope: !5319)
!5370 = !DILocation(line: 1308, column: 22, scope: !5319)
!5371 = !DILocation(line: 1308, column: 2, scope: !5319)
!5372 = !DILocation(line: 1308, column: 11, scope: !5319)
!5373 = !DILocation(line: 1309, column: 20, scope: !5319)
!5374 = !DILocation(line: 1309, column: 27, scope: !5319)
!5375 = !DILocation(line: 1309, column: 11, scope: !5319)
!5376 = !DILocation(line: 1309, column: 18, scope: !5319)
!5377 = !DILocation(line: 1309, column: 2, scope: !5319)
!5378 = !DILocation(line: 1309, column: 9, scope: !5319)
!5379 = !DILocation(line: 1310, column: 10, scope: !5319)
!5380 = !DILocation(line: 1310, column: 15, scope: !5319)
!5381 = !DILocation(line: 1310, column: 2, scope: !5319)
!5382 = !DILocation(line: 1310, column: 8, scope: !5319)
!5383 = !DILocation(line: 1312, column: 6, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 1312, column: 6)
!5385 = !DILocation(line: 1312, column: 11, scope: !5384)
!5386 = !DILocation(line: 1312, column: 6, scope: !5319)
!5387 = !DILocation(line: 1313, column: 7, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1313, column: 7)
!5389 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1312, column: 19)
!5390 = !DILocation(line: 1313, column: 20, scope: !5388)
!5391 = !DILocation(line: 1313, column: 7, scope: !5389)
!5392 = !DILocation(line: 1313, column: 39, scope: !5388)
!5393 = !DILocation(line: 1313, column: 29, scope: !5388)
!5394 = !DILocation(line: 1314, column: 18, scope: !5388)
!5395 = !DILocation(line: 1317, column: 35, scope: !5389)
!5396 = !DILocation(line: 1317, column: 40, scope: !5389)
!5397 = !DILocation(line: 1317, column: 48, scope: !5389)
!5398 = !DILocation(line: 1317, column: 59, scope: !5389)
!5399 = !DILocation(line: 1317, column: 9, scope: !5389)
!5400 = !DILocation(line: 1317, column: 7, scope: !5389)
!5401 = !DILocation(line: 1318, column: 17, scope: !5389)
!5402 = !DILocation(line: 1318, column: 22, scope: !5389)
!5403 = !DILocation(line: 1318, column: 27, scope: !5389)
!5404 = !DILocation(line: 1318, column: 3, scope: !5389)
!5405 = !DILocation(line: 1319, column: 2, scope: !5389)
!5406 = !DILocation(line: 1321, column: 15, scope: !5384)
!5407 = !DILocation(line: 1324, column: 2, scope: !5319)
!5408 = !DILocation(line: 1324, column: 9, scope: !5319)
!5409 = !DILocation(line: 1324, column: 19, scope: !5319)
!5410 = !DILocation(line: 1324, column: 17, scope: !5319)
!5411 = !DILocation(line: 1325, column: 18, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 1325, column: 7)
!5413 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 1324, column: 32)
!5414 = !DILocation(line: 1325, column: 29, scope: !5412)
!5415 = !DILocation(line: 1325, column: 34, scope: !5412)
!5416 = !DILocation(line: 1325, column: 38, scope: !5412)
!5417 = !DILocation(line: 1325, column: 43, scope: !5412)
!5418 = !DILocation(line: 1325, column: 49, scope: !5412)
!5419 = !DILocation(line: 1325, column: 54, scope: !5412)
!5420 = !DILocation(line: 1325, column: 7, scope: !5412)
!5421 = !DILocation(line: 1325, column: 7, scope: !5413)
!5422 = !DILocation(line: 1326, column: 12, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 1325, column: 60)
!5424 = !DILocation(line: 1327, column: 3, scope: !5423)
!5425 = !DILocation(line: 1330, column: 9, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 1330, column: 8)
!5427 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 1328, column: 8)
!5428 = !DILocation(line: 1330, column: 14, scope: !5426)
!5429 = !DILocation(line: 1330, column: 19, scope: !5426)
!5430 = !DILocation(line: 1330, column: 24, scope: !5426)
!5431 = !DILocation(line: 1330, column: 8, scope: !5427)
!5432 = !DILocation(line: 1331, column: 16, scope: !5426)
!5433 = !DILocation(line: 1331, column: 27, scope: !5426)
!5434 = !DILocation(line: 1331, column: 32, scope: !5426)
!5435 = !DILocation(line: 1331, column: 36, scope: !5426)
!5436 = !DILocation(line: 1331, column: 41, scope: !5426)
!5437 = !DILocation(line: 1331, column: 47, scope: !5426)
!5438 = !DILocation(line: 1331, column: 52, scope: !5426)
!5439 = !DILocation(line: 1331, column: 5, scope: !5426)
!5440 = !DILocation(line: 1333, column: 23, scope: !5426)
!5441 = !DILocation(line: 1333, column: 34, scope: !5426)
!5442 = !DILocation(line: 1333, column: 39, scope: !5426)
!5443 = !DILocation(line: 1333, column: 43, scope: !5426)
!5444 = !DILocation(line: 1333, column: 48, scope: !5426)
!5445 = !DILocation(line: 1333, column: 5, scope: !5426)
!5446 = !DILocation(line: 1336, column: 16, scope: !5427)
!5447 = !DILocation(line: 1339, column: 7, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 1339, column: 7)
!5449 = !DILocation(line: 1339, column: 19, scope: !5448)
!5450 = !DILocation(line: 1339, column: 7, scope: !5413)
!5451 = !DILocation(line: 1341, column: 20, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1339, column: 24)
!5453 = !DILocation(line: 1341, column: 28, scope: !5452)
!5454 = !DILocation(line: 1341, column: 33, scope: !5452)
!5455 = !DILocation(line: 1341, column: 38, scope: !5452)
!5456 = !DILocation(line: 1341, column: 46, scope: !5452)
!5457 = !DILocation(line: 1341, column: 55, scope: !5452)
!5458 = !DILocation(line: 1341, column: 4, scope: !5452)
!5459 = !DILocation(line: 1343, column: 24, scope: !5452)
!5460 = !DILocation(line: 1343, column: 31, scope: !5452)
!5461 = !DILocation(line: 1343, column: 38, scope: !5452)
!5462 = !DILocation(line: 1343, column: 4, scope: !5452)
!5463 = !DILocation(line: 1344, column: 14, scope: !5452)
!5464 = !DILocation(line: 1344, column: 21, scope: !5452)
!5465 = !DILocation(line: 1344, column: 4, scope: !5452)
!5466 = !DILocation(line: 1345, column: 14, scope: !5452)
!5467 = !DILocation(line: 1345, column: 21, scope: !5452)
!5468 = !DILocation(line: 1345, column: 4, scope: !5452)
!5469 = !DILocation(line: 1348, column: 16, scope: !5452)
!5470 = !DILocation(line: 1348, column: 31, scope: !5452)
!5471 = !DILocation(line: 1348, column: 42, scope: !5452)
!5472 = !DILocation(line: 1348, column: 4, scope: !5452)
!5473 = !DILocation(line: 1349, column: 14, scope: !5452)
!5474 = !DILocation(line: 1349, column: 29, scope: !5452)
!5475 = !DILocation(line: 1349, column: 4, scope: !5452)
!5476 = !DILocation(line: 1351, column: 17, scope: !5452)
!5477 = !DILocation(line: 1351, column: 4, scope: !5452)
!5478 = !DILocation(line: 1352, column: 3, scope: !5452)
!5479 = !DILocation(line: 1355, column: 15, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1353, column: 8)
!5481 = !DILocation(line: 1355, column: 30, scope: !5480)
!5482 = !DILocation(line: 1355, column: 4, scope: !5480)
!5483 = !DILocation(line: 1358, column: 39, scope: !5413)
!5484 = !DILocation(line: 1358, column: 49, scope: !5413)
!5485 = !DILocation(line: 1358, column: 27, scope: !5413)
!5486 = !DILocation(line: 1358, column: 37, scope: !5413)
!5487 = !DILocation(line: 1358, column: 15, scope: !5413)
!5488 = !DILocation(line: 1358, column: 25, scope: !5413)
!5489 = !DILocation(line: 1358, column: 3, scope: !5413)
!5490 = !DILocation(line: 1358, column: 13, scope: !5413)
!5491 = !DILocation(line: 1360, column: 12, scope: !5413)
!5492 = !DILocation(line: 1360, column: 17, scope: !5413)
!5493 = !DILocation(line: 1360, column: 22, scope: !5413)
!5494 = !DILocation(line: 1360, column: 27, scope: !5413)
!5495 = !DILocation(line: 1360, column: 32, scope: !5413)
!5496 = !DILocation(line: 1360, column: 47, scope: !5413)
!5497 = !DILocation(line: 1360, column: 52, scope: !5413)
!5498 = !DILocation(line: 1360, column: 56, scope: !5413)
!5499 = !DILocation(line: 1360, column: 71, scope: !5413)
!5500 = !DILocation(line: 1360, column: 80, scope: !5413)
!5501 = !DILocation(line: 1360, column: 85, scope: !5413)
!5502 = !DILocation(line: 1360, column: 90, scope: !5413)
!5503 = !DILocation(line: 1360, column: 95, scope: !5413)
!5504 = !DILocation(line: 1360, column: 100, scope: !5413)
!5505 = !DILocation(line: 1360, column: 3, scope: !5413)
!5506 = !DILocation(line: 1362, column: 13, scope: !5413)
!5507 = !DILocation(line: 1362, column: 3, scope: !5413)
!5508 = !DILocation(line: 1362, column: 10, scope: !5413)
!5509 = !DILocation(line: 1363, column: 13, scope: !5413)
!5510 = !DILocation(line: 1363, column: 3, scope: !5413)
!5511 = !DILocation(line: 1363, column: 10, scope: !5413)
!5512 = !DILocation(line: 1364, column: 13, scope: !5413)
!5513 = !DILocation(line: 1364, column: 3, scope: !5413)
!5514 = !DILocation(line: 1364, column: 10, scope: !5413)
!5515 = !DILocation(line: 1365, column: 13, scope: !5413)
!5516 = !DILocation(line: 1365, column: 3, scope: !5413)
!5517 = !DILocation(line: 1365, column: 10, scope: !5413)
!5518 = !DILocation(line: 1368, column: 15, scope: !5413)
!5519 = !DILocation(line: 1368, column: 26, scope: !5413)
!5520 = !DILocation(line: 1368, column: 25, scope: !5413)
!5521 = !DILocation(line: 1368, column: 3, scope: !5413)
!5522 = !DILocation(line: 1368, column: 12, scope: !5413)
!5523 = !DILocation(line: 1369, column: 15, scope: !5413)
!5524 = !DILocation(line: 1369, column: 26, scope: !5413)
!5525 = !DILocation(line: 1369, column: 25, scope: !5413)
!5526 = !DILocation(line: 1369, column: 3, scope: !5413)
!5527 = !DILocation(line: 1369, column: 12, scope: !5413)
!5528 = !DILocation(line: 1370, column: 15, scope: !5413)
!5529 = !DILocation(line: 1370, column: 26, scope: !5413)
!5530 = !DILocation(line: 1370, column: 25, scope: !5413)
!5531 = !DILocation(line: 1370, column: 3, scope: !5413)
!5532 = !DILocation(line: 1370, column: 12, scope: !5413)
!5533 = !DILocation(line: 1372, column: 10, scope: !5413)
!5534 = !DILocation(line: 1375, column: 7, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 1375, column: 7)
!5536 = !DILocation(line: 1375, column: 20, scope: !5535)
!5537 = !DILocation(line: 1375, column: 27, scope: !5535)
!5538 = !DILocation(line: 1375, column: 30, scope: !5535)
!5539 = !DILocation(line: 1375, column: 40, scope: !5535)
!5540 = !DILocation(line: 1375, column: 51, scope: !5535)
!5541 = !DILocation(line: 1375, column: 38, scope: !5535)
!5542 = !DILocation(line: 1375, column: 7, scope: !5413)
!5543 = !DILocation(line: 1376, column: 33, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 1376, column: 8)
!5545 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 1375, column: 55)
!5546 = !DILocation(line: 1376, column: 42, scope: !5544)
!5547 = !DILocation(line: 1376, column: 47, scope: !5544)
!5548 = !DILocation(line: 1376, column: 54, scope: !5544)
!5549 = !DILocation(line: 1376, column: 8, scope: !5544)
!5550 = !DILocation(line: 1376, column: 8, scope: !5545)
!5551 = !DILocation(line: 1377, column: 5, scope: !5544)
!5552 = !DILocation(line: 1380, column: 10, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 1380, column: 9)
!5554 = !DILocation(line: 1380, column: 19, scope: !5553)
!5555 = !DILocation(line: 1380, column: 17, scope: !5553)
!5556 = !DILocation(line: 1380, column: 28, scope: !5553)
!5557 = !DILocation(line: 1380, column: 26, scope: !5553)
!5558 = !DILocation(line: 1380, column: 35, scope: !5553)
!5559 = !DILocation(line: 1380, column: 48, scope: !5553)
!5560 = !DILocation(line: 1380, column: 41, scope: !5553)
!5561 = !DILocation(line: 1380, column: 40, scope: !5553)
!5562 = !DILocation(line: 1380, column: 56, scope: !5553)
!5563 = !DILocation(line: 1380, column: 9, scope: !5545)
!5564 = !DILocation(line: 1381, column: 16, scope: !5553)
!5565 = !DILocation(line: 1381, column: 5, scope: !5553)
!5566 = !DILocation(line: 1382, column: 3, scope: !5545)
!5567 = distinct !{!5567, !5407, !5568}
!5568 = !DILocation(line: 1383, column: 2, scope: !5319)
!5569 = !DILocation(line: 1385, column: 19, scope: !5319)
!5570 = !DILocation(line: 1385, column: 12, scope: !5319)
!5571 = !DILocation(line: 1385, column: 2, scope: !5319)
!5572 = !DILocation(line: 1385, column: 9, scope: !5319)
!5573 = !DILocation(line: 1386, column: 19, scope: !5319)
!5574 = !DILocation(line: 1386, column: 12, scope: !5319)
!5575 = !DILocation(line: 1386, column: 2, scope: !5319)
!5576 = !DILocation(line: 1386, column: 9, scope: !5319)
!5577 = !DILocation(line: 1387, column: 19, scope: !5319)
!5578 = !DILocation(line: 1387, column: 12, scope: !5319)
!5579 = !DILocation(line: 1387, column: 2, scope: !5319)
!5580 = !DILocation(line: 1387, column: 9, scope: !5319)
!5581 = !DILocation(line: 1388, column: 19, scope: !5319)
!5582 = !DILocation(line: 1388, column: 12, scope: !5319)
!5583 = !DILocation(line: 1388, column: 2, scope: !5319)
!5584 = !DILocation(line: 1388, column: 9, scope: !5319)
!5585 = !DILocation(line: 1390, column: 6, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 1390, column: 6)
!5587 = !DILocation(line: 1390, column: 6, scope: !5319)
!5588 = !DILocation(line: 1391, column: 33, scope: !5586)
!5589 = !DILocation(line: 1391, column: 38, scope: !5586)
!5590 = !DILocation(line: 1391, column: 46, scope: !5586)
!5591 = !DILocation(line: 1391, column: 3, scope: !5586)
!5592 = !DILocation(line: 1392, column: 1, scope: !5319)
!5593 = distinct !DISubprogram(name: "min_ff", scope: !5594, file: !5594, line: 202, type: !5595, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!5594 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!7, !7, !7}
!5597 = !DILocalVariable(name: "a", arg: 1, scope: !5593, file: !5594, line: 202, type: !7)
!5598 = !DILocation(line: 202, column: 28, scope: !5593)
!5599 = !DILocalVariable(name: "b", arg: 2, scope: !5593, file: !5594, line: 202, type: !7)
!5600 = !DILocation(line: 202, column: 37, scope: !5593)
!5601 = !DILocation(line: 204, column: 10, scope: !5593)
!5602 = !DILocation(line: 204, column: 14, scope: !5593)
!5603 = !DILocation(line: 204, column: 12, scope: !5593)
!5604 = !DILocation(line: 204, column: 9, scope: !5593)
!5605 = !DILocation(line: 204, column: 19, scope: !5593)
!5606 = !DILocation(line: 204, column: 23, scope: !5593)
!5607 = !DILocation(line: 204, column: 2, scope: !5593)
!5608 = distinct !DISubprogram(name: "trace_reflect", scope: !3, file: !3, line: 1394, type: !5609, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!5609 = !DISubroutineType(types: !5610)
!5610 = !{null, !6, !3683, !3824, !7}
!5611 = !DILocalVariable(name: "col", arg: 1, scope: !5608, file: !3, line: 1394, type: !6)
!5612 = !DILocation(line: 1394, column: 33, scope: !5608)
!5613 = !DILocalVariable(name: "shi", arg: 2, scope: !5608, file: !3, line: 1394, type: !3683)
!5614 = !DILocation(line: 1394, column: 53, scope: !5608)
!5615 = !DILocalVariable(name: "shr", arg: 3, scope: !5608, file: !3, line: 1394, type: !3824)
!5616 = !DILocation(line: 1394, column: 71, scope: !5608)
!5617 = !DILocalVariable(name: "fresnelfac", arg: 4, scope: !5608, file: !3, line: 1394, type: !7)
!5618 = !DILocation(line: 1394, column: 82, scope: !5608)
!5619 = !DILocalVariable(name: "qsa", scope: !5608, file: !3, line: 1396, type: !4891)
!5620 = !DILocation(line: 1396, column: 14, scope: !5608)
!5621 = !DILocalVariable(name: "samp_type", scope: !5608, file: !3, line: 1397, type: !8)
!5622 = !DILocation(line: 1397, column: 6, scope: !5608)
!5623 = !DILocalVariable(name: "samp3d", scope: !5608, file: !3, line: 1399, type: !206)
!5624 = !DILocation(line: 1399, column: 8, scope: !5608)
!5625 = !DILocalVariable(name: "orthx", scope: !5608, file: !3, line: 1399, type: !206)
!5626 = !DILocation(line: 1399, column: 19, scope: !5608)
!5627 = !DILocalVariable(name: "orthy", scope: !5608, file: !3, line: 1399, type: !206)
!5628 = !DILocation(line: 1399, column: 29, scope: !5608)
!5629 = !DILocalVariable(name: "v_nor_new", scope: !5608, file: !3, line: 1400, type: !206)
!5630 = !DILocation(line: 1400, column: 8, scope: !5608)
!5631 = !DILocalVariable(name: "v_reflect", scope: !5608, file: !3, line: 1400, type: !206)
!5632 = !DILocation(line: 1400, column: 22, scope: !5608)
!5633 = !DILocalVariable(name: "sampcol", scope: !5608, file: !3, line: 1401, type: !381)
!5634 = !DILocation(line: 1401, column: 8, scope: !5608)
!5635 = !DILocalVariable(name: "colsq", scope: !5608, file: !3, line: 1401, type: !381)
!5636 = !DILocation(line: 1401, column: 20, scope: !5608)
!5637 = !DILocalVariable(name: "blur", scope: !5608, file: !3, line: 1403, type: !7)
!5638 = !DILocation(line: 1403, column: 8, scope: !5608)
!5639 = !DILocation(line: 1403, column: 27, scope: !5608)
!5640 = !DILocation(line: 1403, column: 32, scope: !5608)
!5641 = !DILocation(line: 1403, column: 37, scope: !5608)
!5642 = !DILocation(line: 1403, column: 25, scope: !5608)
!5643 = !DILocation(line: 1403, column: 15, scope: !5608)
!5644 = !DILocalVariable(name: "max_samples", scope: !5608, file: !3, line: 1404, type: !107)
!5645 = !DILocation(line: 1404, column: 8, scope: !5608)
!5646 = !DILocation(line: 1404, column: 22, scope: !5608)
!5647 = !DILocation(line: 1404, column: 27, scope: !5608)
!5648 = !DILocation(line: 1404, column: 32, scope: !5608)
!5649 = !DILocalVariable(name: "adapt_thresh", scope: !5608, file: !3, line: 1405, type: !7)
!5650 = !DILocation(line: 1405, column: 8, scope: !5608)
!5651 = !DILocation(line: 1405, column: 23, scope: !5608)
!5652 = !DILocation(line: 1405, column: 28, scope: !5608)
!5653 = !DILocation(line: 1405, column: 33, scope: !5608)
!5654 = !DILocalVariable(name: "aniso", scope: !5608, file: !3, line: 1406, type: !7)
!5655 = !DILocation(line: 1406, column: 8, scope: !5608)
!5656 = !DILocation(line: 1406, column: 23, scope: !5608)
!5657 = !DILocation(line: 1406, column: 28, scope: !5608)
!5658 = !DILocation(line: 1406, column: 33, scope: !5608)
!5659 = !DILocation(line: 1406, column: 21, scope: !5608)
!5660 = !DILocalVariable(name: "samples", scope: !5608, file: !3, line: 1408, type: !8)
!5661 = !DILocation(line: 1408, column: 6, scope: !5608)
!5662 = !DILocation(line: 1410, column: 20, scope: !5608)
!5663 = !DILocation(line: 1410, column: 27, scope: !5608)
!5664 = !DILocation(line: 1410, column: 11, scope: !5608)
!5665 = !DILocation(line: 1410, column: 18, scope: !5608)
!5666 = !DILocation(line: 1410, column: 2, scope: !5608)
!5667 = !DILocation(line: 1410, column: 9, scope: !5608)
!5668 = !DILocation(line: 1411, column: 24, scope: !5608)
!5669 = !DILocation(line: 1411, column: 33, scope: !5608)
!5670 = !DILocation(line: 1411, column: 13, scope: !5608)
!5671 = !DILocation(line: 1411, column: 22, scope: !5608)
!5672 = !DILocation(line: 1411, column: 2, scope: !5608)
!5673 = !DILocation(line: 1411, column: 11, scope: !5608)
!5674 = !DILocation(line: 1413, column: 6, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1413, column: 6)
!5676 = !DILocation(line: 1413, column: 11, scope: !5675)
!5677 = !DILocation(line: 1413, column: 6, scope: !5608)
!5678 = !DILocation(line: 1414, column: 7, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 1414, column: 7)
!5680 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 1413, column: 19)
!5681 = !DILocation(line: 1414, column: 20, scope: !5679)
!5682 = !DILocation(line: 1414, column: 7, scope: !5680)
!5683 = !DILocation(line: 1414, column: 39, scope: !5679)
!5684 = !DILocation(line: 1414, column: 29, scope: !5679)
!5685 = !DILocation(line: 1415, column: 18, scope: !5679)
!5686 = !DILocation(line: 1418, column: 35, scope: !5680)
!5687 = !DILocation(line: 1418, column: 40, scope: !5680)
!5688 = !DILocation(line: 1418, column: 48, scope: !5680)
!5689 = !DILocation(line: 1418, column: 59, scope: !5680)
!5690 = !DILocation(line: 1418, column: 9, scope: !5680)
!5691 = !DILocation(line: 1418, column: 7, scope: !5680)
!5692 = !DILocation(line: 1419, column: 17, scope: !5680)
!5693 = !DILocation(line: 1419, column: 22, scope: !5680)
!5694 = !DILocation(line: 1419, column: 27, scope: !5680)
!5695 = !DILocation(line: 1419, column: 3, scope: !5680)
!5696 = !DILocation(line: 1420, column: 2, scope: !5680)
!5697 = !DILocation(line: 1422, column: 15, scope: !5675)
!5698 = !DILocation(line: 1424, column: 2, scope: !5608)
!5699 = !DILocation(line: 1424, column: 9, scope: !5608)
!5700 = !DILocation(line: 1424, column: 19, scope: !5608)
!5701 = !DILocation(line: 1424, column: 17, scope: !5608)
!5702 = !DILocation(line: 1426, column: 7, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1426, column: 7)
!5704 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1424, column: 32)
!5705 = !DILocation(line: 1426, column: 19, scope: !5703)
!5706 = !DILocation(line: 1426, column: 7, scope: !5704)
!5707 = !DILocation(line: 1428, column: 20, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1426, column: 24)
!5709 = !DILocation(line: 1428, column: 28, scope: !5708)
!5710 = !DILocation(line: 1428, column: 33, scope: !5708)
!5711 = !DILocation(line: 1428, column: 38, scope: !5708)
!5712 = !DILocation(line: 1428, column: 46, scope: !5708)
!5713 = !DILocation(line: 1428, column: 55, scope: !5708)
!5714 = !DILocation(line: 1428, column: 4, scope: !5708)
!5715 = !DILocation(line: 1432, column: 8, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 1432, column: 8)
!5717 = !DILocation(line: 1432, column: 13, scope: !5716)
!5718 = !DILocation(line: 1432, column: 18, scope: !5716)
!5719 = !DILocation(line: 1432, column: 23, scope: !5716)
!5720 = !DILocation(line: 1432, column: 8, scope: !5708)
!5721 = !DILocation(line: 1433, column: 19, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1432, column: 41)
!5723 = !DILocation(line: 1433, column: 26, scope: !5722)
!5724 = !DILocation(line: 1433, column: 31, scope: !5722)
!5725 = !DILocation(line: 1433, column: 35, scope: !5722)
!5726 = !DILocation(line: 1433, column: 40, scope: !5722)
!5727 = !DILocation(line: 1433, column: 5, scope: !5722)
!5728 = !DILocation(line: 1434, column: 16, scope: !5722)
!5729 = !DILocation(line: 1434, column: 23, scope: !5722)
!5730 = !DILocation(line: 1434, column: 28, scope: !5722)
!5731 = !DILocation(line: 1434, column: 5, scope: !5722)
!5732 = !DILocation(line: 1435, column: 15, scope: !5722)
!5733 = !DILocation(line: 1435, column: 22, scope: !5722)
!5734 = !DILocation(line: 1435, column: 5, scope: !5722)
!5735 = !DILocation(line: 1436, column: 15, scope: !5722)
!5736 = !DILocation(line: 1436, column: 22, scope: !5722)
!5737 = !DILocation(line: 1436, column: 32, scope: !5722)
!5738 = !DILocation(line: 1436, column: 31, scope: !5722)
!5739 = !DILocation(line: 1436, column: 5, scope: !5722)
!5740 = !DILocation(line: 1437, column: 4, scope: !5722)
!5741 = !DILocation(line: 1439, column: 25, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1438, column: 9)
!5743 = !DILocation(line: 1439, column: 32, scope: !5742)
!5744 = !DILocation(line: 1439, column: 39, scope: !5742)
!5745 = !DILocation(line: 1439, column: 44, scope: !5742)
!5746 = !DILocation(line: 1439, column: 5, scope: !5742)
!5747 = !DILocation(line: 1440, column: 15, scope: !5742)
!5748 = !DILocation(line: 1440, column: 22, scope: !5742)
!5749 = !DILocation(line: 1440, column: 5, scope: !5742)
!5750 = !DILocation(line: 1441, column: 15, scope: !5742)
!5751 = !DILocation(line: 1441, column: 22, scope: !5742)
!5752 = !DILocation(line: 1441, column: 5, scope: !5742)
!5753 = !DILocation(line: 1445, column: 16, scope: !5708)
!5754 = !DILocation(line: 1445, column: 27, scope: !5708)
!5755 = !DILocation(line: 1445, column: 32, scope: !5708)
!5756 = !DILocation(line: 1445, column: 36, scope: !5708)
!5757 = !DILocation(line: 1445, column: 4, scope: !5708)
!5758 = !DILocation(line: 1446, column: 14, scope: !5708)
!5759 = !DILocation(line: 1446, column: 25, scope: !5708)
!5760 = !DILocation(line: 1446, column: 4, scope: !5708)
!5761 = !DILocation(line: 1447, column: 17, scope: !5708)
!5762 = !DILocation(line: 1447, column: 4, scope: !5708)
!5763 = !DILocation(line: 1448, column: 3, scope: !5708)
!5764 = !DILocation(line: 1451, column: 15, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1449, column: 8)
!5766 = !DILocation(line: 1451, column: 26, scope: !5765)
!5767 = !DILocation(line: 1451, column: 31, scope: !5765)
!5768 = !DILocation(line: 1451, column: 4, scope: !5765)
!5769 = !DILocation(line: 1454, column: 8, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1454, column: 7)
!5771 = !DILocation(line: 1454, column: 13, scope: !5770)
!5772 = !DILocation(line: 1454, column: 18, scope: !5770)
!5773 = !DILocation(line: 1454, column: 23, scope: !5770)
!5774 = !DILocation(line: 1454, column: 7, scope: !5704)
!5775 = !DILocation(line: 1455, column: 15, scope: !5770)
!5776 = !DILocation(line: 1455, column: 26, scope: !5770)
!5777 = !DILocation(line: 1455, column: 37, scope: !5770)
!5778 = !DILocation(line: 1455, column: 42, scope: !5770)
!5779 = !DILocation(line: 1455, column: 48, scope: !5770)
!5780 = !DILocation(line: 1455, column: 53, scope: !5770)
!5781 = !DILocation(line: 1455, column: 4, scope: !5770)
!5782 = !DILocation(line: 1457, column: 22, scope: !5770)
!5783 = !DILocation(line: 1457, column: 33, scope: !5770)
!5784 = !DILocation(line: 1457, column: 44, scope: !5770)
!5785 = !DILocation(line: 1457, column: 49, scope: !5770)
!5786 = !DILocation(line: 1457, column: 4, scope: !5770)
!5787 = !DILocation(line: 1459, column: 39, scope: !5704)
!5788 = !DILocation(line: 1459, column: 49, scope: !5704)
!5789 = !DILocation(line: 1459, column: 27, scope: !5704)
!5790 = !DILocation(line: 1459, column: 37, scope: !5704)
!5791 = !DILocation(line: 1459, column: 15, scope: !5704)
!5792 = !DILocation(line: 1459, column: 25, scope: !5704)
!5793 = !DILocation(line: 1459, column: 3, scope: !5704)
!5794 = !DILocation(line: 1459, column: 13, scope: !5704)
!5795 = !DILocation(line: 1461, column: 12, scope: !5704)
!5796 = !DILocation(line: 1461, column: 17, scope: !5704)
!5797 = !DILocation(line: 1461, column: 22, scope: !5704)
!5798 = !DILocation(line: 1461, column: 27, scope: !5704)
!5799 = !DILocation(line: 1461, column: 32, scope: !5704)
!5800 = !DILocation(line: 1461, column: 43, scope: !5704)
!5801 = !DILocation(line: 1461, column: 48, scope: !5704)
!5802 = !DILocation(line: 1461, column: 52, scope: !5704)
!5803 = !DILocation(line: 1461, column: 63, scope: !5704)
!5804 = !DILocation(line: 1461, column: 72, scope: !5704)
!5805 = !DILocation(line: 1461, column: 77, scope: !5704)
!5806 = !DILocation(line: 1461, column: 82, scope: !5704)
!5807 = !DILocation(line: 1461, column: 87, scope: !5704)
!5808 = !DILocation(line: 1461, column: 3, scope: !5704)
!5809 = !DILocation(line: 1464, column: 13, scope: !5704)
!5810 = !DILocation(line: 1464, column: 3, scope: !5704)
!5811 = !DILocation(line: 1464, column: 10, scope: !5704)
!5812 = !DILocation(line: 1465, column: 13, scope: !5704)
!5813 = !DILocation(line: 1465, column: 3, scope: !5704)
!5814 = !DILocation(line: 1465, column: 10, scope: !5704)
!5815 = !DILocation(line: 1466, column: 13, scope: !5704)
!5816 = !DILocation(line: 1466, column: 3, scope: !5704)
!5817 = !DILocation(line: 1466, column: 10, scope: !5704)
!5818 = !DILocation(line: 1469, column: 15, scope: !5704)
!5819 = !DILocation(line: 1469, column: 26, scope: !5704)
!5820 = !DILocation(line: 1469, column: 25, scope: !5704)
!5821 = !DILocation(line: 1469, column: 3, scope: !5704)
!5822 = !DILocation(line: 1469, column: 12, scope: !5704)
!5823 = !DILocation(line: 1470, column: 15, scope: !5704)
!5824 = !DILocation(line: 1470, column: 26, scope: !5704)
!5825 = !DILocation(line: 1470, column: 25, scope: !5704)
!5826 = !DILocation(line: 1470, column: 3, scope: !5704)
!5827 = !DILocation(line: 1470, column: 12, scope: !5704)
!5828 = !DILocation(line: 1471, column: 15, scope: !5704)
!5829 = !DILocation(line: 1471, column: 26, scope: !5704)
!5830 = !DILocation(line: 1471, column: 25, scope: !5704)
!5831 = !DILocation(line: 1471, column: 3, scope: !5704)
!5832 = !DILocation(line: 1471, column: 12, scope: !5704)
!5833 = !DILocation(line: 1473, column: 10, scope: !5704)
!5834 = !DILocation(line: 1476, column: 7, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1476, column: 7)
!5836 = !DILocation(line: 1476, column: 20, scope: !5835)
!5837 = !DILocation(line: 1476, column: 27, scope: !5835)
!5838 = !DILocation(line: 1476, column: 30, scope: !5835)
!5839 = !DILocation(line: 1476, column: 40, scope: !5835)
!5840 = !DILocation(line: 1476, column: 51, scope: !5835)
!5841 = !DILocation(line: 1476, column: 38, scope: !5835)
!5842 = !DILocation(line: 1476, column: 7, scope: !5704)
!5843 = !DILocation(line: 1477, column: 33, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 1477, column: 8)
!5845 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1476, column: 55)
!5846 = !DILocation(line: 1477, column: 42, scope: !5844)
!5847 = !DILocation(line: 1477, column: 47, scope: !5844)
!5848 = !DILocation(line: 1477, column: 54, scope: !5844)
!5849 = !DILocation(line: 1477, column: 8, scope: !5844)
!5850 = !DILocation(line: 1477, column: 8, scope: !5845)
!5851 = !DILocation(line: 1478, column: 5, scope: !5844)
!5852 = !DILocation(line: 1481, column: 10, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 1481, column: 9)
!5854 = !DILocation(line: 1481, column: 19, scope: !5853)
!5855 = !DILocation(line: 1481, column: 17, scope: !5853)
!5856 = !DILocation(line: 1481, column: 28, scope: !5853)
!5857 = !DILocation(line: 1481, column: 26, scope: !5853)
!5858 = !DILocation(line: 1481, column: 35, scope: !5853)
!5859 = !DILocation(line: 1481, column: 48, scope: !5853)
!5860 = !DILocation(line: 1481, column: 41, scope: !5853)
!5861 = !DILocation(line: 1481, column: 40, scope: !5853)
!5862 = !DILocation(line: 1481, column: 56, scope: !5853)
!5863 = !DILocation(line: 1481, column: 9, scope: !5845)
!5864 = !DILocation(line: 1482, column: 16, scope: !5853)
!5865 = !DILocation(line: 1482, column: 5, scope: !5853)
!5866 = !DILocation(line: 1486, column: 8, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 1486, column: 8)
!5868 = !DILocation(line: 1486, column: 29, scope: !5867)
!5869 = !DILocation(line: 1486, column: 33, scope: !5867)
!5870 = !DILocation(line: 1486, column: 26, scope: !5867)
!5871 = !DILocation(line: 1486, column: 19, scope: !5867)
!5872 = !DILocation(line: 1486, column: 8, scope: !5845)
!5873 = !DILocation(line: 1487, column: 16, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 1486, column: 38)
!5875 = !DILocation(line: 1490, column: 9, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 1490, column: 9)
!5877 = !DILocation(line: 1490, column: 31, scope: !5876)
!5878 = !DILocation(line: 1490, column: 35, scope: !5876)
!5879 = !DILocation(line: 1490, column: 28, scope: !5876)
!5880 = !DILocation(line: 1490, column: 20, scope: !5876)
!5881 = !DILocation(line: 1490, column: 9, scope: !5874)
!5882 = !DILocation(line: 1491, column: 17, scope: !5876)
!5883 = !DILocation(line: 1491, column: 6, scope: !5876)
!5884 = !DILocation(line: 1492, column: 4, scope: !5874)
!5885 = !DILocation(line: 1493, column: 3, scope: !5845)
!5886 = distinct !{!5886, !5698, !5887}
!5887 = !DILocation(line: 1494, column: 2, scope: !5608)
!5888 = !DILocation(line: 1496, column: 19, scope: !5608)
!5889 = !DILocation(line: 1496, column: 12, scope: !5608)
!5890 = !DILocation(line: 1496, column: 2, scope: !5608)
!5891 = !DILocation(line: 1496, column: 9, scope: !5608)
!5892 = !DILocation(line: 1497, column: 19, scope: !5608)
!5893 = !DILocation(line: 1497, column: 12, scope: !5608)
!5894 = !DILocation(line: 1497, column: 2, scope: !5608)
!5895 = !DILocation(line: 1497, column: 9, scope: !5608)
!5896 = !DILocation(line: 1498, column: 19, scope: !5608)
!5897 = !DILocation(line: 1498, column: 12, scope: !5608)
!5898 = !DILocation(line: 1498, column: 2, scope: !5608)
!5899 = !DILocation(line: 1498, column: 9, scope: !5608)
!5900 = !DILocation(line: 1500, column: 6, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1500, column: 6)
!5902 = !DILocation(line: 1500, column: 6, scope: !5608)
!5903 = !DILocation(line: 1501, column: 33, scope: !5901)
!5904 = !DILocation(line: 1501, column: 38, scope: !5901)
!5905 = !DILocation(line: 1501, column: 46, scope: !5901)
!5906 = !DILocation(line: 1501, column: 3, scope: !5901)
!5907 = !DILocation(line: 1502, column: 1, scope: !5608)
!5908 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !3654, file: !3654, line: 309, type: !4292, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!5909 = !DILocalVariable(name: "r", arg: 1, scope: !5908, file: !3654, line: 309, type: !6)
!5910 = !DILocation(line: 309, column: 32, scope: !5908)
!5911 = !DILocalVariable(name: "a", arg: 2, scope: !5908, file: !3654, line: 309, type: !3669)
!5912 = !DILocation(line: 309, column: 50, scope: !5908)
!5913 = !DILocalVariable(name: "b", arg: 3, scope: !5908, file: !3654, line: 309, type: !3669)
!5914 = !DILocation(line: 309, column: 68, scope: !5908)
!5915 = !DILocation(line: 311, column: 9, scope: !5908)
!5916 = !DILocation(line: 311, column: 16, scope: !5908)
!5917 = !DILocation(line: 311, column: 14, scope: !5908)
!5918 = !DILocation(line: 311, column: 2, scope: !5908)
!5919 = !DILocation(line: 311, column: 7, scope: !5908)
!5920 = !DILocation(line: 312, column: 9, scope: !5908)
!5921 = !DILocation(line: 312, column: 16, scope: !5908)
!5922 = !DILocation(line: 312, column: 14, scope: !5908)
!5923 = !DILocation(line: 312, column: 2, scope: !5908)
!5924 = !DILocation(line: 312, column: 7, scope: !5908)
!5925 = !DILocation(line: 313, column: 9, scope: !5908)
!5926 = !DILocation(line: 313, column: 16, scope: !5908)
!5927 = !DILocation(line: 313, column: 14, scope: !5908)
!5928 = !DILocation(line: 313, column: 2, scope: !5908)
!5929 = !DILocation(line: 313, column: 7, scope: !5908)
!5930 = !DILocation(line: 314, column: 1, scope: !5908)
!5931 = distinct !DISubprogram(name: "init_ao_sphere", scope: !3, file: !3, line: 1701, type: !5932, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!5932 = !DISubroutineType(types: !5933)
!5933 = !{null, !5934}
!5934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!5935 = !DILocalVariable(name: "wrld", arg: 1, scope: !5931, file: !3, line: 1701, type: !5934)
!5936 = !DILocation(line: 1701, column: 28, scope: !5931)
!5937 = !DILocalVariable(name: "rng", scope: !5931, file: !3, line: 1704, type: !4504)
!5938 = !DILocation(line: 1704, column: 7, scope: !5931)
!5939 = !DILocalVariable(name: "fp", scope: !5931, file: !3, line: 1705, type: !6)
!5940 = !DILocation(line: 1705, column: 9, scope: !5931)
!5941 = !DILocalVariable(name: "a", scope: !5931, file: !3, line: 1706, type: !8)
!5942 = !DILocation(line: 1706, column: 6, scope: !5931)
!5943 = !DILocalVariable(name: "tot", scope: !5931, file: !3, line: 1706, type: !8)
!5944 = !DILocation(line: 1706, column: 9, scope: !5931)
!5945 = !DILocalVariable(name: "iter", scope: !5931, file: !3, line: 1706, type: !8)
!5946 = !DILocation(line: 1706, column: 14, scope: !5931)
!5947 = !DILocation(line: 1709, column: 9, scope: !5931)
!5948 = !DILocation(line: 1709, column: 15, scope: !5931)
!5949 = !DILocation(line: 1709, column: 8, scope: !5931)
!5950 = !DILocation(line: 1709, column: 22, scope: !5931)
!5951 = !DILocation(line: 1709, column: 28, scope: !5931)
!5952 = !DILocation(line: 1709, column: 21, scope: !5931)
!5953 = !DILocation(line: 1709, column: 5, scope: !5931)
!5954 = !DILocation(line: 1711, column: 18, scope: !5931)
!5955 = !DILocation(line: 1711, column: 32, scope: !5931)
!5956 = !DILocation(line: 1711, column: 31, scope: !5931)
!5957 = !DILocation(line: 1711, column: 30, scope: !5931)
!5958 = !DILocation(line: 1711, column: 35, scope: !5931)
!5959 = !DILocation(line: 1711, column: 2, scope: !5931)
!5960 = !DILocation(line: 1711, column: 8, scope: !5931)
!5961 = !DILocation(line: 1711, column: 16, scope: !5931)
!5962 = !DILocation(line: 1712, column: 28, scope: !5931)
!5963 = !DILocation(line: 1712, column: 8, scope: !5931)
!5964 = !DILocation(line: 1712, column: 6, scope: !5931)
!5965 = !DILocation(line: 1715, column: 6, scope: !5931)
!5966 = !DILocation(line: 1715, column: 12, scope: !5931)
!5967 = !DILocation(line: 1715, column: 4, scope: !5931)
!5968 = !DILocation(line: 1716, column: 8, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 1716, column: 2)
!5970 = !DILocation(line: 1716, column: 7, scope: !5969)
!5971 = !DILocation(line: 1716, column: 12, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 1716, column: 2)
!5973 = !DILocation(line: 1716, column: 14, scope: !5972)
!5974 = !DILocation(line: 1716, column: 13, scope: !5972)
!5975 = !DILocation(line: 1716, column: 2, scope: !5969)
!5976 = !DILocation(line: 1717, column: 29, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1716, column: 32)
!5978 = !DILocation(line: 1717, column: 34, scope: !5977)
!5979 = !DILocation(line: 1717, column: 3, scope: !5977)
!5980 = !DILocation(line: 1718, column: 2, scope: !5977)
!5981 = !DILocation(line: 1716, column: 20, scope: !5972)
!5982 = !DILocation(line: 1716, column: 26, scope: !5972)
!5983 = !DILocation(line: 1716, column: 2, scope: !5972)
!5984 = distinct !{!5984, !5975, !5985}
!5985 = !DILocation(line: 1718, column: 2, scope: !5969)
!5986 = !DILocation(line: 1720, column: 2, scope: !5931)
!5987 = !DILocation(line: 1720, column: 13, scope: !5931)
!5988 = !DILocation(line: 1721, column: 9, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 1721, column: 3)
!5990 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 1720, column: 17)
!5991 = !DILocation(line: 1721, column: 17, scope: !5989)
!5992 = !DILocation(line: 1721, column: 23, scope: !5989)
!5993 = !DILocation(line: 1721, column: 15, scope: !5989)
!5994 = !DILocation(line: 1721, column: 8, scope: !5989)
!5995 = !DILocation(line: 1721, column: 33, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 1721, column: 3)
!5997 = !DILocation(line: 1721, column: 35, scope: !5996)
!5998 = !DILocation(line: 1721, column: 34, scope: !5996)
!5999 = !DILocation(line: 1721, column: 3, scope: !5989)
!6000 = !DILocation(line: 1722, column: 14, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 1721, column: 53)
!6002 = !DILocation(line: 1722, column: 20, scope: !6001)
!6003 = !DILocation(line: 1722, column: 30, scope: !6001)
!6004 = !DILocation(line: 1722, column: 35, scope: !6001)
!6005 = !DILocation(line: 1722, column: 4, scope: !6001)
!6006 = !DILocation(line: 1723, column: 3, scope: !6001)
!6007 = !DILocation(line: 1721, column: 41, scope: !5996)
!6008 = !DILocation(line: 1721, column: 47, scope: !5996)
!6009 = !DILocation(line: 1721, column: 3, scope: !5996)
!6010 = distinct !{!6010, !5999, !6011}
!6011 = !DILocation(line: 1723, column: 3, scope: !5989)
!6012 = distinct !{!6012, !5986, !6013}
!6013 = !DILocation(line: 1724, column: 2, scope: !5931)
!6014 = !DILocation(line: 1727, column: 18, scope: !5931)
!6015 = !DILocation(line: 1727, column: 52, scope: !5931)
!6016 = !DILocation(line: 1727, column: 51, scope: !5931)
!6017 = !DILocation(line: 1727, column: 30, scope: !5931)
!6018 = !DILocation(line: 1727, column: 55, scope: !5931)
!6019 = !DILocation(line: 1727, column: 2, scope: !5931)
!6020 = !DILocation(line: 1727, column: 8, scope: !5931)
!6021 = !DILocation(line: 1727, column: 16, scope: !5931)
!6022 = !DILocation(line: 1729, column: 15, scope: !5931)
!6023 = !DILocation(line: 1729, column: 2, scope: !5931)
!6024 = !DILocation(line: 1730, column: 1, scope: !5931)
!6025 = distinct !DISubprogram(name: "DS_energy", scope: !3, file: !3, line: 1674, type: !6026, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{null, !6, !8, !6}
!6028 = !DILocalVariable(name: "sphere", arg: 1, scope: !6025, file: !3, line: 1674, type: !6)
!6029 = !DILocation(line: 1674, column: 30, scope: !6025)
!6030 = !DILocalVariable(name: "tot", arg: 2, scope: !6025, file: !3, line: 1674, type: !8)
!6031 = !DILocation(line: 1674, column: 42, scope: !6025)
!6032 = !DILocalVariable(name: "vec", arg: 3, scope: !6025, file: !3, line: 1674, type: !6)
!6033 = !DILocation(line: 1674, column: 53, scope: !6025)
!6034 = !DILocalVariable(name: "fp", scope: !6025, file: !3, line: 1676, type: !6)
!6035 = !DILocation(line: 1676, column: 9, scope: !6025)
!6036 = !DILocalVariable(name: "fac", scope: !6025, file: !3, line: 1676, type: !7)
!6037 = !DILocation(line: 1676, column: 13, scope: !6025)
!6038 = !DILocalVariable(name: "force", scope: !6025, file: !3, line: 1676, type: !206)
!6039 = !DILocation(line: 1676, column: 18, scope: !6025)
!6040 = !DILocalVariable(name: "res", scope: !6025, file: !3, line: 1676, type: !206)
!6041 = !DILocation(line: 1676, column: 28, scope: !6025)
!6042 = !DILocalVariable(name: "a", scope: !6025, file: !3, line: 1677, type: !8)
!6043 = !DILocation(line: 1677, column: 6, scope: !6025)
!6044 = !DILocation(line: 1679, column: 18, scope: !6025)
!6045 = !DILocation(line: 1679, column: 24, scope: !6025)
!6046 = !DILocation(line: 1679, column: 10, scope: !6025)
!6047 = !DILocation(line: 1679, column: 16, scope: !6025)
!6048 = !DILocation(line: 1679, column: 2, scope: !6025)
!6049 = !DILocation(line: 1679, column: 8, scope: !6025)
!6050 = !DILocation(line: 1681, column: 8, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 1681, column: 2)
!6052 = !DILocation(line: 1681, column: 15, scope: !6051)
!6053 = !DILocation(line: 1681, column: 14, scope: !6051)
!6054 = !DILocation(line: 1681, column: 7, scope: !6051)
!6055 = !DILocation(line: 1681, column: 23, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 1681, column: 2)
!6057 = !DILocation(line: 1681, column: 25, scope: !6056)
!6058 = !DILocation(line: 1681, column: 24, scope: !6056)
!6059 = !DILocation(line: 1681, column: 2, scope: !6051)
!6060 = !DILocation(line: 1682, column: 15, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 1681, column: 42)
!6062 = !DILocation(line: 1682, column: 22, scope: !6061)
!6063 = !DILocation(line: 1682, column: 27, scope: !6061)
!6064 = !DILocation(line: 1682, column: 3, scope: !6061)
!6065 = !DILocation(line: 1683, column: 18, scope: !6061)
!6066 = !DILocation(line: 1683, column: 25, scope: !6061)
!6067 = !DILocation(line: 1683, column: 9, scope: !6061)
!6068 = !DILocation(line: 1683, column: 7, scope: !6061)
!6069 = !DILocation(line: 1684, column: 7, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 1684, column: 7)
!6071 = !DILocation(line: 1684, column: 10, scope: !6070)
!6072 = !DILocation(line: 1684, column: 7, scope: !6061)
!6073 = !DILocation(line: 1685, column: 14, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1684, column: 18)
!6075 = !DILocation(line: 1685, column: 13, scope: !6074)
!6076 = !DILocation(line: 1685, column: 7, scope: !6074)
!6077 = !DILocation(line: 1686, column: 13, scope: !6074)
!6078 = !DILocation(line: 1686, column: 17, scope: !6074)
!6079 = !DILocation(line: 1686, column: 16, scope: !6074)
!6080 = !DILocation(line: 1686, column: 4, scope: !6074)
!6081 = !DILocation(line: 1686, column: 10, scope: !6074)
!6082 = !DILocation(line: 1687, column: 13, scope: !6074)
!6083 = !DILocation(line: 1687, column: 17, scope: !6074)
!6084 = !DILocation(line: 1687, column: 16, scope: !6074)
!6085 = !DILocation(line: 1687, column: 4, scope: !6074)
!6086 = !DILocation(line: 1687, column: 10, scope: !6074)
!6087 = !DILocation(line: 1688, column: 13, scope: !6074)
!6088 = !DILocation(line: 1688, column: 17, scope: !6074)
!6089 = !DILocation(line: 1688, column: 16, scope: !6074)
!6090 = !DILocation(line: 1688, column: 4, scope: !6074)
!6091 = !DILocation(line: 1688, column: 10, scope: !6074)
!6092 = !DILocation(line: 1689, column: 3, scope: !6074)
!6093 = !DILocation(line: 1690, column: 2, scope: !6061)
!6094 = !DILocation(line: 1681, column: 31, scope: !6056)
!6095 = !DILocation(line: 1681, column: 37, scope: !6056)
!6096 = !DILocation(line: 1681, column: 2, scope: !6056)
!6097 = distinct !{!6097, !6059, !6098}
!6098 = !DILocation(line: 1690, column: 2, scope: !6051)
!6099 = !DILocation(line: 1692, column: 12, scope: !6025)
!6100 = !DILocation(line: 1692, column: 2, scope: !6025)
!6101 = !DILocation(line: 1693, column: 12, scope: !6025)
!6102 = !DILocation(line: 1693, column: 17, scope: !6025)
!6103 = !DILocation(line: 1693, column: 2, scope: !6025)
!6104 = !DILocation(line: 1694, column: 15, scope: !6025)
!6105 = !DILocation(line: 1694, column: 2, scope: !6025)
!6106 = !DILocation(line: 1696, column: 1, scope: !6025)
!6107 = distinct !DISubprogram(name: "ray_ao", scope: !3, file: !3, line: 2093, type: !6108, scopeLine: 2094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!6108 = !DISubroutineType(types: !6109)
!6109 = !{null, !3683, !6, !6}
!6110 = !DILocalVariable(name: "shi", arg: 1, scope: !6107, file: !3, line: 2093, type: !3683)
!6111 = !DILocation(line: 2093, column: 25, scope: !6107)
!6112 = !DILocalVariable(name: "ao", arg: 2, scope: !6107, file: !3, line: 2093, type: !6)
!6113 = !DILocation(line: 2093, column: 36, scope: !6107)
!6114 = !DILocalVariable(name: "env", arg: 3, scope: !6107, file: !3, line: 2093, type: !6)
!6115 = !DILocation(line: 2093, column: 49, scope: !6107)
!6116 = !DILocation(line: 2099, column: 6, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 2099, column: 6)
!6118 = !DILocation(line: 2099, column: 6, scope: !6107)
!6119 = !DILocation(line: 2100, column: 14, scope: !6117)
!6120 = !DILocation(line: 2100, column: 19, scope: !6117)
!6121 = !DILocation(line: 2100, column: 23, scope: !6117)
!6122 = !DILocation(line: 2100, column: 3, scope: !6117)
!6123 = !DILocation(line: 2101, column: 18, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 2101, column: 11)
!6125 = !DILocation(line: 2101, column: 11, scope: !6124)
!6126 = !DILocation(line: 2101, column: 33, scope: !6124)
!6127 = !DILocation(line: 2101, column: 11, scope: !6117)
!6128 = !DILocation(line: 2102, column: 21, scope: !6124)
!6129 = !DILocation(line: 2102, column: 26, scope: !6124)
!6130 = !DILocation(line: 2102, column: 30, scope: !6124)
!6131 = !DILocation(line: 2102, column: 3, scope: !6124)
!6132 = !DILocation(line: 2103, column: 1, scope: !6107)
!6133 = distinct !DISubprogram(name: "ray_ao_qmc", scope: !3, file: !3, line: 1806, type: !6108, scopeLine: 1807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!6134 = !DILocalVariable(name: "shi", arg: 1, scope: !6133, file: !3, line: 1806, type: !3683)
!6135 = !DILocation(line: 1806, column: 36, scope: !6133)
!6136 = !DILocalVariable(name: "ao", arg: 2, scope: !6133, file: !3, line: 1806, type: !6)
!6137 = !DILocation(line: 1806, column: 47, scope: !6133)
!6138 = !DILocalVariable(name: "env", arg: 3, scope: !6133, file: !3, line: 1806, type: !6)
!6139 = !DILocation(line: 1806, column: 60, scope: !6133)
!6140 = !DILocalVariable(name: "isec", scope: !6133, file: !3, line: 1808, type: !3682)
!6141 = !DILocation(line: 1808, column: 8, scope: !6133)
!6142 = !DILocalVariable(name: "point_hint", scope: !6133, file: !3, line: 1809, type: !2426)
!6143 = !DILocation(line: 1809, column: 10, scope: !6133)
!6144 = !DILocalVariable(name: "qsa", scope: !6133, file: !3, line: 1810, type: !4891)
!6145 = !DILocation(line: 1810, column: 14, scope: !6133)
!6146 = !DILocalVariable(name: "samp3d", scope: !6133, file: !3, line: 1811, type: !206)
!6147 = !DILocation(line: 1811, column: 8, scope: !6133)
!6148 = !DILocalVariable(name: "up", scope: !6133, file: !3, line: 1812, type: !206)
!6149 = !DILocation(line: 1812, column: 8, scope: !6133)
!6150 = !DILocalVariable(name: "side", scope: !6133, file: !3, line: 1812, type: !206)
!6151 = !DILocation(line: 1812, column: 15, scope: !6133)
!6152 = !DILocalVariable(name: "dir", scope: !6133, file: !3, line: 1812, type: !206)
!6153 = !DILocation(line: 1812, column: 24, scope: !6133)
!6154 = !DILocalVariable(name: "nrm", scope: !6133, file: !3, line: 1812, type: !206)
!6155 = !DILocation(line: 1812, column: 32, scope: !6133)
!6156 = !DILocalVariable(name: "maxdist", scope: !6133, file: !3, line: 1814, type: !7)
!6157 = !DILocation(line: 1814, column: 8, scope: !6133)
!6158 = !DILocation(line: 1814, column: 25, scope: !6133)
!6159 = !DILocalVariable(name: "fac", scope: !6133, file: !3, line: 1815, type: !7)
!6160 = !DILocation(line: 1815, column: 8, scope: !6133)
!6161 = !DILocalVariable(name: "prev", scope: !6133, file: !3, line: 1815, type: !7)
!6162 = !DILocation(line: 1815, column: 18, scope: !6133)
!6163 = !DILocalVariable(name: "adapt_thresh", scope: !6133, file: !3, line: 1816, type: !7)
!6164 = !DILocation(line: 1816, column: 8, scope: !6133)
!6165 = !DILocation(line: 1816, column: 30, scope: !6133)
!6166 = !DILocalVariable(name: "adapt_speed_fac", scope: !6133, file: !3, line: 1817, type: !7)
!6167 = !DILocation(line: 1817, column: 8, scope: !6133)
!6168 = !DILocation(line: 1817, column: 33, scope: !6133)
!6169 = !DILocalVariable(name: "samples", scope: !6133, file: !3, line: 1819, type: !8)
!6170 = !DILocation(line: 1819, column: 6, scope: !6133)
!6171 = !DILocalVariable(name: "max_samples", scope: !6133, file: !3, line: 1820, type: !8)
!6172 = !DILocation(line: 1820, column: 6, scope: !6133)
!6173 = !DILocation(line: 1820, column: 27, scope: !6133)
!6174 = !DILocation(line: 1820, column: 20, scope: !6133)
!6175 = !DILocation(line: 1820, column: 41, scope: !6133)
!6176 = !DILocation(line: 1820, column: 34, scope: !6133)
!6177 = !DILocation(line: 1820, column: 33, scope: !6133)
!6178 = !DILocalVariable(name: "dxyview", scope: !6133, file: !3, line: 1822, type: !206)
!6179 = !DILocation(line: 1822, column: 8, scope: !6133)
!6180 = !DILocalVariable(name: "skyadded", scope: !6133, file: !3, line: 1822, type: !7)
!6181 = !DILocation(line: 1822, column: 20, scope: !6133)
!6182 = !DILocalVariable(name: "envcolor", scope: !6133, file: !3, line: 1823, type: !8)
!6183 = !DILocation(line: 1823, column: 6, scope: !6133)
!6184 = !DILocation(line: 1826, column: 19, scope: !6133)
!6185 = !DILocation(line: 1826, column: 24, scope: !6133)
!6186 = !DILocation(line: 1826, column: 7, scope: !6133)
!6187 = !DILocation(line: 1826, column: 12, scope: !6133)
!6188 = !DILocation(line: 1826, column: 17, scope: !6133)
!6189 = !DILocation(line: 1827, column: 19, scope: !6133)
!6190 = !DILocation(line: 1827, column: 24, scope: !6133)
!6191 = !DILocation(line: 1827, column: 7, scope: !6133)
!6192 = !DILocation(line: 1827, column: 12, scope: !6133)
!6193 = !DILocation(line: 1827, column: 17, scope: !6133)
!6194 = !DILocation(line: 1828, column: 7, scope: !6133)
!6195 = !DILocation(line: 1828, column: 13, scope: !6133)
!6196 = !DILocation(line: 1829, column: 7, scope: !6133)
!6197 = !DILocation(line: 1829, column: 12, scope: !6133)
!6198 = !DILocation(line: 1830, column: 7, scope: !6133)
!6199 = !DILocation(line: 1830, column: 12, scope: !6133)
!6200 = !DILocation(line: 1832, column: 7, scope: !6133)
!6201 = !DILocation(line: 1832, column: 11, scope: !6133)
!6202 = !DILocation(line: 1832, column: 16, scope: !6133)
!6203 = !DILocation(line: 1833, column: 7, scope: !6133)
!6204 = !DILocation(line: 1833, column: 11, scope: !6133)
!6205 = !DILocation(line: 1833, column: 16, scope: !6133)
!6206 = !DILocation(line: 1835, column: 7, scope: !6133)
!6207 = !DILocation(line: 1835, column: 16, scope: !6133)
!6208 = !DILocation(line: 1837, column: 21, scope: !6133)
!6209 = !DILocation(line: 1837, column: 14, scope: !6133)
!6210 = !DILocation(line: 1837, column: 28, scope: !6133)
!6211 = !DILocation(line: 1837, column: 13, scope: !6133)
!6212 = !DILocation(line: 1837, column: 7, scope: !6133)
!6213 = !DILocation(line: 1837, column: 11, scope: !6133)
!6214 = !DILocation(line: 1838, column: 7, scope: !6133)
!6215 = !DILocation(line: 1838, column: 10, scope: !6133)
!6216 = !DILocation(line: 1840, column: 18, scope: !6133)
!6217 = !DILocation(line: 1840, column: 13, scope: !6133)
!6218 = !DILocation(line: 1840, column: 25, scope: !6133)
!6219 = !DILocation(line: 1840, column: 30, scope: !6133)
!6220 = !DILocation(line: 1840, column: 2, scope: !6133)
!6221 = !DILocation(line: 1842, column: 31, scope: !6133)
!6222 = !DILocation(line: 1842, column: 36, scope: !6133)
!6223 = !DILocation(line: 1842, column: 2, scope: !6133)
!6224 = !DILocation(line: 1844, column: 25, scope: !6133)
!6225 = !DILocation(line: 1844, column: 52, scope: !6133)
!6226 = !DILocation(line: 1844, column: 47, scope: !6133)
!6227 = !DILocation(line: 1844, column: 64, scope: !6133)
!6228 = !DILocation(line: 1844, column: 59, scope: !6133)
!6229 = !DILocation(line: 1844, column: 2, scope: !6133)
!6230 = !DILocation(line: 1845, column: 7, scope: !6133)
!6231 = !DILocation(line: 1845, column: 12, scope: !6133)
!6232 = !DILocation(line: 1847, column: 10, scope: !6133)
!6233 = !DILocation(line: 1847, column: 2, scope: !6133)
!6234 = !DILocation(line: 1848, column: 10, scope: !6133)
!6235 = !DILocation(line: 1848, column: 2, scope: !6133)
!6236 = !DILocation(line: 1851, column: 19, scope: !6133)
!6237 = !DILocation(line: 1851, column: 12, scope: !6133)
!6238 = !DILocation(line: 1851, column: 10, scope: !6133)
!6239 = !DILocation(line: 1852, column: 6, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 1852, column: 6)
!6241 = !DILocation(line: 1852, column: 11, scope: !6240)
!6242 = !DILocation(line: 1852, column: 16, scope: !6240)
!6243 = !DILocation(line: 1852, column: 21, scope: !6240)
!6244 = !DILocation(line: 1852, column: 6, scope: !6133)
!6245 = !DILocation(line: 1853, column: 11, scope: !6240)
!6246 = !DILocation(line: 1853, column: 3, scope: !6240)
!6247 = !DILocation(line: 1855, column: 6, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 1855, column: 6)
!6249 = !DILocation(line: 1855, column: 15, scope: !6248)
!6250 = !DILocation(line: 1855, column: 6, scope: !6133)
!6251 = !DILocation(line: 1856, column: 34, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 1855, column: 31)
!6253 = !DILocation(line: 1856, column: 20, scope: !6252)
!6254 = !DILocation(line: 1856, column: 19, scope: !6252)
!6255 = !DILocation(line: 1856, column: 3, scope: !6252)
!6256 = !DILocation(line: 1856, column: 13, scope: !6252)
!6257 = !DILocation(line: 1857, column: 34, scope: !6252)
!6258 = !DILocation(line: 1857, column: 20, scope: !6252)
!6259 = !DILocation(line: 1857, column: 19, scope: !6252)
!6260 = !DILocation(line: 1857, column: 3, scope: !6252)
!6261 = !DILocation(line: 1857, column: 13, scope: !6252)
!6262 = !DILocation(line: 1858, column: 3, scope: !6252)
!6263 = !DILocation(line: 1858, column: 13, scope: !6252)
!6264 = !DILocation(line: 1859, column: 2, scope: !6252)
!6265 = !DILocation(line: 1861, column: 6, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 1861, column: 6)
!6267 = !DILocation(line: 1861, column: 11, scope: !6266)
!6268 = !DILocation(line: 1861, column: 16, scope: !6266)
!6269 = !DILocation(line: 1861, column: 21, scope: !6266)
!6270 = !DILocation(line: 1861, column: 6, scope: !6133)
!6271 = !DILocation(line: 1862, column: 14, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 1861, column: 33)
!6273 = !DILocation(line: 1862, column: 19, scope: !6272)
!6274 = !DILocation(line: 1862, column: 24, scope: !6272)
!6275 = !DILocation(line: 1862, column: 3, scope: !6272)
!6276 = !DILocation(line: 1863, column: 2, scope: !6272)
!6277 = !DILocation(line: 1865, column: 14, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 1864, column: 7)
!6279 = !DILocation(line: 1865, column: 19, scope: !6278)
!6280 = !DILocation(line: 1865, column: 24, scope: !6278)
!6281 = !DILocation(line: 1865, column: 3, scope: !6278)
!6282 = !DILocation(line: 1868, column: 22, scope: !6133)
!6283 = !DILocation(line: 1868, column: 26, scope: !6133)
!6284 = !DILocation(line: 1868, column: 32, scope: !6133)
!6285 = !DILocation(line: 1868, column: 2, scope: !6133)
!6286 = !DILocation(line: 1871, column: 13, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 1871, column: 6)
!6288 = !DILocation(line: 1871, column: 6, scope: !6287)
!6289 = !DILocation(line: 1871, column: 27, scope: !6287)
!6290 = !DILocation(line: 1871, column: 6, scope: !6133)
!6291 = !DILocalVariable(name: "speedfac", scope: !6292, file: !3, line: 1872, type: !7)
!6292 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 1871, column: 47)
!6293 = !DILocation(line: 1872, column: 9, scope: !6292)
!6294 = !DILocation(line: 1874, column: 28, scope: !6292)
!6295 = !DILocation(line: 1874, column: 14, scope: !6292)
!6296 = !DILocation(line: 1874, column: 35, scope: !6292)
!6297 = !DILocation(line: 1874, column: 33, scope: !6292)
!6298 = !DILocation(line: 1874, column: 12, scope: !6292)
!6299 = !DILocation(line: 1875, column: 3, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 1875, column: 3)
!6301 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1875, column: 3)
!6302 = !DILocation(line: 1875, column: 3, scope: !6301)
!6303 = !DILocation(line: 1875, column: 3, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 1875, column: 3)
!6305 = !DILocation(line: 1876, column: 18, scope: !6292)
!6306 = !DILocation(line: 1876, column: 15, scope: !6292)
!6307 = !DILocation(line: 1877, column: 7, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1877, column: 7)
!6309 = !DILocation(line: 1877, column: 19, scope: !6308)
!6310 = !DILocation(line: 1877, column: 7, scope: !6292)
!6311 = !DILocation(line: 1877, column: 36, scope: !6308)
!6312 = !DILocation(line: 1877, column: 24, scope: !6308)
!6313 = !DILocation(line: 1879, column: 35, scope: !6292)
!6314 = !DILocation(line: 1879, column: 40, scope: !6292)
!6315 = !DILocation(line: 1879, column: 66, scope: !6292)
!6316 = !DILocation(line: 1879, column: 9, scope: !6292)
!6317 = !DILocation(line: 1879, column: 7, scope: !6292)
!6318 = !DILocation(line: 1880, column: 2, scope: !6292)
!6319 = !DILocation(line: 1881, column: 18, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 1881, column: 11)
!6321 = !DILocation(line: 1881, column: 11, scope: !6320)
!6322 = !DILocation(line: 1881, column: 32, scope: !6320)
!6323 = !DILocation(line: 1881, column: 11, scope: !6287)
!6324 = !DILocation(line: 1882, column: 35, scope: !6320)
!6325 = !DILocation(line: 1882, column: 40, scope: !6320)
!6326 = !DILocation(line: 1882, column: 70, scope: !6320)
!6327 = !DILocation(line: 1882, column: 9, scope: !6320)
!6328 = !DILocation(line: 1882, column: 7, scope: !6320)
!6329 = !DILocation(line: 1882, column: 3, scope: !6320)
!6330 = !DILocation(line: 1884, column: 16, scope: !6133)
!6331 = !DILocation(line: 1884, column: 21, scope: !6133)
!6332 = !DILocation(line: 1884, column: 26, scope: !6133)
!6333 = !DILocation(line: 1884, column: 2, scope: !6133)
!6334 = !DILocation(line: 1886, column: 2, scope: !6133)
!6335 = !DILocation(line: 1886, column: 9, scope: !6133)
!6336 = !DILocation(line: 1886, column: 19, scope: !6133)
!6337 = !DILocation(line: 1886, column: 17, scope: !6133)
!6338 = !DILocation(line: 1889, column: 18, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 1886, column: 32)
!6340 = !DILocation(line: 1889, column: 26, scope: !6339)
!6341 = !DILocation(line: 1889, column: 31, scope: !6339)
!6342 = !DILocation(line: 1889, column: 36, scope: !6339)
!6343 = !DILocation(line: 1889, column: 44, scope: !6339)
!6344 = !DILocation(line: 1889, column: 3, scope: !6339)
!6345 = !DILocation(line: 1891, column: 13, scope: !6339)
!6346 = !DILocation(line: 1891, column: 23, scope: !6339)
!6347 = !DILocation(line: 1891, column: 22, scope: !6339)
!6348 = !DILocation(line: 1891, column: 31, scope: !6339)
!6349 = !DILocation(line: 1891, column: 41, scope: !6339)
!6350 = !DILocation(line: 1891, column: 40, scope: !6339)
!6351 = !DILocation(line: 1891, column: 29, scope: !6339)
!6352 = !DILocation(line: 1891, column: 51, scope: !6339)
!6353 = !DILocation(line: 1891, column: 61, scope: !6339)
!6354 = !DILocation(line: 1891, column: 60, scope: !6339)
!6355 = !DILocation(line: 1891, column: 49, scope: !6339)
!6356 = !DILocation(line: 1891, column: 3, scope: !6339)
!6357 = !DILocation(line: 1891, column: 10, scope: !6339)
!6358 = !DILocation(line: 1892, column: 13, scope: !6339)
!6359 = !DILocation(line: 1892, column: 23, scope: !6339)
!6360 = !DILocation(line: 1892, column: 22, scope: !6339)
!6361 = !DILocation(line: 1892, column: 31, scope: !6339)
!6362 = !DILocation(line: 1892, column: 41, scope: !6339)
!6363 = !DILocation(line: 1892, column: 40, scope: !6339)
!6364 = !DILocation(line: 1892, column: 29, scope: !6339)
!6365 = !DILocation(line: 1892, column: 51, scope: !6339)
!6366 = !DILocation(line: 1892, column: 61, scope: !6339)
!6367 = !DILocation(line: 1892, column: 60, scope: !6339)
!6368 = !DILocation(line: 1892, column: 49, scope: !6339)
!6369 = !DILocation(line: 1892, column: 3, scope: !6339)
!6370 = !DILocation(line: 1892, column: 10, scope: !6339)
!6371 = !DILocation(line: 1893, column: 13, scope: !6339)
!6372 = !DILocation(line: 1893, column: 23, scope: !6339)
!6373 = !DILocation(line: 1893, column: 22, scope: !6339)
!6374 = !DILocation(line: 1893, column: 31, scope: !6339)
!6375 = !DILocation(line: 1893, column: 41, scope: !6339)
!6376 = !DILocation(line: 1893, column: 40, scope: !6339)
!6377 = !DILocation(line: 1893, column: 29, scope: !6339)
!6378 = !DILocation(line: 1893, column: 51, scope: !6339)
!6379 = !DILocation(line: 1893, column: 61, scope: !6339)
!6380 = !DILocation(line: 1893, column: 60, scope: !6339)
!6381 = !DILocation(line: 1893, column: 49, scope: !6339)
!6382 = !DILocation(line: 1893, column: 3, scope: !6339)
!6383 = !DILocation(line: 1893, column: 10, scope: !6339)
!6384 = !DILocation(line: 1895, column: 16, scope: !6339)
!6385 = !DILocation(line: 1895, column: 3, scope: !6339)
!6386 = !DILocation(line: 1897, column: 18, scope: !6339)
!6387 = !DILocation(line: 1897, column: 17, scope: !6339)
!6388 = !DILocation(line: 1897, column: 8, scope: !6339)
!6389 = !DILocation(line: 1897, column: 3, scope: !6339)
!6390 = !DILocation(line: 1897, column: 15, scope: !6339)
!6391 = !DILocation(line: 1898, column: 18, scope: !6339)
!6392 = !DILocation(line: 1898, column: 17, scope: !6339)
!6393 = !DILocation(line: 1898, column: 8, scope: !6339)
!6394 = !DILocation(line: 1898, column: 3, scope: !6339)
!6395 = !DILocation(line: 1898, column: 15, scope: !6339)
!6396 = !DILocation(line: 1899, column: 18, scope: !6339)
!6397 = !DILocation(line: 1899, column: 17, scope: !6339)
!6398 = !DILocation(line: 1899, column: 8, scope: !6339)
!6399 = !DILocation(line: 1899, column: 3, scope: !6339)
!6400 = !DILocation(line: 1899, column: 15, scope: !6339)
!6401 = !DILocation(line: 1900, column: 15, scope: !6339)
!6402 = !DILocation(line: 1900, column: 8, scope: !6339)
!6403 = !DILocation(line: 1900, column: 13, scope: !6339)
!6404 = !DILocation(line: 1902, column: 30, scope: !6339)
!6405 = !DILocation(line: 1902, column: 35, scope: !6339)
!6406 = !DILocation(line: 1902, column: 3, scope: !6339)
!6407 = !DILocation(line: 1904, column: 10, scope: !6339)
!6408 = !DILocation(line: 1904, column: 8, scope: !6339)
!6409 = !DILocation(line: 1906, column: 30, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 1906, column: 7)
!6411 = !DILocation(line: 1906, column: 7, scope: !6410)
!6412 = !DILocation(line: 1906, column: 7, scope: !6339)
!6413 = !DILocation(line: 1907, column: 15, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 1907, column: 8)
!6415 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1906, column: 47)
!6416 = !DILocation(line: 1907, column: 8, scope: !6414)
!6417 = !DILocation(line: 1907, column: 22, scope: !6414)
!6418 = !DILocation(line: 1907, column: 8, scope: !6415)
!6419 = !DILocation(line: 1907, column: 52, scope: !6414)
!6420 = !DILocation(line: 1907, column: 46, scope: !6414)
!6421 = !DILocation(line: 1907, column: 64, scope: !6414)
!6422 = !DILocation(line: 1907, column: 56, scope: !6414)
!6423 = !DILocation(line: 1907, column: 41, scope: !6414)
!6424 = !DILocation(line: 1907, column: 38, scope: !6414)
!6425 = !DILocation(line: 1907, column: 35, scope: !6414)
!6426 = !DILocation(line: 1908, column: 12, scope: !6414)
!6427 = !DILocation(line: 1909, column: 3, scope: !6415)
!6428 = !DILocation(line: 1910, column: 12, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1910, column: 12)
!6430 = !DILocation(line: 1910, column: 20, scope: !6429)
!6431 = !DILocation(line: 1910, column: 12, scope: !6410)
!6432 = !DILocalVariable(name: "skycol", scope: !6433, file: !3, line: 1911, type: !381)
!6433 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1910, column: 34)
!6434 = !DILocation(line: 1911, column: 10, scope: !6433)
!6435 = !DILocalVariable(name: "view", scope: !6433, file: !3, line: 1912, type: !206)
!6436 = !DILocation(line: 1912, column: 10, scope: !6433)
!6437 = !DILocation(line: 1914, column: 14, scope: !6433)
!6438 = !DILocation(line: 1914, column: 13, scope: !6433)
!6439 = !DILocation(line: 1914, column: 4, scope: !6433)
!6440 = !DILocation(line: 1914, column: 11, scope: !6433)
!6441 = !DILocation(line: 1915, column: 14, scope: !6433)
!6442 = !DILocation(line: 1915, column: 13, scope: !6433)
!6443 = !DILocation(line: 1915, column: 4, scope: !6433)
!6444 = !DILocation(line: 1915, column: 11, scope: !6433)
!6445 = !DILocation(line: 1916, column: 14, scope: !6433)
!6446 = !DILocation(line: 1916, column: 13, scope: !6433)
!6447 = !DILocation(line: 1916, column: 4, scope: !6433)
!6448 = !DILocation(line: 1916, column: 11, scope: !6433)
!6449 = !DILocation(line: 1917, column: 17, scope: !6433)
!6450 = !DILocation(line: 1917, column: 4, scope: !6433)
!6451 = !DILocation(line: 1919, column: 8, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6433, file: !3, line: 1919, column: 8)
!6453 = !DILocation(line: 1919, column: 16, scope: !6452)
!6454 = !DILocation(line: 1919, column: 8, scope: !6433)
!6455 = !DILocalVariable(name: "skyfac", scope: !6456, file: !3, line: 1920, type: !3670)
!6456 = distinct !DILexicalBlock(scope: !6452, file: !3, line: 1919, column: 31)
!6457 = !DILocation(line: 1920, column: 17, scope: !6456)
!6458 = !DILocation(line: 1920, column: 49, scope: !6456)
!6459 = !DILocation(line: 1920, column: 40, scope: !6456)
!6460 = !DILocation(line: 1920, column: 38, scope: !6456)
!6461 = !DILocation(line: 1920, column: 30, scope: !6456)
!6462 = !DILocation(line: 1921, column: 20, scope: !6456)
!6463 = !DILocation(line: 1921, column: 19, scope: !6456)
!6464 = !DILocation(line: 1921, column: 35, scope: !6456)
!6465 = !DILocation(line: 1921, column: 27, scope: !6456)
!6466 = !DILocation(line: 1921, column: 42, scope: !6456)
!6467 = !DILocation(line: 1921, column: 56, scope: !6456)
!6468 = !DILocation(line: 1921, column: 48, scope: !6456)
!6469 = !DILocation(line: 1921, column: 40, scope: !6456)
!6470 = !DILocation(line: 1921, column: 5, scope: !6456)
!6471 = !DILocation(line: 1921, column: 11, scope: !6456)
!6472 = !DILocation(line: 1922, column: 20, scope: !6456)
!6473 = !DILocation(line: 1922, column: 19, scope: !6456)
!6474 = !DILocation(line: 1922, column: 35, scope: !6456)
!6475 = !DILocation(line: 1922, column: 27, scope: !6456)
!6476 = !DILocation(line: 1922, column: 42, scope: !6456)
!6477 = !DILocation(line: 1922, column: 56, scope: !6456)
!6478 = !DILocation(line: 1922, column: 48, scope: !6456)
!6479 = !DILocation(line: 1922, column: 40, scope: !6456)
!6480 = !DILocation(line: 1922, column: 5, scope: !6456)
!6481 = !DILocation(line: 1922, column: 11, scope: !6456)
!6482 = !DILocation(line: 1923, column: 20, scope: !6456)
!6483 = !DILocation(line: 1923, column: 19, scope: !6456)
!6484 = !DILocation(line: 1923, column: 35, scope: !6456)
!6485 = !DILocation(line: 1923, column: 27, scope: !6456)
!6486 = !DILocation(line: 1923, column: 42, scope: !6456)
!6487 = !DILocation(line: 1923, column: 56, scope: !6456)
!6488 = !DILocation(line: 1923, column: 48, scope: !6456)
!6489 = !DILocation(line: 1923, column: 40, scope: !6456)
!6490 = !DILocation(line: 1923, column: 5, scope: !6456)
!6491 = !DILocation(line: 1923, column: 11, scope: !6456)
!6492 = !DILocation(line: 1924, column: 4, scope: !6456)
!6493 = !DILocation(line: 1926, column: 18, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6452, file: !3, line: 1925, column: 9)
!6495 = !DILocation(line: 1926, column: 31, scope: !6494)
!6496 = !DILocation(line: 1926, column: 26, scope: !6494)
!6497 = !DILocation(line: 1926, column: 38, scope: !6494)
!6498 = !DILocation(line: 1926, column: 44, scope: !6494)
!6499 = !DILocation(line: 1926, column: 53, scope: !6494)
!6500 = !DILocation(line: 1926, column: 58, scope: !6494)
!6501 = !DILocation(line: 1926, column: 5, scope: !6494)
!6502 = !DILocation(line: 1927, column: 18, scope: !6494)
!6503 = !DILocation(line: 1927, column: 26, scope: !6494)
!6504 = !DILocation(line: 1927, column: 31, scope: !6494)
!6505 = !DILocation(line: 1927, column: 5, scope: !6494)
!6506 = !DILocation(line: 1928, column: 14, scope: !6494)
!6507 = !DILocation(line: 1928, column: 5, scope: !6494)
!6508 = !DILocation(line: 1928, column: 11, scope: !6494)
!6509 = !DILocation(line: 1929, column: 14, scope: !6494)
!6510 = !DILocation(line: 1929, column: 5, scope: !6494)
!6511 = !DILocation(line: 1929, column: 11, scope: !6494)
!6512 = !DILocation(line: 1930, column: 14, scope: !6494)
!6513 = !DILocation(line: 1930, column: 5, scope: !6494)
!6514 = !DILocation(line: 1930, column: 11, scope: !6494)
!6515 = !DILocation(line: 1932, column: 12, scope: !6433)
!6516 = !DILocation(line: 1933, column: 3, scope: !6433)
!6517 = !DILocation(line: 1935, column: 10, scope: !6339)
!6518 = !DILocation(line: 1937, column: 7, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 1937, column: 7)
!6520 = !DILocation(line: 1937, column: 11, scope: !6519)
!6521 = !DILocation(line: 1937, column: 14, scope: !6519)
!6522 = !DILocation(line: 1937, column: 19, scope: !6519)
!6523 = !DILocation(line: 1937, column: 24, scope: !6519)
!6524 = !DILocation(line: 1937, column: 7, scope: !6339)
!6525 = !DILocation(line: 1939, column: 8, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1939, column: 8)
!6527 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 1937, column: 45)
!6528 = !DILocation(line: 1939, column: 21, scope: !6526)
!6529 = !DILocation(line: 1939, column: 28, scope: !6526)
!6530 = !DILocation(line: 1939, column: 32, scope: !6526)
!6531 = !DILocation(line: 1939, column: 42, scope: !6526)
!6532 = !DILocation(line: 1939, column: 53, scope: !6526)
!6533 = !DILocation(line: 1939, column: 40, scope: !6526)
!6534 = !DILocation(line: 1939, column: 8, scope: !6527)
!6535 = !DILocation(line: 1941, column: 38, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 1941, column: 9)
!6537 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 1939, column: 59)
!6538 = !DILocation(line: 1941, column: 47, scope: !6536)
!6539 = !DILocation(line: 1941, column: 53, scope: !6536)
!6540 = !DILocation(line: 1941, column: 58, scope: !6536)
!6541 = !DILocation(line: 1941, column: 9, scope: !6536)
!6542 = !DILocation(line: 1941, column: 9, scope: !6537)
!6543 = !DILocation(line: 1942, column: 6, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 1941, column: 73)
!6545 = !DILocation(line: 1944, column: 4, scope: !6537)
!6546 = !DILocation(line: 1945, column: 3, scope: !6527)
!6547 = distinct !{!6547, !6334, !6548}
!6548 = !DILocation(line: 1946, column: 2, scope: !6133)
!6549 = !DILocation(line: 1949, column: 30, scope: !6133)
!6550 = !DILocation(line: 1949, column: 41, scope: !6133)
!6551 = !DILocation(line: 1949, column: 34, scope: !6133)
!6552 = !DILocation(line: 1949, column: 33, scope: !6133)
!6553 = !DILocation(line: 1949, column: 28, scope: !6133)
!6554 = !DILocation(line: 1949, column: 16, scope: !6133)
!6555 = !DILocation(line: 1949, column: 21, scope: !6133)
!6556 = !DILocation(line: 1949, column: 9, scope: !6133)
!6557 = !DILocation(line: 1949, column: 14, scope: !6133)
!6558 = !DILocation(line: 1949, column: 2, scope: !6133)
!6559 = !DILocation(line: 1949, column: 7, scope: !6133)
!6560 = !DILocation(line: 1951, column: 6, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 1951, column: 6)
!6562 = !DILocation(line: 1951, column: 14, scope: !6561)
!6563 = !DILocation(line: 1951, column: 27, scope: !6561)
!6564 = !DILocation(line: 1951, column: 30, scope: !6561)
!6565 = !DILocation(line: 1951, column: 6, scope: !6133)
!6566 = !DILocation(line: 1952, column: 13, scope: !6561)
!6567 = !DILocation(line: 1952, column: 26, scope: !6561)
!6568 = !DILocation(line: 1952, column: 37, scope: !6561)
!6569 = !DILocation(line: 1952, column: 30, scope: !6561)
!6570 = !DILocation(line: 1952, column: 29, scope: !6561)
!6571 = !DILocation(line: 1952, column: 24, scope: !6561)
!6572 = !DILocation(line: 1952, column: 54, scope: !6561)
!6573 = !DILocation(line: 1952, column: 45, scope: !6561)
!6574 = !DILocation(line: 1952, column: 3, scope: !6561)
!6575 = !DILocation(line: 1954, column: 14, scope: !6561)
!6576 = !DILocation(line: 1954, column: 19, scope: !6561)
!6577 = !DILocation(line: 1954, column: 3, scope: !6561)
!6578 = !DILocation(line: 1956, column: 6, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 1956, column: 6)
!6580 = !DILocation(line: 1956, column: 6, scope: !6133)
!6581 = !DILocation(line: 1957, column: 33, scope: !6579)
!6582 = !DILocation(line: 1957, column: 38, scope: !6579)
!6583 = !DILocation(line: 1957, column: 46, scope: !6579)
!6584 = !DILocation(line: 1957, column: 3, scope: !6579)
!6585 = !DILocation(line: 1958, column: 1, scope: !6133)
!6586 = distinct !DISubprogram(name: "ray_ao_spheresamp", scope: !3, file: !3, line: 1961, type: !6108, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!6587 = !DILocalVariable(name: "shi", arg: 1, scope: !6586, file: !3, line: 1961, type: !3683)
!6588 = !DILocation(line: 1961, column: 43, scope: !6586)
!6589 = !DILocalVariable(name: "ao", arg: 2, scope: !6586, file: !3, line: 1961, type: !6)
!6590 = !DILocation(line: 1961, column: 54, scope: !6586)
!6591 = !DILocalVariable(name: "env", arg: 3, scope: !6586, file: !3, line: 1961, type: !6)
!6592 = !DILocation(line: 1961, column: 67, scope: !6586)
!6593 = !DILocalVariable(name: "isec", scope: !6586, file: !3, line: 1963, type: !3682)
!6594 = !DILocation(line: 1963, column: 8, scope: !6586)
!6595 = !DILocalVariable(name: "point_hint", scope: !6586, file: !3, line: 1964, type: !2426)
!6596 = !DILocation(line: 1964, column: 10, scope: !6586)
!6597 = !DILocalVariable(name: "vec", scope: !6586, file: !3, line: 1965, type: !6)
!6598 = !DILocation(line: 1965, column: 9, scope: !6586)
!6599 = !DILocalVariable(name: "nrm", scope: !6586, file: !3, line: 1965, type: !6)
!6600 = !DILocation(line: 1965, column: 15, scope: !6586)
!6601 = !DILocalVariable(name: "bias", scope: !6586, file: !3, line: 1965, type: !7)
!6602 = !DILocation(line: 1965, column: 20, scope: !6586)
!6603 = !DILocalVariable(name: "sh", scope: !6586, file: !3, line: 1965, type: !7)
!6604 = !DILocation(line: 1965, column: 26, scope: !6586)
!6605 = !DILocalVariable(name: "maxdist", scope: !6586, file: !3, line: 1966, type: !7)
!6606 = !DILocation(line: 1966, column: 8, scope: !6586)
!6607 = !DILocation(line: 1966, column: 25, scope: !6586)
!6608 = !DILocalVariable(name: "dxyview", scope: !6586, file: !3, line: 1967, type: !206)
!6609 = !DILocation(line: 1967, column: 8, scope: !6586)
!6610 = !DILocalVariable(name: "j", scope: !6586, file: !3, line: 1968, type: !8)
!6611 = !DILocation(line: 1968, column: 6, scope: !6586)
!6612 = !DILocalVariable(name: "tot", scope: !6586, file: !3, line: 1968, type: !8)
!6613 = !DILocation(line: 1968, column: 13, scope: !6586)
!6614 = !DILocalVariable(name: "actual", scope: !6586, file: !3, line: 1968, type: !8)
!6615 = !DILocation(line: 1968, column: 18, scope: !6586)
!6616 = !DILocalVariable(name: "skyadded", scope: !6586, file: !3, line: 1968, type: !8)
!6617 = !DILocation(line: 1968, column: 28, scope: !6586)
!6618 = !DILocalVariable(name: "envcolor", scope: !6586, file: !3, line: 1968, type: !8)
!6619 = !DILocation(line: 1968, column: 40, scope: !6586)
!6620 = !DILocalVariable(name: "resol", scope: !6586, file: !3, line: 1968, type: !8)
!6621 = !DILocation(line: 1968, column: 50, scope: !6586)
!6622 = !DILocation(line: 1968, column: 64, scope: !6586)
!6623 = !DILocation(line: 1968, column: 57, scope: !6586)
!6624 = !DILocation(line: 1971, column: 19, scope: !6586)
!6625 = !DILocation(line: 1971, column: 24, scope: !6586)
!6626 = !DILocation(line: 1971, column: 7, scope: !6586)
!6627 = !DILocation(line: 1971, column: 12, scope: !6586)
!6628 = !DILocation(line: 1971, column: 17, scope: !6586)
!6629 = !DILocation(line: 1972, column: 19, scope: !6586)
!6630 = !DILocation(line: 1972, column: 24, scope: !6586)
!6631 = !DILocation(line: 1972, column: 7, scope: !6586)
!6632 = !DILocation(line: 1972, column: 12, scope: !6586)
!6633 = !DILocation(line: 1972, column: 17, scope: !6586)
!6634 = !DILocation(line: 1973, column: 7, scope: !6586)
!6635 = !DILocation(line: 1973, column: 13, scope: !6586)
!6636 = !DILocation(line: 1974, column: 7, scope: !6586)
!6637 = !DILocation(line: 1974, column: 12, scope: !6586)
!6638 = !DILocation(line: 1975, column: 7, scope: !6586)
!6639 = !DILocation(line: 1975, column: 12, scope: !6586)
!6640 = !DILocation(line: 1977, column: 7, scope: !6586)
!6641 = !DILocation(line: 1977, column: 11, scope: !6586)
!6642 = !DILocation(line: 1977, column: 16, scope: !6586)
!6643 = !DILocation(line: 1978, column: 7, scope: !6586)
!6644 = !DILocation(line: 1978, column: 11, scope: !6586)
!6645 = !DILocation(line: 1978, column: 16, scope: !6586)
!6646 = !DILocation(line: 1980, column: 7, scope: !6586)
!6647 = !DILocation(line: 1980, column: 16, scope: !6586)
!6648 = !DILocation(line: 1982, column: 21, scope: !6586)
!6649 = !DILocation(line: 1982, column: 14, scope: !6586)
!6650 = !DILocation(line: 1982, column: 28, scope: !6586)
!6651 = !DILocation(line: 1982, column: 13, scope: !6586)
!6652 = !DILocation(line: 1982, column: 7, scope: !6586)
!6653 = !DILocation(line: 1982, column: 11, scope: !6586)
!6654 = !DILocation(line: 1983, column: 7, scope: !6586)
!6655 = !DILocation(line: 1983, column: 10, scope: !6586)
!6656 = !DILocation(line: 1985, column: 18, scope: !6586)
!6657 = !DILocation(line: 1985, column: 13, scope: !6586)
!6658 = !DILocation(line: 1985, column: 25, scope: !6586)
!6659 = !DILocation(line: 1985, column: 30, scope: !6586)
!6660 = !DILocation(line: 1985, column: 2, scope: !6586)
!6661 = !DILocation(line: 1986, column: 31, scope: !6586)
!6662 = !DILocation(line: 1986, column: 36, scope: !6586)
!6663 = !DILocation(line: 1986, column: 2, scope: !6586)
!6664 = !DILocation(line: 1988, column: 25, scope: !6586)
!6665 = !DILocation(line: 1988, column: 52, scope: !6586)
!6666 = !DILocation(line: 1988, column: 47, scope: !6586)
!6667 = !DILocation(line: 1988, column: 64, scope: !6586)
!6668 = !DILocation(line: 1988, column: 59, scope: !6586)
!6669 = !DILocation(line: 1988, column: 2, scope: !6586)
!6670 = !DILocation(line: 1989, column: 7, scope: !6586)
!6671 = !DILocation(line: 1989, column: 12, scope: !6586)
!6672 = !DILocation(line: 1991, column: 10, scope: !6586)
!6673 = !DILocation(line: 1991, column: 2, scope: !6586)
!6674 = !DILocation(line: 1992, column: 10, scope: !6586)
!6675 = !DILocation(line: 1992, column: 2, scope: !6586)
!6676 = !DILocation(line: 1995, column: 6, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 1995, column: 6)
!6678 = !DILocation(line: 1995, column: 11, scope: !6677)
!6679 = !DILocation(line: 1995, column: 16, scope: !6677)
!6680 = !DILocation(line: 1995, column: 21, scope: !6677)
!6681 = !DILocation(line: 1995, column: 6, scope: !6586)
!6682 = !DILocation(line: 1996, column: 16, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 1995, column: 33)
!6684 = !DILocation(line: 1996, column: 7, scope: !6683)
!6685 = !DILocation(line: 1997, column: 8, scope: !6683)
!6686 = !DILocation(line: 1997, column: 13, scope: !6683)
!6687 = !DILocation(line: 1997, column: 6, scope: !6683)
!6688 = !DILocation(line: 1998, column: 2, scope: !6683)
!6689 = !DILocation(line: 2000, column: 7, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 1999, column: 7)
!6691 = !DILocation(line: 2001, column: 8, scope: !6690)
!6692 = !DILocation(line: 2001, column: 13, scope: !6690)
!6693 = !DILocation(line: 2001, column: 6, scope: !6690)
!6694 = !DILocation(line: 2005, column: 19, scope: !6586)
!6695 = !DILocation(line: 2005, column: 12, scope: !6586)
!6696 = !DILocation(line: 2005, column: 10, scope: !6586)
!6697 = !DILocation(line: 2006, column: 6, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 2006, column: 6)
!6699 = !DILocation(line: 2006, column: 11, scope: !6698)
!6700 = !DILocation(line: 2006, column: 16, scope: !6698)
!6701 = !DILocation(line: 2006, column: 21, scope: !6698)
!6702 = !DILocation(line: 2006, column: 6, scope: !6586)
!6703 = !DILocation(line: 2007, column: 11, scope: !6698)
!6704 = !DILocation(line: 2007, column: 3, scope: !6698)
!6705 = !DILocation(line: 2009, column: 6, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 2009, column: 6)
!6707 = !DILocation(line: 2009, column: 11, scope: !6706)
!6708 = !DILocation(line: 2009, column: 6, scope: !6586)
!6709 = !DILocation(line: 2009, column: 21, scope: !6706)
!6710 = !DILocation(line: 2009, column: 16, scope: !6706)
!6711 = !DILocation(line: 2013, column: 29, scope: !6586)
!6712 = !DILocation(line: 2013, column: 22, scope: !6586)
!6713 = !DILocation(line: 2013, column: 37, scope: !6586)
!6714 = !DILocation(line: 2013, column: 44, scope: !6586)
!6715 = !DILocation(line: 2013, column: 49, scope: !6586)
!6716 = !DILocation(line: 2013, column: 57, scope: !6586)
!6717 = !DILocation(line: 2013, column: 62, scope: !6586)
!6718 = !DILocation(line: 2013, column: 66, scope: !6586)
!6719 = !DILocation(line: 2013, column: 71, scope: !6586)
!6720 = !DILocation(line: 2013, column: 75, scope: !6586)
!6721 = !DILocation(line: 2013, column: 80, scope: !6586)
!6722 = !DILocation(line: 2013, column: 87, scope: !6586)
!6723 = !DILocation(line: 2013, column: 7, scope: !6586)
!6724 = !DILocation(line: 2013, column: 5, scope: !6586)
!6725 = !DILocation(line: 2016, column: 9, scope: !6586)
!6726 = !DILocation(line: 2016, column: 8, scope: !6586)
!6727 = !DILocation(line: 2016, column: 15, scope: !6586)
!6728 = !DILocation(line: 2016, column: 14, scope: !6586)
!6729 = !DILocation(line: 2016, column: 5, scope: !6586)
!6730 = !DILocation(line: 2018, column: 6, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 2018, column: 6)
!6732 = !DILocation(line: 2018, column: 15, scope: !6731)
!6733 = !DILocation(line: 2018, column: 6, scope: !6586)
!6734 = !DILocation(line: 2019, column: 27, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 2018, column: 31)
!6736 = !DILocation(line: 2019, column: 20, scope: !6735)
!6737 = !DILocation(line: 2019, column: 19, scope: !6735)
!6738 = !DILocation(line: 2019, column: 3, scope: !6735)
!6739 = !DILocation(line: 2019, column: 13, scope: !6735)
!6740 = !DILocation(line: 2020, column: 27, scope: !6735)
!6741 = !DILocation(line: 2020, column: 20, scope: !6735)
!6742 = !DILocation(line: 2020, column: 19, scope: !6735)
!6743 = !DILocation(line: 2020, column: 3, scope: !6735)
!6744 = !DILocation(line: 2020, column: 13, scope: !6735)
!6745 = !DILocation(line: 2021, column: 3, scope: !6735)
!6746 = !DILocation(line: 2021, column: 13, scope: !6735)
!6747 = !DILocation(line: 2022, column: 2, scope: !6735)
!6748 = !DILocation(line: 2024, column: 2, scope: !6586)
!6749 = !DILocation(line: 2024, column: 12, scope: !6586)
!6750 = !DILocation(line: 2026, column: 16, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 2026, column: 7)
!6752 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 2024, column: 16)
!6753 = !DILocation(line: 2026, column: 21, scope: !6751)
!6754 = !DILocation(line: 2026, column: 7, scope: !6751)
!6755 = !DILocation(line: 2026, column: 28, scope: !6751)
!6756 = !DILocation(line: 2026, column: 26, scope: !6751)
!6757 = !DILocation(line: 2026, column: 7, scope: !6752)
!6758 = !DILocation(line: 2028, column: 12, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 2028, column: 8)
!6760 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 2026, column: 34)
!6761 = !DILocation(line: 2028, column: 17, scope: !6759)
!6762 = !DILocation(line: 2028, column: 8, scope: !6760)
!6763 = !DILocation(line: 2029, column: 6, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 2028, column: 26)
!6765 = !DILocation(line: 2030, column: 9, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 2030, column: 9)
!6767 = !DILocation(line: 2030, column: 14, scope: !6766)
!6768 = !DILocation(line: 2030, column: 12, scope: !6766)
!6769 = !DILocation(line: 2030, column: 10, scope: !6766)
!6770 = !DILocation(line: 2030, column: 9, scope: !6764)
!6771 = !DILocation(line: 2030, column: 20, scope: !6766)
!6772 = !DILocation(line: 2030, column: 19, scope: !6766)
!6773 = !DILocation(line: 2031, column: 11, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 2031, column: 9)
!6775 = !DILocation(line: 2031, column: 16, scope: !6774)
!6776 = !DILocation(line: 2031, column: 27, scope: !6774)
!6777 = !DILocation(line: 2031, column: 25, scope: !6774)
!6778 = !DILocation(line: 2031, column: 21, scope: !6774)
!6779 = !DILocation(line: 2031, column: 9, scope: !6764)
!6780 = !DILocation(line: 2032, column: 9, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 2031, column: 32)
!6782 = !DILocation(line: 2033, column: 6, scope: !6781)
!6783 = distinct !{!6783, !6748, !6784}
!6784 = !DILocation(line: 2079, column: 2, scope: !6586)
!6785 = !DILocation(line: 2035, column: 4, scope: !6764)
!6786 = !DILocation(line: 2037, column: 10, scope: !6760)
!6787 = !DILocation(line: 2040, column: 19, scope: !6760)
!6788 = !DILocation(line: 2040, column: 18, scope: !6760)
!6789 = !DILocation(line: 2040, column: 9, scope: !6760)
!6790 = !DILocation(line: 2040, column: 4, scope: !6760)
!6791 = !DILocation(line: 2040, column: 16, scope: !6760)
!6792 = !DILocation(line: 2041, column: 19, scope: !6760)
!6793 = !DILocation(line: 2041, column: 18, scope: !6760)
!6794 = !DILocation(line: 2041, column: 9, scope: !6760)
!6795 = !DILocation(line: 2041, column: 4, scope: !6760)
!6796 = !DILocation(line: 2041, column: 16, scope: !6760)
!6797 = !DILocation(line: 2042, column: 19, scope: !6760)
!6798 = !DILocation(line: 2042, column: 18, scope: !6760)
!6799 = !DILocation(line: 2042, column: 9, scope: !6760)
!6800 = !DILocation(line: 2042, column: 4, scope: !6760)
!6801 = !DILocation(line: 2042, column: 16, scope: !6760)
!6802 = !DILocation(line: 2043, column: 16, scope: !6760)
!6803 = !DILocation(line: 2043, column: 9, scope: !6760)
!6804 = !DILocation(line: 2043, column: 14, scope: !6760)
!6805 = !DILocation(line: 2045, column: 31, scope: !6760)
!6806 = !DILocation(line: 2045, column: 36, scope: !6760)
!6807 = !DILocation(line: 2045, column: 4, scope: !6760)
!6808 = !DILocation(line: 2048, column: 31, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 2048, column: 8)
!6810 = !DILocation(line: 2048, column: 8, scope: !6809)
!6811 = !DILocation(line: 2048, column: 8, scope: !6760)
!6812 = !DILocation(line: 2049, column: 16, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 2049, column: 9)
!6814 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 2048, column: 48)
!6815 = !DILocation(line: 2049, column: 9, scope: !6813)
!6816 = !DILocation(line: 2049, column: 23, scope: !6813)
!6817 = !DILocation(line: 2049, column: 9, scope: !6814)
!6818 = !DILocation(line: 2049, column: 52, scope: !6813)
!6819 = !DILocation(line: 2049, column: 46, scope: !6813)
!6820 = !DILocation(line: 2049, column: 64, scope: !6813)
!6821 = !DILocation(line: 2049, column: 56, scope: !6813)
!6822 = !DILocation(line: 2049, column: 41, scope: !6813)
!6823 = !DILocation(line: 2049, column: 38, scope: !6813)
!6824 = !DILocation(line: 2049, column: 36, scope: !6813)
!6825 = !DILocation(line: 2050, column: 12, scope: !6813)
!6826 = !DILocation(line: 2051, column: 4, scope: !6814)
!6827 = !DILocation(line: 2052, column: 13, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 2052, column: 13)
!6829 = !DILocation(line: 2052, column: 21, scope: !6828)
!6830 = !DILocation(line: 2052, column: 13, scope: !6809)
!6831 = !DILocalVariable(name: "skycol", scope: !6832, file: !3, line: 2053, type: !381)
!6832 = distinct !DILexicalBlock(scope: !6828, file: !3, line: 2052, column: 35)
!6833 = !DILocation(line: 2053, column: 11, scope: !6832)
!6834 = !DILocalVariable(name: "view", scope: !6832, file: !3, line: 2054, type: !206)
!6835 = !DILocation(line: 2054, column: 11, scope: !6832)
!6836 = !DILocation(line: 2056, column: 15, scope: !6832)
!6837 = !DILocation(line: 2056, column: 14, scope: !6832)
!6838 = !DILocation(line: 2056, column: 5, scope: !6832)
!6839 = !DILocation(line: 2056, column: 12, scope: !6832)
!6840 = !DILocation(line: 2057, column: 15, scope: !6832)
!6841 = !DILocation(line: 2057, column: 14, scope: !6832)
!6842 = !DILocation(line: 2057, column: 5, scope: !6832)
!6843 = !DILocation(line: 2057, column: 12, scope: !6832)
!6844 = !DILocation(line: 2058, column: 15, scope: !6832)
!6845 = !DILocation(line: 2058, column: 14, scope: !6832)
!6846 = !DILocation(line: 2058, column: 5, scope: !6832)
!6847 = !DILocation(line: 2058, column: 12, scope: !6832)
!6848 = !DILocation(line: 2059, column: 18, scope: !6832)
!6849 = !DILocation(line: 2059, column: 5, scope: !6832)
!6850 = !DILocation(line: 2061, column: 9, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 2061, column: 9)
!6852 = !DILocation(line: 2061, column: 17, scope: !6851)
!6853 = !DILocation(line: 2061, column: 9, scope: !6832)
!6854 = !DILocalVariable(name: "fac", scope: !6855, file: !3, line: 2062, type: !3670)
!6855 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2061, column: 32)
!6856 = !DILocation(line: 2062, column: 18, scope: !6855)
!6857 = !DILocation(line: 2062, column: 48, scope: !6855)
!6858 = !DILocation(line: 2062, column: 39, scope: !6855)
!6859 = !DILocation(line: 2062, column: 37, scope: !6855)
!6860 = !DILocation(line: 2062, column: 29, scope: !6855)
!6861 = !DILocation(line: 2063, column: 21, scope: !6855)
!6862 = !DILocation(line: 2063, column: 20, scope: !6855)
!6863 = !DILocation(line: 2063, column: 33, scope: !6855)
!6864 = !DILocation(line: 2063, column: 25, scope: !6855)
!6865 = !DILocation(line: 2063, column: 40, scope: !6855)
!6866 = !DILocation(line: 2063, column: 51, scope: !6855)
!6867 = !DILocation(line: 2063, column: 43, scope: !6855)
!6868 = !DILocation(line: 2063, column: 38, scope: !6855)
!6869 = !DILocation(line: 2063, column: 6, scope: !6855)
!6870 = !DILocation(line: 2063, column: 12, scope: !6855)
!6871 = !DILocation(line: 2064, column: 21, scope: !6855)
!6872 = !DILocation(line: 2064, column: 20, scope: !6855)
!6873 = !DILocation(line: 2064, column: 33, scope: !6855)
!6874 = !DILocation(line: 2064, column: 25, scope: !6855)
!6875 = !DILocation(line: 2064, column: 40, scope: !6855)
!6876 = !DILocation(line: 2064, column: 51, scope: !6855)
!6877 = !DILocation(line: 2064, column: 43, scope: !6855)
!6878 = !DILocation(line: 2064, column: 38, scope: !6855)
!6879 = !DILocation(line: 2064, column: 6, scope: !6855)
!6880 = !DILocation(line: 2064, column: 12, scope: !6855)
!6881 = !DILocation(line: 2065, column: 21, scope: !6855)
!6882 = !DILocation(line: 2065, column: 20, scope: !6855)
!6883 = !DILocation(line: 2065, column: 33, scope: !6855)
!6884 = !DILocation(line: 2065, column: 25, scope: !6855)
!6885 = !DILocation(line: 2065, column: 40, scope: !6855)
!6886 = !DILocation(line: 2065, column: 51, scope: !6855)
!6887 = !DILocation(line: 2065, column: 43, scope: !6855)
!6888 = !DILocation(line: 2065, column: 38, scope: !6855)
!6889 = !DILocation(line: 2065, column: 6, scope: !6855)
!6890 = !DILocation(line: 2065, column: 12, scope: !6855)
!6891 = !DILocation(line: 2066, column: 5, scope: !6855)
!6892 = !DILocation(line: 2068, column: 19, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2067, column: 10)
!6894 = !DILocation(line: 2068, column: 32, scope: !6893)
!6895 = !DILocation(line: 2068, column: 27, scope: !6893)
!6896 = !DILocation(line: 2068, column: 39, scope: !6893)
!6897 = !DILocation(line: 2068, column: 45, scope: !6893)
!6898 = !DILocation(line: 2068, column: 54, scope: !6893)
!6899 = !DILocation(line: 2068, column: 59, scope: !6893)
!6900 = !DILocation(line: 2068, column: 6, scope: !6893)
!6901 = !DILocation(line: 2069, column: 19, scope: !6893)
!6902 = !DILocation(line: 2069, column: 27, scope: !6893)
!6903 = !DILocation(line: 2069, column: 32, scope: !6893)
!6904 = !DILocation(line: 2069, column: 6, scope: !6893)
!6905 = !DILocation(line: 2070, column: 15, scope: !6893)
!6906 = !DILocation(line: 2070, column: 6, scope: !6893)
!6907 = !DILocation(line: 2070, column: 12, scope: !6893)
!6908 = !DILocation(line: 2071, column: 15, scope: !6893)
!6909 = !DILocation(line: 2071, column: 6, scope: !6893)
!6910 = !DILocation(line: 2071, column: 12, scope: !6893)
!6911 = !DILocation(line: 2072, column: 15, scope: !6893)
!6912 = !DILocation(line: 2072, column: 6, scope: !6893)
!6913 = !DILocation(line: 2072, column: 12, scope: !6893)
!6914 = !DILocation(line: 2074, column: 13, scope: !6832)
!6915 = !DILocation(line: 2075, column: 4, scope: !6832)
!6916 = !DILocation(line: 2076, column: 3, scope: !6760)
!6917 = !DILocation(line: 2078, column: 6, scope: !6752)
!6918 = !DILocation(line: 2081, column: 6, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 2081, column: 6)
!6920 = !DILocation(line: 2081, column: 12, scope: !6919)
!6921 = !DILocation(line: 2081, column: 6, scope: !6586)
!6922 = !DILocation(line: 2081, column: 19, scope: !6919)
!6923 = !DILocation(line: 2081, column: 17, scope: !6919)
!6924 = !DILocation(line: 2082, column: 19, scope: !6919)
!6925 = !DILocation(line: 2082, column: 30, scope: !6919)
!6926 = !DILocation(line: 2082, column: 23, scope: !6919)
!6927 = !DILocation(line: 2082, column: 21, scope: !6919)
!6928 = !DILocation(line: 2082, column: 17, scope: !6919)
!6929 = !DILocation(line: 2082, column: 10, scope: !6919)
!6930 = !DILocation(line: 2085, column: 23, scope: !6586)
!6931 = !DILocation(line: 2085, column: 16, scope: !6586)
!6932 = !DILocation(line: 2085, column: 21, scope: !6586)
!6933 = !DILocation(line: 2085, column: 9, scope: !6586)
!6934 = !DILocation(line: 2085, column: 14, scope: !6586)
!6935 = !DILocation(line: 2085, column: 2, scope: !6586)
!6936 = !DILocation(line: 2085, column: 7, scope: !6586)
!6937 = !DILocation(line: 2087, column: 6, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 2087, column: 6)
!6939 = !DILocation(line: 2087, column: 14, scope: !6938)
!6940 = !DILocation(line: 2087, column: 27, scope: !6938)
!6941 = !DILocation(line: 2087, column: 30, scope: !6938)
!6942 = !DILocation(line: 2087, column: 6, scope: !6586)
!6943 = !DILocation(line: 2088, column: 13, scope: !6938)
!6944 = !DILocation(line: 2088, column: 18, scope: !6938)
!6945 = !DILocation(line: 2088, column: 29, scope: !6938)
!6946 = !DILocation(line: 2088, column: 22, scope: !6938)
!6947 = !DILocation(line: 2088, column: 20, scope: !6938)
!6948 = !DILocation(line: 2088, column: 3, scope: !6938)
!6949 = !DILocation(line: 2090, column: 14, scope: !6938)
!6950 = !DILocation(line: 2090, column: 19, scope: !6938)
!6951 = !DILocation(line: 2090, column: 3, scope: !6938)
!6952 = !DILocation(line: 2091, column: 1, scope: !6586)
!6953 = distinct !DISubprogram(name: "ray_shadow", scope: !3, file: !3, line: 2415, type: !6954, scopeLine: 2416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!6954 = !DISubroutineType(types: !6955)
!6955 = !{null, !3683, !4319, !6}
!6956 = !DILocalVariable(name: "shi", arg: 1, scope: !6953, file: !3, line: 2415, type: !3683)
!6957 = !DILocation(line: 2415, column: 29, scope: !6953)
!6958 = !DILocalVariable(name: "lar", arg: 2, scope: !6953, file: !3, line: 2415, type: !4319)
!6959 = !DILocation(line: 2415, column: 43, scope: !6953)
!6960 = !DILocalVariable(name: "shadfac", arg: 3, scope: !6953, file: !3, line: 2415, type: !6)
!6961 = !DILocation(line: 2415, column: 54, scope: !6953)
!6962 = !DILocalVariable(name: "isec", scope: !6953, file: !3, line: 2417, type: !3682)
!6963 = !DILocation(line: 2417, column: 8, scope: !6953)
!6964 = !DILocalVariable(name: "lampco", scope: !6953, file: !3, line: 2418, type: !206)
!6965 = !DILocation(line: 2418, column: 8, scope: !6953)
!6966 = !DILocation(line: 2422, column: 6, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 2422, column: 6)
!6968 = !DILocation(line: 2422, column: 11, scope: !6967)
!6969 = !DILocation(line: 2422, column: 16, scope: !6967)
!6970 = !DILocation(line: 2422, column: 21, scope: !6967)
!6971 = !DILocation(line: 2422, column: 6, scope: !6953)
!6972 = !DILocation(line: 2422, column: 43, scope: !6967)
!6973 = !DILocation(line: 2422, column: 47, scope: !6967)
!6974 = !DILocation(line: 2422, column: 38, scope: !6967)
!6975 = !DILocation(line: 2423, column: 12, scope: !6967)
!6976 = !DILocation(line: 2423, column: 16, scope: !6967)
!6977 = !DILocation(line: 2424, column: 7, scope: !6953)
!6978 = !DILocation(line: 2424, column: 12, scope: !6953)
!6979 = !DILocation(line: 2426, column: 6, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 2426, column: 6)
!6981 = !DILocation(line: 2426, column: 11, scope: !6980)
!6982 = !DILocation(line: 2426, column: 16, scope: !6980)
!6983 = !DILocation(line: 2426, column: 6, scope: !6953)
!6984 = !DILocation(line: 2427, column: 13, scope: !6980)
!6985 = !DILocation(line: 2427, column: 18, scope: !6980)
!6986 = !DILocation(line: 2427, column: 8, scope: !6980)
!6987 = !DILocation(line: 2427, column: 11, scope: !6980)
!6988 = !DILocation(line: 2427, column: 3, scope: !6980)
!6989 = !DILocation(line: 2429, column: 8, scope: !6980)
!6990 = !DILocation(line: 2429, column: 11, scope: !6980)
!6991 = !DILocation(line: 2432, column: 6, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 2432, column: 6)
!6993 = !DILocation(line: 2432, column: 11, scope: !6992)
!6994 = !DILocation(line: 2432, column: 16, scope: !6992)
!6995 = !DILocation(line: 2432, column: 6, scope: !6953)
!6996 = !DILocation(line: 2433, column: 19, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 2432, column: 21)
!6998 = !DILocation(line: 2433, column: 24, scope: !6997)
!6999 = !DILocation(line: 2433, column: 33, scope: !6997)
!7000 = !DILocation(line: 2433, column: 38, scope: !6997)
!7001 = !DILocation(line: 2433, column: 8, scope: !6997)
!7002 = !DILocation(line: 2433, column: 17, scope: !6997)
!7003 = !DILocation(line: 2434, column: 2, scope: !6997)
!7004 = !DILocation(line: 2436, column: 8, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 2435, column: 7)
!7006 = !DILocation(line: 2436, column: 17, scope: !7005)
!7007 = !DILocation(line: 2439, column: 6, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 2439, column: 6)
!7009 = !DILocation(line: 2439, column: 11, scope: !7008)
!7010 = !DILocation(line: 2439, column: 15, scope: !7008)
!7011 = !DILocation(line: 2439, column: 24, scope: !7008)
!7012 = !DILocation(line: 2439, column: 27, scope: !7008)
!7013 = !DILocation(line: 2439, column: 32, scope: !7008)
!7014 = !DILocation(line: 2439, column: 36, scope: !7008)
!7015 = !DILocation(line: 2439, column: 6, scope: !6953)
!7016 = !DILocation(line: 2453, column: 14, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 2439, column: 47)
!7018 = !DILocation(line: 2453, column: 19, scope: !7017)
!7019 = !DILocation(line: 2453, column: 29, scope: !7017)
!7020 = !DILocation(line: 2453, column: 37, scope: !7017)
!7021 = !DILocation(line: 2453, column: 42, scope: !7017)
!7022 = !DILocation(line: 2453, column: 36, scope: !7017)
!7023 = !DILocation(line: 2453, column: 25, scope: !7017)
!7024 = !DILocation(line: 2453, column: 3, scope: !7017)
!7025 = !DILocation(line: 2453, column: 12, scope: !7017)
!7026 = !DILocation(line: 2454, column: 14, scope: !7017)
!7027 = !DILocation(line: 2454, column: 19, scope: !7017)
!7028 = !DILocation(line: 2454, column: 29, scope: !7017)
!7029 = !DILocation(line: 2454, column: 37, scope: !7017)
!7030 = !DILocation(line: 2454, column: 42, scope: !7017)
!7031 = !DILocation(line: 2454, column: 36, scope: !7017)
!7032 = !DILocation(line: 2454, column: 25, scope: !7017)
!7033 = !DILocation(line: 2454, column: 3, scope: !7017)
!7034 = !DILocation(line: 2454, column: 12, scope: !7017)
!7035 = !DILocation(line: 2455, column: 14, scope: !7017)
!7036 = !DILocation(line: 2455, column: 19, scope: !7017)
!7037 = !DILocation(line: 2455, column: 29, scope: !7017)
!7038 = !DILocation(line: 2455, column: 37, scope: !7017)
!7039 = !DILocation(line: 2455, column: 42, scope: !7017)
!7040 = !DILocation(line: 2455, column: 36, scope: !7017)
!7041 = !DILocation(line: 2455, column: 25, scope: !7017)
!7042 = !DILocation(line: 2455, column: 3, scope: !7017)
!7043 = !DILocation(line: 2455, column: 12, scope: !7017)
!7044 = !DILocation(line: 2456, column: 2, scope: !7017)
!7045 = !DILocation(line: 2458, column: 14, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 2457, column: 7)
!7047 = !DILocation(line: 2458, column: 22, scope: !7046)
!7048 = !DILocation(line: 2458, column: 27, scope: !7046)
!7049 = !DILocation(line: 2458, column: 3, scope: !7046)
!7050 = !DILocation(line: 2461, column: 6, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 2461, column: 6)
!7052 = !DILocation(line: 2461, column: 6, scope: !6953)
!7053 = !DILocation(line: 2463, column: 18, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 2461, column: 70)
!7055 = !DILocation(line: 2463, column: 23, scope: !7054)
!7056 = !DILocation(line: 2463, column: 28, scope: !7054)
!7057 = !DILocation(line: 2463, column: 36, scope: !7054)
!7058 = !DILocation(line: 2463, column: 3, scope: !7054)
!7059 = !DILocation(line: 2465, column: 2, scope: !7054)
!7060 = !DILocation(line: 2467, column: 7, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 2467, column: 7)
!7062 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 2466, column: 7)
!7063 = !DILocation(line: 2467, column: 12, scope: !7061)
!7064 = !DILocation(line: 2467, column: 23, scope: !7061)
!7065 = !DILocation(line: 2467, column: 7, scope: !7062)
!7066 = !DILocation(line: 2469, column: 21, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2467, column: 27)
!7068 = !DILocation(line: 2469, column: 26, scope: !7067)
!7069 = !DILocation(line: 2469, column: 9, scope: !7067)
!7070 = !DILocation(line: 2469, column: 14, scope: !7067)
!7071 = !DILocation(line: 2469, column: 19, scope: !7067)
!7072 = !DILocation(line: 2470, column: 21, scope: !7067)
!7073 = !DILocation(line: 2470, column: 26, scope: !7067)
!7074 = !DILocation(line: 2470, column: 9, scope: !7067)
!7075 = !DILocation(line: 2470, column: 14, scope: !7067)
!7076 = !DILocation(line: 2470, column: 19, scope: !7067)
!7077 = !DILocation(line: 2472, column: 4, scope: !7067)
!7078 = !DILocation(line: 2472, column: 14, scope: !7067)
!7079 = !DILocation(line: 2475, column: 20, scope: !7067)
!7080 = !DILocation(line: 2475, column: 15, scope: !7067)
!7081 = !DILocation(line: 2475, column: 27, scope: !7067)
!7082 = !DILocation(line: 2475, column: 32, scope: !7067)
!7083 = !DILocation(line: 2475, column: 4, scope: !7067)
!7084 = !DILocation(line: 2476, column: 21, scope: !7067)
!7085 = !DILocation(line: 2476, column: 16, scope: !7067)
!7086 = !DILocation(line: 2476, column: 26, scope: !7067)
!7087 = !DILocation(line: 2476, column: 39, scope: !7067)
!7088 = !DILocation(line: 2476, column: 34, scope: !7067)
!7089 = !DILocation(line: 2476, column: 4, scope: !7067)
!7090 = !DILocation(line: 2477, column: 34, scope: !7067)
!7091 = !DILocation(line: 2477, column: 29, scope: !7067)
!7092 = !DILocation(line: 2477, column: 16, scope: !7067)
!7093 = !DILocation(line: 2477, column: 9, scope: !7067)
!7094 = !DILocation(line: 2477, column: 14, scope: !7067)
!7095 = !DILocation(line: 2479, column: 27, scope: !7067)
!7096 = !DILocation(line: 2479, column: 32, scope: !7067)
!7097 = !DILocation(line: 2479, column: 4, scope: !7067)
!7098 = !DILocation(line: 2481, column: 13, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 2481, column: 8)
!7100 = !DILocation(line: 2481, column: 17, scope: !7099)
!7101 = !DILocation(line: 2481, column: 8, scope: !7067)
!7102 = !DILocalVariable(name: "col", scope: !7103, file: !3, line: 2483, type: !381)
!7103 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2481, column: 38)
!7104 = !DILocation(line: 2483, column: 11, scope: !7103)
!7105 = !DILocation(line: 2485, column: 33, scope: !7103)
!7106 = !DILocation(line: 2485, column: 59, scope: !7103)
!7107 = !DILocation(line: 2485, column: 5, scope: !7103)
!7108 = !DILocation(line: 2486, column: 16, scope: !7103)
!7109 = !DILocation(line: 2486, column: 25, scope: !7103)
!7110 = !DILocation(line: 2486, column: 5, scope: !7103)
!7111 = !DILocation(line: 2487, column: 4, scope: !7103)
!7112 = !DILocation(line: 2488, column: 36, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2488, column: 13)
!7114 = !DILocation(line: 2488, column: 13, scope: !7113)
!7115 = !DILocation(line: 2488, column: 13, scope: !7099)
!7116 = !DILocation(line: 2489, column: 5, scope: !7113)
!7117 = !DILocation(line: 2489, column: 15, scope: !7113)
!7118 = !DILocation(line: 2490, column: 3, scope: !7067)
!7119 = !DILocation(line: 2492, column: 22, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2491, column: 8)
!7121 = !DILocation(line: 2492, column: 27, scope: !7120)
!7122 = !DILocation(line: 2492, column: 32, scope: !7120)
!7123 = !DILocation(line: 2492, column: 40, scope: !7120)
!7124 = !DILocation(line: 2492, column: 4, scope: !7120)
!7125 = !DILocation(line: 2497, column: 6, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 2497, column: 6)
!7127 = !DILocation(line: 2497, column: 11, scope: !7126)
!7128 = !DILocation(line: 2497, column: 16, scope: !7126)
!7129 = !DILocation(line: 2497, column: 6, scope: !6953)
!7130 = !DILocation(line: 2498, column: 37, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 2497, column: 21)
!7132 = !DILocation(line: 2498, column: 3, scope: !7131)
!7133 = !DILocation(line: 2498, column: 8, scope: !7131)
!7134 = !DILocation(line: 2498, column: 17, scope: !7131)
!7135 = !DILocation(line: 2498, column: 22, scope: !7131)
!7136 = !DILocation(line: 2498, column: 30, scope: !7131)
!7137 = !DILocation(line: 2499, column: 2, scope: !7131)
!7138 = !DILocation(line: 2501, column: 1, scope: !6953)
!7139 = distinct !DISubprogram(name: "ray_shadow_qmc", scope: !3, file: !3, line: 2145, type: !7140, scopeLine: 2146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!7140 = !DISubroutineType(types: !7141)
!7141 = !{null, !3683, !4319, !3669, !6, !3681}
!7142 = !DILocalVariable(name: "shi", arg: 1, scope: !7139, file: !3, line: 2145, type: !3683)
!7143 = !DILocation(line: 2145, column: 40, scope: !7139)
!7144 = !DILocalVariable(name: "lar", arg: 2, scope: !7139, file: !3, line: 2145, type: !4319)
!7145 = !DILocation(line: 2145, column: 54, scope: !7139)
!7146 = !DILocalVariable(name: "lampco", arg: 3, scope: !7139, file: !3, line: 2145, type: !3669)
!7147 = !DILocation(line: 2145, column: 71, scope: !7139)
!7148 = !DILocalVariable(name: "shadfac", arg: 4, scope: !7139, file: !3, line: 2145, type: !6)
!7149 = !DILocation(line: 2145, column: 88, scope: !7139)
!7150 = !DILocalVariable(name: "isec", arg: 5, scope: !7139, file: !3, line: 2145, type: !3681)
!7151 = !DILocation(line: 2145, column: 107, scope: !7139)
!7152 = !DILocalVariable(name: "qsa", scope: !7139, file: !3, line: 2147, type: !4891)
!7153 = !DILocation(line: 2147, column: 14, scope: !7139)
!7154 = !DILocalVariable(name: "samples", scope: !7139, file: !3, line: 2148, type: !8)
!7155 = !DILocation(line: 2148, column: 6, scope: !7139)
!7156 = !DILocalVariable(name: "samp3d", scope: !7139, file: !3, line: 2149, type: !206)
!7157 = !DILocation(line: 2149, column: 8, scope: !7139)
!7158 = !DILocalVariable(name: "fac", scope: !7139, file: !3, line: 2151, type: !7)
!7159 = !DILocation(line: 2151, column: 8, scope: !7139)
!7160 = !DILocalVariable(name: "vec", scope: !7139, file: !3, line: 2151, type: !206)
!7161 = !DILocation(line: 2151, column: 18, scope: !7139)
!7162 = !DILocalVariable(name: "end", scope: !7139, file: !3, line: 2151, type: !206)
!7163 = !DILocation(line: 2151, column: 26, scope: !7139)
!7164 = !DILocalVariable(name: "colsq", scope: !7139, file: !3, line: 2152, type: !381)
!7165 = !DILocation(line: 2152, column: 8, scope: !7139)
!7166 = !DILocalVariable(name: "adapt_thresh", scope: !7139, file: !3, line: 2153, type: !7)
!7167 = !DILocation(line: 2153, column: 8, scope: !7139)
!7168 = !DILocation(line: 2153, column: 23, scope: !7139)
!7169 = !DILocation(line: 2153, column: 28, scope: !7139)
!7170 = !DILocalVariable(name: "min_adapt_samples", scope: !7139, file: !3, line: 2154, type: !8)
!7171 = !DILocation(line: 2154, column: 6, scope: !7139)
!7172 = !DILocalVariable(name: "max_samples", scope: !7139, file: !3, line: 2154, type: !8)
!7173 = !DILocation(line: 2154, column: 27, scope: !7139)
!7174 = !DILocation(line: 2154, column: 41, scope: !7139)
!7175 = !DILocation(line: 2154, column: 46, scope: !7139)
!7176 = !DILocalVariable(name: "start", scope: !7139, file: !3, line: 2155, type: !206)
!7177 = !DILocation(line: 2155, column: 8, scope: !7139)
!7178 = !DILocalVariable(name: "do_soft", scope: !7139, file: !3, line: 2156, type: !1103)
!7179 = !DILocation(line: 2156, column: 7, scope: !7139)
!7180 = !DILocalVariable(name: "full_osa", scope: !7139, file: !3, line: 2156, type: !1103)
!7181 = !DILocation(line: 2156, column: 23, scope: !7139)
!7182 = !DILocalVariable(name: "i", scope: !7139, file: !3, line: 2157, type: !8)
!7183 = !DILocation(line: 2157, column: 6, scope: !7139)
!7184 = !DILocalVariable(name: "min", scope: !7139, file: !3, line: 2159, type: !206)
!7185 = !DILocation(line: 2159, column: 8, scope: !7139)
!7186 = !DILocalVariable(name: "max", scope: !7139, file: !3, line: 2159, type: !206)
!7187 = !DILocation(line: 2159, column: 16, scope: !7139)
!7188 = !DILocalVariable(name: "bb_hint", scope: !7139, file: !3, line: 2160, type: !2426)
!7189 = !DILocation(line: 2160, column: 10, scope: !7139)
!7190 = !DILocalVariable(name: "jitco", scope: !7139, file: !3, line: 2162, type: !7191)
!7191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1536, elements: !7192)
!7192 = !{!2585, !172}
!7193 = !DILocation(line: 2162, column: 8, scope: !7139)
!7194 = !DILocalVariable(name: "totjitco", scope: !7139, file: !3, line: 2163, type: !8)
!7195 = !DILocation(line: 2163, column: 6, scope: !7139)
!7196 = !DILocation(line: 2165, column: 24, scope: !7139)
!7197 = !DILocation(line: 2165, column: 33, scope: !7139)
!7198 = !DILocation(line: 2165, column: 13, scope: !7139)
!7199 = !DILocation(line: 2165, column: 22, scope: !7139)
!7200 = !DILocation(line: 2165, column: 2, scope: !7139)
!7201 = !DILocation(line: 2165, column: 11, scope: !7139)
!7202 = !DILocation(line: 2166, column: 6, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2166, column: 6)
!7204 = !DILocation(line: 2166, column: 12, scope: !7203)
!7205 = !DILocation(line: 2166, column: 16, scope: !7203)
!7206 = !DILocation(line: 2166, column: 6, scope: !7139)
!7207 = !DILocation(line: 2167, column: 39, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 2166, column: 37)
!7209 = !DILocation(line: 2167, column: 49, scope: !7208)
!7210 = !DILocation(line: 2167, column: 27, scope: !7208)
!7211 = !DILocation(line: 2167, column: 37, scope: !7208)
!7212 = !DILocation(line: 2167, column: 15, scope: !7208)
!7213 = !DILocation(line: 2167, column: 25, scope: !7208)
!7214 = !DILocation(line: 2167, column: 3, scope: !7208)
!7215 = !DILocation(line: 2167, column: 13, scope: !7208)
!7216 = !DILocation(line: 2168, column: 2, scope: !7208)
!7217 = !DILocation(line: 2170, column: 3, scope: !7203)
!7218 = !DILocation(line: 2170, column: 13, scope: !7203)
!7219 = !DILocation(line: 2172, column: 6, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2172, column: 6)
!7221 = !DILocation(line: 2172, column: 11, scope: !7220)
!7222 = !DILocation(line: 2172, column: 23, scope: !7220)
!7223 = !DILocation(line: 2172, column: 6, scope: !7139)
!7224 = !DILocation(line: 2172, column: 36, scope: !7220)
!7225 = !DILocation(line: 2172, column: 28, scope: !7220)
!7226 = !DILocation(line: 2173, column: 11, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2173, column: 6)
!7228 = !DILocation(line: 2173, column: 16, scope: !7227)
!7229 = !DILocation(line: 2173, column: 25, scope: !7227)
!7230 = !DILocation(line: 2173, column: 31, scope: !7227)
!7231 = !DILocation(line: 2173, column: 29, scope: !7227)
!7232 = !DILocation(line: 2173, column: 35, scope: !7227)
!7233 = !DILocation(line: 2173, column: 40, scope: !7227)
!7234 = !DILocation(line: 2173, column: 44, scope: !7227)
!7235 = !DILocation(line: 2173, column: 49, scope: !7227)
!7236 = !DILocation(line: 2173, column: 54, scope: !7227)
!7237 = !DILocation(line: 2173, column: 59, scope: !7227)
!7238 = !DILocation(line: 2173, column: 6, scope: !7139)
!7239 = !DILocation(line: 2173, column: 83, scope: !7227)
!7240 = !DILocation(line: 2173, column: 74, scope: !7227)
!7241 = !DILocation(line: 2175, column: 6, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2175, column: 6)
!7243 = !DILocation(line: 2175, column: 6, scope: !7139)
!7244 = !DILocation(line: 2176, column: 7, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 2176, column: 7)
!7246 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 2175, column: 16)
!7247 = !DILocation(line: 2176, column: 7, scope: !7246)
!7248 = !DILocation(line: 2176, column: 31, scope: !7245)
!7249 = !DILocation(line: 2176, column: 45, scope: !7245)
!7250 = !DILocation(line: 2176, column: 43, scope: !7245)
!7251 = !DILocation(line: 2176, column: 42, scope: !7245)
!7252 = !DILocation(line: 2176, column: 49, scope: !7245)
!7253 = !DILocation(line: 2176, column: 29, scope: !7245)
!7254 = !DILocation(line: 2176, column: 16, scope: !7245)
!7255 = !DILocation(line: 2177, column: 20, scope: !7245)
!7256 = !DILocation(line: 2178, column: 2, scope: !7246)
!7257 = !DILocation(line: 2180, column: 7, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 2180, column: 7)
!7259 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 2179, column: 7)
!7260 = !DILocation(line: 2180, column: 7, scope: !7259)
!7261 = !DILocation(line: 2180, column: 30, scope: !7258)
!7262 = !DILocation(line: 2180, column: 35, scope: !7258)
!7263 = !DILocation(line: 2180, column: 28, scope: !7258)
!7264 = !DILocation(line: 2180, column: 16, scope: !7258)
!7265 = !DILocation(line: 2181, column: 12, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7258, file: !3, line: 2181, column: 12)
!7267 = !DILocation(line: 2181, column: 17, scope: !7266)
!7268 = !DILocation(line: 2181, column: 23, scope: !7266)
!7269 = !DILocation(line: 2181, column: 12, scope: !7258)
!7270 = !DILocation(line: 2181, column: 46, scope: !7266)
!7271 = !DILocation(line: 2181, column: 44, scope: !7266)
!7272 = !DILocation(line: 2181, column: 50, scope: !7266)
!7273 = !DILocation(line: 2181, column: 43, scope: !7266)
!7274 = !DILocation(line: 2181, column: 57, scope: !7266)
!7275 = !DILocation(line: 2181, column: 55, scope: !7266)
!7276 = !DILocation(line: 2181, column: 41, scope: !7266)
!7277 = !DILocation(line: 2181, column: 29, scope: !7266)
!7278 = !DILocation(line: 2182, column: 20, scope: !7266)
!7279 = !DILocation(line: 2185, column: 29, scope: !7139)
!7280 = !DILocation(line: 2185, column: 34, scope: !7139)
!7281 = !DILocation(line: 2185, column: 47, scope: !7139)
!7282 = !DILocation(line: 2185, column: 2, scope: !7139)
!7283 = !DILocation(line: 2188, column: 6, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2188, column: 6)
!7285 = !DILocation(line: 2188, column: 11, scope: !7284)
!7286 = !DILocation(line: 2188, column: 26, scope: !7284)
!7287 = !DILocation(line: 2188, column: 6, scope: !7139)
!7288 = !DILocation(line: 2189, column: 35, scope: !7284)
!7289 = !DILocation(line: 2189, column: 40, scope: !7284)
!7290 = !DILocation(line: 2189, column: 66, scope: !7284)
!7291 = !DILocation(line: 2189, column: 9, scope: !7284)
!7292 = !DILocation(line: 2189, column: 7, scope: !7284)
!7293 = !DILocation(line: 2189, column: 3, scope: !7284)
!7294 = !DILocation(line: 2190, column: 11, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 2190, column: 11)
!7296 = !DILocation(line: 2190, column: 16, scope: !7295)
!7297 = !DILocation(line: 2190, column: 31, scope: !7295)
!7298 = !DILocation(line: 2190, column: 11, scope: !7284)
!7299 = !DILocation(line: 2191, column: 35, scope: !7295)
!7300 = !DILocation(line: 2191, column: 40, scope: !7295)
!7301 = !DILocation(line: 2191, column: 70, scope: !7295)
!7302 = !DILocation(line: 2191, column: 9, scope: !7295)
!7303 = !DILocation(line: 2191, column: 7, scope: !7295)
!7304 = !DILocation(line: 2191, column: 3, scope: !7295)
!7305 = !DILocation(line: 2193, column: 16, scope: !7139)
!7306 = !DILocation(line: 2193, column: 21, scope: !7139)
!7307 = !DILocation(line: 2193, column: 26, scope: !7139)
!7308 = !DILocation(line: 2193, column: 2, scope: !7139)
!7309 = !DILocation(line: 2195, column: 2, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2195, column: 2)
!7311 = !DILocation(line: 2196, column: 9, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2196, column: 2)
!7313 = !DILocation(line: 2196, column: 7, scope: !7312)
!7314 = !DILocation(line: 2196, column: 14, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 2196, column: 2)
!7316 = !DILocation(line: 2196, column: 18, scope: !7315)
!7317 = !DILocation(line: 2196, column: 16, scope: !7315)
!7318 = !DILocation(line: 2196, column: 2, scope: !7312)
!7319 = !DILocation(line: 2197, column: 18, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2196, column: 33)
!7321 = !DILocation(line: 2197, column: 23, scope: !7320)
!7322 = !DILocation(line: 2197, column: 34, scope: !7320)
!7323 = !DILocation(line: 2197, column: 28, scope: !7320)
!7324 = !DILocation(line: 2197, column: 3, scope: !7320)
!7325 = !DILocation(line: 2198, column: 2, scope: !7320)
!7326 = !DILocation(line: 2196, column: 29, scope: !7315)
!7327 = !DILocation(line: 2196, column: 2, scope: !7315)
!7328 = distinct !{!7328, !7318, !7329}
!7329 = !DILocation(line: 2198, column: 2, scope: !7312)
!7330 = !DILocation(line: 2199, column: 6, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2199, column: 6)
!7332 = !DILocation(line: 2199, column: 11, scope: !7331)
!7333 = !DILocation(line: 2199, column: 16, scope: !7331)
!7334 = !DILocation(line: 2199, column: 21, scope: !7331)
!7335 = !DILocation(line: 2199, column: 6, scope: !7139)
!7336 = !DILocation(line: 2200, column: 13, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 2199, column: 42)
!7338 = !DILocation(line: 2200, column: 18, scope: !7337)
!7339 = !DILocation(line: 2200, column: 23, scope: !7337)
!7340 = !DILocation(line: 2200, column: 29, scope: !7337)
!7341 = !DILocation(line: 2200, column: 3, scope: !7337)
!7342 = !DILocation(line: 2201, column: 13, scope: !7337)
!7343 = !DILocation(line: 2201, column: 18, scope: !7337)
!7344 = !DILocation(line: 2201, column: 23, scope: !7337)
!7345 = !DILocation(line: 2201, column: 29, scope: !7337)
!7346 = !DILocation(line: 2201, column: 3, scope: !7337)
!7347 = !DILocation(line: 2202, column: 2, scope: !7337)
!7348 = !DILocation(line: 2203, column: 25, scope: !7139)
!7349 = !DILocation(line: 2203, column: 44, scope: !7139)
!7350 = !DILocation(line: 2203, column: 49, scope: !7139)
!7351 = !DILocation(line: 2203, column: 2, scope: !7139)
!7352 = !DILocation(line: 2205, column: 2, scope: !7139)
!7353 = !DILocation(line: 2205, column: 8, scope: !7139)
!7354 = !DILocation(line: 2205, column: 13, scope: !7139)
!7355 = !DILocation(line: 2206, column: 2, scope: !7139)
!7356 = !DILocation(line: 2206, column: 8, scope: !7139)
!7357 = !DILocation(line: 2206, column: 14, scope: !7139)
!7358 = !DILocation(line: 2207, column: 2, scope: !7139)
!7359 = !DILocation(line: 2207, column: 8, scope: !7139)
!7360 = !DILocation(line: 2207, column: 13, scope: !7139)
!7361 = !DILocation(line: 2208, column: 13, scope: !7139)
!7362 = !DILocation(line: 2208, column: 18, scope: !7139)
!7363 = !DILocation(line: 2208, column: 2, scope: !7139)
!7364 = !DILocation(line: 2210, column: 2, scope: !7139)
!7365 = !DILocation(line: 2210, column: 9, scope: !7139)
!7366 = !DILocation(line: 2210, column: 19, scope: !7139)
!7367 = !DILocation(line: 2210, column: 17, scope: !7139)
!7368 = !DILocation(line: 2212, column: 21, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2210, column: 32)
!7370 = !DILocation(line: 2212, column: 26, scope: !7369)
!7371 = !DILocation(line: 2212, column: 3, scope: !7369)
!7372 = !DILocation(line: 2212, column: 9, scope: !7369)
!7373 = !DILocation(line: 2212, column: 14, scope: !7369)
!7374 = !DILocation(line: 2212, column: 19, scope: !7369)
!7375 = !DILocation(line: 2213, column: 21, scope: !7369)
!7376 = !DILocation(line: 2213, column: 26, scope: !7369)
!7377 = !DILocation(line: 2213, column: 3, scope: !7369)
!7378 = !DILocation(line: 2213, column: 9, scope: !7369)
!7379 = !DILocation(line: 2213, column: 14, scope: !7369)
!7380 = !DILocation(line: 2213, column: 19, scope: !7369)
!7381 = !DILocation(line: 2218, column: 14, scope: !7369)
!7382 = !DILocation(line: 2218, column: 27, scope: !7369)
!7383 = !DILocation(line: 2218, column: 37, scope: !7369)
!7384 = !DILocation(line: 2218, column: 35, scope: !7369)
!7385 = !DILocation(line: 2218, column: 21, scope: !7369)
!7386 = !DILocation(line: 2218, column: 3, scope: !7369)
!7387 = !DILocation(line: 2220, column: 7, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 2220, column: 7)
!7389 = !DILocation(line: 2220, column: 7, scope: !7369)
!7390 = !DILocation(line: 2222, column: 8, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2222, column: 8)
!7392 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 2220, column: 16)
!7393 = !DILocation(line: 2222, column: 13, scope: !7391)
!7394 = !DILocation(line: 2222, column: 18, scope: !7391)
!7395 = !DILocation(line: 2222, column: 8, scope: !7392)
!7396 = !DILocalVariable(name: "ru", scope: !7397, file: !3, line: 2223, type: !206)
!7397 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 2222, column: 31)
!7398 = !DILocation(line: 2223, column: 11, scope: !7397)
!7399 = !DILocalVariable(name: "rv", scope: !7397, file: !3, line: 2223, type: !206)
!7400 = !DILocation(line: 2223, column: 18, scope: !7397)
!7401 = !DILocalVariable(name: "v", scope: !7397, file: !3, line: 2223, type: !206)
!7402 = !DILocation(line: 2223, column: 25, scope: !7397)
!7403 = !DILocalVariable(name: "s", scope: !7397, file: !3, line: 2223, type: !206)
!7404 = !DILocation(line: 2223, column: 31, scope: !7397)
!7405 = !DILocation(line: 2226, column: 17, scope: !7397)
!7406 = !DILocation(line: 2226, column: 20, scope: !7397)
!7407 = !DILocation(line: 2226, column: 27, scope: !7397)
!7408 = !DILocation(line: 2226, column: 5, scope: !7397)
!7409 = !DILocation(line: 2227, column: 18, scope: !7397)
!7410 = !DILocation(line: 2227, column: 5, scope: !7397)
!7411 = !DILocation(line: 2228, column: 25, scope: !7397)
!7412 = !DILocation(line: 2228, column: 29, scope: !7397)
!7413 = !DILocation(line: 2228, column: 33, scope: !7397)
!7414 = !DILocation(line: 2228, column: 5, scope: !7397)
!7415 = !DILocation(line: 2231, column: 20, scope: !7397)
!7416 = !DILocation(line: 2231, column: 28, scope: !7397)
!7417 = !DILocation(line: 2231, column: 33, scope: !7397)
!7418 = !DILocation(line: 2231, column: 38, scope: !7397)
!7419 = !DILocation(line: 2231, column: 46, scope: !7397)
!7420 = !DILocation(line: 2231, column: 55, scope: !7397)
!7421 = !DILocation(line: 2231, column: 60, scope: !7397)
!7422 = !DILocation(line: 2231, column: 5, scope: !7397)
!7423 = !DILocation(line: 2234, column: 12, scope: !7397)
!7424 = !DILocation(line: 2234, column: 22, scope: !7397)
!7425 = !DILocation(line: 2234, column: 21, scope: !7397)
!7426 = !DILocation(line: 2234, column: 30, scope: !7397)
!7427 = !DILocation(line: 2234, column: 40, scope: !7397)
!7428 = !DILocation(line: 2234, column: 39, scope: !7397)
!7429 = !DILocation(line: 2234, column: 28, scope: !7397)
!7430 = !DILocation(line: 2234, column: 5, scope: !7397)
!7431 = !DILocation(line: 2234, column: 10, scope: !7397)
!7432 = !DILocation(line: 2235, column: 12, scope: !7397)
!7433 = !DILocation(line: 2235, column: 22, scope: !7397)
!7434 = !DILocation(line: 2235, column: 21, scope: !7397)
!7435 = !DILocation(line: 2235, column: 30, scope: !7397)
!7436 = !DILocation(line: 2235, column: 40, scope: !7397)
!7437 = !DILocation(line: 2235, column: 39, scope: !7397)
!7438 = !DILocation(line: 2235, column: 28, scope: !7397)
!7439 = !DILocation(line: 2235, column: 5, scope: !7397)
!7440 = !DILocation(line: 2235, column: 10, scope: !7397)
!7441 = !DILocation(line: 2236, column: 12, scope: !7397)
!7442 = !DILocation(line: 2236, column: 22, scope: !7397)
!7443 = !DILocation(line: 2236, column: 21, scope: !7397)
!7444 = !DILocation(line: 2236, column: 30, scope: !7397)
!7445 = !DILocation(line: 2236, column: 40, scope: !7397)
!7446 = !DILocation(line: 2236, column: 39, scope: !7397)
!7447 = !DILocation(line: 2236, column: 28, scope: !7397)
!7448 = !DILocation(line: 2236, column: 5, scope: !7397)
!7449 = !DILocation(line: 2236, column: 10, scope: !7397)
!7450 = !DILocation(line: 2238, column: 16, scope: !7397)
!7451 = !DILocation(line: 2238, column: 24, scope: !7397)
!7452 = !DILocation(line: 2238, column: 5, scope: !7397)
!7453 = !DILocation(line: 2239, column: 4, scope: !7397)
!7454 = !DILocation(line: 2242, column: 20, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 2240, column: 9)
!7456 = !DILocation(line: 2242, column: 28, scope: !7455)
!7457 = !DILocation(line: 2242, column: 33, scope: !7455)
!7458 = !DILocation(line: 2242, column: 38, scope: !7455)
!7459 = !DILocation(line: 2242, column: 46, scope: !7455)
!7460 = !DILocation(line: 2242, column: 55, scope: !7455)
!7461 = !DILocation(line: 2242, column: 60, scope: !7455)
!7462 = !DILocation(line: 2242, column: 71, scope: !7455)
!7463 = !DILocation(line: 2242, column: 76, scope: !7455)
!7464 = !DILocation(line: 2242, column: 5, scope: !7455)
!7465 = !DILocation(line: 2245, column: 15, scope: !7455)
!7466 = !DILocation(line: 2245, column: 20, scope: !7455)
!7467 = !DILocation(line: 2245, column: 25, scope: !7455)
!7468 = !DILocation(line: 2245, column: 5, scope: !7455)
!7469 = !DILocation(line: 2247, column: 13, scope: !7392)
!7470 = !DILocation(line: 2247, column: 20, scope: !7392)
!7471 = !DILocation(line: 2247, column: 19, scope: !7392)
!7472 = !DILocation(line: 2247, column: 4, scope: !7392)
!7473 = !DILocation(line: 2247, column: 11, scope: !7392)
!7474 = !DILocation(line: 2248, column: 13, scope: !7392)
!7475 = !DILocation(line: 2248, column: 20, scope: !7392)
!7476 = !DILocation(line: 2248, column: 19, scope: !7392)
!7477 = !DILocation(line: 2248, column: 4, scope: !7392)
!7478 = !DILocation(line: 2248, column: 11, scope: !7392)
!7479 = !DILocation(line: 2249, column: 13, scope: !7392)
!7480 = !DILocation(line: 2249, column: 20, scope: !7392)
!7481 = !DILocation(line: 2249, column: 19, scope: !7392)
!7482 = !DILocation(line: 2249, column: 4, scope: !7392)
!7483 = !DILocation(line: 2249, column: 11, scope: !7392)
!7484 = !DILocation(line: 2250, column: 3, scope: !7392)
!7485 = !DILocation(line: 2252, column: 15, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 2251, column: 8)
!7487 = !DILocation(line: 2252, column: 20, scope: !7486)
!7488 = !DILocation(line: 2252, column: 4, scope: !7486)
!7489 = !DILocation(line: 2255, column: 7, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 2255, column: 7)
!7491 = !DILocation(line: 2255, column: 12, scope: !7490)
!7492 = !DILocation(line: 2255, column: 7, scope: !7369)
!7493 = !DILocalVariable(name: "jitbias", scope: !7494, file: !3, line: 2257, type: !7)
!7494 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 2255, column: 20)
!7495 = !DILocation(line: 2257, column: 10, scope: !7494)
!7496 = !DILocation(line: 2257, column: 32, scope: !7494)
!7497 = !DILocation(line: 2257, column: 37, scope: !7494)
!7498 = !DILocation(line: 2257, column: 25, scope: !7494)
!7499 = !DILocation(line: 2257, column: 52, scope: !7494)
!7500 = !DILocation(line: 2257, column: 57, scope: !7494)
!7501 = !DILocation(line: 2257, column: 45, scope: !7494)
!7502 = !DILocation(line: 2257, column: 43, scope: !7494)
!7503 = !DILocation(line: 2257, column: 23, scope: !7494)
!7504 = !DILocalVariable(name: "v", scope: !7494, file: !3, line: 2258, type: !206)
!7505 = !DILocation(line: 2258, column: 10, scope: !7494)
!7506 = !DILocation(line: 2260, column: 16, scope: !7494)
!7507 = !DILocation(line: 2260, column: 19, scope: !7494)
!7508 = !DILocation(line: 2260, column: 26, scope: !7494)
!7509 = !DILocation(line: 2260, column: 4, scope: !7494)
!7510 = !DILocation(line: 2261, column: 17, scope: !7494)
!7511 = !DILocation(line: 2261, column: 4, scope: !7494)
!7512 = !DILocation(line: 2263, column: 16, scope: !7494)
!7513 = !DILocation(line: 2263, column: 24, scope: !7494)
!7514 = !DILocation(line: 2263, column: 23, scope: !7494)
!7515 = !DILocation(line: 2263, column: 4, scope: !7494)
!7516 = !DILocation(line: 2263, column: 13, scope: !7494)
!7517 = !DILocation(line: 2264, column: 16, scope: !7494)
!7518 = !DILocation(line: 2264, column: 24, scope: !7494)
!7519 = !DILocation(line: 2264, column: 23, scope: !7494)
!7520 = !DILocation(line: 2264, column: 4, scope: !7494)
!7521 = !DILocation(line: 2264, column: 13, scope: !7494)
!7522 = !DILocation(line: 2265, column: 16, scope: !7494)
!7523 = !DILocation(line: 2265, column: 24, scope: !7494)
!7524 = !DILocation(line: 2265, column: 23, scope: !7494)
!7525 = !DILocation(line: 2265, column: 4, scope: !7494)
!7526 = !DILocation(line: 2265, column: 13, scope: !7494)
!7527 = !DILocation(line: 2266, column: 3, scope: !7494)
!7528 = !DILocation(line: 2268, column: 14, scope: !7369)
!7529 = !DILocation(line: 2268, column: 20, scope: !7369)
!7530 = !DILocation(line: 2268, column: 27, scope: !7369)
!7531 = !DILocation(line: 2268, column: 3, scope: !7369)
!7532 = !DILocation(line: 2269, column: 15, scope: !7369)
!7533 = !DILocation(line: 2269, column: 21, scope: !7369)
!7534 = !DILocation(line: 2269, column: 26, scope: !7369)
!7535 = !DILocation(line: 2269, column: 31, scope: !7369)
!7536 = !DILocation(line: 2269, column: 3, scope: !7369)
!7537 = !DILocation(line: 2270, column: 29, scope: !7369)
!7538 = !DILocation(line: 2270, column: 35, scope: !7369)
!7539 = !DILocation(line: 2270, column: 16, scope: !7369)
!7540 = !DILocation(line: 2270, column: 3, scope: !7369)
!7541 = !DILocation(line: 2270, column: 9, scope: !7369)
!7542 = !DILocation(line: 2270, column: 14, scope: !7369)
!7543 = !DILocation(line: 2272, column: 26, scope: !7369)
!7544 = !DILocation(line: 2272, column: 31, scope: !7369)
!7545 = !DILocation(line: 2272, column: 36, scope: !7369)
!7546 = !DILocation(line: 2272, column: 3, scope: !7369)
!7547 = !DILocation(line: 2275, column: 7, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 2275, column: 7)
!7549 = !DILocation(line: 2275, column: 13, scope: !7548)
!7550 = !DILocation(line: 2275, column: 17, scope: !7548)
!7551 = !DILocation(line: 2275, column: 7, scope: !7369)
!7552 = !DILocalVariable(name: "col", scope: !7553, file: !3, line: 2276, type: !381)
!7553 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 2275, column: 38)
!7554 = !DILocation(line: 2276, column: 10, scope: !7553)
!7555 = !DILocation(line: 2278, column: 25, scope: !7553)
!7556 = !DILocation(line: 2278, column: 31, scope: !7553)
!7557 = !DILocation(line: 2278, column: 57, scope: !7553)
!7558 = !DILocation(line: 2278, column: 4, scope: !7553)
!7559 = !DILocation(line: 2279, column: 18, scope: !7553)
!7560 = !DILocation(line: 2279, column: 4, scope: !7553)
!7561 = !DILocation(line: 2279, column: 15, scope: !7553)
!7562 = !DILocation(line: 2280, column: 18, scope: !7553)
!7563 = !DILocation(line: 2280, column: 4, scope: !7553)
!7564 = !DILocation(line: 2280, column: 15, scope: !7553)
!7565 = !DILocation(line: 2281, column: 18, scope: !7553)
!7566 = !DILocation(line: 2281, column: 4, scope: !7553)
!7567 = !DILocation(line: 2281, column: 15, scope: !7553)
!7568 = !DILocation(line: 2282, column: 18, scope: !7553)
!7569 = !DILocation(line: 2282, column: 4, scope: !7553)
!7570 = !DILocation(line: 2282, column: 15, scope: !7553)
!7571 = !DILocation(line: 2285, column: 16, scope: !7553)
!7572 = !DILocation(line: 2285, column: 23, scope: !7553)
!7573 = !DILocation(line: 2285, column: 22, scope: !7553)
!7574 = !DILocation(line: 2285, column: 4, scope: !7553)
!7575 = !DILocation(line: 2285, column: 13, scope: !7553)
!7576 = !DILocation(line: 2286, column: 16, scope: !7553)
!7577 = !DILocation(line: 2286, column: 23, scope: !7553)
!7578 = !DILocation(line: 2286, column: 22, scope: !7553)
!7579 = !DILocation(line: 2286, column: 4, scope: !7553)
!7580 = !DILocation(line: 2286, column: 13, scope: !7553)
!7581 = !DILocation(line: 2287, column: 16, scope: !7553)
!7582 = !DILocation(line: 2287, column: 23, scope: !7553)
!7583 = !DILocation(line: 2287, column: 22, scope: !7553)
!7584 = !DILocation(line: 2287, column: 4, scope: !7553)
!7585 = !DILocation(line: 2287, column: 13, scope: !7553)
!7586 = !DILocation(line: 2288, column: 3, scope: !7553)
!7587 = !DILocation(line: 2290, column: 32, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 2290, column: 9)
!7589 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 2289, column: 8)
!7590 = !DILocation(line: 2290, column: 41, scope: !7588)
!7591 = !DILocation(line: 2290, column: 9, scope: !7588)
!7592 = !DILocation(line: 2290, column: 9, scope: !7589)
!7593 = !DILocation(line: 2290, column: 52, scope: !7588)
!7594 = !DILocation(line: 2290, column: 49, scope: !7588)
!7595 = !DILocation(line: 2293, column: 10, scope: !7369)
!7596 = !DILocation(line: 2295, column: 7, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 2295, column: 7)
!7598 = !DILocation(line: 2295, column: 12, scope: !7597)
!7599 = !DILocation(line: 2295, column: 28, scope: !7597)
!7600 = !DILocation(line: 2295, column: 7, scope: !7369)
!7601 = !DILocation(line: 2298, column: 9, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 2298, column: 8)
!7603 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 2295, column: 47)
!7604 = !DILocation(line: 2298, column: 23, scope: !7602)
!7605 = !DILocation(line: 2298, column: 21, scope: !7602)
!7606 = !DILocation(line: 2298, column: 42, scope: !7602)
!7607 = !DILocation(line: 2298, column: 46, scope: !7602)
!7608 = !DILocation(line: 2298, column: 59, scope: !7602)
!7609 = !DILocation(line: 2298, column: 67, scope: !7602)
!7610 = !DILocation(line: 2298, column: 71, scope: !7602)
!7611 = !DILocation(line: 2298, column: 81, scope: !7602)
!7612 = !DILocation(line: 2298, column: 93, scope: !7602)
!7613 = !DILocation(line: 2298, column: 79, scope: !7602)
!7614 = !DILocation(line: 2298, column: 8, scope: !7603)
!7615 = !DILocation(line: 2299, column: 9, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 2299, column: 9)
!7617 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 2298, column: 99)
!7618 = !DILocation(line: 2299, column: 15, scope: !7616)
!7619 = !DILocation(line: 2299, column: 19, scope: !7616)
!7620 = !DILocation(line: 2299, column: 9, scope: !7617)
!7621 = !DILocation(line: 2300, column: 11, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2300, column: 10)
!7623 = distinct !DILexicalBlock(scope: !7616, file: !3, line: 2299, column: 40)
!7624 = !DILocation(line: 2300, column: 24, scope: !7622)
!7625 = !DILocation(line: 2300, column: 22, scope: !7622)
!7626 = !DILocation(line: 2300, column: 40, scope: !7622)
!7627 = !DILocation(line: 2300, column: 39, scope: !7622)
!7628 = !DILocation(line: 2300, column: 32, scope: !7622)
!7629 = !DILocation(line: 2300, column: 55, scope: !7622)
!7630 = !DILocation(line: 2300, column: 59, scope: !7622)
!7631 = !DILocation(line: 2300, column: 72, scope: !7622)
!7632 = !DILocation(line: 2300, column: 70, scope: !7622)
!7633 = !DILocation(line: 2300, column: 82, scope: !7622)
!7634 = !DILocation(line: 2300, column: 80, scope: !7622)
!7635 = !DILocation(line: 2300, column: 10, scope: !7623)
!7636 = !DILocation(line: 2301, column: 7, scope: !7622)
!7637 = !DILocation(line: 2302, column: 40, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 2302, column: 15)
!7639 = !DILocation(line: 2302, column: 49, scope: !7638)
!7640 = !DILocation(line: 2302, column: 58, scope: !7638)
!7641 = !DILocation(line: 2302, column: 65, scope: !7638)
!7642 = !DILocation(line: 2302, column: 15, scope: !7638)
!7643 = !DILocation(line: 2302, column: 15, scope: !7622)
!7644 = !DILocation(line: 2303, column: 7, scope: !7638)
!7645 = !DILocation(line: 2304, column: 5, scope: !7623)
!7646 = !DILocation(line: 2306, column: 11, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !3, line: 2306, column: 10)
!7648 = distinct !DILexicalBlock(scope: !7616, file: !3, line: 2305, column: 10)
!7649 = !DILocation(line: 2306, column: 17, scope: !7647)
!7650 = !DILocation(line: 2306, column: 15, scope: !7647)
!7651 = !DILocation(line: 2306, column: 33, scope: !7647)
!7652 = !DILocation(line: 2306, column: 32, scope: !7647)
!7653 = !DILocation(line: 2306, column: 25, scope: !7647)
!7654 = !DILocation(line: 2306, column: 48, scope: !7647)
!7655 = !DILocation(line: 2306, column: 52, scope: !7647)
!7656 = !DILocation(line: 2306, column: 58, scope: !7647)
!7657 = !DILocation(line: 2306, column: 56, scope: !7647)
!7658 = !DILocation(line: 2306, column: 68, scope: !7647)
!7659 = !DILocation(line: 2306, column: 66, scope: !7647)
!7660 = !DILocation(line: 2306, column: 10, scope: !7648)
!7661 = !DILocation(line: 2307, column: 7, scope: !7647)
!7662 = !DILocation(line: 2309, column: 4, scope: !7617)
!7663 = !DILocation(line: 2310, column: 3, scope: !7603)
!7664 = distinct !{!7664, !7364, !7665}
!7665 = !DILocation(line: 2311, column: 2, scope: !7139)
!7666 = !DILocation(line: 2313, column: 6, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2313, column: 6)
!7668 = !DILocation(line: 2313, column: 12, scope: !7667)
!7669 = !DILocation(line: 2313, column: 16, scope: !7667)
!7670 = !DILocation(line: 2313, column: 6, scope: !7139)
!7671 = !DILocation(line: 2314, column: 17, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 2313, column: 37)
!7673 = !DILocation(line: 2314, column: 3, scope: !7672)
!7674 = !DILocation(line: 2314, column: 14, scope: !7672)
!7675 = !DILocation(line: 2315, column: 17, scope: !7672)
!7676 = !DILocation(line: 2315, column: 3, scope: !7672)
!7677 = !DILocation(line: 2315, column: 14, scope: !7672)
!7678 = !DILocation(line: 2316, column: 17, scope: !7672)
!7679 = !DILocation(line: 2316, column: 3, scope: !7672)
!7680 = !DILocation(line: 2316, column: 14, scope: !7672)
!7681 = !DILocation(line: 2317, column: 17, scope: !7672)
!7682 = !DILocation(line: 2317, column: 3, scope: !7672)
!7683 = !DILocation(line: 2317, column: 14, scope: !7672)
!7684 = !DILocation(line: 2318, column: 2, scope: !7672)
!7685 = !DILocation(line: 2320, column: 20, scope: !7667)
!7686 = !DILocation(line: 2320, column: 24, scope: !7667)
!7687 = !DILocation(line: 2320, column: 23, scope: !7667)
!7688 = !DILocation(line: 2320, column: 19, scope: !7667)
!7689 = !DILocation(line: 2320, column: 3, scope: !7667)
!7690 = !DILocation(line: 2320, column: 13, scope: !7667)
!7691 = !DILocation(line: 2322, column: 6, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2322, column: 6)
!7693 = !DILocation(line: 2322, column: 6, scope: !7139)
!7694 = !DILocation(line: 2323, column: 33, scope: !7692)
!7695 = !DILocation(line: 2323, column: 38, scope: !7692)
!7696 = !DILocation(line: 2323, column: 46, scope: !7692)
!7697 = !DILocation(line: 2323, column: 3, scope: !7692)
!7698 = !DILocation(line: 2324, column: 1, scope: !7139)
!7699 = distinct !DISubprogram(name: "ray_trace_shadow_tra", scope: !3, file: !3, line: 1606, type: !7700, scopeLine: 1607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!7700 = !DISubroutineType(types: !7701)
!7701 = !{null, !3681, !3683, !8, !8, !6}
!7702 = !DILocalVariable(name: "is", arg: 1, scope: !7699, file: !3, line: 1606, type: !3681)
!7703 = !DILocation(line: 1606, column: 41, scope: !7699)
!7704 = !DILocalVariable(name: "origshi", arg: 2, scope: !7699, file: !3, line: 1606, type: !3683)
!7705 = !DILocation(line: 1606, column: 57, scope: !7699)
!7706 = !DILocalVariable(name: "depth", arg: 3, scope: !7699, file: !3, line: 1606, type: !8)
!7707 = !DILocation(line: 1606, column: 70, scope: !7699)
!7708 = !DILocalVariable(name: "traflag", arg: 4, scope: !7699, file: !3, line: 1606, type: !8)
!7709 = !DILocation(line: 1606, column: 81, scope: !7699)
!7710 = !DILocalVariable(name: "col", arg: 5, scope: !7699, file: !3, line: 1606, type: !6)
!7711 = !DILocation(line: 1606, column: 96, scope: !7699)
!7712 = !DILocalVariable(name: "initial_dist", scope: !7699, file: !3, line: 1610, type: !3670)
!7713 = !DILocation(line: 1610, column: 14, scope: !7699)
!7714 = !DILocation(line: 1610, column: 29, scope: !7699)
!7715 = !DILocation(line: 1610, column: 33, scope: !7699)
!7716 = !DILocation(line: 1612, column: 29, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7699, file: !3, line: 1612, column: 6)
!7718 = !DILocation(line: 1612, column: 38, scope: !7717)
!7719 = !DILocation(line: 1612, column: 6, scope: !7717)
!7720 = !DILocation(line: 1612, column: 6, scope: !7699)
!7721 = !DILocalVariable(name: "shi", scope: !7722, file: !3, line: 1617, type: !3684)
!7722 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 1612, column: 43)
!7723 = !DILocation(line: 1617, column: 14, scope: !7722)
!7724 = !DILocalVariable(name: "shr", scope: !7722, file: !3, line: 1620, type: !3825)
!7725 = !DILocation(line: 1620, column: 15, scope: !7722)
!7726 = !DILocation(line: 1624, column: 14, scope: !7722)
!7727 = !DILocation(line: 1624, column: 23, scope: !7722)
!7728 = !DILocation(line: 1624, column: 29, scope: !7722)
!7729 = !DILocation(line: 1624, column: 7, scope: !7722)
!7730 = !DILocation(line: 1624, column: 12, scope: !7722)
!7731 = !DILocation(line: 1625, column: 13, scope: !7722)
!7732 = !DILocation(line: 1625, column: 22, scope: !7722)
!7733 = !DILocation(line: 1625, column: 7, scope: !7722)
!7734 = !DILocation(line: 1625, column: 11, scope: !7722)
!7735 = !DILocation(line: 1626, column: 15, scope: !7722)
!7736 = !DILocation(line: 1626, column: 24, scope: !7722)
!7737 = !DILocation(line: 1626, column: 7, scope: !7722)
!7738 = !DILocation(line: 1626, column: 13, scope: !7722)
!7739 = !DILocation(line: 1627, column: 7, scope: !7722)
!7740 = !DILocation(line: 1627, column: 15, scope: !7722)
!7741 = !DILocation(line: 1628, column: 7, scope: !7722)
!7742 = !DILocation(line: 1628, column: 19, scope: !7722)
!7743 = !DILocation(line: 1630, column: 11, scope: !7722)
!7744 = !DILocation(line: 1630, column: 20, scope: !7722)
!7745 = !DILocation(line: 1630, column: 7, scope: !7722)
!7746 = !DILocation(line: 1630, column: 9, scope: !7722)
!7747 = !DILocation(line: 1631, column: 11, scope: !7722)
!7748 = !DILocation(line: 1631, column: 20, scope: !7722)
!7749 = !DILocation(line: 1631, column: 7, scope: !7722)
!7750 = !DILocation(line: 1631, column: 9, scope: !7722)
!7751 = !DILocation(line: 1632, column: 12, scope: !7722)
!7752 = !DILocation(line: 1632, column: 21, scope: !7722)
!7753 = !DILocation(line: 1632, column: 7, scope: !7722)
!7754 = !DILocation(line: 1632, column: 10, scope: !7722)
!7755 = !DILocation(line: 1633, column: 14, scope: !7722)
!7756 = !DILocation(line: 1633, column: 23, scope: !7722)
!7757 = !DILocation(line: 1633, column: 7, scope: !7722)
!7758 = !DILocation(line: 1633, column: 12, scope: !7722)
!7759 = !DILocation(line: 1635, column: 34, scope: !7722)
!7760 = !DILocation(line: 1635, column: 43, scope: !7722)
!7761 = !DILocation(line: 1635, column: 48, scope: !7722)
!7762 = !DILocation(line: 1635, column: 3, scope: !7722)
!7763 = !DILocation(line: 1637, column: 13, scope: !7722)
!7764 = !DILocation(line: 1637, column: 3, scope: !7722)
!7765 = !DILocation(line: 1638, column: 11, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 1638, column: 7)
!7767 = !DILocation(line: 1638, column: 16, scope: !7766)
!7768 = !DILocation(line: 1638, column: 7, scope: !7766)
!7769 = !DILocation(line: 1638, column: 30, scope: !7766)
!7770 = !DILocation(line: 1638, column: 7, scope: !7722)
!7771 = !DILocalVariable(name: "d", scope: !7772, file: !3, line: 1639, type: !3670)
!7772 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 1638, column: 50)
!7773 = !DILocation(line: 1639, column: 16, scope: !7772)
!7774 = !DILocation(line: 1639, column: 20, scope: !7772)
!7775 = !DILocation(line: 1639, column: 28, scope: !7772)
!7776 = !DILocation(line: 1639, column: 19, scope: !7772)
!7777 = !DILocation(line: 1640, column: 38, scope: !7772)
!7778 = !DILocation(line: 1640, column: 16, scope: !7772)
!7779 = !DILocation(line: 1643, column: 18, scope: !7772)
!7780 = !DILocation(line: 1643, column: 27, scope: !7772)
!7781 = !DILocation(line: 1643, column: 23, scope: !7772)
!7782 = !DILocation(line: 1643, column: 37, scope: !7772)
!7783 = !DILocation(line: 1643, column: 44, scope: !7772)
!7784 = !DILocation(line: 1643, column: 50, scope: !7772)
!7785 = !DILocation(line: 1643, column: 55, scope: !7772)
!7786 = !DILocation(line: 1643, column: 45, scope: !7772)
!7787 = !DILocation(line: 1643, column: 4, scope: !7772)
!7788 = !DILocation(line: 1644, column: 3, scope: !7772)
!7789 = !DILocation(line: 1645, column: 16, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 1645, column: 12)
!7791 = !DILocation(line: 1645, column: 21, scope: !7790)
!7792 = !DILocation(line: 1645, column: 12, scope: !7790)
!7793 = !DILocation(line: 1645, column: 35, scope: !7790)
!7794 = !DILocation(line: 1645, column: 12, scope: !7766)
!7795 = !DILocalVariable(name: "a", scope: !7796, file: !3, line: 1646, type: !3670)
!7796 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 1645, column: 54)
!7797 = !DILocation(line: 1646, column: 16, scope: !7796)
!7798 = !DILocation(line: 1646, column: 20, scope: !7796)
!7799 = !DILocation(line: 1648, column: 13, scope: !7796)
!7800 = !DILocation(line: 1648, column: 15, scope: !7796)
!7801 = !DILocation(line: 1648, column: 14, scope: !7796)
!7802 = !DILocation(line: 1648, column: 28, scope: !7796)
!7803 = !DILocation(line: 1648, column: 38, scope: !7796)
!7804 = !DILocation(line: 1648, column: 34, scope: !7796)
!7805 = !DILocation(line: 1648, column: 33, scope: !7796)
!7806 = !DILocation(line: 1648, column: 22, scope: !7796)
!7807 = !DILocation(line: 1648, column: 4, scope: !7796)
!7808 = !DILocation(line: 1648, column: 11, scope: !7796)
!7809 = !DILocation(line: 1649, column: 13, scope: !7796)
!7810 = !DILocation(line: 1649, column: 15, scope: !7796)
!7811 = !DILocation(line: 1649, column: 14, scope: !7796)
!7812 = !DILocation(line: 1649, column: 28, scope: !7796)
!7813 = !DILocation(line: 1649, column: 38, scope: !7796)
!7814 = !DILocation(line: 1649, column: 34, scope: !7796)
!7815 = !DILocation(line: 1649, column: 33, scope: !7796)
!7816 = !DILocation(line: 1649, column: 22, scope: !7796)
!7817 = !DILocation(line: 1649, column: 4, scope: !7796)
!7818 = !DILocation(line: 1649, column: 11, scope: !7796)
!7819 = !DILocation(line: 1650, column: 13, scope: !7796)
!7820 = !DILocation(line: 1650, column: 15, scope: !7796)
!7821 = !DILocation(line: 1650, column: 14, scope: !7796)
!7822 = !DILocation(line: 1650, column: 28, scope: !7796)
!7823 = !DILocation(line: 1650, column: 38, scope: !7796)
!7824 = !DILocation(line: 1650, column: 34, scope: !7796)
!7825 = !DILocation(line: 1650, column: 33, scope: !7796)
!7826 = !DILocation(line: 1650, column: 22, scope: !7796)
!7827 = !DILocation(line: 1650, column: 4, scope: !7796)
!7828 = !DILocation(line: 1650, column: 11, scope: !7796)
!7829 = !DILocation(line: 1652, column: 25, scope: !7796)
!7830 = !DILocation(line: 1652, column: 19, scope: !7796)
!7831 = !DILocation(line: 1652, column: 32, scope: !7796)
!7832 = !DILocation(line: 1652, column: 31, scope: !7796)
!7833 = !DILocation(line: 1652, column: 4, scope: !7796)
!7834 = !DILocation(line: 1652, column: 11, scope: !7796)
!7835 = !DILocation(line: 1653, column: 3, scope: !7796)
!7836 = !DILocation(line: 1655, column: 7, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 1655, column: 7)
!7838 = !DILocation(line: 1655, column: 12, scope: !7837)
!7839 = !DILocation(line: 1655, column: 15, scope: !7837)
!7840 = !DILocation(line: 1655, column: 18, scope: !7837)
!7841 = !DILocation(line: 1655, column: 24, scope: !7837)
!7842 = !DILocation(line: 1655, column: 7, scope: !7722)
!7843 = !DILocation(line: 1658, column: 15, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 1655, column: 31)
!7845 = !DILocation(line: 1658, column: 19, scope: !7844)
!7846 = !DILocation(line: 1658, column: 30, scope: !7844)
!7847 = !DILocation(line: 1658, column: 26, scope: !7844)
!7848 = !DILocation(line: 1658, column: 4, scope: !7844)
!7849 = !DILocation(line: 1659, column: 15, scope: !7844)
!7850 = !DILocation(line: 1659, column: 28, scope: !7844)
!7851 = !DILocation(line: 1659, column: 32, scope: !7844)
!7852 = !DILocation(line: 1659, column: 27, scope: !7844)
!7853 = !DILocation(line: 1659, column: 4, scope: !7844)
!7854 = !DILocation(line: 1659, column: 8, scope: !7844)
!7855 = !DILocation(line: 1659, column: 13, scope: !7844)
!7856 = !DILocation(line: 1660, column: 24, scope: !7844)
!7857 = !DILocation(line: 1660, column: 20, scope: !7844)
!7858 = !DILocation(line: 1660, column: 4, scope: !7844)
!7859 = !DILocation(line: 1660, column: 8, scope: !7844)
!7860 = !DILocation(line: 1660, column: 13, scope: !7844)
!7861 = !DILocation(line: 1660, column: 18, scope: !7844)
!7862 = !DILocation(line: 1661, column: 24, scope: !7844)
!7863 = !DILocation(line: 1661, column: 20, scope: !7844)
!7864 = !DILocation(line: 1661, column: 4, scope: !7844)
!7865 = !DILocation(line: 1661, column: 8, scope: !7844)
!7866 = !DILocation(line: 1661, column: 13, scope: !7844)
!7867 = !DILocation(line: 1661, column: 18, scope: !7844)
!7868 = !DILocation(line: 1663, column: 25, scope: !7844)
!7869 = !DILocation(line: 1663, column: 29, scope: !7844)
!7870 = !DILocation(line: 1663, column: 38, scope: !7844)
!7871 = !DILocation(line: 1663, column: 43, scope: !7844)
!7872 = !DILocation(line: 1663, column: 47, scope: !7844)
!7873 = !DILocation(line: 1663, column: 55, scope: !7844)
!7874 = !DILocation(line: 1663, column: 66, scope: !7844)
!7875 = !DILocation(line: 1663, column: 4, scope: !7844)
!7876 = !DILocation(line: 1664, column: 3, scope: !7844)
!7877 = !DILocation(line: 1667, column: 2, scope: !7722)
!7878 = !DILocation(line: 1668, column: 1, scope: !7699)
!7879 = distinct !DISubprogram(name: "copy_v4_v4", scope: !3654, file: !3654, line: 71, type: !4068, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!7880 = !DILocalVariable(name: "r", arg: 1, scope: !7879, file: !3654, line: 71, type: !6)
!7881 = !DILocation(line: 71, column: 31, scope: !7879)
!7882 = !DILocalVariable(name: "a", arg: 2, scope: !7879, file: !3654, line: 71, type: !3669)
!7883 = !DILocation(line: 71, column: 49, scope: !7879)
!7884 = !DILocation(line: 73, column: 9, scope: !7879)
!7885 = !DILocation(line: 73, column: 2, scope: !7879)
!7886 = !DILocation(line: 73, column: 7, scope: !7879)
!7887 = !DILocation(line: 74, column: 9, scope: !7879)
!7888 = !DILocation(line: 74, column: 2, scope: !7879)
!7889 = !DILocation(line: 74, column: 7, scope: !7879)
!7890 = !DILocation(line: 75, column: 9, scope: !7879)
!7891 = !DILocation(line: 75, column: 2, scope: !7879)
!7892 = !DILocation(line: 75, column: 7, scope: !7879)
!7893 = !DILocation(line: 76, column: 9, scope: !7879)
!7894 = !DILocation(line: 76, column: 2, scope: !7879)
!7895 = !DILocation(line: 76, column: 7, scope: !7879)
!7896 = !DILocation(line: 77, column: 1, scope: !7879)
!7897 = distinct !DISubprogram(name: "ray_shadow_jitter", scope: !3, file: !3, line: 2326, type: !7140, scopeLine: 2327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!7898 = !DILocalVariable(name: "shi", arg: 1, scope: !7897, file: !3, line: 2326, type: !3683)
!7899 = !DILocation(line: 2326, column: 43, scope: !7897)
!7900 = !DILocalVariable(name: "lar", arg: 2, scope: !7897, file: !3, line: 2326, type: !4319)
!7901 = !DILocation(line: 2326, column: 57, scope: !7897)
!7902 = !DILocalVariable(name: "lampco", arg: 3, scope: !7897, file: !3, line: 2326, type: !3669)
!7903 = !DILocation(line: 2326, column: 74, scope: !7897)
!7904 = !DILocalVariable(name: "shadfac", arg: 4, scope: !7897, file: !3, line: 2326, type: !6)
!7905 = !DILocation(line: 2326, column: 91, scope: !7897)
!7906 = !DILocalVariable(name: "isec", arg: 5, scope: !7897, file: !3, line: 2326, type: !3681)
!7907 = !DILocation(line: 2326, column: 110, scope: !7897)
!7908 = !DILocalVariable(name: "jitlamp", scope: !7897, file: !3, line: 2329, type: !3669)
!7909 = !DILocation(line: 2329, column: 15, scope: !7897)
!7910 = !DILocalVariable(name: "fac", scope: !7897, file: !3, line: 2330, type: !7)
!7911 = !DILocation(line: 2330, column: 8, scope: !7897)
!7912 = !DILocalVariable(name: "div", scope: !7897, file: !3, line: 2330, type: !7)
!7913 = !DILocation(line: 2330, column: 18, scope: !7897)
!7914 = !DILocalVariable(name: "vec", scope: !7897, file: !3, line: 2330, type: !206)
!7915 = !DILocation(line: 2330, column: 28, scope: !7897)
!7916 = !DILocalVariable(name: "a", scope: !7897, file: !3, line: 2331, type: !8)
!7917 = !DILocation(line: 2331, column: 6, scope: !7897)
!7918 = !DILocalVariable(name: "j", scope: !7897, file: !3, line: 2331, type: !8)
!7919 = !DILocation(line: 2331, column: 9, scope: !7897)
!7920 = !DILocalVariable(name: "mask", scope: !7897, file: !3, line: 2331, type: !8)
!7921 = !DILocation(line: 2331, column: 16, scope: !7897)
!7922 = !DILocalVariable(name: "point_hint", scope: !7897, file: !3, line: 2332, type: !2426)
!7923 = !DILocation(line: 2332, column: 10, scope: !7897)
!7924 = !DILocation(line: 2334, column: 6, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 2334, column: 6)
!7926 = !DILocation(line: 2334, column: 12, scope: !7925)
!7927 = !DILocation(line: 2334, column: 16, scope: !7925)
!7928 = !DILocation(line: 2334, column: 6, scope: !7897)
!7929 = !DILocation(line: 2335, column: 39, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 2334, column: 37)
!7931 = !DILocation(line: 2335, column: 49, scope: !7930)
!7932 = !DILocation(line: 2335, column: 27, scope: !7930)
!7933 = !DILocation(line: 2335, column: 37, scope: !7930)
!7934 = !DILocation(line: 2335, column: 15, scope: !7930)
!7935 = !DILocation(line: 2335, column: 25, scope: !7930)
!7936 = !DILocation(line: 2335, column: 3, scope: !7930)
!7937 = !DILocation(line: 2335, column: 13, scope: !7930)
!7938 = !DILocation(line: 2336, column: 2, scope: !7930)
!7939 = !DILocation(line: 2337, column: 7, scope: !7925)
!7940 = !DILocation(line: 2337, column: 17, scope: !7925)
!7941 = !DILocation(line: 2339, column: 5, scope: !7897)
!7942 = !DILocation(line: 2340, column: 29, scope: !7897)
!7943 = !DILocation(line: 2340, column: 34, scope: !7897)
!7944 = !DILocation(line: 2340, column: 39, scope: !7897)
!7945 = !DILocation(line: 2340, column: 47, scope: !7897)
!7946 = !DILocation(line: 2340, column: 52, scope: !7897)
!7947 = !DILocation(line: 2340, column: 56, scope: !7897)
!7948 = !DILocation(line: 2340, column: 61, scope: !7897)
!7949 = !DILocation(line: 2340, column: 11, scope: !7897)
!7950 = !DILocation(line: 2340, column: 9, scope: !7897)
!7951 = !DILocation(line: 2342, column: 5, scope: !7897)
!7952 = !DILocation(line: 2342, column: 10, scope: !7897)
!7953 = !DILocation(line: 2342, column: 3, scope: !7897)
!7954 = !DILocation(line: 2345, column: 8, scope: !7897)
!7955 = !DILocation(line: 2345, column: 13, scope: !7897)
!7956 = !DILocation(line: 2345, column: 6, scope: !7897)
!7957 = !DILocation(line: 2346, column: 6, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 2346, column: 6)
!7959 = !DILocation(line: 2346, column: 7, scope: !7958)
!7960 = !DILocation(line: 2346, column: 6, scope: !7897)
!7961 = !DILocation(line: 2346, column: 21, scope: !7958)
!7962 = !DILocation(line: 2346, column: 25, scope: !7958)
!7963 = !DILocation(line: 2346, column: 31, scope: !7958)
!7964 = !DILocation(line: 2346, column: 35, scope: !7958)
!7965 = !DILocation(line: 2346, column: 29, scope: !7958)
!7966 = !DILocation(line: 2346, column: 17, scope: !7958)
!7967 = !DILocation(line: 2346, column: 12, scope: !7958)
!7968 = !DILocation(line: 2347, column: 11, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7958, file: !3, line: 2347, column: 11)
!7970 = !DILocation(line: 2347, column: 12, scope: !7969)
!7971 = !DILocation(line: 2347, column: 11, scope: !7958)
!7972 = !DILocation(line: 2347, column: 26, scope: !7969)
!7973 = !DILocation(line: 2347, column: 30, scope: !7969)
!7974 = !DILocation(line: 2347, column: 22, scope: !7969)
!7975 = !DILocation(line: 2347, column: 17, scope: !7969)
!7976 = !DILocation(line: 2349, column: 13, scope: !7897)
!7977 = !DILocation(line: 2349, column: 19, scope: !7897)
!7978 = !DILocation(line: 2349, column: 26, scope: !7897)
!7979 = !DILocation(line: 2349, column: 31, scope: !7897)
!7980 = !DILocation(line: 2349, column: 2, scope: !7897)
!7981 = !DILocation(line: 2350, column: 31, scope: !7897)
!7982 = !DILocation(line: 2350, column: 36, scope: !7897)
!7983 = !DILocation(line: 2350, column: 41, scope: !7897)
!7984 = !DILocation(line: 2350, column: 2, scope: !7897)
!7985 = !DILocation(line: 2352, column: 20, scope: !7897)
!7986 = !DILocation(line: 2352, column: 25, scope: !7897)
!7987 = !DILocation(line: 2352, column: 2, scope: !7897)
!7988 = !DILocation(line: 2352, column: 8, scope: !7897)
!7989 = !DILocation(line: 2352, column: 13, scope: !7897)
!7990 = !DILocation(line: 2352, column: 18, scope: !7897)
!7991 = !DILocation(line: 2353, column: 20, scope: !7897)
!7992 = !DILocation(line: 2353, column: 25, scope: !7897)
!7993 = !DILocation(line: 2353, column: 2, scope: !7897)
!7994 = !DILocation(line: 2353, column: 8, scope: !7897)
!7995 = !DILocation(line: 2353, column: 13, scope: !7897)
!7996 = !DILocation(line: 2353, column: 18, scope: !7897)
!7997 = !DILocation(line: 2354, column: 25, scope: !7897)
!7998 = !DILocation(line: 2354, column: 47, scope: !7897)
!7999 = !DILocation(line: 2354, column: 53, scope: !7897)
!8000 = !DILocation(line: 2354, column: 60, scope: !7897)
!8001 = !DILocation(line: 2354, column: 66, scope: !7897)
!8002 = !DILocation(line: 2354, column: 2, scope: !7897)
!8003 = !DILocation(line: 2355, column: 2, scope: !7897)
!8004 = !DILocation(line: 2355, column: 8, scope: !7897)
!8005 = !DILocation(line: 2355, column: 13, scope: !7897)
!8006 = !DILocation(line: 2357, column: 2, scope: !7897)
!8007 = !DILocation(line: 2357, column: 10, scope: !7897)
!8008 = !DILocation(line: 2359, column: 11, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 2359, column: 7)
!8010 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 2357, column: 14)
!8011 = !DILocation(line: 2359, column: 16, scope: !8009)
!8012 = !DILocation(line: 2359, column: 7, scope: !8010)
!8013 = !DILocation(line: 2360, column: 5, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 2359, column: 25)
!8015 = !DILocation(line: 2361, column: 8, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 2361, column: 8)
!8017 = !DILocation(line: 2361, column: 13, scope: !8016)
!8018 = !DILocation(line: 2361, column: 11, scope: !8016)
!8019 = !DILocation(line: 2361, column: 9, scope: !8016)
!8020 = !DILocation(line: 2361, column: 8, scope: !8014)
!8021 = !DILocation(line: 2361, column: 19, scope: !8016)
!8022 = !DILocation(line: 2361, column: 18, scope: !8016)
!8023 = !DILocation(line: 2362, column: 10, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 2362, column: 8)
!8025 = !DILocation(line: 2362, column: 21, scope: !8024)
!8026 = !DILocation(line: 2362, column: 19, scope: !8024)
!8027 = !DILocation(line: 2362, column: 15, scope: !8024)
!8028 = !DILocation(line: 2362, column: 8, scope: !8014)
!8029 = !DILocation(line: 2363, column: 12, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 2362, column: 26)
!8031 = !DILocation(line: 2364, column: 5, scope: !8030)
!8032 = distinct !{!8032, !8006, !8033}
!8033 = !DILocation(line: 2398, column: 2, scope: !7897)
!8034 = !DILocation(line: 2366, column: 3, scope: !8014)
!8035 = !DILocation(line: 2368, column: 11, scope: !8010)
!8036 = !DILocation(line: 2368, column: 3, scope: !8010)
!8037 = !DILocation(line: 2368, column: 9, scope: !8010)
!8038 = !DILocation(line: 2369, column: 11, scope: !8010)
!8039 = !DILocation(line: 2369, column: 3, scope: !8010)
!8040 = !DILocation(line: 2369, column: 9, scope: !8010)
!8041 = !DILocation(line: 2370, column: 3, scope: !8010)
!8042 = !DILocation(line: 2370, column: 9, scope: !8010)
!8043 = !DILocation(line: 2371, column: 13, scope: !8010)
!8044 = !DILocation(line: 2371, column: 18, scope: !8010)
!8045 = !DILocation(line: 2371, column: 23, scope: !8010)
!8046 = !DILocation(line: 2371, column: 3, scope: !8010)
!8047 = !DILocation(line: 2374, column: 18, scope: !8010)
!8048 = !DILocation(line: 2374, column: 25, scope: !8010)
!8049 = !DILocation(line: 2374, column: 24, scope: !8010)
!8050 = !DILocation(line: 2374, column: 35, scope: !8010)
!8051 = !DILocation(line: 2374, column: 40, scope: !8010)
!8052 = !DILocation(line: 2374, column: 34, scope: !8010)
!8053 = !DILocation(line: 2374, column: 3, scope: !8010)
!8054 = !DILocation(line: 2374, column: 9, scope: !8010)
!8055 = !DILocation(line: 2374, column: 16, scope: !8010)
!8056 = !DILocation(line: 2375, column: 18, scope: !8010)
!8057 = !DILocation(line: 2375, column: 25, scope: !8010)
!8058 = !DILocation(line: 2375, column: 24, scope: !8010)
!8059 = !DILocation(line: 2375, column: 35, scope: !8010)
!8060 = !DILocation(line: 2375, column: 40, scope: !8010)
!8061 = !DILocation(line: 2375, column: 34, scope: !8010)
!8062 = !DILocation(line: 2375, column: 3, scope: !8010)
!8063 = !DILocation(line: 2375, column: 9, scope: !8010)
!8064 = !DILocation(line: 2375, column: 16, scope: !8010)
!8065 = !DILocation(line: 2376, column: 18, scope: !8010)
!8066 = !DILocation(line: 2376, column: 25, scope: !8010)
!8067 = !DILocation(line: 2376, column: 24, scope: !8010)
!8068 = !DILocation(line: 2376, column: 35, scope: !8010)
!8069 = !DILocation(line: 2376, column: 40, scope: !8010)
!8070 = !DILocation(line: 2376, column: 34, scope: !8010)
!8071 = !DILocation(line: 2376, column: 3, scope: !8010)
!8072 = !DILocation(line: 2376, column: 9, scope: !8010)
!8073 = !DILocation(line: 2376, column: 16, scope: !8010)
!8074 = !DILocation(line: 2378, column: 30, scope: !8010)
!8075 = !DILocation(line: 2378, column: 35, scope: !8010)
!8076 = !DILocation(line: 2378, column: 40, scope: !8010)
!8077 = !DILocation(line: 2378, column: 3, scope: !8010)
!8078 = !DILocation(line: 2380, column: 3, scope: !8010)
!8079 = !DILocation(line: 2380, column: 9, scope: !8010)
!8080 = !DILocation(line: 2380, column: 14, scope: !8010)
!8081 = !DILocation(line: 2381, column: 3, scope: !8010)
!8082 = !DILocation(line: 2381, column: 9, scope: !8010)
!8083 = !DILocation(line: 2381, column: 15, scope: !8010)
!8084 = !DILocation(line: 2382, column: 3, scope: !8010)
!8085 = !DILocation(line: 2382, column: 9, scope: !8010)
!8086 = !DILocation(line: 2382, column: 14, scope: !8010)
!8087 = !DILocation(line: 2384, column: 7, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 2384, column: 7)
!8089 = !DILocation(line: 2384, column: 13, scope: !8088)
!8090 = !DILocation(line: 2384, column: 17, scope: !8088)
!8091 = !DILocation(line: 2384, column: 7, scope: !8010)
!8092 = !DILocalVariable(name: "col", scope: !8093, file: !3, line: 2386, type: !381)
!8093 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 2384, column: 38)
!8094 = !DILocation(line: 2386, column: 10, scope: !8093)
!8095 = !DILocation(line: 2388, column: 25, scope: !8093)
!8096 = !DILocation(line: 2388, column: 31, scope: !8093)
!8097 = !DILocation(line: 2388, column: 57, scope: !8093)
!8098 = !DILocation(line: 2388, column: 4, scope: !8093)
!8099 = !DILocation(line: 2389, column: 18, scope: !8093)
!8100 = !DILocation(line: 2389, column: 4, scope: !8093)
!8101 = !DILocation(line: 2389, column: 15, scope: !8093)
!8102 = !DILocation(line: 2390, column: 18, scope: !8093)
!8103 = !DILocation(line: 2390, column: 4, scope: !8093)
!8104 = !DILocation(line: 2390, column: 15, scope: !8093)
!8105 = !DILocation(line: 2391, column: 18, scope: !8093)
!8106 = !DILocation(line: 2391, column: 4, scope: !8093)
!8107 = !DILocation(line: 2391, column: 15, scope: !8093)
!8108 = !DILocation(line: 2392, column: 18, scope: !8093)
!8109 = !DILocation(line: 2392, column: 4, scope: !8093)
!8110 = !DILocation(line: 2392, column: 15, scope: !8093)
!8111 = !DILocation(line: 2393, column: 3, scope: !8093)
!8112 = !DILocation(line: 2394, column: 36, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 2394, column: 13)
!8114 = !DILocation(line: 2394, column: 45, scope: !8113)
!8115 = !DILocation(line: 2394, column: 13, scope: !8113)
!8116 = !DILocation(line: 2394, column: 13, scope: !8088)
!8117 = !DILocation(line: 2394, column: 56, scope: !8113)
!8118 = !DILocation(line: 2394, column: 53, scope: !8113)
!8119 = !DILocation(line: 2396, column: 6, scope: !8010)
!8120 = !DILocation(line: 2397, column: 10, scope: !8010)
!8121 = !DILocation(line: 2400, column: 6, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 2400, column: 6)
!8123 = !DILocation(line: 2400, column: 12, scope: !8122)
!8124 = !DILocation(line: 2400, column: 16, scope: !8122)
!8125 = !DILocation(line: 2400, column: 6, scope: !7897)
!8126 = !DILocation(line: 2401, column: 17, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 2400, column: 37)
!8128 = !DILocation(line: 2401, column: 3, scope: !8127)
!8129 = !DILocation(line: 2401, column: 14, scope: !8127)
!8130 = !DILocation(line: 2402, column: 17, scope: !8127)
!8131 = !DILocation(line: 2402, column: 3, scope: !8127)
!8132 = !DILocation(line: 2402, column: 14, scope: !8127)
!8133 = !DILocation(line: 2403, column: 17, scope: !8127)
!8134 = !DILocation(line: 2403, column: 3, scope: !8127)
!8135 = !DILocation(line: 2403, column: 14, scope: !8127)
!8136 = !DILocation(line: 2404, column: 17, scope: !8127)
!8137 = !DILocation(line: 2404, column: 3, scope: !8127)
!8138 = !DILocation(line: 2404, column: 14, scope: !8127)
!8139 = !DILocation(line: 2405, column: 2, scope: !8127)
!8140 = !DILocation(line: 2408, column: 7, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 2408, column: 7)
!8142 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 2406, column: 7)
!8143 = !DILocation(line: 2408, column: 12, scope: !8141)
!8144 = !DILocation(line: 2408, column: 26, scope: !8141)
!8145 = !DILocation(line: 2408, column: 7, scope: !8142)
!8146 = !DILocation(line: 2409, column: 30, scope: !8141)
!8147 = !DILocation(line: 2409, column: 36, scope: !8141)
!8148 = !DILocation(line: 2409, column: 34, scope: !8141)
!8149 = !DILocation(line: 2409, column: 28, scope: !8141)
!8150 = !DILocation(line: 2409, column: 17, scope: !8141)
!8151 = !DILocation(line: 2409, column: 4, scope: !8141)
!8152 = !DILocation(line: 2409, column: 15, scope: !8141)
!8153 = !DILocation(line: 2411, column: 24, scope: !8141)
!8154 = !DILocation(line: 2411, column: 30, scope: !8141)
!8155 = !DILocation(line: 2411, column: 28, scope: !8141)
!8156 = !DILocation(line: 2411, column: 22, scope: !8141)
!8157 = !DILocation(line: 2411, column: 4, scope: !8141)
!8158 = !DILocation(line: 2411, column: 15, scope: !8141)
!8159 = !DILocation(line: 2413, column: 1, scope: !7897)
!8160 = distinct !DISubprogram(name: "RE_rayobject_config_control", scope: !3, file: !3, line: 88, type: !8161, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{null, !2395, !2526}
!8163 = !DILocalVariable(name: "r", arg: 1, scope: !8160, file: !3, line: 88, type: !2395)
!8164 = !DILocation(line: 88, column: 52, scope: !8160)
!8165 = !DILocalVariable(name: "re", arg: 2, scope: !8160, file: !3, line: 88, type: !2526)
!8166 = !DILocation(line: 88, column: 63, scope: !8160)
!8167 = !DILocation(line: 90, column: 6, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 90, column: 6)
!8169 = !DILocation(line: 90, column: 6, scope: !8160)
!8170 = !DILocation(line: 91, column: 7, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 90, column: 32)
!8172 = !DILocation(line: 91, column: 5, scope: !8171)
!8173 = !DILocation(line: 92, column: 21, scope: !8171)
!8174 = !DILocation(line: 92, column: 3, scope: !8171)
!8175 = !DILocation(line: 92, column: 6, scope: !8171)
!8176 = !DILocation(line: 92, column: 14, scope: !8171)
!8177 = !DILocation(line: 92, column: 19, scope: !8171)
!8178 = !DILocation(line: 93, column: 3, scope: !8171)
!8179 = !DILocation(line: 93, column: 6, scope: !8171)
!8180 = !DILocation(line: 93, column: 14, scope: !8171)
!8181 = !DILocation(line: 93, column: 25, scope: !8171)
!8182 = !DILocation(line: 94, column: 2, scope: !8171)
!8183 = !DILocation(line: 95, column: 1, scope: !8160)
!8184 = distinct !DISubprogram(name: "is_raytraceable", scope: !3, file: !3, line: 204, type: !8185, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8185 = !DISubroutineType(types: !8186)
!8186 = !{!8, !2526, !2522}
!8187 = !DILocalVariable(name: "re", arg: 1, scope: !8184, file: !3, line: 204, type: !2526)
!8188 = !DILocation(line: 204, column: 36, scope: !8184)
!8189 = !DILocalVariable(name: "obi", arg: 2, scope: !8184, file: !3, line: 204, type: !2522)
!8190 = !DILocation(line: 204, column: 59, scope: !8184)
!8191 = !DILocalVariable(name: "v", scope: !8184, file: !3, line: 206, type: !8)
!8192 = !DILocation(line: 206, column: 6, scope: !8184)
!8193 = !DILocalVariable(name: "obr", scope: !8184, file: !3, line: 207, type: !61)
!8194 = !DILocation(line: 207, column: 13, scope: !8184)
!8195 = !DILocation(line: 207, column: 19, scope: !8184)
!8196 = !DILocation(line: 207, column: 24, scope: !8184)
!8197 = !DILocation(line: 209, column: 6, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8184, file: !3, line: 209, column: 6)
!8199 = !DILocation(line: 209, column: 10, scope: !8198)
!8200 = !DILocation(line: 209, column: 20, scope: !8198)
!8201 = !DILocation(line: 209, column: 23, scope: !8198)
!8202 = !DILocation(line: 209, column: 28, scope: !8198)
!8203 = !DILocation(line: 209, column: 34, scope: !8198)
!8204 = !DILocation(line: 209, column: 38, scope: !8198)
!8205 = !DILocation(line: 209, column: 31, scope: !8198)
!8206 = !DILocation(line: 209, column: 6, scope: !8184)
!8207 = !DILocation(line: 210, column: 3, scope: !8198)
!8208 = !DILocation(line: 212, column: 8, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8184, file: !3, line: 212, column: 2)
!8210 = !DILocation(line: 212, column: 7, scope: !8209)
!8211 = !DILocation(line: 212, column: 11, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 212, column: 2)
!8213 = !DILocation(line: 212, column: 13, scope: !8212)
!8214 = !DILocation(line: 212, column: 18, scope: !8212)
!8215 = !DILocation(line: 212, column: 12, scope: !8212)
!8216 = !DILocation(line: 212, column: 2, scope: !8209)
!8217 = !DILocalVariable(name: "vlr", scope: !8218, file: !3, line: 213, type: !2524)
!8218 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 212, column: 31)
!8219 = !DILocation(line: 213, column: 12, scope: !8218)
!8220 = !DILocation(line: 213, column: 18, scope: !8218)
!8221 = !DILocation(line: 213, column: 23, scope: !8218)
!8222 = !DILocation(line: 213, column: 33, scope: !8218)
!8223 = !DILocation(line: 213, column: 34, scope: !8218)
!8224 = !DILocation(line: 213, column: 39, scope: !8218)
!8225 = !DILocation(line: 213, column: 47, scope: !8218)
!8226 = !DILocation(line: 213, column: 48, scope: !8218)
!8227 = !DILocation(line: 213, column: 44, scope: !8218)
!8228 = !DILocation(line: 215, column: 27, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 215, column: 7)
!8230 = !DILocation(line: 215, column: 31, scope: !8229)
!8231 = !DILocation(line: 215, column: 7, scope: !8229)
!8232 = !DILocation(line: 215, column: 7, scope: !8218)
!8233 = !DILocation(line: 216, column: 4, scope: !8229)
!8234 = !DILocation(line: 217, column: 2, scope: !8218)
!8235 = !DILocation(line: 212, column: 27, scope: !8212)
!8236 = !DILocation(line: 212, column: 2, scope: !8212)
!8237 = distinct !{!8237, !8216, !8238}
!8238 = !DILocation(line: 217, column: 2, scope: !8209)
!8239 = !DILocation(line: 219, column: 2, scope: !8184)
!8240 = !DILocation(line: 220, column: 1, scope: !8184)
!8241 = distinct !DISubprogram(name: "has_special_rayobject", scope: !3, file: !3, line: 291, type: !8242, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8242 = !DISubroutineType(types: !8243)
!8243 = !{!1103, !2526, !2522}
!8244 = !DILocalVariable(name: "re", arg: 1, scope: !8241, file: !3, line: 291, type: !2526)
!8245 = !DILocation(line: 291, column: 43, scope: !8241)
!8246 = !DILocalVariable(name: "obi", arg: 2, scope: !8241, file: !3, line: 291, type: !2522)
!8247 = !DILocation(line: 291, column: 66, scope: !8241)
!8248 = !DILocation(line: 293, column: 8, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 293, column: 7)
!8250 = !DILocation(line: 293, column: 13, scope: !8249)
!8251 = !DILocation(line: 293, column: 18, scope: !8249)
!8252 = !DILocation(line: 293, column: 35, scope: !8249)
!8253 = !DILocation(line: 293, column: 39, scope: !8249)
!8254 = !DILocation(line: 293, column: 43, scope: !8249)
!8255 = !DILocation(line: 293, column: 45, scope: !8249)
!8256 = !DILocation(line: 293, column: 62, scope: !8249)
!8257 = !DILocation(line: 293, column: 7, scope: !8241)
!8258 = !DILocalVariable(name: "obr", scope: !8259, file: !3, line: 294, type: !61)
!8259 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 293, column: 92)
!8260 = !DILocation(line: 294, column: 14, scope: !8259)
!8261 = !DILocation(line: 294, column: 20, scope: !8259)
!8262 = !DILocation(line: 294, column: 25, scope: !8259)
!8263 = !DILocalVariable(name: "v", scope: !8259, file: !3, line: 295, type: !8)
!8264 = !DILocation(line: 295, column: 7, scope: !8259)
!8265 = !DILocalVariable(name: "faces", scope: !8259, file: !3, line: 295, type: !8)
!8266 = !DILocation(line: 295, column: 10, scope: !8259)
!8267 = !DILocation(line: 297, column: 9, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 297, column: 3)
!8269 = !DILocation(line: 297, column: 8, scope: !8268)
!8270 = !DILocation(line: 297, column: 12, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 297, column: 3)
!8272 = !DILocation(line: 297, column: 14, scope: !8271)
!8273 = !DILocation(line: 297, column: 19, scope: !8271)
!8274 = !DILocation(line: 297, column: 13, scope: !8271)
!8275 = !DILocation(line: 297, column: 3, scope: !8268)
!8276 = !DILocalVariable(name: "vlr", scope: !8277, file: !3, line: 298, type: !2524)
!8277 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 297, column: 32)
!8278 = !DILocation(line: 298, column: 13, scope: !8277)
!8279 = !DILocation(line: 298, column: 19, scope: !8277)
!8280 = !DILocation(line: 298, column: 24, scope: !8277)
!8281 = !DILocation(line: 298, column: 34, scope: !8277)
!8282 = !DILocation(line: 298, column: 35, scope: !8277)
!8283 = !DILocation(line: 298, column: 40, scope: !8277)
!8284 = !DILocation(line: 298, column: 48, scope: !8277)
!8285 = !DILocation(line: 298, column: 49, scope: !8277)
!8286 = !DILocation(line: 298, column: 45, scope: !8277)
!8287 = !DILocation(line: 299, column: 28, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 299, column: 8)
!8289 = !DILocation(line: 299, column: 32, scope: !8288)
!8290 = !DILocation(line: 299, column: 8, scope: !8288)
!8291 = !DILocation(line: 299, column: 8, scope: !8277)
!8292 = !DILocation(line: 300, column: 10, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 299, column: 38)
!8294 = !DILocation(line: 301, column: 9, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 301, column: 9)
!8296 = !DILocation(line: 301, column: 15, scope: !8295)
!8297 = !DILocation(line: 301, column: 9, scope: !8293)
!8298 = !DILocation(line: 302, column: 6, scope: !8295)
!8299 = !DILocation(line: 303, column: 4, scope: !8293)
!8300 = !DILocation(line: 304, column: 3, scope: !8277)
!8301 = !DILocation(line: 297, column: 28, scope: !8271)
!8302 = !DILocation(line: 297, column: 3, scope: !8271)
!8303 = distinct !{!8303, !8275, !8304}
!8304 = !DILocation(line: 304, column: 3, scope: !8268)
!8305 = !DILocation(line: 305, column: 2, scope: !8259)
!8306 = !DILocation(line: 306, column: 2, scope: !8241)
!8307 = !DILocation(line: 307, column: 1, scope: !8241)
!8308 = distinct !DISubprogram(name: "dot_v3v3", scope: !3654, file: !3654, line: 619, type: !8309, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!7, !3669, !3669}
!8311 = !DILocalVariable(name: "a", arg: 1, scope: !8308, file: !3654, line: 619, type: !3669)
!8312 = !DILocation(line: 619, column: 36, scope: !8308)
!8313 = !DILocalVariable(name: "b", arg: 2, scope: !8308, file: !3654, line: 619, type: !3669)
!8314 = !DILocation(line: 619, column: 54, scope: !8308)
!8315 = !DILocation(line: 621, column: 9, scope: !8308)
!8316 = !DILocation(line: 621, column: 16, scope: !8308)
!8317 = !DILocation(line: 621, column: 14, scope: !8308)
!8318 = !DILocation(line: 621, column: 23, scope: !8308)
!8319 = !DILocation(line: 621, column: 30, scope: !8308)
!8320 = !DILocation(line: 621, column: 28, scope: !8308)
!8321 = !DILocation(line: 621, column: 21, scope: !8308)
!8322 = !DILocation(line: 621, column: 37, scope: !8308)
!8323 = !DILocation(line: 621, column: 44, scope: !8308)
!8324 = !DILocation(line: 621, column: 42, scope: !8308)
!8325 = !DILocation(line: 621, column: 35, scope: !8308)
!8326 = !DILocation(line: 621, column: 2, scope: !8308)
!8327 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !3654, file: !3654, line: 788, type: !8328, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8328 = !DISubroutineType(types: !8329)
!8329 = !{!7, !6, !3669}
!8330 = !DILocalVariable(name: "r", arg: 1, scope: !8327, file: !3654, line: 788, type: !6)
!8331 = !DILocation(line: 788, column: 37, scope: !8327)
!8332 = !DILocalVariable(name: "a", arg: 2, scope: !8327, file: !3654, line: 788, type: !3669)
!8333 = !DILocation(line: 788, column: 55, scope: !8327)
!8334 = !DILocalVariable(name: "d", scope: !8327, file: !3654, line: 790, type: !7)
!8335 = !DILocation(line: 790, column: 8, scope: !8327)
!8336 = !DILocation(line: 790, column: 21, scope: !8327)
!8337 = !DILocation(line: 790, column: 24, scope: !8327)
!8338 = !DILocation(line: 790, column: 12, scope: !8327)
!8339 = !DILocation(line: 794, column: 6, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8327, file: !3654, line: 794, column: 6)
!8341 = !DILocation(line: 794, column: 8, scope: !8340)
!8342 = !DILocation(line: 794, column: 6, scope: !8327)
!8343 = !DILocation(line: 795, column: 13, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8340, file: !3654, line: 794, column: 20)
!8345 = !DILocation(line: 795, column: 7, scope: !8344)
!8346 = !DILocation(line: 795, column: 5, scope: !8344)
!8347 = !DILocation(line: 796, column: 15, scope: !8344)
!8348 = !DILocation(line: 796, column: 18, scope: !8344)
!8349 = !DILocation(line: 796, column: 28, scope: !8344)
!8350 = !DILocation(line: 796, column: 26, scope: !8344)
!8351 = !DILocation(line: 796, column: 3, scope: !8344)
!8352 = !DILocation(line: 797, column: 2, scope: !8344)
!8353 = !DILocation(line: 799, column: 11, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8340, file: !3654, line: 798, column: 7)
!8355 = !DILocation(line: 799, column: 3, scope: !8354)
!8356 = !DILocation(line: 800, column: 5, scope: !8354)
!8357 = !DILocation(line: 803, column: 9, scope: !8327)
!8358 = !DILocation(line: 803, column: 2, scope: !8327)
!8359 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !3654, file: !3654, line: 399, type: !8360, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{null, !6, !3669, !7}
!8362 = !DILocalVariable(name: "r", arg: 1, scope: !8359, file: !3654, line: 399, type: !6)
!8363 = !DILocation(line: 399, column: 32, scope: !8359)
!8364 = !DILocalVariable(name: "a", arg: 2, scope: !8359, file: !3654, line: 399, type: !3669)
!8365 = !DILocation(line: 399, column: 50, scope: !8359)
!8366 = !DILocalVariable(name: "f", arg: 3, scope: !8359, file: !3654, line: 399, type: !7)
!8367 = !DILocation(line: 399, column: 62, scope: !8359)
!8368 = !DILocation(line: 401, column: 9, scope: !8359)
!8369 = !DILocation(line: 401, column: 16, scope: !8359)
!8370 = !DILocation(line: 401, column: 14, scope: !8359)
!8371 = !DILocation(line: 401, column: 2, scope: !8359)
!8372 = !DILocation(line: 401, column: 7, scope: !8359)
!8373 = !DILocation(line: 402, column: 9, scope: !8359)
!8374 = !DILocation(line: 402, column: 16, scope: !8359)
!8375 = !DILocation(line: 402, column: 14, scope: !8359)
!8376 = !DILocation(line: 402, column: 2, scope: !8359)
!8377 = !DILocation(line: 402, column: 7, scope: !8359)
!8378 = !DILocation(line: 403, column: 9, scope: !8359)
!8379 = !DILocation(line: 403, column: 16, scope: !8359)
!8380 = !DILocation(line: 403, column: 14, scope: !8359)
!8381 = !DILocation(line: 403, column: 2, scope: !8359)
!8382 = !DILocation(line: 403, column: 7, scope: !8359)
!8383 = !DILocation(line: 404, column: 1, scope: !8359)
!8384 = distinct !DISubprogram(name: "axis_dominant_v3", scope: !8385, file: !8385, line: 162, type: !8386, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8385 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_geom_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8386 = !DISubroutineType(types: !8387)
!8387 = !{null, !1189, !1189, !3669}
!8388 = !DILocalVariable(name: "r_axis_a", arg: 1, scope: !8384, file: !8385, line: 162, type: !1189)
!8389 = !DILocation(line: 162, column: 36, scope: !8384)
!8390 = !DILocalVariable(name: "r_axis_b", arg: 2, scope: !8384, file: !8385, line: 162, type: !1189)
!8391 = !DILocation(line: 162, column: 51, scope: !8384)
!8392 = !DILocalVariable(name: "axis", arg: 3, scope: !8384, file: !8385, line: 162, type: !3669)
!8393 = !DILocation(line: 162, column: 73, scope: !8384)
!8394 = !DILocalVariable(name: "xn", scope: !8384, file: !8385, line: 164, type: !3670)
!8395 = !DILocation(line: 164, column: 14, scope: !8384)
!8396 = !DILocation(line: 164, column: 25, scope: !8384)
!8397 = !DILocation(line: 164, column: 19, scope: !8384)
!8398 = !DILocalVariable(name: "yn", scope: !8384, file: !8385, line: 165, type: !3670)
!8399 = !DILocation(line: 165, column: 14, scope: !8384)
!8400 = !DILocation(line: 165, column: 25, scope: !8384)
!8401 = !DILocation(line: 165, column: 19, scope: !8384)
!8402 = !DILocalVariable(name: "zn", scope: !8384, file: !8385, line: 166, type: !3670)
!8403 = !DILocation(line: 166, column: 14, scope: !8384)
!8404 = !DILocation(line: 166, column: 25, scope: !8384)
!8405 = !DILocation(line: 166, column: 19, scope: !8384)
!8406 = !DILocation(line: 168, column: 11, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8384, file: !8385, line: 168, column: 11)
!8408 = !DILocation(line: 168, column: 17, scope: !8407)
!8409 = !DILocation(line: 168, column: 14, scope: !8407)
!8410 = !DILocation(line: 168, column: 20, scope: !8407)
!8411 = !DILocation(line: 168, column: 23, scope: !8407)
!8412 = !DILocation(line: 168, column: 29, scope: !8407)
!8413 = !DILocation(line: 168, column: 26, scope: !8407)
!8414 = !DILocation(line: 168, column: 11, scope: !8384)
!8415 = !DILocation(line: 168, column: 36, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8407, file: !8385, line: 168, column: 33)
!8417 = !DILocation(line: 168, column: 45, scope: !8416)
!8418 = !DILocation(line: 168, column: 51, scope: !8416)
!8419 = !DILocation(line: 168, column: 60, scope: !8416)
!8420 = !DILocation(line: 168, column: 65, scope: !8416)
!8421 = !DILocation(line: 169, column: 11, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8407, file: !8385, line: 169, column: 11)
!8423 = !DILocation(line: 169, column: 17, scope: !8422)
!8424 = !DILocation(line: 169, column: 14, scope: !8422)
!8425 = !DILocation(line: 169, column: 20, scope: !8422)
!8426 = !DILocation(line: 169, column: 23, scope: !8422)
!8427 = !DILocation(line: 169, column: 29, scope: !8422)
!8428 = !DILocation(line: 169, column: 26, scope: !8422)
!8429 = !DILocation(line: 169, column: 11, scope: !8407)
!8430 = !DILocation(line: 169, column: 36, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8422, file: !8385, line: 169, column: 33)
!8432 = !DILocation(line: 169, column: 45, scope: !8431)
!8433 = !DILocation(line: 169, column: 51, scope: !8431)
!8434 = !DILocation(line: 169, column: 60, scope: !8431)
!8435 = !DILocation(line: 169, column: 65, scope: !8431)
!8436 = !DILocation(line: 170, column: 36, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8422, file: !8385, line: 170, column: 33)
!8438 = !DILocation(line: 170, column: 45, scope: !8437)
!8439 = !DILocation(line: 170, column: 51, scope: !8437)
!8440 = !DILocation(line: 170, column: 60, scope: !8437)
!8441 = !DILocation(line: 171, column: 1, scope: !8384)
!8442 = distinct !DISubprogram(name: "get_thread_qmcsampler", scope: !3, file: !3, line: 1196, type: !8443, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8443 = !DISubroutineType(types: !8444)
!8444 = !{!4891, !2526, !8, !8, !8}
!8445 = !DILocalVariable(name: "re", arg: 1, scope: !8442, file: !3, line: 1196, type: !2526)
!8446 = !DILocation(line: 1196, column: 50, scope: !8442)
!8447 = !DILocalVariable(name: "thread", arg: 2, scope: !8442, file: !3, line: 1196, type: !8)
!8448 = !DILocation(line: 1196, column: 58, scope: !8442)
!8449 = !DILocalVariable(name: "type", arg: 3, scope: !8442, file: !3, line: 1196, type: !8)
!8450 = !DILocation(line: 1196, column: 70, scope: !8442)
!8451 = !DILocalVariable(name: "tot", arg: 4, scope: !8442, file: !3, line: 1196, type: !8)
!8452 = !DILocation(line: 1196, column: 80, scope: !8442)
!8453 = !DILocalVariable(name: "qsa", scope: !8442, file: !3, line: 1198, type: !4891)
!8454 = !DILocation(line: 1198, column: 14, scope: !8442)
!8455 = !DILocation(line: 1203, column: 11, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 1203, column: 2)
!8457 = !DILocation(line: 1203, column: 15, scope: !8456)
!8458 = !DILocation(line: 1203, column: 27, scope: !8456)
!8459 = !DILocation(line: 1203, column: 35, scope: !8456)
!8460 = !DILocation(line: 1203, column: 10, scope: !8456)
!8461 = !DILocation(line: 1203, column: 7, scope: !8456)
!8462 = !DILocation(line: 1203, column: 42, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 1203, column: 2)
!8464 = !DILocation(line: 1203, column: 2, scope: !8456)
!8465 = !DILocation(line: 1204, column: 7, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 1204, column: 7)
!8467 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 1203, column: 62)
!8468 = !DILocation(line: 1204, column: 12, scope: !8466)
!8469 = !DILocation(line: 1204, column: 20, scope: !8466)
!8470 = !DILocation(line: 1204, column: 17, scope: !8466)
!8471 = !DILocation(line: 1204, column: 25, scope: !8466)
!8472 = !DILocation(line: 1204, column: 28, scope: !8466)
!8473 = !DILocation(line: 1204, column: 33, scope: !8466)
!8474 = !DILocation(line: 1204, column: 40, scope: !8466)
!8475 = !DILocation(line: 1204, column: 37, scope: !8466)
!8476 = !DILocation(line: 1204, column: 44, scope: !8466)
!8477 = !DILocation(line: 1204, column: 48, scope: !8466)
!8478 = !DILocation(line: 1204, column: 53, scope: !8466)
!8479 = !DILocation(line: 1204, column: 7, scope: !8467)
!8480 = !DILocation(line: 1205, column: 4, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 1204, column: 59)
!8482 = !DILocation(line: 1205, column: 9, scope: !8481)
!8483 = !DILocation(line: 1205, column: 14, scope: !8481)
!8484 = !DILocation(line: 1206, column: 11, scope: !8481)
!8485 = !DILocation(line: 1206, column: 4, scope: !8481)
!8486 = !DILocation(line: 1208, column: 2, scope: !8467)
!8487 = !DILocation(line: 1203, column: 51, scope: !8463)
!8488 = !DILocation(line: 1203, column: 56, scope: !8463)
!8489 = !DILocation(line: 1203, column: 50, scope: !8463)
!8490 = !DILocation(line: 1203, column: 2, scope: !8463)
!8491 = distinct !{!8491, !8464, !8492}
!8492 = !DILocation(line: 1208, column: 2, scope: !8456)
!8493 = !DILocation(line: 1210, column: 23, scope: !8442)
!8494 = !DILocation(line: 1210, column: 29, scope: !8442)
!8495 = !DILocation(line: 1210, column: 7, scope: !8442)
!8496 = !DILocation(line: 1210, column: 5, scope: !8442)
!8497 = !DILocation(line: 1211, column: 2, scope: !8442)
!8498 = !DILocation(line: 1211, column: 7, scope: !8442)
!8499 = !DILocation(line: 1211, column: 12, scope: !8442)
!8500 = !DILocation(line: 1212, column: 15, scope: !8442)
!8501 = !DILocation(line: 1212, column: 19, scope: !8442)
!8502 = !DILocation(line: 1212, column: 31, scope: !8442)
!8503 = !DILocation(line: 1212, column: 40, scope: !8442)
!8504 = !DILocation(line: 1212, column: 2, scope: !8442)
!8505 = !DILocation(line: 1214, column: 9, scope: !8442)
!8506 = !DILocation(line: 1214, column: 2, scope: !8442)
!8507 = !DILocation(line: 1215, column: 1, scope: !8442)
!8508 = distinct !DISubprogram(name: "QMC_initPixel", scope: !3, file: !3, line: 1062, type: !8509, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8509 = !DISubroutineType(types: !8510)
!8510 = !{null, !4891, !8}
!8511 = !DILocalVariable(name: "qsa", arg: 1, scope: !8508, file: !3, line: 1062, type: !4891)
!8512 = !DILocation(line: 1062, column: 39, scope: !8508)
!8513 = !DILocalVariable(name: "thread", arg: 2, scope: !8508, file: !3, line: 1062, type: !8)
!8514 = !DILocation(line: 1062, column: 48, scope: !8508)
!8515 = !DILocation(line: 1064, column: 6, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 1064, column: 6)
!8517 = !DILocation(line: 1064, column: 11, scope: !8516)
!8518 = !DILocation(line: 1064, column: 15, scope: !8516)
!8519 = !DILocation(line: 1064, column: 6, scope: !8508)
!8520 = !DILocation(line: 1067, column: 50, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 1064, column: 39)
!8522 = !DILocation(line: 1067, column: 33, scope: !8521)
!8523 = !DILocation(line: 1067, column: 31, scope: !8521)
!8524 = !DILocation(line: 1067, column: 26, scope: !8521)
!8525 = !DILocation(line: 1067, column: 3, scope: !8521)
!8526 = !DILocation(line: 1067, column: 8, scope: !8521)
!8527 = !DILocation(line: 1067, column: 13, scope: !8521)
!8528 = !DILocation(line: 1067, column: 24, scope: !8521)
!8529 = !DILocation(line: 1068, column: 50, scope: !8521)
!8530 = !DILocation(line: 1068, column: 33, scope: !8521)
!8531 = !DILocation(line: 1068, column: 31, scope: !8521)
!8532 = !DILocation(line: 1068, column: 26, scope: !8521)
!8533 = !DILocation(line: 1068, column: 3, scope: !8521)
!8534 = !DILocation(line: 1068, column: 8, scope: !8521)
!8535 = !DILocation(line: 1068, column: 13, scope: !8521)
!8536 = !DILocation(line: 1068, column: 24, scope: !8521)
!8537 = !DILocation(line: 1069, column: 2, scope: !8521)
!8538 = !DILocalVariable(name: "ht_invprimes", scope: !8539, file: !3, line: 1075, type: !8540)
!8539 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 1070, column: 7)
!8540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2745, size: 128, elements: !580)
!8541 = !DILocation(line: 1075, column: 10, scope: !8539)
!8542 = !DILocalVariable(name: "ht_nums", scope: !8539, file: !3, line: 1075, type: !8540)
!8543 = !DILocation(line: 1075, column: 27, scope: !8539)
!8544 = !DILocalVariable(name: "r", scope: !8539, file: !3, line: 1076, type: !8540)
!8545 = !DILocation(line: 1076, column: 10, scope: !8539)
!8546 = !DILocalVariable(name: "i", scope: !8539, file: !3, line: 1077, type: !8)
!8547 = !DILocation(line: 1077, column: 7, scope: !8539)
!8548 = !DILocation(line: 1079, column: 33, scope: !8539)
!8549 = !DILocation(line: 1079, column: 16, scope: !8539)
!8550 = !DILocation(line: 1079, column: 3, scope: !8539)
!8551 = !DILocation(line: 1079, column: 14, scope: !8539)
!8552 = !DILocation(line: 1080, column: 33, scope: !8539)
!8553 = !DILocation(line: 1080, column: 16, scope: !8539)
!8554 = !DILocation(line: 1080, column: 3, scope: !8539)
!8555 = !DILocation(line: 1080, column: 14, scope: !8539)
!8556 = !DILocation(line: 1081, column: 3, scope: !8539)
!8557 = !DILocation(line: 1081, column: 19, scope: !8539)
!8558 = !DILocation(line: 1082, column: 3, scope: !8539)
!8559 = !DILocation(line: 1082, column: 19, scope: !8539)
!8560 = !DILocation(line: 1084, column: 9, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 1084, column: 3)
!8562 = !DILocation(line: 1084, column: 8, scope: !8561)
!8563 = !DILocation(line: 1084, column: 13, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 1084, column: 3)
!8565 = !DILocation(line: 1084, column: 16, scope: !8564)
!8566 = !DILocation(line: 1084, column: 21, scope: !8564)
!8567 = !DILocation(line: 1084, column: 14, scope: !8564)
!8568 = !DILocation(line: 1084, column: 3, scope: !8561)
!8569 = !DILocation(line: 1085, column: 18, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 1084, column: 31)
!8571 = !DILocation(line: 1085, column: 32, scope: !8570)
!8572 = !DILocation(line: 1085, column: 41, scope: !8570)
!8573 = !DILocation(line: 1085, column: 4, scope: !8570)
!8574 = !DILocation(line: 1086, column: 25, scope: !8570)
!8575 = !DILocation(line: 1086, column: 4, scope: !8570)
!8576 = !DILocation(line: 1086, column: 9, scope: !8570)
!8577 = !DILocation(line: 1086, column: 18, scope: !8570)
!8578 = !DILocation(line: 1086, column: 17, scope: !8570)
!8579 = !DILocation(line: 1086, column: 19, scope: !8570)
!8580 = !DILocation(line: 1086, column: 23, scope: !8570)
!8581 = !DILocation(line: 1087, column: 25, scope: !8570)
!8582 = !DILocation(line: 1087, column: 4, scope: !8570)
!8583 = !DILocation(line: 1087, column: 9, scope: !8570)
!8584 = !DILocation(line: 1087, column: 18, scope: !8570)
!8585 = !DILocation(line: 1087, column: 17, scope: !8570)
!8586 = !DILocation(line: 1087, column: 19, scope: !8570)
!8587 = !DILocation(line: 1087, column: 23, scope: !8570)
!8588 = !DILocation(line: 1088, column: 3, scope: !8570)
!8589 = !DILocation(line: 1084, column: 27, scope: !8564)
!8590 = !DILocation(line: 1084, column: 3, scope: !8564)
!8591 = distinct !{!8591, !8568, !8592}
!8592 = !DILocation(line: 1088, column: 3, scope: !8561)
!8593 = !DILocation(line: 1090, column: 1, scope: !8508)
!8594 = distinct !DISubprogram(name: "refraction", scope: !3, file: !3, line: 567, type: !8595, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8595 = !DISubroutineType(types: !8596)
!8596 = !{!8, !6, !3669, !3669, !7}
!8597 = !DILocalVariable(name: "refract", arg: 1, scope: !8594, file: !3, line: 567, type: !6)
!8598 = !DILocation(line: 567, column: 29, scope: !8594)
!8599 = !DILocalVariable(name: "n", arg: 2, scope: !8594, file: !3, line: 567, type: !3669)
!8600 = !DILocation(line: 567, column: 53, scope: !8594)
!8601 = !DILocalVariable(name: "view", arg: 3, scope: !8594, file: !3, line: 567, type: !3669)
!8602 = !DILocation(line: 567, column: 71, scope: !8594)
!8603 = !DILocalVariable(name: "index", arg: 4, scope: !8594, file: !3, line: 567, type: !7)
!8604 = !DILocation(line: 567, column: 86, scope: !8594)
!8605 = !DILocalVariable(name: "dot", scope: !8594, file: !3, line: 569, type: !7)
!8606 = !DILocation(line: 569, column: 8, scope: !8594)
!8607 = !DILocalVariable(name: "fac", scope: !8594, file: !3, line: 569, type: !7)
!8608 = !DILocation(line: 569, column: 13, scope: !8594)
!8609 = !DILocation(line: 571, column: 13, scope: !8594)
!8610 = !DILocation(line: 571, column: 22, scope: !8594)
!8611 = !DILocation(line: 571, column: 2, scope: !8594)
!8612 = !DILocation(line: 573, column: 17, scope: !8594)
!8613 = !DILocation(line: 573, column: 23, scope: !8594)
!8614 = !DILocation(line: 573, column: 8, scope: !8594)
!8615 = !DILocation(line: 573, column: 6, scope: !8594)
!8616 = !DILocation(line: 575, column: 6, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 575, column: 6)
!8618 = !DILocation(line: 575, column: 9, scope: !8617)
!8619 = !DILocation(line: 575, column: 6, scope: !8594)
!8620 = !DILocation(line: 576, column: 16, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 575, column: 16)
!8622 = !DILocation(line: 576, column: 15, scope: !8621)
!8623 = !DILocation(line: 576, column: 9, scope: !8621)
!8624 = !DILocation(line: 577, column: 23, scope: !8621)
!8625 = !DILocation(line: 577, column: 27, scope: !8621)
!8626 = !DILocation(line: 577, column: 26, scope: !8621)
!8627 = !DILocation(line: 577, column: 21, scope: !8621)
!8628 = !DILocation(line: 577, column: 32, scope: !8621)
!8629 = !DILocation(line: 577, column: 31, scope: !8621)
!8630 = !DILocation(line: 577, column: 38, scope: !8621)
!8631 = !DILocation(line: 577, column: 37, scope: !8621)
!8632 = !DILocation(line: 577, column: 13, scope: !8621)
!8633 = !DILocation(line: 577, column: 6, scope: !8621)
!8634 = !DILocation(line: 578, column: 7, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 578, column: 7)
!8636 = !DILocation(line: 578, column: 11, scope: !8635)
!8637 = !DILocation(line: 578, column: 7, scope: !8621)
!8638 = !DILocation(line: 578, column: 20, scope: !8635)
!8639 = !DILocation(line: 579, column: 9, scope: !8621)
!8640 = !DILocation(line: 579, column: 8, scope: !8621)
!8641 = !DILocation(line: 579, column: 13, scope: !8621)
!8642 = !DILocation(line: 579, column: 12, scope: !8621)
!8643 = !DILocation(line: 579, column: 27, scope: !8621)
!8644 = !DILocation(line: 579, column: 21, scope: !8621)
!8645 = !DILocation(line: 579, column: 19, scope: !8621)
!8646 = !DILocation(line: 579, column: 6, scope: !8621)
!8647 = !DILocation(line: 580, column: 2, scope: !8621)
!8648 = !DILocation(line: 582, column: 23, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 581, column: 7)
!8650 = !DILocation(line: 582, column: 27, scope: !8649)
!8651 = !DILocation(line: 582, column: 26, scope: !8649)
!8652 = !DILocation(line: 582, column: 21, scope: !8649)
!8653 = !DILocation(line: 582, column: 32, scope: !8649)
!8654 = !DILocation(line: 582, column: 31, scope: !8649)
!8655 = !DILocation(line: 582, column: 38, scope: !8649)
!8656 = !DILocation(line: 582, column: 37, scope: !8649)
!8657 = !DILocation(line: 582, column: 13, scope: !8649)
!8658 = !DILocation(line: 582, column: 6, scope: !8649)
!8659 = !DILocation(line: 583, column: 7, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 583, column: 7)
!8661 = !DILocation(line: 583, column: 11, scope: !8660)
!8662 = !DILocation(line: 583, column: 7, scope: !8649)
!8663 = !DILocation(line: 583, column: 20, scope: !8660)
!8664 = !DILocation(line: 584, column: 9, scope: !8649)
!8665 = !DILocation(line: 584, column: 8, scope: !8649)
!8666 = !DILocation(line: 584, column: 13, scope: !8649)
!8667 = !DILocation(line: 584, column: 12, scope: !8649)
!8668 = !DILocation(line: 584, column: 27, scope: !8649)
!8669 = !DILocation(line: 584, column: 21, scope: !8649)
!8670 = !DILocation(line: 584, column: 19, scope: !8649)
!8671 = !DILocation(line: 584, column: 6, scope: !8649)
!8672 = !DILocation(line: 587, column: 14, scope: !8594)
!8673 = !DILocation(line: 587, column: 20, scope: !8594)
!8674 = !DILocation(line: 587, column: 19, scope: !8594)
!8675 = !DILocation(line: 587, column: 30, scope: !8594)
!8676 = !DILocation(line: 587, column: 34, scope: !8594)
!8677 = !DILocation(line: 587, column: 33, scope: !8594)
!8678 = !DILocation(line: 587, column: 28, scope: !8594)
!8679 = !DILocation(line: 587, column: 2, scope: !8594)
!8680 = !DILocation(line: 587, column: 12, scope: !8594)
!8681 = !DILocation(line: 588, column: 14, scope: !8594)
!8682 = !DILocation(line: 588, column: 20, scope: !8594)
!8683 = !DILocation(line: 588, column: 19, scope: !8594)
!8684 = !DILocation(line: 588, column: 30, scope: !8594)
!8685 = !DILocation(line: 588, column: 34, scope: !8594)
!8686 = !DILocation(line: 588, column: 33, scope: !8594)
!8687 = !DILocation(line: 588, column: 28, scope: !8594)
!8688 = !DILocation(line: 588, column: 2, scope: !8594)
!8689 = !DILocation(line: 588, column: 12, scope: !8594)
!8690 = !DILocation(line: 589, column: 14, scope: !8594)
!8691 = !DILocation(line: 589, column: 20, scope: !8594)
!8692 = !DILocation(line: 589, column: 19, scope: !8594)
!8693 = !DILocation(line: 589, column: 30, scope: !8594)
!8694 = !DILocation(line: 589, column: 34, scope: !8594)
!8695 = !DILocation(line: 589, column: 33, scope: !8594)
!8696 = !DILocation(line: 589, column: 28, scope: !8594)
!8697 = !DILocation(line: 589, column: 2, scope: !8594)
!8698 = !DILocation(line: 589, column: 12, scope: !8594)
!8699 = !DILocation(line: 591, column: 2, scope: !8594)
!8700 = !DILocation(line: 592, column: 1, scope: !8594)
!8701 = distinct !DISubprogram(name: "reflection", scope: !3, file: !3, line: 601, type: !8702, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8702 = !DISubroutineType(types: !8703)
!8703 = !{null, !6, !6, !3669, !3669}
!8704 = !DILocalVariable(name: "ref", arg: 1, scope: !8701, file: !3, line: 601, type: !6)
!8705 = !DILocation(line: 601, column: 30, scope: !8701)
!8706 = !DILocalVariable(name: "n", arg: 2, scope: !8701, file: !3, line: 601, type: !6)
!8707 = !DILocation(line: 601, column: 44, scope: !8701)
!8708 = !DILocalVariable(name: "view", arg: 3, scope: !8701, file: !3, line: 601, type: !3669)
!8709 = !DILocation(line: 601, column: 62, scope: !8701)
!8710 = !DILocalVariable(name: "orn", arg: 4, scope: !8701, file: !3, line: 601, type: !3669)
!8711 = !DILocation(line: 601, column: 83, scope: !8701)
!8712 = !DILocalVariable(name: "f1", scope: !8701, file: !3, line: 603, type: !7)
!8713 = !DILocation(line: 603, column: 8, scope: !8701)
!8714 = !DILocation(line: 605, column: 20, scope: !8701)
!8715 = !DILocation(line: 605, column: 25, scope: !8701)
!8716 = !DILocation(line: 605, column: 28, scope: !8701)
!8717 = !DILocation(line: 605, column: 2, scope: !8701)
!8718 = !DILocation(line: 608, column: 15, scope: !8701)
!8719 = !DILocation(line: 608, column: 20, scope: !8701)
!8720 = !DILocation(line: 608, column: 6, scope: !8701)
!8721 = !DILocation(line: 608, column: 4, scope: !8701)
!8722 = !DILocation(line: 609, column: 6, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 609, column: 6)
!8724 = !DILocation(line: 609, column: 8, scope: !8723)
!8725 = !DILocation(line: 609, column: 6, scope: !8701)
!8726 = !DILocation(line: 610, column: 5, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 609, column: 15)
!8728 = !DILocation(line: 611, column: 12, scope: !8727)
!8729 = !DILocation(line: 611, column: 15, scope: !8727)
!8730 = !DILocation(line: 611, column: 14, scope: !8727)
!8731 = !DILocation(line: 611, column: 3, scope: !8727)
!8732 = !DILocation(line: 611, column: 9, scope: !8727)
!8733 = !DILocation(line: 612, column: 12, scope: !8727)
!8734 = !DILocation(line: 612, column: 15, scope: !8727)
!8735 = !DILocation(line: 612, column: 14, scope: !8727)
!8736 = !DILocation(line: 612, column: 3, scope: !8727)
!8737 = !DILocation(line: 612, column: 9, scope: !8727)
!8738 = !DILocation(line: 613, column: 12, scope: !8727)
!8739 = !DILocation(line: 613, column: 15, scope: !8727)
!8740 = !DILocation(line: 613, column: 14, scope: !8727)
!8741 = !DILocation(line: 613, column: 3, scope: !8727)
!8742 = !DILocation(line: 613, column: 9, scope: !8727)
!8743 = !DILocation(line: 614, column: 2, scope: !8727)
!8744 = !DILocation(line: 615, column: 1, scope: !8701)
!8745 = distinct !DISubprogram(name: "reflection_simple", scope: !3, file: !3, line: 594, type: !8746, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8746 = !DISubroutineType(types: !8747)
!8747 = !{null, !6, !6, !3669}
!8748 = !DILocalVariable(name: "ref", arg: 1, scope: !8745, file: !3, line: 594, type: !6)
!8749 = !DILocation(line: 594, column: 37, scope: !8745)
!8750 = !DILocalVariable(name: "n", arg: 2, scope: !8745, file: !3, line: 594, type: !6)
!8751 = !DILocation(line: 594, column: 51, scope: !8745)
!8752 = !DILocalVariable(name: "view", arg: 3, scope: !8745, file: !3, line: 594, type: !3669)
!8753 = !DILocation(line: 594, column: 69, scope: !8745)
!8754 = !DILocalVariable(name: "f1", scope: !8745, file: !3, line: 596, type: !3670)
!8755 = !DILocation(line: 596, column: 14, scope: !8745)
!8756 = !DILocation(line: 596, column: 35, scope: !8745)
!8757 = !DILocation(line: 596, column: 38, scope: !8745)
!8758 = !DILocation(line: 596, column: 26, scope: !8745)
!8759 = !DILocation(line: 596, column: 24, scope: !8745)
!8760 = !DILocation(line: 597, column: 17, scope: !8745)
!8761 = !DILocation(line: 597, column: 22, scope: !8745)
!8762 = !DILocation(line: 597, column: 28, scope: !8745)
!8763 = !DILocation(line: 597, column: 31, scope: !8745)
!8764 = !DILocation(line: 597, column: 2, scope: !8745)
!8765 = !DILocation(line: 598, column: 1, scope: !8745)
!8766 = distinct !DISubprogram(name: "QMC_samplePhong", scope: !3, file: !3, line: 1111, type: !8767, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8767 = !DISubroutineType(types: !8768)
!8768 = !{null, !6, !4891, !8, !8, !7}
!8769 = !DILocalVariable(name: "vec", arg: 1, scope: !8766, file: !3, line: 1111, type: !6)
!8770 = !DILocation(line: 1111, column: 35, scope: !8766)
!8771 = !DILocalVariable(name: "qsa", arg: 2, scope: !8766, file: !3, line: 1111, type: !4891)
!8772 = !DILocation(line: 1111, column: 55, scope: !8766)
!8773 = !DILocalVariable(name: "thread", arg: 3, scope: !8766, file: !3, line: 1111, type: !8)
!8774 = !DILocation(line: 1111, column: 64, scope: !8766)
!8775 = !DILocalVariable(name: "num", arg: 4, scope: !8766, file: !3, line: 1111, type: !8)
!8776 = !DILocation(line: 1111, column: 76, scope: !8766)
!8777 = !DILocalVariable(name: "blur", arg: 5, scope: !8766, file: !3, line: 1111, type: !7)
!8778 = !DILocation(line: 1111, column: 87, scope: !8766)
!8779 = !DILocalVariable(name: "s", scope: !8766, file: !3, line: 1113, type: !8540)
!8780 = !DILocation(line: 1113, column: 9, scope: !8766)
!8781 = !DILocalVariable(name: "phi", scope: !8766, file: !3, line: 1114, type: !7)
!8782 = !DILocation(line: 1114, column: 8, scope: !8766)
!8783 = !DILocalVariable(name: "pz", scope: !8766, file: !3, line: 1114, type: !7)
!8784 = !DILocation(line: 1114, column: 13, scope: !8766)
!8785 = !DILocalVariable(name: "sqr", scope: !8766, file: !3, line: 1114, type: !7)
!8786 = !DILocation(line: 1114, column: 17, scope: !8766)
!8787 = !DILocation(line: 1116, column: 16, scope: !8766)
!8788 = !DILocation(line: 1116, column: 19, scope: !8766)
!8789 = !DILocation(line: 1116, column: 24, scope: !8766)
!8790 = !DILocation(line: 1116, column: 32, scope: !8766)
!8791 = !DILocation(line: 1116, column: 2, scope: !8766)
!8792 = !DILocation(line: 1118, column: 8, scope: !8766)
!8793 = !DILocation(line: 1118, column: 12, scope: !8766)
!8794 = !DILocation(line: 1118, column: 14, scope: !8766)
!8795 = !DILocation(line: 1118, column: 6, scope: !8766)
!8796 = !DILocation(line: 1119, column: 11, scope: !8766)
!8797 = !DILocation(line: 1119, column: 17, scope: !8766)
!8798 = !DILocation(line: 1119, column: 7, scope: !8766)
!8799 = !DILocation(line: 1119, column: 5, scope: !8766)
!8800 = !DILocation(line: 1120, column: 21, scope: !8766)
!8801 = !DILocation(line: 1120, column: 26, scope: !8766)
!8802 = !DILocation(line: 1120, column: 24, scope: !8766)
!8803 = !DILocation(line: 1120, column: 19, scope: !8766)
!8804 = !DILocation(line: 1120, column: 8, scope: !8766)
!8805 = !DILocation(line: 1120, column: 6, scope: !8766)
!8806 = !DILocation(line: 1122, column: 24, scope: !8766)
!8807 = !DILocation(line: 1122, column: 19, scope: !8766)
!8808 = !DILocation(line: 1122, column: 29, scope: !8766)
!8809 = !DILocation(line: 1122, column: 28, scope: !8766)
!8810 = !DILocation(line: 1122, column: 2, scope: !8766)
!8811 = !DILocation(line: 1122, column: 9, scope: !8766)
!8812 = !DILocation(line: 1123, column: 24, scope: !8766)
!8813 = !DILocation(line: 1123, column: 19, scope: !8766)
!8814 = !DILocation(line: 1123, column: 29, scope: !8766)
!8815 = !DILocation(line: 1123, column: 28, scope: !8766)
!8816 = !DILocation(line: 1123, column: 2, scope: !8766)
!8817 = !DILocation(line: 1123, column: 9, scope: !8766)
!8818 = !DILocation(line: 1124, column: 2, scope: !8766)
!8819 = !DILocation(line: 1124, column: 9, scope: !8766)
!8820 = !DILocation(line: 1125, column: 1, scope: !8766)
!8821 = distinct !DISubprogram(name: "mul_v3_fl", scope: !3654, file: !3654, line: 392, type: !8822, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8822 = !DISubroutineType(types: !8823)
!8823 = !{null, !6, !7}
!8824 = !DILocalVariable(name: "r", arg: 1, scope: !8821, file: !3654, line: 392, type: !6)
!8825 = !DILocation(line: 392, column: 30, scope: !8821)
!8826 = !DILocalVariable(name: "f", arg: 2, scope: !8821, file: !3654, line: 392, type: !7)
!8827 = !DILocation(line: 392, column: 42, scope: !8821)
!8828 = !DILocation(line: 394, column: 10, scope: !8821)
!8829 = !DILocation(line: 394, column: 2, scope: !8821)
!8830 = !DILocation(line: 394, column: 7, scope: !8821)
!8831 = !DILocation(line: 395, column: 10, scope: !8821)
!8832 = !DILocation(line: 395, column: 2, scope: !8821)
!8833 = !DILocation(line: 395, column: 7, scope: !8821)
!8834 = !DILocation(line: 396, column: 10, scope: !8821)
!8835 = !DILocation(line: 396, column: 2, scope: !8821)
!8836 = !DILocation(line: 396, column: 7, scope: !8821)
!8837 = !DILocation(line: 397, column: 1, scope: !8821)
!8838 = distinct !DISubprogram(name: "add_v3_v3", scope: !3654, file: !3654, line: 302, type: !4068, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8839 = !DILocalVariable(name: "r", arg: 1, scope: !8838, file: !3654, line: 302, type: !6)
!8840 = !DILocation(line: 302, column: 30, scope: !8838)
!8841 = !DILocalVariable(name: "a", arg: 2, scope: !8838, file: !3654, line: 302, type: !3669)
!8842 = !DILocation(line: 302, column: 48, scope: !8838)
!8843 = !DILocation(line: 304, column: 10, scope: !8838)
!8844 = !DILocation(line: 304, column: 2, scope: !8838)
!8845 = !DILocation(line: 304, column: 7, scope: !8838)
!8846 = !DILocation(line: 305, column: 10, scope: !8838)
!8847 = !DILocation(line: 305, column: 2, scope: !8838)
!8848 = !DILocation(line: 305, column: 7, scope: !8838)
!8849 = !DILocation(line: 306, column: 10, scope: !8838)
!8850 = !DILocation(line: 306, column: 2, scope: !8838)
!8851 = !DILocation(line: 306, column: 7, scope: !8838)
!8852 = !DILocation(line: 307, column: 1, scope: !8838)
!8853 = distinct !DISubprogram(name: "traceray", scope: !3, file: !3, line: 699, type: !8854, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!8854 = !DISubroutineType(types: !8855)
!8855 = !{null, !3683, !3824, !107, !3669, !3669, !6, !2522, !2524, !8}
!8856 = !DILocalVariable(name: "origshi", arg: 1, scope: !8853, file: !3, line: 699, type: !3683)
!8857 = !DILocation(line: 699, column: 34, scope: !8853)
!8858 = !DILocalVariable(name: "origshr", arg: 2, scope: !8853, file: !3, line: 699, type: !3824)
!8859 = !DILocation(line: 699, column: 56, scope: !8853)
!8860 = !DILocalVariable(name: "depth", arg: 3, scope: !8853, file: !3, line: 699, type: !107)
!8861 = !DILocation(line: 699, column: 71, scope: !8853)
!8862 = !DILocalVariable(name: "start", arg: 4, scope: !8853, file: !3, line: 699, type: !3669)
!8863 = !DILocation(line: 699, column: 90, scope: !8853)
!8864 = !DILocalVariable(name: "dir", arg: 5, scope: !8853, file: !3, line: 699, type: !3669)
!8865 = !DILocation(line: 699, column: 112, scope: !8853)
!8866 = !DILocalVariable(name: "col", arg: 6, scope: !8853, file: !3, line: 699, type: !6)
!8867 = !DILocation(line: 699, column: 126, scope: !8853)
!8868 = !DILocalVariable(name: "obi", arg: 7, scope: !8853, file: !3, line: 699, type: !2522)
!8869 = !DILocation(line: 699, column: 153, scope: !8853)
!8870 = !DILocalVariable(name: "vlr", arg: 8, scope: !8853, file: !3, line: 699, type: !2524)
!8871 = !DILocation(line: 699, column: 167, scope: !8853)
!8872 = !DILocalVariable(name: "traflag", arg: 9, scope: !8853, file: !3, line: 699, type: !8)
!8873 = !DILocation(line: 699, column: 176, scope: !8853)
!8874 = !DILocalVariable(name: "shi", scope: !8853, file: !3, line: 701, type: !3684)
!8875 = !DILocation(line: 701, column: 13, scope: !8853)
!8876 = !DILocalVariable(name: "isec", scope: !8853, file: !3, line: 702, type: !3682)
!8877 = !DILocation(line: 702, column: 8, scope: !8853)
!8878 = !DILocalVariable(name: "dist_mir", scope: !8853, file: !3, line: 703, type: !7)
!8879 = !DILocation(line: 703, column: 8, scope: !8853)
!8880 = !DILocation(line: 703, column: 19, scope: !8853)
!8881 = !DILocation(line: 703, column: 28, scope: !8853)
!8882 = !DILocation(line: 703, column: 33, scope: !8853)
!8883 = !DILocation(line: 709, column: 8, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 709, column: 6)
!8885 = !DILocation(line: 709, column: 21, scope: !8884)
!8886 = !DILocation(line: 709, column: 6, scope: !8884)
!8887 = !DILocation(line: 709, column: 6, scope: !8853)
!8888 = !DILocation(line: 710, column: 11, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8884, file: !3, line: 709, column: 27)
!8890 = !DILocation(line: 710, column: 3, scope: !8889)
!8891 = !DILocation(line: 711, column: 3, scope: !8889)
!8892 = !DILocation(line: 714, column: 18, scope: !8853)
!8893 = !DILocation(line: 714, column: 13, scope: !8853)
!8894 = !DILocation(line: 714, column: 25, scope: !8853)
!8895 = !DILocation(line: 714, column: 2, scope: !8853)
!8896 = !DILocation(line: 715, column: 18, scope: !8853)
!8897 = !DILocation(line: 715, column: 13, scope: !8853)
!8898 = !DILocation(line: 715, column: 23, scope: !8853)
!8899 = !DILocation(line: 715, column: 2, scope: !8853)
!8900 = !DILocation(line: 716, column: 14, scope: !8853)
!8901 = !DILocation(line: 716, column: 23, scope: !8853)
!8902 = !DILocation(line: 716, column: 29, scope: !8853)
!8903 = !DILocation(line: 716, column: 7, scope: !8853)
!8904 = !DILocation(line: 716, column: 12, scope: !8853)
!8905 = !DILocation(line: 717, column: 7, scope: !8853)
!8906 = !DILocation(line: 717, column: 11, scope: !8853)
!8907 = !DILocation(line: 718, column: 7, scope: !8853)
!8908 = !DILocation(line: 718, column: 13, scope: !8853)
!8909 = !DILocation(line: 719, column: 7, scope: !8853)
!8910 = !DILocation(line: 719, column: 12, scope: !8853)
!8911 = !DILocation(line: 720, column: 7, scope: !8853)
!8912 = !DILocation(line: 720, column: 12, scope: !8853)
!8913 = !DILocation(line: 722, column: 19, scope: !8853)
!8914 = !DILocation(line: 722, column: 7, scope: !8853)
!8915 = !DILocation(line: 722, column: 12, scope: !8853)
!8916 = !DILocation(line: 722, column: 17, scope: !8853)
!8917 = !DILocation(line: 723, column: 19, scope: !8853)
!8918 = !DILocation(line: 723, column: 7, scope: !8853)
!8919 = !DILocation(line: 723, column: 12, scope: !8853)
!8920 = !DILocation(line: 723, column: 17, scope: !8853)
!8921 = !DILocation(line: 727, column: 25, scope: !8853)
!8922 = !DILocation(line: 727, column: 34, scope: !8853)
!8923 = !DILocation(line: 727, column: 2, scope: !8853)
!8924 = !DILocation(line: 729, column: 29, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 729, column: 6)
!8926 = !DILocation(line: 729, column: 6, scope: !8925)
!8927 = !DILocation(line: 729, column: 6, scope: !8853)
!8928 = !DILocalVariable(name: "shr", scope: !8929, file: !3, line: 730, type: !3825)
!8929 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 729, column: 46)
!8930 = !DILocation(line: 730, column: 15, scope: !8929)
!8931 = !DILocalVariable(name: "d", scope: !8929, file: !3, line: 731, type: !7)
!8932 = !DILocation(line: 731, column: 9, scope: !8929)
!8933 = !DILocation(line: 733, column: 34, scope: !8929)
!8934 = !DILocation(line: 733, column: 43, scope: !8929)
!8935 = !DILocation(line: 733, column: 3, scope: !8929)
!8936 = !DILocation(line: 736, column: 18, scope: !8929)
!8937 = !DILocation(line: 736, column: 14, scope: !8929)
!8938 = !DILocation(line: 736, column: 24, scope: !8929)
!8939 = !DILocation(line: 736, column: 33, scope: !8929)
!8940 = !DILocation(line: 736, column: 3, scope: !8929)
!8941 = !DILocation(line: 737, column: 18, scope: !8929)
!8942 = !DILocation(line: 737, column: 14, scope: !8929)
!8943 = !DILocation(line: 737, column: 24, scope: !8929)
!8944 = !DILocation(line: 737, column: 33, scope: !8929)
!8945 = !DILocation(line: 737, column: 3, scope: !8929)
!8946 = !DILocation(line: 739, column: 13, scope: !8929)
!8947 = !DILocation(line: 739, column: 22, scope: !8929)
!8948 = !DILocation(line: 739, column: 7, scope: !8929)
!8949 = !DILocation(line: 739, column: 11, scope: !8929)
!8950 = !DILocation(line: 740, column: 15, scope: !8929)
!8951 = !DILocation(line: 740, column: 24, scope: !8929)
!8952 = !DILocation(line: 740, column: 7, scope: !8929)
!8953 = !DILocation(line: 740, column: 13, scope: !8929)
!8954 = !DILocation(line: 741, column: 14, scope: !8929)
!8955 = !DILocation(line: 741, column: 23, scope: !8929)
!8956 = !DILocation(line: 741, column: 29, scope: !8929)
!8957 = !DILocation(line: 741, column: 7, scope: !8929)
!8958 = !DILocation(line: 741, column: 12, scope: !8929)
!8959 = !DILocation(line: 742, column: 15, scope: !8929)
!8960 = !DILocation(line: 742, column: 24, scope: !8929)
!8961 = !DILocation(line: 742, column: 7, scope: !8929)
!8962 = !DILocation(line: 742, column: 13, scope: !8929)
!8963 = !DILocation(line: 744, column: 11, scope: !8929)
!8964 = !DILocation(line: 744, column: 20, scope: !8929)
!8965 = !DILocation(line: 744, column: 7, scope: !8929)
!8966 = !DILocation(line: 744, column: 9, scope: !8929)
!8967 = !DILocation(line: 745, column: 11, scope: !8929)
!8968 = !DILocation(line: 745, column: 20, scope: !8929)
!8969 = !DILocation(line: 745, column: 7, scope: !8929)
!8970 = !DILocation(line: 745, column: 9, scope: !8929)
!8971 = !DILocation(line: 746, column: 12, scope: !8929)
!8972 = !DILocation(line: 746, column: 21, scope: !8929)
!8973 = !DILocation(line: 746, column: 7, scope: !8929)
!8974 = !DILocation(line: 746, column: 10, scope: !8929)
!8975 = !DILocation(line: 747, column: 7, scope: !8929)
!8976 = !DILocation(line: 747, column: 15, scope: !8929)
!8977 = !DILocation(line: 748, column: 7, scope: !8929)
!8978 = !DILocation(line: 748, column: 19, scope: !8929)
!8979 = !DILocation(line: 750, column: 23, scope: !8929)
!8980 = !DILocation(line: 750, column: 32, scope: !8929)
!8981 = !DILocation(line: 750, column: 7, scope: !8929)
!8982 = !DILocation(line: 750, column: 21, scope: !8929)
!8983 = !DILocation(line: 751, column: 21, scope: !8929)
!8984 = !DILocation(line: 751, column: 30, scope: !8929)
!8985 = !DILocation(line: 751, column: 7, scope: !8929)
!8986 = !DILocation(line: 751, column: 19, scope: !8929)
!8987 = !DILocation(line: 753, column: 3, scope: !8929)
!8988 = !DILocation(line: 755, column: 7, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 755, column: 7)
!8990 = !DILocation(line: 755, column: 15, scope: !8989)
!8991 = !DILocation(line: 755, column: 7, scope: !8929)
!8992 = !DILocation(line: 756, column: 7, scope: !8989)
!8993 = !DILocation(line: 756, column: 5, scope: !8989)
!8994 = !DILocation(line: 756, column: 4, scope: !8989)
!8995 = !DILocation(line: 758, column: 7, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 758, column: 7)
!8997 = !DILocation(line: 758, column: 12, scope: !8996)
!8998 = !DILocation(line: 758, column: 7, scope: !8929)
!8999 = !DILocalVariable(name: "fr", scope: !9000, file: !3, line: 759, type: !7)
!9000 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 758, column: 16)
!9001 = !DILocation(line: 759, column: 10, scope: !9000)
!9002 = !DILocalVariable(name: "fg", scope: !9000, file: !3, line: 759, type: !7)
!9003 = !DILocation(line: 759, column: 14, scope: !9000)
!9004 = !DILocalVariable(name: "fb", scope: !9000, file: !3, line: 759, type: !7)
!9005 = !DILocation(line: 759, column: 18, scope: !9000)
!9006 = !DILocalVariable(name: "f", scope: !9000, file: !3, line: 759, type: !7)
!9007 = !DILocation(line: 759, column: 22, scope: !9000)
!9008 = !DILocalVariable(name: "f1", scope: !9000, file: !3, line: 759, type: !7)
!9009 = !DILocation(line: 759, column: 25, scope: !9000)
!9010 = !DILocation(line: 761, column: 13, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 761, column: 8)
!9012 = !DILocation(line: 761, column: 18, scope: !9011)
!9013 = !DILocation(line: 761, column: 25, scope: !9011)
!9014 = !DILocation(line: 761, column: 38, scope: !9011)
!9015 = !DILocation(line: 761, column: 45, scope: !9011)
!9016 = !DILocation(line: 761, column: 51, scope: !9011)
!9017 = !DILocation(line: 761, column: 58, scope: !9011)
!9018 = !DILocation(line: 761, column: 66, scope: !9011)
!9019 = !DILocation(line: 761, column: 71, scope: !9011)
!9020 = !DILocation(line: 761, column: 78, scope: !9011)
!9021 = !DILocation(line: 761, column: 8, scope: !9000)
!9022 = !DILocalVariable(name: "nf", scope: !9023, file: !3, line: 762, type: !7)
!9023 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 761, column: 110)
!9024 = !DILocation(line: 762, column: 11, scope: !9023)
!9025 = !DILocalVariable(name: "f", scope: !9023, file: !3, line: 762, type: !7)
!9026 = !DILocation(line: 762, column: 15, scope: !9023)
!9027 = !DILocalVariable(name: "refract", scope: !9023, file: !3, line: 762, type: !206)
!9028 = !DILocation(line: 762, column: 18, scope: !9023)
!9029 = !DILocalVariable(name: "tracol", scope: !9023, file: !3, line: 762, type: !381)
!9030 = !DILocation(line: 762, column: 30, scope: !9023)
!9031 = !DILocation(line: 764, column: 20, scope: !9023)
!9032 = !DILocation(line: 764, column: 5, scope: !9023)
!9033 = !DILocation(line: 764, column: 14, scope: !9023)
!9034 = !DILocation(line: 765, column: 20, scope: !9023)
!9035 = !DILocation(line: 765, column: 5, scope: !9023)
!9036 = !DILocation(line: 765, column: 14, scope: !9023)
!9037 = !DILocation(line: 766, column: 20, scope: !9023)
!9038 = !DILocation(line: 766, column: 5, scope: !9023)
!9039 = !DILocation(line: 766, column: 14, scope: !9023)
!9040 = !DILocation(line: 767, column: 16, scope: !9023)
!9041 = !DILocation(line: 767, column: 5, scope: !9023)
!9042 = !DILocation(line: 767, column: 14, scope: !9023)
!9043 = !DILocation(line: 769, column: 14, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 769, column: 9)
!9045 = !DILocation(line: 769, column: 19, scope: !9044)
!9046 = !DILocation(line: 769, column: 24, scope: !9044)
!9047 = !DILocation(line: 769, column: 37, scope: !9044)
!9048 = !DILocation(line: 769, column: 45, scope: !9044)
!9049 = !DILocation(line: 769, column: 50, scope: !9044)
!9050 = !DILocation(line: 769, column: 55, scope: !9044)
!9051 = !DILocation(line: 769, column: 9, scope: !9023)
!9052 = !DILocalVariable(name: "new_traflag", scope: !9053, file: !3, line: 771, type: !8)
!9053 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 769, column: 72)
!9054 = !DILocation(line: 771, column: 10, scope: !9053)
!9055 = !DILocation(line: 771, column: 24, scope: !9053)
!9056 = !DILocation(line: 773, column: 10, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 773, column: 10)
!9058 = !DILocation(line: 773, column: 22, scope: !9057)
!9059 = !DILocation(line: 773, column: 10, scope: !9053)
!9060 = !DILocalVariable(name: "norm", scope: !9061, file: !3, line: 775, type: !206)
!9061 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 773, column: 36)
!9062 = !DILocation(line: 775, column: 13, scope: !9061)
!9063 = !DILocation(line: 776, column: 22, scope: !9061)
!9064 = !DILocation(line: 776, column: 18, scope: !9061)
!9065 = !DILocation(line: 776, column: 16, scope: !9061)
!9066 = !DILocation(line: 776, column: 7, scope: !9061)
!9067 = !DILocation(line: 776, column: 14, scope: !9061)
!9068 = !DILocation(line: 777, column: 22, scope: !9061)
!9069 = !DILocation(line: 777, column: 18, scope: !9061)
!9070 = !DILocation(line: 777, column: 16, scope: !9061)
!9071 = !DILocation(line: 777, column: 7, scope: !9061)
!9072 = !DILocation(line: 777, column: 14, scope: !9061)
!9073 = !DILocation(line: 778, column: 22, scope: !9061)
!9074 = !DILocation(line: 778, column: 18, scope: !9061)
!9075 = !DILocation(line: 778, column: 16, scope: !9061)
!9076 = !DILocation(line: 778, column: 7, scope: !9061)
!9077 = !DILocation(line: 778, column: 14, scope: !9061)
!9078 = !DILocation(line: 780, column: 22, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9061, file: !3, line: 780, column: 11)
!9080 = !DILocation(line: 780, column: 31, scope: !9079)
!9081 = !DILocation(line: 780, column: 41, scope: !9079)
!9082 = !DILocation(line: 780, column: 37, scope: !9079)
!9083 = !DILocation(line: 780, column: 51, scope: !9079)
!9084 = !DILocation(line: 780, column: 11, scope: !9079)
!9085 = !DILocation(line: 780, column: 11, scope: !9061)
!9086 = !DILocation(line: 782, column: 20, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 780, column: 57)
!9088 = !DILocation(line: 783, column: 7, scope: !9087)
!9089 = !DILocation(line: 786, column: 19, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 784, column: 12)
!9091 = !DILocation(line: 786, column: 28, scope: !9090)
!9092 = !DILocation(line: 786, column: 38, scope: !9090)
!9093 = !DILocation(line: 786, column: 34, scope: !9090)
!9094 = !DILocation(line: 786, column: 48, scope: !9090)
!9095 = !DILocation(line: 786, column: 44, scope: !9090)
!9096 = !DILocation(line: 786, column: 8, scope: !9090)
!9097 = !DILocation(line: 788, column: 6, scope: !9061)
!9098 = !DILocation(line: 790, column: 22, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 790, column: 11)
!9100 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 789, column: 11)
!9101 = !DILocation(line: 790, column: 35, scope: !9099)
!9102 = !DILocation(line: 790, column: 31, scope: !9099)
!9103 = !DILocation(line: 790, column: 43, scope: !9099)
!9104 = !DILocation(line: 790, column: 39, scope: !9099)
!9105 = !DILocation(line: 790, column: 53, scope: !9099)
!9106 = !DILocation(line: 790, column: 11, scope: !9099)
!9107 = !DILocation(line: 790, column: 11, scope: !9100)
!9108 = !DILocation(line: 792, column: 20, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 790, column: 59)
!9110 = !DILocation(line: 793, column: 7, scope: !9109)
!9111 = !DILocation(line: 796, column: 19, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 794, column: 12)
!9113 = !DILocation(line: 796, column: 32, scope: !9112)
!9114 = !DILocation(line: 796, column: 28, scope: !9112)
!9115 = !DILocation(line: 796, column: 40, scope: !9112)
!9116 = !DILocation(line: 796, column: 36, scope: !9112)
!9117 = !DILocation(line: 796, column: 50, scope: !9112)
!9118 = !DILocation(line: 796, column: 46, scope: !9112)
!9119 = !DILocation(line: 796, column: 8, scope: !9112)
!9120 = !DILocation(line: 799, column: 15, scope: !9053)
!9121 = !DILocation(line: 799, column: 24, scope: !9053)
!9122 = !DILocation(line: 799, column: 33, scope: !9053)
!9123 = !DILocation(line: 799, column: 38, scope: !9053)
!9124 = !DILocation(line: 799, column: 46, scope: !9053)
!9125 = !DILocation(line: 799, column: 42, scope: !9053)
!9126 = !DILocation(line: 799, column: 50, scope: !9053)
!9127 = !DILocation(line: 799, column: 59, scope: !9053)
!9128 = !DILocation(line: 799, column: 71, scope: !9053)
!9129 = !DILocation(line: 799, column: 80, scope: !9053)
!9130 = !DILocation(line: 799, column: 85, scope: !9053)
!9131 = !DILocation(line: 799, column: 6, scope: !9053)
!9132 = !DILocation(line: 800, column: 5, scope: !9053)
!9133 = !DILocation(line: 802, column: 15, scope: !9044)
!9134 = !DILocation(line: 802, column: 24, scope: !9044)
!9135 = !DILocation(line: 802, column: 33, scope: !9044)
!9136 = !DILocation(line: 802, column: 38, scope: !9044)
!9137 = !DILocation(line: 802, column: 46, scope: !9044)
!9138 = !DILocation(line: 802, column: 42, scope: !9044)
!9139 = !DILocation(line: 802, column: 54, scope: !9044)
!9140 = !DILocation(line: 802, column: 50, scope: !9044)
!9141 = !DILocation(line: 802, column: 60, scope: !9044)
!9142 = !DILocation(line: 802, column: 72, scope: !9044)
!9143 = !DILocation(line: 802, column: 81, scope: !9044)
!9144 = !DILocation(line: 802, column: 6, scope: !9044)
!9145 = !DILocation(line: 804, column: 12, scope: !9023)
!9146 = !DILocation(line: 804, column: 6, scope: !9023)
!9147 = !DILocation(line: 804, column: 28, scope: !9023)
!9148 = !DILocation(line: 804, column: 27, scope: !9023)
!9149 = !DILocation(line: 804, column: 21, scope: !9023)
!9150 = !DILocation(line: 805, column: 9, scope: !9023)
!9151 = !DILocation(line: 805, column: 17, scope: !9023)
!9152 = !DILocation(line: 805, column: 22, scope: !9023)
!9153 = !DILocation(line: 805, column: 11, scope: !9023)
!9154 = !DILocation(line: 805, column: 7, scope: !9023)
!9155 = !DILocation(line: 806, column: 15, scope: !9023)
!9156 = !DILocation(line: 806, column: 23, scope: !9023)
!9157 = !DILocation(line: 806, column: 24, scope: !9023)
!9158 = !DILocation(line: 806, column: 17, scope: !9023)
!9159 = !DILocation(line: 806, column: 13, scope: !9023)
!9160 = !DILocation(line: 806, column: 7, scope: !9023)
!9161 = !DILocation(line: 807, column: 15, scope: !9023)
!9162 = !DILocation(line: 807, column: 23, scope: !9023)
!9163 = !DILocation(line: 807, column: 24, scope: !9023)
!9164 = !DILocation(line: 807, column: 17, scope: !9023)
!9165 = !DILocation(line: 807, column: 13, scope: !9023)
!9166 = !DILocation(line: 807, column: 7, scope: !9023)
!9167 = !DILocation(line: 808, column: 15, scope: !9023)
!9168 = !DILocation(line: 808, column: 23, scope: !9023)
!9169 = !DILocation(line: 808, column: 24, scope: !9023)
!9170 = !DILocation(line: 808, column: 17, scope: !9023)
!9171 = !DILocation(line: 808, column: 13, scope: !9023)
!9172 = !DILocation(line: 808, column: 7, scope: !9023)
!9173 = !DILocation(line: 809, column: 18, scope: !9023)
!9174 = !DILocation(line: 809, column: 24, scope: !9023)
!9175 = !DILocation(line: 809, column: 20, scope: !9023)
!9176 = !DILocation(line: 809, column: 19, scope: !9023)
!9177 = !DILocation(line: 809, column: 34, scope: !9023)
!9178 = !DILocation(line: 809, column: 37, scope: !9023)
!9179 = !DILocation(line: 809, column: 36, scope: !9023)
!9180 = !DILocation(line: 809, column: 40, scope: !9023)
!9181 = !DILocation(line: 809, column: 39, scope: !9023)
!9182 = !DILocation(line: 809, column: 32, scope: !9023)
!9183 = !DILocation(line: 809, column: 9, scope: !9023)
!9184 = !DILocation(line: 809, column: 5, scope: !9023)
!9185 = !DILocation(line: 809, column: 16, scope: !9023)
!9186 = !DILocation(line: 810, column: 18, scope: !9023)
!9187 = !DILocation(line: 810, column: 24, scope: !9023)
!9188 = !DILocation(line: 810, column: 20, scope: !9023)
!9189 = !DILocation(line: 810, column: 19, scope: !9023)
!9190 = !DILocation(line: 810, column: 34, scope: !9023)
!9191 = !DILocation(line: 810, column: 37, scope: !9023)
!9192 = !DILocation(line: 810, column: 36, scope: !9023)
!9193 = !DILocation(line: 810, column: 40, scope: !9023)
!9194 = !DILocation(line: 810, column: 39, scope: !9023)
!9195 = !DILocation(line: 810, column: 32, scope: !9023)
!9196 = !DILocation(line: 810, column: 9, scope: !9023)
!9197 = !DILocation(line: 810, column: 5, scope: !9023)
!9198 = !DILocation(line: 810, column: 16, scope: !9023)
!9199 = !DILocation(line: 811, column: 18, scope: !9023)
!9200 = !DILocation(line: 811, column: 24, scope: !9023)
!9201 = !DILocation(line: 811, column: 20, scope: !9023)
!9202 = !DILocation(line: 811, column: 19, scope: !9023)
!9203 = !DILocation(line: 811, column: 34, scope: !9023)
!9204 = !DILocation(line: 811, column: 37, scope: !9023)
!9205 = !DILocation(line: 811, column: 36, scope: !9023)
!9206 = !DILocation(line: 811, column: 40, scope: !9023)
!9207 = !DILocation(line: 811, column: 39, scope: !9023)
!9208 = !DILocation(line: 811, column: 32, scope: !9023)
!9209 = !DILocation(line: 811, column: 9, scope: !9023)
!9210 = !DILocation(line: 811, column: 5, scope: !9023)
!9211 = !DILocation(line: 811, column: 16, scope: !9023)
!9212 = !DILocation(line: 813, column: 19, scope: !9023)
!9213 = !DILocation(line: 813, column: 9, scope: !9023)
!9214 = !DILocation(line: 813, column: 5, scope: !9023)
!9215 = !DILocation(line: 813, column: 17, scope: !9023)
!9216 = !DILocation(line: 814, column: 19, scope: !9023)
!9217 = !DILocation(line: 814, column: 9, scope: !9023)
!9218 = !DILocation(line: 814, column: 5, scope: !9023)
!9219 = !DILocation(line: 814, column: 17, scope: !9023)
!9220 = !DILocation(line: 815, column: 19, scope: !9023)
!9221 = !DILocation(line: 815, column: 9, scope: !9023)
!9222 = !DILocation(line: 815, column: 5, scope: !9023)
!9223 = !DILocation(line: 815, column: 17, scope: !9023)
!9224 = !DILocation(line: 817, column: 13, scope: !9023)
!9225 = !DILocation(line: 817, column: 16, scope: !9023)
!9226 = !DILocation(line: 817, column: 15, scope: !9023)
!9227 = !DILocation(line: 817, column: 28, scope: !9023)
!9228 = !DILocation(line: 817, column: 26, scope: !9023)
!9229 = !DILocation(line: 817, column: 5, scope: !9023)
!9230 = !DILocation(line: 817, column: 11, scope: !9023)
!9231 = !DILocation(line: 818, column: 4, scope: !9023)
!9232 = !DILocation(line: 820, column: 5, scope: !9011)
!9233 = !DILocation(line: 820, column: 11, scope: !9011)
!9234 = !DILocation(line: 822, column: 12, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 822, column: 8)
!9236 = !DILocation(line: 822, column: 17, scope: !9235)
!9237 = !DILocation(line: 822, column: 24, scope: !9235)
!9238 = !DILocation(line: 822, column: 8, scope: !9000)
!9239 = !DILocation(line: 823, column: 12, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 822, column: 40)
!9241 = !DILocation(line: 823, column: 6, scope: !9240)
!9242 = !DILocation(line: 824, column: 9, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 824, column: 9)
!9244 = !DILocation(line: 824, column: 10, scope: !9243)
!9245 = !DILocation(line: 824, column: 9, scope: !9240)
!9246 = !DILocation(line: 824, column: 38, scope: !9243)
!9247 = !DILocation(line: 824, column: 34, scope: !9243)
!9248 = !DILocation(line: 824, column: 48, scope: !9243)
!9249 = !DILocation(line: 824, column: 44, scope: !9243)
!9250 = !DILocation(line: 824, column: 56, scope: !9243)
!9251 = !DILocation(line: 824, column: 61, scope: !9243)
!9252 = !DILocation(line: 824, column: 80, scope: !9243)
!9253 = !DILocation(line: 824, column: 85, scope: !9243)
!9254 = !DILocation(line: 824, column: 22, scope: !9243)
!9255 = !DILocation(line: 824, column: 19, scope: !9243)
!9256 = !DILocation(line: 824, column: 18, scope: !9243)
!9257 = !DILocation(line: 825, column: 4, scope: !9240)
!9258 = !DILocation(line: 826, column: 10, scope: !9235)
!9259 = !DILocation(line: 828, column: 8, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 828, column: 8)
!9261 = !DILocation(line: 828, column: 9, scope: !9260)
!9262 = !DILocation(line: 828, column: 8, scope: !9000)
!9263 = !DILocalVariable(name: "mircol", scope: !9264, file: !3, line: 829, type: !381)
!9264 = distinct !DILexicalBlock(scope: !9260, file: !3, line: 828, column: 17)
!9265 = !DILocation(line: 829, column: 11, scope: !9264)
!9266 = !DILocalVariable(name: "ref", scope: !9264, file: !3, line: 830, type: !206)
!9267 = !DILocation(line: 830, column: 11, scope: !9264)
!9268 = !DILocation(line: 832, column: 23, scope: !9264)
!9269 = !DILocation(line: 832, column: 32, scope: !9264)
!9270 = !DILocation(line: 832, column: 28, scope: !9264)
!9271 = !DILocation(line: 832, column: 40, scope: !9264)
!9272 = !DILocation(line: 832, column: 36, scope: !9264)
!9273 = !DILocation(line: 832, column: 5, scope: !9264)
!9274 = !DILocation(line: 833, column: 14, scope: !9264)
!9275 = !DILocation(line: 833, column: 23, scope: !9264)
!9276 = !DILocation(line: 833, column: 32, scope: !9264)
!9277 = !DILocation(line: 833, column: 37, scope: !9264)
!9278 = !DILocation(line: 833, column: 45, scope: !9264)
!9279 = !DILocation(line: 833, column: 41, scope: !9264)
!9280 = !DILocation(line: 833, column: 49, scope: !9264)
!9281 = !DILocation(line: 833, column: 54, scope: !9264)
!9282 = !DILocation(line: 833, column: 66, scope: !9264)
!9283 = !DILocation(line: 833, column: 75, scope: !9264)
!9284 = !DILocation(line: 833, column: 80, scope: !9264)
!9285 = !DILocation(line: 833, column: 5, scope: !9264)
!9286 = !DILocation(line: 835, column: 14, scope: !9264)
!9287 = !DILocation(line: 835, column: 13, scope: !9264)
!9288 = !DILocation(line: 835, column: 7, scope: !9264)
!9289 = !DILocation(line: 843, column: 13, scope: !9264)
!9290 = !DILocation(line: 843, column: 7, scope: !9264)
!9291 = !DILocation(line: 844, column: 13, scope: !9264)
!9292 = !DILocation(line: 844, column: 7, scope: !9264)
!9293 = !DILocation(line: 845, column: 13, scope: !9264)
!9294 = !DILocation(line: 845, column: 7, scope: !9264)
!9295 = !DILocation(line: 847, column: 13, scope: !9264)
!9296 = !DILocation(line: 847, column: 15, scope: !9264)
!9297 = !DILocation(line: 847, column: 14, scope: !9264)
!9298 = !DILocation(line: 847, column: 28, scope: !9264)
!9299 = !DILocation(line: 847, column: 24, scope: !9264)
!9300 = !DILocation(line: 847, column: 23, scope: !9264)
!9301 = !DILocation(line: 847, column: 17, scope: !9264)
!9302 = !DILocation(line: 847, column: 37, scope: !9264)
!9303 = !DILocation(line: 847, column: 36, scope: !9264)
!9304 = !DILocation(line: 847, column: 49, scope: !9264)
!9305 = !DILocation(line: 847, column: 56, scope: !9264)
!9306 = !DILocation(line: 847, column: 52, scope: !9264)
!9307 = !DILocation(line: 847, column: 51, scope: !9264)
!9308 = !DILocation(line: 847, column: 47, scope: !9264)
!9309 = !DILocation(line: 847, column: 70, scope: !9264)
!9310 = !DILocation(line: 847, column: 66, scope: !9264)
!9311 = !DILocation(line: 847, column: 64, scope: !9264)
!9312 = !DILocation(line: 847, column: 5, scope: !9264)
!9313 = !DILocation(line: 847, column: 11, scope: !9264)
!9314 = !DILocation(line: 848, column: 13, scope: !9264)
!9315 = !DILocation(line: 848, column: 15, scope: !9264)
!9316 = !DILocation(line: 848, column: 14, scope: !9264)
!9317 = !DILocation(line: 848, column: 28, scope: !9264)
!9318 = !DILocation(line: 848, column: 24, scope: !9264)
!9319 = !DILocation(line: 848, column: 23, scope: !9264)
!9320 = !DILocation(line: 848, column: 17, scope: !9264)
!9321 = !DILocation(line: 848, column: 37, scope: !9264)
!9322 = !DILocation(line: 848, column: 36, scope: !9264)
!9323 = !DILocation(line: 848, column: 49, scope: !9264)
!9324 = !DILocation(line: 848, column: 56, scope: !9264)
!9325 = !DILocation(line: 848, column: 52, scope: !9264)
!9326 = !DILocation(line: 848, column: 51, scope: !9264)
!9327 = !DILocation(line: 848, column: 47, scope: !9264)
!9328 = !DILocation(line: 848, column: 70, scope: !9264)
!9329 = !DILocation(line: 848, column: 66, scope: !9264)
!9330 = !DILocation(line: 848, column: 64, scope: !9264)
!9331 = !DILocation(line: 848, column: 5, scope: !9264)
!9332 = !DILocation(line: 848, column: 11, scope: !9264)
!9333 = !DILocation(line: 849, column: 13, scope: !9264)
!9334 = !DILocation(line: 849, column: 15, scope: !9264)
!9335 = !DILocation(line: 849, column: 14, scope: !9264)
!9336 = !DILocation(line: 849, column: 28, scope: !9264)
!9337 = !DILocation(line: 849, column: 24, scope: !9264)
!9338 = !DILocation(line: 849, column: 23, scope: !9264)
!9339 = !DILocation(line: 849, column: 17, scope: !9264)
!9340 = !DILocation(line: 849, column: 37, scope: !9264)
!9341 = !DILocation(line: 849, column: 36, scope: !9264)
!9342 = !DILocation(line: 849, column: 49, scope: !9264)
!9343 = !DILocation(line: 849, column: 56, scope: !9264)
!9344 = !DILocation(line: 849, column: 52, scope: !9264)
!9345 = !DILocation(line: 849, column: 51, scope: !9264)
!9346 = !DILocation(line: 849, column: 47, scope: !9264)
!9347 = !DILocation(line: 849, column: 70, scope: !9264)
!9348 = !DILocation(line: 849, column: 66, scope: !9264)
!9349 = !DILocation(line: 849, column: 64, scope: !9264)
!9350 = !DILocation(line: 849, column: 5, scope: !9264)
!9351 = !DILocation(line: 849, column: 11, scope: !9264)
!9352 = !DILocation(line: 850, column: 4, scope: !9264)
!9353 = !DILocation(line: 852, column: 17, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9260, file: !3, line: 851, column: 9)
!9355 = !DILocation(line: 852, column: 13, scope: !9354)
!9356 = !DILocation(line: 852, column: 31, scope: !9354)
!9357 = !DILocation(line: 852, column: 27, scope: !9354)
!9358 = !DILocation(line: 852, column: 25, scope: !9354)
!9359 = !DILocation(line: 852, column: 5, scope: !9354)
!9360 = !DILocation(line: 852, column: 11, scope: !9354)
!9361 = !DILocation(line: 853, column: 17, scope: !9354)
!9362 = !DILocation(line: 853, column: 13, scope: !9354)
!9363 = !DILocation(line: 853, column: 31, scope: !9354)
!9364 = !DILocation(line: 853, column: 27, scope: !9354)
!9365 = !DILocation(line: 853, column: 25, scope: !9354)
!9366 = !DILocation(line: 853, column: 5, scope: !9354)
!9367 = !DILocation(line: 853, column: 11, scope: !9354)
!9368 = !DILocation(line: 854, column: 17, scope: !9354)
!9369 = !DILocation(line: 854, column: 13, scope: !9354)
!9370 = !DILocation(line: 854, column: 31, scope: !9354)
!9371 = !DILocation(line: 854, column: 27, scope: !9354)
!9372 = !DILocation(line: 854, column: 25, scope: !9354)
!9373 = !DILocation(line: 854, column: 5, scope: !9354)
!9374 = !DILocation(line: 854, column: 11, scope: !9354)
!9375 = !DILocation(line: 857, column: 8, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 857, column: 8)
!9377 = !DILocation(line: 857, column: 17, scope: !9376)
!9378 = !DILocation(line: 857, column: 8, scope: !9000)
!9379 = !DILocalVariable(name: "blendcol", scope: !9380, file: !3, line: 858, type: !206)
!9380 = distinct !DILexicalBlock(scope: !9376, file: !3, line: 857, column: 25)
!9381 = !DILocation(line: 858, column: 11, scope: !9380)
!9382 = !DILocation(line: 862, column: 26, scope: !9380)
!9383 = !DILocation(line: 862, column: 36, scope: !9380)
!9384 = !DILocation(line: 862, column: 51, scope: !9380)
!9385 = !DILocation(line: 862, column: 67, scope: !9380)
!9386 = !DILocation(line: 862, column: 5, scope: !9380)
!9387 = !DILocation(line: 863, column: 30, scope: !9380)
!9388 = !DILocation(line: 863, column: 35, scope: !9380)
!9389 = !DILocation(line: 863, column: 45, scope: !9380)
!9390 = !DILocation(line: 863, column: 5, scope: !9380)
!9391 = !DILocation(line: 864, column: 4, scope: !9380)
!9392 = !DILocation(line: 865, column: 3, scope: !9000)
!9393 = !DILocation(line: 867, column: 16, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 866, column: 8)
!9395 = !DILocation(line: 867, column: 12, scope: !9394)
!9396 = !DILocation(line: 867, column: 30, scope: !9394)
!9397 = !DILocation(line: 867, column: 26, scope: !9394)
!9398 = !DILocation(line: 867, column: 24, scope: !9394)
!9399 = !DILocation(line: 867, column: 4, scope: !9394)
!9400 = !DILocation(line: 867, column: 10, scope: !9394)
!9401 = !DILocation(line: 868, column: 16, scope: !9394)
!9402 = !DILocation(line: 868, column: 12, scope: !9394)
!9403 = !DILocation(line: 868, column: 30, scope: !9394)
!9404 = !DILocation(line: 868, column: 26, scope: !9394)
!9405 = !DILocation(line: 868, column: 24, scope: !9394)
!9406 = !DILocation(line: 868, column: 4, scope: !9394)
!9407 = !DILocation(line: 868, column: 10, scope: !9394)
!9408 = !DILocation(line: 869, column: 16, scope: !9394)
!9409 = !DILocation(line: 869, column: 12, scope: !9394)
!9410 = !DILocation(line: 869, column: 30, scope: !9394)
!9411 = !DILocation(line: 869, column: 26, scope: !9394)
!9412 = !DILocation(line: 869, column: 24, scope: !9394)
!9413 = !DILocation(line: 869, column: 4, scope: !9394)
!9414 = !DILocation(line: 869, column: 10, scope: !9394)
!9415 = !DILocation(line: 872, column: 2, scope: !8929)
!9416 = !DILocation(line: 874, column: 24, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 873, column: 7)
!9418 = !DILocation(line: 874, column: 29, scope: !9417)
!9419 = !DILocation(line: 874, column: 44, scope: !9417)
!9420 = !DILocation(line: 874, column: 60, scope: !9417)
!9421 = !DILocation(line: 874, column: 3, scope: !9417)
!9422 = !DILocation(line: 877, column: 1, scope: !8853)
!9423 = distinct !DISubprogram(name: "adaptive_sample_variance", scope: !3, file: !3, line: 1241, type: !9424, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{!8, !8, !3669, !3669, !7}
!9426 = !DILocalVariable(name: "samples", arg: 1, scope: !9423, file: !3, line: 1241, type: !8)
!9427 = !DILocation(line: 1241, column: 41, scope: !9423)
!9428 = !DILocalVariable(name: "col", arg: 2, scope: !9423, file: !3, line: 1241, type: !3669)
!9429 = !DILocation(line: 1241, column: 62, scope: !9423)
!9430 = !DILocalVariable(name: "colsq", arg: 3, scope: !9423, file: !3, line: 1241, type: !3669)
!9431 = !DILocation(line: 1241, column: 82, scope: !9423)
!9432 = !DILocalVariable(name: "thresh", arg: 4, scope: !9423, file: !3, line: 1241, type: !7)
!9433 = !DILocation(line: 1241, column: 98, scope: !9423)
!9434 = !DILocalVariable(name: "var", scope: !9423, file: !3, line: 1243, type: !206)
!9435 = !DILocation(line: 1243, column: 8, scope: !9423)
!9436 = !DILocalVariable(name: "mean", scope: !9423, file: !3, line: 1243, type: !206)
!9437 = !DILocation(line: 1243, column: 16, scope: !9423)
!9438 = !DILocation(line: 1247, column: 9, scope: !9423)
!9439 = !DILocation(line: 1249, column: 12, scope: !9423)
!9440 = !DILocation(line: 1249, column: 28, scope: !9423)
!9441 = !DILocation(line: 1249, column: 21, scope: !9423)
!9442 = !DILocation(line: 1249, column: 19, scope: !9423)
!9443 = !DILocation(line: 1249, column: 2, scope: !9423)
!9444 = !DILocation(line: 1249, column: 10, scope: !9423)
!9445 = !DILocation(line: 1250, column: 12, scope: !9423)
!9446 = !DILocation(line: 1250, column: 28, scope: !9423)
!9447 = !DILocation(line: 1250, column: 21, scope: !9423)
!9448 = !DILocation(line: 1250, column: 19, scope: !9423)
!9449 = !DILocation(line: 1250, column: 2, scope: !9423)
!9450 = !DILocation(line: 1250, column: 10, scope: !9423)
!9451 = !DILocation(line: 1251, column: 12, scope: !9423)
!9452 = !DILocation(line: 1251, column: 28, scope: !9423)
!9453 = !DILocation(line: 1251, column: 21, scope: !9423)
!9454 = !DILocation(line: 1251, column: 19, scope: !9423)
!9455 = !DILocation(line: 1251, column: 2, scope: !9423)
!9456 = !DILocation(line: 1251, column: 10, scope: !9423)
!9457 = !DILocation(line: 1253, column: 12, scope: !9423)
!9458 = !DILocation(line: 1253, column: 30, scope: !9423)
!9459 = !DILocation(line: 1253, column: 23, scope: !9423)
!9460 = !DILocation(line: 1253, column: 21, scope: !9423)
!9461 = !DILocation(line: 1253, column: 42, scope: !9423)
!9462 = !DILocation(line: 1253, column: 50, scope: !9423)
!9463 = !DILocation(line: 1253, column: 49, scope: !9423)
!9464 = !DILocation(line: 1253, column: 39, scope: !9423)
!9465 = !DILocation(line: 1253, column: 2, scope: !9423)
!9466 = !DILocation(line: 1253, column: 9, scope: !9423)
!9467 = !DILocation(line: 1254, column: 12, scope: !9423)
!9468 = !DILocation(line: 1254, column: 30, scope: !9423)
!9469 = !DILocation(line: 1254, column: 23, scope: !9423)
!9470 = !DILocation(line: 1254, column: 21, scope: !9423)
!9471 = !DILocation(line: 1254, column: 42, scope: !9423)
!9472 = !DILocation(line: 1254, column: 50, scope: !9423)
!9473 = !DILocation(line: 1254, column: 49, scope: !9423)
!9474 = !DILocation(line: 1254, column: 39, scope: !9423)
!9475 = !DILocation(line: 1254, column: 2, scope: !9423)
!9476 = !DILocation(line: 1254, column: 9, scope: !9423)
!9477 = !DILocation(line: 1255, column: 12, scope: !9423)
!9478 = !DILocation(line: 1255, column: 30, scope: !9423)
!9479 = !DILocation(line: 1255, column: 23, scope: !9423)
!9480 = !DILocation(line: 1255, column: 21, scope: !9423)
!9481 = !DILocation(line: 1255, column: 42, scope: !9423)
!9482 = !DILocation(line: 1255, column: 50, scope: !9423)
!9483 = !DILocation(line: 1255, column: 49, scope: !9423)
!9484 = !DILocation(line: 1255, column: 39, scope: !9423)
!9485 = !DILocation(line: 1255, column: 2, scope: !9423)
!9486 = !DILocation(line: 1255, column: 9, scope: !9423)
!9487 = !DILocation(line: 1257, column: 7, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 1257, column: 6)
!9489 = !DILocation(line: 1257, column: 14, scope: !9488)
!9490 = !DILocation(line: 1257, column: 23, scope: !9488)
!9491 = !DILocation(line: 1257, column: 21, scope: !9488)
!9492 = !DILocation(line: 1257, column: 31, scope: !9488)
!9493 = !DILocation(line: 1257, column: 35, scope: !9488)
!9494 = !DILocation(line: 1257, column: 42, scope: !9488)
!9495 = !DILocation(line: 1257, column: 51, scope: !9488)
!9496 = !DILocation(line: 1257, column: 49, scope: !9488)
!9497 = !DILocation(line: 1257, column: 59, scope: !9488)
!9498 = !DILocation(line: 1257, column: 63, scope: !9488)
!9499 = !DILocation(line: 1257, column: 70, scope: !9488)
!9500 = !DILocation(line: 1257, column: 79, scope: !9488)
!9501 = !DILocation(line: 1257, column: 77, scope: !9488)
!9502 = !DILocation(line: 1257, column: 6, scope: !9423)
!9503 = !DILocation(line: 1258, column: 3, scope: !9488)
!9504 = !DILocation(line: 1260, column: 3, scope: !9488)
!9505 = !DILocation(line: 1261, column: 1, scope: !9423)
!9506 = distinct !DISubprogram(name: "release_thread_qmcsampler", scope: !3, file: !3, line: 1217, type: !9507, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9507 = !DISubroutineType(types: !9508)
!9508 = !{null, !2526, !8, !4891}
!9509 = !DILocalVariable(name: "UNUSED_re", arg: 1, scope: !9506, file: !3, line: 1217, type: !2526)
!9510 = !DILocation(line: 1217, column: 47, scope: !9506)
!9511 = !DILocalVariable(name: "UNUSED_thread", arg: 2, scope: !9506, file: !3, line: 1217, type: !8)
!9512 = !DILocation(line: 1217, column: 63, scope: !9506)
!9513 = !DILocalVariable(name: "qsa", arg: 3, scope: !9506, file: !3, line: 1217, type: !4891)
!9514 = !DILocation(line: 1217, column: 91, scope: !9506)
!9515 = !DILocation(line: 1219, column: 2, scope: !9506)
!9516 = !DILocation(line: 1219, column: 7, scope: !9506)
!9517 = !DILocation(line: 1219, column: 11, scope: !9506)
!9518 = !DILocation(line: 1220, column: 1, scope: !9506)
!9519 = distinct !DISubprogram(name: "QMC_initSampler", scope: !3, file: !3, line: 1048, type: !9520, scopeLine: 1049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9520 = !DISubroutineType(types: !9521)
!9521 = !{!4896, !8, !8}
!9522 = !DILocalVariable(name: "type", arg: 1, scope: !9519, file: !3, line: 1048, type: !8)
!9523 = !DILocation(line: 1048, column: 47, scope: !9519)
!9524 = !DILocalVariable(name: "tot", arg: 2, scope: !9519, file: !3, line: 1048, type: !8)
!9525 = !DILocation(line: 1048, column: 57, scope: !9519)
!9526 = !DILocalVariable(name: "qsa", scope: !9519, file: !3, line: 1050, type: !4891)
!9527 = !DILocation(line: 1050, column: 14, scope: !9519)
!9528 = !DILocation(line: 1050, column: 20, scope: !9519)
!9529 = !DILocation(line: 1051, column: 16, scope: !9519)
!9530 = !DILocation(line: 1051, column: 45, scope: !9519)
!9531 = !DILocation(line: 1051, column: 44, scope: !9519)
!9532 = !DILocation(line: 1051, column: 2, scope: !9519)
!9533 = !DILocation(line: 1051, column: 7, scope: !9519)
!9534 = !DILocation(line: 1051, column: 14, scope: !9519)
!9535 = !DILocation(line: 1053, column: 13, scope: !9519)
!9536 = !DILocation(line: 1053, column: 2, scope: !9519)
!9537 = !DILocation(line: 1053, column: 7, scope: !9519)
!9538 = !DILocation(line: 1053, column: 11, scope: !9519)
!9539 = !DILocation(line: 1054, column: 14, scope: !9519)
!9540 = !DILocation(line: 1054, column: 2, scope: !9519)
!9541 = !DILocation(line: 1054, column: 7, scope: !9519)
!9542 = !DILocation(line: 1054, column: 12, scope: !9519)
!9543 = !DILocation(line: 1056, column: 6, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 1056, column: 6)
!9545 = !DILocation(line: 1056, column: 11, scope: !9544)
!9546 = !DILocation(line: 1056, column: 15, scope: !9544)
!9547 = !DILocation(line: 1056, column: 6, scope: !9519)
!9548 = !DILocation(line: 1057, column: 21, scope: !9544)
!9549 = !DILocation(line: 1057, column: 26, scope: !9544)
!9550 = !DILocation(line: 1057, column: 34, scope: !9544)
!9551 = !DILocation(line: 1057, column: 39, scope: !9544)
!9552 = !DILocation(line: 1057, column: 3, scope: !9544)
!9553 = !DILocation(line: 1059, column: 9, scope: !9519)
!9554 = !DILocation(line: 1059, column: 2, scope: !9519)
!9555 = distinct !DISubprogram(name: "hammersley_create", scope: !3, file: !3, line: 1030, type: !9556, scopeLine: 1031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9556 = !DISubroutineType(types: !9557)
!9557 = !{null, !4902, !8}
!9558 = !DILocalVariable(name: "out", arg: 1, scope: !9555, file: !3, line: 1030, type: !4902)
!9559 = !DILocation(line: 1030, column: 39, scope: !9555)
!9560 = !DILocalVariable(name: "n", arg: 2, scope: !9555, file: !3, line: 1030, type: !8)
!9561 = !DILocation(line: 1030, column: 48, scope: !9555)
!9562 = !DILocalVariable(name: "p", scope: !9555, file: !3, line: 1032, type: !2745)
!9563 = !DILocation(line: 1032, column: 9, scope: !9555)
!9564 = !DILocalVariable(name: "t", scope: !9555, file: !3, line: 1032, type: !2745)
!9565 = !DILocation(line: 1032, column: 12, scope: !9555)
!9566 = !DILocalVariable(name: "k", scope: !9555, file: !3, line: 1033, type: !8)
!9567 = !DILocation(line: 1033, column: 6, scope: !9555)
!9568 = !DILocalVariable(name: "kk", scope: !9555, file: !3, line: 1033, type: !8)
!9569 = !DILocation(line: 1033, column: 9, scope: !9555)
!9570 = !DILocation(line: 1035, column: 9, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 1035, column: 2)
!9572 = !DILocation(line: 1035, column: 7, scope: !9571)
!9573 = !DILocation(line: 1035, column: 14, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 1035, column: 2)
!9575 = !DILocation(line: 1035, column: 18, scope: !9574)
!9576 = !DILocation(line: 1035, column: 16, scope: !9574)
!9577 = !DILocation(line: 1035, column: 2, scope: !9571)
!9578 = !DILocation(line: 1036, column: 5, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 1035, column: 26)
!9580 = !DILocation(line: 1037, column: 10, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 1037, column: 3)
!9582 = !DILocation(line: 1037, column: 22, scope: !9581)
!9583 = !DILocation(line: 1037, column: 20, scope: !9581)
!9584 = !DILocation(line: 1037, column: 8, scope: !9581)
!9585 = !DILocation(line: 1037, column: 25, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 1037, column: 3)
!9587 = !DILocation(line: 1037, column: 3, scope: !9581)
!9588 = !DILocation(line: 1038, column: 8, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 1038, column: 8)
!9590 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 1037, column: 49)
!9591 = !DILocation(line: 1038, column: 11, scope: !9589)
!9592 = !DILocation(line: 1038, column: 8, scope: !9590)
!9593 = !DILocation(line: 1039, column: 10, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 1038, column: 16)
!9595 = !DILocation(line: 1039, column: 7, scope: !9594)
!9596 = !DILocation(line: 1040, column: 4, scope: !9594)
!9597 = !DILocation(line: 1041, column: 3, scope: !9590)
!9598 = !DILocation(line: 1037, column: 31, scope: !9586)
!9599 = !DILocation(line: 1037, column: 42, scope: !9586)
!9600 = !DILocation(line: 1037, column: 3, scope: !9586)
!9601 = distinct !{!9601, !9587, !9602}
!9602 = !DILocation(line: 1041, column: 3, scope: !9581)
!9603 = !DILocation(line: 1043, column: 28, scope: !9579)
!9604 = !DILocation(line: 1043, column: 20, scope: !9579)
!9605 = !DILocation(line: 1043, column: 40, scope: !9579)
!9606 = !DILocation(line: 1043, column: 32, scope: !9579)
!9607 = !DILocation(line: 1043, column: 30, scope: !9579)
!9608 = !DILocation(line: 1043, column: 3, scope: !9579)
!9609 = !DILocation(line: 1043, column: 11, scope: !9579)
!9610 = !DILocation(line: 1043, column: 9, scope: !9579)
!9611 = !DILocation(line: 1043, column: 13, scope: !9579)
!9612 = !DILocation(line: 1043, column: 18, scope: !9579)
!9613 = !DILocation(line: 1044, column: 20, scope: !9579)
!9614 = !DILocation(line: 1044, column: 3, scope: !9579)
!9615 = !DILocation(line: 1044, column: 11, scope: !9579)
!9616 = !DILocation(line: 1044, column: 9, scope: !9579)
!9617 = !DILocation(line: 1044, column: 13, scope: !9579)
!9618 = !DILocation(line: 1044, column: 18, scope: !9579)
!9619 = !DILocation(line: 1045, column: 2, scope: !9579)
!9620 = !DILocation(line: 1035, column: 22, scope: !9574)
!9621 = !DILocation(line: 1035, column: 2, scope: !9574)
!9622 = distinct !{!9622, !9577, !9623}
!9623 = !DILocation(line: 1045, column: 2, scope: !9571)
!9624 = !DILocation(line: 1046, column: 1, scope: !9555)
!9625 = distinct !DISubprogram(name: "halton_sample", scope: !3, file: !3, line: 1001, type: !9626, scopeLine: 1002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9626 = !DISubroutineType(types: !9627)
!9627 = !{null, !4902, !4902, !4902}
!9628 = !DILocalVariable(name: "ht_invprimes", arg: 1, scope: !9625, file: !3, line: 1001, type: !4902)
!9629 = !DILocation(line: 1001, column: 35, scope: !9625)
!9630 = !DILocalVariable(name: "ht_nums", arg: 2, scope: !9625, file: !3, line: 1001, type: !4902)
!9631 = !DILocation(line: 1001, column: 57, scope: !9625)
!9632 = !DILocalVariable(name: "v", arg: 3, scope: !9625, file: !3, line: 1001, type: !4902)
!9633 = !DILocation(line: 1001, column: 74, scope: !9625)
!9634 = !DILocalVariable(name: "i", scope: !9625, file: !3, line: 1005, type: !202)
!9635 = !DILocation(line: 1005, column: 15, scope: !9625)
!9636 = !DILocation(line: 1007, column: 9, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 1007, column: 2)
!9638 = !DILocation(line: 1007, column: 7, scope: !9637)
!9639 = !DILocation(line: 1007, column: 14, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 1007, column: 2)
!9641 = !DILocation(line: 1007, column: 16, scope: !9640)
!9642 = !DILocation(line: 1007, column: 2, scope: !9637)
!9643 = !DILocalVariable(name: "r", scope: !9644, file: !3, line: 1008, type: !2745)
!9644 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 1007, column: 26)
!9645 = !DILocation(line: 1008, column: 10, scope: !9644)
!9646 = !DILocation(line: 1008, column: 26, scope: !9644)
!9647 = !DILocation(line: 1008, column: 34, scope: !9644)
!9648 = !DILocation(line: 1008, column: 24, scope: !9644)
!9649 = !DILocation(line: 1008, column: 38, scope: !9644)
!9650 = !DILocation(line: 1008, column: 14, scope: !9644)
!9651 = !DILocation(line: 1010, column: 7, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 1010, column: 7)
!9653 = !DILocation(line: 1010, column: 20, scope: !9652)
!9654 = !DILocation(line: 1010, column: 26, scope: !9652)
!9655 = !DILocation(line: 1010, column: 23, scope: !9652)
!9656 = !DILocation(line: 1010, column: 7, scope: !9644)
!9657 = !DILocalVariable(name: "lasth", scope: !9658, file: !3, line: 1011, type: !2745)
!9658 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 1010, column: 29)
!9659 = !DILocation(line: 1011, column: 11, scope: !9658)
!9660 = !DILocalVariable(name: "h", scope: !9658, file: !3, line: 1012, type: !2745)
!9661 = !DILocation(line: 1012, column: 11, scope: !9658)
!9662 = !DILocation(line: 1012, column: 15, scope: !9658)
!9663 = !DILocation(line: 1012, column: 28, scope: !9658)
!9664 = !DILocation(line: 1014, column: 4, scope: !9658)
!9665 = !DILocation(line: 1015, column: 13, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9658, file: !3, line: 1014, column: 7)
!9667 = !DILocation(line: 1015, column: 11, scope: !9666)
!9668 = !DILocation(line: 1016, column: 10, scope: !9666)
!9669 = !DILocation(line: 1016, column: 23, scope: !9666)
!9670 = !DILocation(line: 1016, column: 7, scope: !9666)
!9671 = !DILocation(line: 1017, column: 4, scope: !9666)
!9672 = !DILocation(line: 1017, column: 13, scope: !9658)
!9673 = !DILocation(line: 1017, column: 18, scope: !9658)
!9674 = !DILocation(line: 1017, column: 15, scope: !9658)
!9675 = distinct !{!9675, !9664, !9676}
!9676 = !DILocation(line: 1017, column: 19, scope: !9658)
!9677 = !DILocation(line: 1019, column: 20, scope: !9658)
!9678 = !DILocation(line: 1019, column: 28, scope: !9658)
!9679 = !DILocation(line: 1019, column: 26, scope: !9658)
!9680 = !DILocation(line: 1019, column: 31, scope: !9658)
!9681 = !DILocation(line: 1019, column: 4, scope: !9658)
!9682 = !DILocation(line: 1019, column: 12, scope: !9658)
!9683 = !DILocation(line: 1019, column: 15, scope: !9658)
!9684 = !DILocation(line: 1020, column: 3, scope: !9658)
!9685 = !DILocation(line: 1022, column: 18, scope: !9652)
!9686 = !DILocation(line: 1022, column: 31, scope: !9652)
!9687 = !DILocation(line: 1022, column: 4, scope: !9652)
!9688 = !DILocation(line: 1022, column: 12, scope: !9652)
!9689 = !DILocation(line: 1022, column: 15, scope: !9652)
!9690 = !DILocation(line: 1024, column: 17, scope: !9644)
!9691 = !DILocation(line: 1024, column: 25, scope: !9644)
!9692 = !DILocation(line: 1024, column: 10, scope: !9644)
!9693 = !DILocation(line: 1024, column: 3, scope: !9644)
!9694 = !DILocation(line: 1024, column: 5, scope: !9644)
!9695 = !DILocation(line: 1024, column: 8, scope: !9644)
!9696 = !DILocation(line: 1025, column: 2, scope: !9644)
!9697 = !DILocation(line: 1007, column: 22, scope: !9640)
!9698 = !DILocation(line: 1007, column: 2, scope: !9640)
!9699 = distinct !{!9699, !9642, !9700}
!9700 = !DILocation(line: 1025, column: 2, scope: !9637)
!9701 = !DILocation(line: 1026, column: 1, scope: !9625)
!9702 = distinct !DISubprogram(name: "madd_v3_v3v3fl", scope: !3654, file: !3654, line: 527, type: !9703, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9703 = !DISubroutineType(types: !9704)
!9704 = !{null, !6, !3669, !3669, !7}
!9705 = !DILocalVariable(name: "r", arg: 1, scope: !9702, file: !3654, line: 527, type: !6)
!9706 = !DILocation(line: 527, column: 35, scope: !9702)
!9707 = !DILocalVariable(name: "a", arg: 2, scope: !9702, file: !3654, line: 527, type: !3669)
!9708 = !DILocation(line: 527, column: 53, scope: !9702)
!9709 = !DILocalVariable(name: "b", arg: 3, scope: !9702, file: !3654, line: 527, type: !3669)
!9710 = !DILocation(line: 527, column: 71, scope: !9702)
!9711 = !DILocalVariable(name: "f", arg: 4, scope: !9702, file: !3654, line: 527, type: !7)
!9712 = !DILocation(line: 527, column: 83, scope: !9702)
!9713 = !DILocation(line: 529, column: 9, scope: !9702)
!9714 = !DILocation(line: 529, column: 16, scope: !9702)
!9715 = !DILocation(line: 529, column: 23, scope: !9702)
!9716 = !DILocation(line: 529, column: 21, scope: !9702)
!9717 = !DILocation(line: 529, column: 14, scope: !9702)
!9718 = !DILocation(line: 529, column: 2, scope: !9702)
!9719 = !DILocation(line: 529, column: 7, scope: !9702)
!9720 = !DILocation(line: 530, column: 9, scope: !9702)
!9721 = !DILocation(line: 530, column: 16, scope: !9702)
!9722 = !DILocation(line: 530, column: 23, scope: !9702)
!9723 = !DILocation(line: 530, column: 21, scope: !9702)
!9724 = !DILocation(line: 530, column: 14, scope: !9702)
!9725 = !DILocation(line: 530, column: 2, scope: !9702)
!9726 = !DILocation(line: 530, column: 7, scope: !9702)
!9727 = !DILocation(line: 531, column: 9, scope: !9702)
!9728 = !DILocation(line: 531, column: 16, scope: !9702)
!9729 = !DILocation(line: 531, column: 23, scope: !9702)
!9730 = !DILocation(line: 531, column: 21, scope: !9702)
!9731 = !DILocation(line: 531, column: 14, scope: !9702)
!9732 = !DILocation(line: 531, column: 2, scope: !9702)
!9733 = !DILocation(line: 531, column: 7, scope: !9702)
!9734 = !DILocation(line: 532, column: 1, scope: !9702)
!9735 = distinct !DISubprogram(name: "QMC_getSample", scope: !3, file: !3, line: 1098, type: !9736, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9736 = !DISubroutineType(types: !9737)
!9737 = !{null, !4902, !4891, !8, !8}
!9738 = !DILocalVariable(name: "s", arg: 1, scope: !9735, file: !3, line: 1098, type: !4902)
!9739 = !DILocation(line: 1098, column: 35, scope: !9735)
!9740 = !DILocalVariable(name: "qsa", arg: 2, scope: !9735, file: !3, line: 1098, type: !4891)
!9741 = !DILocation(line: 1098, column: 50, scope: !9735)
!9742 = !DILocalVariable(name: "thread", arg: 3, scope: !9735, file: !3, line: 1098, type: !8)
!9743 = !DILocation(line: 1098, column: 59, scope: !9735)
!9744 = !DILocalVariable(name: "num", arg: 4, scope: !9735, file: !3, line: 1098, type: !8)
!9745 = !DILocation(line: 1098, column: 71, scope: !9735)
!9746 = !DILocation(line: 1100, column: 6, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 1100, column: 6)
!9748 = !DILocation(line: 1100, column: 11, scope: !9747)
!9749 = !DILocation(line: 1100, column: 16, scope: !9747)
!9750 = !DILocation(line: 1100, column: 6, scope: !9735)
!9751 = !DILocation(line: 1101, column: 15, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 1100, column: 41)
!9753 = !DILocation(line: 1101, column: 20, scope: !9752)
!9754 = !DILocation(line: 1101, column: 29, scope: !9752)
!9755 = !DILocation(line: 1101, column: 28, scope: !9752)
!9756 = !DILocation(line: 1101, column: 32, scope: !9752)
!9757 = !DILocation(line: 1101, column: 38, scope: !9752)
!9758 = !DILocation(line: 1101, column: 43, scope: !9752)
!9759 = !DILocation(line: 1101, column: 48, scope: !9752)
!9760 = !DILocation(line: 1101, column: 36, scope: !9752)
!9761 = !DILocation(line: 1101, column: 10, scope: !9752)
!9762 = !DILocation(line: 1101, column: 3, scope: !9752)
!9763 = !DILocation(line: 1101, column: 8, scope: !9752)
!9764 = !DILocation(line: 1102, column: 15, scope: !9752)
!9765 = !DILocation(line: 1102, column: 20, scope: !9752)
!9766 = !DILocation(line: 1102, column: 29, scope: !9752)
!9767 = !DILocation(line: 1102, column: 28, scope: !9752)
!9768 = !DILocation(line: 1102, column: 32, scope: !9752)
!9769 = !DILocation(line: 1102, column: 38, scope: !9752)
!9770 = !DILocation(line: 1102, column: 43, scope: !9752)
!9771 = !DILocation(line: 1102, column: 48, scope: !9752)
!9772 = !DILocation(line: 1102, column: 36, scope: !9752)
!9773 = !DILocation(line: 1102, column: 10, scope: !9752)
!9774 = !DILocation(line: 1102, column: 3, scope: !9752)
!9775 = !DILocation(line: 1102, column: 8, scope: !9752)
!9776 = !DILocation(line: 1103, column: 2, scope: !9752)
!9777 = !DILocation(line: 1105, column: 10, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 1104, column: 7)
!9779 = !DILocation(line: 1105, column: 15, scope: !9778)
!9780 = !DILocation(line: 1105, column: 24, scope: !9778)
!9781 = !DILocation(line: 1105, column: 23, scope: !9778)
!9782 = !DILocation(line: 1105, column: 27, scope: !9778)
!9783 = !DILocation(line: 1105, column: 3, scope: !9778)
!9784 = !DILocation(line: 1105, column: 8, scope: !9778)
!9785 = !DILocation(line: 1106, column: 10, scope: !9778)
!9786 = !DILocation(line: 1106, column: 15, scope: !9778)
!9787 = !DILocation(line: 1106, column: 24, scope: !9778)
!9788 = !DILocation(line: 1106, column: 23, scope: !9778)
!9789 = !DILocation(line: 1106, column: 27, scope: !9778)
!9790 = !DILocation(line: 1106, column: 3, scope: !9778)
!9791 = !DILocation(line: 1106, column: 8, scope: !9778)
!9792 = !DILocation(line: 1108, column: 1, scope: !9735)
!9793 = distinct !DISubprogram(name: "zero_v4", scope: !3654, file: !3654, line: 50, type: !3655, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9794 = !DILocalVariable(name: "r", arg: 1, scope: !9793, file: !3654, line: 50, type: !6)
!9795 = !DILocation(line: 50, column: 28, scope: !9793)
!9796 = !DILocation(line: 52, column: 2, scope: !9793)
!9797 = !DILocation(line: 52, column: 7, scope: !9793)
!9798 = !DILocation(line: 53, column: 2, scope: !9793)
!9799 = !DILocation(line: 53, column: 7, scope: !9793)
!9800 = !DILocation(line: 54, column: 2, scope: !9793)
!9801 = !DILocation(line: 54, column: 7, scope: !9793)
!9802 = !DILocation(line: 55, column: 2, scope: !9793)
!9803 = !DILocation(line: 55, column: 7, scope: !9793)
!9804 = !DILocation(line: 56, column: 1, scope: !9793)
!9805 = distinct !DISubprogram(name: "shade_by_transmission", scope: !3, file: !3, line: 638, type: !9806, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9806 = !DISubroutineType(types: !9807)
!9807 = !{!7, !3681, !3683, !3824}
!9808 = !DILocalVariable(name: "is", arg: 1, scope: !9805, file: !3, line: 638, type: !3681)
!9809 = !DILocation(line: 638, column: 43, scope: !9805)
!9810 = !DILocalVariable(name: "shi", arg: 2, scope: !9805, file: !3, line: 638, type: !3683)
!9811 = !DILocation(line: 638, column: 59, scope: !9805)
!9812 = !DILocalVariable(name: "shr", arg: 3, scope: !9805, file: !3, line: 638, type: !3824)
!9813 = !DILocation(line: 638, column: 77, scope: !9805)
!9814 = !DILocalVariable(name: "d", scope: !9805, file: !3, line: 640, type: !7)
!9815 = !DILocation(line: 640, column: 8, scope: !9805)
!9816 = !DILocation(line: 641, column: 12, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 641, column: 6)
!9818 = !DILocation(line: 641, column: 17, scope: !9817)
!9819 = !DILocation(line: 641, column: 22, scope: !9817)
!9820 = !DILocation(line: 641, column: 27, scope: !9817)
!9821 = !DILocation(line: 641, column: 8, scope: !9817)
!9822 = !DILocation(line: 641, column: 6, scope: !9805)
!9823 = !DILocation(line: 642, column: 3, scope: !9817)
!9824 = !DILocation(line: 644, column: 6, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 644, column: 6)
!9826 = !DILocation(line: 644, column: 11, scope: !9825)
!9827 = !DILocation(line: 644, column: 16, scope: !9825)
!9828 = !DILocation(line: 644, column: 25, scope: !9825)
!9829 = !DILocation(line: 644, column: 6, scope: !9805)
!9830 = !DILocation(line: 645, column: 4, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 644, column: 34)
!9832 = !DILocation(line: 646, column: 2, scope: !9831)
!9833 = !DILocalVariable(name: "p", scope: !9834, file: !3, line: 648, type: !7)
!9834 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 647, column: 7)
!9835 = !DILocation(line: 648, column: 9, scope: !9834)
!9836 = !DILocalVariable(name: "dx", scope: !9834, file: !3, line: 651, type: !3670)
!9837 = !DILocation(line: 651, column: 15, scope: !9834)
!9838 = !DILocation(line: 651, column: 19, scope: !9834)
!9839 = !DILocation(line: 651, column: 24, scope: !9834)
!9840 = !DILocation(line: 651, column: 32, scope: !9834)
!9841 = !DILocation(line: 651, column: 36, scope: !9834)
!9842 = !DILocation(line: 651, column: 30, scope: !9834)
!9843 = !DILocalVariable(name: "dy", scope: !9834, file: !3, line: 652, type: !3670)
!9844 = !DILocation(line: 652, column: 15, scope: !9834)
!9845 = !DILocation(line: 652, column: 19, scope: !9834)
!9846 = !DILocation(line: 652, column: 24, scope: !9834)
!9847 = !DILocation(line: 652, column: 32, scope: !9834)
!9848 = !DILocation(line: 652, column: 36, scope: !9834)
!9849 = !DILocation(line: 652, column: 30, scope: !9834)
!9850 = !DILocalVariable(name: "dz", scope: !9834, file: !3, line: 653, type: !3670)
!9851 = !DILocation(line: 653, column: 15, scope: !9834)
!9852 = !DILocation(line: 653, column: 19, scope: !9834)
!9853 = !DILocation(line: 653, column: 24, scope: !9834)
!9854 = !DILocation(line: 653, column: 32, scope: !9834)
!9855 = !DILocation(line: 653, column: 36, scope: !9834)
!9856 = !DILocation(line: 653, column: 30, scope: !9834)
!9857 = !DILocation(line: 654, column: 13, scope: !9834)
!9858 = !DILocation(line: 654, column: 18, scope: !9834)
!9859 = !DILocation(line: 654, column: 16, scope: !9834)
!9860 = !DILocation(line: 654, column: 23, scope: !9834)
!9861 = !DILocation(line: 654, column: 28, scope: !9834)
!9862 = !DILocation(line: 654, column: 26, scope: !9834)
!9863 = !DILocation(line: 654, column: 21, scope: !9834)
!9864 = !DILocation(line: 654, column: 33, scope: !9834)
!9865 = !DILocation(line: 654, column: 38, scope: !9834)
!9866 = !DILocation(line: 654, column: 36, scope: !9834)
!9867 = !DILocation(line: 654, column: 31, scope: !9834)
!9868 = !DILocation(line: 654, column: 7, scope: !9834)
!9869 = !DILocation(line: 654, column: 5, scope: !9834)
!9870 = !DILocation(line: 655, column: 7, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 655, column: 7)
!9872 = !DILocation(line: 655, column: 11, scope: !9871)
!9873 = !DILocation(line: 655, column: 16, scope: !9871)
!9874 = !DILocation(line: 655, column: 21, scope: !9871)
!9875 = !DILocation(line: 655, column: 9, scope: !9871)
!9876 = !DILocation(line: 655, column: 7, scope: !9834)
!9877 = !DILocation(line: 656, column: 7, scope: !9871)
!9878 = !DILocation(line: 656, column: 12, scope: !9871)
!9879 = !DILocation(line: 656, column: 17, scope: !9871)
!9880 = !DILocation(line: 656, column: 5, scope: !9871)
!9881 = !DILocation(line: 656, column: 4, scope: !9871)
!9882 = !DILocation(line: 658, column: 7, scope: !9834)
!9883 = !DILocation(line: 658, column: 12, scope: !9834)
!9884 = !DILocation(line: 658, column: 17, scope: !9834)
!9885 = !DILocation(line: 658, column: 5, scope: !9834)
!9886 = !DILocation(line: 659, column: 7, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 659, column: 7)
!9888 = !DILocation(line: 659, column: 9, scope: !9887)
!9889 = !DILocation(line: 659, column: 7, scope: !9834)
!9890 = !DILocation(line: 659, column: 18, scope: !9887)
!9891 = !DILocation(line: 659, column: 17, scope: !9887)
!9892 = !DILocation(line: 660, column: 12, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 660, column: 12)
!9894 = !DILocation(line: 660, column: 14, scope: !9893)
!9895 = !DILocation(line: 660, column: 12, scope: !9887)
!9896 = !DILocation(line: 660, column: 24, scope: !9893)
!9897 = !DILocation(line: 660, column: 23, scope: !9893)
!9898 = !DILocation(line: 662, column: 22, scope: !9834)
!9899 = !DILocation(line: 662, column: 25, scope: !9834)
!9900 = !DILocation(line: 662, column: 17, scope: !9834)
!9901 = !DILocation(line: 662, column: 3, scope: !9834)
!9902 = !DILocation(line: 662, column: 8, scope: !9834)
!9903 = !DILocation(line: 662, column: 14, scope: !9834)
!9904 = !DILocation(line: 663, column: 7, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 663, column: 7)
!9906 = !DILocation(line: 663, column: 12, scope: !9905)
!9907 = !DILocation(line: 663, column: 18, scope: !9905)
!9908 = !DILocation(line: 663, column: 7, scope: !9834)
!9909 = !DILocation(line: 664, column: 4, scope: !9905)
!9910 = !DILocation(line: 664, column: 9, scope: !9905)
!9911 = !DILocation(line: 664, column: 14, scope: !9905)
!9912 = !DILocation(line: 667, column: 9, scope: !9805)
!9913 = !DILocation(line: 667, column: 2, scope: !9805)
!9914 = !DILocation(line: 668, column: 1, scope: !9805)
!9915 = distinct !DISubprogram(name: "ray_fadeout_endcolor", scope: !3, file: !3, line: 670, type: !9916, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9916 = !DISubroutineType(types: !9917)
!9917 = !{null, !6, !3683, !3683, !3824, !3681, !3669}
!9918 = !DILocalVariable(name: "col", arg: 1, scope: !9915, file: !3, line: 670, type: !6)
!9919 = !DILocation(line: 670, column: 40, scope: !9915)
!9920 = !DILocalVariable(name: "origshi", arg: 2, scope: !9915, file: !3, line: 670, type: !3683)
!9921 = !DILocation(line: 670, column: 60, scope: !9915)
!9922 = !DILocalVariable(name: "shi", arg: 3, scope: !9915, file: !3, line: 670, type: !3683)
!9923 = !DILocation(line: 670, column: 81, scope: !9915)
!9924 = !DILocalVariable(name: "shr", arg: 4, scope: !9915, file: !3, line: 670, type: !3824)
!9925 = !DILocation(line: 670, column: 99, scope: !9915)
!9926 = !DILocalVariable(name: "isec", arg: 5, scope: !9915, file: !3, line: 670, type: !3681)
!9927 = !DILocation(line: 670, column: 111, scope: !9915)
!9928 = !DILocalVariable(name: "vec", arg: 6, scope: !9915, file: !3, line: 670, type: !3669)
!9929 = !DILocation(line: 670, column: 129, scope: !9915)
!9930 = !DILocation(line: 673, column: 6, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 673, column: 6)
!9932 = !DILocation(line: 673, column: 15, scope: !9931)
!9933 = !DILocation(line: 673, column: 20, scope: !9931)
!9934 = !DILocation(line: 673, column: 31, scope: !9931)
!9935 = !DILocation(line: 673, column: 6, scope: !9915)
!9936 = !DILocation(line: 674, column: 14, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 673, column: 55)
!9938 = !DILocation(line: 674, column: 19, scope: !9937)
!9939 = !DILocation(line: 674, column: 24, scope: !9937)
!9940 = !DILocation(line: 674, column: 3, scope: !9937)
!9941 = !DILocation(line: 675, column: 2, scope: !9937)
!9942 = !DILocation(line: 676, column: 11, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 676, column: 11)
!9944 = !DILocation(line: 676, column: 20, scope: !9943)
!9945 = !DILocation(line: 676, column: 25, scope: !9943)
!9946 = !DILocation(line: 676, column: 36, scope: !9943)
!9947 = !DILocation(line: 676, column: 11, scope: !9931)
!9948 = !DILocation(line: 677, column: 14, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 676, column: 60)
!9950 = !DILocation(line: 677, column: 19, scope: !9949)
!9951 = !DILocation(line: 677, column: 25, scope: !9949)
!9952 = !DILocation(line: 677, column: 3, scope: !9949)
!9953 = !DILocation(line: 678, column: 16, scope: !9949)
!9954 = !DILocation(line: 678, column: 21, scope: !9949)
!9955 = !DILocation(line: 678, column: 3, scope: !9949)
!9956 = !DILocation(line: 680, column: 16, scope: !9949)
!9957 = !DILocation(line: 680, column: 21, scope: !9949)
!9958 = !DILocation(line: 680, column: 27, scope: !9949)
!9959 = !DILocation(line: 680, column: 34, scope: !9949)
!9960 = !DILocation(line: 680, column: 39, scope: !9949)
!9961 = !DILocation(line: 680, column: 51, scope: !9949)
!9962 = !DILocation(line: 680, column: 56, scope: !9949)
!9963 = !DILocation(line: 680, column: 3, scope: !9949)
!9964 = !DILocation(line: 681, column: 16, scope: !9949)
!9965 = !DILocation(line: 681, column: 21, scope: !9949)
!9966 = !DILocation(line: 681, column: 26, scope: !9949)
!9967 = !DILocation(line: 681, column: 3, scope: !9949)
!9968 = !DILocation(line: 682, column: 2, scope: !9949)
!9969 = !DILocation(line: 683, column: 1, scope: !9915)
!9970 = distinct !DISubprogram(name: "ray_fadeout", scope: !3, file: !3, line: 685, type: !9971, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!9971 = !DISubroutineType(types: !9972)
!9972 = !{null, !3681, !3683, !6, !3669, !7}
!9973 = !DILocalVariable(name: "is", arg: 1, scope: !9970, file: !3, line: 685, type: !3681)
!9974 = !DILocation(line: 685, column: 32, scope: !9970)
!9975 = !DILocalVariable(name: "shi", arg: 2, scope: !9970, file: !3, line: 685, type: !3683)
!9976 = !DILocation(line: 685, column: 48, scope: !9970)
!9977 = !DILocalVariable(name: "col", arg: 3, scope: !9970, file: !3, line: 685, type: !6)
!9978 = !DILocation(line: 685, column: 59, scope: !9970)
!9979 = !DILocalVariable(name: "blendcol", arg: 4, scope: !9970, file: !3, line: 685, type: !3669)
!9980 = !DILocation(line: 685, column: 79, scope: !9970)
!9981 = !DILocalVariable(name: "dist_mir", arg: 5, scope: !9970, file: !3, line: 685, type: !7)
!9982 = !DILocation(line: 685, column: 98, scope: !9970)
!9983 = !DILocalVariable(name: "blendfac", scope: !9970, file: !3, line: 688, type: !7)
!9984 = !DILocation(line: 688, column: 8, scope: !9970)
!9985 = !DILocation(line: 690, column: 29, scope: !9970)
!9986 = !DILocation(line: 690, column: 34, scope: !9970)
!9987 = !DILocation(line: 690, column: 38, scope: !9970)
!9988 = !DILocation(line: 690, column: 42, scope: !9970)
!9989 = !DILocation(line: 690, column: 20, scope: !9970)
!9990 = !DILocation(line: 690, column: 49, scope: !9970)
!9991 = !DILocation(line: 690, column: 48, scope: !9970)
!9992 = !DILocation(line: 690, column: 18, scope: !9970)
!9993 = !DILocation(line: 690, column: 11, scope: !9970)
!9994 = !DILocation(line: 692, column: 11, scope: !9970)
!9995 = !DILocation(line: 692, column: 18, scope: !9970)
!9996 = !DILocation(line: 692, column: 17, scope: !9970)
!9997 = !DILocation(line: 692, column: 37, scope: !9970)
!9998 = !DILocation(line: 692, column: 35, scope: !9970)
!9999 = !DILocation(line: 692, column: 47, scope: !9970)
!10000 = !DILocation(line: 692, column: 46, scope: !9970)
!10001 = !DILocation(line: 692, column: 27, scope: !9970)
!10002 = !DILocation(line: 692, column: 2, scope: !9970)
!10003 = !DILocation(line: 692, column: 9, scope: !9970)
!10004 = !DILocation(line: 693, column: 11, scope: !9970)
!10005 = !DILocation(line: 693, column: 18, scope: !9970)
!10006 = !DILocation(line: 693, column: 17, scope: !9970)
!10007 = !DILocation(line: 693, column: 37, scope: !9970)
!10008 = !DILocation(line: 693, column: 35, scope: !9970)
!10009 = !DILocation(line: 693, column: 47, scope: !9970)
!10010 = !DILocation(line: 693, column: 46, scope: !9970)
!10011 = !DILocation(line: 693, column: 27, scope: !9970)
!10012 = !DILocation(line: 693, column: 2, scope: !9970)
!10013 = !DILocation(line: 693, column: 9, scope: !9970)
!10014 = !DILocation(line: 694, column: 11, scope: !9970)
!10015 = !DILocation(line: 694, column: 18, scope: !9970)
!10016 = !DILocation(line: 694, column: 17, scope: !9970)
!10017 = !DILocation(line: 694, column: 37, scope: !9970)
!10018 = !DILocation(line: 694, column: 35, scope: !9970)
!10019 = !DILocation(line: 694, column: 47, scope: !9970)
!10020 = !DILocation(line: 694, column: 46, scope: !9970)
!10021 = !DILocation(line: 694, column: 27, scope: !9970)
!10022 = !DILocation(line: 694, column: 2, scope: !9970)
!10023 = !DILocation(line: 694, column: 9, scope: !9970)
!10024 = !DILocation(line: 695, column: 1, scope: !9970)
!10025 = distinct !DISubprogram(name: "len_v3v3", scope: !3654, file: !3654, line: 759, type: !8309, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10026 = !DILocalVariable(name: "a", arg: 1, scope: !10025, file: !3654, line: 759, type: !3669)
!10027 = !DILocation(line: 759, column: 36, scope: !10025)
!10028 = !DILocalVariable(name: "b", arg: 2, scope: !10025, file: !3654, line: 759, type: !3669)
!10029 = !DILocation(line: 759, column: 54, scope: !10025)
!10030 = !DILocalVariable(name: "d", scope: !10025, file: !3654, line: 761, type: !206)
!10031 = !DILocation(line: 761, column: 8, scope: !10025)
!10032 = !DILocation(line: 763, column: 14, scope: !10025)
!10033 = !DILocation(line: 763, column: 17, scope: !10025)
!10034 = !DILocation(line: 763, column: 20, scope: !10025)
!10035 = !DILocation(line: 763, column: 2, scope: !10025)
!10036 = !DILocation(line: 764, column: 16, scope: !10025)
!10037 = !DILocation(line: 764, column: 9, scope: !10025)
!10038 = !DILocation(line: 764, column: 2, scope: !10025)
!10039 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !3654, file: !3654, line: 634, type: !4292, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10040 = !DILocalVariable(name: "r", arg: 1, scope: !10039, file: !3654, line: 634, type: !6)
!10041 = !DILocation(line: 634, column: 34, scope: !10039)
!10042 = !DILocalVariable(name: "a", arg: 2, scope: !10039, file: !3654, line: 634, type: !3669)
!10043 = !DILocation(line: 634, column: 52, scope: !10039)
!10044 = !DILocalVariable(name: "b", arg: 3, scope: !10039, file: !3654, line: 634, type: !3669)
!10045 = !DILocation(line: 634, column: 70, scope: !10039)
!10046 = !DILocation(line: 637, column: 9, scope: !10039)
!10047 = !DILocation(line: 637, column: 16, scope: !10039)
!10048 = !DILocation(line: 637, column: 14, scope: !10039)
!10049 = !DILocation(line: 637, column: 23, scope: !10039)
!10050 = !DILocation(line: 637, column: 30, scope: !10039)
!10051 = !DILocation(line: 637, column: 28, scope: !10039)
!10052 = !DILocation(line: 637, column: 21, scope: !10039)
!10053 = !DILocation(line: 637, column: 2, scope: !10039)
!10054 = !DILocation(line: 637, column: 7, scope: !10039)
!10055 = !DILocation(line: 638, column: 9, scope: !10039)
!10056 = !DILocation(line: 638, column: 16, scope: !10039)
!10057 = !DILocation(line: 638, column: 14, scope: !10039)
!10058 = !DILocation(line: 638, column: 23, scope: !10039)
!10059 = !DILocation(line: 638, column: 30, scope: !10039)
!10060 = !DILocation(line: 638, column: 28, scope: !10039)
!10061 = !DILocation(line: 638, column: 21, scope: !10039)
!10062 = !DILocation(line: 638, column: 2, scope: !10039)
!10063 = !DILocation(line: 638, column: 7, scope: !10039)
!10064 = !DILocation(line: 639, column: 9, scope: !10039)
!10065 = !DILocation(line: 639, column: 16, scope: !10039)
!10066 = !DILocation(line: 639, column: 14, scope: !10039)
!10067 = !DILocation(line: 639, column: 23, scope: !10039)
!10068 = !DILocation(line: 639, column: 30, scope: !10039)
!10069 = !DILocation(line: 639, column: 28, scope: !10039)
!10070 = !DILocation(line: 639, column: 21, scope: !10039)
!10071 = !DILocation(line: 639, column: 2, scope: !10039)
!10072 = !DILocation(line: 639, column: 7, scope: !10039)
!10073 = !DILocation(line: 640, column: 1, scope: !10039)
!10074 = distinct !DISubprogram(name: "get_avg_speed", scope: !3, file: !3, line: 1275, type: !10075, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10075 = !DISubroutineType(types: !10076)
!10076 = !{!7, !3683}
!10077 = !DILocalVariable(name: "shi", arg: 1, scope: !10074, file: !3, line: 1275, type: !3683)
!10078 = !DILocation(line: 1275, column: 40, scope: !10074)
!10079 = !DILocalVariable(name: "pre_x", scope: !10074, file: !3, line: 1277, type: !7)
!10080 = !DILocation(line: 1277, column: 8, scope: !10074)
!10081 = !DILocalVariable(name: "pre_y", scope: !10074, file: !3, line: 1277, type: !7)
!10082 = !DILocation(line: 1277, column: 15, scope: !10074)
!10083 = !DILocalVariable(name: "post_x", scope: !10074, file: !3, line: 1277, type: !7)
!10084 = !DILocation(line: 1277, column: 22, scope: !10074)
!10085 = !DILocalVariable(name: "post_y", scope: !10074, file: !3, line: 1277, type: !7)
!10086 = !DILocation(line: 1277, column: 30, scope: !10074)
!10087 = !DILocalVariable(name: "speedavg", scope: !10074, file: !3, line: 1277, type: !7)
!10088 = !DILocation(line: 1277, column: 38, scope: !10074)
!10089 = !DILocation(line: 1279, column: 11, scope: !10074)
!10090 = !DILocation(line: 1279, column: 16, scope: !10074)
!10091 = !DILocation(line: 1279, column: 28, scope: !10074)
!10092 = !DILocation(line: 1279, column: 10, scope: !10074)
!10093 = !DILocation(line: 1279, column: 53, scope: !10074)
!10094 = !DILocation(line: 1279, column: 58, scope: !10074)
!10095 = !DILocation(line: 1279, column: 8, scope: !10074)
!10096 = !DILocation(line: 1280, column: 11, scope: !10074)
!10097 = !DILocation(line: 1280, column: 16, scope: !10074)
!10098 = !DILocation(line: 1280, column: 28, scope: !10074)
!10099 = !DILocation(line: 1280, column: 10, scope: !10074)
!10100 = !DILocation(line: 1280, column: 53, scope: !10074)
!10101 = !DILocation(line: 1280, column: 58, scope: !10074)
!10102 = !DILocation(line: 1280, column: 8, scope: !10074)
!10103 = !DILocation(line: 1281, column: 12, scope: !10074)
!10104 = !DILocation(line: 1281, column: 17, scope: !10074)
!10105 = !DILocation(line: 1281, column: 29, scope: !10074)
!10106 = !DILocation(line: 1281, column: 11, scope: !10074)
!10107 = !DILocation(line: 1281, column: 54, scope: !10074)
!10108 = !DILocation(line: 1281, column: 59, scope: !10074)
!10109 = !DILocation(line: 1281, column: 9, scope: !10074)
!10110 = !DILocation(line: 1282, column: 12, scope: !10074)
!10111 = !DILocation(line: 1282, column: 17, scope: !10074)
!10112 = !DILocation(line: 1282, column: 29, scope: !10074)
!10113 = !DILocation(line: 1282, column: 11, scope: !10074)
!10114 = !DILocation(line: 1282, column: 54, scope: !10074)
!10115 = !DILocation(line: 1282, column: 59, scope: !10074)
!10116 = !DILocation(line: 1282, column: 9, scope: !10074)
!10117 = !DILocation(line: 1284, column: 20, scope: !10074)
!10118 = !DILocation(line: 1284, column: 28, scope: !10074)
!10119 = !DILocation(line: 1284, column: 26, scope: !10074)
!10120 = !DILocation(line: 1284, column: 36, scope: !10074)
!10121 = !DILocation(line: 1284, column: 44, scope: !10074)
!10122 = !DILocation(line: 1284, column: 42, scope: !10074)
!10123 = !DILocation(line: 1284, column: 34, scope: !10074)
!10124 = !DILocation(line: 1284, column: 14, scope: !10074)
!10125 = !DILocation(line: 1284, column: 59, scope: !10074)
!10126 = !DILocation(line: 1284, column: 68, scope: !10074)
!10127 = !DILocation(line: 1284, column: 66, scope: !10074)
!10128 = !DILocation(line: 1284, column: 77, scope: !10074)
!10129 = !DILocation(line: 1284, column: 86, scope: !10074)
!10130 = !DILocation(line: 1284, column: 84, scope: !10074)
!10131 = !DILocation(line: 1284, column: 75, scope: !10074)
!10132 = !DILocation(line: 1284, column: 53, scope: !10074)
!10133 = !DILocation(line: 1284, column: 51, scope: !10074)
!10134 = !DILocation(line: 1284, column: 13, scope: !10074)
!10135 = !DILocation(line: 1284, column: 95, scope: !10074)
!10136 = !DILocation(line: 1284, column: 11, scope: !10074)
!10137 = !DILocation(line: 1286, column: 9, scope: !10074)
!10138 = !DILocation(line: 1286, column: 2, scope: !10074)
!10139 = distinct !DISubprogram(name: "QMC_sampleHemi", scope: !3, file: !3, line: 1156, type: !10140, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10140 = !DISubroutineType(types: !10141)
!10141 = !{null, !6, !4891, !8, !8}
!10142 = !DILocalVariable(name: "vec", arg: 1, scope: !10139, file: !3, line: 1156, type: !6)
!10143 = !DILocation(line: 1156, column: 34, scope: !10139)
!10144 = !DILocalVariable(name: "qsa", arg: 2, scope: !10139, file: !3, line: 1156, type: !4891)
!10145 = !DILocation(line: 1156, column: 54, scope: !10139)
!10146 = !DILocalVariable(name: "thread", arg: 3, scope: !10139, file: !3, line: 1156, type: !8)
!10147 = !DILocation(line: 1156, column: 63, scope: !10139)
!10148 = !DILocalVariable(name: "num", arg: 4, scope: !10139, file: !3, line: 1156, type: !8)
!10149 = !DILocation(line: 1156, column: 75, scope: !10139)
!10150 = !DILocalVariable(name: "s", scope: !10139, file: !3, line: 1158, type: !8540)
!10151 = !DILocation(line: 1158, column: 9, scope: !10139)
!10152 = !DILocalVariable(name: "phi", scope: !10139, file: !3, line: 1159, type: !7)
!10153 = !DILocation(line: 1159, column: 8, scope: !10139)
!10154 = !DILocalVariable(name: "sqr", scope: !10139, file: !3, line: 1159, type: !7)
!10155 = !DILocation(line: 1159, column: 13, scope: !10139)
!10156 = !DILocation(line: 1161, column: 16, scope: !10139)
!10157 = !DILocation(line: 1161, column: 19, scope: !10139)
!10158 = !DILocation(line: 1161, column: 24, scope: !10139)
!10159 = !DILocation(line: 1161, column: 32, scope: !10139)
!10160 = !DILocation(line: 1161, column: 2, scope: !10139)
!10161 = !DILocation(line: 1163, column: 8, scope: !10139)
!10162 = !DILocation(line: 1163, column: 12, scope: !10139)
!10163 = !DILocation(line: 1163, column: 16, scope: !10139)
!10164 = !DILocation(line: 1163, column: 6, scope: !10139)
!10165 = !DILocation(line: 1164, column: 13, scope: !10139)
!10166 = !DILocation(line: 1164, column: 8, scope: !10139)
!10167 = !DILocation(line: 1164, column: 6, scope: !10139)
!10168 = !DILocation(line: 1166, column: 16, scope: !10139)
!10169 = !DILocation(line: 1166, column: 11, scope: !10139)
!10170 = !DILocation(line: 1166, column: 21, scope: !10139)
!10171 = !DILocation(line: 1166, column: 20, scope: !10139)
!10172 = !DILocation(line: 1166, column: 2, scope: !10139)
!10173 = !DILocation(line: 1166, column: 9, scope: !10139)
!10174 = !DILocation(line: 1167, column: 16, scope: !10139)
!10175 = !DILocation(line: 1167, column: 11, scope: !10139)
!10176 = !DILocation(line: 1167, column: 21, scope: !10139)
!10177 = !DILocation(line: 1167, column: 20, scope: !10139)
!10178 = !DILocation(line: 1167, column: 2, scope: !10139)
!10179 = !DILocation(line: 1167, column: 9, scope: !10139)
!10180 = !DILocation(line: 1168, column: 25, scope: !10139)
!10181 = !DILocation(line: 1168, column: 30, scope: !10139)
!10182 = !DILocation(line: 1168, column: 29, scope: !10139)
!10183 = !DILocation(line: 1168, column: 23, scope: !10139)
!10184 = !DILocation(line: 1168, column: 11, scope: !10139)
!10185 = !DILocation(line: 1168, column: 2, scope: !10139)
!10186 = !DILocation(line: 1168, column: 9, scope: !10139)
!10187 = !DILocation(line: 1169, column: 1, scope: !10139)
!10188 = distinct !DISubprogram(name: "adaptive_sample_contrast_val", scope: !3, file: !3, line: 1263, type: !10189, scopeLine: 1264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10189 = !DISubroutineType(types: !10190)
!10190 = !{!8, !8, !7, !7, !7}
!10191 = !DILocalVariable(name: "samples", arg: 1, scope: !10188, file: !3, line: 1263, type: !8)
!10192 = !DILocation(line: 1263, column: 45, scope: !10188)
!10193 = !DILocalVariable(name: "prev", arg: 2, scope: !10188, file: !3, line: 1263, type: !7)
!10194 = !DILocation(line: 1263, column: 60, scope: !10188)
!10195 = !DILocalVariable(name: "val", arg: 3, scope: !10188, file: !3, line: 1263, type: !7)
!10196 = !DILocation(line: 1263, column: 72, scope: !10188)
!10197 = !DILocalVariable(name: "thresh", arg: 4, scope: !10188, file: !3, line: 1263, type: !7)
!10198 = !DILocation(line: 1263, column: 83, scope: !10188)
!10199 = !DILocation(line: 1268, column: 12, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 1268, column: 6)
!10201 = !DILocation(line: 1268, column: 27, scope: !10200)
!10202 = !DILocation(line: 1268, column: 35, scope: !10200)
!10203 = !DILocation(line: 1268, column: 19, scope: !10200)
!10204 = !DILocation(line: 1268, column: 17, scope: !10200)
!10205 = !DILocation(line: 1268, column: 42, scope: !10200)
!10206 = !DILocation(line: 1268, column: 55, scope: !10200)
!10207 = !DILocation(line: 1268, column: 48, scope: !10200)
!10208 = !DILocation(line: 1268, column: 46, scope: !10200)
!10209 = !DILocation(line: 1268, column: 40, scope: !10200)
!10210 = !DILocation(line: 1268, column: 6, scope: !10200)
!10211 = !DILocation(line: 1268, column: 67, scope: !10200)
!10212 = !DILocation(line: 1268, column: 65, scope: !10200)
!10213 = !DILocation(line: 1268, column: 6, scope: !10188)
!10214 = !DILocation(line: 1269, column: 3, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10200, file: !3, line: 1268, column: 75)
!10216 = !DILocation(line: 1272, column: 3, scope: !10200)
!10217 = !DILocation(line: 1273, column: 1, scope: !10188)
!10218 = distinct !DISubprogram(name: "sphere_sampler", scope: !3, file: !3, line: 1750, type: !10219, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10219 = !DISubroutineType(types: !10220)
!10220 = !{!6, !8, !8, !8, !8, !8, !8}
!10221 = !DILocalVariable(name: "type", arg: 1, scope: !10218, file: !3, line: 1750, type: !8)
!10222 = !DILocation(line: 1750, column: 34, scope: !10218)
!10223 = !DILocalVariable(name: "resol", arg: 2, scope: !10218, file: !3, line: 1750, type: !8)
!10224 = !DILocation(line: 1750, column: 44, scope: !10218)
!10225 = !DILocalVariable(name: "thread", arg: 3, scope: !10218, file: !3, line: 1750, type: !8)
!10226 = !DILocation(line: 1750, column: 55, scope: !10218)
!10227 = !DILocalVariable(name: "xs", arg: 4, scope: !10218, file: !3, line: 1750, type: !8)
!10228 = !DILocation(line: 1750, column: 67, scope: !10218)
!10229 = !DILocalVariable(name: "ys", arg: 5, scope: !10218, file: !3, line: 1750, type: !8)
!10230 = !DILocation(line: 1750, column: 75, scope: !10218)
!10231 = !DILocalVariable(name: "reset", arg: 6, scope: !10218, file: !3, line: 1750, type: !8)
!10232 = !DILocation(line: 1750, column: 83, scope: !10218)
!10233 = !DILocalVariable(name: "tot", scope: !10218, file: !3, line: 1752, type: !8)
!10234 = !DILocation(line: 1752, column: 6, scope: !10218)
!10235 = !DILocalVariable(name: "vec", scope: !10218, file: !3, line: 1753, type: !6)
!10236 = !DILocation(line: 1753, column: 9, scope: !10218)
!10237 = !DILocation(line: 1755, column: 9, scope: !10218)
!10238 = !DILocation(line: 1755, column: 8, scope: !10218)
!10239 = !DILocation(line: 1755, column: 15, scope: !10218)
!10240 = !DILocation(line: 1755, column: 14, scope: !10218)
!10241 = !DILocation(line: 1755, column: 5, scope: !10218)
!10242 = !DILocation(line: 1757, column: 6, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 1757, column: 6)
!10244 = !DILocation(line: 1757, column: 11, scope: !10243)
!10245 = !DILocation(line: 1757, column: 6, scope: !10218)
!10246 = !DILocalVariable(name: "rng", scope: !10247, file: !3, line: 1759, type: !4504)
!10247 = distinct !DILexicalBlock(scope: !10243, file: !3, line: 1757, column: 26)
!10248 = !DILocation(line: 1759, column: 8, scope: !10247)
!10249 = !DILocation(line: 1759, column: 42, scope: !10247)
!10250 = !DILocation(line: 1759, column: 26, scope: !10247)
!10251 = !DILocation(line: 1759, column: 14, scope: !10247)
!10252 = !DILocalVariable(name: "sphere", scope: !10247, file: !3, line: 1760, type: !6)
!10253 = !DILocation(line: 1760, column: 10, scope: !10247)
!10254 = !DILocalVariable(name: "a", scope: !10247, file: !3, line: 1761, type: !8)
!10255 = !DILocation(line: 1761, column: 7, scope: !10247)
!10256 = !DILocation(line: 1764, column: 38, scope: !10247)
!10257 = !DILocation(line: 1764, column: 46, scope: !10247)
!10258 = !DILocation(line: 1764, column: 50, scope: !10247)
!10259 = !DILocation(line: 1764, column: 54, scope: !10247)
!10260 = !DILocation(line: 1764, column: 11, scope: !10247)
!10261 = !DILocation(line: 1764, column: 9, scope: !10247)
!10262 = !DILocation(line: 1766, column: 8, scope: !10247)
!10263 = !DILocation(line: 1766, column: 6, scope: !10247)
!10264 = !DILocation(line: 1767, column: 9, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10247, file: !3, line: 1767, column: 3)
!10266 = !DILocation(line: 1767, column: 8, scope: !10265)
!10267 = !DILocation(line: 1767, column: 13, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 1767, column: 3)
!10269 = !DILocation(line: 1767, column: 15, scope: !10268)
!10270 = !DILocation(line: 1767, column: 14, scope: !10268)
!10271 = !DILocation(line: 1767, column: 3, scope: !10265)
!10272 = !DILocation(line: 1768, column: 30, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1767, column: 33)
!10274 = !DILocation(line: 1768, column: 35, scope: !10273)
!10275 = !DILocation(line: 1768, column: 4, scope: !10273)
!10276 = !DILocation(line: 1769, column: 3, scope: !10273)
!10277 = !DILocation(line: 1767, column: 21, scope: !10268)
!10278 = !DILocation(line: 1767, column: 28, scope: !10268)
!10279 = !DILocation(line: 1767, column: 3, scope: !10268)
!10280 = distinct !{!10280, !10271, !10281}
!10281 = !DILocation(line: 1769, column: 3, scope: !10265)
!10282 = !DILocation(line: 1771, column: 16, scope: !10247)
!10283 = !DILocation(line: 1771, column: 3, scope: !10247)
!10284 = !DILocation(line: 1773, column: 10, scope: !10247)
!10285 = !DILocation(line: 1773, column: 3, scope: !10247)
!10286 = !DILocalVariable(name: "sphere", scope: !10287, file: !3, line: 1776, type: !6)
!10287 = distinct !DILexicalBlock(scope: !10243, file: !3, line: 1775, column: 7)
!10288 = !DILocation(line: 1776, column: 10, scope: !10287)
!10289 = !DILocalVariable(name: "vec1", scope: !10287, file: !3, line: 1777, type: !6)
!10290 = !DILocation(line: 1777, column: 10, scope: !10287)
!10291 = !DILocation(line: 1780, column: 12, scope: !10287)
!10292 = !DILocation(line: 1780, column: 11, scope: !10287)
!10293 = !DILocation(line: 1780, column: 53, scope: !10287)
!10294 = !DILocation(line: 1780, column: 61, scope: !10287)
!10295 = !DILocation(line: 1780, column: 65, scope: !10287)
!10296 = !DILocation(line: 1780, column: 69, scope: !10287)
!10297 = !DILocation(line: 1780, column: 26, scope: !10287)
!10298 = !DILocation(line: 1780, column: 9, scope: !10287)
!10299 = !DILocation(line: 1781, column: 7, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 1781, column: 7)
!10301 = !DILocation(line: 1781, column: 13, scope: !10300)
!10302 = !DILocation(line: 1781, column: 7, scope: !10287)
!10303 = !DILocalVariable(name: "cosfi", scope: !10304, file: !3, line: 1782, type: !7)
!10304 = distinct !DILexicalBlock(scope: !10300, file: !3, line: 1781, column: 21)
!10305 = !DILocation(line: 1782, column: 10, scope: !10304)
!10306 = !DILocalVariable(name: "sinfi", scope: !10304, file: !3, line: 1782, type: !7)
!10307 = !DILocation(line: 1782, column: 17, scope: !10304)
!10308 = !DILocalVariable(name: "cost", scope: !10304, file: !3, line: 1782, type: !7)
!10309 = !DILocation(line: 1782, column: 24, scope: !10304)
!10310 = !DILocalVariable(name: "sint", scope: !10304, file: !3, line: 1782, type: !7)
!10311 = !DILocation(line: 1782, column: 30, scope: !10304)
!10312 = !DILocalVariable(name: "ang", scope: !10304, file: !3, line: 1783, type: !7)
!10313 = !DILocation(line: 1783, column: 10, scope: !10304)
!10314 = !DILocalVariable(name: "a", scope: !10304, file: !3, line: 1784, type: !8)
!10315 = !DILocation(line: 1784, column: 8, scope: !10304)
!10316 = !DILocation(line: 1786, column: 39, scope: !10304)
!10317 = !DILocation(line: 1786, column: 47, scope: !10304)
!10318 = !DILocation(line: 1786, column: 51, scope: !10304)
!10319 = !DILocation(line: 1786, column: 55, scope: !10304)
!10320 = !DILocation(line: 1786, column: 12, scope: !10304)
!10321 = !DILocation(line: 1786, column: 10, scope: !10304)
!10322 = !DILocation(line: 1789, column: 27, scope: !10304)
!10323 = !DILocation(line: 1789, column: 10, scope: !10304)
!10324 = !DILocation(line: 1789, column: 8, scope: !10304)
!10325 = !DILocation(line: 1790, column: 17, scope: !10304)
!10326 = !DILocation(line: 1790, column: 12, scope: !10304)
!10327 = !DILocation(line: 1790, column: 10, scope: !10304)
!10328 = !DILocation(line: 1790, column: 36, scope: !10304)
!10329 = !DILocation(line: 1790, column: 31, scope: !10304)
!10330 = !DILocation(line: 1790, column: 29, scope: !10304)
!10331 = !DILocation(line: 1791, column: 27, scope: !10304)
!10332 = !DILocation(line: 1791, column: 10, scope: !10304)
!10333 = !DILocation(line: 1791, column: 8, scope: !10304)
!10334 = !DILocation(line: 1792, column: 16, scope: !10304)
!10335 = !DILocation(line: 1792, column: 11, scope: !10304)
!10336 = !DILocation(line: 1792, column: 9, scope: !10304)
!10337 = !DILocation(line: 1792, column: 34, scope: !10304)
!10338 = !DILocation(line: 1792, column: 29, scope: !10304)
!10339 = !DILocation(line: 1792, column: 27, scope: !10304)
!10340 = !DILocation(line: 1794, column: 16, scope: !10304)
!10341 = !DILocation(line: 1794, column: 7, scope: !10304)
!10342 = !DILocation(line: 1795, column: 10, scope: !10304)
!10343 = !DILocation(line: 1795, column: 8, scope: !10304)
!10344 = !DILocation(line: 1796, column: 10, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 1796, column: 4)
!10346 = !DILocation(line: 1796, column: 9, scope: !10345)
!10347 = !DILocation(line: 1796, column: 14, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 1796, column: 4)
!10349 = !DILocation(line: 1796, column: 16, scope: !10348)
!10350 = !DILocation(line: 1796, column: 15, scope: !10348)
!10351 = !DILocation(line: 1796, column: 4, scope: !10345)
!10352 = !DILocation(line: 1797, column: 14, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 1796, column: 43)
!10354 = !DILocation(line: 1797, column: 19, scope: !10353)
!10355 = !DILocation(line: 1797, column: 18, scope: !10353)
!10356 = !DILocation(line: 1797, column: 25, scope: !10353)
!10357 = !DILocation(line: 1797, column: 24, scope: !10353)
!10358 = !DILocation(line: 1797, column: 34, scope: !10353)
!10359 = !DILocation(line: 1797, column: 40, scope: !10353)
!10360 = !DILocation(line: 1797, column: 39, scope: !10353)
!10361 = !DILocation(line: 1797, column: 32, scope: !10353)
!10362 = !DILocation(line: 1797, column: 49, scope: !10353)
!10363 = !DILocation(line: 1797, column: 54, scope: !10353)
!10364 = !DILocation(line: 1797, column: 53, scope: !10353)
!10365 = !DILocation(line: 1797, column: 60, scope: !10353)
!10366 = !DILocation(line: 1797, column: 59, scope: !10353)
!10367 = !DILocation(line: 1797, column: 47, scope: !10353)
!10368 = !DILocation(line: 1797, column: 5, scope: !10353)
!10369 = !DILocation(line: 1797, column: 12, scope: !10353)
!10370 = !DILocation(line: 1798, column: 14, scope: !10353)
!10371 = !DILocation(line: 1798, column: 19, scope: !10353)
!10372 = !DILocation(line: 1798, column: 18, scope: !10353)
!10373 = !DILocation(line: 1798, column: 25, scope: !10353)
!10374 = !DILocation(line: 1798, column: 24, scope: !10353)
!10375 = !DILocation(line: 1798, column: 34, scope: !10353)
!10376 = !DILocation(line: 1798, column: 40, scope: !10353)
!10377 = !DILocation(line: 1798, column: 39, scope: !10353)
!10378 = !DILocation(line: 1798, column: 32, scope: !10353)
!10379 = !DILocation(line: 1798, column: 49, scope: !10353)
!10380 = !DILocation(line: 1798, column: 54, scope: !10353)
!10381 = !DILocation(line: 1798, column: 53, scope: !10353)
!10382 = !DILocation(line: 1798, column: 60, scope: !10353)
!10383 = !DILocation(line: 1798, column: 59, scope: !10353)
!10384 = !DILocation(line: 1798, column: 47, scope: !10353)
!10385 = !DILocation(line: 1798, column: 5, scope: !10353)
!10386 = !DILocation(line: 1798, column: 12, scope: !10353)
!10387 = !DILocation(line: 1799, column: 15, scope: !10353)
!10388 = !DILocation(line: 1799, column: 14, scope: !10353)
!10389 = !DILocation(line: 1799, column: 20, scope: !10353)
!10390 = !DILocation(line: 1799, column: 19, scope: !10353)
!10391 = !DILocation(line: 1799, column: 29, scope: !10353)
!10392 = !DILocation(line: 1799, column: 34, scope: !10353)
!10393 = !DILocation(line: 1799, column: 33, scope: !10353)
!10394 = !DILocation(line: 1799, column: 27, scope: !10353)
!10395 = !DILocation(line: 1799, column: 5, scope: !10353)
!10396 = !DILocation(line: 1799, column: 12, scope: !10353)
!10397 = !DILocation(line: 1800, column: 4, scope: !10353)
!10398 = !DILocation(line: 1796, column: 22, scope: !10348)
!10399 = !DILocation(line: 1796, column: 29, scope: !10348)
!10400 = !DILocation(line: 1796, column: 38, scope: !10348)
!10401 = !DILocation(line: 1796, column: 4, scope: !10348)
!10402 = distinct !{!10402, !10351, !10403}
!10403 = !DILocation(line: 1800, column: 4, scope: !10345)
!10404 = !DILocation(line: 1801, column: 3, scope: !10304)
!10405 = !DILocation(line: 1802, column: 10, scope: !10287)
!10406 = !DILocation(line: 1802, column: 3, scope: !10287)
!10407 = !DILocation(line: 1804, column: 1, scope: !10218)
!10408 = !DILocalVariable(name: "test", arg: 1, scope: !2, file: !3, line: 1733, type: !8)
!10409 = !DILocation(line: 1733, column: 43, scope: !2)
!10410 = !DILocalVariable(name: "thread", arg: 2, scope: !2, file: !3, line: 1733, type: !8)
!10411 = !DILocation(line: 1733, column: 53, scope: !2)
!10412 = !DILocalVariable(name: "xs", arg: 3, scope: !2, file: !3, line: 1733, type: !8)
!10413 = !DILocation(line: 1733, column: 65, scope: !2)
!10414 = !DILocalVariable(name: "ys", arg: 4, scope: !2, file: !3, line: 1733, type: !8)
!10415 = !DILocation(line: 1733, column: 73, scope: !2)
!10416 = !DILocalVariable(name: "tot", arg: 5, scope: !2, file: !3, line: 1733, type: !8)
!10417 = !DILocation(line: 1733, column: 81, scope: !2)
!10418 = !DILocation(line: 1738, column: 6, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1738, column: 6)
!10420 = !DILocation(line: 1738, column: 6, scope: !2)
!10421 = !DILocation(line: 1739, column: 3, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 1738, column: 17)
!10423 = !DILocation(line: 1740, column: 3, scope: !10422)
!10424 = !DILocation(line: 1741, column: 12, scope: !10422)
!10425 = !DILocation(line: 1742, column: 2, scope: !10422)
!10426 = !DILocation(line: 1744, column: 6, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1744, column: 6)
!10428 = !DILocation(line: 1744, column: 14, scope: !10427)
!10429 = !DILocation(line: 1744, column: 10, scope: !10427)
!10430 = !DILocation(line: 1744, column: 8, scope: !10427)
!10431 = !DILocation(line: 1744, column: 22, scope: !10427)
!10432 = !DILocation(line: 1744, column: 25, scope: !10427)
!10433 = !DILocation(line: 1744, column: 33, scope: !10427)
!10434 = !DILocation(line: 1744, column: 29, scope: !10427)
!10435 = !DILocation(line: 1744, column: 27, scope: !10427)
!10436 = !DILocation(line: 1744, column: 6, scope: !2)
!10437 = !DILocation(line: 1744, column: 56, scope: !10427)
!10438 = !DILocation(line: 1744, column: 66, scope: !10427)
!10439 = !DILocation(line: 1744, column: 73, scope: !10427)
!10440 = !DILocation(line: 1744, column: 72, scope: !10427)
!10441 = !DILocation(line: 1744, column: 76, scope: !10427)
!10442 = !DILocation(line: 1744, column: 64, scope: !10427)
!10443 = !DILocation(line: 1744, column: 42, scope: !10427)
!10444 = !DILocation(line: 1745, column: 6, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1745, column: 6)
!10446 = !DILocation(line: 1745, column: 6, scope: !2)
!10447 = !DILocation(line: 1745, column: 12, scope: !10445)
!10448 = !DILocation(line: 1746, column: 15, scope: !2)
!10449 = !DILocation(line: 1746, column: 6, scope: !2)
!10450 = !DILocation(line: 1746, column: 2, scope: !2)
!10451 = !DILocation(line: 1746, column: 13, scope: !2)
!10452 = !DILocation(line: 1746, column: 32, scope: !2)
!10453 = !DILocation(line: 1746, column: 23, scope: !2)
!10454 = !DILocation(line: 1746, column: 19, scope: !2)
!10455 = !DILocation(line: 1746, column: 30, scope: !2)
!10456 = !DILocation(line: 1747, column: 16, scope: !2)
!10457 = !DILocation(line: 1747, column: 26, scope: !2)
!10458 = !DILocation(line: 1747, column: 33, scope: !2)
!10459 = !DILocation(line: 1747, column: 32, scope: !2)
!10460 = !DILocation(line: 1747, column: 36, scope: !2)
!10461 = !DILocation(line: 1747, column: 24, scope: !2)
!10462 = !DILocation(line: 1747, column: 2, scope: !2)
!10463 = !DILocation(line: 1748, column: 1, scope: !2)
!10464 = distinct !DISubprogram(name: "ray_shadow_jittered_coords", scope: !3, file: !3, line: 2105, type: !10465, scopeLine: 2106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10465 = !DISubroutineType(types: !10466)
!10466 = !{null, !3683, !8, !2302, !1189}
!10467 = !DILocalVariable(name: "shi", arg: 1, scope: !10464, file: !3, line: 2105, type: !3683)
!10468 = !DILocation(line: 2105, column: 52, scope: !10464)
!10469 = !DILocalVariable(name: "max", arg: 2, scope: !10464, file: !3, line: 2105, type: !8)
!10470 = !DILocation(line: 2105, column: 61, scope: !10464)
!10471 = !DILocalVariable(name: "jitco", arg: 3, scope: !10464, file: !3, line: 2105, type: !2302)
!10472 = !DILocation(line: 2105, column: 72, scope: !10464)
!10473 = !DILocalVariable(name: "totjitco", arg: 4, scope: !10464, file: !3, line: 2105, type: !1189)
!10474 = !DILocation(line: 2105, column: 99, scope: !10464)
!10475 = !DILocalVariable(name: "order8", scope: !10464, file: !3, line: 2109, type: !10476)
!10476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !1242)
!10477 = !DILocation(line: 2109, column: 6, scope: !10464)
!10478 = !DILocalVariable(name: "order11", scope: !10464, file: !3, line: 2110, type: !10479)
!10479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 352, elements: !10480)
!10480 = !{!10481}
!10481 = !DISubrange(count: 11)
!10482 = !DILocation(line: 2110, column: 6, scope: !10464)
!10483 = !DILocalVariable(name: "order16", scope: !10464, file: !3, line: 2111, type: !10484)
!10484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !2584)
!10485 = !DILocation(line: 2111, column: 6, scope: !10464)
!10486 = !DILocalVariable(name: "count", scope: !10464, file: !3, line: 2112, type: !8)
!10487 = !DILocation(line: 2112, column: 6, scope: !10464)
!10488 = !DILocation(line: 2112, column: 25, scope: !10464)
!10489 = !DILocation(line: 2112, column: 30, scope: !10464)
!10490 = !DILocation(line: 2112, column: 14, scope: !10464)
!10491 = !DILocation(line: 2116, column: 7, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 2116, column: 6)
!10493 = !DILocation(line: 2116, column: 12, scope: !10492)
!10494 = !DILocation(line: 2116, column: 19, scope: !10492)
!10495 = !DILocation(line: 2116, column: 22, scope: !10492)
!10496 = !DILocation(line: 2116, column: 27, scope: !10492)
!10497 = !DILocation(line: 2116, column: 33, scope: !10492)
!10498 = !DILocation(line: 2116, column: 38, scope: !10492)
!10499 = !DILocation(line: 2116, column: 41, scope: !10492)
!10500 = !DILocation(line: 2116, column: 47, scope: !10492)
!10501 = !DILocation(line: 2116, column: 51, scope: !10492)
!10502 = !DILocation(line: 2116, column: 54, scope: !10492)
!10503 = !DILocation(line: 2116, column: 63, scope: !10492)
!10504 = !DILocation(line: 2116, column: 60, scope: !10492)
!10505 = !DILocation(line: 2116, column: 6, scope: !10464)
!10506 = !DILocalVariable(name: "xs", scope: !10507, file: !3, line: 2117, type: !7)
!10507 = distinct !DILexicalBlock(scope: !10492, file: !3, line: 2116, column: 68)
!10508 = !DILocation(line: 2117, column: 9, scope: !10507)
!10509 = !DILocalVariable(name: "ys", scope: !10507, file: !3, line: 2117, type: !7)
!10510 = !DILocation(line: 2117, column: 13, scope: !10507)
!10511 = !DILocalVariable(name: "zs", scope: !10507, file: !3, line: 2117, type: !7)
!10512 = !DILocation(line: 2117, column: 17, scope: !10507)
!10513 = !DILocalVariable(name: "view", scope: !10507, file: !3, line: 2117, type: !206)
!10514 = !DILocation(line: 2117, column: 21, scope: !10507)
!10515 = !DILocalVariable(name: "samp", scope: !10507, file: !3, line: 2118, type: !8)
!10516 = !DILocation(line: 2118, column: 7, scope: !10507)
!10517 = !DILocalVariable(name: "ordsamp", scope: !10507, file: !3, line: 2118, type: !8)
!10518 = !DILocation(line: 2118, column: 13, scope: !10507)
!10519 = !DILocalVariable(name: "tot", scope: !10507, file: !3, line: 2118, type: !8)
!10520 = !DILocation(line: 2118, column: 22, scope: !10507)
!10521 = !DILocation(line: 2120, column: 12, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10507, file: !3, line: 2120, column: 3)
!10523 = !DILocation(line: 2120, column: 8, scope: !10522)
!10524 = !DILocation(line: 2120, column: 16, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 2120, column: 3)
!10526 = !DILocation(line: 2120, column: 23, scope: !10525)
!10527 = !DILocation(line: 2120, column: 21, scope: !10525)
!10528 = !DILocation(line: 2120, column: 20, scope: !10525)
!10529 = !DILocation(line: 2120, column: 3, scope: !10522)
!10530 = !DILocation(line: 2121, column: 10, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 2121, column: 8)
!10532 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 2120, column: 36)
!10533 = !DILocation(line: 2121, column: 8, scope: !10531)
!10534 = !DILocation(line: 2121, column: 14, scope: !10531)
!10535 = !DILocation(line: 2121, column: 8, scope: !10532)
!10536 = !DILocation(line: 2121, column: 37, scope: !10531)
!10537 = !DILocation(line: 2121, column: 30, scope: !10531)
!10538 = !DILocation(line: 2121, column: 28, scope: !10531)
!10539 = !DILocation(line: 2121, column: 20, scope: !10531)
!10540 = !DILocation(line: 2122, column: 15, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 2122, column: 13)
!10542 = !DILocation(line: 2122, column: 13, scope: !10541)
!10543 = !DILocation(line: 2122, column: 19, scope: !10541)
!10544 = !DILocation(line: 2122, column: 13, scope: !10531)
!10545 = !DILocation(line: 2122, column: 44, scope: !10541)
!10546 = !DILocation(line: 2122, column: 36, scope: !10541)
!10547 = !DILocation(line: 2122, column: 34, scope: !10541)
!10548 = !DILocation(line: 2122, column: 26, scope: !10541)
!10549 = !DILocation(line: 2123, column: 15, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 2123, column: 13)
!10551 = !DILocation(line: 2123, column: 13, scope: !10550)
!10552 = !DILocation(line: 2123, column: 19, scope: !10550)
!10553 = !DILocation(line: 2123, column: 13, scope: !10541)
!10554 = !DILocation(line: 2123, column: 44, scope: !10550)
!10555 = !DILocation(line: 2123, column: 36, scope: !10550)
!10556 = !DILocation(line: 2123, column: 34, scope: !10550)
!10557 = !DILocation(line: 2123, column: 26, scope: !10550)
!10558 = !DILocation(line: 2124, column: 19, scope: !10550)
!10559 = !DILocation(line: 2124, column: 17, scope: !10550)
!10560 = !DILocation(line: 2126, column: 8, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 2126, column: 8)
!10562 = !DILocation(line: 2126, column: 13, scope: !10561)
!10563 = !DILocation(line: 2126, column: 24, scope: !10561)
!10564 = !DILocation(line: 2126, column: 22, scope: !10561)
!10565 = !DILocation(line: 2126, column: 18, scope: !10561)
!10566 = !DILocation(line: 2126, column: 8, scope: !10532)
!10567 = !DILocation(line: 2128, column: 16, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10561, file: !3, line: 2126, column: 34)
!10569 = !DILocation(line: 2128, column: 21, scope: !10568)
!10570 = !DILocation(line: 2128, column: 39, scope: !10568)
!10571 = !DILocation(line: 2128, column: 33, scope: !10568)
!10572 = !DILocation(line: 2128, column: 31, scope: !10568)
!10573 = !DILocation(line: 2128, column: 51, scope: !10568)
!10574 = !DILocation(line: 2128, column: 7, scope: !10568)
!10575 = !DILocation(line: 2129, column: 16, scope: !10568)
!10576 = !DILocation(line: 2129, column: 21, scope: !10568)
!10577 = !DILocation(line: 2129, column: 39, scope: !10568)
!10578 = !DILocation(line: 2129, column: 33, scope: !10568)
!10579 = !DILocation(line: 2129, column: 31, scope: !10568)
!10580 = !DILocation(line: 2129, column: 51, scope: !10568)
!10581 = !DILocation(line: 2129, column: 7, scope: !10568)
!10582 = !DILocation(line: 2130, column: 9, scope: !10568)
!10583 = !DILocation(line: 2130, column: 14, scope: !10568)
!10584 = !DILocation(line: 2130, column: 7, scope: !10568)
!10585 = !DILocation(line: 2132, column: 29, scope: !10568)
!10586 = !DILocation(line: 2132, column: 34, scope: !10568)
!10587 = !DILocation(line: 2132, column: 38, scope: !10568)
!10588 = !DILocation(line: 2132, column: 42, scope: !10568)
!10589 = !DILocation(line: 2132, column: 46, scope: !10568)
!10590 = !DILocation(line: 2132, column: 58, scope: !10568)
!10591 = !DILocation(line: 2132, column: 64, scope: !10568)
!10592 = !DILocation(line: 2132, column: 5, scope: !10568)
!10593 = !DILocation(line: 2133, column: 8, scope: !10568)
!10594 = !DILocation(line: 2134, column: 4, scope: !10568)
!10595 = !DILocation(line: 2135, column: 3, scope: !10532)
!10596 = !DILocation(line: 2120, column: 32, scope: !10525)
!10597 = !DILocation(line: 2120, column: 3, scope: !10525)
!10598 = distinct !{!10598, !10529, !10599}
!10599 = !DILocation(line: 2135, column: 3, scope: !10522)
!10600 = !DILocation(line: 2137, column: 14, scope: !10507)
!10601 = !DILocation(line: 2137, column: 4, scope: !10507)
!10602 = !DILocation(line: 2137, column: 12, scope: !10507)
!10603 = !DILocation(line: 2138, column: 2, scope: !10507)
!10604 = !DILocation(line: 2140, column: 14, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10492, file: !3, line: 2139, column: 7)
!10606 = !DILocation(line: 2140, column: 24, scope: !10605)
!10607 = !DILocation(line: 2140, column: 29, scope: !10605)
!10608 = !DILocation(line: 2140, column: 3, scope: !10605)
!10609 = !DILocation(line: 2141, column: 4, scope: !10605)
!10610 = !DILocation(line: 2141, column: 12, scope: !10605)
!10611 = !DILocation(line: 2143, column: 1, scope: !10464)
!10612 = distinct !DISubprogram(name: "QMC_sampleDisc", scope: !3, file: !3, line: 1140, type: !8767, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10613 = !DILocalVariable(name: "vec", arg: 1, scope: !10612, file: !3, line: 1140, type: !6)
!10614 = !DILocation(line: 1140, column: 34, scope: !10612)
!10615 = !DILocalVariable(name: "qsa", arg: 2, scope: !10612, file: !3, line: 1140, type: !4891)
!10616 = !DILocation(line: 1140, column: 54, scope: !10612)
!10617 = !DILocalVariable(name: "thread", arg: 3, scope: !10612, file: !3, line: 1140, type: !8)
!10618 = !DILocation(line: 1140, column: 63, scope: !10612)
!10619 = !DILocalVariable(name: "num", arg: 4, scope: !10612, file: !3, line: 1140, type: !8)
!10620 = !DILocation(line: 1140, column: 75, scope: !10612)
!10621 = !DILocalVariable(name: "radius", arg: 5, scope: !10612, file: !3, line: 1140, type: !7)
!10622 = !DILocation(line: 1140, column: 86, scope: !10612)
!10623 = !DILocalVariable(name: "s", scope: !10612, file: !3, line: 1142, type: !8540)
!10624 = !DILocation(line: 1142, column: 9, scope: !10612)
!10625 = !DILocalVariable(name: "phi", scope: !10612, file: !3, line: 1143, type: !7)
!10626 = !DILocation(line: 1143, column: 8, scope: !10612)
!10627 = !DILocalVariable(name: "sqr", scope: !10612, file: !3, line: 1143, type: !7)
!10628 = !DILocation(line: 1143, column: 13, scope: !10612)
!10629 = !DILocation(line: 1145, column: 16, scope: !10612)
!10630 = !DILocation(line: 1145, column: 19, scope: !10612)
!10631 = !DILocation(line: 1145, column: 24, scope: !10612)
!10632 = !DILocation(line: 1145, column: 32, scope: !10612)
!10633 = !DILocation(line: 1145, column: 2, scope: !10612)
!10634 = !DILocation(line: 1147, column: 8, scope: !10612)
!10635 = !DILocation(line: 1147, column: 12, scope: !10612)
!10636 = !DILocation(line: 1147, column: 14, scope: !10612)
!10637 = !DILocation(line: 1147, column: 6, scope: !10612)
!10638 = !DILocation(line: 1148, column: 13, scope: !10612)
!10639 = !DILocation(line: 1148, column: 8, scope: !10612)
!10640 = !DILocation(line: 1148, column: 6, scope: !10612)
!10641 = !DILocation(line: 1150, column: 16, scope: !10612)
!10642 = !DILocation(line: 1150, column: 11, scope: !10612)
!10643 = !DILocation(line: 1150, column: 21, scope: !10612)
!10644 = !DILocation(line: 1150, column: 20, scope: !10612)
!10645 = !DILocation(line: 1150, column: 26, scope: !10612)
!10646 = !DILocation(line: 1150, column: 24, scope: !10612)
!10647 = !DILocation(line: 1150, column: 32, scope: !10612)
!10648 = !DILocation(line: 1150, column: 2, scope: !10612)
!10649 = !DILocation(line: 1150, column: 9, scope: !10612)
!10650 = !DILocation(line: 1151, column: 16, scope: !10612)
!10651 = !DILocation(line: 1151, column: 11, scope: !10612)
!10652 = !DILocation(line: 1151, column: 21, scope: !10612)
!10653 = !DILocation(line: 1151, column: 20, scope: !10612)
!10654 = !DILocation(line: 1151, column: 26, scope: !10612)
!10655 = !DILocation(line: 1151, column: 24, scope: !10612)
!10656 = !DILocation(line: 1151, column: 32, scope: !10612)
!10657 = !DILocation(line: 1151, column: 2, scope: !10612)
!10658 = !DILocation(line: 1151, column: 9, scope: !10612)
!10659 = !DILocation(line: 1152, column: 2, scope: !10612)
!10660 = !DILocation(line: 1152, column: 9, scope: !10612)
!10661 = !DILocation(line: 1153, column: 1, scope: !10612)
!10662 = distinct !DISubprogram(name: "QMC_sampleRect", scope: !3, file: !3, line: 1128, type: !10663, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10663 = !DISubroutineType(types: !10664)
!10664 = !{null, !6, !4891, !8, !8, !7, !7}
!10665 = !DILocalVariable(name: "vec", arg: 1, scope: !10662, file: !3, line: 1128, type: !6)
!10666 = !DILocation(line: 1128, column: 34, scope: !10662)
!10667 = !DILocalVariable(name: "qsa", arg: 2, scope: !10662, file: !3, line: 1128, type: !4891)
!10668 = !DILocation(line: 1128, column: 54, scope: !10662)
!10669 = !DILocalVariable(name: "thread", arg: 3, scope: !10662, file: !3, line: 1128, type: !8)
!10670 = !DILocation(line: 1128, column: 63, scope: !10662)
!10671 = !DILocalVariable(name: "num", arg: 4, scope: !10662, file: !3, line: 1128, type: !8)
!10672 = !DILocation(line: 1128, column: 75, scope: !10662)
!10673 = !DILocalVariable(name: "sizex", arg: 5, scope: !10662, file: !3, line: 1128, type: !7)
!10674 = !DILocation(line: 1128, column: 86, scope: !10662)
!10675 = !DILocalVariable(name: "sizey", arg: 6, scope: !10662, file: !3, line: 1128, type: !7)
!10676 = !DILocation(line: 1128, column: 99, scope: !10662)
!10677 = !DILocalVariable(name: "s", scope: !10662, file: !3, line: 1130, type: !8540)
!10678 = !DILocation(line: 1130, column: 9, scope: !10662)
!10679 = !DILocation(line: 1132, column: 16, scope: !10662)
!10680 = !DILocation(line: 1132, column: 19, scope: !10662)
!10681 = !DILocation(line: 1132, column: 24, scope: !10662)
!10682 = !DILocation(line: 1132, column: 32, scope: !10662)
!10683 = !DILocation(line: 1132, column: 2, scope: !10662)
!10684 = !DILocation(line: 1134, column: 19, scope: !10662)
!10685 = !DILocation(line: 1134, column: 24, scope: !10662)
!10686 = !DILocation(line: 1134, column: 11, scope: !10662)
!10687 = !DILocation(line: 1134, column: 33, scope: !10662)
!10688 = !DILocation(line: 1134, column: 31, scope: !10662)
!10689 = !DILocation(line: 1134, column: 2, scope: !10662)
!10690 = !DILocation(line: 1134, column: 9, scope: !10662)
!10691 = !DILocation(line: 1135, column: 19, scope: !10662)
!10692 = !DILocation(line: 1135, column: 24, scope: !10662)
!10693 = !DILocation(line: 1135, column: 11, scope: !10662)
!10694 = !DILocation(line: 1135, column: 33, scope: !10662)
!10695 = !DILocation(line: 1135, column: 31, scope: !10662)
!10696 = !DILocation(line: 1135, column: 2, scope: !10662)
!10697 = !DILocation(line: 1135, column: 9, scope: !10662)
!10698 = !DILocation(line: 1136, column: 2, scope: !10662)
!10699 = !DILocation(line: 1136, column: 9, scope: !10662)
!10700 = !DILocation(line: 1137, column: 1, scope: !10662)
!10701 = distinct !DISubprogram(name: "addAlphaLight", scope: !3, file: !3, line: 1591, type: !10702, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10702 = !DISubroutineType(types: !10703)
!10703 = !{null, !6, !3669, !7, !7}
!10704 = !DILocalVariable(name: "shadfac", arg: 1, scope: !10701, file: !3, line: 1591, type: !6)
!10705 = !DILocation(line: 1591, column: 33, scope: !10701)
!10706 = !DILocalVariable(name: "col", arg: 2, scope: !10701, file: !3, line: 1591, type: !3669)
!10707 = !DILocation(line: 1591, column: 57, scope: !10701)
!10708 = !DILocalVariable(name: "alpha", arg: 3, scope: !10701, file: !3, line: 1591, type: !7)
!10709 = !DILocation(line: 1591, column: 71, scope: !10701)
!10710 = !DILocalVariable(name: "filter", arg: 4, scope: !10701, file: !3, line: 1591, type: !7)
!10711 = !DILocation(line: 1591, column: 84, scope: !10701)
!10712 = !DILocalVariable(name: "fr", scope: !10701, file: !3, line: 1593, type: !7)
!10713 = !DILocation(line: 1593, column: 8, scope: !10701)
!10714 = !DILocalVariable(name: "fg", scope: !10701, file: !3, line: 1593, type: !7)
!10715 = !DILocation(line: 1593, column: 12, scope: !10701)
!10716 = !DILocalVariable(name: "fb", scope: !10701, file: !3, line: 1593, type: !7)
!10717 = !DILocation(line: 1593, column: 16, scope: !10701)
!10718 = !DILocation(line: 1595, column: 12, scope: !10701)
!10719 = !DILocation(line: 1595, column: 20, scope: !10701)
!10720 = !DILocation(line: 1595, column: 26, scope: !10701)
!10721 = !DILocation(line: 1595, column: 18, scope: !10701)
!10722 = !DILocation(line: 1595, column: 10, scope: !10701)
!10723 = !DILocation(line: 1595, column: 4, scope: !10701)
!10724 = !DILocation(line: 1596, column: 12, scope: !10701)
!10725 = !DILocation(line: 1596, column: 20, scope: !10701)
!10726 = !DILocation(line: 1596, column: 26, scope: !10701)
!10727 = !DILocation(line: 1596, column: 18, scope: !10701)
!10728 = !DILocation(line: 1596, column: 10, scope: !10701)
!10729 = !DILocation(line: 1596, column: 4, scope: !10701)
!10730 = !DILocation(line: 1597, column: 12, scope: !10701)
!10731 = !DILocation(line: 1597, column: 20, scope: !10701)
!10732 = !DILocation(line: 1597, column: 26, scope: !10701)
!10733 = !DILocation(line: 1597, column: 18, scope: !10701)
!10734 = !DILocation(line: 1597, column: 10, scope: !10701)
!10735 = !DILocation(line: 1597, column: 4, scope: !10701)
!10736 = !DILocation(line: 1599, column: 14, scope: !10701)
!10737 = !DILocation(line: 1599, column: 20, scope: !10701)
!10738 = !DILocation(line: 1599, column: 19, scope: !10701)
!10739 = !DILocation(line: 1599, column: 29, scope: !10701)
!10740 = !DILocation(line: 1599, column: 38, scope: !10701)
!10741 = !DILocation(line: 1599, column: 37, scope: !10701)
!10742 = !DILocation(line: 1599, column: 31, scope: !10701)
!10743 = !DILocation(line: 1599, column: 45, scope: !10701)
!10744 = !DILocation(line: 1599, column: 44, scope: !10701)
!10745 = !DILocation(line: 1599, column: 27, scope: !10701)
!10746 = !DILocation(line: 1599, column: 2, scope: !10701)
!10747 = !DILocation(line: 1599, column: 12, scope: !10701)
!10748 = !DILocation(line: 1600, column: 14, scope: !10701)
!10749 = !DILocation(line: 1600, column: 20, scope: !10701)
!10750 = !DILocation(line: 1600, column: 19, scope: !10701)
!10751 = !DILocation(line: 1600, column: 29, scope: !10701)
!10752 = !DILocation(line: 1600, column: 38, scope: !10701)
!10753 = !DILocation(line: 1600, column: 37, scope: !10701)
!10754 = !DILocation(line: 1600, column: 31, scope: !10701)
!10755 = !DILocation(line: 1600, column: 45, scope: !10701)
!10756 = !DILocation(line: 1600, column: 44, scope: !10701)
!10757 = !DILocation(line: 1600, column: 27, scope: !10701)
!10758 = !DILocation(line: 1600, column: 2, scope: !10701)
!10759 = !DILocation(line: 1600, column: 12, scope: !10701)
!10760 = !DILocation(line: 1601, column: 14, scope: !10701)
!10761 = !DILocation(line: 1601, column: 20, scope: !10701)
!10762 = !DILocation(line: 1601, column: 19, scope: !10701)
!10763 = !DILocation(line: 1601, column: 29, scope: !10701)
!10764 = !DILocation(line: 1601, column: 38, scope: !10701)
!10765 = !DILocation(line: 1601, column: 37, scope: !10701)
!10766 = !DILocation(line: 1601, column: 31, scope: !10701)
!10767 = !DILocation(line: 1601, column: 45, scope: !10701)
!10768 = !DILocation(line: 1601, column: 44, scope: !10701)
!10769 = !DILocation(line: 1601, column: 27, scope: !10701)
!10770 = !DILocation(line: 1601, column: 2, scope: !10701)
!10771 = !DILocation(line: 1601, column: 12, scope: !10701)
!10772 = !DILocation(line: 1603, column: 20, scope: !10701)
!10773 = !DILocation(line: 1603, column: 19, scope: !10701)
!10774 = !DILocation(line: 1603, column: 27, scope: !10701)
!10775 = !DILocation(line: 1603, column: 26, scope: !10701)
!10776 = !DILocation(line: 1603, column: 2, scope: !10701)
!10777 = !DILocation(line: 1603, column: 12, scope: !10701)
!10778 = !DILocation(line: 1604, column: 1, scope: !10701)
!10779 = distinct !DISubprogram(name: "give_jitter_plane", scope: !3, file: !3, line: 975, type: !10780, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !9, retainedNodes: !2773)
!10780 = !DISubroutineType(types: !10781)
!10781 = !{!6, !4319, !8, !8, !8}
!10782 = !DILocalVariable(name: "lar", arg: 1, scope: !10779, file: !3, line: 975, type: !4319)
!10783 = !DILocation(line: 975, column: 42, scope: !10779)
!10784 = !DILocalVariable(name: "thread", arg: 2, scope: !10779, file: !3, line: 975, type: !8)
!10785 = !DILocation(line: 975, column: 51, scope: !10779)
!10786 = !DILocalVariable(name: "xs", arg: 3, scope: !10779, file: !3, line: 975, type: !8)
!10787 = !DILocation(line: 975, column: 63, scope: !10779)
!10788 = !DILocalVariable(name: "ys", arg: 4, scope: !10779, file: !3, line: 975, type: !8)
!10789 = !DILocation(line: 975, column: 71, scope: !10779)
!10790 = !DILocalVariable(name: "tot", scope: !10779, file: !3, line: 977, type: !8)
!10791 = !DILocation(line: 977, column: 6, scope: !10779)
!10792 = !DILocation(line: 979, column: 7, scope: !10779)
!10793 = !DILocation(line: 979, column: 12, scope: !10779)
!10794 = !DILocation(line: 979, column: 5, scope: !10779)
!10795 = !DILocation(line: 981, column: 6, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10779, file: !3, line: 981, column: 6)
!10797 = !DILocation(line: 981, column: 11, scope: !10796)
!10798 = !DILocation(line: 981, column: 25, scope: !10796)
!10799 = !DILocation(line: 981, column: 6, scope: !10779)
!10800 = !DILocation(line: 984, column: 7, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 984, column: 7)
!10802 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 981, column: 43)
!10803 = !DILocation(line: 984, column: 12, scope: !10801)
!10804 = !DILocation(line: 984, column: 17, scope: !10801)
!10805 = !DILocation(line: 984, column: 26, scope: !10801)
!10806 = !DILocation(line: 984, column: 24, scope: !10801)
!10807 = !DILocation(line: 984, column: 29, scope: !10801)
!10808 = !DILocation(line: 984, column: 32, scope: !10801)
!10809 = !DILocation(line: 984, column: 37, scope: !10801)
!10810 = !DILocation(line: 984, column: 42, scope: !10801)
!10811 = !DILocation(line: 984, column: 51, scope: !10801)
!10812 = !DILocation(line: 984, column: 49, scope: !10801)
!10813 = !DILocation(line: 984, column: 7, scope: !10802)
!10814 = !DILocation(line: 985, column: 24, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 984, column: 55)
!10816 = !DILocation(line: 985, column: 29, scope: !10815)
!10817 = !DILocation(line: 985, column: 37, scope: !10815)
!10818 = !DILocation(line: 985, column: 42, scope: !10815)
!10819 = !DILocation(line: 985, column: 52, scope: !10815)
!10820 = !DILocation(line: 985, column: 58, scope: !10815)
!10821 = !DILocation(line: 985, column: 50, scope: !10815)
!10822 = !DILocation(line: 985, column: 62, scope: !10815)
!10823 = !DILocation(line: 985, column: 61, scope: !10815)
!10824 = !DILocation(line: 985, column: 48, scope: !10815)
!10825 = !DILocation(line: 985, column: 67, scope: !10815)
!10826 = !DILocation(line: 985, column: 72, scope: !10815)
!10827 = !DILocation(line: 985, column: 77, scope: !10815)
!10828 = !DILocation(line: 985, column: 88, scope: !10815)
!10829 = !DILocation(line: 985, column: 93, scope: !10815)
!10830 = !DILocation(line: 985, column: 122, scope: !10815)
!10831 = !DILocation(line: 985, column: 105, scope: !10815)
!10832 = !DILocation(line: 985, column: 148, scope: !10815)
!10833 = !DILocation(line: 985, column: 131, scope: !10815)
!10834 = !DILocation(line: 985, column: 4, scope: !10815)
!10835 = !DILocation(line: 986, column: 23, scope: !10815)
!10836 = !DILocation(line: 986, column: 4, scope: !10815)
!10837 = !DILocation(line: 986, column: 9, scope: !10815)
!10838 = !DILocation(line: 986, column: 14, scope: !10815)
!10839 = !DILocation(line: 986, column: 21, scope: !10815)
!10840 = !DILocation(line: 987, column: 23, scope: !10815)
!10841 = !DILocation(line: 987, column: 4, scope: !10815)
!10842 = !DILocation(line: 987, column: 9, scope: !10815)
!10843 = !DILocation(line: 987, column: 14, scope: !10815)
!10844 = !DILocation(line: 987, column: 21, scope: !10815)
!10845 = !DILocation(line: 988, column: 3, scope: !10815)
!10846 = !DILocation(line: 989, column: 10, scope: !10802)
!10847 = !DILocation(line: 989, column: 15, scope: !10802)
!10848 = !DILocation(line: 989, column: 25, scope: !10802)
!10849 = !DILocation(line: 989, column: 31, scope: !10802)
!10850 = !DILocation(line: 989, column: 23, scope: !10802)
!10851 = !DILocation(line: 989, column: 35, scope: !10802)
!10852 = !DILocation(line: 989, column: 34, scope: !10802)
!10853 = !DILocation(line: 989, column: 21, scope: !10802)
!10854 = !DILocation(line: 989, column: 3, scope: !10802)
!10855 = !DILocation(line: 991, column: 6, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10779, file: !3, line: 991, column: 6)
!10857 = !DILocation(line: 991, column: 11, scope: !10856)
!10858 = !DILocation(line: 991, column: 25, scope: !10856)
!10859 = !DILocation(line: 991, column: 6, scope: !10779)
!10860 = !DILocation(line: 992, column: 10, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10856, file: !3, line: 991, column: 43)
!10862 = !DILocation(line: 992, column: 15, scope: !10861)
!10863 = !DILocation(line: 992, column: 26, scope: !10861)
!10864 = !DILocation(line: 992, column: 25, scope: !10861)
!10865 = !DILocation(line: 992, column: 32, scope: !10861)
!10866 = !DILocation(line: 992, column: 35, scope: !10861)
!10867 = !DILocation(line: 992, column: 43, scope: !10861)
!10868 = !DILocation(line: 992, column: 46, scope: !10861)
!10869 = !DILocation(line: 992, column: 41, scope: !10861)
!10870 = !DILocation(line: 992, column: 39, scope: !10861)
!10871 = !DILocation(line: 992, column: 29, scope: !10861)
!10872 = !DILocation(line: 992, column: 22, scope: !10861)
!10873 = !DILocation(line: 992, column: 3, scope: !10861)
!10874 = !DILocation(line: 995, column: 9, scope: !10779)
!10875 = !DILocation(line: 995, column: 14, scope: !10779)
!10876 = !DILocation(line: 995, column: 2, scope: !10779)
!10877 = !DILocation(line: 996, column: 1, scope: !10779)
