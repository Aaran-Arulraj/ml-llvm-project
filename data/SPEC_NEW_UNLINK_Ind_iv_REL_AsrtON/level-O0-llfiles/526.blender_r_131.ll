; ModuleID = 'blender/source/blender/blenkernel/intern/constraint.c'
source_filename = "blender/source/blender/blenkernel/intern/constraint.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bConstraintTypeInfo = type { i16, i16, [32 x i8], [32 x i8], void (%struct.bConstraint*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, %struct.bConstraint*)*, void (i8*)*, i32 (%struct.bConstraint*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* }
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.Ipo = type opaque
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.ListBase = type { i8*, i8* }
%struct.bConstraintOb = type { %struct.Scene*, %struct.Object*, %struct.bPoseChannel*, [4 x [4 x float]], [4 x [4 x float]], i16, i16 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.bConstraintTarget = type { %struct.bConstraintTarget*, %struct.bConstraintTarget*, %struct.Object*, [64 x i8], [4 x [4 x float]], i16, i16, i16, i16 }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.EditBone = type opaque
%struct.bChildOfConstraint = type { %struct.Object*, i32, i32, [4 x [4 x float]], [64 x i8] }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.Lattice = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, %struct.BPoint*, %struct.Ipo*, %struct.Key*, %struct.MDeformVert*, [64 x i8], %struct.EditLatt* }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.Key = type opaque
%struct.EditLatt = type { %struct.Lattice*, i32, [4 x i8] }
%struct.DispList = type { %struct.DispList*, %struct.DispList*, i16, i16, i32, i32, i16, i16, float*, float*, i32*, i32, i32, i32* }
%struct.bTrackToConstraint = type { %struct.Object*, i32, i32, i32, i32, [64 x i8] }
%struct.bKinematicConstraint = type { %struct.Object*, i16, i16, i16, i16, [64 x i8], %struct.Object*, [64 x i8], float, float, float, [3 x float], i16, i16, float }
%struct.bFollowPathConstraint = type { %struct.Object*, float, float, i32, i16, i16 }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.Nurb = type { %struct.Nurb*, %struct.Nurb*, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, float*, float*, %struct.BPoint*, %struct.BezTriple*, i16, i16, i32 }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.bRotLimitConstraint = type { float, float, float, float, float, float, i16, i16 }
%struct.bLocLimitConstraint = type { float, float, float, float, float, float, i16, i16 }
%struct.bSizeLimitConstraint = type { float, float, float, float, float, float, i16, i16 }
%struct.bRotateLikeConstraint = type { %struct.Object*, i32, i32, [64 x i8] }
%struct.bLocateLikeConstraint = type { %struct.Object*, i32, i32, [64 x i8] }
%struct.bSizeLikeConstraint = type { %struct.Object*, i32, i32, [64 x i8] }
%struct.bPythonConstraint = type { %struct.Text*, %struct.IDProperty*, i32, i32, %struct.ListBase, %struct.Object*, [64 x i8] }
%struct.bActionConstraint = type { %struct.Object*, i16, i16, i32, i32, float, float, i32, %struct.bAction*, [64 x i8] }
%struct.bLockTrackConstraint = type { %struct.Object*, i32, i32, [64 x i8] }
%struct.bDistLimitConstraint = type { %struct.Object*, [64 x i8], float, float, i16, i16, i32 }
%struct.bStretchToConstraint = type { %struct.Object*, i32, i32, i32, float, float, float, float, float, [64 x i8] }
%struct.bMinMaxConstraint = type { %struct.Object*, i32, float, i32, i16, i16, i16, i16, [3 x float], [64 x i8] }
%struct.bRigidBodyJointConstraint = type { %struct.Object*, %struct.Object*, i32, float, float, float, float, float, float, [6 x float], [6 x float], float, i16, i16, i16, i16 }
%struct.bClampToConstraint = type { %struct.Object*, i32, i32 }
%struct.bTransformConstraint = type { %struct.Object*, [64 x i8], i16, i16, [3 x i8], i8, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.bShrinkwrapConstraint = type { %struct.Object*, float, i16, i8, i8, float, [4 x i8] }
%struct.SpaceTransform = type { [4 x [4 x float]], [4 x [4 x float]] }
%struct.BVHTreeFromMesh = type { %struct.BVHTree*, void (i8*, i32, float*, %struct.BVHTreeNearest*)*, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)*, %struct.MVert*, %struct.MEdge*, %struct.MFace*, i8, i8, i8, float, i8*, i8 }
%struct.BVHTree = type opaque
%struct.BVHTreeNearest = type { i32, [3 x float], [3 x float], float, i32 }
%struct.BVHTreeRay = type { [3 x float], [3 x float], float }
%struct.BVHTreeRayHit = type { i32, [3 x float], [3 x float], float, i32 }
%struct.bDampTrackConstraint = type { %struct.Object*, i32, i32, [64 x i8] }
%struct.bSplineIKConstraint = type { %struct.Object*, float*, i16, i16, i16, i16 }
%struct.bTransLikeConstraint = type { %struct.Object*, [64 x i8] }
%struct.bSameVolumeConstraint = type { i32, float }
%struct.bPivotConstraint = type { %struct.Object*, [64 x i8], [3 x float], i16, i16 }
%struct.bFollowTrackConstraint = type { %struct.MovieClip*, [64 x i8], i32, i32, [64 x i8], %struct.Object*, %struct.Object* }
%struct.MovieTrackingObject = type { %struct.MovieTrackingObject*, %struct.MovieTrackingObject*, [64 x i8], i32, float, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, i32, i32 }
%struct.CameraParams = type { i8, float, float, float, float, float, float, float, float, float, i32, float, float, i32, i32, i32, float, float, float, %struct.rctf, [4 x [4 x float]] }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.bCameraSolverConstraint = type { %struct.MovieClip*, i32, i32 }
%struct.bObjectSolverConstraint = type { %struct.MovieClip*, i32, i32, [64 x i8], [4 x [4 x float]], %struct.Object* }

@.str = private unnamed_addr constant [6 x i8] c"Const\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"bConstraintOb\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@CTI_INIT = internal global i16 1, align 2, !dbg !0
@constraintsTypeInfo = internal global [29 x %struct.bConstraintTypeInfo*] zeroinitializer, align 16, !dbg !2562
@.str.2 = private unnamed_addr constant [57 x i8] c"No valid constraint type-info data available. Type = %i\0A\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.3 = private unnamed_addr constant [17 x i8] c"tempConstraintOb\00", align 1
@CTI_CHILDOF = internal global %struct.bConstraintTypeInfo { i16 1, i16 144, [32 x i8] c"Child Of\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bChildOfConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @childof_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @childof_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @childof_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @childof_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @childof_evaluate }, align 8, !dbg !2641
@CTI_TRACKTO = internal global %struct.bConstraintTypeInfo { i16 2, i16 88, [32 x i8] c"Track To\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bTrackToConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @trackto_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @trackto_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @trackto_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @trackto_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @trackto_evaluate }, align 8, !dbg !2643
@CTI_KINEMATIC = internal global %struct.bConstraintTypeInfo { i16 3, i16 184, [32 x i8] c"IK\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bKinematicConstraint\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @kinematic_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @kinematic_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @kinematic_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @kinematic_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @kinematic_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* null }, align 8, !dbg !2645
@CTI_FOLLOWPATH = internal global %struct.bConstraintTypeInfo { i16 4, i16 24, [32 x i8] c"Follow Path\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bFollowPathConstraint\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @followpath_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @followpath_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @followpath_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @followpath_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @followpath_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @followpath_evaluate }, align 8, !dbg !2647
@CTI_ROTLIMIT = internal global %struct.bConstraintTypeInfo { i16 5, i16 28, [32 x i8] c"Limit Rotation\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bRotLimitConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* null, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* null, i32 (%struct.bConstraint*, %struct.ListBase*)* null, void (%struct.bConstraint*, %struct.ListBase*, i8)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @rotlimit_evaluate }, align 8, !dbg !2649
@CTI_LOCLIMIT = internal global %struct.bConstraintTypeInfo { i16 6, i16 28, [32 x i8] c"Limit Location\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bLocLimitConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* null, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* null, i32 (%struct.bConstraint*, %struct.ListBase*)* null, void (%struct.bConstraint*, %struct.ListBase*, i8)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @loclimit_evaluate }, align 8, !dbg !2651
@CTI_SIZELIMIT = internal global %struct.bConstraintTypeInfo { i16 7, i16 28, [32 x i8] c"Limit Scale\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bSizeLimitConstraint\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* null, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* null, i32 (%struct.bConstraint*, %struct.ListBase*)* null, void (%struct.bConstraint*, %struct.ListBase*, i8)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @sizelimit_evaluate }, align 8, !dbg !2653
@CTI_ROTLIKE = internal global %struct.bConstraintTypeInfo { i16 8, i16 80, [32 x i8] c"Copy Rotation\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bRotateLikeConstraint\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @rotlike_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @rotlike_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @rotlike_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @rotlike_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @rotlike_evaluate }, align 8, !dbg !2655
@CTI_LOCLIKE = internal global %struct.bConstraintTypeInfo { i16 9, i16 80, [32 x i8] c"Copy Location\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bLocateLikeConstraint\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @loclike_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @loclike_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @loclike_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @loclike_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @loclike_evaluate }, align 8, !dbg !2657
@CTI_SIZELIKE = internal global %struct.bConstraintTypeInfo { i16 10, i16 80, [32 x i8] c"Copy Scale\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bSizeLikeConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @sizelike_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @sizelike_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @sizelike_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @sizelike_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @sizelike_evaluate }, align 8, !dbg !2659
@CTI_PYTHON = internal global %struct.bConstraintTypeInfo { i16 11, i16 112, [32 x i8] c"Script\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bPythonConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* @pycon_free, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @pycon_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* @pycon_copy, void (i8*)* @pycon_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @pycon_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @pycon_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @pycon_evaluate }, align 8, !dbg !2661
@CTI_ACTION = internal global %struct.bConstraintTypeInfo { i16 12, i16 104, [32 x i8] c"Action\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bActionConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @actcon_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @actcon_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @actcon_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @actcon_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @actcon_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @actcon_evaluate }, align 8, !dbg !2663
@CTI_LOCKTRACK = internal global %struct.bConstraintTypeInfo { i16 13, i16 80, [32 x i8] c"Locked Track\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bLockTrackConstraint\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @locktrack_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @locktrack_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @locktrack_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @locktrack_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @locktrack_evaluate }, align 8, !dbg !2665
@CTI_DISTLIMIT = internal global %struct.bConstraintTypeInfo { i16 14, i16 88, [32 x i8] c"Limit Distance\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bDistLimitConstraint\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @distlimit_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @distlimit_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @distlimit_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @distlimit_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @distlimit_evaluate }, align 8, !dbg !2667
@CTI_STRETCHTO = internal global %struct.bConstraintTypeInfo { i16 15, i16 104, [32 x i8] c"Stretch To\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bStretchToConstraint\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @stretchto_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @stretchto_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @stretchto_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @stretchto_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @stretchto_evaluate }, align 8, !dbg !2669
@CTI_MINMAX = internal global %struct.bConstraintTypeInfo { i16 16, i16 104, [32 x i8] c"Floor\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bMinMaxConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @minmax_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @minmax_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @minmax_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @minmax_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @minmax_evaluate }, align 8, !dbg !2671
@CTI_RIGIDBODYJOINT = internal global %struct.bConstraintTypeInfo { i16 17, i16 104, [32 x i8] c"Rigid Body Joint\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bRigidBodyJointConstraint\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @rbj_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @rbj_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @rbj_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @rbj_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* null }, align 8, !dbg !2673
@CTI_CLAMPTO = internal global %struct.bConstraintTypeInfo { i16 18, i16 16, [32 x i8] c"Clamp To\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bClampToConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @clampto_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* null, i32 (%struct.bConstraint*, %struct.ListBase*)* @clampto_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @clampto_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @clampto_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @clampto_evaluate }, align 8, !dbg !2675
@CTI_TRANSFORM = internal global %struct.bConstraintTypeInfo { i16 19, i16 224, [32 x i8] c"Transformation\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bTransformConstraint\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @transform_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @transform_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @transform_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @transform_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @transform_evaluate }, align 8, !dbg !2677
@CTI_SHRINKWRAP = internal global %struct.bConstraintTypeInfo { i16 20, i16 24, [32 x i8] c"Shrinkwrap\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bShrinkwrapConstraint\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @shrinkwrap_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @shrinkwrap_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @shrinkwrap_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @shrinkwrap_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @shrinkwrap_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @shrinkwrap_evaluate }, align 8, !dbg !2679
@CTI_DAMPTRACK = internal global %struct.bConstraintTypeInfo { i16 21, i16 80, [32 x i8] c"Damped Track\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bDampTrackConstraint\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @damptrack_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @damptrack_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @damptrack_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @damptrack_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @damptrack_evaluate }, align 8, !dbg !2681
@CTI_SPLINEIK = internal global %struct.bConstraintTypeInfo { i16 22, i16 24, [32 x i8] c"Spline IK\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bSplineIKConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* @splineik_free, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @splineik_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* @splineik_copy, void (i8*)* @splineik_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* @splineik_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @splineik_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @splineik_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* null }, align 8, !dbg !2687
@CTI_TRANSLIKE = internal global %struct.bConstraintTypeInfo { i16 23, i16 72, [32 x i8] c"Copy Transforms\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bTransLikeConstraint\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @translike_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* null, i32 (%struct.bConstraint*, %struct.ListBase*)* @translike_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @translike_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @translike_evaluate }, align 8, !dbg !2689
@CTI_SAMEVOL = internal global %struct.bConstraintTypeInfo { i16 24, i16 8, [32 x i8] c"Maintain Volume\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bSameVolumeConstraint\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* null, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @samevolume_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* null, void (%struct.bConstraint*, %struct.ListBase*, i8)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @samevolume_evaluate }, align 8, !dbg !2691
@CTI_PIVOT = internal global %struct.bConstraintTypeInfo { i16 25, i16 88, [32 x i8] c"Pivot\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bPivotConstraint\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @pivotcon_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* null, i32 (%struct.bConstraint*, %struct.ListBase*)* @pivotcon_get_tars, void (%struct.bConstraint*, %struct.ListBase*, i8)* @pivotcon_flush_tars, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* @default_get_tarmat, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @pivotcon_evaluate }, align 8, !dbg !2693
@CTI_FOLLOWTRACK = internal global %struct.bConstraintTypeInfo { i16 26, i16 160, [32 x i8] c"Follow Track\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bFollowTrackConstraint\00\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @followtrack_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @followtrack_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* null, void (%struct.bConstraint*, %struct.ListBase*, i8)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @followtrack_evaluate }, align 8, !dbg !2695
@CTI_CAMERASOLVER = internal global %struct.bConstraintTypeInfo { i16 27, i16 16, [32 x i8] c"Camera Solver\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bCameraSolverConstraint\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @camerasolver_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @camerasolver_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* null, void (%struct.bConstraint*, %struct.ListBase*, i8)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @camerasolver_evaluate }, align 8, !dbg !2697
@CTI_OBJECTSOLVER = internal global %struct.bConstraintTypeInfo { i16 28, i16 152, [32 x i8] c"Object Solver\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"bObjectSolverConstraint\00\00\00\00\00\00\00\00\00", void (%struct.bConstraint*)* null, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* @objectsolver_id_looper, void (%struct.bConstraint*, %struct.bConstraint*)* null, void (i8*)* @objectsolver_new_data, i32 (%struct.bConstraint*, %struct.ListBase*)* null, void (%struct.bConstraint*, %struct.ListBase*, i8)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* null, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* @objectsolver_evaluate }, align 8, !dbg !2699
@.str.4 = private unnamed_addr constant [21 x i8] c"tempConstraintTarget\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"PyConstraintProps\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.6 = private unnamed_addr constant [42 x i8] c"do Action Constraint %s - Ob %s Pchan %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"pose\00", align 1
@.str.8 = private unnamed_addr constant [48 x i8] c"Error: unknown owner type for Action Constraint\00", align 1
@track_dir_vecs = internal constant [6 x [3 x float]] [[3 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [3 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], [3 x float] [float -1.000000e+00, float 0.000000e+00, float 0.000000e+00], [3 x float] [float 0.000000e+00, float -1.000000e+00, float 0.000000e+00], [3 x float] [float 0.000000e+00, float 0.000000e+00, float -1.000000e+00]], align 16, !dbg !2683
@.str.9 = private unnamed_addr constant [11 x i8] c"Constraint\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraint_unique_name(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !2705 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !2711, metadata !DIExpression()), !dbg !2712
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  %0 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !2715
  %1 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !2716
  %2 = bitcast %struct.bConstraint* %1 to i8*, !dbg !2716
  call void @BLI_uniquename(%struct.ListBase* %0, i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8 zeroext 46, i32 30, i32 64), !dbg !2717
  ret void, !dbg !2718
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @BLI_uniquename(%struct.ListBase*, i8*, i8*, i8 zeroext, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bConstraintOb* @BKE_constraints_make_evalob(%struct.Scene* %scene, %struct.Object* %ob, i8* %subdata, i16 signext %datatype) #0 !dbg !2719 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %subdata.addr = alloca i8*, align 8
  %datatype.addr = alloca i16, align 2
  %cob = alloca %struct.bConstraintOb*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2724, metadata !DIExpression()), !dbg !2725
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2726, metadata !DIExpression()), !dbg !2727
  store i8* %subdata, i8** %subdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %subdata.addr, metadata !2728, metadata !DIExpression()), !dbg !2729
  store i16 %datatype, i16* %datatype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %datatype.addr, metadata !2730, metadata !DIExpression()), !dbg !2731
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob, metadata !2732, metadata !DIExpression()), !dbg !2735
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2736
  %call = call i8* %0(i64 160, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)), !dbg !2736
  %1 = bitcast i8* %call to %struct.bConstraintOb*, !dbg !2736
  store %struct.bConstraintOb* %1, %struct.bConstraintOb** %cob, align 8, !dbg !2737
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2738
  %3 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2739
  %scene1 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %3, i32 0, i32 0, !dbg !2740
  store %struct.Scene* %2, %struct.Scene** %scene1, align 8, !dbg !2741
  %4 = load i16, i16* %datatype.addr, align 2, !dbg !2742
  %conv = sext i16 %4 to i32, !dbg !2742
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb9
  ], !dbg !2743

sw.bb:                                            ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2744
  %tobool = icmp ne %struct.Object* %5, null, !dbg !2744
  br i1 %tobool, label %if.then, label %if.else, !dbg !2748

if.then:                                          ; preds = %sw.bb
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2749
  %7 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2751
  %ob2 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %7, i32 0, i32 1, !dbg !2752
  store %struct.Object* %6, %struct.Object** %ob2, align 8, !dbg !2753
  %8 = load i16, i16* %datatype.addr, align 2, !dbg !2754
  %9 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2755
  %type = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %9, i32 0, i32 5, !dbg !2756
  store i16 %8, i16* %type, align 8, !dbg !2757
  %10 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2758
  %rotOrder = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %10, i32 0, i32 6, !dbg !2759
  store i16 1, i16* %rotOrder, align 2, !dbg !2760
  %11 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2761
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %11, i32 0, i32 3, !dbg !2762
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !2761
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2763
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 47, !dbg !2764
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !2763
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay3), !dbg !2765
  br label %if.end, !dbg !2766

if.else:                                          ; preds = %sw.bb
  %13 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2767
  %matrix4 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %13, i32 0, i32 3, !dbg !2768
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix4, i64 0, i64 0, !dbg !2767
  call void @unit_m4([4 x float]* %arraydecay5), !dbg !2769
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2770
  %startmat = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %14, i32 0, i32 4, !dbg !2771
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %startmat, i64 0, i64 0, !dbg !2770
  %15 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2772
  %matrix7 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %15, i32 0, i32 3, !dbg !2773
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix7, i64 0, i64 0, !dbg !2772
  call void @copy_m4_m4([4 x float]* %arraydecay6, [4 x float]* %arraydecay8), !dbg !2774
  br label %sw.epilog, !dbg !2775

sw.bb9:                                           ; preds = %entry
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2776
  %tobool10 = icmp ne %struct.Object* %16, null, !dbg !2776
  br i1 %tobool10, label %land.lhs.true, label %if.else31, !dbg !2779

land.lhs.true:                                    ; preds = %sw.bb9
  %17 = load i8*, i8** %subdata.addr, align 8, !dbg !2780
  %tobool11 = icmp ne i8* %17, null, !dbg !2780
  br i1 %tobool11, label %if.then12, label %if.else31, !dbg !2781

if.then12:                                        ; preds = %land.lhs.true
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2782
  %19 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2784
  %ob13 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %19, i32 0, i32 1, !dbg !2785
  store %struct.Object* %18, %struct.Object** %ob13, align 8, !dbg !2786
  %20 = load i8*, i8** %subdata.addr, align 8, !dbg !2787
  %21 = bitcast i8* %20 to %struct.bPoseChannel*, !dbg !2788
  %22 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2789
  %pchan = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %22, i32 0, i32 2, !dbg !2790
  store %struct.bPoseChannel* %21, %struct.bPoseChannel** %pchan, align 8, !dbg !2791
  %23 = load i16, i16* %datatype.addr, align 2, !dbg !2792
  %24 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2793
  %type14 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %24, i32 0, i32 5, !dbg !2794
  store i16 %23, i16* %type14, align 8, !dbg !2795
  %25 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2796
  %pchan15 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %25, i32 0, i32 2, !dbg !2798
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan15, align 8, !dbg !2798
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %26, i32 0, i32 26, !dbg !2799
  %27 = load i16, i16* %rotmode, align 4, !dbg !2799
  %conv16 = sext i16 %27 to i32, !dbg !2796
  %cmp = icmp sgt i32 %conv16, 0, !dbg !2800
  br i1 %cmp, label %if.then18, label %if.else22, !dbg !2801

if.then18:                                        ; preds = %if.then12
  %28 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2802
  %pchan19 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %28, i32 0, i32 2, !dbg !2804
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan19, align 8, !dbg !2804
  %rotmode20 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !2805
  %30 = load i16, i16* %rotmode20, align 4, !dbg !2805
  %31 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2806
  %rotOrder21 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %31, i32 0, i32 6, !dbg !2807
  store i16 %30, i16* %rotOrder21, align 2, !dbg !2808
  br label %if.end24, !dbg !2809

if.else22:                                        ; preds = %if.then12
  %32 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2810
  %rotOrder23 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %32, i32 0, i32 6, !dbg !2812
  store i16 1, i16* %rotOrder23, align 2, !dbg !2813
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then18
  %33 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2814
  %matrix25 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %33, i32 0, i32 3, !dbg !2815
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix25, i64 0, i64 0, !dbg !2814
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2816
  %obmat27 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 47, !dbg !2817
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat27, i64 0, i64 0, !dbg !2816
  %35 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2818
  %pchan29 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %35, i32 0, i32 2, !dbg !2819
  %36 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan29, align 8, !dbg !2819
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %36, i32 0, i32 29, !dbg !2820
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !2818
  call void @mul_m4_m4m4([4 x float]* %arraydecay26, [4 x float]* %arraydecay28, [4 x float]* %arraydecay30), !dbg !2821
  br label %if.end34, !dbg !2822

if.else31:                                        ; preds = %land.lhs.true, %sw.bb9
  %37 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2823
  %matrix32 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %37, i32 0, i32 3, !dbg !2824
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix32, i64 0, i64 0, !dbg !2823
  call void @unit_m4([4 x float]* %arraydecay33), !dbg !2825
  br label %if.end34

if.end34:                                         ; preds = %if.else31, %if.end24
  %38 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2826
  %startmat35 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %38, i32 0, i32 4, !dbg !2827
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %startmat35, i64 0, i64 0, !dbg !2826
  %39 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2828
  %matrix37 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %39, i32 0, i32 3, !dbg !2829
  %arraydecay38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix37, i64 0, i64 0, !dbg !2828
  call void @copy_m4_m4([4 x float]* %arraydecay36, [4 x float]* %arraydecay38), !dbg !2830
  br label %sw.epilog, !dbg !2831

sw.default:                                       ; preds = %entry
  %40 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2832
  %matrix39 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %40, i32 0, i32 3, !dbg !2833
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix39, i64 0, i64 0, !dbg !2832
  call void @unit_m4([4 x float]* %arraydecay40), !dbg !2834
  %41 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2835
  %startmat41 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %41, i32 0, i32 4, !dbg !2836
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %startmat41, i64 0, i64 0, !dbg !2835
  call void @unit_m4([4 x float]* %arraydecay42), !dbg !2837
  br label %sw.epilog, !dbg !2838

sw.epilog:                                        ; preds = %sw.default, %if.end34, %if.end
  %42 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !2839
  ret %struct.bConstraintOb* %42, !dbg !2840
}

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @unit_m4([4 x float]*) #2

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraints_clear_evalob(%struct.bConstraintOb* %cob) #0 !dbg !2841 {
entry:
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %delta = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !2844, metadata !DIExpression()), !dbg !2845
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %delta, metadata !2846, metadata !DIExpression()), !dbg !2847
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !2848, metadata !DIExpression()), !dbg !2849
  %0 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2850
  %cmp = icmp eq %struct.bConstraintOb* %0, null, !dbg !2852
  br i1 %cmp, label %if.then, label %if.end, !dbg !2853

if.then:                                          ; preds = %entry
  br label %return, !dbg !2854

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !2855
  %1 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2856
  %startmat = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %1, i32 0, i32 4, !dbg !2857
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %startmat, i64 0, i64 0, !dbg !2856
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay1), !dbg !2858
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %delta, i64 0, i64 0, !dbg !2859
  %2 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2860
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %2, i32 0, i32 3, !dbg !2861
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !2860
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !2862
  call void @mul_m4_m4m4([4 x float]* %arraydecay2, [4 x float]* %arraydecay3, [4 x float]* %arraydecay4), !dbg !2863
  %3 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2864
  %type = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %3, i32 0, i32 5, !dbg !2865
  %4 = load i16, i16* %type, align 8, !dbg !2865
  %conv = sext i16 %4 to i32, !dbg !2864
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb15
  ], !dbg !2866

sw.bb:                                            ; preds = %if.end
  %5 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2867
  %ob = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %5, i32 0, i32 1, !dbg !2871
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2871
  %tobool = icmp ne %struct.Object* %6, null, !dbg !2867
  br i1 %tobool, label %if.then5, label %if.end14, !dbg !2872

if.then5:                                         ; preds = %sw.bb
  %7 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2873
  %ob6 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %7, i32 0, i32 1, !dbg !2875
  %8 = load %struct.Object*, %struct.Object** %ob6, align 8, !dbg !2875
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 47, !dbg !2876
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !2873
  %9 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2877
  %matrix8 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %9, i32 0, i32 3, !dbg !2878
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix8, i64 0, i64 0, !dbg !2877
  call void @copy_m4_m4([4 x float]* %arraydecay7, [4 x float]* %arraydecay9), !dbg !2879
  %10 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2880
  %ob10 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %10, i32 0, i32 1, !dbg !2881
  %11 = load %struct.Object*, %struct.Object** %ob10, align 8, !dbg !2881
  %constinv = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 49, !dbg !2882
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %constinv, i64 0, i64 0, !dbg !2880
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %delta, i64 0, i64 0, !dbg !2883
  %call13 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay11, [4 x float]* %arraydecay12), !dbg !2884
  br label %if.end14, !dbg !2885

if.end14:                                         ; preds = %if.then5, %sw.bb
  br label %sw.epilog, !dbg !2886

sw.bb15:                                          ; preds = %if.end
  %12 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2887
  %ob16 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %12, i32 0, i32 1, !dbg !2890
  %13 = load %struct.Object*, %struct.Object** %ob16, align 8, !dbg !2890
  %tobool17 = icmp ne %struct.Object* %13, null, !dbg !2887
  br i1 %tobool17, label %land.lhs.true, label %if.end32, !dbg !2891

land.lhs.true:                                    ; preds = %sw.bb15
  %14 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2892
  %pchan = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %14, i32 0, i32 2, !dbg !2893
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !2893
  %tobool18 = icmp ne %struct.bPoseChannel* %15, null, !dbg !2892
  br i1 %tobool18, label %if.then19, label %if.end32, !dbg !2894

if.then19:                                        ; preds = %land.lhs.true
  %16 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2895
  %pchan20 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %16, i32 0, i32 2, !dbg !2897
  %17 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan20, align 8, !dbg !2897
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %17, i32 0, i32 29, !dbg !2898
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !2895
  %18 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2899
  %ob22 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %18, i32 0, i32 1, !dbg !2900
  %19 = load %struct.Object*, %struct.Object** %ob22, align 8, !dbg !2900
  %imat23 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 50, !dbg !2901
  %arraydecay24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat23, i64 0, i64 0, !dbg !2899
  %20 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2902
  %matrix25 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %20, i32 0, i32 3, !dbg !2903
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix25, i64 0, i64 0, !dbg !2902
  call void @mul_m4_m4m4([4 x float]* %arraydecay21, [4 x float]* %arraydecay24, [4 x float]* %arraydecay26), !dbg !2904
  %21 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2905
  %pchan27 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %21, i32 0, i32 2, !dbg !2906
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan27, align 8, !dbg !2906
  %constinv28 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %22, i32 0, i32 30, !dbg !2907
  %arraydecay29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %constinv28, i64 0, i64 0, !dbg !2905
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %delta, i64 0, i64 0, !dbg !2908
  %call31 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay29, [4 x float]* %arraydecay30), !dbg !2909
  br label %if.end32, !dbg !2910

if.end32:                                         ; preds = %if.then19, %land.lhs.true, %sw.bb15
  br label %sw.epilog, !dbg !2911

sw.epilog:                                        ; preds = %if.end, %if.end32, %if.end14
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2912
  %24 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !2913
  %25 = bitcast %struct.bConstraintOb* %24 to i8*, !dbg !2913
  call void %23(i8* %25), !dbg !2912
  br label %return, !dbg !2914

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !2914
}

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraint_mat_convertspace(%struct.Object* %ob, %struct.bPoseChannel* %pchan, [4 x float]* %mat, i16 signext %from, i16 signext %to) #0 !dbg !2915 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %from.addr = alloca i16, align 2
  %to.addr = alloca i16, align 2
  %diff_mat = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2918, metadata !DIExpression()), !dbg !2919
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !2920, metadata !DIExpression()), !dbg !2921
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !2922, metadata !DIExpression()), !dbg !2923
  store i16 %from, i16* %from.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %from.addr, metadata !2924, metadata !DIExpression()), !dbg !2925
  store i16 %to, i16* %to.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %to.addr, metadata !2926, metadata !DIExpression()), !dbg !2927
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %diff_mat, metadata !2928, metadata !DIExpression()), !dbg !2929
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !2930, metadata !DIExpression()), !dbg !2931
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2932
  %cmp = icmp eq %struct.Object* %0, null, !dbg !2934
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2935

lor.lhs.false:                                    ; preds = %entry
  %1 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !2936
  %cmp1 = icmp eq [4 x float]* %1, null, !dbg !2937
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2938

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end138, !dbg !2939

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i16, i16* %from.addr, align 2, !dbg !2940
  %conv = sext i16 %2 to i32, !dbg !2940
  %3 = load i16, i16* %to.addr, align 2, !dbg !2942
  %conv2 = sext i16 %3 to i32, !dbg !2942
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !2943
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !2944

if.then5:                                         ; preds = %if.end
  br label %if.end138, !dbg !2945

if.end6:                                          ; preds = %if.end
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2946
  %tobool = icmp ne %struct.bPoseChannel* %4, null, !dbg !2946
  br i1 %tobool, label %if.then7, label %if.else84, !dbg !2948

if.then7:                                         ; preds = %if.end6
  %5 = load i16, i16* %from.addr, align 2, !dbg !2949
  %conv8 = sext i16 %5 to i32, !dbg !2949
  switch i32 %conv8, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb20
    i32 1, label %sw.bb51
    i32 3, label %sw.bb65
  ], !dbg !2951

sw.bb:                                            ; preds = %if.then7
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !2952
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2955
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 47, !dbg !2956
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !2955
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay9), !dbg !2957
  %7 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !2958
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !2959
  %8 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !2960
  call void @mul_m4_m4m4([4 x float]* %7, [4 x float]* %arraydecay10, [4 x float]* %8), !dbg !2961
  %9 = load i16, i16* %to.addr, align 2, !dbg !2962
  %conv11 = sext i16 %9 to i32, !dbg !2962
  %cmp12 = icmp eq i32 %conv11, 1, !dbg !2962
  br i1 %cmp12, label %if.then18, label %lor.lhs.false14, !dbg !2962

lor.lhs.false14:                                  ; preds = %sw.bb
  %10 = load i16, i16* %to.addr, align 2, !dbg !2962
  %conv15 = sext i16 %10 to i32, !dbg !2962
  %cmp16 = icmp eq i32 %conv15, 3, !dbg !2962
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !2964

if.then18:                                        ; preds = %lor.lhs.false14, %sw.bb
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2965
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2967
  %13 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !2968
  %14 = load i16, i16* %to.addr, align 2, !dbg !2969
  call void @BKE_constraint_mat_convertspace(%struct.Object* %11, %struct.bPoseChannel* %12, [4 x float]* %13, i16 signext 2, i16 signext %14), !dbg !2970
  br label %if.end19, !dbg !2971

if.end19:                                         ; preds = %if.then18, %lor.lhs.false14
  br label %sw.epilog, !dbg !2972

sw.bb20:                                          ; preds = %if.then7
  %15 = load i16, i16* %to.addr, align 2, !dbg !2973
  %conv21 = sext i16 %15 to i32, !dbg !2973
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !2976
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !2977

if.then24:                                        ; preds = %sw.bb20
  %16 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !2978
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2980
  %obmat25 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 47, !dbg !2981
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat25, i64 0, i64 0, !dbg !2980
  %18 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !2982
  call void @mul_m4_m4m4([4 x float]* %16, [4 x float]* %arraydecay26, [4 x float]* %18), !dbg !2983
  br label %if.end50, !dbg !2984

if.else:                                          ; preds = %sw.bb20
  %19 = load i16, i16* %to.addr, align 2, !dbg !2985
  %conv27 = sext i16 %19 to i32, !dbg !2985
  %cmp28 = icmp eq i32 %conv27, 1, !dbg !2987
  br i1 %cmp28, label %if.then30, label %if.else34, !dbg !2988

if.then30:                                        ; preds = %if.else
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2989
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %20, i32 0, i32 12, !dbg !2992
  %21 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2992
  %tobool31 = icmp ne %struct.Bone* %21, null, !dbg !2989
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !2993

if.then32:                                        ; preds = %if.then30
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2994
  %23 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !2996
  %24 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !2997
  call void @BKE_armature_mat_pose_to_bone(%struct.bPoseChannel* %22, [4 x float]* %23, [4 x float]* %24), !dbg !2998
  br label %if.end33, !dbg !2999

if.end33:                                         ; preds = %if.then32, %if.then30
  br label %if.end49, !dbg !3000

if.else34:                                        ; preds = %if.else
  %25 = load i16, i16* %to.addr, align 2, !dbg !3001
  %conv35 = sext i16 %25 to i32, !dbg !3001
  %cmp36 = icmp eq i32 %conv35, 3, !dbg !3003
  br i1 %cmp36, label %if.then38, label %if.end48, !dbg !3004

if.then38:                                        ; preds = %if.else34
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3005
  %bone39 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %26, i32 0, i32 12, !dbg !3008
  %27 = load %struct.Bone*, %struct.Bone** %bone39, align 8, !dbg !3008
  %tobool40 = icmp ne %struct.Bone* %27, null, !dbg !3005
  br i1 %tobool40, label %if.then41, label %if.end47, !dbg !3009

if.then41:                                        ; preds = %if.then38
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3010
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3012
  %bone43 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %28, i32 0, i32 12, !dbg !3013
  %29 = load %struct.Bone*, %struct.Bone** %bone43, align 8, !dbg !3013
  %arm_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %29, i32 0, i32 13, !dbg !3014
  %arraydecay44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat, i64 0, i64 0, !dbg !3012
  %call45 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay42, [4 x float]* %arraydecay44), !dbg !3015
  %30 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3016
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3017
  %31 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3018
  call void @mul_m4_m4m4([4 x float]* %30, [4 x float]* %arraydecay46, [4 x float]* %31), !dbg !3019
  br label %if.end47, !dbg !3020

if.end47:                                         ; preds = %if.then41, %if.then38
  br label %if.end48, !dbg !3021

if.end48:                                         ; preds = %if.end47, %if.else34
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end33
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then24
  br label %sw.epilog, !dbg !3022

sw.bb51:                                          ; preds = %if.then7
  %32 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3023
  %bone52 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %32, i32 0, i32 12, !dbg !3026
  %33 = load %struct.Bone*, %struct.Bone** %bone52, align 8, !dbg !3026
  %tobool53 = icmp ne %struct.Bone* %33, null, !dbg !3023
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !3027

if.then54:                                        ; preds = %sw.bb51
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3028
  %35 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3030
  %36 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3031
  call void @BKE_armature_mat_bone_to_pose(%struct.bPoseChannel* %34, [4 x float]* %35, [4 x float]* %36), !dbg !3032
  br label %if.end55, !dbg !3033

if.end55:                                         ; preds = %if.then54, %sw.bb51
  %37 = load i16, i16* %to.addr, align 2, !dbg !3034
  %conv56 = sext i16 %37 to i32, !dbg !3034
  %cmp57 = icmp eq i32 %conv56, 0, !dbg !3034
  br i1 %cmp57, label %if.then63, label %lor.lhs.false59, !dbg !3034

lor.lhs.false59:                                  ; preds = %if.end55
  %38 = load i16, i16* %to.addr, align 2, !dbg !3034
  %conv60 = sext i16 %38 to i32, !dbg !3034
  %cmp61 = icmp eq i32 %conv60, 3, !dbg !3034
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !3036

if.then63:                                        ; preds = %lor.lhs.false59, %if.end55
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3037
  %40 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3039
  %41 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3040
  %42 = load i16, i16* %to.addr, align 2, !dbg !3041
  call void @BKE_constraint_mat_convertspace(%struct.Object* %39, %struct.bPoseChannel* %40, [4 x float]* %41, i16 signext 2, i16 signext %42), !dbg !3042
  br label %if.end64, !dbg !3043

if.end64:                                         ; preds = %if.then63, %lor.lhs.false59
  br label %sw.epilog, !dbg !3044

sw.bb65:                                          ; preds = %if.then7
  %43 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3045
  %bone66 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %43, i32 0, i32 12, !dbg !3048
  %44 = load %struct.Bone*, %struct.Bone** %bone66, align 8, !dbg !3048
  %tobool67 = icmp ne %struct.Bone* %44, null, !dbg !3045
  br i1 %tobool67, label %if.then68, label %if.end74, !dbg !3049

if.then68:                                        ; preds = %sw.bb65
  %arraydecay69 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3050
  %45 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3052
  %bone70 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %45, i32 0, i32 12, !dbg !3053
  %46 = load %struct.Bone*, %struct.Bone** %bone70, align 8, !dbg !3053
  %arm_mat71 = getelementptr inbounds %struct.Bone, %struct.Bone* %46, i32 0, i32 13, !dbg !3054
  %arraydecay72 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat71, i64 0, i64 0, !dbg !3052
  call void @copy_m4_m4([4 x float]* %arraydecay69, [4 x float]* %arraydecay72), !dbg !3055
  %47 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3056
  %48 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3057
  %arraydecay73 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3058
  call void @mul_m4_m4m4([4 x float]* %47, [4 x float]* %48, [4 x float]* %arraydecay73), !dbg !3059
  br label %if.end74, !dbg !3060

if.end74:                                         ; preds = %if.then68, %sw.bb65
  %49 = load i16, i16* %to.addr, align 2, !dbg !3061
  %conv75 = sext i16 %49 to i32, !dbg !3061
  %cmp76 = icmp eq i32 %conv75, 0, !dbg !3061
  br i1 %cmp76, label %if.then82, label %lor.lhs.false78, !dbg !3061

lor.lhs.false78:                                  ; preds = %if.end74
  %50 = load i16, i16* %to.addr, align 2, !dbg !3061
  %conv79 = sext i16 %50 to i32, !dbg !3061
  %cmp80 = icmp eq i32 %conv79, 1, !dbg !3061
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !3063

if.then82:                                        ; preds = %lor.lhs.false78, %if.end74
  %51 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3064
  %52 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3066
  %53 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3067
  %54 = load i16, i16* %to.addr, align 2, !dbg !3068
  call void @BKE_constraint_mat_convertspace(%struct.Object* %51, %struct.bPoseChannel* %52, [4 x float]* %53, i16 signext 2, i16 signext %54), !dbg !3069
  br label %if.end83, !dbg !3070

if.end83:                                         ; preds = %if.then82, %lor.lhs.false78
  br label %sw.epilog, !dbg !3071

sw.epilog:                                        ; preds = %if.then7, %if.end83, %if.end64, %if.end50, %if.end19
  br label %if.end138, !dbg !3072

if.else84:                                        ; preds = %if.end6
  %55 = load i16, i16* %from.addr, align 2, !dbg !3073
  %conv85 = sext i16 %55 to i32, !dbg !3073
  %cmp86 = icmp eq i32 %conv85, 0, !dbg !3076
  br i1 %cmp86, label %land.lhs.true, label %if.else110, !dbg !3077

land.lhs.true:                                    ; preds = %if.else84
  %56 = load i16, i16* %to.addr, align 2, !dbg !3078
  %conv88 = sext i16 %56 to i32, !dbg !3078
  %cmp89 = icmp eq i32 %conv88, 1, !dbg !3079
  br i1 %cmp89, label %if.then91, label %if.else110, !dbg !3080

if.then91:                                        ; preds = %land.lhs.true
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3081
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 9, !dbg !3084
  %58 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !3084
  %tobool92 = icmp ne %struct.Object* %58, null, !dbg !3081
  br i1 %tobool92, label %if.then93, label %if.else102, !dbg !3085

if.then93:                                        ; preds = %if.then91
  %arraydecay94 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3086
  %59 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3088
  %parent95 = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 9, !dbg !3089
  %60 = load %struct.Object*, %struct.Object** %parent95, align 8, !dbg !3089
  %obmat96 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 47, !dbg !3090
  %arraydecay97 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat96, i64 0, i64 0, !dbg !3088
  %61 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3091
  %parentinv = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 48, !dbg !3092
  %arraydecay98 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv, i64 0, i64 0, !dbg !3091
  call void @mul_m4_m4m4([4 x float]* %arraydecay94, [4 x float]* %arraydecay97, [4 x float]* %arraydecay98), !dbg !3093
  %arraydecay99 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3094
  %arraydecay100 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3095
  call void @invert_m4_m4_safe([4 x float]* %arraydecay99, [4 x float]* %arraydecay100), !dbg !3096
  %62 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3097
  %arraydecay101 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3098
  %63 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3099
  call void @mul_m4_m4m4([4 x float]* %62, [4 x float]* %arraydecay101, [4 x float]* %63), !dbg !3100
  br label %if.end109, !dbg !3101

if.else102:                                       ; preds = %if.then91
  %64 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3102
  %arraydecay103 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3104
  call void @BKE_object_to_mat4(%struct.Object* %64, [4 x float]* %arraydecay103), !dbg !3105
  %arraydecay104 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3106
  call void @normalize_m4([4 x float]* %arraydecay104), !dbg !3107
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 3, !dbg !3108
  %arraydecay105 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !3108
  call void @zero_v3(float* %arraydecay105), !dbg !3109
  %arraydecay106 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3110
  %arraydecay107 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3111
  call void @invert_m4_m4_safe([4 x float]* %arraydecay106, [4 x float]* %arraydecay107), !dbg !3112
  %65 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3113
  %arraydecay108 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3114
  %66 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3115
  call void @mul_m4_m4m4([4 x float]* %65, [4 x float]* %arraydecay108, [4 x float]* %66), !dbg !3116
  br label %if.end109

if.end109:                                        ; preds = %if.else102, %if.then93
  br label %if.end137, !dbg !3117

if.else110:                                       ; preds = %land.lhs.true, %if.else84
  %67 = load i16, i16* %from.addr, align 2, !dbg !3118
  %conv111 = sext i16 %67 to i32, !dbg !3118
  %cmp112 = icmp eq i32 %conv111, 1, !dbg !3120
  br i1 %cmp112, label %land.lhs.true114, label %if.end136, !dbg !3121

land.lhs.true114:                                 ; preds = %if.else110
  %68 = load i16, i16* %to.addr, align 2, !dbg !3122
  %conv115 = sext i16 %68 to i32, !dbg !3122
  %cmp116 = icmp eq i32 %conv115, 0, !dbg !3123
  br i1 %cmp116, label %if.then118, label %if.end136, !dbg !3124

if.then118:                                       ; preds = %land.lhs.true114
  %69 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3125
  %parent119 = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 9, !dbg !3128
  %70 = load %struct.Object*, %struct.Object** %parent119, align 8, !dbg !3128
  %tobool120 = icmp ne %struct.Object* %70, null, !dbg !3125
  br i1 %tobool120, label %if.then121, label %if.else129, !dbg !3129

if.then121:                                       ; preds = %if.then118
  %arraydecay122 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3130
  %71 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3132
  %parent123 = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 9, !dbg !3133
  %72 = load %struct.Object*, %struct.Object** %parent123, align 8, !dbg !3133
  %obmat124 = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 47, !dbg !3134
  %arraydecay125 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat124, i64 0, i64 0, !dbg !3132
  %73 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3135
  %parentinv126 = getelementptr inbounds %struct.Object, %struct.Object* %73, i32 0, i32 48, !dbg !3136
  %arraydecay127 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv126, i64 0, i64 0, !dbg !3135
  call void @mul_m4_m4m4([4 x float]* %arraydecay122, [4 x float]* %arraydecay125, [4 x float]* %arraydecay127), !dbg !3137
  %74 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3138
  %arraydecay128 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3139
  %75 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3140
  call void @mul_m4_m4m4([4 x float]* %74, [4 x float]* %arraydecay128, [4 x float]* %75), !dbg !3141
  br label %if.end135, !dbg !3142

if.else129:                                       ; preds = %if.then118
  %76 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3143
  %arraydecay130 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3145
  call void @BKE_object_to_mat4(%struct.Object* %76, [4 x float]* %arraydecay130), !dbg !3146
  %arraydecay131 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3147
  call void @normalize_m4([4 x float]* %arraydecay131), !dbg !3148
  %arrayidx132 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 3, !dbg !3149
  %arraydecay133 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx132, i64 0, i64 0, !dbg !3149
  call void @zero_v3(float* %arraydecay133), !dbg !3150
  %77 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3151
  %arraydecay134 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !3152
  %78 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !3153
  call void @mul_m4_m4m4([4 x float]* %77, [4 x float]* %arraydecay134, [4 x float]* %78), !dbg !3154
  br label %if.end135

if.end135:                                        ; preds = %if.else129, %if.then121
  br label %if.end136, !dbg !3155

if.end136:                                        ; preds = %if.end135, %land.lhs.true114, %if.else110
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end109
  br label %if.end138

if.end138:                                        ; preds = %if.then, %if.then5, %if.end137, %sw.epilog
  ret void, !dbg !3156
}

declare dso_local void @BKE_armature_mat_pose_to_bone(%struct.bPoseChannel*, [4 x float]*, [4 x float]*) #2

declare dso_local void @BKE_armature_mat_bone_to_pose(%struct.bPoseChannel*, [4 x float]*, [4 x float]*) #2

declare dso_local void @invert_m4_m4_safe([4 x float]*, [4 x float]*) #2

declare dso_local void @BKE_object_to_mat4(%struct.Object*, [4 x float]*) #2

declare dso_local void @normalize_m4([4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !3157 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3161, metadata !DIExpression()), !dbg !3162
  %0 = load float*, float** %r.addr, align 8, !dbg !3163
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3163
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !3164
  %1 = load float*, float** %r.addr, align 8, !dbg !3165
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !3165
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !3166
  %2 = load float*, float** %r.addr, align 8, !dbg !3167
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !3167
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !3168
  ret void, !dbg !3169
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_from_type(i32 %type) #0 !dbg !3170 {
entry:
  %retval = alloca %struct.bConstraintTypeInfo*, align 8
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3173, metadata !DIExpression()), !dbg !3174
  %0 = load i16, i16* @CTI_INIT, align 2, !dbg !3175
  %tobool = icmp ne i16 %0, 0, !dbg !3175
  br i1 %tobool, label %if.then, label %if.end, !dbg !3177

if.then:                                          ; preds = %entry
  call void @constraints_init_typeinfo(), !dbg !3178
  store i16 0, i16* @CTI_INIT, align 2, !dbg !3180
  br label %if.end, !dbg !3181

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !3182
  %cmp = icmp sge i32 %1, 0, !dbg !3184
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3185

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* %type.addr, align 4, !dbg !3186
  %cmp1 = icmp slt i32 %2, 29, !dbg !3187
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !3188

if.then2:                                         ; preds = %land.lhs.true
  %3 = load i32, i32* %type.addr, align 4, !dbg !3189
  %idxprom = sext i32 %3 to i64, !dbg !3191
  %arrayidx = getelementptr inbounds [29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 %idxprom, !dbg !3191
  %4 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %arrayidx, align 8, !dbg !3191
  store %struct.bConstraintTypeInfo* %4, %struct.bConstraintTypeInfo** %retval, align 8, !dbg !3192
  br label %return, !dbg !3192

if.else:                                          ; preds = %land.lhs.true, %if.end
  %5 = load i32, i32* %type.addr, align 4, !dbg !3193
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i64 0, i64 0), i32 %5), !dbg !3195
  br label %if.end3

if.end3:                                          ; preds = %if.else
  store %struct.bConstraintTypeInfo* null, %struct.bConstraintTypeInfo** %retval, align 8, !dbg !3196
  br label %return, !dbg !3196

return:                                           ; preds = %if.end3, %if.then2
  %6 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %retval, align 8, !dbg !3197
  ret %struct.bConstraintTypeInfo* %6, !dbg !3197
}

; Function Attrs: noinline nounwind uwtable
define internal void @constraints_init_typeinfo() #0 !dbg !3198 {
entry:
  store %struct.bConstraintTypeInfo* null, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 0), align 16, !dbg !3201
  store %struct.bConstraintTypeInfo* @CTI_CHILDOF, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 1), align 8, !dbg !3202
  store %struct.bConstraintTypeInfo* @CTI_TRACKTO, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 2), align 16, !dbg !3203
  store %struct.bConstraintTypeInfo* @CTI_KINEMATIC, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 3), align 8, !dbg !3204
  store %struct.bConstraintTypeInfo* @CTI_FOLLOWPATH, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 4), align 16, !dbg !3205
  store %struct.bConstraintTypeInfo* @CTI_ROTLIMIT, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 5), align 8, !dbg !3206
  store %struct.bConstraintTypeInfo* @CTI_LOCLIMIT, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 6), align 16, !dbg !3207
  store %struct.bConstraintTypeInfo* @CTI_SIZELIMIT, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 7), align 8, !dbg !3208
  store %struct.bConstraintTypeInfo* @CTI_ROTLIKE, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 8), align 16, !dbg !3209
  store %struct.bConstraintTypeInfo* @CTI_LOCLIKE, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 9), align 8, !dbg !3210
  store %struct.bConstraintTypeInfo* @CTI_SIZELIKE, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 10), align 16, !dbg !3211
  store %struct.bConstraintTypeInfo* @CTI_PYTHON, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 11), align 8, !dbg !3212
  store %struct.bConstraintTypeInfo* @CTI_ACTION, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 12), align 16, !dbg !3213
  store %struct.bConstraintTypeInfo* @CTI_LOCKTRACK, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 13), align 8, !dbg !3214
  store %struct.bConstraintTypeInfo* @CTI_DISTLIMIT, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 14), align 16, !dbg !3215
  store %struct.bConstraintTypeInfo* @CTI_STRETCHTO, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 15), align 8, !dbg !3216
  store %struct.bConstraintTypeInfo* @CTI_MINMAX, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 16), align 16, !dbg !3217
  store %struct.bConstraintTypeInfo* @CTI_RIGIDBODYJOINT, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 17), align 8, !dbg !3218
  store %struct.bConstraintTypeInfo* @CTI_CLAMPTO, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 18), align 16, !dbg !3219
  store %struct.bConstraintTypeInfo* @CTI_TRANSFORM, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 19), align 8, !dbg !3220
  store %struct.bConstraintTypeInfo* @CTI_SHRINKWRAP, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 20), align 16, !dbg !3221
  store %struct.bConstraintTypeInfo* @CTI_DAMPTRACK, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 21), align 8, !dbg !3222
  store %struct.bConstraintTypeInfo* @CTI_SPLINEIK, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 22), align 16, !dbg !3223
  store %struct.bConstraintTypeInfo* @CTI_TRANSLIKE, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 23), align 8, !dbg !3224
  store %struct.bConstraintTypeInfo* @CTI_SAMEVOL, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 24), align 16, !dbg !3225
  store %struct.bConstraintTypeInfo* @CTI_PIVOT, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 25), align 8, !dbg !3226
  store %struct.bConstraintTypeInfo* @CTI_FOLLOWTRACK, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 26), align 16, !dbg !3227
  store %struct.bConstraintTypeInfo* @CTI_CAMERASOLVER, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 27), align 8, !dbg !3228
  store %struct.bConstraintTypeInfo* @CTI_OBJECTSOLVER, %struct.bConstraintTypeInfo** getelementptr inbounds ([29 x %struct.bConstraintTypeInfo*], [29 x %struct.bConstraintTypeInfo*]* @constraintsTypeInfo, i64 0, i64 28), align 16, !dbg !3229
  ret void, !dbg !3230
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %con) #0 !dbg !3231 {
entry:
  %retval = alloca %struct.bConstraintTypeInfo*, align 8
  %con.addr = alloca %struct.bConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !3234, metadata !DIExpression()), !dbg !3235
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3236
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !3236
  br i1 %tobool, label %if.then, label %if.else, !dbg !3238

if.then:                                          ; preds = %entry
  %1 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3239
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %1, i32 0, i32 3, !dbg !3240
  %2 = load i16, i16* %type, align 8, !dbg !3240
  %conv = sext i16 %2 to i32, !dbg !3239
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_from_type(i32 %conv), !dbg !3241
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %retval, align 8, !dbg !3242
  br label %return, !dbg !3242

if.else:                                          ; preds = %entry
  store %struct.bConstraintTypeInfo* null, %struct.bConstraintTypeInfo** %retval, align 8, !dbg !3243
  br label %return, !dbg !3243

return:                                           ; preds = %if.else, %if.then
  %3 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %retval, align 8, !dbg !3244
  ret %struct.bConstraintTypeInfo* %3, !dbg !3244
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraint_free_data(%struct.bConstraint* %con) #0 !dbg !3245 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !3248, metadata !DIExpression()), !dbg !3249
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3250
  %data = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !3252
  %1 = load i8*, i8** %data, align 8, !dbg !3252
  %tobool = icmp ne i8* %1, null, !dbg !3250
  br i1 %tobool, label %if.then, label %if.end12, !dbg !3253

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !3254, metadata !DIExpression()), !dbg !3256
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3257
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %2), !dbg !3258
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3256
  %3 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3259
  %tobool1 = icmp ne %struct.bConstraintTypeInfo* %3, null, !dbg !3259
  br i1 %tobool1, label %if.then2, label %if.end10, !dbg !3261

if.then2:                                         ; preds = %if.then
  %4 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3262
  %free_data = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %4, i32 0, i32 4, !dbg !3265
  %5 = load void (%struct.bConstraint*)*, void (%struct.bConstraint*)** %free_data, align 8, !dbg !3265
  %tobool3 = icmp ne void (%struct.bConstraint*)* %5, null, !dbg !3262
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !3266

if.then4:                                         ; preds = %if.then2
  %6 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3267
  %free_data5 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %6, i32 0, i32 4, !dbg !3268
  %7 = load void (%struct.bConstraint*)*, void (%struct.bConstraint*)** %free_data5, align 8, !dbg !3268
  %8 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3269
  call void %7(%struct.bConstraint* %8), !dbg !3267
  br label %if.end, !dbg !3267

if.end:                                           ; preds = %if.then4, %if.then2
  %9 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3270
  %id_looper = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %9, i32 0, i32 5, !dbg !3272
  %10 = load void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)** %id_looper, align 8, !dbg !3272
  %tobool6 = icmp ne void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* %10, null, !dbg !3270
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !3273

if.then7:                                         ; preds = %if.end
  %11 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3274
  %id_looper8 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %11, i32 0, i32 5, !dbg !3275
  %12 = load void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)** %id_looper8, align 8, !dbg !3275
  %13 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3276
  call void %12(%struct.bConstraint* %13, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* @con_unlink_refs_cb, i8* null), !dbg !3274
  br label %if.end9, !dbg !3274

if.end9:                                          ; preds = %if.then7, %if.end
  br label %if.end10, !dbg !3277

if.end10:                                         ; preds = %if.end9, %if.then
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3278
  %15 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3279
  %data11 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %15, i32 0, i32 2, !dbg !3280
  %16 = load i8*, i8** %data11, align 8, !dbg !3280
  call void %14(i8* %16), !dbg !3278
  br label %if.end12, !dbg !3281

if.end12:                                         ; preds = %if.end10, %entry
  ret void, !dbg !3282
}

; Function Attrs: noinline nounwind uwtable
define internal void @con_unlink_refs_cb(%struct.bConstraint* %UNUSED_con, %struct.ID** %idpoin, i8 zeroext %is_reference, i8* %UNUSED_userData) #0 !dbg !3283 {
entry:
  %UNUSED_con.addr = alloca %struct.bConstraint*, align 8
  %idpoin.addr = alloca %struct.ID**, align 8
  %is_reference.addr = alloca i8, align 1
  %UNUSED_userData.addr = alloca i8*, align 8
  store %struct.bConstraint* %UNUSED_con, %struct.bConstraint** %UNUSED_con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %UNUSED_con.addr, metadata !3286, metadata !DIExpression()), !dbg !3287
  store %struct.ID** %idpoin, %struct.ID*** %idpoin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID*** %idpoin.addr, metadata !3288, metadata !DIExpression()), !dbg !3289
  store i8 %is_reference, i8* %is_reference.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_reference.addr, metadata !3290, metadata !DIExpression()), !dbg !3291
  store i8* %UNUSED_userData, i8** %UNUSED_userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_userData.addr, metadata !3292, metadata !DIExpression()), !dbg !3293
  %0 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3294
  %1 = load %struct.ID*, %struct.ID** %0, align 8, !dbg !3296
  %tobool = icmp ne %struct.ID* %1, null, !dbg !3296
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3297

land.lhs.true:                                    ; preds = %entry
  %2 = load i8, i8* %is_reference.addr, align 1, !dbg !3298
  %conv = zext i8 %2 to i32, !dbg !3298
  %tobool1 = icmp ne i32 %conv, 0, !dbg !3298
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3299

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3300
  %4 = load %struct.ID*, %struct.ID** %3, align 8, !dbg !3301
  call void @id_us_min(%struct.ID* %4), !dbg !3302
  br label %if.end, !dbg !3302

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !3303
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraints_free(%struct.ListBase* %list) #0 !dbg !3304 {
entry:
  %list.addr = alloca %struct.ListBase*, align 8
  %con = alloca %struct.bConstraint*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !3307, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !3309, metadata !DIExpression()), !dbg !3310
  %0 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !3311
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3313
  %1 = load i8*, i8** %first, align 8, !dbg !3313
  %2 = bitcast i8* %1 to %struct.bConstraint*, !dbg !3311
  store %struct.bConstraint* %2, %struct.bConstraint** %con, align 8, !dbg !3314
  br label %for.cond, !dbg !3315

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3316
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !3318
  br i1 %tobool, label %for.body, label %for.end, !dbg !3318

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3319
  call void @BKE_constraint_free_data(%struct.bConstraint* %4), !dbg !3320
  br label %for.inc, !dbg !3320

for.inc:                                          ; preds = %for.body
  %5 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3321
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %5, i32 0, i32 0, !dbg !3322
  %6 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !3322
  store %struct.bConstraint* %6, %struct.bConstraint** %con, align 8, !dbg !3323
  br label %for.cond, !dbg !3324, !llvm.loop !3325

for.end:                                          ; preds = %for.cond
  %7 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !3327
  call void @BLI_freelistN(%struct.ListBase* %7), !dbg !3328
  ret void, !dbg !3329
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_constraint_remove(%struct.ListBase* %list, %struct.bConstraint* %con) #0 !dbg !3330 {
entry:
  %retval = alloca i8, align 1
  %list.addr = alloca %struct.ListBase*, align 8
  %con.addr = alloca %struct.bConstraint*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !3333, metadata !DIExpression()), !dbg !3334
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !3335, metadata !DIExpression()), !dbg !3336
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3337
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !3337
  br i1 %tobool, label %if.then, label %if.else, !dbg !3339

if.then:                                          ; preds = %entry
  %1 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3340
  call void @BKE_constraint_free_data(%struct.bConstraint* %1), !dbg !3342
  %2 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !3343
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3344
  %4 = bitcast %struct.bConstraint* %3 to i8*, !dbg !3344
  call void @BLI_freelinkN(%struct.ListBase* %2, i8* %4), !dbg !3345
  store i8 1, i8* %retval, align 1, !dbg !3346
  br label %return, !dbg !3346

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3347
  br label %return, !dbg !3347

return:                                           ; preds = %if.else, %if.then
  %5 = load i8, i8* %retval, align 1, !dbg !3348
  ret i8 %5, !dbg !3348
}

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bConstraint* @BKE_constraint_add_for_pose(%struct.Object* %ob, %struct.bPoseChannel* %pchan, i8* %name, i16 signext %type) #0 !dbg !3349 {
entry:
  %retval = alloca %struct.bConstraint*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %name.addr = alloca i8*, align 8
  %type.addr = alloca i16, align 2
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3354, metadata !DIExpression()), !dbg !3355
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !3356, metadata !DIExpression()), !dbg !3357
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3358, metadata !DIExpression()), !dbg !3359
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !3360, metadata !DIExpression()), !dbg !3361
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3362
  %cmp = icmp eq %struct.bPoseChannel* %0, null, !dbg !3364
  br i1 %cmp, label %if.then, label %if.end, !dbg !3365

if.then:                                          ; preds = %entry
  store %struct.bConstraint* null, %struct.bConstraint** %retval, align 8, !dbg !3366
  br label %return, !dbg !3366

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3367
  %2 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3368
  %3 = load i8*, i8** %name.addr, align 8, !dbg !3369
  %4 = load i16, i16* %type.addr, align 2, !dbg !3370
  %call = call %struct.bConstraint* @add_new_constraint(%struct.Object* %1, %struct.bPoseChannel* %2, i8* %3, i16 signext %4), !dbg !3371
  store %struct.bConstraint* %call, %struct.bConstraint** %retval, align 8, !dbg !3372
  br label %return, !dbg !3372

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.bConstraint*, %struct.bConstraint** %retval, align 8, !dbg !3373
  ret %struct.bConstraint* %5, !dbg !3373
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.bConstraint* @add_new_constraint(%struct.Object* %ob, %struct.bPoseChannel* %pchan, i8* %name, i16 signext %type) #0 !dbg !3374 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %name.addr = alloca i8*, align 8
  %type.addr = alloca i16, align 2
  %con = alloca %struct.bConstraint*, align 8
  %list = alloca %struct.ListBase*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3377, metadata !DIExpression()), !dbg !3378
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !3379, metadata !DIExpression()), !dbg !3380
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3381, metadata !DIExpression()), !dbg !3382
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !3383, metadata !DIExpression()), !dbg !3384
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !3385, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list, metadata !3387, metadata !DIExpression()), !dbg !3388
  %0 = load i8*, i8** %name.addr, align 8, !dbg !3389
  %1 = load i16, i16* %type.addr, align 2, !dbg !3390
  %call = call %struct.bConstraint* @add_new_constraint_internal(i8* %0, i16 signext %1), !dbg !3391
  store %struct.bConstraint* %call, %struct.bConstraint** %con, align 8, !dbg !3392
  %2 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3393
  %tobool = icmp ne %struct.bPoseChannel* %2, null, !dbg !3394
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3394

cond.true:                                        ; preds = %entry
  %3 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3395
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %3, i32 0, i32 3, !dbg !3396
  br label %cond.end, !dbg !3394

cond.false:                                       ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3397
  %constraints1 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 106, !dbg !3398
  br label %cond.end, !dbg !3394

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ListBase* [ %constraints, %cond.true ], [ %constraints1, %cond.false ], !dbg !3394
  store %struct.ListBase* %cond, %struct.ListBase** %list, align 8, !dbg !3399
  %5 = load %struct.ListBase*, %struct.ListBase** %list, align 8, !dbg !3400
  %tobool2 = icmp ne %struct.ListBase* %5, null, !dbg !3400
  br i1 %tobool2, label %if.then, label %if.end7, !dbg !3402

if.then:                                          ; preds = %cond.end
  %6 = load %struct.ListBase*, %struct.ListBase** %list, align 8, !dbg !3403
  %7 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3405
  %8 = bitcast %struct.bConstraint* %7 to i8*, !dbg !3405
  call void @BLI_addtail(%struct.ListBase* %6, i8* %8), !dbg !3406
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3407
  %10 = load %struct.ListBase*, %struct.ListBase** %list, align 8, !dbg !3408
  call void @BKE_constraint_unique_name(%struct.bConstraint* %9, %struct.ListBase* %10), !dbg !3409
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3410
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3412
  %call3 = call zeroext i8 @BKE_constraints_proxylocked_owner(%struct.Object* %11, %struct.bPoseChannel* %12), !dbg !3413
  %tobool4 = icmp ne i8 %call3, 0, !dbg !3413
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !3414

if.then5:                                         ; preds = %if.then
  %13 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3415
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %13, i32 0, i32 4, !dbg !3416
  %14 = load i16, i16* %flag, align 2, !dbg !3417
  %conv = sext i16 %14 to i32, !dbg !3417
  %or = or i32 %conv, 256, !dbg !3417
  %conv6 = trunc i32 %or to i16, !dbg !3417
  store i16 %conv6, i16* %flag, align 2, !dbg !3417
  br label %if.end, !dbg !3415

if.end:                                           ; preds = %if.then5, %if.then
  %15 = load %struct.ListBase*, %struct.ListBase** %list, align 8, !dbg !3418
  %16 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3419
  call void @BKE_constraints_active_set(%struct.ListBase* %15, %struct.bConstraint* %16), !dbg !3420
  br label %if.end7, !dbg !3421

if.end7:                                          ; preds = %if.end, %cond.end
  %17 = load i16, i16* %type.addr, align 2, !dbg !3422
  %conv8 = sext i16 %17 to i32, !dbg !3422
  switch i32 %conv8, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !3423

sw.bb:                                            ; preds = %if.end7
  %18 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3424
  %tobool9 = icmp ne %struct.bPoseChannel* %18, null, !dbg !3424
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !3428

if.then10:                                        ; preds = %sw.bb
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3429
  %ownspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 5, !dbg !3431
  store i8 2, i8* %ownspace, align 4, !dbg !3432
  %20 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3433
  %flag11 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %20, i32 0, i32 4, !dbg !3434
  %21 = load i16, i16* %flag11, align 2, !dbg !3435
  %conv12 = sext i16 %21 to i32, !dbg !3435
  %or13 = or i32 %conv12, 64, !dbg !3435
  %conv14 = trunc i32 %or13 to i16, !dbg !3435
  store i16 %conv14, i16* %flag11, align 2, !dbg !3435
  br label %if.end15, !dbg !3436

if.end15:                                         ; preds = %if.then10, %sw.bb
  br label %sw.epilog, !dbg !3437

sw.epilog:                                        ; preds = %if.end7, %if.end15
  %22 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3438
  ret %struct.bConstraint* %22, !dbg !3439
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bConstraint* @BKE_constraint_add_for_object(%struct.Object* %ob, i8* %name, i16 signext %type) #0 !dbg !3440 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %name.addr = alloca i8*, align 8
  %type.addr = alloca i16, align 2
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3443, metadata !DIExpression()), !dbg !3444
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3445, metadata !DIExpression()), !dbg !3446
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !3447, metadata !DIExpression()), !dbg !3448
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3449
  %1 = load i8*, i8** %name.addr, align 8, !dbg !3450
  %2 = load i16, i16* %type.addr, align 2, !dbg !3451
  %call = call %struct.bConstraint* @add_new_constraint(%struct.Object* %0, %struct.bPoseChannel* null, i8* %1, i16 signext %2), !dbg !3452
  ret %struct.bConstraint* %call, !dbg !3453
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraints_relink(%struct.ListBase* %conlist) #0 !dbg !3454 {
entry:
  %conlist.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %conlist, %struct.ListBase** %conlist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %conlist.addr, metadata !3455, metadata !DIExpression()), !dbg !3456
  %0 = load %struct.ListBase*, %struct.ListBase** %conlist.addr, align 8, !dbg !3457
  call void @BKE_constraints_id_loop(%struct.ListBase* %0, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* @con_relink_id_cb, i8* null), !dbg !3458
  ret void, !dbg !3459
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraints_id_loop(%struct.ListBase* %conlist, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !3460 {
entry:
  %conlist.addr = alloca %struct.ListBase*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  store %struct.ListBase* %conlist, %struct.ListBase** %conlist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %conlist.addr, metadata !3463, metadata !DIExpression()), !dbg !3464
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !3465, metadata !DIExpression()), !dbg !3466
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !3467, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !3469, metadata !DIExpression()), !dbg !3470
  %0 = load %struct.ListBase*, %struct.ListBase** %conlist.addr, align 8, !dbg !3471
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3473
  %1 = load i8*, i8** %first, align 8, !dbg !3473
  %2 = bitcast i8* %1 to %struct.bConstraint*, !dbg !3471
  store %struct.bConstraint* %2, %struct.bConstraint** %con, align 8, !dbg !3474
  br label %for.cond, !dbg !3475

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3476
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !3478
  br i1 %tobool, label %for.body, label %for.end, !dbg !3478

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !3479, metadata !DIExpression()), !dbg !3481
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3482
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %4), !dbg !3483
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3481
  %5 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3484
  %tobool1 = icmp ne %struct.bConstraintTypeInfo* %5, null, !dbg !3484
  br i1 %tobool1, label %if.then, label %if.end5, !dbg !3486

if.then:                                          ; preds = %for.body
  %6 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3487
  %id_looper = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %6, i32 0, i32 5, !dbg !3490
  %7 = load void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)** %id_looper, align 8, !dbg !3490
  %tobool2 = icmp ne void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* %7, null, !dbg !3487
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3491

if.then3:                                         ; preds = %if.then
  %8 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3492
  %id_looper4 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %8, i32 0, i32 5, !dbg !3493
  %9 = load void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)** %id_looper4, align 8, !dbg !3493
  %10 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3494
  %11 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !3495
  %12 = load i8*, i8** %userdata.addr, align 8, !dbg !3496
  call void %9(%struct.bConstraint* %10, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %11, i8* %12), !dbg !3492
  br label %if.end, !dbg !3492

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !3497

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !3498

for.inc:                                          ; preds = %if.end5
  %13 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3499
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %13, i32 0, i32 0, !dbg !3500
  %14 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !3500
  store %struct.bConstraint* %14, %struct.bConstraint** %con, align 8, !dbg !3501
  br label %for.cond, !dbg !3502, !llvm.loop !3503

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3505
}

; Function Attrs: noinline nounwind uwtable
define internal void @con_relink_id_cb(%struct.bConstraint* %UNUSED_con, %struct.ID** %idpoin, i8 zeroext %UNUSED_is_reference, i8* %UNUSED_userdata) #0 !dbg !3506 {
entry:
  %UNUSED_con.addr = alloca %struct.bConstraint*, align 8
  %idpoin.addr = alloca %struct.ID**, align 8
  %UNUSED_is_reference.addr = alloca i8, align 1
  %UNUSED_userdata.addr = alloca i8*, align 8
  store %struct.bConstraint* %UNUSED_con, %struct.bConstraint** %UNUSED_con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %UNUSED_con.addr, metadata !3507, metadata !DIExpression()), !dbg !3508
  store %struct.ID** %idpoin, %struct.ID*** %idpoin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID*** %idpoin.addr, metadata !3509, metadata !DIExpression()), !dbg !3510
  store i8 %UNUSED_is_reference, i8* %UNUSED_is_reference.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %UNUSED_is_reference.addr, metadata !3511, metadata !DIExpression()), !dbg !3512
  store i8* %UNUSED_userdata, i8** %UNUSED_userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_userdata.addr, metadata !3513, metadata !DIExpression()), !dbg !3514
  %0 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3515
  %1 = load %struct.ID*, %struct.ID** %0, align 8, !dbg !3517
  %tobool = icmp ne %struct.ID* %1, null, !dbg !3518
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3519

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3520
  %3 = load %struct.ID*, %struct.ID** %2, align 8, !dbg !3521
  %newid = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 2, !dbg !3522
  %4 = load %struct.ID*, %struct.ID** %newid, align 8, !dbg !3522
  %tobool1 = icmp ne %struct.ID* %4, null, !dbg !3523
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3524

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3525
  %6 = load %struct.ID*, %struct.ID** %5, align 8, !dbg !3526
  %newid2 = getelementptr inbounds %struct.ID, %struct.ID* %6, i32 0, i32 2, !dbg !3527
  %7 = load %struct.ID*, %struct.ID** %newid2, align 8, !dbg !3527
  %8 = bitcast %struct.ID* %7 to i8*, !dbg !3528
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !3528
  %10 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3529
  store %struct.ID* %9, %struct.ID** %10, align 8, !dbg !3530
  br label %if.end, !dbg !3531

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !3532
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraints_copy(%struct.ListBase* %dst, %struct.ListBase* %src, i8 zeroext %do_extern) #0 !dbg !3533 {
entry:
  %dst.addr = alloca %struct.ListBase*, align 8
  %src.addr = alloca %struct.ListBase*, align 8
  %do_extern.addr = alloca i8, align 1
  %con = alloca %struct.bConstraint*, align 8
  %srccon = alloca %struct.bConstraint*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  store %struct.ListBase* %dst, %struct.ListBase** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dst.addr, metadata !3538, metadata !DIExpression()), !dbg !3539
  store %struct.ListBase* %src, %struct.ListBase** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %src.addr, metadata !3540, metadata !DIExpression()), !dbg !3541
  store i8 %do_extern, i8* %do_extern.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_extern.addr, metadata !3542, metadata !DIExpression()), !dbg !3543
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !3544, metadata !DIExpression()), !dbg !3545
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %srccon, metadata !3546, metadata !DIExpression()), !dbg !3547
  %0 = load %struct.ListBase*, %struct.ListBase** %dst.addr, align 8, !dbg !3548
  call void @BLI_listbase_clear(%struct.ListBase* %0), !dbg !3549
  %1 = load %struct.ListBase*, %struct.ListBase** %dst.addr, align 8, !dbg !3550
  %2 = load %struct.ListBase*, %struct.ListBase** %src.addr, align 8, !dbg !3551
  call void @BLI_duplicatelist(%struct.ListBase* %1, %struct.ListBase* %2), !dbg !3552
  %3 = load %struct.ListBase*, %struct.ListBase** %dst.addr, align 8, !dbg !3553
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !3555
  %4 = load i8*, i8** %first, align 8, !dbg !3555
  %5 = bitcast i8* %4 to %struct.bConstraint*, !dbg !3553
  store %struct.bConstraint* %5, %struct.bConstraint** %con, align 8, !dbg !3556
  %6 = load %struct.ListBase*, %struct.ListBase** %src.addr, align 8, !dbg !3557
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %6, i32 0, i32 0, !dbg !3558
  %7 = load i8*, i8** %first1, align 8, !dbg !3558
  %8 = bitcast i8* %7 to %struct.bConstraint*, !dbg !3557
  store %struct.bConstraint* %8, %struct.bConstraint** %srccon, align 8, !dbg !3559
  br label %for.cond, !dbg !3560

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3561
  %tobool = icmp ne %struct.bConstraint* %9, null, !dbg !3561
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3563

land.rhs:                                         ; preds = %for.cond
  %10 = load %struct.bConstraint*, %struct.bConstraint** %srccon, align 8, !dbg !3564
  %tobool2 = icmp ne %struct.bConstraint* %10, null, !dbg !3563
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %11 = phi i1 [ false, %for.cond ], [ %tobool2, %land.rhs ], !dbg !3565
  br i1 %11, label %for.body, label %for.end, !dbg !3566

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !3567, metadata !DIExpression()), !dbg !3569
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3570
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %12), !dbg !3571
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3569
  %13 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3572
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3573
  %data = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %14, i32 0, i32 2, !dbg !3574
  %15 = load i8*, i8** %data, align 8, !dbg !3574
  %call3 = call i8* %13(i8* %15), !dbg !3572
  %16 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3575
  %data4 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %16, i32 0, i32 2, !dbg !3576
  store i8* %call3, i8** %data4, align 8, !dbg !3577
  %17 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3578
  %tobool5 = icmp ne %struct.bConstraintTypeInfo* %17, null, !dbg !3578
  br i1 %tobool5, label %if.then, label %if.end21, !dbg !3580

if.then:                                          ; preds = %for.body
  %18 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3581
  %copy_data = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %18, i32 0, i32 6, !dbg !3584
  %19 = load void (%struct.bConstraint*, %struct.bConstraint*)*, void (%struct.bConstraint*, %struct.bConstraint*)** %copy_data, align 8, !dbg !3584
  %tobool6 = icmp ne void (%struct.bConstraint*, %struct.bConstraint*)* %19, null, !dbg !3581
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !3585

if.then7:                                         ; preds = %if.then
  %20 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3586
  %copy_data8 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %20, i32 0, i32 6, !dbg !3587
  %21 = load void (%struct.bConstraint*, %struct.bConstraint*)*, void (%struct.bConstraint*, %struct.bConstraint*)** %copy_data8, align 8, !dbg !3587
  %22 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3588
  %23 = load %struct.bConstraint*, %struct.bConstraint** %srccon, align 8, !dbg !3589
  call void %21(%struct.bConstraint* %22, %struct.bConstraint* %23), !dbg !3586
  br label %if.end, !dbg !3586

if.end:                                           ; preds = %if.then7, %if.then
  %24 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3590
  %id_looper = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %24, i32 0, i32 5, !dbg !3592
  %25 = load void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)** %id_looper, align 8, !dbg !3592
  %tobool9 = icmp ne void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* %25, null, !dbg !3590
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !3593

if.then10:                                        ; preds = %if.end
  %26 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3594
  %id_looper11 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %26, i32 0, i32 5, !dbg !3595
  %27 = load void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)** %id_looper11, align 8, !dbg !3595
  %28 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3596
  call void %27(%struct.bConstraint* %28, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* @con_fix_copied_refs_cb, i8* null), !dbg !3594
  br label %if.end12, !dbg !3594

if.end12:                                         ; preds = %if.then10, %if.end
  %29 = load i8, i8* %do_extern.addr, align 1, !dbg !3597
  %tobool13 = icmp ne i8 %29, 0, !dbg !3597
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !3599

if.then14:                                        ; preds = %if.end12
  %30 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3600
  %id_looper15 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %30, i32 0, i32 5, !dbg !3603
  %31 = load void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)** %id_looper15, align 8, !dbg !3603
  %tobool16 = icmp ne void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)* %31, null, !dbg !3600
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !3604

if.then17:                                        ; preds = %if.then14
  %32 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3605
  %id_looper18 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %32, i32 0, i32 5, !dbg !3606
  %33 = load void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)** %id_looper18, align 8, !dbg !3606
  %34 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3607
  call void %33(%struct.bConstraint* %34, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* @con_extern_cb, i8* null), !dbg !3605
  br label %if.end19, !dbg !3605

if.end19:                                         ; preds = %if.then17, %if.then14
  br label %if.end20, !dbg !3608

if.end20:                                         ; preds = %if.end19, %if.end12
  br label %if.end21, !dbg !3609

if.end21:                                         ; preds = %if.end20, %for.body
  br label %for.inc, !dbg !3610

for.inc:                                          ; preds = %if.end21
  %35 = load %struct.bConstraint*, %struct.bConstraint** %srccon, align 8, !dbg !3611
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %35, i32 0, i32 0, !dbg !3612
  %36 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !3612
  store %struct.bConstraint* %36, %struct.bConstraint** %srccon, align 8, !dbg !3613
  %37 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3614
  %next22 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %37, i32 0, i32 0, !dbg !3615
  %38 = load %struct.bConstraint*, %struct.bConstraint** %next22, align 8, !dbg !3615
  store %struct.bConstraint* %38, %struct.bConstraint** %con, align 8, !dbg !3616
  br label %for.cond, !dbg !3617, !llvm.loop !3618

for.end:                                          ; preds = %land.end
  ret void, !dbg !3620
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !3621 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !3625, metadata !DIExpression()), !dbg !3626
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !3627
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !3628
  store i8* null, i8** %last, align 8, !dbg !3629
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !3630
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !3631
  store i8* null, i8** %first, align 8, !dbg !3632
  ret void, !dbg !3633
}

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @con_fix_copied_refs_cb(%struct.bConstraint* %UNUSED_con, %struct.ID** %idpoin, i8 zeroext %is_reference, i8* %UNUSED_userData) #0 !dbg !3634 {
entry:
  %UNUSED_con.addr = alloca %struct.bConstraint*, align 8
  %idpoin.addr = alloca %struct.ID**, align 8
  %is_reference.addr = alloca i8, align 1
  %UNUSED_userData.addr = alloca i8*, align 8
  store %struct.bConstraint* %UNUSED_con, %struct.bConstraint** %UNUSED_con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %UNUSED_con.addr, metadata !3635, metadata !DIExpression()), !dbg !3636
  store %struct.ID** %idpoin, %struct.ID*** %idpoin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID*** %idpoin.addr, metadata !3637, metadata !DIExpression()), !dbg !3638
  store i8 %is_reference, i8* %is_reference.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_reference.addr, metadata !3639, metadata !DIExpression()), !dbg !3640
  store i8* %UNUSED_userData, i8** %UNUSED_userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_userData.addr, metadata !3641, metadata !DIExpression()), !dbg !3642
  %0 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3643
  %1 = load %struct.ID*, %struct.ID** %0, align 8, !dbg !3645
  %tobool = icmp ne %struct.ID* %1, null, !dbg !3646
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3647

land.lhs.true:                                    ; preds = %entry
  %2 = load i8, i8* %is_reference.addr, align 1, !dbg !3648
  %conv = zext i8 %2 to i32, !dbg !3649
  %tobool1 = icmp ne i32 %conv, 0, !dbg !3649
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3650

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3651
  %4 = load %struct.ID*, %struct.ID** %3, align 8, !dbg !3652
  call void @id_us_plus(%struct.ID* %4), !dbg !3653
  br label %if.end, !dbg !3653

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !3654
}

; Function Attrs: noinline nounwind uwtable
define internal void @con_extern_cb(%struct.bConstraint* %UNUSED_con, %struct.ID** %idpoin, i8 zeroext %UNUSED_is_reference, i8* %UNUSED_userData) #0 !dbg !3655 {
entry:
  %UNUSED_con.addr = alloca %struct.bConstraint*, align 8
  %idpoin.addr = alloca %struct.ID**, align 8
  %UNUSED_is_reference.addr = alloca i8, align 1
  %UNUSED_userData.addr = alloca i8*, align 8
  store %struct.bConstraint* %UNUSED_con, %struct.bConstraint** %UNUSED_con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %UNUSED_con.addr, metadata !3656, metadata !DIExpression()), !dbg !3657
  store %struct.ID** %idpoin, %struct.ID*** %idpoin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID*** %idpoin.addr, metadata !3658, metadata !DIExpression()), !dbg !3659
  store i8 %UNUSED_is_reference, i8* %UNUSED_is_reference.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %UNUSED_is_reference.addr, metadata !3660, metadata !DIExpression()), !dbg !3661
  store i8* %UNUSED_userData, i8** %UNUSED_userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_userData.addr, metadata !3662, metadata !DIExpression()), !dbg !3663
  %0 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3664
  %1 = load %struct.ID*, %struct.ID** %0, align 8, !dbg !3666
  %tobool = icmp ne %struct.ID* %1, null, !dbg !3666
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3667

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3668
  %3 = load %struct.ID*, %struct.ID** %2, align 8, !dbg !3669
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 3, !dbg !3670
  %4 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !3670
  %tobool1 = icmp ne %struct.Library* %4, null, !dbg !3671
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3672

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !3673
  %6 = load %struct.ID*, %struct.ID** %5, align 8, !dbg !3674
  call void @id_lib_extern(%struct.ID* %6), !dbg !3675
  br label %if.end, !dbg !3675

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !3676
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bConstraint* @BKE_constraints_find_name(%struct.ListBase* %list, i8* %name) #0 !dbg !3677 {
entry:
  %list.addr = alloca %struct.ListBase*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !3680, metadata !DIExpression()), !dbg !3681
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3682, metadata !DIExpression()), !dbg !3683
  %0 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !3684
  %1 = load i8*, i8** %name.addr, align 8, !dbg !3685
  %call = call i8* @BLI_findstring(%struct.ListBase* %0, i8* %1, i32 30), !dbg !3686
  %2 = bitcast i8* %call to %struct.bConstraint*, !dbg !3686
  ret %struct.bConstraint* %2, !dbg !3687
}

declare dso_local i8* @BLI_findstring(%struct.ListBase*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bConstraint* @BKE_constraints_active_get(%struct.ListBase* %list) #0 !dbg !3688 {
entry:
  %retval = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %con = alloca %struct.bConstraint*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !3691, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !3693, metadata !DIExpression()), !dbg !3694
  %0 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !3695
  %tobool = icmp ne %struct.ListBase* %0, null, !dbg !3695
  br i1 %tobool, label %if.then, label %if.end4, !dbg !3697

if.then:                                          ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !3698
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !3701
  %2 = load i8*, i8** %first, align 8, !dbg !3701
  %3 = bitcast i8* %2 to %struct.bConstraint*, !dbg !3698
  store %struct.bConstraint* %3, %struct.bConstraint** %con, align 8, !dbg !3702
  br label %for.cond, !dbg !3703

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3704
  %tobool1 = icmp ne %struct.bConstraint* %4, null, !dbg !3706
  br i1 %tobool1, label %for.body, label %for.end, !dbg !3706

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3707
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %5, i32 0, i32 4, !dbg !3710
  %6 = load i16, i16* %flag, align 2, !dbg !3710
  %conv = sext i16 %6 to i32, !dbg !3707
  %and = and i32 %conv, 16, !dbg !3711
  %tobool2 = icmp ne i32 %and, 0, !dbg !3711
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3712

if.then3:                                         ; preds = %for.body
  %7 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3713
  store %struct.bConstraint* %7, %struct.bConstraint** %retval, align 8, !dbg !3714
  br label %return, !dbg !3714

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3715

for.inc:                                          ; preds = %if.end
  %8 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3716
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %8, i32 0, i32 0, !dbg !3717
  %9 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !3717
  store %struct.bConstraint* %9, %struct.bConstraint** %con, align 8, !dbg !3718
  br label %for.cond, !dbg !3719, !llvm.loop !3720

for.end:                                          ; preds = %for.cond
  br label %if.end4, !dbg !3722

if.end4:                                          ; preds = %for.end, %entry
  store %struct.bConstraint* null, %struct.bConstraint** %retval, align 8, !dbg !3723
  br label %return, !dbg !3723

return:                                           ; preds = %if.end4, %if.then3
  %10 = load %struct.bConstraint*, %struct.bConstraint** %retval, align 8, !dbg !3724
  ret %struct.bConstraint* %10, !dbg !3724
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraints_active_set(%struct.ListBase* %list, %struct.bConstraint* %con) #0 !dbg !3725 {
entry:
  %list.addr = alloca %struct.ListBase*, align 8
  %con.addr = alloca %struct.bConstraint*, align 8
  %c = alloca %struct.bConstraint*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !3730, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %c, metadata !3732, metadata !DIExpression()), !dbg !3733
  %0 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !3734
  %tobool = icmp ne %struct.ListBase* %0, null, !dbg !3734
  br i1 %tobool, label %if.then, label %if.end7, !dbg !3736

if.then:                                          ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !3737
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !3740
  %2 = load i8*, i8** %first, align 8, !dbg !3740
  %3 = bitcast i8* %2 to %struct.bConstraint*, !dbg !3737
  store %struct.bConstraint* %3, %struct.bConstraint** %c, align 8, !dbg !3741
  br label %for.cond, !dbg !3742

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.bConstraint*, %struct.bConstraint** %c, align 8, !dbg !3743
  %tobool1 = icmp ne %struct.bConstraint* %4, null, !dbg !3745
  br i1 %tobool1, label %for.body, label %for.end, !dbg !3745

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bConstraint*, %struct.bConstraint** %c, align 8, !dbg !3746
  %6 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3749
  %cmp = icmp eq %struct.bConstraint* %5, %6, !dbg !3750
  br i1 %cmp, label %if.then2, label %if.else, !dbg !3751

if.then2:                                         ; preds = %for.body
  %7 = load %struct.bConstraint*, %struct.bConstraint** %c, align 8, !dbg !3752
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %7, i32 0, i32 4, !dbg !3753
  %8 = load i16, i16* %flag, align 2, !dbg !3754
  %conv = sext i16 %8 to i32, !dbg !3754
  %or = or i32 %conv, 16, !dbg !3754
  %conv3 = trunc i32 %or to i16, !dbg !3754
  store i16 %conv3, i16* %flag, align 2, !dbg !3754
  br label %if.end, !dbg !3752

if.else:                                          ; preds = %for.body
  %9 = load %struct.bConstraint*, %struct.bConstraint** %c, align 8, !dbg !3755
  %flag4 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %9, i32 0, i32 4, !dbg !3756
  %10 = load i16, i16* %flag4, align 2, !dbg !3757
  %conv5 = sext i16 %10 to i32, !dbg !3757
  %and = and i32 %conv5, -17, !dbg !3757
  %conv6 = trunc i32 %and to i16, !dbg !3757
  store i16 %conv6, i16* %flag4, align 2, !dbg !3757
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %for.inc, !dbg !3758

for.inc:                                          ; preds = %if.end
  %11 = load %struct.bConstraint*, %struct.bConstraint** %c, align 8, !dbg !3759
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %11, i32 0, i32 0, !dbg !3760
  %12 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !3760
  store %struct.bConstraint* %12, %struct.bConstraint** %c, align 8, !dbg !3761
  br label %for.cond, !dbg !3762, !llvm.loop !3763

for.end:                                          ; preds = %for.cond
  br label %if.end7, !dbg !3765

if.end7:                                          ; preds = %for.end, %entry
  ret void, !dbg !3766
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraints_proxylocal_extract(%struct.ListBase* %dst, %struct.ListBase* %src) #0 !dbg !3767 {
entry:
  %dst.addr = alloca %struct.ListBase*, align 8
  %src.addr = alloca %struct.ListBase*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %next = alloca %struct.bConstraint*, align 8
  store %struct.ListBase* %dst, %struct.ListBase** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dst.addr, metadata !3770, metadata !DIExpression()), !dbg !3771
  store %struct.ListBase* %src, %struct.ListBase** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %src.addr, metadata !3772, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !3774, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %next, metadata !3776, metadata !DIExpression()), !dbg !3777
  %0 = load %struct.ListBase*, %struct.ListBase** %src.addr, align 8, !dbg !3778
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3780
  %1 = load i8*, i8** %first, align 8, !dbg !3780
  %2 = bitcast i8* %1 to %struct.bConstraint*, !dbg !3778
  store %struct.bConstraint* %2, %struct.bConstraint** %con, align 8, !dbg !3781
  br label %for.cond, !dbg !3782

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3783
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !3785
  br i1 %tobool, label %for.body, label %for.end, !dbg !3785

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3786
  %next1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 0, !dbg !3788
  %5 = load %struct.bConstraint*, %struct.bConstraint** %next1, align 8, !dbg !3788
  store %struct.bConstraint* %5, %struct.bConstraint** %next, align 8, !dbg !3789
  %6 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3790
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %6, i32 0, i32 4, !dbg !3792
  %7 = load i16, i16* %flag, align 2, !dbg !3792
  %conv = sext i16 %7 to i32, !dbg !3790
  %and = and i32 %conv, 256, !dbg !3793
  %tobool2 = icmp ne i32 %and, 0, !dbg !3793
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3794

if.then:                                          ; preds = %for.body
  %8 = load %struct.ListBase*, %struct.ListBase** %src.addr, align 8, !dbg !3795
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3797
  %10 = bitcast %struct.bConstraint* %9 to i8*, !dbg !3797
  call void @BLI_remlink(%struct.ListBase* %8, i8* %10), !dbg !3798
  %11 = load %struct.ListBase*, %struct.ListBase** %dst.addr, align 8, !dbg !3799
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3800
  %13 = bitcast %struct.bConstraint* %12 to i8*, !dbg !3800
  call void @BLI_addtail(%struct.ListBase* %11, i8* %13), !dbg !3801
  br label %if.end, !dbg !3802

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3803

for.inc:                                          ; preds = %if.end
  %14 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !3804
  store %struct.bConstraint* %14, %struct.bConstraint** %con, align 8, !dbg !3805
  br label %for.cond, !dbg !3806, !llvm.loop !3807

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3809
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_constraints_proxylocked_owner(%struct.Object* %ob, %struct.bPoseChannel* %pchan) #0 !dbg !3810 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %arm = alloca %struct.bArmature*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3813, metadata !DIExpression()), !dbg !3814
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !3815, metadata !DIExpression()), !dbg !3816
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3817
  %tobool = icmp ne %struct.Object* %0, null, !dbg !3817
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !3819

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3820
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 11, !dbg !3821
  %2 = load %struct.Object*, %struct.Object** %proxy, align 8, !dbg !3821
  %tobool1 = icmp ne %struct.Object* %2, null, !dbg !3820
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !3822

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3823
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 18, !dbg !3826
  %4 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !3826
  %tobool2 = icmp ne %struct.bPose* %4, null, !dbg !3823
  br i1 %tobool2, label %land.lhs.true3, label %if.else, !dbg !3827

land.lhs.true3:                                   ; preds = %if.then
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3828
  %tobool4 = icmp ne %struct.bPoseChannel* %5, null, !dbg !3828
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !3829

if.then5:                                         ; preds = %land.lhs.true3
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !3830, metadata !DIExpression()), !dbg !3867
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3868
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !3869
  %7 = load i8*, i8** %data, align 8, !dbg !3869
  %8 = bitcast i8* %7 to %struct.bArmature*, !dbg !3868
  store %struct.bArmature* %8, %struct.bArmature** %arm, align 8, !dbg !3867
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3870
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %9, i32 0, i32 12, !dbg !3872
  %10 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3872
  %tobool6 = icmp ne %struct.Bone* %10, null, !dbg !3873
  br i1 %tobool6, label %land.lhs.true7, label %if.end, !dbg !3874

land.lhs.true7:                                   ; preds = %if.then5
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !3875
  %bone8 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %11, i32 0, i32 12, !dbg !3876
  %12 = load %struct.Bone*, %struct.Bone** %bone8, align 8, !dbg !3876
  %layer = getelementptr inbounds %struct.Bone, %struct.Bone* %12, i32 0, i32 25, !dbg !3877
  %13 = load i32, i32* %layer, align 8, !dbg !3877
  %14 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3878
  %layer_protected = getelementptr inbounds %struct.bArmature, %struct.bArmature* %14, i32 0, i32 16, !dbg !3879
  %15 = load i32, i32* %layer_protected, align 4, !dbg !3879
  %and = and i32 %13, %15, !dbg !3880
  %tobool9 = icmp ne i32 %and, 0, !dbg !3880
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !3881

if.then10:                                        ; preds = %land.lhs.true7
  store i8 1, i8* %retval, align 1, !dbg !3882
  br label %return, !dbg !3882

if.end:                                           ; preds = %land.lhs.true7, %if.then5
  br label %if.end11, !dbg !3883

if.else:                                          ; preds = %land.lhs.true3, %if.then
  store i8 1, i8* %retval, align 1, !dbg !3884
  br label %return, !dbg !3884

if.end11:                                         ; preds = %if.end
  br label %if.end12, !dbg !3886

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !3887
  br label %return, !dbg !3887

return:                                           ; preds = %if.end12, %if.else, %if.then10
  %16 = load i8, i8* %retval, align 1, !dbg !3888
  ret i8 %16, !dbg !3888
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraint_target_matrix_get(%struct.Scene* %scene, %struct.bConstraint* %con, i32 %index, i16 signext %ownertype, i8* %ownerdata, [4 x float]* %mat, float %ctime) #0 !dbg !3889 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %con.addr = alloca %struct.bConstraint*, align 8
  %index.addr = alloca i32, align 4
  %ownertype.addr = alloca i16, align 2
  %ownerdata.addr = alloca i8*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %ctime.addr = alloca float, align 4
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %cob = alloca %struct.bConstraintOb*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3892, metadata !DIExpression()), !dbg !3893
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !3894, metadata !DIExpression()), !dbg !3895
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3896, metadata !DIExpression()), !dbg !3897
  store i16 %ownertype, i16* %ownertype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ownertype.addr, metadata !3898, metadata !DIExpression()), !dbg !3899
  store i8* %ownerdata, i8** %ownerdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ownerdata.addr, metadata !3900, metadata !DIExpression()), !dbg !3901
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !3902, metadata !DIExpression()), !dbg !3903
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !3904, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !3906, metadata !DIExpression()), !dbg !3907
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !3908
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %0), !dbg !3909
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3907
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !3910, metadata !DIExpression()), !dbg !3911
  %1 = bitcast %struct.ListBase* %targets to i8*, !dbg !3911
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !3911
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob, metadata !3912, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !3914, metadata !DIExpression()), !dbg !3915
  %2 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3916
  %tobool = icmp ne %struct.bConstraintTypeInfo* %2, null, !dbg !3916
  br i1 %tobool, label %land.lhs.true, label %if.else52, !dbg !3918

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3919
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %3, i32 0, i32 8, !dbg !3920
  %4 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !3920
  %tobool1 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %4, null, !dbg !3919
  br i1 %tobool1, label %if.then, label %if.else52, !dbg !3921

if.then:                                          ; preds = %land.lhs.true
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3922
  %call2 = call i8* %5(i64 160, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)), !dbg !3922
  %6 = bitcast i8* %call2 to %struct.bConstraintOb*, !dbg !3922
  store %struct.bConstraintOb* %6, %struct.bConstraintOb** %cob, align 8, !dbg !3924
  %7 = load i16, i16* %ownertype.addr, align 2, !dbg !3925
  %8 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3926
  %type = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %8, i32 0, i32 5, !dbg !3927
  store i16 %7, i16* %type, align 8, !dbg !3928
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3929
  %10 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3930
  %scene3 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %10, i32 0, i32 0, !dbg !3931
  store %struct.Scene* %9, %struct.Scene** %scene3, align 8, !dbg !3932
  %11 = load i16, i16* %ownertype.addr, align 2, !dbg !3933
  %conv = sext i16 %11 to i32, !dbg !3933
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb16
  ], !dbg !3934

sw.bb:                                            ; preds = %if.then
  %12 = load i8*, i8** %ownerdata.addr, align 8, !dbg !3935
  %13 = bitcast i8* %12 to %struct.Object*, !dbg !3938
  %14 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3939
  %ob = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %14, i32 0, i32 1, !dbg !3940
  store %struct.Object* %13, %struct.Object** %ob, align 8, !dbg !3941
  %15 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3942
  %pchan = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %15, i32 0, i32 2, !dbg !3943
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %pchan, align 8, !dbg !3944
  %16 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3945
  %ob4 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %16, i32 0, i32 1, !dbg !3947
  %17 = load %struct.Object*, %struct.Object** %ob4, align 8, !dbg !3947
  %tobool5 = icmp ne %struct.Object* %17, null, !dbg !3945
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !3948

if.then6:                                         ; preds = %sw.bb
  %18 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3949
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %18, i32 0, i32 3, !dbg !3951
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !3949
  %19 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3952
  %ob7 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %19, i32 0, i32 1, !dbg !3953
  %20 = load %struct.Object*, %struct.Object** %ob7, align 8, !dbg !3953
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 47, !dbg !3954
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !3952
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay8), !dbg !3955
  %21 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3956
  %startmat = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %21, i32 0, i32 4, !dbg !3957
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %startmat, i64 0, i64 0, !dbg !3956
  %22 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3958
  %matrix10 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %22, i32 0, i32 3, !dbg !3959
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix10, i64 0, i64 0, !dbg !3958
  call void @copy_m4_m4([4 x float]* %arraydecay9, [4 x float]* %arraydecay11), !dbg !3960
  br label %if.end, !dbg !3961

if.else:                                          ; preds = %sw.bb
  %23 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3962
  %matrix12 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %23, i32 0, i32 3, !dbg !3964
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix12, i64 0, i64 0, !dbg !3962
  call void @unit_m4([4 x float]* %arraydecay13), !dbg !3965
  %24 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3966
  %startmat14 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %24, i32 0, i32 4, !dbg !3967
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %startmat14, i64 0, i64 0, !dbg !3966
  call void @unit_m4([4 x float]* %arraydecay15), !dbg !3968
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %sw.epilog, !dbg !3969

sw.bb16:                                          ; preds = %if.then
  %25 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3970
  %ob17 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %25, i32 0, i32 1, !dbg !3972
  store %struct.Object* null, %struct.Object** %ob17, align 8, !dbg !3973
  %26 = load i8*, i8** %ownerdata.addr, align 8, !dbg !3974
  %27 = bitcast i8* %26 to %struct.bPoseChannel*, !dbg !3975
  %28 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3976
  %pchan18 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %28, i32 0, i32 2, !dbg !3977
  store %struct.bPoseChannel* %27, %struct.bPoseChannel** %pchan18, align 8, !dbg !3978
  %29 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3979
  %pchan19 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %29, i32 0, i32 2, !dbg !3981
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan19, align 8, !dbg !3981
  %tobool20 = icmp ne %struct.bPoseChannel* %30, null, !dbg !3979
  br i1 %tobool20, label %if.then21, label %if.else30, !dbg !3982

if.then21:                                        ; preds = %sw.bb16
  %31 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3983
  %matrix22 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %31, i32 0, i32 3, !dbg !3985
  %arraydecay23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix22, i64 0, i64 0, !dbg !3983
  %32 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3986
  %pchan24 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %32, i32 0, i32 2, !dbg !3987
  %33 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan24, align 8, !dbg !3987
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %33, i32 0, i32 29, !dbg !3988
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !3986
  call void @copy_m4_m4([4 x float]* %arraydecay23, [4 x float]* %arraydecay25), !dbg !3989
  %34 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3990
  %startmat26 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %34, i32 0, i32 4, !dbg !3991
  %arraydecay27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %startmat26, i64 0, i64 0, !dbg !3990
  %35 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3992
  %matrix28 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %35, i32 0, i32 3, !dbg !3993
  %arraydecay29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix28, i64 0, i64 0, !dbg !3992
  call void @copy_m4_m4([4 x float]* %arraydecay27, [4 x float]* %arraydecay29), !dbg !3994
  br label %if.end35, !dbg !3995

if.else30:                                        ; preds = %sw.bb16
  %36 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !3996
  %matrix31 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %36, i32 0, i32 3, !dbg !3998
  %arraydecay32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix31, i64 0, i64 0, !dbg !3996
  call void @unit_m4([4 x float]* %arraydecay32), !dbg !3999
  %37 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !4000
  %startmat33 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %37, i32 0, i32 4, !dbg !4001
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %startmat33, i64 0, i64 0, !dbg !4000
  call void @unit_m4([4 x float]* %arraydecay34), !dbg !4002
  br label %if.end35

if.end35:                                         ; preds = %if.else30, %if.then21
  br label %sw.epilog, !dbg !4003

sw.epilog:                                        ; preds = %if.then, %if.end35, %if.end
  %38 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4004
  %get_constraint_targets36 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %38, i32 0, i32 8, !dbg !4005
  %39 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets36, align 8, !dbg !4005
  %40 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4006
  %call37 = call i32 %39(%struct.bConstraint* %40, %struct.ListBase* %targets), !dbg !4004
  %41 = load i32, i32* %index.addr, align 4, !dbg !4007
  %call38 = call i8* @BLI_findlink(%struct.ListBase* %targets, i32 %41), !dbg !4008
  %42 = bitcast i8* %call38 to %struct.bConstraintTarget*, !dbg !4009
  store %struct.bConstraintTarget* %42, %struct.bConstraintTarget** %ct, align 8, !dbg !4010
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4011
  %tobool39 = icmp ne %struct.bConstraintTarget* %43, null, !dbg !4011
  br i1 %tobool39, label %if.then40, label %if.end47, !dbg !4013

if.then40:                                        ; preds = %sw.epilog
  %44 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4014
  %get_target_matrix = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %44, i32 0, i32 10, !dbg !4017
  %45 = load void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)** %get_target_matrix, align 8, !dbg !4017
  %tobool41 = icmp ne void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* %45, null, !dbg !4014
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !4018

if.then42:                                        ; preds = %if.then40
  %46 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4019
  %get_target_matrix43 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %46, i32 0, i32 10, !dbg !4020
  %47 = load void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)** %get_target_matrix43, align 8, !dbg !4020
  %48 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4021
  %49 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !4022
  %50 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4023
  %51 = load float, float* %ctime.addr, align 4, !dbg !4024
  call void %47(%struct.bConstraint* %48, %struct.bConstraintOb* %49, %struct.bConstraintTarget* %50, float %51), !dbg !4019
  br label %if.end44, !dbg !4019

if.end44:                                         ; preds = %if.then42, %if.then40
  %52 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4025
  %53 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4026
  %matrix45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %53, i32 0, i32 4, !dbg !4027
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix45, i64 0, i64 0, !dbg !4026
  call void @copy_m4_m4([4 x float]* %52, [4 x float]* %arraydecay46), !dbg !4028
  br label %if.end47, !dbg !4029

if.end47:                                         ; preds = %if.end44, %sw.epilog
  %54 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4030
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %54, i32 0, i32 9, !dbg !4032
  %55 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !4032
  %tobool48 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %55, null, !dbg !4030
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !4033

if.then49:                                        ; preds = %if.end47
  %56 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4034
  %flush_constraint_targets50 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %56, i32 0, i32 9, !dbg !4035
  %57 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets50, align 8, !dbg !4035
  %58 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4036
  call void %57(%struct.bConstraint* %58, %struct.ListBase* %targets, i8 zeroext 1), !dbg !4034
  br label %if.end51, !dbg !4034

if.end51:                                         ; preds = %if.then49, %if.end47
  %59 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4037
  %60 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !4038
  %61 = bitcast %struct.bConstraintOb* %60 to i8*, !dbg !4038
  call void %59(i8* %61), !dbg !4037
  br label %if.end53, !dbg !4039

if.else52:                                        ; preds = %land.lhs.true, %entry
  %62 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4040
  call void @unit_m4([4 x float]* %62), !dbg !4042
  br label %if.end53

if.end53:                                         ; preds = %if.else52, %if.end51
  ret void, !dbg !4043
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraint_targets_for_solving_get(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets, float %ctime) #0 !dbg !4044 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %ctime.addr = alloca float, align 4
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !4047, metadata !DIExpression()), !dbg !4048
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !4049, metadata !DIExpression()), !dbg !4050
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !4051, metadata !DIExpression()), !dbg !4052
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !4053, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !4055, metadata !DIExpression()), !dbg !4056
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4057
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %0), !dbg !4058
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4056
  %1 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4059
  %tobool = icmp ne %struct.bConstraintTypeInfo* %1, null, !dbg !4059
  br i1 %tobool, label %land.lhs.true, label %if.end15, !dbg !4061

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4062
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %2, i32 0, i32 8, !dbg !4063
  %3 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !4063
  %tobool1 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %3, null, !dbg !4062
  br i1 %tobool1, label %if.then, label %if.end15, !dbg !4064

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !4065, metadata !DIExpression()), !dbg !4067
  %4 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4068
  %get_constraint_targets2 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %4, i32 0, i32 8, !dbg !4069
  %5 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets2, align 8, !dbg !4069
  %6 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4070
  %7 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !4071
  %call3 = call i32 %5(%struct.bConstraint* %6, %struct.ListBase* %7), !dbg !4068
  %8 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4072
  %get_target_matrix = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %8, i32 0, i32 10, !dbg !4074
  %9 = load void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)** %get_target_matrix, align 8, !dbg !4074
  %tobool4 = icmp ne void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)* %9, null, !dbg !4072
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !4075

if.then5:                                         ; preds = %if.then
  %10 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !4076
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %10, i32 0, i32 0, !dbg !4079
  %11 = load i8*, i8** %first, align 8, !dbg !4079
  %12 = bitcast i8* %11 to %struct.bConstraintTarget*, !dbg !4076
  store %struct.bConstraintTarget* %12, %struct.bConstraintTarget** %ct, align 8, !dbg !4080
  br label %for.cond, !dbg !4081

for.cond:                                         ; preds = %for.inc, %if.then5
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4082
  %tobool6 = icmp ne %struct.bConstraintTarget* %13, null, !dbg !4084
  br i1 %tobool6, label %for.body, label %for.end, !dbg !4084

for.body:                                         ; preds = %for.cond
  %14 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4085
  %get_target_matrix7 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %14, i32 0, i32 10, !dbg !4086
  %15 = load void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)** %get_target_matrix7, align 8, !dbg !4086
  %16 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4087
  %17 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4088
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4089
  %19 = load float, float* %ctime.addr, align 4, !dbg !4090
  call void %15(%struct.bConstraint* %16, %struct.bConstraintOb* %17, %struct.bConstraintTarget* %18, float %19), !dbg !4085
  br label %for.inc, !dbg !4085

for.inc:                                          ; preds = %for.body
  %20 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4091
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %20, i32 0, i32 0, !dbg !4092
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !4092
  store %struct.bConstraintTarget* %21, %struct.bConstraintTarget** %ct, align 8, !dbg !4093
  br label %for.cond, !dbg !4094, !llvm.loop !4095

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !4097

if.else:                                          ; preds = %if.then
  %22 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !4098
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %22, i32 0, i32 0, !dbg !4101
  %23 = load i8*, i8** %first8, align 8, !dbg !4101
  %24 = bitcast i8* %23 to %struct.bConstraintTarget*, !dbg !4098
  store %struct.bConstraintTarget* %24, %struct.bConstraintTarget** %ct, align 8, !dbg !4102
  br label %for.cond9, !dbg !4103

for.cond9:                                        ; preds = %for.inc12, %if.else
  %25 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4104
  %tobool10 = icmp ne %struct.bConstraintTarget* %25, null, !dbg !4106
  br i1 %tobool10, label %for.body11, label %for.end14, !dbg !4106

for.body11:                                       ; preds = %for.cond9
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4107
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 4, !dbg !4108
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !4107
  call void @unit_m4([4 x float]* %arraydecay), !dbg !4109
  br label %for.inc12, !dbg !4109

for.inc12:                                        ; preds = %for.body11
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4110
  %next13 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 0, !dbg !4111
  %28 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next13, align 8, !dbg !4111
  store %struct.bConstraintTarget* %28, %struct.bConstraintTarget** %ct, align 8, !dbg !4112
  br label %for.cond9, !dbg !4113, !llvm.loop !4114

for.end14:                                        ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end14, %for.end
  br label %if.end15, !dbg !4116

if.end15:                                         ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !4117
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_constraints_solve(%struct.ListBase* %conlist, %struct.bConstraintOb* %cob, float %ctime) #0 !dbg !4118 {
entry:
  %conlist.addr = alloca %struct.ListBase*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %ctime.addr = alloca float, align 4
  %con = alloca %struct.bConstraint*, align 8
  %oldmat = alloca [4 x [4 x float]], align 16
  %enf = alloca float, align 4
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %solution = alloca [4 x [4 x float]], align 16
  store %struct.ListBase* %conlist, %struct.ListBase** %conlist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %conlist.addr, metadata !4121, metadata !DIExpression()), !dbg !4122
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !4123, metadata !DIExpression()), !dbg !4124
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !4125, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !4127, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %oldmat, metadata !4129, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.declare(metadata float* %enf, metadata !4131, metadata !DIExpression()), !dbg !4132
  %0 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4133
  %cmp = icmp eq %struct.bConstraintOb* %0, null, !dbg !4135
  br i1 %cmp, label %if.then, label %if.end, !dbg !4136

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !4137

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %conlist.addr, align 8, !dbg !4138
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !4140
  %2 = load i8*, i8** %first, align 8, !dbg !4140
  %3 = bitcast i8* %2 to %struct.bConstraint*, !dbg !4138
  store %struct.bConstraint* %3, %struct.bConstraint** %con, align 8, !dbg !4141
  br label %for.cond, !dbg !4142

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4143
  %tobool = icmp ne %struct.bConstraint* %4, null, !dbg !4145
  br i1 %tobool, label %for.body, label %for.end, !dbg !4145

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !4146, metadata !DIExpression()), !dbg !4148
  %5 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4149
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %5), !dbg !4150
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4148
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !4151, metadata !DIExpression()), !dbg !4152
  %6 = bitcast %struct.ListBase* %targets to i8*, !dbg !4152
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false), !dbg !4152
  %7 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4153
  %cmp1 = icmp eq %struct.bConstraintTypeInfo* %7, null, !dbg !4155
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4156

if.then2:                                         ; preds = %for.body
  br label %for.inc, !dbg !4157

if.end3:                                          ; preds = %for.body
  %8 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4158
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %8, i32 0, i32 4, !dbg !4160
  %9 = load i16, i16* %flag, align 2, !dbg !4160
  %conv = sext i16 %9 to i32, !dbg !4158
  %and = and i32 %conv, 516, !dbg !4161
  %tobool4 = icmp ne i32 %and, 0, !dbg !4161
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !4162

if.then5:                                         ; preds = %if.end3
  br label %for.inc, !dbg !4163

if.end6:                                          ; preds = %if.end3
  %10 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4164
  %evaluate_constraint = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %10, i32 0, i32 11, !dbg !4166
  %11 = load void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)** %evaluate_constraint, align 8, !dbg !4166
  %cmp7 = icmp eq void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* %11, null, !dbg !4167
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !4168

if.then9:                                         ; preds = %if.end6
  br label %for.inc, !dbg !4169

if.end10:                                         ; preds = %if.end6
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4170
  %enforce = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 9, !dbg !4172
  %13 = load float, float* %enforce, align 8, !dbg !4172
  %cmp11 = fcmp oeq float %13, 0.000000e+00, !dbg !4173
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !4174

if.then13:                                        ; preds = %if.end10
  br label %for.inc, !dbg !4175

if.end14:                                         ; preds = %if.end10
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4176
  %enforce15 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %14, i32 0, i32 9, !dbg !4177
  %15 = load float, float* %enforce15, align 8, !dbg !4177
  store float %15, float* %enf, align 4, !dbg !4178
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %oldmat, i64 0, i64 0, !dbg !4179
  %16 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4180
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %16, i32 0, i32 3, !dbg !4181
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !4180
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay16), !dbg !4182
  %17 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4183
  %ob = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %17, i32 0, i32 1, !dbg !4184
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4184
  %19 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4185
  %pchan = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %19, i32 0, i32 2, !dbg !4186
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4186
  %21 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4187
  %matrix17 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %21, i32 0, i32 3, !dbg !4188
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix17, i64 0, i64 0, !dbg !4187
  %22 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4189
  %ownspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %22, i32 0, i32 5, !dbg !4190
  %23 = load i8, i8* %ownspace, align 4, !dbg !4190
  %conv19 = zext i8 %23 to i16, !dbg !4189
  call void @BKE_constraint_mat_convertspace(%struct.Object* %18, %struct.bPoseChannel* %20, [4 x float]* %arraydecay18, i16 signext 0, i16 signext %conv19), !dbg !4191
  %24 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4192
  %25 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4193
  %26 = load float, float* %ctime.addr, align 4, !dbg !4194
  call void @BKE_constraint_targets_for_solving_get(%struct.bConstraint* %24, %struct.bConstraintOb* %25, %struct.ListBase* %targets, float %26), !dbg !4195
  %27 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4196
  %evaluate_constraint20 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %27, i32 0, i32 11, !dbg !4197
  %28 = load void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)** %evaluate_constraint20, align 8, !dbg !4197
  %29 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4198
  %30 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4199
  call void %28(%struct.bConstraint* %29, %struct.bConstraintOb* %30, %struct.ListBase* %targets), !dbg !4196
  %31 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4200
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %31, i32 0, i32 9, !dbg !4202
  %32 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !4202
  %tobool21 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %32, null, !dbg !4200
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !4203

if.then22:                                        ; preds = %if.end14
  %33 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !4204
  %flush_constraint_targets23 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %33, i32 0, i32 9, !dbg !4206
  %34 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets23, align 8, !dbg !4206
  %35 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4207
  call void %34(%struct.bConstraint* %35, %struct.ListBase* %targets, i8 zeroext 1), !dbg !4204
  br label %if.end24, !dbg !4208

if.end24:                                         ; preds = %if.then22, %if.end14
  %36 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4209
  %flag25 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %36, i32 0, i32 4, !dbg !4211
  %37 = load i16, i16* %flag25, align 2, !dbg !4211
  %conv26 = sext i16 %37 to i32, !dbg !4209
  %and27 = and i32 %conv26, 64, !dbg !4212
  %cmp28 = icmp eq i32 %and27, 0, !dbg !4213
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !4214

if.then30:                                        ; preds = %if.end24
  %38 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4215
  %ob31 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %38, i32 0, i32 1, !dbg !4216
  %39 = load %struct.Object*, %struct.Object** %ob31, align 8, !dbg !4216
  %40 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4217
  %pchan32 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %40, i32 0, i32 2, !dbg !4218
  %41 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan32, align 8, !dbg !4218
  %42 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4219
  %matrix33 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %42, i32 0, i32 3, !dbg !4220
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix33, i64 0, i64 0, !dbg !4219
  %43 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4221
  %ownspace35 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %43, i32 0, i32 5, !dbg !4222
  %44 = load i8, i8* %ownspace35, align 4, !dbg !4222
  %conv36 = zext i8 %44 to i16, !dbg !4221
  call void @BKE_constraint_mat_convertspace(%struct.Object* %39, %struct.bPoseChannel* %41, [4 x float]* %arraydecay34, i16 signext %conv36, i16 signext 0), !dbg !4223
  br label %if.end37, !dbg !4223

if.end37:                                         ; preds = %if.then30, %if.end24
  %45 = load float, float* %enf, align 4, !dbg !4224
  %cmp38 = fcmp olt float %45, 1.000000e+00, !dbg !4226
  br i1 %cmp38, label %if.then40, label %if.end48, !dbg !4227

if.then40:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %solution, metadata !4228, metadata !DIExpression()), !dbg !4230
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %solution, i64 0, i64 0, !dbg !4231
  %46 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4232
  %matrix42 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %46, i32 0, i32 3, !dbg !4233
  %arraydecay43 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix42, i64 0, i64 0, !dbg !4232
  call void @copy_m4_m4([4 x float]* %arraydecay41, [4 x float]* %arraydecay43), !dbg !4234
  %47 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4235
  %matrix44 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %47, i32 0, i32 3, !dbg !4236
  %arraydecay45 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix44, i64 0, i64 0, !dbg !4235
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %oldmat, i64 0, i64 0, !dbg !4237
  %arraydecay47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %solution, i64 0, i64 0, !dbg !4238
  %48 = load float, float* %enf, align 4, !dbg !4239
  call void @blend_m4_m4m4([4 x float]* %arraydecay45, [4 x float]* %arraydecay46, [4 x float]* %arraydecay47, float %48), !dbg !4240
  br label %if.end48, !dbg !4241

if.end48:                                         ; preds = %if.then40, %if.end37
  br label %for.inc, !dbg !4242

for.inc:                                          ; preds = %if.end48, %if.then13, %if.then9, %if.then5, %if.then2
  %49 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4243
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %49, i32 0, i32 0, !dbg !4244
  %50 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !4244
  store %struct.bConstraint* %50, %struct.bConstraint** %con, align 8, !dbg !4245
  br label %for.cond, !dbg !4246, !llvm.loop !4247

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !4249
}

declare dso_local void @blend_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @childof_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !4250 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bChildOfConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !4253, metadata !DIExpression()), !dbg !4254
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !4255, metadata !DIExpression()), !dbg !4256
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !4257, metadata !DIExpression()), !dbg !4258
  call void @llvm.dbg.declare(metadata %struct.bChildOfConstraint** %data, metadata !4259, metadata !DIExpression()), !dbg !4260
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4261
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !4262
  %1 = load i8*, i8** %data1, align 8, !dbg !4262
  %2 = bitcast i8* %1 to %struct.bChildOfConstraint*, !dbg !4261
  store %struct.bChildOfConstraint* %2, %struct.bChildOfConstraint** %data, align 8, !dbg !4260
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !4263
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4264
  %5 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4265
  %tar = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %5, i32 0, i32 0, !dbg !4266
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !4267
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !4268
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !4263
  ret void, !dbg !4269
}

; Function Attrs: noinline nounwind uwtable
define internal void @childof_new_data(i8* %cdata) #0 !dbg !4270 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bChildOfConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !4271, metadata !DIExpression()), !dbg !4272
  call void @llvm.dbg.declare(metadata %struct.bChildOfConstraint** %data, metadata !4273, metadata !DIExpression()), !dbg !4274
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !4275
  %1 = bitcast i8* %0 to %struct.bChildOfConstraint*, !dbg !4276
  store %struct.bChildOfConstraint* %1, %struct.bChildOfConstraint** %data, align 8, !dbg !4274
  %2 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4277
  %flag = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %2, i32 0, i32 1, !dbg !4278
  store i32 511, i32* %flag, align 8, !dbg !4279
  %3 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4280
  %invmat = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %3, i32 0, i32 3, !dbg !4281
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !4280
  call void @unit_m4([4 x float]* %arraydecay), !dbg !4282
  ret void, !dbg !4283
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @childof_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !4284 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bChildOfConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !4287, metadata !DIExpression()), !dbg !4288
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !4289, metadata !DIExpression()), !dbg !4290
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4291
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !4291
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !4293

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !4294
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !4294
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !4295

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bChildOfConstraint** %data, metadata !4296, metadata !DIExpression()), !dbg !4298
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4299
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !4300
  %3 = load i8*, i8** %data2, align 8, !dbg !4300
  %4 = bitcast i8* %3 to %struct.bChildOfConstraint*, !dbg !4299
  store %struct.bChildOfConstraint* %4, %struct.bChildOfConstraint** %data, align 8, !dbg !4298
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !4301, metadata !DIExpression()), !dbg !4302
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4303
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !4303
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !4303
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !4303
  %7 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4303
  %tar = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %7, i32 0, i32 0, !dbg !4303
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !4303
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4303
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !4303
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !4303
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4303
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !4303
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !4303
  %11 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4303
  %subtarget4 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %11, i32 0, i32 4, !dbg !4303
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !4303
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !4303
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4303
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !4303
  %13 = load i8, i8* %tarspace, align 1, !dbg !4303
  %conv = zext i8 %13 to i16, !dbg !4303
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4303
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !4303
  store i16 %conv, i16* %space, align 8, !dbg !4303
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4303
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !4303
  store i16 1, i16* %flag, align 2, !dbg !4303
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4305
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !4305
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !4305
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !4305
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !4303

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4307
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !4307
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !4307
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !4307
  %20 = load i16, i16* %type, align 8, !dbg !4307
  %conv11 = sext i16 %20 to i32, !dbg !4307
  %cmp = icmp eq i32 %conv11, 25, !dbg !4307
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !4307

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4307
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !4307
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !4307
  %22 = load i8, i8* %arrayidx, align 8, !dbg !4307
  %conv15 = zext i8 %22 to i32, !dbg !4307
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !4307
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !4310

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !4311, metadata !DIExpression()), !dbg !4313
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4313
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !4313
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !4313
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !4313
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !4313
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4313
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !4313
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !4313
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !4313
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !4313
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4313
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !4313
  store i16 2, i16* %type22, align 4, !dbg !4313
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4313
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !4313
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !4313

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4313
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !4313
  %30 = load i16, i16* %rotmode, align 4, !dbg !4313
  %conv24 = sext i16 %30 to i32, !dbg !4313
  br label %cond.end, !dbg !4313

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !4313

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !4313
  %conv25 = trunc i32 %cond to i16, !dbg !4313
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4313
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !4313
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !4313
  br label %if.end49, !dbg !4313

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4314
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !4314
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !4314
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !4314
  %34 = load i16, i16* %type27, align 8, !dbg !4314
  %conv28 = sext i16 %34 to i32, !dbg !4314
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !4314
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !4314

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4314
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !4314
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !4314
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !4314
  %37 = load i16, i16* %type32, align 8, !dbg !4314
  %conv33 = sext i16 %37 to i32, !dbg !4314
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !4314
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !4314

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4314
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !4314
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !4314
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !4314
  %conv39 = zext i8 %39 to i32, !dbg !4314
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !4314
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !4307

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4316
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !4316
  store i16 3, i16* %type42, align 4, !dbg !4316
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4316
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !4316
  store i16 1, i16* %rotOrder43, align 2, !dbg !4316
  br label %if.end, !dbg !4316

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4318
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !4318
  store i16 1, i16* %type45, align 4, !dbg !4318
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4318
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !4318
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !4318
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !4318
  %45 = load i16, i16* %rotmode47, align 8, !dbg !4318
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4318
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !4318
  store i16 %45, i16* %rotOrder48, align 2, !dbg !4318
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !4310

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !4303
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4303
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !4303
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !4303
  store i32 1, i32* %retval, align 4, !dbg !4320
  br label %return, !dbg !4320

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4321
  br label %return, !dbg !4321

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !4322
  ret i32 %50, !dbg !4322
}

; Function Attrs: noinline nounwind uwtable
define internal void @childof_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !4323 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bChildOfConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !4326, metadata !DIExpression()), !dbg !4327
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !4328, metadata !DIExpression()), !dbg !4329
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !4330, metadata !DIExpression()), !dbg !4331
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4332
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !4332
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !4334

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !4335
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !4335
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !4336

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bChildOfConstraint** %data, metadata !4337, metadata !DIExpression()), !dbg !4339
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4340
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !4341
  %3 = load i8*, i8** %data2, align 8, !dbg !4341
  %4 = bitcast i8* %3 to %struct.bChildOfConstraint*, !dbg !4340
  store %struct.bChildOfConstraint* %4, %struct.bChildOfConstraint** %data, align 8, !dbg !4339
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !4342, metadata !DIExpression()), !dbg !4343
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !4344
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !4345
  %6 = load i8*, i8** %first, align 8, !dbg !4345
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !4344
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !4343
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4346
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !4346
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !4349

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !4350, metadata !DIExpression()), !dbg !4352
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4352
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !4352
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !4352
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !4352
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !4353
  %conv = zext i8 %11 to i32, !dbg !4353
  %cmp = icmp eq i32 %conv, 0, !dbg !4353
  br i1 %cmp, label %if.then6, label %if.end, !dbg !4352

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4355
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !4355
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !4355
  %14 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4355
  %tar7 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %14, i32 0, i32 0, !dbg !4355
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !4355
  %15 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4355
  %subtarget = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %15, i32 0, i32 4, !dbg !4355
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !4355
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4355
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !4355
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !4355
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !4355
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4355
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !4355
  %18 = load i16, i16* %space, align 8, !dbg !4355
  %conv10 = trunc i16 %18 to i8, !dbg !4355
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4355
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !4355
  store i8 %conv10, i8* %tarspace, align 1, !dbg !4355
  br label %if.end, !dbg !4355

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !4352
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4352
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !4352
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !4352
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !4352
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !4352
  br label %if.end11, !dbg !4352

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !4357

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !4358
}

; Function Attrs: noinline nounwind uwtable
define internal void @default_get_tarmat(%struct.bConstraint* %con, %struct.bConstraintOb* %UNUSED_cob, %struct.bConstraintTarget* %ct, float %UNUSED_ctime) #0 !dbg !4359 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %UNUSED_cob.addr = alloca %struct.bConstraintOb*, align 8
  %ct.addr = alloca %struct.bConstraintTarget*, align 8
  %UNUSED_ctime.addr = alloca float, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !4362, metadata !DIExpression()), !dbg !4363
  store %struct.bConstraintOb* %UNUSED_cob, %struct.bConstraintOb** %UNUSED_cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %UNUSED_cob.addr, metadata !4364, metadata !DIExpression()), !dbg !4365
  store %struct.bConstraintTarget* %ct, %struct.bConstraintTarget** %ct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct.addr, metadata !4366, metadata !DIExpression()), !dbg !4367
  store float %UNUSED_ctime, float* %UNUSED_ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_ctime.addr, metadata !4368, metadata !DIExpression()), !dbg !4369
  %0 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !4370
  %tobool = icmp ne %struct.bConstraintTarget* %0, null, !dbg !4370
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4370

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !4370
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %1, i32 0, i32 2, !dbg !4370
  %2 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !4370
  %tobool1 = icmp ne %struct.Object* %2, null, !dbg !4370
  br i1 %tobool1, label %if.then, label %if.else, !dbg !4372

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !4373
  %tar2 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %3, i32 0, i32 2, !dbg !4374
  %4 = load %struct.Object*, %struct.Object** %tar2, align 8, !dbg !4374
  %5 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !4375
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %5, i32 0, i32 3, !dbg !4376
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !4375
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !4377
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %6, i32 0, i32 4, !dbg !4378
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !4377
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !4379
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 5, !dbg !4380
  %8 = load i16, i16* %space, align 8, !dbg !4380
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4381
  %headtail = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %9, i32 0, i32 10, !dbg !4382
  %10 = load float, float* %headtail, align 4, !dbg !4382
  call void @constraint_target_to_mat4(%struct.Object* %4, i8* %arraydecay, [4 x float]* %arraydecay3, i16 signext 0, i16 signext %8, float %10), !dbg !4383
  br label %if.end8, !dbg !4383

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !4384
  %tobool4 = icmp ne %struct.bConstraintTarget* %11, null, !dbg !4384
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !4386

if.then5:                                         ; preds = %if.else
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !4387
  %matrix6 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 4, !dbg !4388
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix6, i64 0, i64 0, !dbg !4387
  call void @unit_m4([4 x float]* %arraydecay7), !dbg !4389
  br label %if.end, !dbg !4389

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  ret void, !dbg !4390
}

; Function Attrs: noinline nounwind uwtable
define internal void @childof_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !4391 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bChildOfConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %parmat = alloca [4 x [4 x float]], align 16
  %invmat11 = alloca [4 x [4 x float]], align 16
  %tempmat = alloca [4 x [4 x float]], align 16
  %loc = alloca [3 x float], align 4
  %eul = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  %loco = alloca [3 x float], align 4
  %eulo = alloca [3 x float], align 4
  %sizo = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !4394, metadata !DIExpression()), !dbg !4395
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !4396, metadata !DIExpression()), !dbg !4397
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !4398, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.declare(metadata %struct.bChildOfConstraint** %data, metadata !4400, metadata !DIExpression()), !dbg !4401
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !4402
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !4403
  %1 = load i8*, i8** %data1, align 8, !dbg !4403
  %2 = bitcast i8* %1 to %struct.bChildOfConstraint*, !dbg !4402
  store %struct.bChildOfConstraint* %2, %struct.bChildOfConstraint** %data, align 8, !dbg !4401
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !4404, metadata !DIExpression()), !dbg !4405
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !4406
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !4407
  %4 = load i8*, i8** %first, align 8, !dbg !4407
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !4406
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !4405
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4408
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !4408
  br i1 %tobool, label %land.lhs.true, label %if.end146, !dbg !4408

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4408
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !4408
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !4408
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !4408
  br i1 %tobool2, label %if.then, label %if.end146, !dbg !4410

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %parmat, metadata !4411, metadata !DIExpression()), !dbg !4413
  %9 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4414
  %flag = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %9, i32 0, i32 1, !dbg !4416
  %10 = load i32, i32* %flag, align 8, !dbg !4416
  %cmp = icmp eq i32 %10, 511, !dbg !4417
  br i1 %cmp, label %if.then3, label %if.else, !dbg !4418

if.then3:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parmat, i64 0, i64 0, !dbg !4419
  %11 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4421
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %11, i32 0, i32 4, !dbg !4422
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !4421
  %12 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4423
  %invmat = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %12, i32 0, i32 3, !dbg !4424
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !4423
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay4, [4 x float]* %arraydecay5), !dbg !4425
  %13 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4426
  %matrix6 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %13, i32 0, i32 3, !dbg !4427
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix6, i64 0, i64 0, !dbg !4426
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parmat, i64 0, i64 0, !dbg !4428
  %14 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4429
  %matrix9 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %14, i32 0, i32 3, !dbg !4430
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix9, i64 0, i64 0, !dbg !4429
  call void @mul_m4_m4m4([4 x float]* %arraydecay7, [4 x float]* %arraydecay8, [4 x float]* %arraydecay10), !dbg !4431
  br label %if.end145, !dbg !4432

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %invmat11, metadata !4433, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tempmat, metadata !4436, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !4438, metadata !DIExpression()), !dbg !4439
  call void @llvm.dbg.declare(metadata [3 x float]* %eul, metadata !4440, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !4442, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.declare(metadata [3 x float]* %loco, metadata !4444, metadata !DIExpression()), !dbg !4445
  call void @llvm.dbg.declare(metadata [3 x float]* %eulo, metadata !4446, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.declare(metadata [3 x float]* %sizo, metadata !4448, metadata !DIExpression()), !dbg !4449
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat11, i64 0, i64 0, !dbg !4450
  %15 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4451
  %invmat13 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %15, i32 0, i32 3, !dbg !4452
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat13, i64 0, i64 0, !dbg !4451
  call void @copy_m4_m4([4 x float]* %arraydecay12, [4 x float]* %arraydecay14), !dbg !4453
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4454
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4455
  %matrix16 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 4, !dbg !4456
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix16, i64 0, i64 3, !dbg !4455
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !4455
  call void @copy_v3_v3(float* %arraydecay15, float* %arraydecay17), !dbg !4457
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !4458
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4459
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 8, !dbg !4460
  %18 = load i16, i16* %rotOrder, align 2, !dbg !4460
  %19 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4461
  %matrix19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %19, i32 0, i32 4, !dbg !4462
  %arraydecay20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix19, i64 0, i64 0, !dbg !4461
  call void @mat4_to_eulO(float* %arraydecay18, i16 signext %18, [4 x float]* %arraydecay20), !dbg !4463
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !4464
  %20 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4465
  %matrix22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %20, i32 0, i32 4, !dbg !4466
  %arraydecay23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix22, i64 0, i64 0, !dbg !4465
  call void @mat4_to_size(float* %arraydecay21, [4 x float]* %arraydecay23), !dbg !4467
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %loco, i64 0, i64 0, !dbg !4468
  %arrayidx25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat11, i64 0, i64 3, !dbg !4469
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx25, i64 0, i64 0, !dbg !4469
  call void @copy_v3_v3(float* %arraydecay24, float* %arraydecay26), !dbg !4470
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %eulo, i64 0, i64 0, !dbg !4471
  %21 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4472
  %rotOrder28 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %21, i32 0, i32 6, !dbg !4473
  %22 = load i16, i16* %rotOrder28, align 2, !dbg !4473
  %arraydecay29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat11, i64 0, i64 0, !dbg !4474
  call void @mat4_to_eulO(float* %arraydecay27, i16 signext %22, [4 x float]* %arraydecay29), !dbg !4475
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %sizo, i64 0, i64 0, !dbg !4476
  %arraydecay31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat11, i64 0, i64 0, !dbg !4477
  call void @mat4_to_size(float* %arraydecay30, [4 x float]* %arraydecay31), !dbg !4478
  %23 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4479
  %flag32 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %23, i32 0, i32 1, !dbg !4481
  %24 = load i32, i32* %flag32, align 8, !dbg !4481
  %and = and i32 %24, 1, !dbg !4482
  %tobool33 = icmp ne i32 %and, 0, !dbg !4482
  br i1 %tobool33, label %if.end, label %if.then34, !dbg !4483

if.then34:                                        ; preds = %if.else
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %loco, i64 0, i64 0, !dbg !4484
  store float 0.000000e+00, float* %arrayidx35, align 4, !dbg !4485
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4486
  store float 0.000000e+00, float* %arrayidx36, align 4, !dbg !4487
  br label %if.end, !dbg !4486

if.end:                                           ; preds = %if.then34, %if.else
  %25 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4488
  %flag37 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %25, i32 0, i32 1, !dbg !4490
  %26 = load i32, i32* %flag37, align 8, !dbg !4490
  %and38 = and i32 %26, 2, !dbg !4491
  %tobool39 = icmp ne i32 %and38, 0, !dbg !4491
  br i1 %tobool39, label %if.end43, label %if.then40, !dbg !4492

if.then40:                                        ; preds = %if.end
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %loco, i64 0, i64 1, !dbg !4493
  store float 0.000000e+00, float* %arrayidx41, align 4, !dbg !4494
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 1, !dbg !4495
  store float 0.000000e+00, float* %arrayidx42, align 4, !dbg !4496
  br label %if.end43, !dbg !4495

if.end43:                                         ; preds = %if.then40, %if.end
  %27 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4497
  %flag44 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %27, i32 0, i32 1, !dbg !4499
  %28 = load i32, i32* %flag44, align 8, !dbg !4499
  %and45 = and i32 %28, 4, !dbg !4500
  %tobool46 = icmp ne i32 %and45, 0, !dbg !4500
  br i1 %tobool46, label %if.end50, label %if.then47, !dbg !4501

if.then47:                                        ; preds = %if.end43
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %loco, i64 0, i64 2, !dbg !4502
  store float 0.000000e+00, float* %arrayidx48, align 4, !dbg !4503
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 2, !dbg !4504
  store float 0.000000e+00, float* %arrayidx49, align 4, !dbg !4505
  br label %if.end50, !dbg !4504

if.end50:                                         ; preds = %if.then47, %if.end43
  %29 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4506
  %flag51 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %29, i32 0, i32 1, !dbg !4508
  %30 = load i32, i32* %flag51, align 8, !dbg !4508
  %and52 = and i32 %30, 8, !dbg !4509
  %tobool53 = icmp ne i32 %and52, 0, !dbg !4509
  br i1 %tobool53, label %if.end57, label %if.then54, !dbg !4510

if.then54:                                        ; preds = %if.end50
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %eulo, i64 0, i64 0, !dbg !4511
  store float 0.000000e+00, float* %arrayidx55, align 4, !dbg !4512
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !4513
  store float 0.000000e+00, float* %arrayidx56, align 4, !dbg !4514
  br label %if.end57, !dbg !4513

if.end57:                                         ; preds = %if.then54, %if.end50
  %31 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4515
  %flag58 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %31, i32 0, i32 1, !dbg !4517
  %32 = load i32, i32* %flag58, align 8, !dbg !4517
  %and59 = and i32 %32, 16, !dbg !4518
  %tobool60 = icmp ne i32 %and59, 0, !dbg !4518
  br i1 %tobool60, label %if.end64, label %if.then61, !dbg !4519

if.then61:                                        ; preds = %if.end57
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %eulo, i64 0, i64 1, !dbg !4520
  store float 0.000000e+00, float* %arrayidx62, align 4, !dbg !4521
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 1, !dbg !4522
  store float 0.000000e+00, float* %arrayidx63, align 4, !dbg !4523
  br label %if.end64, !dbg !4522

if.end64:                                         ; preds = %if.then61, %if.end57
  %33 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4524
  %flag65 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %33, i32 0, i32 1, !dbg !4526
  %34 = load i32, i32* %flag65, align 8, !dbg !4526
  %and66 = and i32 %34, 32, !dbg !4527
  %tobool67 = icmp ne i32 %and66, 0, !dbg !4527
  br i1 %tobool67, label %if.end71, label %if.then68, !dbg !4528

if.then68:                                        ; preds = %if.end64
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %eulo, i64 0, i64 2, !dbg !4529
  store float 0.000000e+00, float* %arrayidx69, align 4, !dbg !4530
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 2, !dbg !4531
  store float 0.000000e+00, float* %arrayidx70, align 4, !dbg !4532
  br label %if.end71, !dbg !4531

if.end71:                                         ; preds = %if.then68, %if.end64
  %35 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4533
  %flag72 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %35, i32 0, i32 1, !dbg !4535
  %36 = load i32, i32* %flag72, align 8, !dbg !4535
  %and73 = and i32 %36, 64, !dbg !4536
  %tobool74 = icmp ne i32 %and73, 0, !dbg !4536
  br i1 %tobool74, label %if.end78, label %if.then75, !dbg !4537

if.then75:                                        ; preds = %if.end71
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %sizo, i64 0, i64 0, !dbg !4538
  store float 1.000000e+00, float* %arrayidx76, align 4, !dbg !4539
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !4540
  store float 1.000000e+00, float* %arrayidx77, align 4, !dbg !4541
  br label %if.end78, !dbg !4540

if.end78:                                         ; preds = %if.then75, %if.end71
  %37 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4542
  %flag79 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %37, i32 0, i32 1, !dbg !4544
  %38 = load i32, i32* %flag79, align 8, !dbg !4544
  %and80 = and i32 %38, 128, !dbg !4545
  %tobool81 = icmp ne i32 %and80, 0, !dbg !4545
  br i1 %tobool81, label %if.end85, label %if.then82, !dbg !4546

if.then82:                                        ; preds = %if.end78
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %sizo, i64 0, i64 1, !dbg !4547
  store float 1.000000e+00, float* %arrayidx83, align 4, !dbg !4548
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !4549
  store float 1.000000e+00, float* %arrayidx84, align 4, !dbg !4550
  br label %if.end85, !dbg !4549

if.end85:                                         ; preds = %if.then82, %if.end78
  %39 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4551
  %flag86 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %39, i32 0, i32 1, !dbg !4553
  %40 = load i32, i32* %flag86, align 8, !dbg !4553
  %and87 = and i32 %40, 256, !dbg !4554
  %tobool88 = icmp ne i32 %and87, 0, !dbg !4554
  br i1 %tobool88, label %if.end92, label %if.then89, !dbg !4555

if.then89:                                        ; preds = %if.end85
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %sizo, i64 0, i64 2, !dbg !4556
  store float 1.000000e+00, float* %arrayidx90, align 4, !dbg !4557
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !4558
  store float 1.000000e+00, float* %arrayidx91, align 4, !dbg !4559
  br label %if.end92, !dbg !4558

if.end92:                                         ; preds = %if.then89, %if.end85
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4560
  %matrix93 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 4, !dbg !4561
  %arraydecay94 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix93, i64 0, i64 0, !dbg !4560
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4562
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !4563
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !4564
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4565
  %rotOrder98 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 8, !dbg !4566
  %43 = load i16, i16* %rotOrder98, align 2, !dbg !4566
  call void @loc_eulO_size_to_mat4([4 x float]* %arraydecay94, float* %arraydecay95, float* %arraydecay96, float* %arraydecay97, i16 signext %43), !dbg !4567
  %arraydecay99 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat11, i64 0, i64 0, !dbg !4568
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %loco, i64 0, i64 0, !dbg !4569
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %eulo, i64 0, i64 0, !dbg !4570
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %sizo, i64 0, i64 0, !dbg !4571
  %44 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4572
  %rotOrder103 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %44, i32 0, i32 6, !dbg !4573
  %45 = load i16, i16* %rotOrder103, align 2, !dbg !4573
  call void @loc_eulO_size_to_mat4([4 x float]* %arraydecay99, float* %arraydecay100, float* %arraydecay101, float* %arraydecay102, i16 signext %45), !dbg !4574
  %arraydecay104 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parmat, i64 0, i64 0, !dbg !4575
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !4576
  %matrix105 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 4, !dbg !4577
  %arraydecay106 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix105, i64 0, i64 0, !dbg !4576
  %arraydecay107 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat11, i64 0, i64 0, !dbg !4578
  call void @mul_m4_m4m4([4 x float]* %arraydecay104, [4 x float]* %arraydecay106, [4 x float]* %arraydecay107), !dbg !4579
  %arraydecay108 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 0, !dbg !4580
  %47 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4581
  %matrix109 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %47, i32 0, i32 3, !dbg !4582
  %arraydecay110 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix109, i64 0, i64 0, !dbg !4581
  call void @copy_m4_m4([4 x float]* %arraydecay108, [4 x float]* %arraydecay110), !dbg !4583
  %48 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4584
  %matrix111 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %48, i32 0, i32 3, !dbg !4585
  %arraydecay112 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix111, i64 0, i64 0, !dbg !4584
  %arraydecay113 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parmat, i64 0, i64 0, !dbg !4586
  %arraydecay114 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 0, !dbg !4587
  call void @mul_m4_m4m4([4 x float]* %arraydecay112, [4 x float]* %arraydecay113, [4 x float]* %arraydecay114), !dbg !4588
  %49 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4589
  %flag115 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %49, i32 0, i32 1, !dbg !4591
  %50 = load i32, i32* %flag115, align 8, !dbg !4591
  %and116 = and i32 %50, 1, !dbg !4592
  %tobool117 = icmp ne i32 %and116, 0, !dbg !4592
  br i1 %tobool117, label %if.end124, label %if.then118, !dbg !4593

if.then118:                                       ; preds = %if.end92
  %arrayidx119 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 3, !dbg !4594
  %arrayidx120 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx119, i64 0, i64 0, !dbg !4594
  %51 = load float, float* %arrayidx120, align 16, !dbg !4594
  %52 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4595
  %matrix121 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %52, i32 0, i32 3, !dbg !4596
  %arrayidx122 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix121, i64 0, i64 3, !dbg !4595
  %arrayidx123 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx122, i64 0, i64 0, !dbg !4595
  store float %51, float* %arrayidx123, align 8, !dbg !4597
  br label %if.end124, !dbg !4595

if.end124:                                        ; preds = %if.then118, %if.end92
  %53 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4598
  %flag125 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %53, i32 0, i32 1, !dbg !4600
  %54 = load i32, i32* %flag125, align 8, !dbg !4600
  %and126 = and i32 %54, 2, !dbg !4601
  %tobool127 = icmp ne i32 %and126, 0, !dbg !4601
  br i1 %tobool127, label %if.end134, label %if.then128, !dbg !4602

if.then128:                                       ; preds = %if.end124
  %arrayidx129 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 3, !dbg !4603
  %arrayidx130 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx129, i64 0, i64 1, !dbg !4603
  %55 = load float, float* %arrayidx130, align 4, !dbg !4603
  %56 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4604
  %matrix131 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %56, i32 0, i32 3, !dbg !4605
  %arrayidx132 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix131, i64 0, i64 3, !dbg !4604
  %arrayidx133 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx132, i64 0, i64 1, !dbg !4604
  store float %55, float* %arrayidx133, align 4, !dbg !4606
  br label %if.end134, !dbg !4604

if.end134:                                        ; preds = %if.then128, %if.end124
  %57 = load %struct.bChildOfConstraint*, %struct.bChildOfConstraint** %data, align 8, !dbg !4607
  %flag135 = getelementptr inbounds %struct.bChildOfConstraint, %struct.bChildOfConstraint* %57, i32 0, i32 1, !dbg !4609
  %58 = load i32, i32* %flag135, align 8, !dbg !4609
  %and136 = and i32 %58, 4, !dbg !4610
  %tobool137 = icmp ne i32 %and136, 0, !dbg !4610
  br i1 %tobool137, label %if.end144, label %if.then138, !dbg !4611

if.then138:                                       ; preds = %if.end134
  %arrayidx139 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 3, !dbg !4612
  %arrayidx140 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx139, i64 0, i64 2, !dbg !4612
  %59 = load float, float* %arrayidx140, align 8, !dbg !4612
  %60 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !4613
  %matrix141 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %60, i32 0, i32 3, !dbg !4614
  %arrayidx142 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix141, i64 0, i64 3, !dbg !4613
  %arrayidx143 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx142, i64 0, i64 2, !dbg !4613
  store float %59, float* %arrayidx143, align 8, !dbg !4615
  br label %if.end144, !dbg !4613

if.end144:                                        ; preds = %if.then138, %if.end134
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.then3
  br label %if.end146, !dbg !4616

if.end146:                                        ; preds = %if.end145, %land.lhs.true, %entry
  ret void, !dbg !4617
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @constraint_target_to_mat4(%struct.Object* %ob, i8* %substring, [4 x float]* %mat, i16 signext %from, i16 signext %to, float %headtail) #0 !dbg !4618 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %substring.addr = alloca i8*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %from.addr = alloca i16, align 2
  %to.addr = alloca i16, align 2
  %headtail.addr = alloca float, align 4
  %pchan = alloca %struct.bPoseChannel*, align 8
  %tempmat = alloca [4 x [4 x float]], align 16
  %loc = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4621, metadata !DIExpression()), !dbg !4622
  store i8* %substring, i8** %substring.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %substring.addr, metadata !4623, metadata !DIExpression()), !dbg !4624
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !4625, metadata !DIExpression()), !dbg !4626
  store i16 %from, i16* %from.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %from.addr, metadata !4627, metadata !DIExpression()), !dbg !4628
  store i16 %to, i16* %to.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %to.addr, metadata !4629, metadata !DIExpression()), !dbg !4630
  store float %headtail, float* %headtail.addr, align 4
  call void @llvm.dbg.declare(metadata float* %headtail.addr, metadata !4631, metadata !DIExpression()), !dbg !4632
  %0 = load i8*, i8** %substring.addr, align 8, !dbg !4633
  %call = call i64 @strlen(i8* %0) #6, !dbg !4635
  %tobool = icmp ne i64 %call, 0, !dbg !4635
  br i1 %tobool, label %if.else, label %if.then, !dbg !4636

if.then:                                          ; preds = %entry
  %1 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4637
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4639
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 47, !dbg !4640
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !4639
  call void @copy_m4_m4([4 x float]* %1, [4 x float]* %arraydecay), !dbg !4641
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4642
  %4 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4643
  %5 = load i16, i16* %from.addr, align 2, !dbg !4644
  %6 = load i16, i16* %to.addr, align 2, !dbg !4645
  call void @BKE_constraint_mat_convertspace(%struct.Object* %3, %struct.bPoseChannel* null, [4 x float]* %4, i16 signext %5, i16 signext %6), !dbg !4646
  br label %if.end37, !dbg !4647

if.else:                                          ; preds = %entry
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4648
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !4650
  %8 = load i16, i16* %type, align 8, !dbg !4650
  %conv = sext i16 %8 to i32, !dbg !4648
  %cmp = icmp eq i32 %conv, 1, !dbg !4651
  br i1 %cmp, label %if.then2, label %if.else3, !dbg !4652

if.then2:                                         ; preds = %if.else
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4653
  %10 = load i8*, i8** %substring.addr, align 8, !dbg !4655
  %11 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4656
  call void @contarget_get_mesh_mat(%struct.Object* %9, i8* %10, [4 x float]* %11), !dbg !4657
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4658
  %13 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4659
  %14 = load i16, i16* %from.addr, align 2, !dbg !4660
  %15 = load i16, i16* %to.addr, align 2, !dbg !4661
  call void @BKE_constraint_mat_convertspace(%struct.Object* %12, %struct.bPoseChannel* null, [4 x float]* %13, i16 signext %14, i16 signext %15), !dbg !4662
  br label %if.end36, !dbg !4663

if.else3:                                         ; preds = %if.else
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4664
  %type4 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 3, !dbg !4666
  %17 = load i16, i16* %type4, align 8, !dbg !4666
  %conv5 = sext i16 %17 to i32, !dbg !4664
  %cmp6 = icmp eq i32 %conv5, 22, !dbg !4667
  br i1 %cmp6, label %if.then8, label %if.else9, !dbg !4668

if.then8:                                         ; preds = %if.else3
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4669
  %19 = load i8*, i8** %substring.addr, align 8, !dbg !4671
  %20 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4672
  call void @contarget_get_lattice_mat(%struct.Object* %18, i8* %19, [4 x float]* %20), !dbg !4673
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4674
  %22 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4675
  %23 = load i16, i16* %from.addr, align 2, !dbg !4676
  %24 = load i16, i16* %to.addr, align 2, !dbg !4677
  call void @BKE_constraint_mat_convertspace(%struct.Object* %21, %struct.bPoseChannel* null, [4 x float]* %22, i16 signext %23, i16 signext %24), !dbg !4678
  br label %if.end35, !dbg !4679

if.else9:                                         ; preds = %if.else3
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !4680, metadata !DIExpression()), !dbg !4682
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4683
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 18, !dbg !4684
  %26 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !4684
  %27 = load i8*, i8** %substring.addr, align 8, !dbg !4685
  %call10 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %26, i8* %27), !dbg !4686
  store %struct.bPoseChannel* %call10, %struct.bPoseChannel** %pchan, align 8, !dbg !4687
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4688
  %tobool11 = icmp ne %struct.bPoseChannel* %28, null, !dbg !4688
  br i1 %tobool11, label %if.then12, label %if.else31, !dbg !4690

if.then12:                                        ; preds = %if.else9
  %29 = load float, float* %headtail.addr, align 4, !dbg !4691
  %cmp13 = fcmp olt float %29, 0x3EB0C6F7A0000000, !dbg !4694
  br i1 %cmp13, label %if.then15, label %if.else19, !dbg !4695

if.then15:                                        ; preds = %if.then12
  %30 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4696
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4698
  %obmat16 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 47, !dbg !4699
  %arraydecay17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat16, i64 0, i64 0, !dbg !4698
  %32 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4700
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %32, i32 0, i32 29, !dbg !4701
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !4700
  call void @mul_m4_m4m4([4 x float]* %30, [4 x float]* %arraydecay17, [4 x float]* %arraydecay18), !dbg !4702
  br label %if.end, !dbg !4703

if.else19:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tempmat, metadata !4704, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !4707, metadata !DIExpression()), !dbg !4708
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4709
  %33 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4710
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %33, i32 0, i32 31, !dbg !4711
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !4710
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4712
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %34, i32 0, i32 32, !dbg !4713
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !4712
  %35 = load float, float* %headtail.addr, align 4, !dbg !4714
  call void @interp_v3_v3v3(float* %arraydecay20, float* %arraydecay21, float* %arraydecay22, float %35), !dbg !4715
  %arraydecay23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 0, !dbg !4716
  %36 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4717
  %pose_mat24 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %36, i32 0, i32 29, !dbg !4718
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat24, i64 0, i64 0, !dbg !4717
  call void @copy_m4_m4([4 x float]* %arraydecay23, [4 x float]* %arraydecay25), !dbg !4719
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 3, !dbg !4720
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !4720
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4721
  call void @copy_v3_v3(float* %arraydecay26, float* %arraydecay27), !dbg !4722
  %37 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4723
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4724
  %obmat28 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 47, !dbg !4725
  %arraydecay29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat28, i64 0, i64 0, !dbg !4724
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 0, !dbg !4726
  call void @mul_m4_m4m4([4 x float]* %37, [4 x float]* %arraydecay29, [4 x float]* %arraydecay30), !dbg !4727
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then15
  br label %if.end34, !dbg !4728

if.else31:                                        ; preds = %if.else9
  %39 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4729
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4730
  %obmat32 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 47, !dbg !4731
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat32, i64 0, i64 0, !dbg !4730
  call void @copy_m4_m4([4 x float]* %39, [4 x float]* %arraydecay33), !dbg !4732
  br label %if.end34

if.end34:                                         ; preds = %if.else31, %if.end
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4733
  %42 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4734
  %43 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4735
  %44 = load i16, i16* %from.addr, align 2, !dbg !4736
  %45 = load i16, i16* %to.addr, align 2, !dbg !4737
  call void @BKE_constraint_mat_convertspace(%struct.Object* %41, %struct.bPoseChannel* %42, [4 x float]* %43, i16 signext %44, i16 signext %45), !dbg !4738
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then8
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then2
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then
  ret void, !dbg !4739
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @contarget_get_mesh_mat(%struct.Object* %ob, i8* %substring, [4 x float]* %mat) #0 !dbg !4740 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %substring.addr = alloca i8*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %vec = alloca [3 x float], align 4
  %normal = alloca [3 x float], align 4
  %plane = alloca [3 x float], align 4
  %imat = alloca [3 x [3 x float]], align 16
  %tmat = alloca [3 x [3 x float]], align 16
  %defgroup = alloca i32, align 4
  %freeDM = alloca i16, align 2
  %dvert = alloca %struct.MDeformVert*, align 8
  %numVerts = alloca i32, align 4
  %i = alloca i32, align 4
  %co = alloca [3 x float], align 4
  %nor = alloca [3 x float], align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %weightsum = alloca float, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4743, metadata !DIExpression()), !dbg !4744
  store i8* %substring, i8** %substring.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %substring.addr, metadata !4745, metadata !DIExpression()), !dbg !4746
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !4747, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !4749, metadata !DIExpression()), !dbg !4750
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !4750
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4751, metadata !DIExpression()), !dbg !4935
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4936
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !4937
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !4935
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !4938, metadata !DIExpression()), !dbg !4939
  %1 = bitcast [3 x float]* %vec to i8*, !dbg !4939
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 12, i1 false), !dbg !4939
  call void @llvm.dbg.declare(metadata [3 x float]* %normal, metadata !4940, metadata !DIExpression()), !dbg !4941
  %2 = bitcast [3 x float]* %normal to i8*, !dbg !4941
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false), !dbg !4941
  call void @llvm.dbg.declare(metadata [3 x float]* %plane, metadata !4942, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %imat, metadata !4944, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !4946, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.declare(metadata i32* %defgroup, metadata !4948, metadata !DIExpression()), !dbg !4950
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4951
  %4 = load i8*, i8** %substring.addr, align 8, !dbg !4952
  %call1 = call i32 @defgroup_name_index(%struct.Object* %3, i8* %4), !dbg !4953
  store i32 %call1, i32* %defgroup, align 4, !dbg !4950
  call void @llvm.dbg.declare(metadata i16* %freeDM, metadata !4954, metadata !DIExpression()), !dbg !4955
  store i16 0, i16* %freeDM, align 2, !dbg !4955
  %5 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !4956
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4957
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 47, !dbg !4958
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !4957
  call void @copy_m4_m4([4 x float]* %5, [4 x float]* %arraydecay), !dbg !4959
  %7 = load i32, i32* %defgroup, align 4, !dbg !4960
  %cmp = icmp eq i32 %7, -1, !dbg !4962
  br i1 %cmp, label %if.then, label %if.end, !dbg !4963

if.then:                                          ; preds = %entry
  br label %if.end82, !dbg !4964

if.end:                                           ; preds = %entry
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4965
  %tobool = icmp ne %struct.BMEditMesh* %8, null, !dbg !4965
  br i1 %tobool, label %if.then2, label %if.else, !dbg !4967

if.then2:                                         ; preds = %if.end
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4968
  %call3 = call %struct.DerivedMesh* @CDDM_from_editbmesh(%struct.BMEditMesh* %9, i8 zeroext 0, i8 zeroext 0), !dbg !4970
  store %struct.DerivedMesh* %call3, %struct.DerivedMesh** %dm, align 8, !dbg !4971
  store i16 1, i16* %freeDM, align 2, !dbg !4972
  br label %if.end4, !dbg !4973

if.else:                                          ; preds = %if.end
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4974
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 120, !dbg !4976
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !4976
  store %struct.DerivedMesh* %11, %struct.DerivedMesh** %dm, align 8, !dbg !4977
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4978
  %tobool5 = icmp ne %struct.DerivedMesh* %12, null, !dbg !4978
  br i1 %tobool5, label %if.then6, label %if.end77, !dbg !4980

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !4981, metadata !DIExpression()), !dbg !4985
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4986
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 50, !dbg !4987
  %14 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !4987
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4988
  %call7 = call i8* %14(%struct.DerivedMesh* %15, i32 2), !dbg !4986
  %16 = bitcast i8* %call7 to %struct.MDeformVert*, !dbg !4986
  store %struct.MDeformVert* %16, %struct.MDeformVert** %dvert, align 8, !dbg !4985
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !4989, metadata !DIExpression()), !dbg !4990
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4991
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 23, !dbg !4992
  %18 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !4992
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4993
  %call8 = call i32 %18(%struct.DerivedMesh* %19), !dbg !4991
  store i32 %call8, i32* %numVerts, align 4, !dbg !4990
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4994, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !4996, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !4998, metadata !DIExpression()), !dbg !4999
  %20 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !5000
  %tobool9 = icmp ne %struct.MDeformVert* %20, null, !dbg !5000
  br i1 %tobool9, label %if.then10, label %if.end76, !dbg !5002

if.then10:                                        ; preds = %if.then6
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !5003, metadata !DIExpression()), !dbg !5005
  %21 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !5006
  store %struct.MDeformVert* %21, %struct.MDeformVert** %dv, align 8, !dbg !5005
  call void @llvm.dbg.declare(metadata float* %weightsum, metadata !5007, metadata !DIExpression()), !dbg !5008
  store float 0.000000e+00, float* %weightsum, align 4, !dbg !5008
  store i32 0, i32* %i, align 4, !dbg !5009
  br label %for.cond, !dbg !5011

for.cond:                                         ; preds = %for.inc, %if.then10
  %22 = load i32, i32* %i, align 4, !dbg !5012
  %23 = load i32, i32* %numVerts, align 4, !dbg !5014
  %cmp11 = icmp slt i32 %22, %23, !dbg !5015
  br i1 %cmp11, label %for.body, label %for.end, !dbg !5016

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !5017, metadata !DIExpression()), !dbg !5021
  %24 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5022
  %25 = load i32, i32* %defgroup, align 4, !dbg !5023
  %call12 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %24, i32 %25), !dbg !5024
  store %struct.MDeformWeight* %call12, %struct.MDeformWeight** %dw, align 8, !dbg !5021
  %26 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5025
  %tobool13 = icmp ne %struct.MDeformWeight* %26, null, !dbg !5025
  br i1 %tobool13, label %land.lhs.true, label %if.end25, !dbg !5027

land.lhs.true:                                    ; preds = %for.body
  %27 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5028
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %27, i32 0, i32 1, !dbg !5029
  %28 = load float, float* %weight, align 4, !dbg !5029
  %cmp14 = fcmp ogt float %28, 0.000000e+00, !dbg !5030
  br i1 %cmp14, label %if.then15, label %if.end25, !dbg !5031

if.then15:                                        ; preds = %land.lhs.true
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5032
  %getVertCo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 76, !dbg !5034
  %30 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo, align 8, !dbg !5034
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5035
  %32 = load i32, i32* %i, align 4, !dbg !5036
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5037
  call void %30(%struct.DerivedMesh* %31, i32 %32, float* %arraydecay16), !dbg !5032
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5038
  %getVertNo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 78, !dbg !5039
  %34 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertNo, align 8, !dbg !5039
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5040
  %36 = load i32, i32* %i, align 4, !dbg !5041
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !5042
  call void %34(%struct.DerivedMesh* %35, i32 %36, float* %arraydecay17), !dbg !5038
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5043
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5044
  %37 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5045
  %weight20 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %37, i32 0, i32 1, !dbg !5046
  %38 = load float, float* %weight20, align 4, !dbg !5046
  call void @madd_v3_v3fl(float* %arraydecay18, float* %arraydecay19, float %38), !dbg !5047
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !5048
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !5049
  %39 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5050
  %weight23 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %39, i32 0, i32 1, !dbg !5051
  %40 = load float, float* %weight23, align 4, !dbg !5051
  call void @madd_v3_v3fl(float* %arraydecay21, float* %arraydecay22, float %40), !dbg !5052
  %41 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5053
  %weight24 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %41, i32 0, i32 1, !dbg !5054
  %42 = load float, float* %weight24, align 4, !dbg !5054
  %43 = load float, float* %weightsum, align 4, !dbg !5055
  %add = fadd float %43, %42, !dbg !5055
  store float %add, float* %weightsum, align 4, !dbg !5055
  br label %if.end25, !dbg !5056

if.end25:                                         ; preds = %if.then15, %land.lhs.true, %for.body
  br label %for.inc, !dbg !5057

for.inc:                                          ; preds = %if.end25
  %44 = load i32, i32* %i, align 4, !dbg !5058
  %inc = add nsw i32 %44, 1, !dbg !5058
  store i32 %inc, i32* %i, align 4, !dbg !5058
  %45 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5059
  %incdec.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %45, i32 1, !dbg !5059
  store %struct.MDeformVert* %incdec.ptr, %struct.MDeformVert** %dv, align 8, !dbg !5059
  br label %for.cond, !dbg !5060, !llvm.loop !5061

for.end:                                          ; preds = %for.cond
  %46 = load float, float* %weightsum, align 4, !dbg !5063
  %cmp26 = fcmp ogt float %46, 0.000000e+00, !dbg !5065
  br i1 %cmp26, label %if.then27, label %if.end31, !dbg !5066

if.then27:                                        ; preds = %for.end
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5067
  %47 = load float, float* %weightsum, align 4, !dbg !5069
  %div = fdiv float 1.000000e+00, %47, !dbg !5070
  call void @mul_v3_fl(float* %arraydecay28, float %div), !dbg !5071
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !5072
  %48 = load float, float* %weightsum, align 4, !dbg !5073
  %div30 = fdiv float 1.000000e+00, %48, !dbg !5074
  call void @mul_v3_fl(float* %arraydecay29, float %div30), !dbg !5075
  br label %if.end31, !dbg !5076

if.end31:                                         ; preds = %if.then27, %for.end
  %arraydecay32 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !5077
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5078
  %obmat33 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 47, !dbg !5079
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat33, i64 0, i64 0, !dbg !5078
  call void @copy_m3_m4([3 x float]* %arraydecay32, [4 x float]* %arraydecay34), !dbg !5080
  %arraydecay35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5081
  %arraydecay36 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !5082
  %call37 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay35, [3 x float]* %arraydecay36), !dbg !5083
  %arraydecay38 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5084
  call void @transpose_m3([3 x float]* %arraydecay38), !dbg !5085
  %arraydecay39 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5086
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !5087
  call void @mul_m3_v3([3 x float]* %arraydecay39, float* %arraydecay40), !dbg !5088
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !5089
  %call42 = call float @normalize_v3(float* %arraydecay41), !dbg !5090
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %plane, i64 0, i64 0, !dbg !5091
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 1, !dbg !5092
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5092
  call void @copy_v3_v3(float* %arraydecay43, float* %arraydecay44), !dbg !5093
  %50 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5094
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %50, i64 0, !dbg !5094
  %arraydecay46 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx45, i64 0, i64 0, !dbg !5094
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !5095
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %plane, i64 0, i64 0, !dbg !5096
  call void @cross_v3_v3v3(float* %arraydecay46, float* %arraydecay47, float* %arraydecay48), !dbg !5097
  %51 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5098
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %51, i64 0, !dbg !5098
  %arraydecay50 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx49, i64 0, i64 0, !dbg !5098
  %call51 = call float @len_v3(float* %arraydecay50), !dbg !5100
  %cmp52 = fcmp olt float %call51, 0x3F50624DE0000000, !dbg !5101
  br i1 %cmp52, label %if.then53, label %if.end61, !dbg !5102

if.then53:                                        ; preds = %if.end31
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %plane, i64 0, i64 0, !dbg !5103
  %arrayidx55 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5105
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx55, i64 0, i64 0, !dbg !5105
  call void @copy_v3_v3(float* %arraydecay54, float* %arraydecay56), !dbg !5106
  %52 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5107
  %arrayidx57 = getelementptr inbounds [4 x float], [4 x float]* %52, i64 0, !dbg !5107
  %arraydecay58 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx57, i64 0, i64 0, !dbg !5107
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !5108
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %plane, i64 0, i64 0, !dbg !5109
  call void @cross_v3_v3v3(float* %arraydecay58, float* %arraydecay59, float* %arraydecay60), !dbg !5110
  br label %if.end61, !dbg !5111

if.end61:                                         ; preds = %if.then53, %if.end31
  %53 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5112
  %arrayidx62 = getelementptr inbounds [4 x float], [4 x float]* %53, i64 2, !dbg !5112
  %arraydecay63 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx62, i64 0, i64 0, !dbg !5112
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !5113
  call void @copy_v3_v3(float* %arraydecay63, float* %arraydecay64), !dbg !5114
  %54 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5115
  %arrayidx65 = getelementptr inbounds [4 x float], [4 x float]* %54, i64 1, !dbg !5115
  %arraydecay66 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx65, i64 0, i64 0, !dbg !5115
  %55 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5116
  %arrayidx67 = getelementptr inbounds [4 x float], [4 x float]* %55, i64 2, !dbg !5116
  %arraydecay68 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx67, i64 0, i64 0, !dbg !5116
  %56 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5117
  %arrayidx69 = getelementptr inbounds [4 x float], [4 x float]* %56, i64 0, !dbg !5117
  %arraydecay70 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx69, i64 0, i64 0, !dbg !5117
  call void @cross_v3_v3v3(float* %arraydecay66, float* %arraydecay68, float* %arraydecay70), !dbg !5118
  %57 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5119
  call void @normalize_m4([4 x float]* %57), !dbg !5120
  %58 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5121
  %arrayidx71 = getelementptr inbounds [4 x float], [4 x float]* %58, i64 3, !dbg !5121
  %arraydecay72 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx71, i64 0, i64 0, !dbg !5121
  %59 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5122
  %obmat73 = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 47, !dbg !5123
  %arraydecay74 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat73, i64 0, i64 0, !dbg !5122
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5124
  call void @mul_v3_m4v3(float* %arraydecay72, [4 x float]* %arraydecay74, float* %arraydecay75), !dbg !5125
  br label %if.end76, !dbg !5126

if.end76:                                         ; preds = %if.end61, %if.then6
  br label %if.end77, !dbg !5127

if.end77:                                         ; preds = %if.end76, %if.end4
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5128
  %tobool78 = icmp ne %struct.DerivedMesh* %60, null, !dbg !5128
  br i1 %tobool78, label %land.lhs.true79, label %if.end82, !dbg !5130

land.lhs.true79:                                  ; preds = %if.end77
  %61 = load i16, i16* %freeDM, align 2, !dbg !5131
  %conv = sext i16 %61 to i32, !dbg !5131
  %tobool80 = icmp ne i32 %conv, 0, !dbg !5131
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !5132

if.then81:                                        ; preds = %land.lhs.true79
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5133
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %62, i32 0, i32 95, !dbg !5134
  %63 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !5134
  %64 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5135
  call void %63(%struct.DerivedMesh* %64), !dbg !5133
  br label %if.end82, !dbg !5133

if.end82:                                         ; preds = %if.then, %if.then81, %land.lhs.true79, %if.end77
  ret void, !dbg !5136
}

; Function Attrs: noinline nounwind uwtable
define internal void @contarget_get_lattice_mat(%struct.Object* %ob, i8* %substring, [4 x float]* %mat) #0 !dbg !5137 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %substring.addr = alloca i8*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %dl = alloca %struct.DispList*, align 8
  %co = alloca float*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %tot_verts = alloca i32, align 4
  %vec = alloca [3 x float], align 4
  %tvec = alloca [3 x float], align 4
  %grouped = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %defgroup = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5138, metadata !DIExpression()), !dbg !5139
  store i8* %substring, i8** %substring.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %substring.addr, metadata !5140, metadata !DIExpression()), !dbg !5141
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !5142, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !5144, metadata !DIExpression()), !dbg !5145
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5146
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !5147
  %1 = load i8*, i8** %data, align 8, !dbg !5147
  %2 = bitcast i8* %1 to %struct.Lattice*, !dbg !5148
  store %struct.Lattice* %2, %struct.Lattice** %lt, align 8, !dbg !5145
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !5149, metadata !DIExpression()), !dbg !5170
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5171
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 118, !dbg !5172
  %4 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !5172
  %tobool = icmp ne %struct.CurveCache* %4, null, !dbg !5171
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5171

cond.true:                                        ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5173
  %curve_cache1 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 118, !dbg !5174
  %6 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache1, align 8, !dbg !5174
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %6, i32 0, i32 0, !dbg !5175
  %call = call %struct.DispList* @BKE_displist_find(%struct.ListBase* %disp, i32 7), !dbg !5176
  br label %cond.end, !dbg !5171

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5171

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.DispList* [ %call, %cond.true ], [ null, %cond.false ], !dbg !5171
  store %struct.DispList* %cond, %struct.DispList** %dl, align 8, !dbg !5170
  call void @llvm.dbg.declare(metadata float** %co, metadata !5177, metadata !DIExpression()), !dbg !5178
  %7 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5179
  %tobool2 = icmp ne %struct.DispList* %7, null, !dbg !5179
  br i1 %tobool2, label %cond.true3, label %cond.false4, !dbg !5179

cond.true3:                                       ; preds = %cond.end
  %8 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5180
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %8, i32 0, i32 8, !dbg !5181
  %9 = load float*, float** %verts, align 8, !dbg !5181
  br label %cond.end5, !dbg !5179

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !5179

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi float* [ %9, %cond.true3 ], [ null, %cond.false4 ], !dbg !5179
  store float* %cond6, float** %co, align 8, !dbg !5178
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !5182, metadata !DIExpression()), !dbg !5185
  %10 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5186
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %10, i32 0, i32 21, !dbg !5187
  %11 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !5187
  store %struct.BPoint* %11, %struct.BPoint** %bp, align 8, !dbg !5185
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !5188, metadata !DIExpression()), !dbg !5189
  %12 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5190
  %dvert = getelementptr inbounds %struct.Lattice, %struct.Lattice* %12, i32 0, i32 24, !dbg !5191
  %13 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !5191
  store %struct.MDeformVert* %13, %struct.MDeformVert** %dv, align 8, !dbg !5189
  call void @llvm.dbg.declare(metadata i32* %tot_verts, metadata !5192, metadata !DIExpression()), !dbg !5193
  %14 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5194
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %14, i32 0, i32 2, !dbg !5195
  %15 = load i16, i16* %pntsu, align 8, !dbg !5195
  %conv = sext i16 %15 to i32, !dbg !5194
  %16 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5196
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %16, i32 0, i32 3, !dbg !5197
  %17 = load i16, i16* %pntsv, align 2, !dbg !5197
  %conv7 = sext i16 %17 to i32, !dbg !5196
  %mul = mul nsw i32 %conv, %conv7, !dbg !5198
  %18 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5199
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %18, i32 0, i32 4, !dbg !5200
  %19 = load i16, i16* %pntsw, align 4, !dbg !5200
  %conv8 = sext i16 %19 to i32, !dbg !5199
  %mul9 = mul nsw i32 %mul, %conv8, !dbg !5201
  store i32 %mul9, i32* %tot_verts, align 4, !dbg !5193
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !5202, metadata !DIExpression()), !dbg !5203
  %20 = bitcast [3 x float]* %vec to i8*, !dbg !5203
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 12, i1 false), !dbg !5203
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !5204, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.declare(metadata i32* %grouped, metadata !5206, metadata !DIExpression()), !dbg !5207
  store i32 0, i32* %grouped, align 4, !dbg !5207
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5208, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5210, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.declare(metadata i32* %defgroup, metadata !5212, metadata !DIExpression()), !dbg !5213
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5214
  %22 = load i8*, i8** %substring.addr, align 8, !dbg !5215
  %call10 = call i32 @defgroup_name_index(%struct.Object* %21, i8* %22), !dbg !5216
  store i32 %call10, i32* %defgroup, align 4, !dbg !5213
  %23 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5217
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5218
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 47, !dbg !5219
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5218
  call void @copy_m4_m4([4 x float]* %23, [4 x float]* %arraydecay), !dbg !5220
  %25 = load i32, i32* %defgroup, align 4, !dbg !5221
  %cmp = icmp eq i32 %25, -1, !dbg !5223
  br i1 %cmp, label %if.then, label %if.end, !dbg !5224

if.then:                                          ; preds = %cond.end5
  br label %return, !dbg !5225

if.end:                                           ; preds = %cond.end5
  %26 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5226
  %cmp12 = icmp eq %struct.MDeformVert* %26, null, !dbg !5228
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !5229

if.then14:                                        ; preds = %if.end
  br label %return, !dbg !5230

if.end15:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !5231
  br label %for.cond, !dbg !5233

for.cond:                                         ; preds = %for.inc42, %if.end15
  %27 = load i32, i32* %i, align 4, !dbg !5234
  %28 = load i32, i32* %tot_verts, align 4, !dbg !5236
  %cmp16 = icmp slt i32 %27, %28, !dbg !5237
  br i1 %cmp16, label %for.body, label %for.end45, !dbg !5238

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %n, align 4, !dbg !5239
  br label %for.cond18, !dbg !5242

for.cond18:                                       ; preds = %for.inc, %for.body
  %29 = load i32, i32* %n, align 4, !dbg !5243
  %30 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5245
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %30, i32 0, i32 1, !dbg !5246
  %31 = load i32, i32* %totweight, align 8, !dbg !5246
  %cmp19 = icmp slt i32 %29, %31, !dbg !5247
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !5248

for.body21:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !5249, metadata !DIExpression()), !dbg !5251
  %32 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5252
  %33 = load i32, i32* %defgroup, align 4, !dbg !5253
  %call22 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %32, i32 %33), !dbg !5254
  store %struct.MDeformWeight* %call22, %struct.MDeformWeight** %dw, align 8, !dbg !5251
  %34 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5255
  %tobool23 = icmp ne %struct.MDeformWeight* %34, null, !dbg !5255
  br i1 %tobool23, label %land.lhs.true, label %if.end37, !dbg !5257

land.lhs.true:                                    ; preds = %for.body21
  %35 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5258
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %35, i32 0, i32 1, !dbg !5259
  %36 = load float, float* %weight, align 4, !dbg !5259
  %cmp24 = fcmp ogt float %36, 0.000000e+00, !dbg !5260
  br i1 %cmp24, label %if.then26, label %if.end37, !dbg !5261

if.then26:                                        ; preds = %land.lhs.true
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !5262
  %37 = bitcast float* %arraydecay27 to i8*, !dbg !5262
  %38 = load float*, float** %co, align 8, !dbg !5264
  %tobool28 = icmp ne float* %38, null, !dbg !5264
  br i1 %tobool28, label %cond.true29, label %cond.false30, !dbg !5264

cond.true29:                                      ; preds = %if.then26
  %39 = load float*, float** %co, align 8, !dbg !5265
  br label %cond.end33, !dbg !5264

cond.false30:                                     ; preds = %if.then26
  %40 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5266
  %vec31 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %40, i32 0, i32 0, !dbg !5267
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %vec31, i64 0, i64 0, !dbg !5266
  br label %cond.end33, !dbg !5264

cond.end33:                                       ; preds = %cond.false30, %cond.true29
  %cond34 = phi float* [ %39, %cond.true29 ], [ %arraydecay32, %cond.false30 ], !dbg !5264
  %41 = bitcast float* %cond34 to i8*, !dbg !5262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %41, i64 12, i1 false), !dbg !5262
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5268
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !5269
  call void @add_v3_v3(float* %arraydecay35, float* %arraydecay36), !dbg !5270
  %42 = load i32, i32* %grouped, align 4, !dbg !5271
  %inc = add nsw i32 %42, 1, !dbg !5271
  store i32 %inc, i32* %grouped, align 4, !dbg !5271
  br label %if.end37, !dbg !5272

if.end37:                                         ; preds = %cond.end33, %land.lhs.true, %for.body21
  br label %for.inc, !dbg !5273

for.inc:                                          ; preds = %if.end37
  %43 = load i32, i32* %n, align 4, !dbg !5274
  %inc38 = add nsw i32 %43, 1, !dbg !5274
  store i32 %inc38, i32* %n, align 4, !dbg !5274
  br label %for.cond18, !dbg !5275, !llvm.loop !5276

for.end:                                          ; preds = %for.cond18
  %44 = load float*, float** %co, align 8, !dbg !5278
  %tobool39 = icmp ne float* %44, null, !dbg !5278
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !5280

if.then40:                                        ; preds = %for.end
  %45 = load float*, float** %co, align 8, !dbg !5281
  %add.ptr = getelementptr inbounds float, float* %45, i64 3, !dbg !5281
  store float* %add.ptr, float** %co, align 8, !dbg !5281
  br label %if.end41, !dbg !5282

if.else:                                          ; preds = %for.end
  %46 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5283
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %46, i32 1, !dbg !5283
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !5283
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then40
  br label %for.inc42, !dbg !5284

for.inc42:                                        ; preds = %if.end41
  %47 = load i32, i32* %i, align 4, !dbg !5285
  %inc43 = add nsw i32 %47, 1, !dbg !5285
  store i32 %inc43, i32* %i, align 4, !dbg !5285
  %48 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5286
  %incdec.ptr44 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %48, i32 1, !dbg !5286
  store %struct.MDeformVert* %incdec.ptr44, %struct.MDeformVert** %dv, align 8, !dbg !5286
  br label %for.cond, !dbg !5287, !llvm.loop !5288

for.end45:                                        ; preds = %for.cond
  %49 = load i32, i32* %grouped, align 4, !dbg !5290
  %tobool46 = icmp ne i32 %49, 0, !dbg !5290
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !5292

if.then47:                                        ; preds = %for.end45
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5293
  %50 = load i32, i32* %grouped, align 4, !dbg !5294
  %conv49 = sitofp i32 %50 to float, !dbg !5294
  %div = fdiv float 1.000000e+00, %conv49, !dbg !5295
  call void @mul_v3_fl(float* %arraydecay48, float %div), !dbg !5296
  br label %if.end50, !dbg !5296

if.end50:                                         ; preds = %if.then47, %for.end45
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !5297
  %51 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5298
  %obmat52 = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 47, !dbg !5299
  %arraydecay53 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat52, i64 0, i64 0, !dbg !5298
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5300
  call void @mul_v3_m4v3(float* %arraydecay51, [4 x float]* %arraydecay53, float* %arraydecay54), !dbg !5301
  %52 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5302
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %52, i64 3, !dbg !5302
  %arraydecay55 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !5302
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !5303
  call void @copy_v3_v3(float* %arraydecay55, float* %arraydecay56), !dbg !5304
  br label %return, !dbg !5305

return:                                           ; preds = %if.end50, %if.then14, %if.then
  ret void, !dbg !5305
}

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !5306 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5309, metadata !DIExpression()), !dbg !5310
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5311, metadata !DIExpression()), !dbg !5312
  %0 = load float*, float** %a.addr, align 8, !dbg !5313
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5313
  %1 = load float, float* %arrayidx, align 4, !dbg !5313
  %2 = load float*, float** %r.addr, align 8, !dbg !5314
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5314
  store float %1, float* %arrayidx1, align 4, !dbg !5315
  %3 = load float*, float** %a.addr, align 8, !dbg !5316
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5316
  %4 = load float, float* %arrayidx2, align 4, !dbg !5316
  %5 = load float*, float** %r.addr, align 8, !dbg !5317
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5317
  store float %4, float* %arrayidx3, align 4, !dbg !5318
  %6 = load float*, float** %a.addr, align 8, !dbg !5319
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !5319
  %7 = load float, float* %arrayidx4, align 4, !dbg !5319
  %8 = load float*, float** %r.addr, align 8, !dbg !5320
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5320
  store float %7, float* %arrayidx5, align 4, !dbg !5321
  ret void, !dbg !5322
}

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #2

declare dso_local i32 @defgroup_name_index(%struct.Object*, i8*) #2

declare dso_local %struct.DerivedMesh* @CDDM_from_editbmesh(%struct.BMEditMesh*, i8 zeroext, i8 zeroext) #2

declare dso_local %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !5323 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5326, metadata !DIExpression()), !dbg !5327
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5328, metadata !DIExpression()), !dbg !5329
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5330, metadata !DIExpression()), !dbg !5331
  %0 = load float*, float** %a.addr, align 8, !dbg !5332
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5332
  %1 = load float, float* %arrayidx, align 4, !dbg !5332
  %2 = load float, float* %f.addr, align 4, !dbg !5333
  %mul = fmul float %1, %2, !dbg !5334
  %3 = load float*, float** %r.addr, align 8, !dbg !5335
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !5335
  %4 = load float, float* %arrayidx1, align 4, !dbg !5336
  %add = fadd float %4, %mul, !dbg !5336
  store float %add, float* %arrayidx1, align 4, !dbg !5336
  %5 = load float*, float** %a.addr, align 8, !dbg !5337
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !5337
  %6 = load float, float* %arrayidx2, align 4, !dbg !5337
  %7 = load float, float* %f.addr, align 4, !dbg !5338
  %mul3 = fmul float %6, %7, !dbg !5339
  %8 = load float*, float** %r.addr, align 8, !dbg !5340
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !5340
  %9 = load float, float* %arrayidx4, align 4, !dbg !5341
  %add5 = fadd float %9, %mul3, !dbg !5341
  store float %add5, float* %arrayidx4, align 4, !dbg !5341
  %10 = load float*, float** %a.addr, align 8, !dbg !5342
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5342
  %11 = load float, float* %arrayidx6, align 4, !dbg !5342
  %12 = load float, float* %f.addr, align 4, !dbg !5343
  %mul7 = fmul float %11, %12, !dbg !5344
  %13 = load float*, float** %r.addr, align 8, !dbg !5345
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !5345
  %14 = load float, float* %arrayidx8, align 4, !dbg !5346
  %add9 = fadd float %14, %mul7, !dbg !5346
  store float %add9, float* %arrayidx8, align 4, !dbg !5346
  ret void, !dbg !5347
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !5348 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5351, metadata !DIExpression()), !dbg !5352
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5353, metadata !DIExpression()), !dbg !5354
  %0 = load float, float* %f.addr, align 4, !dbg !5355
  %1 = load float*, float** %r.addr, align 8, !dbg !5356
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !5356
  %2 = load float, float* %arrayidx, align 4, !dbg !5357
  %mul = fmul float %2, %0, !dbg !5357
  store float %mul, float* %arrayidx, align 4, !dbg !5357
  %3 = load float, float* %f.addr, align 4, !dbg !5358
  %4 = load float*, float** %r.addr, align 8, !dbg !5359
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !5359
  %5 = load float, float* %arrayidx1, align 4, !dbg !5360
  %mul2 = fmul float %5, %3, !dbg !5360
  store float %mul2, float* %arrayidx1, align 4, !dbg !5360
  %6 = load float, float* %f.addr, align 4, !dbg !5361
  %7 = load float*, float** %r.addr, align 8, !dbg !5362
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !5362
  %8 = load float, float* %arrayidx3, align 4, !dbg !5363
  %mul4 = fmul float %8, %6, !dbg !5363
  store float %mul4, float* %arrayidx3, align 4, !dbg !5363
  ret void, !dbg !5364
}

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #2

declare dso_local zeroext i8 @invert_m3_m3([3 x float]*, [3 x float]*) #2

declare dso_local void @transpose_m3([3 x float]*) #2

declare dso_local void @mul_m3_v3([3 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !5365 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !5368, metadata !DIExpression()), !dbg !5369
  %0 = load float*, float** %n.addr, align 8, !dbg !5370
  %1 = load float*, float** %n.addr, align 8, !dbg !5371
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !5372
  ret float %call, !dbg !5373
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5374 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5377, metadata !DIExpression()), !dbg !5378
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5379, metadata !DIExpression()), !dbg !5380
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5381, metadata !DIExpression()), !dbg !5382
  %0 = load float*, float** %a.addr, align 8, !dbg !5383
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !5383
  %1 = load float, float* %arrayidx, align 4, !dbg !5383
  %2 = load float*, float** %b.addr, align 8, !dbg !5384
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !5384
  %3 = load float, float* %arrayidx1, align 4, !dbg !5384
  %mul = fmul float %1, %3, !dbg !5385
  %4 = load float*, float** %a.addr, align 8, !dbg !5386
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !5386
  %5 = load float, float* %arrayidx2, align 4, !dbg !5386
  %6 = load float*, float** %b.addr, align 8, !dbg !5387
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5387
  %7 = load float, float* %arrayidx3, align 4, !dbg !5387
  %mul4 = fmul float %5, %7, !dbg !5388
  %sub = fsub float %mul, %mul4, !dbg !5389
  %8 = load float*, float** %r.addr, align 8, !dbg !5390
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !5390
  store float %sub, float* %arrayidx5, align 4, !dbg !5391
  %9 = load float*, float** %a.addr, align 8, !dbg !5392
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !5392
  %10 = load float, float* %arrayidx6, align 4, !dbg !5392
  %11 = load float*, float** %b.addr, align 8, !dbg !5393
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !5393
  %12 = load float, float* %arrayidx7, align 4, !dbg !5393
  %mul8 = fmul float %10, %12, !dbg !5394
  %13 = load float*, float** %a.addr, align 8, !dbg !5395
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !5395
  %14 = load float, float* %arrayidx9, align 4, !dbg !5395
  %15 = load float*, float** %b.addr, align 8, !dbg !5396
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !5396
  %16 = load float, float* %arrayidx10, align 4, !dbg !5396
  %mul11 = fmul float %14, %16, !dbg !5397
  %sub12 = fsub float %mul8, %mul11, !dbg !5398
  %17 = load float*, float** %r.addr, align 8, !dbg !5399
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !5399
  store float %sub12, float* %arrayidx13, align 4, !dbg !5400
  %18 = load float*, float** %a.addr, align 8, !dbg !5401
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !5401
  %19 = load float, float* %arrayidx14, align 4, !dbg !5401
  %20 = load float*, float** %b.addr, align 8, !dbg !5402
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !5402
  %21 = load float, float* %arrayidx15, align 4, !dbg !5402
  %mul16 = fmul float %19, %21, !dbg !5403
  %22 = load float*, float** %a.addr, align 8, !dbg !5404
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !5404
  %23 = load float, float* %arrayidx17, align 4, !dbg !5404
  %24 = load float*, float** %b.addr, align 8, !dbg !5405
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !5405
  %25 = load float, float* %arrayidx18, align 4, !dbg !5405
  %mul19 = fmul float %23, %25, !dbg !5406
  %sub20 = fsub float %mul16, %mul19, !dbg !5407
  %26 = load float*, float** %r.addr, align 8, !dbg !5408
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !5408
  store float %sub20, float* %arrayidx21, align 4, !dbg !5409
  ret void, !dbg !5410
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !5411 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5414, metadata !DIExpression()), !dbg !5415
  %0 = load float*, float** %a.addr, align 8, !dbg !5416
  %1 = load float*, float** %a.addr, align 8, !dbg !5417
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !5418
  %call1 = call float @sqrtf(float %call) #7, !dbg !5419
  ret float %call1, !dbg !5420
}

declare dso_local void @mul_v3_m4v3(float*, [4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !5421 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5424, metadata !DIExpression()), !dbg !5425
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5426, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.declare(metadata float* %d, metadata !5428, metadata !DIExpression()), !dbg !5429
  %0 = load float*, float** %a.addr, align 8, !dbg !5430
  %1 = load float*, float** %a.addr, align 8, !dbg !5431
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !5432
  store float %call, float* %d, align 4, !dbg !5429
  %2 = load float, float* %d, align 4, !dbg !5433
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !5435
  br i1 %cmp, label %if.then, label %if.else, !dbg !5436

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !5437
  %call1 = call float @sqrtf(float %3) #7, !dbg !5439
  store float %call1, float* %d, align 4, !dbg !5440
  %4 = load float*, float** %r.addr, align 8, !dbg !5441
  %5 = load float*, float** %a.addr, align 8, !dbg !5442
  %6 = load float, float* %d, align 4, !dbg !5443
  %div = fdiv float 1.000000e+00, %6, !dbg !5444
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !5445
  br label %if.end, !dbg !5446

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !5447
  call void @zero_v3(float* %7), !dbg !5449
  store float 0.000000e+00, float* %d, align 4, !dbg !5450
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !5451
  ret float %8, !dbg !5452
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !5453 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5456, metadata !DIExpression()), !dbg !5457
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5458, metadata !DIExpression()), !dbg !5459
  %0 = load float*, float** %a.addr, align 8, !dbg !5460
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5460
  %1 = load float, float* %arrayidx, align 4, !dbg !5460
  %2 = load float*, float** %b.addr, align 8, !dbg !5461
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5461
  %3 = load float, float* %arrayidx1, align 4, !dbg !5461
  %mul = fmul float %1, %3, !dbg !5462
  %4 = load float*, float** %a.addr, align 8, !dbg !5463
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5463
  %5 = load float, float* %arrayidx2, align 4, !dbg !5463
  %6 = load float*, float** %b.addr, align 8, !dbg !5464
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5464
  %7 = load float, float* %arrayidx3, align 4, !dbg !5464
  %mul4 = fmul float %5, %7, !dbg !5465
  %add = fadd float %mul, %mul4, !dbg !5466
  %8 = load float*, float** %a.addr, align 8, !dbg !5467
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5467
  %9 = load float, float* %arrayidx5, align 4, !dbg !5467
  %10 = load float*, float** %b.addr, align 8, !dbg !5468
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5468
  %11 = load float, float* %arrayidx6, align 4, !dbg !5468
  %mul7 = fmul float %9, %11, !dbg !5469
  %add8 = fadd float %add, %mul7, !dbg !5470
  ret float %add8, !dbg !5471
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !5472 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5473, metadata !DIExpression()), !dbg !5474
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5477, metadata !DIExpression()), !dbg !5478
  %0 = load float*, float** %a.addr, align 8, !dbg !5479
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5479
  %1 = load float, float* %arrayidx, align 4, !dbg !5479
  %2 = load float, float* %f.addr, align 4, !dbg !5480
  %mul = fmul float %1, %2, !dbg !5481
  %3 = load float*, float** %r.addr, align 8, !dbg !5482
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !5482
  store float %mul, float* %arrayidx1, align 4, !dbg !5483
  %4 = load float*, float** %a.addr, align 8, !dbg !5484
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5484
  %5 = load float, float* %arrayidx2, align 4, !dbg !5484
  %6 = load float, float* %f.addr, align 4, !dbg !5485
  %mul3 = fmul float %5, %6, !dbg !5486
  %7 = load float*, float** %r.addr, align 8, !dbg !5487
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5487
  store float %mul3, float* %arrayidx4, align 4, !dbg !5488
  %8 = load float*, float** %a.addr, align 8, !dbg !5489
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5489
  %9 = load float, float* %arrayidx5, align 4, !dbg !5489
  %10 = load float, float* %f.addr, align 4, !dbg !5490
  %mul6 = fmul float %9, %10, !dbg !5491
  %11 = load float*, float** %r.addr, align 8, !dbg !5492
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !5492
  store float %mul6, float* %arrayidx7, align 4, !dbg !5493
  ret void, !dbg !5494
}

declare dso_local %struct.DispList* @BKE_displist_find(%struct.ListBase*, i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !5495 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5496, metadata !DIExpression()), !dbg !5497
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5498, metadata !DIExpression()), !dbg !5499
  %0 = load float*, float** %a.addr, align 8, !dbg !5500
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5500
  %1 = load float, float* %arrayidx, align 4, !dbg !5500
  %2 = load float*, float** %r.addr, align 8, !dbg !5501
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5501
  %3 = load float, float* %arrayidx1, align 4, !dbg !5502
  %add = fadd float %3, %1, !dbg !5502
  store float %add, float* %arrayidx1, align 4, !dbg !5502
  %4 = load float*, float** %a.addr, align 8, !dbg !5503
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5503
  %5 = load float, float* %arrayidx2, align 4, !dbg !5503
  %6 = load float*, float** %r.addr, align 8, !dbg !5504
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5504
  %7 = load float, float* %arrayidx3, align 4, !dbg !5505
  %add4 = fadd float %7, %5, !dbg !5505
  store float %add4, float* %arrayidx3, align 4, !dbg !5505
  %8 = load float*, float** %a.addr, align 8, !dbg !5506
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5506
  %9 = load float, float* %arrayidx5, align 4, !dbg !5506
  %10 = load float*, float** %r.addr, align 8, !dbg !5507
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5507
  %11 = load float, float* %arrayidx6, align 4, !dbg !5508
  %add7 = fadd float %11, %9, !dbg !5508
  store float %add7, float* %arrayidx6, align 4, !dbg !5508
  ret void, !dbg !5509
}

declare dso_local void @mat4_to_eulO(float*, i16 signext, [4 x float]*) #2

declare dso_local void @mat4_to_size(float*, [4 x float]*) #2

declare dso_local void @loc_eulO_size_to_mat4([4 x float]*, float*, float*, float*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @trackto_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !5510 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bTrackToConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !5511, metadata !DIExpression()), !dbg !5512
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !5513, metadata !DIExpression()), !dbg !5514
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !5515, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.declare(metadata %struct.bTrackToConstraint** %data, metadata !5517, metadata !DIExpression()), !dbg !5518
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5519
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !5520
  %1 = load i8*, i8** %data1, align 8, !dbg !5520
  %2 = bitcast i8* %1 to %struct.bTrackToConstraint*, !dbg !5519
  store %struct.bTrackToConstraint* %2, %struct.bTrackToConstraint** %data, align 8, !dbg !5518
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !5521
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5522
  %5 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data, align 8, !dbg !5523
  %tar = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %5, i32 0, i32 0, !dbg !5524
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !5525
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !5526
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !5521
  ret void, !dbg !5527
}

; Function Attrs: noinline nounwind uwtable
define internal void @trackto_new_data(i8* %cdata) #0 !dbg !5528 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bTrackToConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !5529, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.declare(metadata %struct.bTrackToConstraint** %data, metadata !5531, metadata !DIExpression()), !dbg !5532
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !5533
  %1 = bitcast i8* %0 to %struct.bTrackToConstraint*, !dbg !5534
  store %struct.bTrackToConstraint* %1, %struct.bTrackToConstraint** %data, align 8, !dbg !5532
  %2 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data, align 8, !dbg !5535
  %reserved1 = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %2, i32 0, i32 1, !dbg !5536
  store i32 1, i32* %reserved1, align 8, !dbg !5537
  %3 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data, align 8, !dbg !5538
  %reserved2 = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %3, i32 0, i32 2, !dbg !5539
  store i32 2, i32* %reserved2, align 4, !dbg !5540
  ret void, !dbg !5541
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @trackto_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !5542 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bTrackToConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !5543, metadata !DIExpression()), !dbg !5544
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5547
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !5547
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !5549

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5550
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !5550
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !5551

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bTrackToConstraint** %data, metadata !5552, metadata !DIExpression()), !dbg !5554
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5555
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !5556
  %3 = load i8*, i8** %data2, align 8, !dbg !5556
  %4 = bitcast i8* %3 to %struct.bTrackToConstraint*, !dbg !5555
  store %struct.bTrackToConstraint* %4, %struct.bTrackToConstraint** %data, align 8, !dbg !5554
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !5557, metadata !DIExpression()), !dbg !5558
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5559
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !5559
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !5559
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !5559
  %7 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data, align 8, !dbg !5559
  %tar = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %7, i32 0, i32 0, !dbg !5559
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !5559
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5559
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !5559
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !5559
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5559
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !5559
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !5559
  %11 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data, align 8, !dbg !5559
  %subtarget4 = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %11, i32 0, i32 5, !dbg !5559
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !5559
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !5559
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5559
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !5559
  %13 = load i8, i8* %tarspace, align 1, !dbg !5559
  %conv = zext i8 %13 to i16, !dbg !5559
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5559
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !5559
  store i16 %conv, i16* %space, align 8, !dbg !5559
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5559
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !5559
  store i16 1, i16* %flag, align 2, !dbg !5559
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5561
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !5561
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !5561
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !5561
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !5559

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5563
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !5563
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !5563
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !5563
  %20 = load i16, i16* %type, align 8, !dbg !5563
  %conv11 = sext i16 %20 to i32, !dbg !5563
  %cmp = icmp eq i32 %conv11, 25, !dbg !5563
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !5563

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5563
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !5563
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !5563
  %22 = load i8, i8* %arrayidx, align 8, !dbg !5563
  %conv15 = zext i8 %22 to i32, !dbg !5563
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !5563
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !5566

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !5567, metadata !DIExpression()), !dbg !5569
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5569
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !5569
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !5569
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !5569
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !5569
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5569
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !5569
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !5569
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !5569
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !5569
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5569
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !5569
  store i16 2, i16* %type22, align 4, !dbg !5569
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5569
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !5569
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !5569

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5569
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !5569
  %30 = load i16, i16* %rotmode, align 4, !dbg !5569
  %conv24 = sext i16 %30 to i32, !dbg !5569
  br label %cond.end, !dbg !5569

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !5569

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !5569
  %conv25 = trunc i32 %cond to i16, !dbg !5569
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5569
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !5569
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !5569
  br label %if.end49, !dbg !5569

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5570
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !5570
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !5570
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !5570
  %34 = load i16, i16* %type27, align 8, !dbg !5570
  %conv28 = sext i16 %34 to i32, !dbg !5570
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !5570
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !5570

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5570
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !5570
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !5570
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !5570
  %37 = load i16, i16* %type32, align 8, !dbg !5570
  %conv33 = sext i16 %37 to i32, !dbg !5570
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !5570
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !5570

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5570
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !5570
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !5570
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !5570
  %conv39 = zext i8 %39 to i32, !dbg !5570
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !5570
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !5563

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5572
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !5572
  store i16 3, i16* %type42, align 4, !dbg !5572
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5572
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !5572
  store i16 1, i16* %rotOrder43, align 2, !dbg !5572
  br label %if.end, !dbg !5572

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5574
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !5574
  store i16 1, i16* %type45, align 4, !dbg !5574
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5574
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !5574
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !5574
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !5574
  %45 = load i16, i16* %rotmode47, align 8, !dbg !5574
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5574
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !5574
  store i16 %45, i16* %rotOrder48, align 2, !dbg !5574
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !5566

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5559
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5559
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !5559
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !5559
  store i32 1, i32* %retval, align 4, !dbg !5576
  br label %return, !dbg !5576

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !5577
  br label %return, !dbg !5577

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !5578
  ret i32 %50, !dbg !5578
}

; Function Attrs: noinline nounwind uwtable
define internal void @trackto_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !5579 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bTrackToConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !5580, metadata !DIExpression()), !dbg !5581
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !5582, metadata !DIExpression()), !dbg !5583
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !5584, metadata !DIExpression()), !dbg !5585
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5586
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !5586
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !5588

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5589
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !5589
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !5590

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bTrackToConstraint** %data, metadata !5591, metadata !DIExpression()), !dbg !5593
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5594
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !5595
  %3 = load i8*, i8** %data2, align 8, !dbg !5595
  %4 = bitcast i8* %3 to %struct.bTrackToConstraint*, !dbg !5594
  store %struct.bTrackToConstraint* %4, %struct.bTrackToConstraint** %data, align 8, !dbg !5593
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !5596, metadata !DIExpression()), !dbg !5597
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5598
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !5599
  %6 = load i8*, i8** %first, align 8, !dbg !5599
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !5598
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !5597
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5600
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !5600
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !5603

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !5604, metadata !DIExpression()), !dbg !5606
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5606
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !5606
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !5606
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !5606
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !5607
  %conv = zext i8 %11 to i32, !dbg !5607
  %cmp = icmp eq i32 %conv, 0, !dbg !5607
  br i1 %cmp, label %if.then6, label %if.end, !dbg !5606

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5609
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !5609
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !5609
  %14 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data, align 8, !dbg !5609
  %tar7 = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %14, i32 0, i32 0, !dbg !5609
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !5609
  %15 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data, align 8, !dbg !5609
  %subtarget = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %15, i32 0, i32 5, !dbg !5609
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !5609
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5609
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !5609
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !5609
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !5609
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5609
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !5609
  %18 = load i16, i16* %space, align 8, !dbg !5609
  %conv10 = trunc i16 %18 to i8, !dbg !5609
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5609
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !5609
  store i8 %conv10, i8* %tarspace, align 1, !dbg !5609
  br label %if.end, !dbg !5609

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5606
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5606
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !5606
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !5606
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !5606
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !5606
  br label %if.end11, !dbg !5606

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !5611

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !5612
}

; Function Attrs: noinline nounwind uwtable
define internal void @trackto_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !5613 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bTrackToConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %size = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  %totmat = alloca [3 x [3 x float]], align 16
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !5614, metadata !DIExpression()), !dbg !5615
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !5616, metadata !DIExpression()), !dbg !5617
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !5618, metadata !DIExpression()), !dbg !5619
  call void @llvm.dbg.declare(metadata %struct.bTrackToConstraint** %data, metadata !5620, metadata !DIExpression()), !dbg !5621
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5622
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !5623
  %1 = load i8*, i8** %data1, align 8, !dbg !5623
  %2 = bitcast i8* %1 to %struct.bTrackToConstraint*, !dbg !5622
  store %struct.bTrackToConstraint* %2, %struct.bTrackToConstraint** %data, align 8, !dbg !5621
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !5624, metadata !DIExpression()), !dbg !5625
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !5626
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !5627
  %4 = load i8*, i8** %first, align 8, !dbg !5627
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !5626
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !5625
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5628
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !5628
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5628

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5628
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !5628
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !5628
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !5628
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5630

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !5631, metadata !DIExpression()), !dbg !5633
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !5634, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %totmat, metadata !5636, metadata !DIExpression()), !dbg !5637
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !5638
  %9 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5639
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %9, i32 0, i32 3, !dbg !5640
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !5639
  call void @mat4_to_size(float* %arraydecay, [4 x float]* %arraydecay3), !dbg !5641
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !5642
  %10 = load float, float* %arrayidx, align 4, !dbg !5642
  %11 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5643
  %matrix4 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %11, i32 0, i32 3, !dbg !5644
  %arrayidx5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix4, i64 0, i64 0, !dbg !5643
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx5, i64 0, i64 0, !dbg !5643
  store float %10, float* %arrayidx6, align 8, !dbg !5645
  %12 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5646
  %matrix7 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %12, i32 0, i32 3, !dbg !5647
  %arrayidx8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix7, i64 0, i64 0, !dbg !5646
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx8, i64 0, i64 1, !dbg !5646
  store float 0.000000e+00, float* %arrayidx9, align 4, !dbg !5648
  %13 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5649
  %matrix10 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %13, i32 0, i32 3, !dbg !5650
  %arrayidx11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix10, i64 0, i64 0, !dbg !5649
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx11, i64 0, i64 2, !dbg !5649
  store float 0.000000e+00, float* %arrayidx12, align 8, !dbg !5651
  %14 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5652
  %matrix13 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %14, i32 0, i32 3, !dbg !5653
  %arrayidx14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix13, i64 0, i64 1, !dbg !5652
  %arrayidx15 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx14, i64 0, i64 0, !dbg !5652
  store float 0.000000e+00, float* %arrayidx15, align 8, !dbg !5654
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !5655
  %15 = load float, float* %arrayidx16, align 4, !dbg !5655
  %16 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5656
  %matrix17 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %16, i32 0, i32 3, !dbg !5657
  %arrayidx18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix17, i64 0, i64 1, !dbg !5656
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx18, i64 0, i64 1, !dbg !5656
  store float %15, float* %arrayidx19, align 4, !dbg !5658
  %17 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5659
  %matrix20 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %17, i32 0, i32 3, !dbg !5660
  %arrayidx21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix20, i64 0, i64 1, !dbg !5659
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx21, i64 0, i64 2, !dbg !5659
  store float 0.000000e+00, float* %arrayidx22, align 8, !dbg !5661
  %18 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5662
  %matrix23 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %18, i32 0, i32 3, !dbg !5663
  %arrayidx24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix23, i64 0, i64 2, !dbg !5662
  %arrayidx25 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx24, i64 0, i64 0, !dbg !5662
  store float 0.000000e+00, float* %arrayidx25, align 8, !dbg !5664
  %19 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5665
  %matrix26 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %19, i32 0, i32 3, !dbg !5666
  %arrayidx27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix26, i64 0, i64 2, !dbg !5665
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx27, i64 0, i64 1, !dbg !5665
  store float 0.000000e+00, float* %arrayidx28, align 4, !dbg !5667
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !5668
  %20 = load float, float* %arrayidx29, align 4, !dbg !5668
  %21 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5669
  %matrix30 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %21, i32 0, i32 3, !dbg !5670
  %arrayidx31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix30, i64 0, i64 2, !dbg !5669
  %arrayidx32 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx31, i64 0, i64 2, !dbg !5669
  store float %20, float* %arrayidx32, align 8, !dbg !5671
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5672
  %22 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5673
  %matrix34 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %22, i32 0, i32 3, !dbg !5674
  %arrayidx35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix34, i64 0, i64 3, !dbg !5673
  %arraydecay36 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx35, i64 0, i64 0, !dbg !5673
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5675
  %matrix37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 4, !dbg !5676
  %arrayidx38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix37, i64 0, i64 3, !dbg !5675
  %arraydecay39 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx38, i64 0, i64 0, !dbg !5675
  call void @sub_v3_v3v3(float* %arraydecay33, float* %arraydecay36, float* %arraydecay39), !dbg !5677
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5678
  %24 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5679
  %matrix41 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %24, i32 0, i32 4, !dbg !5680
  %arrayidx42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix41, i64 0, i64 2, !dbg !5679
  %arraydecay43 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx42, i64 0, i64 0, !dbg !5679
  %25 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data, align 8, !dbg !5681
  %reserved1 = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %25, i32 0, i32 1, !dbg !5682
  %26 = load i32, i32* %reserved1, align 8, !dbg !5682
  %conv = trunc i32 %26 to i16, !dbg !5683
  %27 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data, align 8, !dbg !5684
  %reserved2 = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %27, i32 0, i32 2, !dbg !5685
  %28 = load i32, i32* %reserved2, align 4, !dbg !5685
  %conv44 = trunc i32 %28 to i16, !dbg !5686
  %29 = load %struct.bTrackToConstraint*, %struct.bTrackToConstraint** %data, align 8, !dbg !5687
  %flags = getelementptr inbounds %struct.bTrackToConstraint, %struct.bTrackToConstraint* %29, i32 0, i32 3, !dbg !5688
  %30 = load i32, i32* %flags, align 8, !dbg !5688
  %conv45 = trunc i32 %30 to i16, !dbg !5687
  %arraydecay46 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !5689
  call void @vectomat(float* %arraydecay40, float* %arraydecay43, i16 signext %conv, i16 signext %conv44, i16 signext %conv45, [3 x float]* %arraydecay46), !dbg !5690
  %31 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5691
  %matrix47 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %31, i32 0, i32 3, !dbg !5692
  %arraydecay48 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix47, i64 0, i64 0, !dbg !5691
  %arraydecay49 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !5693
  %32 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !5694
  %matrix50 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %32, i32 0, i32 3, !dbg !5695
  %arraydecay51 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix50, i64 0, i64 0, !dbg !5694
  call void @mul_m4_m3m4([4 x float]* %arraydecay48, [3 x float]* %arraydecay49, [4 x float]* %arraydecay51), !dbg !5696
  br label %if.end, !dbg !5697

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5698
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5699 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5700, metadata !DIExpression()), !dbg !5701
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5702, metadata !DIExpression()), !dbg !5703
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5704, metadata !DIExpression()), !dbg !5705
  %0 = load float*, float** %a.addr, align 8, !dbg !5706
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5706
  %1 = load float, float* %arrayidx, align 4, !dbg !5706
  %2 = load float*, float** %b.addr, align 8, !dbg !5707
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5707
  %3 = load float, float* %arrayidx1, align 4, !dbg !5707
  %sub = fsub float %1, %3, !dbg !5708
  %4 = load float*, float** %r.addr, align 8, !dbg !5709
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5709
  store float %sub, float* %arrayidx2, align 4, !dbg !5710
  %5 = load float*, float** %a.addr, align 8, !dbg !5711
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5711
  %6 = load float, float* %arrayidx3, align 4, !dbg !5711
  %7 = load float*, float** %b.addr, align 8, !dbg !5712
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5712
  %8 = load float, float* %arrayidx4, align 4, !dbg !5712
  %sub5 = fsub float %6, %8, !dbg !5713
  %9 = load float*, float** %r.addr, align 8, !dbg !5714
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5714
  store float %sub5, float* %arrayidx6, align 4, !dbg !5715
  %10 = load float*, float** %a.addr, align 8, !dbg !5716
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5716
  %11 = load float, float* %arrayidx7, align 4, !dbg !5716
  %12 = load float*, float** %b.addr, align 8, !dbg !5717
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !5717
  %13 = load float, float* %arrayidx8, align 4, !dbg !5717
  %sub9 = fsub float %11, %13, !dbg !5718
  %14 = load float*, float** %r.addr, align 8, !dbg !5719
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5719
  store float %sub9, float* %arrayidx10, align 4, !dbg !5720
  ret void, !dbg !5721
}

; Function Attrs: noinline nounwind uwtable
define internal void @vectomat(float* %vec, float* %target_up, i16 signext %axis, i16 signext %upflag, i16 signext %flags, [3 x float]* %m) #0 !dbg !5722 {
entry:
  %vec.addr = alloca float*, align 8
  %target_up.addr = alloca float*, align 8
  %axis.addr = alloca i16, align 2
  %upflag.addr = alloca i16, align 2
  %flags.addr = alloca i16, align 2
  %m.addr = alloca [3 x float]*, align 8
  %n = alloca [3 x float], align 4
  %u = alloca [3 x float], align 4
  %proj = alloca [3 x float], align 4
  %right = alloca [3 x float], align 4
  %neg = alloca float, align 4
  %right_index = alloca i32, align 4
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5725, metadata !DIExpression()), !dbg !5726
  store float* %target_up, float** %target_up.addr, align 8
  call void @llvm.dbg.declare(metadata float** %target_up.addr, metadata !5727, metadata !DIExpression()), !dbg !5728
  store i16 %axis, i16* %axis.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %axis.addr, metadata !5729, metadata !DIExpression()), !dbg !5730
  store i16 %upflag, i16* %upflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %upflag.addr, metadata !5731, metadata !DIExpression()), !dbg !5732
  store i16 %flags, i16* %flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flags.addr, metadata !5733, metadata !DIExpression()), !dbg !5734
  store [3 x float]* %m, [3 x float]** %m.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %m.addr, metadata !5735, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !5737, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata [3 x float]* %u, metadata !5739, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.declare(metadata [3 x float]* %proj, metadata !5741, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.declare(metadata [3 x float]* %right, metadata !5743, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.declare(metadata float* %neg, metadata !5745, metadata !DIExpression()), !dbg !5746
  store float -1.000000e+00, float* %neg, align 4, !dbg !5746
  call void @llvm.dbg.declare(metadata i32* %right_index, metadata !5747, metadata !DIExpression()), !dbg !5748
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !5749
  %0 = load float*, float** %vec.addr, align 8, !dbg !5751
  %call = call float @normalize_v3_v3(float* %arraydecay, float* %0), !dbg !5752
  %cmp = fcmp oeq float %call, 0.000000e+00, !dbg !5753
  br i1 %cmp, label %if.then, label %if.end, !dbg !5754

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !5755
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5757
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 1, !dbg !5758
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !5759
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 2, !dbg !5760
  store float 1.000000e+00, float* %arrayidx2, align 4, !dbg !5761
  br label %if.end, !dbg !5762

if.end:                                           ; preds = %if.then, %entry
  %1 = load i16, i16* %axis.addr, align 2, !dbg !5763
  %conv = sext i16 %1 to i32, !dbg !5763
  %cmp3 = icmp sgt i32 %conv, 2, !dbg !5765
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !5766

if.then5:                                         ; preds = %if.end
  %2 = load i16, i16* %axis.addr, align 2, !dbg !5767
  %conv6 = sext i16 %2 to i32, !dbg !5767
  %sub = sub nsw i32 %conv6, 3, !dbg !5767
  %conv7 = trunc i32 %sub to i16, !dbg !5767
  store i16 %conv7, i16* %axis.addr, align 2, !dbg !5767
  br label %if.end9, !dbg !5768

if.else:                                          ; preds = %if.end
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !5769
  call void @negate_v3(float* %arraydecay8), !dbg !5770
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5
  %3 = load i16, i16* %flags.addr, align 2, !dbg !5771
  %conv10 = sext i16 %3 to i32, !dbg !5771
  %and = and i32 %conv10, 1, !dbg !5773
  %tobool = icmp ne i32 %and, 0, !dbg !5773
  br i1 %tobool, label %if.then11, label %if.else13, !dbg !5774

if.then11:                                        ; preds = %if.end9
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !5775
  %4 = load float*, float** %target_up.addr, align 8, !dbg !5777
  call void @copy_v3_v3(float* %arraydecay12, float* %4), !dbg !5778
  br label %if.end17, !dbg !5779

if.else13:                                        ; preds = %if.end9
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !5780
  store float 0.000000e+00, float* %arrayidx14, align 4, !dbg !5782
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 1, !dbg !5783
  store float 0.000000e+00, float* %arrayidx15, align 4, !dbg !5784
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 2, !dbg !5785
  store float 1.000000e+00, float* %arrayidx16, align 4, !dbg !5786
  br label %if.end17

if.end17:                                         ; preds = %if.else13, %if.then11
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %proj, i64 0, i64 0, !dbg !5787
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !5788
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !5789
  call void @project_v3_v3v3(float* %arraydecay18, float* %arraydecay19, float* %arraydecay20), !dbg !5790
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %proj, i64 0, i64 0, !dbg !5791
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !5792
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %proj, i64 0, i64 0, !dbg !5793
  call void @sub_v3_v3v3(float* %arraydecay21, float* %arraydecay22, float* %arraydecay23), !dbg !5794
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %proj, i64 0, i64 0, !dbg !5795
  %call25 = call float @normalize_v3(float* %arraydecay24), !dbg !5797
  %cmp26 = fcmp oeq float %call25, 0.000000e+00, !dbg !5798
  br i1 %cmp26, label %if.then28, label %if.end32, !dbg !5799

if.then28:                                        ; preds = %if.end17
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %proj, i64 0, i64 0, !dbg !5800
  store float 0.000000e+00, float* %arrayidx29, align 4, !dbg !5802
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %proj, i64 0, i64 1, !dbg !5803
  store float 1.000000e+00, float* %arrayidx30, align 4, !dbg !5804
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %proj, i64 0, i64 2, !dbg !5805
  store float 0.000000e+00, float* %arrayidx31, align 4, !dbg !5806
  br label %if.end32, !dbg !5807

if.end32:                                         ; preds = %if.then28, %if.end17
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %right, i64 0, i64 0, !dbg !5808
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %proj, i64 0, i64 0, !dbg !5809
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !5810
  call void @cross_v3_v3v3(float* %arraydecay33, float* %arraydecay34, float* %arraydecay35), !dbg !5811
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %right, i64 0, i64 0, !dbg !5812
  %call37 = call float @normalize_v3(float* %arraydecay36), !dbg !5813
  %5 = load i16, i16* %axis.addr, align 2, !dbg !5814
  %conv38 = sext i16 %5 to i32, !dbg !5814
  %6 = load i16, i16* %upflag.addr, align 2, !dbg !5816
  %conv39 = sext i16 %6 to i32, !dbg !5816
  %cmp40 = icmp ne i32 %conv38, %conv39, !dbg !5817
  br i1 %cmp40, label %if.then42, label %if.else72, !dbg !5818

if.then42:                                        ; preds = %if.end32
  %7 = load i16, i16* %axis.addr, align 2, !dbg !5819
  %conv43 = sext i16 %7 to i32, !dbg !5819
  %sub44 = sub nsw i32 3, %conv43, !dbg !5821
  %8 = load i16, i16* %upflag.addr, align 2, !dbg !5822
  %conv45 = sext i16 %8 to i32, !dbg !5822
  %sub46 = sub nsw i32 %sub44, %conv45, !dbg !5823
  store i32 %sub46, i32* %right_index, align 4, !dbg !5824
  %9 = load i16, i16* %axis.addr, align 2, !dbg !5825
  %conv47 = sext i16 %9 to i32, !dbg !5825
  %10 = load i16, i16* %upflag.addr, align 2, !dbg !5826
  %conv48 = sext i16 %10 to i32, !dbg !5826
  %call49 = call i32 @basis_cross(i32 %conv47, i32 %conv48), !dbg !5827
  %conv50 = sitofp i32 %call49 to float, !dbg !5828
  store float %conv50, float* %neg, align 4, !dbg !5829
  %11 = load float, float* %neg, align 4, !dbg !5830
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %right, i64 0, i64 0, !dbg !5831
  %12 = load float, float* %arrayidx51, align 4, !dbg !5831
  %mul = fmul float %11, %12, !dbg !5832
  %13 = load [3 x float]*, [3 x float]** %m.addr, align 8, !dbg !5833
  %14 = load i32, i32* %right_index, align 4, !dbg !5834
  %idxprom = sext i32 %14 to i64, !dbg !5833
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %13, i64 %idxprom, !dbg !5833
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx52, i64 0, i64 0, !dbg !5833
  store float %mul, float* %arrayidx53, align 4, !dbg !5835
  %15 = load float, float* %neg, align 4, !dbg !5836
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %right, i64 0, i64 1, !dbg !5837
  %16 = load float, float* %arrayidx54, align 4, !dbg !5837
  %mul55 = fmul float %15, %16, !dbg !5838
  %17 = load [3 x float]*, [3 x float]** %m.addr, align 8, !dbg !5839
  %18 = load i32, i32* %right_index, align 4, !dbg !5840
  %idxprom56 = sext i32 %18 to i64, !dbg !5839
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %17, i64 %idxprom56, !dbg !5839
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx57, i64 0, i64 1, !dbg !5839
  store float %mul55, float* %arrayidx58, align 4, !dbg !5841
  %19 = load float, float* %neg, align 4, !dbg !5842
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %right, i64 0, i64 2, !dbg !5843
  %20 = load float, float* %arrayidx59, align 4, !dbg !5843
  %mul60 = fmul float %19, %20, !dbg !5844
  %21 = load [3 x float]*, [3 x float]** %m.addr, align 8, !dbg !5845
  %22 = load i32, i32* %right_index, align 4, !dbg !5846
  %idxprom61 = sext i32 %22 to i64, !dbg !5845
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %21, i64 %idxprom61, !dbg !5845
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx62, i64 0, i64 2, !dbg !5845
  store float %mul60, float* %arrayidx63, align 4, !dbg !5847
  %23 = load [3 x float]*, [3 x float]** %m.addr, align 8, !dbg !5848
  %24 = load i16, i16* %upflag.addr, align 2, !dbg !5849
  %idxprom64 = sext i16 %24 to i64, !dbg !5848
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %23, i64 %idxprom64, !dbg !5848
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 0, !dbg !5848
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %proj, i64 0, i64 0, !dbg !5850
  call void @copy_v3_v3(float* %arraydecay66, float* %arraydecay67), !dbg !5851
  %25 = load [3 x float]*, [3 x float]** %m.addr, align 8, !dbg !5852
  %26 = load i16, i16* %axis.addr, align 2, !dbg !5853
  %idxprom68 = sext i16 %26 to i64, !dbg !5852
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %25, i64 %idxprom68, !dbg !5852
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx69, i64 0, i64 0, !dbg !5852
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !5854
  call void @copy_v3_v3(float* %arraydecay70, float* %arraydecay71), !dbg !5855
  br label %if.end73, !dbg !5856

if.else72:                                        ; preds = %if.end32
  %27 = load [3 x float]*, [3 x float]** %m.addr, align 8, !dbg !5857
  call void @unit_m3([3 x float]* %27), !dbg !5859
  br label %if.end73

if.end73:                                         ; preds = %if.else72, %if.then42
  ret void, !dbg !5860
}

declare dso_local void @mul_m4_m3m4([4 x float]*, [3 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !5861 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5862, metadata !DIExpression()), !dbg !5863
  %0 = load float*, float** %r.addr, align 8, !dbg !5864
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5864
  %1 = load float, float* %arrayidx, align 4, !dbg !5864
  %fneg = fneg float %1, !dbg !5865
  %2 = load float*, float** %r.addr, align 8, !dbg !5866
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5866
  store float %fneg, float* %arrayidx1, align 4, !dbg !5867
  %3 = load float*, float** %r.addr, align 8, !dbg !5868
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5868
  %4 = load float, float* %arrayidx2, align 4, !dbg !5868
  %fneg3 = fneg float %4, !dbg !5869
  %5 = load float*, float** %r.addr, align 8, !dbg !5870
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !5870
  store float %fneg3, float* %arrayidx4, align 4, !dbg !5871
  %6 = load float*, float** %r.addr, align 8, !dbg !5872
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !5872
  %7 = load float, float* %arrayidx5, align 4, !dbg !5872
  %fneg6 = fneg float %7, !dbg !5873
  %8 = load float*, float** %r.addr, align 8, !dbg !5874
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !5874
  store float %fneg6, float* %arrayidx7, align 4, !dbg !5875
  ret void, !dbg !5876
}

declare dso_local void @project_v3_v3v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @basis_cross(i32 %n, i32 %m) #0 !dbg !5877 {
entry:
  %retval = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %m.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5880, metadata !DIExpression()), !dbg !5881
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !5882, metadata !DIExpression()), !dbg !5883
  %0 = load i32, i32* %n.addr, align 4, !dbg !5884
  %1 = load i32, i32* %m.addr, align 4, !dbg !5885
  %sub = sub nsw i32 %0, %1, !dbg !5886
  switch i32 %sub, label %sw.default [
    i32 1, label %sw.bb
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb1
    i32 2, label %sw.bb1
  ], !dbg !5887

sw.bb:                                            ; preds = %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !5888
  br label %return, !dbg !5888

sw.bb1:                                           ; preds = %entry, %entry
  store i32 -1, i32* %retval, align 4, !dbg !5890
  br label %return, !dbg !5890

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5891
  br label %return, !dbg !5891

return:                                           ; preds = %sw.default, %sw.bb1, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !5892
  ret i32 %2, !dbg !5892
}

declare dso_local void @unit_m3([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @kinematic_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !5893 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bKinematicConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !5894, metadata !DIExpression()), !dbg !5895
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !5896, metadata !DIExpression()), !dbg !5897
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !5898, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.declare(metadata %struct.bKinematicConstraint** %data, metadata !5900, metadata !DIExpression()), !dbg !5901
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5902
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !5903
  %1 = load i8*, i8** %data1, align 8, !dbg !5903
  %2 = bitcast i8* %1 to %struct.bKinematicConstraint*, !dbg !5902
  store %struct.bKinematicConstraint* %2, %struct.bKinematicConstraint** %data, align 8, !dbg !5901
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !5904
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5905
  %5 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5906
  %tar = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %5, i32 0, i32 0, !dbg !5907
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !5908
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !5909
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !5904
  %8 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !5910
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5911
  %10 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5912
  %poletar = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %10, i32 0, i32 6, !dbg !5913
  %11 = bitcast %struct.Object** %poletar to %struct.ID**, !dbg !5914
  %12 = load i8*, i8** %userdata.addr, align 8, !dbg !5915
  call void %8(%struct.bConstraint* %9, %struct.ID** %11, i8 zeroext 0, i8* %12), !dbg !5910
  ret void, !dbg !5916
}

; Function Attrs: noinline nounwind uwtable
define internal void @kinematic_new_data(i8* %cdata) #0 !dbg !5917 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bKinematicConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !5918, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.declare(metadata %struct.bKinematicConstraint** %data, metadata !5920, metadata !DIExpression()), !dbg !5921
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !5922
  %1 = bitcast i8* %0 to %struct.bKinematicConstraint*, !dbg !5923
  store %struct.bKinematicConstraint* %1, %struct.bKinematicConstraint** %data, align 8, !dbg !5921
  %2 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5924
  %weight = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %2, i32 0, i32 9, !dbg !5925
  store float 1.000000e+00, float* %weight, align 4, !dbg !5926
  %3 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5927
  %orientweight = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %3, i32 0, i32 10, !dbg !5928
  store float 1.000000e+00, float* %orientweight, align 8, !dbg !5929
  %4 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5930
  %iterations = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %4, i32 0, i32 1, !dbg !5931
  store i16 500, i16* %iterations, align 8, !dbg !5932
  %5 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5933
  %dist = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %5, i32 0, i32 14, !dbg !5934
  store float 1.000000e+00, float* %dist, align 4, !dbg !5935
  %6 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5936
  %flag = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %6, i32 0, i32 2, !dbg !5937
  store i16 49, i16* %flag, align 2, !dbg !5938
  ret void, !dbg !5939
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @kinematic_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !5940 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bKinematicConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %pchan75 = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !5941, metadata !DIExpression()), !dbg !5942
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !5943, metadata !DIExpression()), !dbg !5944
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5945
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !5945
  br i1 %tobool, label %land.lhs.true, label %if.end119, !dbg !5947

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5948
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !5948
  br i1 %tobool1, label %if.then, label %if.end119, !dbg !5949

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bKinematicConstraint** %data, metadata !5950, metadata !DIExpression()), !dbg !5952
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5953
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !5954
  %3 = load i8*, i8** %data2, align 8, !dbg !5954
  %4 = bitcast i8* %3 to %struct.bKinematicConstraint*, !dbg !5953
  store %struct.bKinematicConstraint* %4, %struct.bKinematicConstraint** %data, align 8, !dbg !5952
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !5955, metadata !DIExpression()), !dbg !5956
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5957
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !5957
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !5957
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !5957
  %7 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5957
  %tar = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %7, i32 0, i32 0, !dbg !5957
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !5957
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5957
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !5957
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !5957
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5957
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !5957
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !5957
  %11 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5957
  %subtarget4 = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %11, i32 0, i32 5, !dbg !5957
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !5957
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !5957
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5957
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !5957
  %13 = load i8, i8* %tarspace, align 1, !dbg !5957
  %conv = zext i8 %13 to i16, !dbg !5957
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5957
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !5957
  store i16 %conv, i16* %space, align 8, !dbg !5957
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5957
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !5957
  store i16 1, i16* %flag, align 2, !dbg !5957
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5959
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !5959
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !5959
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !5959
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !5957

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5961
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !5961
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !5961
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !5961
  %20 = load i16, i16* %type, align 8, !dbg !5961
  %conv11 = sext i16 %20 to i32, !dbg !5961
  %cmp = icmp eq i32 %conv11, 25, !dbg !5961
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !5961

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5961
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !5961
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !5961
  %22 = load i8, i8* %arrayidx, align 8, !dbg !5961
  %conv15 = zext i8 %22 to i32, !dbg !5961
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !5961
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !5964

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !5965, metadata !DIExpression()), !dbg !5967
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5967
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !5967
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !5967
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !5967
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !5967
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5967
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !5967
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !5967
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !5967
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !5967
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5967
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !5967
  store i16 2, i16* %type22, align 4, !dbg !5967
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5967
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !5967
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !5967

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5967
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !5967
  %30 = load i16, i16* %rotmode, align 4, !dbg !5967
  %conv24 = sext i16 %30 to i32, !dbg !5967
  br label %cond.end, !dbg !5967

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !5967

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !5967
  %conv25 = trunc i32 %cond to i16, !dbg !5967
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5967
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !5967
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !5967
  br label %if.end49, !dbg !5967

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5968
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !5968
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !5968
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !5968
  %34 = load i16, i16* %type27, align 8, !dbg !5968
  %conv28 = sext i16 %34 to i32, !dbg !5968
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !5968
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !5968

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5968
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !5968
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !5968
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !5968
  %37 = load i16, i16* %type32, align 8, !dbg !5968
  %conv33 = sext i16 %37 to i32, !dbg !5968
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !5968
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !5968

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5968
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !5968
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !5968
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !5968
  %conv39 = zext i8 %39 to i32, !dbg !5968
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !5968
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !5961

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5970
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !5970
  store i16 3, i16* %type42, align 4, !dbg !5970
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5970
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !5970
  store i16 1, i16* %rotOrder43, align 2, !dbg !5970
  br label %if.end, !dbg !5970

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5972
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !5972
  store i16 1, i16* %type45, align 4, !dbg !5972
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5972
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !5972
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !5972
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !5972
  %45 = load i16, i16* %rotmode47, align 8, !dbg !5972
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5972
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !5972
  store i16 %45, i16* %rotOrder48, align 2, !dbg !5972
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !5964

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5957
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5957
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !5957
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !5957
  %50 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5974
  %call51 = call i8* %50(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !5974
  %51 = bitcast i8* %call51 to %struct.bConstraintTarget*, !dbg !5974
  store %struct.bConstraintTarget* %51, %struct.bConstraintTarget** %ct, align 8, !dbg !5974
  %52 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5974
  %poletar = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %52, i32 0, i32 6, !dbg !5974
  %53 = load %struct.Object*, %struct.Object** %poletar, align 8, !dbg !5974
  %54 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5974
  %tar52 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %54, i32 0, i32 2, !dbg !5974
  store %struct.Object* %53, %struct.Object** %tar52, align 8, !dbg !5974
  %55 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5974
  %subtarget53 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %55, i32 0, i32 3, !dbg !5974
  %arraydecay54 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget53, i64 0, i64 0, !dbg !5974
  %56 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !5974
  %polesubtarget = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %56, i32 0, i32 7, !dbg !5974
  %arraydecay55 = getelementptr inbounds [64 x i8], [64 x i8]* %polesubtarget, i64 0, i64 0, !dbg !5974
  %call56 = call i8* @BLI_strncpy(i8* %arraydecay54, i8* %arraydecay55, i64 64), !dbg !5974
  %57 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !5974
  %tarspace57 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %57, i32 0, i32 6, !dbg !5974
  %58 = load i8, i8* %tarspace57, align 1, !dbg !5974
  %conv58 = zext i8 %58 to i16, !dbg !5974
  %59 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5974
  %space59 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %59, i32 0, i32 5, !dbg !5974
  store i16 %conv58, i16* %space59, align 8, !dbg !5974
  %60 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5974
  %flag60 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %60, i32 0, i32 6, !dbg !5974
  store i16 1, i16* %flag60, align 2, !dbg !5974
  %61 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5976
  %tar61 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %61, i32 0, i32 2, !dbg !5976
  %62 = load %struct.Object*, %struct.Object** %tar61, align 8, !dbg !5976
  %tobool62 = icmp ne %struct.Object* %62, null, !dbg !5976
  br i1 %tobool62, label %if.then63, label %if.end118, !dbg !5974

if.then63:                                        ; preds = %if.end50
  %63 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5978
  %tar64 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %63, i32 0, i32 2, !dbg !5978
  %64 = load %struct.Object*, %struct.Object** %tar64, align 8, !dbg !5978
  %type65 = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 3, !dbg !5978
  %65 = load i16, i16* %type65, align 8, !dbg !5978
  %conv66 = sext i16 %65 to i32, !dbg !5978
  %cmp67 = icmp eq i32 %conv66, 25, !dbg !5978
  br i1 %cmp67, label %land.lhs.true69, label %if.else91, !dbg !5978

land.lhs.true69:                                  ; preds = %if.then63
  %66 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5978
  %subtarget70 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %66, i32 0, i32 3, !dbg !5978
  %arrayidx71 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget70, i64 0, i64 0, !dbg !5978
  %67 = load i8, i8* %arrayidx71, align 8, !dbg !5978
  %conv72 = zext i8 %67 to i32, !dbg !5978
  %tobool73 = icmp ne i32 %conv72, 0, !dbg !5978
  br i1 %tobool73, label %if.then74, label %if.else91, !dbg !5981

if.then74:                                        ; preds = %land.lhs.true69
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan75, metadata !5982, metadata !DIExpression()), !dbg !5984
  %68 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5984
  %tar76 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %68, i32 0, i32 2, !dbg !5984
  %69 = load %struct.Object*, %struct.Object** %tar76, align 8, !dbg !5984
  %pose77 = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 18, !dbg !5984
  %70 = load %struct.bPose*, %struct.bPose** %pose77, align 8, !dbg !5984
  %71 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5984
  %subtarget78 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %71, i32 0, i32 3, !dbg !5984
  %arraydecay79 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget78, i64 0, i64 0, !dbg !5984
  %call80 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %70, i8* %arraydecay79), !dbg !5984
  store %struct.bPoseChannel* %call80, %struct.bPoseChannel** %pchan75, align 8, !dbg !5984
  %72 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5984
  %type81 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %72, i32 0, i32 7, !dbg !5984
  store i16 2, i16* %type81, align 4, !dbg !5984
  %73 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan75, align 8, !dbg !5984
  %tobool82 = icmp ne %struct.bPoseChannel* %73, null, !dbg !5984
  br i1 %tobool82, label %cond.true83, label %cond.false86, !dbg !5984

cond.true83:                                      ; preds = %if.then74
  %74 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan75, align 8, !dbg !5984
  %rotmode84 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %74, i32 0, i32 26, !dbg !5984
  %75 = load i16, i16* %rotmode84, align 4, !dbg !5984
  %conv85 = sext i16 %75 to i32, !dbg !5984
  br label %cond.end87, !dbg !5984

cond.false86:                                     ; preds = %if.then74
  br label %cond.end87, !dbg !5984

cond.end87:                                       ; preds = %cond.false86, %cond.true83
  %cond88 = phi i32 [ %conv85, %cond.true83 ], [ 1, %cond.false86 ], !dbg !5984
  %conv89 = trunc i32 %cond88 to i16, !dbg !5984
  %76 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5984
  %rotOrder90 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %76, i32 0, i32 8, !dbg !5984
  store i16 %conv89, i16* %rotOrder90, align 2, !dbg !5984
  br label %if.end117, !dbg !5984

if.else91:                                        ; preds = %land.lhs.true69, %if.then63
  %77 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5985
  %tar92 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %77, i32 0, i32 2, !dbg !5985
  %78 = load %struct.Object*, %struct.Object** %tar92, align 8, !dbg !5985
  %type93 = getelementptr inbounds %struct.Object, %struct.Object* %78, i32 0, i32 3, !dbg !5985
  %79 = load i16, i16* %type93, align 8, !dbg !5985
  %conv94 = sext i16 %79 to i32, !dbg !5985
  %cmp95 = icmp eq i32 %conv94, 1, !dbg !5985
  br i1 %cmp95, label %land.lhs.true103, label %lor.lhs.false97, !dbg !5985

lor.lhs.false97:                                  ; preds = %if.else91
  %80 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5985
  %tar98 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %80, i32 0, i32 2, !dbg !5985
  %81 = load %struct.Object*, %struct.Object** %tar98, align 8, !dbg !5985
  %type99 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 3, !dbg !5985
  %82 = load i16, i16* %type99, align 8, !dbg !5985
  %conv100 = sext i16 %82 to i32, !dbg !5985
  %cmp101 = icmp eq i32 %conv100, 22, !dbg !5985
  br i1 %cmp101, label %land.lhs.true103, label %if.else111, !dbg !5985

land.lhs.true103:                                 ; preds = %lor.lhs.false97, %if.else91
  %83 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5985
  %subtarget104 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %83, i32 0, i32 3, !dbg !5985
  %arrayidx105 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget104, i64 0, i64 0, !dbg !5985
  %84 = load i8, i8* %arrayidx105, align 8, !dbg !5985
  %conv106 = zext i8 %84 to i32, !dbg !5985
  %tobool107 = icmp ne i32 %conv106, 0, !dbg !5985
  br i1 %tobool107, label %if.then108, label %if.else111, !dbg !5978

if.then108:                                       ; preds = %land.lhs.true103
  %85 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5987
  %type109 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %85, i32 0, i32 7, !dbg !5987
  store i16 3, i16* %type109, align 4, !dbg !5987
  %86 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5987
  %rotOrder110 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %86, i32 0, i32 8, !dbg !5987
  store i16 1, i16* %rotOrder110, align 2, !dbg !5987
  br label %if.end116, !dbg !5987

if.else111:                                       ; preds = %land.lhs.true103, %lor.lhs.false97
  %87 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5989
  %type112 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %87, i32 0, i32 7, !dbg !5989
  store i16 1, i16* %type112, align 4, !dbg !5989
  %88 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5989
  %tar113 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %88, i32 0, i32 2, !dbg !5989
  %89 = load %struct.Object*, %struct.Object** %tar113, align 8, !dbg !5989
  %rotmode114 = getelementptr inbounds %struct.Object, %struct.Object* %89, i32 0, i32 83, !dbg !5989
  %90 = load i16, i16* %rotmode114, align 8, !dbg !5989
  %91 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5989
  %rotOrder115 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %91, i32 0, i32 8, !dbg !5989
  store i16 %90, i16* %rotOrder115, align 2, !dbg !5989
  br label %if.end116

if.end116:                                        ; preds = %if.else111, %if.then108
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %cond.end87
  br label %if.end118, !dbg !5981

if.end118:                                        ; preds = %if.end117, %if.end50
  %92 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5974
  %93 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5974
  %94 = bitcast %struct.bConstraintTarget* %93 to i8*, !dbg !5974
  call void @BLI_addtail(%struct.ListBase* %92, i8* %94), !dbg !5974
  store i32 2, i32* %retval, align 4, !dbg !5991
  br label %return, !dbg !5991

if.end119:                                        ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !5992
  br label %return, !dbg !5992

return:                                           ; preds = %if.end119, %if.end118
  %95 = load i32, i32* %retval, align 4, !dbg !5993
  ret i32 %95, !dbg !5993
}

; Function Attrs: noinline nounwind uwtable
define internal void @kinematic_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !5994 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bKinematicConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  %ctn14 = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !5995, metadata !DIExpression()), !dbg !5996
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !5997, metadata !DIExpression()), !dbg !5998
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !5999, metadata !DIExpression()), !dbg !6000
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6001
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !6001
  br i1 %tobool, label %land.lhs.true, label %if.end30, !dbg !6003

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6004
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !6004
  br i1 %tobool1, label %if.then, label %if.end30, !dbg !6005

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bKinematicConstraint** %data, metadata !6006, metadata !DIExpression()), !dbg !6008
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6009
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !6010
  %3 = load i8*, i8** %data2, align 8, !dbg !6010
  %4 = bitcast i8* %3 to %struct.bKinematicConstraint*, !dbg !6009
  store %struct.bKinematicConstraint* %4, %struct.bKinematicConstraint** %data, align 8, !dbg !6008
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !6011, metadata !DIExpression()), !dbg !6012
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6013
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !6014
  %6 = load i8*, i8** %first, align 8, !dbg !6014
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !6013
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !6012
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6015
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !6015
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !6018

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !6019, metadata !DIExpression()), !dbg !6021
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6021
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !6021
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !6021
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !6021
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !6022
  %conv = zext i8 %11 to i32, !dbg !6022
  %cmp = icmp eq i32 %conv, 0, !dbg !6022
  br i1 %cmp, label %if.then6, label %if.end, !dbg !6021

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6024
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !6024
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !6024
  %14 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !6024
  %tar7 = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %14, i32 0, i32 0, !dbg !6024
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !6024
  %15 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !6024
  %subtarget = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %15, i32 0, i32 5, !dbg !6024
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !6024
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6024
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !6024
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !6024
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !6024
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6024
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !6024
  %18 = load i16, i16* %space, align 8, !dbg !6024
  %conv10 = trunc i16 %18 to i8, !dbg !6024
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6024
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !6024
  store i8 %conv10, i8* %tarspace, align 1, !dbg !6024
  br label %if.end, !dbg !6024

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6021
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6021
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !6021
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !6021
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !6021
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !6021
  br label %if.end11, !dbg !6021

if.end11:                                         ; preds = %if.end, %if.then
  %24 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6026
  %tobool12 = icmp ne %struct.bConstraintTarget* %24, null, !dbg !6026
  br i1 %tobool12, label %if.then13, label %if.end29, !dbg !6029

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn14, metadata !6030, metadata !DIExpression()), !dbg !6032
  %25 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6032
  %next15 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %25, i32 0, i32 0, !dbg !6032
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next15, align 8, !dbg !6032
  store %struct.bConstraintTarget* %26, %struct.bConstraintTarget** %ctn14, align 8, !dbg !6032
  %27 = load i8, i8* %no_copy.addr, align 1, !dbg !6033
  %conv16 = zext i8 %27 to i32, !dbg !6033
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !6033
  br i1 %cmp17, label %if.then19, label %if.end28, !dbg !6032

if.then19:                                        ; preds = %if.then13
  %28 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6035
  %tar20 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %28, i32 0, i32 2, !dbg !6035
  %29 = load %struct.Object*, %struct.Object** %tar20, align 8, !dbg !6035
  %30 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !6035
  %poletar = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %30, i32 0, i32 6, !dbg !6035
  store %struct.Object* %29, %struct.Object** %poletar, align 8, !dbg !6035
  %31 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !6035
  %polesubtarget = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %31, i32 0, i32 7, !dbg !6035
  %arraydecay21 = getelementptr inbounds [64 x i8], [64 x i8]* %polesubtarget, i64 0, i64 0, !dbg !6035
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6035
  %subtarget22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 3, !dbg !6035
  %arraydecay23 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget22, i64 0, i64 0, !dbg !6035
  %call24 = call i8* @BLI_strncpy(i8* %arraydecay21, i8* %arraydecay23, i64 64), !dbg !6035
  %33 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6035
  %space25 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %33, i32 0, i32 5, !dbg !6035
  %34 = load i16, i16* %space25, align 8, !dbg !6035
  %conv26 = trunc i16 %34 to i8, !dbg !6035
  %35 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6035
  %tarspace27 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %35, i32 0, i32 6, !dbg !6035
  store i8 %conv26, i8* %tarspace27, align 1, !dbg !6035
  br label %if.end28, !dbg !6035

if.end28:                                         ; preds = %if.then19, %if.then13
  %36 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6032
  %37 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6032
  %38 = bitcast %struct.bConstraintTarget* %37 to i8*, !dbg !6032
  call void @BLI_freelinkN(%struct.ListBase* %36, i8* %38), !dbg !6032
  %39 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn14, align 8, !dbg !6032
  store %struct.bConstraintTarget* %39, %struct.bConstraintTarget** %ct, align 8, !dbg !6032
  br label %if.end29, !dbg !6032

if.end29:                                         ; preds = %if.end28, %if.end11
  br label %if.end30, !dbg !6037

if.end30:                                         ; preds = %if.end29, %land.lhs.true, %entry
  ret void, !dbg !6038
}

; Function Attrs: noinline nounwind uwtable
define internal void @kinematic_get_tarmat(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.bConstraintTarget* %ct, float %UNUSED_ctime) #0 !dbg !6039 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %ct.addr = alloca %struct.bConstraintTarget*, align 8
  %UNUSED_ctime.addr = alloca float, align 4
  %data = alloca %struct.bKinematicConstraint*, align 8
  %ob = alloca %struct.Object*, align 8
  %vec = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6040, metadata !DIExpression()), !dbg !6041
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !6042, metadata !DIExpression()), !dbg !6043
  store %struct.bConstraintTarget* %ct, %struct.bConstraintTarget** %ct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct.addr, metadata !6044, metadata !DIExpression()), !dbg !6045
  store float %UNUSED_ctime, float* %UNUSED_ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_ctime.addr, metadata !6046, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.declare(metadata %struct.bKinematicConstraint** %data, metadata !6048, metadata !DIExpression()), !dbg !6049
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6050
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !6051
  %1 = load i8*, i8** %data1, align 8, !dbg !6051
  %2 = bitcast i8* %1 to %struct.bKinematicConstraint*, !dbg !6050
  store %struct.bKinematicConstraint* %2, %struct.bKinematicConstraint** %data, align 8, !dbg !6049
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6052
  %tobool = icmp ne %struct.bConstraintTarget* %3, null, !dbg !6052
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6052

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6052
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %4, i32 0, i32 2, !dbg !6052
  %5 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !6052
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !6052
  br i1 %tobool2, label %if.then, label %if.else, !dbg !6054

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6055
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %6, i32 0, i32 2, !dbg !6056
  %7 = load %struct.Object*, %struct.Object** %tar3, align 8, !dbg !6056
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6057
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %8, i32 0, i32 3, !dbg !6058
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !6057
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6059
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 4, !dbg !6060
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !6059
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6061
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 5, !dbg !6062
  %11 = load i16, i16* %space, align 8, !dbg !6062
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6063
  %headtail = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 10, !dbg !6064
  %13 = load float, float* %headtail, align 4, !dbg !6064
  call void @constraint_target_to_mat4(%struct.Object* %7, i8* %arraydecay, [4 x float]* %arraydecay4, i16 signext 0, i16 signext %11, float %13), !dbg !6065
  br label %if.end30, !dbg !6065

if.else:                                          ; preds = %land.lhs.true, %entry
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6066
  %tobool5 = icmp ne %struct.bConstraintTarget* %14, null, !dbg !6066
  br i1 %tobool5, label %if.then6, label %if.end29, !dbg !6068

if.then6:                                         ; preds = %if.else
  %15 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !6069
  %flag = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %15, i32 0, i32 2, !dbg !6072
  %16 = load i16, i16* %flag, align 2, !dbg !6072
  %conv = sext i16 %16 to i32, !dbg !6069
  %and = and i32 %conv, 4, !dbg !6073
  %tobool7 = icmp ne i32 %and, 0, !dbg !6073
  br i1 %tobool7, label %if.then8, label %if.else25, !dbg !6074

if.then8:                                         ; preds = %if.then6
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6075, metadata !DIExpression()), !dbg !6077
  %17 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6078
  %ob9 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %17, i32 0, i32 1, !dbg !6079
  %18 = load %struct.Object*, %struct.Object** %ob9, align 8, !dbg !6079
  store %struct.Object* %18, %struct.Object** %ob, align 8, !dbg !6077
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6080
  %cmp = icmp eq %struct.Object* %19, null, !dbg !6082
  br i1 %cmp, label %if.then11, label %if.else14, !dbg !6083

if.then11:                                        ; preds = %if.then8
  %20 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6084
  %matrix12 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %20, i32 0, i32 4, !dbg !6086
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix12, i64 0, i64 0, !dbg !6084
  call void @unit_m4([4 x float]* %arraydecay13), !dbg !6087
  br label %if.end, !dbg !6088

if.else14:                                        ; preds = %if.then8
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6089, metadata !DIExpression()), !dbg !6091
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6092
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6093
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 47, !dbg !6094
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !6093
  %22 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !6095
  %grabtarget = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %22, i32 0, i32 11, !dbg !6096
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %grabtarget, i64 0, i64 0, !dbg !6095
  call void @mul_v3_m4v3(float* %arraydecay15, [4 x float]* %arraydecay16, float* %arraydecay17), !dbg !6097
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6098
  %matrix18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 4, !dbg !6099
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix18, i64 0, i64 0, !dbg !6098
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6100
  %obmat20 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 47, !dbg !6101
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat20, i64 0, i64 0, !dbg !6100
  call void @copy_m4_m4([4 x float]* %arraydecay19, [4 x float]* %arraydecay21), !dbg !6102
  %25 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6103
  %matrix22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %25, i32 0, i32 4, !dbg !6104
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix22, i64 0, i64 3, !dbg !6103
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !6103
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6105
  call void @copy_v3_v3(float* %arraydecay23, float* %arraydecay24), !dbg !6106
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then11
  br label %if.end28, !dbg !6107

if.else25:                                        ; preds = %if.then6
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6108
  %matrix26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 4, !dbg !6109
  %arraydecay27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix26, i64 0, i64 0, !dbg !6108
  call void @unit_m4([4 x float]* %arraydecay27), !dbg !6110
  br label %if.end28

if.end28:                                         ; preds = %if.else25, %if.end
  br label %if.end29, !dbg !6111

if.end29:                                         ; preds = %if.end28, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then
  ret void, !dbg !6112
}

; Function Attrs: noinline nounwind uwtable
define internal void @followpath_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !6113 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bFollowPathConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6114, metadata !DIExpression()), !dbg !6115
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !6116, metadata !DIExpression()), !dbg !6117
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !6118, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.declare(metadata %struct.bFollowPathConstraint** %data, metadata !6120, metadata !DIExpression()), !dbg !6121
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6122
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !6123
  %1 = load i8*, i8** %data1, align 8, !dbg !6123
  %2 = bitcast i8* %1 to %struct.bFollowPathConstraint*, !dbg !6122
  store %struct.bFollowPathConstraint* %2, %struct.bFollowPathConstraint** %data, align 8, !dbg !6121
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !6124
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6125
  %5 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6126
  %tar = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %5, i32 0, i32 0, !dbg !6127
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !6128
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !6129
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !6124
  ret void, !dbg !6130
}

; Function Attrs: noinline nounwind uwtable
define internal void @followpath_new_data(i8* %cdata) #0 !dbg !6131 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bFollowPathConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !6132, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.declare(metadata %struct.bFollowPathConstraint** %data, metadata !6134, metadata !DIExpression()), !dbg !6135
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !6136
  %1 = bitcast i8* %0 to %struct.bFollowPathConstraint*, !dbg !6137
  store %struct.bFollowPathConstraint* %1, %struct.bFollowPathConstraint** %data, align 8, !dbg !6135
  %2 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6138
  %trackflag = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %2, i32 0, i32 4, !dbg !6139
  store i16 1, i16* %trackflag, align 4, !dbg !6140
  %3 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6141
  %upflag = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %3, i32 0, i32 5, !dbg !6142
  store i16 2, i16* %upflag, align 2, !dbg !6143
  %4 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6144
  %offset = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %4, i32 0, i32 1, !dbg !6145
  store float 0.000000e+00, float* %offset, align 8, !dbg !6146
  %5 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6147
  %followflag = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %5, i32 0, i32 3, !dbg !6148
  store i32 0, i32* %followflag, align 8, !dbg !6149
  ret void, !dbg !6150
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @followpath_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !6151 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bFollowPathConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6152, metadata !DIExpression()), !dbg !6153
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !6154, metadata !DIExpression()), !dbg !6155
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6156
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !6156
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !6158

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6159
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !6159
  br i1 %tobool1, label %if.then, label %if.end7, !dbg !6160

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bFollowPathConstraint** %data, metadata !6161, metadata !DIExpression()), !dbg !6163
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6164
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !6165
  %3 = load i8*, i8** %data2, align 8, !dbg !6165
  %4 = bitcast i8* %3 to %struct.bFollowPathConstraint*, !dbg !6164
  store %struct.bFollowPathConstraint* %4, %struct.bFollowPathConstraint** %data, align 8, !dbg !6163
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !6166, metadata !DIExpression()), !dbg !6167
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6168
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !6168
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !6168
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !6168
  %7 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6168
  %tar = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %7, i32 0, i32 0, !dbg !6168
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !6168
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6168
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !6168
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !6168
  %10 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6168
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %10, i32 0, i32 6, !dbg !6168
  %11 = load i8, i8* %tarspace, align 1, !dbg !6168
  %conv = zext i8 %11 to i16, !dbg !6168
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6168
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 5, !dbg !6168
  store i16 %conv, i16* %space, align 8, !dbg !6168
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6168
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %13, i32 0, i32 6, !dbg !6168
  store i16 1, i16* %flag, align 2, !dbg !6168
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6170
  %tar4 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 2, !dbg !6170
  %15 = load %struct.Object*, %struct.Object** %tar4, align 8, !dbg !6170
  %tobool5 = icmp ne %struct.Object* %15, null, !dbg !6170
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !6168

if.then6:                                         ; preds = %if.then
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6170
  %type = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 7, !dbg !6170
  store i16 1, i16* %type, align 4, !dbg !6170
  br label %if.end, !dbg !6170

if.end:                                           ; preds = %if.then6, %if.then
  %17 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6168
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6168
  %19 = bitcast %struct.bConstraintTarget* %18 to i8*, !dbg !6168
  call void @BLI_addtail(%struct.ListBase* %17, i8* %19), !dbg !6168
  store i32 1, i32* %retval, align 4, !dbg !6172
  br label %return, !dbg !6172

if.end7:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !6173
  br label %return, !dbg !6173

return:                                           ; preds = %if.end7, %if.end
  %20 = load i32, i32* %retval, align 4, !dbg !6174
  ret i32 %20, !dbg !6174
}

; Function Attrs: noinline nounwind uwtable
define internal void @followpath_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !6175 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bFollowPathConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6176, metadata !DIExpression()), !dbg !6177
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !6178, metadata !DIExpression()), !dbg !6179
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6182
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !6182
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !6184

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6185
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !6185
  br i1 %tobool1, label %if.then, label %if.end10, !dbg !6186

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bFollowPathConstraint** %data, metadata !6187, metadata !DIExpression()), !dbg !6189
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6190
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !6191
  %3 = load i8*, i8** %data2, align 8, !dbg !6191
  %4 = bitcast i8* %3 to %struct.bFollowPathConstraint*, !dbg !6190
  store %struct.bFollowPathConstraint* %4, %struct.bFollowPathConstraint** %data, align 8, !dbg !6189
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !6192, metadata !DIExpression()), !dbg !6193
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6194
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !6195
  %6 = load i8*, i8** %first, align 8, !dbg !6195
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !6194
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !6193
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6196
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !6196
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !6199

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !6200, metadata !DIExpression()), !dbg !6202
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6202
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !6202
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !6202
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !6202
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !6203
  %conv = zext i8 %11 to i32, !dbg !6203
  %cmp = icmp eq i32 %conv, 0, !dbg !6203
  br i1 %cmp, label %if.then6, label %if.end, !dbg !6202

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6205
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !6205
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !6205
  %14 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6205
  %tar7 = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %14, i32 0, i32 0, !dbg !6205
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !6205
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6205
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 5, !dbg !6205
  %16 = load i16, i16* %space, align 8, !dbg !6205
  %conv8 = trunc i16 %16 to i8, !dbg !6205
  %17 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6205
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %17, i32 0, i32 6, !dbg !6205
  store i8 %conv8, i8* %tarspace, align 1, !dbg !6205
  br label %if.end, !dbg !6205

if.end:                                           ; preds = %if.then6, %if.then4
  %18 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6202
  %19 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6202
  %20 = bitcast %struct.bConstraintTarget* %19 to i8*, !dbg !6202
  call void @BLI_freelinkN(%struct.ListBase* %18, i8* %20), !dbg !6202
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !6202
  store %struct.bConstraintTarget* %21, %struct.bConstraintTarget** %ct, align 8, !dbg !6202
  br label %if.end9, !dbg !6202

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end10, !dbg !6207

if.end10:                                         ; preds = %if.end9, %land.lhs.true, %entry
  ret void, !dbg !6208
}

; Function Attrs: noinline nounwind uwtable
define internal void @followpath_get_tarmat(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.bConstraintTarget* %ct, float %UNUSED_ctime) #0 !dbg !6209 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %ct.addr = alloca %struct.bConstraintTarget*, align 8
  %UNUSED_ctime.addr = alloca float, align 4
  %data = alloca %struct.bFollowPathConstraint*, align 8
  %cu = alloca %struct.Curve*, align 8
  %vec = alloca [4 x float], align 16
  %dir = alloca [3 x float], align 4
  %radius = alloca float, align 4
  %curvetime = alloca float, align 4
  %quat = alloca [4 x float], align 16
  %nu = alloca %struct.Nurb*, align 8
  %totmat = alloca [4 x [4 x float]], align 16
  %tmat = alloca [4 x [4 x float]], align 16
  %rmat = alloca [4 x [4 x float]], align 16
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6210, metadata !DIExpression()), !dbg !6211
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !6212, metadata !DIExpression()), !dbg !6213
  store %struct.bConstraintTarget* %ct, %struct.bConstraintTarget** %ct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct.addr, metadata !6214, metadata !DIExpression()), !dbg !6215
  store float %UNUSED_ctime, float* %UNUSED_ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_ctime.addr, metadata !6216, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.declare(metadata %struct.bFollowPathConstraint** %data, metadata !6218, metadata !DIExpression()), !dbg !6219
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6220
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !6221
  %1 = load i8*, i8** %data1, align 8, !dbg !6221
  %2 = bitcast i8* %1 to %struct.bFollowPathConstraint*, !dbg !6220
  store %struct.bFollowPathConstraint* %2, %struct.bFollowPathConstraint** %data, align 8, !dbg !6219
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6222
  %tobool = icmp ne %struct.bConstraintTarget* %3, null, !dbg !6222
  br i1 %tobool, label %land.lhs.true, label %if.else90, !dbg !6222

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6222
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %4, i32 0, i32 2, !dbg !6222
  %5 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !6222
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !6222
  br i1 %tobool2, label %land.lhs.true3, label %if.else90, !dbg !6224

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6225
  %tar4 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %6, i32 0, i32 2, !dbg !6226
  %7 = load %struct.Object*, %struct.Object** %tar4, align 8, !dbg !6226
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !6227
  %8 = load i16, i16* %type, align 8, !dbg !6227
  %conv = sext i16 %8 to i32, !dbg !6225
  %cmp = icmp eq i32 %conv, 2, !dbg !6228
  br i1 %cmp, label %if.then, label %if.else90, !dbg !6229

if.then:                                          ; preds = %land.lhs.true3
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6230, metadata !DIExpression()), !dbg !6333
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6334
  %tar6 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !6335
  %10 = load %struct.Object*, %struct.Object** %tar6, align 8, !dbg !6335
  %data7 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 19, !dbg !6336
  %11 = load i8*, i8** %data7, align 8, !dbg !6336
  %12 = bitcast i8* %11 to %struct.Curve*, !dbg !6334
  store %struct.Curve* %12, %struct.Curve** %cu, align 8, !dbg !6333
  call void @llvm.dbg.declare(metadata [4 x float]* %vec, metadata !6337, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.declare(metadata [3 x float]* %dir, metadata !6339, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.declare(metadata float* %radius, metadata !6341, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.declare(metadata float* %curvetime, metadata !6343, metadata !DIExpression()), !dbg !6344
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6345
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %13, i32 0, i32 4, !dbg !6346
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !6345
  call void @unit_m4([4 x float]* %arraydecay), !dbg !6347
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6348
  %tar8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 2, !dbg !6350
  %15 = load %struct.Object*, %struct.Object** %tar8, align 8, !dbg !6350
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 118, !dbg !6351
  %16 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !6351
  %cmp9 = icmp eq %struct.CurveCache* %16, null, !dbg !6352
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !6353

if.then11:                                        ; preds = %if.then
  %17 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6354
  %scene = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %17, i32 0, i32 0, !dbg !6356
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6356
  %19 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6357
  %tar12 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %19, i32 0, i32 2, !dbg !6358
  %20 = load %struct.Object*, %struct.Object** %tar12, align 8, !dbg !6358
  call void @BKE_displist_make_curveTypes(%struct.Scene* %18, %struct.Object* %20, i8 zeroext 0), !dbg !6359
  br label %if.end, !dbg !6360

if.end:                                           ; preds = %if.then11, %if.then
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6361
  %tar13 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 2, !dbg !6363
  %22 = load %struct.Object*, %struct.Object** %tar13, align 8, !dbg !6363
  %curve_cache14 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 118, !dbg !6364
  %23 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache14, align 8, !dbg !6364
  %path = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %23, i32 0, i32 3, !dbg !6365
  %24 = load %struct.Path*, %struct.Path** %path, align 8, !dbg !6365
  %tobool15 = icmp ne %struct.Path* %24, null, !dbg !6361
  br i1 %tobool15, label %land.lhs.true16, label %if.end89, !dbg !6366

land.lhs.true16:                                  ; preds = %if.end
  %25 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6367
  %tar17 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %25, i32 0, i32 2, !dbg !6368
  %26 = load %struct.Object*, %struct.Object** %tar17, align 8, !dbg !6368
  %curve_cache18 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 118, !dbg !6369
  %27 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache18, align 8, !dbg !6369
  %path19 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %27, i32 0, i32 3, !dbg !6370
  %28 = load %struct.Path*, %struct.Path** %path19, align 8, !dbg !6370
  %data20 = getelementptr inbounds %struct.Path, %struct.Path* %28, i32 0, i32 0, !dbg !6371
  %29 = load %struct.PathPoint*, %struct.PathPoint** %data20, align 8, !dbg !6371
  %tobool21 = icmp ne %struct.PathPoint* %29, null, !dbg !6367
  br i1 %tobool21, label %if.then22, label %if.end89, !dbg !6372

if.then22:                                        ; preds = %land.lhs.true16
  call void @llvm.dbg.declare(metadata [4 x float]* %quat, metadata !6373, metadata !DIExpression()), !dbg !6375
  %30 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6376
  %followflag = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %30, i32 0, i32 3, !dbg !6378
  %31 = load i32, i32* %followflag, align 8, !dbg !6378
  %and = and i32 %31, 2, !dbg !6379
  %cmp23 = icmp eq i32 %and, 0, !dbg !6380
  br i1 %cmp23, label %if.then25, label %if.else50, !dbg !6381

if.then25:                                        ; preds = %if.then22
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !6382, metadata !DIExpression()), !dbg !6431
  %32 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6432
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %32, i32 0, i32 3, !dbg !6433
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !6434
  %33 = load i8*, i8** %first, align 8, !dbg !6434
  %34 = bitcast i8* %33 to %struct.Nurb*, !dbg !6432
  store %struct.Nurb* %34, %struct.Nurb** %nu, align 8, !dbg !6431
  %35 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6435
  %ctime = getelementptr inbounds %struct.Curve, %struct.Curve* %35, i32 0, i32 64, !dbg !6436
  %36 = load float, float* %ctime, align 8, !dbg !6436
  %37 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6437
  %offset = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %37, i32 0, i32 1, !dbg !6438
  %38 = load float, float* %offset, align 8, !dbg !6438
  %sub = fsub float %36, %38, !dbg !6439
  store float %sub, float* %curvetime, align 4, !dbg !6440
  %39 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6441
  %pathlen = getelementptr inbounds %struct.Curve, %struct.Curve* %39, i32 0, i32 20, !dbg !6442
  %40 = load i32, i32* %pathlen, align 4, !dbg !6442
  %conv26 = sitofp i32 %40 to float, !dbg !6441
  %41 = load float, float* %curvetime, align 4, !dbg !6443
  %div = fdiv float %41, %conv26, !dbg !6443
  store float %div, float* %curvetime, align 4, !dbg !6443
  %42 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6444
  %tobool27 = icmp ne %struct.Nurb* %42, null, !dbg !6444
  br i1 %tobool27, label %land.lhs.true28, label %if.else, !dbg !6446

land.lhs.true28:                                  ; preds = %if.then25
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6447
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 13, !dbg !6448
  %44 = load i16, i16* %flagu, align 4, !dbg !6448
  %conv29 = sext i16 %44 to i32, !dbg !6447
  %and30 = and i32 %conv29, 1, !dbg !6449
  %tobool31 = icmp ne i32 %and30, 0, !dbg !6449
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !6450

if.then32:                                        ; preds = %land.lhs.true28
  %45 = load float, float* %curvetime, align 4, !dbg !6451
  %cmp33 = fcmp olt float %45, 0.000000e+00, !dbg !6454
  br i1 %cmp33, label %if.then37, label %lor.lhs.false, !dbg !6455

lor.lhs.false:                                    ; preds = %if.then32
  %46 = load float, float* %curvetime, align 4, !dbg !6456
  %cmp35 = fcmp ogt float %46, 1.000000e+00, !dbg !6457
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !6458

if.then37:                                        ; preds = %lor.lhs.false, %if.then32
  %47 = load float, float* %curvetime, align 4, !dbg !6459
  %48 = call float @llvm.floor.f32(float %47), !dbg !6461
  %49 = load float, float* %curvetime, align 4, !dbg !6462
  %sub38 = fsub float %49, %48, !dbg !6462
  store float %sub38, float* %curvetime, align 4, !dbg !6462
  br label %if.end39, !dbg !6463

if.end39:                                         ; preds = %if.then37, %lor.lhs.false
  br label %if.end49, !dbg !6464

if.else:                                          ; preds = %land.lhs.true28, %if.then25
  %50 = load float, float* %curvetime, align 4, !dbg !6465
  %cmp40 = fcmp olt float %50, 0.000000e+00, !dbg !6465
  br i1 %cmp40, label %if.then42, label %if.else43, !dbg !6469

if.then42:                                        ; preds = %if.else
  store float 0.000000e+00, float* %curvetime, align 4, !dbg !6465
  br label %if.end48, !dbg !6465

if.else43:                                        ; preds = %if.else
  %51 = load float, float* %curvetime, align 4, !dbg !6470
  %cmp44 = fcmp ogt float %51, 1.000000e+00, !dbg !6470
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !6465

if.then46:                                        ; preds = %if.else43
  store float 1.000000e+00, float* %curvetime, align 4, !dbg !6470
  br label %if.end47, !dbg !6470

if.end47:                                         ; preds = %if.then46, %if.else43
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then42
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end39
  br label %if.end51, !dbg !6472

if.else50:                                        ; preds = %if.then22
  %52 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6473
  %offset_fac = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %52, i32 0, i32 2, !dbg !6475
  %53 = load float, float* %offset_fac, align 4, !dbg !6475
  store float %53, float* %curvetime, align 4, !dbg !6476
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.end49
  %54 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6477
  %tar52 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %54, i32 0, i32 2, !dbg !6479
  %55 = load %struct.Object*, %struct.Object** %tar52, align 8, !dbg !6479
  %56 = load float, float* %curvetime, align 4, !dbg !6480
  %arraydecay53 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !6481
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !6482
  %57 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6483
  %followflag55 = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %57, i32 0, i32 3, !dbg !6484
  %58 = load i32, i32* %followflag55, align 8, !dbg !6484
  %and56 = and i32 %58, 1, !dbg !6485
  %tobool57 = icmp ne i32 %and56, 0, !dbg !6485
  br i1 %tobool57, label %cond.true, label %cond.false, !dbg !6486

cond.true:                                        ; preds = %if.end51
  %arraydecay58 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !6487
  br label %cond.end, !dbg !6486

cond.false:                                       ; preds = %if.end51
  br label %cond.end, !dbg !6486

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay58, %cond.true ], [ null, %cond.false ], !dbg !6486
  %call = call i32 @where_on_path(%struct.Object* %55, float %56, float* %arraydecay53, float* %arraydecay54, float* %cond, float* %radius, float* null), !dbg !6488
  %tobool59 = icmp ne i32 %call, 0, !dbg !6488
  br i1 %tobool59, label %if.then60, label %if.end88, !dbg !6489

if.then60:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %totmat, metadata !6490, metadata !DIExpression()), !dbg !6492
  %arraydecay61 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 0, !dbg !6493
  call void @unit_m4([4 x float]* %arraydecay61), !dbg !6494
  %59 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6495
  %followflag62 = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %59, i32 0, i32 3, !dbg !6497
  %60 = load i32, i32* %followflag62, align 8, !dbg !6497
  %and63 = and i32 %60, 1, !dbg !6498
  %tobool64 = icmp ne i32 %and63, 0, !dbg !6498
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !6499

if.then65:                                        ; preds = %if.then60
  %arraydecay66 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !6500
  %61 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6502
  %trackflag = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %61, i32 0, i32 4, !dbg !6503
  %62 = load i16, i16* %trackflag, align 4, !dbg !6503
  %63 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6504
  %upflag = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %63, i32 0, i32 5, !dbg !6505
  %64 = load i16, i16* %upflag, align 2, !dbg !6505
  call void @quat_apply_track(float* %arraydecay66, i16 signext %62, i16 signext %64), !dbg !6506
  %arraydecay67 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 0, !dbg !6507
  %arraydecay68 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !6508
  call void @quat_to_mat4([4 x float]* %arraydecay67, float* %arraydecay68), !dbg !6509
  br label %if.end69, !dbg !6510

if.end69:                                         ; preds = %if.then65, %if.then60
  %65 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6511
  %followflag70 = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %65, i32 0, i32 3, !dbg !6513
  %66 = load i32, i32* %followflag70, align 8, !dbg !6513
  %and71 = and i32 %66, 4, !dbg !6514
  %tobool72 = icmp ne i32 %and71, 0, !dbg !6514
  br i1 %tobool72, label %if.then73, label %if.end80, !dbg !6515

if.then73:                                        ; preds = %if.end69
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !6516, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %rmat, metadata !6519, metadata !DIExpression()), !dbg !6520
  %arraydecay74 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !6521
  %67 = load float, float* %radius, align 4, !dbg !6522
  call void @scale_m4_fl([4 x float]* %arraydecay74, float %67), !dbg !6523
  %arraydecay75 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !6524
  %arraydecay76 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !6525
  %arraydecay77 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 0, !dbg !6526
  call void @mul_m4_m4m4([4 x float]* %arraydecay75, [4 x float]* %arraydecay76, [4 x float]* %arraydecay77), !dbg !6527
  %arraydecay78 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 0, !dbg !6528
  %arraydecay79 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !6529
  call void @copy_m4_m4([4 x float]* %arraydecay78, [4 x float]* %arraydecay79), !dbg !6530
  br label %if.end80, !dbg !6531

if.end80:                                         ; preds = %if.then73, %if.end69
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 3, !dbg !6532
  %arraydecay81 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !6532
  %arraydecay82 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !6533
  call void @copy_v3_v3(float* %arraydecay81, float* %arraydecay82), !dbg !6534
  %68 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6535
  %matrix83 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %68, i32 0, i32 4, !dbg !6536
  %arraydecay84 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix83, i64 0, i64 0, !dbg !6535
  %69 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6537
  %tar85 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %69, i32 0, i32 2, !dbg !6538
  %70 = load %struct.Object*, %struct.Object** %tar85, align 8, !dbg !6538
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 47, !dbg !6539
  %arraydecay86 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !6537
  %arraydecay87 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 0, !dbg !6540
  call void @mul_m4_m4m4([4 x float]* %arraydecay84, [4 x float]* %arraydecay86, [4 x float]* %arraydecay87), !dbg !6541
  br label %if.end88, !dbg !6542

if.end88:                                         ; preds = %if.end80, %cond.end
  br label %if.end89, !dbg !6543

if.end89:                                         ; preds = %if.end88, %land.lhs.true16, %if.end
  br label %if.end96, !dbg !6544

if.else90:                                        ; preds = %land.lhs.true3, %land.lhs.true, %entry
  %71 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6545
  %tobool91 = icmp ne %struct.bConstraintTarget* %71, null, !dbg !6545
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !6547

if.then92:                                        ; preds = %if.else90
  %72 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !6548
  %matrix93 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %72, i32 0, i32 4, !dbg !6549
  %arraydecay94 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix93, i64 0, i64 0, !dbg !6548
  call void @unit_m4([4 x float]* %arraydecay94), !dbg !6550
  br label %if.end95, !dbg !6550

if.end95:                                         ; preds = %if.then92, %if.else90
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.end89
  ret void, !dbg !6551
}

; Function Attrs: noinline nounwind uwtable
define internal void @followpath_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !6552 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %obmat = alloca [4 x [4 x float]], align 16
  %size = alloca [3 x float], align 4
  %data = alloca %struct.bFollowPathConstraint*, align 8
  %obsize = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6553, metadata !DIExpression()), !dbg !6554
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !6555, metadata !DIExpression()), !dbg !6556
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !6557, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !6559, metadata !DIExpression()), !dbg !6560
  %0 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !6561
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !6562
  %1 = load i8*, i8** %first, align 8, !dbg !6562
  %2 = bitcast i8* %1 to %struct.bConstraintTarget*, !dbg !6561
  store %struct.bConstraintTarget* %2, %struct.bConstraintTarget** %ct, align 8, !dbg !6560
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6563
  %tobool = icmp ne %struct.bConstraintTarget* %3, null, !dbg !6563
  br i1 %tobool, label %land.lhs.true, label %if.end44, !dbg !6563

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6563
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %4, i32 0, i32 2, !dbg !6563
  %5 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !6563
  %tobool1 = icmp ne %struct.Object* %5, null, !dbg !6563
  br i1 %tobool1, label %if.then, label %if.end44, !dbg !6565

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obmat, metadata !6566, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata %struct.bFollowPathConstraint** %data, metadata !6571, metadata !DIExpression()), !dbg !6572
  %6 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6573
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %6, i32 0, i32 2, !dbg !6574
  %7 = load i8*, i8** %data2, align 8, !dbg !6574
  %8 = bitcast i8* %7 to %struct.bFollowPathConstraint*, !dbg !6573
  store %struct.bFollowPathConstraint* %8, %struct.bFollowPathConstraint** %data, align 8, !dbg !6572
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !6575
  %9 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6576
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %9, i32 0, i32 3, !dbg !6577
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !6576
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay3), !dbg !6578
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6579
  %10 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6580
  %matrix5 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %10, i32 0, i32 3, !dbg !6581
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix5, i64 0, i64 0, !dbg !6580
  call void @mat4_to_size(float* %arraydecay4, [4 x float]* %arraydecay6), !dbg !6582
  %11 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6583
  %matrix7 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %11, i32 0, i32 3, !dbg !6584
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix7, i64 0, i64 0, !dbg !6583
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6585
  %matrix9 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 4, !dbg !6586
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix9, i64 0, i64 0, !dbg !6585
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !6587
  call void @mul_m4_m4m4([4 x float]* %arraydecay8, [4 x float]* %arraydecay10, [4 x float]* %arraydecay11), !dbg !6588
  %13 = load %struct.bFollowPathConstraint*, %struct.bFollowPathConstraint** %data, align 8, !dbg !6589
  %followflag = getelementptr inbounds %struct.bFollowPathConstraint, %struct.bFollowPathConstraint* %13, i32 0, i32 3, !dbg !6591
  %14 = load i32, i32* %followflag, align 8, !dbg !6591
  %and = and i32 %14, 4, !dbg !6592
  %cmp = icmp eq i32 %and, 0, !dbg !6593
  br i1 %cmp, label %if.then12, label %if.end43, !dbg !6594

if.then12:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata [3 x float]* %obsize, metadata !6595, metadata !DIExpression()), !dbg !6597
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !6598
  %15 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6599
  %matrix14 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %15, i32 0, i32 3, !dbg !6600
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix14, i64 0, i64 0, !dbg !6599
  call void @mat4_to_size(float* %arraydecay13, [4 x float]* %arraydecay15), !dbg !6601
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !6602
  %16 = load float, float* %arrayidx, align 4, !dbg !6602
  %tobool16 = fcmp une float %16, 0.000000e+00, !dbg !6602
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !6604

if.then17:                                        ; preds = %if.then12
  %17 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6605
  %matrix18 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %17, i32 0, i32 3, !dbg !6606
  %arrayidx19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix18, i64 0, i64 0, !dbg !6605
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx19, i64 0, i64 0, !dbg !6605
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6607
  %18 = load float, float* %arrayidx21, align 4, !dbg !6607
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !6608
  %19 = load float, float* %arrayidx22, align 4, !dbg !6608
  %div = fdiv float %18, %19, !dbg !6609
  call void @mul_v3_fl(float* %arraydecay20, float %div), !dbg !6610
  br label %if.end, !dbg !6610

if.end:                                           ; preds = %if.then17, %if.then12
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 1, !dbg !6611
  %20 = load float, float* %arrayidx23, align 4, !dbg !6611
  %tobool24 = fcmp une float %20, 0.000000e+00, !dbg !6611
  br i1 %tobool24, label %if.then25, label %if.end32, !dbg !6613

if.then25:                                        ; preds = %if.end
  %21 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6614
  %matrix26 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %21, i32 0, i32 3, !dbg !6615
  %arrayidx27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix26, i64 0, i64 1, !dbg !6614
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx27, i64 0, i64 0, !dbg !6614
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !6616
  %22 = load float, float* %arrayidx29, align 4, !dbg !6616
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 1, !dbg !6617
  %23 = load float, float* %arrayidx30, align 4, !dbg !6617
  %div31 = fdiv float %22, %23, !dbg !6618
  call void @mul_v3_fl(float* %arraydecay28, float %div31), !dbg !6619
  br label %if.end32, !dbg !6619

if.end32:                                         ; preds = %if.then25, %if.end
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 2, !dbg !6620
  %24 = load float, float* %arrayidx33, align 4, !dbg !6620
  %tobool34 = fcmp une float %24, 0.000000e+00, !dbg !6620
  br i1 %tobool34, label %if.then35, label %if.end42, !dbg !6622

if.then35:                                        ; preds = %if.end32
  %25 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6623
  %matrix36 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %25, i32 0, i32 3, !dbg !6624
  %arrayidx37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix36, i64 0, i64 2, !dbg !6623
  %arraydecay38 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx37, i64 0, i64 0, !dbg !6623
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !6625
  %26 = load float, float* %arrayidx39, align 4, !dbg !6625
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 2, !dbg !6626
  %27 = load float, float* %arrayidx40, align 4, !dbg !6626
  %div41 = fdiv float %26, %27, !dbg !6627
  call void @mul_v3_fl(float* %arraydecay38, float %div41), !dbg !6628
  br label %if.end42, !dbg !6628

if.end42:                                         ; preds = %if.then35, %if.end32
  br label %if.end43, !dbg !6629

if.end43:                                         ; preds = %if.end42, %if.then
  br label %if.end44, !dbg !6630

if.end44:                                         ; preds = %if.end43, %land.lhs.true, %entry
  ret void, !dbg !6631
}

declare dso_local void @BKE_displist_make_curveTypes(%struct.Scene*, %struct.Object*, i8 zeroext) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #1

declare dso_local i32 @where_on_path(%struct.Object*, float, float*, float*, float*, float*, float*) #2

declare dso_local void @quat_apply_track(float*, i16 signext, i16 signext) #2

declare dso_local void @quat_to_mat4([4 x float]*, float*) #2

declare dso_local void @scale_m4_fl([4 x float]*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @rotlimit_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %UNUSED_targets) #0 !dbg !6632 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %UNUSED_targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bRotLimitConstraint*, align 8
  %loc = alloca [3 x float], align 4
  %eul = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6633, metadata !DIExpression()), !dbg !6634
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  store %struct.ListBase* %UNUSED_targets, %struct.ListBase** %UNUSED_targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %UNUSED_targets.addr, metadata !6637, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.declare(metadata %struct.bRotLimitConstraint** %data, metadata !6639, metadata !DIExpression()), !dbg !6652
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6653
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !6654
  %1 = load i8*, i8** %data1, align 8, !dbg !6654
  %2 = bitcast i8* %1 to %struct.bRotLimitConstraint*, !dbg !6653
  store %struct.bRotLimitConstraint* %2, %struct.bRotLimitConstraint** %data, align 8, !dbg !6652
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !6655, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.declare(metadata [3 x float]* %eul, metadata !6657, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !6659, metadata !DIExpression()), !dbg !6660
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !6661
  %3 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6662
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %3, i32 0, i32 3, !dbg !6663
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 3, !dbg !6662
  %arraydecay2 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !6662
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !6664
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6665
  %4 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6666
  %matrix4 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %4, i32 0, i32 3, !dbg !6667
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix4, i64 0, i64 0, !dbg !6666
  call void @mat4_to_size(float* %arraydecay3, [4 x float]* %arraydecay5), !dbg !6668
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !6669
  %5 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6670
  %rotOrder = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %5, i32 0, i32 6, !dbg !6671
  %6 = load i16, i16* %rotOrder, align 2, !dbg !6671
  %7 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6672
  %matrix7 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %7, i32 0, i32 3, !dbg !6673
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix7, i64 0, i64 0, !dbg !6672
  call void @mat4_to_eulO(float* %arraydecay6, i16 signext %6, [4 x float]* %arraydecay8), !dbg !6674
  %8 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6675
  %flag = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %8, i32 0, i32 6, !dbg !6677
  %9 = load i16, i16* %flag, align 4, !dbg !6677
  %conv = sext i16 %9 to i32, !dbg !6675
  %and = and i32 %conv, 1, !dbg !6678
  %tobool = icmp ne i32 %and, 0, !dbg !6678
  br i1 %tobool, label %if.then, label %if.end21, !dbg !6679

if.then:                                          ; preds = %entry
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !6680
  %10 = load float, float* %arrayidx9, align 4, !dbg !6680
  %11 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6683
  %xmin = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %11, i32 0, i32 0, !dbg !6684
  %12 = load float, float* %xmin, align 4, !dbg !6684
  %cmp = fcmp olt float %10, %12, !dbg !6685
  br i1 %cmp, label %if.then11, label %if.end, !dbg !6686

if.then11:                                        ; preds = %if.then
  %13 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6687
  %xmin12 = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %13, i32 0, i32 0, !dbg !6688
  %14 = load float, float* %xmin12, align 4, !dbg !6688
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !6689
  store float %14, float* %arrayidx13, align 4, !dbg !6690
  br label %if.end, !dbg !6689

if.end:                                           ; preds = %if.then11, %if.then
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !6691
  %15 = load float, float* %arrayidx14, align 4, !dbg !6691
  %16 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6693
  %xmax = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %16, i32 0, i32 1, !dbg !6694
  %17 = load float, float* %xmax, align 4, !dbg !6694
  %cmp15 = fcmp ogt float %15, %17, !dbg !6695
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !6696

if.then17:                                        ; preds = %if.end
  %18 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6697
  %xmax18 = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %18, i32 0, i32 1, !dbg !6698
  %19 = load float, float* %xmax18, align 4, !dbg !6698
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !6699
  store float %19, float* %arrayidx19, align 4, !dbg !6700
  br label %if.end20, !dbg !6699

if.end20:                                         ; preds = %if.then17, %if.end
  br label %if.end21, !dbg !6701

if.end21:                                         ; preds = %if.end20, %entry
  %20 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6702
  %flag22 = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %20, i32 0, i32 6, !dbg !6704
  %21 = load i16, i16* %flag22, align 4, !dbg !6704
  %conv23 = sext i16 %21 to i32, !dbg !6702
  %and24 = and i32 %conv23, 2, !dbg !6705
  %tobool25 = icmp ne i32 %and24, 0, !dbg !6705
  br i1 %tobool25, label %if.then26, label %if.end41, !dbg !6706

if.then26:                                        ; preds = %if.end21
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 1, !dbg !6707
  %22 = load float, float* %arrayidx27, align 4, !dbg !6707
  %23 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6710
  %ymin = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %23, i32 0, i32 2, !dbg !6711
  %24 = load float, float* %ymin, align 4, !dbg !6711
  %cmp28 = fcmp olt float %22, %24, !dbg !6712
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !6713

if.then30:                                        ; preds = %if.then26
  %25 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6714
  %ymin31 = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %25, i32 0, i32 2, !dbg !6715
  %26 = load float, float* %ymin31, align 4, !dbg !6715
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 1, !dbg !6716
  store float %26, float* %arrayidx32, align 4, !dbg !6717
  br label %if.end33, !dbg !6716

if.end33:                                         ; preds = %if.then30, %if.then26
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 1, !dbg !6718
  %27 = load float, float* %arrayidx34, align 4, !dbg !6718
  %28 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6720
  %ymax = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %28, i32 0, i32 3, !dbg !6721
  %29 = load float, float* %ymax, align 4, !dbg !6721
  %cmp35 = fcmp ogt float %27, %29, !dbg !6722
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !6723

if.then37:                                        ; preds = %if.end33
  %30 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6724
  %ymax38 = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %30, i32 0, i32 3, !dbg !6725
  %31 = load float, float* %ymax38, align 4, !dbg !6725
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 1, !dbg !6726
  store float %31, float* %arrayidx39, align 4, !dbg !6727
  br label %if.end40, !dbg !6726

if.end40:                                         ; preds = %if.then37, %if.end33
  br label %if.end41, !dbg !6728

if.end41:                                         ; preds = %if.end40, %if.end21
  %32 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6729
  %flag42 = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %32, i32 0, i32 6, !dbg !6731
  %33 = load i16, i16* %flag42, align 4, !dbg !6731
  %conv43 = sext i16 %33 to i32, !dbg !6729
  %and44 = and i32 %conv43, 4, !dbg !6732
  %tobool45 = icmp ne i32 %and44, 0, !dbg !6732
  br i1 %tobool45, label %if.then46, label %if.end61, !dbg !6733

if.then46:                                        ; preds = %if.end41
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 2, !dbg !6734
  %34 = load float, float* %arrayidx47, align 4, !dbg !6734
  %35 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6737
  %zmin = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %35, i32 0, i32 4, !dbg !6738
  %36 = load float, float* %zmin, align 4, !dbg !6738
  %cmp48 = fcmp olt float %34, %36, !dbg !6739
  br i1 %cmp48, label %if.then50, label %if.end53, !dbg !6740

if.then50:                                        ; preds = %if.then46
  %37 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6741
  %zmin51 = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %37, i32 0, i32 4, !dbg !6742
  %38 = load float, float* %zmin51, align 4, !dbg !6742
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 2, !dbg !6743
  store float %38, float* %arrayidx52, align 4, !dbg !6744
  br label %if.end53, !dbg !6743

if.end53:                                         ; preds = %if.then50, %if.then46
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 2, !dbg !6745
  %39 = load float, float* %arrayidx54, align 4, !dbg !6745
  %40 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6747
  %zmax = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %40, i32 0, i32 5, !dbg !6748
  %41 = load float, float* %zmax, align 4, !dbg !6748
  %cmp55 = fcmp ogt float %39, %41, !dbg !6749
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !6750

if.then57:                                        ; preds = %if.end53
  %42 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !6751
  %zmax58 = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %42, i32 0, i32 5, !dbg !6752
  %43 = load float, float* %zmax58, align 4, !dbg !6752
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 2, !dbg !6753
  store float %43, float* %arrayidx59, align 4, !dbg !6754
  br label %if.end60, !dbg !6753

if.end60:                                         ; preds = %if.then57, %if.end53
  br label %if.end61, !dbg !6755

if.end61:                                         ; preds = %if.end60, %if.end41
  %44 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6756
  %matrix62 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %44, i32 0, i32 3, !dbg !6757
  %arraydecay63 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix62, i64 0, i64 0, !dbg !6756
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !6758
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !6759
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6760
  %45 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6761
  %rotOrder67 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %45, i32 0, i32 6, !dbg !6762
  %46 = load i16, i16* %rotOrder67, align 2, !dbg !6762
  call void @loc_eulO_size_to_mat4([4 x float]* %arraydecay63, float* %arraydecay64, float* %arraydecay65, float* %arraydecay66, i16 signext %46), !dbg !6763
  ret void, !dbg !6764
}

; Function Attrs: noinline nounwind uwtable
define internal void @loclimit_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %UNUSED_targets) #0 !dbg !6765 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %UNUSED_targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bLocLimitConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6766, metadata !DIExpression()), !dbg !6767
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !6768, metadata !DIExpression()), !dbg !6769
  store %struct.ListBase* %UNUSED_targets, %struct.ListBase** %UNUSED_targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %UNUSED_targets.addr, metadata !6770, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.declare(metadata %struct.bLocLimitConstraint** %data, metadata !6772, metadata !DIExpression()), !dbg !6785
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6786
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !6787
  %1 = load i8*, i8** %data1, align 8, !dbg !6787
  %2 = bitcast i8* %1 to %struct.bLocLimitConstraint*, !dbg !6786
  store %struct.bLocLimitConstraint* %2, %struct.bLocLimitConstraint** %data, align 8, !dbg !6785
  %3 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6788
  %flag = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %3, i32 0, i32 6, !dbg !6790
  %4 = load i16, i16* %flag, align 4, !dbg !6790
  %conv = sext i16 %4 to i32, !dbg !6788
  %and = and i32 %conv, 1, !dbg !6791
  %tobool = icmp ne i32 %and, 0, !dbg !6791
  br i1 %tobool, label %if.then, label %if.end9, !dbg !6792

if.then:                                          ; preds = %entry
  %5 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6793
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %5, i32 0, i32 3, !dbg !6796
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 3, !dbg !6793
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !6793
  %6 = load float, float* %arrayidx2, align 8, !dbg !6793
  %7 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6797
  %xmin = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %7, i32 0, i32 0, !dbg !6798
  %8 = load float, float* %xmin, align 4, !dbg !6798
  %cmp = fcmp olt float %6, %8, !dbg !6799
  br i1 %cmp, label %if.then4, label %if.end, !dbg !6800

if.then4:                                         ; preds = %if.then
  %9 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6801
  %xmin5 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %9, i32 0, i32 0, !dbg !6802
  %10 = load float, float* %xmin5, align 4, !dbg !6802
  %11 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6803
  %matrix6 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %11, i32 0, i32 3, !dbg !6804
  %arrayidx7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix6, i64 0, i64 3, !dbg !6803
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx7, i64 0, i64 0, !dbg !6803
  store float %10, float* %arrayidx8, align 8, !dbg !6805
  br label %if.end, !dbg !6803

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end9, !dbg !6806

if.end9:                                          ; preds = %if.end, %entry
  %12 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6807
  %flag10 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %12, i32 0, i32 6, !dbg !6809
  %13 = load i16, i16* %flag10, align 4, !dbg !6809
  %conv11 = sext i16 %13 to i32, !dbg !6807
  %and12 = and i32 %conv11, 2, !dbg !6810
  %tobool13 = icmp ne i32 %and12, 0, !dbg !6810
  br i1 %tobool13, label %if.then14, label %if.end26, !dbg !6811

if.then14:                                        ; preds = %if.end9
  %14 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6812
  %matrix15 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %14, i32 0, i32 3, !dbg !6815
  %arrayidx16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix15, i64 0, i64 3, !dbg !6812
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx16, i64 0, i64 0, !dbg !6812
  %15 = load float, float* %arrayidx17, align 8, !dbg !6812
  %16 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6816
  %xmax = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %16, i32 0, i32 1, !dbg !6817
  %17 = load float, float* %xmax, align 4, !dbg !6817
  %cmp18 = fcmp ogt float %15, %17, !dbg !6818
  br i1 %cmp18, label %if.then20, label %if.end25, !dbg !6819

if.then20:                                        ; preds = %if.then14
  %18 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6820
  %xmax21 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %18, i32 0, i32 1, !dbg !6821
  %19 = load float, float* %xmax21, align 4, !dbg !6821
  %20 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6822
  %matrix22 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %20, i32 0, i32 3, !dbg !6823
  %arrayidx23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix22, i64 0, i64 3, !dbg !6822
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx23, i64 0, i64 0, !dbg !6822
  store float %19, float* %arrayidx24, align 8, !dbg !6824
  br label %if.end25, !dbg !6822

if.end25:                                         ; preds = %if.then20, %if.then14
  br label %if.end26, !dbg !6825

if.end26:                                         ; preds = %if.end25, %if.end9
  %21 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6826
  %flag27 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %21, i32 0, i32 6, !dbg !6828
  %22 = load i16, i16* %flag27, align 4, !dbg !6828
  %conv28 = sext i16 %22 to i32, !dbg !6826
  %and29 = and i32 %conv28, 4, !dbg !6829
  %tobool30 = icmp ne i32 %and29, 0, !dbg !6829
  br i1 %tobool30, label %if.then31, label %if.end43, !dbg !6830

if.then31:                                        ; preds = %if.end26
  %23 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6831
  %matrix32 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %23, i32 0, i32 3, !dbg !6834
  %arrayidx33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix32, i64 0, i64 3, !dbg !6831
  %arrayidx34 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx33, i64 0, i64 1, !dbg !6831
  %24 = load float, float* %arrayidx34, align 4, !dbg !6831
  %25 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6835
  %ymin = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %25, i32 0, i32 2, !dbg !6836
  %26 = load float, float* %ymin, align 4, !dbg !6836
  %cmp35 = fcmp olt float %24, %26, !dbg !6837
  br i1 %cmp35, label %if.then37, label %if.end42, !dbg !6838

if.then37:                                        ; preds = %if.then31
  %27 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6839
  %ymin38 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %27, i32 0, i32 2, !dbg !6840
  %28 = load float, float* %ymin38, align 4, !dbg !6840
  %29 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6841
  %matrix39 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %29, i32 0, i32 3, !dbg !6842
  %arrayidx40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix39, i64 0, i64 3, !dbg !6841
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx40, i64 0, i64 1, !dbg !6841
  store float %28, float* %arrayidx41, align 4, !dbg !6843
  br label %if.end42, !dbg !6841

if.end42:                                         ; preds = %if.then37, %if.then31
  br label %if.end43, !dbg !6844

if.end43:                                         ; preds = %if.end42, %if.end26
  %30 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6845
  %flag44 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %30, i32 0, i32 6, !dbg !6847
  %31 = load i16, i16* %flag44, align 4, !dbg !6847
  %conv45 = sext i16 %31 to i32, !dbg !6845
  %and46 = and i32 %conv45, 8, !dbg !6848
  %tobool47 = icmp ne i32 %and46, 0, !dbg !6848
  br i1 %tobool47, label %if.then48, label %if.end60, !dbg !6849

if.then48:                                        ; preds = %if.end43
  %32 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6850
  %matrix49 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %32, i32 0, i32 3, !dbg !6853
  %arrayidx50 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix49, i64 0, i64 3, !dbg !6850
  %arrayidx51 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx50, i64 0, i64 1, !dbg !6850
  %33 = load float, float* %arrayidx51, align 4, !dbg !6850
  %34 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6854
  %ymax = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %34, i32 0, i32 3, !dbg !6855
  %35 = load float, float* %ymax, align 4, !dbg !6855
  %cmp52 = fcmp ogt float %33, %35, !dbg !6856
  br i1 %cmp52, label %if.then54, label %if.end59, !dbg !6857

if.then54:                                        ; preds = %if.then48
  %36 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6858
  %ymax55 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %36, i32 0, i32 3, !dbg !6859
  %37 = load float, float* %ymax55, align 4, !dbg !6859
  %38 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6860
  %matrix56 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %38, i32 0, i32 3, !dbg !6861
  %arrayidx57 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix56, i64 0, i64 3, !dbg !6860
  %arrayidx58 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx57, i64 0, i64 1, !dbg !6860
  store float %37, float* %arrayidx58, align 4, !dbg !6862
  br label %if.end59, !dbg !6860

if.end59:                                         ; preds = %if.then54, %if.then48
  br label %if.end60, !dbg !6863

if.end60:                                         ; preds = %if.end59, %if.end43
  %39 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6864
  %flag61 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %39, i32 0, i32 6, !dbg !6866
  %40 = load i16, i16* %flag61, align 4, !dbg !6866
  %conv62 = sext i16 %40 to i32, !dbg !6864
  %and63 = and i32 %conv62, 16, !dbg !6867
  %tobool64 = icmp ne i32 %and63, 0, !dbg !6867
  br i1 %tobool64, label %if.then65, label %if.end77, !dbg !6868

if.then65:                                        ; preds = %if.end60
  %41 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6869
  %matrix66 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %41, i32 0, i32 3, !dbg !6872
  %arrayidx67 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix66, i64 0, i64 3, !dbg !6869
  %arrayidx68 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx67, i64 0, i64 2, !dbg !6869
  %42 = load float, float* %arrayidx68, align 8, !dbg !6869
  %43 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6873
  %zmin = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %43, i32 0, i32 4, !dbg !6874
  %44 = load float, float* %zmin, align 4, !dbg !6874
  %cmp69 = fcmp olt float %42, %44, !dbg !6875
  br i1 %cmp69, label %if.then71, label %if.end76, !dbg !6876

if.then71:                                        ; preds = %if.then65
  %45 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6877
  %zmin72 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %45, i32 0, i32 4, !dbg !6878
  %46 = load float, float* %zmin72, align 4, !dbg !6878
  %47 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6879
  %matrix73 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %47, i32 0, i32 3, !dbg !6880
  %arrayidx74 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix73, i64 0, i64 3, !dbg !6879
  %arrayidx75 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx74, i64 0, i64 2, !dbg !6879
  store float %46, float* %arrayidx75, align 8, !dbg !6881
  br label %if.end76, !dbg !6879

if.end76:                                         ; preds = %if.then71, %if.then65
  br label %if.end77, !dbg !6882

if.end77:                                         ; preds = %if.end76, %if.end60
  %48 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6883
  %flag78 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %48, i32 0, i32 6, !dbg !6885
  %49 = load i16, i16* %flag78, align 4, !dbg !6885
  %conv79 = sext i16 %49 to i32, !dbg !6883
  %and80 = and i32 %conv79, 32, !dbg !6886
  %tobool81 = icmp ne i32 %and80, 0, !dbg !6886
  br i1 %tobool81, label %if.then82, label %if.end94, !dbg !6887

if.then82:                                        ; preds = %if.end77
  %50 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6888
  %matrix83 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %50, i32 0, i32 3, !dbg !6891
  %arrayidx84 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix83, i64 0, i64 3, !dbg !6888
  %arrayidx85 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx84, i64 0, i64 2, !dbg !6888
  %51 = load float, float* %arrayidx85, align 8, !dbg !6888
  %52 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6892
  %zmax = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %52, i32 0, i32 5, !dbg !6893
  %53 = load float, float* %zmax, align 4, !dbg !6893
  %cmp86 = fcmp ogt float %51, %53, !dbg !6894
  br i1 %cmp86, label %if.then88, label %if.end93, !dbg !6895

if.then88:                                        ; preds = %if.then82
  %54 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !6896
  %zmax89 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %54, i32 0, i32 5, !dbg !6897
  %55 = load float, float* %zmax89, align 4, !dbg !6897
  %56 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6898
  %matrix90 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %56, i32 0, i32 3, !dbg !6899
  %arrayidx91 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix90, i64 0, i64 3, !dbg !6898
  %arrayidx92 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx91, i64 0, i64 2, !dbg !6898
  store float %55, float* %arrayidx92, align 8, !dbg !6900
  br label %if.end93, !dbg !6898

if.end93:                                         ; preds = %if.then88, %if.then82
  br label %if.end94, !dbg !6901

if.end94:                                         ; preds = %if.end93, %if.end77
  ret void, !dbg !6902
}

; Function Attrs: noinline nounwind uwtable
define internal void @sizelimit_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %UNUSED_targets) #0 !dbg !6903 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %UNUSED_targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bSizeLimitConstraint*, align 8
  %obsize = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !6904, metadata !DIExpression()), !dbg !6905
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !6906, metadata !DIExpression()), !dbg !6907
  store %struct.ListBase* %UNUSED_targets, %struct.ListBase** %UNUSED_targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %UNUSED_targets.addr, metadata !6908, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.declare(metadata %struct.bSizeLimitConstraint** %data, metadata !6910, metadata !DIExpression()), !dbg !6923
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !6924
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !6925
  %1 = load i8*, i8** %data1, align 8, !dbg !6925
  %2 = bitcast i8* %1 to %struct.bSizeLimitConstraint*, !dbg !6924
  store %struct.bSizeLimitConstraint* %2, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6923
  call void @llvm.dbg.declare(metadata [3 x float]* %obsize, metadata !6926, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !6928, metadata !DIExpression()), !dbg !6929
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6930
  %3 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6931
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %3, i32 0, i32 3, !dbg !6932
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !6931
  call void @mat4_to_size(float* %arraydecay, [4 x float]* %arraydecay2), !dbg !6933
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !6934
  %4 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !6935
  %matrix4 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %4, i32 0, i32 3, !dbg !6936
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix4, i64 0, i64 0, !dbg !6935
  call void @mat4_to_size(float* %arraydecay3, [4 x float]* %arraydecay5), !dbg !6937
  %5 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6938
  %flag = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %5, i32 0, i32 6, !dbg !6940
  %6 = load i16, i16* %flag, align 4, !dbg !6940
  %conv = sext i16 %6 to i32, !dbg !6938
  %and = and i32 %conv, 1, !dbg !6941
  %tobool = icmp ne i32 %and, 0, !dbg !6941
  br i1 %tobool, label %if.then, label %if.end10, !dbg !6942

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6943
  %7 = load float, float* %arrayidx, align 4, !dbg !6943
  %8 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6946
  %xmin = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %8, i32 0, i32 0, !dbg !6947
  %9 = load float, float* %xmin, align 4, !dbg !6947
  %cmp = fcmp olt float %7, %9, !dbg !6948
  br i1 %cmp, label %if.then7, label %if.end, !dbg !6949

if.then7:                                         ; preds = %if.then
  %10 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6950
  %xmin8 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %10, i32 0, i32 0, !dbg !6951
  %11 = load float, float* %xmin8, align 4, !dbg !6951
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6952
  store float %11, float* %arrayidx9, align 4, !dbg !6953
  br label %if.end, !dbg !6952

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end10, !dbg !6954

if.end10:                                         ; preds = %if.end, %entry
  %12 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6955
  %flag11 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %12, i32 0, i32 6, !dbg !6957
  %13 = load i16, i16* %flag11, align 4, !dbg !6957
  %conv12 = sext i16 %13 to i32, !dbg !6955
  %and13 = and i32 %conv12, 2, !dbg !6958
  %tobool14 = icmp ne i32 %and13, 0, !dbg !6958
  br i1 %tobool14, label %if.then15, label %if.end23, !dbg !6959

if.then15:                                        ; preds = %if.end10
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6960
  %14 = load float, float* %arrayidx16, align 4, !dbg !6960
  %15 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6963
  %xmax = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %15, i32 0, i32 1, !dbg !6964
  %16 = load float, float* %xmax, align 4, !dbg !6964
  %cmp17 = fcmp ogt float %14, %16, !dbg !6965
  br i1 %cmp17, label %if.then19, label %if.end22, !dbg !6966

if.then19:                                        ; preds = %if.then15
  %17 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6967
  %xmax20 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %17, i32 0, i32 1, !dbg !6968
  %18 = load float, float* %xmax20, align 4, !dbg !6968
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6969
  store float %18, float* %arrayidx21, align 4, !dbg !6970
  br label %if.end22, !dbg !6969

if.end22:                                         ; preds = %if.then19, %if.then15
  br label %if.end23, !dbg !6971

if.end23:                                         ; preds = %if.end22, %if.end10
  %19 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6972
  %flag24 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %19, i32 0, i32 6, !dbg !6974
  %20 = load i16, i16* %flag24, align 4, !dbg !6974
  %conv25 = sext i16 %20 to i32, !dbg !6972
  %and26 = and i32 %conv25, 4, !dbg !6975
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6975
  br i1 %tobool27, label %if.then28, label %if.end36, !dbg !6976

if.then28:                                        ; preds = %if.end23
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !6977
  %21 = load float, float* %arrayidx29, align 4, !dbg !6977
  %22 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6980
  %ymin = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %22, i32 0, i32 2, !dbg !6981
  %23 = load float, float* %ymin, align 4, !dbg !6981
  %cmp30 = fcmp olt float %21, %23, !dbg !6982
  br i1 %cmp30, label %if.then32, label %if.end35, !dbg !6983

if.then32:                                        ; preds = %if.then28
  %24 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6984
  %ymin33 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %24, i32 0, i32 2, !dbg !6985
  %25 = load float, float* %ymin33, align 4, !dbg !6985
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !6986
  store float %25, float* %arrayidx34, align 4, !dbg !6987
  br label %if.end35, !dbg !6986

if.end35:                                         ; preds = %if.then32, %if.then28
  br label %if.end36, !dbg !6988

if.end36:                                         ; preds = %if.end35, %if.end23
  %26 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6989
  %flag37 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %26, i32 0, i32 6, !dbg !6991
  %27 = load i16, i16* %flag37, align 4, !dbg !6991
  %conv38 = sext i16 %27 to i32, !dbg !6989
  %and39 = and i32 %conv38, 8, !dbg !6992
  %tobool40 = icmp ne i32 %and39, 0, !dbg !6992
  br i1 %tobool40, label %if.then41, label %if.end49, !dbg !6993

if.then41:                                        ; preds = %if.end36
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !6994
  %28 = load float, float* %arrayidx42, align 4, !dbg !6994
  %29 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !6997
  %ymax = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %29, i32 0, i32 3, !dbg !6998
  %30 = load float, float* %ymax, align 4, !dbg !6998
  %cmp43 = fcmp ogt float %28, %30, !dbg !6999
  br i1 %cmp43, label %if.then45, label %if.end48, !dbg !7000

if.then45:                                        ; preds = %if.then41
  %31 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !7001
  %ymax46 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %31, i32 0, i32 3, !dbg !7002
  %32 = load float, float* %ymax46, align 4, !dbg !7002
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !7003
  store float %32, float* %arrayidx47, align 4, !dbg !7004
  br label %if.end48, !dbg !7003

if.end48:                                         ; preds = %if.then45, %if.then41
  br label %if.end49, !dbg !7005

if.end49:                                         ; preds = %if.end48, %if.end36
  %33 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !7006
  %flag50 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %33, i32 0, i32 6, !dbg !7008
  %34 = load i16, i16* %flag50, align 4, !dbg !7008
  %conv51 = sext i16 %34 to i32, !dbg !7006
  %and52 = and i32 %conv51, 16, !dbg !7009
  %tobool53 = icmp ne i32 %and52, 0, !dbg !7009
  br i1 %tobool53, label %if.then54, label %if.end62, !dbg !7010

if.then54:                                        ; preds = %if.end49
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !7011
  %35 = load float, float* %arrayidx55, align 4, !dbg !7011
  %36 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !7014
  %zmin = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %36, i32 0, i32 4, !dbg !7015
  %37 = load float, float* %zmin, align 4, !dbg !7015
  %cmp56 = fcmp olt float %35, %37, !dbg !7016
  br i1 %cmp56, label %if.then58, label %if.end61, !dbg !7017

if.then58:                                        ; preds = %if.then54
  %38 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !7018
  %zmin59 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %38, i32 0, i32 4, !dbg !7019
  %39 = load float, float* %zmin59, align 4, !dbg !7019
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !7020
  store float %39, float* %arrayidx60, align 4, !dbg !7021
  br label %if.end61, !dbg !7020

if.end61:                                         ; preds = %if.then58, %if.then54
  br label %if.end62, !dbg !7022

if.end62:                                         ; preds = %if.end61, %if.end49
  %40 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !7023
  %flag63 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %40, i32 0, i32 6, !dbg !7025
  %41 = load i16, i16* %flag63, align 4, !dbg !7025
  %conv64 = sext i16 %41 to i32, !dbg !7023
  %and65 = and i32 %conv64, 32, !dbg !7026
  %tobool66 = icmp ne i32 %and65, 0, !dbg !7026
  br i1 %tobool66, label %if.then67, label %if.end75, !dbg !7027

if.then67:                                        ; preds = %if.end62
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !7028
  %42 = load float, float* %arrayidx68, align 4, !dbg !7028
  %43 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !7031
  %zmax = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %43, i32 0, i32 5, !dbg !7032
  %44 = load float, float* %zmax, align 4, !dbg !7032
  %cmp69 = fcmp ogt float %42, %44, !dbg !7033
  br i1 %cmp69, label %if.then71, label %if.end74, !dbg !7034

if.then71:                                        ; preds = %if.then67
  %45 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !7035
  %zmax72 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %45, i32 0, i32 5, !dbg !7036
  %46 = load float, float* %zmax72, align 4, !dbg !7036
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !7037
  store float %46, float* %arrayidx73, align 4, !dbg !7038
  br label %if.end74, !dbg !7037

if.end74:                                         ; preds = %if.then71, %if.then67
  br label %if.end75, !dbg !7039

if.end75:                                         ; preds = %if.end74, %if.end62
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !7040
  %47 = load float, float* %arrayidx76, align 4, !dbg !7040
  %tobool77 = fcmp une float %47, 0.000000e+00, !dbg !7040
  br i1 %tobool77, label %if.then78, label %if.end84, !dbg !7042

if.then78:                                        ; preds = %if.end75
  %48 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7043
  %matrix79 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %48, i32 0, i32 3, !dbg !7044
  %arrayidx80 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix79, i64 0, i64 0, !dbg !7043
  %arraydecay81 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx80, i64 0, i64 0, !dbg !7043
  %arrayidx82 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !7045
  %49 = load float, float* %arrayidx82, align 4, !dbg !7045
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !7046
  %50 = load float, float* %arrayidx83, align 4, !dbg !7046
  %div = fdiv float %49, %50, !dbg !7047
  call void @mul_v3_fl(float* %arraydecay81, float %div), !dbg !7048
  br label %if.end84, !dbg !7048

if.end84:                                         ; preds = %if.then78, %if.end75
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 1, !dbg !7049
  %51 = load float, float* %arrayidx85, align 4, !dbg !7049
  %tobool86 = fcmp une float %51, 0.000000e+00, !dbg !7049
  br i1 %tobool86, label %if.then87, label %if.end94, !dbg !7051

if.then87:                                        ; preds = %if.end84
  %52 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7052
  %matrix88 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %52, i32 0, i32 3, !dbg !7053
  %arrayidx89 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix88, i64 0, i64 1, !dbg !7052
  %arraydecay90 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx89, i64 0, i64 0, !dbg !7052
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !7054
  %53 = load float, float* %arrayidx91, align 4, !dbg !7054
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 1, !dbg !7055
  %54 = load float, float* %arrayidx92, align 4, !dbg !7055
  %div93 = fdiv float %53, %54, !dbg !7056
  call void @mul_v3_fl(float* %arraydecay90, float %div93), !dbg !7057
  br label %if.end94, !dbg !7057

if.end94:                                         ; preds = %if.then87, %if.end84
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 2, !dbg !7058
  %55 = load float, float* %arrayidx95, align 4, !dbg !7058
  %tobool96 = fcmp une float %55, 0.000000e+00, !dbg !7058
  br i1 %tobool96, label %if.then97, label %if.end104, !dbg !7060

if.then97:                                        ; preds = %if.end94
  %56 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7061
  %matrix98 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %56, i32 0, i32 3, !dbg !7062
  %arrayidx99 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix98, i64 0, i64 2, !dbg !7061
  %arraydecay100 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx99, i64 0, i64 0, !dbg !7061
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !7063
  %57 = load float, float* %arrayidx101, align 4, !dbg !7063
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 2, !dbg !7064
  %58 = load float, float* %arrayidx102, align 4, !dbg !7064
  %div103 = fdiv float %57, %58, !dbg !7065
  call void @mul_v3_fl(float* %arraydecay100, float %div103), !dbg !7066
  br label %if.end104, !dbg !7066

if.end104:                                        ; preds = %if.then97, %if.end94
  ret void, !dbg !7067
}

; Function Attrs: noinline nounwind uwtable
define internal void @rotlike_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !7068 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bRotateLikeConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata %struct.bRotateLikeConstraint** %data, metadata !7075, metadata !DIExpression()), !dbg !7076
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7077
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !7078
  %1 = load i8*, i8** %data1, align 8, !dbg !7078
  %2 = bitcast i8* %1 to %struct.bRotateLikeConstraint*, !dbg !7077
  store %struct.bRotateLikeConstraint* %2, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7076
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !7079
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7080
  %5 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7081
  %tar = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %5, i32 0, i32 0, !dbg !7082
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !7083
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !7084
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !7079
  ret void, !dbg !7085
}

; Function Attrs: noinline nounwind uwtable
define internal void @rotlike_new_data(i8* %cdata) #0 !dbg !7086 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bRotateLikeConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !7087, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.declare(metadata %struct.bRotateLikeConstraint** %data, metadata !7089, metadata !DIExpression()), !dbg !7090
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !7091
  %1 = bitcast i8* %0 to %struct.bRotateLikeConstraint*, !dbg !7092
  store %struct.bRotateLikeConstraint* %1, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7090
  %2 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7093
  %flag = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %2, i32 0, i32 1, !dbg !7094
  store i32 7, i32* %flag, align 8, !dbg !7095
  ret void, !dbg !7096
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rotlike_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !7097 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bRotateLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7098, metadata !DIExpression()), !dbg !7099
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !7100, metadata !DIExpression()), !dbg !7101
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7102
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !7102
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !7104

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7105
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !7105
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !7106

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bRotateLikeConstraint** %data, metadata !7107, metadata !DIExpression()), !dbg !7109
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7110
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !7111
  %3 = load i8*, i8** %data2, align 8, !dbg !7111
  %4 = bitcast i8* %3 to %struct.bRotateLikeConstraint*, !dbg !7110
  store %struct.bRotateLikeConstraint* %4, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7109
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7112, metadata !DIExpression()), !dbg !7113
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7114
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !7114
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !7114
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !7114
  %7 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7114
  %tar = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %7, i32 0, i32 0, !dbg !7114
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7114
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7114
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !7114
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !7114
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7114
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !7114
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !7114
  %11 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7114
  %subtarget4 = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %11, i32 0, i32 3, !dbg !7114
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !7114
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !7114
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7114
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !7114
  %13 = load i8, i8* %tarspace, align 1, !dbg !7114
  %conv = zext i8 %13 to i16, !dbg !7114
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7114
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !7114
  store i16 %conv, i16* %space, align 8, !dbg !7114
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7114
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !7114
  store i16 1, i16* %flag, align 2, !dbg !7114
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7116
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !7116
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !7116
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !7116
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !7114

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7118
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !7118
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !7118
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !7118
  %20 = load i16, i16* %type, align 8, !dbg !7118
  %conv11 = sext i16 %20 to i32, !dbg !7118
  %cmp = icmp eq i32 %conv11, 25, !dbg !7118
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !7118

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7118
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !7118
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !7118
  %22 = load i8, i8* %arrayidx, align 8, !dbg !7118
  %conv15 = zext i8 %22 to i32, !dbg !7118
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !7118
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !7121

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !7122, metadata !DIExpression()), !dbg !7124
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7124
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !7124
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !7124
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !7124
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !7124
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7124
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !7124
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !7124
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !7124
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !7124
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7124
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !7124
  store i16 2, i16* %type22, align 4, !dbg !7124
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7124
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !7124
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !7124

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7124
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !7124
  %30 = load i16, i16* %rotmode, align 4, !dbg !7124
  %conv24 = sext i16 %30 to i32, !dbg !7124
  br label %cond.end, !dbg !7124

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !7124

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !7124
  %conv25 = trunc i32 %cond to i16, !dbg !7124
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7124
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !7124
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !7124
  br label %if.end49, !dbg !7124

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7125
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !7125
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !7125
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !7125
  %34 = load i16, i16* %type27, align 8, !dbg !7125
  %conv28 = sext i16 %34 to i32, !dbg !7125
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !7125
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !7125

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7125
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !7125
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !7125
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !7125
  %37 = load i16, i16* %type32, align 8, !dbg !7125
  %conv33 = sext i16 %37 to i32, !dbg !7125
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !7125
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !7125

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7125
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !7125
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !7125
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !7125
  %conv39 = zext i8 %39 to i32, !dbg !7125
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !7125
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !7118

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7127
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !7127
  store i16 3, i16* %type42, align 4, !dbg !7127
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7127
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !7127
  store i16 1, i16* %rotOrder43, align 2, !dbg !7127
  br label %if.end, !dbg !7127

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7129
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !7129
  store i16 1, i16* %type45, align 4, !dbg !7129
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7129
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !7129
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !7129
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !7129
  %45 = load i16, i16* %rotmode47, align 8, !dbg !7129
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7129
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !7129
  store i16 %45, i16* %rotOrder48, align 2, !dbg !7129
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !7121

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7114
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7114
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !7114
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !7114
  store i32 1, i32* %retval, align 4, !dbg !7131
  br label %return, !dbg !7131

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !7132
  br label %return, !dbg !7132

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !7133
  ret i32 %50, !dbg !7133
}

; Function Attrs: noinline nounwind uwtable
define internal void @rotlike_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !7134 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bRotateLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7135, metadata !DIExpression()), !dbg !7136
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !7137, metadata !DIExpression()), !dbg !7138
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7141
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !7141
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !7143

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7144
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !7144
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !7145

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bRotateLikeConstraint** %data, metadata !7146, metadata !DIExpression()), !dbg !7148
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7149
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !7150
  %3 = load i8*, i8** %data2, align 8, !dbg !7150
  %4 = bitcast i8* %3 to %struct.bRotateLikeConstraint*, !dbg !7149
  store %struct.bRotateLikeConstraint* %4, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7148
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7151, metadata !DIExpression()), !dbg !7152
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7153
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !7154
  %6 = load i8*, i8** %first, align 8, !dbg !7154
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !7153
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !7152
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7155
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !7155
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !7158

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !7159, metadata !DIExpression()), !dbg !7161
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7161
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !7161
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !7161
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !7161
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !7162
  %conv = zext i8 %11 to i32, !dbg !7162
  %cmp = icmp eq i32 %conv, 0, !dbg !7162
  br i1 %cmp, label %if.then6, label %if.end, !dbg !7161

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7164
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !7164
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7164
  %14 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7164
  %tar7 = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %14, i32 0, i32 0, !dbg !7164
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !7164
  %15 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7164
  %subtarget = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %15, i32 0, i32 3, !dbg !7164
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !7164
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7164
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !7164
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !7164
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !7164
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7164
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !7164
  %18 = load i16, i16* %space, align 8, !dbg !7164
  %conv10 = trunc i16 %18 to i8, !dbg !7164
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7164
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !7164
  store i8 %conv10, i8* %tarspace, align 1, !dbg !7164
  br label %if.end, !dbg !7164

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7161
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7161
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !7161
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !7161
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !7161
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !7161
  br label %if.end11, !dbg !7161

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !7166

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !7167
}

; Function Attrs: noinline nounwind uwtable
define internal void @rotlike_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !7168 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bRotateLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %loc = alloca [3 x float], align 4
  %eul = alloca [3 x float], align 4
  %obeul = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7169, metadata !DIExpression()), !dbg !7170
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !7171, metadata !DIExpression()), !dbg !7172
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !7173, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.declare(metadata %struct.bRotateLikeConstraint** %data, metadata !7175, metadata !DIExpression()), !dbg !7176
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7177
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !7178
  %1 = load i8*, i8** %data1, align 8, !dbg !7178
  %2 = bitcast i8* %1 to %struct.bRotateLikeConstraint*, !dbg !7177
  store %struct.bRotateLikeConstraint* %2, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7176
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7179, metadata !DIExpression()), !dbg !7180
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !7181
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !7182
  %4 = load i8*, i8** %first, align 8, !dbg !7182
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !7181
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !7180
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7183
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !7183
  br i1 %tobool, label %land.lhs.true, label %if.end86, !dbg !7183

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7183
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !7183
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7183
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !7183
  br i1 %tobool2, label %if.then, label %if.end86, !dbg !7185

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !7186, metadata !DIExpression()), !dbg !7188
  call void @llvm.dbg.declare(metadata [3 x float]* %eul, metadata !7189, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.declare(metadata [3 x float]* %obeul, metadata !7191, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !7193, metadata !DIExpression()), !dbg !7194
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !7195
  %9 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7196
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %9, i32 0, i32 3, !dbg !7197
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 3, !dbg !7196
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !7196
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !7198
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !7199
  %10 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7200
  %matrix5 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %10, i32 0, i32 3, !dbg !7201
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix5, i64 0, i64 0, !dbg !7200
  call void @mat4_to_size(float* %arraydecay4, [4 x float]* %arraydecay6), !dbg !7202
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %obeul, i64 0, i64 0, !dbg !7203
  %11 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7204
  %rotOrder = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %11, i32 0, i32 6, !dbg !7205
  %12 = load i16, i16* %rotOrder, align 2, !dbg !7205
  %13 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7206
  %matrix8 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %13, i32 0, i32 3, !dbg !7207
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix8, i64 0, i64 0, !dbg !7206
  call void @mat4_to_eulO(float* %arraydecay7, i16 signext %12, [4 x float]* %arraydecay9), !dbg !7208
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !7209
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %obeul, i64 0, i64 0, !dbg !7210
  %14 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7211
  %rotOrder12 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %14, i32 0, i32 6, !dbg !7212
  %15 = load i16, i16* %rotOrder12, align 2, !dbg !7212
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7213
  %matrix13 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 4, !dbg !7214
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix13, i64 0, i64 0, !dbg !7213
  call void @mat4_to_compatible_eulO(float* %arraydecay10, float* %arraydecay11, i16 signext %15, [4 x float]* %arraydecay14), !dbg !7215
  %17 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7216
  %flag = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %17, i32 0, i32 1, !dbg !7218
  %18 = load i32, i32* %flag, align 8, !dbg !7218
  %and = and i32 %18, 1, !dbg !7219
  %cmp = icmp eq i32 %and, 0, !dbg !7220
  br i1 %cmp, label %if.then15, label %if.else, !dbg !7221

if.then15:                                        ; preds = %if.then
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %obeul, i64 0, i64 0, !dbg !7222
  %19 = load float, float* %arrayidx16, align 4, !dbg !7222
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !7223
  store float %19, float* %arrayidx17, align 4, !dbg !7224
  br label %if.end31, !dbg !7223

if.else:                                          ; preds = %if.then
  %20 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7225
  %flag18 = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %20, i32 0, i32 1, !dbg !7228
  %21 = load i32, i32* %flag18, align 8, !dbg !7228
  %and19 = and i32 %21, 128, !dbg !7229
  %tobool20 = icmp ne i32 %and19, 0, !dbg !7229
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !7230

if.then21:                                        ; preds = %if.else
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !7231
  %22 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7232
  %rotOrder23 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %22, i32 0, i32 6, !dbg !7233
  %23 = load i16, i16* %rotOrder23, align 2, !dbg !7233
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %obeul, i64 0, i64 0, !dbg !7234
  %24 = load float, float* %arrayidx24, align 4, !dbg !7234
  call void @rotate_eulO(float* %arraydecay22, i16 signext %23, i8 zeroext 88, float %24), !dbg !7235
  br label %if.end, !dbg !7235

if.end:                                           ; preds = %if.then21, %if.else
  %25 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7236
  %flag25 = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %25, i32 0, i32 1, !dbg !7238
  %26 = load i32, i32* %flag25, align 8, !dbg !7238
  %and26 = and i32 %26, 16, !dbg !7239
  %tobool27 = icmp ne i32 %and26, 0, !dbg !7239
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !7240

if.then28:                                        ; preds = %if.end
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !7241
  %27 = load float, float* %arrayidx29, align 4, !dbg !7242
  %mul = fmul float %27, -1.000000e+00, !dbg !7242
  store float %mul, float* %arrayidx29, align 4, !dbg !7242
  br label %if.end30, !dbg !7241

if.end30:                                         ; preds = %if.then28, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then15
  %28 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7243
  %flag32 = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %28, i32 0, i32 1, !dbg !7245
  %29 = load i32, i32* %flag32, align 8, !dbg !7245
  %and33 = and i32 %29, 2, !dbg !7246
  %cmp34 = icmp eq i32 %and33, 0, !dbg !7247
  br i1 %cmp34, label %if.then35, label %if.else38, !dbg !7248

if.then35:                                        ; preds = %if.end31
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %obeul, i64 0, i64 1, !dbg !7249
  %30 = load float, float* %arrayidx36, align 4, !dbg !7249
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 1, !dbg !7250
  store float %30, float* %arrayidx37, align 4, !dbg !7251
  br label %if.end54, !dbg !7250

if.else38:                                        ; preds = %if.end31
  %31 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7252
  %flag39 = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %31, i32 0, i32 1, !dbg !7255
  %32 = load i32, i32* %flag39, align 8, !dbg !7255
  %and40 = and i32 %32, 128, !dbg !7256
  %tobool41 = icmp ne i32 %and40, 0, !dbg !7256
  br i1 %tobool41, label %if.then42, label %if.end46, !dbg !7257

if.then42:                                        ; preds = %if.else38
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !7258
  %33 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7259
  %rotOrder44 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %33, i32 0, i32 6, !dbg !7260
  %34 = load i16, i16* %rotOrder44, align 2, !dbg !7260
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %obeul, i64 0, i64 1, !dbg !7261
  %35 = load float, float* %arrayidx45, align 4, !dbg !7261
  call void @rotate_eulO(float* %arraydecay43, i16 signext %34, i8 zeroext 89, float %35), !dbg !7262
  br label %if.end46, !dbg !7262

if.end46:                                         ; preds = %if.then42, %if.else38
  %36 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7263
  %flag47 = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %36, i32 0, i32 1, !dbg !7265
  %37 = load i32, i32* %flag47, align 8, !dbg !7265
  %and48 = and i32 %37, 32, !dbg !7266
  %tobool49 = icmp ne i32 %and48, 0, !dbg !7266
  br i1 %tobool49, label %if.then50, label %if.end53, !dbg !7267

if.then50:                                        ; preds = %if.end46
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 1, !dbg !7268
  %38 = load float, float* %arrayidx51, align 4, !dbg !7269
  %mul52 = fmul float %38, -1.000000e+00, !dbg !7269
  store float %mul52, float* %arrayidx51, align 4, !dbg !7269
  br label %if.end53, !dbg !7268

if.end53:                                         ; preds = %if.then50, %if.end46
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then35
  %39 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7270
  %flag55 = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %39, i32 0, i32 1, !dbg !7272
  %40 = load i32, i32* %flag55, align 8, !dbg !7272
  %and56 = and i32 %40, 4, !dbg !7273
  %cmp57 = icmp eq i32 %and56, 0, !dbg !7274
  br i1 %cmp57, label %if.then58, label %if.else61, !dbg !7275

if.then58:                                        ; preds = %if.end54
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %obeul, i64 0, i64 2, !dbg !7276
  %41 = load float, float* %arrayidx59, align 4, !dbg !7276
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 2, !dbg !7277
  store float %41, float* %arrayidx60, align 4, !dbg !7278
  br label %if.end77, !dbg !7277

if.else61:                                        ; preds = %if.end54
  %42 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7279
  %flag62 = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %42, i32 0, i32 1, !dbg !7282
  %43 = load i32, i32* %flag62, align 8, !dbg !7282
  %and63 = and i32 %43, 128, !dbg !7283
  %tobool64 = icmp ne i32 %and63, 0, !dbg !7283
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !7284

if.then65:                                        ; preds = %if.else61
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !7285
  %44 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7286
  %rotOrder67 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %44, i32 0, i32 6, !dbg !7287
  %45 = load i16, i16* %rotOrder67, align 2, !dbg !7287
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %obeul, i64 0, i64 2, !dbg !7288
  %46 = load float, float* %arrayidx68, align 4, !dbg !7288
  call void @rotate_eulO(float* %arraydecay66, i16 signext %45, i8 zeroext 90, float %46), !dbg !7289
  br label %if.end69, !dbg !7289

if.end69:                                         ; preds = %if.then65, %if.else61
  %47 = load %struct.bRotateLikeConstraint*, %struct.bRotateLikeConstraint** %data, align 8, !dbg !7290
  %flag70 = getelementptr inbounds %struct.bRotateLikeConstraint, %struct.bRotateLikeConstraint* %47, i32 0, i32 1, !dbg !7292
  %48 = load i32, i32* %flag70, align 8, !dbg !7292
  %and71 = and i32 %48, 64, !dbg !7293
  %tobool72 = icmp ne i32 %and71, 0, !dbg !7293
  br i1 %tobool72, label %if.then73, label %if.end76, !dbg !7294

if.then73:                                        ; preds = %if.end69
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 2, !dbg !7295
  %49 = load float, float* %arrayidx74, align 4, !dbg !7296
  %mul75 = fmul float %49, -1.000000e+00, !dbg !7296
  store float %mul75, float* %arrayidx74, align 4, !dbg !7296
  br label %if.end76, !dbg !7295

if.end76:                                         ; preds = %if.then73, %if.end69
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then58
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !7297
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %obeul, i64 0, i64 0, !dbg !7298
  call void @compatible_eul(float* %arraydecay78, float* %arraydecay79), !dbg !7299
  %50 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7300
  %matrix80 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %50, i32 0, i32 3, !dbg !7301
  %arraydecay81 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix80, i64 0, i64 0, !dbg !7300
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !7302
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !7303
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !7304
  %51 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7305
  %rotOrder85 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %51, i32 0, i32 6, !dbg !7306
  %52 = load i16, i16* %rotOrder85, align 2, !dbg !7306
  call void @loc_eulO_size_to_mat4([4 x float]* %arraydecay81, float* %arraydecay82, float* %arraydecay83, float* %arraydecay84, i16 signext %52), !dbg !7307
  br label %if.end86, !dbg !7308

if.end86:                                         ; preds = %if.end77, %land.lhs.true, %entry
  ret void, !dbg !7309
}

declare dso_local void @mat4_to_compatible_eulO(float*, float*, i16 signext, [4 x float]*) #2

declare dso_local void @rotate_eulO(float*, i16 signext, i8 zeroext, float) #2

declare dso_local void @compatible_eul(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @loclike_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !7310 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bLocateLikeConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7311, metadata !DIExpression()), !dbg !7312
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !7313, metadata !DIExpression()), !dbg !7314
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !7315, metadata !DIExpression()), !dbg !7316
  call void @llvm.dbg.declare(metadata %struct.bLocateLikeConstraint** %data, metadata !7317, metadata !DIExpression()), !dbg !7318
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7319
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !7320
  %1 = load i8*, i8** %data1, align 8, !dbg !7320
  %2 = bitcast i8* %1 to %struct.bLocateLikeConstraint*, !dbg !7319
  store %struct.bLocateLikeConstraint* %2, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7318
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !7321
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7322
  %5 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7323
  %tar = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %5, i32 0, i32 0, !dbg !7324
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !7325
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !7326
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !7321
  ret void, !dbg !7327
}

; Function Attrs: noinline nounwind uwtable
define internal void @loclike_new_data(i8* %cdata) #0 !dbg !7328 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bLocateLikeConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !7329, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.declare(metadata %struct.bLocateLikeConstraint** %data, metadata !7331, metadata !DIExpression()), !dbg !7332
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !7333
  %1 = bitcast i8* %0 to %struct.bLocateLikeConstraint*, !dbg !7334
  store %struct.bLocateLikeConstraint* %1, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7332
  %2 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7335
  %flag = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %2, i32 0, i32 1, !dbg !7336
  store i32 7, i32* %flag, align 8, !dbg !7337
  ret void, !dbg !7338
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @loclike_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !7339 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bLocateLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7340, metadata !DIExpression()), !dbg !7341
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !7342, metadata !DIExpression()), !dbg !7343
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7344
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !7344
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !7346

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7347
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !7347
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !7348

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bLocateLikeConstraint** %data, metadata !7349, metadata !DIExpression()), !dbg !7351
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7352
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !7353
  %3 = load i8*, i8** %data2, align 8, !dbg !7353
  %4 = bitcast i8* %3 to %struct.bLocateLikeConstraint*, !dbg !7352
  store %struct.bLocateLikeConstraint* %4, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7351
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7354, metadata !DIExpression()), !dbg !7355
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7356
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !7356
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !7356
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !7356
  %7 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7356
  %tar = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %7, i32 0, i32 0, !dbg !7356
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7356
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7356
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !7356
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !7356
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7356
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !7356
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !7356
  %11 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7356
  %subtarget4 = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %11, i32 0, i32 3, !dbg !7356
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !7356
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !7356
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7356
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !7356
  %13 = load i8, i8* %tarspace, align 1, !dbg !7356
  %conv = zext i8 %13 to i16, !dbg !7356
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7356
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !7356
  store i16 %conv, i16* %space, align 8, !dbg !7356
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7356
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !7356
  store i16 1, i16* %flag, align 2, !dbg !7356
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7358
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !7358
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !7358
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !7358
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !7356

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7360
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !7360
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !7360
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !7360
  %20 = load i16, i16* %type, align 8, !dbg !7360
  %conv11 = sext i16 %20 to i32, !dbg !7360
  %cmp = icmp eq i32 %conv11, 25, !dbg !7360
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !7360

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7360
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !7360
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !7360
  %22 = load i8, i8* %arrayidx, align 8, !dbg !7360
  %conv15 = zext i8 %22 to i32, !dbg !7360
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !7360
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !7363

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !7364, metadata !DIExpression()), !dbg !7366
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7366
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !7366
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !7366
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !7366
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !7366
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7366
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !7366
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !7366
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !7366
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !7366
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7366
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !7366
  store i16 2, i16* %type22, align 4, !dbg !7366
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7366
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !7366
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !7366

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7366
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !7366
  %30 = load i16, i16* %rotmode, align 4, !dbg !7366
  %conv24 = sext i16 %30 to i32, !dbg !7366
  br label %cond.end, !dbg !7366

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !7366

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !7366
  %conv25 = trunc i32 %cond to i16, !dbg !7366
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7366
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !7366
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !7366
  br label %if.end49, !dbg !7366

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7367
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !7367
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !7367
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !7367
  %34 = load i16, i16* %type27, align 8, !dbg !7367
  %conv28 = sext i16 %34 to i32, !dbg !7367
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !7367
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !7367

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7367
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !7367
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !7367
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !7367
  %37 = load i16, i16* %type32, align 8, !dbg !7367
  %conv33 = sext i16 %37 to i32, !dbg !7367
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !7367
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !7367

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7367
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !7367
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !7367
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !7367
  %conv39 = zext i8 %39 to i32, !dbg !7367
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !7367
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !7360

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7369
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !7369
  store i16 3, i16* %type42, align 4, !dbg !7369
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7369
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !7369
  store i16 1, i16* %rotOrder43, align 2, !dbg !7369
  br label %if.end, !dbg !7369

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7371
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !7371
  store i16 1, i16* %type45, align 4, !dbg !7371
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7371
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !7371
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !7371
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !7371
  %45 = load i16, i16* %rotmode47, align 8, !dbg !7371
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7371
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !7371
  store i16 %45, i16* %rotOrder48, align 2, !dbg !7371
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !7363

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7356
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7356
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !7356
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !7356
  store i32 1, i32* %retval, align 4, !dbg !7373
  br label %return, !dbg !7373

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !7374
  br label %return, !dbg !7374

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !7375
  ret i32 %50, !dbg !7375
}

; Function Attrs: noinline nounwind uwtable
define internal void @loclike_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !7376 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bLocateLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7377, metadata !DIExpression()), !dbg !7378
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !7379, metadata !DIExpression()), !dbg !7380
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !7381, metadata !DIExpression()), !dbg !7382
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7383
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !7383
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !7385

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7386
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !7386
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !7387

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bLocateLikeConstraint** %data, metadata !7388, metadata !DIExpression()), !dbg !7390
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7391
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !7392
  %3 = load i8*, i8** %data2, align 8, !dbg !7392
  %4 = bitcast i8* %3 to %struct.bLocateLikeConstraint*, !dbg !7391
  store %struct.bLocateLikeConstraint* %4, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7390
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7393, metadata !DIExpression()), !dbg !7394
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7395
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !7396
  %6 = load i8*, i8** %first, align 8, !dbg !7396
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !7395
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !7394
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7397
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !7397
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !7400

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !7401, metadata !DIExpression()), !dbg !7403
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7403
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !7403
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !7403
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !7403
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !7404
  %conv = zext i8 %11 to i32, !dbg !7404
  %cmp = icmp eq i32 %conv, 0, !dbg !7404
  br i1 %cmp, label %if.then6, label %if.end, !dbg !7403

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7406
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !7406
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7406
  %14 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7406
  %tar7 = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %14, i32 0, i32 0, !dbg !7406
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !7406
  %15 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7406
  %subtarget = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %15, i32 0, i32 3, !dbg !7406
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !7406
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7406
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !7406
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !7406
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !7406
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7406
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !7406
  %18 = load i16, i16* %space, align 8, !dbg !7406
  %conv10 = trunc i16 %18 to i8, !dbg !7406
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7406
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !7406
  store i8 %conv10, i8* %tarspace, align 1, !dbg !7406
  br label %if.end, !dbg !7406

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7403
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7403
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !7403
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !7403
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !7403
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !7403
  br label %if.end11, !dbg !7403

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !7408

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !7409
}

; Function Attrs: noinline nounwind uwtable
define internal void @loclike_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !7410 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bLocateLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %offset = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7411, metadata !DIExpression()), !dbg !7412
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !7413, metadata !DIExpression()), !dbg !7414
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !7415, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.declare(metadata %struct.bLocateLikeConstraint** %data, metadata !7417, metadata !DIExpression()), !dbg !7418
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7419
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !7420
  %1 = load i8*, i8** %data1, align 8, !dbg !7420
  %2 = bitcast i8* %1 to %struct.bLocateLikeConstraint*, !dbg !7419
  store %struct.bLocateLikeConstraint* %2, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7418
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7421, metadata !DIExpression()), !dbg !7422
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !7423
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !7424
  %4 = load i8*, i8** %first, align 8, !dbg !7424
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !7423
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !7422
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7425
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !7425
  br i1 %tobool, label %land.lhs.true, label %if.end79, !dbg !7425

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7425
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !7425
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7425
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !7425
  br i1 %tobool2, label %if.then, label %if.end79, !dbg !7427

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %offset, metadata !7428, metadata !DIExpression()), !dbg !7430
  %9 = bitcast [3 x float]* %offset to i8*, !dbg !7430
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 12, i1 false), !dbg !7430
  %10 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7431
  %flag = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %10, i32 0, i32 1, !dbg !7433
  %11 = load i32, i32* %flag, align 8, !dbg !7433
  %and = and i32 %11, 128, !dbg !7434
  %tobool3 = icmp ne i32 %and, 0, !dbg !7434
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !7435

if.then4:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !7436
  %12 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7437
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %12, i32 0, i32 3, !dbg !7438
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 3, !dbg !7437
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !7437
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay5), !dbg !7439
  br label %if.end, !dbg !7439

if.end:                                           ; preds = %if.then4, %if.then
  %13 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7440
  %flag6 = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %13, i32 0, i32 1, !dbg !7442
  %14 = load i32, i32* %flag6, align 8, !dbg !7442
  %and7 = and i32 %14, 1, !dbg !7443
  %tobool8 = icmp ne i32 %and7, 0, !dbg !7443
  br i1 %tobool8, label %if.then9, label %if.end28, !dbg !7444

if.then9:                                         ; preds = %if.end
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7445
  %matrix10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 4, !dbg !7447
  %arrayidx11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix10, i64 0, i64 3, !dbg !7445
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx11, i64 0, i64 0, !dbg !7445
  %16 = load float, float* %arrayidx12, align 8, !dbg !7445
  %17 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7448
  %matrix13 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %17, i32 0, i32 3, !dbg !7449
  %arrayidx14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix13, i64 0, i64 3, !dbg !7448
  %arrayidx15 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx14, i64 0, i64 0, !dbg !7448
  store float %16, float* %arrayidx15, align 8, !dbg !7450
  %18 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7451
  %flag16 = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %18, i32 0, i32 1, !dbg !7453
  %19 = load i32, i32* %flag16, align 8, !dbg !7453
  %and17 = and i32 %19, 16, !dbg !7454
  %tobool18 = icmp ne i32 %and17, 0, !dbg !7454
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !7455

if.then19:                                        ; preds = %if.then9
  %20 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7456
  %matrix20 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %20, i32 0, i32 3, !dbg !7457
  %arrayidx21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix20, i64 0, i64 3, !dbg !7456
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx21, i64 0, i64 0, !dbg !7456
  %21 = load float, float* %arrayidx22, align 8, !dbg !7458
  %mul = fmul float %21, -1.000000e+00, !dbg !7458
  store float %mul, float* %arrayidx22, align 8, !dbg !7458
  br label %if.end23, !dbg !7456

if.end23:                                         ; preds = %if.then19, %if.then9
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !7459
  %22 = load float, float* %arrayidx24, align 4, !dbg !7459
  %23 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7460
  %matrix25 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %23, i32 0, i32 3, !dbg !7461
  %arrayidx26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix25, i64 0, i64 3, !dbg !7460
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx26, i64 0, i64 0, !dbg !7460
  %24 = load float, float* %arrayidx27, align 8, !dbg !7462
  %add = fadd float %24, %22, !dbg !7462
  store float %add, float* %arrayidx27, align 8, !dbg !7462
  br label %if.end28, !dbg !7463

if.end28:                                         ; preds = %if.end23, %if.end
  %25 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7464
  %flag29 = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %25, i32 0, i32 1, !dbg !7466
  %26 = load i32, i32* %flag29, align 8, !dbg !7466
  %and30 = and i32 %26, 2, !dbg !7467
  %tobool31 = icmp ne i32 %and30, 0, !dbg !7467
  br i1 %tobool31, label %if.then32, label %if.end53, !dbg !7468

if.then32:                                        ; preds = %if.end28
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7469
  %matrix33 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 4, !dbg !7471
  %arrayidx34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix33, i64 0, i64 3, !dbg !7469
  %arrayidx35 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx34, i64 0, i64 1, !dbg !7469
  %28 = load float, float* %arrayidx35, align 4, !dbg !7469
  %29 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7472
  %matrix36 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %29, i32 0, i32 3, !dbg !7473
  %arrayidx37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix36, i64 0, i64 3, !dbg !7472
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx37, i64 0, i64 1, !dbg !7472
  store float %28, float* %arrayidx38, align 4, !dbg !7474
  %30 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7475
  %flag39 = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %30, i32 0, i32 1, !dbg !7477
  %31 = load i32, i32* %flag39, align 8, !dbg !7477
  %and40 = and i32 %31, 32, !dbg !7478
  %tobool41 = icmp ne i32 %and40, 0, !dbg !7478
  br i1 %tobool41, label %if.then42, label %if.end47, !dbg !7479

if.then42:                                        ; preds = %if.then32
  %32 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7480
  %matrix43 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %32, i32 0, i32 3, !dbg !7481
  %arrayidx44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix43, i64 0, i64 3, !dbg !7480
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx44, i64 0, i64 1, !dbg !7480
  %33 = load float, float* %arrayidx45, align 4, !dbg !7482
  %mul46 = fmul float %33, -1.000000e+00, !dbg !7482
  store float %mul46, float* %arrayidx45, align 4, !dbg !7482
  br label %if.end47, !dbg !7480

if.end47:                                         ; preds = %if.then42, %if.then32
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 1, !dbg !7483
  %34 = load float, float* %arrayidx48, align 4, !dbg !7483
  %35 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7484
  %matrix49 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %35, i32 0, i32 3, !dbg !7485
  %arrayidx50 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix49, i64 0, i64 3, !dbg !7484
  %arrayidx51 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx50, i64 0, i64 1, !dbg !7484
  %36 = load float, float* %arrayidx51, align 4, !dbg !7486
  %add52 = fadd float %36, %34, !dbg !7486
  store float %add52, float* %arrayidx51, align 4, !dbg !7486
  br label %if.end53, !dbg !7487

if.end53:                                         ; preds = %if.end47, %if.end28
  %37 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7488
  %flag54 = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %37, i32 0, i32 1, !dbg !7490
  %38 = load i32, i32* %flag54, align 8, !dbg !7490
  %and55 = and i32 %38, 4, !dbg !7491
  %tobool56 = icmp ne i32 %and55, 0, !dbg !7491
  br i1 %tobool56, label %if.then57, label %if.end78, !dbg !7492

if.then57:                                        ; preds = %if.end53
  %39 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7493
  %matrix58 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %39, i32 0, i32 4, !dbg !7495
  %arrayidx59 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix58, i64 0, i64 3, !dbg !7493
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx59, i64 0, i64 2, !dbg !7493
  %40 = load float, float* %arrayidx60, align 8, !dbg !7493
  %41 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7496
  %matrix61 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %41, i32 0, i32 3, !dbg !7497
  %arrayidx62 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix61, i64 0, i64 3, !dbg !7496
  %arrayidx63 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx62, i64 0, i64 2, !dbg !7496
  store float %40, float* %arrayidx63, align 8, !dbg !7498
  %42 = load %struct.bLocateLikeConstraint*, %struct.bLocateLikeConstraint** %data, align 8, !dbg !7499
  %flag64 = getelementptr inbounds %struct.bLocateLikeConstraint, %struct.bLocateLikeConstraint* %42, i32 0, i32 1, !dbg !7501
  %43 = load i32, i32* %flag64, align 8, !dbg !7501
  %and65 = and i32 %43, 64, !dbg !7502
  %tobool66 = icmp ne i32 %and65, 0, !dbg !7502
  br i1 %tobool66, label %if.then67, label %if.end72, !dbg !7503

if.then67:                                        ; preds = %if.then57
  %44 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7504
  %matrix68 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %44, i32 0, i32 3, !dbg !7505
  %arrayidx69 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix68, i64 0, i64 3, !dbg !7504
  %arrayidx70 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx69, i64 0, i64 2, !dbg !7504
  %45 = load float, float* %arrayidx70, align 8, !dbg !7506
  %mul71 = fmul float %45, -1.000000e+00, !dbg !7506
  store float %mul71, float* %arrayidx70, align 8, !dbg !7506
  br label %if.end72, !dbg !7504

if.end72:                                         ; preds = %if.then67, %if.then57
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 2, !dbg !7507
  %46 = load float, float* %arrayidx73, align 4, !dbg !7507
  %47 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7508
  %matrix74 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %47, i32 0, i32 3, !dbg !7509
  %arrayidx75 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix74, i64 0, i64 3, !dbg !7508
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx75, i64 0, i64 2, !dbg !7508
  %48 = load float, float* %arrayidx76, align 8, !dbg !7510
  %add77 = fadd float %48, %46, !dbg !7510
  store float %add77, float* %arrayidx76, align 8, !dbg !7510
  br label %if.end78, !dbg !7511

if.end78:                                         ; preds = %if.end72, %if.end53
  br label %if.end79, !dbg !7512

if.end79:                                         ; preds = %if.end78, %land.lhs.true, %entry
  ret void, !dbg !7513
}

; Function Attrs: noinline nounwind uwtable
define internal void @sizelike_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !7514 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bSizeLikeConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7515, metadata !DIExpression()), !dbg !7516
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !7517, metadata !DIExpression()), !dbg !7518
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !7519, metadata !DIExpression()), !dbg !7520
  call void @llvm.dbg.declare(metadata %struct.bSizeLikeConstraint** %data, metadata !7521, metadata !DIExpression()), !dbg !7522
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7523
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !7524
  %1 = load i8*, i8** %data1, align 8, !dbg !7524
  %2 = bitcast i8* %1 to %struct.bSizeLikeConstraint*, !dbg !7523
  store %struct.bSizeLikeConstraint* %2, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7522
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !7525
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7526
  %5 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7527
  %tar = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %5, i32 0, i32 0, !dbg !7528
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !7529
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !7530
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !7525
  ret void, !dbg !7531
}

; Function Attrs: noinline nounwind uwtable
define internal void @sizelike_new_data(i8* %cdata) #0 !dbg !7532 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bSizeLikeConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !7533, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.declare(metadata %struct.bSizeLikeConstraint** %data, metadata !7535, metadata !DIExpression()), !dbg !7536
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !7537
  %1 = bitcast i8* %0 to %struct.bSizeLikeConstraint*, !dbg !7538
  store %struct.bSizeLikeConstraint* %1, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7536
  %2 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7539
  %flag = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %2, i32 0, i32 1, !dbg !7540
  store i32 7, i32* %flag, align 8, !dbg !7541
  ret void, !dbg !7542
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sizelike_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !7543 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bSizeLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7544, metadata !DIExpression()), !dbg !7545
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !7546, metadata !DIExpression()), !dbg !7547
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7548
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !7548
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !7550

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7551
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !7551
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !7552

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bSizeLikeConstraint** %data, metadata !7553, metadata !DIExpression()), !dbg !7555
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7556
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !7557
  %3 = load i8*, i8** %data2, align 8, !dbg !7557
  %4 = bitcast i8* %3 to %struct.bSizeLikeConstraint*, !dbg !7556
  store %struct.bSizeLikeConstraint* %4, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7555
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7558, metadata !DIExpression()), !dbg !7559
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7560
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !7560
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !7560
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !7560
  %7 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7560
  %tar = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %7, i32 0, i32 0, !dbg !7560
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7560
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7560
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !7560
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !7560
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7560
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !7560
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !7560
  %11 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7560
  %subtarget4 = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %11, i32 0, i32 3, !dbg !7560
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !7560
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !7560
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7560
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !7560
  %13 = load i8, i8* %tarspace, align 1, !dbg !7560
  %conv = zext i8 %13 to i16, !dbg !7560
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7560
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !7560
  store i16 %conv, i16* %space, align 8, !dbg !7560
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7560
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !7560
  store i16 1, i16* %flag, align 2, !dbg !7560
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7562
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !7562
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !7562
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !7562
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !7560

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7564
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !7564
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !7564
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !7564
  %20 = load i16, i16* %type, align 8, !dbg !7564
  %conv11 = sext i16 %20 to i32, !dbg !7564
  %cmp = icmp eq i32 %conv11, 25, !dbg !7564
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !7564

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7564
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !7564
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !7564
  %22 = load i8, i8* %arrayidx, align 8, !dbg !7564
  %conv15 = zext i8 %22 to i32, !dbg !7564
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !7564
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !7567

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !7568, metadata !DIExpression()), !dbg !7570
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7570
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !7570
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !7570
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !7570
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !7570
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7570
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !7570
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !7570
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !7570
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !7570
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7570
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !7570
  store i16 2, i16* %type22, align 4, !dbg !7570
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7570
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !7570
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !7570

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7570
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !7570
  %30 = load i16, i16* %rotmode, align 4, !dbg !7570
  %conv24 = sext i16 %30 to i32, !dbg !7570
  br label %cond.end, !dbg !7570

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !7570

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !7570
  %conv25 = trunc i32 %cond to i16, !dbg !7570
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7570
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !7570
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !7570
  br label %if.end49, !dbg !7570

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7571
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !7571
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !7571
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !7571
  %34 = load i16, i16* %type27, align 8, !dbg !7571
  %conv28 = sext i16 %34 to i32, !dbg !7571
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !7571
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !7571

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7571
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !7571
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !7571
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !7571
  %37 = load i16, i16* %type32, align 8, !dbg !7571
  %conv33 = sext i16 %37 to i32, !dbg !7571
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !7571
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !7571

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7571
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !7571
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !7571
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !7571
  %conv39 = zext i8 %39 to i32, !dbg !7571
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !7571
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !7564

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7573
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !7573
  store i16 3, i16* %type42, align 4, !dbg !7573
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7573
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !7573
  store i16 1, i16* %rotOrder43, align 2, !dbg !7573
  br label %if.end, !dbg !7573

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7575
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !7575
  store i16 1, i16* %type45, align 4, !dbg !7575
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7575
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !7575
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !7575
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !7575
  %45 = load i16, i16* %rotmode47, align 8, !dbg !7575
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7575
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !7575
  store i16 %45, i16* %rotOrder48, align 2, !dbg !7575
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !7567

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7560
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7560
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !7560
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !7560
  store i32 1, i32* %retval, align 4, !dbg !7577
  br label %return, !dbg !7577

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !7578
  br label %return, !dbg !7578

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !7579
  ret i32 %50, !dbg !7579
}

; Function Attrs: noinline nounwind uwtable
define internal void @sizelike_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !7580 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bSizeLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7581, metadata !DIExpression()), !dbg !7582
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !7583, metadata !DIExpression()), !dbg !7584
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !7585, metadata !DIExpression()), !dbg !7586
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7587
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !7587
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !7589

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7590
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !7590
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !7591

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bSizeLikeConstraint** %data, metadata !7592, metadata !DIExpression()), !dbg !7594
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7595
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !7596
  %3 = load i8*, i8** %data2, align 8, !dbg !7596
  %4 = bitcast i8* %3 to %struct.bSizeLikeConstraint*, !dbg !7595
  store %struct.bSizeLikeConstraint* %4, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7594
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7597, metadata !DIExpression()), !dbg !7598
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7599
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !7600
  %6 = load i8*, i8** %first, align 8, !dbg !7600
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !7599
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !7598
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7601
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !7601
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !7604

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !7605, metadata !DIExpression()), !dbg !7607
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7607
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !7607
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !7607
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !7607
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !7608
  %conv = zext i8 %11 to i32, !dbg !7608
  %cmp = icmp eq i32 %conv, 0, !dbg !7608
  br i1 %cmp, label %if.then6, label %if.end, !dbg !7607

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7610
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !7610
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7610
  %14 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7610
  %tar7 = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %14, i32 0, i32 0, !dbg !7610
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !7610
  %15 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7610
  %subtarget = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %15, i32 0, i32 3, !dbg !7610
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !7610
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7610
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !7610
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !7610
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !7610
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7610
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !7610
  %18 = load i16, i16* %space, align 8, !dbg !7610
  %conv10 = trunc i16 %18 to i8, !dbg !7610
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7610
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !7610
  store i8 %conv10, i8* %tarspace, align 1, !dbg !7610
  br label %if.end, !dbg !7610

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7607
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7607
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !7607
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !7607
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !7607
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !7607
  br label %if.end11, !dbg !7607

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !7612

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !7613
}

; Function Attrs: noinline nounwind uwtable
define internal void @sizelike_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !7614 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bSizeLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %obsize = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7615, metadata !DIExpression()), !dbg !7616
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !7617, metadata !DIExpression()), !dbg !7618
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !7619, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.declare(metadata %struct.bSizeLikeConstraint** %data, metadata !7621, metadata !DIExpression()), !dbg !7622
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7623
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !7624
  %1 = load i8*, i8** %data1, align 8, !dbg !7624
  %2 = bitcast i8* %1 to %struct.bSizeLikeConstraint*, !dbg !7623
  store %struct.bSizeLikeConstraint* %2, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7622
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7625, metadata !DIExpression()), !dbg !7626
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !7627
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !7628
  %4 = load i8*, i8** %first, align 8, !dbg !7628
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !7627
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !7626
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7629
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !7629
  br i1 %tobool, label %land.lhs.true, label %if.end88, !dbg !7629

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7629
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !7629
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7629
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !7629
  br i1 %tobool2, label %if.then, label %if.end88, !dbg !7631

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %obsize, metadata !7632, metadata !DIExpression()), !dbg !7634
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !7635, metadata !DIExpression()), !dbg !7636
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !7637
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7638
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 4, !dbg !7639
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !7638
  call void @mat4_to_size(float* %arraydecay, [4 x float]* %arraydecay3), !dbg !7640
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !7641
  %10 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7642
  %matrix5 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %10, i32 0, i32 3, !dbg !7643
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix5, i64 0, i64 0, !dbg !7642
  call void @mat4_to_size(float* %arraydecay4, [4 x float]* %arraydecay6), !dbg !7644
  %11 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7645
  %flag = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %11, i32 0, i32 1, !dbg !7647
  %12 = load i32, i32* %flag, align 8, !dbg !7647
  %and = and i32 %12, 1, !dbg !7648
  %tobool7 = icmp ne i32 %and, 0, !dbg !7648
  br i1 %tobool7, label %land.lhs.true8, label %if.end27, !dbg !7649

land.lhs.true8:                                   ; preds = %if.then
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !7650
  %13 = load float, float* %arrayidx, align 4, !dbg !7650
  %cmp = fcmp une float %13, 0.000000e+00, !dbg !7651
  br i1 %cmp, label %if.then9, label %if.end27, !dbg !7652

if.then9:                                         ; preds = %land.lhs.true8
  %14 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7653
  %flag10 = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %14, i32 0, i32 1, !dbg !7656
  %15 = load i32, i32* %flag10, align 8, !dbg !7656
  %and11 = and i32 %15, 8, !dbg !7657
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7657
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !7658

if.then13:                                        ; preds = %if.then9
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !7659
  %16 = load float, float* %arrayidx14, align 4, !dbg !7659
  %sub = fsub float %16, 1.000000e+00, !dbg !7661
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !7662
  %17 = load float, float* %arrayidx15, align 4, !dbg !7663
  %add = fadd float %17, %sub, !dbg !7663
  store float %add, float* %arrayidx15, align 4, !dbg !7663
  %18 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7664
  %matrix16 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %18, i32 0, i32 3, !dbg !7665
  %arrayidx17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix16, i64 0, i64 0, !dbg !7664
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx17, i64 0, i64 0, !dbg !7664
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !7666
  %19 = load float, float* %arrayidx19, align 4, !dbg !7666
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !7667
  %20 = load float, float* %arrayidx20, align 4, !dbg !7667
  %div = fdiv float %19, %20, !dbg !7668
  call void @mul_v3_fl(float* %arraydecay18, float %div), !dbg !7669
  br label %if.end, !dbg !7670

if.else:                                          ; preds = %if.then9
  %21 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7671
  %matrix21 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %21, i32 0, i32 3, !dbg !7672
  %arrayidx22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix21, i64 0, i64 0, !dbg !7671
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx22, i64 0, i64 0, !dbg !7671
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !7673
  %22 = load float, float* %arrayidx24, align 4, !dbg !7673
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !7674
  %23 = load float, float* %arrayidx25, align 4, !dbg !7674
  %div26 = fdiv float %22, %23, !dbg !7675
  call void @mul_v3_fl(float* %arraydecay23, float %div26), !dbg !7676
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  br label %if.end27, !dbg !7677

if.end27:                                         ; preds = %if.end, %land.lhs.true8, %if.then
  %24 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7678
  %flag28 = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %24, i32 0, i32 1, !dbg !7680
  %25 = load i32, i32* %flag28, align 8, !dbg !7680
  %and29 = and i32 %25, 2, !dbg !7681
  %tobool30 = icmp ne i32 %and29, 0, !dbg !7681
  br i1 %tobool30, label %land.lhs.true31, label %if.end57, !dbg !7682

land.lhs.true31:                                  ; preds = %if.end27
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 1, !dbg !7683
  %26 = load float, float* %arrayidx32, align 4, !dbg !7683
  %cmp33 = fcmp une float %26, 0.000000e+00, !dbg !7684
  br i1 %cmp33, label %if.then34, label %if.end57, !dbg !7685

if.then34:                                        ; preds = %land.lhs.true31
  %27 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7686
  %flag35 = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %27, i32 0, i32 1, !dbg !7689
  %28 = load i32, i32* %flag35, align 8, !dbg !7689
  %and36 = and i32 %28, 8, !dbg !7690
  %tobool37 = icmp ne i32 %and36, 0, !dbg !7690
  br i1 %tobool37, label %if.then38, label %if.else49, !dbg !7691

if.then38:                                        ; preds = %if.then34
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 1, !dbg !7692
  %29 = load float, float* %arrayidx39, align 4, !dbg !7692
  %sub40 = fsub float %29, 1.000000e+00, !dbg !7694
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !7695
  %30 = load float, float* %arrayidx41, align 4, !dbg !7696
  %add42 = fadd float %30, %sub40, !dbg !7696
  store float %add42, float* %arrayidx41, align 4, !dbg !7696
  %31 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7697
  %matrix43 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %31, i32 0, i32 3, !dbg !7698
  %arrayidx44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix43, i64 0, i64 1, !dbg !7697
  %arraydecay45 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx44, i64 0, i64 0, !dbg !7697
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !7699
  %32 = load float, float* %arrayidx46, align 4, !dbg !7699
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 1, !dbg !7700
  %33 = load float, float* %arrayidx47, align 4, !dbg !7700
  %div48 = fdiv float %32, %33, !dbg !7701
  call void @mul_v3_fl(float* %arraydecay45, float %div48), !dbg !7702
  br label %if.end56, !dbg !7703

if.else49:                                        ; preds = %if.then34
  %34 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7704
  %matrix50 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %34, i32 0, i32 3, !dbg !7705
  %arrayidx51 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix50, i64 0, i64 1, !dbg !7704
  %arraydecay52 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx51, i64 0, i64 0, !dbg !7704
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !7706
  %35 = load float, float* %arrayidx53, align 4, !dbg !7706
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 1, !dbg !7707
  %36 = load float, float* %arrayidx54, align 4, !dbg !7707
  %div55 = fdiv float %35, %36, !dbg !7708
  call void @mul_v3_fl(float* %arraydecay52, float %div55), !dbg !7709
  br label %if.end56

if.end56:                                         ; preds = %if.else49, %if.then38
  br label %if.end57, !dbg !7710

if.end57:                                         ; preds = %if.end56, %land.lhs.true31, %if.end27
  %37 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7711
  %flag58 = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %37, i32 0, i32 1, !dbg !7713
  %38 = load i32, i32* %flag58, align 8, !dbg !7713
  %and59 = and i32 %38, 4, !dbg !7714
  %tobool60 = icmp ne i32 %and59, 0, !dbg !7714
  br i1 %tobool60, label %land.lhs.true61, label %if.end87, !dbg !7715

land.lhs.true61:                                  ; preds = %if.end57
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 2, !dbg !7716
  %39 = load float, float* %arrayidx62, align 4, !dbg !7716
  %cmp63 = fcmp une float %39, 0.000000e+00, !dbg !7717
  br i1 %cmp63, label %if.then64, label %if.end87, !dbg !7718

if.then64:                                        ; preds = %land.lhs.true61
  %40 = load %struct.bSizeLikeConstraint*, %struct.bSizeLikeConstraint** %data, align 8, !dbg !7719
  %flag65 = getelementptr inbounds %struct.bSizeLikeConstraint, %struct.bSizeLikeConstraint* %40, i32 0, i32 1, !dbg !7722
  %41 = load i32, i32* %flag65, align 8, !dbg !7722
  %and66 = and i32 %41, 8, !dbg !7723
  %tobool67 = icmp ne i32 %and66, 0, !dbg !7723
  br i1 %tobool67, label %if.then68, label %if.else79, !dbg !7724

if.then68:                                        ; preds = %if.then64
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 2, !dbg !7725
  %42 = load float, float* %arrayidx69, align 4, !dbg !7725
  %sub70 = fsub float %42, 1.000000e+00, !dbg !7727
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !7728
  %43 = load float, float* %arrayidx71, align 4, !dbg !7729
  %add72 = fadd float %43, %sub70, !dbg !7729
  store float %add72, float* %arrayidx71, align 4, !dbg !7729
  %44 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7730
  %matrix73 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %44, i32 0, i32 3, !dbg !7731
  %arrayidx74 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix73, i64 0, i64 2, !dbg !7730
  %arraydecay75 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx74, i64 0, i64 0, !dbg !7730
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !7732
  %45 = load float, float* %arrayidx76, align 4, !dbg !7732
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 2, !dbg !7733
  %46 = load float, float* %arrayidx77, align 4, !dbg !7733
  %div78 = fdiv float %45, %46, !dbg !7734
  call void @mul_v3_fl(float* %arraydecay75, float %div78), !dbg !7735
  br label %if.end86, !dbg !7736

if.else79:                                        ; preds = %if.then64
  %47 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7737
  %matrix80 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %47, i32 0, i32 3, !dbg !7738
  %arrayidx81 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix80, i64 0, i64 2, !dbg !7737
  %arraydecay82 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx81, i64 0, i64 0, !dbg !7737
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !7739
  %48 = load float, float* %arrayidx83, align 4, !dbg !7739
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 2, !dbg !7740
  %49 = load float, float* %arrayidx84, align 4, !dbg !7740
  %div85 = fdiv float %48, %49, !dbg !7741
  call void @mul_v3_fl(float* %arraydecay82, float %div85), !dbg !7742
  br label %if.end86

if.end86:                                         ; preds = %if.else79, %if.then68
  br label %if.end87, !dbg !7743

if.end87:                                         ; preds = %if.end86, %land.lhs.true61, %if.end57
  br label %if.end88, !dbg !7744

if.end88:                                         ; preds = %if.end87, %land.lhs.true, %entry
  ret void, !dbg !7745
}

; Function Attrs: noinline nounwind uwtable
define internal void @pycon_free(%struct.bConstraint* %con) #0 !dbg !7746 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %data = alloca %struct.bPythonConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7747, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.declare(metadata %struct.bPythonConstraint** %data, metadata !7749, metadata !DIExpression()), !dbg !7750
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7751
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !7752
  %1 = load i8*, i8** %data1, align 8, !dbg !7752
  %2 = bitcast i8* %1 to %struct.bPythonConstraint*, !dbg !7751
  store %struct.bPythonConstraint* %2, %struct.bPythonConstraint** %data, align 8, !dbg !7750
  %3 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data, align 8, !dbg !7753
  %prop = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %3, i32 0, i32 1, !dbg !7754
  %4 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !7754
  call void @IDP_FreeProperty(%struct.IDProperty* %4), !dbg !7755
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7756
  %6 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data, align 8, !dbg !7757
  %prop2 = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %6, i32 0, i32 1, !dbg !7758
  %7 = load %struct.IDProperty*, %struct.IDProperty** %prop2, align 8, !dbg !7758
  %8 = bitcast %struct.IDProperty* %7 to i8*, !dbg !7757
  call void %5(i8* %8), !dbg !7756
  %9 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data, align 8, !dbg !7759
  %targets = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %9, i32 0, i32 4, !dbg !7760
  call void @BLI_freelistN(%struct.ListBase* %targets), !dbg !7761
  ret void, !dbg !7762
}

; Function Attrs: noinline nounwind uwtable
define internal void @pycon_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !7763 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bPythonConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !7768, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.declare(metadata %struct.bPythonConstraint** %data, metadata !7770, metadata !DIExpression()), !dbg !7771
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7772
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !7773
  %1 = load i8*, i8** %data1, align 8, !dbg !7773
  %2 = bitcast i8* %1 to %struct.bPythonConstraint*, !dbg !7772
  store %struct.bPythonConstraint* %2, %struct.bPythonConstraint** %data, align 8, !dbg !7771
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7774, metadata !DIExpression()), !dbg !7775
  %3 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data, align 8, !dbg !7776
  %targets = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %3, i32 0, i32 4, !dbg !7778
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !7779
  %4 = load i8*, i8** %first, align 8, !dbg !7779
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !7776
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !7780
  br label %for.cond, !dbg !7781

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7782
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !7784
  br i1 %tobool, label %for.body, label %for.end, !dbg !7784

for.body:                                         ; preds = %for.cond
  %7 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !7785
  %8 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7786
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7787
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !7788
  %10 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !7789
  %11 = load i8*, i8** %userdata.addr, align 8, !dbg !7790
  call void %7(%struct.bConstraint* %8, %struct.ID** %10, i8 zeroext 0, i8* %11), !dbg !7785
  br label %for.inc, !dbg !7785

for.inc:                                          ; preds = %for.body
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7791
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 0, !dbg !7792
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !7792
  store %struct.bConstraintTarget* %13, %struct.bConstraintTarget** %ct, align 8, !dbg !7793
  br label %for.cond, !dbg !7794, !llvm.loop !7795

for.end:                                          ; preds = %for.cond
  %14 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !7797
  %15 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7798
  %16 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data, align 8, !dbg !7799
  %text = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %16, i32 0, i32 0, !dbg !7800
  %17 = bitcast %struct.Text** %text to %struct.ID**, !dbg !7801
  %18 = load i8*, i8** %userdata.addr, align 8, !dbg !7802
  call void %14(%struct.bConstraint* %15, %struct.ID** %17, i8 zeroext 1, i8* %18), !dbg !7797
  ret void, !dbg !7803
}

; Function Attrs: noinline nounwind uwtable
define internal void @pycon_copy(%struct.bConstraint* %con, %struct.bConstraint* %srccon) #0 !dbg !7804 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %srccon.addr = alloca %struct.bConstraint*, align 8
  %pycon = alloca %struct.bPythonConstraint*, align 8
  %opycon = alloca %struct.bPythonConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7807, metadata !DIExpression()), !dbg !7808
  store %struct.bConstraint* %srccon, %struct.bConstraint** %srccon.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %srccon.addr, metadata !7809, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.declare(metadata %struct.bPythonConstraint** %pycon, metadata !7811, metadata !DIExpression()), !dbg !7812
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7813
  %data = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !7814
  %1 = load i8*, i8** %data, align 8, !dbg !7814
  %2 = bitcast i8* %1 to %struct.bPythonConstraint*, !dbg !7815
  store %struct.bPythonConstraint* %2, %struct.bPythonConstraint** %pycon, align 8, !dbg !7812
  call void @llvm.dbg.declare(metadata %struct.bPythonConstraint** %opycon, metadata !7816, metadata !DIExpression()), !dbg !7817
  %3 = load %struct.bConstraint*, %struct.bConstraint** %srccon.addr, align 8, !dbg !7818
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %3, i32 0, i32 2, !dbg !7819
  %4 = load i8*, i8** %data1, align 8, !dbg !7819
  %5 = bitcast i8* %4 to %struct.bPythonConstraint*, !dbg !7820
  store %struct.bPythonConstraint* %5, %struct.bPythonConstraint** %opycon, align 8, !dbg !7817
  %6 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %opycon, align 8, !dbg !7821
  %prop = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %6, i32 0, i32 1, !dbg !7822
  %7 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !7822
  %call = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %7), !dbg !7823
  %8 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %pycon, align 8, !dbg !7824
  %prop2 = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %8, i32 0, i32 1, !dbg !7825
  store %struct.IDProperty* %call, %struct.IDProperty** %prop2, align 8, !dbg !7826
  %9 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %pycon, align 8, !dbg !7827
  %targets = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %9, i32 0, i32 4, !dbg !7828
  %10 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %opycon, align 8, !dbg !7829
  %targets3 = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %10, i32 0, i32 4, !dbg !7830
  call void @BLI_duplicatelist(%struct.ListBase* %targets, %struct.ListBase* %targets3), !dbg !7831
  ret void, !dbg !7832
}

; Function Attrs: noinline nounwind uwtable
define internal void @pycon_new_data(i8* %cdata) #0 !dbg !7833 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bPythonConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !7834, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.declare(metadata %struct.bPythonConstraint** %data, metadata !7836, metadata !DIExpression()), !dbg !7837
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !7838
  %1 = bitcast i8* %0 to %struct.bPythonConstraint*, !dbg !7839
  store %struct.bPythonConstraint* %1, %struct.bPythonConstraint** %data, align 8, !dbg !7837
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7840
  %call = call i8* %2(i64 128, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0)), !dbg !7840
  %3 = bitcast i8* %call to %struct.IDProperty*, !dbg !7840
  %4 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data, align 8, !dbg !7841
  %prop = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %4, i32 0, i32 1, !dbg !7842
  store %struct.IDProperty* %3, %struct.IDProperty** %prop, align 8, !dbg !7843
  %5 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data, align 8, !dbg !7844
  %prop1 = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %5, i32 0, i32 1, !dbg !7845
  %6 = load %struct.IDProperty*, %struct.IDProperty** %prop1, align 8, !dbg !7845
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %6, i32 0, i32 2, !dbg !7846
  store i8 6, i8* %type, align 8, !dbg !7847
  ret void, !dbg !7848
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pycon_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !7849 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bPythonConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7850, metadata !DIExpression()), !dbg !7851
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !7852, metadata !DIExpression()), !dbg !7853
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7854
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !7854
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7856

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7857
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !7857
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7858

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bPythonConstraint** %data, metadata !7859, metadata !DIExpression()), !dbg !7861
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7862
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !7863
  %3 = load i8*, i8** %data2, align 8, !dbg !7863
  %4 = bitcast i8* %3 to %struct.bPythonConstraint*, !dbg !7862
  store %struct.bPythonConstraint* %4, %struct.bPythonConstraint** %data, align 8, !dbg !7861
  %5 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data, align 8, !dbg !7864
  %targets = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %5, i32 0, i32 4, !dbg !7865
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !7866
  %6 = load i8*, i8** %first, align 8, !dbg !7866
  %7 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7867
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %7, i32 0, i32 0, !dbg !7868
  store i8* %6, i8** %first3, align 8, !dbg !7869
  %8 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data, align 8, !dbg !7870
  %targets4 = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %8, i32 0, i32 4, !dbg !7871
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets4, i32 0, i32 1, !dbg !7872
  %9 = load i8*, i8** %last, align 8, !dbg !7872
  %10 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7873
  %last5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %10, i32 0, i32 1, !dbg !7874
  store i8* %9, i8** %last5, align 8, !dbg !7875
  %11 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data, align 8, !dbg !7876
  %tarnum = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %11, i32 0, i32 3, !dbg !7877
  %12 = load i32, i32* %tarnum, align 4, !dbg !7877
  store i32 %12, i32* %retval, align 4, !dbg !7878
  br label %return, !dbg !7878

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !7879
  br label %return, !dbg !7879

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !7880
  ret i32 %13, !dbg !7880
}

; Function Attrs: noinline nounwind uwtable
define internal void @pycon_get_tarmat(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.bConstraintTarget* %ct, float %UNUSED_ctime) #0 !dbg !7881 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %ct.addr = alloca %struct.bConstraintTarget*, align 8
  %UNUSED_ctime.addr = alloca float, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7882, metadata !DIExpression()), !dbg !7883
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !7884, metadata !DIExpression()), !dbg !7885
  store %struct.bConstraintTarget* %ct, %struct.bConstraintTarget** %ct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct.addr, metadata !7886, metadata !DIExpression()), !dbg !7887
  store float %UNUSED_ctime, float* %UNUSED_ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_ctime.addr, metadata !7888, metadata !DIExpression()), !dbg !7889
  %0 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7890
  %tobool = icmp ne %struct.bConstraintTarget* %0, null, !dbg !7890
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7890

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7890
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %1, i32 0, i32 2, !dbg !7890
  %2 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7890
  %tobool1 = icmp ne %struct.Object* %2, null, !dbg !7890
  br i1 %tobool1, label %if.then, label %if.else, !dbg !7892

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7893
  %tar2 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %3, i32 0, i32 2, !dbg !7896
  %4 = load %struct.Object*, %struct.Object** %tar2, align 8, !dbg !7896
  %type = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !7897
  %5 = load i16, i16* %type, align 8, !dbg !7897
  %conv = sext i16 %5 to i32, !dbg !7893
  %cmp = icmp eq i32 %conv, 2, !dbg !7898
  br i1 %cmp, label %if.then4, label %if.end10, !dbg !7899

if.then4:                                         ; preds = %if.then
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7900
  %tar5 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %6, i32 0, i32 2, !dbg !7903
  %7 = load %struct.Object*, %struct.Object** %tar5, align 8, !dbg !7903
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 118, !dbg !7904
  %8 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !7904
  %cmp6 = icmp eq %struct.CurveCache* %8, null, !dbg !7905
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !7906

if.then8:                                         ; preds = %if.then4
  %9 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7907
  %scene = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %9, i32 0, i32 0, !dbg !7909
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7909
  %11 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7910
  %tar9 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %11, i32 0, i32 2, !dbg !7911
  %12 = load %struct.Object*, %struct.Object** %tar9, align 8, !dbg !7911
  call void @BKE_displist_make_curveTypes(%struct.Scene* %10, %struct.Object* %12, i8 zeroext 0), !dbg !7912
  br label %if.end, !dbg !7913

if.end:                                           ; preds = %if.then8, %if.then4
  br label %if.end10, !dbg !7914

if.end10:                                         ; preds = %if.end, %if.then
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7915
  %tar11 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %13, i32 0, i32 2, !dbg !7916
  %14 = load %struct.Object*, %struct.Object** %tar11, align 8, !dbg !7916
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7917
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 3, !dbg !7918
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !7917
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7919
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 4, !dbg !7920
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !7919
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7921
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !7922
  %18 = load i16, i16* %space, align 8, !dbg !7922
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7923
  %headtail = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 10, !dbg !7924
  %20 = load float, float* %headtail, align 4, !dbg !7924
  call void @constraint_target_to_mat4(%struct.Object* %14, i8* %arraydecay, [4 x float]* %arraydecay12, i16 signext 0, i16 signext %18, float %20), !dbg !7925
  br label %if.end18, !dbg !7926

if.else:                                          ; preds = %land.lhs.true, %entry
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7927
  %tobool13 = icmp ne %struct.bConstraintTarget* %21, null, !dbg !7927
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !7929

if.then14:                                        ; preds = %if.else
  %22 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !7930
  %matrix15 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %22, i32 0, i32 4, !dbg !7931
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix15, i64 0, i64 0, !dbg !7930
  call void @unit_m4([4 x float]* %arraydecay16), !dbg !7932
  br label %if.end17, !dbg !7932

if.end17:                                         ; preds = %if.then14, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end10
  ret void, !dbg !7933
}

; Function Attrs: noinline nounwind uwtable
define internal void @pycon_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !7934 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7935, metadata !DIExpression()), !dbg !7936
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !7937, metadata !DIExpression()), !dbg !7938
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !7939, metadata !DIExpression()), !dbg !7940
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7941
  %1 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !7942
  %2 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !7943
  ret void, !dbg !7944
}

declare dso_local void @IDP_FreeProperty(%struct.IDProperty*) #2

declare dso_local %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @actcon_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !7945 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bActionConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7946, metadata !DIExpression()), !dbg !7947
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !7948, metadata !DIExpression()), !dbg !7949
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !7950, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.declare(metadata %struct.bActionConstraint** %data, metadata !7952, metadata !DIExpression()), !dbg !7953
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7954
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !7955
  %1 = load i8*, i8** %data1, align 8, !dbg !7955
  %2 = bitcast i8* %1 to %struct.bActionConstraint*, !dbg !7954
  store %struct.bActionConstraint* %2, %struct.bActionConstraint** %data, align 8, !dbg !7953
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !7956
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7957
  %5 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !7958
  %tar = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %5, i32 0, i32 0, !dbg !7959
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !7960
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !7961
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !7956
  %8 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !7962
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7963
  %10 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !7964
  %act = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %10, i32 0, i32 8, !dbg !7965
  %11 = bitcast %struct.bAction** %act to %struct.ID**, !dbg !7966
  %12 = load i8*, i8** %userdata.addr, align 8, !dbg !7967
  call void %8(%struct.bConstraint* %9, %struct.ID** %11, i8 zeroext 1, i8* %12), !dbg !7962
  ret void, !dbg !7968
}

; Function Attrs: noinline nounwind uwtable
define internal void @actcon_new_data(i8* %cdata) #0 !dbg !7969 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bActionConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !7970, metadata !DIExpression()), !dbg !7971
  call void @llvm.dbg.declare(metadata %struct.bActionConstraint** %data, metadata !7972, metadata !DIExpression()), !dbg !7973
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !7974
  %1 = bitcast i8* %0 to %struct.bActionConstraint*, !dbg !7975
  store %struct.bActionConstraint* %1, %struct.bActionConstraint** %data, align 8, !dbg !7973
  %2 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !7976
  %type = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %2, i32 0, i32 1, !dbg !7977
  store i16 20, i16* %type, align 8, !dbg !7978
  ret void, !dbg !7979
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @actcon_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !7980 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bActionConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !7981, metadata !DIExpression()), !dbg !7982
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !7983, metadata !DIExpression()), !dbg !7984
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7985
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !7985
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !7987

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7988
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !7988
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !7989

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bActionConstraint** %data, metadata !7990, metadata !DIExpression()), !dbg !7992
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7993
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !7994
  %3 = load i8*, i8** %data2, align 8, !dbg !7994
  %4 = bitcast i8* %3 to %struct.bActionConstraint*, !dbg !7993
  store %struct.bActionConstraint* %4, %struct.bActionConstraint** %data, align 8, !dbg !7992
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !7995, metadata !DIExpression()), !dbg !7996
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7997
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !7997
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !7997
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !7997
  %7 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !7997
  %tar = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %7, i32 0, i32 0, !dbg !7997
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7997
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7997
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !7997
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !7997
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7997
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !7997
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !7997
  %11 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !7997
  %subtarget4 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %11, i32 0, i32 9, !dbg !7997
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !7997
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !7997
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !7997
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !7997
  %13 = load i8, i8* %tarspace, align 1, !dbg !7997
  %conv = zext i8 %13 to i16, !dbg !7997
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7997
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !7997
  store i16 %conv, i16* %space, align 8, !dbg !7997
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7997
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !7997
  store i16 1, i16* %flag, align 2, !dbg !7997
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7999
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !7999
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !7999
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !7999
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !7997

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8001
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !8001
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !8001
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !8001
  %20 = load i16, i16* %type, align 8, !dbg !8001
  %conv11 = sext i16 %20 to i32, !dbg !8001
  %cmp = icmp eq i32 %conv11, 25, !dbg !8001
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !8001

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8001
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !8001
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !8001
  %22 = load i8, i8* %arrayidx, align 8, !dbg !8001
  %conv15 = zext i8 %22 to i32, !dbg !8001
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !8001
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !8004

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !8005, metadata !DIExpression()), !dbg !8007
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8007
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !8007
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !8007
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !8007
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8007
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8007
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !8007
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !8007
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !8007
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !8007
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8007
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !8007
  store i16 2, i16* %type22, align 4, !dbg !8007
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8007
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !8007
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !8007

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8007
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !8007
  %30 = load i16, i16* %rotmode, align 4, !dbg !8007
  %conv24 = sext i16 %30 to i32, !dbg !8007
  br label %cond.end, !dbg !8007

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !8007

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !8007
  %conv25 = trunc i32 %cond to i16, !dbg !8007
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8007
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !8007
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !8007
  br label %if.end49, !dbg !8007

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8008
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !8008
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !8008
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !8008
  %34 = load i16, i16* %type27, align 8, !dbg !8008
  %conv28 = sext i16 %34 to i32, !dbg !8008
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !8008
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !8008

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8008
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !8008
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !8008
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !8008
  %37 = load i16, i16* %type32, align 8, !dbg !8008
  %conv33 = sext i16 %37 to i32, !dbg !8008
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !8008
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !8008

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8008
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !8008
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !8008
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !8008
  %conv39 = zext i8 %39 to i32, !dbg !8008
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !8008
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !8001

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8010
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !8010
  store i16 3, i16* %type42, align 4, !dbg !8010
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8010
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !8010
  store i16 1, i16* %rotOrder43, align 2, !dbg !8010
  br label %if.end, !dbg !8010

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8012
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !8012
  store i16 1, i16* %type45, align 4, !dbg !8012
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8012
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !8012
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !8012
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !8012
  %45 = load i16, i16* %rotmode47, align 8, !dbg !8012
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8012
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !8012
  store i16 %45, i16* %rotOrder48, align 2, !dbg !8012
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !8004

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !7997
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !7997
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !7997
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !7997
  store i32 1, i32* %retval, align 4, !dbg !8014
  br label %return, !dbg !8014

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !8015
  br label %return, !dbg !8015

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !8016
  ret i32 %50, !dbg !8016
}

; Function Attrs: noinline nounwind uwtable
define internal void @actcon_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !8017 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bActionConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !8018, metadata !DIExpression()), !dbg !8019
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !8020, metadata !DIExpression()), !dbg !8021
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !8022, metadata !DIExpression()), !dbg !8023
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8024
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !8024
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !8026

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8027
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !8027
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !8028

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bActionConstraint** %data, metadata !8029, metadata !DIExpression()), !dbg !8031
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8032
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !8033
  %3 = load i8*, i8** %data2, align 8, !dbg !8033
  %4 = bitcast i8* %3 to %struct.bActionConstraint*, !dbg !8032
  store %struct.bActionConstraint* %4, %struct.bActionConstraint** %data, align 8, !dbg !8031
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !8034, metadata !DIExpression()), !dbg !8035
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8036
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !8037
  %6 = load i8*, i8** %first, align 8, !dbg !8037
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !8036
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !8035
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8038
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !8038
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !8041

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !8042, metadata !DIExpression()), !dbg !8044
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8044
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !8044
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !8044
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !8044
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !8045
  %conv = zext i8 %11 to i32, !dbg !8045
  %cmp = icmp eq i32 %conv, 0, !dbg !8045
  br i1 %cmp, label %if.then6, label %if.end, !dbg !8044

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8047
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !8047
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !8047
  %14 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8047
  %tar7 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %14, i32 0, i32 0, !dbg !8047
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !8047
  %15 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8047
  %subtarget = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %15, i32 0, i32 9, !dbg !8047
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !8047
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8047
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !8047
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !8047
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !8047
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8047
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !8047
  %18 = load i16, i16* %space, align 8, !dbg !8047
  %conv10 = trunc i16 %18 to i8, !dbg !8047
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8047
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !8047
  store i8 %conv10, i8* %tarspace, align 1, !dbg !8047
  br label %if.end, !dbg !8047

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8044
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8044
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !8044
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !8044
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !8044
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !8044
  br label %if.end11, !dbg !8044

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !8049

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !8050
}

; Function Attrs: noinline nounwind uwtable
define internal void @actcon_get_tarmat(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.bConstraintTarget* %ct, float %UNUSED_ctime) #0 !dbg !8051 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %ct.addr = alloca %struct.bConstraintTarget*, align 8
  %UNUSED_ctime.addr = alloca float, align 4
  %data = alloca %struct.bActionConstraint*, align 8
  %tempmat = alloca [4 x [4 x float]], align 16
  %vec = alloca [3 x float], align 4
  %s = alloca float, align 4
  %t = alloca float, align 4
  %axis = alloca i16, align 2
  %workob = alloca %struct.Object, align 8
  %workob73 = alloca %struct.Object, align 8
  %pose = alloca %struct.bPose*, align 8
  %pchan74 = alloca %struct.bPoseChannel*, align 8
  %tchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !8052, metadata !DIExpression()), !dbg !8053
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !8054, metadata !DIExpression()), !dbg !8055
  store %struct.bConstraintTarget* %ct, %struct.bConstraintTarget** %ct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct.addr, metadata !8056, metadata !DIExpression()), !dbg !8057
  store float %UNUSED_ctime, float* %UNUSED_ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_ctime.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.declare(metadata %struct.bActionConstraint** %data, metadata !8060, metadata !DIExpression()), !dbg !8061
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8062
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !8063
  %1 = load i8*, i8** %data1, align 8, !dbg !8063
  %2 = bitcast i8* %1 to %struct.bActionConstraint*, !dbg !8062
  store %struct.bActionConstraint* %2, %struct.bActionConstraint** %data, align 8, !dbg !8061
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !8064
  %tobool = icmp ne %struct.bConstraintTarget* %3, null, !dbg !8064
  br i1 %tobool, label %land.lhs.true, label %if.end92, !dbg !8064

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !8064
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %4, i32 0, i32 2, !dbg !8064
  %5 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !8064
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !8064
  br i1 %tobool2, label %if.then, label %if.end92, !dbg !8066

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tempmat, metadata !8067, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !8070, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.declare(metadata float* %s, metadata !8072, metadata !DIExpression()), !dbg !8073
  call void @llvm.dbg.declare(metadata float* %t, metadata !8074, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.declare(metadata i16* %axis, metadata !8076, metadata !DIExpression()), !dbg !8077
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !8078
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %6, i32 0, i32 4, !dbg !8079
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !8078
  call void @unit_m4([4 x float]* %arraydecay), !dbg !8080
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !8081
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !8082
  %8 = load %struct.Object*, %struct.Object** %tar3, align 8, !dbg !8082
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !8083
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 3, !dbg !8084
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !8083
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 0, !dbg !8085
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !8086
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 5, !dbg !8087
  %11 = load i16, i16* %space, align 8, !dbg !8087
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8088
  %headtail = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 10, !dbg !8089
  %13 = load float, float* %headtail, align 4, !dbg !8089
  call void @constraint_target_to_mat4(%struct.Object* %8, i8* %arraydecay4, [4 x float]* %arraydecay5, i16 signext 0, i16 signext %11, float %13), !dbg !8090
  %14 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8091
  %type = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %14, i32 0, i32 1, !dbg !8093
  %15 = load i16, i16* %type, align 8, !dbg !8093
  %conv = sext i16 %15 to i32, !dbg !8091
  %cmp = icmp slt i32 %conv, 10, !dbg !8094
  br i1 %cmp, label %if.then7, label %if.else, !dbg !8095

if.then7:                                         ; preds = %if.then
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8096
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 0, !dbg !8098
  call void @mat4_to_eul(float* %arraydecay8, [4 x float]* %arraydecay9), !dbg !8099
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8100
  call void @mul_v3_fl(float* %arraydecay10, float 0x404CA5DC20000000), !dbg !8101
  %16 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8102
  %type11 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %16, i32 0, i32 1, !dbg !8103
  %17 = load i16, i16* %type11, align 8, !dbg !8103
  store i16 %17, i16* %axis, align 2, !dbg !8104
  br label %if.end29, !dbg !8105

if.else:                                          ; preds = %if.then
  %18 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8106
  %type12 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %18, i32 0, i32 1, !dbg !8108
  %19 = load i16, i16* %type12, align 8, !dbg !8108
  %conv13 = sext i16 %19 to i32, !dbg !8106
  %cmp14 = icmp slt i32 %conv13, 20, !dbg !8109
  br i1 %cmp14, label %if.then16, label %if.else22, !dbg !8110

if.then16:                                        ; preds = %if.else
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8111
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 0, !dbg !8113
  call void @mat4_to_size(float* %arraydecay17, [4 x float]* %arraydecay18), !dbg !8114
  %20 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8115
  %type19 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %20, i32 0, i32 1, !dbg !8116
  %21 = load i16, i16* %type19, align 8, !dbg !8116
  %conv20 = sext i16 %21 to i32, !dbg !8115
  %sub = sub nsw i32 %conv20, 10, !dbg !8117
  %conv21 = trunc i32 %sub to i16, !dbg !8115
  store i16 %conv21, i16* %axis, align 2, !dbg !8118
  br label %if.end, !dbg !8119

if.else22:                                        ; preds = %if.else
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8120
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tempmat, i64 0, i64 3, !dbg !8122
  %arraydecay24 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !8122
  call void @copy_v3_v3(float* %arraydecay23, float* %arraydecay24), !dbg !8123
  %22 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8124
  %type25 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %22, i32 0, i32 1, !dbg !8125
  %23 = load i16, i16* %type25, align 8, !dbg !8125
  %conv26 = sext i16 %23 to i32, !dbg !8124
  %sub27 = sub nsw i32 %conv26, 20, !dbg !8126
  %conv28 = trunc i32 %sub27 to i16, !dbg !8124
  store i16 %conv28, i16* %axis, align 2, !dbg !8127
  br label %if.end

if.end:                                           ; preds = %if.else22, %if.then16
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.then7
  %24 = load i16, i16* %axis, align 2, !dbg !8128
  %idxprom = sext i16 %24 to i64, !dbg !8129
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 %idxprom, !dbg !8129
  %25 = load float, float* %arrayidx30, align 4, !dbg !8129
  %26 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8130
  %min = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %26, i32 0, i32 5, !dbg !8131
  %27 = load float, float* %min, align 4, !dbg !8131
  %sub31 = fsub float %25, %27, !dbg !8132
  %28 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8133
  %max = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %28, i32 0, i32 6, !dbg !8134
  %29 = load float, float* %max, align 8, !dbg !8134
  %30 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8135
  %min32 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %30, i32 0, i32 5, !dbg !8136
  %31 = load float, float* %min32, align 4, !dbg !8136
  %sub33 = fsub float %29, %31, !dbg !8137
  %div = fdiv float %sub31, %sub33, !dbg !8138
  store float %div, float* %s, align 4, !dbg !8139
  %32 = load float, float* %s, align 4, !dbg !8140
  %cmp34 = fcmp olt float %32, 0.000000e+00, !dbg !8140
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !8143

if.then36:                                        ; preds = %if.end29
  store float 0.000000e+00, float* %s, align 4, !dbg !8140
  br label %if.end42, !dbg !8140

if.else37:                                        ; preds = %if.end29
  %33 = load float, float* %s, align 4, !dbg !8144
  %cmp38 = fcmp ogt float %33, 1.000000e+00, !dbg !8144
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !8140

if.then40:                                        ; preds = %if.else37
  store float 1.000000e+00, float* %s, align 4, !dbg !8144
  br label %if.end41, !dbg !8144

if.end41:                                         ; preds = %if.then40, %if.else37
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then36
  %34 = load float, float* %s, align 4, !dbg !8146
  %35 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8147
  %end = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %35, i32 0, i32 4, !dbg !8148
  %36 = load i32, i32* %end, align 8, !dbg !8148
  %37 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8149
  %start = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %37, i32 0, i32 3, !dbg !8150
  %38 = load i32, i32* %start, align 4, !dbg !8150
  %sub43 = sub nsw i32 %36, %38, !dbg !8151
  %conv44 = sitofp i32 %sub43 to float, !dbg !8152
  %mul = fmul float %34, %conv44, !dbg !8153
  %39 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8154
  %start45 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %39, i32 0, i32 3, !dbg !8155
  %40 = load i32, i32* %start45, align 4, !dbg !8155
  %conv46 = sitofp i32 %40 to float, !dbg !8154
  %add = fadd float %mul, %conv46, !dbg !8156
  store float %add, float* %t, align 4, !dbg !8157
  %41 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !8158
  %and = and i32 %41, 1, !dbg !8160
  %tobool47 = icmp ne i32 %and, 0, !dbg !8160
  br i1 %tobool47, label %if.then48, label %if.end56, !dbg !8161

if.then48:                                        ; preds = %if.end42
  %42 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8162
  %name = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %42, i32 0, i32 7, !dbg !8163
  %arraydecay49 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !8162
  %43 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8164
  %ob = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %43, i32 0, i32 1, !dbg !8165
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8165
  %id = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 0, !dbg !8166
  %name50 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !8167
  %arraydecay51 = getelementptr inbounds [66 x i8], [66 x i8]* %name50, i64 0, i64 0, !dbg !8164
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay51, i64 2, !dbg !8168
  %45 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8169
  %pchan = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %45, i32 0, i32 2, !dbg !8170
  %46 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8170
  %tobool52 = icmp ne %struct.bPoseChannel* %46, null, !dbg !8171
  br i1 %tobool52, label %cond.true, label %cond.false, !dbg !8171

cond.true:                                        ; preds = %if.then48
  %47 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8172
  %pchan53 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %47, i32 0, i32 2, !dbg !8173
  %48 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan53, align 8, !dbg !8173
  %name54 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %48, i32 0, i32 4, !dbg !8174
  %arraydecay55 = getelementptr inbounds [64 x i8], [64 x i8]* %name54, i64 0, i64 0, !dbg !8172
  br label %cond.end, !dbg !8171

cond.false:                                       ; preds = %if.then48
  br label %cond.end, !dbg !8171

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay55, %cond.true ], [ null, %cond.false ], !dbg !8171
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay49, i8* %add.ptr, i8* %cond), !dbg !8175
  br label %if.end56, !dbg !8175

if.end56:                                         ; preds = %cond.end, %if.end42
  %49 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8176
  %type57 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %49, i32 0, i32 5, !dbg !8178
  %50 = load i16, i16* %type57, align 8, !dbg !8178
  %conv58 = sext i16 %50 to i32, !dbg !8176
  %cmp59 = icmp eq i32 %conv58, 1, !dbg !8179
  br i1 %cmp59, label %if.then63, label %lor.lhs.false, !dbg !8180

lor.lhs.false:                                    ; preds = %if.end56
  %51 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8181
  %flag = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %51, i32 0, i32 7, !dbg !8182
  %52 = load i32, i32* %flag, align 4, !dbg !8182
  %and61 = and i32 %52, 1, !dbg !8183
  %tobool62 = icmp ne i32 %and61, 0, !dbg !8183
  br i1 %tobool62, label %if.then63, label %if.else67, !dbg !8184

if.then63:                                        ; preds = %lor.lhs.false, %if.end56
  call void @llvm.dbg.declare(metadata %struct.Object* %workob, metadata !8185, metadata !DIExpression()), !dbg !8187
  %53 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8188
  %ob64 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %53, i32 0, i32 1, !dbg !8189
  %54 = load %struct.Object*, %struct.Object** %ob64, align 8, !dbg !8189
  %55 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8190
  %act = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %55, i32 0, i32 8, !dbg !8191
  %56 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !8191
  %57 = load float, float* %t, align 4, !dbg !8192
  call void @what_does_obaction(%struct.Object* %54, %struct.Object* %workob, %struct.bPose* null, %struct.bAction* %56, i8* null, float %57), !dbg !8193
  %58 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !8194
  %matrix65 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %58, i32 0, i32 4, !dbg !8195
  %arraydecay66 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix65, i64 0, i64 0, !dbg !8194
  call void @BKE_object_to_mat4(%struct.Object* %workob, [4 x float]* %arraydecay66), !dbg !8196
  br label %if.end91, !dbg !8197

if.else67:                                        ; preds = %lor.lhs.false
  %59 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8198
  %type68 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %59, i32 0, i32 5, !dbg !8200
  %60 = load i16, i16* %type68, align 8, !dbg !8200
  %conv69 = sext i16 %60 to i32, !dbg !8198
  %cmp70 = icmp eq i32 %conv69, 2, !dbg !8201
  br i1 %cmp70, label %if.then72, label %if.else88, !dbg !8202

if.then72:                                        ; preds = %if.else67
  call void @llvm.dbg.declare(metadata %struct.Object* %workob73, metadata !8203, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.declare(metadata %struct.bPose** %pose, metadata !8206, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan74, metadata !8210, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %tchan, metadata !8212, metadata !DIExpression()), !dbg !8213
  %61 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8214
  %call75 = call i8* %61(i64 216, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)), !dbg !8214
  %62 = bitcast i8* %call75 to %struct.bPose*, !dbg !8214
  store %struct.bPose* %62, %struct.bPose** %pose, align 8, !dbg !8215
  %63 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8216
  %pchan76 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %63, i32 0, i32 2, !dbg !8217
  %64 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan76, align 8, !dbg !8217
  store %struct.bPoseChannel* %64, %struct.bPoseChannel** %pchan74, align 8, !dbg !8218
  %65 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8219
  %66 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan74, align 8, !dbg !8220
  %name77 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %66, i32 0, i32 4, !dbg !8221
  %arraydecay78 = getelementptr inbounds [64 x i8], [64 x i8]* %name77, i64 0, i64 0, !dbg !8220
  %call79 = call %struct.bPoseChannel* @BKE_pose_channel_verify(%struct.bPose* %65, i8* %arraydecay78), !dbg !8222
  store %struct.bPoseChannel* %call79, %struct.bPoseChannel** %tchan, align 8, !dbg !8223
  %67 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan74, align 8, !dbg !8224
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %67, i32 0, i32 26, !dbg !8225
  %68 = load i16, i16* %rotmode, align 4, !dbg !8225
  %69 = load %struct.bPoseChannel*, %struct.bPoseChannel** %tchan, align 8, !dbg !8226
  %rotmode80 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %69, i32 0, i32 26, !dbg !8227
  store i16 %68, i16* %rotmode80, align 4, !dbg !8228
  %70 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8229
  %ob81 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %70, i32 0, i32 1, !dbg !8230
  %71 = load %struct.Object*, %struct.Object** %ob81, align 8, !dbg !8230
  %72 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8231
  %73 = load %struct.bActionConstraint*, %struct.bActionConstraint** %data, align 8, !dbg !8232
  %act82 = getelementptr inbounds %struct.bActionConstraint, %struct.bActionConstraint* %73, i32 0, i32 8, !dbg !8233
  %74 = load %struct.bAction*, %struct.bAction** %act82, align 8, !dbg !8233
  %75 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan74, align 8, !dbg !8234
  %name83 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %75, i32 0, i32 4, !dbg !8235
  %arraydecay84 = getelementptr inbounds [64 x i8], [64 x i8]* %name83, i64 0, i64 0, !dbg !8234
  %76 = load float, float* %t, align 4, !dbg !8236
  call void @what_does_obaction(%struct.Object* %71, %struct.Object* %workob73, %struct.bPose* %72, %struct.bAction* %74, i8* %arraydecay84, float %76), !dbg !8237
  %77 = load %struct.bPoseChannel*, %struct.bPoseChannel** %tchan, align 8, !dbg !8238
  call void @BKE_pchan_calc_mat(%struct.bPoseChannel* %77), !dbg !8239
  %78 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !8240
  %matrix85 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %78, i32 0, i32 4, !dbg !8241
  %arraydecay86 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix85, i64 0, i64 0, !dbg !8240
  %79 = load %struct.bPoseChannel*, %struct.bPoseChannel** %tchan, align 8, !dbg !8242
  %chan_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %79, i32 0, i32 28, !dbg !8243
  %arraydecay87 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat, i64 0, i64 0, !dbg !8242
  call void @copy_m4_m4([4 x float]* %arraydecay86, [4 x float]* %arraydecay87), !dbg !8244
  %80 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8245
  call void @BKE_pose_free(%struct.bPose* %80), !dbg !8246
  br label %if.end90, !dbg !8247

if.else88:                                        ; preds = %if.else67
  %call89 = call i32 @puts(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8, i64 0, i64 0)), !dbg !8248
  br label %if.end90

if.end90:                                         ; preds = %if.else88, %if.then72
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then63
  br label %if.end92, !dbg !8250

if.end92:                                         ; preds = %if.end91, %land.lhs.true, %entry
  ret void, !dbg !8251
}

; Function Attrs: noinline nounwind uwtable
define internal void @actcon_evaluate(%struct.bConstraint* %UNUSED_con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !8252 {
entry:
  %UNUSED_con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %temp = alloca [4 x [4 x float]], align 16
  store %struct.bConstraint* %UNUSED_con, %struct.bConstraint** %UNUSED_con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %UNUSED_con.addr, metadata !8253, metadata !DIExpression()), !dbg !8254
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !8255, metadata !DIExpression()), !dbg !8256
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !8257, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !8259, metadata !DIExpression()), !dbg !8260
  %0 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !8261
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8262
  %1 = load i8*, i8** %first, align 8, !dbg !8262
  %2 = bitcast i8* %1 to %struct.bConstraintTarget*, !dbg !8261
  store %struct.bConstraintTarget* %2, %struct.bConstraintTarget** %ct, align 8, !dbg !8260
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8263
  %tobool = icmp ne %struct.bConstraintTarget* %3, null, !dbg !8263
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8263

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8263
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %4, i32 0, i32 2, !dbg !8263
  %5 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !8263
  %tobool1 = icmp ne %struct.Object* %5, null, !dbg !8263
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8265

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %temp, metadata !8266, metadata !DIExpression()), !dbg !8268
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp, i64 0, i64 0, !dbg !8269
  %6 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8270
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %6, i32 0, i32 3, !dbg !8271
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !8270
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !8272
  %7 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8273
  %matrix3 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %7, i32 0, i32 3, !dbg !8274
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix3, i64 0, i64 0, !dbg !8273
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp, i64 0, i64 0, !dbg !8275
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8276
  %matrix6 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %8, i32 0, i32 4, !dbg !8277
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix6, i64 0, i64 0, !dbg !8276
  call void @mul_m4_m4m4([4 x float]* %arraydecay4, [4 x float]* %arraydecay5, [4 x float]* %arraydecay7), !dbg !8278
  br label %if.end, !dbg !8279

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !8280
}

declare dso_local void @mat4_to_eul(float*, [4 x float]*) #2

declare dso_local void @what_does_obaction(%struct.Object*, %struct.Object*, %struct.bPose*, %struct.bAction*, i8*, float) #2

declare dso_local %struct.bPoseChannel* @BKE_pose_channel_verify(%struct.bPose*, i8*) #2

declare dso_local void @BKE_pchan_calc_mat(%struct.bPoseChannel*) #2

declare dso_local void @BKE_pose_free(%struct.bPose*) #2

declare dso_local i32 @puts(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @locktrack_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !8281 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bLockTrackConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !8282, metadata !DIExpression()), !dbg !8283
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !8284, metadata !DIExpression()), !dbg !8285
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !8286, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.declare(metadata %struct.bLockTrackConstraint** %data, metadata !8288, metadata !DIExpression()), !dbg !8289
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8290
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !8291
  %1 = load i8*, i8** %data1, align 8, !dbg !8291
  %2 = bitcast i8* %1 to %struct.bLockTrackConstraint*, !dbg !8290
  store %struct.bLockTrackConstraint* %2, %struct.bLockTrackConstraint** %data, align 8, !dbg !8289
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !8292
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8293
  %5 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8294
  %tar = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %5, i32 0, i32 0, !dbg !8295
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !8296
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !8297
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !8292
  ret void, !dbg !8298
}

; Function Attrs: noinline nounwind uwtable
define internal void @locktrack_new_data(i8* %cdata) #0 !dbg !8299 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bLockTrackConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !8300, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.declare(metadata %struct.bLockTrackConstraint** %data, metadata !8302, metadata !DIExpression()), !dbg !8303
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !8304
  %1 = bitcast i8* %0 to %struct.bLockTrackConstraint*, !dbg !8305
  store %struct.bLockTrackConstraint* %1, %struct.bLockTrackConstraint** %data, align 8, !dbg !8303
  %2 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8306
  %trackflag = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %2, i32 0, i32 1, !dbg !8307
  store i32 1, i32* %trackflag, align 8, !dbg !8308
  %3 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8309
  %lockflag = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %3, i32 0, i32 2, !dbg !8310
  store i32 2, i32* %lockflag, align 4, !dbg !8311
  ret void, !dbg !8312
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @locktrack_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !8313 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bLockTrackConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8318
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !8318
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !8320

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8321
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !8321
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !8322

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bLockTrackConstraint** %data, metadata !8323, metadata !DIExpression()), !dbg !8325
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8326
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !8327
  %3 = load i8*, i8** %data2, align 8, !dbg !8327
  %4 = bitcast i8* %3 to %struct.bLockTrackConstraint*, !dbg !8326
  store %struct.bLockTrackConstraint* %4, %struct.bLockTrackConstraint** %data, align 8, !dbg !8325
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !8328, metadata !DIExpression()), !dbg !8329
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8330
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !8330
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !8330
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !8330
  %7 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8330
  %tar = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %7, i32 0, i32 0, !dbg !8330
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !8330
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8330
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !8330
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !8330
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8330
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !8330
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !8330
  %11 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8330
  %subtarget4 = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %11, i32 0, i32 3, !dbg !8330
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !8330
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !8330
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8330
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !8330
  %13 = load i8, i8* %tarspace, align 1, !dbg !8330
  %conv = zext i8 %13 to i16, !dbg !8330
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8330
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !8330
  store i16 %conv, i16* %space, align 8, !dbg !8330
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8330
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !8330
  store i16 1, i16* %flag, align 2, !dbg !8330
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8332
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !8332
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !8332
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !8332
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !8330

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8334
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !8334
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !8334
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !8334
  %20 = load i16, i16* %type, align 8, !dbg !8334
  %conv11 = sext i16 %20 to i32, !dbg !8334
  %cmp = icmp eq i32 %conv11, 25, !dbg !8334
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !8334

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8334
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !8334
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !8334
  %22 = load i8, i8* %arrayidx, align 8, !dbg !8334
  %conv15 = zext i8 %22 to i32, !dbg !8334
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !8334
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !8337

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !8338, metadata !DIExpression()), !dbg !8340
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8340
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !8340
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !8340
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !8340
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8340
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8340
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !8340
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !8340
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !8340
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !8340
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8340
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !8340
  store i16 2, i16* %type22, align 4, !dbg !8340
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8340
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !8340
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !8340

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8340
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !8340
  %30 = load i16, i16* %rotmode, align 4, !dbg !8340
  %conv24 = sext i16 %30 to i32, !dbg !8340
  br label %cond.end, !dbg !8340

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !8340

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !8340
  %conv25 = trunc i32 %cond to i16, !dbg !8340
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8340
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !8340
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !8340
  br label %if.end49, !dbg !8340

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8341
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !8341
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !8341
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !8341
  %34 = load i16, i16* %type27, align 8, !dbg !8341
  %conv28 = sext i16 %34 to i32, !dbg !8341
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !8341
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !8341

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8341
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !8341
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !8341
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !8341
  %37 = load i16, i16* %type32, align 8, !dbg !8341
  %conv33 = sext i16 %37 to i32, !dbg !8341
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !8341
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !8341

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8341
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !8341
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !8341
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !8341
  %conv39 = zext i8 %39 to i32, !dbg !8341
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !8341
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !8334

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8343
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !8343
  store i16 3, i16* %type42, align 4, !dbg !8343
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8343
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !8343
  store i16 1, i16* %rotOrder43, align 2, !dbg !8343
  br label %if.end, !dbg !8343

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8345
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !8345
  store i16 1, i16* %type45, align 4, !dbg !8345
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8345
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !8345
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !8345
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !8345
  %45 = load i16, i16* %rotmode47, align 8, !dbg !8345
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8345
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !8345
  store i16 %45, i16* %rotOrder48, align 2, !dbg !8345
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !8337

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8330
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8330
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !8330
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !8330
  store i32 1, i32* %retval, align 4, !dbg !8347
  br label %return, !dbg !8347

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !8348
  br label %return, !dbg !8348

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !8349
  ret i32 %50, !dbg !8349
}

; Function Attrs: noinline nounwind uwtable
define internal void @locktrack_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !8350 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bLockTrackConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !8351, metadata !DIExpression()), !dbg !8352
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !8353, metadata !DIExpression()), !dbg !8354
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !8355, metadata !DIExpression()), !dbg !8356
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8357
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !8357
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !8359

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8360
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !8360
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !8361

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bLockTrackConstraint** %data, metadata !8362, metadata !DIExpression()), !dbg !8364
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8365
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !8366
  %3 = load i8*, i8** %data2, align 8, !dbg !8366
  %4 = bitcast i8* %3 to %struct.bLockTrackConstraint*, !dbg !8365
  store %struct.bLockTrackConstraint* %4, %struct.bLockTrackConstraint** %data, align 8, !dbg !8364
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !8367, metadata !DIExpression()), !dbg !8368
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8369
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !8370
  %6 = load i8*, i8** %first, align 8, !dbg !8370
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !8369
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !8368
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8371
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !8371
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !8374

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !8375, metadata !DIExpression()), !dbg !8377
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8377
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !8377
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !8377
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !8377
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !8378
  %conv = zext i8 %11 to i32, !dbg !8378
  %cmp = icmp eq i32 %conv, 0, !dbg !8378
  br i1 %cmp, label %if.then6, label %if.end, !dbg !8377

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8380
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !8380
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !8380
  %14 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8380
  %tar7 = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %14, i32 0, i32 0, !dbg !8380
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !8380
  %15 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8380
  %subtarget = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %15, i32 0, i32 3, !dbg !8380
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !8380
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8380
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !8380
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !8380
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !8380
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8380
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !8380
  %18 = load i16, i16* %space, align 8, !dbg !8380
  %conv10 = trunc i16 %18 to i8, !dbg !8380
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8380
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !8380
  store i8 %conv10, i8* %tarspace, align 1, !dbg !8380
  br label %if.end, !dbg !8380

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8377
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8377
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !8377
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !8377
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !8377
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !8377
  br label %if.end11, !dbg !8377

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !8382

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !8383
}

; Function Attrs: noinline nounwind uwtable
define internal void @locktrack_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !8384 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bLockTrackConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %vec = alloca [3 x float], align 4
  %vec2 = alloca [3 x float], align 4
  %totmat = alloca [3 x [3 x float]], align 16
  %tmpmat = alloca [3 x [3 x float]], align 16
  %invmat = alloca [3 x [3 x float]], align 16
  %mdet = alloca float, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !8385, metadata !DIExpression()), !dbg !8386
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !8387, metadata !DIExpression()), !dbg !8388
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !8389, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.declare(metadata %struct.bLockTrackConstraint** %data, metadata !8391, metadata !DIExpression()), !dbg !8392
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8393
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !8394
  %1 = load i8*, i8** %data1, align 8, !dbg !8394
  %2 = bitcast i8* %1 to %struct.bLockTrackConstraint*, !dbg !8393
  store %struct.bLockTrackConstraint* %2, %struct.bLockTrackConstraint** %data, align 8, !dbg !8392
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !8395, metadata !DIExpression()), !dbg !8396
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !8397
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !8398
  %4 = load i8*, i8** %first, align 8, !dbg !8398
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !8397
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !8396
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8399
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !8399
  br i1 %tobool, label %land.lhs.true, label %if.end404, !dbg !8399

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8399
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !8399
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !8399
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !8399
  br i1 %tobool2, label %if.then, label %if.end404, !dbg !8401

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !8402, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.declare(metadata [3 x float]* %vec2, metadata !8405, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %totmat, metadata !8407, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmpmat, metadata !8409, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %invmat, metadata !8411, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.declare(metadata float* %mdet, metadata !8413, metadata !DIExpression()), !dbg !8414
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8415
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8416
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 4, !dbg !8417
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 3, !dbg !8416
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !8416
  %10 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8418
  %matrix4 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %10, i32 0, i32 3, !dbg !8419
  %arrayidx5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix4, i64 0, i64 3, !dbg !8418
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx5, i64 0, i64 0, !dbg !8418
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay3, float* %arraydecay6), !dbg !8420
  %11 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8421
  %lockflag = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %11, i32 0, i32 2, !dbg !8422
  %12 = load i32, i32* %lockflag, align 4, !dbg !8422
  switch i32 %12, label %sw.default329 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb111
    i32 2, label %sw.bb220
  ], !dbg !8423

sw.bb:                                            ; preds = %if.then
  %13 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8424
  %trackflag = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %13, i32 0, i32 1, !dbg !8427
  %14 = load i32, i32* %trackflag, align 8, !dbg !8427
  switch i32 %14, label %sw.default [
    i32 1, label %sw.bb7
    i32 2, label %sw.bb31
    i32 4, label %sw.bb56
    i32 5, label %sw.bb83
  ], !dbg !8428

sw.bb7:                                           ; preds = %sw.bb
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8429
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8432
  %15 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8433
  %matrix10 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %15, i32 0, i32 3, !dbg !8434
  %arrayidx11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix10, i64 0, i64 0, !dbg !8433
  %arraydecay12 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx11, i64 0, i64 0, !dbg !8433
  call void @project_v3_v3v3(float* %arraydecay8, float* %arraydecay9, float* %arraydecay12), !dbg !8435
  %arrayidx13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8436
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !8436
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8437
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8438
  call void @sub_v3_v3v3(float* %arraydecay14, float* %arraydecay15, float* %arraydecay16), !dbg !8439
  %arrayidx17 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8440
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx17, i64 0, i64 0, !dbg !8440
  %call = call float @normalize_v3(float* %arraydecay18), !dbg !8441
  %arrayidx19 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8442
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !8442
  %16 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8443
  %matrix21 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %16, i32 0, i32 3, !dbg !8444
  %arrayidx22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix21, i64 0, i64 0, !dbg !8443
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx22, i64 0, i64 0, !dbg !8443
  %call24 = call float @normalize_v3_v3(float* %arraydecay20, float* %arraydecay23), !dbg !8445
  %arrayidx25 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8446
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx25, i64 0, i64 0, !dbg !8446
  %arrayidx27 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8447
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !8447
  %arrayidx29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8448
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx29, i64 0, i64 0, !dbg !8448
  call void @cross_v3_v3v3(float* %arraydecay26, float* %arraydecay28, float* %arraydecay30), !dbg !8449
  br label %sw.epilog, !dbg !8450

sw.bb31:                                          ; preds = %sw.bb
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8451
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8453
  %17 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8454
  %matrix34 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %17, i32 0, i32 3, !dbg !8455
  %arrayidx35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix34, i64 0, i64 0, !dbg !8454
  %arraydecay36 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx35, i64 0, i64 0, !dbg !8454
  call void @project_v3_v3v3(float* %arraydecay32, float* %arraydecay33, float* %arraydecay36), !dbg !8456
  %arrayidx37 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8457
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx37, i64 0, i64 0, !dbg !8457
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8458
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8459
  call void @sub_v3_v3v3(float* %arraydecay38, float* %arraydecay39, float* %arraydecay40), !dbg !8460
  %arrayidx41 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8461
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx41, i64 0, i64 0, !dbg !8461
  %call43 = call float @normalize_v3(float* %arraydecay42), !dbg !8462
  %arrayidx44 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8463
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 0, !dbg !8463
  %18 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8464
  %matrix46 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %18, i32 0, i32 3, !dbg !8465
  %arrayidx47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix46, i64 0, i64 0, !dbg !8464
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx47, i64 0, i64 0, !dbg !8464
  %call49 = call float @normalize_v3_v3(float* %arraydecay45, float* %arraydecay48), !dbg !8466
  %arrayidx50 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8467
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx50, i64 0, i64 0, !dbg !8467
  %arrayidx52 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8468
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx52, i64 0, i64 0, !dbg !8468
  %arrayidx54 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8469
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx54, i64 0, i64 0, !dbg !8469
  call void @cross_v3_v3v3(float* %arraydecay51, float* %arraydecay53, float* %arraydecay55), !dbg !8470
  br label %sw.epilog, !dbg !8471

sw.bb56:                                          ; preds = %sw.bb
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8472
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8474
  %19 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8475
  %matrix59 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %19, i32 0, i32 3, !dbg !8476
  %arrayidx60 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix59, i64 0, i64 0, !dbg !8475
  %arraydecay61 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx60, i64 0, i64 0, !dbg !8475
  call void @project_v3_v3v3(float* %arraydecay57, float* %arraydecay58, float* %arraydecay61), !dbg !8477
  %arrayidx62 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8478
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx62, i64 0, i64 0, !dbg !8478
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8479
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8480
  call void @sub_v3_v3v3(float* %arraydecay63, float* %arraydecay64, float* %arraydecay65), !dbg !8481
  %arrayidx66 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8482
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx66, i64 0, i64 0, !dbg !8482
  %call68 = call float @normalize_v3(float* %arraydecay67), !dbg !8483
  %arrayidx69 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8484
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx69, i64 0, i64 0, !dbg !8484
  call void @negate_v3(float* %arraydecay70), !dbg !8485
  %arrayidx71 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8486
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx71, i64 0, i64 0, !dbg !8486
  %20 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8487
  %matrix73 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %20, i32 0, i32 3, !dbg !8488
  %arrayidx74 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix73, i64 0, i64 0, !dbg !8487
  %arraydecay75 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx74, i64 0, i64 0, !dbg !8487
  %call76 = call float @normalize_v3_v3(float* %arraydecay72, float* %arraydecay75), !dbg !8489
  %arrayidx77 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8490
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx77, i64 0, i64 0, !dbg !8490
  %arrayidx79 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8491
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx79, i64 0, i64 0, !dbg !8491
  %arrayidx81 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8492
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx81, i64 0, i64 0, !dbg !8492
  call void @cross_v3_v3v3(float* %arraydecay78, float* %arraydecay80, float* %arraydecay82), !dbg !8493
  br label %sw.epilog, !dbg !8494

sw.bb83:                                          ; preds = %sw.bb
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8495
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8497
  %21 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8498
  %matrix86 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %21, i32 0, i32 3, !dbg !8499
  %arrayidx87 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix86, i64 0, i64 0, !dbg !8498
  %arraydecay88 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx87, i64 0, i64 0, !dbg !8498
  call void @project_v3_v3v3(float* %arraydecay84, float* %arraydecay85, float* %arraydecay88), !dbg !8500
  %arrayidx89 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8501
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx89, i64 0, i64 0, !dbg !8501
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8502
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8503
  call void @sub_v3_v3v3(float* %arraydecay90, float* %arraydecay91, float* %arraydecay92), !dbg !8504
  %arrayidx93 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8505
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx93, i64 0, i64 0, !dbg !8505
  %call95 = call float @normalize_v3(float* %arraydecay94), !dbg !8506
  %arrayidx96 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8507
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx96, i64 0, i64 0, !dbg !8507
  call void @negate_v3(float* %arraydecay97), !dbg !8508
  %arrayidx98 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8509
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx98, i64 0, i64 0, !dbg !8509
  %22 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8510
  %matrix100 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %22, i32 0, i32 3, !dbg !8511
  %arrayidx101 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix100, i64 0, i64 0, !dbg !8510
  %arraydecay102 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx101, i64 0, i64 0, !dbg !8510
  %call103 = call float @normalize_v3_v3(float* %arraydecay99, float* %arraydecay102), !dbg !8512
  %arrayidx104 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8513
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx104, i64 0, i64 0, !dbg !8513
  %arrayidx106 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8514
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx106, i64 0, i64 0, !dbg !8514
  %arrayidx108 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8515
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx108, i64 0, i64 0, !dbg !8515
  call void @cross_v3_v3v3(float* %arraydecay105, float* %arraydecay107, float* %arraydecay109), !dbg !8516
  br label %sw.epilog, !dbg !8517

sw.default:                                       ; preds = %sw.bb
  %arraydecay110 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8518
  call void @unit_m3([3 x float]* %arraydecay110), !dbg !8520
  br label %sw.epilog, !dbg !8521

sw.epilog:                                        ; preds = %sw.default, %sw.bb83, %sw.bb56, %sw.bb31, %sw.bb7
  br label %sw.epilog331, !dbg !8522

sw.bb111:                                         ; preds = %if.then
  %23 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8523
  %trackflag112 = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %23, i32 0, i32 1, !dbg !8525
  %24 = load i32, i32* %trackflag112, align 8, !dbg !8525
  switch i32 %24, label %sw.default217 [
    i32 0, label %sw.bb113
    i32 2, label %sw.bb138
    i32 3, label %sw.bb163
    i32 5, label %sw.bb190
  ], !dbg !8526

sw.bb113:                                         ; preds = %sw.bb111
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8527
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8530
  %25 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8531
  %matrix116 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %25, i32 0, i32 3, !dbg !8532
  %arrayidx117 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix116, i64 0, i64 1, !dbg !8531
  %arraydecay118 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx117, i64 0, i64 0, !dbg !8531
  call void @project_v3_v3v3(float* %arraydecay114, float* %arraydecay115, float* %arraydecay118), !dbg !8533
  %arrayidx119 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8534
  %arraydecay120 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx119, i64 0, i64 0, !dbg !8534
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8535
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8536
  call void @sub_v3_v3v3(float* %arraydecay120, float* %arraydecay121, float* %arraydecay122), !dbg !8537
  %arrayidx123 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8538
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx123, i64 0, i64 0, !dbg !8538
  %call125 = call float @normalize_v3(float* %arraydecay124), !dbg !8539
  %arrayidx126 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8540
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx126, i64 0, i64 0, !dbg !8540
  %26 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8541
  %matrix128 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %26, i32 0, i32 3, !dbg !8542
  %arrayidx129 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix128, i64 0, i64 1, !dbg !8541
  %arraydecay130 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx129, i64 0, i64 0, !dbg !8541
  %call131 = call float @normalize_v3_v3(float* %arraydecay127, float* %arraydecay130), !dbg !8543
  %arrayidx132 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8544
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx132, i64 0, i64 0, !dbg !8544
  %arrayidx134 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8545
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx134, i64 0, i64 0, !dbg !8545
  %arrayidx136 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8546
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx136, i64 0, i64 0, !dbg !8546
  call void @cross_v3_v3v3(float* %arraydecay133, float* %arraydecay135, float* %arraydecay137), !dbg !8547
  br label %sw.epilog219, !dbg !8548

sw.bb138:                                         ; preds = %sw.bb111
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8549
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8551
  %27 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8552
  %matrix141 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %27, i32 0, i32 3, !dbg !8553
  %arrayidx142 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix141, i64 0, i64 1, !dbg !8552
  %arraydecay143 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx142, i64 0, i64 0, !dbg !8552
  call void @project_v3_v3v3(float* %arraydecay139, float* %arraydecay140, float* %arraydecay143), !dbg !8554
  %arrayidx144 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8555
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx144, i64 0, i64 0, !dbg !8555
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8556
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8557
  call void @sub_v3_v3v3(float* %arraydecay145, float* %arraydecay146, float* %arraydecay147), !dbg !8558
  %arrayidx148 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8559
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx148, i64 0, i64 0, !dbg !8559
  %call150 = call float @normalize_v3(float* %arraydecay149), !dbg !8560
  %arrayidx151 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8561
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx151, i64 0, i64 0, !dbg !8561
  %28 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8562
  %matrix153 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %28, i32 0, i32 3, !dbg !8563
  %arrayidx154 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix153, i64 0, i64 1, !dbg !8562
  %arraydecay155 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx154, i64 0, i64 0, !dbg !8562
  %call156 = call float @normalize_v3_v3(float* %arraydecay152, float* %arraydecay155), !dbg !8564
  %arrayidx157 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8565
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx157, i64 0, i64 0, !dbg !8565
  %arrayidx159 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8566
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx159, i64 0, i64 0, !dbg !8566
  %arrayidx161 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8567
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx161, i64 0, i64 0, !dbg !8567
  call void @cross_v3_v3v3(float* %arraydecay158, float* %arraydecay160, float* %arraydecay162), !dbg !8568
  br label %sw.epilog219, !dbg !8569

sw.bb163:                                         ; preds = %sw.bb111
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8570
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8572
  %29 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8573
  %matrix166 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %29, i32 0, i32 3, !dbg !8574
  %arrayidx167 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix166, i64 0, i64 1, !dbg !8573
  %arraydecay168 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx167, i64 0, i64 0, !dbg !8573
  call void @project_v3_v3v3(float* %arraydecay164, float* %arraydecay165, float* %arraydecay168), !dbg !8575
  %arrayidx169 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8576
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx169, i64 0, i64 0, !dbg !8576
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8577
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8578
  call void @sub_v3_v3v3(float* %arraydecay170, float* %arraydecay171, float* %arraydecay172), !dbg !8579
  %arrayidx173 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8580
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx173, i64 0, i64 0, !dbg !8580
  %call175 = call float @normalize_v3(float* %arraydecay174), !dbg !8581
  %arrayidx176 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8582
  %arraydecay177 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx176, i64 0, i64 0, !dbg !8582
  call void @negate_v3(float* %arraydecay177), !dbg !8583
  %arrayidx178 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8584
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx178, i64 0, i64 0, !dbg !8584
  %30 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8585
  %matrix180 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %30, i32 0, i32 3, !dbg !8586
  %arrayidx181 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix180, i64 0, i64 1, !dbg !8585
  %arraydecay182 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx181, i64 0, i64 0, !dbg !8585
  %call183 = call float @normalize_v3_v3(float* %arraydecay179, float* %arraydecay182), !dbg !8587
  %arrayidx184 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8588
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx184, i64 0, i64 0, !dbg !8588
  %arrayidx186 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8589
  %arraydecay187 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx186, i64 0, i64 0, !dbg !8589
  %arrayidx188 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8590
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx188, i64 0, i64 0, !dbg !8590
  call void @cross_v3_v3v3(float* %arraydecay185, float* %arraydecay187, float* %arraydecay189), !dbg !8591
  br label %sw.epilog219, !dbg !8592

sw.bb190:                                         ; preds = %sw.bb111
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8593
  %arraydecay192 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8595
  %31 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8596
  %matrix193 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %31, i32 0, i32 3, !dbg !8597
  %arrayidx194 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix193, i64 0, i64 1, !dbg !8596
  %arraydecay195 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx194, i64 0, i64 0, !dbg !8596
  call void @project_v3_v3v3(float* %arraydecay191, float* %arraydecay192, float* %arraydecay195), !dbg !8598
  %arrayidx196 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8599
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx196, i64 0, i64 0, !dbg !8599
  %arraydecay198 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8600
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8601
  call void @sub_v3_v3v3(float* %arraydecay197, float* %arraydecay198, float* %arraydecay199), !dbg !8602
  %arrayidx200 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8603
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx200, i64 0, i64 0, !dbg !8603
  %call202 = call float @normalize_v3(float* %arraydecay201), !dbg !8604
  %arrayidx203 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8605
  %arraydecay204 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx203, i64 0, i64 0, !dbg !8605
  call void @negate_v3(float* %arraydecay204), !dbg !8606
  %arrayidx205 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8607
  %arraydecay206 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx205, i64 0, i64 0, !dbg !8607
  %32 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8608
  %matrix207 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %32, i32 0, i32 3, !dbg !8609
  %arrayidx208 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix207, i64 0, i64 1, !dbg !8608
  %arraydecay209 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx208, i64 0, i64 0, !dbg !8608
  %call210 = call float @normalize_v3_v3(float* %arraydecay206, float* %arraydecay209), !dbg !8610
  %arrayidx211 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8611
  %arraydecay212 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx211, i64 0, i64 0, !dbg !8611
  %arrayidx213 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8612
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx213, i64 0, i64 0, !dbg !8612
  %arrayidx215 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8613
  %arraydecay216 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx215, i64 0, i64 0, !dbg !8613
  call void @cross_v3_v3v3(float* %arraydecay212, float* %arraydecay214, float* %arraydecay216), !dbg !8614
  br label %sw.epilog219, !dbg !8615

sw.default217:                                    ; preds = %sw.bb111
  %arraydecay218 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8616
  call void @unit_m3([3 x float]* %arraydecay218), !dbg !8618
  br label %sw.epilog219, !dbg !8619

sw.epilog219:                                     ; preds = %sw.default217, %sw.bb190, %sw.bb163, %sw.bb138, %sw.bb113
  br label %sw.epilog331, !dbg !8620

sw.bb220:                                         ; preds = %if.then
  %33 = load %struct.bLockTrackConstraint*, %struct.bLockTrackConstraint** %data, align 8, !dbg !8621
  %trackflag221 = getelementptr inbounds %struct.bLockTrackConstraint, %struct.bLockTrackConstraint* %33, i32 0, i32 1, !dbg !8623
  %34 = load i32, i32* %trackflag221, align 8, !dbg !8623
  switch i32 %34, label %sw.default326 [
    i32 0, label %sw.bb222
    i32 1, label %sw.bb247
    i32 3, label %sw.bb272
    i32 4, label %sw.bb299
  ], !dbg !8624

sw.bb222:                                         ; preds = %sw.bb220
  %arraydecay223 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8625
  %arraydecay224 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8628
  %35 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8629
  %matrix225 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %35, i32 0, i32 3, !dbg !8630
  %arrayidx226 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix225, i64 0, i64 2, !dbg !8629
  %arraydecay227 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx226, i64 0, i64 0, !dbg !8629
  call void @project_v3_v3v3(float* %arraydecay223, float* %arraydecay224, float* %arraydecay227), !dbg !8631
  %arrayidx228 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8632
  %arraydecay229 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx228, i64 0, i64 0, !dbg !8632
  %arraydecay230 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8633
  %arraydecay231 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8634
  call void @sub_v3_v3v3(float* %arraydecay229, float* %arraydecay230, float* %arraydecay231), !dbg !8635
  %arrayidx232 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8636
  %arraydecay233 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx232, i64 0, i64 0, !dbg !8636
  %call234 = call float @normalize_v3(float* %arraydecay233), !dbg !8637
  %arrayidx235 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8638
  %arraydecay236 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx235, i64 0, i64 0, !dbg !8638
  %36 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8639
  %matrix237 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %36, i32 0, i32 3, !dbg !8640
  %arrayidx238 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix237, i64 0, i64 2, !dbg !8639
  %arraydecay239 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx238, i64 0, i64 0, !dbg !8639
  %call240 = call float @normalize_v3_v3(float* %arraydecay236, float* %arraydecay239), !dbg !8641
  %arrayidx241 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8642
  %arraydecay242 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx241, i64 0, i64 0, !dbg !8642
  %arrayidx243 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8643
  %arraydecay244 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx243, i64 0, i64 0, !dbg !8643
  %arrayidx245 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8644
  %arraydecay246 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx245, i64 0, i64 0, !dbg !8644
  call void @cross_v3_v3v3(float* %arraydecay242, float* %arraydecay244, float* %arraydecay246), !dbg !8645
  br label %sw.epilog328, !dbg !8646

sw.bb247:                                         ; preds = %sw.bb220
  %arraydecay248 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8647
  %arraydecay249 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8649
  %37 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8650
  %matrix250 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %37, i32 0, i32 3, !dbg !8651
  %arrayidx251 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix250, i64 0, i64 2, !dbg !8650
  %arraydecay252 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx251, i64 0, i64 0, !dbg !8650
  call void @project_v3_v3v3(float* %arraydecay248, float* %arraydecay249, float* %arraydecay252), !dbg !8652
  %arrayidx253 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8653
  %arraydecay254 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx253, i64 0, i64 0, !dbg !8653
  %arraydecay255 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8654
  %arraydecay256 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8655
  call void @sub_v3_v3v3(float* %arraydecay254, float* %arraydecay255, float* %arraydecay256), !dbg !8656
  %arrayidx257 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8657
  %arraydecay258 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx257, i64 0, i64 0, !dbg !8657
  %call259 = call float @normalize_v3(float* %arraydecay258), !dbg !8658
  %arrayidx260 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8659
  %arraydecay261 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx260, i64 0, i64 0, !dbg !8659
  %38 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8660
  %matrix262 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %38, i32 0, i32 3, !dbg !8661
  %arrayidx263 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix262, i64 0, i64 2, !dbg !8660
  %arraydecay264 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx263, i64 0, i64 0, !dbg !8660
  %call265 = call float @normalize_v3_v3(float* %arraydecay261, float* %arraydecay264), !dbg !8662
  %arrayidx266 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8663
  %arraydecay267 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx266, i64 0, i64 0, !dbg !8663
  %arrayidx268 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8664
  %arraydecay269 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx268, i64 0, i64 0, !dbg !8664
  %arrayidx270 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8665
  %arraydecay271 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx270, i64 0, i64 0, !dbg !8665
  call void @cross_v3_v3v3(float* %arraydecay267, float* %arraydecay269, float* %arraydecay271), !dbg !8666
  br label %sw.epilog328, !dbg !8667

sw.bb272:                                         ; preds = %sw.bb220
  %arraydecay273 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8668
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8670
  %39 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8671
  %matrix275 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %39, i32 0, i32 3, !dbg !8672
  %arrayidx276 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix275, i64 0, i64 2, !dbg !8671
  %arraydecay277 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx276, i64 0, i64 0, !dbg !8671
  call void @project_v3_v3v3(float* %arraydecay273, float* %arraydecay274, float* %arraydecay277), !dbg !8673
  %arrayidx278 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8674
  %arraydecay279 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx278, i64 0, i64 0, !dbg !8674
  %arraydecay280 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8675
  %arraydecay281 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8676
  call void @sub_v3_v3v3(float* %arraydecay279, float* %arraydecay280, float* %arraydecay281), !dbg !8677
  %arrayidx282 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8678
  %arraydecay283 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx282, i64 0, i64 0, !dbg !8678
  %call284 = call float @normalize_v3(float* %arraydecay283), !dbg !8679
  %arrayidx285 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8680
  %arraydecay286 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx285, i64 0, i64 0, !dbg !8680
  call void @negate_v3(float* %arraydecay286), !dbg !8681
  %arrayidx287 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8682
  %arraydecay288 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx287, i64 0, i64 0, !dbg !8682
  %40 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8683
  %matrix289 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %40, i32 0, i32 3, !dbg !8684
  %arrayidx290 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix289, i64 0, i64 2, !dbg !8683
  %arraydecay291 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx290, i64 0, i64 0, !dbg !8683
  %call292 = call float @normalize_v3_v3(float* %arraydecay288, float* %arraydecay291), !dbg !8685
  %arrayidx293 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8686
  %arraydecay294 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx293, i64 0, i64 0, !dbg !8686
  %arrayidx295 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8687
  %arraydecay296 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx295, i64 0, i64 0, !dbg !8687
  %arrayidx297 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8688
  %arraydecay298 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx297, i64 0, i64 0, !dbg !8688
  call void @cross_v3_v3v3(float* %arraydecay294, float* %arraydecay296, float* %arraydecay298), !dbg !8689
  br label %sw.epilog328, !dbg !8690

sw.bb299:                                         ; preds = %sw.bb220
  %arraydecay300 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8691
  %arraydecay301 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8693
  %41 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8694
  %matrix302 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %41, i32 0, i32 3, !dbg !8695
  %arrayidx303 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix302, i64 0, i64 2, !dbg !8694
  %arraydecay304 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx303, i64 0, i64 0, !dbg !8694
  call void @project_v3_v3v3(float* %arraydecay300, float* %arraydecay301, float* %arraydecay304), !dbg !8696
  %arrayidx305 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8697
  %arraydecay306 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx305, i64 0, i64 0, !dbg !8697
  %arraydecay307 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8698
  %arraydecay308 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !8699
  call void @sub_v3_v3v3(float* %arraydecay306, float* %arraydecay307, float* %arraydecay308), !dbg !8700
  %arrayidx309 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8701
  %arraydecay310 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx309, i64 0, i64 0, !dbg !8701
  %call311 = call float @normalize_v3(float* %arraydecay310), !dbg !8702
  %arrayidx312 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8703
  %arraydecay313 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx312, i64 0, i64 0, !dbg !8703
  call void @negate_v3(float* %arraydecay313), !dbg !8704
  %arrayidx314 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8705
  %arraydecay315 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx314, i64 0, i64 0, !dbg !8705
  %42 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8706
  %matrix316 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %42, i32 0, i32 3, !dbg !8707
  %arrayidx317 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix316, i64 0, i64 2, !dbg !8706
  %arraydecay318 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx317, i64 0, i64 0, !dbg !8706
  %call319 = call float @normalize_v3_v3(float* %arraydecay315, float* %arraydecay318), !dbg !8708
  %arrayidx320 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8709
  %arraydecay321 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx320, i64 0, i64 0, !dbg !8709
  %arrayidx322 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8710
  %arraydecay323 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx322, i64 0, i64 0, !dbg !8710
  %arrayidx324 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8711
  %arraydecay325 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx324, i64 0, i64 0, !dbg !8711
  call void @cross_v3_v3v3(float* %arraydecay321, float* %arraydecay323, float* %arraydecay325), !dbg !8712
  br label %sw.epilog328, !dbg !8713

sw.default326:                                    ; preds = %sw.bb220
  %arraydecay327 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8714
  call void @unit_m3([3 x float]* %arraydecay327), !dbg !8716
  br label %sw.epilog328, !dbg !8717

sw.epilog328:                                     ; preds = %sw.default326, %sw.bb299, %sw.bb272, %sw.bb247, %sw.bb222
  br label %sw.epilog331, !dbg !8718

sw.default329:                                    ; preds = %if.then
  %arraydecay330 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8719
  call void @unit_m3([3 x float]* %arraydecay330), !dbg !8721
  br label %sw.epilog331, !dbg !8722

sw.epilog331:                                     ; preds = %sw.default329, %sw.epilog328, %sw.epilog219, %sw.epilog
  %arraydecay332 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 0, !dbg !8723
  %43 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8724
  %matrix333 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %43, i32 0, i32 3, !dbg !8725
  %arraydecay334 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix333, i64 0, i64 0, !dbg !8724
  call void @copy_m3_m4([3 x float]* %arraydecay332, [4 x float]* %arraydecay334), !dbg !8726
  %arraydecay335 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 0, !dbg !8727
  call void @normalize_m3([3 x float]* %arraydecay335), !dbg !8728
  %arraydecay336 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %invmat, i64 0, i64 0, !dbg !8729
  %arraydecay337 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 0, !dbg !8730
  %call338 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay336, [3 x float]* %arraydecay337), !dbg !8731
  %arraydecay339 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 0, !dbg !8732
  %arraydecay340 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8733
  %arraydecay341 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %invmat, i64 0, i64 0, !dbg !8734
  call void @mul_m3_m3m3([3 x float]* %arraydecay339, [3 x float]* %arraydecay340, [3 x float]* %arraydecay341), !dbg !8735
  %arrayidx342 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 0, !dbg !8736
  %arrayidx343 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx342, i64 0, i64 0, !dbg !8736
  %44 = load float, float* %arrayidx343, align 16, !dbg !8736
  %arrayidx344 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8737
  %arrayidx345 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx344, i64 0, i64 0, !dbg !8737
  store float %44, float* %arrayidx345, align 16, !dbg !8738
  %arrayidx346 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 0, !dbg !8739
  %arrayidx347 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx346, i64 0, i64 1, !dbg !8739
  %45 = load float, float* %arrayidx347, align 4, !dbg !8739
  %arrayidx348 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8740
  %arrayidx349 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx348, i64 0, i64 1, !dbg !8740
  store float %45, float* %arrayidx349, align 4, !dbg !8741
  %arrayidx350 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 0, !dbg !8742
  %arrayidx351 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx350, i64 0, i64 2, !dbg !8742
  %46 = load float, float* %arrayidx351, align 8, !dbg !8742
  %arrayidx352 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8743
  %arrayidx353 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx352, i64 0, i64 2, !dbg !8743
  store float %46, float* %arrayidx353, align 8, !dbg !8744
  %arrayidx354 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 1, !dbg !8745
  %arrayidx355 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx354, i64 0, i64 0, !dbg !8745
  %47 = load float, float* %arrayidx355, align 4, !dbg !8745
  %arrayidx356 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8746
  %arrayidx357 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx356, i64 0, i64 0, !dbg !8746
  store float %47, float* %arrayidx357, align 4, !dbg !8747
  %arrayidx358 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 1, !dbg !8748
  %arrayidx359 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx358, i64 0, i64 1, !dbg !8748
  %48 = load float, float* %arrayidx359, align 4, !dbg !8748
  %arrayidx360 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8749
  %arrayidx361 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx360, i64 0, i64 1, !dbg !8749
  store float %48, float* %arrayidx361, align 4, !dbg !8750
  %arrayidx362 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 1, !dbg !8751
  %arrayidx363 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx362, i64 0, i64 2, !dbg !8751
  %49 = load float, float* %arrayidx363, align 4, !dbg !8751
  %arrayidx364 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8752
  %arrayidx365 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx364, i64 0, i64 2, !dbg !8752
  store float %49, float* %arrayidx365, align 4, !dbg !8753
  %arrayidx366 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 2, !dbg !8754
  %arrayidx367 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx366, i64 0, i64 0, !dbg !8754
  %50 = load float, float* %arrayidx367, align 8, !dbg !8754
  %arrayidx368 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8755
  %arrayidx369 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx368, i64 0, i64 0, !dbg !8755
  store float %50, float* %arrayidx369, align 8, !dbg !8756
  %arrayidx370 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 2, !dbg !8757
  %arrayidx371 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx370, i64 0, i64 1, !dbg !8757
  %51 = load float, float* %arrayidx371, align 4, !dbg !8757
  %arrayidx372 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8758
  %arrayidx373 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx372, i64 0, i64 1, !dbg !8758
  store float %51, float* %arrayidx373, align 4, !dbg !8759
  %arrayidx374 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 2, !dbg !8760
  %arrayidx375 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx374, i64 0, i64 2, !dbg !8760
  %52 = load float, float* %arrayidx375, align 8, !dbg !8760
  %arrayidx376 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8761
  %arrayidx377 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx376, i64 0, i64 2, !dbg !8761
  store float %52, float* %arrayidx377, align 8, !dbg !8762
  %arrayidx378 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8763
  %arrayidx379 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx378, i64 0, i64 0, !dbg !8763
  %53 = load float, float* %arrayidx379, align 16, !dbg !8763
  %arrayidx380 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8764
  %arrayidx381 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx380, i64 0, i64 1, !dbg !8764
  %54 = load float, float* %arrayidx381, align 4, !dbg !8764
  %arrayidx382 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8765
  %arrayidx383 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx382, i64 0, i64 2, !dbg !8765
  %55 = load float, float* %arrayidx383, align 8, !dbg !8765
  %arrayidx384 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8766
  %arrayidx385 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx384, i64 0, i64 0, !dbg !8766
  %56 = load float, float* %arrayidx385, align 4, !dbg !8766
  %arrayidx386 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8767
  %arrayidx387 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx386, i64 0, i64 1, !dbg !8767
  %57 = load float, float* %arrayidx387, align 4, !dbg !8767
  %arrayidx388 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !8768
  %arrayidx389 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx388, i64 0, i64 2, !dbg !8768
  %58 = load float, float* %arrayidx389, align 4, !dbg !8768
  %arrayidx390 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8769
  %arrayidx391 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx390, i64 0, i64 0, !dbg !8769
  %59 = load float, float* %arrayidx391, align 8, !dbg !8769
  %arrayidx392 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8770
  %arrayidx393 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx392, i64 0, i64 1, !dbg !8770
  %60 = load float, float* %arrayidx393, align 4, !dbg !8770
  %arrayidx394 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !8771
  %arrayidx395 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx394, i64 0, i64 2, !dbg !8771
  %61 = load float, float* %arrayidx395, align 8, !dbg !8771
  %call396 = call float @determinant_m3(float %53, float %54, float %55, float %56, float %57, float %58, float %59, float %60, float %61), !dbg !8772
  store float %call396, float* %mdet, align 4, !dbg !8773
  %62 = load float, float* %mdet, align 4, !dbg !8774
  %cmp = fcmp oeq float %62, 0.000000e+00, !dbg !8776
  br i1 %cmp, label %if.then397, label %if.end, !dbg !8777

if.then397:                                       ; preds = %sw.epilog331
  %arraydecay398 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8778
  call void @unit_m3([3 x float]* %arraydecay398), !dbg !8780
  br label %if.end, !dbg !8781

if.end:                                           ; preds = %if.then397, %sw.epilog331
  %63 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8782
  %matrix399 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %63, i32 0, i32 3, !dbg !8783
  %arraydecay400 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix399, i64 0, i64 0, !dbg !8782
  %arraydecay401 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !8784
  %64 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8785
  %matrix402 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %64, i32 0, i32 3, !dbg !8786
  %arraydecay403 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix402, i64 0, i64 0, !dbg !8785
  call void @mul_m4_m3m4([4 x float]* %arraydecay400, [3 x float]* %arraydecay401, [4 x float]* %arraydecay403), !dbg !8787
  br label %if.end404, !dbg !8788

if.end404:                                        ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !8789
}

declare dso_local void @normalize_m3([3 x float]*) #2

declare dso_local void @mul_m3_m3m3([3 x float]*, [3 x float]*, [3 x float]*) #2

declare dso_local float @determinant_m3(float, float, float, float, float, float, float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @distlimit_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !8790 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bDistLimitConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !8791, metadata !DIExpression()), !dbg !8792
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !8793, metadata !DIExpression()), !dbg !8794
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !8795, metadata !DIExpression()), !dbg !8796
  call void @llvm.dbg.declare(metadata %struct.bDistLimitConstraint** %data, metadata !8797, metadata !DIExpression()), !dbg !8798
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8799
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !8800
  %1 = load i8*, i8** %data1, align 8, !dbg !8800
  %2 = bitcast i8* %1 to %struct.bDistLimitConstraint*, !dbg !8799
  store %struct.bDistLimitConstraint* %2, %struct.bDistLimitConstraint** %data, align 8, !dbg !8798
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !8801
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8802
  %5 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8803
  %tar = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %5, i32 0, i32 0, !dbg !8804
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !8805
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !8806
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !8801
  ret void, !dbg !8807
}

; Function Attrs: noinline nounwind uwtable
define internal void @distlimit_new_data(i8* %cdata) #0 !dbg !8808 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bDistLimitConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !8809, metadata !DIExpression()), !dbg !8810
  call void @llvm.dbg.declare(metadata %struct.bDistLimitConstraint** %data, metadata !8811, metadata !DIExpression()), !dbg !8812
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !8813
  %1 = bitcast i8* %0 to %struct.bDistLimitConstraint*, !dbg !8814
  store %struct.bDistLimitConstraint* %1, %struct.bDistLimitConstraint** %data, align 8, !dbg !8812
  %2 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8815
  %dist = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %2, i32 0, i32 2, !dbg !8816
  store float 0.000000e+00, float* %dist, align 8, !dbg !8817
  ret void, !dbg !8818
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @distlimit_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !8819 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bDistLimitConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !8820, metadata !DIExpression()), !dbg !8821
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !8822, metadata !DIExpression()), !dbg !8823
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8824
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !8824
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !8826

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8827
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !8827
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !8828

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bDistLimitConstraint** %data, metadata !8829, metadata !DIExpression()), !dbg !8831
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8832
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !8833
  %3 = load i8*, i8** %data2, align 8, !dbg !8833
  %4 = bitcast i8* %3 to %struct.bDistLimitConstraint*, !dbg !8832
  store %struct.bDistLimitConstraint* %4, %struct.bDistLimitConstraint** %data, align 8, !dbg !8831
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !8834, metadata !DIExpression()), !dbg !8835
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8836
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !8836
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !8836
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !8836
  %7 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8836
  %tar = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %7, i32 0, i32 0, !dbg !8836
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !8836
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8836
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !8836
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !8836
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8836
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !8836
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !8836
  %11 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8836
  %subtarget4 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %11, i32 0, i32 1, !dbg !8836
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !8836
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !8836
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8836
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !8836
  %13 = load i8, i8* %tarspace, align 1, !dbg !8836
  %conv = zext i8 %13 to i16, !dbg !8836
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8836
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !8836
  store i16 %conv, i16* %space, align 8, !dbg !8836
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8836
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !8836
  store i16 1, i16* %flag, align 2, !dbg !8836
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8838
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !8838
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !8838
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !8838
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !8836

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8840
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !8840
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !8840
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !8840
  %20 = load i16, i16* %type, align 8, !dbg !8840
  %conv11 = sext i16 %20 to i32, !dbg !8840
  %cmp = icmp eq i32 %conv11, 25, !dbg !8840
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !8840

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8840
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !8840
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !8840
  %22 = load i8, i8* %arrayidx, align 8, !dbg !8840
  %conv15 = zext i8 %22 to i32, !dbg !8840
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !8840
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !8843

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !8844, metadata !DIExpression()), !dbg !8846
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8846
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !8846
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !8846
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !8846
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8846
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8846
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !8846
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !8846
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !8846
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !8846
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8846
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !8846
  store i16 2, i16* %type22, align 4, !dbg !8846
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8846
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !8846
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !8846

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8846
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !8846
  %30 = load i16, i16* %rotmode, align 4, !dbg !8846
  %conv24 = sext i16 %30 to i32, !dbg !8846
  br label %cond.end, !dbg !8846

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !8846

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !8846
  %conv25 = trunc i32 %cond to i16, !dbg !8846
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8846
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !8846
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !8846
  br label %if.end49, !dbg !8846

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8847
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !8847
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !8847
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !8847
  %34 = load i16, i16* %type27, align 8, !dbg !8847
  %conv28 = sext i16 %34 to i32, !dbg !8847
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !8847
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !8847

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8847
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !8847
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !8847
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !8847
  %37 = load i16, i16* %type32, align 8, !dbg !8847
  %conv33 = sext i16 %37 to i32, !dbg !8847
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !8847
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !8847

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8847
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !8847
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !8847
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !8847
  %conv39 = zext i8 %39 to i32, !dbg !8847
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !8847
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !8840

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8849
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !8849
  store i16 3, i16* %type42, align 4, !dbg !8849
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8849
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !8849
  store i16 1, i16* %rotOrder43, align 2, !dbg !8849
  br label %if.end, !dbg !8849

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8851
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !8851
  store i16 1, i16* %type45, align 4, !dbg !8851
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8851
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !8851
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !8851
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !8851
  %45 = load i16, i16* %rotmode47, align 8, !dbg !8851
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8851
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !8851
  store i16 %45, i16* %rotOrder48, align 2, !dbg !8851
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !8843

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8836
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8836
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !8836
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !8836
  store i32 1, i32* %retval, align 4, !dbg !8853
  br label %return, !dbg !8853

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !8854
  br label %return, !dbg !8854

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !8855
  ret i32 %50, !dbg !8855
}

; Function Attrs: noinline nounwind uwtable
define internal void @distlimit_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !8856 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bDistLimitConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !8857, metadata !DIExpression()), !dbg !8858
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !8859, metadata !DIExpression()), !dbg !8860
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !8861, metadata !DIExpression()), !dbg !8862
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8863
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !8863
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !8865

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8866
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !8866
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !8867

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bDistLimitConstraint** %data, metadata !8868, metadata !DIExpression()), !dbg !8870
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8871
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !8872
  %3 = load i8*, i8** %data2, align 8, !dbg !8872
  %4 = bitcast i8* %3 to %struct.bDistLimitConstraint*, !dbg !8871
  store %struct.bDistLimitConstraint* %4, %struct.bDistLimitConstraint** %data, align 8, !dbg !8870
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !8873, metadata !DIExpression()), !dbg !8874
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8875
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !8876
  %6 = load i8*, i8** %first, align 8, !dbg !8876
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !8875
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !8874
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8877
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !8877
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !8880

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !8881, metadata !DIExpression()), !dbg !8883
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8883
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !8883
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !8883
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !8883
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !8884
  %conv = zext i8 %11 to i32, !dbg !8884
  %cmp = icmp eq i32 %conv, 0, !dbg !8884
  br i1 %cmp, label %if.then6, label %if.end, !dbg !8883

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8886
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !8886
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !8886
  %14 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8886
  %tar7 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %14, i32 0, i32 0, !dbg !8886
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !8886
  %15 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8886
  %subtarget = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %15, i32 0, i32 1, !dbg !8886
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !8886
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8886
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !8886
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !8886
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !8886
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8886
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !8886
  %18 = load i16, i16* %space, align 8, !dbg !8886
  %conv10 = trunc i16 %18 to i8, !dbg !8886
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8886
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !8886
  store i8 %conv10, i8* %tarspace, align 1, !dbg !8886
  br label %if.end, !dbg !8886

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8883
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8883
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !8883
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !8883
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !8883
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !8883
  br label %if.end11, !dbg !8883

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !8888

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !8889
}

; Function Attrs: noinline nounwind uwtable
define internal void @distlimit_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !8890 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bDistLimitConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %dvec = alloca [3 x float], align 4
  %dist = alloca float, align 4
  %sfac = alloca float, align 4
  %clamp_surf = alloca i16, align 2
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !8891, metadata !DIExpression()), !dbg !8892
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !8893, metadata !DIExpression()), !dbg !8894
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !8895, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.declare(metadata %struct.bDistLimitConstraint** %data, metadata !8897, metadata !DIExpression()), !dbg !8898
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !8899
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !8900
  %1 = load i8*, i8** %data1, align 8, !dbg !8900
  %2 = bitcast i8* %1 to %struct.bDistLimitConstraint*, !dbg !8899
  store %struct.bDistLimitConstraint* %2, %struct.bDistLimitConstraint** %data, align 8, !dbg !8898
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !8901, metadata !DIExpression()), !dbg !8902
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !8903
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !8904
  %4 = load i8*, i8** %first, align 8, !dbg !8904
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !8903
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !8902
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8905
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !8905
  br i1 %tobool, label %land.lhs.true, label %if.end106, !dbg !8905

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8905
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !8905
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !8905
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !8905
  br i1 %tobool2, label %if.then, label %if.end106, !dbg !8907

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !8908, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.declare(metadata float* %dist, metadata !8911, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.declare(metadata float* %sfac, metadata !8913, metadata !DIExpression()), !dbg !8914
  store float 1.000000e+00, float* %sfac, align 4, !dbg !8914
  call void @llvm.dbg.declare(metadata i16* %clamp_surf, metadata !8915, metadata !DIExpression()), !dbg !8916
  store i16 0, i16* %clamp_surf, align 2, !dbg !8916
  %9 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !8917
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %9, i32 0, i32 3, !dbg !8918
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 3, !dbg !8917
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !8917
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !8919
  %matrix3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 4, !dbg !8920
  %arrayidx4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix3, i64 0, i64 3, !dbg !8919
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx4, i64 0, i64 0, !dbg !8919
  %call = call float @len_v3v3(float* %arraydecay, float* %arraydecay5), !dbg !8921
  store float %call, float* %dist, align 4, !dbg !8922
  %11 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8923
  %dist6 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %11, i32 0, i32 2, !dbg !8925
  %12 = load float, float* %dist6, align 8, !dbg !8925
  %cmp = fcmp oeq float %12, 0.000000e+00, !dbg !8926
  br i1 %cmp, label %if.then7, label %if.end, !dbg !8927

if.then7:                                         ; preds = %if.then
  %13 = load float, float* %dist, align 4, !dbg !8928
  %14 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8929
  %dist8 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %14, i32 0, i32 2, !dbg !8930
  store float %13, float* %dist8, align 8, !dbg !8931
  br label %if.end, !dbg !8929

if.end:                                           ; preds = %if.then7, %if.then
  %15 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8932
  %mode = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %15, i32 0, i32 5, !dbg !8934
  %16 = load i16, i16* %mode, align 2, !dbg !8934
  %conv = sext i16 %16 to i32, !dbg !8932
  %cmp9 = icmp eq i32 %conv, 1, !dbg !8935
  br i1 %cmp9, label %if.then11, label %if.else31, !dbg !8936

if.then11:                                        ; preds = %if.end
  %17 = load float, float* %dist, align 4, !dbg !8937
  %18 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8940
  %dist12 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %18, i32 0, i32 2, !dbg !8941
  %19 = load float, float* %dist12, align 8, !dbg !8941
  %cmp13 = fcmp ole float %17, %19, !dbg !8942
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !8943

if.then15:                                        ; preds = %if.then11
  store i16 1, i16* %clamp_surf, align 2, !dbg !8944
  %20 = load float, float* %dist, align 4, !dbg !8946
  %cmp16 = fcmp une float %20, 0.000000e+00, !dbg !8948
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !8949

if.then18:                                        ; preds = %if.then15
  %21 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8950
  %dist19 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %21, i32 0, i32 2, !dbg !8951
  %22 = load float, float* %dist19, align 8, !dbg !8951
  %23 = load float, float* %dist, align 4, !dbg !8952
  %div = fdiv float %22, %23, !dbg !8953
  store float %div, float* %sfac, align 4, !dbg !8954
  br label %if.end20, !dbg !8955

if.end20:                                         ; preds = %if.then18, %if.then15
  br label %if.end30, !dbg !8956

if.else:                                          ; preds = %if.then11
  %24 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8957
  %flag = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %24, i32 0, i32 4, !dbg !8959
  %25 = load i16, i16* %flag, align 8, !dbg !8959
  %conv21 = sext i16 %25 to i32, !dbg !8957
  %and = and i32 %conv21, 1, !dbg !8960
  %tobool22 = icmp ne i32 %and, 0, !dbg !8960
  br i1 %tobool22, label %if.then23, label %if.end29, !dbg !8961

if.then23:                                        ; preds = %if.else
  %26 = load float, float* %dist, align 4, !dbg !8962
  %27 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8965
  %dist24 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %27, i32 0, i32 2, !dbg !8966
  %28 = load float, float* %dist24, align 8, !dbg !8966
  %29 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8967
  %soft = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %29, i32 0, i32 3, !dbg !8968
  %30 = load float, float* %soft, align 4, !dbg !8968
  %add = fadd float %28, %30, !dbg !8969
  %cmp25 = fcmp ole float %26, %add, !dbg !8970
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !8971

if.then27:                                        ; preds = %if.then23
  br label %if.end28, !dbg !8972

if.end28:                                         ; preds = %if.then27, %if.then23
  br label %if.end29, !dbg !8974

if.end29:                                         ; preds = %if.end28, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end20
  br label %if.end91, !dbg !8975

if.else31:                                        ; preds = %if.end
  %31 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8976
  %mode32 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %31, i32 0, i32 5, !dbg !8978
  %32 = load i16, i16* %mode32, align 2, !dbg !8978
  %conv33 = sext i16 %32 to i32, !dbg !8976
  %cmp34 = icmp eq i32 %conv33, 0, !dbg !8979
  br i1 %cmp34, label %if.then36, label %if.else75, !dbg !8980

if.then36:                                        ; preds = %if.else31
  %33 = load float, float* %dist, align 4, !dbg !8981
  %34 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8984
  %dist37 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %34, i32 0, i32 2, !dbg !8985
  %35 = load float, float* %dist37, align 8, !dbg !8985
  %cmp38 = fcmp oge float %33, %35, !dbg !8986
  br i1 %cmp38, label %if.then40, label %if.else47, !dbg !8987

if.then40:                                        ; preds = %if.then36
  store i16 1, i16* %clamp_surf, align 2, !dbg !8988
  %36 = load float, float* %dist, align 4, !dbg !8990
  %cmp41 = fcmp une float %36, 0.000000e+00, !dbg !8992
  br i1 %cmp41, label %if.then43, label %if.end46, !dbg !8993

if.then43:                                        ; preds = %if.then40
  %37 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !8994
  %dist44 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %37, i32 0, i32 2, !dbg !8995
  %38 = load float, float* %dist44, align 8, !dbg !8995
  %39 = load float, float* %dist, align 4, !dbg !8996
  %div45 = fdiv float %38, %39, !dbg !8997
  store float %div45, float* %sfac, align 4, !dbg !8998
  br label %if.end46, !dbg !8999

if.end46:                                         ; preds = %if.then43, %if.then40
  br label %if.end74, !dbg !9000

if.else47:                                        ; preds = %if.then36
  %40 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !9001
  %flag48 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %40, i32 0, i32 4, !dbg !9003
  %41 = load i16, i16* %flag48, align 8, !dbg !9003
  %conv49 = sext i16 %41 to i32, !dbg !9001
  %and50 = and i32 %conv49, 1, !dbg !9004
  %tobool51 = icmp ne i32 %and50, 0, !dbg !9004
  br i1 %tobool51, label %if.then52, label %if.end73, !dbg !9005

if.then52:                                        ; preds = %if.else47
  %42 = load float, float* %dist, align 4, !dbg !9006
  %43 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !9009
  %dist53 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %43, i32 0, i32 2, !dbg !9010
  %44 = load float, float* %dist53, align 8, !dbg !9010
  %45 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !9011
  %soft54 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %45, i32 0, i32 3, !dbg !9012
  %46 = load float, float* %soft54, align 4, !dbg !9012
  %sub = fsub float %44, %46, !dbg !9013
  %cmp55 = fcmp oge float %42, %sub, !dbg !9014
  br i1 %cmp55, label %if.then57, label %if.end72, !dbg !9015

if.then57:                                        ; preds = %if.then52
  %47 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !9016
  %soft58 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %47, i32 0, i32 3, !dbg !9018
  %48 = load float, float* %soft58, align 4, !dbg !9018
  %49 = load float, float* %dist, align 4, !dbg !9019
  %50 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !9020
  %dist59 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %50, i32 0, i32 2, !dbg !9021
  %51 = load float, float* %dist59, align 8, !dbg !9021
  %sub60 = fsub float %49, %51, !dbg !9022
  %fneg = fneg float %sub60, !dbg !9023
  %52 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !9024
  %soft61 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %52, i32 0, i32 3, !dbg !9025
  %53 = load float, float* %soft61, align 4, !dbg !9025
  %div62 = fdiv float %fneg, %53, !dbg !9026
  %call63 = call float @expf(float %div62) #7, !dbg !9027
  %sub64 = fsub float 1.000000e+00, %call63, !dbg !9028
  %mul = fmul float %48, %sub64, !dbg !9029
  %54 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !9030
  %dist65 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %54, i32 0, i32 2, !dbg !9031
  %55 = load float, float* %dist65, align 8, !dbg !9031
  %add66 = fadd float %mul, %55, !dbg !9032
  store float %add66, float* %sfac, align 4, !dbg !9033
  %56 = load float, float* %dist, align 4, !dbg !9034
  %cmp67 = fcmp une float %56, 0.000000e+00, !dbg !9036
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !9037

if.then69:                                        ; preds = %if.then57
  %57 = load float, float* %dist, align 4, !dbg !9038
  %58 = load float, float* %sfac, align 4, !dbg !9039
  %div70 = fdiv float %58, %57, !dbg !9039
  store float %div70, float* %sfac, align 4, !dbg !9039
  br label %if.end71, !dbg !9040

if.end71:                                         ; preds = %if.then69, %if.then57
  store i16 1, i16* %clamp_surf, align 2, !dbg !9041
  br label %if.end72, !dbg !9042

if.end72:                                         ; preds = %if.end71, %if.then52
  br label %if.end73, !dbg !9043

if.end73:                                         ; preds = %if.end72, %if.else47
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.end46
  br label %if.end90, !dbg !9044

if.else75:                                        ; preds = %if.else31
  %59 = load float, float* %dist, align 4, !dbg !9045
  %60 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !9045
  %dist76 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %60, i32 0, i32 2, !dbg !9045
  %61 = load float, float* %dist76, align 8, !dbg !9045
  %sub77 = fsub float %59, %61, !dbg !9045
  %62 = call float @llvm.fabs.f32(float %sub77), !dbg !9045
  %cmp78 = fcmp oge float %62, 0x3E80000000000000, !dbg !9045
  %63 = zext i1 %cmp78 to i64, !dbg !9045
  %cond = select i1 %cmp78, i32 0, i32 1, !dbg !9045
  %cmp80 = icmp eq i32 %cond, 0, !dbg !9048
  br i1 %cmp80, label %if.then82, label %if.end89, !dbg !9049

if.then82:                                        ; preds = %if.else75
  store i16 1, i16* %clamp_surf, align 2, !dbg !9050
  %64 = load float, float* %dist, align 4, !dbg !9052
  %cmp83 = fcmp une float %64, 0.000000e+00, !dbg !9054
  br i1 %cmp83, label %if.then85, label %if.end88, !dbg !9055

if.then85:                                        ; preds = %if.then82
  %65 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data, align 8, !dbg !9056
  %dist86 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %65, i32 0, i32 2, !dbg !9057
  %66 = load float, float* %dist86, align 8, !dbg !9057
  %67 = load float, float* %dist, align 4, !dbg !9058
  %div87 = fdiv float %66, %67, !dbg !9059
  store float %div87, float* %sfac, align 4, !dbg !9060
  br label %if.end88, !dbg !9061

if.end88:                                         ; preds = %if.then85, %if.then82
  br label %if.end89, !dbg !9062

if.end89:                                         ; preds = %if.end88, %if.else75
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end74
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end30
  %68 = load i16, i16* %clamp_surf, align 2, !dbg !9063
  %tobool92 = icmp ne i16 %68, 0, !dbg !9063
  br i1 %tobool92, label %if.then93, label %if.end105, !dbg !9065

if.then93:                                        ; preds = %if.end91
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !9066
  %69 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9068
  %matrix95 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %69, i32 0, i32 4, !dbg !9069
  %arrayidx96 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix95, i64 0, i64 3, !dbg !9068
  %arraydecay97 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx96, i64 0, i64 0, !dbg !9068
  %70 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9070
  %matrix98 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %70, i32 0, i32 3, !dbg !9071
  %arrayidx99 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix98, i64 0, i64 3, !dbg !9070
  %arraydecay100 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx99, i64 0, i64 0, !dbg !9070
  %71 = load float, float* %sfac, align 4, !dbg !9072
  call void @interp_v3_v3v3(float* %arraydecay94, float* %arraydecay97, float* %arraydecay100, float %71), !dbg !9073
  %72 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9074
  %matrix101 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %72, i32 0, i32 3, !dbg !9075
  %arrayidx102 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix101, i64 0, i64 3, !dbg !9074
  %arraydecay103 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx102, i64 0, i64 0, !dbg !9074
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !9076
  call void @copy_v3_v3(float* %arraydecay103, float* %arraydecay104), !dbg !9077
  br label %if.end105, !dbg !9078

if.end105:                                        ; preds = %if.then93, %if.end91
  br label %if.end106, !dbg !9079

if.end106:                                        ; preds = %if.end105, %land.lhs.true, %entry
  ret void, !dbg !9080
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !9081 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9082, metadata !DIExpression()), !dbg !9083
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9084, metadata !DIExpression()), !dbg !9085
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !9086, metadata !DIExpression()), !dbg !9087
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !9088
  %0 = load float*, float** %b.addr, align 8, !dbg !9089
  %1 = load float*, float** %a.addr, align 8, !dbg !9090
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !9091
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !9092
  %call = call float @len_v3(float* %arraydecay1), !dbg !9093
  ret float %call, !dbg !9094
}

; Function Attrs: nounwind
declare dso_local float @expf(float) #5

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @stretchto_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !9095 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bStretchToConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9096, metadata !DIExpression()), !dbg !9097
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !9098, metadata !DIExpression()), !dbg !9099
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !9100, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.declare(metadata %struct.bStretchToConstraint** %data, metadata !9102, metadata !DIExpression()), !dbg !9103
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9104
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !9105
  %1 = load i8*, i8** %data1, align 8, !dbg !9105
  %2 = bitcast i8* %1 to %struct.bStretchToConstraint*, !dbg !9104
  store %struct.bStretchToConstraint* %2, %struct.bStretchToConstraint** %data, align 8, !dbg !9103
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !9106
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9107
  %5 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9108
  %tar = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %5, i32 0, i32 0, !dbg !9109
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !9110
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !9111
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !9106
  ret void, !dbg !9112
}

; Function Attrs: noinline nounwind uwtable
define internal void @stretchto_new_data(i8* %cdata) #0 !dbg !9113 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bStretchToConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !9114, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.declare(metadata %struct.bStretchToConstraint** %data, metadata !9116, metadata !DIExpression()), !dbg !9117
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !9118
  %1 = bitcast i8* %0 to %struct.bStretchToConstraint*, !dbg !9119
  store %struct.bStretchToConstraint* %1, %struct.bStretchToConstraint** %data, align 8, !dbg !9117
  %2 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9120
  %volmode = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %2, i32 0, i32 2, !dbg !9121
  store i32 0, i32* %volmode, align 4, !dbg !9122
  %3 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9123
  %plane = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %3, i32 0, i32 3, !dbg !9124
  store i32 0, i32* %plane, align 8, !dbg !9125
  %4 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9126
  %orglength = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %4, i32 0, i32 4, !dbg !9127
  store float 0.000000e+00, float* %orglength, align 4, !dbg !9128
  %5 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9129
  %bulge = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %5, i32 0, i32 5, !dbg !9130
  store float 1.000000e+00, float* %bulge, align 8, !dbg !9131
  %6 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9132
  %bulge_max = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %6, i32 0, i32 7, !dbg !9133
  store float 1.000000e+00, float* %bulge_max, align 8, !dbg !9134
  %7 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9135
  %bulge_min = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %7, i32 0, i32 6, !dbg !9136
  store float 1.000000e+00, float* %bulge_min, align 4, !dbg !9137
  ret void, !dbg !9138
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @stretchto_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !9139 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bStretchToConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9140, metadata !DIExpression()), !dbg !9141
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !9142, metadata !DIExpression()), !dbg !9143
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9144
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !9144
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !9146

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9147
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !9147
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !9148

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bStretchToConstraint** %data, metadata !9149, metadata !DIExpression()), !dbg !9151
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9152
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !9153
  %3 = load i8*, i8** %data2, align 8, !dbg !9153
  %4 = bitcast i8* %3 to %struct.bStretchToConstraint*, !dbg !9152
  store %struct.bStretchToConstraint* %4, %struct.bStretchToConstraint** %data, align 8, !dbg !9151
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !9154, metadata !DIExpression()), !dbg !9155
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9156
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !9156
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !9156
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !9156
  %7 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9156
  %tar = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %7, i32 0, i32 0, !dbg !9156
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !9156
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9156
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !9156
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !9156
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9156
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !9156
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !9156
  %11 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9156
  %subtarget4 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %11, i32 0, i32 9, !dbg !9156
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !9156
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !9156
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9156
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !9156
  %13 = load i8, i8* %tarspace, align 1, !dbg !9156
  %conv = zext i8 %13 to i16, !dbg !9156
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9156
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !9156
  store i16 %conv, i16* %space, align 8, !dbg !9156
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9156
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !9156
  store i16 1, i16* %flag, align 2, !dbg !9156
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9158
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !9158
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !9158
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !9158
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !9156

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9160
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !9160
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !9160
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !9160
  %20 = load i16, i16* %type, align 8, !dbg !9160
  %conv11 = sext i16 %20 to i32, !dbg !9160
  %cmp = icmp eq i32 %conv11, 25, !dbg !9160
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !9160

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9160
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !9160
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !9160
  %22 = load i8, i8* %arrayidx, align 8, !dbg !9160
  %conv15 = zext i8 %22 to i32, !dbg !9160
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !9160
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !9163

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !9164, metadata !DIExpression()), !dbg !9166
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9166
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !9166
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !9166
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !9166
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !9166
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9166
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !9166
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !9166
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !9166
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !9166
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9166
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !9166
  store i16 2, i16* %type22, align 4, !dbg !9166
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !9166
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !9166
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !9166

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !9166
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !9166
  %30 = load i16, i16* %rotmode, align 4, !dbg !9166
  %conv24 = sext i16 %30 to i32, !dbg !9166
  br label %cond.end, !dbg !9166

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !9166

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !9166
  %conv25 = trunc i32 %cond to i16, !dbg !9166
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9166
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !9166
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !9166
  br label %if.end49, !dbg !9166

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9167
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !9167
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !9167
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !9167
  %34 = load i16, i16* %type27, align 8, !dbg !9167
  %conv28 = sext i16 %34 to i32, !dbg !9167
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !9167
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !9167

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9167
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !9167
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !9167
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !9167
  %37 = load i16, i16* %type32, align 8, !dbg !9167
  %conv33 = sext i16 %37 to i32, !dbg !9167
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !9167
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !9167

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9167
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !9167
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !9167
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !9167
  %conv39 = zext i8 %39 to i32, !dbg !9167
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !9167
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !9160

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9169
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !9169
  store i16 3, i16* %type42, align 4, !dbg !9169
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9169
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !9169
  store i16 1, i16* %rotOrder43, align 2, !dbg !9169
  br label %if.end, !dbg !9169

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9171
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !9171
  store i16 1, i16* %type45, align 4, !dbg !9171
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9171
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !9171
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !9171
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !9171
  %45 = load i16, i16* %rotmode47, align 8, !dbg !9171
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9171
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !9171
  store i16 %45, i16* %rotOrder48, align 2, !dbg !9171
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !9163

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9156
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9156
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !9156
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !9156
  store i32 1, i32* %retval, align 4, !dbg !9173
  br label %return, !dbg !9173

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !9174
  br label %return, !dbg !9174

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !9175
  ret i32 %50, !dbg !9175
}

; Function Attrs: noinline nounwind uwtable
define internal void @stretchto_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !9176 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bStretchToConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9177, metadata !DIExpression()), !dbg !9178
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !9179, metadata !DIExpression()), !dbg !9180
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !9181, metadata !DIExpression()), !dbg !9182
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9183
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !9183
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !9185

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9186
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !9186
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !9187

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bStretchToConstraint** %data, metadata !9188, metadata !DIExpression()), !dbg !9190
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9191
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !9192
  %3 = load i8*, i8** %data2, align 8, !dbg !9192
  %4 = bitcast i8* %3 to %struct.bStretchToConstraint*, !dbg !9191
  store %struct.bStretchToConstraint* %4, %struct.bStretchToConstraint** %data, align 8, !dbg !9190
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !9193, metadata !DIExpression()), !dbg !9194
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9195
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !9196
  %6 = load i8*, i8** %first, align 8, !dbg !9196
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !9195
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !9194
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9197
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !9197
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !9200

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !9201, metadata !DIExpression()), !dbg !9203
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9203
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !9203
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !9203
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !9203
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !9204
  %conv = zext i8 %11 to i32, !dbg !9204
  %cmp = icmp eq i32 %conv, 0, !dbg !9204
  br i1 %cmp, label %if.then6, label %if.end, !dbg !9203

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9206
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !9206
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !9206
  %14 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9206
  %tar7 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %14, i32 0, i32 0, !dbg !9206
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !9206
  %15 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9206
  %subtarget = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %15, i32 0, i32 9, !dbg !9206
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !9206
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9206
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !9206
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !9206
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !9206
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9206
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !9206
  %18 = load i16, i16* %space, align 8, !dbg !9206
  %conv10 = trunc i16 %18 to i8, !dbg !9206
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9206
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !9206
  store i8 %conv10, i8* %tarspace, align 1, !dbg !9206
  br label %if.end, !dbg !9206

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9203
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9203
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !9203
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !9203
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !9203
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !9203
  br label %if.end11, !dbg !9203

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !9208

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !9209
}

; Function Attrs: noinline nounwind uwtable
define internal void @stretchto_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !9210 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bStretchToConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %size = alloca [3 x float], align 4
  %scale = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  %xx = alloca [3 x float], align 4
  %zz = alloca [3 x float], align 4
  %orth = alloca [3 x float], align 4
  %totmat = alloca [3 x [3 x float]], align 16
  %dist = alloca float, align 4
  %bulge = alloca float, align 4
  %bulge_max = alloca float, align 4
  %hard = alloca float, align 4
  %range = alloca float, align 4
  %scale36 = alloca float, align 4
  %soft = alloca float, align 4
  %bulge_min = alloca float, align 4
  %hard69 = alloca float, align 4
  %range71 = alloca float, align 4
  %scale73 = alloca float, align 4
  %soft81 = alloca float, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9211, metadata !DIExpression()), !dbg !9212
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !9213, metadata !DIExpression()), !dbg !9214
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !9215, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.declare(metadata %struct.bStretchToConstraint** %data, metadata !9217, metadata !DIExpression()), !dbg !9218
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9219
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !9220
  %1 = load i8*, i8** %data1, align 8, !dbg !9220
  %2 = bitcast i8* %1 to %struct.bStretchToConstraint*, !dbg !9219
  store %struct.bStretchToConstraint* %2, %struct.bStretchToConstraint** %data, align 8, !dbg !9218
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !9221, metadata !DIExpression()), !dbg !9222
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !9223
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !9224
  %4 = load i8*, i8** %first, align 8, !dbg !9224
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !9223
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !9222
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9225
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !9225
  br i1 %tobool, label %land.lhs.true, label %if.end193, !dbg !9225

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9225
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !9225
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !9225
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !9225
  br i1 %tobool2, label %if.then, label %if.end193, !dbg !9227

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !9228, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.declare(metadata [3 x float]* %scale, metadata !9231, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !9233, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.declare(metadata [3 x float]* %xx, metadata !9235, metadata !DIExpression()), !dbg !9236
  call void @llvm.dbg.declare(metadata [3 x float]* %zz, metadata !9237, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.declare(metadata [3 x float]* %orth, metadata !9239, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %totmat, metadata !9241, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.declare(metadata float* %dist, metadata !9243, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.declare(metadata float* %bulge, metadata !9245, metadata !DIExpression()), !dbg !9246
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !9247
  %9 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9248
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %9, i32 0, i32 3, !dbg !9249
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !9248
  call void @mat4_to_size(float* %arraydecay, [4 x float]* %arraydecay3), !dbg !9250
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %xx, i64 0, i64 0, !dbg !9251
  %10 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9252
  %matrix5 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %10, i32 0, i32 3, !dbg !9253
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix5, i64 0, i64 0, !dbg !9252
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !9252
  %call = call float @normalize_v3_v3(float* %arraydecay4, float* %arraydecay6), !dbg !9254
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %zz, i64 0, i64 0, !dbg !9255
  %11 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9256
  %matrix8 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %11, i32 0, i32 3, !dbg !9257
  %arrayidx9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix8, i64 0, i64 2, !dbg !9256
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx9, i64 0, i64 0, !dbg !9256
  %call11 = call float @normalize_v3_v3(float* %arraydecay7, float* %arraydecay10), !dbg !9258
  %12 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9259
  %matrix12 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %12, i32 0, i32 3, !dbg !9260
  %arrayidx13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix12, i64 0, i64 3, !dbg !9259
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx13, i64 0, i64 0, !dbg !9259
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9261
  %matrix15 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %13, i32 0, i32 4, !dbg !9262
  %arrayidx16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix15, i64 0, i64 3, !dbg !9261
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx16, i64 0, i64 0, !dbg !9261
  %call18 = call float @len_v3v3(float* %arraydecay14, float* %arraydecay17), !dbg !9263
  store float %call18, float* %dist, align 4, !dbg !9264
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !9265
  %14 = load float, float* %arrayidx19, align 4, !dbg !9265
  %15 = load float, float* %dist, align 4, !dbg !9266
  %div = fdiv float %15, %14, !dbg !9266
  store float %div, float* %dist, align 4, !dbg !9266
  %16 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9267
  %orglength = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %16, i32 0, i32 4, !dbg !9269
  %17 = load float, float* %orglength, align 4, !dbg !9269
  %cmp = fcmp oeq float %17, 0.000000e+00, !dbg !9270
  br i1 %cmp, label %if.then20, label %if.end, !dbg !9271

if.then20:                                        ; preds = %if.then
  %18 = load float, float* %dist, align 4, !dbg !9272
  %19 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9273
  %orglength21 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %19, i32 0, i32 4, !dbg !9274
  store float %18, float* %orglength21, align 4, !dbg !9275
  br label %if.end, !dbg !9273

if.end:                                           ; preds = %if.then20, %if.then
  %20 = load float, float* %dist, align 4, !dbg !9276
  %21 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9277
  %orglength22 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %21, i32 0, i32 4, !dbg !9278
  %22 = load float, float* %orglength22, align 4, !dbg !9278
  %div23 = fdiv float %20, %22, !dbg !9279
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 1, !dbg !9280
  store float %div23, float* %arrayidx24, align 4, !dbg !9281
  %23 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9282
  %orglength25 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %23, i32 0, i32 4, !dbg !9283
  %24 = load float, float* %orglength25, align 4, !dbg !9283
  %25 = load float, float* %dist, align 4, !dbg !9284
  %div26 = fdiv float %24, %25, !dbg !9285
  %26 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9286
  %bulge27 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %26, i32 0, i32 5, !dbg !9287
  %27 = load float, float* %bulge27, align 8, !dbg !9287
  %call28 = call float @powf(float %div26, float %27) #7, !dbg !9288
  store float %call28, float* %bulge, align 4, !dbg !9289
  %28 = load float, float* %bulge, align 4, !dbg !9290
  %cmp29 = fcmp ogt float %28, 1.000000e+00, !dbg !9292
  br i1 %cmp29, label %if.then30, label %if.end46, !dbg !9293

if.then30:                                        ; preds = %if.end
  %29 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9294
  %flag = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %29, i32 0, i32 1, !dbg !9297
  %30 = load i32, i32* %flag, align 8, !dbg !9297
  %and = and i32 %30, 2, !dbg !9298
  %tobool31 = icmp ne i32 %and, 0, !dbg !9298
  br i1 %tobool31, label %if.then32, label %if.end45, !dbg !9299

if.then32:                                        ; preds = %if.then30
  call void @llvm.dbg.declare(metadata float* %bulge_max, metadata !9300, metadata !DIExpression()), !dbg !9302
  %31 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9303
  %bulge_max33 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %31, i32 0, i32 7, !dbg !9304
  %32 = load float, float* %bulge_max33, align 8, !dbg !9304
  %call34 = call float @max_ff(float %32, float 1.000000e+00), !dbg !9305
  store float %call34, float* %bulge_max, align 4, !dbg !9302
  call void @llvm.dbg.declare(metadata float* %hard, metadata !9306, metadata !DIExpression()), !dbg !9307
  %33 = load float, float* %bulge, align 4, !dbg !9308
  %34 = load float, float* %bulge_max, align 4, !dbg !9309
  %call35 = call float @min_ff(float %33, float %34), !dbg !9310
  store float %call35, float* %hard, align 4, !dbg !9307
  call void @llvm.dbg.declare(metadata float* %range, metadata !9311, metadata !DIExpression()), !dbg !9312
  %35 = load float, float* %bulge_max, align 4, !dbg !9313
  %sub = fsub float %35, 1.000000e+00, !dbg !9314
  store float %sub, float* %range, align 4, !dbg !9312
  call void @llvm.dbg.declare(metadata float* %scale36, metadata !9315, metadata !DIExpression()), !dbg !9316
  %36 = load float, float* %range, align 4, !dbg !9317
  %cmp37 = fcmp ogt float %36, 0.000000e+00, !dbg !9318
  br i1 %cmp37, label %cond.true, label %cond.false, !dbg !9319

cond.true:                                        ; preds = %if.then32
  %37 = load float, float* %range, align 4, !dbg !9320
  %div38 = fdiv float 1.000000e+00, %37, !dbg !9321
  br label %cond.end, !dbg !9319

cond.false:                                       ; preds = %if.then32
  br label %cond.end, !dbg !9319

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div38, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !9319
  store float %cond, float* %scale36, align 4, !dbg !9316
  call void @llvm.dbg.declare(metadata float* %soft, metadata !9322, metadata !DIExpression()), !dbg !9323
  %38 = load float, float* %range, align 4, !dbg !9324
  %39 = load float, float* %bulge, align 4, !dbg !9325
  %sub39 = fsub float %39, 1.000000e+00, !dbg !9326
  %40 = load float, float* %scale36, align 4, !dbg !9327
  %mul = fmul float %sub39, %40, !dbg !9328
  %call40 = call float @atanf(float %mul) #7, !dbg !9329
  %mul41 = fmul float %38, %call40, !dbg !9330
  %conv = fpext float %mul41 to double, !dbg !9324
  %div42 = fdiv double %conv, 0x3FF921FB54442D18, !dbg !9331
  %add = fadd double 1.000000e+00, %div42, !dbg !9332
  %conv43 = fptrunc double %add to float, !dbg !9333
  store float %conv43, float* %soft, align 4, !dbg !9323
  %41 = load float, float* %soft, align 4, !dbg !9334
  %42 = load float, float* %hard, align 4, !dbg !9335
  %43 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9336
  %bulge_smooth = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %43, i32 0, i32 8, !dbg !9337
  %44 = load float, float* %bulge_smooth, align 4, !dbg !9337
  %call44 = call float @interpf(float %41, float %42, float %44), !dbg !9338
  store float %call44, float* %bulge, align 4, !dbg !9339
  br label %if.end45, !dbg !9340

if.end45:                                         ; preds = %cond.end, %if.then30
  br label %if.end46, !dbg !9341

if.end46:                                         ; preds = %if.end45, %if.end
  %45 = load float, float* %bulge, align 4, !dbg !9342
  %cmp47 = fcmp olt float %45, 1.000000e+00, !dbg !9344
  br i1 %cmp47, label %if.then49, label %if.end93, !dbg !9345

if.then49:                                        ; preds = %if.end46
  %46 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9346
  %flag50 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %46, i32 0, i32 1, !dbg !9349
  %47 = load i32, i32* %flag50, align 8, !dbg !9349
  %and51 = and i32 %47, 1, !dbg !9350
  %tobool52 = icmp ne i32 %and51, 0, !dbg !9350
  br i1 %tobool52, label %if.then53, label %if.end92, !dbg !9351

if.then53:                                        ; preds = %if.then49
  call void @llvm.dbg.declare(metadata float* %bulge_min, metadata !9352, metadata !DIExpression()), !dbg !9354
  %48 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9355
  %bulge_max54 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %48, i32 0, i32 7, !dbg !9355
  %49 = load float, float* %bulge_max54, align 8, !dbg !9355
  %cmp55 = fcmp olt float %49, 0.000000e+00, !dbg !9355
  br i1 %cmp55, label %cond.true57, label %cond.false58, !dbg !9355

cond.true57:                                      ; preds = %if.then53
  br label %cond.end67, !dbg !9355

cond.false58:                                     ; preds = %if.then53
  %50 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9355
  %bulge_max59 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %50, i32 0, i32 7, !dbg !9355
  %51 = load float, float* %bulge_max59, align 8, !dbg !9355
  %cmp60 = fcmp ogt float %51, 1.000000e+00, !dbg !9355
  br i1 %cmp60, label %cond.true62, label %cond.false63, !dbg !9355

cond.true62:                                      ; preds = %cond.false58
  br label %cond.end65, !dbg !9355

cond.false63:                                     ; preds = %cond.false58
  %52 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9355
  %bulge_max64 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %52, i32 0, i32 7, !dbg !9355
  %53 = load float, float* %bulge_max64, align 8, !dbg !9355
  br label %cond.end65, !dbg !9355

cond.end65:                                       ; preds = %cond.false63, %cond.true62
  %cond66 = phi float [ 1.000000e+00, %cond.true62 ], [ %53, %cond.false63 ], !dbg !9355
  br label %cond.end67, !dbg !9355

cond.end67:                                       ; preds = %cond.end65, %cond.true57
  %cond68 = phi float [ 0.000000e+00, %cond.true57 ], [ %cond66, %cond.end65 ], !dbg !9355
  store float %cond68, float* %bulge_min, align 4, !dbg !9354
  call void @llvm.dbg.declare(metadata float* %hard69, metadata !9356, metadata !DIExpression()), !dbg !9357
  %54 = load float, float* %bulge, align 4, !dbg !9358
  %55 = load float, float* %bulge_min, align 4, !dbg !9359
  %call70 = call float @max_ff(float %54, float %55), !dbg !9360
  store float %call70, float* %hard69, align 4, !dbg !9357
  call void @llvm.dbg.declare(metadata float* %range71, metadata !9361, metadata !DIExpression()), !dbg !9362
  %56 = load float, float* %bulge_min, align 4, !dbg !9363
  %sub72 = fsub float 1.000000e+00, %56, !dbg !9364
  store float %sub72, float* %range71, align 4, !dbg !9362
  call void @llvm.dbg.declare(metadata float* %scale73, metadata !9365, metadata !DIExpression()), !dbg !9366
  %57 = load float, float* %range71, align 4, !dbg !9367
  %cmp74 = fcmp ogt float %57, 0.000000e+00, !dbg !9368
  br i1 %cmp74, label %cond.true76, label %cond.false78, !dbg !9369

cond.true76:                                      ; preds = %cond.end67
  %58 = load float, float* %range71, align 4, !dbg !9370
  %div77 = fdiv float 1.000000e+00, %58, !dbg !9371
  br label %cond.end79, !dbg !9369

cond.false78:                                     ; preds = %cond.end67
  br label %cond.end79, !dbg !9369

cond.end79:                                       ; preds = %cond.false78, %cond.true76
  %cond80 = phi float [ %div77, %cond.true76 ], [ 0.000000e+00, %cond.false78 ], !dbg !9369
  store float %cond80, float* %scale73, align 4, !dbg !9366
  call void @llvm.dbg.declare(metadata float* %soft81, metadata !9372, metadata !DIExpression()), !dbg !9373
  %59 = load float, float* %range71, align 4, !dbg !9374
  %60 = load float, float* %bulge, align 4, !dbg !9375
  %sub82 = fsub float 1.000000e+00, %60, !dbg !9376
  %61 = load float, float* %scale73, align 4, !dbg !9377
  %mul83 = fmul float %sub82, %61, !dbg !9378
  %call84 = call float @atanf(float %mul83) #7, !dbg !9379
  %mul85 = fmul float %59, %call84, !dbg !9380
  %conv86 = fpext float %mul85 to double, !dbg !9374
  %div87 = fdiv double %conv86, 0x3FF921FB54442D18, !dbg !9381
  %sub88 = fsub double 1.000000e+00, %div87, !dbg !9382
  %conv89 = fptrunc double %sub88 to float, !dbg !9383
  store float %conv89, float* %soft81, align 4, !dbg !9373
  %62 = load float, float* %soft81, align 4, !dbg !9384
  %63 = load float, float* %hard69, align 4, !dbg !9385
  %64 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9386
  %bulge_smooth90 = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %64, i32 0, i32 8, !dbg !9387
  %65 = load float, float* %bulge_smooth90, align 4, !dbg !9387
  %call91 = call float @interpf(float %62, float %63, float %65), !dbg !9388
  store float %call91, float* %bulge, align 4, !dbg !9389
  br label %if.end92, !dbg !9390

if.end92:                                         ; preds = %cond.end79, %if.then49
  br label %if.end93, !dbg !9391

if.end93:                                         ; preds = %if.end92, %if.end46
  %66 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9392
  %volmode = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %66, i32 0, i32 2, !dbg !9393
  %67 = load i32, i32* %volmode, align 4, !dbg !9393
  switch i32 %67, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb98
    i32 2, label %sw.bb101
    i32 3, label %sw.bb104
  ], !dbg !9394

sw.bb:                                            ; preds = %if.end93
  %68 = load float, float* %bulge, align 4, !dbg !9395
  %call94 = call float @sqrtf(float %68) #7, !dbg !9397
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !9398
  store float %call94, float* %arrayidx95, align 4, !dbg !9399
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !9400
  %69 = load float, float* %arrayidx96, align 4, !dbg !9400
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 2, !dbg !9401
  store float %69, float* %arrayidx97, align 4, !dbg !9402
  br label %sw.epilog, !dbg !9403

sw.bb98:                                          ; preds = %if.end93
  %70 = load float, float* %bulge, align 4, !dbg !9404
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !9405
  store float %70, float* %arrayidx99, align 4, !dbg !9406
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 2, !dbg !9407
  store float 1.000000e+00, float* %arrayidx100, align 4, !dbg !9408
  br label %sw.epilog, !dbg !9409

sw.bb101:                                         ; preds = %if.end93
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !9410
  store float 1.000000e+00, float* %arrayidx102, align 4, !dbg !9411
  %71 = load float, float* %bulge, align 4, !dbg !9412
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 2, !dbg !9413
  store float %71, float* %arrayidx103, align 4, !dbg !9414
  br label %sw.epilog, !dbg !9415

sw.bb104:                                         ; preds = %if.end93
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !9416
  store float 1.000000e+00, float* %arrayidx105, align 4, !dbg !9417
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 2, !dbg !9418
  store float 1.000000e+00, float* %arrayidx106, align 4, !dbg !9419
  br label %sw.epilog, !dbg !9420

sw.default:                                       ; preds = %if.end93
  br label %if.end193, !dbg !9421

sw.epilog:                                        ; preds = %sw.bb104, %sw.bb101, %sw.bb98, %sw.bb
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !9422
  %72 = load float, float* %arrayidx107, align 4, !dbg !9422
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !9423
  %73 = load float, float* %arrayidx108, align 4, !dbg !9423
  %mul109 = fmul float %72, %73, !dbg !9424
  %74 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9425
  %matrix110 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %74, i32 0, i32 3, !dbg !9426
  %arrayidx111 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix110, i64 0, i64 0, !dbg !9425
  %arrayidx112 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx111, i64 0, i64 0, !dbg !9425
  store float %mul109, float* %arrayidx112, align 8, !dbg !9427
  %75 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9428
  %matrix113 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %75, i32 0, i32 3, !dbg !9429
  %arrayidx114 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix113, i64 0, i64 0, !dbg !9428
  %arrayidx115 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx114, i64 0, i64 1, !dbg !9428
  store float 0.000000e+00, float* %arrayidx115, align 4, !dbg !9430
  %76 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9431
  %matrix116 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %76, i32 0, i32 3, !dbg !9432
  %arrayidx117 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix116, i64 0, i64 0, !dbg !9431
  %arrayidx118 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx117, i64 0, i64 2, !dbg !9431
  store float 0.000000e+00, float* %arrayidx118, align 8, !dbg !9433
  %77 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9434
  %matrix119 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %77, i32 0, i32 3, !dbg !9435
  %arrayidx120 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix119, i64 0, i64 1, !dbg !9434
  %arrayidx121 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx120, i64 0, i64 0, !dbg !9434
  store float 0.000000e+00, float* %arrayidx121, align 8, !dbg !9436
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !9437
  %78 = load float, float* %arrayidx122, align 4, !dbg !9437
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 1, !dbg !9438
  %79 = load float, float* %arrayidx123, align 4, !dbg !9438
  %mul124 = fmul float %78, %79, !dbg !9439
  %80 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9440
  %matrix125 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %80, i32 0, i32 3, !dbg !9441
  %arrayidx126 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix125, i64 0, i64 1, !dbg !9440
  %arrayidx127 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx126, i64 0, i64 1, !dbg !9440
  store float %mul124, float* %arrayidx127, align 4, !dbg !9442
  %81 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9443
  %matrix128 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %81, i32 0, i32 3, !dbg !9444
  %arrayidx129 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix128, i64 0, i64 1, !dbg !9443
  %arrayidx130 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx129, i64 0, i64 2, !dbg !9443
  store float 0.000000e+00, float* %arrayidx130, align 8, !dbg !9445
  %82 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9446
  %matrix131 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %82, i32 0, i32 3, !dbg !9447
  %arrayidx132 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix131, i64 0, i64 2, !dbg !9446
  %arrayidx133 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx132, i64 0, i64 0, !dbg !9446
  store float 0.000000e+00, float* %arrayidx133, align 8, !dbg !9448
  %83 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9449
  %matrix134 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %83, i32 0, i32 3, !dbg !9450
  %arrayidx135 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix134, i64 0, i64 2, !dbg !9449
  %arrayidx136 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx135, i64 0, i64 1, !dbg !9449
  store float 0.000000e+00, float* %arrayidx136, align 4, !dbg !9451
  %arrayidx137 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !9452
  %84 = load float, float* %arrayidx137, align 4, !dbg !9452
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 2, !dbg !9453
  %85 = load float, float* %arrayidx138, align 4, !dbg !9453
  %mul139 = fmul float %84, %85, !dbg !9454
  %86 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9455
  %matrix140 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %86, i32 0, i32 3, !dbg !9456
  %arrayidx141 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix140, i64 0, i64 2, !dbg !9455
  %arrayidx142 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx141, i64 0, i64 2, !dbg !9455
  store float %mul139, float* %arrayidx142, align 8, !dbg !9457
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9458
  %87 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9459
  %matrix144 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %87, i32 0, i32 3, !dbg !9460
  %arrayidx145 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix144, i64 0, i64 3, !dbg !9459
  %arraydecay146 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx145, i64 0, i64 0, !dbg !9459
  %88 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9461
  %matrix147 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %88, i32 0, i32 4, !dbg !9462
  %arrayidx148 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix147, i64 0, i64 3, !dbg !9461
  %arraydecay149 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx148, i64 0, i64 0, !dbg !9461
  call void @sub_v3_v3v3(float* %arraydecay143, float* %arraydecay146, float* %arraydecay149), !dbg !9463
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9464
  %call151 = call float @normalize_v3(float* %arraydecay150), !dbg !9465
  %arrayidx152 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 1, !dbg !9466
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx152, i64 0, i64 0, !dbg !9466
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9467
  call void @negate_v3_v3(float* %arraydecay153, float* %arraydecay154), !dbg !9468
  %89 = load %struct.bStretchToConstraint*, %struct.bStretchToConstraint** %data, align 8, !dbg !9469
  %plane = getelementptr inbounds %struct.bStretchToConstraint, %struct.bStretchToConstraint* %89, i32 0, i32 3, !dbg !9470
  %90 = load i32, i32* %plane, align 8, !dbg !9470
  switch i32 %90, label %sw.epilog187 [
    i32 0, label %sw.bb155
    i32 2, label %sw.bb171
  ], !dbg !9471

sw.bb155:                                         ; preds = %sw.epilog
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %orth, i64 0, i64 0, !dbg !9472
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9474
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %xx, i64 0, i64 0, !dbg !9475
  call void @cross_v3_v3v3(float* %arraydecay156, float* %arraydecay157, float* %arraydecay158), !dbg !9476
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %orth, i64 0, i64 0, !dbg !9477
  %call160 = call float @normalize_v3(float* %arraydecay159), !dbg !9478
  %arrayidx161 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !9479
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx161, i64 0, i64 0, !dbg !9479
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %orth, i64 0, i64 0, !dbg !9480
  call void @copy_v3_v3(float* %arraydecay162, float* %arraydecay163), !dbg !9481
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %xx, i64 0, i64 0, !dbg !9482
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %orth, i64 0, i64 0, !dbg !9483
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9484
  call void @cross_v3_v3v3(float* %arraydecay164, float* %arraydecay165, float* %arraydecay166), !dbg !9485
  %arrayidx167 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !9486
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx167, i64 0, i64 0, !dbg !9486
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %xx, i64 0, i64 0, !dbg !9487
  %call170 = call float @normalize_v3_v3(float* %arraydecay168, float* %arraydecay169), !dbg !9488
  br label %sw.epilog187, !dbg !9489

sw.bb171:                                         ; preds = %sw.epilog
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %orth, i64 0, i64 0, !dbg !9490
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9491
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %zz, i64 0, i64 0, !dbg !9492
  call void @cross_v3_v3v3(float* %arraydecay172, float* %arraydecay173, float* %arraydecay174), !dbg !9493
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %orth, i64 0, i64 0, !dbg !9494
  %call176 = call float @normalize_v3(float* %arraydecay175), !dbg !9495
  %arrayidx177 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !9496
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx177, i64 0, i64 0, !dbg !9496
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %orth, i64 0, i64 0, !dbg !9497
  call void @negate_v3_v3(float* %arraydecay178, float* %arraydecay179), !dbg !9498
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %zz, i64 0, i64 0, !dbg !9499
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %orth, i64 0, i64 0, !dbg !9500
  %arraydecay182 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9501
  call void @cross_v3_v3v3(float* %arraydecay180, float* %arraydecay181, float* %arraydecay182), !dbg !9502
  %arrayidx183 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 2, !dbg !9503
  %arraydecay184 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx183, i64 0, i64 0, !dbg !9503
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %zz, i64 0, i64 0, !dbg !9504
  %call186 = call float @normalize_v3_v3(float* %arraydecay184, float* %arraydecay185), !dbg !9505
  br label %sw.epilog187, !dbg !9506

sw.epilog187:                                     ; preds = %sw.epilog, %sw.bb171, %sw.bb155
  %91 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9507
  %matrix188 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %91, i32 0, i32 3, !dbg !9508
  %arraydecay189 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix188, i64 0, i64 0, !dbg !9507
  %arraydecay190 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !9509
  %92 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9510
  %matrix191 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %92, i32 0, i32 3, !dbg !9511
  %arraydecay192 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix191, i64 0, i64 0, !dbg !9510
  call void @mul_m4_m3m4([4 x float]* %arraydecay189, [3 x float]* %arraydecay190, [4 x float]* %arraydecay192), !dbg !9512
  br label %if.end193, !dbg !9513

if.end193:                                        ; preds = %sw.default, %sw.epilog187, %land.lhs.true, %entry
  ret void, !dbg !9514
}

; Function Attrs: nounwind
declare dso_local float @powf(float, float) #5

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !9515 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !9519, metadata !DIExpression()), !dbg !9520
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !9521, metadata !DIExpression()), !dbg !9522
  %0 = load float, float* %a.addr, align 4, !dbg !9523
  %1 = load float, float* %b.addr, align 4, !dbg !9524
  %cmp = fcmp ogt float %0, %1, !dbg !9525
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9526

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !9527
  br label %cond.end, !dbg !9526

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !9528
  br label %cond.end, !dbg !9526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9526
  ret float %cond, !dbg !9529
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !9530 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !9531, metadata !DIExpression()), !dbg !9532
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !9533, metadata !DIExpression()), !dbg !9534
  %0 = load float, float* %a.addr, align 4, !dbg !9535
  %1 = load float, float* %b.addr, align 4, !dbg !9536
  %cmp = fcmp olt float %0, %1, !dbg !9537
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9538

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !9539
  br label %cond.end, !dbg !9538

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !9540
  br label %cond.end, !dbg !9538

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9538
  ret float %cond, !dbg !9541
}

; Function Attrs: nounwind
declare dso_local float @atanf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal float @interpf(float %target, float %origin, float %fac) #0 !dbg !9542 {
entry:
  %target.addr = alloca float, align 4
  %origin.addr = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %target, float* %target.addr, align 4
  call void @llvm.dbg.declare(metadata float* %target.addr, metadata !9545, metadata !DIExpression()), !dbg !9546
  store float %origin, float* %origin.addr, align 4
  call void @llvm.dbg.declare(metadata float* %origin.addr, metadata !9547, metadata !DIExpression()), !dbg !9548
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !9549, metadata !DIExpression()), !dbg !9550
  %0 = load float, float* %fac.addr, align 4, !dbg !9551
  %1 = load float, float* %target.addr, align 4, !dbg !9552
  %mul = fmul float %0, %1, !dbg !9553
  %2 = load float, float* %fac.addr, align 4, !dbg !9554
  %sub = fsub float 1.000000e+00, %2, !dbg !9555
  %3 = load float, float* %origin.addr, align 4, !dbg !9556
  %mul1 = fmul float %sub, %3, !dbg !9557
  %add = fadd float %mul, %mul1, !dbg !9558
  ret float %add, !dbg !9559
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3_v3(float* %r, float* %a) #0 !dbg !9560 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9561, metadata !DIExpression()), !dbg !9562
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9563, metadata !DIExpression()), !dbg !9564
  %0 = load float*, float** %a.addr, align 8, !dbg !9565
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9565
  %1 = load float, float* %arrayidx, align 4, !dbg !9565
  %fneg = fneg float %1, !dbg !9566
  %2 = load float*, float** %r.addr, align 8, !dbg !9567
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9567
  store float %fneg, float* %arrayidx1, align 4, !dbg !9568
  %3 = load float*, float** %a.addr, align 8, !dbg !9569
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !9569
  %4 = load float, float* %arrayidx2, align 4, !dbg !9569
  %fneg3 = fneg float %4, !dbg !9570
  %5 = load float*, float** %r.addr, align 8, !dbg !9571
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !9571
  store float %fneg3, float* %arrayidx4, align 4, !dbg !9572
  %6 = load float*, float** %a.addr, align 8, !dbg !9573
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !9573
  %7 = load float, float* %arrayidx5, align 4, !dbg !9573
  %fneg6 = fneg float %7, !dbg !9574
  %8 = load float*, float** %r.addr, align 8, !dbg !9575
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !9575
  store float %fneg6, float* %arrayidx7, align 4, !dbg !9576
  ret void, !dbg !9577
}

; Function Attrs: noinline nounwind uwtable
define internal void @minmax_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !9578 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bMinMaxConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9579, metadata !DIExpression()), !dbg !9580
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !9581, metadata !DIExpression()), !dbg !9582
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !9583, metadata !DIExpression()), !dbg !9584
  call void @llvm.dbg.declare(metadata %struct.bMinMaxConstraint** %data, metadata !9585, metadata !DIExpression()), !dbg !9586
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9587
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !9588
  %1 = load i8*, i8** %data1, align 8, !dbg !9588
  %2 = bitcast i8* %1 to %struct.bMinMaxConstraint*, !dbg !9587
  store %struct.bMinMaxConstraint* %2, %struct.bMinMaxConstraint** %data, align 8, !dbg !9586
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !9589
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9590
  %5 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9591
  %tar = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %5, i32 0, i32 0, !dbg !9592
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !9593
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !9594
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !9589
  ret void, !dbg !9595
}

; Function Attrs: noinline nounwind uwtable
define internal void @minmax_new_data(i8* %cdata) #0 !dbg !9596 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bMinMaxConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !9597, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.declare(metadata %struct.bMinMaxConstraint** %data, metadata !9599, metadata !DIExpression()), !dbg !9600
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !9601
  %1 = bitcast i8* %0 to %struct.bMinMaxConstraint*, !dbg !9602
  store %struct.bMinMaxConstraint* %1, %struct.bMinMaxConstraint** %data, align 8, !dbg !9600
  %2 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9603
  %minmaxflag = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %2, i32 0, i32 1, !dbg !9604
  store i32 2, i32* %minmaxflag, align 8, !dbg !9605
  %3 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9606
  %offset = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %3, i32 0, i32 2, !dbg !9607
  store float 0.000000e+00, float* %offset, align 4, !dbg !9608
  %4 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9609
  %cache = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %4, i32 0, i32 8, !dbg !9610
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %cache, i64 0, i64 0, !dbg !9609
  call void @zero_v3(float* %arraydecay), !dbg !9611
  %5 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9612
  %flag = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %5, i32 0, i32 3, !dbg !9613
  store i32 0, i32* %flag, align 8, !dbg !9614
  ret void, !dbg !9615
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @minmax_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !9616 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bMinMaxConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9617, metadata !DIExpression()), !dbg !9618
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !9619, metadata !DIExpression()), !dbg !9620
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9621
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !9621
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !9623

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9624
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !9624
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !9625

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bMinMaxConstraint** %data, metadata !9626, metadata !DIExpression()), !dbg !9628
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9629
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !9630
  %3 = load i8*, i8** %data2, align 8, !dbg !9630
  %4 = bitcast i8* %3 to %struct.bMinMaxConstraint*, !dbg !9629
  store %struct.bMinMaxConstraint* %4, %struct.bMinMaxConstraint** %data, align 8, !dbg !9628
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !9631, metadata !DIExpression()), !dbg !9632
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9633
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !9633
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !9633
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !9633
  %7 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9633
  %tar = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %7, i32 0, i32 0, !dbg !9633
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !9633
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9633
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !9633
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !9633
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9633
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !9633
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !9633
  %11 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9633
  %subtarget4 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %11, i32 0, i32 9, !dbg !9633
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !9633
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !9633
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9633
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !9633
  %13 = load i8, i8* %tarspace, align 1, !dbg !9633
  %conv = zext i8 %13 to i16, !dbg !9633
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9633
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !9633
  store i16 %conv, i16* %space, align 8, !dbg !9633
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9633
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !9633
  store i16 1, i16* %flag, align 2, !dbg !9633
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9635
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !9635
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !9635
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !9635
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !9633

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9637
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !9637
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !9637
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !9637
  %20 = load i16, i16* %type, align 8, !dbg !9637
  %conv11 = sext i16 %20 to i32, !dbg !9637
  %cmp = icmp eq i32 %conv11, 25, !dbg !9637
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !9637

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9637
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !9637
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !9637
  %22 = load i8, i8* %arrayidx, align 8, !dbg !9637
  %conv15 = zext i8 %22 to i32, !dbg !9637
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !9637
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !9640

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !9641, metadata !DIExpression()), !dbg !9643
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9643
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !9643
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !9643
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !9643
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !9643
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9643
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !9643
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !9643
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !9643
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !9643
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9643
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !9643
  store i16 2, i16* %type22, align 4, !dbg !9643
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !9643
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !9643
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !9643

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !9643
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !9643
  %30 = load i16, i16* %rotmode, align 4, !dbg !9643
  %conv24 = sext i16 %30 to i32, !dbg !9643
  br label %cond.end, !dbg !9643

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !9643

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !9643
  %conv25 = trunc i32 %cond to i16, !dbg !9643
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9643
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !9643
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !9643
  br label %if.end49, !dbg !9643

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9644
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !9644
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !9644
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !9644
  %34 = load i16, i16* %type27, align 8, !dbg !9644
  %conv28 = sext i16 %34 to i32, !dbg !9644
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !9644
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !9644

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9644
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !9644
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !9644
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !9644
  %37 = load i16, i16* %type32, align 8, !dbg !9644
  %conv33 = sext i16 %37 to i32, !dbg !9644
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !9644
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !9644

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9644
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !9644
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !9644
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !9644
  %conv39 = zext i8 %39 to i32, !dbg !9644
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !9644
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !9637

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9646
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !9646
  store i16 3, i16* %type42, align 4, !dbg !9646
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9646
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !9646
  store i16 1, i16* %rotOrder43, align 2, !dbg !9646
  br label %if.end, !dbg !9646

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9648
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !9648
  store i16 1, i16* %type45, align 4, !dbg !9648
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9648
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !9648
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !9648
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !9648
  %45 = load i16, i16* %rotmode47, align 8, !dbg !9648
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9648
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !9648
  store i16 %45, i16* %rotOrder48, align 2, !dbg !9648
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !9640

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9633
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9633
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !9633
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !9633
  store i32 1, i32* %retval, align 4, !dbg !9650
  br label %return, !dbg !9650

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !9651
  br label %return, !dbg !9651

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !9652
  ret i32 %50, !dbg !9652
}

; Function Attrs: noinline nounwind uwtable
define internal void @minmax_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !9653 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bMinMaxConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9654, metadata !DIExpression()), !dbg !9655
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !9656, metadata !DIExpression()), !dbg !9657
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9660
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !9660
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !9662

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9663
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !9663
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !9664

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bMinMaxConstraint** %data, metadata !9665, metadata !DIExpression()), !dbg !9667
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9668
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !9669
  %3 = load i8*, i8** %data2, align 8, !dbg !9669
  %4 = bitcast i8* %3 to %struct.bMinMaxConstraint*, !dbg !9668
  store %struct.bMinMaxConstraint* %4, %struct.bMinMaxConstraint** %data, align 8, !dbg !9667
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !9670, metadata !DIExpression()), !dbg !9671
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9672
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !9673
  %6 = load i8*, i8** %first, align 8, !dbg !9673
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !9672
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !9671
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9674
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !9674
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !9677

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !9678, metadata !DIExpression()), !dbg !9680
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9680
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !9680
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !9680
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !9680
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !9681
  %conv = zext i8 %11 to i32, !dbg !9681
  %cmp = icmp eq i32 %conv, 0, !dbg !9681
  br i1 %cmp, label %if.then6, label %if.end, !dbg !9680

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9683
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !9683
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !9683
  %14 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9683
  %tar7 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %14, i32 0, i32 0, !dbg !9683
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !9683
  %15 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9683
  %subtarget = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %15, i32 0, i32 9, !dbg !9683
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !9683
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9683
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !9683
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !9683
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !9683
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9683
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !9683
  %18 = load i16, i16* %space, align 8, !dbg !9683
  %conv10 = trunc i16 %18 to i8, !dbg !9683
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9683
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !9683
  store i8 %conv10, i8* %tarspace, align 1, !dbg !9683
  br label %if.end, !dbg !9683

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9680
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9680
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !9680
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !9680
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !9680
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !9680
  br label %if.end11, !dbg !9680

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !9685

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !9686
}

; Function Attrs: noinline nounwind uwtable
define internal void @minmax_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !9687 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bMinMaxConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %obmat = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  %tarmat = alloca [4 x [4 x float]], align 16
  %tmat = alloca [4 x [4 x float]], align 16
  %val1 = alloca float, align 4
  %val2 = alloca float, align 4
  %index = alloca i32, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9688, metadata !DIExpression()), !dbg !9689
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !9690, metadata !DIExpression()), !dbg !9691
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !9692, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.declare(metadata %struct.bMinMaxConstraint** %data, metadata !9694, metadata !DIExpression()), !dbg !9695
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9696
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !9697
  %1 = load i8*, i8** %data1, align 8, !dbg !9697
  %2 = bitcast i8* %1 to %struct.bMinMaxConstraint*, !dbg !9696
  store %struct.bMinMaxConstraint* %2, %struct.bMinMaxConstraint** %data, align 8, !dbg !9695
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !9698, metadata !DIExpression()), !dbg !9699
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !9700
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !9701
  %4 = load i8*, i8** %first, align 8, !dbg !9701
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !9700
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !9699
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9702
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !9702
  br i1 %tobool, label %land.lhs.true, label %if.end102, !dbg !9702

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9702
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !9702
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !9702
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !9702
  br i1 %tobool2, label %if.then, label %if.end102, !dbg !9704

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obmat, metadata !9705, metadata !DIExpression()), !dbg !9707
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !9708, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tarmat, metadata !9710, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !9712, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.declare(metadata float* %val1, metadata !9714, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.declare(metadata float* %val2, metadata !9716, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9718, metadata !DIExpression()), !dbg !9719
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !9720
  %9 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9721
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %9, i32 0, i32 3, !dbg !9722
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !9721
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay3), !dbg !9723
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tarmat, i64 0, i64 0, !dbg !9724
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9725
  %matrix5 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 4, !dbg !9726
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix5, i64 0, i64 0, !dbg !9725
  call void @copy_m4_m4([4 x float]* %arraydecay4, [4 x float]* %arraydecay6), !dbg !9727
  %11 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9728
  %flag = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %11, i32 0, i32 3, !dbg !9730
  %12 = load i32, i32* %flag, align 8, !dbg !9730
  %and = and i32 %12, 4, !dbg !9731
  %tobool7 = icmp ne i32 %and, 0, !dbg !9731
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !9732

if.then8:                                         ; preds = %if.then
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !9733
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tarmat, i64 0, i64 0, !dbg !9735
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay9, [4 x float]* %arraydecay10), !dbg !9736
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !9737
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !9738
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !9739
  call void @mul_m4_m4m4([4 x float]* %arraydecay11, [4 x float]* %arraydecay12, [4 x float]* %arraydecay13), !dbg !9740
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !9741
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !9742
  call void @copy_m4_m4([4 x float]* %arraydecay14, [4 x float]* %arraydecay15), !dbg !9743
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tarmat, i64 0, i64 0, !dbg !9744
  call void @unit_m4([4 x float]* %arraydecay16), !dbg !9745
  br label %if.end, !dbg !9746

if.end:                                           ; preds = %if.then8, %if.then
  %13 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9747
  %minmaxflag = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %13, i32 0, i32 1, !dbg !9748
  %14 = load i32, i32* %minmaxflag, align 8, !dbg !9748
  switch i32 %14, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb20
    i32 0, label %sw.bb27
    i32 5, label %sw.bb34
    i32 4, label %sw.bb41
    i32 3, label %sw.bb48
  ], !dbg !9749

sw.bb:                                            ; preds = %if.end
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tarmat, i64 0, i64 3, !dbg !9750
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 2, !dbg !9750
  %15 = load float, float* %arrayidx17, align 8, !dbg !9750
  store float %15, float* %val1, align 4, !dbg !9752
  %arrayidx18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9753
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx18, i64 0, i64 2, !dbg !9753
  %16 = load float, float* %arrayidx19, align 8, !dbg !9753
  %17 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9754
  %offset = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %17, i32 0, i32 2, !dbg !9755
  %18 = load float, float* %offset, align 4, !dbg !9755
  %sub = fsub float %16, %18, !dbg !9756
  store float %sub, float* %val2, align 4, !dbg !9757
  store i32 2, i32* %index, align 4, !dbg !9758
  br label %sw.epilog, !dbg !9759

sw.bb20:                                          ; preds = %if.end
  %arrayidx21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tarmat, i64 0, i64 3, !dbg !9760
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx21, i64 0, i64 1, !dbg !9760
  %19 = load float, float* %arrayidx22, align 4, !dbg !9760
  store float %19, float* %val1, align 4, !dbg !9761
  %arrayidx23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9762
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx23, i64 0, i64 1, !dbg !9762
  %20 = load float, float* %arrayidx24, align 4, !dbg !9762
  %21 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9763
  %offset25 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %21, i32 0, i32 2, !dbg !9764
  %22 = load float, float* %offset25, align 4, !dbg !9764
  %sub26 = fsub float %20, %22, !dbg !9765
  store float %sub26, float* %val2, align 4, !dbg !9766
  store i32 1, i32* %index, align 4, !dbg !9767
  br label %sw.epilog, !dbg !9768

sw.bb27:                                          ; preds = %if.end
  %arrayidx28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tarmat, i64 0, i64 3, !dbg !9769
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx28, i64 0, i64 0, !dbg !9769
  %23 = load float, float* %arrayidx29, align 16, !dbg !9769
  store float %23, float* %val1, align 4, !dbg !9770
  %arrayidx30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9771
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx30, i64 0, i64 0, !dbg !9771
  %24 = load float, float* %arrayidx31, align 16, !dbg !9771
  %25 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9772
  %offset32 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %25, i32 0, i32 2, !dbg !9773
  %26 = load float, float* %offset32, align 4, !dbg !9773
  %sub33 = fsub float %24, %26, !dbg !9774
  store float %sub33, float* %val2, align 4, !dbg !9775
  store i32 0, i32* %index, align 4, !dbg !9776
  br label %sw.epilog, !dbg !9777

sw.bb34:                                          ; preds = %if.end
  %arrayidx35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tarmat, i64 0, i64 3, !dbg !9778
  %arrayidx36 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx35, i64 0, i64 2, !dbg !9778
  %27 = load float, float* %arrayidx36, align 8, !dbg !9778
  store float %27, float* %val2, align 4, !dbg !9779
  %arrayidx37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9780
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx37, i64 0, i64 2, !dbg !9780
  %28 = load float, float* %arrayidx38, align 8, !dbg !9780
  %29 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9781
  %offset39 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %29, i32 0, i32 2, !dbg !9782
  %30 = load float, float* %offset39, align 4, !dbg !9782
  %sub40 = fsub float %28, %30, !dbg !9783
  store float %sub40, float* %val1, align 4, !dbg !9784
  store i32 2, i32* %index, align 4, !dbg !9785
  br label %sw.epilog, !dbg !9786

sw.bb41:                                          ; preds = %if.end
  %arrayidx42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tarmat, i64 0, i64 3, !dbg !9787
  %arrayidx43 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx42, i64 0, i64 1, !dbg !9787
  %31 = load float, float* %arrayidx43, align 4, !dbg !9787
  store float %31, float* %val2, align 4, !dbg !9788
  %arrayidx44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9789
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx44, i64 0, i64 1, !dbg !9789
  %32 = load float, float* %arrayidx45, align 4, !dbg !9789
  %33 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9790
  %offset46 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %33, i32 0, i32 2, !dbg !9791
  %34 = load float, float* %offset46, align 4, !dbg !9791
  %sub47 = fsub float %32, %34, !dbg !9792
  store float %sub47, float* %val1, align 4, !dbg !9793
  store i32 1, i32* %index, align 4, !dbg !9794
  br label %sw.epilog, !dbg !9795

sw.bb48:                                          ; preds = %if.end
  %arrayidx49 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tarmat, i64 0, i64 3, !dbg !9796
  %arrayidx50 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx49, i64 0, i64 0, !dbg !9796
  %35 = load float, float* %arrayidx50, align 16, !dbg !9796
  store float %35, float* %val2, align 4, !dbg !9797
  %arrayidx51 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9798
  %arrayidx52 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx51, i64 0, i64 0, !dbg !9798
  %36 = load float, float* %arrayidx52, align 16, !dbg !9798
  %37 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9799
  %offset53 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %37, i32 0, i32 2, !dbg !9800
  %38 = load float, float* %offset53, align 4, !dbg !9800
  %sub54 = fsub float %36, %38, !dbg !9801
  store float %sub54, float* %val1, align 4, !dbg !9802
  store i32 0, i32* %index, align 4, !dbg !9803
  br label %sw.epilog, !dbg !9804

sw.default:                                       ; preds = %if.end
  br label %if.end102, !dbg !9805

sw.epilog:                                        ; preds = %sw.bb48, %sw.bb41, %sw.bb34, %sw.bb27, %sw.bb20, %sw.bb
  %39 = load float, float* %val1, align 4, !dbg !9806
  %40 = load float, float* %val2, align 4, !dbg !9808
  %cmp = fcmp ogt float %39, %40, !dbg !9809
  br i1 %cmp, label %if.then55, label %if.else98, !dbg !9810

if.then55:                                        ; preds = %sw.epilog
  %arrayidx56 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tarmat, i64 0, i64 3, !dbg !9811
  %41 = load i32, i32* %index, align 4, !dbg !9813
  %idxprom = sext i32 %41 to i64, !dbg !9811
  %arrayidx57 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx56, i64 0, i64 %idxprom, !dbg !9811
  %42 = load float, float* %arrayidx57, align 4, !dbg !9811
  %43 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9814
  %offset58 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %43, i32 0, i32 2, !dbg !9815
  %44 = load float, float* %offset58, align 4, !dbg !9815
  %add = fadd float %42, %44, !dbg !9816
  %arrayidx59 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9817
  %45 = load i32, i32* %index, align 4, !dbg !9818
  %idxprom60 = sext i32 %45 to i64, !dbg !9817
  %arrayidx61 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx59, i64 0, i64 %idxprom60, !dbg !9817
  store float %add, float* %arrayidx61, align 4, !dbg !9819
  %46 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9820
  %flag62 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %46, i32 0, i32 3, !dbg !9822
  %47 = load i32, i32* %flag62, align 8, !dbg !9822
  %and63 = and i32 %47, 1, !dbg !9823
  %tobool64 = icmp ne i32 %and63, 0, !dbg !9823
  br i1 %tobool64, label %if.then65, label %if.end79, !dbg !9824

if.then65:                                        ; preds = %if.then55
  %48 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9825
  %flag66 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %48, i32 0, i32 3, !dbg !9828
  %49 = load i32, i32* %flag66, align 8, !dbg !9828
  %and67 = and i32 %49, 2, !dbg !9829
  %tobool68 = icmp ne i32 %and67, 0, !dbg !9829
  br i1 %tobool68, label %if.then69, label %if.else, !dbg !9830

if.then69:                                        ; preds = %if.then65
  %arrayidx70 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9831
  %arraydecay71 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx70, i64 0, i64 0, !dbg !9831
  %50 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9833
  %cache = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %50, i32 0, i32 8, !dbg !9834
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %cache, i64 0, i64 0, !dbg !9833
  call void @copy_v3_v3(float* %arraydecay71, float* %arraydecay72), !dbg !9835
  br label %if.end78, !dbg !9836

if.else:                                          ; preds = %if.then65
  %51 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9837
  %cache73 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %51, i32 0, i32 8, !dbg !9839
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %cache73, i64 0, i64 0, !dbg !9837
  %arrayidx75 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9840
  %arraydecay76 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx75, i64 0, i64 0, !dbg !9840
  call void @copy_v3_v3(float* %arraydecay74, float* %arraydecay76), !dbg !9841
  %52 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9842
  %flag77 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %52, i32 0, i32 3, !dbg !9843
  %53 = load i32, i32* %flag77, align 8, !dbg !9844
  %or = or i32 %53, 2, !dbg !9844
  store i32 %or, i32* %flag77, align 8, !dbg !9844
  br label %if.end78

if.end78:                                         ; preds = %if.else, %if.then69
  br label %if.end79, !dbg !9845

if.end79:                                         ; preds = %if.end78, %if.then55
  %54 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9846
  %flag80 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %54, i32 0, i32 3, !dbg !9848
  %55 = load i32, i32* %flag80, align 8, !dbg !9848
  %and81 = and i32 %55, 4, !dbg !9849
  %tobool82 = icmp ne i32 %and81, 0, !dbg !9849
  br i1 %tobool82, label %if.then83, label %if.else91, !dbg !9850

if.then83:                                        ; preds = %if.end79
  %arraydecay84 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !9851
  %56 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9853
  %matrix85 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %56, i32 0, i32 4, !dbg !9854
  %arraydecay86 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix85, i64 0, i64 0, !dbg !9853
  %arraydecay87 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !9855
  call void @mul_m4_m4m4([4 x float]* %arraydecay84, [4 x float]* %arraydecay86, [4 x float]* %arraydecay87), !dbg !9856
  %57 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9857
  %matrix88 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %57, i32 0, i32 3, !dbg !9858
  %arraydecay89 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix88, i64 0, i64 0, !dbg !9857
  %arraydecay90 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !9859
  call void @copy_m4_m4([4 x float]* %arraydecay89, [4 x float]* %arraydecay90), !dbg !9860
  br label %if.end97, !dbg !9861

if.else91:                                        ; preds = %if.end79
  %58 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !9862
  %matrix92 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %58, i32 0, i32 3, !dbg !9864
  %arrayidx93 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix92, i64 0, i64 3, !dbg !9862
  %arraydecay94 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx93, i64 0, i64 0, !dbg !9862
  %arrayidx95 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9865
  %arraydecay96 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx95, i64 0, i64 0, !dbg !9865
  call void @copy_v3_v3(float* %arraydecay94, float* %arraydecay96), !dbg !9866
  br label %if.end97

if.end97:                                         ; preds = %if.else91, %if.then83
  br label %if.end101, !dbg !9867

if.else98:                                        ; preds = %sw.epilog
  %59 = load %struct.bMinMaxConstraint*, %struct.bMinMaxConstraint** %data, align 8, !dbg !9868
  %flag99 = getelementptr inbounds %struct.bMinMaxConstraint, %struct.bMinMaxConstraint* %59, i32 0, i32 3, !dbg !9870
  %60 = load i32, i32* %flag99, align 8, !dbg !9871
  %and100 = and i32 %60, -3, !dbg !9871
  store i32 %and100, i32* %flag99, align 8, !dbg !9871
  br label %if.end101

if.end101:                                        ; preds = %if.else98, %if.end97
  br label %if.end102, !dbg !9872

if.end102:                                        ; preds = %sw.default, %if.end101, %land.lhs.true, %entry
  ret void, !dbg !9873
}

; Function Attrs: noinline nounwind uwtable
define internal void @rbj_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !9874 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bRigidBodyJointConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9875, metadata !DIExpression()), !dbg !9876
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !9877, metadata !DIExpression()), !dbg !9878
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !9879, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.declare(metadata %struct.bRigidBodyJointConstraint** %data, metadata !9881, metadata !DIExpression()), !dbg !9882
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9883
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !9884
  %1 = load i8*, i8** %data1, align 8, !dbg !9884
  %2 = bitcast i8* %1 to %struct.bRigidBodyJointConstraint*, !dbg !9883
  store %struct.bRigidBodyJointConstraint* %2, %struct.bRigidBodyJointConstraint** %data, align 8, !dbg !9882
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !9885
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9886
  %5 = load %struct.bRigidBodyJointConstraint*, %struct.bRigidBodyJointConstraint** %data, align 8, !dbg !9887
  %tar = getelementptr inbounds %struct.bRigidBodyJointConstraint, %struct.bRigidBodyJointConstraint* %5, i32 0, i32 0, !dbg !9888
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !9889
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !9890
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !9885
  %8 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !9891
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9892
  %10 = load %struct.bRigidBodyJointConstraint*, %struct.bRigidBodyJointConstraint** %data, align 8, !dbg !9893
  %child = getelementptr inbounds %struct.bRigidBodyJointConstraint, %struct.bRigidBodyJointConstraint* %10, i32 0, i32 1, !dbg !9894
  %11 = bitcast %struct.Object** %child to %struct.ID**, !dbg !9895
  %12 = load i8*, i8** %userdata.addr, align 8, !dbg !9896
  call void %8(%struct.bConstraint* %9, %struct.ID** %11, i8 zeroext 0, i8* %12), !dbg !9891
  ret void, !dbg !9897
}

; Function Attrs: noinline nounwind uwtable
define internal void @rbj_new_data(i8* %cdata) #0 !dbg !9898 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bRigidBodyJointConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !9899, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.declare(metadata %struct.bRigidBodyJointConstraint** %data, metadata !9901, metadata !DIExpression()), !dbg !9902
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !9903
  %1 = bitcast i8* %0 to %struct.bRigidBodyJointConstraint*, !dbg !9904
  store %struct.bRigidBodyJointConstraint* %1, %struct.bRigidBodyJointConstraint** %data, align 8, !dbg !9902
  %2 = load %struct.bRigidBodyJointConstraint*, %struct.bRigidBodyJointConstraint** %data, align 8, !dbg !9905
  %type = getelementptr inbounds %struct.bRigidBodyJointConstraint, %struct.bRigidBodyJointConstraint* %2, i32 0, i32 2, !dbg !9906
  store i32 1, i32* %type, align 8, !dbg !9907
  ret void, !dbg !9908
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rbj_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !9909 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bRigidBodyJointConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9910, metadata !DIExpression()), !dbg !9911
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !9912, metadata !DIExpression()), !dbg !9913
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9914
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !9914
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !9916

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9917
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !9917
  br i1 %tobool1, label %if.then, label %if.end7, !dbg !9918

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bRigidBodyJointConstraint** %data, metadata !9919, metadata !DIExpression()), !dbg !9921
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9922
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !9923
  %3 = load i8*, i8** %data2, align 8, !dbg !9923
  %4 = bitcast i8* %3 to %struct.bRigidBodyJointConstraint*, !dbg !9922
  store %struct.bRigidBodyJointConstraint* %4, %struct.bRigidBodyJointConstraint** %data, align 8, !dbg !9921
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !9924, metadata !DIExpression()), !dbg !9925
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9926
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !9926
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !9926
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !9926
  %7 = load %struct.bRigidBodyJointConstraint*, %struct.bRigidBodyJointConstraint** %data, align 8, !dbg !9926
  %tar = getelementptr inbounds %struct.bRigidBodyJointConstraint, %struct.bRigidBodyJointConstraint* %7, i32 0, i32 0, !dbg !9926
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !9926
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9926
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !9926
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !9926
  %10 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9926
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %10, i32 0, i32 6, !dbg !9926
  %11 = load i8, i8* %tarspace, align 1, !dbg !9926
  %conv = zext i8 %11 to i16, !dbg !9926
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9926
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 5, !dbg !9926
  store i16 %conv, i16* %space, align 8, !dbg !9926
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9926
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %13, i32 0, i32 6, !dbg !9926
  store i16 1, i16* %flag, align 2, !dbg !9926
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9928
  %tar4 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 2, !dbg !9928
  %15 = load %struct.Object*, %struct.Object** %tar4, align 8, !dbg !9928
  %tobool5 = icmp ne %struct.Object* %15, null, !dbg !9928
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !9926

if.then6:                                         ; preds = %if.then
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9928
  %type = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 7, !dbg !9928
  store i16 1, i16* %type, align 4, !dbg !9928
  br label %if.end, !dbg !9928

if.end:                                           ; preds = %if.then6, %if.then
  %17 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9926
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9926
  %19 = bitcast %struct.bConstraintTarget* %18 to i8*, !dbg !9926
  call void @BLI_addtail(%struct.ListBase* %17, i8* %19), !dbg !9926
  store i32 1, i32* %retval, align 4, !dbg !9930
  br label %return, !dbg !9930

if.end7:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !9931
  br label %return, !dbg !9931

return:                                           ; preds = %if.end7, %if.end
  %20 = load i32, i32* %retval, align 4, !dbg !9932
  ret i32 %20, !dbg !9932
}

; Function Attrs: noinline nounwind uwtable
define internal void @rbj_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !9933 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bRigidBodyJointConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9934, metadata !DIExpression()), !dbg !9935
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !9938, metadata !DIExpression()), !dbg !9939
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9940
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !9940
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !9942

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9943
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !9943
  br i1 %tobool1, label %if.then, label %if.end10, !dbg !9944

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bRigidBodyJointConstraint** %data, metadata !9945, metadata !DIExpression()), !dbg !9947
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9948
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !9949
  %3 = load i8*, i8** %data2, align 8, !dbg !9949
  %4 = bitcast i8* %3 to %struct.bRigidBodyJointConstraint*, !dbg !9948
  store %struct.bRigidBodyJointConstraint* %4, %struct.bRigidBodyJointConstraint** %data, align 8, !dbg !9947
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !9950, metadata !DIExpression()), !dbg !9951
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9952
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !9953
  %6 = load i8*, i8** %first, align 8, !dbg !9953
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !9952
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !9951
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9954
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !9954
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !9957

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !9958, metadata !DIExpression()), !dbg !9960
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9960
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !9960
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !9960
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !9960
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !9961
  %conv = zext i8 %11 to i32, !dbg !9961
  %cmp = icmp eq i32 %conv, 0, !dbg !9961
  br i1 %cmp, label %if.then6, label %if.end, !dbg !9960

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9963
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !9963
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !9963
  %14 = load %struct.bRigidBodyJointConstraint*, %struct.bRigidBodyJointConstraint** %data, align 8, !dbg !9963
  %tar7 = getelementptr inbounds %struct.bRigidBodyJointConstraint, %struct.bRigidBodyJointConstraint* %14, i32 0, i32 0, !dbg !9963
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !9963
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9963
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 5, !dbg !9963
  %16 = load i16, i16* %space, align 8, !dbg !9963
  %conv8 = trunc i16 %16 to i8, !dbg !9963
  %17 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9963
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %17, i32 0, i32 6, !dbg !9963
  store i8 %conv8, i8* %tarspace, align 1, !dbg !9963
  br label %if.end, !dbg !9963

if.end:                                           ; preds = %if.then6, %if.then4
  %18 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !9960
  %19 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9960
  %20 = bitcast %struct.bConstraintTarget* %19 to i8*, !dbg !9960
  call void @BLI_freelinkN(%struct.ListBase* %18, i8* %20), !dbg !9960
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !9960
  store %struct.bConstraintTarget* %21, %struct.bConstraintTarget** %ct, align 8, !dbg !9960
  br label %if.end9, !dbg !9960

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end10, !dbg !9965

if.end10:                                         ; preds = %if.end9, %land.lhs.true, %entry
  ret void, !dbg !9966
}

; Function Attrs: noinline nounwind uwtable
define internal void @clampto_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !9967 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bClampToConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9968, metadata !DIExpression()), !dbg !9969
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !9970, metadata !DIExpression()), !dbg !9971
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !9972, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.declare(metadata %struct.bClampToConstraint** %data, metadata !9974, metadata !DIExpression()), !dbg !9982
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9983
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !9984
  %1 = load i8*, i8** %data1, align 8, !dbg !9984
  %2 = bitcast i8* %1 to %struct.bClampToConstraint*, !dbg !9983
  store %struct.bClampToConstraint* %2, %struct.bClampToConstraint** %data, align 8, !dbg !9982
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !9985
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9986
  %5 = load %struct.bClampToConstraint*, %struct.bClampToConstraint** %data, align 8, !dbg !9987
  %tar = getelementptr inbounds %struct.bClampToConstraint, %struct.bClampToConstraint* %5, i32 0, i32 0, !dbg !9988
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !9989
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !9990
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !9985
  ret void, !dbg !9991
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @clampto_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !9992 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bClampToConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !9993, metadata !DIExpression()), !dbg !9994
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !9995, metadata !DIExpression()), !dbg !9996
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !9997
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !9997
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !9999

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10000
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !10000
  br i1 %tobool1, label %if.then, label %if.end7, !dbg !10001

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bClampToConstraint** %data, metadata !10002, metadata !DIExpression()), !dbg !10004
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10005
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !10006
  %3 = load i8*, i8** %data2, align 8, !dbg !10006
  %4 = bitcast i8* %3 to %struct.bClampToConstraint*, !dbg !10005
  store %struct.bClampToConstraint* %4, %struct.bClampToConstraint** %data, align 8, !dbg !10004
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !10007, metadata !DIExpression()), !dbg !10008
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10009
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !10009
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !10009
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !10009
  %7 = load %struct.bClampToConstraint*, %struct.bClampToConstraint** %data, align 8, !dbg !10009
  %tar = getelementptr inbounds %struct.bClampToConstraint, %struct.bClampToConstraint* %7, i32 0, i32 0, !dbg !10009
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !10009
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10009
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !10009
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !10009
  %10 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10009
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %10, i32 0, i32 6, !dbg !10009
  %11 = load i8, i8* %tarspace, align 1, !dbg !10009
  %conv = zext i8 %11 to i16, !dbg !10009
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10009
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 5, !dbg !10009
  store i16 %conv, i16* %space, align 8, !dbg !10009
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10009
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %13, i32 0, i32 6, !dbg !10009
  store i16 1, i16* %flag, align 2, !dbg !10009
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10011
  %tar4 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 2, !dbg !10011
  %15 = load %struct.Object*, %struct.Object** %tar4, align 8, !dbg !10011
  %tobool5 = icmp ne %struct.Object* %15, null, !dbg !10011
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10009

if.then6:                                         ; preds = %if.then
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10011
  %type = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 7, !dbg !10011
  store i16 1, i16* %type, align 4, !dbg !10011
  br label %if.end, !dbg !10011

if.end:                                           ; preds = %if.then6, %if.then
  %17 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10009
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10009
  %19 = bitcast %struct.bConstraintTarget* %18 to i8*, !dbg !10009
  call void @BLI_addtail(%struct.ListBase* %17, i8* %19), !dbg !10009
  store i32 1, i32* %retval, align 4, !dbg !10013
  br label %return, !dbg !10013

if.end7:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !10014
  br label %return, !dbg !10014

return:                                           ; preds = %if.end7, %if.end
  %20 = load i32, i32* %retval, align 4, !dbg !10015
  ret i32 %20, !dbg !10015
}

; Function Attrs: noinline nounwind uwtable
define internal void @clampto_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !10016 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bClampToConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !10019, metadata !DIExpression()), !dbg !10020
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !10021, metadata !DIExpression()), !dbg !10022
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10023
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !10023
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !10025

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10026
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !10026
  br i1 %tobool1, label %if.then, label %if.end10, !dbg !10027

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bClampToConstraint** %data, metadata !10028, metadata !DIExpression()), !dbg !10030
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10031
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !10032
  %3 = load i8*, i8** %data2, align 8, !dbg !10032
  %4 = bitcast i8* %3 to %struct.bClampToConstraint*, !dbg !10031
  store %struct.bClampToConstraint* %4, %struct.bClampToConstraint** %data, align 8, !dbg !10030
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !10033, metadata !DIExpression()), !dbg !10034
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10035
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !10036
  %6 = load i8*, i8** %first, align 8, !dbg !10036
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !10035
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !10034
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10037
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !10037
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !10040

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !10041, metadata !DIExpression()), !dbg !10043
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10043
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !10043
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !10043
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !10043
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !10044
  %conv = zext i8 %11 to i32, !dbg !10044
  %cmp = icmp eq i32 %conv, 0, !dbg !10044
  br i1 %cmp, label %if.then6, label %if.end, !dbg !10043

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10046
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !10046
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !10046
  %14 = load %struct.bClampToConstraint*, %struct.bClampToConstraint** %data, align 8, !dbg !10046
  %tar7 = getelementptr inbounds %struct.bClampToConstraint, %struct.bClampToConstraint* %14, i32 0, i32 0, !dbg !10046
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !10046
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10046
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 5, !dbg !10046
  %16 = load i16, i16* %space, align 8, !dbg !10046
  %conv8 = trunc i16 %16 to i8, !dbg !10046
  %17 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10046
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %17, i32 0, i32 6, !dbg !10046
  store i8 %conv8, i8* %tarspace, align 1, !dbg !10046
  br label %if.end, !dbg !10046

if.end:                                           ; preds = %if.then6, %if.then4
  %18 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10043
  %19 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10043
  %20 = bitcast %struct.bConstraintTarget* %19 to i8*, !dbg !10043
  call void @BLI_freelinkN(%struct.ListBase* %18, i8* %20), !dbg !10043
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !10043
  store %struct.bConstraintTarget* %21, %struct.bConstraintTarget** %ct, align 8, !dbg !10043
  br label %if.end9, !dbg !10043

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end10, !dbg !10048

if.end10:                                         ; preds = %if.end9, %land.lhs.true, %entry
  ret void, !dbg !10049
}

; Function Attrs: noinline nounwind uwtable
define internal void @clampto_get_tarmat(%struct.bConstraint* %UNUSED_con, %struct.bConstraintOb* %cob, %struct.bConstraintTarget* %ct, float %UNUSED_ctime) #0 !dbg !10050 {
entry:
  %UNUSED_con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %ct.addr = alloca %struct.bConstraintTarget*, align 8
  %UNUSED_ctime.addr = alloca float, align 4
  store %struct.bConstraint* %UNUSED_con, %struct.bConstraint** %UNUSED_con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %UNUSED_con.addr, metadata !10051, metadata !DIExpression()), !dbg !10052
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !10053, metadata !DIExpression()), !dbg !10054
  store %struct.bConstraintTarget* %ct, %struct.bConstraintTarget** %ct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct.addr, metadata !10055, metadata !DIExpression()), !dbg !10056
  store float %UNUSED_ctime, float* %UNUSED_ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_ctime.addr, metadata !10057, metadata !DIExpression()), !dbg !10058
  %0 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10059
  %tobool = icmp ne %struct.bConstraintTarget* %0, null, !dbg !10059
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !10059

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10059
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %1, i32 0, i32 2, !dbg !10059
  %2 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !10059
  %tobool1 = icmp ne %struct.Object* %2, null, !dbg !10059
  br i1 %tobool1, label %if.then, label %if.end5, !dbg !10061

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10062
  %tar2 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %3, i32 0, i32 2, !dbg !10065
  %4 = load %struct.Object*, %struct.Object** %tar2, align 8, !dbg !10065
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 118, !dbg !10066
  %5 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !10066
  %cmp = icmp eq %struct.CurveCache* %5, null, !dbg !10067
  br i1 %cmp, label %if.then3, label %if.end, !dbg !10068

if.then3:                                         ; preds = %if.then
  %6 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10069
  %scene = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %6, i32 0, i32 0, !dbg !10071
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10071
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10072
  %tar4 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %8, i32 0, i32 2, !dbg !10073
  %9 = load %struct.Object*, %struct.Object** %tar4, align 8, !dbg !10073
  call void @BKE_displist_make_curveTypes(%struct.Scene* %7, %struct.Object* %9, i8 zeroext 0), !dbg !10074
  br label %if.end, !dbg !10075

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !10076

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10077
  %tobool6 = icmp ne %struct.bConstraintTarget* %10, null, !dbg !10077
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10079

if.then7:                                         ; preds = %if.end5
  %11 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10080
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %11, i32 0, i32 4, !dbg !10081
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !10080
  call void @unit_m4([4 x float]* %arraydecay), !dbg !10082
  br label %if.end8, !dbg !10082

if.end8:                                          ; preds = %if.then7, %if.end5
  ret void, !dbg !10083
}

; Function Attrs: noinline nounwind uwtable
define internal void @clampto_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !10084 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bClampToConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %obmat = alloca [4 x [4 x float]], align 16
  %ownLoc = alloca [3 x float], align 4
  %curveMin = alloca [3 x float], align 4
  %curveMax = alloca [3 x float], align 4
  %targetMatrix = alloca [4 x [4 x float]], align 16
  %vec = alloca [4 x float], align 16
  %dir = alloca [3 x float], align 4
  %totmat = alloca [4 x [4 x float]], align 16
  %curvetime = alloca float, align 4
  %clamp_axis = alloca i16, align 2
  %size = alloca [3 x float], align 4
  %len = alloca float, align 4
  %offset = alloca float, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !10085, metadata !DIExpression()), !dbg !10086
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !10087, metadata !DIExpression()), !dbg !10088
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !10089, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.declare(metadata %struct.bClampToConstraint** %data, metadata !10091, metadata !DIExpression()), !dbg !10092
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10093
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !10094
  %1 = load i8*, i8** %data1, align 8, !dbg !10094
  %2 = bitcast i8* %1 to %struct.bClampToConstraint*, !dbg !10093
  store %struct.bClampToConstraint* %2, %struct.bClampToConstraint** %data, align 8, !dbg !10092
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !10095, metadata !DIExpression()), !dbg !10096
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !10097
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !10098
  %4 = load i8*, i8** %first, align 8, !dbg !10098
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !10097
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !10096
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10099
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !10099
  br i1 %tobool, label %land.lhs.true, label %if.end195, !dbg !10099

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10099
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !10099
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !10099
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !10099
  br i1 %tobool2, label %land.lhs.true3, label %if.end195, !dbg !10101

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10102
  %tar4 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !10103
  %10 = load %struct.Object*, %struct.Object** %tar4, align 8, !dbg !10103
  %type = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !10104
  %11 = load i16, i16* %type, align 8, !dbg !10104
  %conv = sext i16 %11 to i32, !dbg !10102
  %cmp = icmp eq i32 %conv, 2, !dbg !10105
  br i1 %cmp, label %if.then, label %if.end195, !dbg !10106

if.then:                                          ; preds = %land.lhs.true3
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obmat, metadata !10107, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.declare(metadata [3 x float]* %ownLoc, metadata !10110, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.declare(metadata [3 x float]* %curveMin, metadata !10112, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.declare(metadata [3 x float]* %curveMax, metadata !10114, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %targetMatrix, metadata !10116, metadata !DIExpression()), !dbg !10117
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !10118
  %12 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10119
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %12, i32 0, i32 3, !dbg !10120
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !10119
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay6), !dbg !10121
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 0, !dbg !10122
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !10123
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !10123
  call void @copy_v3_v3(float* %arraydecay7, float* %arraydecay8), !dbg !10124
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %targetMatrix, i64 0, i64 0, !dbg !10125
  call void @unit_m4([4 x float]* %arraydecay9), !dbg !10126
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 2, !dbg !10127
  store float 0x46293E5940000000, float* %arrayidx10, align 4, !dbg !10127
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 1, !dbg !10127
  store float 0x46293E5940000000, float* %arrayidx11, align 4, !dbg !10127
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 0, !dbg !10127
  store float 0x46293E5940000000, float* %arrayidx12, align 4, !dbg !10127
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 2, !dbg !10127
  store float 0xC6293E5940000000, float* %arrayidx13, align 4, !dbg !10127
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 1, !dbg !10127
  store float 0xC6293E5940000000, float* %arrayidx14, align 4, !dbg !10127
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 0, !dbg !10127
  store float 0xC6293E5940000000, float* %arrayidx15, align 4, !dbg !10127
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10129
  %tar16 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %13, i32 0, i32 2, !dbg !10130
  %14 = load %struct.Object*, %struct.Object** %tar16, align 8, !dbg !10130
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 0, !dbg !10131
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 0, !dbg !10132
  call void @BKE_object_minmax(%struct.Object* %14, float* %arraydecay17, float* %arraydecay18, i8 zeroext 1), !dbg !10133
  %15 = load %struct.bClampToConstraint*, %struct.bClampToConstraint** %data, align 8, !dbg !10134
  %tar19 = getelementptr inbounds %struct.bClampToConstraint, %struct.bClampToConstraint* %15, i32 0, i32 0, !dbg !10136
  %16 = load %struct.Object*, %struct.Object** %tar19, align 8, !dbg !10136
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 118, !dbg !10137
  %17 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !10137
  %tobool20 = icmp ne %struct.CurveCache* %17, null, !dbg !10134
  br i1 %tobool20, label %land.lhs.true21, label %if.end189, !dbg !10138

land.lhs.true21:                                  ; preds = %if.then
  %18 = load %struct.bClampToConstraint*, %struct.bClampToConstraint** %data, align 8, !dbg !10139
  %tar22 = getelementptr inbounds %struct.bClampToConstraint, %struct.bClampToConstraint* %18, i32 0, i32 0, !dbg !10140
  %19 = load %struct.Object*, %struct.Object** %tar22, align 8, !dbg !10140
  %curve_cache23 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 118, !dbg !10141
  %20 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache23, align 8, !dbg !10141
  %path = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %20, i32 0, i32 3, !dbg !10142
  %21 = load %struct.Path*, %struct.Path** %path, align 8, !dbg !10142
  %tobool24 = icmp ne %struct.Path* %21, null, !dbg !10139
  br i1 %tobool24, label %land.lhs.true25, label %if.end189, !dbg !10143

land.lhs.true25:                                  ; preds = %land.lhs.true21
  %22 = load %struct.bClampToConstraint*, %struct.bClampToConstraint** %data, align 8, !dbg !10144
  %tar26 = getelementptr inbounds %struct.bClampToConstraint, %struct.bClampToConstraint* %22, i32 0, i32 0, !dbg !10145
  %23 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !10145
  %curve_cache27 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 118, !dbg !10146
  %24 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache27, align 8, !dbg !10146
  %path28 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %24, i32 0, i32 3, !dbg !10147
  %25 = load %struct.Path*, %struct.Path** %path28, align 8, !dbg !10147
  %data29 = getelementptr inbounds %struct.Path, %struct.Path* %25, i32 0, i32 0, !dbg !10148
  %26 = load %struct.PathPoint*, %struct.PathPoint** %data29, align 8, !dbg !10148
  %tobool30 = icmp ne %struct.PathPoint* %26, null, !dbg !10144
  br i1 %tobool30, label %if.then31, label %if.end189, !dbg !10149

if.then31:                                        ; preds = %land.lhs.true25
  call void @llvm.dbg.declare(metadata [4 x float]* %vec, metadata !10150, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.declare(metadata [3 x float]* %dir, metadata !10153, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %totmat, metadata !10155, metadata !DIExpression()), !dbg !10156
  call void @llvm.dbg.declare(metadata float* %curvetime, metadata !10157, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.declare(metadata i16* %clamp_axis, metadata !10159, metadata !DIExpression()), !dbg !10160
  %27 = load %struct.bClampToConstraint*, %struct.bClampToConstraint** %data, align 8, !dbg !10161
  %flag = getelementptr inbounds %struct.bClampToConstraint, %struct.bClampToConstraint* %27, i32 0, i32 1, !dbg !10163
  %28 = load i32, i32* %flag, align 8, !dbg !10163
  %cmp32 = icmp eq i32 %28, 0, !dbg !10164
  br i1 %cmp32, label %if.then34, label %if.else60, !dbg !10165

if.then34:                                        ; preds = %if.then31
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !10166, metadata !DIExpression()), !dbg !10168
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !10169
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 0, !dbg !10170
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 0, !dbg !10171
  call void @sub_v3_v3v3(float* %arraydecay35, float* %arraydecay36, float* %arraydecay37), !dbg !10172
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !10173
  %29 = load float, float* %arrayidx38, align 4, !dbg !10173
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !10175
  %30 = load float, float* %arrayidx39, align 4, !dbg !10175
  %cmp40 = fcmp ogt float %29, %30, !dbg !10176
  br i1 %cmp40, label %land.lhs.true42, label %if.else, !dbg !10177

land.lhs.true42:                                  ; preds = %if.then34
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !10178
  %31 = load float, float* %arrayidx43, align 4, !dbg !10178
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !10179
  %32 = load float, float* %arrayidx44, align 4, !dbg !10179
  %cmp45 = fcmp ogt float %31, %32, !dbg !10180
  br i1 %cmp45, label %if.then47, label %if.else, !dbg !10181

if.then47:                                        ; preds = %land.lhs.true42
  store i16 2, i16* %clamp_axis, align 2, !dbg !10182
  br label %if.end59, !dbg !10183

if.else:                                          ; preds = %land.lhs.true42, %if.then34
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !10184
  %33 = load float, float* %arrayidx48, align 4, !dbg !10184
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !10186
  %34 = load float, float* %arrayidx49, align 4, !dbg !10186
  %cmp50 = fcmp ogt float %33, %34, !dbg !10187
  br i1 %cmp50, label %land.lhs.true52, label %if.else58, !dbg !10188

land.lhs.true52:                                  ; preds = %if.else
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !10189
  %35 = load float, float* %arrayidx53, align 4, !dbg !10189
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !10190
  %36 = load float, float* %arrayidx54, align 4, !dbg !10190
  %cmp55 = fcmp ogt float %35, %36, !dbg !10191
  br i1 %cmp55, label %if.then57, label %if.else58, !dbg !10192

if.then57:                                        ; preds = %land.lhs.true52
  store i16 1, i16* %clamp_axis, align 2, !dbg !10193
  br label %if.end, !dbg !10194

if.else58:                                        ; preds = %land.lhs.true52, %if.else
  store i16 0, i16* %clamp_axis, align 2, !dbg !10195
  br label %if.end

if.end:                                           ; preds = %if.else58, %if.then57
  br label %if.end59

if.end59:                                         ; preds = %if.end, %if.then47
  br label %if.end63, !dbg !10196

if.else60:                                        ; preds = %if.then31
  %37 = load %struct.bClampToConstraint*, %struct.bClampToConstraint** %data, align 8, !dbg !10197
  %flag61 = getelementptr inbounds %struct.bClampToConstraint, %struct.bClampToConstraint* %37, i32 0, i32 1, !dbg !10198
  %38 = load i32, i32* %flag61, align 8, !dbg !10198
  %sub = sub nsw i32 %38, 1, !dbg !10199
  %conv62 = trunc i32 %sub to i16, !dbg !10197
  store i16 %conv62, i16* %clamp_axis, align 2, !dbg !10200
  br label %if.end63

if.end63:                                         ; preds = %if.else60, %if.end59
  %39 = load %struct.bClampToConstraint*, %struct.bClampToConstraint** %data, align 8, !dbg !10201
  %flag2 = getelementptr inbounds %struct.bClampToConstraint, %struct.bClampToConstraint* %39, i32 0, i32 2, !dbg !10203
  %40 = load i32, i32* %flag2, align 4, !dbg !10203
  %and = and i32 %40, 1, !dbg !10204
  %tobool64 = icmp ne i32 %and, 0, !dbg !10204
  br i1 %tobool64, label %if.then65, label %if.else129, !dbg !10205

if.then65:                                        ; preds = %if.end63
  call void @llvm.dbg.declare(metadata float* %len, metadata !10206, metadata !DIExpression()), !dbg !10208
  %41 = load i16, i16* %clamp_axis, align 2, !dbg !10209
  %idxprom = sext i16 %41 to i64, !dbg !10210
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 %idxprom, !dbg !10210
  %42 = load float, float* %arrayidx66, align 4, !dbg !10210
  %43 = load i16, i16* %clamp_axis, align 2, !dbg !10211
  %idxprom67 = sext i16 %43 to i64, !dbg !10212
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 %idxprom67, !dbg !10212
  %44 = load float, float* %arrayidx68, align 4, !dbg !10212
  %sub69 = fsub float %42, %44, !dbg !10213
  store float %sub69, float* %len, align 4, !dbg !10208
  call void @llvm.dbg.declare(metadata float* %offset, metadata !10214, metadata !DIExpression()), !dbg !10215
  %45 = load float, float* %len, align 4, !dbg !10216
  %sub70 = fsub float %45, 0.000000e+00, !dbg !10216
  %46 = call float @llvm.fabs.f32(float %sub70), !dbg !10216
  %cmp71 = fcmp oge float %46, 0x3E80000000000000, !dbg !10216
  %47 = zext i1 %cmp71 to i64, !dbg !10216
  %cond = select i1 %cmp71, i32 0, i32 1, !dbg !10216
  %cmp73 = icmp eq i32 %cond, 0, !dbg !10218
  br i1 %cmp73, label %if.then75, label %if.else127, !dbg !10219

if.then75:                                        ; preds = %if.then65
  %48 = load i16, i16* %clamp_axis, align 2, !dbg !10220
  %idxprom76 = sext i16 %48 to i64, !dbg !10223
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 %idxprom76, !dbg !10223
  %49 = load float, float* %arrayidx77, align 4, !dbg !10223
  %50 = load i16, i16* %clamp_axis, align 2, !dbg !10224
  %idxprom78 = sext i16 %50 to i64, !dbg !10225
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 %idxprom78, !dbg !10225
  %51 = load float, float* %arrayidx79, align 4, !dbg !10225
  %cmp80 = fcmp olt float %49, %51, !dbg !10226
  br i1 %cmp80, label %if.then82, label %if.else95, !dbg !10227

if.then82:                                        ; preds = %if.then75
  %52 = load i16, i16* %clamp_axis, align 2, !dbg !10228
  %idxprom83 = sext i16 %52 to i64, !dbg !10230
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 %idxprom83, !dbg !10230
  %53 = load float, float* %arrayidx84, align 4, !dbg !10230
  %54 = load i16, i16* %clamp_axis, align 2, !dbg !10231
  %idxprom85 = sext i16 %54 to i64, !dbg !10232
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 %idxprom85, !dbg !10232
  %55 = load float, float* %arrayidx86, align 4, !dbg !10232
  %56 = load i16, i16* %clamp_axis, align 2, !dbg !10233
  %idxprom87 = sext i16 %56 to i64, !dbg !10234
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 %idxprom87, !dbg !10234
  %57 = load float, float* %arrayidx88, align 4, !dbg !10234
  %sub89 = fsub float %55, %57, !dbg !10235
  %58 = load float, float* %len, align 4, !dbg !10236
  %div = fdiv float %sub89, %58, !dbg !10237
  %59 = call float @llvm.ceil.f32(float %div), !dbg !10238
  %60 = load float, float* %len, align 4, !dbg !10239
  %mul = fmul float %59, %60, !dbg !10240
  %sub90 = fsub float %53, %mul, !dbg !10241
  store float %sub90, float* %offset, align 4, !dbg !10242
  %61 = load i16, i16* %clamp_axis, align 2, !dbg !10243
  %idxprom91 = sext i16 %61 to i64, !dbg !10244
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 %idxprom91, !dbg !10244
  %62 = load float, float* %arrayidx92, align 4, !dbg !10244
  %63 = load float, float* %offset, align 4, !dbg !10245
  %sub93 = fsub float %62, %63, !dbg !10246
  %64 = load float, float* %len, align 4, !dbg !10247
  %div94 = fdiv float %sub93, %64, !dbg !10248
  store float %div94, float* %curvetime, align 4, !dbg !10249
  br label %if.end126, !dbg !10250

if.else95:                                        ; preds = %if.then75
  %65 = load i16, i16* %clamp_axis, align 2, !dbg !10251
  %idxprom96 = sext i16 %65 to i64, !dbg !10253
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 %idxprom96, !dbg !10253
  %66 = load float, float* %arrayidx97, align 4, !dbg !10253
  %67 = load i16, i16* %clamp_axis, align 2, !dbg !10254
  %idxprom98 = sext i16 %67 to i64, !dbg !10255
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 %idxprom98, !dbg !10255
  %68 = load float, float* %arrayidx99, align 4, !dbg !10255
  %cmp100 = fcmp ogt float %66, %68, !dbg !10256
  br i1 %cmp100, label %if.then102, label %if.else118, !dbg !10257

if.then102:                                       ; preds = %if.else95
  %69 = load i16, i16* %clamp_axis, align 2, !dbg !10258
  %idxprom103 = sext i16 %69 to i64, !dbg !10260
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 %idxprom103, !dbg !10260
  %70 = load float, float* %arrayidx104, align 4, !dbg !10260
  %71 = load i16, i16* %clamp_axis, align 2, !dbg !10261
  %idxprom105 = sext i16 %71 to i64, !dbg !10262
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 %idxprom105, !dbg !10262
  %72 = load float, float* %arrayidx106, align 4, !dbg !10262
  %73 = load i16, i16* %clamp_axis, align 2, !dbg !10263
  %idxprom107 = sext i16 %73 to i64, !dbg !10264
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 %idxprom107, !dbg !10264
  %74 = load float, float* %arrayidx108, align 4, !dbg !10264
  %sub109 = fsub float %72, %74, !dbg !10265
  %75 = load float, float* %len, align 4, !dbg !10266
  %div110 = fdiv float %sub109, %75, !dbg !10267
  %conv111 = fptosi float %div110 to i32, !dbg !10268
  %conv112 = sitofp i32 %conv111 to float, !dbg !10268
  %76 = load float, float* %len, align 4, !dbg !10269
  %mul113 = fmul float %conv112, %76, !dbg !10270
  %add = fadd float %70, %mul113, !dbg !10271
  store float %add, float* %offset, align 4, !dbg !10272
  %77 = load i16, i16* %clamp_axis, align 2, !dbg !10273
  %idxprom114 = sext i16 %77 to i64, !dbg !10274
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 %idxprom114, !dbg !10274
  %78 = load float, float* %arrayidx115, align 4, !dbg !10274
  %79 = load float, float* %offset, align 4, !dbg !10275
  %sub116 = fsub float %78, %79, !dbg !10276
  %80 = load float, float* %len, align 4, !dbg !10277
  %div117 = fdiv float %sub116, %80, !dbg !10278
  store float %div117, float* %curvetime, align 4, !dbg !10279
  br label %if.end125, !dbg !10280

if.else118:                                       ; preds = %if.else95
  %81 = load i16, i16* %clamp_axis, align 2, !dbg !10281
  %idxprom119 = sext i16 %81 to i64, !dbg !10283
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 %idxprom119, !dbg !10283
  %82 = load float, float* %arrayidx120, align 4, !dbg !10283
  %83 = load i16, i16* %clamp_axis, align 2, !dbg !10284
  %idxprom121 = sext i16 %83 to i64, !dbg !10285
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 %idxprom121, !dbg !10285
  %84 = load float, float* %arrayidx122, align 4, !dbg !10285
  %sub123 = fsub float %82, %84, !dbg !10286
  %85 = load float, float* %len, align 4, !dbg !10287
  %div124 = fdiv float %sub123, %85, !dbg !10288
  store float %div124, float* %curvetime, align 4, !dbg !10289
  br label %if.end125

if.end125:                                        ; preds = %if.else118, %if.then102
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then82
  br label %if.end128, !dbg !10290

if.else127:                                       ; preds = %if.then65
  store float 0.000000e+00, float* %curvetime, align 4, !dbg !10291
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.end126
  br label %if.end173, !dbg !10293

if.else129:                                       ; preds = %if.end63
  %86 = load i16, i16* %clamp_axis, align 2, !dbg !10294
  %idxprom130 = sext i16 %86 to i64, !dbg !10297
  %arrayidx131 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 %idxprom130, !dbg !10297
  %87 = load float, float* %arrayidx131, align 4, !dbg !10297
  %88 = load i16, i16* %clamp_axis, align 2, !dbg !10298
  %idxprom132 = sext i16 %88 to i64, !dbg !10299
  %arrayidx133 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 %idxprom132, !dbg !10299
  %89 = load float, float* %arrayidx133, align 4, !dbg !10299
  %cmp134 = fcmp ole float %87, %89, !dbg !10300
  br i1 %cmp134, label %if.then136, label %if.else137, !dbg !10301

if.then136:                                       ; preds = %if.else129
  store float 0.000000e+00, float* %curvetime, align 4, !dbg !10302
  br label %if.end172, !dbg !10303

if.else137:                                       ; preds = %if.else129
  %90 = load i16, i16* %clamp_axis, align 2, !dbg !10304
  %idxprom138 = sext i16 %90 to i64, !dbg !10306
  %arrayidx139 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 %idxprom138, !dbg !10306
  %91 = load float, float* %arrayidx139, align 4, !dbg !10306
  %92 = load i16, i16* %clamp_axis, align 2, !dbg !10307
  %idxprom140 = sext i16 %92 to i64, !dbg !10308
  %arrayidx141 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 %idxprom140, !dbg !10308
  %93 = load float, float* %arrayidx141, align 4, !dbg !10308
  %cmp142 = fcmp oge float %91, %93, !dbg !10309
  br i1 %cmp142, label %if.then144, label %if.else145, !dbg !10310

if.then144:                                       ; preds = %if.else137
  store float 1.000000e+00, float* %curvetime, align 4, !dbg !10311
  br label %if.end171, !dbg !10312

if.else145:                                       ; preds = %if.else137
  %94 = load i16, i16* %clamp_axis, align 2, !dbg !10313
  %idxprom146 = sext i16 %94 to i64, !dbg !10313
  %arrayidx147 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 %idxprom146, !dbg !10313
  %95 = load float, float* %arrayidx147, align 4, !dbg !10313
  %96 = load i16, i16* %clamp_axis, align 2, !dbg !10313
  %idxprom148 = sext i16 %96 to i64, !dbg !10313
  %arrayidx149 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 %idxprom148, !dbg !10313
  %97 = load float, float* %arrayidx149, align 4, !dbg !10313
  %sub150 = fsub float %95, %97, !dbg !10313
  %sub151 = fsub float %sub150, 0.000000e+00, !dbg !10313
  %98 = call float @llvm.fabs.f32(float %sub151), !dbg !10313
  %cmp152 = fcmp oge float %98, 0x3E80000000000000, !dbg !10313
  %99 = zext i1 %cmp152 to i64, !dbg !10313
  %cond154 = select i1 %cmp152, i32 0, i32 1, !dbg !10313
  %cmp155 = icmp eq i32 %cond154, 0, !dbg !10315
  br i1 %cmp155, label %if.then157, label %if.else169, !dbg !10316

if.then157:                                       ; preds = %if.else145
  %100 = load i16, i16* %clamp_axis, align 2, !dbg !10317
  %idxprom158 = sext i16 %100 to i64, !dbg !10318
  %arrayidx159 = getelementptr inbounds [3 x float], [3 x float]* %ownLoc, i64 0, i64 %idxprom158, !dbg !10318
  %101 = load float, float* %arrayidx159, align 4, !dbg !10318
  %102 = load i16, i16* %clamp_axis, align 2, !dbg !10319
  %idxprom160 = sext i16 %102 to i64, !dbg !10320
  %arrayidx161 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 %idxprom160, !dbg !10320
  %103 = load float, float* %arrayidx161, align 4, !dbg !10320
  %sub162 = fsub float %101, %103, !dbg !10321
  %104 = load i16, i16* %clamp_axis, align 2, !dbg !10322
  %idxprom163 = sext i16 %104 to i64, !dbg !10323
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %curveMax, i64 0, i64 %idxprom163, !dbg !10323
  %105 = load float, float* %arrayidx164, align 4, !dbg !10323
  %106 = load i16, i16* %clamp_axis, align 2, !dbg !10324
  %idxprom165 = sext i16 %106 to i64, !dbg !10325
  %arrayidx166 = getelementptr inbounds [3 x float], [3 x float]* %curveMin, i64 0, i64 %idxprom165, !dbg !10325
  %107 = load float, float* %arrayidx166, align 4, !dbg !10325
  %sub167 = fsub float %105, %107, !dbg !10326
  %div168 = fdiv float %sub162, %sub167, !dbg !10327
  store float %div168, float* %curvetime, align 4, !dbg !10328
  br label %if.end170, !dbg !10329

if.else169:                                       ; preds = %if.else145
  store float 0.000000e+00, float* %curvetime, align 4, !dbg !10330
  br label %if.end170

if.end170:                                        ; preds = %if.else169, %if.then157
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %if.then144
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.then136
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.end128
  %108 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10331
  %tar174 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %108, i32 0, i32 2, !dbg !10333
  %109 = load %struct.Object*, %struct.Object** %tar174, align 8, !dbg !10333
  %110 = load float, float* %curvetime, align 4, !dbg !10334
  %arraydecay175 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !10335
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !10336
  %call = call i32 @where_on_path(%struct.Object* %109, float %110, float* %arraydecay175, float* %arraydecay176, float* null, float* null, float* null), !dbg !10337
  %tobool177 = icmp ne i32 %call, 0, !dbg !10337
  br i1 %tobool177, label %if.then178, label %if.end188, !dbg !10338

if.then178:                                       ; preds = %if.end173
  %arraydecay179 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 0, !dbg !10339
  call void @unit_m4([4 x float]* %arraydecay179), !dbg !10341
  %arrayidx180 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 3, !dbg !10342
  %arraydecay181 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx180, i64 0, i64 0, !dbg !10342
  %arraydecay182 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !10343
  call void @copy_v3_v3(float* %arraydecay181, float* %arraydecay182), !dbg !10344
  %arraydecay183 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %targetMatrix, i64 0, i64 0, !dbg !10345
  %111 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10346
  %tar184 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %111, i32 0, i32 2, !dbg !10347
  %112 = load %struct.Object*, %struct.Object** %tar184, align 8, !dbg !10347
  %obmat185 = getelementptr inbounds %struct.Object, %struct.Object* %112, i32 0, i32 47, !dbg !10348
  %arraydecay186 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat185, i64 0, i64 0, !dbg !10346
  %arraydecay187 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 0, !dbg !10349
  call void @mul_m4_m4m4([4 x float]* %arraydecay183, [4 x float]* %arraydecay186, [4 x float]* %arraydecay187), !dbg !10350
  br label %if.end188, !dbg !10351

if.end188:                                        ; preds = %if.then178, %if.end173
  br label %if.end189, !dbg !10352

if.end189:                                        ; preds = %if.end188, %land.lhs.true25, %land.lhs.true21, %if.then
  %113 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10353
  %matrix190 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %113, i32 0, i32 3, !dbg !10354
  %arrayidx191 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix190, i64 0, i64 3, !dbg !10353
  %arraydecay192 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx191, i64 0, i64 0, !dbg !10353
  %arrayidx193 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %targetMatrix, i64 0, i64 3, !dbg !10355
  %arraydecay194 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx193, i64 0, i64 0, !dbg !10355
  call void @copy_v3_v3(float* %arraydecay192, float* %arraydecay194), !dbg !10356
  br label %if.end195, !dbg !10357

if.end195:                                        ; preds = %if.end189, %land.lhs.true3, %land.lhs.true, %entry
  ret void, !dbg !10358
}

declare dso_local void @BKE_object_minmax(%struct.Object*, float*, float*, i8 zeroext) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.ceil.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @transform_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !10359 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bTransformConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !10360, metadata !DIExpression()), !dbg !10361
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !10362, metadata !DIExpression()), !dbg !10363
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !10364, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.declare(metadata %struct.bTransformConstraint** %data, metadata !10366, metadata !DIExpression()), !dbg !10367
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10368
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !10369
  %1 = load i8*, i8** %data1, align 8, !dbg !10369
  %2 = bitcast i8* %1 to %struct.bTransformConstraint*, !dbg !10368
  store %struct.bTransformConstraint* %2, %struct.bTransformConstraint** %data, align 8, !dbg !10367
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !10370
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10371
  %5 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10372
  %tar = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %5, i32 0, i32 0, !dbg !10373
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !10374
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !10375
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !10370
  ret void, !dbg !10376
}

; Function Attrs: noinline nounwind uwtable
define internal void @transform_new_data(i8* %cdata) #0 !dbg !10377 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bTransformConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !10378, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.declare(metadata %struct.bTransformConstraint** %data, metadata !10380, metadata !DIExpression()), !dbg !10381
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !10382
  %1 = bitcast i8* %0 to %struct.bTransformConstraint*, !dbg !10383
  store %struct.bTransformConstraint* %1, %struct.bTransformConstraint** %data, align 8, !dbg !10381
  %2 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10384
  %map = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %2, i32 0, i32 4, !dbg !10385
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %map, i64 0, i64 0, !dbg !10384
  store i8 0, i8* %arrayidx, align 4, !dbg !10386
  %3 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10387
  %map1 = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %3, i32 0, i32 4, !dbg !10388
  %arrayidx2 = getelementptr inbounds [3 x i8], [3 x i8]* %map1, i64 0, i64 1, !dbg !10387
  store i8 1, i8* %arrayidx2, align 1, !dbg !10389
  %4 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10390
  %map3 = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %4, i32 0, i32 4, !dbg !10391
  %arrayidx4 = getelementptr inbounds [3 x i8], [3 x i8]* %map3, i64 0, i64 2, !dbg !10390
  store i8 2, i8* %arrayidx4, align 2, !dbg !10392
  ret void, !dbg !10393
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @transform_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !10394 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bTransformConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !10395, metadata !DIExpression()), !dbg !10396
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !10397, metadata !DIExpression()), !dbg !10398
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10399
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !10399
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !10401

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10402
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !10402
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !10403

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bTransformConstraint** %data, metadata !10404, metadata !DIExpression()), !dbg !10406
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10407
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !10408
  %3 = load i8*, i8** %data2, align 8, !dbg !10408
  %4 = bitcast i8* %3 to %struct.bTransformConstraint*, !dbg !10407
  store %struct.bTransformConstraint* %4, %struct.bTransformConstraint** %data, align 8, !dbg !10406
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !10409, metadata !DIExpression()), !dbg !10410
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10411
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !10411
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !10411
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !10411
  %7 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10411
  %tar = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %7, i32 0, i32 0, !dbg !10411
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !10411
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10411
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !10411
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !10411
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10411
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !10411
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !10411
  %11 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10411
  %subtarget4 = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %11, i32 0, i32 1, !dbg !10411
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !10411
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !10411
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10411
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !10411
  %13 = load i8, i8* %tarspace, align 1, !dbg !10411
  %conv = zext i8 %13 to i16, !dbg !10411
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10411
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !10411
  store i16 %conv, i16* %space, align 8, !dbg !10411
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10411
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !10411
  store i16 1, i16* %flag, align 2, !dbg !10411
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10413
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !10413
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !10413
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !10413
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !10411

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10415
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !10415
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !10415
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !10415
  %20 = load i16, i16* %type, align 8, !dbg !10415
  %conv11 = sext i16 %20 to i32, !dbg !10415
  %cmp = icmp eq i32 %conv11, 25, !dbg !10415
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !10415

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10415
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !10415
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !10415
  %22 = load i8, i8* %arrayidx, align 8, !dbg !10415
  %conv15 = zext i8 %22 to i32, !dbg !10415
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !10415
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !10418

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !10419, metadata !DIExpression()), !dbg !10421
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10421
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !10421
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !10421
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !10421
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !10421
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10421
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !10421
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !10421
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !10421
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !10421
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10421
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !10421
  store i16 2, i16* %type22, align 4, !dbg !10421
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !10421
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !10421
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !10421

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !10421
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !10421
  %30 = load i16, i16* %rotmode, align 4, !dbg !10421
  %conv24 = sext i16 %30 to i32, !dbg !10421
  br label %cond.end, !dbg !10421

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !10421

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !10421
  %conv25 = trunc i32 %cond to i16, !dbg !10421
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10421
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !10421
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !10421
  br label %if.end49, !dbg !10421

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10422
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !10422
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !10422
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !10422
  %34 = load i16, i16* %type27, align 8, !dbg !10422
  %conv28 = sext i16 %34 to i32, !dbg !10422
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !10422
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !10422

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10422
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !10422
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !10422
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !10422
  %37 = load i16, i16* %type32, align 8, !dbg !10422
  %conv33 = sext i16 %37 to i32, !dbg !10422
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !10422
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !10422

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10422
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !10422
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !10422
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !10422
  %conv39 = zext i8 %39 to i32, !dbg !10422
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !10422
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !10415

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10424
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !10424
  store i16 3, i16* %type42, align 4, !dbg !10424
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10424
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !10424
  store i16 1, i16* %rotOrder43, align 2, !dbg !10424
  br label %if.end, !dbg !10424

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10426
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !10426
  store i16 1, i16* %type45, align 4, !dbg !10426
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10426
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !10426
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !10426
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !10426
  %45 = load i16, i16* %rotmode47, align 8, !dbg !10426
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10426
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !10426
  store i16 %45, i16* %rotOrder48, align 2, !dbg !10426
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !10418

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10411
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10411
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !10411
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !10411
  store i32 1, i32* %retval, align 4, !dbg !10428
  br label %return, !dbg !10428

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !10429
  br label %return, !dbg !10429

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !10430
  ret i32 %50, !dbg !10430
}

; Function Attrs: noinline nounwind uwtable
define internal void @transform_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !10431 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bTransformConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !10432, metadata !DIExpression()), !dbg !10433
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !10434, metadata !DIExpression()), !dbg !10435
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !10436, metadata !DIExpression()), !dbg !10437
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10438
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !10438
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !10440

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10441
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !10441
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !10442

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bTransformConstraint** %data, metadata !10443, metadata !DIExpression()), !dbg !10445
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10446
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !10447
  %3 = load i8*, i8** %data2, align 8, !dbg !10447
  %4 = bitcast i8* %3 to %struct.bTransformConstraint*, !dbg !10446
  store %struct.bTransformConstraint* %4, %struct.bTransformConstraint** %data, align 8, !dbg !10445
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !10448, metadata !DIExpression()), !dbg !10449
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10450
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !10451
  %6 = load i8*, i8** %first, align 8, !dbg !10451
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !10450
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !10449
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10452
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !10452
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !10455

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !10456, metadata !DIExpression()), !dbg !10458
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10458
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !10458
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !10458
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !10458
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !10459
  %conv = zext i8 %11 to i32, !dbg !10459
  %cmp = icmp eq i32 %conv, 0, !dbg !10459
  br i1 %cmp, label %if.then6, label %if.end, !dbg !10458

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10461
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !10461
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !10461
  %14 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10461
  %tar7 = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %14, i32 0, i32 0, !dbg !10461
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !10461
  %15 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10461
  %subtarget = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %15, i32 0, i32 1, !dbg !10461
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !10461
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10461
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !10461
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !10461
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !10461
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10461
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !10461
  %18 = load i16, i16* %space, align 8, !dbg !10461
  %conv10 = trunc i16 %18 to i8, !dbg !10461
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10461
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !10461
  store i8 %conv10, i8* %tarspace, align 1, !dbg !10461
  br label %if.end, !dbg !10461

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10458
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10458
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !10458
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !10458
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !10458
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !10458
  br label %if.end11, !dbg !10458

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !10463

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !10464
}

; Function Attrs: noinline nounwind uwtable
define internal void @transform_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !10465 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bTransformConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %from_min = alloca float*, align 8
  %from_max = alloca float*, align 8
  %to_min = alloca float*, align 8
  %to_max = alloca float*, align 8
  %loc = alloca [3 x float], align 4
  %eul = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  %dvec = alloca [3 x float], align 4
  %sval = alloca [3 x float], align 4
  %i = alloca i32, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !10466, metadata !DIExpression()), !dbg !10467
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !10468, metadata !DIExpression()), !dbg !10469
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !10470, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.declare(metadata %struct.bTransformConstraint** %data, metadata !10472, metadata !DIExpression()), !dbg !10473
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10474
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !10475
  %1 = load i8*, i8** %data1, align 8, !dbg !10475
  %2 = bitcast i8* %1 to %struct.bTransformConstraint*, !dbg !10474
  store %struct.bTransformConstraint* %2, %struct.bTransformConstraint** %data, align 8, !dbg !10473
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !10476, metadata !DIExpression()), !dbg !10477
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !10478
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !10479
  %4 = load i8*, i8** %first, align 8, !dbg !10479
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !10478
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !10477
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10480
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !10480
  br i1 %tobool, label %land.lhs.true, label %if.end208, !dbg !10480

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10480
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !10480
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !10480
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !10480
  br i1 %tobool2, label %if.then, label %if.end208, !dbg !10482

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float** %from_min, metadata !10483, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.declare(metadata float** %from_max, metadata !10486, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.declare(metadata float** %to_min, metadata !10488, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.declare(metadata float** %to_max, metadata !10490, metadata !DIExpression()), !dbg !10491
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !10492, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.declare(metadata [3 x float]* %eul, metadata !10494, metadata !DIExpression()), !dbg !10495
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !10496, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !10498, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.declare(metadata [3 x float]* %sval, metadata !10500, metadata !DIExpression()), !dbg !10501
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10502, metadata !DIExpression()), !dbg !10503
  %9 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10504
  %from = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %9, i32 0, i32 2, !dbg !10505
  %10 = load i16, i16* %from, align 8, !dbg !10505
  %conv = sext i16 %10 to i32, !dbg !10504
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb11
    i32 0, label %sw.bb17
  ], !dbg !10506

sw.bb:                                            ; preds = %if.then
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !10507
  %11 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10509
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %11, i32 0, i32 4, !dbg !10510
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !10509
  call void @mat4_to_size(float* %arraydecay, [4 x float]* %arraydecay3), !dbg !10511
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10512
  %matrix4 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 4, !dbg !10514
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix4, i64 0, i64 0, !dbg !10512
  %call = call zeroext i8 @is_negative_m4([4 x float]* %arraydecay5), !dbg !10515
  %tobool6 = icmp ne i8 %call, 0, !dbg !10515
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !10516

if.then7:                                         ; preds = %sw.bb
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !10517
  call void @negate_v3(float* %arraydecay8), !dbg !10519
  br label %if.end, !dbg !10520

if.end:                                           ; preds = %if.then7, %sw.bb
  %13 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10521
  %from_min_scale = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %13, i32 0, i32 14, !dbg !10522
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %from_min_scale, i64 0, i64 0, !dbg !10521
  store float* %arraydecay9, float** %from_min, align 8, !dbg !10523
  %14 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10524
  %from_max_scale = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %14, i32 0, i32 15, !dbg !10525
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %from_max_scale, i64 0, i64 0, !dbg !10524
  store float* %arraydecay10, float** %from_max, align 8, !dbg !10526
  br label %sw.epilog, !dbg !10527

sw.bb11:                                          ; preds = %if.then
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !10528
  %15 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10529
  %rotOrder = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %15, i32 0, i32 6, !dbg !10530
  %16 = load i16, i16* %rotOrder, align 2, !dbg !10530
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10531
  %matrix13 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 4, !dbg !10532
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix13, i64 0, i64 0, !dbg !10531
  call void @mat4_to_eulO(float* %arraydecay12, i16 signext %16, [4 x float]* %arraydecay14), !dbg !10533
  %18 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10534
  %from_min_rot = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %18, i32 0, i32 10, !dbg !10535
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %from_min_rot, i64 0, i64 0, !dbg !10534
  store float* %arraydecay15, float** %from_min, align 8, !dbg !10536
  %19 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10537
  %from_max_rot = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %19, i32 0, i32 11, !dbg !10538
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %from_max_rot, i64 0, i64 0, !dbg !10537
  store float* %arraydecay16, float** %from_max, align 8, !dbg !10539
  br label %sw.epilog, !dbg !10540

sw.bb17:                                          ; preds = %if.then
  br label %sw.default, !dbg !10540

sw.default:                                       ; preds = %if.then, %sw.bb17
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !10541
  %20 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10542
  %matrix19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %20, i32 0, i32 4, !dbg !10543
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix19, i64 0, i64 3, !dbg !10542
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !10542
  call void @copy_v3_v3(float* %arraydecay18, float* %arraydecay20), !dbg !10544
  %21 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10545
  %from_min21 = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %21, i32 0, i32 6, !dbg !10546
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %from_min21, i64 0, i64 0, !dbg !10545
  store float* %arraydecay22, float** %from_min, align 8, !dbg !10547
  %22 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10548
  %from_max23 = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %22, i32 0, i32 7, !dbg !10549
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %from_max23, i64 0, i64 0, !dbg !10548
  store float* %arraydecay24, float** %from_max, align 8, !dbg !10550
  br label %sw.epilog, !dbg !10551

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %if.end
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !10552
  %23 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10553
  %matrix26 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %23, i32 0, i32 3, !dbg !10554
  %arrayidx27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix26, i64 0, i64 3, !dbg !10553
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx27, i64 0, i64 0, !dbg !10553
  call void @copy_v3_v3(float* %arraydecay25, float* %arraydecay28), !dbg !10555
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !10556
  %24 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10557
  %rotOrder30 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %24, i32 0, i32 6, !dbg !10558
  %25 = load i16, i16* %rotOrder30, align 2, !dbg !10558
  %26 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10559
  %matrix31 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %26, i32 0, i32 3, !dbg !10560
  %arraydecay32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix31, i64 0, i64 0, !dbg !10559
  call void @mat4_to_eulO(float* %arraydecay29, i16 signext %25, [4 x float]* %arraydecay32), !dbg !10561
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !10562
  %27 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10563
  %matrix34 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %27, i32 0, i32 3, !dbg !10564
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix34, i64 0, i64 0, !dbg !10563
  call void @mat4_to_size(float* %arraydecay33, [4 x float]* %arraydecay35), !dbg !10565
  %28 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10566
  %expo = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %28, i32 0, i32 5, !dbg !10568
  %29 = load i8, i8* %expo, align 1, !dbg !10568
  %tobool36 = icmp ne i8 %29, 0, !dbg !10566
  br i1 %tobool36, label %if.then37, label %if.else59, !dbg !10569

if.then37:                                        ; preds = %sw.epilog
  store i32 0, i32* %i, align 4, !dbg !10570
  br label %for.cond, !dbg !10573

for.cond:                                         ; preds = %for.inc, %if.then37
  %30 = load i32, i32* %i, align 4, !dbg !10574
  %cmp = icmp slt i32 %30, 3, !dbg !10576
  br i1 %cmp, label %for.body, label %for.end, !dbg !10577

for.body:                                         ; preds = %for.cond
  %31 = load float*, float** %from_max, align 8, !dbg !10578
  %32 = load i32, i32* %i, align 4, !dbg !10581
  %idxprom = sext i32 %32 to i64, !dbg !10578
  %arrayidx39 = getelementptr inbounds float, float* %31, i64 %idxprom, !dbg !10578
  %33 = load float, float* %arrayidx39, align 4, !dbg !10578
  %34 = load float*, float** %from_min, align 8, !dbg !10582
  %35 = load i32, i32* %i, align 4, !dbg !10583
  %idxprom40 = sext i32 %35 to i64, !dbg !10582
  %arrayidx41 = getelementptr inbounds float, float* %34, i64 %idxprom40, !dbg !10582
  %36 = load float, float* %arrayidx41, align 4, !dbg !10582
  %sub = fsub float %33, %36, !dbg !10584
  %tobool42 = fcmp une float %sub, 0.000000e+00, !dbg !10584
  br i1 %tobool42, label %if.then43, label %if.else, !dbg !10585

if.then43:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4, !dbg !10586
  %idxprom44 = sext i32 %37 to i64, !dbg !10587
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 %idxprom44, !dbg !10587
  %38 = load float, float* %arrayidx45, align 4, !dbg !10587
  %39 = load float*, float** %from_min, align 8, !dbg !10588
  %40 = load i32, i32* %i, align 4, !dbg !10589
  %idxprom46 = sext i32 %40 to i64, !dbg !10588
  %arrayidx47 = getelementptr inbounds float, float* %39, i64 %idxprom46, !dbg !10588
  %41 = load float, float* %arrayidx47, align 4, !dbg !10588
  %sub48 = fsub float %38, %41, !dbg !10590
  %42 = load float*, float** %from_max, align 8, !dbg !10591
  %43 = load i32, i32* %i, align 4, !dbg !10592
  %idxprom49 = sext i32 %43 to i64, !dbg !10591
  %arrayidx50 = getelementptr inbounds float, float* %42, i64 %idxprom49, !dbg !10591
  %44 = load float, float* %arrayidx50, align 4, !dbg !10591
  %45 = load float*, float** %from_min, align 8, !dbg !10593
  %46 = load i32, i32* %i, align 4, !dbg !10594
  %idxprom51 = sext i32 %46 to i64, !dbg !10593
  %arrayidx52 = getelementptr inbounds float, float* %45, i64 %idxprom51, !dbg !10593
  %47 = load float, float* %arrayidx52, align 4, !dbg !10593
  %sub53 = fsub float %44, %47, !dbg !10595
  %div = fdiv float %sub48, %sub53, !dbg !10596
  %48 = load i32, i32* %i, align 4, !dbg !10597
  %idxprom54 = sext i32 %48 to i64, !dbg !10598
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %sval, i64 0, i64 %idxprom54, !dbg !10598
  store float %div, float* %arrayidx55, align 4, !dbg !10599
  br label %if.end58, !dbg !10598

if.else:                                          ; preds = %for.body
  %49 = load i32, i32* %i, align 4, !dbg !10600
  %idxprom56 = sext i32 %49 to i64, !dbg !10601
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %sval, i64 0, i64 %idxprom56, !dbg !10601
  store float 0.000000e+00, float* %arrayidx57, align 4, !dbg !10602
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then43
  br label %for.inc, !dbg !10603

for.inc:                                          ; preds = %if.end58
  %50 = load i32, i32* %i, align 4, !dbg !10604
  %inc = add nsw i32 %50, 1, !dbg !10604
  store i32 %inc, i32* %i, align 4, !dbg !10604
  br label %for.cond, !dbg !10605, !llvm.loop !10606

for.end:                                          ; preds = %for.cond
  br label %if.end116, !dbg !10608

if.else59:                                        ; preds = %sw.epilog
  store i32 0, i32* %i, align 4, !dbg !10609
  br label %for.cond60, !dbg !10612

for.cond60:                                       ; preds = %for.inc113, %if.else59
  %51 = load i32, i32* %i, align 4, !dbg !10613
  %cmp61 = icmp slt i32 %51, 3, !dbg !10615
  br i1 %cmp61, label %for.body63, label %for.end115, !dbg !10616

for.body63:                                       ; preds = %for.cond60
  %52 = load i32, i32* %i, align 4, !dbg !10617
  %idxprom64 = sext i32 %52 to i64, !dbg !10617
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 %idxprom64, !dbg !10617
  %53 = load float, float* %arrayidx65, align 4, !dbg !10617
  %54 = load float*, float** %from_min, align 8, !dbg !10617
  %55 = load i32, i32* %i, align 4, !dbg !10617
  %idxprom66 = sext i32 %55 to i64, !dbg !10617
  %arrayidx67 = getelementptr inbounds float, float* %54, i64 %idxprom66, !dbg !10617
  %56 = load float, float* %arrayidx67, align 4, !dbg !10617
  %cmp68 = fcmp olt float %53, %56, !dbg !10617
  br i1 %cmp68, label %if.then70, label %if.else75, !dbg !10621

if.then70:                                        ; preds = %for.body63
  %57 = load float*, float** %from_min, align 8, !dbg !10617
  %58 = load i32, i32* %i, align 4, !dbg !10617
  %idxprom71 = sext i32 %58 to i64, !dbg !10617
  %arrayidx72 = getelementptr inbounds float, float* %57, i64 %idxprom71, !dbg !10617
  %59 = load float, float* %arrayidx72, align 4, !dbg !10617
  %60 = load i32, i32* %i, align 4, !dbg !10617
  %idxprom73 = sext i32 %60 to i64, !dbg !10617
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 %idxprom73, !dbg !10617
  store float %59, float* %arrayidx74, align 4, !dbg !10617
  br label %if.end88, !dbg !10617

if.else75:                                        ; preds = %for.body63
  %61 = load i32, i32* %i, align 4, !dbg !10622
  %idxprom76 = sext i32 %61 to i64, !dbg !10622
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 %idxprom76, !dbg !10622
  %62 = load float, float* %arrayidx77, align 4, !dbg !10622
  %63 = load float*, float** %from_max, align 8, !dbg !10622
  %64 = load i32, i32* %i, align 4, !dbg !10622
  %idxprom78 = sext i32 %64 to i64, !dbg !10622
  %arrayidx79 = getelementptr inbounds float, float* %63, i64 %idxprom78, !dbg !10622
  %65 = load float, float* %arrayidx79, align 4, !dbg !10622
  %cmp80 = fcmp ogt float %62, %65, !dbg !10622
  br i1 %cmp80, label %if.then82, label %if.end87, !dbg !10617

if.then82:                                        ; preds = %if.else75
  %66 = load float*, float** %from_max, align 8, !dbg !10622
  %67 = load i32, i32* %i, align 4, !dbg !10622
  %idxprom83 = sext i32 %67 to i64, !dbg !10622
  %arrayidx84 = getelementptr inbounds float, float* %66, i64 %idxprom83, !dbg !10622
  %68 = load float, float* %arrayidx84, align 4, !dbg !10622
  %69 = load i32, i32* %i, align 4, !dbg !10622
  %idxprom85 = sext i32 %69 to i64, !dbg !10622
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 %idxprom85, !dbg !10622
  store float %68, float* %arrayidx86, align 4, !dbg !10622
  br label %if.end87, !dbg !10622

if.end87:                                         ; preds = %if.then82, %if.else75
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then70
  %70 = load float*, float** %from_max, align 8, !dbg !10624
  %71 = load i32, i32* %i, align 4, !dbg !10626
  %idxprom89 = sext i32 %71 to i64, !dbg !10624
  %arrayidx90 = getelementptr inbounds float, float* %70, i64 %idxprom89, !dbg !10624
  %72 = load float, float* %arrayidx90, align 4, !dbg !10624
  %73 = load float*, float** %from_min, align 8, !dbg !10627
  %74 = load i32, i32* %i, align 4, !dbg !10628
  %idxprom91 = sext i32 %74 to i64, !dbg !10627
  %arrayidx92 = getelementptr inbounds float, float* %73, i64 %idxprom91, !dbg !10627
  %75 = load float, float* %arrayidx92, align 4, !dbg !10627
  %sub93 = fsub float %72, %75, !dbg !10629
  %tobool94 = fcmp une float %sub93, 0.000000e+00, !dbg !10629
  br i1 %tobool94, label %if.then95, label %if.else109, !dbg !10630

if.then95:                                        ; preds = %if.end88
  %76 = load i32, i32* %i, align 4, !dbg !10631
  %idxprom96 = sext i32 %76 to i64, !dbg !10632
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 %idxprom96, !dbg !10632
  %77 = load float, float* %arrayidx97, align 4, !dbg !10632
  %78 = load float*, float** %from_min, align 8, !dbg !10633
  %79 = load i32, i32* %i, align 4, !dbg !10634
  %idxprom98 = sext i32 %79 to i64, !dbg !10633
  %arrayidx99 = getelementptr inbounds float, float* %78, i64 %idxprom98, !dbg !10633
  %80 = load float, float* %arrayidx99, align 4, !dbg !10633
  %sub100 = fsub float %77, %80, !dbg !10635
  %81 = load float*, float** %from_max, align 8, !dbg !10636
  %82 = load i32, i32* %i, align 4, !dbg !10637
  %idxprom101 = sext i32 %82 to i64, !dbg !10636
  %arrayidx102 = getelementptr inbounds float, float* %81, i64 %idxprom101, !dbg !10636
  %83 = load float, float* %arrayidx102, align 4, !dbg !10636
  %84 = load float*, float** %from_min, align 8, !dbg !10638
  %85 = load i32, i32* %i, align 4, !dbg !10639
  %idxprom103 = sext i32 %85 to i64, !dbg !10638
  %arrayidx104 = getelementptr inbounds float, float* %84, i64 %idxprom103, !dbg !10638
  %86 = load float, float* %arrayidx104, align 4, !dbg !10638
  %sub105 = fsub float %83, %86, !dbg !10640
  %div106 = fdiv float %sub100, %sub105, !dbg !10641
  %87 = load i32, i32* %i, align 4, !dbg !10642
  %idxprom107 = sext i32 %87 to i64, !dbg !10643
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %sval, i64 0, i64 %idxprom107, !dbg !10643
  store float %div106, float* %arrayidx108, align 4, !dbg !10644
  br label %if.end112, !dbg !10643

if.else109:                                       ; preds = %if.end88
  %88 = load i32, i32* %i, align 4, !dbg !10645
  %idxprom110 = sext i32 %88 to i64, !dbg !10646
  %arrayidx111 = getelementptr inbounds [3 x float], [3 x float]* %sval, i64 0, i64 %idxprom110, !dbg !10646
  store float 0.000000e+00, float* %arrayidx111, align 4, !dbg !10647
  br label %if.end112

if.end112:                                        ; preds = %if.else109, %if.then95
  br label %for.inc113, !dbg !10648

for.inc113:                                       ; preds = %if.end112
  %89 = load i32, i32* %i, align 4, !dbg !10649
  %inc114 = add nsw i32 %89, 1, !dbg !10649
  store i32 %inc114, i32* %i, align 4, !dbg !10649
  br label %for.cond60, !dbg !10650, !llvm.loop !10651

for.end115:                                       ; preds = %for.cond60
  br label %if.end116

if.end116:                                        ; preds = %for.end115, %for.end
  %90 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10653
  %to = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %90, i32 0, i32 3, !dbg !10654
  %91 = load i16, i16* %to, align 2, !dbg !10654
  %conv117 = sext i16 %91 to i32, !dbg !10653
  switch i32 %conv117, label %sw.default171 [
    i32 2, label %sw.bb118
    i32 1, label %sw.bb142
    i32 0, label %sw.bb170
  ], !dbg !10655

sw.bb118:                                         ; preds = %if.end116
  %92 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10656
  %to_min_scale = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %92, i32 0, i32 16, !dbg !10658
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %to_min_scale, i64 0, i64 0, !dbg !10656
  store float* %arraydecay119, float** %to_min, align 8, !dbg !10659
  %93 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10660
  %to_max_scale = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %93, i32 0, i32 17, !dbg !10661
  %arraydecay120 = getelementptr inbounds [3 x float], [3 x float]* %to_max_scale, i64 0, i64 0, !dbg !10660
  store float* %arraydecay120, float** %to_max, align 8, !dbg !10662
  store i32 0, i32* %i, align 4, !dbg !10663
  br label %for.cond121, !dbg !10665

for.cond121:                                      ; preds = %for.inc139, %sw.bb118
  %94 = load i32, i32* %i, align 4, !dbg !10666
  %cmp122 = icmp slt i32 %94, 3, !dbg !10668
  br i1 %cmp122, label %for.body124, label %for.end141, !dbg !10669

for.body124:                                      ; preds = %for.cond121
  %95 = load float*, float** %to_min, align 8, !dbg !10670
  %96 = load i32, i32* %i, align 4, !dbg !10672
  %idxprom125 = sext i32 %96 to i64, !dbg !10670
  %arrayidx126 = getelementptr inbounds float, float* %95, i64 %idxprom125, !dbg !10670
  %97 = load float, float* %arrayidx126, align 4, !dbg !10670
  %98 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10673
  %map = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %98, i32 0, i32 4, !dbg !10674
  %99 = load i32, i32* %i, align 4, !dbg !10675
  %idxprom127 = sext i32 %99 to i64, !dbg !10673
  %arrayidx128 = getelementptr inbounds [3 x i8], [3 x i8]* %map, i64 0, i64 %idxprom127, !dbg !10673
  %100 = load i8, i8* %arrayidx128, align 1, !dbg !10673
  %conv129 = zext i8 %100 to i32, !dbg !10676
  %idxprom130 = sext i32 %conv129 to i64, !dbg !10677
  %arrayidx131 = getelementptr inbounds [3 x float], [3 x float]* %sval, i64 0, i64 %idxprom130, !dbg !10677
  %101 = load float, float* %arrayidx131, align 4, !dbg !10677
  %102 = load float*, float** %to_max, align 8, !dbg !10678
  %103 = load i32, i32* %i, align 4, !dbg !10679
  %idxprom132 = sext i32 %103 to i64, !dbg !10678
  %arrayidx133 = getelementptr inbounds float, float* %102, i64 %idxprom132, !dbg !10678
  %104 = load float, float* %arrayidx133, align 4, !dbg !10678
  %105 = load float*, float** %to_min, align 8, !dbg !10680
  %106 = load i32, i32* %i, align 4, !dbg !10681
  %idxprom134 = sext i32 %106 to i64, !dbg !10680
  %arrayidx135 = getelementptr inbounds float, float* %105, i64 %idxprom134, !dbg !10680
  %107 = load float, float* %arrayidx135, align 4, !dbg !10680
  %sub136 = fsub float %104, %107, !dbg !10682
  %mul = fmul float %101, %sub136, !dbg !10683
  %add = fadd float %97, %mul, !dbg !10684
  %108 = load i32, i32* %i, align 4, !dbg !10685
  %idxprom137 = sext i32 %108 to i64, !dbg !10686
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom137, !dbg !10686
  store float %add, float* %arrayidx138, align 4, !dbg !10687
  br label %for.inc139, !dbg !10688

for.inc139:                                       ; preds = %for.body124
  %109 = load i32, i32* %i, align 4, !dbg !10689
  %inc140 = add nsw i32 %109, 1, !dbg !10689
  store i32 %inc140, i32* %i, align 4, !dbg !10689
  br label %for.cond121, !dbg !10690, !llvm.loop !10691

for.end141:                                       ; preds = %for.cond121
  br label %sw.epilog201, !dbg !10693

sw.bb142:                                         ; preds = %if.end116
  %110 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10694
  %to_min_rot = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %110, i32 0, i32 12, !dbg !10695
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %to_min_rot, i64 0, i64 0, !dbg !10694
  store float* %arraydecay143, float** %to_min, align 8, !dbg !10696
  %111 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10697
  %to_max_rot = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %111, i32 0, i32 13, !dbg !10698
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %to_max_rot, i64 0, i64 0, !dbg !10697
  store float* %arraydecay144, float** %to_max, align 8, !dbg !10699
  store i32 0, i32* %i, align 4, !dbg !10700
  br label %for.cond145, !dbg !10702

for.cond145:                                      ; preds = %for.inc167, %sw.bb142
  %112 = load i32, i32* %i, align 4, !dbg !10703
  %cmp146 = icmp slt i32 %112, 3, !dbg !10705
  br i1 %cmp146, label %for.body148, label %for.end169, !dbg !10706

for.body148:                                      ; preds = %for.cond145
  %113 = load float*, float** %to_min, align 8, !dbg !10707
  %114 = load i32, i32* %i, align 4, !dbg !10709
  %idxprom149 = sext i32 %114 to i64, !dbg !10707
  %arrayidx150 = getelementptr inbounds float, float* %113, i64 %idxprom149, !dbg !10707
  %115 = load float, float* %arrayidx150, align 4, !dbg !10707
  %116 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10710
  %map151 = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %116, i32 0, i32 4, !dbg !10711
  %117 = load i32, i32* %i, align 4, !dbg !10712
  %idxprom152 = sext i32 %117 to i64, !dbg !10710
  %arrayidx153 = getelementptr inbounds [3 x i8], [3 x i8]* %map151, i64 0, i64 %idxprom152, !dbg !10710
  %118 = load i8, i8* %arrayidx153, align 1, !dbg !10710
  %conv154 = zext i8 %118 to i32, !dbg !10713
  %idxprom155 = sext i32 %conv154 to i64, !dbg !10714
  %arrayidx156 = getelementptr inbounds [3 x float], [3 x float]* %sval, i64 0, i64 %idxprom155, !dbg !10714
  %119 = load float, float* %arrayidx156, align 4, !dbg !10714
  %120 = load float*, float** %to_max, align 8, !dbg !10715
  %121 = load i32, i32* %i, align 4, !dbg !10716
  %idxprom157 = sext i32 %121 to i64, !dbg !10715
  %arrayidx158 = getelementptr inbounds float, float* %120, i64 %idxprom157, !dbg !10715
  %122 = load float, float* %arrayidx158, align 4, !dbg !10715
  %123 = load float*, float** %to_min, align 8, !dbg !10717
  %124 = load i32, i32* %i, align 4, !dbg !10718
  %idxprom159 = sext i32 %124 to i64, !dbg !10717
  %arrayidx160 = getelementptr inbounds float, float* %123, i64 %idxprom159, !dbg !10717
  %125 = load float, float* %arrayidx160, align 4, !dbg !10717
  %sub161 = fsub float %122, %125, !dbg !10719
  %mul162 = fmul float %119, %sub161, !dbg !10720
  %add163 = fadd float %115, %mul162, !dbg !10721
  %126 = load i32, i32* %i, align 4, !dbg !10722
  %idxprom164 = sext i32 %126 to i64, !dbg !10723
  %arrayidx165 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 %idxprom164, !dbg !10723
  %127 = load float, float* %arrayidx165, align 4, !dbg !10724
  %add166 = fadd float %127, %add163, !dbg !10724
  store float %add166, float* %arrayidx165, align 4, !dbg !10724
  br label %for.inc167, !dbg !10725

for.inc167:                                       ; preds = %for.body148
  %128 = load i32, i32* %i, align 4, !dbg !10726
  %inc168 = add nsw i32 %128, 1, !dbg !10726
  store i32 %inc168, i32* %i, align 4, !dbg !10726
  br label %for.cond145, !dbg !10727, !llvm.loop !10728

for.end169:                                       ; preds = %for.cond145
  br label %sw.epilog201, !dbg !10730

sw.bb170:                                         ; preds = %if.end116
  br label %sw.default171, !dbg !10730

sw.default171:                                    ; preds = %if.end116, %sw.bb170
  %129 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10731
  %to_min172 = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %129, i32 0, i32 8, !dbg !10732
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %to_min172, i64 0, i64 0, !dbg !10731
  store float* %arraydecay173, float** %to_min, align 8, !dbg !10733
  %130 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10734
  %to_max174 = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %130, i32 0, i32 9, !dbg !10735
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %to_max174, i64 0, i64 0, !dbg !10734
  store float* %arraydecay175, float** %to_max, align 8, !dbg !10736
  store i32 0, i32* %i, align 4, !dbg !10737
  br label %for.cond176, !dbg !10739

for.cond176:                                      ; preds = %for.inc198, %sw.default171
  %131 = load i32, i32* %i, align 4, !dbg !10740
  %cmp177 = icmp slt i32 %131, 3, !dbg !10742
  br i1 %cmp177, label %for.body179, label %for.end200, !dbg !10743

for.body179:                                      ; preds = %for.cond176
  %132 = load float*, float** %to_min, align 8, !dbg !10744
  %133 = load i32, i32* %i, align 4, !dbg !10746
  %idxprom180 = sext i32 %133 to i64, !dbg !10744
  %arrayidx181 = getelementptr inbounds float, float* %132, i64 %idxprom180, !dbg !10744
  %134 = load float, float* %arrayidx181, align 4, !dbg !10744
  %135 = load %struct.bTransformConstraint*, %struct.bTransformConstraint** %data, align 8, !dbg !10747
  %map182 = getelementptr inbounds %struct.bTransformConstraint, %struct.bTransformConstraint* %135, i32 0, i32 4, !dbg !10748
  %136 = load i32, i32* %i, align 4, !dbg !10749
  %idxprom183 = sext i32 %136 to i64, !dbg !10747
  %arrayidx184 = getelementptr inbounds [3 x i8], [3 x i8]* %map182, i64 0, i64 %idxprom183, !dbg !10747
  %137 = load i8, i8* %arrayidx184, align 1, !dbg !10747
  %conv185 = zext i8 %137 to i32, !dbg !10750
  %idxprom186 = sext i32 %conv185 to i64, !dbg !10751
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %sval, i64 0, i64 %idxprom186, !dbg !10751
  %138 = load float, float* %arrayidx187, align 4, !dbg !10751
  %139 = load float*, float** %to_max, align 8, !dbg !10752
  %140 = load i32, i32* %i, align 4, !dbg !10753
  %idxprom188 = sext i32 %140 to i64, !dbg !10752
  %arrayidx189 = getelementptr inbounds float, float* %139, i64 %idxprom188, !dbg !10752
  %141 = load float, float* %arrayidx189, align 4, !dbg !10752
  %142 = load float*, float** %to_min, align 8, !dbg !10754
  %143 = load i32, i32* %i, align 4, !dbg !10755
  %idxprom190 = sext i32 %143 to i64, !dbg !10754
  %arrayidx191 = getelementptr inbounds float, float* %142, i64 %idxprom190, !dbg !10754
  %144 = load float, float* %arrayidx191, align 4, !dbg !10754
  %sub192 = fsub float %141, %144, !dbg !10756
  %mul193 = fmul float %138, %sub192, !dbg !10757
  %add194 = fadd float %134, %mul193, !dbg !10758
  %145 = load i32, i32* %i, align 4, !dbg !10759
  %idxprom195 = sext i32 %145 to i64, !dbg !10760
  %arrayidx196 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 %idxprom195, !dbg !10760
  %146 = load float, float* %arrayidx196, align 4, !dbg !10761
  %add197 = fadd float %146, %add194, !dbg !10761
  store float %add197, float* %arrayidx196, align 4, !dbg !10761
  br label %for.inc198, !dbg !10762

for.inc198:                                       ; preds = %for.body179
  %147 = load i32, i32* %i, align 4, !dbg !10763
  %inc199 = add nsw i32 %147, 1, !dbg !10763
  store i32 %inc199, i32* %i, align 4, !dbg !10763
  br label %for.cond176, !dbg !10764, !llvm.loop !10765

for.end200:                                       ; preds = %for.cond176
  br label %sw.epilog201, !dbg !10767

sw.epilog201:                                     ; preds = %for.end200, %for.end169, %for.end141
  %148 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10768
  %matrix202 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %148, i32 0, i32 3, !dbg !10769
  %arraydecay203 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix202, i64 0, i64 0, !dbg !10768
  %arraydecay204 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !10770
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !10771
  %arraydecay206 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !10772
  %149 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10773
  %rotOrder207 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %149, i32 0, i32 6, !dbg !10774
  %150 = load i16, i16* %rotOrder207, align 2, !dbg !10774
  call void @loc_eulO_size_to_mat4([4 x float]* %arraydecay203, float* %arraydecay204, float* %arraydecay205, float* %arraydecay206, i16 signext %150), !dbg !10775
  br label %if.end208, !dbg !10776

if.end208:                                        ; preds = %sw.epilog201, %land.lhs.true, %entry
  ret void, !dbg !10777
}

declare dso_local zeroext i8 @is_negative_m4([4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @shrinkwrap_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !10778 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bShrinkwrapConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !10779, metadata !DIExpression()), !dbg !10780
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !10781, metadata !DIExpression()), !dbg !10782
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !10783, metadata !DIExpression()), !dbg !10784
  call void @llvm.dbg.declare(metadata %struct.bShrinkwrapConstraint** %data, metadata !10785, metadata !DIExpression()), !dbg !10786
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10787
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !10788
  %1 = load i8*, i8** %data1, align 8, !dbg !10788
  %2 = bitcast i8* %1 to %struct.bShrinkwrapConstraint*, !dbg !10787
  store %struct.bShrinkwrapConstraint* %2, %struct.bShrinkwrapConstraint** %data, align 8, !dbg !10786
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !10789
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10790
  %5 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %data, align 8, !dbg !10791
  %target = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %5, i32 0, i32 0, !dbg !10792
  %6 = bitcast %struct.Object** %target to %struct.ID**, !dbg !10793
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !10794
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !10789
  ret void, !dbg !10795
}

; Function Attrs: noinline nounwind uwtable
define internal void @shrinkwrap_new_data(i8* %cdata) #0 !dbg !10796 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bShrinkwrapConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !10797, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.declare(metadata %struct.bShrinkwrapConstraint** %data, metadata !10799, metadata !DIExpression()), !dbg !10800
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !10801
  %1 = bitcast i8* %0 to %struct.bShrinkwrapConstraint*, !dbg !10802
  store %struct.bShrinkwrapConstraint* %1, %struct.bShrinkwrapConstraint** %data, align 8, !dbg !10800
  %2 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %data, align 8, !dbg !10803
  %projAxis = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %2, i32 0, i32 3, !dbg !10804
  store i8 2, i8* %projAxis, align 2, !dbg !10805
  %3 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %data, align 8, !dbg !10806
  %projAxisSpace = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %3, i32 0, i32 4, !dbg !10807
  store i8 1, i8* %projAxisSpace, align 1, !dbg !10808
  ret void, !dbg !10809
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @shrinkwrap_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !10810 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bShrinkwrapConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !10811, metadata !DIExpression()), !dbg !10812
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !10813, metadata !DIExpression()), !dbg !10814
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10815
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !10815
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !10817

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10818
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !10818
  br i1 %tobool1, label %if.then, label %if.end6, !dbg !10819

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bShrinkwrapConstraint** %data, metadata !10820, metadata !DIExpression()), !dbg !10822
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10823
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !10824
  %3 = load i8*, i8** %data2, align 8, !dbg !10824
  %4 = bitcast i8* %3 to %struct.bShrinkwrapConstraint*, !dbg !10823
  store %struct.bShrinkwrapConstraint* %4, %struct.bShrinkwrapConstraint** %data, align 8, !dbg !10822
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !10825, metadata !DIExpression()), !dbg !10826
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10827
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !10827
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !10827
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !10827
  %7 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %data, align 8, !dbg !10827
  %target = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %7, i32 0, i32 0, !dbg !10827
  %8 = load %struct.Object*, %struct.Object** %target, align 8, !dbg !10827
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10827
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !10827
  store %struct.Object* %8, %struct.Object** %tar, align 8, !dbg !10827
  %10 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10827
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %10, i32 0, i32 6, !dbg !10827
  %11 = load i8, i8* %tarspace, align 1, !dbg !10827
  %conv = zext i8 %11 to i16, !dbg !10827
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10827
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 5, !dbg !10827
  store i16 %conv, i16* %space, align 8, !dbg !10827
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10827
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %13, i32 0, i32 6, !dbg !10827
  store i16 1, i16* %flag, align 2, !dbg !10827
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10829
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 2, !dbg !10829
  %15 = load %struct.Object*, %struct.Object** %tar3, align 8, !dbg !10829
  %tobool4 = icmp ne %struct.Object* %15, null, !dbg !10829
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !10827

if.then5:                                         ; preds = %if.then
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10829
  %type = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 7, !dbg !10829
  store i16 1, i16* %type, align 4, !dbg !10829
  br label %if.end, !dbg !10829

if.end:                                           ; preds = %if.then5, %if.then
  %17 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10827
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10827
  %19 = bitcast %struct.bConstraintTarget* %18 to i8*, !dbg !10827
  call void @BLI_addtail(%struct.ListBase* %17, i8* %19), !dbg !10827
  store i32 1, i32* %retval, align 4, !dbg !10831
  br label %return, !dbg !10831

if.end6:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !10832
  br label %return, !dbg !10832

return:                                           ; preds = %if.end6, %if.end
  %20 = load i32, i32* %retval, align 4, !dbg !10833
  ret i32 %20, !dbg !10833
}

; Function Attrs: noinline nounwind uwtable
define internal void @shrinkwrap_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !10834 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bShrinkwrapConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !10835, metadata !DIExpression()), !dbg !10836
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !10837, metadata !DIExpression()), !dbg !10838
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !10839, metadata !DIExpression()), !dbg !10840
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10841
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !10841
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !10843

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10844
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !10844
  br i1 %tobool1, label %if.then, label %if.end9, !dbg !10845

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bShrinkwrapConstraint** %data, metadata !10846, metadata !DIExpression()), !dbg !10848
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10849
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !10850
  %3 = load i8*, i8** %data2, align 8, !dbg !10850
  %4 = bitcast i8* %3 to %struct.bShrinkwrapConstraint*, !dbg !10849
  store %struct.bShrinkwrapConstraint* %4, %struct.bShrinkwrapConstraint** %data, align 8, !dbg !10848
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !10851, metadata !DIExpression()), !dbg !10852
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10853
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !10854
  %6 = load i8*, i8** %first, align 8, !dbg !10854
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !10853
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !10852
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10855
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !10855
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !10858

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !10859, metadata !DIExpression()), !dbg !10861
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10861
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !10861
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !10861
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !10861
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !10862
  %conv = zext i8 %11 to i32, !dbg !10862
  %cmp = icmp eq i32 %conv, 0, !dbg !10862
  br i1 %cmp, label %if.then6, label %if.end, !dbg !10861

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10864
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !10864
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !10864
  %14 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %data, align 8, !dbg !10864
  %target = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %14, i32 0, i32 0, !dbg !10864
  store %struct.Object* %13, %struct.Object** %target, align 8, !dbg !10864
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10864
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 5, !dbg !10864
  %16 = load i16, i16* %space, align 8, !dbg !10864
  %conv7 = trunc i16 %16 to i8, !dbg !10864
  %17 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10864
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %17, i32 0, i32 6, !dbg !10864
  store i8 %conv7, i8* %tarspace, align 1, !dbg !10864
  br label %if.end, !dbg !10864

if.end:                                           ; preds = %if.then6, %if.then4
  %18 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !10861
  %19 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !10861
  %20 = bitcast %struct.bConstraintTarget* %19 to i8*, !dbg !10861
  call void @BLI_freelinkN(%struct.ListBase* %18, i8* %20), !dbg !10861
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !10861
  store %struct.bConstraintTarget* %21, %struct.bConstraintTarget** %ct, align 8, !dbg !10861
  br label %if.end8, !dbg !10861

if.end8:                                          ; preds = %if.end, %if.then
  br label %if.end9, !dbg !10866

if.end9:                                          ; preds = %if.end8, %land.lhs.true, %entry
  ret void, !dbg !10867
}

; Function Attrs: noinline nounwind uwtable
define internal void @shrinkwrap_get_tarmat(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.bConstraintTarget* %ct, float %UNUSED_ctime) #0 !dbg !10868 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %ct.addr = alloca %struct.bConstraintTarget*, align 8
  %UNUSED_ctime.addr = alloca float, align 4
  %scon = alloca %struct.bShrinkwrapConstraint*, align 8
  %fail = alloca i8, align 1
  %co = alloca [3 x float], align 4
  %transform = alloca %struct.SpaceTransform, align 4
  %target = alloca %struct.DerivedMesh*, align 8
  %treeData = alloca %struct.BVHTreeFromMesh, align 8
  %nearest = alloca %struct.BVHTreeNearest, align 4
  %dist = alloca float, align 4
  %hit = alloca %struct.BVHTreeRayHit, align 4
  %mat = alloca [4 x [4 x float]], align 16
  %no = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !10869, metadata !DIExpression()), !dbg !10870
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !10871, metadata !DIExpression()), !dbg !10872
  store %struct.bConstraintTarget* %ct, %struct.bConstraintTarget** %ct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct.addr, metadata !10873, metadata !DIExpression()), !dbg !10874
  store float %UNUSED_ctime, float* %UNUSED_ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_ctime.addr, metadata !10875, metadata !DIExpression()), !dbg !10876
  call void @llvm.dbg.declare(metadata %struct.bShrinkwrapConstraint** %scon, metadata !10877, metadata !DIExpression()), !dbg !10878
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !10879
  %data = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !10880
  %1 = load i8*, i8** %data, align 8, !dbg !10880
  %2 = bitcast i8* %1 to %struct.bShrinkwrapConstraint*, !dbg !10881
  store %struct.bShrinkwrapConstraint* %2, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !10878
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10882
  %tobool = icmp ne %struct.bConstraintTarget* %3, null, !dbg !10882
  br i1 %tobool, label %land.lhs.true, label %if.end107, !dbg !10882

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10882
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %4, i32 0, i32 2, !dbg !10882
  %5 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !10882
  %tobool1 = icmp ne %struct.Object* %5, null, !dbg !10882
  br i1 %tobool1, label %land.lhs.true2, label %if.end107, !dbg !10884

land.lhs.true2:                                   ; preds = %land.lhs.true
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10885
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %6, i32 0, i32 2, !dbg !10886
  %7 = load %struct.Object*, %struct.Object** %tar3, align 8, !dbg !10886
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !10887
  %8 = load i16, i16* %type, align 8, !dbg !10887
  %conv = sext i16 %8 to i32, !dbg !10885
  %cmp = icmp eq i32 %conv, 1, !dbg !10888
  br i1 %cmp, label %if.then, label %if.end107, !dbg !10889

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !10890, metadata !DIExpression()), !dbg !10892
  store i8 0, i8* %fail, align 1, !dbg !10892
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !10893, metadata !DIExpression()), !dbg !10894
  %9 = bitcast [3 x float]* %co to i8*, !dbg !10894
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 12, i1 false), !dbg !10894
  call void @llvm.dbg.declare(metadata %struct.SpaceTransform* %transform, metadata !10895, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %target, metadata !10903, metadata !DIExpression()), !dbg !10904
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10905
  %tar5 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 2, !dbg !10906
  %11 = load %struct.Object*, %struct.Object** %tar5, align 8, !dbg !10906
  %call = call %struct.DerivedMesh* @object_get_derived_final(%struct.Object* %11, i8 zeroext 0), !dbg !10907
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %target, align 8, !dbg !10904
  call void @llvm.dbg.declare(metadata %struct.BVHTreeFromMesh* %treeData, metadata !10908, metadata !DIExpression()), !dbg !10961
  %12 = bitcast %struct.BVHTreeFromMesh* %treeData to i8*, !dbg !10961
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 72, i1 false), !dbg !10961
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10962
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %13, i32 0, i32 4, !dbg !10963
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !10962
  call void @unit_m4([4 x float]* %arraydecay), !dbg !10964
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target, align 8, !dbg !10965
  %cmp6 = icmp ne %struct.DerivedMesh* %14, null, !dbg !10967
  br i1 %cmp6, label %if.then8, label %if.end106, !dbg !10968

if.then8:                                         ; preds = %if.then
  %15 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !10969
  %matrix9 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %15, i32 0, i32 3, !dbg !10971
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix9, i64 0, i64 0, !dbg !10969
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !10972
  %tar11 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !10973
  %17 = load %struct.Object*, %struct.Object** %tar11, align 8, !dbg !10973
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 47, !dbg !10974
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !10972
  call void @BLI_space_transform_from_matrices(%struct.SpaceTransform* %transform, [4 x float]* %arraydecay10, [4 x float]* %arraydecay12), !dbg !10975
  %18 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !10976
  %shrinkType = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %18, i32 0, i32 2, !dbg !10977
  %19 = load i16, i16* %shrinkType, align 4, !dbg !10977
  %conv13 = sext i16 %19 to i32, !dbg !10976
  switch i32 %conv13, label %sw.epilog92 [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb43
  ], !dbg !10978

sw.bb:                                            ; preds = %if.then8, %if.then8
  call void @llvm.dbg.declare(metadata %struct.BVHTreeNearest* %nearest, metadata !10979, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.declare(metadata float* %dist, metadata !10983, metadata !DIExpression()), !dbg !10984
  %index = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 0, !dbg !10985
  store i32 -1, i32* %index, align 4, !dbg !10986
  %dist_sq = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 3, !dbg !10987
  store float 0x47EFFFFFE0000000, float* %dist_sq, align 4, !dbg !10988
  %20 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !10989
  %shrinkType14 = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %20, i32 0, i32 2, !dbg !10991
  %21 = load i16, i16* %shrinkType14, align 4, !dbg !10991
  %conv15 = sext i16 %21 to i32, !dbg !10989
  %cmp16 = icmp eq i32 %conv15, 2, !dbg !10992
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !10993

if.then18:                                        ; preds = %sw.bb
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target, align 8, !dbg !10994
  %call19 = call %struct.BVHTree* @bvhtree_from_mesh_verts(%struct.BVHTreeFromMesh* %treeData, %struct.DerivedMesh* %22, float 0.000000e+00, i32 2, i32 6), !dbg !10995
  br label %if.end, !dbg !10995

if.else:                                          ; preds = %sw.bb
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target, align 8, !dbg !10996
  %call20 = call %struct.BVHTree* @bvhtree_from_mesh_faces(%struct.BVHTreeFromMesh* %treeData, %struct.DerivedMesh* %23, float 0.000000e+00, i32 2, i32 6), !dbg !10997
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then18
  %tree = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 0, !dbg !10998
  %24 = load %struct.BVHTree*, %struct.BVHTree** %tree, align 8, !dbg !10998
  %cmp21 = icmp eq %struct.BVHTree* %24, null, !dbg !11000
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !11001

if.then23:                                        ; preds = %if.end
  store i8 1, i8* %fail, align 1, !dbg !11002
  br label %sw.epilog92, !dbg !11004

if.end24:                                         ; preds = %if.end
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11005
  call void @BLI_space_transform_apply(%struct.SpaceTransform* %transform, float* %arraydecay25), !dbg !11006
  %tree26 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 0, !dbg !11007
  %25 = load %struct.BVHTree*, %struct.BVHTree** %tree26, align 8, !dbg !11007
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11008
  %nearest_callback = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 1, !dbg !11009
  %26 = load void (i8*, i32, float*, %struct.BVHTreeNearest*)*, void (i8*, i32, float*, %struct.BVHTreeNearest*)** %nearest_callback, align 8, !dbg !11009
  %27 = bitcast %struct.BVHTreeFromMesh* %treeData to i8*, !dbg !11010
  %call28 = call i32 @BLI_bvhtree_find_nearest(%struct.BVHTree* %25, float* %arraydecay27, %struct.BVHTreeNearest* %nearest, void (i8*, i32, float*, %struct.BVHTreeNearest*)* %26, i8* %27), !dbg !11011
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11012
  %co30 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 1, !dbg !11013
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 0, !dbg !11014
  %call32 = call float @len_v3v3(float* %arraydecay29, float* %arraydecay31), !dbg !11015
  store float %call32, float* %dist, align 4, !dbg !11016
  %28 = load float, float* %dist, align 4, !dbg !11017
  %cmp33 = fcmp une float %28, 0.000000e+00, !dbg !11019
  br i1 %cmp33, label %if.then35, label %if.end41, !dbg !11020

if.then35:                                        ; preds = %if.end24
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11021
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11023
  %co38 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 1, !dbg !11024
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 0, !dbg !11025
  %29 = load float, float* %dist, align 4, !dbg !11026
  %30 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !11027
  %dist40 = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %30, i32 0, i32 1, !dbg !11028
  %31 = load float, float* %dist40, align 8, !dbg !11028
  %sub = fsub float %29, %31, !dbg !11029
  %32 = load float, float* %dist, align 4, !dbg !11030
  %div = fdiv float %sub, %32, !dbg !11031
  call void @interp_v3_v3v3(float* %arraydecay36, float* %arraydecay37, float* %arraydecay39, float %div), !dbg !11032
  br label %if.end41, !dbg !11033

if.end41:                                         ; preds = %if.then35, %if.end24
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11034
  call void @BLI_space_transform_invert(%struct.SpaceTransform* %transform, float* %arraydecay42), !dbg !11035
  br label %sw.epilog92, !dbg !11036

sw.bb43:                                          ; preds = %if.then8
  call void @llvm.dbg.declare(metadata %struct.BVHTreeRayHit* %hit, metadata !11037, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !11040, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.declare(metadata [3 x float]* %no, metadata !11042, metadata !DIExpression()), !dbg !11043
  %33 = bitcast [3 x float]* %no to i8*, !dbg !11043
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 12, i1 false), !dbg !11043
  %index44 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !11044
  store i32 -1, i32* %index44, align 4, !dbg !11045
  %34 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !11046
  %projLimit = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %34, i32 0, i32 5, !dbg !11047
  %35 = load float, float* %projLimit, align 8, !dbg !11047
  %cmp45 = fcmp oeq float %35, 0.000000e+00, !dbg !11048
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !11049

cond.true:                                        ; preds = %sw.bb43
  br label %cond.end, !dbg !11049

cond.false:                                       ; preds = %sw.bb43
  %36 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !11050
  %projLimit47 = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %36, i32 0, i32 5, !dbg !11051
  %37 = load float, float* %projLimit47, align 8, !dbg !11051
  br label %cond.end, !dbg !11049

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 1.000000e+05, %cond.true ], [ %37, %cond.false ], !dbg !11049
  %dist48 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 3, !dbg !11052
  store float %cond, float* %dist48, align 4, !dbg !11053
  %38 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !11054
  %projAxis = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %38, i32 0, i32 3, !dbg !11055
  %39 = load i8, i8* %projAxis, align 2, !dbg !11055
  %conv49 = zext i8 %39 to i32, !dbg !11054
  switch i32 %conv49, label %sw.epilog [
    i32 0, label %sw.bb50
    i32 1, label %sw.bb50
    i32 2, label %sw.bb50
    i32 3, label %sw.bb54
    i32 4, label %sw.bb54
    i32 5, label %sw.bb54
  ], !dbg !11056

sw.bb50:                                          ; preds = %cond.end, %cond.end, %cond.end
  %40 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !11057
  %projAxis51 = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %40, i32 0, i32 3, !dbg !11059
  %41 = load i8, i8* %projAxis51, align 2, !dbg !11059
  %conv52 = zext i8 %41 to i32, !dbg !11057
  %sub53 = sub nsw i32 %conv52, 0, !dbg !11060
  %idxprom = sext i32 %sub53 to i64, !dbg !11061
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 %idxprom, !dbg !11061
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !11062
  br label %sw.epilog, !dbg !11063

sw.bb54:                                          ; preds = %cond.end, %cond.end, %cond.end
  %42 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !11064
  %projAxis55 = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %42, i32 0, i32 3, !dbg !11065
  %43 = load i8, i8* %projAxis55, align 2, !dbg !11065
  %conv56 = zext i8 %43 to i32, !dbg !11064
  %sub57 = sub nsw i32 %conv56, 3, !dbg !11066
  %idxprom58 = sext i32 %sub57 to i64, !dbg !11067
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 %idxprom58, !dbg !11067
  store float -1.000000e+00, float* %arrayidx59, align 4, !dbg !11068
  br label %sw.epilog, !dbg !11069

sw.epilog:                                        ; preds = %cond.end, %sw.bb54, %sw.bb50
  %arraydecay60 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11070
  call void @unit_m4([4 x float]* %arraydecay60), !dbg !11071
  %44 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11072
  %ob = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %44, i32 0, i32 1, !dbg !11073
  %45 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11073
  %46 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11074
  %pchan = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %46, i32 0, i32 2, !dbg !11075
  %47 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11075
  %arraydecay61 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11076
  %48 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !11077
  %projAxisSpace = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %48, i32 0, i32 4, !dbg !11078
  %49 = load i8, i8* %projAxisSpace, align 1, !dbg !11078
  %conv62 = zext i8 %49 to i16, !dbg !11077
  call void @BKE_constraint_mat_convertspace(%struct.Object* %45, %struct.bPoseChannel* %47, [4 x float]* %arraydecay61, i16 signext 1, i16 signext %conv62), !dbg !11079
  %arraydecay63 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11080
  %call64 = call zeroext i8 @invert_m4([4 x float]* %arraydecay63), !dbg !11081
  %arraydecay65 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11082
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !11083
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay65, float* %arraydecay66), !dbg !11084
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !11085
  %call68 = call float @normalize_v3(float* %arraydecay67), !dbg !11087
  %cmp69 = fcmp olt float %call68, 0x3E80000000000000, !dbg !11088
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !11089

if.then71:                                        ; preds = %sw.epilog
  store i8 1, i8* %fail, align 1, !dbg !11090
  br label %sw.epilog92, !dbg !11092

if.end72:                                         ; preds = %sw.epilog
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target, align 8, !dbg !11093
  %51 = load %struct.bShrinkwrapConstraint*, %struct.bShrinkwrapConstraint** %scon, align 8, !dbg !11094
  %dist73 = getelementptr inbounds %struct.bShrinkwrapConstraint, %struct.bShrinkwrapConstraint* %51, i32 0, i32 1, !dbg !11095
  %52 = load float, float* %dist73, align 8, !dbg !11095
  %call74 = call %struct.BVHTree* @bvhtree_from_mesh_faces(%struct.BVHTreeFromMesh* %treeData, %struct.DerivedMesh* %50, float %52, i32 4, i32 6), !dbg !11096
  %tree75 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 0, !dbg !11097
  %53 = load %struct.BVHTree*, %struct.BVHTree** %tree75, align 8, !dbg !11097
  %cmp76 = icmp eq %struct.BVHTree* %53, null, !dbg !11099
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !11100

if.then78:                                        ; preds = %if.end72
  store i8 1, i8* %fail, align 1, !dbg !11101
  br label %sw.epilog92, !dbg !11103

if.end79:                                         ; preds = %if.end72
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11104
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !11106
  %tree82 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 0, !dbg !11107
  %54 = load %struct.BVHTree*, %struct.BVHTree** %tree82, align 8, !dbg !11107
  %raycast_callback = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 2, !dbg !11108
  %55 = load void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)*, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)** %raycast_callback, align 8, !dbg !11108
  %56 = bitcast %struct.BVHTreeFromMesh* %treeData to i8*, !dbg !11109
  %call83 = call zeroext i8 @BKE_shrinkwrap_project_normal(i8 zeroext 0, float* %arraydecay80, float* %arraydecay81, %struct.SpaceTransform* %transform, %struct.BVHTree* %54, %struct.BVHTreeRayHit* %hit, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)* %55, i8* %56), !dbg !11110
  %conv84 = zext i8 %call83 to i32, !dbg !11110
  %cmp85 = icmp eq i32 %conv84, 0, !dbg !11111
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !11112

if.then87:                                        ; preds = %if.end79
  store i8 1, i8* %fail, align 1, !dbg !11113
  br label %sw.epilog92, !dbg !11115

if.end88:                                         ; preds = %if.end79
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11116
  %co90 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 1, !dbg !11117
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %co90, i64 0, i64 0, !dbg !11118
  call void @copy_v3_v3(float* %arraydecay89, float* %arraydecay91), !dbg !11119
  br label %sw.epilog92, !dbg !11120

sw.epilog92:                                      ; preds = %if.then8, %if.end88, %if.then87, %if.then78, %if.then71, %if.end41, %if.then23
  call void @free_bvhtree_from_mesh(%struct.BVHTreeFromMesh* %treeData), !dbg !11121
  %57 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target, align 8, !dbg !11122
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %57, i32 0, i32 95, !dbg !11123
  %58 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !11123
  %59 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target, align 8, !dbg !11124
  call void %58(%struct.DerivedMesh* %59), !dbg !11122
  %60 = load i8, i8* %fail, align 1, !dbg !11125
  %conv93 = zext i8 %60 to i32, !dbg !11125
  %cmp94 = icmp eq i32 %conv93, 1, !dbg !11127
  br i1 %cmp94, label %if.then96, label %if.end98, !dbg !11128

if.then96:                                        ; preds = %sw.epilog92
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11129
  call void @zero_v3(float* %arraydecay97), !dbg !11131
  br label %if.end98, !dbg !11132

if.end98:                                         ; preds = %if.then96, %sw.epilog92
  %61 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11133
  %matrix99 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %61, i32 0, i32 3, !dbg !11134
  %arraydecay100 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix99, i64 0, i64 0, !dbg !11133
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11135
  call void @mul_m4_v3([4 x float]* %arraydecay100, float* %arraydecay101), !dbg !11136
  %62 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !11137
  %matrix102 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %62, i32 0, i32 4, !dbg !11138
  %arrayidx103 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix102, i64 0, i64 3, !dbg !11137
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx103, i64 0, i64 0, !dbg !11137
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11139
  call void @copy_v3_v3(float* %arraydecay104, float* %arraydecay105), !dbg !11140
  br label %if.end106, !dbg !11141

if.end106:                                        ; preds = %if.end98, %if.then
  br label %if.end107, !dbg !11142

if.end107:                                        ; preds = %if.end106, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !11143
}

; Function Attrs: noinline nounwind uwtable
define internal void @shrinkwrap_evaluate(%struct.bConstraint* %UNUSED_con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !11144 {
entry:
  %UNUSED_con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %UNUSED_con, %struct.bConstraint** %UNUSED_con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %UNUSED_con.addr, metadata !11145, metadata !DIExpression()), !dbg !11146
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !11147, metadata !DIExpression()), !dbg !11148
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !11149, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11151, metadata !DIExpression()), !dbg !11152
  %0 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !11153
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !11154
  %1 = load i8*, i8** %first, align 8, !dbg !11154
  %2 = bitcast i8* %1 to %struct.bConstraintTarget*, !dbg !11153
  store %struct.bConstraintTarget* %2, %struct.bConstraintTarget** %ct, align 8, !dbg !11152
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11155
  %tobool = icmp ne %struct.bConstraintTarget* %3, null, !dbg !11155
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11155

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11155
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %4, i32 0, i32 2, !dbg !11155
  %5 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11155
  %tobool1 = icmp ne %struct.Object* %5, null, !dbg !11155
  br i1 %tobool1, label %if.then, label %if.end, !dbg !11157

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11158
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %6, i32 0, i32 3, !dbg !11160
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 3, !dbg !11158
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !11158
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11161
  %matrix2 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 4, !dbg !11162
  %arrayidx3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix2, i64 0, i64 3, !dbg !11161
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx3, i64 0, i64 0, !dbg !11161
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay4), !dbg !11163
  br label %if.end, !dbg !11164

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !11165
}

declare dso_local %struct.DerivedMesh* @object_get_derived_final(%struct.Object*, i8 zeroext) #2

declare dso_local void @BLI_space_transform_from_matrices(%struct.SpaceTransform*, [4 x float]*, [4 x float]*) #2

declare dso_local %struct.BVHTree* @bvhtree_from_mesh_verts(%struct.BVHTreeFromMesh*, %struct.DerivedMesh*, float, i32, i32) #2

declare dso_local %struct.BVHTree* @bvhtree_from_mesh_faces(%struct.BVHTreeFromMesh*, %struct.DerivedMesh*, float, i32, i32) #2

declare dso_local void @BLI_space_transform_apply(%struct.SpaceTransform*, float*) #2

declare dso_local i32 @BLI_bvhtree_find_nearest(%struct.BVHTree*, float*, %struct.BVHTreeNearest*, void (i8*, i32, float*, %struct.BVHTreeNearest*)*, i8*) #2

declare dso_local void @BLI_space_transform_invert(%struct.SpaceTransform*, float*) #2

declare dso_local zeroext i8 @invert_m4([4 x float]*) #2

declare dso_local void @mul_mat3_m4_v3([4 x float]*, float*) #2

declare dso_local zeroext i8 @BKE_shrinkwrap_project_normal(i8 zeroext, float*, float*, %struct.SpaceTransform*, %struct.BVHTree*, %struct.BVHTreeRayHit*, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)*, i8*) #2

declare dso_local void @free_bvhtree_from_mesh(%struct.BVHTreeFromMesh*) #2

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @damptrack_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !11166 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bDampTrackConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11167, metadata !DIExpression()), !dbg !11168
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !11169, metadata !DIExpression()), !dbg !11170
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !11171, metadata !DIExpression()), !dbg !11172
  call void @llvm.dbg.declare(metadata %struct.bDampTrackConstraint** %data, metadata !11173, metadata !DIExpression()), !dbg !11174
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11175
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !11176
  %1 = load i8*, i8** %data1, align 8, !dbg !11176
  %2 = bitcast i8* %1 to %struct.bDampTrackConstraint*, !dbg !11175
  store %struct.bDampTrackConstraint* %2, %struct.bDampTrackConstraint** %data, align 8, !dbg !11174
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !11177
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11178
  %5 = load %struct.bDampTrackConstraint*, %struct.bDampTrackConstraint** %data, align 8, !dbg !11179
  %tar = getelementptr inbounds %struct.bDampTrackConstraint, %struct.bDampTrackConstraint* %5, i32 0, i32 0, !dbg !11180
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !11181
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !11182
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !11177
  ret void, !dbg !11183
}

; Function Attrs: noinline nounwind uwtable
define internal void @damptrack_new_data(i8* %cdata) #0 !dbg !11184 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bDampTrackConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !11185, metadata !DIExpression()), !dbg !11186
  call void @llvm.dbg.declare(metadata %struct.bDampTrackConstraint** %data, metadata !11187, metadata !DIExpression()), !dbg !11188
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !11189
  %1 = bitcast i8* %0 to %struct.bDampTrackConstraint*, !dbg !11190
  store %struct.bDampTrackConstraint* %1, %struct.bDampTrackConstraint** %data, align 8, !dbg !11188
  %2 = load %struct.bDampTrackConstraint*, %struct.bDampTrackConstraint** %data, align 8, !dbg !11191
  %trackflag = getelementptr inbounds %struct.bDampTrackConstraint, %struct.bDampTrackConstraint* %2, i32 0, i32 1, !dbg !11192
  store i32 1, i32* %trackflag, align 8, !dbg !11193
  ret void, !dbg !11194
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @damptrack_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !11195 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bDampTrackConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11196, metadata !DIExpression()), !dbg !11197
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !11198, metadata !DIExpression()), !dbg !11199
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11200
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !11200
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !11202

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11203
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !11203
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !11204

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bDampTrackConstraint** %data, metadata !11205, metadata !DIExpression()), !dbg !11207
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11208
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !11209
  %3 = load i8*, i8** %data2, align 8, !dbg !11209
  %4 = bitcast i8* %3 to %struct.bDampTrackConstraint*, !dbg !11208
  store %struct.bDampTrackConstraint* %4, %struct.bDampTrackConstraint** %data, align 8, !dbg !11207
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11210, metadata !DIExpression()), !dbg !11211
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11212
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !11212
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !11212
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !11212
  %7 = load %struct.bDampTrackConstraint*, %struct.bDampTrackConstraint** %data, align 8, !dbg !11212
  %tar = getelementptr inbounds %struct.bDampTrackConstraint, %struct.bDampTrackConstraint* %7, i32 0, i32 0, !dbg !11212
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11212
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11212
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !11212
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !11212
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11212
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !11212
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !11212
  %11 = load %struct.bDampTrackConstraint*, %struct.bDampTrackConstraint** %data, align 8, !dbg !11212
  %subtarget4 = getelementptr inbounds %struct.bDampTrackConstraint, %struct.bDampTrackConstraint* %11, i32 0, i32 3, !dbg !11212
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !11212
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !11212
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11212
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !11212
  %13 = load i8, i8* %tarspace, align 1, !dbg !11212
  %conv = zext i8 %13 to i16, !dbg !11212
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11212
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !11212
  store i16 %conv, i16* %space, align 8, !dbg !11212
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11212
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !11212
  store i16 1, i16* %flag, align 2, !dbg !11212
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11214
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !11214
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !11214
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !11214
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !11212

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11216
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !11216
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !11216
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !11216
  %20 = load i16, i16* %type, align 8, !dbg !11216
  %conv11 = sext i16 %20 to i32, !dbg !11216
  %cmp = icmp eq i32 %conv11, 25, !dbg !11216
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !11216

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11216
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !11216
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !11216
  %22 = load i8, i8* %arrayidx, align 8, !dbg !11216
  %conv15 = zext i8 %22 to i32, !dbg !11216
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !11216
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !11219

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !11220, metadata !DIExpression()), !dbg !11222
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11222
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !11222
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !11222
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !11222
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !11222
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11222
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !11222
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !11222
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !11222
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !11222
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11222
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !11222
  store i16 2, i16* %type22, align 4, !dbg !11222
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11222
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !11222
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !11222

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11222
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !11222
  %30 = load i16, i16* %rotmode, align 4, !dbg !11222
  %conv24 = sext i16 %30 to i32, !dbg !11222
  br label %cond.end, !dbg !11222

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !11222

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !11222
  %conv25 = trunc i32 %cond to i16, !dbg !11222
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11222
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !11222
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !11222
  br label %if.end49, !dbg !11222

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11223
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !11223
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !11223
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !11223
  %34 = load i16, i16* %type27, align 8, !dbg !11223
  %conv28 = sext i16 %34 to i32, !dbg !11223
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !11223
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !11223

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11223
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !11223
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !11223
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !11223
  %37 = load i16, i16* %type32, align 8, !dbg !11223
  %conv33 = sext i16 %37 to i32, !dbg !11223
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !11223
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !11223

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11223
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !11223
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !11223
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !11223
  %conv39 = zext i8 %39 to i32, !dbg !11223
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !11223
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !11216

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11225
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !11225
  store i16 3, i16* %type42, align 4, !dbg !11225
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11225
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !11225
  store i16 1, i16* %rotOrder43, align 2, !dbg !11225
  br label %if.end, !dbg !11225

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11227
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !11227
  store i16 1, i16* %type45, align 4, !dbg !11227
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11227
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !11227
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !11227
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !11227
  %45 = load i16, i16* %rotmode47, align 8, !dbg !11227
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11227
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !11227
  store i16 %45, i16* %rotOrder48, align 2, !dbg !11227
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !11219

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11212
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11212
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !11212
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !11212
  store i32 1, i32* %retval, align 4, !dbg !11229
  br label %return, !dbg !11229

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !11230
  br label %return, !dbg !11230

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !11231
  ret i32 %50, !dbg !11231
}

; Function Attrs: noinline nounwind uwtable
define internal void @damptrack_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !11232 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bDampTrackConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11233, metadata !DIExpression()), !dbg !11234
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !11235, metadata !DIExpression()), !dbg !11236
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !11237, metadata !DIExpression()), !dbg !11238
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11239
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !11239
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !11241

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11242
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !11242
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !11243

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bDampTrackConstraint** %data, metadata !11244, metadata !DIExpression()), !dbg !11246
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11247
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !11248
  %3 = load i8*, i8** %data2, align 8, !dbg !11248
  %4 = bitcast i8* %3 to %struct.bDampTrackConstraint*, !dbg !11247
  store %struct.bDampTrackConstraint* %4, %struct.bDampTrackConstraint** %data, align 8, !dbg !11246
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11249, metadata !DIExpression()), !dbg !11250
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11251
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !11252
  %6 = load i8*, i8** %first, align 8, !dbg !11252
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !11251
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !11250
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11253
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !11253
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !11256

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !11257, metadata !DIExpression()), !dbg !11259
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11259
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !11259
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !11259
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !11259
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !11260
  %conv = zext i8 %11 to i32, !dbg !11260
  %cmp = icmp eq i32 %conv, 0, !dbg !11260
  br i1 %cmp, label %if.then6, label %if.end, !dbg !11259

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11262
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !11262
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11262
  %14 = load %struct.bDampTrackConstraint*, %struct.bDampTrackConstraint** %data, align 8, !dbg !11262
  %tar7 = getelementptr inbounds %struct.bDampTrackConstraint, %struct.bDampTrackConstraint* %14, i32 0, i32 0, !dbg !11262
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !11262
  %15 = load %struct.bDampTrackConstraint*, %struct.bDampTrackConstraint** %data, align 8, !dbg !11262
  %subtarget = getelementptr inbounds %struct.bDampTrackConstraint, %struct.bDampTrackConstraint* %15, i32 0, i32 3, !dbg !11262
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !11262
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11262
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !11262
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !11262
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !11262
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11262
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !11262
  %18 = load i16, i16* %space, align 8, !dbg !11262
  %conv10 = trunc i16 %18 to i8, !dbg !11262
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11262
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !11262
  store i8 %conv10, i8* %tarspace, align 1, !dbg !11262
  br label %if.end, !dbg !11262

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11259
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11259
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !11259
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !11259
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !11259
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !11259
  br label %if.end11, !dbg !11259

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !11264

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !11265
}

; Function Attrs: noinline nounwind uwtable
define internal void @damptrack_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !11266 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bDampTrackConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %obvec = alloca [3 x float], align 4
  %tarvec = alloca [3 x float], align 4
  %obloc = alloca [3 x float], align 4
  %raxis = alloca [3 x float], align 4
  %rangle = alloca float, align 4
  %rmat = alloca [3 x [3 x float]], align 16
  %tmat = alloca [4 x [4 x float]], align 16
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11267, metadata !DIExpression()), !dbg !11268
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !11269, metadata !DIExpression()), !dbg !11270
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !11271, metadata !DIExpression()), !dbg !11272
  call void @llvm.dbg.declare(metadata %struct.bDampTrackConstraint** %data, metadata !11273, metadata !DIExpression()), !dbg !11274
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11275
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !11276
  %1 = load i8*, i8** %data1, align 8, !dbg !11276
  %2 = bitcast i8* %1 to %struct.bDampTrackConstraint*, !dbg !11275
  store %struct.bDampTrackConstraint* %2, %struct.bDampTrackConstraint** %data, align 8, !dbg !11274
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11277, metadata !DIExpression()), !dbg !11278
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !11279
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !11280
  %4 = load i8*, i8** %first, align 8, !dbg !11280
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !11279
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !11278
  %6 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11281
  %tobool = icmp ne %struct.bConstraintTarget* %6, null, !dbg !11281
  br i1 %tobool, label %land.lhs.true, label %if.end52, !dbg !11281

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11281
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 2, !dbg !11281
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11281
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !11281
  br i1 %tobool2, label %if.then, label %if.end52, !dbg !11283

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %obvec, metadata !11284, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.declare(metadata [3 x float]* %tarvec, metadata !11287, metadata !DIExpression()), !dbg !11288
  call void @llvm.dbg.declare(metadata [3 x float]* %obloc, metadata !11289, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.declare(metadata [3 x float]* %raxis, metadata !11291, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.declare(metadata float* %rangle, metadata !11293, metadata !DIExpression()), !dbg !11294
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rmat, metadata !11295, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !11297, metadata !DIExpression()), !dbg !11298
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %obvec, i64 0, i64 0, !dbg !11299
  %9 = load %struct.bDampTrackConstraint*, %struct.bDampTrackConstraint** %data, align 8, !dbg !11300
  %trackflag = getelementptr inbounds %struct.bDampTrackConstraint, %struct.bDampTrackConstraint* %9, i32 0, i32 1, !dbg !11301
  %10 = load i32, i32* %trackflag, align 8, !dbg !11301
  %idxprom = sext i32 %10 to i64, !dbg !11302
  %arrayidx = getelementptr inbounds [6 x [3 x float]], [6 x [3 x float]]* @track_dir_vecs, i64 0, i64 %idxprom, !dbg !11302
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !11302
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !11303
  %11 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11304
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %11, i32 0, i32 3, !dbg !11305
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !11304
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %obvec, i64 0, i64 0, !dbg !11306
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay4, float* %arraydecay5), !dbg !11307
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %obvec, i64 0, i64 0, !dbg !11308
  %call = call float @normalize_v3(float* %arraydecay6), !dbg !11310
  %cmp = fcmp oeq float %call, 0.000000e+00, !dbg !11311
  br i1 %cmp, label %if.then7, label %if.end, !dbg !11312

if.then7:                                         ; preds = %if.then
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %obvec, i64 0, i64 0, !dbg !11313
  %12 = load %struct.bDampTrackConstraint*, %struct.bDampTrackConstraint** %data, align 8, !dbg !11315
  %trackflag9 = getelementptr inbounds %struct.bDampTrackConstraint, %struct.bDampTrackConstraint* %12, i32 0, i32 1, !dbg !11316
  %13 = load i32, i32* %trackflag9, align 8, !dbg !11316
  %idxprom10 = sext i32 %13 to i64, !dbg !11317
  %arrayidx11 = getelementptr inbounds [6 x [3 x float]], [6 x [3 x float]]* @track_dir_vecs, i64 0, i64 %idxprom10, !dbg !11317
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !11317
  call void @copy_v3_v3(float* %arraydecay8, float* %arraydecay12), !dbg !11318
  br label %if.end, !dbg !11319

if.end:                                           ; preds = %if.then7, %if.then
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %obloc, i64 0, i64 0, !dbg !11320
  %14 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11321
  %matrix14 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %14, i32 0, i32 3, !dbg !11322
  %arrayidx15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix14, i64 0, i64 3, !dbg !11321
  %arraydecay16 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx15, i64 0, i64 0, !dbg !11321
  call void @copy_v3_v3(float* %arraydecay13, float* %arraydecay16), !dbg !11323
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %tarvec, i64 0, i64 0, !dbg !11324
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11325
  %matrix18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 4, !dbg !11326
  %arrayidx19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix18, i64 0, i64 3, !dbg !11325
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx19, i64 0, i64 0, !dbg !11325
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %obloc, i64 0, i64 0, !dbg !11327
  call void @sub_v3_v3v3(float* %arraydecay17, float* %arraydecay20, float* %arraydecay21), !dbg !11328
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %tarvec, i64 0, i64 0, !dbg !11329
  %call23 = call float @normalize_v3(float* %arraydecay22), !dbg !11331
  %cmp24 = fcmp oeq float %call23, 0.000000e+00, !dbg !11332
  br i1 %cmp24, label %if.then25, label %if.end28, !dbg !11333

if.then25:                                        ; preds = %if.end
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %tarvec, i64 0, i64 0, !dbg !11334
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %obvec, i64 0, i64 0, !dbg !11336
  call void @copy_v3_v3(float* %arraydecay26, float* %arraydecay27), !dbg !11337
  br label %if.end28, !dbg !11338

if.end28:                                         ; preds = %if.then25, %if.end
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %raxis, i64 0, i64 0, !dbg !11339
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %obvec, i64 0, i64 0, !dbg !11340
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %tarvec, i64 0, i64 0, !dbg !11341
  call void @cross_v3_v3v3(float* %arraydecay29, float* %arraydecay30, float* %arraydecay31), !dbg !11342
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %obvec, i64 0, i64 0, !dbg !11343
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %tarvec, i64 0, i64 0, !dbg !11344
  %call34 = call float @dot_v3v3(float* %arraydecay32, float* %arraydecay33), !dbg !11345
  store float %call34, float* %rangle, align 4, !dbg !11346
  %16 = load float, float* %rangle, align 4, !dbg !11347
  %call35 = call float @min_ff(float 1.000000e+00, float %16), !dbg !11348
  %call36 = call float @max_ff(float -1.000000e+00, float %call35), !dbg !11349
  %call37 = call float @acosf(float %call36) #7, !dbg !11350
  store float %call37, float* %rangle, align 4, !dbg !11351
  %arraydecay38 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !11352
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %raxis, i64 0, i64 0, !dbg !11353
  %17 = load float, float* %rangle, align 4, !dbg !11354
  call void @axis_angle_to_mat3([3 x float]* %arraydecay38, float* %arraydecay39, float %17), !dbg !11355
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11356
  call void @unit_m4([4 x float]* %arraydecay40), !dbg !11357
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11358
  %arraydecay42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !11359
  %18 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11360
  %matrix43 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %18, i32 0, i32 3, !dbg !11361
  %arraydecay44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix43, i64 0, i64 0, !dbg !11360
  call void @mul_m4_m3m4([4 x float]* %arraydecay41, [3 x float]* %arraydecay42, [4 x float]* %arraydecay44), !dbg !11362
  %19 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11363
  %matrix45 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %19, i32 0, i32 3, !dbg !11364
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix45, i64 0, i64 0, !dbg !11363
  %arraydecay47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11365
  call void @copy_m4_m4([4 x float]* %arraydecay46, [4 x float]* %arraydecay47), !dbg !11366
  %20 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11367
  %matrix48 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %20, i32 0, i32 3, !dbg !11368
  %arrayidx49 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix48, i64 0, i64 3, !dbg !11367
  %arraydecay50 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx49, i64 0, i64 0, !dbg !11367
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %obloc, i64 0, i64 0, !dbg !11369
  call void @copy_v3_v3(float* %arraydecay50, float* %arraydecay51), !dbg !11370
  br label %if.end52, !dbg !11371

if.end52:                                         ; preds = %if.end28, %land.lhs.true, %entry
  ret void, !dbg !11372
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #5

declare dso_local void @axis_angle_to_mat3([3 x float]*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @splineik_free(%struct.bConstraint* %con) #0 !dbg !11373 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %data = alloca %struct.bSplineIKConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11374, metadata !DIExpression()), !dbg !11375
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %data, metadata !11376, metadata !DIExpression()), !dbg !11377
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11378
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !11379
  %1 = load i8*, i8** %data1, align 8, !dbg !11379
  %2 = bitcast i8* %1 to %struct.bSplineIKConstraint*, !dbg !11378
  store %struct.bSplineIKConstraint* %2, %struct.bSplineIKConstraint** %data, align 8, !dbg !11377
  %3 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data, align 8, !dbg !11380
  %points = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %3, i32 0, i32 1, !dbg !11382
  %4 = load float*, float** %points, align 8, !dbg !11382
  %tobool = icmp ne float* %4, null, !dbg !11380
  br i1 %tobool, label %if.then, label %if.end, !dbg !11383

if.then:                                          ; preds = %entry
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11384
  %6 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data, align 8, !dbg !11385
  %points2 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %6, i32 0, i32 1, !dbg !11386
  %7 = load float*, float** %points2, align 8, !dbg !11386
  %8 = bitcast float* %7 to i8*, !dbg !11385
  call void %5(i8* %8), !dbg !11384
  br label %if.end, !dbg !11384

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11387
}

; Function Attrs: noinline nounwind uwtable
define internal void @splineik_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !11388 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bSplineIKConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11389, metadata !DIExpression()), !dbg !11390
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !11391, metadata !DIExpression()), !dbg !11392
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !11393, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %data, metadata !11395, metadata !DIExpression()), !dbg !11396
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11397
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !11398
  %1 = load i8*, i8** %data1, align 8, !dbg !11398
  %2 = bitcast i8* %1 to %struct.bSplineIKConstraint*, !dbg !11397
  store %struct.bSplineIKConstraint* %2, %struct.bSplineIKConstraint** %data, align 8, !dbg !11396
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !11399
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11400
  %5 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data, align 8, !dbg !11401
  %tar = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %5, i32 0, i32 0, !dbg !11402
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !11403
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !11404
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !11399
  ret void, !dbg !11405
}

; Function Attrs: noinline nounwind uwtable
define internal void @splineik_copy(%struct.bConstraint* %con, %struct.bConstraint* %srccon) #0 !dbg !11406 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %srccon.addr = alloca %struct.bConstraint*, align 8
  %src = alloca %struct.bSplineIKConstraint*, align 8
  %dst = alloca %struct.bSplineIKConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11407, metadata !DIExpression()), !dbg !11408
  store %struct.bConstraint* %srccon, %struct.bConstraint** %srccon.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %srccon.addr, metadata !11409, metadata !DIExpression()), !dbg !11410
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %src, metadata !11411, metadata !DIExpression()), !dbg !11412
  %0 = load %struct.bConstraint*, %struct.bConstraint** %srccon.addr, align 8, !dbg !11413
  %data = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !11414
  %1 = load i8*, i8** %data, align 8, !dbg !11414
  %2 = bitcast i8* %1 to %struct.bSplineIKConstraint*, !dbg !11413
  store %struct.bSplineIKConstraint* %2, %struct.bSplineIKConstraint** %src, align 8, !dbg !11412
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %dst, metadata !11415, metadata !DIExpression()), !dbg !11416
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11417
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %3, i32 0, i32 2, !dbg !11418
  %4 = load i8*, i8** %data1, align 8, !dbg !11418
  %5 = bitcast i8* %4 to %struct.bSplineIKConstraint*, !dbg !11417
  store %struct.bSplineIKConstraint* %5, %struct.bSplineIKConstraint** %dst, align 8, !dbg !11416
  %6 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !11419
  %7 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %src, align 8, !dbg !11420
  %points = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %7, i32 0, i32 1, !dbg !11421
  %8 = load float*, float** %points, align 8, !dbg !11421
  %9 = bitcast float* %8 to i8*, !dbg !11420
  %call = call i8* %6(i8* %9), !dbg !11419
  %10 = bitcast i8* %call to float*, !dbg !11419
  %11 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %dst, align 8, !dbg !11422
  %points2 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %11, i32 0, i32 1, !dbg !11423
  store float* %10, float** %points2, align 8, !dbg !11424
  ret void, !dbg !11425
}

; Function Attrs: noinline nounwind uwtable
define internal void @splineik_new_data(i8* %cdata) #0 !dbg !11426 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bSplineIKConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !11427, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %data, metadata !11429, metadata !DIExpression()), !dbg !11430
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !11431
  %1 = bitcast i8* %0 to %struct.bSplineIKConstraint*, !dbg !11432
  store %struct.bSplineIKConstraint* %1, %struct.bSplineIKConstraint** %data, align 8, !dbg !11430
  %2 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data, align 8, !dbg !11433
  %chainlen = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %2, i32 0, i32 3, !dbg !11434
  store i16 1, i16* %chainlen, align 2, !dbg !11435
  ret void, !dbg !11436
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @splineik_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !11437 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bSplineIKConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11438, metadata !DIExpression()), !dbg !11439
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !11440, metadata !DIExpression()), !dbg !11441
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11442
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !11442
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !11444

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11445
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !11445
  br i1 %tobool1, label %if.then, label %if.end7, !dbg !11446

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %data, metadata !11447, metadata !DIExpression()), !dbg !11449
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11450
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !11451
  %3 = load i8*, i8** %data2, align 8, !dbg !11451
  %4 = bitcast i8* %3 to %struct.bSplineIKConstraint*, !dbg !11450
  store %struct.bSplineIKConstraint* %4, %struct.bSplineIKConstraint** %data, align 8, !dbg !11449
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11452, metadata !DIExpression()), !dbg !11453
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11454
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !11454
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !11454
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !11454
  %7 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data, align 8, !dbg !11454
  %tar = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %7, i32 0, i32 0, !dbg !11454
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11454
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11454
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !11454
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !11454
  %10 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11454
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %10, i32 0, i32 6, !dbg !11454
  %11 = load i8, i8* %tarspace, align 1, !dbg !11454
  %conv = zext i8 %11 to i16, !dbg !11454
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11454
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 5, !dbg !11454
  store i16 %conv, i16* %space, align 8, !dbg !11454
  %13 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11454
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %13, i32 0, i32 6, !dbg !11454
  store i16 1, i16* %flag, align 2, !dbg !11454
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11456
  %tar4 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 2, !dbg !11456
  %15 = load %struct.Object*, %struct.Object** %tar4, align 8, !dbg !11456
  %tobool5 = icmp ne %struct.Object* %15, null, !dbg !11456
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !11454

if.then6:                                         ; preds = %if.then
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11456
  %type = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 7, !dbg !11456
  store i16 1, i16* %type, align 4, !dbg !11456
  br label %if.end, !dbg !11456

if.end:                                           ; preds = %if.then6, %if.then
  %17 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11454
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11454
  %19 = bitcast %struct.bConstraintTarget* %18 to i8*, !dbg !11454
  call void @BLI_addtail(%struct.ListBase* %17, i8* %19), !dbg !11454
  store i32 1, i32* %retval, align 4, !dbg !11458
  br label %return, !dbg !11458

if.end7:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !11459
  br label %return, !dbg !11459

return:                                           ; preds = %if.end7, %if.end
  %20 = load i32, i32* %retval, align 4, !dbg !11460
  ret i32 %20, !dbg !11460
}

; Function Attrs: noinline nounwind uwtable
define internal void @splineik_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !11461 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bSplineIKConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11462, metadata !DIExpression()), !dbg !11463
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !11464, metadata !DIExpression()), !dbg !11465
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !11466, metadata !DIExpression()), !dbg !11467
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11468
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !11468
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !11470

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11471
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !11471
  br i1 %tobool1, label %if.then, label %if.end10, !dbg !11472

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %data, metadata !11473, metadata !DIExpression()), !dbg !11475
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11476
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !11477
  %3 = load i8*, i8** %data2, align 8, !dbg !11477
  %4 = bitcast i8* %3 to %struct.bSplineIKConstraint*, !dbg !11476
  store %struct.bSplineIKConstraint* %4, %struct.bSplineIKConstraint** %data, align 8, !dbg !11475
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11478, metadata !DIExpression()), !dbg !11479
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11480
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !11481
  %6 = load i8*, i8** %first, align 8, !dbg !11481
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !11480
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !11479
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11482
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !11482
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !11485

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !11486, metadata !DIExpression()), !dbg !11488
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11488
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !11488
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !11488
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !11488
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !11489
  %conv = zext i8 %11 to i32, !dbg !11489
  %cmp = icmp eq i32 %conv, 0, !dbg !11489
  br i1 %cmp, label %if.then6, label %if.end, !dbg !11488

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11491
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !11491
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11491
  %14 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %data, align 8, !dbg !11491
  %tar7 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %14, i32 0, i32 0, !dbg !11491
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !11491
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11491
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 5, !dbg !11491
  %16 = load i16, i16* %space, align 8, !dbg !11491
  %conv8 = trunc i16 %16 to i8, !dbg !11491
  %17 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11491
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %17, i32 0, i32 6, !dbg !11491
  store i8 %conv8, i8* %tarspace, align 1, !dbg !11491
  br label %if.end, !dbg !11491

if.end:                                           ; preds = %if.then6, %if.then4
  %18 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11488
  %19 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11488
  %20 = bitcast %struct.bConstraintTarget* %19 to i8*, !dbg !11488
  call void @BLI_freelinkN(%struct.ListBase* %18, i8* %20), !dbg !11488
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !11488
  store %struct.bConstraintTarget* %21, %struct.bConstraintTarget** %ct, align 8, !dbg !11488
  br label %if.end9, !dbg !11488

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end10, !dbg !11493

if.end10:                                         ; preds = %if.end9, %land.lhs.true, %entry
  ret void, !dbg !11494
}

; Function Attrs: noinline nounwind uwtable
define internal void @splineik_get_tarmat(%struct.bConstraint* %UNUSED_con, %struct.bConstraintOb* %cob, %struct.bConstraintTarget* %ct, float %UNUSED_ctime) #0 !dbg !11495 {
entry:
  %UNUSED_con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %ct.addr = alloca %struct.bConstraintTarget*, align 8
  %UNUSED_ctime.addr = alloca float, align 4
  store %struct.bConstraint* %UNUSED_con, %struct.bConstraint** %UNUSED_con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %UNUSED_con.addr, metadata !11496, metadata !DIExpression()), !dbg !11497
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !11498, metadata !DIExpression()), !dbg !11499
  store %struct.bConstraintTarget* %ct, %struct.bConstraintTarget** %ct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct.addr, metadata !11500, metadata !DIExpression()), !dbg !11501
  store float %UNUSED_ctime, float* %UNUSED_ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_ctime.addr, metadata !11502, metadata !DIExpression()), !dbg !11503
  %0 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !11504
  %tobool = icmp ne %struct.bConstraintTarget* %0, null, !dbg !11504
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !11504

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !11504
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %1, i32 0, i32 2, !dbg !11504
  %2 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11504
  %tobool1 = icmp ne %struct.Object* %2, null, !dbg !11504
  br i1 %tobool1, label %if.then, label %if.end5, !dbg !11506

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !11507
  %tar2 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %3, i32 0, i32 2, !dbg !11510
  %4 = load %struct.Object*, %struct.Object** %tar2, align 8, !dbg !11510
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 118, !dbg !11511
  %5 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !11511
  %cmp = icmp eq %struct.CurveCache* %5, null, !dbg !11512
  br i1 %cmp, label %if.then3, label %if.end, !dbg !11513

if.then3:                                         ; preds = %if.then
  %6 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11514
  %scene = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %6, i32 0, i32 0, !dbg !11516
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11516
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !11517
  %tar4 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %8, i32 0, i32 2, !dbg !11518
  %9 = load %struct.Object*, %struct.Object** %tar4, align 8, !dbg !11518
  call void @BKE_displist_make_curveTypes(%struct.Scene* %7, %struct.Object* %9, i8 zeroext 0), !dbg !11519
  br label %if.end, !dbg !11520

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !11521

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !11522
  %tobool6 = icmp ne %struct.bConstraintTarget* %10, null, !dbg !11522
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !11524

if.then7:                                         ; preds = %if.end5
  %11 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct.addr, align 8, !dbg !11525
  %matrix = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %11, i32 0, i32 4, !dbg !11526
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !11525
  call void @unit_m4([4 x float]* %arraydecay), !dbg !11527
  br label %if.end8, !dbg !11527

if.end8:                                          ; preds = %if.then7, %if.end5
  ret void, !dbg !11528
}

; Function Attrs: noinline nounwind uwtable
define internal void @translike_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !11529 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bTransLikeConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11530, metadata !DIExpression()), !dbg !11531
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !11532, metadata !DIExpression()), !dbg !11533
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !11534, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.declare(metadata %struct.bTransLikeConstraint** %data, metadata !11536, metadata !DIExpression()), !dbg !11543
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11544
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !11545
  %1 = load i8*, i8** %data1, align 8, !dbg !11545
  %2 = bitcast i8* %1 to %struct.bTransLikeConstraint*, !dbg !11544
  store %struct.bTransLikeConstraint* %2, %struct.bTransLikeConstraint** %data, align 8, !dbg !11543
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !11546
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11547
  %5 = load %struct.bTransLikeConstraint*, %struct.bTransLikeConstraint** %data, align 8, !dbg !11548
  %tar = getelementptr inbounds %struct.bTransLikeConstraint, %struct.bTransLikeConstraint* %5, i32 0, i32 0, !dbg !11549
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !11550
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !11551
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !11546
  ret void, !dbg !11552
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @translike_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !11553 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bTransLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11554, metadata !DIExpression()), !dbg !11555
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !11556, metadata !DIExpression()), !dbg !11557
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11558
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !11558
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !11560

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11561
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !11561
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !11562

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bTransLikeConstraint** %data, metadata !11563, metadata !DIExpression()), !dbg !11565
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11566
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !11567
  %3 = load i8*, i8** %data2, align 8, !dbg !11567
  %4 = bitcast i8* %3 to %struct.bTransLikeConstraint*, !dbg !11566
  store %struct.bTransLikeConstraint* %4, %struct.bTransLikeConstraint** %data, align 8, !dbg !11565
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11568, metadata !DIExpression()), !dbg !11569
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11570
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !11570
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !11570
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !11570
  %7 = load %struct.bTransLikeConstraint*, %struct.bTransLikeConstraint** %data, align 8, !dbg !11570
  %tar = getelementptr inbounds %struct.bTransLikeConstraint, %struct.bTransLikeConstraint* %7, i32 0, i32 0, !dbg !11570
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11570
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11570
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !11570
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !11570
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11570
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !11570
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !11570
  %11 = load %struct.bTransLikeConstraint*, %struct.bTransLikeConstraint** %data, align 8, !dbg !11570
  %subtarget4 = getelementptr inbounds %struct.bTransLikeConstraint, %struct.bTransLikeConstraint* %11, i32 0, i32 1, !dbg !11570
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !11570
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !11570
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11570
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !11570
  %13 = load i8, i8* %tarspace, align 1, !dbg !11570
  %conv = zext i8 %13 to i16, !dbg !11570
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11570
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !11570
  store i16 %conv, i16* %space, align 8, !dbg !11570
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11570
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !11570
  store i16 1, i16* %flag, align 2, !dbg !11570
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11572
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !11572
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !11572
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !11572
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !11570

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11574
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !11574
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !11574
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !11574
  %20 = load i16, i16* %type, align 8, !dbg !11574
  %conv11 = sext i16 %20 to i32, !dbg !11574
  %cmp = icmp eq i32 %conv11, 25, !dbg !11574
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !11574

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11574
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !11574
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !11574
  %22 = load i8, i8* %arrayidx, align 8, !dbg !11574
  %conv15 = zext i8 %22 to i32, !dbg !11574
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !11574
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !11577

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !11578, metadata !DIExpression()), !dbg !11580
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11580
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !11580
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !11580
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !11580
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !11580
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11580
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !11580
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !11580
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !11580
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !11580
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11580
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !11580
  store i16 2, i16* %type22, align 4, !dbg !11580
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11580
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !11580
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !11580

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11580
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !11580
  %30 = load i16, i16* %rotmode, align 4, !dbg !11580
  %conv24 = sext i16 %30 to i32, !dbg !11580
  br label %cond.end, !dbg !11580

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !11580

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !11580
  %conv25 = trunc i32 %cond to i16, !dbg !11580
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11580
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !11580
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !11580
  br label %if.end49, !dbg !11580

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11581
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !11581
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !11581
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !11581
  %34 = load i16, i16* %type27, align 8, !dbg !11581
  %conv28 = sext i16 %34 to i32, !dbg !11581
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !11581
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !11581

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11581
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !11581
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !11581
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !11581
  %37 = load i16, i16* %type32, align 8, !dbg !11581
  %conv33 = sext i16 %37 to i32, !dbg !11581
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !11581
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !11581

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11581
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !11581
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !11581
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !11581
  %conv39 = zext i8 %39 to i32, !dbg !11581
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !11581
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !11574

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11583
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !11583
  store i16 3, i16* %type42, align 4, !dbg !11583
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11583
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !11583
  store i16 1, i16* %rotOrder43, align 2, !dbg !11583
  br label %if.end, !dbg !11583

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11585
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !11585
  store i16 1, i16* %type45, align 4, !dbg !11585
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11585
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !11585
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !11585
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !11585
  %45 = load i16, i16* %rotmode47, align 8, !dbg !11585
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11585
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !11585
  store i16 %45, i16* %rotOrder48, align 2, !dbg !11585
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !11577

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11570
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11570
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !11570
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !11570
  store i32 1, i32* %retval, align 4, !dbg !11587
  br label %return, !dbg !11587

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !11588
  br label %return, !dbg !11588

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !11589
  ret i32 %50, !dbg !11589
}

; Function Attrs: noinline nounwind uwtable
define internal void @translike_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !11590 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bTransLikeConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11591, metadata !DIExpression()), !dbg !11592
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !11593, metadata !DIExpression()), !dbg !11594
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !11595, metadata !DIExpression()), !dbg !11596
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11597
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !11597
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !11599

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11600
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !11600
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !11601

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bTransLikeConstraint** %data, metadata !11602, metadata !DIExpression()), !dbg !11604
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11605
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !11606
  %3 = load i8*, i8** %data2, align 8, !dbg !11606
  %4 = bitcast i8* %3 to %struct.bTransLikeConstraint*, !dbg !11605
  store %struct.bTransLikeConstraint* %4, %struct.bTransLikeConstraint** %data, align 8, !dbg !11604
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11607, metadata !DIExpression()), !dbg !11608
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11609
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !11610
  %6 = load i8*, i8** %first, align 8, !dbg !11610
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !11609
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !11608
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11611
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !11611
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !11614

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !11615, metadata !DIExpression()), !dbg !11617
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11617
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !11617
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !11617
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !11617
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !11618
  %conv = zext i8 %11 to i32, !dbg !11618
  %cmp = icmp eq i32 %conv, 0, !dbg !11618
  br i1 %cmp, label %if.then6, label %if.end, !dbg !11617

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11620
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !11620
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11620
  %14 = load %struct.bTransLikeConstraint*, %struct.bTransLikeConstraint** %data, align 8, !dbg !11620
  %tar7 = getelementptr inbounds %struct.bTransLikeConstraint, %struct.bTransLikeConstraint* %14, i32 0, i32 0, !dbg !11620
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !11620
  %15 = load %struct.bTransLikeConstraint*, %struct.bTransLikeConstraint** %data, align 8, !dbg !11620
  %subtarget = getelementptr inbounds %struct.bTransLikeConstraint, %struct.bTransLikeConstraint* %15, i32 0, i32 1, !dbg !11620
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !11620
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11620
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !11620
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !11620
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !11620
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11620
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !11620
  %18 = load i16, i16* %space, align 8, !dbg !11620
  %conv10 = trunc i16 %18 to i8, !dbg !11620
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11620
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !11620
  store i8 %conv10, i8* %tarspace, align 1, !dbg !11620
  br label %if.end, !dbg !11620

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11617
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11617
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !11617
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !11617
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !11617
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !11617
  br label %if.end11, !dbg !11617

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !11622

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !11623
}

; Function Attrs: noinline nounwind uwtable
define internal void @translike_evaluate(%struct.bConstraint* %UNUSED_con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !11624 {
entry:
  %UNUSED_con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %UNUSED_con, %struct.bConstraint** %UNUSED_con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %UNUSED_con.addr, metadata !11625, metadata !DIExpression()), !dbg !11626
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !11627, metadata !DIExpression()), !dbg !11628
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !11629, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11631, metadata !DIExpression()), !dbg !11632
  %0 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !11633
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !11634
  %1 = load i8*, i8** %first, align 8, !dbg !11634
  %2 = bitcast i8* %1 to %struct.bConstraintTarget*, !dbg !11633
  store %struct.bConstraintTarget* %2, %struct.bConstraintTarget** %ct, align 8, !dbg !11632
  %3 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11635
  %tobool = icmp ne %struct.bConstraintTarget* %3, null, !dbg !11635
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11635

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11635
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %4, i32 0, i32 2, !dbg !11635
  %5 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11635
  %tobool1 = icmp ne %struct.Object* %5, null, !dbg !11635
  br i1 %tobool1, label %if.then, label %if.end, !dbg !11637

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11638
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %6, i32 0, i32 3, !dbg !11640
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !11638
  %7 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11641
  %matrix2 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %7, i32 0, i32 4, !dbg !11642
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix2, i64 0, i64 0, !dbg !11641
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay3), !dbg !11643
  br label %if.end, !dbg !11644

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !11645
}

; Function Attrs: noinline nounwind uwtable
define internal void @samevolume_new_data(i8* %cdata) #0 !dbg !11646 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bSameVolumeConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !11647, metadata !DIExpression()), !dbg !11648
  call void @llvm.dbg.declare(metadata %struct.bSameVolumeConstraint** %data, metadata !11649, metadata !DIExpression()), !dbg !11650
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !11651
  %1 = bitcast i8* %0 to %struct.bSameVolumeConstraint*, !dbg !11652
  store %struct.bSameVolumeConstraint* %1, %struct.bSameVolumeConstraint** %data, align 8, !dbg !11650
  %2 = load %struct.bSameVolumeConstraint*, %struct.bSameVolumeConstraint** %data, align 8, !dbg !11653
  %flag = getelementptr inbounds %struct.bSameVolumeConstraint, %struct.bSameVolumeConstraint* %2, i32 0, i32 0, !dbg !11654
  store i32 1, i32* %flag, align 4, !dbg !11655
  %3 = load %struct.bSameVolumeConstraint*, %struct.bSameVolumeConstraint** %data, align 8, !dbg !11656
  %volume = getelementptr inbounds %struct.bSameVolumeConstraint, %struct.bSameVolumeConstraint* %3, i32 0, i32 1, !dbg !11657
  store float 1.000000e+00, float* %volume, align 4, !dbg !11658
  ret void, !dbg !11659
}

; Function Attrs: noinline nounwind uwtable
define internal void @samevolume_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %UNUSED_targets) #0 !dbg !11660 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %UNUSED_targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bSameVolumeConstraint*, align 8
  %volume = alloca float, align 4
  %fac = alloca float, align 4
  %obsize = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11661, metadata !DIExpression()), !dbg !11662
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !11663, metadata !DIExpression()), !dbg !11664
  store %struct.ListBase* %UNUSED_targets, %struct.ListBase** %UNUSED_targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %UNUSED_targets.addr, metadata !11665, metadata !DIExpression()), !dbg !11666
  call void @llvm.dbg.declare(metadata %struct.bSameVolumeConstraint** %data, metadata !11667, metadata !DIExpression()), !dbg !11668
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11669
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !11670
  %1 = load i8*, i8** %data1, align 8, !dbg !11670
  %2 = bitcast i8* %1 to %struct.bSameVolumeConstraint*, !dbg !11669
  store %struct.bSameVolumeConstraint* %2, %struct.bSameVolumeConstraint** %data, align 8, !dbg !11668
  call void @llvm.dbg.declare(metadata float* %volume, metadata !11671, metadata !DIExpression()), !dbg !11672
  %3 = load %struct.bSameVolumeConstraint*, %struct.bSameVolumeConstraint** %data, align 8, !dbg !11673
  %volume2 = getelementptr inbounds %struct.bSameVolumeConstraint, %struct.bSameVolumeConstraint* %3, i32 0, i32 1, !dbg !11674
  %4 = load float, float* %volume2, align 4, !dbg !11674
  store float %4, float* %volume, align 4, !dbg !11672
  call void @llvm.dbg.declare(metadata float* %fac, metadata !11675, metadata !DIExpression()), !dbg !11676
  store float 1.000000e+00, float* %fac, align 4, !dbg !11676
  call void @llvm.dbg.declare(metadata [3 x float]* %obsize, metadata !11677, metadata !DIExpression()), !dbg !11678
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 0, !dbg !11679
  %5 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11680
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %5, i32 0, i32 3, !dbg !11681
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !11680
  call void @mat4_to_size(float* %arraydecay, [4 x float]* %arraydecay3), !dbg !11682
  %6 = load %struct.bSameVolumeConstraint*, %struct.bSameVolumeConstraint** %data, align 8, !dbg !11683
  %flag = getelementptr inbounds %struct.bSameVolumeConstraint, %struct.bSameVolumeConstraint* %6, i32 0, i32 0, !dbg !11685
  %7 = load i32, i32* %flag, align 4, !dbg !11685
  %idxprom = sext i32 %7 to i64, !dbg !11686
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 %idxprom, !dbg !11686
  %8 = load float, float* %arrayidx, align 4, !dbg !11686
  %cmp = fcmp une float %8, 0.000000e+00, !dbg !11687
  br i1 %cmp, label %if.then, label %if.end, !dbg !11688

if.then:                                          ; preds = %entry
  %9 = load float, float* %volume, align 4, !dbg !11689
  %10 = load %struct.bSameVolumeConstraint*, %struct.bSameVolumeConstraint** %data, align 8, !dbg !11690
  %flag4 = getelementptr inbounds %struct.bSameVolumeConstraint, %struct.bSameVolumeConstraint* %10, i32 0, i32 0, !dbg !11691
  %11 = load i32, i32* %flag4, align 4, !dbg !11691
  %idxprom5 = sext i32 %11 to i64, !dbg !11692
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 %idxprom5, !dbg !11692
  %12 = load float, float* %arrayidx6, align 4, !dbg !11692
  %div = fdiv float %9, %12, !dbg !11693
  %call = call float @sqrtf(float %div) #7, !dbg !11694
  %13 = load %struct.bSameVolumeConstraint*, %struct.bSameVolumeConstraint** %data, align 8, !dbg !11695
  %flag7 = getelementptr inbounds %struct.bSameVolumeConstraint, %struct.bSameVolumeConstraint* %13, i32 0, i32 0, !dbg !11696
  %14 = load i32, i32* %flag7, align 4, !dbg !11696
  %idxprom8 = sext i32 %14 to i64, !dbg !11697
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %obsize, i64 0, i64 %idxprom8, !dbg !11697
  %15 = load float, float* %arrayidx9, align 4, !dbg !11697
  %div10 = fdiv float %call, %15, !dbg !11698
  store float %div10, float* %fac, align 4, !dbg !11699
  br label %if.end, !dbg !11700

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.bSameVolumeConstraint*, %struct.bSameVolumeConstraint** %data, align 8, !dbg !11701
  %flag11 = getelementptr inbounds %struct.bSameVolumeConstraint, %struct.bSameVolumeConstraint* %16, i32 0, i32 0, !dbg !11702
  %17 = load i32, i32* %flag11, align 4, !dbg !11702
  switch i32 %17, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb18
    i32 2, label %sw.bb25
  ], !dbg !11703

sw.bb:                                            ; preds = %if.end
  %18 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11704
  %matrix12 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %18, i32 0, i32 3, !dbg !11706
  %arrayidx13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix12, i64 0, i64 1, !dbg !11704
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx13, i64 0, i64 0, !dbg !11704
  %19 = load float, float* %fac, align 4, !dbg !11707
  call void @mul_v3_fl(float* %arraydecay14, float %19), !dbg !11708
  %20 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11709
  %matrix15 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %20, i32 0, i32 3, !dbg !11710
  %arrayidx16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix15, i64 0, i64 2, !dbg !11709
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx16, i64 0, i64 0, !dbg !11709
  %21 = load float, float* %fac, align 4, !dbg !11711
  call void @mul_v3_fl(float* %arraydecay17, float %21), !dbg !11712
  br label %sw.epilog, !dbg !11713

sw.bb18:                                          ; preds = %if.end
  %22 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11714
  %matrix19 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %22, i32 0, i32 3, !dbg !11715
  %arrayidx20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix19, i64 0, i64 0, !dbg !11714
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx20, i64 0, i64 0, !dbg !11714
  %23 = load float, float* %fac, align 4, !dbg !11716
  call void @mul_v3_fl(float* %arraydecay21, float %23), !dbg !11717
  %24 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11718
  %matrix22 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %24, i32 0, i32 3, !dbg !11719
  %arrayidx23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix22, i64 0, i64 2, !dbg !11718
  %arraydecay24 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx23, i64 0, i64 0, !dbg !11718
  %25 = load float, float* %fac, align 4, !dbg !11720
  call void @mul_v3_fl(float* %arraydecay24, float %25), !dbg !11721
  br label %sw.epilog, !dbg !11722

sw.bb25:                                          ; preds = %if.end
  %26 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11723
  %matrix26 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %26, i32 0, i32 3, !dbg !11724
  %arrayidx27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix26, i64 0, i64 0, !dbg !11723
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx27, i64 0, i64 0, !dbg !11723
  %27 = load float, float* %fac, align 4, !dbg !11725
  call void @mul_v3_fl(float* %arraydecay28, float %27), !dbg !11726
  %28 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11727
  %matrix29 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %28, i32 0, i32 3, !dbg !11728
  %arrayidx30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix29, i64 0, i64 1, !dbg !11727
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx30, i64 0, i64 0, !dbg !11727
  %29 = load float, float* %fac, align 4, !dbg !11729
  call void @mul_v3_fl(float* %arraydecay31, float %29), !dbg !11730
  br label %sw.epilog, !dbg !11731

sw.epilog:                                        ; preds = %if.end, %sw.bb25, %sw.bb18, %sw.bb
  ret void, !dbg !11732
}

; Function Attrs: noinline nounwind uwtable
define internal void @pivotcon_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !11733 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bPivotConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11734, metadata !DIExpression()), !dbg !11735
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !11736, metadata !DIExpression()), !dbg !11737
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  call void @llvm.dbg.declare(metadata %struct.bPivotConstraint** %data, metadata !11740, metadata !DIExpression()), !dbg !11750
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11751
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !11752
  %1 = load i8*, i8** %data1, align 8, !dbg !11752
  %2 = bitcast i8* %1 to %struct.bPivotConstraint*, !dbg !11751
  store %struct.bPivotConstraint* %2, %struct.bPivotConstraint** %data, align 8, !dbg !11750
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !11753
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11754
  %5 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11755
  %tar = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %5, i32 0, i32 0, !dbg !11756
  %6 = bitcast %struct.Object** %tar to %struct.ID**, !dbg !11757
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !11758
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !11753
  ret void, !dbg !11759
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pivotcon_get_tars(%struct.bConstraint* %con, %struct.ListBase* %list) #0 !dbg !11760 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bPivotConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11761, metadata !DIExpression()), !dbg !11762
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !11763, metadata !DIExpression()), !dbg !11764
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11765
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !11765
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !11767

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11768
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !11768
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !11769

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bPivotConstraint** %data, metadata !11770, metadata !DIExpression()), !dbg !11772
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11773
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !11774
  %3 = load i8*, i8** %data2, align 8, !dbg !11774
  %4 = bitcast i8* %3 to %struct.bPivotConstraint*, !dbg !11773
  store %struct.bPivotConstraint* %4, %struct.bPivotConstraint** %data, align 8, !dbg !11772
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11775, metadata !DIExpression()), !dbg !11776
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11777
  %call = call i8* %5(i64 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !11777
  %6 = bitcast i8* %call to %struct.bConstraintTarget*, !dbg !11777
  store %struct.bConstraintTarget* %6, %struct.bConstraintTarget** %ct, align 8, !dbg !11777
  %7 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11777
  %tar = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %7, i32 0, i32 0, !dbg !11777
  %8 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11777
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11777
  %tar3 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 2, !dbg !11777
  store %struct.Object* %8, %struct.Object** %tar3, align 8, !dbg !11777
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11777
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %10, i32 0, i32 3, !dbg !11777
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !11777
  %11 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11777
  %subtarget4 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %11, i32 0, i32 1, !dbg !11777
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget4, i64 0, i64 0, !dbg !11777
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !11777
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11777
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 6, !dbg !11777
  %13 = load i8, i8* %tarspace, align 1, !dbg !11777
  %conv = zext i8 %13 to i16, !dbg !11777
  %14 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11777
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %14, i32 0, i32 5, !dbg !11777
  store i16 %conv, i16* %space, align 8, !dbg !11777
  %15 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11777
  %flag = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %15, i32 0, i32 6, !dbg !11777
  store i16 1, i16* %flag, align 2, !dbg !11777
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11779
  %tar7 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 2, !dbg !11779
  %17 = load %struct.Object*, %struct.Object** %tar7, align 8, !dbg !11779
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !11779
  br i1 %tobool8, label %if.then9, label %if.end50, !dbg !11777

if.then9:                                         ; preds = %if.then
  %18 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11781
  %tar10 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %18, i32 0, i32 2, !dbg !11781
  %19 = load %struct.Object*, %struct.Object** %tar10, align 8, !dbg !11781
  %type = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !11781
  %20 = load i16, i16* %type, align 8, !dbg !11781
  %conv11 = sext i16 %20 to i32, !dbg !11781
  %cmp = icmp eq i32 %conv11, 25, !dbg !11781
  br i1 %cmp, label %land.lhs.true13, label %if.else, !dbg !11781

land.lhs.true13:                                  ; preds = %if.then9
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11781
  %subtarget14 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %21, i32 0, i32 3, !dbg !11781
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget14, i64 0, i64 0, !dbg !11781
  %22 = load i8, i8* %arrayidx, align 8, !dbg !11781
  %conv15 = zext i8 %22 to i32, !dbg !11781
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !11781
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !11784

if.then17:                                        ; preds = %land.lhs.true13
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !11785, metadata !DIExpression()), !dbg !11787
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11787
  %tar18 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %23, i32 0, i32 2, !dbg !11787
  %24 = load %struct.Object*, %struct.Object** %tar18, align 8, !dbg !11787
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 18, !dbg !11787
  %25 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !11787
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11787
  %subtarget19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 3, !dbg !11787
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget19, i64 0, i64 0, !dbg !11787
  %call21 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %25, i8* %arraydecay20), !dbg !11787
  store %struct.bPoseChannel* %call21, %struct.bPoseChannel** %pchan, align 8, !dbg !11787
  %27 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11787
  %type22 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %27, i32 0, i32 7, !dbg !11787
  store i16 2, i16* %type22, align 4, !dbg !11787
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11787
  %tobool23 = icmp ne %struct.bPoseChannel* %28, null, !dbg !11787
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !11787

cond.true:                                        ; preds = %if.then17
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11787
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 26, !dbg !11787
  %30 = load i16, i16* %rotmode, align 4, !dbg !11787
  %conv24 = sext i16 %30 to i32, !dbg !11787
  br label %cond.end, !dbg !11787

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !11787

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 1, %cond.false ], !dbg !11787
  %conv25 = trunc i32 %cond to i16, !dbg !11787
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11787
  %rotOrder = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 8, !dbg !11787
  store i16 %conv25, i16* %rotOrder, align 2, !dbg !11787
  br label %if.end49, !dbg !11787

if.else:                                          ; preds = %land.lhs.true13, %if.then9
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11788
  %tar26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %32, i32 0, i32 2, !dbg !11788
  %33 = load %struct.Object*, %struct.Object** %tar26, align 8, !dbg !11788
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !11788
  %34 = load i16, i16* %type27, align 8, !dbg !11788
  %conv28 = sext i16 %34 to i32, !dbg !11788
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !11788
  br i1 %cmp29, label %land.lhs.true36, label %lor.lhs.false, !dbg !11788

lor.lhs.false:                                    ; preds = %if.else
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11788
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !11788
  %36 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !11788
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !11788
  %37 = load i16, i16* %type32, align 8, !dbg !11788
  %conv33 = sext i16 %37 to i32, !dbg !11788
  %cmp34 = icmp eq i32 %conv33, 22, !dbg !11788
  br i1 %cmp34, label %land.lhs.true36, label %if.else44, !dbg !11788

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11788
  %subtarget37 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !11788
  %arrayidx38 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget37, i64 0, i64 0, !dbg !11788
  %39 = load i8, i8* %arrayidx38, align 8, !dbg !11788
  %conv39 = zext i8 %39 to i32, !dbg !11788
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !11788
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !11781

if.then41:                                        ; preds = %land.lhs.true36
  %40 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11790
  %type42 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %40, i32 0, i32 7, !dbg !11790
  store i16 3, i16* %type42, align 4, !dbg !11790
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11790
  %rotOrder43 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %41, i32 0, i32 8, !dbg !11790
  store i16 1, i16* %rotOrder43, align 2, !dbg !11790
  br label %if.end, !dbg !11790

if.else44:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11792
  %type45 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 7, !dbg !11792
  store i16 1, i16* %type45, align 4, !dbg !11792
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11792
  %tar46 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !11792
  %44 = load %struct.Object*, %struct.Object** %tar46, align 8, !dbg !11792
  %rotmode47 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 83, !dbg !11792
  %45 = load i16, i16* %rotmode47, align 8, !dbg !11792
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11792
  %rotOrder48 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 8, !dbg !11792
  store i16 %45, i16* %rotOrder48, align 2, !dbg !11792
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end, %cond.end
  br label %if.end50, !dbg !11784

if.end50:                                         ; preds = %if.end49, %if.then
  %47 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11777
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11777
  %49 = bitcast %struct.bConstraintTarget* %48 to i8*, !dbg !11777
  call void @BLI_addtail(%struct.ListBase* %47, i8* %49), !dbg !11777
  store i32 1, i32* %retval, align 4, !dbg !11794
  br label %return, !dbg !11794

if.end51:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !11795
  br label %return, !dbg !11795

return:                                           ; preds = %if.end51, %if.end50
  %50 = load i32, i32* %retval, align 4, !dbg !11796
  ret i32 %50, !dbg !11796
}

; Function Attrs: noinline nounwind uwtable
define internal void @pivotcon_flush_tars(%struct.bConstraint* %con, %struct.ListBase* %list, i8 zeroext %no_copy) #0 !dbg !11797 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %no_copy.addr = alloca i8, align 1
  %data = alloca %struct.bPivotConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %ctn = alloca %struct.bConstraintTarget*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11798, metadata !DIExpression()), !dbg !11799
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !11800, metadata !DIExpression()), !dbg !11801
  store i8 %no_copy, i8* %no_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_copy.addr, metadata !11802, metadata !DIExpression()), !dbg !11803
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11804
  %tobool = icmp ne %struct.bConstraint* %0, null, !dbg !11804
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !11806

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11807
  %tobool1 = icmp ne %struct.ListBase* %1, null, !dbg !11807
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !11808

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bPivotConstraint** %data, metadata !11809, metadata !DIExpression()), !dbg !11811
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11812
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !11813
  %3 = load i8*, i8** %data2, align 8, !dbg !11813
  %4 = bitcast i8* %3 to %struct.bPivotConstraint*, !dbg !11812
  store %struct.bPivotConstraint* %4, %struct.bPivotConstraint** %data, align 8, !dbg !11811
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11814, metadata !DIExpression()), !dbg !11815
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11816
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !11817
  %6 = load i8*, i8** %first, align 8, !dbg !11817
  %7 = bitcast i8* %6 to %struct.bConstraintTarget*, !dbg !11816
  store %struct.bConstraintTarget* %7, %struct.bConstraintTarget** %ct, align 8, !dbg !11815
  %8 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11818
  %tobool3 = icmp ne %struct.bConstraintTarget* %8, null, !dbg !11818
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !11821

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ctn, metadata !11822, metadata !DIExpression()), !dbg !11824
  %9 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11824
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %9, i32 0, i32 0, !dbg !11824
  %10 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !11824
  store %struct.bConstraintTarget* %10, %struct.bConstraintTarget** %ctn, align 8, !dbg !11824
  %11 = load i8, i8* %no_copy.addr, align 1, !dbg !11825
  %conv = zext i8 %11 to i32, !dbg !11825
  %cmp = icmp eq i32 %conv, 0, !dbg !11825
  br i1 %cmp, label %if.then6, label %if.end, !dbg !11824

if.then6:                                         ; preds = %if.then4
  %12 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11827
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %12, i32 0, i32 2, !dbg !11827
  %13 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11827
  %14 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11827
  %tar7 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %14, i32 0, i32 0, !dbg !11827
  store %struct.Object* %13, %struct.Object** %tar7, align 8, !dbg !11827
  %15 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11827
  %subtarget = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %15, i32 0, i32 1, !dbg !11827
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !11827
  %16 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11827
  %subtarget8 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %16, i32 0, i32 3, !dbg !11827
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget8, i64 0, i64 0, !dbg !11827
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay9, i64 64), !dbg !11827
  %17 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11827
  %space = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %17, i32 0, i32 5, !dbg !11827
  %18 = load i16, i16* %space, align 8, !dbg !11827
  %conv10 = trunc i16 %18 to i8, !dbg !11827
  %19 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11827
  %tarspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %19, i32 0, i32 6, !dbg !11827
  store i8 %conv10, i8* %tarspace, align 1, !dbg !11827
  br label %if.end, !dbg !11827

if.end:                                           ; preds = %if.then6, %if.then4
  %20 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !11824
  %21 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11824
  %22 = bitcast %struct.bConstraintTarget* %21 to i8*, !dbg !11824
  call void @BLI_freelinkN(%struct.ListBase* %20, i8* %22), !dbg !11824
  %23 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ctn, align 8, !dbg !11824
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !11824
  br label %if.end11, !dbg !11824

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !11829

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  ret void, !dbg !11830
}

; Function Attrs: noinline nounwind uwtable
define internal void @pivotcon_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %targets) #0 !dbg !11831 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %targets.addr = alloca %struct.ListBase*, align 8
  %data = alloca %struct.bPivotConstraint*, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %pivot = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  %rotMat = alloca [3 x [3 x float]], align 16
  %axis = alloca [3 x float], align 4
  %angle = alloca float, align 4
  %rot = alloca [3 x float], align 4
  %dvec = alloca [3 x float], align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !11832, metadata !DIExpression()), !dbg !11833
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !11834, metadata !DIExpression()), !dbg !11835
  store %struct.ListBase* %targets, %struct.ListBase** %targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %targets.addr, metadata !11836, metadata !DIExpression()), !dbg !11837
  call void @llvm.dbg.declare(metadata %struct.bPivotConstraint** %data, metadata !11838, metadata !DIExpression()), !dbg !11839
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !11840
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !11841
  %1 = load i8*, i8** %data1, align 8, !dbg !11841
  %2 = bitcast i8* %1 to %struct.bPivotConstraint*, !dbg !11840
  store %struct.bPivotConstraint* %2, %struct.bPivotConstraint** %data, align 8, !dbg !11839
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11842, metadata !DIExpression()), !dbg !11843
  %3 = load %struct.ListBase*, %struct.ListBase** %targets.addr, align 8, !dbg !11844
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !11845
  %4 = load i8*, i8** %first, align 8, !dbg !11845
  %5 = bitcast i8* %4 to %struct.bConstraintTarget*, !dbg !11844
  store %struct.bConstraintTarget* %5, %struct.bConstraintTarget** %ct, align 8, !dbg !11843
  call void @llvm.dbg.declare(metadata [3 x float]* %pivot, metadata !11846, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !11848, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rotMat, metadata !11850, metadata !DIExpression()), !dbg !11851
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !11852, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.declare(metadata float* %angle, metadata !11854, metadata !DIExpression()), !dbg !11855
  %6 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11856
  %rotAxis = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %6, i32 0, i32 3, !dbg !11858
  %7 = load i16, i16* %rotAxis, align 4, !dbg !11858
  %conv = sext i16 %7 to i32, !dbg !11856
  %cmp = icmp ne i32 %conv, -1, !dbg !11859
  br i1 %cmp, label %if.then, label %if.end22, !dbg !11860

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %rot, metadata !11861, metadata !DIExpression()), !dbg !11863
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !11864
  %8 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11865
  %rotOrder = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %8, i32 0, i32 6, !dbg !11866
  %9 = load i16, i16* %rotOrder, align 2, !dbg !11866
  %10 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11867
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %10, i32 0, i32 3, !dbg !11868
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !11867
  call void @mat4_to_eulO(float* %arraydecay, i16 signext %9, [4 x float]* %arraydecay3), !dbg !11869
  %11 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11870
  %rotAxis4 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %11, i32 0, i32 3, !dbg !11872
  %12 = load i16, i16* %rotAxis4, align 4, !dbg !11872
  %conv5 = sext i16 %12 to i32, !dbg !11870
  %cmp6 = icmp slt i32 %conv5, 3, !dbg !11873
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !11874

if.then8:                                         ; preds = %if.then
  %13 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11875
  %rotAxis9 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %13, i32 0, i32 3, !dbg !11878
  %14 = load i16, i16* %rotAxis9, align 4, !dbg !11878
  %idxprom = sext i16 %14 to i64, !dbg !11879
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 %idxprom, !dbg !11879
  %15 = load float, float* %arrayidx, align 4, !dbg !11879
  %cmp10 = fcmp ogt float %15, 0.000000e+00, !dbg !11880
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !11881

if.then12:                                        ; preds = %if.then8
  br label %return, !dbg !11882

if.end:                                           ; preds = %if.then8
  br label %if.end21, !dbg !11883

if.else:                                          ; preds = %if.then
  %16 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11884
  %rotAxis13 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %16, i32 0, i32 3, !dbg !11887
  %17 = load i16, i16* %rotAxis13, align 4, !dbg !11887
  %conv14 = sext i16 %17 to i32, !dbg !11884
  %sub = sub nsw i32 %conv14, 3, !dbg !11888
  %idxprom15 = sext i32 %sub to i64, !dbg !11889
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 %idxprom15, !dbg !11889
  %18 = load float, float* %arrayidx16, align 4, !dbg !11889
  %cmp17 = fcmp olt float %18, 0.000000e+00, !dbg !11890
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11891

if.then19:                                        ; preds = %if.else
  br label %return, !dbg !11892

if.end20:                                         ; preds = %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  br label %if.end22, !dbg !11893

if.end22:                                         ; preds = %if.end21, %entry
  %19 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11894
  %tobool = icmp ne %struct.bConstraintTarget* %19, null, !dbg !11894
  br i1 %tobool, label %land.lhs.true, label %if.else30, !dbg !11894

land.lhs.true:                                    ; preds = %if.end22
  %20 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11894
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %20, i32 0, i32 2, !dbg !11894
  %21 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11894
  %tobool23 = icmp ne %struct.Object* %21, null, !dbg !11894
  br i1 %tobool23, label %if.then24, label %if.else30, !dbg !11896

if.then24:                                        ; preds = %land.lhs.true
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !11897
  %22 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11899
  %matrix26 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %22, i32 0, i32 4, !dbg !11900
  %arrayidx27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix26, i64 0, i64 3, !dbg !11899
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx27, i64 0, i64 0, !dbg !11899
  %23 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11901
  %offset = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %23, i32 0, i32 2, !dbg !11902
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !11901
  call void @add_v3_v3v3(float* %arraydecay25, float* %arraydecay28, float* %arraydecay29), !dbg !11903
  br label %if.end46, !dbg !11904

if.else30:                                        ; preds = %land.lhs.true, %if.end22
  %24 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11905
  %flag = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %24, i32 0, i32 4, !dbg !11908
  %25 = load i16, i16* %flag, align 2, !dbg !11908
  %conv31 = sext i16 %25 to i32, !dbg !11905
  %and = and i32 %conv31, 1, !dbg !11909
  %cmp32 = icmp eq i32 %and, 0, !dbg !11910
  br i1 %cmp32, label %if.then34, label %if.else41, !dbg !11911

if.then34:                                        ; preds = %if.else30
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !11912
  %26 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11914
  %matrix36 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %26, i32 0, i32 3, !dbg !11915
  %arrayidx37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix36, i64 0, i64 3, !dbg !11914
  %arraydecay38 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx37, i64 0, i64 0, !dbg !11914
  %27 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11916
  %offset39 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %27, i32 0, i32 2, !dbg !11917
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %offset39, i64 0, i64 0, !dbg !11916
  call void @add_v3_v3v3(float* %arraydecay35, float* %arraydecay38, float* %arraydecay40), !dbg !11918
  br label %if.end45, !dbg !11919

if.else41:                                        ; preds = %if.else30
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !11920
  %28 = load %struct.bPivotConstraint*, %struct.bPivotConstraint** %data, align 8, !dbg !11922
  %offset43 = getelementptr inbounds %struct.bPivotConstraint, %struct.bPivotConstraint* %28, i32 0, i32 2, !dbg !11923
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %offset43, i64 0, i64 0, !dbg !11922
  call void @copy_v3_v3(float* %arraydecay42, float* %arraydecay44), !dbg !11924
  br label %if.end45

if.end45:                                         ; preds = %if.else41, %if.then34
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then24
  %arraydecay47 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rotMat, i64 0, i64 0, !dbg !11925
  %29 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11926
  %matrix48 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %29, i32 0, i32 3, !dbg !11927
  %arraydecay49 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix48, i64 0, i64 0, !dbg !11926
  call void @copy_m3_m4([3 x float]* %arraydecay47, [4 x float]* %arraydecay49), !dbg !11928
  %arraydecay50 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rotMat, i64 0, i64 0, !dbg !11929
  call void @normalize_m3([3 x float]* %arraydecay50), !dbg !11930
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !11931
  %arraydecay52 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rotMat, i64 0, i64 0, !dbg !11932
  call void @mat3_to_axis_angle(float* %arraydecay51, float* %angle, [3 x float]* %arraydecay52), !dbg !11933
  %30 = load float, float* %angle, align 4, !dbg !11934
  %tobool53 = fcmp une float %30, 0.000000e+00, !dbg !11934
  br i1 %tobool53, label %if.then54, label %if.end65, !dbg !11936

if.then54:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !11937, metadata !DIExpression()), !dbg !11939
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11940
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !11941
  %31 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11942
  %matrix57 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %31, i32 0, i32 3, !dbg !11943
  %arrayidx58 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix57, i64 0, i64 3, !dbg !11942
  %arraydecay59 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx58, i64 0, i64 0, !dbg !11942
  call void @sub_v3_v3v3(float* %arraydecay55, float* %arraydecay56, float* %arraydecay59), !dbg !11944
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !11945
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11946
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !11947
  call void @project_v3_v3v3(float* %arraydecay60, float* %arraydecay61, float* %arraydecay62), !dbg !11948
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !11949
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !11950
  call void @sub_v3_v3(float* %arraydecay63, float* %arraydecay64), !dbg !11951
  br label %if.end65, !dbg !11952

if.end65:                                         ; preds = %if.then54, %if.end46
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11953
  %32 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11954
  %matrix67 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %32, i32 0, i32 3, !dbg !11955
  %arrayidx68 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix67, i64 0, i64 3, !dbg !11954
  %arraydecay69 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx68, i64 0, i64 0, !dbg !11954
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !11956
  call void @sub_v3_v3v3(float* %arraydecay66, float* %arraydecay69, float* %arraydecay70), !dbg !11957
  %arraydecay71 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rotMat, i64 0, i64 0, !dbg !11958
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11959
  call void @mul_m3_v3([3 x float]* %arraydecay71, float* %arraydecay72), !dbg !11960
  %33 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !11961
  %matrix73 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %33, i32 0, i32 3, !dbg !11962
  %arrayidx74 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix73, i64 0, i64 3, !dbg !11961
  %arraydecay75 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx74, i64 0, i64 0, !dbg !11961
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !11963
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11964
  call void @add_v3_v3v3(float* %arraydecay75, float* %arraydecay76, float* %arraydecay77), !dbg !11965
  br label %return, !dbg !11966

return:                                           ; preds = %if.end65, %if.then19, %if.then12
  ret void, !dbg !11966
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !11967 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11968, metadata !DIExpression()), !dbg !11969
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11970, metadata !DIExpression()), !dbg !11971
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !11972, metadata !DIExpression()), !dbg !11973
  %0 = load float*, float** %a.addr, align 8, !dbg !11974
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11974
  %1 = load float, float* %arrayidx, align 4, !dbg !11974
  %2 = load float*, float** %b.addr, align 8, !dbg !11975
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11975
  %3 = load float, float* %arrayidx1, align 4, !dbg !11975
  %add = fadd float %1, %3, !dbg !11976
  %4 = load float*, float** %r.addr, align 8, !dbg !11977
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !11977
  store float %add, float* %arrayidx2, align 4, !dbg !11978
  %5 = load float*, float** %a.addr, align 8, !dbg !11979
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !11979
  %6 = load float, float* %arrayidx3, align 4, !dbg !11979
  %7 = load float*, float** %b.addr, align 8, !dbg !11980
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !11980
  %8 = load float, float* %arrayidx4, align 4, !dbg !11980
  %add5 = fadd float %6, %8, !dbg !11981
  %9 = load float*, float** %r.addr, align 8, !dbg !11982
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !11982
  store float %add5, float* %arrayidx6, align 4, !dbg !11983
  %10 = load float*, float** %a.addr, align 8, !dbg !11984
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !11984
  %11 = load float, float* %arrayidx7, align 4, !dbg !11984
  %12 = load float*, float** %b.addr, align 8, !dbg !11985
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !11985
  %13 = load float, float* %arrayidx8, align 4, !dbg !11985
  %add9 = fadd float %11, %13, !dbg !11986
  %14 = load float*, float** %r.addr, align 8, !dbg !11987
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !11987
  store float %add9, float* %arrayidx10, align 4, !dbg !11988
  ret void, !dbg !11989
}

declare dso_local void @mat3_to_axis_angle(float*, float*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !11990 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11991, metadata !DIExpression()), !dbg !11992
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11993, metadata !DIExpression()), !dbg !11994
  %0 = load float*, float** %a.addr, align 8, !dbg !11995
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11995
  %1 = load float, float* %arrayidx, align 4, !dbg !11995
  %2 = load float*, float** %r.addr, align 8, !dbg !11996
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11996
  %3 = load float, float* %arrayidx1, align 4, !dbg !11997
  %sub = fsub float %3, %1, !dbg !11997
  store float %sub, float* %arrayidx1, align 4, !dbg !11997
  %4 = load float*, float** %a.addr, align 8, !dbg !11998
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11998
  %5 = load float, float* %arrayidx2, align 4, !dbg !11998
  %6 = load float*, float** %r.addr, align 8, !dbg !11999
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11999
  %7 = load float, float* %arrayidx3, align 4, !dbg !12000
  %sub4 = fsub float %7, %5, !dbg !12000
  store float %sub4, float* %arrayidx3, align 4, !dbg !12000
  %8 = load float*, float** %a.addr, align 8, !dbg !12001
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !12001
  %9 = load float, float* %arrayidx5, align 4, !dbg !12001
  %10 = load float*, float** %r.addr, align 8, !dbg !12002
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !12002
  %11 = load float, float* %arrayidx6, align 4, !dbg !12003
  %sub7 = fsub float %11, %9, !dbg !12003
  store float %sub7, float* %arrayidx6, align 4, !dbg !12003
  ret void, !dbg !12004
}

; Function Attrs: noinline nounwind uwtable
define internal void @followtrack_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !12005 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bFollowTrackConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !12006, metadata !DIExpression()), !dbg !12007
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !12008, metadata !DIExpression()), !dbg !12009
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !12010, metadata !DIExpression()), !dbg !12011
  call void @llvm.dbg.declare(metadata %struct.bFollowTrackConstraint** %data, metadata !12012, metadata !DIExpression()), !dbg !12013
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12014
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !12015
  %1 = load i8*, i8** %data1, align 8, !dbg !12015
  %2 = bitcast i8* %1 to %struct.bFollowTrackConstraint*, !dbg !12014
  store %struct.bFollowTrackConstraint* %2, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12013
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !12016
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12017
  %5 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12018
  %clip = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %5, i32 0, i32 0, !dbg !12019
  %6 = bitcast %struct.MovieClip** %clip to %struct.ID**, !dbg !12020
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !12021
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 1, i8* %7), !dbg !12016
  %8 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !12022
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12023
  %10 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12024
  %camera = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %10, i32 0, i32 5, !dbg !12025
  %11 = bitcast %struct.Object** %camera to %struct.ID**, !dbg !12026
  %12 = load i8*, i8** %userdata.addr, align 8, !dbg !12027
  call void %8(%struct.bConstraint* %9, %struct.ID** %11, i8 zeroext 0, i8* %12), !dbg !12022
  %13 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !12028
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12029
  %15 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12030
  %depth_ob = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %15, i32 0, i32 6, !dbg !12031
  %16 = bitcast %struct.Object** %depth_ob to %struct.ID**, !dbg !12032
  %17 = load i8*, i8** %userdata.addr, align 8, !dbg !12033
  call void %13(%struct.bConstraint* %14, %struct.ID** %16, i8 zeroext 0, i8* %17), !dbg !12028
  ret void, !dbg !12034
}

; Function Attrs: noinline nounwind uwtable
define internal void @followtrack_new_data(i8* %cdata) #0 !dbg !12035 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bFollowTrackConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !12036, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.declare(metadata %struct.bFollowTrackConstraint** %data, metadata !12038, metadata !DIExpression()), !dbg !12039
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !12040
  %1 = bitcast i8* %0 to %struct.bFollowTrackConstraint*, !dbg !12041
  store %struct.bFollowTrackConstraint* %1, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12039
  %2 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12042
  %clip = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %2, i32 0, i32 0, !dbg !12043
  store %struct.MovieClip* null, %struct.MovieClip** %clip, align 8, !dbg !12044
  %3 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12045
  %flag = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %3, i32 0, i32 2, !dbg !12046
  %4 = load i32, i32* %flag, align 8, !dbg !12047
  %or = or i32 %4, 1, !dbg !12047
  store i32 %or, i32* %flag, align 8, !dbg !12047
  ret void, !dbg !12048
}

; Function Attrs: noinline nounwind uwtable
define internal void @followtrack_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %UNUSED_targets) #0 !dbg !12049 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %UNUSED_targets.addr = alloca %struct.ListBase*, align 8
  %scene = alloca %struct.Scene*, align 8
  %data = alloca %struct.bFollowTrackConstraint*, align 8
  %clip = alloca %struct.MovieClip*, align 8
  %tracking = alloca %struct.MovieTracking*, align 8
  %track = alloca %struct.MovieTrackingTrack*, align 8
  %tracking_object = alloca %struct.MovieTrackingObject*, align 8
  %camob = alloca %struct.Object*, align 8
  %framenr = alloca i32, align 4
  %obmat = alloca [4 x [4 x float]], align 16
  %mat = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  %marker = alloca %struct.MovieTrackingMarker*, align 8
  %vec = alloca [3 x float], align 4
  %disp = alloca [3 x float], align 4
  %axis = alloca [3 x float], align 4
  %mat83 = alloca [4 x [4 x float]], align 16
  %aspect = alloca float, align 4
  %len = alloca float, align 4
  %d = alloca float, align 4
  %params = alloca %struct.CameraParams, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %pos = alloca [2 x float], align 4
  %rmat = alloca [4 x [4 x float]], align 16
  %w_src = alloca float, align 4
  %h_src = alloca float, align 4
  %w_dst = alloca float, align 4
  %h_dst = alloca float, align 4
  %asp_src = alloca float, align 4
  %asp_dst = alloca float, align 4
  %div169 = alloca float, align 4
  %cent = alloca float, align 4
  %div182 = alloca float, align 4
  %cent184 = alloca float, align 4
  %depth_ob290 = alloca %struct.Object*, align 8
  %target = alloca %struct.DerivedMesh*, align 8
  %treeData = alloca %struct.BVHTreeFromMesh, align 8
  %hit = alloca %struct.BVHTreeRayHit, align 4
  %ray_start = alloca [3 x float], align 4
  %ray_end = alloca [3 x float], align 4
  %ray_nor = alloca [3 x float], align 4
  %imat295 = alloca [4 x [4 x float]], align 16
  %result = alloca i32, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !12050, metadata !DIExpression()), !dbg !12051
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !12052, metadata !DIExpression()), !dbg !12053
  store %struct.ListBase* %UNUSED_targets, %struct.ListBase** %UNUSED_targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %UNUSED_targets.addr, metadata !12054, metadata !DIExpression()), !dbg !12055
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12056, metadata !DIExpression()), !dbg !12057
  %0 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12058
  %scene1 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %0, i32 0, i32 0, !dbg !12059
  %1 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !12059
  store %struct.Scene* %1, %struct.Scene** %scene, align 8, !dbg !12057
  call void @llvm.dbg.declare(metadata %struct.bFollowTrackConstraint** %data, metadata !12060, metadata !DIExpression()), !dbg !12061
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12062
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !12063
  %3 = load i8*, i8** %data2, align 8, !dbg !12063
  %4 = bitcast i8* %3 to %struct.bFollowTrackConstraint*, !dbg !12062
  store %struct.bFollowTrackConstraint* %4, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12061
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip, metadata !12064, metadata !DIExpression()), !dbg !12067
  %5 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12068
  %clip3 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %5, i32 0, i32 0, !dbg !12069
  %6 = load %struct.MovieClip*, %struct.MovieClip** %clip3, align 8, !dbg !12069
  store %struct.MovieClip* %6, %struct.MovieClip** %clip, align 8, !dbg !12067
  call void @llvm.dbg.declare(metadata %struct.MovieTracking** %tracking, metadata !12070, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingTrack** %track, metadata !12074, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingObject** %tracking_object, metadata !12076, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.declare(metadata %struct.Object** %camob, metadata !12093, metadata !DIExpression()), !dbg !12094
  %7 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12095
  %camera = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %7, i32 0, i32 5, !dbg !12096
  %8 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !12096
  %tobool = icmp ne %struct.Object* %8, null, !dbg !12095
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12095

cond.true:                                        ; preds = %entry
  %9 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12097
  %camera4 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %9, i32 0, i32 5, !dbg !12098
  %10 = load %struct.Object*, %struct.Object** %camera4, align 8, !dbg !12098
  br label %cond.end, !dbg !12095

cond.false:                                       ; preds = %entry
  %11 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12099
  %camera5 = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 2, !dbg !12100
  %12 = load %struct.Object*, %struct.Object** %camera5, align 8, !dbg !12100
  br label %cond.end, !dbg !12095

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %10, %cond.true ], [ %12, %cond.false ], !dbg !12095
  store %struct.Object* %cond, %struct.Object** %camob, align 8, !dbg !12094
  call void @llvm.dbg.declare(metadata i32* %framenr, metadata !12101, metadata !DIExpression()), !dbg !12102
  %13 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12103
  %flag = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %13, i32 0, i32 2, !dbg !12105
  %14 = load i32, i32* %flag, align 8, !dbg !12105
  %and = and i32 %14, 1, !dbg !12106
  %tobool6 = icmp ne i32 %and, 0, !dbg !12106
  br i1 %tobool6, label %if.then, label %if.end, !dbg !12107

if.then:                                          ; preds = %cond.end
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12108
  %clip7 = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 41, !dbg !12109
  %16 = load %struct.MovieClip*, %struct.MovieClip** %clip7, align 8, !dbg !12109
  store %struct.MovieClip* %16, %struct.MovieClip** %clip, align 8, !dbg !12110
  br label %if.end, !dbg !12111

if.end:                                           ; preds = %if.then, %cond.end
  %17 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12112
  %tobool8 = icmp ne %struct.MovieClip* %17, null, !dbg !12112
  br i1 %tobool8, label %lor.lhs.false, label %if.then13, !dbg !12114

lor.lhs.false:                                    ; preds = %if.end
  %18 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12115
  %track9 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %18, i32 0, i32 1, !dbg !12116
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %track9, i64 0, i64 0, !dbg !12115
  %19 = load i8, i8* %arrayidx, align 8, !dbg !12115
  %tobool10 = icmp ne i8 %19, 0, !dbg !12115
  br i1 %tobool10, label %lor.lhs.false11, label %if.then13, !dbg !12117

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %20 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12118
  %tobool12 = icmp ne %struct.Object* %20, null, !dbg !12118
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !12119

if.then13:                                        ; preds = %lor.lhs.false11, %lor.lhs.false, %if.end
  br label %if.end330, !dbg !12120

if.end14:                                         ; preds = %lor.lhs.false11
  %21 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12121
  %tracking15 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %21, i32 0, i32 11, !dbg !12122
  store %struct.MovieTracking* %tracking15, %struct.MovieTracking** %tracking, align 8, !dbg !12123
  %22 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12124
  %object = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %22, i32 0, i32 4, !dbg !12126
  %arrayidx16 = getelementptr inbounds [64 x i8], [64 x i8]* %object, i64 0, i64 0, !dbg !12124
  %23 = load i8, i8* %arrayidx16, align 8, !dbg !12124
  %tobool17 = icmp ne i8 %23, 0, !dbg !12124
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !12127

if.then18:                                        ; preds = %if.end14
  %24 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !12128
  %25 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12129
  %object19 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %25, i32 0, i32 4, !dbg !12130
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %object19, i64 0, i64 0, !dbg !12129
  %call = call %struct.MovieTrackingObject* @BKE_tracking_object_get_named(%struct.MovieTracking* %24, i8* %arraydecay), !dbg !12131
  store %struct.MovieTrackingObject* %call, %struct.MovieTrackingObject** %tracking_object, align 8, !dbg !12132
  br label %if.end21, !dbg !12133

if.else:                                          ; preds = %if.end14
  %26 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !12134
  %call20 = call %struct.MovieTrackingObject* @BKE_tracking_object_get_camera(%struct.MovieTracking* %26), !dbg !12135
  store %struct.MovieTrackingObject* %call20, %struct.MovieTrackingObject** %tracking_object, align 8, !dbg !12136
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  %27 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %tracking_object, align 8, !dbg !12137
  %tobool22 = icmp ne %struct.MovieTrackingObject* %27, null, !dbg !12137
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !12139

if.then23:                                        ; preds = %if.end21
  br label %if.end330, !dbg !12140

if.end24:                                         ; preds = %if.end21
  %28 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !12141
  %29 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %tracking_object, align 8, !dbg !12142
  %30 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12143
  %track25 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %30, i32 0, i32 1, !dbg !12144
  %arraydecay26 = getelementptr inbounds [64 x i8], [64 x i8]* %track25, i64 0, i64 0, !dbg !12143
  %call27 = call %struct.MovieTrackingTrack* @BKE_tracking_track_get_named(%struct.MovieTracking* %28, %struct.MovieTrackingObject* %29, i8* %arraydecay26), !dbg !12145
  store %struct.MovieTrackingTrack* %call27, %struct.MovieTrackingTrack** %track, align 8, !dbg !12146
  %31 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !12147
  %tobool28 = icmp ne %struct.MovieTrackingTrack* %31, null, !dbg !12147
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !12149

if.then29:                                        ; preds = %if.end24
  br label %if.end330, !dbg !12150

if.end30:                                         ; preds = %if.end24
  %32 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12151
  %33 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12152
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %33, i32 0, i32 22, !dbg !12153
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !12154
  %34 = load i32, i32* %cfra, align 8, !dbg !12154
  %conv = sitofp i32 %34 to float, !dbg !12152
  %call31 = call float @BKE_movieclip_remap_scene_to_clip_frame(%struct.MovieClip* %32, float %conv), !dbg !12155
  %conv32 = fptosi float %call31 to i32, !dbg !12155
  store i32 %conv32, i32* %framenr, align 4, !dbg !12156
  %35 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12157
  %flag33 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %35, i32 0, i32 2, !dbg !12159
  %36 = load i32, i32* %flag33, align 8, !dbg !12159
  %and34 = and i32 %36, 2, !dbg !12160
  %tobool35 = icmp ne i32 %and34, 0, !dbg !12160
  br i1 %tobool35, label %if.then36, label %if.else82, !dbg !12161

if.then36:                                        ; preds = %if.end30
  %37 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !12162
  %flag37 = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %37, i32 0, i32 13, !dbg !12165
  %38 = load i32, i32* %flag37, align 8, !dbg !12165
  %and38 = and i32 %38, 2, !dbg !12166
  %tobool39 = icmp ne i32 %and38, 0, !dbg !12166
  br i1 %tobool39, label %if.then40, label %if.end81, !dbg !12167

if.then40:                                        ; preds = %if.then36
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obmat, metadata !12168, metadata !DIExpression()), !dbg !12170
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !12171, metadata !DIExpression()), !dbg !12172
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12173
  %39 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12174
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %39, i32 0, i32 3, !dbg !12175
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !12174
  call void @copy_m4_m4([4 x float]* %arraydecay41, [4 x float]* %arraydecay42), !dbg !12176
  %40 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %tracking_object, align 8, !dbg !12177
  %flag43 = getelementptr inbounds %struct.MovieTrackingObject, %struct.MovieTrackingObject* %40, i32 0, i32 3, !dbg !12179
  %41 = load i32, i32* %flag43, align 8, !dbg !12179
  %and44 = and i32 %41, 1, !dbg !12180
  %cmp = icmp eq i32 %and44, 0, !dbg !12181
  br i1 %cmp, label %if.then46, label %if.else65, !dbg !12182

if.then46:                                        ; preds = %if.then40
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !12183, metadata !DIExpression()), !dbg !12185
  %arraydecay47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12186
  %42 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12187
  %obmat48 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 47, !dbg !12188
  %arraydecay49 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat48, i64 0, i64 0, !dbg !12187
  call void @copy_m4_m4([4 x float]* %arraydecay47, [4 x float]* %arraydecay49), !dbg !12189
  %43 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !12190
  %44 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %tracking_object, align 8, !dbg !12191
  %45 = load i32, i32* %framenr, align 4, !dbg !12192
  %arraydecay50 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !12193
  call void @BKE_tracking_camera_get_reconstructed_interpolate(%struct.MovieTracking* %43, %struct.MovieTrackingObject* %44, i32 %45, [4 x float]* %arraydecay50), !dbg !12194
  %arraydecay51 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !12195
  %call52 = call zeroext i8 @invert_m4([4 x float]* %arraydecay51), !dbg !12196
  %46 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12197
  %matrix53 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %46, i32 0, i32 3, !dbg !12197
  %arraydecay54 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix53, i64 0, i64 0, !dbg !12197
  %arraydecay55 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12197
  %arraydecay56 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12197
  %arraydecay57 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !12197
  call void @_va_mul_m4_series_4([4 x float]* %arraydecay54, [4 x float]* %arraydecay55, [4 x float]* %arraydecay56, [4 x float]* %arraydecay57), !dbg !12197
  %47 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12198
  %matrix58 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %47, i32 0, i32 3, !dbg !12199
  %arraydecay59 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix58, i64 0, i64 0, !dbg !12198
  %48 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !12200
  %bundle_pos = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %48, i32 0, i32 11, !dbg !12201
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %bundle_pos, i64 0, i64 0, !dbg !12200
  %49 = load float, float* %arrayidx60, align 8, !dbg !12200
  %50 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !12202
  %bundle_pos61 = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %50, i32 0, i32 11, !dbg !12203
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %bundle_pos61, i64 0, i64 1, !dbg !12202
  %51 = load float, float* %arrayidx62, align 4, !dbg !12202
  %52 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !12204
  %bundle_pos63 = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %52, i32 0, i32 11, !dbg !12205
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %bundle_pos63, i64 0, i64 2, !dbg !12204
  %53 = load float, float* %arrayidx64, align 8, !dbg !12204
  call void @translate_m4([4 x float]* %arraydecay59, float %49, float %51, float %53), !dbg !12206
  br label %if.end80, !dbg !12207

if.else65:                                        ; preds = %if.then40
  %54 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12208
  %scene66 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %54, i32 0, i32 0, !dbg !12210
  %55 = load %struct.Scene*, %struct.Scene** %scene66, align 8, !dbg !12210
  %56 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12211
  %arraydecay67 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12212
  call void @BKE_tracking_get_camera_object_matrix(%struct.Scene* %55, %struct.Object* %56, [4 x float]* %arraydecay67), !dbg !12213
  %57 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12214
  %matrix68 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %57, i32 0, i32 3, !dbg !12215
  %arraydecay69 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix68, i64 0, i64 0, !dbg !12214
  %arraydecay70 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12216
  %arraydecay71 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12217
  call void @mul_m4_m4m4([4 x float]* %arraydecay69, [4 x float]* %arraydecay70, [4 x float]* %arraydecay71), !dbg !12218
  %58 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12219
  %matrix72 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %58, i32 0, i32 3, !dbg !12220
  %arraydecay73 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix72, i64 0, i64 0, !dbg !12219
  %59 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !12221
  %bundle_pos74 = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %59, i32 0, i32 11, !dbg !12222
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %bundle_pos74, i64 0, i64 0, !dbg !12221
  %60 = load float, float* %arrayidx75, align 8, !dbg !12221
  %61 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !12223
  %bundle_pos76 = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %61, i32 0, i32 11, !dbg !12224
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %bundle_pos76, i64 0, i64 1, !dbg !12223
  %62 = load float, float* %arrayidx77, align 4, !dbg !12223
  %63 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !12225
  %bundle_pos78 = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %63, i32 0, i32 11, !dbg !12226
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %bundle_pos78, i64 0, i64 2, !dbg !12225
  %64 = load float, float* %arrayidx79, align 8, !dbg !12225
  call void @translate_m4([4 x float]* %arraydecay73, float %60, float %62, float %64), !dbg !12227
  br label %if.end80

if.end80:                                         ; preds = %if.else65, %if.then46
  br label %if.end81, !dbg !12228

if.end81:                                         ; preds = %if.end80, %if.then36
  br label %if.end330, !dbg !12229

if.else82:                                        ; preds = %if.end30
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingMarker** %marker, metadata !12230, metadata !DIExpression()), !dbg !12232
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !12233, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.declare(metadata [3 x float]* %disp, metadata !12235, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !12237, metadata !DIExpression()), !dbg !12238
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat83, metadata !12239, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.declare(metadata float* %aspect, metadata !12241, metadata !DIExpression()), !dbg !12242
  %65 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12243
  %r84 = getelementptr inbounds %struct.Scene, %struct.Scene* %65, i32 0, i32 22, !dbg !12244
  %xsch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r84, i32 0, i32 33, !dbg !12245
  %66 = load i32, i32* %xsch, align 4, !dbg !12245
  %conv85 = sitofp i32 %66 to float, !dbg !12243
  %67 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12246
  %r86 = getelementptr inbounds %struct.Scene, %struct.Scene* %67, i32 0, i32 22, !dbg !12247
  %xasp = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r86, i32 0, i32 63, !dbg !12248
  %68 = load float, float* %xasp, align 4, !dbg !12248
  %mul = fmul float %conv85, %68, !dbg !12249
  %69 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12250
  %r87 = getelementptr inbounds %struct.Scene, %struct.Scene* %69, i32 0, i32 22, !dbg !12251
  %ysch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r87, i32 0, i32 34, !dbg !12252
  %70 = load i32, i32* %ysch, align 8, !dbg !12252
  %conv88 = sitofp i32 %70 to float, !dbg !12250
  %71 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12253
  %r89 = getelementptr inbounds %struct.Scene, %struct.Scene* %71, i32 0, i32 22, !dbg !12254
  %yasp = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r89, i32 0, i32 64, !dbg !12255
  %72 = load float, float* %yasp, align 8, !dbg !12255
  %mul90 = fmul float %conv88, %72, !dbg !12256
  %div = fdiv float %mul, %mul90, !dbg !12257
  store float %div, float* %aspect, align 4, !dbg !12242
  call void @llvm.dbg.declare(metadata float* %len, metadata !12258, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.declare(metadata float* %d, metadata !12260, metadata !DIExpression()), !dbg !12261
  %73 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12262
  %74 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12263
  %arraydecay91 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat83, i64 0, i64 0, !dbg !12264
  call void @BKE_object_where_is_calc_mat4(%struct.Scene* %73, %struct.Object* %74, [4 x float]* %arraydecay91), !dbg !12265
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12266
  store float 0.000000e+00, float* %arrayidx92, align 4, !dbg !12267
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !12268
  store float 0.000000e+00, float* %arrayidx93, align 4, !dbg !12269
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !12270
  store float 1.000000e+00, float* %arrayidx94, align 4, !dbg !12271
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !12272
  %arraydecay96 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat83, i64 0, i64 0, !dbg !12273
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12274
  call void @mul_v3_m4v3(float* %arraydecay95, [4 x float]* %arraydecay96, float* %arraydecay97), !dbg !12275
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12276
  %75 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12277
  %matrix99 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %75, i32 0, i32 3, !dbg !12278
  %arrayidx100 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix99, i64 0, i64 3, !dbg !12277
  %arraydecay101 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx100, i64 0, i64 0, !dbg !12277
  call void @copy_v3_v3(float* %arraydecay98, float* %arraydecay101), !dbg !12279
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12280
  %arrayidx103 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat83, i64 0, i64 3, !dbg !12281
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx103, i64 0, i64 0, !dbg !12281
  call void @sub_v3_v3(float* %arraydecay102, float* %arraydecay104), !dbg !12282
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !12283
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12284
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !12285
  call void @project_v3_v3v3(float* %arraydecay105, float* %arraydecay106, float* %arraydecay107), !dbg !12286
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !12287
  %call109 = call float @len_v3(float* %arraydecay108), !dbg !12288
  store float %call109, float* %len, align 4, !dbg !12289
  %76 = load float, float* %len, align 4, !dbg !12290
  %cmp110 = fcmp ogt float %76, 0x3E80000000000000, !dbg !12292
  br i1 %cmp110, label %if.then112, label %if.end329, !dbg !12293

if.then112:                                       ; preds = %if.else82
  call void @llvm.dbg.declare(metadata %struct.CameraParams* %params, metadata !12294, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.declare(metadata i32* %width, metadata !12322, metadata !DIExpression()), !dbg !12323
  call void @llvm.dbg.declare(metadata i32* %height, metadata !12324, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.declare(metadata [2 x float]* %pos, metadata !12326, metadata !DIExpression()), !dbg !12327
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %rmat, metadata !12328, metadata !DIExpression()), !dbg !12329
  %77 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12330
  call void @BKE_movieclip_get_size(%struct.MovieClip* %77, %struct.MovieClipUser* null, i32* %width, i32* %height), !dbg !12331
  %78 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !12332
  %79 = load i32, i32* %framenr, align 4, !dbg !12333
  %call113 = call %struct.MovieTrackingMarker* @BKE_tracking_marker_get(%struct.MovieTrackingTrack* %78, i32 %79), !dbg !12334
  store %struct.MovieTrackingMarker* %call113, %struct.MovieTrackingMarker** %marker, align 8, !dbg !12335
  %arraydecay114 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !12336
  %80 = load %struct.MovieTrackingMarker*, %struct.MovieTrackingMarker** %marker, align 8, !dbg !12337
  %pos115 = getelementptr inbounds %struct.MovieTrackingMarker, %struct.MovieTrackingMarker* %80, i32 0, i32 0, !dbg !12338
  %arraydecay116 = getelementptr inbounds [2 x float], [2 x float]* %pos115, i64 0, i64 0, !dbg !12337
  %81 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !12339
  %offset = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %81, i32 0, i32 7, !dbg !12340
  %arraydecay117 = getelementptr inbounds [2 x float], [2 x float]* %offset, i64 0, i64 0, !dbg !12339
  call void @add_v2_v2v2(float* %arraydecay114, float* %arraydecay116, float* %arraydecay117), !dbg !12341
  %82 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12342
  %flag118 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %82, i32 0, i32 2, !dbg !12344
  %83 = load i32, i32* %flag118, align 8, !dbg !12344
  %and119 = and i32 %83, 4, !dbg !12345
  %tobool120 = icmp ne i32 %and119, 0, !dbg !12345
  br i1 %tobool120, label %if.then121, label %if.end136, !dbg !12346

if.then121:                                       ; preds = %if.then112
  %84 = load i32, i32* %width, align 4, !dbg !12347
  %conv122 = sitofp i32 %84 to float, !dbg !12347
  %arrayidx123 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !12349
  %85 = load float, float* %arrayidx123, align 4, !dbg !12350
  %mul124 = fmul float %85, %conv122, !dbg !12350
  store float %mul124, float* %arrayidx123, align 4, !dbg !12350
  %86 = load i32, i32* %height, align 4, !dbg !12351
  %conv125 = sitofp i32 %86 to float, !dbg !12351
  %arrayidx126 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 1, !dbg !12352
  %87 = load float, float* %arrayidx126, align 4, !dbg !12353
  %mul127 = fmul float %87, %conv125, !dbg !12353
  store float %mul127, float* %arrayidx126, align 4, !dbg !12353
  %88 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !12354
  %arraydecay128 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !12355
  %arraydecay129 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !12356
  call void @BKE_tracking_undistort_v2(%struct.MovieTracking* %88, float* %arraydecay128, float* %arraydecay129), !dbg !12357
  %89 = load i32, i32* %width, align 4, !dbg !12358
  %conv130 = sitofp i32 %89 to float, !dbg !12358
  %arrayidx131 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !12359
  %90 = load float, float* %arrayidx131, align 4, !dbg !12360
  %div132 = fdiv float %90, %conv130, !dbg !12360
  store float %div132, float* %arrayidx131, align 4, !dbg !12360
  %91 = load i32, i32* %height, align 4, !dbg !12361
  %conv133 = sitofp i32 %91 to float, !dbg !12361
  %arrayidx134 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 1, !dbg !12362
  %92 = load float, float* %arrayidx134, align 4, !dbg !12363
  %div135 = fdiv float %92, %conv133, !dbg !12363
  store float %div135, float* %arrayidx134, align 4, !dbg !12363
  br label %if.end136, !dbg !12364

if.end136:                                        ; preds = %if.then121, %if.then112
  %93 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12365
  %frame_method = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %93, i32 0, i32 3, !dbg !12367
  %94 = load i32, i32* %frame_method, align 4, !dbg !12367
  %cmp137 = icmp ne i32 %94, 0, !dbg !12368
  br i1 %cmp137, label %if.then139, label %if.end198, !dbg !12369

if.then139:                                       ; preds = %if.end136
  call void @llvm.dbg.declare(metadata float* %w_src, metadata !12370, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.declare(metadata float* %h_src, metadata !12373, metadata !DIExpression()), !dbg !12374
  call void @llvm.dbg.declare(metadata float* %w_dst, metadata !12375, metadata !DIExpression()), !dbg !12376
  call void @llvm.dbg.declare(metadata float* %h_dst, metadata !12377, metadata !DIExpression()), !dbg !12378
  call void @llvm.dbg.declare(metadata float* %asp_src, metadata !12379, metadata !DIExpression()), !dbg !12380
  call void @llvm.dbg.declare(metadata float* %asp_dst, metadata !12381, metadata !DIExpression()), !dbg !12382
  %95 = load i32, i32* %width, align 4, !dbg !12383
  %conv140 = sitofp i32 %95 to float, !dbg !12383
  %96 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12384
  %aspx = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %96, i32 0, i32 6, !dbg !12385
  %97 = load float, float* %aspx, align 8, !dbg !12385
  %mul141 = fmul float %conv140, %97, !dbg !12386
  store float %mul141, float* %w_src, align 4, !dbg !12387
  %98 = load i32, i32* %height, align 4, !dbg !12388
  %conv142 = sitofp i32 %98 to float, !dbg !12388
  %99 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12389
  %aspy = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %99, i32 0, i32 7, !dbg !12390
  %100 = load float, float* %aspy, align 4, !dbg !12390
  %mul143 = fmul float %conv142, %100, !dbg !12391
  store float %mul143, float* %h_src, align 4, !dbg !12392
  %101 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12393
  %r144 = getelementptr inbounds %struct.Scene, %struct.Scene* %101, i32 0, i32 22, !dbg !12394
  %xsch145 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r144, i32 0, i32 33, !dbg !12395
  %102 = load i32, i32* %xsch145, align 4, !dbg !12395
  %conv146 = sitofp i32 %102 to float, !dbg !12393
  %103 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12396
  %r147 = getelementptr inbounds %struct.Scene, %struct.Scene* %103, i32 0, i32 22, !dbg !12397
  %xasp148 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r147, i32 0, i32 63, !dbg !12398
  %104 = load float, float* %xasp148, align 4, !dbg !12398
  %mul149 = fmul float %conv146, %104, !dbg !12399
  store float %mul149, float* %w_dst, align 4, !dbg !12400
  %105 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12401
  %r150 = getelementptr inbounds %struct.Scene, %struct.Scene* %105, i32 0, i32 22, !dbg !12402
  %ysch151 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r150, i32 0, i32 34, !dbg !12403
  %106 = load i32, i32* %ysch151, align 8, !dbg !12403
  %conv152 = sitofp i32 %106 to float, !dbg !12401
  %107 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12404
  %r153 = getelementptr inbounds %struct.Scene, %struct.Scene* %107, i32 0, i32 22, !dbg !12405
  %yasp154 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r153, i32 0, i32 64, !dbg !12406
  %108 = load float, float* %yasp154, align 8, !dbg !12406
  %mul155 = fmul float %conv152, %108, !dbg !12407
  store float %mul155, float* %h_dst, align 4, !dbg !12408
  %109 = load float, float* %w_src, align 4, !dbg !12409
  %110 = load float, float* %h_src, align 4, !dbg !12410
  %div156 = fdiv float %109, %110, !dbg !12411
  store float %div156, float* %asp_src, align 4, !dbg !12412
  %111 = load float, float* %w_dst, align 4, !dbg !12413
  %112 = load float, float* %h_dst, align 4, !dbg !12414
  %div157 = fdiv float %111, %112, !dbg !12415
  store float %div157, float* %asp_dst, align 4, !dbg !12416
  %113 = load float, float* %asp_src, align 4, !dbg !12417
  %114 = load float, float* %asp_dst, align 4, !dbg !12419
  %sub = fsub float %113, %114, !dbg !12420
  %115 = call float @llvm.fabs.f32(float %sub), !dbg !12421
  %cmp158 = fcmp oge float %115, 0x3E80000000000000, !dbg !12422
  br i1 %cmp158, label %if.then160, label %if.end197, !dbg !12423

if.then160:                                       ; preds = %if.then139
  %116 = load float, float* %asp_src, align 4, !dbg !12424
  %117 = load float, float* %asp_dst, align 4, !dbg !12427
  %cmp161 = fcmp ogt float %116, %117, !dbg !12428
  %conv162 = zext i1 %cmp161 to i32, !dbg !12428
  %118 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12429
  %frame_method163 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %118, i32 0, i32 3, !dbg !12430
  %119 = load i32, i32* %frame_method163, align 4, !dbg !12430
  %cmp164 = icmp eq i32 %119, 2, !dbg !12431
  %conv165 = zext i1 %cmp164 to i32, !dbg !12431
  %cmp166 = icmp eq i32 %conv162, %conv165, !dbg !12432
  br i1 %cmp166, label %if.then168, label %if.else181, !dbg !12433

if.then168:                                       ; preds = %if.then160
  call void @llvm.dbg.declare(metadata float* %div169, metadata !12434, metadata !DIExpression()), !dbg !12436
  %120 = load float, float* %asp_src, align 4, !dbg !12437
  %121 = load float, float* %asp_dst, align 4, !dbg !12438
  %div170 = fdiv float %120, %121, !dbg !12439
  store float %div170, float* %div169, align 4, !dbg !12436
  call void @llvm.dbg.declare(metadata float* %cent, metadata !12440, metadata !DIExpression()), !dbg !12441
  %122 = load i32, i32* %width, align 4, !dbg !12442
  %conv171 = sitofp i32 %122 to float, !dbg !12443
  %div172 = fdiv float %conv171, 2.000000e+00, !dbg !12444
  store float %div172, float* %cent, align 4, !dbg !12441
  %arrayidx173 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !12445
  %123 = load float, float* %arrayidx173, align 4, !dbg !12445
  %124 = load i32, i32* %width, align 4, !dbg !12446
  %conv174 = sitofp i32 %124 to float, !dbg !12446
  %mul175 = fmul float %123, %conv174, !dbg !12447
  %125 = load float, float* %cent, align 4, !dbg !12448
  %sub176 = fsub float %mul175, %125, !dbg !12449
  %126 = load float, float* %div169, align 4, !dbg !12450
  %mul177 = fmul float %sub176, %126, !dbg !12451
  %127 = load float, float* %cent, align 4, !dbg !12452
  %add = fadd float %mul177, %127, !dbg !12453
  %128 = load i32, i32* %width, align 4, !dbg !12454
  %conv178 = sitofp i32 %128 to float, !dbg !12454
  %div179 = fdiv float %add, %conv178, !dbg !12455
  %arrayidx180 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !12456
  store float %div179, float* %arrayidx180, align 4, !dbg !12457
  br label %if.end196, !dbg !12458

if.else181:                                       ; preds = %if.then160
  call void @llvm.dbg.declare(metadata float* %div182, metadata !12459, metadata !DIExpression()), !dbg !12461
  %129 = load float, float* %asp_dst, align 4, !dbg !12462
  %130 = load float, float* %asp_src, align 4, !dbg !12463
  %div183 = fdiv float %129, %130, !dbg !12464
  store float %div183, float* %div182, align 4, !dbg !12461
  call void @llvm.dbg.declare(metadata float* %cent184, metadata !12465, metadata !DIExpression()), !dbg !12466
  %131 = load i32, i32* %height, align 4, !dbg !12467
  %conv185 = sitofp i32 %131 to float, !dbg !12468
  %div186 = fdiv float %conv185, 2.000000e+00, !dbg !12469
  store float %div186, float* %cent184, align 4, !dbg !12466
  %arrayidx187 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 1, !dbg !12470
  %132 = load float, float* %arrayidx187, align 4, !dbg !12470
  %133 = load i32, i32* %height, align 4, !dbg !12471
  %conv188 = sitofp i32 %133 to float, !dbg !12471
  %mul189 = fmul float %132, %conv188, !dbg !12472
  %134 = load float, float* %cent184, align 4, !dbg !12473
  %sub190 = fsub float %mul189, %134, !dbg !12474
  %135 = load float, float* %div182, align 4, !dbg !12475
  %mul191 = fmul float %sub190, %135, !dbg !12476
  %136 = load float, float* %cent184, align 4, !dbg !12477
  %add192 = fadd float %mul191, %136, !dbg !12478
  %137 = load i32, i32* %height, align 4, !dbg !12479
  %conv193 = sitofp i32 %137 to float, !dbg !12479
  %div194 = fdiv float %add192, %conv193, !dbg !12480
  %arrayidx195 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 1, !dbg !12481
  store float %div194, float* %arrayidx195, align 4, !dbg !12482
  br label %if.end196

if.end196:                                        ; preds = %if.else181, %if.then168
  br label %if.end197, !dbg !12483

if.end197:                                        ; preds = %if.end196, %if.then139
  br label %if.end198, !dbg !12484

if.end198:                                        ; preds = %if.end197, %if.end136
  call void @BKE_camera_params_init(%struct.CameraParams* %params), !dbg !12485
  %138 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12486
  call void @BKE_camera_params_from_object(%struct.CameraParams* %params, %struct.Object* %138), !dbg !12487
  %is_ortho = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 0, !dbg !12488
  %139 = load i8, i8* %is_ortho, align 4, !dbg !12488
  %tobool199 = icmp ne i8 %139, 0, !dbg !12490
  br i1 %tobool199, label %if.then200, label %if.else240, !dbg !12491

if.then200:                                       ; preds = %if.end198
  %ortho_scale = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 2, !dbg !12492
  %140 = load float, float* %ortho_scale, align 4, !dbg !12492
  %arrayidx201 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !12494
  %141 = load float, float* %arrayidx201, align 4, !dbg !12494
  %sub202 = fsub float %141, 5.000000e-01, !dbg !12495
  %shiftx = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 4, !dbg !12496
  %142 = load float, float* %shiftx, align 4, !dbg !12496
  %add203 = fadd float %sub202, %142, !dbg !12497
  %mul204 = fmul float %140, %add203, !dbg !12498
  %arrayidx205 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12499
  store float %mul204, float* %arrayidx205, align 4, !dbg !12500
  %ortho_scale206 = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 2, !dbg !12501
  %143 = load float, float* %ortho_scale206, align 4, !dbg !12501
  %arrayidx207 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 1, !dbg !12502
  %144 = load float, float* %arrayidx207, align 4, !dbg !12502
  %sub208 = fsub float %144, 5.000000e-01, !dbg !12503
  %shifty = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 5, !dbg !12504
  %145 = load float, float* %shifty, align 4, !dbg !12504
  %add209 = fadd float %sub208, %145, !dbg !12505
  %mul210 = fmul float %143, %add209, !dbg !12506
  %arrayidx211 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !12507
  store float %mul210, float* %arrayidx211, align 4, !dbg !12508
  %146 = load float, float* %len, align 4, !dbg !12509
  %fneg = fneg float %146, !dbg !12510
  %arrayidx212 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !12511
  store float %fneg, float* %arrayidx212, align 4, !dbg !12512
  %147 = load float, float* %aspect, align 4, !dbg !12513
  %cmp213 = fcmp ogt float %147, 1.000000e+00, !dbg !12515
  br i1 %cmp213, label %if.then215, label %if.else218, !dbg !12516

if.then215:                                       ; preds = %if.then200
  %148 = load float, float* %aspect, align 4, !dbg !12517
  %arrayidx216 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !12518
  %149 = load float, float* %arrayidx216, align 4, !dbg !12519
  %div217 = fdiv float %149, %148, !dbg !12519
  store float %div217, float* %arrayidx216, align 4, !dbg !12519
  br label %if.end221, !dbg !12518

if.else218:                                       ; preds = %if.then200
  %150 = load float, float* %aspect, align 4, !dbg !12520
  %arrayidx219 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12521
  %151 = load float, float* %arrayidx219, align 4, !dbg !12522
  %mul220 = fmul float %151, %150, !dbg !12522
  store float %mul220, float* %arrayidx219, align 4, !dbg !12522
  br label %if.end221

if.end221:                                        ; preds = %if.else218, %if.then215
  %arraydecay222 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !12523
  %152 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12524
  %obmat223 = getelementptr inbounds %struct.Object, %struct.Object* %152, i32 0, i32 47, !dbg !12525
  %arraydecay224 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat223, i64 0, i64 0, !dbg !12524
  %arraydecay225 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12526
  call void @mul_v3_m4v3(float* %arraydecay222, [4 x float]* %arraydecay224, float* %arraydecay225), !dbg !12527
  %arraydecay226 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !12528
  %153 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12529
  %obmat227 = getelementptr inbounds %struct.Object, %struct.Object* %153, i32 0, i32 47, !dbg !12530
  %arraydecay228 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat227, i64 0, i64 0, !dbg !12529
  call void @copy_m4_m4([4 x float]* %arraydecay226, [4 x float]* %arraydecay228), !dbg !12531
  %arrayidx229 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 3, !dbg !12532
  %arraydecay230 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx229, i64 0, i64 0, !dbg !12532
  call void @zero_v3(float* %arraydecay230), !dbg !12533
  %154 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12534
  %matrix231 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %154, i32 0, i32 3, !dbg !12535
  %arraydecay232 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix231, i64 0, i64 0, !dbg !12534
  %155 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12536
  %matrix233 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %155, i32 0, i32 3, !dbg !12537
  %arraydecay234 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix233, i64 0, i64 0, !dbg !12536
  %arraydecay235 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !12538
  call void @mul_m4_m4m4([4 x float]* %arraydecay232, [4 x float]* %arraydecay234, [4 x float]* %arraydecay235), !dbg !12539
  %156 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12540
  %matrix236 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %156, i32 0, i32 3, !dbg !12541
  %arrayidx237 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix236, i64 0, i64 3, !dbg !12540
  %arraydecay238 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx237, i64 0, i64 0, !dbg !12540
  %arraydecay239 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !12542
  call void @copy_v3_v3(float* %arraydecay238, float* %arraydecay239), !dbg !12543
  br label %if.end287, !dbg !12544

if.else240:                                       ; preds = %if.end198
  %157 = load float, float* %len, align 4, !dbg !12545
  %sensor_x = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 8, !dbg !12547
  %158 = load float, float* %sensor_x, align 4, !dbg !12547
  %mul241 = fmul float %157, %158, !dbg !12548
  %lens = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 1, !dbg !12549
  %159 = load float, float* %lens, align 4, !dbg !12549
  %mul242 = fmul float 2.000000e+00, %159, !dbg !12550
  %div243 = fdiv float %mul241, %mul242, !dbg !12551
  store float %div243, float* %d, align 4, !dbg !12552
  %160 = load float, float* %d, align 4, !dbg !12553
  %arrayidx244 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !12554
  %161 = load float, float* %arrayidx244, align 4, !dbg !12554
  %shiftx245 = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 4, !dbg !12555
  %162 = load float, float* %shiftx245, align 4, !dbg !12555
  %add246 = fadd float %161, %162, !dbg !12556
  %mul247 = fmul float 2.000000e+00, %add246, !dbg !12557
  %sub248 = fsub float %mul247, 1.000000e+00, !dbg !12558
  %mul249 = fmul float %160, %sub248, !dbg !12559
  %arrayidx250 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12560
  store float %mul249, float* %arrayidx250, align 4, !dbg !12561
  %163 = load float, float* %d, align 4, !dbg !12562
  %arrayidx251 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 1, !dbg !12563
  %164 = load float, float* %arrayidx251, align 4, !dbg !12563
  %shifty252 = getelementptr inbounds %struct.CameraParams, %struct.CameraParams* %params, i32 0, i32 5, !dbg !12564
  %165 = load float, float* %shifty252, align 4, !dbg !12564
  %add253 = fadd float %164, %165, !dbg !12565
  %mul254 = fmul float 2.000000e+00, %add253, !dbg !12566
  %sub255 = fsub float %mul254, 1.000000e+00, !dbg !12567
  %mul256 = fmul float %163, %sub255, !dbg !12568
  %arrayidx257 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !12569
  store float %mul256, float* %arrayidx257, align 4, !dbg !12570
  %166 = load float, float* %len, align 4, !dbg !12571
  %fneg258 = fneg float %166, !dbg !12572
  %arrayidx259 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !12573
  store float %fneg258, float* %arrayidx259, align 4, !dbg !12574
  %167 = load float, float* %aspect, align 4, !dbg !12575
  %cmp260 = fcmp ogt float %167, 1.000000e+00, !dbg !12577
  br i1 %cmp260, label %if.then262, label %if.else265, !dbg !12578

if.then262:                                       ; preds = %if.else240
  %168 = load float, float* %aspect, align 4, !dbg !12579
  %arrayidx263 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !12580
  %169 = load float, float* %arrayidx263, align 4, !dbg !12581
  %div264 = fdiv float %169, %168, !dbg !12581
  store float %div264, float* %arrayidx263, align 4, !dbg !12581
  br label %if.end268, !dbg !12580

if.else265:                                       ; preds = %if.else240
  %170 = load float, float* %aspect, align 4, !dbg !12582
  %arrayidx266 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12583
  %171 = load float, float* %arrayidx266, align 4, !dbg !12584
  %mul267 = fmul float %171, %170, !dbg !12584
  store float %mul267, float* %arrayidx266, align 4, !dbg !12584
  br label %if.end268

if.end268:                                        ; preds = %if.else265, %if.then262
  %arraydecay269 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !12585
  %172 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12586
  %obmat270 = getelementptr inbounds %struct.Object, %struct.Object* %172, i32 0, i32 47, !dbg !12587
  %arraydecay271 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat270, i64 0, i64 0, !dbg !12586
  %arraydecay272 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12588
  call void @mul_v3_m4v3(float* %arraydecay269, [4 x float]* %arraydecay271, float* %arraydecay272), !dbg !12589
  %arraydecay273 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !12590
  %173 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12591
  %obmat274 = getelementptr inbounds %struct.Object, %struct.Object* %173, i32 0, i32 47, !dbg !12592
  %arraydecay275 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat274, i64 0, i64 0, !dbg !12591
  call void @copy_m4_m4([4 x float]* %arraydecay273, [4 x float]* %arraydecay275), !dbg !12593
  %arrayidx276 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 3, !dbg !12594
  %arraydecay277 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx276, i64 0, i64 0, !dbg !12594
  call void @zero_v3(float* %arraydecay277), !dbg !12595
  %174 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12596
  %matrix278 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %174, i32 0, i32 3, !dbg !12597
  %arraydecay279 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix278, i64 0, i64 0, !dbg !12596
  %175 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12598
  %matrix280 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %175, i32 0, i32 3, !dbg !12599
  %arraydecay281 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix280, i64 0, i64 0, !dbg !12598
  %arraydecay282 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !12600
  call void @mul_m4_m4m4([4 x float]* %arraydecay279, [4 x float]* %arraydecay281, [4 x float]* %arraydecay282), !dbg !12601
  %176 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12602
  %matrix283 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %176, i32 0, i32 3, !dbg !12603
  %arrayidx284 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix283, i64 0, i64 3, !dbg !12602
  %arraydecay285 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx284, i64 0, i64 0, !dbg !12602
  %arraydecay286 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !12604
  call void @copy_v3_v3(float* %arraydecay285, float* %arraydecay286), !dbg !12605
  br label %if.end287

if.end287:                                        ; preds = %if.end268, %if.end221
  %177 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12606
  %depth_ob = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %177, i32 0, i32 6, !dbg !12608
  %178 = load %struct.Object*, %struct.Object** %depth_ob, align 8, !dbg !12608
  %tobool288 = icmp ne %struct.Object* %178, null, !dbg !12606
  br i1 %tobool288, label %if.then289, label %if.end328, !dbg !12609

if.then289:                                       ; preds = %if.end287
  call void @llvm.dbg.declare(metadata %struct.Object** %depth_ob290, metadata !12610, metadata !DIExpression()), !dbg !12612
  %179 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data, align 8, !dbg !12613
  %depth_ob291 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %179, i32 0, i32 6, !dbg !12614
  %180 = load %struct.Object*, %struct.Object** %depth_ob291, align 8, !dbg !12614
  store %struct.Object* %180, %struct.Object** %depth_ob290, align 8, !dbg !12612
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %target, metadata !12615, metadata !DIExpression()), !dbg !12616
  %181 = load %struct.Object*, %struct.Object** %depth_ob290, align 8, !dbg !12617
  %call292 = call %struct.DerivedMesh* @object_get_derived_final(%struct.Object* %181, i8 zeroext 0), !dbg !12618
  store %struct.DerivedMesh* %call292, %struct.DerivedMesh** %target, align 8, !dbg !12616
  %182 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target, align 8, !dbg !12619
  %tobool293 = icmp ne %struct.DerivedMesh* %182, null, !dbg !12619
  br i1 %tobool293, label %if.then294, label %if.end327, !dbg !12621

if.then294:                                       ; preds = %if.then289
  call void @llvm.dbg.declare(metadata %struct.BVHTreeFromMesh* %treeData, metadata !12622, metadata !DIExpression()), !dbg !12624
  %183 = bitcast %struct.BVHTreeFromMesh* %treeData to i8*, !dbg !12624
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 72, i1 false), !dbg !12624
  call void @llvm.dbg.declare(metadata %struct.BVHTreeRayHit* %hit, metadata !12625, metadata !DIExpression()), !dbg !12626
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_start, metadata !12627, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_end, metadata !12629, metadata !DIExpression()), !dbg !12630
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_nor, metadata !12631, metadata !DIExpression()), !dbg !12632
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat295, metadata !12633, metadata !DIExpression()), !dbg !12634
  call void @llvm.dbg.declare(metadata i32* %result, metadata !12635, metadata !DIExpression()), !dbg !12636
  %arraydecay296 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat295, i64 0, i64 0, !dbg !12637
  %184 = load %struct.Object*, %struct.Object** %depth_ob290, align 8, !dbg !12638
  %obmat297 = getelementptr inbounds %struct.Object, %struct.Object* %184, i32 0, i32 47, !dbg !12639
  %arraydecay298 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat297, i64 0, i64 0, !dbg !12638
  %call299 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay296, [4 x float]* %arraydecay298), !dbg !12640
  %arraydecay300 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !12641
  %arraydecay301 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat295, i64 0, i64 0, !dbg !12642
  %185 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12643
  %obmat302 = getelementptr inbounds %struct.Object, %struct.Object* %185, i32 0, i32 47, !dbg !12644
  %arrayidx303 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat302, i64 0, i64 3, !dbg !12643
  %arraydecay304 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx303, i64 0, i64 0, !dbg !12643
  call void @mul_v3_m4v3(float* %arraydecay300, [4 x float]* %arraydecay301, float* %arraydecay304), !dbg !12645
  %arraydecay305 = getelementptr inbounds [3 x float], [3 x float]* %ray_end, i64 0, i64 0, !dbg !12646
  %arraydecay306 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat295, i64 0, i64 0, !dbg !12647
  %186 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12648
  %matrix307 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %186, i32 0, i32 3, !dbg !12649
  %arrayidx308 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix307, i64 0, i64 3, !dbg !12648
  %arraydecay309 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx308, i64 0, i64 0, !dbg !12648
  call void @mul_v3_m4v3(float* %arraydecay305, [4 x float]* %arraydecay306, float* %arraydecay309), !dbg !12650
  %arraydecay310 = getelementptr inbounds [3 x float], [3 x float]* %ray_nor, i64 0, i64 0, !dbg !12651
  %arraydecay311 = getelementptr inbounds [3 x float], [3 x float]* %ray_end, i64 0, i64 0, !dbg !12652
  %arraydecay312 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !12653
  call void @sub_v3_v3v3(float* %arraydecay310, float* %arraydecay311, float* %arraydecay312), !dbg !12654
  %187 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target, align 8, !dbg !12655
  %call313 = call %struct.BVHTree* @bvhtree_from_mesh_faces(%struct.BVHTreeFromMesh* %treeData, %struct.DerivedMesh* %187, float 0.000000e+00, i32 4, i32 6), !dbg !12656
  %dist = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 3, !dbg !12657
  store float 0x47EFFFFFE0000000, float* %dist, align 4, !dbg !12658
  %index = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !12659
  store i32 -1, i32* %index, align 4, !dbg !12660
  %tree = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 0, !dbg !12661
  %188 = load %struct.BVHTree*, %struct.BVHTree** %tree, align 8, !dbg !12661
  %arraydecay314 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !12662
  %arraydecay315 = getelementptr inbounds [3 x float], [3 x float]* %ray_nor, i64 0, i64 0, !dbg !12663
  %raycast_callback = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 2, !dbg !12664
  %189 = load void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)*, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)** %raycast_callback, align 8, !dbg !12664
  %190 = bitcast %struct.BVHTreeFromMesh* %treeData to i8*, !dbg !12665
  %call316 = call i32 @BLI_bvhtree_ray_cast(%struct.BVHTree* %188, float* %arraydecay314, float* %arraydecay315, float 0.000000e+00, %struct.BVHTreeRayHit* %hit, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)* %189, i8* %190), !dbg !12666
  store i32 %call316, i32* %result, align 4, !dbg !12667
  %191 = load i32, i32* %result, align 4, !dbg !12668
  %cmp317 = icmp ne i32 %191, -1, !dbg !12670
  br i1 %cmp317, label %if.then319, label %if.end326, !dbg !12671

if.then319:                                       ; preds = %if.then294
  %192 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12672
  %matrix320 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %192, i32 0, i32 3, !dbg !12674
  %arrayidx321 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix320, i64 0, i64 3, !dbg !12672
  %arraydecay322 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx321, i64 0, i64 0, !dbg !12672
  %193 = load %struct.Object*, %struct.Object** %depth_ob290, align 8, !dbg !12675
  %obmat323 = getelementptr inbounds %struct.Object, %struct.Object* %193, i32 0, i32 47, !dbg !12676
  %arraydecay324 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat323, i64 0, i64 0, !dbg !12675
  %co = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 1, !dbg !12677
  %arraydecay325 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12678
  call void @mul_v3_m4v3(float* %arraydecay322, [4 x float]* %arraydecay324, float* %arraydecay325), !dbg !12679
  br label %if.end326, !dbg !12680

if.end326:                                        ; preds = %if.then319, %if.then294
  call void @free_bvhtree_from_mesh(%struct.BVHTreeFromMesh* %treeData), !dbg !12681
  %194 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target, align 8, !dbg !12682
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %194, i32 0, i32 95, !dbg !12683
  %195 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !12683
  %196 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target, align 8, !dbg !12684
  call void %195(%struct.DerivedMesh* %196), !dbg !12682
  br label %if.end327, !dbg !12685

if.end327:                                        ; preds = %if.end326, %if.then289
  br label %if.end328, !dbg !12686

if.end328:                                        ; preds = %if.end327, %if.end287
  br label %if.end329, !dbg !12687

if.end329:                                        ; preds = %if.end328, %if.else82
  br label %if.end330

if.end330:                                        ; preds = %if.then13, %if.then23, %if.then29, %if.end329, %if.end81
  ret void, !dbg !12688
}

declare dso_local %struct.MovieTrackingObject* @BKE_tracking_object_get_named(%struct.MovieTracking*, i8*) #2

declare dso_local %struct.MovieTrackingObject* @BKE_tracking_object_get_camera(%struct.MovieTracking*) #2

declare dso_local %struct.MovieTrackingTrack* @BKE_tracking_track_get_named(%struct.MovieTracking*, %struct.MovieTrackingObject*, i8*) #2

declare dso_local float @BKE_movieclip_remap_scene_to_clip_frame(%struct.MovieClip*, float) #2

declare dso_local void @BKE_tracking_camera_get_reconstructed_interpolate(%struct.MovieTracking*, %struct.MovieTrackingObject*, i32, [4 x float]*) #2

declare dso_local void @_va_mul_m4_series_4([4 x float]*, [4 x float]*, [4 x float]*, [4 x float]*) #2

declare dso_local void @translate_m4([4 x float]*, float, float, float) #2

declare dso_local void @BKE_tracking_get_camera_object_matrix(%struct.Scene*, %struct.Object*, [4 x float]*) #2

declare dso_local void @BKE_object_where_is_calc_mat4(%struct.Scene*, %struct.Object*, [4 x float]*) #2

declare dso_local void @BKE_movieclip_get_size(%struct.MovieClip*, %struct.MovieClipUser*, i32*, i32*) #2

declare dso_local %struct.MovieTrackingMarker* @BKE_tracking_marker_get(%struct.MovieTrackingTrack*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !12689 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12690, metadata !DIExpression()), !dbg !12691
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12692, metadata !DIExpression()), !dbg !12693
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !12694, metadata !DIExpression()), !dbg !12695
  %0 = load float*, float** %a.addr, align 8, !dbg !12696
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12696
  %1 = load float, float* %arrayidx, align 4, !dbg !12696
  %2 = load float*, float** %b.addr, align 8, !dbg !12697
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12697
  %3 = load float, float* %arrayidx1, align 4, !dbg !12697
  %add = fadd float %1, %3, !dbg !12698
  %4 = load float*, float** %r.addr, align 8, !dbg !12699
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !12699
  store float %add, float* %arrayidx2, align 4, !dbg !12700
  %5 = load float*, float** %a.addr, align 8, !dbg !12701
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !12701
  %6 = load float, float* %arrayidx3, align 4, !dbg !12701
  %7 = load float*, float** %b.addr, align 8, !dbg !12702
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !12702
  %8 = load float, float* %arrayidx4, align 4, !dbg !12702
  %add5 = fadd float %6, %8, !dbg !12703
  %9 = load float*, float** %r.addr, align 8, !dbg !12704
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !12704
  store float %add5, float* %arrayidx6, align 4, !dbg !12705
  ret void, !dbg !12706
}

declare dso_local void @BKE_tracking_undistort_v2(%struct.MovieTracking*, float*, float*) #2

declare dso_local void @BKE_camera_params_init(%struct.CameraParams*) #2

declare dso_local void @BKE_camera_params_from_object(%struct.CameraParams*, %struct.Object*) #2

declare dso_local i32 @BLI_bvhtree_ray_cast(%struct.BVHTree*, float*, float*, float, %struct.BVHTreeRayHit*, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @camerasolver_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !12707 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bCameraSolverConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !12708, metadata !DIExpression()), !dbg !12709
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !12710, metadata !DIExpression()), !dbg !12711
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !12712, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.declare(metadata %struct.bCameraSolverConstraint** %data, metadata !12714, metadata !DIExpression()), !dbg !12715
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12716
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !12717
  %1 = load i8*, i8** %data1, align 8, !dbg !12717
  %2 = bitcast i8* %1 to %struct.bCameraSolverConstraint*, !dbg !12716
  store %struct.bCameraSolverConstraint* %2, %struct.bCameraSolverConstraint** %data, align 8, !dbg !12715
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !12718
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12719
  %5 = load %struct.bCameraSolverConstraint*, %struct.bCameraSolverConstraint** %data, align 8, !dbg !12720
  %clip = getelementptr inbounds %struct.bCameraSolverConstraint, %struct.bCameraSolverConstraint* %5, i32 0, i32 0, !dbg !12721
  %6 = bitcast %struct.MovieClip** %clip to %struct.ID**, !dbg !12722
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !12723
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 1, i8* %7), !dbg !12718
  ret void, !dbg !12724
}

; Function Attrs: noinline nounwind uwtable
define internal void @camerasolver_new_data(i8* %cdata) #0 !dbg !12725 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bCameraSolverConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !12726, metadata !DIExpression()), !dbg !12727
  call void @llvm.dbg.declare(metadata %struct.bCameraSolverConstraint** %data, metadata !12728, metadata !DIExpression()), !dbg !12729
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !12730
  %1 = bitcast i8* %0 to %struct.bCameraSolverConstraint*, !dbg !12731
  store %struct.bCameraSolverConstraint* %1, %struct.bCameraSolverConstraint** %data, align 8, !dbg !12729
  %2 = load %struct.bCameraSolverConstraint*, %struct.bCameraSolverConstraint** %data, align 8, !dbg !12732
  %clip = getelementptr inbounds %struct.bCameraSolverConstraint, %struct.bCameraSolverConstraint* %2, i32 0, i32 0, !dbg !12733
  store %struct.MovieClip* null, %struct.MovieClip** %clip, align 8, !dbg !12734
  %3 = load %struct.bCameraSolverConstraint*, %struct.bCameraSolverConstraint** %data, align 8, !dbg !12735
  %flag = getelementptr inbounds %struct.bCameraSolverConstraint, %struct.bCameraSolverConstraint* %3, i32 0, i32 1, !dbg !12736
  %4 = load i32, i32* %flag, align 8, !dbg !12737
  %or = or i32 %4, 1, !dbg !12737
  store i32 %or, i32* %flag, align 8, !dbg !12737
  ret void, !dbg !12738
}

; Function Attrs: noinline nounwind uwtable
define internal void @camerasolver_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %UNUSED_targets) #0 !dbg !12739 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %UNUSED_targets.addr = alloca %struct.ListBase*, align 8
  %scene = alloca %struct.Scene*, align 8
  %data = alloca %struct.bCameraSolverConstraint*, align 8
  %clip = alloca %struct.MovieClip*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %obmat = alloca [4 x [4 x float]], align 16
  %tracking = alloca %struct.MovieTracking*, align 8
  %object = alloca %struct.MovieTrackingObject*, align 8
  %framenr = alloca i32, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !12740, metadata !DIExpression()), !dbg !12741
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !12742, metadata !DIExpression()), !dbg !12743
  store %struct.ListBase* %UNUSED_targets, %struct.ListBase** %UNUSED_targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %UNUSED_targets.addr, metadata !12744, metadata !DIExpression()), !dbg !12745
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12746, metadata !DIExpression()), !dbg !12747
  %0 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12748
  %scene1 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %0, i32 0, i32 0, !dbg !12749
  %1 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !12749
  store %struct.Scene* %1, %struct.Scene** %scene, align 8, !dbg !12747
  call void @llvm.dbg.declare(metadata %struct.bCameraSolverConstraint** %data, metadata !12750, metadata !DIExpression()), !dbg !12751
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12752
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !12753
  %3 = load i8*, i8** %data2, align 8, !dbg !12753
  %4 = bitcast i8* %3 to %struct.bCameraSolverConstraint*, !dbg !12752
  store %struct.bCameraSolverConstraint* %4, %struct.bCameraSolverConstraint** %data, align 8, !dbg !12751
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip, metadata !12754, metadata !DIExpression()), !dbg !12755
  %5 = load %struct.bCameraSolverConstraint*, %struct.bCameraSolverConstraint** %data, align 8, !dbg !12756
  %clip3 = getelementptr inbounds %struct.bCameraSolverConstraint, %struct.bCameraSolverConstraint* %5, i32 0, i32 0, !dbg !12757
  %6 = load %struct.MovieClip*, %struct.MovieClip** %clip3, align 8, !dbg !12757
  store %struct.MovieClip* %6, %struct.MovieClip** %clip, align 8, !dbg !12755
  %7 = load %struct.bCameraSolverConstraint*, %struct.bCameraSolverConstraint** %data, align 8, !dbg !12758
  %flag = getelementptr inbounds %struct.bCameraSolverConstraint, %struct.bCameraSolverConstraint* %7, i32 0, i32 1, !dbg !12760
  %8 = load i32, i32* %flag, align 8, !dbg !12760
  %and = and i32 %8, 1, !dbg !12761
  %tobool = icmp ne i32 %and, 0, !dbg !12761
  br i1 %tobool, label %if.then, label %if.end, !dbg !12762

if.then:                                          ; preds = %entry
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12763
  %clip4 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 41, !dbg !12764
  %10 = load %struct.MovieClip*, %struct.MovieClip** %clip4, align 8, !dbg !12764
  store %struct.MovieClip* %10, %struct.MovieClip** %clip, align 8, !dbg !12765
  br label %if.end, !dbg !12766

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12767
  %tobool5 = icmp ne %struct.MovieClip* %11, null, !dbg !12767
  br i1 %tobool5, label %if.then6, label %if.end16, !dbg !12769

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !12770, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obmat, metadata !12773, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.declare(metadata %struct.MovieTracking** %tracking, metadata !12775, metadata !DIExpression()), !dbg !12776
  %12 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12777
  %tracking7 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %12, i32 0, i32 11, !dbg !12778
  store %struct.MovieTracking* %tracking7, %struct.MovieTracking** %tracking, align 8, !dbg !12776
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingObject** %object, metadata !12779, metadata !DIExpression()), !dbg !12780
  %13 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !12781
  %call = call %struct.MovieTrackingObject* @BKE_tracking_object_get_camera(%struct.MovieTracking* %13), !dbg !12782
  store %struct.MovieTrackingObject* %call, %struct.MovieTrackingObject** %object, align 8, !dbg !12780
  call void @llvm.dbg.declare(metadata i32* %framenr, metadata !12783, metadata !DIExpression()), !dbg !12784
  %14 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12785
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12786
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 22, !dbg !12787
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !12788
  %16 = load i32, i32* %cfra, align 8, !dbg !12788
  %conv = sitofp i32 %16 to float, !dbg !12786
  %call8 = call float @BKE_movieclip_remap_scene_to_clip_frame(%struct.MovieClip* %14, float %conv), !dbg !12789
  %conv9 = fptosi float %call8 to i32, !dbg !12789
  store i32 %conv9, i32* %framenr, align 4, !dbg !12784
  %17 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !12790
  %18 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !12791
  %19 = load i32, i32* %framenr, align 4, !dbg !12792
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12793
  call void @BKE_tracking_camera_get_reconstructed_interpolate(%struct.MovieTracking* %17, %struct.MovieTrackingObject* %18, i32 %19, [4 x float]* %arraydecay), !dbg !12794
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12795
  %20 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12796
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %20, i32 0, i32 3, !dbg !12797
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !12796
  call void @copy_m4_m4([4 x float]* %arraydecay10, [4 x float]* %arraydecay11), !dbg !12798
  %21 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12799
  %matrix12 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %21, i32 0, i32 3, !dbg !12800
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix12, i64 0, i64 0, !dbg !12799
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12801
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12802
  call void @mul_m4_m4m4([4 x float]* %arraydecay13, [4 x float]* %arraydecay14, [4 x float]* %arraydecay15), !dbg !12803
  br label %if.end16, !dbg !12804

if.end16:                                         ; preds = %if.then6, %if.end
  ret void, !dbg !12805
}

; Function Attrs: noinline nounwind uwtable
define internal void @objectsolver_id_looper(%struct.bConstraint* %con, void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, i8* %userdata) #0 !dbg !12806 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %func.addr = alloca void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %data = alloca %struct.bObjectSolverConstraint*, align 8
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !12807, metadata !DIExpression()), !dbg !12808
  store void (%struct.bConstraint*, %struct.ID**, i8, i8*)* %func, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, metadata !12809, metadata !DIExpression()), !dbg !12810
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !12811, metadata !DIExpression()), !dbg !12812
  call void @llvm.dbg.declare(metadata %struct.bObjectSolverConstraint** %data, metadata !12813, metadata !DIExpression()), !dbg !12814
  %0 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12815
  %data1 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %0, i32 0, i32 2, !dbg !12816
  %1 = load i8*, i8** %data1, align 8, !dbg !12816
  %2 = bitcast i8* %1 to %struct.bObjectSolverConstraint*, !dbg !12815
  store %struct.bObjectSolverConstraint* %2, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12814
  %3 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !12817
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12818
  %5 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12819
  %clip = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %5, i32 0, i32 0, !dbg !12820
  %6 = bitcast %struct.MovieClip** %clip to %struct.ID**, !dbg !12821
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !12822
  call void %3(%struct.bConstraint* %4, %struct.ID** %6, i8 zeroext 0, i8* %7), !dbg !12817
  %8 = load void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)** %func.addr, align 8, !dbg !12823
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12824
  %10 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12825
  %camera = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %10, i32 0, i32 5, !dbg !12826
  %11 = bitcast %struct.Object** %camera to %struct.ID**, !dbg !12827
  %12 = load i8*, i8** %userdata.addr, align 8, !dbg !12828
  call void %8(%struct.bConstraint* %9, %struct.ID** %11, i8 zeroext 0, i8* %12), !dbg !12823
  ret void, !dbg !12829
}

; Function Attrs: noinline nounwind uwtable
define internal void @objectsolver_new_data(i8* %cdata) #0 !dbg !12830 {
entry:
  %cdata.addr = alloca i8*, align 8
  %data = alloca %struct.bObjectSolverConstraint*, align 8
  store i8* %cdata, i8** %cdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdata.addr, metadata !12831, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.declare(metadata %struct.bObjectSolverConstraint** %data, metadata !12833, metadata !DIExpression()), !dbg !12834
  %0 = load i8*, i8** %cdata.addr, align 8, !dbg !12835
  %1 = bitcast i8* %0 to %struct.bObjectSolverConstraint*, !dbg !12836
  store %struct.bObjectSolverConstraint* %1, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12834
  %2 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12837
  %clip = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %2, i32 0, i32 0, !dbg !12838
  store %struct.MovieClip* null, %struct.MovieClip** %clip, align 8, !dbg !12839
  %3 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12840
  %flag = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %3, i32 0, i32 1, !dbg !12841
  %4 = load i32, i32* %flag, align 8, !dbg !12842
  %or = or i32 %4, 1, !dbg !12842
  store i32 %or, i32* %flag, align 8, !dbg !12842
  %5 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12843
  %invmat = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %5, i32 0, i32 4, !dbg !12844
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !12843
  call void @unit_m4([4 x float]* %arraydecay), !dbg !12845
  ret void, !dbg !12846
}

; Function Attrs: noinline nounwind uwtable
define internal void @objectsolver_evaluate(%struct.bConstraint* %con, %struct.bConstraintOb* %cob, %struct.ListBase* %UNUSED_targets) #0 !dbg !12847 {
entry:
  %con.addr = alloca %struct.bConstraint*, align 8
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %UNUSED_targets.addr = alloca %struct.ListBase*, align 8
  %scene = alloca %struct.Scene*, align 8
  %data = alloca %struct.bObjectSolverConstraint*, align 8
  %clip = alloca %struct.MovieClip*, align 8
  %camob = alloca %struct.Object*, align 8
  %tracking = alloca %struct.MovieTracking*, align 8
  %object = alloca %struct.MovieTrackingObject*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %obmat = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  %cammat = alloca [4 x [4 x float]], align 16
  %camimat = alloca [4 x [4 x float]], align 16
  %parmat = alloca [4 x [4 x float]], align 16
  %framenr = alloca i32, align 4
  store %struct.bConstraint* %con, %struct.bConstraint** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con.addr, metadata !12848, metadata !DIExpression()), !dbg !12849
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !12850, metadata !DIExpression()), !dbg !12851
  store %struct.ListBase* %UNUSED_targets, %struct.ListBase** %UNUSED_targets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %UNUSED_targets.addr, metadata !12852, metadata !DIExpression()), !dbg !12853
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12854, metadata !DIExpression()), !dbg !12855
  %0 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12856
  %scene1 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %0, i32 0, i32 0, !dbg !12857
  %1 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !12857
  store %struct.Scene* %1, %struct.Scene** %scene, align 8, !dbg !12855
  call void @llvm.dbg.declare(metadata %struct.bObjectSolverConstraint** %data, metadata !12858, metadata !DIExpression()), !dbg !12859
  %2 = load %struct.bConstraint*, %struct.bConstraint** %con.addr, align 8, !dbg !12860
  %data2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %2, i32 0, i32 2, !dbg !12861
  %3 = load i8*, i8** %data2, align 8, !dbg !12861
  %4 = bitcast i8* %3 to %struct.bObjectSolverConstraint*, !dbg !12860
  store %struct.bObjectSolverConstraint* %4, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12859
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip, metadata !12862, metadata !DIExpression()), !dbg !12863
  %5 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12864
  %clip3 = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %5, i32 0, i32 0, !dbg !12865
  %6 = load %struct.MovieClip*, %struct.MovieClip** %clip3, align 8, !dbg !12865
  store %struct.MovieClip* %6, %struct.MovieClip** %clip, align 8, !dbg !12863
  call void @llvm.dbg.declare(metadata %struct.Object** %camob, metadata !12866, metadata !DIExpression()), !dbg !12867
  %7 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12868
  %camera = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %7, i32 0, i32 5, !dbg !12869
  %8 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !12869
  %tobool = icmp ne %struct.Object* %8, null, !dbg !12868
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12868

cond.true:                                        ; preds = %entry
  %9 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12870
  %camera4 = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %9, i32 0, i32 5, !dbg !12871
  %10 = load %struct.Object*, %struct.Object** %camera4, align 8, !dbg !12871
  br label %cond.end, !dbg !12868

cond.false:                                       ; preds = %entry
  %11 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12872
  %camera5 = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 2, !dbg !12873
  %12 = load %struct.Object*, %struct.Object** %camera5, align 8, !dbg !12873
  br label %cond.end, !dbg !12868

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %10, %cond.true ], [ %12, %cond.false ], !dbg !12868
  store %struct.Object* %cond, %struct.Object** %camob, align 8, !dbg !12867
  %13 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12874
  %flag = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %13, i32 0, i32 1, !dbg !12876
  %14 = load i32, i32* %flag, align 8, !dbg !12876
  %and = and i32 %14, 1, !dbg !12877
  %tobool6 = icmp ne i32 %and, 0, !dbg !12877
  br i1 %tobool6, label %if.then, label %if.end, !dbg !12878

if.then:                                          ; preds = %cond.end
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12879
  %clip7 = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 41, !dbg !12880
  %16 = load %struct.MovieClip*, %struct.MovieClip** %clip7, align 8, !dbg !12880
  store %struct.MovieClip* %16, %struct.MovieClip** %clip, align 8, !dbg !12881
  br label %if.end, !dbg !12882

if.end:                                           ; preds = %if.then, %cond.end
  %17 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12883
  %tobool8 = icmp ne %struct.Object* %17, null, !dbg !12883
  br i1 %tobool8, label %lor.lhs.false, label %if.then10, !dbg !12885

lor.lhs.false:                                    ; preds = %if.end
  %18 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12886
  %tobool9 = icmp ne %struct.MovieClip* %18, null, !dbg !12886
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !12887

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  br label %if.end44, !dbg !12888

if.end11:                                         ; preds = %lor.lhs.false
  %19 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12889
  %tobool12 = icmp ne %struct.MovieClip* %19, null, !dbg !12889
  br i1 %tobool12, label %if.then13, label %if.end44, !dbg !12891

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct.MovieTracking** %tracking, metadata !12892, metadata !DIExpression()), !dbg !12894
  %20 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12895
  %tracking14 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %20, i32 0, i32 11, !dbg !12896
  store %struct.MovieTracking* %tracking14, %struct.MovieTracking** %tracking, align 8, !dbg !12894
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingObject** %object, metadata !12897, metadata !DIExpression()), !dbg !12898
  %21 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !12899
  %22 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12900
  %object15 = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %22, i32 0, i32 3, !dbg !12901
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %object15, i64 0, i64 0, !dbg !12900
  %call = call %struct.MovieTrackingObject* @BKE_tracking_object_get_named(%struct.MovieTracking* %21, i8* %arraydecay), !dbg !12902
  store %struct.MovieTrackingObject* %call, %struct.MovieTrackingObject** %object, align 8, !dbg !12903
  %23 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !12904
  %tobool16 = icmp ne %struct.MovieTrackingObject* %23, null, !dbg !12904
  br i1 %tobool16, label %if.then17, label %if.end43, !dbg !12906

if.then17:                                        ; preds = %if.then13
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !12907, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obmat, metadata !12910, metadata !DIExpression()), !dbg !12911
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !12912, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %cammat, metadata !12914, metadata !DIExpression()), !dbg !12915
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %camimat, metadata !12916, metadata !DIExpression()), !dbg !12917
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %parmat, metadata !12918, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.declare(metadata i32* %framenr, metadata !12920, metadata !DIExpression()), !dbg !12921
  %24 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !12922
  %25 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12923
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %25, i32 0, i32 22, !dbg !12924
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !12925
  %26 = load i32, i32* %cfra, align 8, !dbg !12925
  %conv = sitofp i32 %26 to float, !dbg !12923
  %call18 = call float @BKE_movieclip_remap_scene_to_clip_frame(%struct.MovieClip* %24, float %conv), !dbg !12926
  %conv19 = fptosi float %call18 to i32, !dbg !12926
  store i32 %conv19, i32* %framenr, align 4, !dbg !12921
  %27 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12927
  %28 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12928
  %arraydecay20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %cammat, i64 0, i64 0, !dbg !12929
  call void @BKE_object_where_is_calc_mat4(%struct.Scene* %27, %struct.Object* %28, [4 x float]* %arraydecay20), !dbg !12930
  %29 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !12931
  %30 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !12932
  %31 = load i32, i32* %framenr, align 4, !dbg !12933
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12934
  call void @BKE_tracking_camera_get_reconstructed_interpolate(%struct.MovieTracking* %29, %struct.MovieTrackingObject* %30, i32 %31, [4 x float]* %arraydecay21), !dbg !12935
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %camimat, i64 0, i64 0, !dbg !12936
  %arraydecay23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %cammat, i64 0, i64 0, !dbg !12937
  %call24 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay22, [4 x float]* %arraydecay23), !dbg !12938
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parmat, i64 0, i64 0, !dbg !12939
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %cammat, i64 0, i64 0, !dbg !12940
  %32 = load %struct.bObjectSolverConstraint*, %struct.bObjectSolverConstraint** %data, align 8, !dbg !12941
  %invmat = getelementptr inbounds %struct.bObjectSolverConstraint, %struct.bObjectSolverConstraint* %32, i32 0, i32 4, !dbg !12942
  %arraydecay27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !12941
  call void @mul_m4_m4m4([4 x float]* %arraydecay25, [4 x float]* %arraydecay26, [4 x float]* %arraydecay27), !dbg !12943
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %cammat, i64 0, i64 0, !dbg !12944
  %33 = load %struct.Object*, %struct.Object** %camob, align 8, !dbg !12945
  %obmat29 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 47, !dbg !12946
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat29, i64 0, i64 0, !dbg !12945
  call void @copy_m4_m4([4 x float]* %arraydecay28, [4 x float]* %arraydecay30), !dbg !12947
  %arraydecay31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12948
  %34 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12949
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %34, i32 0, i32 3, !dbg !12950
  %arraydecay32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !12949
  call void @copy_m4_m4([4 x float]* %arraydecay31, [4 x float]* %arraydecay32), !dbg !12951
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !12952
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12953
  %call35 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay33, [4 x float]* %arraydecay34), !dbg !12954
  %35 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !12955
  %matrix36 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %35, i32 0, i32 3, !dbg !12955
  %arraydecay37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix36, i64 0, i64 0, !dbg !12955
  %arraydecay38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %cammat, i64 0, i64 0, !dbg !12955
  %arraydecay39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !12955
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %camimat, i64 0, i64 0, !dbg !12955
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parmat, i64 0, i64 0, !dbg !12955
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12955
  call void @_va_mul_m4_series_6([4 x float]* %arraydecay37, [4 x float]* %arraydecay38, [4 x float]* %arraydecay39, [4 x float]* %arraydecay40, [4 x float]* %arraydecay41, [4 x float]* %arraydecay42), !dbg !12955
  br label %if.end43, !dbg !12956

if.end43:                                         ; preds = %if.then17, %if.then13
  br label %if.end44, !dbg !12957

if.end44:                                         ; preds = %if.then10, %if.end43, %if.end11
  ret void, !dbg !12958
}

declare dso_local void @_va_mul_m4_series_6([4 x float]*, [4 x float]*, [4 x float]*, [4 x float]*, [4 x float]*, [4 x float]*) #2

declare dso_local void @id_us_min(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.bConstraint* @add_new_constraint_internal(i8* %name, i16 signext %type) #0 !dbg !12959 {
entry:
  %name.addr = alloca i8*, align 8
  %type.addr = alloca i16, align 2
  %con = alloca %struct.bConstraint*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %newName = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12962, metadata !DIExpression()), !dbg !12963
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !12964, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !12966, metadata !DIExpression()), !dbg !12967
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12968
  %call = call i8* %0(i64 120, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)), !dbg !12968
  %1 = bitcast i8* %call to %struct.bConstraint*, !dbg !12968
  store %struct.bConstraint* %1, %struct.bConstraint** %con, align 8, !dbg !12967
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !12969, metadata !DIExpression()), !dbg !12970
  %2 = load i16, i16* %type.addr, align 2, !dbg !12971
  %conv = sext i16 %2 to i32, !dbg !12971
  %call1 = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_from_type(i32 %conv), !dbg !12972
  store %struct.bConstraintTypeInfo* %call1, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !12970
  call void @llvm.dbg.declare(metadata i8** %newName, metadata !12973, metadata !DIExpression()), !dbg !12974
  %3 = load i16, i16* %type.addr, align 2, !dbg !12975
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !12976
  %type2 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 3, !dbg !12977
  store i16 %3, i16* %type2, align 8, !dbg !12978
  %5 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !12979
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %5, i32 0, i32 4, !dbg !12980
  %6 = load i16, i16* %flag, align 2, !dbg !12981
  %conv3 = sext i16 %6 to i32, !dbg !12981
  %or = or i32 %conv3, 1, !dbg !12981
  %conv4 = trunc i32 %or to i16, !dbg !12981
  store i16 %conv4, i16* %flag, align 2, !dbg !12981
  %7 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !12982
  %enforce = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %7, i32 0, i32 9, !dbg !12983
  store float 1.000000e+00, float* %enforce, align 8, !dbg !12984
  %8 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !12985
  %tobool = icmp ne %struct.bConstraintTypeInfo* %8, null, !dbg !12985
  br i1 %tobool, label %if.then, label %if.else, !dbg !12987

if.then:                                          ; preds = %entry
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12988
  %10 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !12990
  %size = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %10, i32 0, i32 1, !dbg !12991
  %11 = load i16, i16* %size, align 2, !dbg !12991
  %conv5 = sext i16 %11 to i64, !dbg !12990
  %12 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !12992
  %structName = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %12, i32 0, i32 3, !dbg !12993
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %structName, i64 0, i64 0, !dbg !12992
  %call6 = call i8* %9(i64 %conv5, i8* %arraydecay), !dbg !12988
  %13 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !12994
  %data = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %13, i32 0, i32 2, !dbg !12995
  store i8* %call6, i8** %data, align 8, !dbg !12996
  %14 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !12997
  %new_data = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %14, i32 0, i32 7, !dbg !12999
  %15 = load void (i8*)*, void (i8*)** %new_data, align 8, !dbg !12999
  %tobool7 = icmp ne void (i8*)* %15, null, !dbg !12997
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !13000

if.then8:                                         ; preds = %if.then
  %16 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !13001
  %new_data9 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %16, i32 0, i32 7, !dbg !13002
  %17 = load void (i8*)*, void (i8*)** %new_data9, align 8, !dbg !13002
  %18 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !13003
  %data10 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %18, i32 0, i32 2, !dbg !13004
  %19 = load i8*, i8** %data10, align 8, !dbg !13004
  call void %17(i8* %19), !dbg !13001
  br label %if.end, !dbg !13001

if.end:                                           ; preds = %if.then8, %if.then
  %20 = load i8*, i8** %name.addr, align 8, !dbg !13005
  %tobool11 = icmp ne i8* %20, null, !dbg !13005
  br i1 %tobool11, label %land.lhs.true, label %cond.false, !dbg !13006

land.lhs.true:                                    ; preds = %if.end
  %21 = load i8*, i8** %name.addr, align 8, !dbg !13007
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 0, !dbg !13007
  %22 = load i8, i8* %arrayidx, align 1, !dbg !13007
  %conv12 = zext i8 %22 to i32, !dbg !13007
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !13007
  br i1 %tobool13, label %cond.true, label %cond.false, !dbg !13008

cond.true:                                        ; preds = %land.lhs.true
  %23 = load i8*, i8** %name.addr, align 8, !dbg !13009
  br label %cond.end, !dbg !13008

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %24 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !13010
  %name14 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %24, i32 0, i32 2, !dbg !13010
  %arraydecay15 = getelementptr inbounds [32 x i8], [32 x i8]* %name14, i64 0, i64 0, !dbg !13010
  br label %cond.end, !dbg !13008

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %23, %cond.true ], [ %arraydecay15, %cond.false ], !dbg !13008
  store i8* %cond, i8** %newName, align 8, !dbg !13011
  br label %if.end25, !dbg !13012

if.else:                                          ; preds = %entry
  %25 = load i8*, i8** %name.addr, align 8, !dbg !13013
  %tobool16 = icmp ne i8* %25, null, !dbg !13013
  br i1 %tobool16, label %land.lhs.true17, label %cond.false22, !dbg !13015

land.lhs.true17:                                  ; preds = %if.else
  %26 = load i8*, i8** %name.addr, align 8, !dbg !13016
  %arrayidx18 = getelementptr inbounds i8, i8* %26, i64 0, !dbg !13016
  %27 = load i8, i8* %arrayidx18, align 1, !dbg !13016
  %conv19 = zext i8 %27 to i32, !dbg !13016
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !13016
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !13017

cond.true21:                                      ; preds = %land.lhs.true17
  %28 = load i8*, i8** %name.addr, align 8, !dbg !13018
  br label %cond.end23, !dbg !13017

cond.false22:                                     ; preds = %land.lhs.true17, %if.else
  br label %cond.end23, !dbg !13017

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i8* [ %28, %cond.true21 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), %cond.false22 ], !dbg !13017
  store i8* %cond24, i8** %newName, align 8, !dbg !13019
  br label %if.end25

if.end25:                                         ; preds = %cond.end23, %cond.end
  %29 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !13020
  %name26 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %29, i32 0, i32 7, !dbg !13021
  %arraydecay27 = getelementptr inbounds [64 x i8], [64 x i8]* %name26, i64 0, i64 0, !dbg !13020
  %30 = load i8*, i8** %newName, align 8, !dbg !13022
  %call28 = call i8* @BLI_strncpy(i8* %arraydecay27, i8* %30, i64 64), !dbg !13023
  %31 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !13024
  ret %struct.bConstraint* %31, !dbg !13025
}

declare dso_local void @id_us_plus(%struct.ID*) #2

declare dso_local void @id_lib_extern(%struct.ID*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2701, !2702, !2703}
!llvm.ident = !{!2704}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "CTI_INIT", scope: !2, file: !3, line: 4261, type: !420, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !398, globals: !2561, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/constraint.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !21, !27, !33, !43, !51, !83, !92, !104, !107, !121, !127, !138, !144, !150, !158, !165, !209, !217, !222, !225, !242, !247, !252, !260, !269, !279, !285, !297, !300, !305, !310, !314, !318, !323, !329, !332, !340, !346, !351, !361, !365, !370, !384, !387, !392, !395}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20}
!19 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eEulerRotationOrders", file: !34, line: 142, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "blender/source/blender/blenlib/BLI_math_rotation.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !{!36, !37, !38, !39, !40, !41, !42}
!36 = !DIEnumerator(name: "EULER_ORDER_DEFAULT", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "EULER_ORDER_XYZ", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "EULER_ORDER_XZY", value: 2, isUnsigned: true)
!39 = !DIEnumerator(name: "EULER_ORDER_YXZ", value: 3, isUnsigned: true)
!40 = !DIEnumerator(name: "EULER_ORDER_YZX", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "EULER_ORDER_ZXY", value: 5, isUnsigned: true)
!42 = !DIEnumerator(name: "EULER_ORDER_ZYX", value: 6, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_SpaceTypes", file: !44, line: 517, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!45 = !{!46, !47, !48, !49, !50}
!46 = !DIEnumerator(name: "CONSTRAINT_SPACE_WORLD", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "CONSTRAINT_SPACE_LOCAL", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "CONSTRAINT_SPACE_POSE", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "CONSTRAINT_SPACE_PARLOCAL", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "CONSTRAINT_SPACE_INVALID", value: 4, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Types", file: !44, line: 461, baseType: !7, size: 32, elements: !52)
!52 = !{!53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82}
!53 = !DIEnumerator(name: "CONSTRAINT_TYPE_NULL", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "CONSTRAINT_TYPE_CHILDOF", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRACKTO", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "CONSTRAINT_TYPE_KINEMATIC", value: 3, isUnsigned: true)
!57 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWPATH", value: 4, isUnsigned: true)
!58 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIMIT", value: 5, isUnsigned: true)
!59 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIMIT", value: 6, isUnsigned: true)
!60 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIMIT", value: 7, isUnsigned: true)
!61 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIKE", value: 8, isUnsigned: true)
!62 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIKE", value: 9, isUnsigned: true)
!63 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIKE", value: 10, isUnsigned: true)
!64 = !DIEnumerator(name: "CONSTRAINT_TYPE_PYTHON", value: 11, isUnsigned: true)
!65 = !DIEnumerator(name: "CONSTRAINT_TYPE_ACTION", value: 12, isUnsigned: true)
!66 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCKTRACK", value: 13, isUnsigned: true)
!67 = !DIEnumerator(name: "CONSTRAINT_TYPE_DISTLIMIT", value: 14, isUnsigned: true)
!68 = !DIEnumerator(name: "CONSTRAINT_TYPE_STRETCHTO", value: 15, isUnsigned: true)
!69 = !DIEnumerator(name: "CONSTRAINT_TYPE_MINMAX", value: 16, isUnsigned: true)
!70 = !DIEnumerator(name: "CONSTRAINT_TYPE_RIGIDBODYJOINT", value: 17, isUnsigned: true)
!71 = !DIEnumerator(name: "CONSTRAINT_TYPE_CLAMPTO", value: 18, isUnsigned: true)
!72 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSFORM", value: 19, isUnsigned: true)
!73 = !DIEnumerator(name: "CONSTRAINT_TYPE_SHRINKWRAP", value: 20, isUnsigned: true)
!74 = !DIEnumerator(name: "CONSTRAINT_TYPE_DAMPTRACK", value: 21, isUnsigned: true)
!75 = !DIEnumerator(name: "CONSTRAINT_TYPE_SPLINEIK", value: 22, isUnsigned: true)
!76 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSLIKE", value: 23, isUnsigned: true)
!77 = !DIEnumerator(name: "CONSTRAINT_TYPE_SAMEVOL", value: 24, isUnsigned: true)
!78 = !DIEnumerator(name: "CONSTRAINT_TYPE_PIVOT", value: 25, isUnsigned: true)
!79 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWTRACK", value: 26, isUnsigned: true)
!80 = !DIEnumerator(name: "CONSTRAINT_TYPE_CAMERASOLVER", value: 27, isUnsigned: true)
!81 = !DIEnumerator(name: "CONSTRAINT_TYPE_OBJECTSOLVER", value: 28, isUnsigned: true)
!82 = !DIEnumerator(name: "NUM_CONSTRAINT_TYPES", value: 29, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Flags", file: !44, line: 499, baseType: !7, size: 32, elements: !84)
!84 = !{!85, !86, !87, !88, !89, !90, !91}
!85 = !DIEnumerator(name: "CONSTRAINT_EXPAND", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "CONSTRAINT_DISABLE", value: 4, isUnsigned: true)
!87 = !DIEnumerator(name: "CONSTRAINT_ACTIVE", value: 16, isUnsigned: true)
!88 = !DIEnumerator(name: "CONSTRAINT_SPACEONCE", value: 64, isUnsigned: true)
!89 = !DIEnumerator(name: "CONSTRAINT_OWN_IPO", value: 128, isUnsigned: true)
!90 = !DIEnumerator(name: "CONSTRAINT_PROXY_LOCAL", value: 256, isUnsigned: true)
!91 = !DIEnumerator(name: "CONSTRAINT_OFF", value: 512, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eChildOf_Flags", file: !44, line: 759, baseType: !7, size: 32, elements: !93)
!93 = !{!94, !95, !96, !97, !98, !99, !100, !101, !102, !103}
!94 = !DIEnumerator(name: "CHILDOF_LOCX", value: 1, isUnsigned: true)
!95 = !DIEnumerator(name: "CHILDOF_LOCY", value: 2, isUnsigned: true)
!96 = !DIEnumerator(name: "CHILDOF_LOCZ", value: 4, isUnsigned: true)
!97 = !DIEnumerator(name: "CHILDOF_ROTX", value: 8, isUnsigned: true)
!98 = !DIEnumerator(name: "CHILDOF_ROTY", value: 16, isUnsigned: true)
!99 = !DIEnumerator(name: "CHILDOF_ROTZ", value: 32, isUnsigned: true)
!100 = !DIEnumerator(name: "CHILDOF_SIZEX", value: 64, isUnsigned: true)
!101 = !DIEnumerator(name: "CHILDOF_SIZEY", value: 128, isUnsigned: true)
!102 = !DIEnumerator(name: "CHILDOF_SIZEZ", value: 256, isUnsigned: true)
!103 = !DIEnumerator(name: "CHILDOF_ALL", value: 511, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "B_CONSTRAINT_TARGET_FLAG", file: !44, line: 100, baseType: !7, size: 32, elements: !105)
!105 = !{!106}
!106 = !DIEnumerator(name: "CONSTRAINT_TAR_TEMP", value: 1, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !108, line: 339, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!109 = !{!110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120}
!110 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!114 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!115 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!116 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!117 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!118 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!119 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!120 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "B_CONSTRAINT_OB_TYPE", file: !44, line: 105, baseType: !7, size: 32, elements: !122)
!122 = !{!123, !124, !125, !126}
!123 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_OBJECT", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_BONE", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_VERT", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_CV", value: 4, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !128, line: 94, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!129 = !{!130, !131, !132, !133, !134, !135, !136, !137}
!130 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!135 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!136 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!137 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !128, line: 116, baseType: !7, size: 32, elements: !139)
!139 = !{!140, !141, !142, !143}
!140 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!141 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!142 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!143 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !128, line: 131, baseType: !7, size: 32, elements: !145)
!145 = !{!146, !147, !148, !149}
!146 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!147 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!148 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!149 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !128, line: 123, baseType: !7, size: 32, elements: !151)
!151 = !{!152, !153, !154, !155, !156, !157}
!152 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!153 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!154 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!155 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!156 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!157 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!158 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !128, line: 182, baseType: !7, size: 32, elements: !159)
!159 = !{!160, !161, !162, !163, !164}
!160 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!164 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !166, line: 76, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!167 = !{!168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208}
!168 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!170 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!171 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!172 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!173 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!174 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!175 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!176 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!177 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!178 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!179 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!180 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!181 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!182 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!183 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!184 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!185 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!186 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!187 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!188 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!189 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!190 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!191 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!192 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!193 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!194 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!195 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!196 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!197 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!198 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!199 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!200 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!201 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!202 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!203 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!204 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!205 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!206 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!207 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!208 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eTrackToAxis_Modes", file: !44, line: 608, baseType: !7, size: 32, elements: !210)
!210 = !{!211, !212, !213, !214, !215, !216}
!211 = !DIEnumerator(name: "TRACK_X", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "TRACK_Y", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "TRACK_Z", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "TRACK_nX", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "TRACK_nY", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "TRACK_nZ", value: 5, isUnsigned: true)
!217 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUpAxis_Modes", file: !44, line: 601, baseType: !7, size: 32, elements: !218)
!218 = !{!219, !220, !221}
!219 = !DIEnumerator(name: "UP_X", value: 0, isUnsigned: true)
!220 = !DIEnumerator(name: "UP_Y", value: 1, isUnsigned: true)
!221 = !DIEnumerator(name: "UP_Z", value: 2, isUnsigned: true)
!222 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eTrackTo_Flags", file: !44, line: 625, baseType: !7, size: 32, elements: !223)
!223 = !{!224}
!224 = !DIEnumerator(name: "TARGET_Z_UP", value: 1, isUnsigned: true)
!225 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eKinematic_Flags", file: !44, line: 658, baseType: !7, size: 32, elements: !226)
!226 = !{!227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241}
!227 = !DIEnumerator(name: "CONSTRAINT_IK_TIP", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "CONSTRAINT_IK_ROT", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "CONSTRAINT_IK_AUTO", value: 4, isUnsigned: true)
!230 = !DIEnumerator(name: "CONSTRAINT_IK_TEMP", value: 8, isUnsigned: true)
!231 = !DIEnumerator(name: "CONSTRAINT_IK_STRETCH", value: 16, isUnsigned: true)
!232 = !DIEnumerator(name: "CONSTRAINT_IK_POS", value: 32, isUnsigned: true)
!233 = !DIEnumerator(name: "CONSTRAINT_IK_SETANGLE", value: 64, isUnsigned: true)
!234 = !DIEnumerator(name: "CONSTRAINT_IK_GETANGLE", value: 128, isUnsigned: true)
!235 = !DIEnumerator(name: "CONSTRAINT_IK_NO_POS_X", value: 256, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRAINT_IK_NO_POS_Y", value: 512, isUnsigned: true)
!237 = !DIEnumerator(name: "CONSTRAINT_IK_NO_POS_Z", value: 1024, isUnsigned: true)
!238 = !DIEnumerator(name: "CONSTRAINT_IK_NO_ROT_X", value: 2048, isUnsigned: true)
!239 = !DIEnumerator(name: "CONSTRAINT_IK_NO_ROT_Y", value: 4096, isUnsigned: true)
!240 = !DIEnumerator(name: "CONSTRAINT_IK_NO_ROT_Z", value: 8192, isUnsigned: true)
!241 = !DIEnumerator(name: "CONSTRAINT_IK_TARGETAXIS", value: 16384, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFollowPath_Flags", file: !44, line: 618, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245, !246}
!244 = !DIEnumerator(name: "FOLLOWPATH_FOLLOW", value: 1, isUnsigned: true)
!245 = !DIEnumerator(name: "FOLLOWPATH_STATIC", value: 2, isUnsigned: true)
!246 = !DIEnumerator(name: "FOLLOWPATH_RADIUS", value: 4, isUnsigned: true)
!247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eRotLimit_Flags", file: !44, line: 730, baseType: !7, size: 32, elements: !248)
!248 = !{!249, !250, !251}
!249 = !DIEnumerator(name: "LIMIT_XROT", value: 1, isUnsigned: true)
!250 = !DIEnumerator(name: "LIMIT_YROT", value: 2, isUnsigned: true)
!251 = !DIEnumerator(name: "LIMIT_ZROT", value: 4, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eTransformLimits_Flags", file: !44, line: 720, baseType: !7, size: 32, elements: !253)
!253 = !{!254, !255, !256, !257, !258, !259}
!254 = !DIEnumerator(name: "LIMIT_XMIN", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "LIMIT_XMAX", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "LIMIT_YMIN", value: 4, isUnsigned: true)
!257 = !DIEnumerator(name: "LIMIT_YMAX", value: 8, isUnsigned: true)
!258 = !DIEnumerator(name: "LIMIT_ZMIN", value: 16, isUnsigned: true)
!259 = !DIEnumerator(name: "LIMIT_ZMAX", value: 32, isUnsigned: true)
!260 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eCopyRotation_Flags", file: !44, line: 542, baseType: !7, size: 32, elements: !261)
!261 = !{!262, !263, !264, !265, !266, !267, !268}
!262 = !DIEnumerator(name: "ROTLIKE_X", value: 1, isUnsigned: true)
!263 = !DIEnumerator(name: "ROTLIKE_Y", value: 2, isUnsigned: true)
!264 = !DIEnumerator(name: "ROTLIKE_Z", value: 4, isUnsigned: true)
!265 = !DIEnumerator(name: "ROTLIKE_X_INVERT", value: 16, isUnsigned: true)
!266 = !DIEnumerator(name: "ROTLIKE_Y_INVERT", value: 32, isUnsigned: true)
!267 = !DIEnumerator(name: "ROTLIKE_Z_INVERT", value: 64, isUnsigned: true)
!268 = !DIEnumerator(name: "ROTLIKE_OFFSET", value: 128, isUnsigned: true)
!269 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eCopyLocation_Flags", file: !44, line: 553, baseType: !7, size: 32, elements: !270)
!270 = !{!271, !272, !273, !274, !275, !276, !277, !278}
!271 = !DIEnumerator(name: "LOCLIKE_X", value: 1, isUnsigned: true)
!272 = !DIEnumerator(name: "LOCLIKE_Y", value: 2, isUnsigned: true)
!273 = !DIEnumerator(name: "LOCLIKE_Z", value: 4, isUnsigned: true)
!274 = !DIEnumerator(name: "LOCLIKE_TIP", value: 8, isUnsigned: true)
!275 = !DIEnumerator(name: "LOCLIKE_X_INVERT", value: 16, isUnsigned: true)
!276 = !DIEnumerator(name: "LOCLIKE_Y_INVERT", value: 32, isUnsigned: true)
!277 = !DIEnumerator(name: "LOCLIKE_Z_INVERT", value: 64, isUnsigned: true)
!278 = !DIEnumerator(name: "LOCLIKE_OFFSET", value: 128, isUnsigned: true)
!279 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eCopyScale_Flags", file: !44, line: 566, baseType: !7, size: 32, elements: !280)
!280 = !{!281, !282, !283, !284}
!281 = !DIEnumerator(name: "SIZELIKE_X", value: 1, isUnsigned: true)
!282 = !DIEnumerator(name: "SIZELIKE_Y", value: 2, isUnsigned: true)
!283 = !DIEnumerator(name: "SIZELIKE_Z", value: 4, isUnsigned: true)
!284 = !DIEnumerator(name: "SIZELIKE_OFFSET", value: 8, isUnsigned: true)
!285 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !286, line: 123, baseType: !7, size: 32, elements: !287)
!286 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!287 = !{!288, !289, !290, !291, !292, !293, !294, !295, !296}
!288 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!289 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!290 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!291 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!292 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!293 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!294 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!295 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!296 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!297 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eActionConstraint_Flags", file: !44, line: 588, baseType: !7, size: 32, elements: !298)
!298 = !{!299}
!299 = !DIEnumerator(name: "ACTCON_BONE_USE_OBJECT_ACTION", value: 1, isUnsigned: true)
!300 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eLockAxis_Modes", file: !44, line: 594, baseType: !7, size: 32, elements: !301)
!301 = !{!302, !303, !304}
!302 = !DIEnumerator(name: "LOCK_X", value: 0, isUnsigned: true)
!303 = !DIEnumerator(name: "LOCK_Y", value: 1, isUnsigned: true)
!304 = !DIEnumerator(name: "LOCK_Z", value: 2, isUnsigned: true)
!305 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eDistLimit_Modes", file: !44, line: 746, baseType: !7, size: 32, elements: !306)
!306 = !{!307, !308, !309}
!307 = !DIEnumerator(name: "LIMITDIST_INSIDE", value: 0, isUnsigned: true)
!308 = !DIEnumerator(name: "LIMITDIST_OUTSIDE", value: 1, isUnsigned: true)
!309 = !DIEnumerator(name: "LIMITDIST_ONSURFACE", value: 2, isUnsigned: true)
!310 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eDistLimit_Flag", file: !44, line: 738, baseType: !7, size: 32, elements: !311)
!311 = !{!312, !313}
!312 = !DIEnumerator(name: "LIMITDIST_USESOFT", value: 1, isUnsigned: true)
!313 = !DIEnumerator(name: "LIMITDIST_TRANSFORM", value: 2, isUnsigned: true)
!314 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eStretchTo_Flags", file: !44, line: 828, baseType: !7, size: 32, elements: !315)
!315 = !{!316, !317}
!316 = !DIEnumerator(name: "STRETCHTOCON_USE_BULGE_MIN", value: 1, isUnsigned: true)
!317 = !DIEnumerator(name: "STRETCHTOCON_USE_BULGE_MAX", value: 2, isUnsigned: true)
!318 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFloor_Flags", file: !44, line: 705, baseType: !7, size: 32, elements: !319)
!319 = !{!320, !321, !322}
!320 = !DIEnumerator(name: "MINMAX_STICKY", value: 1, isUnsigned: true)
!321 = !DIEnumerator(name: "MINMAX_STUCK", value: 2, isUnsigned: true)
!322 = !DIEnumerator(name: "MINMAX_USEROT", value: 4, isUnsigned: true)
!323 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eClampTo_Modes", file: !44, line: 645, baseType: !7, size: 32, elements: !324)
!324 = !{!325, !326, !327, !328}
!325 = !DIEnumerator(name: "CLAMPTO_AUTO", value: 0, isUnsigned: true)
!326 = !DIEnumerator(name: "CLAMPTO_X", value: 1, isUnsigned: true)
!327 = !DIEnumerator(name: "CLAMPTO_Y", value: 2, isUnsigned: true)
!328 = !DIEnumerator(name: "CLAMPTO_Z", value: 3, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eClampTo_Flags", file: !44, line: 653, baseType: !7, size: 32, elements: !330)
!330 = !{!331}
!331 = !DIEnumerator(name: "CLAMPTO_CYCLIC", value: 1, isUnsigned: true)
!332 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !108, line: 420, baseType: !7, size: 32, elements: !333)
!333 = !{!334, !335, !336, !337, !338, !339}
!334 = !DIEnumerator(name: "OB_POSX", value: 0, isUnsigned: true)
!335 = !DIEnumerator(name: "OB_POSY", value: 1, isUnsigned: true)
!336 = !DIEnumerator(name: "OB_POSZ", value: 2, isUnsigned: true)
!337 = !DIEnumerator(name: "OB_NEGX", value: 3, isUnsigned: true)
!338 = !DIEnumerator(name: "OB_NEGY", value: 4, isUnsigned: true)
!339 = !DIEnumerator(name: "OB_NEGZ", value: 5, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !341, line: 758, baseType: !7, size: 32, elements: !342)
!341 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!342 = !{!343, !344, !345}
!343 = !DIEnumerator(name: "MOD_SHRINKWRAP_NEAREST_SURFACE", value: 0, isUnsigned: true)
!344 = !DIEnumerator(name: "MOD_SHRINKWRAP_PROJECT", value: 1, isUnsigned: true)
!345 = !DIEnumerator(name: "MOD_SHRINKWRAP_NEAREST_VERTEX", value: 2, isUnsigned: true)
!346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSameVolume_Modes", file: !44, line: 581, baseType: !7, size: 32, elements: !347)
!347 = !{!348, !349, !350}
!348 = !DIEnumerator(name: "SAMEVOL_X", value: 0, isUnsigned: true)
!349 = !DIEnumerator(name: "SAMEVOL_Y", value: 1, isUnsigned: true)
!350 = !DIEnumerator(name: "SAMEVOL_Z", value: 2, isUnsigned: true)
!351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePivotConstraint_Axis", file: !44, line: 774, baseType: !352, size: 32, elements: !353)
!352 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!353 = !{!354, !355, !356, !357, !358, !359, !360}
!354 = !DIEnumerator(name: "PIVOTCON_AXIS_NONE", value: -1)
!355 = !DIEnumerator(name: "PIVOTCON_AXIS_X_NEG", value: 0)
!356 = !DIEnumerator(name: "PIVOTCON_AXIS_Y_NEG", value: 1)
!357 = !DIEnumerator(name: "PIVOTCON_AXIS_Z_NEG", value: 2)
!358 = !DIEnumerator(name: "PIVOTCON_AXIS_X", value: 3)
!359 = !DIEnumerator(name: "PIVOTCON_AXIS_Y", value: 4)
!360 = !DIEnumerator(name: "PIVOTCON_AXIS_Z", value: 5)
!361 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePivotConstraint_Flag", file: !44, line: 794, baseType: !7, size: 32, elements: !362)
!362 = !{!363, !364}
!363 = !DIEnumerator(name: "PIVOTCON_FLAG_OFFSET_ABS", value: 1, isUnsigned: true)
!364 = !DIEnumerator(name: "PIVOTCON_FLAG_ROTACT_NEG", value: 2, isUnsigned: true)
!365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFollowTrack_Flags", file: !44, line: 801, baseType: !7, size: 32, elements: !366)
!366 = !{!367, !368, !369}
!367 = !DIEnumerator(name: "FOLLOWTRACK_ACTIVECLIP", value: 1, isUnsigned: true)
!368 = !DIEnumerator(name: "FOLLOWTRACK_USE_3D_POSITION", value: 2, isUnsigned: true)
!369 = !DIEnumerator(name: "FOLLOWTRACK_USE_UNDISTORTION", value: 4, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !371, line: 380, baseType: !7, size: 32, elements: !372)
!371 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!372 = !{!373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!373 = !DIEnumerator(name: "TRACK_HAS_BUNDLE", value: 2, isUnsigned: true)
!374 = !DIEnumerator(name: "TRACK_DISABLE_RED", value: 4, isUnsigned: true)
!375 = !DIEnumerator(name: "TRACK_DISABLE_GREEN", value: 8, isUnsigned: true)
!376 = !DIEnumerator(name: "TRACK_DISABLE_BLUE", value: 16, isUnsigned: true)
!377 = !DIEnumerator(name: "TRACK_HIDDEN", value: 32, isUnsigned: true)
!378 = !DIEnumerator(name: "TRACK_LOCKED", value: 64, isUnsigned: true)
!379 = !DIEnumerator(name: "TRACK_CUSTOMCOLOR", value: 128, isUnsigned: true)
!380 = !DIEnumerator(name: "TRACK_USE_2D_STAB", value: 256, isUnsigned: true)
!381 = !DIEnumerator(name: "TRACK_PREVIEW_GRAYSCALE", value: 512, isUnsigned: true)
!382 = !DIEnumerator(name: "TRACK_DOPE_SEL", value: 1024, isUnsigned: true)
!383 = !DIEnumerator(name: "TRACK_PREVIEW_ALPHA", value: 2048, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !371, line: 473, baseType: !7, size: 32, elements: !385)
!385 = !{!386}
!386 = !DIEnumerator(name: "TRACKING_OBJECT_CAMERA", value: 1, isUnsigned: true)
!387 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFollowTrack_FrameMethod", file: !44, line: 807, baseType: !7, size: 32, elements: !388)
!388 = !{!389, !390, !391}
!389 = !DIEnumerator(name: "FOLLOWTRACK_FRAME_STRETCH", value: 0, isUnsigned: true)
!390 = !DIEnumerator(name: "FOLLOWTRACK_FRAME_FIT", value: 1, isUnsigned: true)
!391 = !DIEnumerator(name: "FOLLOWTRACK_FRAME_CROP", value: 2, isUnsigned: true)
!392 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eCameraSolver_Flags", file: !44, line: 814, baseType: !7, size: 32, elements: !393)
!393 = !{!394}
!394 = !DIEnumerator(name: "CAMERASOLVER_ACTIVECLIP", value: 1, isUnsigned: true)
!395 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eObjectSolver_Flags", file: !44, line: 819, baseType: !7, size: 32, elements: !396)
!396 = !{!397}
!397 = !DIEnumerator(name: "OBJECTSOLVER_ACTIVECLIP", value: 1, isUnsigned: true)
!398 = !{!399, !431, !2242, !2244, !2258, !2259, !417, !857, !2268, !2320, !420, !467, !2330, !2349, !2359, !2367, !2375, !2383, !2394, !2408, !2416, !2427, !2441, !2455, !352, !2476, !2498, !2509, !2517, !2527, !2533, !2544, !2551}
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !401, line: 243, baseType: !402)
!401 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !401, line: 187, size: 4352, elements: !403)
!403 = !{!404, !406, !407, !443, !444, !445, !446, !447, !448, !449, !450, !451, !455, !500, !501, !502, !503, !504, !520, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !402, file: !401, line: 188, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !402, file: !401, line: 188, baseType: !405, size: 64, offset: 64)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !402, file: !401, line: 190, baseType: !408, size: 64, offset: 128)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !410, line: 75, baseType: !411)
!410 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !410, line: 62, size: 1024, elements: !412)
!412 = !{!413, !415, !416, !418, !419, !421, !425, !426, !441, !442}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !410, line: 63, baseType: !414, size: 64)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !411, file: !410, line: 63, baseType: !414, size: 64, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !411, file: !410, line: 64, baseType: !417, size: 8, offset: 128)
!417 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !411, file: !410, line: 64, baseType: !417, size: 8, offset: 136)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !411, file: !410, line: 65, baseType: !420, size: 16, offset: 144)
!420 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !411, file: !410, line: 66, baseType: !422, size: 512, offset: 160)
!422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 512, elements: !423)
!423 = !{!424}
!424 = !DISubrange(count: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !411, file: !410, line: 67, baseType: !352, size: 32, offset: 672)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !411, file: !410, line: 69, baseType: !427, size: 256, offset: 704)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !410, line: 60, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !410, line: 48, size: 256, elements: !429)
!429 = !{!430, !432, !439, !440}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !428, file: !410, line: 49, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !428, file: !410, line: 58, baseType: !433, size: 128, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !434, line: 71, baseType: !435)
!434 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !434, line: 69, size: 128, elements: !436)
!436 = !{!437, !438}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !435, file: !434, line: 70, baseType: !431, size: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !435, file: !434, line: 70, baseType: !431, size: 64, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !428, file: !410, line: 59, baseType: !352, size: 32, offset: 192)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !428, file: !410, line: 59, baseType: !352, size: 32, offset: 224)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !411, file: !410, line: 70, baseType: !352, size: 32, offset: 960)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !411, file: !410, line: 74, baseType: !352, size: 32, offset: 992)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !402, file: !401, line: 192, baseType: !433, size: 128, offset: 192)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !402, file: !401, line: 193, baseType: !422, size: 512, offset: 320)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !402, file: !401, line: 195, baseType: !420, size: 16, offset: 832)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !402, file: !401, line: 196, baseType: !420, size: 16, offset: 848)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !402, file: !401, line: 197, baseType: !420, size: 16, offset: 864)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !402, file: !401, line: 198, baseType: !420, size: 16, offset: 880)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !402, file: !401, line: 199, baseType: !417, size: 8, offset: 896)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !402, file: !401, line: 200, baseType: !417, size: 8, offset: 904)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !402, file: !401, line: 201, baseType: !452, size: 48, offset: 912)
!452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 48, elements: !453)
!453 = !{!454}
!454 = !DISubrange(count: 6)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !402, file: !401, line: 203, baseType: !456, size: 64, offset: 960)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !458, line: 48, size: 2624, elements: !459)
!458 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!459 = !{!460, !461, !462, !463, !464, !465, !466, !468, !472, !473, !476, !477, !478, !479, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !457, file: !458, line: 49, baseType: !456, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !457, file: !458, line: 49, baseType: !456, size: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !457, file: !458, line: 50, baseType: !408, size: 64, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !457, file: !458, line: 51, baseType: !456, size: 64, offset: 192)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !457, file: !458, line: 52, baseType: !433, size: 128, offset: 256)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !457, file: !458, line: 53, baseType: !422, size: 512, offset: 384)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !457, file: !458, line: 55, baseType: !467, size: 32, offset: 896)
!467 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !457, file: !458, line: 56, baseType: !469, size: 96, offset: 928)
!469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 96, elements: !470)
!470 = !{!471}
!471 = !DISubrange(count: 3)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !457, file: !458, line: 57, baseType: !469, size: 96, offset: 1024)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !457, file: !458, line: 58, baseType: !474, size: 288, offset: 1120)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 288, elements: !475)
!475 = !{!471, !471}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !457, file: !458, line: 60, baseType: !352, size: 32, offset: 1408)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !457, file: !458, line: 62, baseType: !469, size: 96, offset: 1440)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !457, file: !458, line: 63, baseType: !469, size: 96, offset: 1536)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !457, file: !458, line: 64, baseType: !480, size: 512, offset: 1632)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 512, elements: !481)
!481 = !{!482, !482}
!482 = !DISubrange(count: 4)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !457, file: !458, line: 65, baseType: !467, size: 32, offset: 2144)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !457, file: !458, line: 67, baseType: !467, size: 32, offset: 2176)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !457, file: !458, line: 67, baseType: !467, size: 32, offset: 2208)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !457, file: !458, line: 68, baseType: !467, size: 32, offset: 2240)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !457, file: !458, line: 68, baseType: !467, size: 32, offset: 2272)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !457, file: !458, line: 68, baseType: !467, size: 32, offset: 2304)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !457, file: !458, line: 69, baseType: !467, size: 32, offset: 2336)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !457, file: !458, line: 69, baseType: !467, size: 32, offset: 2368)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !457, file: !458, line: 70, baseType: !467, size: 32, offset: 2400)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !457, file: !458, line: 70, baseType: !467, size: 32, offset: 2432)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !457, file: !458, line: 72, baseType: !469, size: 96, offset: 2464)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !457, file: !458, line: 73, baseType: !352, size: 32, offset: 2560)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !457, file: !458, line: 74, baseType: !420, size: 16, offset: 2592)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !457, file: !458, line: 75, baseType: !497, size: 16, offset: 2608)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 16, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 1)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !402, file: !401, line: 204, baseType: !405, size: 64, offset: 1024)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !402, file: !401, line: 205, baseType: !405, size: 64, offset: 1088)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !402, file: !401, line: 207, baseType: !435, size: 128, offset: 1152)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !402, file: !401, line: 208, baseType: !435, size: 128, offset: 1280)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !402, file: !401, line: 210, baseType: !505, size: 64, offset: 1408)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !401, line: 80, baseType: !507)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !401, line: 72, size: 192, elements: !508)
!508 = !{!509, !516, !517, !518, !519}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !507, file: !401, line: 73, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !401, line: 59, baseType: !512)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !401, line: 56, size: 128, elements: !513)
!513 = !{!514, !515}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !512, file: !401, line: 57, baseType: !469, size: 96)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !512, file: !401, line: 58, baseType: !352, size: 32, offset: 96)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !507, file: !401, line: 74, baseType: !352, size: 32, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !507, file: !401, line: 76, baseType: !352, size: 32, offset: 96)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !507, file: !401, line: 77, baseType: !352, size: 32, offset: 128)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !507, file: !401, line: 79, baseType: !352, size: 32, offset: 160)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !402, file: !401, line: 211, baseType: !521, size: 64, offset: 1472)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !108, line: 115, size: 11392, elements: !523)
!523 = !{!524, !560, !563, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !580, !590, !603, !604, !645, !646, !649, !650, !651, !652, !653, !654, !655, !656, !657, !661, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !739, !740, !741, !742, !743, !744, !745, !746, !747, !750, !753, !756, !757, !758, !759, !760, !763, !786, !1274, !1275, !1281, !1282, !1283, !1284, !1285, !1286, !1288, !1291, !1294, !1296, !2209, !2210}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !522, file: !108, line: 116, baseType: !525, size: 960)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !410, line: 130, baseType: !526)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !410, line: 117, size: 960, elements: !527)
!527 = !{!528, !529, !530, !532, !551, !555, !556, !557, !558, !559}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !526, file: !410, line: 118, baseType: !431, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !526, file: !410, line: 118, baseType: !431, size: 64, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !526, file: !410, line: 119, baseType: !531, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !526, file: !410, line: 120, baseType: !533, size: 64, offset: 192)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !410, line: 136, size: 17600, elements: !535)
!535 = !{!536, !537, !539, !542, !546, !547, !548}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !534, file: !410, line: 137, baseType: !525, size: 960)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !534, file: !410, line: 138, baseType: !538, size: 64, offset: 960)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !534, file: !410, line: 139, baseType: !540, size: 64, offset: 1024)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !410, line: 43, flags: DIFlagFwdDecl)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !534, file: !410, line: 140, baseType: !543, size: 8192, offset: 1088)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 8192, elements: !544)
!544 = !{!545}
!545 = !DISubrange(count: 1024)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !534, file: !410, line: 141, baseType: !543, size: 8192, offset: 9280)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !534, file: !410, line: 148, baseType: !533, size: 64, offset: 17472)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !534, file: !410, line: 150, baseType: !549, size: 64, offset: 17536)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !410, line: 45, flags: DIFlagFwdDecl)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !526, file: !410, line: 121, baseType: !552, size: 528, offset: 256)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 528, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 66)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !526, file: !410, line: 126, baseType: !420, size: 16, offset: 784)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !526, file: !410, line: 127, baseType: !352, size: 32, offset: 800)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !526, file: !410, line: 128, baseType: !352, size: 32, offset: 832)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !526, file: !410, line: 128, baseType: !352, size: 32, offset: 864)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !526, file: !410, line: 129, baseType: !408, size: 64, offset: 896)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !522, file: !108, line: 117, baseType: !561, size: 64, offset: 960)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !458, line: 37, flags: DIFlagFwdDecl)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !522, file: !108, line: 119, baseType: !564, size: 64, offset: 1024)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !108, line: 57, flags: DIFlagFwdDecl)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !522, file: !108, line: 121, baseType: !420, size: 16, offset: 1088)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !522, file: !108, line: 121, baseType: !420, size: 16, offset: 1104)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !522, file: !108, line: 122, baseType: !352, size: 32, offset: 1120)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !522, file: !108, line: 122, baseType: !352, size: 32, offset: 1152)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !522, file: !108, line: 122, baseType: !352, size: 32, offset: 1184)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !522, file: !108, line: 123, baseType: !422, size: 512, offset: 1216)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !522, file: !108, line: 124, baseType: !521, size: 64, offset: 1728)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !522, file: !108, line: 124, baseType: !521, size: 64, offset: 1792)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !522, file: !108, line: 127, baseType: !521, size: 64, offset: 1856)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !522, file: !108, line: 127, baseType: !521, size: 64, offset: 1920)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !522, file: !108, line: 127, baseType: !521, size: 64, offset: 1984)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !522, file: !108, line: 128, baseType: !578, size: 64, offset: 2048)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !44, line: 42, flags: DIFlagFwdDecl)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !522, file: !108, line: 130, baseType: !581, size: 64, offset: 2112)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !108, line: 97, size: 832, elements: !583)
!583 = !{!584, !588, !589}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !582, file: !108, line: 98, baseType: !585, size: 768)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 768, elements: !586)
!586 = !{!587, !471}
!587 = !DISubrange(count: 8)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !582, file: !108, line: 99, baseType: !352, size: 32, offset: 768)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !582, file: !108, line: 99, baseType: !352, size: 32, offset: 800)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !522, file: !108, line: 131, baseType: !591, size: 64, offset: 2176)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !401, line: 486, size: 1600, elements: !593)
!593 = !{!594, !595, !596, !597, !598, !599, !600, !601, !602}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !592, file: !401, line: 487, baseType: !525, size: 960)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !592, file: !401, line: 489, baseType: !433, size: 128, offset: 960)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !592, file: !401, line: 490, baseType: !433, size: 128, offset: 1088)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !592, file: !401, line: 491, baseType: !433, size: 128, offset: 1216)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !592, file: !401, line: 492, baseType: !433, size: 128, offset: 1344)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !592, file: !401, line: 494, baseType: !352, size: 32, offset: 1472)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !592, file: !401, line: 495, baseType: !352, size: 32, offset: 1504)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !592, file: !401, line: 497, baseType: !352, size: 32, offset: 1536)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !592, file: !401, line: 498, baseType: !352, size: 32, offset: 1568)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !522, file: !108, line: 132, baseType: !591, size: 64, offset: 2240)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !522, file: !108, line: 133, baseType: !605, size: 64, offset: 2304)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !401, line: 334, size: 1728, elements: !607)
!607 = !{!608, !609, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !644}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !606, file: !401, line: 335, baseType: !433, size: 128)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !606, file: !401, line: 336, baseType: !610, size: 64, offset: 128)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !401, line: 47, flags: DIFlagFwdDecl)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !606, file: !401, line: 338, baseType: !420, size: 16, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !606, file: !401, line: 338, baseType: !420, size: 16, offset: 208)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !606, file: !401, line: 339, baseType: !7, size: 32, offset: 224)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !606, file: !401, line: 340, baseType: !352, size: 32, offset: 256)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !606, file: !401, line: 342, baseType: !467, size: 32, offset: 288)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !606, file: !401, line: 343, baseType: !469, size: 96, offset: 320)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !606, file: !401, line: 344, baseType: !469, size: 96, offset: 416)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !606, file: !401, line: 347, baseType: !433, size: 128, offset: 512)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !606, file: !401, line: 349, baseType: !352, size: 32, offset: 640)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !606, file: !401, line: 350, baseType: !352, size: 32, offset: 672)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !606, file: !401, line: 351, baseType: !431, size: 64, offset: 704)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !606, file: !401, line: 352, baseType: !431, size: 64, offset: 768)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !606, file: !401, line: 354, baseType: !625, size: 384, offset: 832)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !401, line: 116, baseType: !626)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !401, line: 94, size: 384, elements: !627)
!627 = !{!628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !626, file: !401, line: 96, baseType: !352, size: 32)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !626, file: !401, line: 96, baseType: !352, size: 32, offset: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !626, file: !401, line: 97, baseType: !352, size: 32, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !626, file: !401, line: 97, baseType: !352, size: 32, offset: 96)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !626, file: !401, line: 99, baseType: !420, size: 16, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !626, file: !401, line: 100, baseType: !420, size: 16, offset: 144)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !626, file: !401, line: 102, baseType: !420, size: 16, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !626, file: !401, line: 105, baseType: !420, size: 16, offset: 176)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !626, file: !401, line: 108, baseType: !420, size: 16, offset: 192)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !626, file: !401, line: 109, baseType: !420, size: 16, offset: 208)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !626, file: !401, line: 111, baseType: !420, size: 16, offset: 224)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !626, file: !401, line: 112, baseType: !420, size: 16, offset: 240)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !626, file: !401, line: 114, baseType: !352, size: 32, offset: 256)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !626, file: !401, line: 114, baseType: !352, size: 32, offset: 288)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !626, file: !401, line: 115, baseType: !352, size: 32, offset: 320)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !626, file: !401, line: 115, baseType: !352, size: 32, offset: 352)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !606, file: !401, line: 355, baseType: !422, size: 512, offset: 1216)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !522, file: !108, line: 134, baseType: !431, size: 64, offset: 2368)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !522, file: !108, line: 136, baseType: !647, size: 64, offset: 2432)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !108, line: 58, flags: DIFlagFwdDecl)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !522, file: !108, line: 138, baseType: !625, size: 384, offset: 2496)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !522, file: !108, line: 139, baseType: !505, size: 64, offset: 2880)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !522, file: !108, line: 141, baseType: !433, size: 128, offset: 2944)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !522, file: !108, line: 142, baseType: !433, size: 128, offset: 3072)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !522, file: !108, line: 143, baseType: !433, size: 128, offset: 3200)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !522, file: !108, line: 144, baseType: !433, size: 128, offset: 3328)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !522, file: !108, line: 146, baseType: !352, size: 32, offset: 3456)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !522, file: !108, line: 147, baseType: !352, size: 32, offset: 3488)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !522, file: !108, line: 150, baseType: !658, size: 64, offset: 3520)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !108, line: 50, flags: DIFlagFwdDecl)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !522, file: !108, line: 151, baseType: !662, size: 64, offset: 3584)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !522, file: !108, line: 152, baseType: !352, size: 32, offset: 3648)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !522, file: !108, line: 153, baseType: !352, size: 32, offset: 3680)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !522, file: !108, line: 156, baseType: !469, size: 96, offset: 3712)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !522, file: !108, line: 156, baseType: !469, size: 96, offset: 3808)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !522, file: !108, line: 156, baseType: !469, size: 96, offset: 3904)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !522, file: !108, line: 157, baseType: !469, size: 96, offset: 4000)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !522, file: !108, line: 158, baseType: !469, size: 96, offset: 4096)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !522, file: !108, line: 159, baseType: !469, size: 96, offset: 4192)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !522, file: !108, line: 160, baseType: !469, size: 96, offset: 4288)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !522, file: !108, line: 160, baseType: !469, size: 96, offset: 4384)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !522, file: !108, line: 161, baseType: !674, size: 128, offset: 4480)
!674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !675)
!675 = !{!482}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !522, file: !108, line: 161, baseType: !674, size: 128, offset: 4608)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !522, file: !108, line: 162, baseType: !469, size: 96, offset: 4736)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !522, file: !108, line: 162, baseType: !469, size: 96, offset: 4832)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !522, file: !108, line: 163, baseType: !467, size: 32, offset: 4928)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !522, file: !108, line: 163, baseType: !467, size: 32, offset: 4960)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !522, file: !108, line: 164, baseType: !480, size: 512, offset: 4992)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !522, file: !108, line: 165, baseType: !480, size: 512, offset: 5504)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !522, file: !108, line: 166, baseType: !480, size: 512, offset: 6016)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !522, file: !108, line: 167, baseType: !480, size: 512, offset: 6528)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !522, file: !108, line: 176, baseType: !480, size: 512, offset: 7040)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !522, file: !108, line: 178, baseType: !7, size: 32, offset: 7552)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !522, file: !108, line: 180, baseType: !420, size: 16, offset: 7584)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !522, file: !108, line: 181, baseType: !420, size: 16, offset: 7600)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !522, file: !108, line: 183, baseType: !420, size: 16, offset: 7616)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !522, file: !108, line: 183, baseType: !420, size: 16, offset: 7632)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !522, file: !108, line: 184, baseType: !420, size: 16, offset: 7648)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !522, file: !108, line: 184, baseType: !420, size: 16, offset: 7664)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !522, file: !108, line: 185, baseType: !420, size: 16, offset: 7680)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !522, file: !108, line: 186, baseType: !420, size: 16, offset: 7696)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !522, file: !108, line: 187, baseType: !420, size: 16, offset: 7712)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !522, file: !108, line: 188, baseType: !417, size: 8, offset: 7728)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !522, file: !108, line: 189, baseType: !417, size: 8, offset: 7736)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !522, file: !108, line: 192, baseType: !352, size: 32, offset: 7744)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !522, file: !108, line: 192, baseType: !352, size: 32, offset: 7776)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !522, file: !108, line: 192, baseType: !352, size: 32, offset: 7808)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !522, file: !108, line: 192, baseType: !352, size: 32, offset: 7840)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !522, file: !108, line: 194, baseType: !352, size: 32, offset: 7872)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !522, file: !108, line: 202, baseType: !467, size: 32, offset: 7904)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !522, file: !108, line: 202, baseType: !467, size: 32, offset: 7936)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !522, file: !108, line: 202, baseType: !467, size: 32, offset: 7968)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !522, file: !108, line: 211, baseType: !467, size: 32, offset: 8000)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !522, file: !108, line: 212, baseType: !467, size: 32, offset: 8032)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !522, file: !108, line: 213, baseType: !467, size: 32, offset: 8064)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !522, file: !108, line: 214, baseType: !467, size: 32, offset: 8096)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !522, file: !108, line: 215, baseType: !467, size: 32, offset: 8128)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !522, file: !108, line: 216, baseType: !467, size: 32, offset: 8160)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !522, file: !108, line: 219, baseType: !467, size: 32, offset: 8192)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !522, file: !108, line: 220, baseType: !467, size: 32, offset: 8224)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !522, file: !108, line: 221, baseType: !467, size: 32, offset: 8256)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !522, file: !108, line: 224, baseType: !716, size: 16, offset: 8288)
!716 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !522, file: !108, line: 224, baseType: !716, size: 16, offset: 8304)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !522, file: !108, line: 226, baseType: !420, size: 16, offset: 8320)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !522, file: !108, line: 228, baseType: !417, size: 8, offset: 8336)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !522, file: !108, line: 229, baseType: !417, size: 8, offset: 8344)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !522, file: !108, line: 231, baseType: !420, size: 16, offset: 8352)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !522, file: !108, line: 232, baseType: !417, size: 8, offset: 8368)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !522, file: !108, line: 233, baseType: !417, size: 8, offset: 8376)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !522, file: !108, line: 234, baseType: !467, size: 32, offset: 8384)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !522, file: !108, line: 235, baseType: !467, size: 32, offset: 8416)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !522, file: !108, line: 237, baseType: !433, size: 128, offset: 8448)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !522, file: !108, line: 238, baseType: !433, size: 128, offset: 8576)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !522, file: !108, line: 239, baseType: !433, size: 128, offset: 8704)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !522, file: !108, line: 240, baseType: !433, size: 128, offset: 8832)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !522, file: !108, line: 242, baseType: !467, size: 32, offset: 8960)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !522, file: !108, line: 244, baseType: !420, size: 16, offset: 8992)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !522, file: !108, line: 245, baseType: !716, size: 16, offset: 9008)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !522, file: !108, line: 246, baseType: !674, size: 128, offset: 9024)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !522, file: !108, line: 248, baseType: !352, size: 32, offset: 9152)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !522, file: !108, line: 249, baseType: !352, size: 32, offset: 9184)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !522, file: !108, line: 251, baseType: !737, size: 64, offset: 9216)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !108, line: 251, flags: DIFlagFwdDecl)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !522, file: !108, line: 253, baseType: !417, size: 8, offset: 9280)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !522, file: !108, line: 254, baseType: !417, size: 8, offset: 9288)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !522, file: !108, line: 255, baseType: !420, size: 16, offset: 9296)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !522, file: !108, line: 256, baseType: !469, size: 96, offset: 9312)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !522, file: !108, line: 258, baseType: !433, size: 128, offset: 9408)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !522, file: !108, line: 259, baseType: !433, size: 128, offset: 9536)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !522, file: !108, line: 260, baseType: !433, size: 128, offset: 9664)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !522, file: !108, line: 261, baseType: !433, size: 128, offset: 9792)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !522, file: !108, line: 263, baseType: !748, size: 64, offset: 9920)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !108, line: 52, flags: DIFlagFwdDecl)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !522, file: !108, line: 264, baseType: !751, size: 64, offset: 9984)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !108, line: 53, flags: DIFlagFwdDecl)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !522, file: !108, line: 265, baseType: !754, size: 64, offset: 10048)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !401, line: 46, flags: DIFlagFwdDecl)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !522, file: !108, line: 267, baseType: !417, size: 8, offset: 10112)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !522, file: !108, line: 268, baseType: !417, size: 8, offset: 10120)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !522, file: !108, line: 269, baseType: !420, size: 16, offset: 10128)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !522, file: !108, line: 270, baseType: !467, size: 32, offset: 10144)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !522, file: !108, line: 272, baseType: !761, size: 64, offset: 10176)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !341, line: 732, flags: DIFlagFwdDecl)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !522, file: !108, line: 275, baseType: !764, size: 64, offset: 10240)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !766, line: 49, size: 448, elements: !767)
!766 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!767 = !{!768, !769, !770, !771}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !765, file: !766, line: 50, baseType: !433, size: 128)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !765, file: !766, line: 51, baseType: !433, size: 128, offset: 128)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !765, file: !766, line: 52, baseType: !433, size: 128, offset: 256)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !765, file: !766, line: 53, baseType: !772, size: 64, offset: 384)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !774, line: 65, size: 128, elements: !775)
!774 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!775 = !{!776, !784, !785}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !773, file: !774, line: 66, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !774, line: 56, size: 320, elements: !779)
!779 = !{!780, !781, !782, !783}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !778, file: !774, line: 57, baseType: !674, size: 128)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !778, file: !774, line: 58, baseType: !674, size: 128, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !778, file: !774, line: 59, baseType: !467, size: 32, offset: 256)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !778, file: !774, line: 59, baseType: !467, size: 32, offset: 288)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !773, file: !774, line: 67, baseType: !352, size: 32, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !773, file: !774, line: 68, baseType: !467, size: 32, offset: 96)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !522, file: !108, line: 277, baseType: !787, size: 64, offset: 10304)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !789)
!789 = !{!790, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !842, !845, !847, !848, !850, !851, !852, !853, !859, !864, !865, !869, !870, !871, !872, !873, !886, !898, !912, !916, !920, !924, !933, !945, !949, !953, !957, !961, !965, !966, !967, !968, !969, !970, !974, !975, !976, !977, !981, !982, !983, !984, !985, !990, !991, !992, !993, !994, !998, !999, !1000, !1001, !1002, !1009, !1020, !1025, !1031, !1041, !1047, !1058, !1065, !1072, !1076, !1081, !1085, !1090, !1091, !1092, !1099, !1105, !1106, !1107, !1112, !1113, !1122, !1231, !1235, !1243, !1247, !1251, !1255, !1263, !1273}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !788, file: !6, line: 180, baseType: !791, size: 1600)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !166, line: 73, baseType: !792)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !166, line: 64, size: 1600, elements: !793)
!793 = !{!794, !809, !813, !814, !815, !816, !819}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !792, file: !166, line: 65, baseType: !795, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !166, line: 53, baseType: !797)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !166, line: 42, size: 832, elements: !798)
!798 = !{!799, !800, !801, !802, !803, !804, !805, !806, !807, !808}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !797, file: !166, line: 43, baseType: !352, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !797, file: !166, line: 44, baseType: !352, size: 32, offset: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !797, file: !166, line: 45, baseType: !352, size: 32, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !797, file: !166, line: 46, baseType: !352, size: 32, offset: 96)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !797, file: !166, line: 47, baseType: !352, size: 32, offset: 128)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !797, file: !166, line: 48, baseType: !352, size: 32, offset: 160)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !797, file: !166, line: 49, baseType: !352, size: 32, offset: 192)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !797, file: !166, line: 50, baseType: !352, size: 32, offset: 224)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !797, file: !166, line: 51, baseType: !422, size: 512, offset: 256)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !797, file: !166, line: 52, baseType: !431, size: 64, offset: 768)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !792, file: !166, line: 66, baseType: !810, size: 1312, offset: 64)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 1312, elements: !811)
!811 = !{!812}
!812 = !DISubrange(count: 41)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !792, file: !166, line: 69, baseType: !352, size: 32, offset: 1376)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !792, file: !166, line: 69, baseType: !352, size: 32, offset: 1408)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !792, file: !166, line: 70, baseType: !352, size: 32, offset: 1440)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !792, file: !166, line: 71, baseType: !817, size: 64, offset: 1472)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !166, line: 71, flags: DIFlagFwdDecl)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !792, file: !166, line: 72, baseType: !820, size: 64, offset: 1536)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !166, line: 59, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !166, line: 57, size: 8192, elements: !823)
!823 = !{!824}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !822, file: !166, line: 58, baseType: !543, size: 8192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !788, file: !6, line: 180, baseType: !791, size: 1600, offset: 1600)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !788, file: !6, line: 180, baseType: !791, size: 1600, offset: 3200)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !788, file: !6, line: 180, baseType: !791, size: 1600, offset: 4800)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !788, file: !6, line: 180, baseType: !791, size: 1600, offset: 6400)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !788, file: !6, line: 181, baseType: !352, size: 32, offset: 8000)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !788, file: !6, line: 181, baseType: !352, size: 32, offset: 8032)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !788, file: !6, line: 181, baseType: !352, size: 32, offset: 8064)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !788, file: !6, line: 181, baseType: !352, size: 32, offset: 8096)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !788, file: !6, line: 181, baseType: !352, size: 32, offset: 8128)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !788, file: !6, line: 182, baseType: !352, size: 32, offset: 8160)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !788, file: !6, line: 183, baseType: !352, size: 32, offset: 8192)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !788, file: !6, line: 184, baseType: !837, size: 64, offset: 8256)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !838, line: 124, baseType: !839)
!838 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !841, line: 118, flags: DIFlagFwdDecl)
!841 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!842 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !788, file: !6, line: 185, baseType: !843, size: 64, offset: 8320)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !6, line: 97, flags: DIFlagFwdDecl)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !788, file: !6, line: 186, baseType: !846, size: 32, offset: 8384)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !788, file: !6, line: 187, baseType: !467, size: 32, offset: 8416)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !788, file: !6, line: 188, baseType: !849, size: 32, offset: 8448)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !788, file: !6, line: 189, baseType: !352, size: 32, offset: 8480)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !788, file: !6, line: 190, baseType: !658, size: 64, offset: 8512)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !788, file: !6, line: 193, baseType: !417, size: 8, offset: 8576)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !788, file: !6, line: 196, baseType: !854, size: 64, offset: 8640)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{null, !857}
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !788)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !788, file: !6, line: 199, baseType: !860, size: 64, offset: 8704)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{null, !857, !863}
!863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !467)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !788, file: !6, line: 202, baseType: !854, size: 64, offset: 8768)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !788, file: !6, line: 207, baseType: !866, size: 64, offset: 8832)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DISubroutineType(types: !868)
!868 = !{!352, !857}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !788, file: !6, line: 208, baseType: !866, size: 64, offset: 8896)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !788, file: !6, line: 209, baseType: !866, size: 64, offset: 8960)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !788, file: !6, line: 210, baseType: !866, size: 64, offset: 9024)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !788, file: !6, line: 211, baseType: !866, size: 64, offset: 9088)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !788, file: !6, line: 218, baseType: !874, size: 64, offset: 9152)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{null, !857, !352, !877}
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !879, line: 65, size: 160, elements: !880)
!879 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!880 = !{!881, !882, !884, !885}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !878, file: !879, line: 66, baseType: !469, size: 96)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !878, file: !879, line: 67, baseType: !883, size: 48, offset: 96)
!883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 48, elements: !470)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !878, file: !879, line: 68, baseType: !417, size: 8, offset: 144)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !878, file: !879, line: 68, baseType: !417, size: 8, offset: 152)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !788, file: !6, line: 219, baseType: !887, size: 64, offset: 9216)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !857, !352, !890}
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !879, line: 48, size: 96, elements: !892)
!892 = !{!893, !894, !895, !896, !897}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !891, file: !879, line: 49, baseType: !7, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !891, file: !879, line: 49, baseType: !7, size: 32, offset: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !891, file: !879, line: 50, baseType: !417, size: 8, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !891, file: !879, line: 50, baseType: !417, size: 8, offset: 72)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !891, file: !879, line: 51, baseType: !420, size: 16, offset: 80)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !788, file: !6, line: 220, baseType: !899, size: 64, offset: 9280)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DISubroutineType(types: !901)
!901 = !{null, !857, !352, !902}
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !879, line: 42, size: 160, elements: !904)
!904 = !{!905, !906, !907, !908, !909, !910, !911}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !903, file: !879, line: 43, baseType: !7, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !903, file: !879, line: 43, baseType: !7, size: 32, offset: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !903, file: !879, line: 43, baseType: !7, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !903, file: !879, line: 43, baseType: !7, size: 32, offset: 96)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !903, file: !879, line: 44, baseType: !420, size: 16, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !903, file: !879, line: 45, baseType: !417, size: 8, offset: 144)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !903, file: !879, line: 45, baseType: !417, size: 8, offset: 152)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !788, file: !6, line: 227, baseType: !913, size: 64, offset: 9344)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!877, !857}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !788, file: !6, line: 228, baseType: !917, size: 64, offset: 9408)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!890, !857}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !788, file: !6, line: 229, baseType: !921, size: 64, offset: 9472)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!902, !857}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !788, file: !6, line: 230, baseType: !925, size: 64, offset: 9536)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DISubroutineType(types: !927)
!927 = !{!928, !857}
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !879, line: 88, size: 64, elements: !930)
!930 = !{!931, !932}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !929, file: !879, line: 89, baseType: !7, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !929, file: !879, line: 90, baseType: !7, size: 32, offset: 32)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !788, file: !6, line: 231, baseType: !934, size: 64, offset: 9600)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DISubroutineType(types: !936)
!936 = !{!937, !857}
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !879, line: 79, size: 96, elements: !939)
!939 = !{!940, !941, !942, !943, !944}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !938, file: !879, line: 81, baseType: !352, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !938, file: !879, line: 82, baseType: !352, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !938, file: !879, line: 83, baseType: !420, size: 16, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !938, file: !879, line: 84, baseType: !417, size: 8, offset: 80)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !938, file: !879, line: 84, baseType: !417, size: 8, offset: 88)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !788, file: !6, line: 236, baseType: !946, size: 64, offset: 9664)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{null, !857, !877}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !788, file: !6, line: 237, baseType: !950, size: 64, offset: 9728)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{null, !857, !890}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !788, file: !6, line: 238, baseType: !954, size: 64, offset: 9792)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DISubroutineType(types: !956)
!956 = !{null, !857, !902}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !788, file: !6, line: 239, baseType: !958, size: 64, offset: 9856)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DISubroutineType(types: !960)
!960 = !{null, !857, !928}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !788, file: !6, line: 240, baseType: !962, size: 64, offset: 9920)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{null, !857, !937}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !788, file: !6, line: 245, baseType: !913, size: 64, offset: 9984)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !788, file: !6, line: 246, baseType: !917, size: 64, offset: 10048)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !788, file: !6, line: 247, baseType: !921, size: 64, offset: 10112)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !788, file: !6, line: 248, baseType: !925, size: 64, offset: 10176)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !788, file: !6, line: 249, baseType: !934, size: 64, offset: 10240)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !788, file: !6, line: 255, baseType: !971, size: 64, offset: 10304)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!431, !857, !352, !352}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !788, file: !6, line: 256, baseType: !971, size: 64, offset: 10368)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !788, file: !6, line: 257, baseType: !971, size: 64, offset: 10432)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !788, file: !6, line: 258, baseType: !971, size: 64, offset: 10496)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !788, file: !6, line: 264, baseType: !978, size: 64, offset: 10560)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{!431, !857, !352}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !788, file: !6, line: 265, baseType: !978, size: 64, offset: 10624)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !788, file: !6, line: 266, baseType: !978, size: 64, offset: 10688)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !788, file: !6, line: 267, baseType: !978, size: 64, offset: 10752)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !788, file: !6, line: 268, baseType: !978, size: 64, offset: 10816)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !788, file: !6, line: 272, baseType: !986, size: 64, offset: 10880)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DISubroutineType(types: !988)
!988 = !{!989, !857}
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !788, file: !6, line: 273, baseType: !986, size: 64, offset: 10944)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !788, file: !6, line: 274, baseType: !986, size: 64, offset: 11008)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !788, file: !6, line: 275, baseType: !986, size: 64, offset: 11072)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !788, file: !6, line: 276, baseType: !986, size: 64, offset: 11136)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !788, file: !6, line: 279, baseType: !995, size: 64, offset: 11200)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{null, !857, !352, !989, !352}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !788, file: !6, line: 280, baseType: !995, size: 64, offset: 11264)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !788, file: !6, line: 281, baseType: !995, size: 64, offset: 11328)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !788, file: !6, line: 284, baseType: !866, size: 64, offset: 11392)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !788, file: !6, line: 285, baseType: !866, size: 64, offset: 11456)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !788, file: !6, line: 286, baseType: !1003, size: 64, offset: 11520)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!1006, !857}
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !6, line: 82, flags: DIFlagFwdDecl)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !788, file: !6, line: 287, baseType: !1010, size: 64, offset: 11584)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!1013, !857}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !1015)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !1016)
!1016 = !{!1017, !1019}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1015, file: !6, line: 118, baseType: !1018, size: 128)
!1018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 128, elements: !675)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !1015, file: !6, line: 119, baseType: !1018, size: 128, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !788, file: !6, line: 288, baseType: !1021, size: 64, offset: 11648)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!1024, !857}
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !788, file: !6, line: 289, baseType: !1026, size: 64, offset: 11712)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{null, !857, !1029}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !6, line: 83, flags: DIFlagFwdDecl)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !788, file: !6, line: 290, baseType: !1032, size: 64, offset: 11776)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!1035, !857}
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !1037)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !1038)
!1038 = !{!1039, !1040}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1037, file: !6, line: 124, baseType: !420, size: 16)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1037, file: !6, line: 125, baseType: !417, size: 8, offset: 16)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !788, file: !6, line: 291, baseType: !1042, size: 64, offset: 11840)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!1045, !857}
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !788, file: !6, line: 299, baseType: !1048, size: 64, offset: 11904)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !857, !1051, !431, !1057}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{null, !431, !352, !1054, !1054, !1055}
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !420)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !17)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !788, file: !6, line: 309, baseType: !1059, size: 64, offset: 11968)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{null, !857, !1062, !431}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{null, !431, !352, !1054, !1054}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !788, file: !6, line: 317, baseType: !1066, size: 64, offset: 12032)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{null, !857, !1069, !431, !1057}
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{null, !431, !352, !352, !1054, !1054}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !788, file: !6, line: 327, baseType: !1073, size: 64, offset: 12096)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !857, !1062, !431, !1057}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !788, file: !6, line: 337, baseType: !1077, size: 64, offset: 12160)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{null, !857, !1080, !1080}
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !788, file: !6, line: 344, baseType: !1082, size: 64, offset: 12224)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{null, !857, !352, !1080}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !788, file: !6, line: 347, baseType: !1086, size: 64, offset: 12288)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{null, !857, !1089}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !788, file: !6, line: 350, baseType: !1082, size: 64, offset: 12352)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !788, file: !6, line: 351, baseType: !1082, size: 64, offset: 12416)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !788, file: !6, line: 355, baseType: !1093, size: 64, offset: 12480)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!1096, !521, !857}
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1098 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !6, line: 355, flags: DIFlagFwdDecl)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !788, file: !6, line: 359, baseType: !1100, size: 64, offset: 12544)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!1103, !521, !857}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !6, line: 100, flags: DIFlagFwdDecl)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !788, file: !6, line: 364, baseType: !854, size: 64, offset: 12608)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !788, file: !6, line: 367, baseType: !854, size: 64, offset: 12672)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !788, file: !6, line: 373, baseType: !1108, size: 64, offset: 12736)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{null, !857, !1111, !1111}
!1111 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !788, file: !6, line: 376, baseType: !854, size: 64, offset: 12800)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !788, file: !6, line: 385, baseType: !1114, size: 64, offset: 12864)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{null, !857, !1117, !1111, !1118}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !1119)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!352, !352, !431}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !788, file: !6, line: 391, baseType: !1123, size: 64, offset: 12928)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{null, !857, !1126, !1226, !431, !1230}
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !1127)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!1130, !1131, !1225, !352}
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !21)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !879, line: 160, size: 384, elements: !1133)
!1133 = !{!1134, !1138, !1220, !1221, !1222, !1223, !1224}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1132, file: !879, line: 161, baseType: !1135, size: 256)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 256, elements: !1136)
!1136 = !{!482, !1137}
!1137 = !DISubrange(count: 2)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1132, file: !879, line: 162, baseType: !1139, size: 64, offset: 256)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1141, line: 77, size: 15424, elements: !1142)
!1141 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1142 = !{!1143, !1144, !1145, !1148, !1151, !1154, !1157, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1209, !1210, !1214}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1140, file: !1141, line: 78, baseType: !525, size: 960)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1140, file: !1141, line: 80, baseType: !543, size: 8192, offset: 960)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1140, file: !1141, line: 82, baseType: !1146, size: 64, offset: 9152)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1141, line: 43, flags: DIFlagFwdDecl)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1140, file: !1141, line: 83, baseType: !1149, size: 64, offset: 9216)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !410, line: 46, flags: DIFlagFwdDecl)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1140, file: !1141, line: 86, baseType: !1152, size: 64, offset: 9280)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1141, line: 41, flags: DIFlagFwdDecl)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1140, file: !1141, line: 87, baseType: !1155, size: 64, offset: 9344)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1141, line: 44, flags: DIFlagFwdDecl)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1140, file: !1141, line: 89, baseType: !1158, size: 512, offset: 9408)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1155, size: 512, elements: !1159)
!1159 = !{!587}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1140, file: !1141, line: 90, baseType: !420, size: 16, offset: 9920)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1140, file: !1141, line: 90, baseType: !420, size: 16, offset: 9936)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1140, file: !1141, line: 92, baseType: !420, size: 16, offset: 9952)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1140, file: !1141, line: 92, baseType: !420, size: 16, offset: 9968)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1140, file: !1141, line: 93, baseType: !420, size: 16, offset: 9984)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1140, file: !1141, line: 93, baseType: !420, size: 16, offset: 10000)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1140, file: !1141, line: 94, baseType: !352, size: 32, offset: 10016)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1140, file: !1141, line: 97, baseType: !420, size: 16, offset: 10048)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1140, file: !1141, line: 97, baseType: !420, size: 16, offset: 10064)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1140, file: !1141, line: 98, baseType: !420, size: 16, offset: 10080)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1140, file: !1141, line: 98, baseType: !420, size: 16, offset: 10096)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1140, file: !1141, line: 99, baseType: !420, size: 16, offset: 10112)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1140, file: !1141, line: 99, baseType: !420, size: 16, offset: 10128)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1140, file: !1141, line: 100, baseType: !7, size: 32, offset: 10144)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1140, file: !1141, line: 101, baseType: !1046, size: 64, offset: 10176)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1140, file: !1141, line: 103, baseType: !549, size: 64, offset: 10240)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1140, file: !1141, line: 104, baseType: !1177, size: 64, offset: 10304)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !410, line: 159, size: 448, elements: !1179)
!1179 = !{!1180, !1183, !1184, !1186, !1187, !1189}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1178, file: !410, line: 161, baseType: !1181, size: 64)
!1181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1182)
!1182 = !{!1137}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1178, file: !410, line: 162, baseType: !1181, size: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1178, file: !410, line: 163, baseType: !1185, size: 32, offset: 128)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 32, elements: !1182)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1178, file: !410, line: 164, baseType: !1185, size: 32, offset: 160)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1178, file: !410, line: 165, baseType: !1188, size: 128, offset: 192)
!1188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 128, elements: !1182)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1178, file: !410, line: 166, baseType: !1190, size: 128, offset: 320)
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 128, elements: !1182)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1140, file: !1141, line: 107, baseType: !467, size: 32, offset: 10368)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1140, file: !1141, line: 108, baseType: !352, size: 32, offset: 10400)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1140, file: !1141, line: 109, baseType: !420, size: 16, offset: 10432)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1140, file: !1141, line: 110, baseType: !420, size: 16, offset: 10448)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1140, file: !1141, line: 113, baseType: !352, size: 32, offset: 10464)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1140, file: !1141, line: 113, baseType: !352, size: 32, offset: 10496)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1140, file: !1141, line: 114, baseType: !417, size: 8, offset: 10528)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1140, file: !1141, line: 114, baseType: !417, size: 8, offset: 10536)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1140, file: !1141, line: 115, baseType: !420, size: 16, offset: 10544)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1140, file: !1141, line: 116, baseType: !674, size: 128, offset: 10560)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1140, file: !1141, line: 119, baseType: !467, size: 32, offset: 10688)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1140, file: !1141, line: 119, baseType: !467, size: 32, offset: 10720)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1140, file: !1141, line: 122, baseType: !1204, size: 512, offset: 10752)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1205, line: 182, baseType: !1206)
!1205 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1205, line: 180, size: 512, elements: !1207)
!1207 = !{!1208}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1206, file: !1205, line: 181, baseType: !422, size: 512)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1140, file: !1141, line: 123, baseType: !417, size: 8, offset: 11264)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1140, file: !1141, line: 125, baseType: !1211, size: 56, offset: 11272)
!1211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 56, elements: !1212)
!1212 = !{!1213}
!1213 = !DISubrange(count: 7)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1140, file: !1141, line: 126, baseType: !1215, size: 4096, offset: 11328)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 4096, elements: !1159)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1141, line: 69, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1141, line: 67, size: 512, elements: !1218)
!1218 = !{!1219}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1217, file: !1141, line: 68, baseType: !422, size: 512)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1132, file: !879, line: 163, baseType: !417, size: 8, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1132, file: !879, line: 163, baseType: !417, size: 8, offset: 328)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1132, file: !879, line: 164, baseType: !420, size: 16, offset: 336)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1132, file: !879, line: 164, baseType: !420, size: 16, offset: 352)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1132, file: !879, line: 164, baseType: !420, size: 16, offset: 368)
!1225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !1227)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!352, !431, !352, !352}
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !27)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !788, file: !6, line: 400, baseType: !1232, size: 64, offset: 12992)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{null, !857, !1118}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !788, file: !6, line: 415, baseType: !1236, size: 64, offset: 13056)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{null, !857, !1239, !1118, !1226, !431, !1230}
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !1240)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!1130, !431, !352}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !788, file: !6, line: 425, baseType: !1244, size: 64, offset: 13120)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{null, !857, !1239, !1226, !431, !1230}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !788, file: !6, line: 435, baseType: !1248, size: 64, offset: 13184)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{null, !857, !1118, !1239, !431}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !788, file: !6, line: 444, baseType: !1252, size: 64, offset: 13248)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{null, !857, !1239, !431}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !788, file: !6, line: 455, baseType: !1256, size: 64, offset: 13312)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{null, !857, !1239, !1259, !431}
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !1260)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{null, !431, !352, !467}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !788, file: !6, line: 464, baseType: !1264, size: 64, offset: 13376)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{null, !857, !1267, !1270, !431}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{null, !431, !352, !431}
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!1111, !431, !352}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !788, file: !6, line: 470, baseType: !854, size: 64, offset: 13440)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !522, file: !108, line: 277, baseType: !787, size: 64, offset: 10368)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !522, file: !108, line: 278, baseType: !1276, size: 64, offset: 10432)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1277, line: 27, baseType: !1278)
!1277 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1279, line: 45, baseType: !1280)
!1279 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1280 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !522, file: !108, line: 279, baseType: !1276, size: 64, offset: 10496)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !522, file: !108, line: 280, baseType: !7, size: 32, offset: 10560)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !522, file: !108, line: 281, baseType: !7, size: 32, offset: 10592)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !522, file: !108, line: 283, baseType: !433, size: 128, offset: 10624)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !522, file: !108, line: 284, baseType: !433, size: 128, offset: 10752)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !522, file: !108, line: 285, baseType: !1287, size: 64, offset: 10880)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !522, file: !108, line: 287, baseType: !1289, size: 64, offset: 10944)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !108, line: 59, flags: DIFlagFwdDecl)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !522, file: !108, line: 288, baseType: !1292, size: 64, offset: 11008)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !108, line: 288, flags: DIFlagFwdDecl)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !522, file: !108, line: 290, baseType: !1295, size: 64, offset: 11072)
!1295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !1182)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !522, file: !108, line: 291, baseType: !1297, size: 64, offset: 11136)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1141, line: 65, baseType: !1299)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1141, line: 50, size: 320, elements: !1300)
!1300 = !{!1301, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1299, file: !1141, line: 51, baseType: !1302, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1304, line: 1216, size: 39680, elements: !1305)
!1304 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1305 = !{!1306, !1307, !1308, !1309, !1312, !1313, !1314, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1338, !1342, !1345, !1569, !1572, !1868, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1890, !1891, !1892, !1893, !1894, !1902, !1968, !1975, !1976, !1983, !2188, !2189, !2190, !2191, !2192, !2193}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1303, file: !1304, line: 1217, baseType: !525, size: 960)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1303, file: !1304, line: 1218, baseType: !561, size: 64, offset: 960)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1303, file: !1304, line: 1220, baseType: !521, size: 64, offset: 1024)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1303, file: !1304, line: 1221, baseType: !1310, size: 64, offset: 1088)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1304, line: 52, flags: DIFlagFwdDecl)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1303, file: !1304, line: 1223, baseType: !1302, size: 64, offset: 1152)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1303, file: !1304, line: 1225, baseType: !433, size: 128, offset: 1216)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1303, file: !1304, line: 1226, baseType: !1315, size: 64, offset: 1344)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1304, line: 69, size: 320, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1316, file: !1304, line: 70, baseType: !1315, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1316, file: !1304, line: 70, baseType: !1315, size: 64, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1316, file: !1304, line: 71, baseType: !7, size: 32, offset: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1316, file: !1304, line: 71, baseType: !7, size: 32, offset: 160)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1316, file: !1304, line: 72, baseType: !352, size: 32, offset: 192)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1316, file: !1304, line: 73, baseType: !420, size: 16, offset: 224)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1316, file: !1304, line: 73, baseType: !420, size: 16, offset: 240)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1316, file: !1304, line: 74, baseType: !521, size: 64, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1303, file: !1304, line: 1227, baseType: !521, size: 64, offset: 1408)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1303, file: !1304, line: 1229, baseType: !469, size: 96, offset: 1472)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1303, file: !1304, line: 1230, baseType: !469, size: 96, offset: 1568)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1303, file: !1304, line: 1231, baseType: !469, size: 96, offset: 1664)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1303, file: !1304, line: 1231, baseType: !469, size: 96, offset: 1760)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1303, file: !1304, line: 1233, baseType: !7, size: 32, offset: 1856)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1303, file: !1304, line: 1234, baseType: !352, size: 32, offset: 1888)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1303, file: !1304, line: 1235, baseType: !7, size: 32, offset: 1920)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1303, file: !1304, line: 1237, baseType: !420, size: 16, offset: 1952)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1303, file: !1304, line: 1239, baseType: !417, size: 8, offset: 1968)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1303, file: !1304, line: 1240, baseType: !1337, size: 8, offset: 1976)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 8, elements: !498)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1303, file: !1304, line: 1242, baseType: !1339, size: 64, offset: 1984)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1341, line: 248, flags: DIFlagFwdDecl)
!1341 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1303, file: !1304, line: 1244, baseType: !1343, size: 64, offset: 2048)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1304, line: 59, flags: DIFlagFwdDecl)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1303, file: !1304, line: 1246, baseType: !1346, size: 64, offset: 2112)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1304, line: 1067, size: 5184, elements: !1348)
!1348 = !{!1349, !1387, !1388, !1403, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1425, !1441, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1552}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1347, file: !1304, line: 1068, baseType: !1350, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1304, line: 934, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1304, line: 925, size: 576, elements: !1353)
!1353 = !{!1354, !1370, !1371, !1372, !1373, !1374, !1386}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1352, file: !1304, line: 926, baseType: !1355, size: 320)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1304, line: 830, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1304, line: 813, size: 320, elements: !1357)
!1357 = !{!1358, !1361, !1364, !1365, !1367, !1368, !1369}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1356, file: !1304, line: 814, baseType: !1359, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1304, line: 51, flags: DIFlagFwdDecl)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1356, file: !1304, line: 815, baseType: !1362, size: 64, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1304, line: 815, flags: DIFlagFwdDecl)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1356, file: !1304, line: 818, baseType: !431, size: 64, offset: 128)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1356, file: !1304, line: 819, baseType: !1366, size: 32, offset: 192)
!1366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1111, size: 32, elements: !675)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1356, file: !1304, line: 822, baseType: !352, size: 32, offset: 224)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1356, file: !1304, line: 826, baseType: !352, size: 32, offset: 256)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1356, file: !1304, line: 829, baseType: !352, size: 32, offset: 288)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1352, file: !1304, line: 928, baseType: !420, size: 16, offset: 320)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1352, file: !1304, line: 928, baseType: !420, size: 16, offset: 336)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1352, file: !1304, line: 929, baseType: !352, size: 32, offset: 352)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1352, file: !1304, line: 930, baseType: !1046, size: 64, offset: 384)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1352, file: !1304, line: 931, baseType: !1375, size: 64, offset: 448)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !879, line: 59, size: 128, elements: !1377)
!1377 = !{!1378, !1384, !1385}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1376, file: !879, line: 60, baseType: !1379, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !879, line: 54, size: 64, elements: !1381)
!1381 = !{!1382, !1383}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1380, file: !879, line: 55, baseType: !352, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1380, file: !879, line: 56, baseType: !467, size: 32, offset: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1376, file: !879, line: 61, baseType: !352, size: 32, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1376, file: !879, line: 62, baseType: !352, size: 32, offset: 96)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1352, file: !1304, line: 933, baseType: !431, size: 64, offset: 512)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1347, file: !1304, line: 1069, baseType: !1350, size: 64, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1347, file: !1304, line: 1070, baseType: !1389, size: 64, offset: 128)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1304, line: 916, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1304, line: 891, size: 704, elements: !1392)
!1392 = !{!1393, !1394, !1395, !1397, !1398, !1399, !1400, !1401, !1402}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1391, file: !1304, line: 892, baseType: !1355, size: 320)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1391, file: !1304, line: 896, baseType: !352, size: 32, offset: 320)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1391, file: !1304, line: 900, baseType: !1396, size: 96, offset: 352)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 96, elements: !470)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1391, file: !1304, line: 903, baseType: !467, size: 32, offset: 448)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1391, file: !1304, line: 906, baseType: !352, size: 32, offset: 480)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1391, file: !1304, line: 909, baseType: !467, size: 32, offset: 512)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1391, file: !1304, line: 912, baseType: !467, size: 32, offset: 544)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1391, file: !1304, line: 914, baseType: !521, size: 64, offset: 576)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1391, file: !1304, line: 915, baseType: !431, size: 64, offset: 640)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1347, file: !1304, line: 1071, baseType: !1404, size: 64, offset: 192)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1304, line: 920, baseType: !1406)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1304, line: 918, size: 320, elements: !1407)
!1407 = !{!1408}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1406, file: !1304, line: 919, baseType: !1355, size: 320)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1347, file: !1304, line: 1075, baseType: !467, size: 32, offset: 256)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1347, file: !1304, line: 1077, baseType: !467, size: 32, offset: 288)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1347, file: !1304, line: 1078, baseType: !467, size: 32, offset: 320)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1347, file: !1304, line: 1079, baseType: !420, size: 16, offset: 352)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1347, file: !1304, line: 1082, baseType: !420, size: 16, offset: 368)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1347, file: !1304, line: 1085, baseType: !417, size: 8, offset: 384)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1347, file: !1304, line: 1086, baseType: !417, size: 8, offset: 392)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1347, file: !1304, line: 1087, baseType: !417, size: 8, offset: 400)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1347, file: !1304, line: 1088, baseType: !417, size: 8, offset: 408)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1347, file: !1304, line: 1090, baseType: !467, size: 32, offset: 416)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1347, file: !1304, line: 1093, baseType: !420, size: 16, offset: 448)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1347, file: !1304, line: 1096, baseType: !417, size: 8, offset: 464)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1347, file: !1304, line: 1098, baseType: !1422, size: 40, offset: 472)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 40, elements: !1423)
!1423 = !{!1424}
!1424 = !DISubrange(count: 5)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1347, file: !1304, line: 1101, baseType: !1426, size: 832, offset: 512)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1304, line: 836, size: 832, elements: !1427)
!1427 = !{!1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1426, file: !1304, line: 837, baseType: !1355, size: 320)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1426, file: !1304, line: 839, baseType: !420, size: 16, offset: 320)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1426, file: !1304, line: 839, baseType: !420, size: 16, offset: 336)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1426, file: !1304, line: 842, baseType: !420, size: 16, offset: 352)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1426, file: !1304, line: 842, baseType: !420, size: 16, offset: 368)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1426, file: !1304, line: 843, baseType: !1185, size: 32, offset: 384)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1426, file: !1304, line: 845, baseType: !352, size: 32, offset: 416)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1426, file: !1304, line: 847, baseType: !431, size: 64, offset: 448)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1426, file: !1304, line: 848, baseType: !1139, size: 64, offset: 512)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1426, file: !1304, line: 849, baseType: !1139, size: 64, offset: 576)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1426, file: !1304, line: 850, baseType: !1139, size: 64, offset: 640)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1426, file: !1304, line: 851, baseType: !469, size: 96, offset: 704)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1426, file: !1304, line: 852, baseType: !467, size: 32, offset: 800)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1347, file: !1304, line: 1104, baseType: !1442, size: 1344, offset: 1344)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1304, line: 867, size: 1344, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1442, file: !1304, line: 868, baseType: !420, size: 16)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1442, file: !1304, line: 869, baseType: !420, size: 16, offset: 16)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1442, file: !1304, line: 870, baseType: !420, size: 16, offset: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1442, file: !1304, line: 871, baseType: !420, size: 16, offset: 48)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1442, file: !1304, line: 873, baseType: !1449, size: 896, offset: 64)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1450, size: 896, elements: !1212)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1304, line: 864, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1304, line: 859, size: 128, elements: !1452)
!1452 = !{!1453, !1454, !1455, !1456, !1457, !1458}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1451, file: !1304, line: 860, baseType: !420, size: 16)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1451, file: !1304, line: 861, baseType: !420, size: 16, offset: 16)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1451, file: !1304, line: 861, baseType: !420, size: 16, offset: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1451, file: !1304, line: 861, baseType: !420, size: 16, offset: 48)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1451, file: !1304, line: 862, baseType: !352, size: 32, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1451, file: !1304, line: 863, baseType: !467, size: 32, offset: 96)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1442, file: !1304, line: 874, baseType: !431, size: 64, offset: 960)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1442, file: !1304, line: 876, baseType: !467, size: 32, offset: 1024)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1442, file: !1304, line: 876, baseType: !467, size: 32, offset: 1056)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1442, file: !1304, line: 878, baseType: !352, size: 32, offset: 1088)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1442, file: !1304, line: 879, baseType: !352, size: 32, offset: 1120)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1442, file: !1304, line: 881, baseType: !352, size: 32, offset: 1152)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1442, file: !1304, line: 881, baseType: !352, size: 32, offset: 1184)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1442, file: !1304, line: 883, baseType: !1302, size: 64, offset: 1216)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1442, file: !1304, line: 884, baseType: !521, size: 64, offset: 1280)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1347, file: !1304, line: 1107, baseType: !467, size: 32, offset: 2688)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1347, file: !1304, line: 1110, baseType: !467, size: 32, offset: 2720)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1347, file: !1304, line: 1113, baseType: !420, size: 16, offset: 2752)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1347, file: !1304, line: 1113, baseType: !420, size: 16, offset: 2768)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1347, file: !1304, line: 1116, baseType: !417, size: 8, offset: 2784)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1347, file: !1304, line: 1117, baseType: !1337, size: 8, offset: 2792)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1347, file: !1304, line: 1120, baseType: !420, size: 16, offset: 2800)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1347, file: !1304, line: 1121, baseType: !467, size: 32, offset: 2816)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1347, file: !1304, line: 1122, baseType: !467, size: 32, offset: 2848)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1347, file: !1304, line: 1123, baseType: !467, size: 32, offset: 2880)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1347, file: !1304, line: 1124, baseType: !467, size: 32, offset: 2912)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1347, file: !1304, line: 1125, baseType: !467, size: 32, offset: 2944)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1347, file: !1304, line: 1126, baseType: !467, size: 32, offset: 2976)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1347, file: !1304, line: 1127, baseType: !467, size: 32, offset: 3008)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1347, file: !1304, line: 1128, baseType: !467, size: 32, offset: 3040)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1347, file: !1304, line: 1129, baseType: !467, size: 32, offset: 3072)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1347, file: !1304, line: 1130, baseType: !467, size: 32, offset: 3104)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1347, file: !1304, line: 1131, baseType: !420, size: 16, offset: 3136)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1347, file: !1304, line: 1132, baseType: !417, size: 8, offset: 3152)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1347, file: !1304, line: 1133, baseType: !417, size: 8, offset: 3160)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1347, file: !1304, line: 1134, baseType: !1489, size: 24, offset: 3168)
!1489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 24, elements: !470)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1347, file: !1304, line: 1135, baseType: !417, size: 8, offset: 3192)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1347, file: !1304, line: 1138, baseType: !521, size: 64, offset: 3200)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1347, file: !1304, line: 1139, baseType: !417, size: 8, offset: 3264)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1347, file: !1304, line: 1140, baseType: !417, size: 8, offset: 3272)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1347, file: !1304, line: 1141, baseType: !417, size: 8, offset: 3280)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1347, file: !1304, line: 1142, baseType: !417, size: 8, offset: 3288)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1347, file: !1304, line: 1143, baseType: !417, size: 8, offset: 3296)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1347, file: !1304, line: 1144, baseType: !1498, size: 64, offset: 3304)
!1498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 64, elements: !1159)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1347, file: !1304, line: 1145, baseType: !1498, size: 64, offset: 3368)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1347, file: !1304, line: 1148, baseType: !417, size: 8, offset: 3432)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1347, file: !1304, line: 1149, baseType: !417, size: 8, offset: 3440)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1347, file: !1304, line: 1152, baseType: !417, size: 8, offset: 3448)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1347, file: !1304, line: 1152, baseType: !417, size: 8, offset: 3456)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1347, file: !1304, line: 1153, baseType: !417, size: 8, offset: 3464)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1347, file: !1304, line: 1154, baseType: !420, size: 16, offset: 3472)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1347, file: !1304, line: 1154, baseType: !420, size: 16, offset: 3488)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1347, file: !1304, line: 1155, baseType: !420, size: 16, offset: 3504)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1347, file: !1304, line: 1155, baseType: !420, size: 16, offset: 3520)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1347, file: !1304, line: 1156, baseType: !417, size: 8, offset: 3536)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1347, file: !1304, line: 1157, baseType: !417, size: 8, offset: 3544)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1347, file: !1304, line: 1159, baseType: !417, size: 8, offset: 3552)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1347, file: !1304, line: 1160, baseType: !417, size: 8, offset: 3560)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1347, file: !1304, line: 1161, baseType: !417, size: 8, offset: 3568)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1347, file: !1304, line: 1162, baseType: !417, size: 8, offset: 3576)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1347, file: !1304, line: 1165, baseType: !352, size: 32, offset: 3584)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1347, file: !1304, line: 1166, baseType: !352, size: 32, offset: 3616)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1347, file: !1304, line: 1167, baseType: !352, size: 32, offset: 3648)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1347, file: !1304, line: 1168, baseType: !352, size: 32, offset: 3680)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1347, file: !1304, line: 1171, baseType: !420, size: 16, offset: 3712)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1347, file: !1304, line: 1171, baseType: !420, size: 16, offset: 3728)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1347, file: !1304, line: 1172, baseType: !352, size: 32, offset: 3744)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1347, file: !1304, line: 1173, baseType: !467, size: 32, offset: 3776)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1347, file: !1304, line: 1174, baseType: !467, size: 32, offset: 3808)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1347, file: !1304, line: 1177, baseType: !1525, size: 1024, offset: 3840)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1304, line: 963, size: 1024, elements: !1526)
!1526 = !{!1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1550, !1551}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1525, file: !1304, line: 965, baseType: !352, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1525, file: !1304, line: 968, baseType: !467, size: 32, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1525, file: !1304, line: 971, baseType: !467, size: 32, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1525, file: !1304, line: 974, baseType: !467, size: 32, offset: 96)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1525, file: !1304, line: 977, baseType: !469, size: 96, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1525, file: !1304, line: 979, baseType: !469, size: 96, offset: 224)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1525, file: !1304, line: 982, baseType: !352, size: 32, offset: 320)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1525, file: !1304, line: 987, baseType: !1295, size: 64, offset: 352)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1525, file: !1304, line: 989, baseType: !467, size: 32, offset: 416)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1525, file: !1304, line: 994, baseType: !352, size: 32, offset: 448)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1525, file: !1304, line: 995, baseType: !352, size: 32, offset: 480)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1525, file: !1304, line: 997, baseType: !417, size: 8, offset: 512)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1525, file: !1304, line: 998, baseType: !1211, size: 56, offset: 520)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1525, file: !1304, line: 1000, baseType: !467, size: 32, offset: 576)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1525, file: !1304, line: 1003, baseType: !1295, size: 64, offset: 608)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1525, file: !1304, line: 1006, baseType: !352, size: 32, offset: 672)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1525, file: !1304, line: 1009, baseType: !467, size: 32, offset: 704)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1525, file: !1304, line: 1012, baseType: !1295, size: 64, offset: 736)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1525, file: !1304, line: 1015, baseType: !1295, size: 64, offset: 800)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1525, file: !1304, line: 1018, baseType: !352, size: 32, offset: 864)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1525, file: !1304, line: 1019, baseType: !1548, size: 64, offset: 896)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1304, line: 63, flags: DIFlagFwdDecl)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1525, file: !1304, line: 1023, baseType: !467, size: 32, offset: 960)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1525, file: !1304, line: 1024, baseType: !352, size: 32, offset: 992)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1347, file: !1304, line: 1179, baseType: !1553, size: 320, offset: 4864)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1304, line: 1043, size: 320, elements: !1554)
!1554 = !{!1555, !1556, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1553, file: !1304, line: 1044, baseType: !417, size: 8)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1553, file: !1304, line: 1045, baseType: !1557, size: 16, offset: 8)
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 16, elements: !1182)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1553, file: !1304, line: 1048, baseType: !417, size: 8, offset: 24)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1553, file: !1304, line: 1049, baseType: !467, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1553, file: !1304, line: 1049, baseType: !467, size: 32, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1553, file: !1304, line: 1052, baseType: !467, size: 32, offset: 96)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1553, file: !1304, line: 1052, baseType: !467, size: 32, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1553, file: !1304, line: 1053, baseType: !417, size: 8, offset: 160)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1553, file: !1304, line: 1054, baseType: !1489, size: 24, offset: 168)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1553, file: !1304, line: 1057, baseType: !467, size: 32, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1553, file: !1304, line: 1057, baseType: !467, size: 32, offset: 224)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1553, file: !1304, line: 1060, baseType: !467, size: 32, offset: 256)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1553, file: !1304, line: 1060, baseType: !467, size: 32, offset: 288)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1303, file: !1304, line: 1247, baseType: !1570, size: 64, offset: 2176)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1304, line: 60, flags: DIFlagFwdDecl)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1303, file: !1304, line: 1251, baseType: !1573, size: 31872, offset: 2240)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1304, line: 403, size: 31872, elements: !1574)
!1574 = !{!1575, !1655, !1675, !1684, !1704, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1844, !1845, !1846, !1850, !1866, !1867}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1573, file: !1304, line: 404, baseType: !1576, size: 1984)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1304, line: 259, size: 1984, elements: !1577)
!1577 = !{!1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1650}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1576, file: !1304, line: 260, baseType: !417, size: 8)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1576, file: !1304, line: 263, baseType: !417, size: 8, offset: 8)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1576, file: !1304, line: 266, baseType: !417, size: 8, offset: 16)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1576, file: !1304, line: 267, baseType: !417, size: 8, offset: 24)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1576, file: !1304, line: 269, baseType: !417, size: 8, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1576, file: !1304, line: 270, baseType: !417, size: 8, offset: 40)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1576, file: !1304, line: 276, baseType: !417, size: 8, offset: 48)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1576, file: !1304, line: 279, baseType: !417, size: 8, offset: 56)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1576, file: !1304, line: 280, baseType: !420, size: 16, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1576, file: !1304, line: 280, baseType: !420, size: 16, offset: 80)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1576, file: !1304, line: 281, baseType: !467, size: 32, offset: 96)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1576, file: !1304, line: 284, baseType: !417, size: 8, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1576, file: !1304, line: 285, baseType: !417, size: 8, offset: 136)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1576, file: !1304, line: 287, baseType: !452, size: 48, offset: 144)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1576, file: !1304, line: 290, baseType: !1593, size: 1280, offset: 192)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1205, line: 174, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1205, line: 166, size: 1280, elements: !1595)
!1595 = !{!1596, !1597, !1598, !1599, !1600, !1601, !1602, !1649}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1594, file: !1205, line: 167, baseType: !352, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1594, file: !1205, line: 167, baseType: !352, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1594, file: !1205, line: 168, baseType: !422, size: 512, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1594, file: !1205, line: 169, baseType: !422, size: 512, offset: 576)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1594, file: !1205, line: 170, baseType: !467, size: 32, offset: 1088)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1594, file: !1205, line: 171, baseType: !467, size: 32, offset: 1120)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1594, file: !1205, line: 172, baseType: !1603, size: 64, offset: 1152)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1205, line: 72, size: 3072, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609, !1610, !1619, !1620, !1645, !1646, !1647, !1648}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1604, file: !1205, line: 73, baseType: !352, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1604, file: !1205, line: 73, baseType: !352, size: 32, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1604, file: !1205, line: 74, baseType: !352, size: 32, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1604, file: !1205, line: 75, baseType: !352, size: 32, offset: 96)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1604, file: !1205, line: 77, baseType: !1611, size: 128, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1612, line: 95, baseType: !1613)
!1612 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1612, line: 92, size: 128, elements: !1614)
!1614 = !{!1615, !1616, !1617, !1618}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1613, file: !1612, line: 93, baseType: !467, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1613, file: !1612, line: 93, baseType: !467, size: 32, offset: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1613, file: !1612, line: 94, baseType: !467, size: 32, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1613, file: !1612, line: 94, baseType: !467, size: 32, offset: 96)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1604, file: !1205, line: 77, baseType: !1611, size: 128, offset: 256)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1604, file: !1205, line: 79, baseType: !1621, size: 2304, offset: 384)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1622, size: 2304, elements: !675)
!1622 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1205, line: 67, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1205, line: 55, size: 576, elements: !1624)
!1624 = !{!1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1641, !1642, !1643, !1644}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1623, file: !1205, line: 56, baseType: !420, size: 16)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1623, file: !1205, line: 56, baseType: !420, size: 16, offset: 16)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1623, file: !1205, line: 58, baseType: !467, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1623, file: !1205, line: 59, baseType: !467, size: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1623, file: !1205, line: 59, baseType: !467, size: 32, offset: 96)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1623, file: !1205, line: 60, baseType: !1295, size: 64, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1623, file: !1205, line: 60, baseType: !1295, size: 64, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1623, file: !1205, line: 61, baseType: !1633, size: 64, offset: 256)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1205, line: 47, baseType: !1635)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1205, line: 44, size: 96, elements: !1636)
!1636 = !{!1637, !1638, !1639, !1640}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1635, file: !1205, line: 45, baseType: !467, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1635, file: !1205, line: 45, baseType: !467, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1635, file: !1205, line: 46, baseType: !420, size: 16, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1635, file: !1205, line: 46, baseType: !420, size: 16, offset: 80)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1623, file: !1205, line: 62, baseType: !1633, size: 64, offset: 320)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1623, file: !1205, line: 64, baseType: !1633, size: 64, offset: 384)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1623, file: !1205, line: 65, baseType: !1295, size: 64, offset: 448)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1623, file: !1205, line: 66, baseType: !1295, size: 64, offset: 512)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1604, file: !1205, line: 80, baseType: !469, size: 96, offset: 2688)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1604, file: !1205, line: 80, baseType: !469, size: 96, offset: 2784)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1604, file: !1205, line: 81, baseType: !469, size: 96, offset: 2880)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1604, file: !1205, line: 83, baseType: !469, size: 96, offset: 2976)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1594, file: !1205, line: 173, baseType: !431, size: 64, offset: 1216)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1576, file: !1304, line: 291, baseType: !1651, size: 512, offset: 1472)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1205, line: 178, baseType: !1652)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1205, line: 176, size: 512, elements: !1653)
!1653 = !{!1654}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1652, file: !1205, line: 177, baseType: !422, size: 512)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1573, file: !1304, line: 406, baseType: !1656, size: 64, offset: 1984)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1304, line: 80, size: 1472, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1657, file: !1304, line: 81, baseType: !431, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1657, file: !1304, line: 82, baseType: !431, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1657, file: !1304, line: 83, baseType: !7, size: 32, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1657, file: !1304, line: 84, baseType: !7, size: 32, offset: 160)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1657, file: !1304, line: 86, baseType: !7, size: 32, offset: 192)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1657, file: !1304, line: 87, baseType: !7, size: 32, offset: 224)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1657, file: !1304, line: 88, baseType: !7, size: 32, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1657, file: !1304, line: 89, baseType: !7, size: 32, offset: 288)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1657, file: !1304, line: 90, baseType: !7, size: 32, offset: 320)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1657, file: !1304, line: 91, baseType: !7, size: 32, offset: 352)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1657, file: !1304, line: 92, baseType: !7, size: 32, offset: 384)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1657, file: !1304, line: 93, baseType: !7, size: 32, offset: 416)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1657, file: !1304, line: 95, baseType: !1672, size: 1024, offset: 448)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 1024, elements: !1673)
!1673 = !{!1674}
!1674 = !DISubrange(count: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1573, file: !1304, line: 407, baseType: !1676, size: 64, offset: 2048)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1304, line: 98, size: 1216, elements: !1678)
!1678 = !{!1679, !1680, !1681, !1682, !1683}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1677, file: !1304, line: 100, baseType: !431, size: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1677, file: !1304, line: 101, baseType: !431, size: 64, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1677, file: !1304, line: 103, baseType: !7, size: 32, offset: 128)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1677, file: !1304, line: 104, baseType: !7, size: 32, offset: 160)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1677, file: !1304, line: 106, baseType: !1672, size: 1024, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1573, file: !1304, line: 408, baseType: !1685, size: 512, offset: 2112)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1304, line: 109, size: 512, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1685, file: !1304, line: 111, baseType: !352, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1685, file: !1304, line: 112, baseType: !352, size: 32, offset: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1685, file: !1304, line: 115, baseType: !352, size: 32, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1685, file: !1304, line: 116, baseType: !352, size: 32, offset: 96)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1685, file: !1304, line: 117, baseType: !352, size: 32, offset: 128)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1685, file: !1304, line: 118, baseType: !352, size: 32, offset: 160)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1685, file: !1304, line: 119, baseType: !352, size: 32, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1685, file: !1304, line: 120, baseType: !352, size: 32, offset: 224)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1685, file: !1304, line: 121, baseType: !352, size: 32, offset: 256)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1685, file: !1304, line: 122, baseType: !352, size: 32, offset: 288)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1685, file: !1304, line: 125, baseType: !352, size: 32, offset: 320)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1685, file: !1304, line: 126, baseType: !352, size: 32, offset: 352)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1685, file: !1304, line: 127, baseType: !420, size: 16, offset: 384)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1685, file: !1304, line: 128, baseType: !420, size: 16, offset: 400)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1685, file: !1304, line: 129, baseType: !352, size: 32, offset: 416)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1685, file: !1304, line: 130, baseType: !352, size: 32, offset: 448)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1685, file: !1304, line: 131, baseType: !352, size: 32, offset: 480)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1573, file: !1304, line: 409, baseType: !1705, size: 576, offset: 2624)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1304, line: 134, size: 576, elements: !1706)
!1706 = !{!1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1705, file: !1304, line: 135, baseType: !352, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1705, file: !1304, line: 136, baseType: !352, size: 32, offset: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1705, file: !1304, line: 137, baseType: !352, size: 32, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1705, file: !1304, line: 138, baseType: !352, size: 32, offset: 96)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1705, file: !1304, line: 139, baseType: !352, size: 32, offset: 128)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1705, file: !1304, line: 140, baseType: !352, size: 32, offset: 160)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1705, file: !1304, line: 141, baseType: !352, size: 32, offset: 192)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1705, file: !1304, line: 142, baseType: !352, size: 32, offset: 224)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1705, file: !1304, line: 143, baseType: !467, size: 32, offset: 256)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1705, file: !1304, line: 144, baseType: !352, size: 32, offset: 288)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1705, file: !1304, line: 145, baseType: !352, size: 32, offset: 320)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1705, file: !1304, line: 147, baseType: !352, size: 32, offset: 352)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1705, file: !1304, line: 148, baseType: !352, size: 32, offset: 384)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1705, file: !1304, line: 149, baseType: !352, size: 32, offset: 416)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1705, file: !1304, line: 150, baseType: !352, size: 32, offset: 448)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1705, file: !1304, line: 151, baseType: !352, size: 32, offset: 480)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1705, file: !1304, line: 152, baseType: !408, size: 64, offset: 512)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1573, file: !1304, line: 411, baseType: !352, size: 32, offset: 3200)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1573, file: !1304, line: 411, baseType: !352, size: 32, offset: 3232)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1573, file: !1304, line: 411, baseType: !352, size: 32, offset: 3264)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1573, file: !1304, line: 412, baseType: !467, size: 32, offset: 3296)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1573, file: !1304, line: 413, baseType: !352, size: 32, offset: 3328)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1573, file: !1304, line: 413, baseType: !352, size: 32, offset: 3360)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1573, file: !1304, line: 415, baseType: !352, size: 32, offset: 3392)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1573, file: !1304, line: 415, baseType: !352, size: 32, offset: 3424)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1573, file: !1304, line: 416, baseType: !420, size: 16, offset: 3456)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1573, file: !1304, line: 416, baseType: !420, size: 16, offset: 3472)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1573, file: !1304, line: 418, baseType: !467, size: 32, offset: 3488)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1573, file: !1304, line: 418, baseType: !467, size: 32, offset: 3520)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1573, file: !1304, line: 421, baseType: !467, size: 32, offset: 3552)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1573, file: !1304, line: 421, baseType: !467, size: 32, offset: 3584)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1573, file: !1304, line: 421, baseType: !467, size: 32, offset: 3616)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1573, file: !1304, line: 425, baseType: !420, size: 16, offset: 3648)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1573, file: !1304, line: 425, baseType: !420, size: 16, offset: 3664)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1573, file: !1304, line: 425, baseType: !420, size: 16, offset: 3680)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1573, file: !1304, line: 426, baseType: !420, size: 16, offset: 3696)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1573, file: !1304, line: 428, baseType: !420, size: 16, offset: 3712)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1573, file: !1304, line: 428, baseType: !420, size: 16, offset: 3728)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1573, file: !1304, line: 431, baseType: !352, size: 32, offset: 3744)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1573, file: !1304, line: 433, baseType: !420, size: 16, offset: 3776)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1573, file: !1304, line: 435, baseType: !420, size: 16, offset: 3792)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1573, file: !1304, line: 437, baseType: !420, size: 16, offset: 3808)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1573, file: !1304, line: 439, baseType: !420, size: 16, offset: 3824)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1573, file: !1304, line: 441, baseType: !420, size: 16, offset: 3840)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1573, file: !1304, line: 443, baseType: !420, size: 16, offset: 3856)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1573, file: !1304, line: 449, baseType: !352, size: 32, offset: 3872)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1573, file: !1304, line: 453, baseType: !352, size: 32, offset: 3904)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1573, file: !1304, line: 458, baseType: !420, size: 16, offset: 3936)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1573, file: !1304, line: 462, baseType: !420, size: 16, offset: 3952)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1573, file: !1304, line: 467, baseType: !352, size: 32, offset: 3968)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1573, file: !1304, line: 467, baseType: !352, size: 32, offset: 4000)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1573, file: !1304, line: 469, baseType: !420, size: 16, offset: 4032)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1573, file: !1304, line: 469, baseType: !420, size: 16, offset: 4048)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1573, file: !1304, line: 469, baseType: !420, size: 16, offset: 4064)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1573, file: !1304, line: 469, baseType: !420, size: 16, offset: 4080)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1573, file: !1304, line: 474, baseType: !420, size: 16, offset: 4096)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1573, file: !1304, line: 475, baseType: !417, size: 8, offset: 4112)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1573, file: !1304, line: 476, baseType: !417, size: 8, offset: 4120)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1573, file: !1304, line: 481, baseType: !352, size: 32, offset: 4128)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1573, file: !1304, line: 486, baseType: !352, size: 32, offset: 4160)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1573, file: !1304, line: 491, baseType: !352, size: 32, offset: 4192)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1573, file: !1304, line: 496, baseType: !420, size: 16, offset: 4224)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1573, file: !1304, line: 498, baseType: !420, size: 16, offset: 4240)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1573, file: !1304, line: 501, baseType: !420, size: 16, offset: 4256)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1573, file: !1304, line: 502, baseType: !420, size: 16, offset: 4272)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1573, file: !1304, line: 508, baseType: !420, size: 16, offset: 4288)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1573, file: !1304, line: 513, baseType: !420, size: 16, offset: 4304)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1573, file: !1304, line: 515, baseType: !420, size: 16, offset: 4320)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1573, file: !1304, line: 515, baseType: !420, size: 16, offset: 4336)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1573, file: !1304, line: 519, baseType: !1611, size: 128, offset: 4352)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1573, file: !1304, line: 519, baseType: !1611, size: 128, offset: 4480)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1573, file: !1304, line: 520, baseType: !1779, size: 128, offset: 4608)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1612, line: 89, baseType: !1780)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1612, line: 86, size: 128, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1785}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1780, file: !1612, line: 87, baseType: !352, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1780, file: !1612, line: 87, baseType: !352, size: 32, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1780, file: !1612, line: 88, baseType: !352, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1780, file: !1612, line: 88, baseType: !352, size: 32, offset: 96)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1573, file: !1304, line: 523, baseType: !433, size: 128, offset: 4736)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1573, file: !1304, line: 524, baseType: !420, size: 16, offset: 4864)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1573, file: !1304, line: 527, baseType: !420, size: 16, offset: 4880)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1573, file: !1304, line: 532, baseType: !467, size: 32, offset: 4896)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1573, file: !1304, line: 532, baseType: !467, size: 32, offset: 4928)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1573, file: !1304, line: 534, baseType: !467, size: 32, offset: 4960)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1573, file: !1304, line: 538, baseType: !467, size: 32, offset: 4992)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1573, file: !1304, line: 542, baseType: !352, size: 32, offset: 5024)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1573, file: !1304, line: 545, baseType: !467, size: 32, offset: 5056)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1573, file: !1304, line: 545, baseType: !467, size: 32, offset: 5088)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1573, file: !1304, line: 545, baseType: !467, size: 32, offset: 5120)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1573, file: !1304, line: 548, baseType: !467, size: 32, offset: 5152)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1573, file: !1304, line: 551, baseType: !420, size: 16, offset: 5184)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1573, file: !1304, line: 551, baseType: !420, size: 16, offset: 5200)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1573, file: !1304, line: 551, baseType: !420, size: 16, offset: 5216)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1573, file: !1304, line: 551, baseType: !420, size: 16, offset: 5232)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1573, file: !1304, line: 552, baseType: !420, size: 16, offset: 5248)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1573, file: !1304, line: 552, baseType: !420, size: 16, offset: 5264)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1573, file: !1304, line: 553, baseType: !467, size: 32, offset: 5280)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1573, file: !1304, line: 553, baseType: !467, size: 32, offset: 5312)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1573, file: !1304, line: 554, baseType: !420, size: 16, offset: 5344)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1573, file: !1304, line: 554, baseType: !420, size: 16, offset: 5360)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1573, file: !1304, line: 555, baseType: !467, size: 32, offset: 5376)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1573, file: !1304, line: 555, baseType: !467, size: 32, offset: 5408)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1573, file: !1304, line: 558, baseType: !543, size: 8192, offset: 5440)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1573, file: !1304, line: 561, baseType: !352, size: 32, offset: 13632)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1573, file: !1304, line: 562, baseType: !420, size: 16, offset: 13664)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1573, file: !1304, line: 562, baseType: !420, size: 16, offset: 13680)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1573, file: !1304, line: 565, baseType: !1815, size: 6144, offset: 13696)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 6144, elements: !1816)
!1816 = !{!1817}
!1817 = !DISubrange(count: 768)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1573, file: !1304, line: 568, baseType: !674, size: 128, offset: 19840)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1573, file: !1304, line: 569, baseType: !674, size: 128, offset: 19968)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1573, file: !1304, line: 572, baseType: !417, size: 8, offset: 20096)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1573, file: !1304, line: 573, baseType: !417, size: 8, offset: 20104)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1573, file: !1304, line: 574, baseType: !417, size: 8, offset: 20112)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1573, file: !1304, line: 575, baseType: !1422, size: 40, offset: 20120)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1573, file: !1304, line: 578, baseType: !352, size: 32, offset: 20160)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1573, file: !1304, line: 579, baseType: !420, size: 16, offset: 20192)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1573, file: !1304, line: 580, baseType: !420, size: 16, offset: 20208)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1573, file: !1304, line: 581, baseType: !467, size: 32, offset: 20224)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1573, file: !1304, line: 582, baseType: !467, size: 32, offset: 20256)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1573, file: !1304, line: 585, baseType: !420, size: 16, offset: 20288)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1573, file: !1304, line: 585, baseType: !420, size: 16, offset: 20304)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1573, file: !1304, line: 586, baseType: !467, size: 32, offset: 20320)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1573, file: !1304, line: 589, baseType: !420, size: 16, offset: 20352)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1573, file: !1304, line: 589, baseType: !420, size: 16, offset: 20368)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1573, file: !1304, line: 590, baseType: !352, size: 32, offset: 20384)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1573, file: !1304, line: 593, baseType: !420, size: 16, offset: 20416)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1573, file: !1304, line: 593, baseType: !420, size: 16, offset: 20432)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1573, file: !1304, line: 594, baseType: !420, size: 16, offset: 20448)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1573, file: !1304, line: 594, baseType: !420, size: 16, offset: 20464)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1573, file: !1304, line: 595, baseType: !467, size: 32, offset: 20480)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1573, file: !1304, line: 596, baseType: !467, size: 32, offset: 20512)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1573, file: !1304, line: 597, baseType: !1842, size: 64, offset: 20544)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !44, line: 41, flags: DIFlagFwdDecl)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1573, file: !1304, line: 600, baseType: !352, size: 32, offset: 20608)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1573, file: !1304, line: 601, baseType: !467, size: 32, offset: 20640)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1573, file: !1304, line: 604, baseType: !1847, size: 256, offset: 20672)
!1847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 256, elements: !1848)
!1848 = !{!1849}
!1849 = !DISubrange(count: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1573, file: !1304, line: 607, baseType: !1851, size: 10880, offset: 20928)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1304, line: 364, size: 10880, elements: !1852)
!1852 = !{!1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1851, file: !1304, line: 365, baseType: !1576, size: 1984)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1851, file: !1304, line: 367, baseType: !543, size: 8192, offset: 1984)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1851, file: !1304, line: 369, baseType: !420, size: 16, offset: 10176)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1851, file: !1304, line: 369, baseType: !420, size: 16, offset: 10192)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1851, file: !1304, line: 370, baseType: !420, size: 16, offset: 10208)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1851, file: !1304, line: 370, baseType: !420, size: 16, offset: 10224)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1851, file: !1304, line: 372, baseType: !467, size: 32, offset: 10240)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1851, file: !1304, line: 373, baseType: !467, size: 32, offset: 10272)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1851, file: !1304, line: 375, baseType: !1489, size: 24, offset: 10304)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1851, file: !1304, line: 376, baseType: !417, size: 8, offset: 10328)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1851, file: !1304, line: 378, baseType: !417, size: 8, offset: 10336)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1851, file: !1304, line: 379, baseType: !1489, size: 24, offset: 10344)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1851, file: !1304, line: 381, baseType: !422, size: 512, offset: 10368)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1573, file: !1304, line: 609, baseType: !352, size: 32, offset: 31808)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1573, file: !1304, line: 610, baseType: !352, size: 32, offset: 31840)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1303, file: !1304, line: 1252, baseType: !1869, size: 256, offset: 34112)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1304, line: 158, size: 256, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1869, file: !1304, line: 159, baseType: !352, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1869, file: !1304, line: 160, baseType: !467, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1869, file: !1304, line: 161, baseType: !467, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1869, file: !1304, line: 162, baseType: !467, size: 32, offset: 96)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1869, file: !1304, line: 163, baseType: !352, size: 32, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1869, file: !1304, line: 164, baseType: !420, size: 16, offset: 160)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1869, file: !1304, line: 165, baseType: !420, size: 16, offset: 176)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1869, file: !1304, line: 166, baseType: !467, size: 32, offset: 192)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1869, file: !1304, line: 167, baseType: !467, size: 32, offset: 224)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1303, file: !1304, line: 1254, baseType: !433, size: 128, offset: 34368)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1303, file: !1304, line: 1255, baseType: !433, size: 128, offset: 34496)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1303, file: !1304, line: 1257, baseType: !431, size: 64, offset: 34624)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1303, file: !1304, line: 1258, baseType: !431, size: 64, offset: 34688)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1303, file: !1304, line: 1259, baseType: !431, size: 64, offset: 34752)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1303, file: !1304, line: 1260, baseType: !431, size: 64, offset: 34816)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1303, file: !1304, line: 1262, baseType: !431, size: 64, offset: 34880)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1303, file: !1304, line: 1265, baseType: !1888, size: 64, offset: 34944)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1304, line: 1265, flags: DIFlagFwdDecl)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1303, file: !1304, line: 1266, baseType: !420, size: 16, offset: 35008)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1303, file: !1304, line: 1267, baseType: !420, size: 16, offset: 35024)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1303, file: !1304, line: 1270, baseType: !352, size: 32, offset: 35040)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1303, file: !1304, line: 1271, baseType: !433, size: 128, offset: 35072)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1303, file: !1304, line: 1274, baseType: !1895, size: 128, offset: 35200)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1304, line: 650, size: 128, elements: !1896)
!1896 = !{!1897, !1898, !1899, !1900, !1901}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1895, file: !1304, line: 651, baseType: !469, size: 96)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1895, file: !1304, line: 652, baseType: !417, size: 8, offset: 96)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1895, file: !1304, line: 652, baseType: !417, size: 8, offset: 104)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1895, file: !1304, line: 652, baseType: !417, size: 8, offset: 112)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1895, file: !1304, line: 652, baseType: !417, size: 8, offset: 120)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1303, file: !1304, line: 1275, baseType: !1903, size: 1472, offset: 35328)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1304, line: 676, size: 1472, elements: !1904)
!1904 = !{!1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1926, !1927, !1928, !1929, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1903, file: !1304, line: 679, baseType: !1895, size: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1903, file: !1304, line: 680, baseType: !420, size: 16, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1903, file: !1304, line: 680, baseType: !420, size: 16, offset: 144)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1903, file: !1304, line: 680, baseType: !420, size: 16, offset: 160)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1903, file: !1304, line: 680, baseType: !420, size: 16, offset: 176)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1903, file: !1304, line: 681, baseType: !420, size: 16, offset: 192)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1903, file: !1304, line: 681, baseType: !420, size: 16, offset: 208)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1903, file: !1304, line: 681, baseType: !420, size: 16, offset: 224)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1903, file: !1304, line: 681, baseType: !420, size: 16, offset: 240)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1903, file: !1304, line: 682, baseType: !420, size: 16, offset: 256)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1903, file: !1304, line: 682, baseType: !883, size: 48, offset: 272)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1903, file: !1304, line: 685, baseType: !1917, size: 192, offset: 320)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1304, line: 633, size: 192, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1922, !1923, !1924, !1925}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1917, file: !1304, line: 634, baseType: !420, size: 16)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1917, file: !1304, line: 634, baseType: !420, size: 16, offset: 16)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1917, file: !1304, line: 635, baseType: !420, size: 16, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1917, file: !1304, line: 635, baseType: !420, size: 16, offset: 48)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1917, file: !1304, line: 636, baseType: !467, size: 32, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1917, file: !1304, line: 636, baseType: !467, size: 32, offset: 96)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1917, file: !1304, line: 637, baseType: !1842, size: 64, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1903, file: !1304, line: 686, baseType: !420, size: 16, offset: 512)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1903, file: !1304, line: 686, baseType: !420, size: 16, offset: 528)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1903, file: !1304, line: 687, baseType: !467, size: 32, offset: 544)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1903, file: !1304, line: 688, baseType: !1930, size: 448, offset: 576)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1304, line: 674, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1304, line: 659, size: 448, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1931, file: !1304, line: 660, baseType: !467, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1931, file: !1304, line: 661, baseType: !467, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1931, file: !1304, line: 662, baseType: !467, size: 32, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1931, file: !1304, line: 663, baseType: !467, size: 32, offset: 96)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1931, file: !1304, line: 664, baseType: !467, size: 32, offset: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1931, file: !1304, line: 665, baseType: !467, size: 32, offset: 160)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1931, file: !1304, line: 666, baseType: !467, size: 32, offset: 192)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1931, file: !1304, line: 667, baseType: !467, size: 32, offset: 224)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1931, file: !1304, line: 668, baseType: !467, size: 32, offset: 256)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1931, file: !1304, line: 669, baseType: !467, size: 32, offset: 288)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1931, file: !1304, line: 670, baseType: !352, size: 32, offset: 320)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1931, file: !1304, line: 671, baseType: !467, size: 32, offset: 352)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1931, file: !1304, line: 672, baseType: !467, size: 32, offset: 384)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1931, file: !1304, line: 673, baseType: !420, size: 16, offset: 416)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1931, file: !1304, line: 673, baseType: !420, size: 16, offset: 432)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1903, file: !1304, line: 692, baseType: !467, size: 32, offset: 1024)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1903, file: !1304, line: 697, baseType: !467, size: 32, offset: 1056)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1903, file: !1304, line: 703, baseType: !352, size: 32, offset: 1088)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1903, file: !1304, line: 704, baseType: !420, size: 16, offset: 1120)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1903, file: !1304, line: 704, baseType: !420, size: 16, offset: 1136)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1903, file: !1304, line: 705, baseType: !420, size: 16, offset: 1152)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1903, file: !1304, line: 706, baseType: !420, size: 16, offset: 1168)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1903, file: !1304, line: 707, baseType: !420, size: 16, offset: 1184)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1903, file: !1304, line: 708, baseType: !420, size: 16, offset: 1200)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1903, file: !1304, line: 709, baseType: !420, size: 16, offset: 1216)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1903, file: !1304, line: 709, baseType: !420, size: 16, offset: 1232)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1903, file: !1304, line: 709, baseType: !420, size: 16, offset: 1248)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1903, file: !1304, line: 709, baseType: !420, size: 16, offset: 1264)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1903, file: !1304, line: 710, baseType: !420, size: 16, offset: 1280)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1903, file: !1304, line: 711, baseType: !420, size: 16, offset: 1296)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1903, file: !1304, line: 712, baseType: !467, size: 32, offset: 1312)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1903, file: !1304, line: 713, baseType: !467, size: 32, offset: 1344)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1903, file: !1304, line: 713, baseType: !467, size: 32, offset: 1376)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1903, file: !1304, line: 713, baseType: !467, size: 32, offset: 1408)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1903, file: !1304, line: 713, baseType: !467, size: 32, offset: 1440)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1303, file: !1304, line: 1278, baseType: !1969, size: 64, offset: 36800)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1304, line: 1197, size: 64, elements: !1970)
!1970 = !{!1971, !1972, !1973, !1974}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1969, file: !1304, line: 1199, baseType: !467, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1969, file: !1304, line: 1200, baseType: !417, size: 8, offset: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1969, file: !1304, line: 1201, baseType: !417, size: 8, offset: 40)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1969, file: !1304, line: 1202, baseType: !420, size: 16, offset: 48)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1303, file: !1304, line: 1281, baseType: !647, size: 64, offset: 36864)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1303, file: !1304, line: 1284, baseType: !1977, size: 192, offset: 36928)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1304, line: 1208, size: 192, elements: !1978)
!1978 = !{!1979, !1980, !1981, !1982}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1977, file: !1304, line: 1209, baseType: !469, size: 96)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1977, file: !1304, line: 1210, baseType: !352, size: 32, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1977, file: !1304, line: 1210, baseType: !352, size: 32, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1977, file: !1304, line: 1210, baseType: !352, size: 32, offset: 160)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1303, file: !1304, line: 1287, baseType: !1984, size: 64, offset: 37120)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1986, line: 64, size: 19136, elements: !1987)
!1986 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1987 = !{!1988, !1989, !1990, !1991, !1992, !1993, !1995, !1996, !1997, !1998, !2001, !2002, !2174, !2175, !2183, !2184, !2185, !2186, !2187}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1985, file: !1986, line: 65, baseType: !525, size: 960)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1985, file: !1986, line: 66, baseType: !561, size: 64, offset: 960)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1985, file: !1986, line: 68, baseType: !543, size: 8192, offset: 1024)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1985, file: !1986, line: 70, baseType: !352, size: 32, offset: 9216)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1985, file: !1986, line: 71, baseType: !352, size: 32, offset: 9248)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1985, file: !1986, line: 72, baseType: !1994, size: 64, offset: 9280)
!1994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 64, elements: !1182)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1985, file: !1986, line: 74, baseType: !467, size: 32, offset: 9344)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1985, file: !1986, line: 74, baseType: !467, size: 32, offset: 9376)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1985, file: !1986, line: 76, baseType: !1152, size: 64, offset: 9408)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1985, file: !1986, line: 77, baseType: !1999, size: 64, offset: 9472)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1986, line: 77, flags: DIFlagFwdDecl)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1985, file: !1986, line: 78, baseType: !647, size: 64, offset: 9536)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1985, file: !1986, line: 80, baseType: !2003, size: 2624, offset: 9600)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !371, line: 340, size: 2624, elements: !2004)
!2004 = !{!2005, !2033, !2051, !2052, !2053, !2068, !2124, !2125, !2151, !2152, !2153, !2154, !2163}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !2003, file: !371, line: 341, baseType: !2006, size: 576)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !371, line: 251, baseType: !2007)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !371, line: 207, size: 576, elements: !2008)
!2008 = !{!2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2007, file: !371, line: 208, baseType: !352, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !2007, file: !371, line: 211, baseType: !420, size: 16, offset: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !2007, file: !371, line: 212, baseType: !420, size: 16, offset: 48)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !2007, file: !371, line: 213, baseType: !467, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !2007, file: !371, line: 214, baseType: !420, size: 16, offset: 96)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !2007, file: !371, line: 215, baseType: !420, size: 16, offset: 112)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !2007, file: !371, line: 216, baseType: !420, size: 16, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !2007, file: !371, line: 217, baseType: !420, size: 16, offset: 144)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !2007, file: !371, line: 218, baseType: !420, size: 16, offset: 160)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !2007, file: !371, line: 219, baseType: !420, size: 16, offset: 176)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !2007, file: !371, line: 220, baseType: !467, size: 32, offset: 192)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !2007, file: !371, line: 222, baseType: !420, size: 16, offset: 224)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2007, file: !371, line: 225, baseType: !420, size: 16, offset: 240)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !2007, file: !371, line: 228, baseType: !352, size: 32, offset: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !2007, file: !371, line: 229, baseType: !352, size: 32, offset: 288)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !2007, file: !371, line: 233, baseType: !352, size: 32, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !2007, file: !371, line: 236, baseType: !420, size: 16, offset: 352)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2007, file: !371, line: 236, baseType: !420, size: 16, offset: 368)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2007, file: !371, line: 241, baseType: !467, size: 32, offset: 384)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !2007, file: !371, line: 244, baseType: !352, size: 32, offset: 416)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !2007, file: !371, line: 244, baseType: !352, size: 32, offset: 448)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !2007, file: !371, line: 245, baseType: !467, size: 32, offset: 480)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !2007, file: !371, line: 248, baseType: !467, size: 32, offset: 512)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2007, file: !371, line: 250, baseType: !352, size: 32, offset: 544)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2003, file: !371, line: 342, baseType: !2034, size: 448, offset: 576)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !371, line: 79, baseType: !2035)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !371, line: 61, size: 448, elements: !2036)
!2036 = !{!2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !2035, file: !371, line: 62, baseType: !431, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !2035, file: !371, line: 64, baseType: !420, size: 16, offset: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2035, file: !371, line: 65, baseType: !420, size: 16, offset: 80)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !2035, file: !371, line: 67, baseType: !467, size: 32, offset: 96)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !2035, file: !371, line: 68, baseType: !467, size: 32, offset: 128)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !2035, file: !371, line: 69, baseType: !467, size: 32, offset: 160)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2035, file: !371, line: 70, baseType: !420, size: 16, offset: 192)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2035, file: !371, line: 71, baseType: !420, size: 16, offset: 208)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !2035, file: !371, line: 72, baseType: !1295, size: 64, offset: 224)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2035, file: !371, line: 75, baseType: !467, size: 32, offset: 288)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !2035, file: !371, line: 75, baseType: !467, size: 32, offset: 320)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !2035, file: !371, line: 75, baseType: !467, size: 32, offset: 352)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !2035, file: !371, line: 78, baseType: !467, size: 32, offset: 384)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !2035, file: !371, line: 78, baseType: !467, size: 32, offset: 416)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2003, file: !371, line: 343, baseType: !433, size: 128, offset: 1024)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !2003, file: !371, line: 344, baseType: !433, size: 128, offset: 1152)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !2003, file: !371, line: 345, baseType: !2054, size: 192, offset: 1280)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !371, line: 278, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !371, line: 270, size: 192, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2061}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2055, file: !371, line: 271, baseType: !352, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2055, file: !371, line: 273, baseType: !467, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2055, file: !371, line: 275, baseType: !352, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2055, file: !371, line: 276, baseType: !352, size: 32, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2055, file: !371, line: 277, baseType: !2062, size: 64, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !371, line: 55, size: 576, elements: !2064)
!2064 = !{!2065, !2066, !2067}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2063, file: !371, line: 56, baseType: !352, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2063, file: !371, line: 57, baseType: !467, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2063, file: !371, line: 58, baseType: !480, size: 512, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !2003, file: !371, line: 346, baseType: !2069, size: 384, offset: 1472)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !371, line: 268, baseType: !2070)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !371, line: 253, size: 384, elements: !2071)
!2071 = !{!2072, !2073, !2074, !2075, !2076, !2118, !2119, !2120, !2121, !2122, !2123}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2070, file: !371, line: 254, baseType: !352, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2070, file: !371, line: 255, baseType: !352, size: 32, offset: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2070, file: !371, line: 255, baseType: !352, size: 32, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2070, file: !371, line: 258, baseType: !467, size: 32, offset: 96)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2070, file: !371, line: 259, baseType: !2077, size: 64, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !371, line: 164, baseType: !2079)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !371, line: 108, size: 1664, elements: !2080)
!2080 = !{!2081, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2079, file: !371, line: 109, baseType: !2082, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2079, file: !371, line: 109, baseType: !2082, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2079, file: !371, line: 111, baseType: !422, size: 512, offset: 128)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !2079, file: !371, line: 119, baseType: !1295, size: 64, offset: 640)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !2079, file: !371, line: 119, baseType: !1295, size: 64, offset: 704)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2079, file: !371, line: 125, baseType: !1295, size: 64, offset: 768)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2079, file: !371, line: 125, baseType: !1295, size: 64, offset: 832)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2079, file: !371, line: 127, baseType: !1295, size: 64, offset: 896)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2079, file: !371, line: 130, baseType: !352, size: 32, offset: 960)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2079, file: !371, line: 131, baseType: !352, size: 32, offset: 992)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2079, file: !371, line: 132, baseType: !2093, size: 64, offset: 1024)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !371, line: 106, baseType: !2095)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !371, line: 81, size: 512, elements: !2096)
!2096 = !{!2097, !2098, !2099, !2100, !2101, !2102}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2095, file: !371, line: 82, baseType: !1295, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !2095, file: !371, line: 97, baseType: !1135, size: 256, offset: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2095, file: !371, line: 102, baseType: !1295, size: 64, offset: 320)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2095, file: !371, line: 102, baseType: !1295, size: 64, offset: 384)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2095, file: !371, line: 104, baseType: !352, size: 32, offset: 448)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2095, file: !371, line: 105, baseType: !352, size: 32, offset: 480)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !2079, file: !371, line: 135, baseType: !469, size: 96, offset: 1088)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2079, file: !371, line: 136, baseType: !467, size: 32, offset: 1184)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2079, file: !371, line: 139, baseType: !352, size: 32, offset: 1216)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !2079, file: !371, line: 139, baseType: !352, size: 32, offset: 1248)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !2079, file: !371, line: 139, baseType: !352, size: 32, offset: 1280)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2079, file: !371, line: 140, baseType: !469, size: 96, offset: 1312)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !2079, file: !371, line: 143, baseType: !420, size: 16, offset: 1408)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2079, file: !371, line: 144, baseType: !420, size: 16, offset: 1424)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !2079, file: !371, line: 145, baseType: !420, size: 16, offset: 1440)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !2079, file: !371, line: 148, baseType: !420, size: 16, offset: 1456)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !2079, file: !371, line: 149, baseType: !352, size: 32, offset: 1472)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !2079, file: !371, line: 150, baseType: !467, size: 32, offset: 1504)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2079, file: !371, line: 152, baseType: !647, size: 64, offset: 1536)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2079, file: !371, line: 163, baseType: !467, size: 32, offset: 1600)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2079, file: !371, line: 163, baseType: !467, size: 32, offset: 1632)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2070, file: !371, line: 261, baseType: !467, size: 32, offset: 192)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2070, file: !371, line: 261, baseType: !467, size: 32, offset: 224)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2070, file: !371, line: 261, baseType: !467, size: 32, offset: 256)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2070, file: !371, line: 263, baseType: !352, size: 32, offset: 288)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2070, file: !371, line: 266, baseType: !352, size: 32, offset: 320)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2070, file: !371, line: 267, baseType: !467, size: 32, offset: 352)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2003, file: !371, line: 347, baseType: !2077, size: 64, offset: 1856)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !2003, file: !371, line: 348, baseType: !2126, size: 64, offset: 1920)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !371, line: 205, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !371, line: 186, size: 1024, elements: !2129)
!2129 = !{!2130, !2132, !2133, !2134, !2136, !2137, !2138, !2146, !2147, !2148, !2149, !2150}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2128, file: !371, line: 187, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2128, file: !371, line: 187, baseType: !2131, size: 64, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !371, line: 189, baseType: !422, size: 512, offset: 128)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !2128, file: !371, line: 191, baseType: !2135, size: 64, offset: 640)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !2128, file: !371, line: 193, baseType: !352, size: 32, offset: 704)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2128, file: !371, line: 193, baseType: !352, size: 32, offset: 736)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2128, file: !371, line: 195, baseType: !2139, size: 64, offset: 768)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !371, line: 184, baseType: !2141)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !371, line: 166, size: 320, elements: !2142)
!2142 = !{!2143, !2144, !2145}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2141, file: !371, line: 180, baseType: !1135, size: 256)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2141, file: !371, line: 182, baseType: !352, size: 32, offset: 256)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2141, file: !371, line: 183, baseType: !352, size: 32, offset: 288)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2128, file: !371, line: 196, baseType: !352, size: 32, offset: 832)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2128, file: !371, line: 198, baseType: !352, size: 32, offset: 864)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2128, file: !371, line: 200, baseType: !1139, size: 64, offset: 896)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !2128, file: !371, line: 201, baseType: !467, size: 32, offset: 960)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2128, file: !371, line: 204, baseType: !352, size: 32, offset: 992)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2003, file: !371, line: 350, baseType: !433, size: 128, offset: 1984)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !2003, file: !371, line: 351, baseType: !352, size: 32, offset: 2112)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !2003, file: !371, line: 351, baseType: !352, size: 32, offset: 2144)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2003, file: !371, line: 353, baseType: !2155, size: 64, offset: 2176)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !371, line: 297, baseType: !2157)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !371, line: 295, size: 2048, elements: !2158)
!2158 = !{!2159}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2157, file: !371, line: 296, baseType: !2160, size: 2048)
!2160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 2048, elements: !2161)
!2161 = !{!2162}
!2162 = !DISubrange(count: 256)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !2003, file: !371, line: 355, baseType: !2164, size: 384, offset: 2240)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !371, line: 338, baseType: !2165)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !371, line: 322, size: 384, elements: !2166)
!2166 = !{!2167, !2168, !2169, !2170, !2171, !2172, !2173}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2165, file: !371, line: 323, baseType: !352, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !2165, file: !371, line: 325, baseType: !420, size: 16, offset: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2165, file: !371, line: 326, baseType: !420, size: 16, offset: 48)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !2165, file: !371, line: 331, baseType: !433, size: 128, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2165, file: !371, line: 334, baseType: !433, size: 128, offset: 192)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !2165, file: !371, line: 335, baseType: !352, size: 32, offset: 320)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2165, file: !371, line: 337, baseType: !352, size: 32, offset: 352)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1985, file: !1986, line: 81, baseType: !431, size: 64, offset: 12224)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1985, file: !1986, line: 85, baseType: !2176, size: 6208, offset: 12288)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1986, line: 55, size: 6208, elements: !2177)
!2177 = !{!2178, !2179, !2180, !2181, !2182}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2176, file: !1986, line: 56, baseType: !1815, size: 6144)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2176, file: !1986, line: 58, baseType: !420, size: 16, offset: 6144)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2176, file: !1986, line: 59, baseType: !420, size: 16, offset: 6160)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !2176, file: !1986, line: 60, baseType: !420, size: 16, offset: 6176)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !2176, file: !1986, line: 61, baseType: !420, size: 16, offset: 6192)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1985, file: !1986, line: 86, baseType: !352, size: 32, offset: 18496)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1985, file: !1986, line: 88, baseType: !352, size: 32, offset: 18528)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1985, file: !1986, line: 90, baseType: !352, size: 32, offset: 18560)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1985, file: !1986, line: 94, baseType: !352, size: 32, offset: 18592)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1985, file: !1986, line: 100, baseType: !1204, size: 512, offset: 18624)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1303, file: !1304, line: 1289, baseType: !1276, size: 64, offset: 37184)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1303, file: !1304, line: 1290, baseType: !1276, size: 64, offset: 37248)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1303, file: !1304, line: 1293, baseType: !1593, size: 1280, offset: 37312)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1303, file: !1304, line: 1294, baseType: !1651, size: 512, offset: 38592)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1303, file: !1304, line: 1295, baseType: !1204, size: 512, offset: 39104)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1303, file: !1304, line: 1298, baseType: !2194, size: 64, offset: 39616)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1304, line: 1298, flags: DIFlagFwdDecl)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1299, file: !1141, line: 53, baseType: !352, size: 32, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1299, file: !1141, line: 54, baseType: !352, size: 32, offset: 96)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1299, file: !1141, line: 55, baseType: !352, size: 32, offset: 128)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1299, file: !1141, line: 55, baseType: !352, size: 32, offset: 160)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1299, file: !1141, line: 56, baseType: !417, size: 8, offset: 192)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1299, file: !1141, line: 56, baseType: !417, size: 8, offset: 200)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1299, file: !1141, line: 57, baseType: !417, size: 8, offset: 208)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1299, file: !1141, line: 57, baseType: !417, size: 8, offset: 216)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1299, file: !1141, line: 59, baseType: !420, size: 16, offset: 224)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1299, file: !1141, line: 59, baseType: !420, size: 16, offset: 240)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1299, file: !1141, line: 59, baseType: !420, size: 16, offset: 256)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1299, file: !1141, line: 61, baseType: !420, size: 16, offset: 272)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1299, file: !1141, line: 63, baseType: !352, size: 32, offset: 288)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !522, file: !108, line: 293, baseType: !433, size: 128, offset: 11200)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !522, file: !108, line: 294, baseType: !2211, size: 64, offset: 11328)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !108, line: 113, baseType: !2213)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !108, line: 108, size: 256, elements: !2214)
!2214 = !{!2215, !2217, !2218, !2219, !2220}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2213, file: !108, line: 109, baseType: !2216, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2213, file: !108, line: 109, baseType: !2216, size: 64, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2213, file: !108, line: 110, baseType: !521, size: 64, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2213, file: !108, line: 111, baseType: !352, size: 32, offset: 192)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2213, file: !108, line: 112, baseType: !467, size: 32, offset: 224)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !402, file: !401, line: 212, baseType: !405, size: 64, offset: 1536)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !402, file: !401, line: 217, baseType: !469, size: 96, offset: 1600)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !402, file: !401, line: 218, baseType: !469, size: 96, offset: 1696)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !402, file: !401, line: 221, baseType: !469, size: 96, offset: 1792)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !402, file: !401, line: 222, baseType: !674, size: 128, offset: 1888)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !402, file: !401, line: 223, baseType: !469, size: 96, offset: 2016)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !402, file: !401, line: 223, baseType: !467, size: 32, offset: 2112)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !402, file: !401, line: 224, baseType: !420, size: 16, offset: 2144)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !402, file: !401, line: 225, baseType: !420, size: 16, offset: 2160)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !402, file: !401, line: 227, baseType: !480, size: 512, offset: 2176)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !402, file: !401, line: 228, baseType: !480, size: 512, offset: 2688)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !402, file: !401, line: 230, baseType: !480, size: 512, offset: 3200)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !402, file: !401, line: 233, baseType: !469, size: 96, offset: 3712)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !402, file: !401, line: 234, baseType: !469, size: 96, offset: 3808)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !402, file: !401, line: 236, baseType: !469, size: 96, offset: 3904)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !402, file: !401, line: 236, baseType: !469, size: 96, offset: 4000)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !402, file: !401, line: 237, baseType: !469, size: 96, offset: 4096)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !402, file: !401, line: 238, baseType: !467, size: 32, offset: 4192)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !402, file: !401, line: 239, baseType: !467, size: 32, offset: 4224)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !402, file: !401, line: 240, baseType: !467, size: 32, offset: 4256)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !402, file: !401, line: 242, baseType: !431, size: 64, offset: 4288)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !108, line: 295, baseType: !522)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTarget", file: !44, line: 97, baseType: !2246)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTarget", file: !44, line: 85, size: 1280, elements: !2247)
!2247 = !{!2248, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2246, file: !44, line: 86, baseType: !2249, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2246, file: !44, line: 86, baseType: !2249, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2246, file: !44, line: 88, baseType: !521, size: 64, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2246, file: !44, line: 89, baseType: !422, size: 512, offset: 192)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !2246, file: !44, line: 91, baseType: !480, size: 512, offset: 704)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !2246, file: !44, line: 93, baseType: !420, size: 16, offset: 1216)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2246, file: !44, line: 94, baseType: !420, size: 16, offset: 1232)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2246, file: !44, line: 95, baseType: !420, size: 16, offset: 1248)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !2246, file: !44, line: 96, baseType: !420, size: 16, offset: 1264)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "bChildOfConstraint", file: !44, line: 332, baseType: !2261)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bChildOfConstraint", file: !44, line: 326, size: 1152, elements: !2262)
!2262 = !{!2263, !2264, !2265, !2266, !2267}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2261, file: !44, line: 327, baseType: !521, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2261, file: !44, line: 328, baseType: !352, size: 32, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2261, file: !44, line: 329, baseType: !352, size: 32, offset: 96)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "invmat", scope: !2261, file: !44, line: 330, baseType: !480, size: 512, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2261, file: !44, line: 331, baseType: !422, size: 512, offset: 640)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lattice", file: !2270, line: 72, baseType: !2271)
!2270 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lattice_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lattice", file: !2270, line: 52, size: 2240, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2305, !2306, !2309, !2310, !2311}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2271, file: !2270, line: 53, baseType: !525, size: 960)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2271, file: !2270, line: 54, baseType: !561, size: 64, offset: 960)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !2271, file: !2270, line: 56, baseType: !420, size: 16, offset: 1024)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !2271, file: !2270, line: 56, baseType: !420, size: 16, offset: 1040)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "pntsw", scope: !2271, file: !2270, line: 56, baseType: !420, size: 16, offset: 1056)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2271, file: !2270, line: 56, baseType: !420, size: 16, offset: 1072)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "opntsu", scope: !2271, file: !2270, line: 57, baseType: !420, size: 16, offset: 1088)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "opntsv", scope: !2271, file: !2270, line: 57, baseType: !420, size: 16, offset: 1104)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "opntsw", scope: !2271, file: !2270, line: 57, baseType: !420, size: 16, offset: 1120)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2271, file: !2270, line: 57, baseType: !420, size: 16, offset: 1136)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "typeu", scope: !2271, file: !2270, line: 58, baseType: !417, size: 8, offset: 1152)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "typev", scope: !2271, file: !2270, line: 58, baseType: !417, size: 8, offset: 1160)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "typew", scope: !2271, file: !2270, line: 58, baseType: !417, size: 8, offset: 1168)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2271, file: !2270, line: 58, baseType: !417, size: 8, offset: 1176)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "actbp", scope: !2271, file: !2270, line: 59, baseType: !352, size: 32, offset: 1184)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "fu", scope: !2271, file: !2270, line: 61, baseType: !467, size: 32, offset: 1216)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !2271, file: !2270, line: 61, baseType: !467, size: 32, offset: 1248)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !2271, file: !2270, line: 61, baseType: !467, size: 32, offset: 1280)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "du", scope: !2271, file: !2270, line: 61, baseType: !467, size: 32, offset: 1312)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !2271, file: !2270, line: 61, baseType: !467, size: 32, offset: 1344)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !2271, file: !2270, line: 61, baseType: !467, size: 32, offset: 1376)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2271, file: !2270, line: 63, baseType: !2295, size: 64, offset: 1408)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !774, line: 136, size: 288, elements: !2297)
!2297 = !{!2298, !2299, !2300, !2301, !2302, !2303, !2304}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2296, file: !774, line: 137, baseType: !674, size: 128)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2296, file: !774, line: 138, baseType: !467, size: 32, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2296, file: !774, line: 138, baseType: !467, size: 32, offset: 160)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !2296, file: !774, line: 139, baseType: !420, size: 16, offset: 192)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !2296, file: !774, line: 139, baseType: !420, size: 16, offset: 208)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2296, file: !774, line: 140, baseType: !467, size: 32, offset: 224)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2296, file: !774, line: 140, baseType: !467, size: 32, offset: 256)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2271, file: !2270, line: 65, baseType: !578, size: 64, offset: 1472)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2271, file: !2270, line: 66, baseType: !2307, size: 64, offset: 1536)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !774, line: 45, flags: DIFlagFwdDecl)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !2271, file: !2270, line: 68, baseType: !1375, size: 64, offset: 1600)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !2271, file: !2270, line: 69, baseType: !422, size: 512, offset: 1664)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "editlatt", scope: !2271, file: !2270, line: 71, baseType: !2312, size: 64, offset: 2176)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditLatt", file: !2270, line: 44, size: 128, elements: !2314)
!2314 = !{!2315, !2317, !2318}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !2313, file: !2270, line: 45, baseType: !2316, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2313, file: !2270, line: 47, baseType: !352, size: 32, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2313, file: !2270, line: 49, baseType: !2319, size: 32, offset: 96)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 32, elements: !675)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "bTrackToConstraint", file: !44, line: 192, baseType: !2322)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bTrackToConstraint", file: !44, line: 182, size: 704, elements: !2323)
!2323 = !{!2324, !2325, !2326, !2327, !2328, !2329}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2322, file: !44, line: 183, baseType: !521, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !2322, file: !44, line: 184, baseType: !352, size: 32, offset: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !2322, file: !44, line: 188, baseType: !352, size: 32, offset: 96)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2322, file: !44, line: 189, baseType: !352, size: 32, offset: 128)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2322, file: !44, line: 190, baseType: !352, size: 32, offset: 160)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2322, file: !44, line: 191, baseType: !422, size: 512, offset: 192)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "bKinematicConstraint", file: !44, line: 151, baseType: !2332)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bKinematicConstraint", file: !44, line: 135, size: 1472, elements: !2333)
!2333 = !{!2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2332, file: !44, line: 136, baseType: !521, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !2332, file: !44, line: 137, baseType: !420, size: 16, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2332, file: !44, line: 138, baseType: !420, size: 16, offset: 80)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "rootbone", scope: !2332, file: !44, line: 139, baseType: !420, size: 16, offset: 96)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "max_rootbone", scope: !2332, file: !44, line: 140, baseType: !420, size: 16, offset: 112)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2332, file: !44, line: 141, baseType: !422, size: 512, offset: 128)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "poletar", scope: !2332, file: !44, line: 142, baseType: !521, size: 64, offset: 640)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "polesubtarget", scope: !2332, file: !44, line: 143, baseType: !422, size: 512, offset: 704)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "poleangle", scope: !2332, file: !44, line: 144, baseType: !467, size: 32, offset: 1216)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2332, file: !44, line: 145, baseType: !467, size: 32, offset: 1248)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "orientweight", scope: !2332, file: !44, line: 146, baseType: !467, size: 32, offset: 1280)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "grabtarget", scope: !2332, file: !44, line: 147, baseType: !469, size: 96, offset: 1312)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2332, file: !44, line: 148, baseType: !420, size: 16, offset: 1408)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2332, file: !44, line: 149, baseType: !420, size: 16, offset: 1424)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2332, file: !44, line: 150, baseType: !467, size: 32, offset: 1440)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "bFollowPathConstraint", file: !44, line: 282, baseType: !2351)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bFollowPathConstraint", file: !44, line: 272, size: 192, elements: !2352)
!2352 = !{!2353, !2354, !2355, !2356, !2357, !2358}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2351, file: !44, line: 273, baseType: !521, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2351, file: !44, line: 275, baseType: !467, size: 32, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "offset_fac", scope: !2351, file: !44, line: 276, baseType: !467, size: 32, offset: 96)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "followflag", scope: !2351, file: !44, line: 278, baseType: !352, size: 32, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !2351, file: !44, line: 280, baseType: !420, size: 16, offset: 160)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !2351, file: !44, line: 281, baseType: !420, size: 16, offset: 176)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "bRotateLikeConstraint", file: !44, line: 200, baseType: !2361)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bRotateLikeConstraint", file: !44, line: 195, size: 640, elements: !2362)
!2362 = !{!2363, !2364, !2365, !2366}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2361, file: !44, line: 196, baseType: !521, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2361, file: !44, line: 197, baseType: !352, size: 32, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !2361, file: !44, line: 198, baseType: !352, size: 32, offset: 96)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2361, file: !44, line: 199, baseType: !422, size: 512, offset: 128)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_typedef, name: "bLocateLikeConstraint", file: !44, line: 208, baseType: !2369)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bLocateLikeConstraint", file: !44, line: 203, size: 640, elements: !2370)
!2370 = !{!2371, !2372, !2373, !2374}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2369, file: !44, line: 204, baseType: !521, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2369, file: !44, line: 205, baseType: !352, size: 32, offset: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !2369, file: !44, line: 206, baseType: !352, size: 32, offset: 96)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2369, file: !44, line: 207, baseType: !422, size: 512, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSizeLikeConstraint", file: !44, line: 216, baseType: !2377)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSizeLikeConstraint", file: !44, line: 211, size: 640, elements: !2378)
!2378 = !{!2379, !2380, !2381, !2382}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2377, file: !44, line: 212, baseType: !521, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2377, file: !44, line: 213, baseType: !352, size: 32, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !2377, file: !44, line: 214, baseType: !352, size: 32, offset: 96)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2377, file: !44, line: 215, baseType: !422, size: 512, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPythonConstraint", file: !44, line: 126, baseType: !2385)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPythonConstraint", file: !44, line: 115, size: 896, elements: !2386)
!2386 = !{!2387, !2388, !2389, !2390, !2391, !2392, !2393}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2385, file: !44, line: 116, baseType: !1842, size: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2385, file: !44, line: 117, baseType: !408, size: 64, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2385, file: !44, line: 119, baseType: !352, size: 32, offset: 128)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "tarnum", scope: !2385, file: !44, line: 120, baseType: !352, size: 32, offset: 160)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !2385, file: !44, line: 122, baseType: !433, size: 128, offset: 192)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2385, file: !44, line: 124, baseType: !521, size: 64, offset: 320)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2385, file: !44, line: 125, baseType: !422, size: 512, offset: 384)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionConstraint", file: !44, line: 253, baseType: !2396)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionConstraint", file: !44, line: 242, size: 832, elements: !2397)
!2397 = !{!2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2396, file: !44, line: 243, baseType: !521, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2396, file: !44, line: 244, baseType: !420, size: 16, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2396, file: !44, line: 245, baseType: !420, size: 16, offset: 80)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2396, file: !44, line: 246, baseType: !352, size: 32, offset: 96)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2396, file: !44, line: 247, baseType: !352, size: 32, offset: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2396, file: !44, line: 248, baseType: !467, size: 32, offset: 160)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2396, file: !44, line: 249, baseType: !467, size: 32, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2396, file: !44, line: 250, baseType: !352, size: 32, offset: 224)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !2396, file: !44, line: 251, baseType: !591, size: 64, offset: 256)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2396, file: !44, line: 252, baseType: !422, size: 512, offset: 320)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "bLockTrackConstraint", file: !44, line: 261, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bLockTrackConstraint", file: !44, line: 256, size: 640, elements: !2411)
!2411 = !{!2412, !2413, !2414, !2415}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2410, file: !44, line: 257, baseType: !521, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !2410, file: !44, line: 258, baseType: !352, size: 32, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "lockflag", scope: !2410, file: !44, line: 259, baseType: !352, size: 32, offset: 96)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2410, file: !44, line: 260, baseType: !422, size: 512, offset: 128)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDistLimitConstraint", file: !44, line: 416, baseType: !2418)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDistLimitConstraint", file: !44, line: 406, size: 704, elements: !2419)
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2425, !2426}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2418, file: !44, line: 407, baseType: !521, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2418, file: !44, line: 408, baseType: !422, size: 512, offset: 64)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2418, file: !44, line: 410, baseType: !467, size: 32, offset: 576)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2418, file: !44, line: 411, baseType: !467, size: 32, offset: 608)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2418, file: !44, line: 413, baseType: !420, size: 16, offset: 640)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2418, file: !44, line: 414, baseType: !420, size: 16, offset: 656)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2418, file: !44, line: 415, baseType: !352, size: 32, offset: 672)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_typedef, name: "bStretchToConstraint", file: !44, line: 296, baseType: !2429)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bStretchToConstraint", file: !44, line: 285, size: 832, elements: !2430)
!2430 = !{!2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2429, file: !44, line: 286, baseType: !521, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2429, file: !44, line: 287, baseType: !352, size: 32, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "volmode", scope: !2429, file: !44, line: 288, baseType: !352, size: 32, offset: 96)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !2429, file: !44, line: 289, baseType: !352, size: 32, offset: 128)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "orglength", scope: !2429, file: !44, line: 290, baseType: !467, size: 32, offset: 160)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "bulge", scope: !2429, file: !44, line: 291, baseType: !467, size: 32, offset: 192)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "bulge_min", scope: !2429, file: !44, line: 292, baseType: !467, size: 32, offset: 224)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "bulge_max", scope: !2429, file: !44, line: 293, baseType: !467, size: 32, offset: 256)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "bulge_smooth", scope: !2429, file: !44, line: 294, baseType: !467, size: 32, offset: 288)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2429, file: !44, line: 295, baseType: !422, size: 512, offset: 320)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMinMaxConstraint", file: !44, line: 239, baseType: !2443)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMinMaxConstraint", file: !44, line: 231, size: 832, elements: !2444)
!2444 = !{!2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2443, file: !44, line: 232, baseType: !521, size: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "minmaxflag", scope: !2443, file: !44, line: 233, baseType: !352, size: 32, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2443, file: !44, line: 234, baseType: !467, size: 32, offset: 96)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2443, file: !44, line: 235, baseType: !352, size: 32, offset: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !2443, file: !44, line: 236, baseType: !420, size: 16, offset: 160)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "stuck", scope: !2443, file: !44, line: 236, baseType: !420, size: 16, offset: 176)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2443, file: !44, line: 236, baseType: !420, size: 16, offset: 192)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2443, file: !44, line: 236, baseType: !420, size: 16, offset: 208)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2443, file: !44, line: 237, baseType: !469, size: 96, offset: 224)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2443, file: !44, line: 238, baseType: !422, size: 512, offset: 320)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "bRigidBodyJointConstraint", file: !44, line: 316, baseType: !2457)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bRigidBodyJointConstraint", file: !44, line: 299, size: 832, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2470, !2471, !2472, !2473, !2474, !2475}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2457, file: !44, line: 300, baseType: !521, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2457, file: !44, line: 301, baseType: !521, size: 64, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2457, file: !44, line: 302, baseType: !352, size: 32, offset: 128)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "pivX", scope: !2457, file: !44, line: 303, baseType: !467, size: 32, offset: 160)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "pivY", scope: !2457, file: !44, line: 304, baseType: !467, size: 32, offset: 192)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "pivZ", scope: !2457, file: !44, line: 305, baseType: !467, size: 32, offset: 224)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "axX", scope: !2457, file: !44, line: 306, baseType: !467, size: 32, offset: 256)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "axY", scope: !2457, file: !44, line: 307, baseType: !467, size: 32, offset: 288)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "axZ", scope: !2457, file: !44, line: 308, baseType: !467, size: 32, offset: 320)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "minLimit", scope: !2457, file: !44, line: 309, baseType: !2469, size: 192, offset: 352)
!2469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 192, elements: !453)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "maxLimit", scope: !2457, file: !44, line: 310, baseType: !2469, size: 192, offset: 544)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "extraFz", scope: !2457, file: !44, line: 311, baseType: !467, size: 32, offset: 736)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2457, file: !44, line: 312, baseType: !420, size: 16, offset: 768)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2457, file: !44, line: 313, baseType: !420, size: 16, offset: 784)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2457, file: !44, line: 314, baseType: !420, size: 16, offset: 800)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2457, file: !44, line: 315, baseType: !420, size: 16, offset: 816)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = !DIDerivedType(tag: DW_TAG_typedef, name: "bTransformConstraint", file: !44, line: 357, baseType: !2478)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bTransformConstraint", file: !44, line: 335, size: 1792, elements: !2479)
!2479 = !{!2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2478, file: !44, line: 336, baseType: !521, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2478, file: !44, line: 337, baseType: !422, size: 512, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2478, file: !44, line: 339, baseType: !420, size: 16, offset: 576)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2478, file: !44, line: 339, baseType: !420, size: 16, offset: 592)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2478, file: !44, line: 340, baseType: !1489, size: 24, offset: 608)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "expo", scope: !2478, file: !44, line: 341, baseType: !417, size: 8, offset: 632)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "from_min", scope: !2478, file: !44, line: 343, baseType: !469, size: 96, offset: 640)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "from_max", scope: !2478, file: !44, line: 344, baseType: !469, size: 96, offset: 736)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "to_min", scope: !2478, file: !44, line: 345, baseType: !469, size: 96, offset: 832)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "to_max", scope: !2478, file: !44, line: 346, baseType: !469, size: 96, offset: 928)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "from_min_rot", scope: !2478, file: !44, line: 348, baseType: !469, size: 96, offset: 1024)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "from_max_rot", scope: !2478, file: !44, line: 349, baseType: !469, size: 96, offset: 1120)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "to_min_rot", scope: !2478, file: !44, line: 350, baseType: !469, size: 96, offset: 1216)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "to_max_rot", scope: !2478, file: !44, line: 351, baseType: !469, size: 96, offset: 1312)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "from_min_scale", scope: !2478, file: !44, line: 353, baseType: !469, size: 96, offset: 1408)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "from_max_scale", scope: !2478, file: !44, line: 354, baseType: !469, size: 96, offset: 1504)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "to_min_scale", scope: !2478, file: !44, line: 355, baseType: !469, size: 96, offset: 1600)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "to_max_scale", scope: !2478, file: !44, line: 356, baseType: !469, size: 96, offset: 1696)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "bShrinkwrapConstraint", file: !44, line: 427, baseType: !2500)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bShrinkwrapConstraint", file: !44, line: 419, size: 192, elements: !2501)
!2501 = !{!2502, !2503, !2504, !2505, !2506, !2507, !2508}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !2500, file: !44, line: 420, baseType: !521, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2500, file: !44, line: 421, baseType: !467, size: 32, offset: 64)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "shrinkType", scope: !2500, file: !44, line: 422, baseType: !420, size: 16, offset: 96)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "projAxis", scope: !2500, file: !44, line: 423, baseType: !417, size: 8, offset: 112)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "projAxisSpace", scope: !2500, file: !44, line: 424, baseType: !417, size: 8, offset: 120)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "projLimit", scope: !2500, file: !44, line: 425, baseType: !467, size: 32, offset: 128)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2500, file: !44, line: 426, baseType: !2319, size: 32, offset: 160)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDampTrackConstraint", file: !44, line: 269, baseType: !2511)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDampTrackConstraint", file: !44, line: 264, size: 640, elements: !2512)
!2512 = !{!2513, !2514, !2515, !2516}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2511, file: !44, line: 265, baseType: !521, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !2511, file: !44, line: 266, baseType: !352, size: 32, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2511, file: !44, line: 267, baseType: !352, size: 32, offset: 96)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2511, file: !44, line: 268, baseType: !422, size: 512, offset: 128)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSplineIKConstraint", file: !44, line: 176, baseType: !2519)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSplineIKConstraint", file: !44, line: 164, size: 192, elements: !2520)
!2520 = !{!2521, !2522, !2523, !2524, !2525, !2526}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !2519, file: !44, line: 166, baseType: !521, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2519, file: !44, line: 169, baseType: !1080, size: 64, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "numpoints", scope: !2519, file: !44, line: 170, baseType: !420, size: 16, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "chainlen", scope: !2519, file: !44, line: 171, baseType: !420, size: 16, offset: 144)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2519, file: !44, line: 174, baseType: !420, size: 16, offset: 160)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "xzScaleMode", scope: !2519, file: !44, line: 175, baseType: !420, size: 16, offset: 176)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSameVolumeConstraint", file: !44, line: 222, baseType: !2529)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSameVolumeConstraint", file: !44, line: 219, size: 64, elements: !2530)
!2530 = !{!2531, !2532}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2529, file: !44, line: 220, baseType: !352, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2529, file: !44, line: 221, baseType: !467, size: 32, offset: 32)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "bFollowTrackConstraint", file: !44, line: 438, baseType: !2535)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bFollowTrackConstraint", file: !44, line: 430, size: 1280, elements: !2536)
!2536 = !{!2537, !2538, !2539, !2540, !2541, !2542, !2543}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2535, file: !44, line: 431, baseType: !1984, size: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !2535, file: !44, line: 432, baseType: !422, size: 512, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2535, file: !44, line: 433, baseType: !352, size: 32, offset: 576)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "frame_method", scope: !2535, file: !44, line: 434, baseType: !352, size: 32, offset: 608)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2535, file: !44, line: 435, baseType: !422, size: 512, offset: 640)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2535, file: !44, line: 436, baseType: !521, size: 64, offset: 1152)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "depth_ob", scope: !2535, file: !44, line: 437, baseType: !521, size: 64, offset: 1216)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "bCameraSolverConstraint", file: !44, line: 444, baseType: !2546)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bCameraSolverConstraint", file: !44, line: 441, size: 128, elements: !2547)
!2547 = !{!2548, !2549, !2550}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2546, file: !44, line: 442, baseType: !1984, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2546, file: !44, line: 443, baseType: !352, size: 32, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2546, file: !44, line: 443, baseType: !352, size: 32, offset: 96)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_typedef, name: "bObjectSolverConstraint", file: !44, line: 453, baseType: !2553)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bObjectSolverConstraint", file: !44, line: 447, size: 1216, elements: !2554)
!2554 = !{!2555, !2556, !2557, !2558, !2559, !2560}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2553, file: !44, line: 448, baseType: !1984, size: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2553, file: !44, line: 449, baseType: !352, size: 32, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2553, file: !44, line: 449, baseType: !352, size: 32, offset: 96)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2553, file: !44, line: 450, baseType: !422, size: 512, offset: 128)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "invmat", scope: !2553, file: !44, line: 451, baseType: !480, size: 512, offset: 640)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2553, file: !44, line: 452, baseType: !521, size: 64, offset: 1152)
!2561 = !{!2562, !0, !2641, !2643, !2645, !2647, !2649, !2651, !2653, !2655, !2657, !2659, !2661, !2663, !2665, !2667, !2669, !2671, !2673, !2675, !2677, !2679, !2681, !2683, !2687, !2689, !2691, !2693, !2695, !2697, !2699}
!2562 = !DIGlobalVariableExpression(var: !2563, expr: !DIExpression())
!2563 = distinct !DIGlobalVariable(name: "constraintsTypeInfo", scope: !2, file: !3, line: 4260, type: !2564, isLocal: true, isDefinition: true)
!2564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2565, size: 1856, elements: !2639)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTypeInfo", file: !2567, line: 108, baseType: !2568)
!2567 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_constraint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTypeInfo", file: !2567, line: 80, size: 1088, elements: !2569)
!2569 = !{!2570, !2571, !2572, !2573, !2574, !2595, !2604, !2608, !2612, !2617, !2621, !2635}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2568, file: !2567, line: 82, baseType: !420, size: 16)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2568, file: !2567, line: 83, baseType: !420, size: 16, offset: 16)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2568, file: !2567, line: 84, baseType: !1847, size: 256, offset: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !2568, file: !2567, line: 85, baseType: !1847, size: 256, offset: 288)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !2568, file: !2567, line: 89, baseType: !2575, size: 64, offset: 576)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{null, !2578}
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !44, line: 54, size: 960, elements: !2580)
!2580 = !{!2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2579, file: !44, line: 55, baseType: !2578, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2579, file: !44, line: 55, baseType: !2578, size: 64, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2579, file: !44, line: 57, baseType: !431, size: 64, offset: 128)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2579, file: !44, line: 58, baseType: !420, size: 16, offset: 192)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2579, file: !44, line: 59, baseType: !420, size: 16, offset: 208)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !2579, file: !44, line: 61, baseType: !417, size: 8, offset: 224)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !2579, file: !44, line: 62, baseType: !417, size: 8, offset: 232)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2579, file: !44, line: 64, baseType: !422, size: 512, offset: 240)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2579, file: !44, line: 66, baseType: !420, size: 16, offset: 752)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !2579, file: !44, line: 68, baseType: !467, size: 32, offset: 768)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !2579, file: !44, line: 69, baseType: !467, size: 32, offset: 800)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2579, file: !44, line: 71, baseType: !578, size: 64, offset: 832)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !2579, file: !44, line: 74, baseType: !467, size: 32, offset: 896)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !2579, file: !44, line: 75, baseType: !467, size: 32, offset: 928)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "id_looper", scope: !2568, file: !2567, line: 91, baseType: !2596, size: 64, offset: 640)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{null, !2578, !2599, !431}
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "ConstraintIDFunc", file: !2567, line: 65, baseType: !2600)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{null, !2578, !2603, !1111, !431}
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !2568, file: !2567, line: 93, baseType: !2605, size: 64, offset: 704)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = !DISubroutineType(types: !2607)
!2607 = !{null, !2578, !2578}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "new_data", scope: !2568, file: !2567, line: 95, baseType: !2609, size: 64, offset: 768)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{null, !431}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "get_constraint_targets", scope: !2568, file: !2567, line: 99, baseType: !2613, size: 64, offset: 832)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{!352, !2578, !2616}
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "flush_constraint_targets", scope: !2568, file: !2567, line: 101, baseType: !2618, size: 64, offset: 896)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{null, !2578, !2616, !1111}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "get_target_matrix", scope: !2568, file: !2567, line: 105, baseType: !2622, size: 64, offset: 960)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = !DISubroutineType(types: !2624)
!2624 = !{null, !2578, !2625, !2249, !467}
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintOb", file: !2567, line: 50, size: 1280, elements: !2627)
!2627 = !{!2628, !2629, !2630, !2631, !2632, !2633, !2634}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2626, file: !2567, line: 51, baseType: !1302, size: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2626, file: !2567, line: 52, baseType: !521, size: 64, offset: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "pchan", scope: !2626, file: !2567, line: 53, baseType: !405, size: 64, offset: 128)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !2626, file: !2567, line: 55, baseType: !480, size: 512, offset: 192)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "startmat", scope: !2626, file: !2567, line: 56, baseType: !480, size: 512, offset: 704)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2626, file: !2567, line: 58, baseType: !420, size: 16, offset: 1216)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !2626, file: !2567, line: 59, baseType: !420, size: 16, offset: 1232)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_constraint", scope: !2568, file: !2567, line: 107, baseType: !2636, size: 64, offset: 1024)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{null, !2578, !2625, !2616}
!2639 = !{!2640}
!2640 = !DISubrange(count: 29)
!2641 = !DIGlobalVariableExpression(var: !2642, expr: !DIExpression())
!2642 = distinct !DIGlobalVariable(name: "CTI_CHILDOF", scope: !2, file: !3, line: 829, type: !2566, isLocal: true, isDefinition: true)
!2643 = !DIGlobalVariableExpression(var: !2644, expr: !DIExpression())
!2644 = distinct !DIGlobalVariable(name: "CTI_TRACKTO", scope: !2, file: !3, line: 1004, type: !2566, isLocal: true, isDefinition: true)
!2645 = !DIGlobalVariableExpression(var: !2646, expr: !DIExpression())
!2646 = distinct !DIGlobalVariable(name: "CTI_KINEMATIC", scope: !2, file: !3, line: 1097, type: !2566, isLocal: true, isDefinition: true)
!2647 = !DIGlobalVariableExpression(var: !2648, expr: !DIExpression())
!2648 = distinct !DIGlobalVariable(name: "CTI_FOLLOWPATH", scope: !2, file: !3, line: 1286, type: !2566, isLocal: true, isDefinition: true)
!2649 = !DIGlobalVariableExpression(var: !2650, expr: !DIExpression())
!2650 = distinct !DIGlobalVariable(name: "CTI_ROTLIMIT", scope: !2, file: !3, line: 1391, type: !2566, isLocal: true, isDefinition: true)
!2651 = !DIGlobalVariableExpression(var: !2652, expr: !DIExpression())
!2652 = distinct !DIGlobalVariable(name: "CTI_LOCLIMIT", scope: !2, file: !3, line: 1334, type: !2566, isLocal: true, isDefinition: true)
!2653 = !DIGlobalVariableExpression(var: !2654, expr: !DIExpression())
!2654 = distinct !DIGlobalVariable(name: "CTI_SIZELIMIT", scope: !2, file: !3, line: 1450, type: !2566, isLocal: true, isDefinition: true)
!2655 = !DIGlobalVariableExpression(var: !2656, expr: !DIExpression())
!2656 = distinct !DIGlobalVariable(name: "CTI_ROTLIKE", scope: !2, file: !3, line: 1652, type: !2566, isLocal: true, isDefinition: true)
!2657 = !DIGlobalVariableExpression(var: !2658, expr: !DIExpression())
!2658 = distinct !DIGlobalVariable(name: "CTI_LOCLIKE", scope: !2, file: !3, line: 1540, type: !2566, isLocal: true, isDefinition: true)
!2659 = !DIGlobalVariableExpression(var: !2660, expr: !DIExpression())
!2660 = distinct !DIGlobalVariable(name: "CTI_SIZELIKE", scope: !2, file: !3, line: 1748, type: !2566, isLocal: true, isDefinition: true)
!2661 = !DIGlobalVariableExpression(var: !2662, expr: !DIExpression())
!2662 = distinct !DIGlobalVariable(name: "CTI_PYTHON", scope: !2, file: !3, line: 1996, type: !2566, isLocal: true, isDefinition: true)
!2663 = !DIGlobalVariableExpression(var: !2664, expr: !DIExpression())
!2664 = distinct !DIGlobalVariable(name: "CTI_ACTION", scope: !2, file: !3, line: 2163, type: !2566, isLocal: true, isDefinition: true)
!2665 = !DIGlobalVariableExpression(var: !2666, expr: !DIExpression())
!2666 = distinct !DIGlobalVariable(name: "CTI_LOCKTRACK", scope: !2, file: !3, line: 2471, type: !2566, isLocal: true, isDefinition: true)
!2667 = !DIGlobalVariableExpression(var: !2668, expr: !DIExpression())
!2668 = distinct !DIGlobalVariable(name: "CTI_DISTLIMIT", scope: !2, file: !3, line: 2595, type: !2566, isLocal: true, isDefinition: true)
!2669 = !DIGlobalVariableExpression(var: !2670, expr: !DIExpression())
!2670 = distinct !DIGlobalVariable(name: "CTI_STRETCHTO", scope: !2, file: !3, line: 2795, type: !2566, isLocal: true, isDefinition: true)
!2671 = !DIGlobalVariableExpression(var: !2672, expr: !DIExpression())
!2672 = distinct !DIGlobalVariable(name: "CTI_MINMAX", scope: !2, file: !3, line: 2939, type: !2566, isLocal: true, isDefinition: true)
!2673 = !DIGlobalVariableExpression(var: !2674, expr: !DIExpression())
!2674 = distinct !DIGlobalVariable(name: "CTI_RIGIDBODYJOINT", scope: !2, file: !3, line: 2999, type: !2566, isLocal: true, isDefinition: true)
!2675 = !DIGlobalVariableExpression(var: !2676, expr: !DIExpression())
!2676 = distinct !DIGlobalVariable(name: "CTI_CLAMPTO", scope: !2, file: !3, line: 3171, type: !2566, isLocal: true, isDefinition: true)
!2677 = !DIGlobalVariableExpression(var: !2678, expr: !DIExpression())
!2678 = distinct !DIGlobalVariable(name: "CTI_TRANSFORM", scope: !2, file: !3, line: 3334, type: !2566, isLocal: true, isDefinition: true)
!2679 = !DIGlobalVariableExpression(var: !2680, expr: !DIExpression())
!2680 = distinct !DIGlobalVariable(name: "CTI_SHRINKWRAP", scope: !2, file: !3, line: 3518, type: !2566, isLocal: true, isDefinition: true)
!2681 = !DIGlobalVariableExpression(var: !2682, expr: !DIExpression())
!2682 = distinct !DIGlobalVariable(name: "CTI_DAMPTRACK", scope: !2, file: !3, line: 3645, type: !2566, isLocal: true, isDefinition: true)
!2683 = !DIGlobalVariableExpression(var: !2684, expr: !DIExpression())
!2684 = distinct !DIGlobalVariable(name: "track_dir_vecs", scope: !2, file: !3, line: 3577, type: !2685, isLocal: true, isDefinition: true)
!2685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 576, elements: !2686)
!2686 = !{!454, !471}
!2687 = !DIGlobalVariableExpression(var: !2688, expr: !DIExpression())
!2688 = distinct !DIGlobalVariable(name: "CTI_SPLINEIK", scope: !2, file: !3, line: 3738, type: !2566, isLocal: true, isDefinition: true)
!2689 = !DIGlobalVariableExpression(var: !2690, expr: !DIExpression())
!2690 = distinct !DIGlobalVariable(name: "CTI_TRANSLIKE", scope: !2, file: !3, line: 1809, type: !2566, isLocal: true, isDefinition: true)
!2691 = !DIGlobalVariableExpression(var: !2692, expr: !DIExpression())
!2692 = distinct !DIGlobalVariable(name: "CTI_SAMEVOL", scope: !2, file: !3, line: 1865, type: !2566, isLocal: true, isDefinition: true)
!2693 = !DIGlobalVariableExpression(var: !2694, expr: !DIExpression())
!2694 = distinct !DIGlobalVariable(name: "CTI_PIVOT", scope: !2, file: !3, line: 3862, type: !2566, isLocal: true, isDefinition: true)
!2695 = !DIGlobalVariableExpression(var: !2696, expr: !DIExpression())
!2696 = distinct !DIGlobalVariable(name: "CTI_FOLLOWTRACK", scope: !2, file: !3, line: 4110, type: !2566, isLocal: true, isDefinition: true)
!2697 = !DIGlobalVariableExpression(var: !2698, expr: !DIExpression())
!2698 = distinct !DIGlobalVariable(name: "CTI_CAMERASOLVER", scope: !2, file: !3, line: 4165, type: !2566, isLocal: true, isDefinition: true)
!2699 = !DIGlobalVariableExpression(var: !2700, expr: !DIExpression())
!2700 = distinct !DIGlobalVariable(name: "CTI_OBJECTSOLVER", scope: !2, file: !3, line: 4239, type: !2566, isLocal: true, isDefinition: true)
!2701 = !{i32 7, !"Dwarf Version", i32 4}
!2702 = !{i32 2, !"Debug Info Version", i32 3}
!2703 = !{i32 1, !"wchar_size", i32 4}
!2704 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2705 = distinct !DISubprogram(name: "BKE_constraint_unique_name", scope: !3, file: !3, line: 106, type: !2706, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{null, !2708, !1287}
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !44, line: 76, baseType: !2579)
!2710 = !{}
!2711 = !DILocalVariable(name: "con", arg: 1, scope: !2705, file: !3, line: 106, type: !2708)
!2712 = !DILocation(line: 106, column: 46, scope: !2705)
!2713 = !DILocalVariable(name: "list", arg: 2, scope: !2705, file: !3, line: 106, type: !1287)
!2714 = !DILocation(line: 106, column: 61, scope: !2705)
!2715 = !DILocation(line: 108, column: 17, scope: !2705)
!2716 = !DILocation(line: 108, column: 23, scope: !2705)
!2717 = !DILocation(line: 108, column: 2, scope: !2705)
!2718 = !DILocation(line: 109, column: 1, scope: !2705)
!2719 = distinct !DISubprogram(name: "BKE_constraints_make_evalob", scope: !3, file: !3, line: 115, type: !2720, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{!2625, !2722, !2242, !431, !420}
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1304, line: 1299, baseType: !1303)
!2724 = !DILocalVariable(name: "scene", arg: 1, scope: !2719, file: !3, line: 115, type: !2722)
!2725 = !DILocation(line: 115, column: 51, scope: !2719)
!2726 = !DILocalVariable(name: "ob", arg: 2, scope: !2719, file: !3, line: 115, type: !2242)
!2727 = !DILocation(line: 115, column: 66, scope: !2719)
!2728 = !DILocalVariable(name: "subdata", arg: 3, scope: !2719, file: !3, line: 115, type: !431)
!2729 = !DILocation(line: 115, column: 76, scope: !2719)
!2730 = !DILocalVariable(name: "datatype", arg: 4, scope: !2719, file: !3, line: 115, type: !420)
!2731 = !DILocation(line: 115, column: 91, scope: !2719)
!2732 = !DILocalVariable(name: "cob", scope: !2719, file: !3, line: 117, type: !2733)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintOb", file: !2567, line: 60, baseType: !2626)
!2735 = !DILocation(line: 117, column: 17, scope: !2719)
!2736 = !DILocation(line: 120, column: 8, scope: !2719)
!2737 = !DILocation(line: 120, column: 6, scope: !2719)
!2738 = !DILocation(line: 123, column: 15, scope: !2719)
!2739 = !DILocation(line: 123, column: 2, scope: !2719)
!2740 = !DILocation(line: 123, column: 7, scope: !2719)
!2741 = !DILocation(line: 123, column: 13, scope: !2719)
!2742 = !DILocation(line: 126, column: 10, scope: !2719)
!2743 = !DILocation(line: 126, column: 2, scope: !2719)
!2744 = !DILocation(line: 130, column: 8, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 130, column: 8)
!2746 = distinct !DILexicalBlock(scope: !2747, file: !3, line: 128, column: 3)
!2747 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 126, column: 20)
!2748 = !DILocation(line: 130, column: 8, scope: !2746)
!2749 = !DILocation(line: 131, column: 15, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2745, file: !3, line: 130, column: 12)
!2751 = !DILocation(line: 131, column: 5, scope: !2750)
!2752 = !DILocation(line: 131, column: 10, scope: !2750)
!2753 = !DILocation(line: 131, column: 13, scope: !2750)
!2754 = !DILocation(line: 132, column: 17, scope: !2750)
!2755 = !DILocation(line: 132, column: 5, scope: !2750)
!2756 = !DILocation(line: 132, column: 10, scope: !2750)
!2757 = !DILocation(line: 132, column: 15, scope: !2750)
!2758 = !DILocation(line: 133, column: 5, scope: !2750)
!2759 = !DILocation(line: 133, column: 10, scope: !2750)
!2760 = !DILocation(line: 133, column: 19, scope: !2750)
!2761 = !DILocation(line: 134, column: 16, scope: !2750)
!2762 = !DILocation(line: 134, column: 21, scope: !2750)
!2763 = !DILocation(line: 134, column: 29, scope: !2750)
!2764 = !DILocation(line: 134, column: 33, scope: !2750)
!2765 = !DILocation(line: 134, column: 5, scope: !2750)
!2766 = !DILocation(line: 135, column: 4, scope: !2750)
!2767 = !DILocation(line: 137, column: 13, scope: !2745)
!2768 = !DILocation(line: 137, column: 18, scope: !2745)
!2769 = !DILocation(line: 137, column: 5, scope: !2745)
!2770 = !DILocation(line: 139, column: 15, scope: !2746)
!2771 = !DILocation(line: 139, column: 20, scope: !2746)
!2772 = !DILocation(line: 139, column: 30, scope: !2746)
!2773 = !DILocation(line: 139, column: 35, scope: !2746)
!2774 = !DILocation(line: 139, column: 4, scope: !2746)
!2775 = !DILocation(line: 140, column: 4, scope: !2746)
!2776 = !DILocation(line: 145, column: 8, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 145, column: 8)
!2778 = distinct !DILexicalBlock(scope: !2747, file: !3, line: 143, column: 3)
!2779 = !DILocation(line: 145, column: 11, scope: !2777)
!2780 = !DILocation(line: 145, column: 14, scope: !2777)
!2781 = !DILocation(line: 145, column: 8, scope: !2778)
!2782 = !DILocation(line: 146, column: 15, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 145, column: 23)
!2784 = !DILocation(line: 146, column: 5, scope: !2783)
!2785 = !DILocation(line: 146, column: 10, scope: !2783)
!2786 = !DILocation(line: 146, column: 13, scope: !2783)
!2787 = !DILocation(line: 147, column: 34, scope: !2783)
!2788 = !DILocation(line: 147, column: 18, scope: !2783)
!2789 = !DILocation(line: 147, column: 5, scope: !2783)
!2790 = !DILocation(line: 147, column: 10, scope: !2783)
!2791 = !DILocation(line: 147, column: 16, scope: !2783)
!2792 = !DILocation(line: 148, column: 17, scope: !2783)
!2793 = !DILocation(line: 148, column: 5, scope: !2783)
!2794 = !DILocation(line: 148, column: 10, scope: !2783)
!2795 = !DILocation(line: 148, column: 15, scope: !2783)
!2796 = !DILocation(line: 150, column: 9, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2783, file: !3, line: 150, column: 9)
!2798 = !DILocation(line: 150, column: 14, scope: !2797)
!2799 = !DILocation(line: 150, column: 21, scope: !2797)
!2800 = !DILocation(line: 150, column: 29, scope: !2797)
!2801 = !DILocation(line: 150, column: 9, scope: !2783)
!2802 = !DILocation(line: 152, column: 22, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 150, column: 34)
!2804 = !DILocation(line: 152, column: 27, scope: !2803)
!2805 = !DILocation(line: 152, column: 34, scope: !2803)
!2806 = !DILocation(line: 152, column: 6, scope: !2803)
!2807 = !DILocation(line: 152, column: 11, scope: !2803)
!2808 = !DILocation(line: 152, column: 20, scope: !2803)
!2809 = !DILocation(line: 153, column: 5, scope: !2803)
!2810 = !DILocation(line: 156, column: 6, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 154, column: 10)
!2812 = !DILocation(line: 156, column: 11, scope: !2811)
!2813 = !DILocation(line: 156, column: 20, scope: !2811)
!2814 = !DILocation(line: 160, column: 17, scope: !2783)
!2815 = !DILocation(line: 160, column: 22, scope: !2783)
!2816 = !DILocation(line: 160, column: 30, scope: !2783)
!2817 = !DILocation(line: 160, column: 34, scope: !2783)
!2818 = !DILocation(line: 160, column: 41, scope: !2783)
!2819 = !DILocation(line: 160, column: 46, scope: !2783)
!2820 = !DILocation(line: 160, column: 53, scope: !2783)
!2821 = !DILocation(line: 160, column: 5, scope: !2783)
!2822 = !DILocation(line: 161, column: 4, scope: !2783)
!2823 = !DILocation(line: 163, column: 13, scope: !2777)
!2824 = !DILocation(line: 163, column: 18, scope: !2777)
!2825 = !DILocation(line: 163, column: 5, scope: !2777)
!2826 = !DILocation(line: 165, column: 15, scope: !2778)
!2827 = !DILocation(line: 165, column: 20, scope: !2778)
!2828 = !DILocation(line: 165, column: 30, scope: !2778)
!2829 = !DILocation(line: 165, column: 35, scope: !2778)
!2830 = !DILocation(line: 165, column: 4, scope: !2778)
!2831 = !DILocation(line: 166, column: 4, scope: !2778)
!2832 = !DILocation(line: 169, column: 12, scope: !2747)
!2833 = !DILocation(line: 169, column: 17, scope: !2747)
!2834 = !DILocation(line: 169, column: 4, scope: !2747)
!2835 = !DILocation(line: 170, column: 12, scope: !2747)
!2836 = !DILocation(line: 170, column: 17, scope: !2747)
!2837 = !DILocation(line: 170, column: 4, scope: !2747)
!2838 = !DILocation(line: 171, column: 4, scope: !2747)
!2839 = !DILocation(line: 174, column: 9, scope: !2719)
!2840 = !DILocation(line: 174, column: 2, scope: !2719)
!2841 = distinct !DISubprogram(name: "BKE_constraints_clear_evalob", scope: !3, file: !3, line: 178, type: !2842, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{null, !2733}
!2844 = !DILocalVariable(name: "cob", arg: 1, scope: !2841, file: !3, line: 178, type: !2733)
!2845 = !DILocation(line: 178, column: 50, scope: !2841)
!2846 = !DILocalVariable(name: "delta", scope: !2841, file: !3, line: 180, type: !480)
!2847 = !DILocation(line: 180, column: 8, scope: !2841)
!2848 = !DILocalVariable(name: "imat", scope: !2841, file: !3, line: 180, type: !480)
!2849 = !DILocation(line: 180, column: 21, scope: !2841)
!2850 = !DILocation(line: 183, column: 6, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 183, column: 6)
!2852 = !DILocation(line: 183, column: 10, scope: !2851)
!2853 = !DILocation(line: 183, column: 6, scope: !2841)
!2854 = !DILocation(line: 184, column: 3, scope: !2851)
!2855 = !DILocation(line: 187, column: 15, scope: !2841)
!2856 = !DILocation(line: 187, column: 21, scope: !2841)
!2857 = !DILocation(line: 187, column: 26, scope: !2841)
!2858 = !DILocation(line: 187, column: 2, scope: !2841)
!2859 = !DILocation(line: 192, column: 14, scope: !2841)
!2860 = !DILocation(line: 192, column: 21, scope: !2841)
!2861 = !DILocation(line: 192, column: 26, scope: !2841)
!2862 = !DILocation(line: 192, column: 34, scope: !2841)
!2863 = !DILocation(line: 192, column: 2, scope: !2841)
!2864 = !DILocation(line: 195, column: 10, scope: !2841)
!2865 = !DILocation(line: 195, column: 15, scope: !2841)
!2866 = !DILocation(line: 195, column: 2, scope: !2841)
!2867 = !DILocation(line: 199, column: 8, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 199, column: 8)
!2869 = distinct !DILexicalBlock(scope: !2870, file: !3, line: 197, column: 3)
!2870 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 195, column: 21)
!2871 = !DILocation(line: 199, column: 13, scope: !2868)
!2872 = !DILocation(line: 199, column: 8, scope: !2869)
!2873 = !DILocation(line: 201, column: 16, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 199, column: 17)
!2875 = !DILocation(line: 201, column: 21, scope: !2874)
!2876 = !DILocation(line: 201, column: 25, scope: !2874)
!2877 = !DILocation(line: 201, column: 32, scope: !2874)
!2878 = !DILocation(line: 201, column: 37, scope: !2874)
!2879 = !DILocation(line: 201, column: 5, scope: !2874)
!2880 = !DILocation(line: 204, column: 18, scope: !2874)
!2881 = !DILocation(line: 204, column: 23, scope: !2874)
!2882 = !DILocation(line: 204, column: 27, scope: !2874)
!2883 = !DILocation(line: 204, column: 37, scope: !2874)
!2884 = !DILocation(line: 204, column: 5, scope: !2874)
!2885 = !DILocation(line: 205, column: 4, scope: !2874)
!2886 = !DILocation(line: 206, column: 4, scope: !2869)
!2887 = !DILocation(line: 211, column: 8, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 211, column: 8)
!2889 = distinct !DILexicalBlock(scope: !2870, file: !3, line: 209, column: 3)
!2890 = !DILocation(line: 211, column: 13, scope: !2888)
!2891 = !DILocation(line: 211, column: 16, scope: !2888)
!2892 = !DILocation(line: 211, column: 19, scope: !2888)
!2893 = !DILocation(line: 211, column: 24, scope: !2888)
!2894 = !DILocation(line: 211, column: 8, scope: !2889)
!2895 = !DILocation(line: 213, column: 17, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2888, file: !3, line: 211, column: 31)
!2897 = !DILocation(line: 213, column: 22, scope: !2896)
!2898 = !DILocation(line: 213, column: 29, scope: !2896)
!2899 = !DILocation(line: 213, column: 39, scope: !2896)
!2900 = !DILocation(line: 213, column: 44, scope: !2896)
!2901 = !DILocation(line: 213, column: 48, scope: !2896)
!2902 = !DILocation(line: 213, column: 54, scope: !2896)
!2903 = !DILocation(line: 213, column: 59, scope: !2896)
!2904 = !DILocation(line: 213, column: 5, scope: !2896)
!2905 = !DILocation(line: 216, column: 18, scope: !2896)
!2906 = !DILocation(line: 216, column: 23, scope: !2896)
!2907 = !DILocation(line: 216, column: 30, scope: !2896)
!2908 = !DILocation(line: 216, column: 40, scope: !2896)
!2909 = !DILocation(line: 216, column: 5, scope: !2896)
!2910 = !DILocation(line: 217, column: 4, scope: !2896)
!2911 = !DILocation(line: 218, column: 4, scope: !2889)
!2912 = !DILocation(line: 223, column: 2, scope: !2841)
!2913 = !DILocation(line: 223, column: 12, scope: !2841)
!2914 = !DILocation(line: 224, column: 1, scope: !2841)
!2915 = distinct !DISubprogram(name: "BKE_constraint_mat_convertspace", scope: !3, file: !3, line: 232, type: !2916, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!2916 = !DISubroutineType(types: !2917)
!2917 = !{null, !2242, !399, !1117, !420, !420}
!2918 = !DILocalVariable(name: "ob", arg: 1, scope: !2915, file: !3, line: 232, type: !2242)
!2919 = !DILocation(line: 232, column: 46, scope: !2915)
!2920 = !DILocalVariable(name: "pchan", arg: 2, scope: !2915, file: !3, line: 232, type: !399)
!2921 = !DILocation(line: 232, column: 64, scope: !2915)
!2922 = !DILocalVariable(name: "mat", arg: 3, scope: !2915, file: !3, line: 232, type: !1117)
!2923 = !DILocation(line: 232, column: 77, scope: !2915)
!2924 = !DILocalVariable(name: "from", arg: 4, scope: !2915, file: !3, line: 232, type: !420)
!2925 = !DILocation(line: 232, column: 94, scope: !2915)
!2926 = !DILocalVariable(name: "to", arg: 5, scope: !2915, file: !3, line: 232, type: !420)
!2927 = !DILocation(line: 232, column: 106, scope: !2915)
!2928 = !DILocalVariable(name: "diff_mat", scope: !2915, file: !3, line: 234, type: !480)
!2929 = !DILocation(line: 234, column: 8, scope: !2915)
!2930 = !DILocalVariable(name: "imat", scope: !2915, file: !3, line: 235, type: !480)
!2931 = !DILocation(line: 235, column: 8, scope: !2915)
!2932 = !DILocation(line: 238, column: 6, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 238, column: 6)
!2934 = !DILocation(line: 238, column: 9, scope: !2933)
!2935 = !DILocation(line: 238, column: 17, scope: !2933)
!2936 = !DILocation(line: 238, column: 20, scope: !2933)
!2937 = !DILocation(line: 238, column: 24, scope: !2933)
!2938 = !DILocation(line: 238, column: 6, scope: !2915)
!2939 = !DILocation(line: 238, column: 33, scope: !2933)
!2940 = !DILocation(line: 240, column: 6, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 240, column: 6)
!2942 = !DILocation(line: 240, column: 14, scope: !2941)
!2943 = !DILocation(line: 240, column: 11, scope: !2941)
!2944 = !DILocation(line: 240, column: 6, scope: !2915)
!2945 = !DILocation(line: 240, column: 18, scope: !2941)
!2946 = !DILocation(line: 243, column: 6, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 243, column: 6)
!2948 = !DILocation(line: 243, column: 6, scope: !2915)
!2949 = !DILocation(line: 245, column: 11, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 243, column: 13)
!2951 = !DILocation(line: 245, column: 3, scope: !2950)
!2952 = !DILocation(line: 249, column: 18, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 247, column: 4)
!2954 = distinct !DILexicalBlock(scope: !2950, file: !3, line: 245, column: 17)
!2955 = !DILocation(line: 249, column: 24, scope: !2953)
!2956 = !DILocation(line: 249, column: 28, scope: !2953)
!2957 = !DILocation(line: 249, column: 5, scope: !2953)
!2958 = !DILocation(line: 250, column: 17, scope: !2953)
!2959 = !DILocation(line: 250, column: 22, scope: !2953)
!2960 = !DILocation(line: 250, column: 28, scope: !2953)
!2961 = !DILocation(line: 250, column: 5, scope: !2953)
!2962 = !DILocation(line: 253, column: 9, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 253, column: 9)
!2964 = !DILocation(line: 253, column: 9, scope: !2953)
!2965 = !DILocation(line: 255, column: 38, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2963, file: !3, line: 253, column: 70)
!2967 = !DILocation(line: 255, column: 42, scope: !2966)
!2968 = !DILocation(line: 255, column: 49, scope: !2966)
!2969 = !DILocation(line: 255, column: 77, scope: !2966)
!2970 = !DILocation(line: 255, column: 6, scope: !2966)
!2971 = !DILocation(line: 256, column: 5, scope: !2966)
!2972 = !DILocation(line: 257, column: 5, scope: !2953)
!2973 = !DILocation(line: 262, column: 9, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 262, column: 9)
!2975 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 260, column: 4)
!2976 = !DILocation(line: 262, column: 12, scope: !2974)
!2977 = !DILocation(line: 262, column: 9, scope: !2975)
!2978 = !DILocation(line: 263, column: 18, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 262, column: 39)
!2980 = !DILocation(line: 263, column: 23, scope: !2979)
!2981 = !DILocation(line: 263, column: 27, scope: !2979)
!2982 = !DILocation(line: 263, column: 34, scope: !2979)
!2983 = !DILocation(line: 263, column: 6, scope: !2979)
!2984 = !DILocation(line: 264, column: 5, scope: !2979)
!2985 = !DILocation(line: 266, column: 14, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 266, column: 14)
!2987 = !DILocation(line: 266, column: 17, scope: !2986)
!2988 = !DILocation(line: 266, column: 14, scope: !2974)
!2989 = !DILocation(line: 267, column: 10, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 267, column: 10)
!2991 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 266, column: 44)
!2992 = !DILocation(line: 267, column: 17, scope: !2990)
!2993 = !DILocation(line: 267, column: 10, scope: !2991)
!2994 = !DILocation(line: 268, column: 37, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 267, column: 23)
!2996 = !DILocation(line: 268, column: 44, scope: !2995)
!2997 = !DILocation(line: 268, column: 49, scope: !2995)
!2998 = !DILocation(line: 268, column: 7, scope: !2995)
!2999 = !DILocation(line: 269, column: 6, scope: !2995)
!3000 = !DILocation(line: 270, column: 5, scope: !2991)
!3001 = !DILocation(line: 272, column: 14, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 272, column: 14)
!3003 = !DILocation(line: 272, column: 17, scope: !3002)
!3004 = !DILocation(line: 272, column: 14, scope: !2986)
!3005 = !DILocation(line: 273, column: 10, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 273, column: 10)
!3007 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 272, column: 47)
!3008 = !DILocation(line: 273, column: 17, scope: !3006)
!3009 = !DILocation(line: 273, column: 10, scope: !3007)
!3010 = !DILocation(line: 274, column: 20, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 273, column: 23)
!3012 = !DILocation(line: 274, column: 26, scope: !3011)
!3013 = !DILocation(line: 274, column: 33, scope: !3011)
!3014 = !DILocation(line: 274, column: 39, scope: !3011)
!3015 = !DILocation(line: 274, column: 7, scope: !3011)
!3016 = !DILocation(line: 275, column: 19, scope: !3011)
!3017 = !DILocation(line: 275, column: 24, scope: !3011)
!3018 = !DILocation(line: 275, column: 30, scope: !3011)
!3019 = !DILocation(line: 275, column: 7, scope: !3011)
!3020 = !DILocation(line: 276, column: 6, scope: !3011)
!3021 = !DILocation(line: 277, column: 5, scope: !3007)
!3022 = !DILocation(line: 278, column: 5, scope: !2975)
!3023 = !DILocation(line: 283, column: 9, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 283, column: 9)
!3025 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 281, column: 4)
!3026 = !DILocation(line: 283, column: 16, scope: !3024)
!3027 = !DILocation(line: 283, column: 9, scope: !3025)
!3028 = !DILocation(line: 285, column: 36, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 283, column: 22)
!3030 = !DILocation(line: 285, column: 43, scope: !3029)
!3031 = !DILocation(line: 285, column: 48, scope: !3029)
!3032 = !DILocation(line: 285, column: 6, scope: !3029)
!3033 = !DILocation(line: 286, column: 5, scope: !3029)
!3034 = !DILocation(line: 289, column: 9, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 289, column: 9)
!3036 = !DILocation(line: 289, column: 9, scope: !3025)
!3037 = !DILocation(line: 291, column: 38, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 289, column: 70)
!3039 = !DILocation(line: 291, column: 42, scope: !3038)
!3040 = !DILocation(line: 291, column: 49, scope: !3038)
!3041 = !DILocation(line: 291, column: 77, scope: !3038)
!3042 = !DILocation(line: 291, column: 6, scope: !3038)
!3043 = !DILocation(line: 292, column: 5, scope: !3038)
!3044 = !DILocation(line: 293, column: 5, scope: !3025)
!3045 = !DILocation(line: 298, column: 9, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 298, column: 9)
!3047 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 296, column: 4)
!3048 = !DILocation(line: 298, column: 16, scope: !3046)
!3049 = !DILocation(line: 298, column: 9, scope: !3047)
!3050 = !DILocation(line: 299, column: 17, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 298, column: 22)
!3052 = !DILocation(line: 299, column: 27, scope: !3051)
!3053 = !DILocation(line: 299, column: 34, scope: !3051)
!3054 = !DILocation(line: 299, column: 40, scope: !3051)
!3055 = !DILocation(line: 299, column: 6, scope: !3051)
!3056 = !DILocation(line: 300, column: 18, scope: !3051)
!3057 = !DILocation(line: 300, column: 23, scope: !3051)
!3058 = !DILocation(line: 300, column: 28, scope: !3051)
!3059 = !DILocation(line: 300, column: 6, scope: !3051)
!3060 = !DILocation(line: 301, column: 5, scope: !3051)
!3061 = !DILocation(line: 304, column: 9, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 304, column: 9)
!3063 = !DILocation(line: 304, column: 9, scope: !3047)
!3064 = !DILocation(line: 306, column: 38, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 304, column: 67)
!3066 = !DILocation(line: 306, column: 42, scope: !3065)
!3067 = !DILocation(line: 306, column: 49, scope: !3065)
!3068 = !DILocation(line: 306, column: 77, scope: !3065)
!3069 = !DILocation(line: 306, column: 6, scope: !3065)
!3070 = !DILocation(line: 307, column: 5, scope: !3065)
!3071 = !DILocation(line: 308, column: 5, scope: !3047)
!3072 = !DILocation(line: 311, column: 2, scope: !2950)
!3073 = !DILocation(line: 314, column: 7, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 314, column: 7)
!3075 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 312, column: 7)
!3076 = !DILocation(line: 314, column: 12, scope: !3074)
!3077 = !DILocation(line: 314, column: 38, scope: !3074)
!3078 = !DILocation(line: 314, column: 41, scope: !3074)
!3079 = !DILocation(line: 314, column: 44, scope: !3074)
!3080 = !DILocation(line: 314, column: 7, scope: !3075)
!3081 = !DILocation(line: 316, column: 8, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 316, column: 8)
!3083 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 314, column: 71)
!3084 = !DILocation(line: 316, column: 12, scope: !3082)
!3085 = !DILocation(line: 316, column: 8, scope: !3083)
!3086 = !DILocation(line: 318, column: 17, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 316, column: 20)
!3088 = !DILocation(line: 318, column: 27, scope: !3087)
!3089 = !DILocation(line: 318, column: 31, scope: !3087)
!3090 = !DILocation(line: 318, column: 39, scope: !3087)
!3091 = !DILocation(line: 318, column: 46, scope: !3087)
!3092 = !DILocation(line: 318, column: 50, scope: !3087)
!3093 = !DILocation(line: 318, column: 5, scope: !3087)
!3094 = !DILocation(line: 319, column: 23, scope: !3087)
!3095 = !DILocation(line: 319, column: 29, scope: !3087)
!3096 = !DILocation(line: 319, column: 5, scope: !3087)
!3097 = !DILocation(line: 320, column: 17, scope: !3087)
!3098 = !DILocation(line: 320, column: 22, scope: !3087)
!3099 = !DILocation(line: 320, column: 28, scope: !3087)
!3100 = !DILocation(line: 320, column: 5, scope: !3087)
!3101 = !DILocation(line: 321, column: 4, scope: !3087)
!3102 = !DILocation(line: 326, column: 24, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 322, column: 9)
!3104 = !DILocation(line: 326, column: 28, scope: !3103)
!3105 = !DILocation(line: 326, column: 5, scope: !3103)
!3106 = !DILocation(line: 327, column: 18, scope: !3103)
!3107 = !DILocation(line: 327, column: 5, scope: !3103)
!3108 = !DILocation(line: 328, column: 13, scope: !3103)
!3109 = !DILocation(line: 328, column: 5, scope: !3103)
!3110 = !DILocation(line: 330, column: 23, scope: !3103)
!3111 = !DILocation(line: 330, column: 29, scope: !3103)
!3112 = !DILocation(line: 330, column: 5, scope: !3103)
!3113 = !DILocation(line: 331, column: 17, scope: !3103)
!3114 = !DILocation(line: 331, column: 22, scope: !3103)
!3115 = !DILocation(line: 331, column: 28, scope: !3103)
!3116 = !DILocation(line: 331, column: 5, scope: !3103)
!3117 = !DILocation(line: 333, column: 3, scope: !3083)
!3118 = !DILocation(line: 334, column: 12, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 334, column: 12)
!3120 = !DILocation(line: 334, column: 17, scope: !3119)
!3121 = !DILocation(line: 334, column: 43, scope: !3119)
!3122 = !DILocation(line: 334, column: 46, scope: !3119)
!3123 = !DILocation(line: 334, column: 49, scope: !3119)
!3124 = !DILocation(line: 334, column: 12, scope: !3074)
!3125 = !DILocation(line: 336, column: 8, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 336, column: 8)
!3127 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 334, column: 76)
!3128 = !DILocation(line: 336, column: 12, scope: !3126)
!3129 = !DILocation(line: 336, column: 8, scope: !3127)
!3130 = !DILocation(line: 338, column: 17, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 336, column: 20)
!3132 = !DILocation(line: 338, column: 27, scope: !3131)
!3133 = !DILocation(line: 338, column: 31, scope: !3131)
!3134 = !DILocation(line: 338, column: 39, scope: !3131)
!3135 = !DILocation(line: 338, column: 46, scope: !3131)
!3136 = !DILocation(line: 338, column: 50, scope: !3131)
!3137 = !DILocation(line: 338, column: 5, scope: !3131)
!3138 = !DILocation(line: 339, column: 17, scope: !3131)
!3139 = !DILocation(line: 339, column: 22, scope: !3131)
!3140 = !DILocation(line: 339, column: 32, scope: !3131)
!3141 = !DILocation(line: 339, column: 5, scope: !3131)
!3142 = !DILocation(line: 340, column: 4, scope: !3131)
!3143 = !DILocation(line: 345, column: 24, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 341, column: 9)
!3145 = !DILocation(line: 345, column: 28, scope: !3144)
!3146 = !DILocation(line: 345, column: 5, scope: !3144)
!3147 = !DILocation(line: 346, column: 18, scope: !3144)
!3148 = !DILocation(line: 346, column: 5, scope: !3144)
!3149 = !DILocation(line: 347, column: 13, scope: !3144)
!3150 = !DILocation(line: 347, column: 5, scope: !3144)
!3151 = !DILocation(line: 349, column: 17, scope: !3144)
!3152 = !DILocation(line: 349, column: 22, scope: !3144)
!3153 = !DILocation(line: 349, column: 32, scope: !3144)
!3154 = !DILocation(line: 349, column: 5, scope: !3144)
!3155 = !DILocation(line: 351, column: 3, scope: !3127)
!3156 = !DILocation(line: 353, column: 1, scope: !2915)
!3157 = distinct !DISubprogram(name: "zero_v3", scope: !3158, file: !3158, line: 43, type: !3159, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3158 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3159 = !DISubroutineType(types: !3160)
!3160 = !{null, !1080}
!3161 = !DILocalVariable(name: "r", arg: 1, scope: !3157, file: !3158, line: 43, type: !1080)
!3162 = !DILocation(line: 43, column: 28, scope: !3157)
!3163 = !DILocation(line: 45, column: 2, scope: !3157)
!3164 = !DILocation(line: 45, column: 7, scope: !3157)
!3165 = !DILocation(line: 46, column: 2, scope: !3157)
!3166 = !DILocation(line: 46, column: 7, scope: !3157)
!3167 = !DILocation(line: 47, column: 2, scope: !3157)
!3168 = !DILocation(line: 47, column: 7, scope: !3157)
!3169 = !DILocation(line: 48, column: 1, scope: !3157)
!3170 = distinct !DISubprogram(name: "BKE_constraint_typeinfo_from_type", scope: !3, file: !3, line: 4300, type: !3171, scopeLine: 4301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3171 = !DISubroutineType(types: !3172)
!3172 = !{!2565, !352}
!3173 = !DILocalVariable(name: "type", arg: 1, scope: !3170, file: !3, line: 4300, type: !352)
!3174 = !DILocation(line: 4300, column: 60, scope: !3170)
!3175 = !DILocation(line: 4303, column: 6, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 4303, column: 6)
!3177 = !DILocation(line: 4303, column: 6, scope: !3170)
!3178 = !DILocation(line: 4304, column: 3, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3176, file: !3, line: 4303, column: 16)
!3180 = !DILocation(line: 4305, column: 12, scope: !3179)
!3181 = !DILocation(line: 4306, column: 2, scope: !3179)
!3182 = !DILocation(line: 4309, column: 7, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 4309, column: 6)
!3184 = !DILocation(line: 4309, column: 12, scope: !3183)
!3185 = !DILocation(line: 4309, column: 37, scope: !3183)
!3186 = !DILocation(line: 4310, column: 7, scope: !3183)
!3187 = !DILocation(line: 4310, column: 12, scope: !3183)
!3188 = !DILocation(line: 4309, column: 6, scope: !3170)
!3189 = !DILocation(line: 4313, column: 30, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 4311, column: 2)
!3191 = !DILocation(line: 4313, column: 10, scope: !3190)
!3192 = !DILocation(line: 4313, column: 3, scope: !3190)
!3193 = !DILocation(line: 4316, column: 71, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 4315, column: 7)
!3195 = !DILocation(line: 4316, column: 3, scope: !3194)
!3196 = !DILocation(line: 4319, column: 2, scope: !3170)
!3197 = !DILocation(line: 4320, column: 1, scope: !3170)
!3198 = distinct !DISubprogram(name: "constraints_init_typeinfo", scope: !3, file: !3, line: 4264, type: !3199, scopeLine: 4265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{null}
!3201 = !DILocation(line: 4266, column: 25, scope: !3198)
!3202 = !DILocation(line: 4267, column: 25, scope: !3198)
!3203 = !DILocation(line: 4268, column: 25, scope: !3198)
!3204 = !DILocation(line: 4269, column: 25, scope: !3198)
!3205 = !DILocation(line: 4270, column: 25, scope: !3198)
!3206 = !DILocation(line: 4271, column: 25, scope: !3198)
!3207 = !DILocation(line: 4272, column: 25, scope: !3198)
!3208 = !DILocation(line: 4273, column: 25, scope: !3198)
!3209 = !DILocation(line: 4274, column: 25, scope: !3198)
!3210 = !DILocation(line: 4275, column: 25, scope: !3198)
!3211 = !DILocation(line: 4276, column: 26, scope: !3198)
!3212 = !DILocation(line: 4277, column: 26, scope: !3198)
!3213 = !DILocation(line: 4278, column: 26, scope: !3198)
!3214 = !DILocation(line: 4279, column: 26, scope: !3198)
!3215 = !DILocation(line: 4280, column: 26, scope: !3198)
!3216 = !DILocation(line: 4281, column: 26, scope: !3198)
!3217 = !DILocation(line: 4282, column: 26, scope: !3198)
!3218 = !DILocation(line: 4283, column: 26, scope: !3198)
!3219 = !DILocation(line: 4284, column: 26, scope: !3198)
!3220 = !DILocation(line: 4285, column: 26, scope: !3198)
!3221 = !DILocation(line: 4286, column: 26, scope: !3198)
!3222 = !DILocation(line: 4287, column: 26, scope: !3198)
!3223 = !DILocation(line: 4288, column: 26, scope: !3198)
!3224 = !DILocation(line: 4289, column: 26, scope: !3198)
!3225 = !DILocation(line: 4290, column: 26, scope: !3198)
!3226 = !DILocation(line: 4291, column: 26, scope: !3198)
!3227 = !DILocation(line: 4292, column: 26, scope: !3198)
!3228 = !DILocation(line: 4293, column: 26, scope: !3198)
!3229 = !DILocation(line: 4294, column: 26, scope: !3198)
!3230 = !DILocation(line: 4295, column: 1, scope: !3198)
!3231 = distinct !DISubprogram(name: "BKE_constraint_typeinfo_get", scope: !3, file: !3, line: 4325, type: !3232, scopeLine: 4326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{!2565, !2708}
!3234 = !DILocalVariable(name: "con", arg: 1, scope: !3231, file: !3, line: 4325, type: !2708)
!3235 = !DILocation(line: 4325, column: 63, scope: !3231)
!3236 = !DILocation(line: 4328, column: 6, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 4328, column: 6)
!3238 = !DILocation(line: 4328, column: 6, scope: !3231)
!3239 = !DILocation(line: 4329, column: 44, scope: !3237)
!3240 = !DILocation(line: 4329, column: 49, scope: !3237)
!3241 = !DILocation(line: 4329, column: 10, scope: !3237)
!3242 = !DILocation(line: 4329, column: 3, scope: !3237)
!3243 = !DILocation(line: 4331, column: 3, scope: !3237)
!3244 = !DILocation(line: 4332, column: 1, scope: !3231)
!3245 = distinct !DISubprogram(name: "BKE_constraint_free_data", scope: !3, file: !3, line: 4352, type: !3246, scopeLine: 4353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{null, !2708}
!3248 = !DILocalVariable(name: "con", arg: 1, scope: !3245, file: !3, line: 4352, type: !2708)
!3249 = !DILocation(line: 4352, column: 44, scope: !3245)
!3250 = !DILocation(line: 4354, column: 6, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 4354, column: 6)
!3252 = !DILocation(line: 4354, column: 11, scope: !3251)
!3253 = !DILocation(line: 4354, column: 6, scope: !3245)
!3254 = !DILocalVariable(name: "cti", scope: !3255, file: !3, line: 4355, type: !2565)
!3255 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 4354, column: 17)
!3256 = !DILocation(line: 4355, column: 24, scope: !3255)
!3257 = !DILocation(line: 4355, column: 58, scope: !3255)
!3258 = !DILocation(line: 4355, column: 30, scope: !3255)
!3259 = !DILocation(line: 4357, column: 7, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3255, file: !3, line: 4357, column: 7)
!3261 = !DILocation(line: 4357, column: 7, scope: !3255)
!3262 = !DILocation(line: 4359, column: 8, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 4359, column: 8)
!3264 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 4357, column: 12)
!3265 = !DILocation(line: 4359, column: 13, scope: !3263)
!3266 = !DILocation(line: 4359, column: 8, scope: !3264)
!3267 = !DILocation(line: 4360, column: 5, scope: !3263)
!3268 = !DILocation(line: 4360, column: 10, scope: !3263)
!3269 = !DILocation(line: 4360, column: 20, scope: !3263)
!3270 = !DILocation(line: 4363, column: 8, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 4363, column: 8)
!3272 = !DILocation(line: 4363, column: 13, scope: !3271)
!3273 = !DILocation(line: 4363, column: 8, scope: !3264)
!3274 = !DILocation(line: 4364, column: 5, scope: !3271)
!3275 = !DILocation(line: 4364, column: 10, scope: !3271)
!3276 = !DILocation(line: 4364, column: 20, scope: !3271)
!3277 = !DILocation(line: 4365, column: 3, scope: !3264)
!3278 = !DILocation(line: 4368, column: 3, scope: !3255)
!3279 = !DILocation(line: 4368, column: 13, scope: !3255)
!3280 = !DILocation(line: 4368, column: 18, scope: !3255)
!3281 = !DILocation(line: 4369, column: 2, scope: !3255)
!3282 = !DILocation(line: 4370, column: 1, scope: !3245)
!3283 = distinct !DISubprogram(name: "con_unlink_refs_cb", scope: !3, file: !3, line: 4342, type: !3284, scopeLine: 4343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3284 = !DISubroutineType(types: !3285)
!3285 = !{null, !2708, !2258, !1111, !431}
!3286 = !DILocalVariable(name: "UNUSED_con", arg: 1, scope: !3283, file: !3, line: 4342, type: !2708)
!3287 = !DILocation(line: 4342, column: 45, scope: !3283)
!3288 = !DILocalVariable(name: "idpoin", arg: 2, scope: !3283, file: !3, line: 4342, type: !2258)
!3289 = !DILocation(line: 4342, column: 63, scope: !3283)
!3290 = !DILocalVariable(name: "is_reference", arg: 3, scope: !3283, file: !3, line: 4342, type: !1111)
!3291 = !DILocation(line: 4342, column: 76, scope: !3283)
!3292 = !DILocalVariable(name: "UNUSED_userData", arg: 4, scope: !3283, file: !3, line: 4342, type: !431)
!3293 = !DILocation(line: 4342, column: 96, scope: !3283)
!3294 = !DILocation(line: 4344, column: 7, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 4344, column: 6)
!3296 = !DILocation(line: 4344, column: 6, scope: !3295)
!3297 = !DILocation(line: 4344, column: 14, scope: !3295)
!3298 = !DILocation(line: 4344, column: 17, scope: !3295)
!3299 = !DILocation(line: 4344, column: 6, scope: !3283)
!3300 = !DILocation(line: 4345, column: 14, scope: !3295)
!3301 = !DILocation(line: 4345, column: 13, scope: !3295)
!3302 = !DILocation(line: 4345, column: 3, scope: !3295)
!3303 = !DILocation(line: 4346, column: 1, scope: !3283)
!3304 = distinct !DISubprogram(name: "BKE_constraints_free", scope: !3, file: !3, line: 4373, type: !3305, scopeLine: 4374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{null, !1287}
!3307 = !DILocalVariable(name: "list", arg: 1, scope: !3304, file: !3, line: 4373, type: !1287)
!3308 = !DILocation(line: 4373, column: 37, scope: !3304)
!3309 = !DILocalVariable(name: "con", scope: !3304, file: !3, line: 4375, type: !2708)
!3310 = !DILocation(line: 4375, column: 15, scope: !3304)
!3311 = !DILocation(line: 4378, column: 13, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 4378, column: 2)
!3313 = !DILocation(line: 4378, column: 19, scope: !3312)
!3314 = !DILocation(line: 4378, column: 11, scope: !3312)
!3315 = !DILocation(line: 4378, column: 7, scope: !3312)
!3316 = !DILocation(line: 4378, column: 26, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 4378, column: 2)
!3318 = !DILocation(line: 4378, column: 2, scope: !3312)
!3319 = !DILocation(line: 4379, column: 28, scope: !3317)
!3320 = !DILocation(line: 4379, column: 3, scope: !3317)
!3321 = !DILocation(line: 4378, column: 37, scope: !3317)
!3322 = !DILocation(line: 4378, column: 42, scope: !3317)
!3323 = !DILocation(line: 4378, column: 35, scope: !3317)
!3324 = !DILocation(line: 4378, column: 2, scope: !3317)
!3325 = distinct !{!3325, !3318, !3326}
!3326 = !DILocation(line: 4379, column: 31, scope: !3312)
!3327 = !DILocation(line: 4382, column: 16, scope: !3304)
!3328 = !DILocation(line: 4382, column: 2, scope: !3304)
!3329 = !DILocation(line: 4383, column: 1, scope: !3304)
!3330 = distinct !DISubprogram(name: "BKE_constraint_remove", scope: !3, file: !3, line: 4387, type: !3331, scopeLine: 4388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!1111, !1287, !2708}
!3333 = !DILocalVariable(name: "list", arg: 1, scope: !3330, file: !3, line: 4387, type: !1287)
!3334 = !DILocation(line: 4387, column: 38, scope: !3330)
!3335 = !DILocalVariable(name: "con", arg: 2, scope: !3330, file: !3, line: 4387, type: !2708)
!3336 = !DILocation(line: 4387, column: 57, scope: !3330)
!3337 = !DILocation(line: 4389, column: 6, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 4389, column: 6)
!3339 = !DILocation(line: 4389, column: 6, scope: !3330)
!3340 = !DILocation(line: 4390, column: 28, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 4389, column: 11)
!3342 = !DILocation(line: 4390, column: 3, scope: !3341)
!3343 = !DILocation(line: 4391, column: 17, scope: !3341)
!3344 = !DILocation(line: 4391, column: 23, scope: !3341)
!3345 = !DILocation(line: 4391, column: 3, scope: !3341)
!3346 = !DILocation(line: 4392, column: 3, scope: !3341)
!3347 = !DILocation(line: 4395, column: 3, scope: !3338)
!3348 = !DILocation(line: 4396, column: 1, scope: !3330)
!3349 = distinct !DISubprogram(name: "BKE_constraint_add_for_pose", scope: !3, file: !3, line: 4488, type: !3350, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3350 = !DISubroutineType(types: !3351)
!3351 = !{!2578, !2242, !399, !3352, !420}
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !417)
!3354 = !DILocalVariable(name: "ob", arg: 1, scope: !3349, file: !3, line: 4488, type: !2242)
!3355 = !DILocation(line: 4488, column: 50, scope: !3349)
!3356 = !DILocalVariable(name: "pchan", arg: 2, scope: !3349, file: !3, line: 4488, type: !399)
!3357 = !DILocation(line: 4488, column: 68, scope: !3349)
!3358 = !DILocalVariable(name: "name", arg: 3, scope: !3349, file: !3, line: 4488, type: !3352)
!3359 = !DILocation(line: 4488, column: 87, scope: !3349)
!3360 = !DILocalVariable(name: "type", arg: 4, scope: !3349, file: !3, line: 4488, type: !420)
!3361 = !DILocation(line: 4488, column: 99, scope: !3349)
!3362 = !DILocation(line: 4490, column: 6, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3349, file: !3, line: 4490, column: 6)
!3364 = !DILocation(line: 4490, column: 12, scope: !3363)
!3365 = !DILocation(line: 4490, column: 6, scope: !3349)
!3366 = !DILocation(line: 4491, column: 3, scope: !3363)
!3367 = !DILocation(line: 4493, column: 28, scope: !3349)
!3368 = !DILocation(line: 4493, column: 32, scope: !3349)
!3369 = !DILocation(line: 4493, column: 39, scope: !3349)
!3370 = !DILocation(line: 4493, column: 45, scope: !3349)
!3371 = !DILocation(line: 4493, column: 9, scope: !3349)
!3372 = !DILocation(line: 4493, column: 2, scope: !3349)
!3373 = !DILocation(line: 4494, column: 1, scope: !3349)
!3374 = distinct !DISubprogram(name: "add_new_constraint", scope: !3, file: !3, line: 4438, type: !3375, scopeLine: 4439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{!2708, !2242, !399, !3352, !420}
!3377 = !DILocalVariable(name: "ob", arg: 1, scope: !3374, file: !3, line: 4438, type: !2242)
!3378 = !DILocation(line: 4438, column: 48, scope: !3374)
!3379 = !DILocalVariable(name: "pchan", arg: 2, scope: !3374, file: !3, line: 4438, type: !399)
!3380 = !DILocation(line: 4438, column: 66, scope: !3374)
!3381 = !DILocalVariable(name: "name", arg: 3, scope: !3374, file: !3, line: 4438, type: !3352)
!3382 = !DILocation(line: 4438, column: 85, scope: !3374)
!3383 = !DILocalVariable(name: "type", arg: 4, scope: !3374, file: !3, line: 4438, type: !420)
!3384 = !DILocation(line: 4438, column: 97, scope: !3374)
!3385 = !DILocalVariable(name: "con", scope: !3374, file: !3, line: 4440, type: !2708)
!3386 = !DILocation(line: 4440, column: 15, scope: !3374)
!3387 = !DILocalVariable(name: "list", scope: !3374, file: !3, line: 4441, type: !1287)
!3388 = !DILocation(line: 4441, column: 12, scope: !3374)
!3389 = !DILocation(line: 4444, column: 36, scope: !3374)
!3390 = !DILocation(line: 4444, column: 42, scope: !3374)
!3391 = !DILocation(line: 4444, column: 8, scope: !3374)
!3392 = !DILocation(line: 4444, column: 6, scope: !3374)
!3393 = !DILocation(line: 4447, column: 10, scope: !3374)
!3394 = !DILocation(line: 4447, column: 9, scope: !3374)
!3395 = !DILocation(line: 4447, column: 21, scope: !3374)
!3396 = !DILocation(line: 4447, column: 28, scope: !3374)
!3397 = !DILocation(line: 4447, column: 45, scope: !3374)
!3398 = !DILocation(line: 4447, column: 49, scope: !3374)
!3399 = !DILocation(line: 4447, column: 7, scope: !3374)
!3400 = !DILocation(line: 4449, column: 6, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 4449, column: 6)
!3402 = !DILocation(line: 4449, column: 6, scope: !3374)
!3403 = !DILocation(line: 4453, column: 15, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 4449, column: 12)
!3405 = !DILocation(line: 4453, column: 21, scope: !3404)
!3406 = !DILocation(line: 4453, column: 3, scope: !3404)
!3407 = !DILocation(line: 4454, column: 30, scope: !3404)
!3408 = !DILocation(line: 4454, column: 35, scope: !3404)
!3409 = !DILocation(line: 4454, column: 3, scope: !3404)
!3410 = !DILocation(line: 4460, column: 41, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 4460, column: 7)
!3412 = !DILocation(line: 4460, column: 45, scope: !3411)
!3413 = !DILocation(line: 4460, column: 7, scope: !3411)
!3414 = !DILocation(line: 4460, column: 7, scope: !3404)
!3415 = !DILocation(line: 4461, column: 4, scope: !3411)
!3416 = !DILocation(line: 4461, column: 9, scope: !3411)
!3417 = !DILocation(line: 4461, column: 14, scope: !3411)
!3418 = !DILocation(line: 4464, column: 30, scope: !3404)
!3419 = !DILocation(line: 4464, column: 36, scope: !3404)
!3420 = !DILocation(line: 4464, column: 3, scope: !3404)
!3421 = !DILocation(line: 4465, column: 2, scope: !3404)
!3422 = !DILocation(line: 4469, column: 10, scope: !3374)
!3423 = !DILocation(line: 4469, column: 2, scope: !3374)
!3424 = !DILocation(line: 4474, column: 8, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 4474, column: 8)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 4471, column: 3)
!3427 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 4469, column: 16)
!3428 = !DILocation(line: 4474, column: 8, scope: !3426)
!3429 = !DILocation(line: 4475, column: 5, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 4474, column: 15)
!3431 = !DILocation(line: 4475, column: 10, scope: !3430)
!3432 = !DILocation(line: 4475, column: 19, scope: !3430)
!3433 = !DILocation(line: 4476, column: 5, scope: !3430)
!3434 = !DILocation(line: 4476, column: 10, scope: !3430)
!3435 = !DILocation(line: 4476, column: 15, scope: !3430)
!3436 = !DILocation(line: 4477, column: 4, scope: !3430)
!3437 = !DILocation(line: 4478, column: 4, scope: !3426)
!3438 = !DILocation(line: 4482, column: 9, scope: !3374)
!3439 = !DILocation(line: 4482, column: 2, scope: !3374)
!3440 = distinct !DISubprogram(name: "BKE_constraint_add_for_object", scope: !3, file: !3, line: 4497, type: !3441, scopeLine: 4498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3441 = !DISubroutineType(types: !3442)
!3442 = !{!2578, !2242, !3352, !420}
!3443 = !DILocalVariable(name: "ob", arg: 1, scope: !3440, file: !3, line: 4497, type: !2242)
!3444 = !DILocation(line: 4497, column: 52, scope: !3440)
!3445 = !DILocalVariable(name: "name", arg: 2, scope: !3440, file: !3, line: 4497, type: !3352)
!3446 = !DILocation(line: 4497, column: 68, scope: !3440)
!3447 = !DILocalVariable(name: "type", arg: 3, scope: !3440, file: !3, line: 4497, type: !420)
!3448 = !DILocation(line: 4497, column: 80, scope: !3440)
!3449 = !DILocation(line: 4499, column: 28, scope: !3440)
!3450 = !DILocation(line: 4499, column: 38, scope: !3440)
!3451 = !DILocation(line: 4499, column: 44, scope: !3440)
!3452 = !DILocation(line: 4499, column: 9, scope: !3440)
!3453 = !DILocation(line: 4499, column: 2, scope: !3440)
!3454 = distinct !DISubprogram(name: "BKE_constraints_relink", scope: !3, file: !3, line: 4518, type: !3305, scopeLine: 4519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3455 = !DILocalVariable(name: "conlist", arg: 1, scope: !3454, file: !3, line: 4518, type: !1287)
!3456 = !DILocation(line: 4518, column: 39, scope: !3454)
!3457 = !DILocation(line: 4521, column: 26, scope: !3454)
!3458 = !DILocation(line: 4521, column: 2, scope: !3454)
!3459 = !DILocation(line: 4522, column: 1, scope: !3454)
!3460 = distinct !DISubprogram(name: "BKE_constraints_id_loop", scope: !3, file: !3, line: 4526, type: !3461, scopeLine: 4527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{null, !1287, !2599, !431}
!3463 = !DILocalVariable(name: "conlist", arg: 1, scope: !3460, file: !3, line: 4526, type: !1287)
!3464 = !DILocation(line: 4526, column: 40, scope: !3460)
!3465 = !DILocalVariable(name: "func", arg: 2, scope: !3460, file: !3, line: 4526, type: !2599)
!3466 = !DILocation(line: 4526, column: 66, scope: !3460)
!3467 = !DILocalVariable(name: "userdata", arg: 3, scope: !3460, file: !3, line: 4526, type: !431)
!3468 = !DILocation(line: 4526, column: 78, scope: !3460)
!3469 = !DILocalVariable(name: "con", scope: !3460, file: !3, line: 4528, type: !2708)
!3470 = !DILocation(line: 4528, column: 15, scope: !3460)
!3471 = !DILocation(line: 4530, column: 13, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 4530, column: 2)
!3473 = !DILocation(line: 4530, column: 22, scope: !3472)
!3474 = !DILocation(line: 4530, column: 11, scope: !3472)
!3475 = !DILocation(line: 4530, column: 7, scope: !3472)
!3476 = !DILocation(line: 4530, column: 29, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3472, file: !3, line: 4530, column: 2)
!3478 = !DILocation(line: 4530, column: 2, scope: !3472)
!3479 = !DILocalVariable(name: "cti", scope: !3480, file: !3, line: 4531, type: !2565)
!3480 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 4530, column: 51)
!3481 = !DILocation(line: 4531, column: 24, scope: !3480)
!3482 = !DILocation(line: 4531, column: 58, scope: !3480)
!3483 = !DILocation(line: 4531, column: 30, scope: !3480)
!3484 = !DILocation(line: 4533, column: 7, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 4533, column: 7)
!3486 = !DILocation(line: 4533, column: 7, scope: !3480)
!3487 = !DILocation(line: 4534, column: 8, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !3, line: 4534, column: 8)
!3489 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 4533, column: 12)
!3490 = !DILocation(line: 4534, column: 13, scope: !3488)
!3491 = !DILocation(line: 4534, column: 8, scope: !3489)
!3492 = !DILocation(line: 4535, column: 5, scope: !3488)
!3493 = !DILocation(line: 4535, column: 10, scope: !3488)
!3494 = !DILocation(line: 4535, column: 20, scope: !3488)
!3495 = !DILocation(line: 4535, column: 25, scope: !3488)
!3496 = !DILocation(line: 4535, column: 31, scope: !3488)
!3497 = !DILocation(line: 4536, column: 3, scope: !3489)
!3498 = !DILocation(line: 4537, column: 2, scope: !3480)
!3499 = !DILocation(line: 4530, column: 40, scope: !3477)
!3500 = !DILocation(line: 4530, column: 45, scope: !3477)
!3501 = !DILocation(line: 4530, column: 38, scope: !3477)
!3502 = !DILocation(line: 4530, column: 2, scope: !3477)
!3503 = distinct !{!3503, !3478, !3504}
!3504 = !DILocation(line: 4537, column: 2, scope: !3472)
!3505 = !DILocation(line: 4538, column: 1, scope: !3460)
!3506 = distinct !DISubprogram(name: "con_relink_id_cb", scope: !3, file: !3, line: 4505, type: !3284, scopeLine: 4506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3507 = !DILocalVariable(name: "UNUSED_con", arg: 1, scope: !3506, file: !3, line: 4505, type: !2708)
!3508 = !DILocation(line: 4505, column: 43, scope: !3506)
!3509 = !DILocalVariable(name: "idpoin", arg: 2, scope: !3506, file: !3, line: 4505, type: !2258)
!3510 = !DILocation(line: 4505, column: 61, scope: !3506)
!3511 = !DILocalVariable(name: "UNUSED_is_reference", arg: 3, scope: !3506, file: !3, line: 4505, type: !1111)
!3512 = !DILocation(line: 4505, column: 74, scope: !3506)
!3513 = !DILocalVariable(name: "UNUSED_userdata", arg: 4, scope: !3506, file: !3, line: 4505, type: !431)
!3514 = !DILocation(line: 4505, column: 102, scope: !3506)
!3515 = !DILocation(line: 4513, column: 8, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 4513, column: 6)
!3517 = !DILocation(line: 4513, column: 7, scope: !3516)
!3518 = !DILocation(line: 4513, column: 6, scope: !3516)
!3519 = !DILocation(line: 4513, column: 16, scope: !3516)
!3520 = !DILocation(line: 4513, column: 21, scope: !3516)
!3521 = !DILocation(line: 4513, column: 20, scope: !3516)
!3522 = !DILocation(line: 4513, column: 30, scope: !3516)
!3523 = !DILocation(line: 4513, column: 19, scope: !3516)
!3524 = !DILocation(line: 4513, column: 6, scope: !3506)
!3525 = !DILocation(line: 4514, column: 25, scope: !3516)
!3526 = !DILocation(line: 4514, column: 24, scope: !3516)
!3527 = !DILocation(line: 4514, column: 34, scope: !3516)
!3528 = !DILocation(line: 4514, column: 15, scope: !3516)
!3529 = !DILocation(line: 4514, column: 5, scope: !3516)
!3530 = !DILocation(line: 4514, column: 13, scope: !3516)
!3531 = !DILocation(line: 4514, column: 3, scope: !3516)
!3532 = !DILocation(line: 4515, column: 1, scope: !3506)
!3533 = distinct !DISubprogram(name: "BKE_constraints_copy", scope: !3, file: !3, line: 4558, type: !3534, scopeLine: 4559, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{null, !1287, !3536, !1111}
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !433)
!3538 = !DILocalVariable(name: "dst", arg: 1, scope: !3533, file: !3, line: 4558, type: !1287)
!3539 = !DILocation(line: 4558, column: 37, scope: !3533)
!3540 = !DILocalVariable(name: "src", arg: 2, scope: !3533, file: !3, line: 4558, type: !3536)
!3541 = !DILocation(line: 4558, column: 58, scope: !3533)
!3542 = !DILocalVariable(name: "do_extern", arg: 3, scope: !3533, file: !3, line: 4558, type: !1111)
!3543 = !DILocation(line: 4558, column: 68, scope: !3533)
!3544 = !DILocalVariable(name: "con", scope: !3533, file: !3, line: 4560, type: !2708)
!3545 = !DILocation(line: 4560, column: 15, scope: !3533)
!3546 = !DILocalVariable(name: "srccon", scope: !3533, file: !3, line: 4560, type: !2708)
!3547 = !DILocation(line: 4560, column: 21, scope: !3533)
!3548 = !DILocation(line: 4562, column: 21, scope: !3533)
!3549 = !DILocation(line: 4562, column: 2, scope: !3533)
!3550 = !DILocation(line: 4563, column: 20, scope: !3533)
!3551 = !DILocation(line: 4563, column: 25, scope: !3533)
!3552 = !DILocation(line: 4563, column: 2, scope: !3533)
!3553 = !DILocation(line: 4565, column: 13, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 4565, column: 2)
!3555 = !DILocation(line: 4565, column: 18, scope: !3554)
!3556 = !DILocation(line: 4565, column: 11, scope: !3554)
!3557 = !DILocation(line: 4565, column: 34, scope: !3554)
!3558 = !DILocation(line: 4565, column: 39, scope: !3554)
!3559 = !DILocation(line: 4565, column: 32, scope: !3554)
!3560 = !DILocation(line: 4565, column: 7, scope: !3554)
!3561 = !DILocation(line: 4565, column: 46, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 4565, column: 2)
!3563 = !DILocation(line: 4565, column: 50, scope: !3562)
!3564 = !DILocation(line: 4565, column: 53, scope: !3562)
!3565 = !DILocation(line: 0, scope: !3562)
!3566 = !DILocation(line: 4565, column: 2, scope: !3554)
!3567 = !DILocalVariable(name: "cti", scope: !3568, file: !3, line: 4566, type: !2565)
!3568 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 4565, column: 101)
!3569 = !DILocation(line: 4566, column: 24, scope: !3568)
!3570 = !DILocation(line: 4566, column: 58, scope: !3568)
!3571 = !DILocation(line: 4566, column: 30, scope: !3568)
!3572 = !DILocation(line: 4569, column: 15, scope: !3568)
!3573 = !DILocation(line: 4569, column: 29, scope: !3568)
!3574 = !DILocation(line: 4569, column: 34, scope: !3568)
!3575 = !DILocation(line: 4569, column: 3, scope: !3568)
!3576 = !DILocation(line: 4569, column: 8, scope: !3568)
!3577 = !DILocation(line: 4569, column: 13, scope: !3568)
!3578 = !DILocation(line: 4572, column: 7, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 4572, column: 7)
!3580 = !DILocation(line: 4572, column: 7, scope: !3568)
!3581 = !DILocation(line: 4574, column: 8, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 4574, column: 8)
!3583 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 4572, column: 12)
!3584 = !DILocation(line: 4574, column: 13, scope: !3582)
!3585 = !DILocation(line: 4574, column: 8, scope: !3583)
!3586 = !DILocation(line: 4575, column: 5, scope: !3582)
!3587 = !DILocation(line: 4575, column: 10, scope: !3582)
!3588 = !DILocation(line: 4575, column: 20, scope: !3582)
!3589 = !DILocation(line: 4575, column: 25, scope: !3582)
!3590 = !DILocation(line: 4578, column: 8, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 4578, column: 8)
!3592 = !DILocation(line: 4578, column: 13, scope: !3591)
!3593 = !DILocation(line: 4578, column: 8, scope: !3583)
!3594 = !DILocation(line: 4579, column: 5, scope: !3591)
!3595 = !DILocation(line: 4579, column: 10, scope: !3591)
!3596 = !DILocation(line: 4579, column: 20, scope: !3591)
!3597 = !DILocation(line: 4582, column: 8, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 4582, column: 8)
!3599 = !DILocation(line: 4582, column: 8, scope: !3583)
!3600 = !DILocation(line: 4584, column: 9, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 4584, column: 9)
!3602 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 4582, column: 19)
!3603 = !DILocation(line: 4584, column: 14, scope: !3601)
!3604 = !DILocation(line: 4584, column: 9, scope: !3602)
!3605 = !DILocation(line: 4585, column: 6, scope: !3601)
!3606 = !DILocation(line: 4585, column: 11, scope: !3601)
!3607 = !DILocation(line: 4585, column: 21, scope: !3601)
!3608 = !DILocation(line: 4586, column: 4, scope: !3602)
!3609 = !DILocation(line: 4587, column: 3, scope: !3583)
!3610 = !DILocation(line: 4588, column: 2, scope: !3568)
!3611 = !DILocation(line: 4565, column: 70, scope: !3562)
!3612 = !DILocation(line: 4565, column: 78, scope: !3562)
!3613 = !DILocation(line: 4565, column: 68, scope: !3562)
!3614 = !DILocation(line: 4565, column: 90, scope: !3562)
!3615 = !DILocation(line: 4565, column: 95, scope: !3562)
!3616 = !DILocation(line: 4565, column: 88, scope: !3562)
!3617 = !DILocation(line: 4565, column: 2, scope: !3562)
!3618 = distinct !{!3618, !3566, !3619}
!3619 = !DILocation(line: 4588, column: 2, scope: !3554)
!3620 = !DILocation(line: 4589, column: 1, scope: !3533)
!3621 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !3622, file: !3622, line: 89, type: !3623, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3622 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3623 = !DISubroutineType(types: !3624)
!3624 = !{null, !2616}
!3625 = !DILocalVariable(name: "lb", arg: 1, scope: !3621, file: !3622, line: 89, type: !2616)
!3626 = !DILocation(line: 89, column: 53, scope: !3621)
!3627 = !DILocation(line: 89, column: 71, scope: !3621)
!3628 = !DILocation(line: 89, column: 75, scope: !3621)
!3629 = !DILocation(line: 89, column: 80, scope: !3621)
!3630 = !DILocation(line: 89, column: 59, scope: !3621)
!3631 = !DILocation(line: 89, column: 63, scope: !3621)
!3632 = !DILocation(line: 89, column: 69, scope: !3621)
!3633 = !DILocation(line: 89, column: 93, scope: !3621)
!3634 = distinct !DISubprogram(name: "con_fix_copied_refs_cb", scope: !3, file: !3, line: 4550, type: !3284, scopeLine: 4551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3635 = !DILocalVariable(name: "UNUSED_con", arg: 1, scope: !3634, file: !3, line: 4550, type: !2708)
!3636 = !DILocation(line: 4550, column: 49, scope: !3634)
!3637 = !DILocalVariable(name: "idpoin", arg: 2, scope: !3634, file: !3, line: 4550, type: !2258)
!3638 = !DILocation(line: 4550, column: 67, scope: !3634)
!3639 = !DILocalVariable(name: "is_reference", arg: 3, scope: !3634, file: !3, line: 4550, type: !1111)
!3640 = !DILocation(line: 4550, column: 80, scope: !3634)
!3641 = !DILocalVariable(name: "UNUSED_userData", arg: 4, scope: !3634, file: !3, line: 4550, type: !431)
!3642 = !DILocation(line: 4550, column: 100, scope: !3634)
!3643 = !DILocation(line: 4553, column: 8, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 4553, column: 6)
!3645 = !DILocation(line: 4553, column: 7, scope: !3644)
!3646 = !DILocation(line: 4553, column: 6, scope: !3644)
!3647 = !DILocation(line: 4553, column: 16, scope: !3644)
!3648 = !DILocation(line: 4553, column: 20, scope: !3644)
!3649 = !DILocation(line: 4553, column: 19, scope: !3644)
!3650 = !DILocation(line: 4553, column: 6, scope: !3634)
!3651 = !DILocation(line: 4554, column: 15, scope: !3644)
!3652 = !DILocation(line: 4554, column: 14, scope: !3644)
!3653 = !DILocation(line: 4554, column: 3, scope: !3644)
!3654 = !DILocation(line: 4555, column: 1, scope: !3634)
!3655 = distinct !DISubprogram(name: "con_extern_cb", scope: !3, file: !3, line: 4543, type: !3284, scopeLine: 4544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3656 = !DILocalVariable(name: "UNUSED_con", arg: 1, scope: !3655, file: !3, line: 4543, type: !2708)
!3657 = !DILocation(line: 4543, column: 40, scope: !3655)
!3658 = !DILocalVariable(name: "idpoin", arg: 2, scope: !3655, file: !3, line: 4543, type: !2258)
!3659 = !DILocation(line: 4543, column: 58, scope: !3655)
!3660 = !DILocalVariable(name: "UNUSED_is_reference", arg: 3, scope: !3655, file: !3, line: 4543, type: !1111)
!3661 = !DILocation(line: 4543, column: 71, scope: !3655)
!3662 = !DILocalVariable(name: "UNUSED_userData", arg: 4, scope: !3655, file: !3, line: 4543, type: !431)
!3663 = !DILocation(line: 4543, column: 99, scope: !3655)
!3664 = !DILocation(line: 4545, column: 7, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 4545, column: 6)
!3666 = !DILocation(line: 4545, column: 6, scope: !3665)
!3667 = !DILocation(line: 4545, column: 14, scope: !3665)
!3668 = !DILocation(line: 4545, column: 19, scope: !3665)
!3669 = !DILocation(line: 4545, column: 18, scope: !3665)
!3670 = !DILocation(line: 4545, column: 28, scope: !3665)
!3671 = !DILocation(line: 4545, column: 17, scope: !3665)
!3672 = !DILocation(line: 4545, column: 6, scope: !3655)
!3673 = !DILocation(line: 4546, column: 18, scope: !3665)
!3674 = !DILocation(line: 4546, column: 17, scope: !3665)
!3675 = !DILocation(line: 4546, column: 3, scope: !3665)
!3676 = !DILocation(line: 4547, column: 1, scope: !3655)
!3677 = distinct !DISubprogram(name: "BKE_constraints_find_name", scope: !3, file: !3, line: 4593, type: !3678, scopeLine: 4594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{!2578, !1287, !3352}
!3680 = !DILocalVariable(name: "list", arg: 1, scope: !3677, file: !3, line: 4593, type: !1287)
!3681 = !DILocation(line: 4593, column: 50, scope: !3677)
!3682 = !DILocalVariable(name: "name", arg: 2, scope: !3677, file: !3, line: 4593, type: !3352)
!3683 = !DILocation(line: 4593, column: 68, scope: !3677)
!3684 = !DILocation(line: 4595, column: 24, scope: !3677)
!3685 = !DILocation(line: 4595, column: 30, scope: !3677)
!3686 = !DILocation(line: 4595, column: 9, scope: !3677)
!3687 = !DILocation(line: 4595, column: 2, scope: !3677)
!3688 = distinct !DISubprogram(name: "BKE_constraints_active_get", scope: !3, file: !3, line: 4599, type: !3689, scopeLine: 4600, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{!2578, !1287}
!3691 = !DILocalVariable(name: "list", arg: 1, scope: !3688, file: !3, line: 4599, type: !1287)
!3692 = !DILocation(line: 4599, column: 51, scope: !3688)
!3693 = !DILocalVariable(name: "con", scope: !3688, file: !3, line: 4601, type: !2708)
!3694 = !DILocation(line: 4601, column: 15, scope: !3688)
!3695 = !DILocation(line: 4604, column: 6, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 4604, column: 6)
!3697 = !DILocation(line: 4604, column: 6, scope: !3688)
!3698 = !DILocation(line: 4605, column: 14, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 4605, column: 3)
!3700 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 4604, column: 12)
!3701 = !DILocation(line: 4605, column: 20, scope: !3699)
!3702 = !DILocation(line: 4605, column: 12, scope: !3699)
!3703 = !DILocation(line: 4605, column: 8, scope: !3699)
!3704 = !DILocation(line: 4605, column: 27, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 4605, column: 3)
!3706 = !DILocation(line: 4605, column: 3, scope: !3699)
!3707 = !DILocation(line: 4606, column: 8, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 4606, column: 8)
!3709 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 4605, column: 49)
!3710 = !DILocation(line: 4606, column: 13, scope: !3708)
!3711 = !DILocation(line: 4606, column: 18, scope: !3708)
!3712 = !DILocation(line: 4606, column: 8, scope: !3709)
!3713 = !DILocation(line: 4607, column: 12, scope: !3708)
!3714 = !DILocation(line: 4607, column: 5, scope: !3708)
!3715 = !DILocation(line: 4608, column: 3, scope: !3709)
!3716 = !DILocation(line: 4605, column: 38, scope: !3705)
!3717 = !DILocation(line: 4605, column: 43, scope: !3705)
!3718 = !DILocation(line: 4605, column: 36, scope: !3705)
!3719 = !DILocation(line: 4605, column: 3, scope: !3705)
!3720 = distinct !{!3720, !3706, !3721}
!3721 = !DILocation(line: 4608, column: 3, scope: !3699)
!3722 = !DILocation(line: 4609, column: 2, scope: !3700)
!3723 = !DILocation(line: 4612, column: 2, scope: !3688)
!3724 = !DILocation(line: 4613, column: 1, scope: !3688)
!3725 = distinct !DISubprogram(name: "BKE_constraints_active_set", scope: !3, file: !3, line: 4616, type: !3726, scopeLine: 4617, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{null, !1287, !2708}
!3728 = !DILocalVariable(name: "list", arg: 1, scope: !3725, file: !3, line: 4616, type: !1287)
!3729 = !DILocation(line: 4616, column: 43, scope: !3725)
!3730 = !DILocalVariable(name: "con", arg: 2, scope: !3725, file: !3, line: 4616, type: !2708)
!3731 = !DILocation(line: 4616, column: 62, scope: !3725)
!3732 = !DILocalVariable(name: "c", scope: !3725, file: !3, line: 4618, type: !2708)
!3733 = !DILocation(line: 4618, column: 15, scope: !3725)
!3734 = !DILocation(line: 4620, column: 6, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 4620, column: 6)
!3736 = !DILocation(line: 4620, column: 6, scope: !3725)
!3737 = !DILocation(line: 4621, column: 12, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 4621, column: 3)
!3739 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 4620, column: 12)
!3740 = !DILocation(line: 4621, column: 18, scope: !3738)
!3741 = !DILocation(line: 4621, column: 10, scope: !3738)
!3742 = !DILocation(line: 4621, column: 8, scope: !3738)
!3743 = !DILocation(line: 4621, column: 25, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 4621, column: 3)
!3745 = !DILocation(line: 4621, column: 3, scope: !3738)
!3746 = !DILocation(line: 4622, column: 8, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !3, line: 4622, column: 8)
!3748 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 4621, column: 41)
!3749 = !DILocation(line: 4622, column: 13, scope: !3747)
!3750 = !DILocation(line: 4622, column: 10, scope: !3747)
!3751 = !DILocation(line: 4622, column: 8, scope: !3748)
!3752 = !DILocation(line: 4623, column: 5, scope: !3747)
!3753 = !DILocation(line: 4623, column: 8, scope: !3747)
!3754 = !DILocation(line: 4623, column: 13, scope: !3747)
!3755 = !DILocation(line: 4625, column: 5, scope: !3747)
!3756 = !DILocation(line: 4625, column: 8, scope: !3747)
!3757 = !DILocation(line: 4625, column: 13, scope: !3747)
!3758 = !DILocation(line: 4626, column: 3, scope: !3748)
!3759 = !DILocation(line: 4621, column: 32, scope: !3744)
!3760 = !DILocation(line: 4621, column: 35, scope: !3744)
!3761 = !DILocation(line: 4621, column: 30, scope: !3744)
!3762 = !DILocation(line: 4621, column: 3, scope: !3744)
!3763 = distinct !{!3763, !3745, !3764}
!3764 = !DILocation(line: 4626, column: 3, scope: !3738)
!3765 = !DILocation(line: 4627, column: 2, scope: !3739)
!3766 = !DILocation(line: 4628, column: 1, scope: !3725)
!3767 = distinct !DISubprogram(name: "BKE_constraints_proxylocal_extract", scope: !3, file: !3, line: 4633, type: !3768, scopeLine: 4634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{null, !1287, !1287}
!3770 = !DILocalVariable(name: "dst", arg: 1, scope: !3767, file: !3, line: 4633, type: !1287)
!3771 = !DILocation(line: 4633, column: 51, scope: !3767)
!3772 = !DILocalVariable(name: "src", arg: 2, scope: !3767, file: !3, line: 4633, type: !1287)
!3773 = !DILocation(line: 4633, column: 66, scope: !3767)
!3774 = !DILocalVariable(name: "con", scope: !3767, file: !3, line: 4635, type: !2708)
!3775 = !DILocation(line: 4635, column: 15, scope: !3767)
!3776 = !DILocalVariable(name: "next", scope: !3767, file: !3, line: 4635, type: !2708)
!3777 = !DILocation(line: 4635, column: 21, scope: !3767)
!3778 = !DILocation(line: 4638, column: 13, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 4638, column: 2)
!3780 = !DILocation(line: 4638, column: 18, scope: !3779)
!3781 = !DILocation(line: 4638, column: 11, scope: !3779)
!3782 = !DILocation(line: 4638, column: 7, scope: !3779)
!3783 = !DILocation(line: 4638, column: 25, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 4638, column: 2)
!3785 = !DILocation(line: 4638, column: 2, scope: !3779)
!3786 = !DILocation(line: 4639, column: 10, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 4638, column: 42)
!3788 = !DILocation(line: 4639, column: 15, scope: !3787)
!3789 = !DILocation(line: 4639, column: 8, scope: !3787)
!3790 = !DILocation(line: 4642, column: 7, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 4642, column: 7)
!3792 = !DILocation(line: 4642, column: 12, scope: !3791)
!3793 = !DILocation(line: 4642, column: 17, scope: !3791)
!3794 = !DILocation(line: 4642, column: 7, scope: !3787)
!3795 = !DILocation(line: 4643, column: 16, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 4642, column: 43)
!3797 = !DILocation(line: 4643, column: 21, scope: !3796)
!3798 = !DILocation(line: 4643, column: 4, scope: !3796)
!3799 = !DILocation(line: 4644, column: 16, scope: !3796)
!3800 = !DILocation(line: 4644, column: 21, scope: !3796)
!3801 = !DILocation(line: 4644, column: 4, scope: !3796)
!3802 = !DILocation(line: 4645, column: 3, scope: !3796)
!3803 = !DILocation(line: 4646, column: 2, scope: !3787)
!3804 = !DILocation(line: 4638, column: 36, scope: !3784)
!3805 = !DILocation(line: 4638, column: 34, scope: !3784)
!3806 = !DILocation(line: 4638, column: 2, scope: !3784)
!3807 = distinct !{!3807, !3785, !3808}
!3808 = !DILocation(line: 4646, column: 2, scope: !3779)
!3809 = !DILocation(line: 4647, column: 1, scope: !3767)
!3810 = distinct !DISubprogram(name: "BKE_constraints_proxylocked_owner", scope: !3, file: !3, line: 4650, type: !3811, scopeLine: 4651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!1111, !2242, !399}
!3813 = !DILocalVariable(name: "ob", arg: 1, scope: !3810, file: !3, line: 4650, type: !2242)
!3814 = !DILocation(line: 4650, column: 48, scope: !3810)
!3815 = !DILocalVariable(name: "pchan", arg: 2, scope: !3810, file: !3, line: 4650, type: !399)
!3816 = !DILocation(line: 4650, column: 66, scope: !3810)
!3817 = !DILocation(line: 4653, column: 6, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 4653, column: 6)
!3819 = !DILocation(line: 4653, column: 9, scope: !3818)
!3820 = !DILocation(line: 4653, column: 12, scope: !3818)
!3821 = !DILocation(line: 4653, column: 16, scope: !3818)
!3822 = !DILocation(line: 4653, column: 6, scope: !3810)
!3823 = !DILocation(line: 4654, column: 7, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 4654, column: 7)
!3825 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 4653, column: 23)
!3826 = !DILocation(line: 4654, column: 11, scope: !3824)
!3827 = !DILocation(line: 4654, column: 16, scope: !3824)
!3828 = !DILocation(line: 4654, column: 19, scope: !3824)
!3829 = !DILocation(line: 4654, column: 7, scope: !3825)
!3830 = !DILocalVariable(name: "arm", scope: !3831, file: !3, line: 4655, type: !3832)
!3831 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 4654, column: 26)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !458, line: 114, baseType: !3834)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !458, line: 78, size: 2048, elements: !3835)
!3835 = !{!3836, !3837, !3838, !3839, !3840, !3841, !3844, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3834, file: !458, line: 79, baseType: !525, size: 960)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3834, file: !458, line: 80, baseType: !561, size: 64, offset: 960)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !3834, file: !458, line: 82, baseType: !433, size: 128, offset: 1024)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !3834, file: !458, line: 83, baseType: !433, size: 128, offset: 1152)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !3834, file: !458, line: 84, baseType: !1287, size: 64, offset: 1280)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !3834, file: !458, line: 92, baseType: !3842, size: 64, offset: 1344)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3843 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !458, line: 76, baseType: !457)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !3834, file: !458, line: 93, baseType: !3845, size: 64, offset: 1408)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !458, line: 93, flags: DIFlagFwdDecl)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !3834, file: !458, line: 95, baseType: !431, size: 64, offset: 1472)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3834, file: !458, line: 97, baseType: !352, size: 32, offset: 1536)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !3834, file: !458, line: 98, baseType: !352, size: 32, offset: 1568)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !3834, file: !458, line: 99, baseType: !352, size: 32, offset: 1600)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3834, file: !458, line: 100, baseType: !352, size: 32, offset: 1632)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !3834, file: !458, line: 101, baseType: !420, size: 16, offset: 1664)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !3834, file: !458, line: 102, baseType: !420, size: 16, offset: 1680)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !3834, file: !458, line: 104, baseType: !7, size: 32, offset: 1696)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !3834, file: !458, line: 105, baseType: !7, size: 32, offset: 1728)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !3834, file: !458, line: 105, baseType: !7, size: 32, offset: 1760)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !3834, file: !458, line: 108, baseType: !420, size: 16, offset: 1792)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !3834, file: !458, line: 108, baseType: !420, size: 16, offset: 1808)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !3834, file: !458, line: 109, baseType: !420, size: 16, offset: 1824)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !3834, file: !458, line: 109, baseType: !420, size: 16, offset: 1840)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !3834, file: !458, line: 110, baseType: !352, size: 32, offset: 1856)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !3834, file: !458, line: 110, baseType: !352, size: 32, offset: 1888)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !3834, file: !458, line: 111, baseType: !352, size: 32, offset: 1920)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !3834, file: !458, line: 111, baseType: !352, size: 32, offset: 1952)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !3834, file: !458, line: 112, baseType: !352, size: 32, offset: 1984)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !3834, file: !458, line: 112, baseType: !352, size: 32, offset: 2016)
!3867 = !DILocation(line: 4655, column: 15, scope: !3831)
!3868 = !DILocation(line: 4655, column: 21, scope: !3831)
!3869 = !DILocation(line: 4655, column: 25, scope: !3831)
!3870 = !DILocation(line: 4658, column: 9, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 4658, column: 8)
!3872 = !DILocation(line: 4658, column: 16, scope: !3871)
!3873 = !DILocation(line: 4658, column: 8, scope: !3871)
!3874 = !DILocation(line: 4658, column: 22, scope: !3871)
!3875 = !DILocation(line: 4658, column: 26, scope: !3871)
!3876 = !DILocation(line: 4658, column: 33, scope: !3871)
!3877 = !DILocation(line: 4658, column: 39, scope: !3871)
!3878 = !DILocation(line: 4658, column: 47, scope: !3871)
!3879 = !DILocation(line: 4658, column: 52, scope: !3871)
!3880 = !DILocation(line: 4658, column: 45, scope: !3871)
!3881 = !DILocation(line: 4658, column: 8, scope: !3831)
!3882 = !DILocation(line: 4659, column: 5, scope: !3871)
!3883 = !DILocation(line: 4660, column: 3, scope: !3831)
!3884 = !DILocation(line: 4663, column: 4, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 4661, column: 8)
!3886 = !DILocation(line: 4665, column: 2, scope: !3825)
!3887 = !DILocation(line: 4667, column: 2, scope: !3810)
!3888 = !DILocation(line: 4668, column: 1, scope: !3810)
!3889 = distinct !DISubprogram(name: "BKE_constraint_target_matrix_get", scope: !3, file: !3, line: 4679, type: !3890, scopeLine: 4680, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{null, !2722, !2708, !352, !420, !431, !1117, !467}
!3892 = !DILocalVariable(name: "scene", arg: 1, scope: !3889, file: !3, line: 4679, type: !2722)
!3893 = !DILocation(line: 4679, column: 46, scope: !3889)
!3894 = !DILocalVariable(name: "con", arg: 2, scope: !3889, file: !3, line: 4679, type: !2708)
!3895 = !DILocation(line: 4679, column: 66, scope: !3889)
!3896 = !DILocalVariable(name: "index", arg: 3, scope: !3889, file: !3, line: 4679, type: !352)
!3897 = !DILocation(line: 4679, column: 75, scope: !3889)
!3898 = !DILocalVariable(name: "ownertype", arg: 4, scope: !3889, file: !3, line: 4679, type: !420)
!3899 = !DILocation(line: 4679, column: 88, scope: !3889)
!3900 = !DILocalVariable(name: "ownerdata", arg: 5, scope: !3889, file: !3, line: 4679, type: !431)
!3901 = !DILocation(line: 4679, column: 105, scope: !3889)
!3902 = !DILocalVariable(name: "mat", arg: 6, scope: !3889, file: !3, line: 4679, type: !1117)
!3903 = !DILocation(line: 4679, column: 122, scope: !3889)
!3904 = !DILocalVariable(name: "ctime", arg: 7, scope: !3889, file: !3, line: 4679, type: !467)
!3905 = !DILocation(line: 4679, column: 139, scope: !3889)
!3906 = !DILocalVariable(name: "cti", scope: !3889, file: !3, line: 4681, type: !2565)
!3907 = !DILocation(line: 4681, column: 23, scope: !3889)
!3908 = !DILocation(line: 4681, column: 57, scope: !3889)
!3909 = !DILocation(line: 4681, column: 29, scope: !3889)
!3910 = !DILocalVariable(name: "targets", scope: !3889, file: !3, line: 4682, type: !433)
!3911 = !DILocation(line: 4682, column: 11, scope: !3889)
!3912 = !DILocalVariable(name: "cob", scope: !3889, file: !3, line: 4683, type: !2733)
!3913 = !DILocation(line: 4683, column: 17, scope: !3889)
!3914 = !DILocalVariable(name: "ct", scope: !3889, file: !3, line: 4684, type: !2244)
!3915 = !DILocation(line: 4684, column: 21, scope: !3889)
!3916 = !DILocation(line: 4686, column: 6, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 4686, column: 6)
!3918 = !DILocation(line: 4686, column: 10, scope: !3917)
!3919 = !DILocation(line: 4686, column: 13, scope: !3917)
!3920 = !DILocation(line: 4686, column: 18, scope: !3917)
!3921 = !DILocation(line: 4686, column: 6, scope: !3889)
!3922 = !DILocation(line: 4688, column: 9, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 4686, column: 42)
!3924 = !DILocation(line: 4688, column: 7, scope: !3923)
!3925 = !DILocation(line: 4689, column: 15, scope: !3923)
!3926 = !DILocation(line: 4689, column: 3, scope: !3923)
!3927 = !DILocation(line: 4689, column: 8, scope: !3923)
!3928 = !DILocation(line: 4689, column: 13, scope: !3923)
!3929 = !DILocation(line: 4690, column: 16, scope: !3923)
!3930 = !DILocation(line: 4690, column: 3, scope: !3923)
!3931 = !DILocation(line: 4690, column: 8, scope: !3923)
!3932 = !DILocation(line: 4690, column: 14, scope: !3923)
!3933 = !DILocation(line: 4691, column: 11, scope: !3923)
!3934 = !DILocation(line: 4691, column: 3, scope: !3923)
!3935 = !DILocation(line: 4694, column: 25, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !3, line: 4693, column: 4)
!3937 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 4691, column: 22)
!3938 = !DILocation(line: 4694, column: 15, scope: !3936)
!3939 = !DILocation(line: 4694, column: 5, scope: !3936)
!3940 = !DILocation(line: 4694, column: 10, scope: !3936)
!3941 = !DILocation(line: 4694, column: 13, scope: !3936)
!3942 = !DILocation(line: 4695, column: 5, scope: !3936)
!3943 = !DILocation(line: 4695, column: 10, scope: !3936)
!3944 = !DILocation(line: 4695, column: 16, scope: !3936)
!3945 = !DILocation(line: 4696, column: 9, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 4696, column: 9)
!3947 = !DILocation(line: 4696, column: 14, scope: !3946)
!3948 = !DILocation(line: 4696, column: 9, scope: !3936)
!3949 = !DILocation(line: 4697, column: 17, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 4696, column: 18)
!3951 = !DILocation(line: 4697, column: 22, scope: !3950)
!3952 = !DILocation(line: 4697, column: 30, scope: !3950)
!3953 = !DILocation(line: 4697, column: 35, scope: !3950)
!3954 = !DILocation(line: 4697, column: 39, scope: !3950)
!3955 = !DILocation(line: 4697, column: 6, scope: !3950)
!3956 = !DILocation(line: 4698, column: 17, scope: !3950)
!3957 = !DILocation(line: 4698, column: 22, scope: !3950)
!3958 = !DILocation(line: 4698, column: 32, scope: !3950)
!3959 = !DILocation(line: 4698, column: 37, scope: !3950)
!3960 = !DILocation(line: 4698, column: 6, scope: !3950)
!3961 = !DILocation(line: 4699, column: 5, scope: !3950)
!3962 = !DILocation(line: 4701, column: 14, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 4700, column: 10)
!3964 = !DILocation(line: 4701, column: 19, scope: !3963)
!3965 = !DILocation(line: 4701, column: 6, scope: !3963)
!3966 = !DILocation(line: 4702, column: 14, scope: !3963)
!3967 = !DILocation(line: 4702, column: 19, scope: !3963)
!3968 = !DILocation(line: 4702, column: 6, scope: !3963)
!3969 = !DILocation(line: 4704, column: 5, scope: !3936)
!3970 = !DILocation(line: 4708, column: 5, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3937, file: !3, line: 4707, column: 4)
!3972 = !DILocation(line: 4708, column: 10, scope: !3971)
!3973 = !DILocation(line: 4708, column: 13, scope: !3971)
!3974 = !DILocation(line: 4709, column: 34, scope: !3971)
!3975 = !DILocation(line: 4709, column: 18, scope: !3971)
!3976 = !DILocation(line: 4709, column: 5, scope: !3971)
!3977 = !DILocation(line: 4709, column: 10, scope: !3971)
!3978 = !DILocation(line: 4709, column: 16, scope: !3971)
!3979 = !DILocation(line: 4710, column: 9, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 4710, column: 9)
!3981 = !DILocation(line: 4710, column: 14, scope: !3980)
!3982 = !DILocation(line: 4710, column: 9, scope: !3971)
!3983 = !DILocation(line: 4711, column: 17, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 4710, column: 21)
!3985 = !DILocation(line: 4711, column: 22, scope: !3984)
!3986 = !DILocation(line: 4711, column: 30, scope: !3984)
!3987 = !DILocation(line: 4711, column: 35, scope: !3984)
!3988 = !DILocation(line: 4711, column: 42, scope: !3984)
!3989 = !DILocation(line: 4711, column: 6, scope: !3984)
!3990 = !DILocation(line: 4712, column: 17, scope: !3984)
!3991 = !DILocation(line: 4712, column: 22, scope: !3984)
!3992 = !DILocation(line: 4712, column: 32, scope: !3984)
!3993 = !DILocation(line: 4712, column: 37, scope: !3984)
!3994 = !DILocation(line: 4712, column: 6, scope: !3984)
!3995 = !DILocation(line: 4713, column: 5, scope: !3984)
!3996 = !DILocation(line: 4715, column: 14, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 4714, column: 10)
!3998 = !DILocation(line: 4715, column: 19, scope: !3997)
!3999 = !DILocation(line: 4715, column: 6, scope: !3997)
!4000 = !DILocation(line: 4716, column: 14, scope: !3997)
!4001 = !DILocation(line: 4716, column: 19, scope: !3997)
!4002 = !DILocation(line: 4716, column: 6, scope: !3997)
!4003 = !DILocation(line: 4718, column: 5, scope: !3971)
!4004 = !DILocation(line: 4723, column: 3, scope: !3923)
!4005 = !DILocation(line: 4723, column: 8, scope: !3923)
!4006 = !DILocation(line: 4723, column: 31, scope: !3923)
!4007 = !DILocation(line: 4726, column: 52, scope: !3923)
!4008 = !DILocation(line: 4726, column: 29, scope: !3923)
!4009 = !DILocation(line: 4726, column: 8, scope: !3923)
!4010 = !DILocation(line: 4726, column: 6, scope: !3923)
!4011 = !DILocation(line: 4728, column: 7, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 4728, column: 7)
!4013 = !DILocation(line: 4728, column: 7, scope: !3923)
!4014 = !DILocation(line: 4729, column: 8, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 4729, column: 8)
!4016 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 4728, column: 11)
!4017 = !DILocation(line: 4729, column: 13, scope: !4015)
!4018 = !DILocation(line: 4729, column: 8, scope: !4016)
!4019 = !DILocation(line: 4730, column: 5, scope: !4015)
!4020 = !DILocation(line: 4730, column: 10, scope: !4015)
!4021 = !DILocation(line: 4730, column: 28, scope: !4015)
!4022 = !DILocation(line: 4730, column: 33, scope: !4015)
!4023 = !DILocation(line: 4730, column: 38, scope: !4015)
!4024 = !DILocation(line: 4730, column: 42, scope: !4015)
!4025 = !DILocation(line: 4731, column: 15, scope: !4016)
!4026 = !DILocation(line: 4731, column: 20, scope: !4016)
!4027 = !DILocation(line: 4731, column: 24, scope: !4016)
!4028 = !DILocation(line: 4731, column: 4, scope: !4016)
!4029 = !DILocation(line: 4732, column: 3, scope: !4016)
!4030 = !DILocation(line: 4735, column: 7, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 4735, column: 7)
!4032 = !DILocation(line: 4735, column: 12, scope: !4031)
!4033 = !DILocation(line: 4735, column: 7, scope: !3923)
!4034 = !DILocation(line: 4736, column: 4, scope: !4031)
!4035 = !DILocation(line: 4736, column: 9, scope: !4031)
!4036 = !DILocation(line: 4736, column: 34, scope: !4031)
!4037 = !DILocation(line: 4737, column: 3, scope: !3923)
!4038 = !DILocation(line: 4737, column: 13, scope: !3923)
!4039 = !DILocation(line: 4738, column: 2, scope: !3923)
!4040 = !DILocation(line: 4741, column: 11, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 4739, column: 7)
!4042 = !DILocation(line: 4741, column: 3, scope: !4041)
!4043 = !DILocation(line: 4743, column: 1, scope: !3889)
!4044 = distinct !DISubprogram(name: "BKE_constraint_targets_for_solving_get", scope: !3, file: !3, line: 4746, type: !4045, scopeLine: 4747, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{null, !2708, !2733, !1287, !467}
!4047 = !DILocalVariable(name: "con", arg: 1, scope: !4044, file: !3, line: 4746, type: !2708)
!4048 = !DILocation(line: 4746, column: 58, scope: !4044)
!4049 = !DILocalVariable(name: "cob", arg: 2, scope: !4044, file: !3, line: 4746, type: !2733)
!4050 = !DILocation(line: 4746, column: 78, scope: !4044)
!4051 = !DILocalVariable(name: "targets", arg: 3, scope: !4044, file: !3, line: 4746, type: !1287)
!4052 = !DILocation(line: 4746, column: 93, scope: !4044)
!4053 = !DILocalVariable(name: "ctime", arg: 4, scope: !4044, file: !3, line: 4746, type: !467)
!4054 = !DILocation(line: 4746, column: 108, scope: !4044)
!4055 = !DILocalVariable(name: "cti", scope: !4044, file: !3, line: 4748, type: !2565)
!4056 = !DILocation(line: 4748, column: 23, scope: !4044)
!4057 = !DILocation(line: 4748, column: 57, scope: !4044)
!4058 = !DILocation(line: 4748, column: 29, scope: !4044)
!4059 = !DILocation(line: 4750, column: 6, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 4750, column: 6)
!4061 = !DILocation(line: 4750, column: 10, scope: !4060)
!4062 = !DILocation(line: 4750, column: 13, scope: !4060)
!4063 = !DILocation(line: 4750, column: 18, scope: !4060)
!4064 = !DILocation(line: 4750, column: 6, scope: !4044)
!4065 = !DILocalVariable(name: "ct", scope: !4066, file: !3, line: 4751, type: !2244)
!4066 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 4750, column: 42)
!4067 = !DILocation(line: 4751, column: 22, scope: !4066)
!4068 = !DILocation(line: 4757, column: 3, scope: !4066)
!4069 = !DILocation(line: 4757, column: 8, scope: !4066)
!4070 = !DILocation(line: 4757, column: 31, scope: !4066)
!4071 = !DILocation(line: 4757, column: 36, scope: !4066)
!4072 = !DILocation(line: 4762, column: 7, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 4762, column: 7)
!4074 = !DILocation(line: 4762, column: 12, scope: !4073)
!4075 = !DILocation(line: 4762, column: 7, scope: !4066)
!4076 = !DILocation(line: 4763, column: 14, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 4763, column: 4)
!4078 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 4762, column: 31)
!4079 = !DILocation(line: 4763, column: 23, scope: !4077)
!4080 = !DILocation(line: 4763, column: 12, scope: !4077)
!4081 = !DILocation(line: 4763, column: 9, scope: !4077)
!4082 = !DILocation(line: 4763, column: 30, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 4763, column: 4)
!4084 = !DILocation(line: 4763, column: 4, scope: !4077)
!4085 = !DILocation(line: 4764, column: 5, scope: !4083)
!4086 = !DILocation(line: 4764, column: 10, scope: !4083)
!4087 = !DILocation(line: 4764, column: 28, scope: !4083)
!4088 = !DILocation(line: 4764, column: 33, scope: !4083)
!4089 = !DILocation(line: 4764, column: 38, scope: !4083)
!4090 = !DILocation(line: 4764, column: 42, scope: !4083)
!4091 = !DILocation(line: 4763, column: 39, scope: !4083)
!4092 = !DILocation(line: 4763, column: 43, scope: !4083)
!4093 = !DILocation(line: 4763, column: 37, scope: !4083)
!4094 = !DILocation(line: 4763, column: 4, scope: !4083)
!4095 = distinct !{!4095, !4084, !4096}
!4096 = !DILocation(line: 4764, column: 47, scope: !4077)
!4097 = !DILocation(line: 4765, column: 3, scope: !4078)
!4098 = !DILocation(line: 4767, column: 14, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 4767, column: 4)
!4100 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 4766, column: 8)
!4101 = !DILocation(line: 4767, column: 23, scope: !4099)
!4102 = !DILocation(line: 4767, column: 12, scope: !4099)
!4103 = !DILocation(line: 4767, column: 9, scope: !4099)
!4104 = !DILocation(line: 4767, column: 30, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 4767, column: 4)
!4106 = !DILocation(line: 4767, column: 4, scope: !4099)
!4107 = !DILocation(line: 4768, column: 13, scope: !4105)
!4108 = !DILocation(line: 4768, column: 17, scope: !4105)
!4109 = !DILocation(line: 4768, column: 5, scope: !4105)
!4110 = !DILocation(line: 4767, column: 39, scope: !4105)
!4111 = !DILocation(line: 4767, column: 43, scope: !4105)
!4112 = !DILocation(line: 4767, column: 37, scope: !4105)
!4113 = !DILocation(line: 4767, column: 4, scope: !4105)
!4114 = distinct !{!4114, !4106, !4115}
!4115 = !DILocation(line: 4768, column: 23, scope: !4099)
!4116 = !DILocation(line: 4770, column: 2, scope: !4066)
!4117 = !DILocation(line: 4771, column: 1, scope: !4044)
!4118 = distinct !DISubprogram(name: "BKE_constraints_solve", scope: !3, file: !3, line: 4781, type: !4119, scopeLine: 4782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{null, !1287, !2733, !467}
!4121 = !DILocalVariable(name: "conlist", arg: 1, scope: !4118, file: !3, line: 4781, type: !1287)
!4122 = !DILocation(line: 4781, column: 38, scope: !4118)
!4123 = !DILocalVariable(name: "cob", arg: 2, scope: !4118, file: !3, line: 4781, type: !2733)
!4124 = !DILocation(line: 4781, column: 62, scope: !4118)
!4125 = !DILocalVariable(name: "ctime", arg: 3, scope: !4118, file: !3, line: 4781, type: !467)
!4126 = !DILocation(line: 4781, column: 73, scope: !4118)
!4127 = !DILocalVariable(name: "con", scope: !4118, file: !3, line: 4783, type: !2708)
!4128 = !DILocation(line: 4783, column: 15, scope: !4118)
!4129 = !DILocalVariable(name: "oldmat", scope: !4118, file: !3, line: 4784, type: !480)
!4130 = !DILocation(line: 4784, column: 8, scope: !4118)
!4131 = !DILocalVariable(name: "enf", scope: !4118, file: !3, line: 4785, type: !467)
!4132 = !DILocation(line: 4785, column: 8, scope: !4118)
!4133 = !DILocation(line: 4788, column: 6, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 4788, column: 6)
!4135 = !DILocation(line: 4788, column: 10, scope: !4134)
!4136 = !DILocation(line: 4788, column: 6, scope: !4118)
!4137 = !DILocation(line: 4789, column: 3, scope: !4134)
!4138 = !DILocation(line: 4792, column: 13, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 4792, column: 2)
!4140 = !DILocation(line: 4792, column: 22, scope: !4139)
!4141 = !DILocation(line: 4792, column: 11, scope: !4139)
!4142 = !DILocation(line: 4792, column: 7, scope: !4139)
!4143 = !DILocation(line: 4792, column: 29, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 4792, column: 2)
!4145 = !DILocation(line: 4792, column: 2, scope: !4139)
!4146 = !DILocalVariable(name: "cti", scope: !4147, file: !3, line: 4793, type: !2565)
!4147 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 4792, column: 51)
!4148 = !DILocation(line: 4793, column: 24, scope: !4147)
!4149 = !DILocation(line: 4793, column: 58, scope: !4147)
!4150 = !DILocation(line: 4793, column: 30, scope: !4147)
!4151 = !DILocalVariable(name: "targets", scope: !4147, file: !3, line: 4794, type: !433)
!4152 = !DILocation(line: 4794, column: 12, scope: !4147)
!4153 = !DILocation(line: 4797, column: 7, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 4797, column: 7)
!4155 = !DILocation(line: 4797, column: 11, scope: !4154)
!4156 = !DILocation(line: 4797, column: 7, scope: !4147)
!4157 = !DILocation(line: 4797, column: 20, scope: !4154)
!4158 = !DILocation(line: 4798, column: 7, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 4798, column: 7)
!4160 = !DILocation(line: 4798, column: 12, scope: !4159)
!4161 = !DILocation(line: 4798, column: 17, scope: !4159)
!4162 = !DILocation(line: 4798, column: 7, scope: !4147)
!4163 = !DILocation(line: 4798, column: 58, scope: !4159)
!4164 = !DILocation(line: 4800, column: 7, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 4800, column: 7)
!4166 = !DILocation(line: 4800, column: 12, scope: !4165)
!4167 = !DILocation(line: 4800, column: 32, scope: !4165)
!4168 = !DILocation(line: 4800, column: 7, scope: !4147)
!4169 = !DILocation(line: 4800, column: 41, scope: !4165)
!4170 = !DILocation(line: 4802, column: 7, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 4802, column: 7)
!4172 = !DILocation(line: 4802, column: 12, scope: !4171)
!4173 = !DILocation(line: 4802, column: 20, scope: !4171)
!4174 = !DILocation(line: 4802, column: 7, scope: !4147)
!4175 = !DILocation(line: 4802, column: 29, scope: !4171)
!4176 = !DILocation(line: 4807, column: 9, scope: !4147)
!4177 = !DILocation(line: 4807, column: 14, scope: !4147)
!4178 = !DILocation(line: 4807, column: 7, scope: !4147)
!4179 = !DILocation(line: 4810, column: 14, scope: !4147)
!4180 = !DILocation(line: 4810, column: 22, scope: !4147)
!4181 = !DILocation(line: 4810, column: 27, scope: !4147)
!4182 = !DILocation(line: 4810, column: 3, scope: !4147)
!4183 = !DILocation(line: 4813, column: 35, scope: !4147)
!4184 = !DILocation(line: 4813, column: 40, scope: !4147)
!4185 = !DILocation(line: 4813, column: 44, scope: !4147)
!4186 = !DILocation(line: 4813, column: 49, scope: !4147)
!4187 = !DILocation(line: 4813, column: 56, scope: !4147)
!4188 = !DILocation(line: 4813, column: 61, scope: !4147)
!4189 = !DILocation(line: 4813, column: 93, scope: !4147)
!4190 = !DILocation(line: 4813, column: 98, scope: !4147)
!4191 = !DILocation(line: 4813, column: 3, scope: !4147)
!4192 = !DILocation(line: 4816, column: 42, scope: !4147)
!4193 = !DILocation(line: 4816, column: 47, scope: !4147)
!4194 = !DILocation(line: 4816, column: 62, scope: !4147)
!4195 = !DILocation(line: 4816, column: 3, scope: !4147)
!4196 = !DILocation(line: 4819, column: 3, scope: !4147)
!4197 = !DILocation(line: 4819, column: 8, scope: !4147)
!4198 = !DILocation(line: 4819, column: 28, scope: !4147)
!4199 = !DILocation(line: 4819, column: 33, scope: !4147)
!4200 = !DILocation(line: 4825, column: 7, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 4825, column: 7)
!4202 = !DILocation(line: 4825, column: 12, scope: !4201)
!4203 = !DILocation(line: 4825, column: 7, scope: !4147)
!4204 = !DILocation(line: 4826, column: 4, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 4825, column: 38)
!4206 = !DILocation(line: 4826, column: 9, scope: !4205)
!4207 = !DILocation(line: 4826, column: 34, scope: !4205)
!4208 = !DILocation(line: 4827, column: 3, scope: !4205)
!4209 = !DILocation(line: 4830, column: 8, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 4830, column: 7)
!4211 = !DILocation(line: 4830, column: 13, scope: !4210)
!4212 = !DILocation(line: 4830, column: 18, scope: !4210)
!4213 = !DILocation(line: 4830, column: 42, scope: !4210)
!4214 = !DILocation(line: 4830, column: 7, scope: !4147)
!4215 = !DILocation(line: 4831, column: 36, scope: !4210)
!4216 = !DILocation(line: 4831, column: 41, scope: !4210)
!4217 = !DILocation(line: 4831, column: 45, scope: !4210)
!4218 = !DILocation(line: 4831, column: 50, scope: !4210)
!4219 = !DILocation(line: 4831, column: 57, scope: !4210)
!4220 = !DILocation(line: 4831, column: 62, scope: !4210)
!4221 = !DILocation(line: 4831, column: 70, scope: !4210)
!4222 = !DILocation(line: 4831, column: 75, scope: !4210)
!4223 = !DILocation(line: 4831, column: 4, scope: !4210)
!4224 = !DILocation(line: 4839, column: 7, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 4839, column: 7)
!4226 = !DILocation(line: 4839, column: 11, scope: !4225)
!4227 = !DILocation(line: 4839, column: 7, scope: !4147)
!4228 = !DILocalVariable(name: "solution", scope: !4229, file: !3, line: 4840, type: !480)
!4229 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 4839, column: 19)
!4230 = !DILocation(line: 4840, column: 10, scope: !4229)
!4231 = !DILocation(line: 4841, column: 15, scope: !4229)
!4232 = !DILocation(line: 4841, column: 25, scope: !4229)
!4233 = !DILocation(line: 4841, column: 30, scope: !4229)
!4234 = !DILocation(line: 4841, column: 4, scope: !4229)
!4235 = !DILocation(line: 4842, column: 18, scope: !4229)
!4236 = !DILocation(line: 4842, column: 23, scope: !4229)
!4237 = !DILocation(line: 4842, column: 31, scope: !4229)
!4238 = !DILocation(line: 4842, column: 39, scope: !4229)
!4239 = !DILocation(line: 4842, column: 49, scope: !4229)
!4240 = !DILocation(line: 4842, column: 4, scope: !4229)
!4241 = !DILocation(line: 4843, column: 3, scope: !4229)
!4242 = !DILocation(line: 4844, column: 2, scope: !4147)
!4243 = !DILocation(line: 4792, column: 40, scope: !4144)
!4244 = !DILocation(line: 4792, column: 45, scope: !4144)
!4245 = !DILocation(line: 4792, column: 38, scope: !4144)
!4246 = !DILocation(line: 4792, column: 2, scope: !4144)
!4247 = distinct !{!4247, !4145, !4248}
!4248 = !DILocation(line: 4844, column: 2, scope: !4139)
!4249 = !DILocation(line: 4845, column: 1, scope: !4118)
!4250 = distinct !DISubprogram(name: "childof_id_looper", scope: !3, file: !3, line: 719, type: !4251, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!4251 = !DISubroutineType(types: !4252)
!4252 = !{null, !2708, !2599, !431}
!4253 = !DILocalVariable(name: "con", arg: 1, scope: !4250, file: !3, line: 719, type: !2708)
!4254 = !DILocation(line: 719, column: 44, scope: !4250)
!4255 = !DILocalVariable(name: "func", arg: 2, scope: !4250, file: !3, line: 719, type: !2599)
!4256 = !DILocation(line: 719, column: 66, scope: !4250)
!4257 = !DILocalVariable(name: "userdata", arg: 3, scope: !4250, file: !3, line: 719, type: !431)
!4258 = !DILocation(line: 719, column: 78, scope: !4250)
!4259 = !DILocalVariable(name: "data", scope: !4250, file: !3, line: 721, type: !2259)
!4260 = !DILocation(line: 721, column: 22, scope: !4250)
!4261 = !DILocation(line: 721, column: 29, scope: !4250)
!4262 = !DILocation(line: 721, column: 34, scope: !4250)
!4263 = !DILocation(line: 724, column: 2, scope: !4250)
!4264 = !DILocation(line: 724, column: 7, scope: !4250)
!4265 = !DILocation(line: 724, column: 20, scope: !4250)
!4266 = !DILocation(line: 724, column: 26, scope: !4250)
!4267 = !DILocation(line: 724, column: 12, scope: !4250)
!4268 = !DILocation(line: 724, column: 38, scope: !4250)
!4269 = !DILocation(line: 725, column: 1, scope: !4250)
!4270 = distinct !DISubprogram(name: "childof_new_data", scope: !3, file: !3, line: 709, type: !2610, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!4271 = !DILocalVariable(name: "cdata", arg: 1, scope: !4270, file: !3, line: 709, type: !431)
!4272 = !DILocation(line: 709, column: 36, scope: !4270)
!4273 = !DILocalVariable(name: "data", scope: !4270, file: !3, line: 711, type: !2259)
!4274 = !DILocation(line: 711, column: 22, scope: !4270)
!4275 = !DILocation(line: 711, column: 51, scope: !4270)
!4276 = !DILocation(line: 711, column: 29, scope: !4270)
!4277 = !DILocation(line: 713, column: 2, scope: !4270)
!4278 = !DILocation(line: 713, column: 8, scope: !4270)
!4279 = !DILocation(line: 713, column: 13, scope: !4270)
!4280 = !DILocation(line: 716, column: 10, scope: !4270)
!4281 = !DILocation(line: 716, column: 16, scope: !4270)
!4282 = !DILocation(line: 716, column: 2, scope: !4270)
!4283 = !DILocation(line: 717, column: 1, scope: !4270)
!4284 = distinct !DISubprogram(name: "childof_get_tars", scope: !3, file: !3, line: 727, type: !4285, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!4285 = !DISubroutineType(types: !4286)
!4286 = !{!352, !2708, !1287}
!4287 = !DILocalVariable(name: "con", arg: 1, scope: !4284, file: !3, line: 727, type: !2708)
!4288 = !DILocation(line: 727, column: 42, scope: !4284)
!4289 = !DILocalVariable(name: "list", arg: 2, scope: !4284, file: !3, line: 727, type: !1287)
!4290 = !DILocation(line: 727, column: 57, scope: !4284)
!4291 = !DILocation(line: 729, column: 6, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 729, column: 6)
!4293 = !DILocation(line: 729, column: 10, scope: !4292)
!4294 = !DILocation(line: 729, column: 13, scope: !4292)
!4295 = !DILocation(line: 729, column: 6, scope: !4284)
!4296 = !DILocalVariable(name: "data", scope: !4297, file: !3, line: 730, type: !2259)
!4297 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 729, column: 19)
!4298 = !DILocation(line: 730, column: 23, scope: !4297)
!4299 = !DILocation(line: 730, column: 30, scope: !4297)
!4300 = !DILocation(line: 730, column: 35, scope: !4297)
!4301 = !DILocalVariable(name: "ct", scope: !4297, file: !3, line: 731, type: !2244)
!4302 = !DILocation(line: 731, column: 22, scope: !4297)
!4303 = !DILocation(line: 734, column: 3, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 734, column: 3)
!4305 = !DILocation(line: 734, column: 3, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4304, file: !3, line: 734, column: 3)
!4307 = !DILocation(line: 734, column: 3, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !3, line: 734, column: 3)
!4309 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 734, column: 3)
!4310 = !DILocation(line: 734, column: 3, scope: !4309)
!4311 = !DILocalVariable(name: "pchan", scope: !4312, file: !3, line: 734, type: !399)
!4312 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 734, column: 3)
!4313 = !DILocation(line: 734, column: 3, scope: !4312)
!4314 = !DILocation(line: 734, column: 3, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 734, column: 3)
!4316 = !DILocation(line: 734, column: 3, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 734, column: 3)
!4318 = !DILocation(line: 734, column: 3, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 734, column: 3)
!4320 = !DILocation(line: 736, column: 3, scope: !4297)
!4321 = !DILocation(line: 739, column: 2, scope: !4284)
!4322 = !DILocation(line: 740, column: 1, scope: !4284)
!4323 = distinct !DISubprogram(name: "childof_flush_tars", scope: !3, file: !3, line: 742, type: !4324, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{null, !2708, !1287, !1111}
!4326 = !DILocalVariable(name: "con", arg: 1, scope: !4323, file: !3, line: 742, type: !2708)
!4327 = !DILocation(line: 742, column: 45, scope: !4323)
!4328 = !DILocalVariable(name: "list", arg: 2, scope: !4323, file: !3, line: 742, type: !1287)
!4329 = !DILocation(line: 742, column: 60, scope: !4323)
!4330 = !DILocalVariable(name: "no_copy", arg: 3, scope: !4323, file: !3, line: 742, type: !1111)
!4331 = !DILocation(line: 742, column: 71, scope: !4323)
!4332 = !DILocation(line: 744, column: 6, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 744, column: 6)
!4334 = !DILocation(line: 744, column: 10, scope: !4333)
!4335 = !DILocation(line: 744, column: 13, scope: !4333)
!4336 = !DILocation(line: 744, column: 6, scope: !4323)
!4337 = !DILocalVariable(name: "data", scope: !4338, file: !3, line: 745, type: !2259)
!4338 = distinct !DILexicalBlock(scope: !4333, file: !3, line: 744, column: 19)
!4339 = !DILocation(line: 745, column: 23, scope: !4338)
!4340 = !DILocation(line: 745, column: 30, scope: !4338)
!4341 = !DILocation(line: 745, column: 35, scope: !4338)
!4342 = !DILocalVariable(name: "ct", scope: !4338, file: !3, line: 746, type: !2244)
!4343 = !DILocation(line: 746, column: 22, scope: !4338)
!4344 = !DILocation(line: 746, column: 27, scope: !4338)
!4345 = !DILocation(line: 746, column: 33, scope: !4338)
!4346 = !DILocation(line: 749, column: 3, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 749, column: 3)
!4348 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 749, column: 3)
!4349 = !DILocation(line: 749, column: 3, scope: !4348)
!4350 = !DILocalVariable(name: "ctn", scope: !4351, file: !3, line: 749, type: !2244)
!4351 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 749, column: 3)
!4352 = !DILocation(line: 749, column: 3, scope: !4351)
!4353 = !DILocation(line: 749, column: 3, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 749, column: 3)
!4355 = !DILocation(line: 749, column: 3, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 749, column: 3)
!4357 = !DILocation(line: 750, column: 2, scope: !4338)
!4358 = !DILocation(line: 751, column: 1, scope: !4323)
!4359 = distinct !DISubprogram(name: "default_get_tarmat", scope: !3, file: !3, line: 605, type: !4360, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{null, !2708, !2733, !2244, !467}
!4362 = !DILocalVariable(name: "con", arg: 1, scope: !4359, file: !3, line: 605, type: !2708)
!4363 = !DILocation(line: 605, column: 45, scope: !4359)
!4364 = !DILocalVariable(name: "UNUSED_cob", arg: 2, scope: !4359, file: !3, line: 605, type: !2733)
!4365 = !DILocation(line: 605, column: 65, scope: !4359)
!4366 = !DILocalVariable(name: "ct", arg: 3, scope: !4359, file: !3, line: 605, type: !2244)
!4367 = !DILocation(line: 605, column: 97, scope: !4359)
!4368 = !DILocalVariable(name: "UNUSED_ctime", arg: 4, scope: !4359, file: !3, line: 605, type: !467)
!4369 = !DILocation(line: 605, column: 107, scope: !4359)
!4370 = !DILocation(line: 607, column: 6, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 607, column: 6)
!4372 = !DILocation(line: 607, column: 6, scope: !4359)
!4373 = !DILocation(line: 608, column: 29, scope: !4371)
!4374 = !DILocation(line: 608, column: 33, scope: !4371)
!4375 = !DILocation(line: 608, column: 38, scope: !4371)
!4376 = !DILocation(line: 608, column: 42, scope: !4371)
!4377 = !DILocation(line: 608, column: 53, scope: !4371)
!4378 = !DILocation(line: 608, column: 57, scope: !4371)
!4379 = !DILocation(line: 608, column: 89, scope: !4371)
!4380 = !DILocation(line: 608, column: 93, scope: !4371)
!4381 = !DILocation(line: 608, column: 100, scope: !4371)
!4382 = !DILocation(line: 608, column: 105, scope: !4371)
!4383 = !DILocation(line: 608, column: 3, scope: !4371)
!4384 = !DILocation(line: 609, column: 11, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 609, column: 11)
!4386 = !DILocation(line: 609, column: 11, scope: !4371)
!4387 = !DILocation(line: 610, column: 11, scope: !4385)
!4388 = !DILocation(line: 610, column: 15, scope: !4385)
!4389 = !DILocation(line: 610, column: 3, scope: !4385)
!4390 = !DILocation(line: 611, column: 1, scope: !4359)
!4391 = distinct !DISubprogram(name: "childof_evaluate", scope: !3, file: !3, line: 753, type: !4392, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{null, !2708, !2733, !1287}
!4394 = !DILocalVariable(name: "con", arg: 1, scope: !4391, file: !3, line: 753, type: !2708)
!4395 = !DILocation(line: 753, column: 43, scope: !4391)
!4396 = !DILocalVariable(name: "cob", arg: 2, scope: !4391, file: !3, line: 753, type: !2733)
!4397 = !DILocation(line: 753, column: 63, scope: !4391)
!4398 = !DILocalVariable(name: "targets", arg: 3, scope: !4391, file: !3, line: 753, type: !1287)
!4399 = !DILocation(line: 753, column: 78, scope: !4391)
!4400 = !DILocalVariable(name: "data", scope: !4391, file: !3, line: 755, type: !2259)
!4401 = !DILocation(line: 755, column: 22, scope: !4391)
!4402 = !DILocation(line: 755, column: 29, scope: !4391)
!4403 = !DILocation(line: 755, column: 34, scope: !4391)
!4404 = !DILocalVariable(name: "ct", scope: !4391, file: !3, line: 756, type: !2244)
!4405 = !DILocation(line: 756, column: 21, scope: !4391)
!4406 = !DILocation(line: 756, column: 26, scope: !4391)
!4407 = !DILocation(line: 756, column: 35, scope: !4391)
!4408 = !DILocation(line: 759, column: 6, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 759, column: 6)
!4410 = !DILocation(line: 759, column: 6, scope: !4391)
!4411 = !DILocalVariable(name: "parmat", scope: !4412, file: !3, line: 760, type: !480)
!4412 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 759, column: 29)
!4413 = !DILocation(line: 760, column: 9, scope: !4412)
!4414 = !DILocation(line: 763, column: 7, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 763, column: 7)
!4416 = !DILocation(line: 763, column: 13, scope: !4415)
!4417 = !DILocation(line: 763, column: 18, scope: !4415)
!4418 = !DILocation(line: 763, column: 7, scope: !4412)
!4419 = !DILocation(line: 768, column: 16, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 763, column: 34)
!4421 = !DILocation(line: 768, column: 24, scope: !4420)
!4422 = !DILocation(line: 768, column: 28, scope: !4420)
!4423 = !DILocation(line: 768, column: 36, scope: !4420)
!4424 = !DILocation(line: 768, column: 42, scope: !4420)
!4425 = !DILocation(line: 768, column: 4, scope: !4420)
!4426 = !DILocation(line: 773, column: 16, scope: !4420)
!4427 = !DILocation(line: 773, column: 21, scope: !4420)
!4428 = !DILocation(line: 773, column: 29, scope: !4420)
!4429 = !DILocation(line: 773, column: 37, scope: !4420)
!4430 = !DILocation(line: 773, column: 42, scope: !4420)
!4431 = !DILocation(line: 773, column: 4, scope: !4420)
!4432 = !DILocation(line: 774, column: 3, scope: !4420)
!4433 = !DILocalVariable(name: "invmat", scope: !4434, file: !3, line: 776, type: !480)
!4434 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 775, column: 8)
!4435 = !DILocation(line: 776, column: 10, scope: !4434)
!4436 = !DILocalVariable(name: "tempmat", scope: !4434, file: !3, line: 776, type: !480)
!4437 = !DILocation(line: 776, column: 24, scope: !4434)
!4438 = !DILocalVariable(name: "loc", scope: !4434, file: !3, line: 777, type: !469)
!4439 = !DILocation(line: 777, column: 10, scope: !4434)
!4440 = !DILocalVariable(name: "eul", scope: !4434, file: !3, line: 777, type: !469)
!4441 = !DILocation(line: 777, column: 18, scope: !4434)
!4442 = !DILocalVariable(name: "size", scope: !4434, file: !3, line: 777, type: !469)
!4443 = !DILocation(line: 777, column: 26, scope: !4434)
!4444 = !DILocalVariable(name: "loco", scope: !4434, file: !3, line: 778, type: !469)
!4445 = !DILocation(line: 778, column: 10, scope: !4434)
!4446 = !DILocalVariable(name: "eulo", scope: !4434, file: !3, line: 778, type: !469)
!4447 = !DILocation(line: 778, column: 19, scope: !4434)
!4448 = !DILocalVariable(name: "sizo", scope: !4434, file: !3, line: 778, type: !469)
!4449 = !DILocation(line: 778, column: 28, scope: !4434)
!4450 = !DILocation(line: 781, column: 15, scope: !4434)
!4451 = !DILocation(line: 781, column: 23, scope: !4434)
!4452 = !DILocation(line: 781, column: 29, scope: !4434)
!4453 = !DILocation(line: 781, column: 4, scope: !4434)
!4454 = !DILocation(line: 784, column: 15, scope: !4434)
!4455 = !DILocation(line: 784, column: 20, scope: !4434)
!4456 = !DILocation(line: 784, column: 24, scope: !4434)
!4457 = !DILocation(line: 784, column: 4, scope: !4434)
!4458 = !DILocation(line: 785, column: 17, scope: !4434)
!4459 = !DILocation(line: 785, column: 22, scope: !4434)
!4460 = !DILocation(line: 785, column: 26, scope: !4434)
!4461 = !DILocation(line: 785, column: 36, scope: !4434)
!4462 = !DILocation(line: 785, column: 40, scope: !4434)
!4463 = !DILocation(line: 785, column: 4, scope: !4434)
!4464 = !DILocation(line: 786, column: 17, scope: !4434)
!4465 = !DILocation(line: 786, column: 23, scope: !4434)
!4466 = !DILocation(line: 786, column: 27, scope: !4434)
!4467 = !DILocation(line: 786, column: 4, scope: !4434)
!4468 = !DILocation(line: 788, column: 15, scope: !4434)
!4469 = !DILocation(line: 788, column: 21, scope: !4434)
!4470 = !DILocation(line: 788, column: 4, scope: !4434)
!4471 = !DILocation(line: 789, column: 17, scope: !4434)
!4472 = !DILocation(line: 789, column: 23, scope: !4434)
!4473 = !DILocation(line: 789, column: 28, scope: !4434)
!4474 = !DILocation(line: 789, column: 38, scope: !4434)
!4475 = !DILocation(line: 789, column: 4, scope: !4434)
!4476 = !DILocation(line: 790, column: 17, scope: !4434)
!4477 = !DILocation(line: 790, column: 23, scope: !4434)
!4478 = !DILocation(line: 790, column: 4, scope: !4434)
!4479 = !DILocation(line: 793, column: 10, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 793, column: 8)
!4481 = !DILocation(line: 793, column: 16, scope: !4480)
!4482 = !DILocation(line: 793, column: 21, scope: !4480)
!4483 = !DILocation(line: 793, column: 8, scope: !4434)
!4484 = !DILocation(line: 793, column: 47, scope: !4480)
!4485 = !DILocation(line: 793, column: 55, scope: !4480)
!4486 = !DILocation(line: 793, column: 38, scope: !4480)
!4487 = !DILocation(line: 793, column: 45, scope: !4480)
!4488 = !DILocation(line: 794, column: 10, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 794, column: 8)
!4490 = !DILocation(line: 794, column: 16, scope: !4489)
!4491 = !DILocation(line: 794, column: 21, scope: !4489)
!4492 = !DILocation(line: 794, column: 8, scope: !4434)
!4493 = !DILocation(line: 794, column: 47, scope: !4489)
!4494 = !DILocation(line: 794, column: 55, scope: !4489)
!4495 = !DILocation(line: 794, column: 38, scope: !4489)
!4496 = !DILocation(line: 794, column: 45, scope: !4489)
!4497 = !DILocation(line: 795, column: 10, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 795, column: 8)
!4499 = !DILocation(line: 795, column: 16, scope: !4498)
!4500 = !DILocation(line: 795, column: 21, scope: !4498)
!4501 = !DILocation(line: 795, column: 8, scope: !4434)
!4502 = !DILocation(line: 795, column: 47, scope: !4498)
!4503 = !DILocation(line: 795, column: 55, scope: !4498)
!4504 = !DILocation(line: 795, column: 38, scope: !4498)
!4505 = !DILocation(line: 795, column: 45, scope: !4498)
!4506 = !DILocation(line: 796, column: 10, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 796, column: 8)
!4508 = !DILocation(line: 796, column: 16, scope: !4507)
!4509 = !DILocation(line: 796, column: 21, scope: !4507)
!4510 = !DILocation(line: 796, column: 8, scope: !4434)
!4511 = !DILocation(line: 796, column: 47, scope: !4507)
!4512 = !DILocation(line: 796, column: 55, scope: !4507)
!4513 = !DILocation(line: 796, column: 38, scope: !4507)
!4514 = !DILocation(line: 796, column: 45, scope: !4507)
!4515 = !DILocation(line: 797, column: 10, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 797, column: 8)
!4517 = !DILocation(line: 797, column: 16, scope: !4516)
!4518 = !DILocation(line: 797, column: 21, scope: !4516)
!4519 = !DILocation(line: 797, column: 8, scope: !4434)
!4520 = !DILocation(line: 797, column: 47, scope: !4516)
!4521 = !DILocation(line: 797, column: 55, scope: !4516)
!4522 = !DILocation(line: 797, column: 38, scope: !4516)
!4523 = !DILocation(line: 797, column: 45, scope: !4516)
!4524 = !DILocation(line: 798, column: 10, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 798, column: 8)
!4526 = !DILocation(line: 798, column: 16, scope: !4525)
!4527 = !DILocation(line: 798, column: 21, scope: !4525)
!4528 = !DILocation(line: 798, column: 8, scope: !4434)
!4529 = !DILocation(line: 798, column: 47, scope: !4525)
!4530 = !DILocation(line: 798, column: 55, scope: !4525)
!4531 = !DILocation(line: 798, column: 38, scope: !4525)
!4532 = !DILocation(line: 798, column: 45, scope: !4525)
!4533 = !DILocation(line: 799, column: 10, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 799, column: 8)
!4535 = !DILocation(line: 799, column: 16, scope: !4534)
!4536 = !DILocation(line: 799, column: 21, scope: !4534)
!4537 = !DILocation(line: 799, column: 8, scope: !4434)
!4538 = !DILocation(line: 799, column: 49, scope: !4534)
!4539 = !DILocation(line: 799, column: 57, scope: !4534)
!4540 = !DILocation(line: 799, column: 39, scope: !4534)
!4541 = !DILocation(line: 799, column: 47, scope: !4534)
!4542 = !DILocation(line: 800, column: 10, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 800, column: 8)
!4544 = !DILocation(line: 800, column: 16, scope: !4543)
!4545 = !DILocation(line: 800, column: 21, scope: !4543)
!4546 = !DILocation(line: 800, column: 8, scope: !4434)
!4547 = !DILocation(line: 800, column: 49, scope: !4543)
!4548 = !DILocation(line: 800, column: 57, scope: !4543)
!4549 = !DILocation(line: 800, column: 39, scope: !4543)
!4550 = !DILocation(line: 800, column: 47, scope: !4543)
!4551 = !DILocation(line: 801, column: 10, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 801, column: 8)
!4553 = !DILocation(line: 801, column: 16, scope: !4552)
!4554 = !DILocation(line: 801, column: 21, scope: !4552)
!4555 = !DILocation(line: 801, column: 8, scope: !4434)
!4556 = !DILocation(line: 801, column: 49, scope: !4552)
!4557 = !DILocation(line: 801, column: 57, scope: !4552)
!4558 = !DILocation(line: 801, column: 39, scope: !4552)
!4559 = !DILocation(line: 801, column: 47, scope: !4552)
!4560 = !DILocation(line: 804, column: 26, scope: !4434)
!4561 = !DILocation(line: 804, column: 30, scope: !4434)
!4562 = !DILocation(line: 804, column: 38, scope: !4434)
!4563 = !DILocation(line: 804, column: 43, scope: !4434)
!4564 = !DILocation(line: 804, column: 48, scope: !4434)
!4565 = !DILocation(line: 804, column: 54, scope: !4434)
!4566 = !DILocation(line: 804, column: 58, scope: !4434)
!4567 = !DILocation(line: 804, column: 4, scope: !4434)
!4568 = !DILocation(line: 805, column: 26, scope: !4434)
!4569 = !DILocation(line: 805, column: 34, scope: !4434)
!4570 = !DILocation(line: 805, column: 40, scope: !4434)
!4571 = !DILocation(line: 805, column: 46, scope: !4434)
!4572 = !DILocation(line: 805, column: 52, scope: !4434)
!4573 = !DILocation(line: 805, column: 57, scope: !4434)
!4574 = !DILocation(line: 805, column: 4, scope: !4434)
!4575 = !DILocation(line: 810, column: 16, scope: !4434)
!4576 = !DILocation(line: 810, column: 24, scope: !4434)
!4577 = !DILocation(line: 810, column: 28, scope: !4434)
!4578 = !DILocation(line: 810, column: 36, scope: !4434)
!4579 = !DILocation(line: 810, column: 4, scope: !4434)
!4580 = !DILocation(line: 815, column: 15, scope: !4434)
!4581 = !DILocation(line: 815, column: 24, scope: !4434)
!4582 = !DILocation(line: 815, column: 29, scope: !4434)
!4583 = !DILocation(line: 815, column: 4, scope: !4434)
!4584 = !DILocation(line: 816, column: 16, scope: !4434)
!4585 = !DILocation(line: 816, column: 21, scope: !4434)
!4586 = !DILocation(line: 816, column: 29, scope: !4434)
!4587 = !DILocation(line: 816, column: 37, scope: !4434)
!4588 = !DILocation(line: 816, column: 4, scope: !4434)
!4589 = !DILocation(line: 821, column: 10, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 821, column: 8)
!4591 = !DILocation(line: 821, column: 16, scope: !4590)
!4592 = !DILocation(line: 821, column: 21, scope: !4590)
!4593 = !DILocation(line: 821, column: 8, scope: !4434)
!4594 = !DILocation(line: 821, column: 58, scope: !4590)
!4595 = !DILocation(line: 821, column: 38, scope: !4590)
!4596 = !DILocation(line: 821, column: 43, scope: !4590)
!4597 = !DILocation(line: 821, column: 56, scope: !4590)
!4598 = !DILocation(line: 822, column: 10, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 822, column: 8)
!4600 = !DILocation(line: 822, column: 16, scope: !4599)
!4601 = !DILocation(line: 822, column: 21, scope: !4599)
!4602 = !DILocation(line: 822, column: 8, scope: !4434)
!4603 = !DILocation(line: 822, column: 58, scope: !4599)
!4604 = !DILocation(line: 822, column: 38, scope: !4599)
!4605 = !DILocation(line: 822, column: 43, scope: !4599)
!4606 = !DILocation(line: 822, column: 56, scope: !4599)
!4607 = !DILocation(line: 823, column: 10, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 823, column: 8)
!4609 = !DILocation(line: 823, column: 16, scope: !4608)
!4610 = !DILocation(line: 823, column: 21, scope: !4608)
!4611 = !DILocation(line: 823, column: 8, scope: !4434)
!4612 = !DILocation(line: 823, column: 58, scope: !4608)
!4613 = !DILocation(line: 823, column: 38, scope: !4608)
!4614 = !DILocation(line: 823, column: 43, scope: !4608)
!4615 = !DILocation(line: 823, column: 56, scope: !4608)
!4616 = !DILocation(line: 825, column: 2, scope: !4412)
!4617 = !DILocation(line: 826, column: 1, scope: !4391)
!4618 = distinct !DISubprogram(name: "constraint_target_to_mat4", scope: !3, file: !3, line: 509, type: !4619, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{null, !2242, !3352, !1117, !420, !420, !467}
!4621 = !DILocalVariable(name: "ob", arg: 1, scope: !4618, file: !3, line: 509, type: !2242)
!4622 = !DILocation(line: 509, column: 47, scope: !4618)
!4623 = !DILocalVariable(name: "substring", arg: 2, scope: !4618, file: !3, line: 509, type: !3352)
!4624 = !DILocation(line: 509, column: 63, scope: !4618)
!4625 = !DILocalVariable(name: "mat", arg: 3, scope: !4618, file: !3, line: 509, type: !1117)
!4626 = !DILocation(line: 509, column: 80, scope: !4618)
!4627 = !DILocalVariable(name: "from", arg: 4, scope: !4618, file: !3, line: 509, type: !420)
!4628 = !DILocation(line: 509, column: 97, scope: !4618)
!4629 = !DILocalVariable(name: "to", arg: 5, scope: !4618, file: !3, line: 509, type: !420)
!4630 = !DILocation(line: 509, column: 109, scope: !4618)
!4631 = !DILocalVariable(name: "headtail", arg: 6, scope: !4618, file: !3, line: 509, type: !467)
!4632 = !DILocation(line: 509, column: 119, scope: !4618)
!4633 = !DILocation(line: 512, column: 14, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 512, column: 6)
!4635 = !DILocation(line: 512, column: 7, scope: !4634)
!4636 = !DILocation(line: 512, column: 6, scope: !4618)
!4637 = !DILocation(line: 513, column: 14, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 512, column: 26)
!4639 = !DILocation(line: 513, column: 19, scope: !4638)
!4640 = !DILocation(line: 513, column: 23, scope: !4638)
!4641 = !DILocation(line: 513, column: 3, scope: !4638)
!4642 = !DILocation(line: 514, column: 35, scope: !4638)
!4643 = !DILocation(line: 514, column: 45, scope: !4638)
!4644 = !DILocation(line: 514, column: 50, scope: !4638)
!4645 = !DILocation(line: 514, column: 56, scope: !4638)
!4646 = !DILocation(line: 514, column: 3, scope: !4638)
!4647 = !DILocation(line: 515, column: 2, scope: !4638)
!4648 = !DILocation(line: 525, column: 11, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 525, column: 11)
!4650 = !DILocation(line: 525, column: 15, scope: !4649)
!4651 = !DILocation(line: 525, column: 20, scope: !4649)
!4652 = !DILocation(line: 525, column: 11, scope: !4634)
!4653 = !DILocation(line: 526, column: 26, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 525, column: 32)
!4655 = !DILocation(line: 526, column: 30, scope: !4654)
!4656 = !DILocation(line: 526, column: 41, scope: !4654)
!4657 = !DILocation(line: 526, column: 3, scope: !4654)
!4658 = !DILocation(line: 527, column: 35, scope: !4654)
!4659 = !DILocation(line: 527, column: 45, scope: !4654)
!4660 = !DILocation(line: 527, column: 50, scope: !4654)
!4661 = !DILocation(line: 527, column: 56, scope: !4654)
!4662 = !DILocation(line: 527, column: 3, scope: !4654)
!4663 = !DILocation(line: 528, column: 2, scope: !4654)
!4664 = !DILocation(line: 529, column: 11, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 529, column: 11)
!4666 = !DILocation(line: 529, column: 15, scope: !4665)
!4667 = !DILocation(line: 529, column: 20, scope: !4665)
!4668 = !DILocation(line: 529, column: 11, scope: !4649)
!4669 = !DILocation(line: 530, column: 29, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 529, column: 35)
!4671 = !DILocation(line: 530, column: 33, scope: !4670)
!4672 = !DILocation(line: 530, column: 44, scope: !4670)
!4673 = !DILocation(line: 530, column: 3, scope: !4670)
!4674 = !DILocation(line: 531, column: 35, scope: !4670)
!4675 = !DILocation(line: 531, column: 45, scope: !4670)
!4676 = !DILocation(line: 531, column: 50, scope: !4670)
!4677 = !DILocation(line: 531, column: 56, scope: !4670)
!4678 = !DILocation(line: 531, column: 3, scope: !4670)
!4679 = !DILocation(line: 532, column: 2, scope: !4670)
!4680 = !DILocalVariable(name: "pchan", scope: !4681, file: !3, line: 535, type: !399)
!4681 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 534, column: 7)
!4682 = !DILocation(line: 535, column: 17, scope: !4681)
!4683 = !DILocation(line: 537, column: 38, scope: !4681)
!4684 = !DILocation(line: 537, column: 42, scope: !4681)
!4685 = !DILocation(line: 537, column: 48, scope: !4681)
!4686 = !DILocation(line: 537, column: 11, scope: !4681)
!4687 = !DILocation(line: 537, column: 9, scope: !4681)
!4688 = !DILocation(line: 538, column: 7, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 538, column: 7)
!4690 = !DILocation(line: 538, column: 7, scope: !4681)
!4691 = !DILocation(line: 543, column: 8, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 543, column: 8)
!4693 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 538, column: 14)
!4694 = !DILocation(line: 543, column: 17, scope: !4692)
!4695 = !DILocation(line: 543, column: 8, scope: !4693)
!4696 = !DILocation(line: 545, column: 17, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 543, column: 30)
!4698 = !DILocation(line: 545, column: 22, scope: !4697)
!4699 = !DILocation(line: 545, column: 26, scope: !4697)
!4700 = !DILocation(line: 545, column: 33, scope: !4697)
!4701 = !DILocation(line: 545, column: 40, scope: !4697)
!4702 = !DILocation(line: 545, column: 5, scope: !4697)
!4703 = !DILocation(line: 546, column: 4, scope: !4697)
!4704 = !DILocalVariable(name: "tempmat", scope: !4705, file: !3, line: 548, type: !480)
!4705 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 547, column: 9)
!4706 = !DILocation(line: 548, column: 11, scope: !4705)
!4707 = !DILocalVariable(name: "loc", scope: !4705, file: !3, line: 548, type: !469)
!4708 = !DILocation(line: 548, column: 26, scope: !4705)
!4709 = !DILocation(line: 551, column: 20, scope: !4705)
!4710 = !DILocation(line: 551, column: 25, scope: !4705)
!4711 = !DILocation(line: 551, column: 32, scope: !4705)
!4712 = !DILocation(line: 551, column: 43, scope: !4705)
!4713 = !DILocation(line: 551, column: 50, scope: !4705)
!4714 = !DILocation(line: 551, column: 61, scope: !4705)
!4715 = !DILocation(line: 551, column: 5, scope: !4705)
!4716 = !DILocation(line: 554, column: 16, scope: !4705)
!4717 = !DILocation(line: 554, column: 25, scope: !4705)
!4718 = !DILocation(line: 554, column: 32, scope: !4705)
!4719 = !DILocation(line: 554, column: 5, scope: !4705)
!4720 = !DILocation(line: 555, column: 16, scope: !4705)
!4721 = !DILocation(line: 555, column: 28, scope: !4705)
!4722 = !DILocation(line: 555, column: 5, scope: !4705)
!4723 = !DILocation(line: 557, column: 17, scope: !4705)
!4724 = !DILocation(line: 557, column: 22, scope: !4705)
!4725 = !DILocation(line: 557, column: 26, scope: !4705)
!4726 = !DILocation(line: 557, column: 33, scope: !4705)
!4727 = !DILocation(line: 557, column: 5, scope: !4705)
!4728 = !DILocation(line: 559, column: 3, scope: !4693)
!4729 = !DILocation(line: 561, column: 15, scope: !4689)
!4730 = !DILocation(line: 561, column: 20, scope: !4689)
!4731 = !DILocation(line: 561, column: 24, scope: !4689)
!4732 = !DILocation(line: 561, column: 4, scope: !4689)
!4733 = !DILocation(line: 564, column: 35, scope: !4681)
!4734 = !DILocation(line: 564, column: 39, scope: !4681)
!4735 = !DILocation(line: 564, column: 46, scope: !4681)
!4736 = !DILocation(line: 564, column: 51, scope: !4681)
!4737 = !DILocation(line: 564, column: 57, scope: !4681)
!4738 = !DILocation(line: 564, column: 3, scope: !4681)
!4739 = !DILocation(line: 566, column: 1, scope: !4618)
!4740 = distinct !DISubprogram(name: "contarget_get_mesh_mat", scope: !3, file: !3, line: 358, type: !4741, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!4741 = !DISubroutineType(types: !4742)
!4742 = !{null, !2242, !3352, !1117}
!4743 = !DILocalVariable(name: "ob", arg: 1, scope: !4740, file: !3, line: 358, type: !2242)
!4744 = !DILocation(line: 358, column: 44, scope: !4740)
!4745 = !DILocalVariable(name: "substring", arg: 2, scope: !4740, file: !3, line: 358, type: !3352)
!4746 = !DILocation(line: 358, column: 60, scope: !4740)
!4747 = !DILocalVariable(name: "mat", arg: 3, scope: !4740, file: !3, line: 358, type: !1117)
!4748 = !DILocation(line: 358, column: 77, scope: !4740)
!4749 = !DILocalVariable(name: "dm", scope: !4740, file: !3, line: 360, type: !857)
!4750 = !DILocation(line: 360, column: 15, scope: !4740)
!4751 = !DILocalVariable(name: "em", scope: !4740, file: !3, line: 361, type: !4752)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !4754, line: 83, baseType: !4755)
!4754 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !4754, line: 54, size: 896, elements: !4756)
!4756 = !{!4757, !4914, !4916, !4917, !4920, !4921, !4922, !4923, !4926, !4928, !4929, !4930, !4931, !4932, !4933, !4934}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !4755, file: !4754, line: 55, baseType: !4758, size: 64)
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4759, size: 64)
!4759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !4760, line: 186, size: 8064, elements: !4761)
!4760 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4761 = !{!4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4836, !4840, !4844, !4845, !4846, !4847, !4848, !4849, !4850, !4851, !4902, !4903, !4904, !4905, !4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913}
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4759, file: !4760, line: 187, baseType: !352, size: 32)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !4759, file: !4760, line: 187, baseType: !352, size: 32, offset: 32)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !4759, file: !4760, line: 187, baseType: !352, size: 32, offset: 64)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !4759, file: !4760, line: 187, baseType: !352, size: 32, offset: 96)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !4759, file: !4760, line: 188, baseType: !352, size: 32, offset: 128)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !4759, file: !4760, line: 188, baseType: !352, size: 32, offset: 160)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !4759, file: !4760, line: 188, baseType: !352, size: 32, offset: 192)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !4759, file: !4760, line: 193, baseType: !417, size: 8, offset: 224)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !4759, file: !4760, line: 197, baseType: !417, size: 8, offset: 232)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !4759, file: !4760, line: 201, baseType: !817, size: 64, offset: 256)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !4759, file: !4760, line: 201, baseType: !817, size: 64, offset: 320)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !4759, file: !4760, line: 201, baseType: !817, size: 64, offset: 384)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !4759, file: !4760, line: 201, baseType: !817, size: 64, offset: 448)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4759, file: !4760, line: 208, baseType: !4776, size: 64, offset: 512)
!4776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4777, size: 64)
!4777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4778, size: 64)
!4778 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !4760, line: 103, baseType: !4779)
!4779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !4760, line: 90, size: 448, elements: !4780)
!4780 = !{!4781, !4790, !4795, !4796, !4797}
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4779, file: !4760, line: 91, baseType: !4782, size: 128)
!4782 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !4760, line: 82, baseType: !4783)
!4783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !4760, line: 64, size: 128, elements: !4784)
!4784 = !{!4785, !4786, !4787, !4788, !4789}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4783, file: !4760, line: 65, baseType: !431, size: 64)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4783, file: !4760, line: 66, baseType: !352, size: 32, offset: 64)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !4783, file: !4760, line: 73, baseType: !417, size: 8, offset: 96)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !4783, file: !4760, line: 74, baseType: !417, size: 8, offset: 104)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !4783, file: !4760, line: 80, baseType: !417, size: 8, offset: 112)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !4779, file: !4760, line: 92, baseType: !4791, size: 64, offset: 128)
!4791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4792, size: 64)
!4792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !4760, line: 180, size: 16, elements: !4793)
!4793 = !{!4794}
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4792, file: !4760, line: 181, baseType: !420, size: 16)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4779, file: !4760, line: 94, baseType: !469, size: 96, offset: 192)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !4779, file: !4760, line: 95, baseType: !469, size: 96, offset: 288)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !4779, file: !4760, line: 102, baseType: !4798, size: 64, offset: 384)
!4798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4799, size: 64)
!4799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !4760, line: 110, size: 640, elements: !4800)
!4800 = !{!4801, !4802, !4803, !4805, !4806, !4829, !4835}
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4799, file: !4760, line: 111, baseType: !4782, size: 128)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !4799, file: !4760, line: 112, baseType: !4791, size: 64, offset: 128)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4799, file: !4760, line: 114, baseType: !4804, size: 64, offset: 192)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4779, size: 64)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4799, file: !4760, line: 114, baseType: !4804, size: 64, offset: 256)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4799, file: !4760, line: 118, baseType: !4807, size: 64, offset: 320)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !4760, line: 125, size: 576, elements: !4809)
!4809 = !{!4810, !4811, !4812, !4813, !4825, !4826, !4827, !4828}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4808, file: !4760, line: 126, baseType: !4782, size: 128)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !4808, file: !4760, line: 129, baseType: !4804, size: 64, offset: 128)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !4808, file: !4760, line: 130, baseType: !4798, size: 64, offset: 192)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4808, file: !4760, line: 131, baseType: !4814, size: 64, offset: 256)
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !4760, line: 164, size: 448, elements: !4816)
!4816 = !{!4817, !4818, !4819, !4822, !4823, !4824}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4815, file: !4760, line: 165, baseType: !4782, size: 128)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !4815, file: !4760, line: 166, baseType: !4791, size: 64, offset: 128)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4815, file: !4760, line: 172, baseType: !4820, size: 64, offset: 192)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !4760, line: 140, baseType: !4808)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4815, file: !4760, line: 174, baseType: !352, size: 32, offset: 256)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !4815, file: !4760, line: 175, baseType: !469, size: 96, offset: 288)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4815, file: !4760, line: 176, baseType: !420, size: 16, offset: 384)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !4808, file: !4760, line: 135, baseType: !4807, size: 64, offset: 320)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !4808, file: !4760, line: 135, baseType: !4807, size: 64, offset: 384)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4808, file: !4760, line: 139, baseType: !4807, size: 64, offset: 448)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4808, file: !4760, line: 139, baseType: !4807, size: 64, offset: 512)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !4799, file: !4760, line: 122, baseType: !4830, size: 128, offset: 384)
!4830 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !4760, line: 108, baseType: !4831)
!4831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !4760, line: 106, size: 128, elements: !4832)
!4832 = !{!4833, !4834}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4831, file: !4760, line: 107, baseType: !4798, size: 64)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4831, file: !4760, line: 107, baseType: !4798, size: 64, offset: 64)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !4799, file: !4760, line: 122, baseType: !4830, size: 128, offset: 512)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !4759, file: !4760, line: 209, baseType: !4837, size: 64, offset: 576)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4838, size: 64)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !4760, line: 123, baseType: !4799)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !4759, file: !4760, line: 210, baseType: !4841, size: 64, offset: 640)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !4760, line: 178, baseType: !4815)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !4759, file: !4760, line: 213, baseType: !352, size: 32, offset: 704)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !4759, file: !4760, line: 214, baseType: !352, size: 32, offset: 736)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !4759, file: !4760, line: 215, baseType: !352, size: 32, offset: 768)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !4759, file: !4760, line: 218, baseType: !817, size: 64, offset: 832)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !4759, file: !4760, line: 218, baseType: !817, size: 64, offset: 896)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !4759, file: !4760, line: 218, baseType: !817, size: 64, offset: 960)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !4759, file: !4760, line: 220, baseType: !352, size: 32, offset: 1024)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !4759, file: !4760, line: 221, baseType: !4852, size: 64, offset: 1088)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !128, line: 190, size: 10496, elements: !4854)
!4854 = !{!4855, !4888, !4889, !4895, !4898, !4899, !4901}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !4853, file: !128, line: 191, baseType: !4856, size: 5120)
!4856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4857, size: 5120, elements: !4886)
!4857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !128, line: 147, size: 320, elements: !4858)
!4858 = !{!4859, !4860, !4862, !4872, !4873}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !4857, file: !128, line: 148, baseType: !3352, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !4857, file: !128, line: 149, baseType: !4861, size: 32, offset: 64)
!4861 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !128, line: 112, baseType: !127)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !4857, file: !128, line: 150, baseType: !4863, size: 32, offset: 96)
!4863 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !128, line: 142, baseType: !4864)
!4864 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !128, line: 138, size: 32, elements: !4865)
!4865 = !{!4866, !4868, !4870}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4864, file: !128, line: 139, baseType: !4867, size: 32)
!4867 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !128, line: 122, baseType: !138)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4864, file: !128, line: 140, baseType: !4869, size: 32)
!4869 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !128, line: 136, baseType: !144)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4864, file: !128, line: 141, baseType: !4871, size: 32)
!4871 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !128, line: 130, baseType: !150)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4857, file: !128, line: 152, baseType: !352, size: 32, offset: 128)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4857, file: !128, line: 162, baseType: !4874, size: 128, offset: 192)
!4874 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4857, file: !128, line: 155, size: 128, elements: !4875)
!4875 = !{!4876, !4877, !4878, !4879, !4880, !4882}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !4874, file: !128, line: 156, baseType: !352, size: 32)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4874, file: !128, line: 157, baseType: !467, size: 32)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4874, file: !128, line: 158, baseType: !431, size: 64)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4874, file: !128, line: 159, baseType: !469, size: 96)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4874, file: !128, line: 160, baseType: !4881, size: 64)
!4881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !4874, file: !128, line: 161, baseType: !4883, size: 64)
!4883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4884, size: 64)
!4884 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !4885, line: 48, baseType: !611)
!4885 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4886 = !{!4887}
!4887 = !DISubrange(count: 16)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !4853, file: !128, line: 192, baseType: !4856, size: 5120, offset: 5120)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !4853, file: !128, line: 193, baseType: !4890, size: 64, offset: 10240)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{null, !4893, !4852}
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4894, size: 64)
!4894 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !4760, line: 246, baseType: !4759)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !4853, file: !128, line: 194, baseType: !4896, size: 64, offset: 10304)
!4896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4897, size: 64)
!4897 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !128, line: 194, flags: DIFlagFwdDecl)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4853, file: !128, line: 195, baseType: !352, size: 32, offset: 10368)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !4853, file: !128, line: 196, baseType: !4900, size: 32, offset: 10400)
!4900 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !128, line: 188, baseType: !158)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4853, file: !128, line: 197, baseType: !352, size: 32, offset: 10432)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4759, file: !4760, line: 223, baseType: !791, size: 1600, offset: 1152)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4759, file: !4760, line: 223, baseType: !791, size: 1600, offset: 2752)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !4759, file: !4760, line: 223, baseType: !791, size: 1600, offset: 4352)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4759, file: !4760, line: 223, baseType: !791, size: 1600, offset: 5952)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !4759, file: !4760, line: 233, baseType: !420, size: 16, offset: 7552)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !4759, file: !4760, line: 236, baseType: !352, size: 32, offset: 7584)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !4759, file: !4760, line: 238, baseType: !352, size: 32, offset: 7616)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !4759, file: !4760, line: 238, baseType: !352, size: 32, offset: 7648)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !4759, file: !4760, line: 239, baseType: !433, size: 128, offset: 7680)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !4759, file: !4760, line: 241, baseType: !4842, size: 64, offset: 7808)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !4759, file: !4760, line: 243, baseType: !433, size: 128, offset: 7872)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !4759, file: !4760, line: 245, baseType: !431, size: 64, offset: 8000)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !4755, file: !4754, line: 58, baseType: !4915, size: 64, offset: 64)
!4915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4755, size: 64)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !4755, file: !4754, line: 59, baseType: !352, size: 32, offset: 128)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !4755, file: !4754, line: 63, baseType: !4918, size: 64, offset: 192)
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64)
!4919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4807, size: 192, elements: !470)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !4755, file: !4754, line: 64, baseType: !352, size: 32, offset: 256)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !4755, file: !4754, line: 67, baseType: !787, size: 64, offset: 320)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !4755, file: !4754, line: 67, baseType: !787, size: 64, offset: 384)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !4755, file: !4754, line: 68, baseType: !4924, size: 64, offset: 448)
!4924 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !4925, line: 48, baseType: !1276)
!4925 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !4755, file: !4754, line: 69, baseType: !4927, size: 64, offset: 512)
!4927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !4755, file: !4754, line: 70, baseType: !352, size: 32, offset: 576)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !4755, file: !4754, line: 71, baseType: !4927, size: 64, offset: 640)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !4755, file: !4754, line: 72, baseType: !352, size: 32, offset: 704)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !4755, file: !4754, line: 75, baseType: !420, size: 16, offset: 736)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4755, file: !4754, line: 76, baseType: !420, size: 16, offset: 752)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4755, file: !4754, line: 79, baseType: !521, size: 64, offset: 768)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !4755, file: !4754, line: 82, baseType: !352, size: 32, offset: 832)
!4935 = !DILocation(line: 361, column: 14, scope: !4740)
!4936 = !DILocation(line: 361, column: 44, scope: !4740)
!4937 = !DILocation(line: 361, column: 19, scope: !4740)
!4938 = !DILocalVariable(name: "vec", scope: !4740, file: !3, line: 362, type: !469)
!4939 = !DILocation(line: 362, column: 8, scope: !4740)
!4940 = !DILocalVariable(name: "normal", scope: !4740, file: !3, line: 363, type: !469)
!4941 = !DILocation(line: 363, column: 8, scope: !4740)
!4942 = !DILocalVariable(name: "plane", scope: !4740, file: !3, line: 363, type: !469)
!4943 = !DILocation(line: 363, column: 40, scope: !4740)
!4944 = !DILocalVariable(name: "imat", scope: !4740, file: !3, line: 364, type: !474)
!4945 = !DILocation(line: 364, column: 8, scope: !4740)
!4946 = !DILocalVariable(name: "tmat", scope: !4740, file: !3, line: 364, type: !474)
!4947 = !DILocation(line: 364, column: 20, scope: !4740)
!4948 = !DILocalVariable(name: "defgroup", scope: !4740, file: !3, line: 365, type: !4949)
!4949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!4950 = !DILocation(line: 365, column: 12, scope: !4740)
!4951 = !DILocation(line: 365, column: 43, scope: !4740)
!4952 = !DILocation(line: 365, column: 47, scope: !4740)
!4953 = !DILocation(line: 365, column: 23, scope: !4740)
!4954 = !DILocalVariable(name: "freeDM", scope: !4740, file: !3, line: 366, type: !420)
!4955 = !DILocation(line: 366, column: 8, scope: !4740)
!4956 = !DILocation(line: 369, column: 13, scope: !4740)
!4957 = !DILocation(line: 369, column: 18, scope: !4740)
!4958 = !DILocation(line: 369, column: 22, scope: !4740)
!4959 = !DILocation(line: 369, column: 2, scope: !4740)
!4960 = !DILocation(line: 372, column: 6, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 372, column: 6)
!4962 = !DILocation(line: 372, column: 15, scope: !4961)
!4963 = !DILocation(line: 372, column: 6, scope: !4740)
!4964 = !DILocation(line: 372, column: 22, scope: !4961)
!4965 = !DILocation(line: 375, column: 6, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 375, column: 6)
!4967 = !DILocation(line: 375, column: 6, scope: !4740)
!4968 = !DILocation(line: 377, column: 28, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 375, column: 10)
!4970 = !DILocation(line: 377, column: 8, scope: !4969)
!4971 = !DILocation(line: 377, column: 6, scope: !4969)
!4972 = !DILocation(line: 378, column: 10, scope: !4969)
!4973 = !DILocation(line: 379, column: 2, scope: !4969)
!4974 = !DILocation(line: 384, column: 23, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 380, column: 7)
!4976 = !DILocation(line: 384, column: 27, scope: !4975)
!4977 = !DILocation(line: 384, column: 6, scope: !4975)
!4978 = !DILocation(line: 388, column: 6, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 388, column: 6)
!4980 = !DILocation(line: 388, column: 6, scope: !4740)
!4981 = !DILocalVariable(name: "dvert", scope: !4982, file: !3, line: 389, type: !4983)
!4982 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 388, column: 10)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !879, line: 63, baseType: !1376)
!4985 = !DILocation(line: 389, column: 16, scope: !4982)
!4986 = !DILocation(line: 389, column: 24, scope: !4982)
!4987 = !DILocation(line: 389, column: 28, scope: !4982)
!4988 = !DILocation(line: 389, column: 45, scope: !4982)
!4989 = !DILocalVariable(name: "numVerts", scope: !4982, file: !3, line: 390, type: !352)
!4990 = !DILocation(line: 390, column: 7, scope: !4982)
!4991 = !DILocation(line: 390, column: 18, scope: !4982)
!4992 = !DILocation(line: 390, column: 22, scope: !4982)
!4993 = !DILocation(line: 390, column: 34, scope: !4982)
!4994 = !DILocalVariable(name: "i", scope: !4982, file: !3, line: 391, type: !352)
!4995 = !DILocation(line: 391, column: 7, scope: !4982)
!4996 = !DILocalVariable(name: "co", scope: !4982, file: !3, line: 392, type: !469)
!4997 = !DILocation(line: 392, column: 9, scope: !4982)
!4998 = !DILocalVariable(name: "nor", scope: !4982, file: !3, line: 392, type: !469)
!4999 = !DILocation(line: 392, column: 16, scope: !4982)
!5000 = !DILocation(line: 395, column: 7, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 395, column: 7)
!5002 = !DILocation(line: 395, column: 7, scope: !4982)
!5003 = !DILocalVariable(name: "dv", scope: !5004, file: !3, line: 396, type: !4983)
!5004 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 395, column: 14)
!5005 = !DILocation(line: 396, column: 17, scope: !5004)
!5006 = !DILocation(line: 396, column: 22, scope: !5004)
!5007 = !DILocalVariable(name: "weightsum", scope: !5004, file: !3, line: 397, type: !467)
!5008 = !DILocation(line: 397, column: 10, scope: !5004)
!5009 = !DILocation(line: 400, column: 11, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 400, column: 4)
!5011 = !DILocation(line: 400, column: 9, scope: !5010)
!5012 = !DILocation(line: 400, column: 16, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 400, column: 4)
!5014 = !DILocation(line: 400, column: 20, scope: !5013)
!5015 = !DILocation(line: 400, column: 18, scope: !5013)
!5016 = !DILocation(line: 400, column: 4, scope: !5010)
!5017 = !DILocalVariable(name: "dw", scope: !5018, file: !3, line: 401, type: !5019)
!5018 = distinct !DILexicalBlock(scope: !5013, file: !3, line: 400, column: 41)
!5019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5020, size: 64)
!5020 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformWeight", file: !879, line: 57, baseType: !1380)
!5021 = !DILocation(line: 401, column: 20, scope: !5018)
!5022 = !DILocation(line: 401, column: 44, scope: !5018)
!5023 = !DILocation(line: 401, column: 48, scope: !5018)
!5024 = !DILocation(line: 401, column: 25, scope: !5018)
!5025 = !DILocation(line: 403, column: 9, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5018, file: !3, line: 403, column: 9)
!5027 = !DILocation(line: 403, column: 12, scope: !5026)
!5028 = !DILocation(line: 403, column: 15, scope: !5026)
!5029 = !DILocation(line: 403, column: 19, scope: !5026)
!5030 = !DILocation(line: 403, column: 26, scope: !5026)
!5031 = !DILocation(line: 403, column: 9, scope: !5018)
!5032 = !DILocation(line: 404, column: 6, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 403, column: 34)
!5034 = !DILocation(line: 404, column: 10, scope: !5033)
!5035 = !DILocation(line: 404, column: 20, scope: !5033)
!5036 = !DILocation(line: 404, column: 24, scope: !5033)
!5037 = !DILocation(line: 404, column: 27, scope: !5033)
!5038 = !DILocation(line: 405, column: 6, scope: !5033)
!5039 = !DILocation(line: 405, column: 10, scope: !5033)
!5040 = !DILocation(line: 405, column: 20, scope: !5033)
!5041 = !DILocation(line: 405, column: 24, scope: !5033)
!5042 = !DILocation(line: 405, column: 27, scope: !5033)
!5043 = !DILocation(line: 406, column: 19, scope: !5033)
!5044 = !DILocation(line: 406, column: 24, scope: !5033)
!5045 = !DILocation(line: 406, column: 28, scope: !5033)
!5046 = !DILocation(line: 406, column: 32, scope: !5033)
!5047 = !DILocation(line: 406, column: 6, scope: !5033)
!5048 = !DILocation(line: 407, column: 19, scope: !5033)
!5049 = !DILocation(line: 407, column: 27, scope: !5033)
!5050 = !DILocation(line: 407, column: 32, scope: !5033)
!5051 = !DILocation(line: 407, column: 36, scope: !5033)
!5052 = !DILocation(line: 407, column: 6, scope: !5033)
!5053 = !DILocation(line: 408, column: 19, scope: !5033)
!5054 = !DILocation(line: 408, column: 23, scope: !5033)
!5055 = !DILocation(line: 408, column: 16, scope: !5033)
!5056 = !DILocation(line: 409, column: 5, scope: !5033)
!5057 = !DILocation(line: 410, column: 4, scope: !5018)
!5058 = !DILocation(line: 400, column: 31, scope: !5013)
!5059 = !DILocation(line: 400, column: 37, scope: !5013)
!5060 = !DILocation(line: 400, column: 4, scope: !5013)
!5061 = distinct !{!5061, !5016, !5062}
!5062 = !DILocation(line: 410, column: 4, scope: !5010)
!5063 = !DILocation(line: 413, column: 8, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 413, column: 8)
!5065 = !DILocation(line: 413, column: 18, scope: !5064)
!5066 = !DILocation(line: 413, column: 8, scope: !5004)
!5067 = !DILocation(line: 414, column: 15, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 413, column: 23)
!5069 = !DILocation(line: 414, column: 27, scope: !5068)
!5070 = !DILocation(line: 414, column: 25, scope: !5068)
!5071 = !DILocation(line: 414, column: 5, scope: !5068)
!5072 = !DILocation(line: 415, column: 15, scope: !5068)
!5073 = !DILocation(line: 415, column: 30, scope: !5068)
!5074 = !DILocation(line: 415, column: 28, scope: !5068)
!5075 = !DILocation(line: 415, column: 5, scope: !5068)
!5076 = !DILocation(line: 416, column: 4, scope: !5068)
!5077 = !DILocation(line: 424, column: 15, scope: !5004)
!5078 = !DILocation(line: 424, column: 21, scope: !5004)
!5079 = !DILocation(line: 424, column: 25, scope: !5004)
!5080 = !DILocation(line: 424, column: 4, scope: !5004)
!5081 = !DILocation(line: 426, column: 17, scope: !5004)
!5082 = !DILocation(line: 426, column: 23, scope: !5004)
!5083 = !DILocation(line: 426, column: 4, scope: !5004)
!5084 = !DILocation(line: 427, column: 17, scope: !5004)
!5085 = !DILocation(line: 427, column: 4, scope: !5004)
!5086 = !DILocation(line: 428, column: 14, scope: !5004)
!5087 = !DILocation(line: 428, column: 20, scope: !5004)
!5088 = !DILocation(line: 428, column: 4, scope: !5004)
!5089 = !DILocation(line: 430, column: 17, scope: !5004)
!5090 = !DILocation(line: 430, column: 4, scope: !5004)
!5091 = !DILocation(line: 431, column: 15, scope: !5004)
!5092 = !DILocation(line: 431, column: 22, scope: !5004)
!5093 = !DILocation(line: 431, column: 4, scope: !5004)
!5094 = !DILocation(line: 433, column: 18, scope: !5004)
!5095 = !DILocation(line: 433, column: 26, scope: !5004)
!5096 = !DILocation(line: 433, column: 34, scope: !5004)
!5097 = !DILocation(line: 433, column: 4, scope: !5004)
!5098 = !DILocation(line: 434, column: 15, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 434, column: 8)
!5100 = !DILocation(line: 434, column: 8, scope: !5099)
!5101 = !DILocation(line: 434, column: 23, scope: !5099)
!5102 = !DILocation(line: 434, column: 8, scope: !5004)
!5103 = !DILocation(line: 435, column: 16, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 434, column: 32)
!5105 = !DILocation(line: 435, column: 23, scope: !5104)
!5106 = !DILocation(line: 435, column: 5, scope: !5104)
!5107 = !DILocation(line: 436, column: 19, scope: !5104)
!5108 = !DILocation(line: 436, column: 27, scope: !5104)
!5109 = !DILocation(line: 436, column: 35, scope: !5104)
!5110 = !DILocation(line: 436, column: 5, scope: !5104)
!5111 = !DILocation(line: 437, column: 4, scope: !5104)
!5112 = !DILocation(line: 439, column: 15, scope: !5004)
!5113 = !DILocation(line: 439, column: 23, scope: !5004)
!5114 = !DILocation(line: 439, column: 4, scope: !5004)
!5115 = !DILocation(line: 440, column: 18, scope: !5004)
!5116 = !DILocation(line: 440, column: 26, scope: !5004)
!5117 = !DILocation(line: 440, column: 34, scope: !5004)
!5118 = !DILocation(line: 440, column: 4, scope: !5004)
!5119 = !DILocation(line: 442, column: 17, scope: !5004)
!5120 = !DILocation(line: 442, column: 4, scope: !5004)
!5121 = !DILocation(line: 446, column: 16, scope: !5004)
!5122 = !DILocation(line: 446, column: 24, scope: !5004)
!5123 = !DILocation(line: 446, column: 28, scope: !5004)
!5124 = !DILocation(line: 446, column: 35, scope: !5004)
!5125 = !DILocation(line: 446, column: 4, scope: !5004)
!5126 = !DILocation(line: 447, column: 3, scope: !5004)
!5127 = !DILocation(line: 448, column: 2, scope: !4982)
!5128 = !DILocation(line: 451, column: 6, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 451, column: 6)
!5130 = !DILocation(line: 451, column: 9, scope: !5129)
!5131 = !DILocation(line: 451, column: 12, scope: !5129)
!5132 = !DILocation(line: 451, column: 6, scope: !4740)
!5133 = !DILocation(line: 452, column: 3, scope: !5129)
!5134 = !DILocation(line: 452, column: 7, scope: !5129)
!5135 = !DILocation(line: 452, column: 15, scope: !5129)
!5136 = !DILocation(line: 453, column: 1, scope: !4740)
!5137 = distinct !DISubprogram(name: "contarget_get_lattice_mat", scope: !3, file: !3, line: 456, type: !4741, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5138 = !DILocalVariable(name: "ob", arg: 1, scope: !5137, file: !3, line: 456, type: !2242)
!5139 = !DILocation(line: 456, column: 47, scope: !5137)
!5140 = !DILocalVariable(name: "substring", arg: 2, scope: !5137, file: !3, line: 456, type: !3352)
!5141 = !DILocation(line: 456, column: 63, scope: !5137)
!5142 = !DILocalVariable(name: "mat", arg: 3, scope: !5137, file: !3, line: 456, type: !1117)
!5143 = !DILocation(line: 456, column: 80, scope: !5137)
!5144 = !DILocalVariable(name: "lt", scope: !5137, file: !3, line: 458, type: !2268)
!5145 = !DILocation(line: 458, column: 11, scope: !5137)
!5146 = !DILocation(line: 458, column: 27, scope: !5137)
!5147 = !DILocation(line: 458, column: 31, scope: !5137)
!5148 = !DILocation(line: 458, column: 16, scope: !5137)
!5149 = !DILocalVariable(name: "dl", scope: !5137, file: !3, line: 460, type: !5150)
!5150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5151, size: 64)
!5151 = !DIDerivedType(tag: DW_TAG_typedef, name: "DispList", file: !5152, line: 79, baseType: !5153)
!5152 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_displist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DispList", file: !5152, line: 68, size: 576, elements: !5154)
!5154 = !{!5155, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5153, file: !5152, line: 69, baseType: !5156, size: 64)
!5156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5153, file: !5152, line: 69, baseType: !5156, size: 64, offset: 64)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5153, file: !5152, line: 70, baseType: !420, size: 16, offset: 128)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5153, file: !5152, line: 70, baseType: !420, size: 16, offset: 144)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !5153, file: !5152, line: 71, baseType: !352, size: 32, offset: 160)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !5153, file: !5152, line: 71, baseType: !352, size: 32, offset: 192)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !5153, file: !5152, line: 72, baseType: !420, size: 16, offset: 224)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !5153, file: !5152, line: 72, baseType: !420, size: 16, offset: 240)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !5153, file: !5152, line: 73, baseType: !1080, size: 64, offset: 256)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "nors", scope: !5153, file: !5152, line: 73, baseType: !1080, size: 64, offset: 320)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5153, file: !5152, line: 74, baseType: !1024, size: 64, offset: 384)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !5153, file: !5152, line: 75, baseType: !352, size: 32, offset: 448)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !5153, file: !5152, line: 76, baseType: !352, size: 32, offset: 480)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "bevelSplitFlag", scope: !5153, file: !5152, line: 78, baseType: !1046, size: 64, offset: 512)
!5170 = !DILocation(line: 460, column: 12, scope: !5137)
!5171 = !DILocation(line: 460, column: 17, scope: !5137)
!5172 = !DILocation(line: 460, column: 21, scope: !5137)
!5173 = !DILocation(line: 460, column: 54, scope: !5137)
!5174 = !DILocation(line: 460, column: 58, scope: !5137)
!5175 = !DILocation(line: 460, column: 71, scope: !5137)
!5176 = !DILocation(line: 460, column: 35, scope: !5137)
!5177 = !DILocalVariable(name: "co", scope: !5137, file: !3, line: 461, type: !1054)
!5178 = !DILocation(line: 461, column: 15, scope: !5137)
!5179 = !DILocation(line: 461, column: 20, scope: !5137)
!5180 = !DILocation(line: 461, column: 25, scope: !5137)
!5181 = !DILocation(line: 461, column: 29, scope: !5137)
!5182 = !DILocalVariable(name: "bp", scope: !5137, file: !3, line: 462, type: !5183)
!5183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5184, size: 64)
!5184 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !774, line: 141, baseType: !2296)
!5185 = !DILocation(line: 462, column: 10, scope: !5137)
!5186 = !DILocation(line: 462, column: 15, scope: !5137)
!5187 = !DILocation(line: 462, column: 19, scope: !5137)
!5188 = !DILocalVariable(name: "dv", scope: !5137, file: !3, line: 464, type: !4983)
!5189 = !DILocation(line: 464, column: 15, scope: !5137)
!5190 = !DILocation(line: 464, column: 20, scope: !5137)
!5191 = !DILocation(line: 464, column: 24, scope: !5137)
!5192 = !DILocalVariable(name: "tot_verts", scope: !5137, file: !3, line: 465, type: !352)
!5193 = !DILocation(line: 465, column: 6, scope: !5137)
!5194 = !DILocation(line: 465, column: 18, scope: !5137)
!5195 = !DILocation(line: 465, column: 22, scope: !5137)
!5196 = !DILocation(line: 465, column: 30, scope: !5137)
!5197 = !DILocation(line: 465, column: 34, scope: !5137)
!5198 = !DILocation(line: 465, column: 28, scope: !5137)
!5199 = !DILocation(line: 465, column: 42, scope: !5137)
!5200 = !DILocation(line: 465, column: 46, scope: !5137)
!5201 = !DILocation(line: 465, column: 40, scope: !5137)
!5202 = !DILocalVariable(name: "vec", scope: !5137, file: !3, line: 466, type: !469)
!5203 = !DILocation(line: 466, column: 8, scope: !5137)
!5204 = !DILocalVariable(name: "tvec", scope: !5137, file: !3, line: 466, type: !469)
!5205 = !DILocation(line: 466, column: 37, scope: !5137)
!5206 = !DILocalVariable(name: "grouped", scope: !5137, file: !3, line: 467, type: !352)
!5207 = !DILocation(line: 467, column: 6, scope: !5137)
!5208 = !DILocalVariable(name: "i", scope: !5137, file: !3, line: 468, type: !352)
!5209 = !DILocation(line: 468, column: 6, scope: !5137)
!5210 = !DILocalVariable(name: "n", scope: !5137, file: !3, line: 468, type: !352)
!5211 = !DILocation(line: 468, column: 9, scope: !5137)
!5212 = !DILocalVariable(name: "defgroup", scope: !5137, file: !3, line: 469, type: !4949)
!5213 = !DILocation(line: 469, column: 12, scope: !5137)
!5214 = !DILocation(line: 469, column: 43, scope: !5137)
!5215 = !DILocation(line: 469, column: 47, scope: !5137)
!5216 = !DILocation(line: 469, column: 23, scope: !5137)
!5217 = !DILocation(line: 472, column: 13, scope: !5137)
!5218 = !DILocation(line: 472, column: 18, scope: !5137)
!5219 = !DILocation(line: 472, column: 22, scope: !5137)
!5220 = !DILocation(line: 472, column: 2, scope: !5137)
!5221 = !DILocation(line: 475, column: 6, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 475, column: 6)
!5223 = !DILocation(line: 475, column: 15, scope: !5222)
!5224 = !DILocation(line: 475, column: 6, scope: !5137)
!5225 = !DILocation(line: 475, column: 22, scope: !5222)
!5226 = !DILocation(line: 476, column: 6, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 476, column: 6)
!5228 = !DILocation(line: 476, column: 9, scope: !5227)
!5229 = !DILocation(line: 476, column: 6, scope: !5137)
!5230 = !DILocation(line: 476, column: 18, scope: !5227)
!5231 = !DILocation(line: 481, column: 9, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 481, column: 2)
!5233 = !DILocation(line: 481, column: 7, scope: !5232)
!5234 = !DILocation(line: 481, column: 14, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 481, column: 2)
!5236 = !DILocation(line: 481, column: 18, scope: !5235)
!5237 = !DILocation(line: 481, column: 16, scope: !5235)
!5238 = !DILocation(line: 481, column: 2, scope: !5232)
!5239 = !DILocation(line: 482, column: 10, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 482, column: 3)
!5241 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 481, column: 40)
!5242 = !DILocation(line: 482, column: 8, scope: !5240)
!5243 = !DILocation(line: 482, column: 15, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 482, column: 3)
!5245 = !DILocation(line: 482, column: 19, scope: !5244)
!5246 = !DILocation(line: 482, column: 23, scope: !5244)
!5247 = !DILocation(line: 482, column: 17, scope: !5244)
!5248 = !DILocation(line: 482, column: 3, scope: !5240)
!5249 = !DILocalVariable(name: "dw", scope: !5250, file: !3, line: 483, type: !5019)
!5250 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 482, column: 39)
!5251 = !DILocation(line: 483, column: 19, scope: !5250)
!5252 = !DILocation(line: 483, column: 43, scope: !5250)
!5253 = !DILocation(line: 483, column: 47, scope: !5250)
!5254 = !DILocation(line: 483, column: 24, scope: !5250)
!5255 = !DILocation(line: 484, column: 8, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 484, column: 8)
!5257 = !DILocation(line: 484, column: 11, scope: !5256)
!5258 = !DILocation(line: 484, column: 14, scope: !5256)
!5259 = !DILocation(line: 484, column: 18, scope: !5256)
!5260 = !DILocation(line: 484, column: 25, scope: !5256)
!5261 = !DILocation(line: 484, column: 8, scope: !5250)
!5262 = !DILocation(line: 486, column: 5, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 484, column: 33)
!5264 = !DILocation(line: 486, column: 18, scope: !5263)
!5265 = !DILocation(line: 486, column: 23, scope: !5263)
!5266 = !DILocation(line: 486, column: 28, scope: !5263)
!5267 = !DILocation(line: 486, column: 32, scope: !5263)
!5268 = !DILocation(line: 488, column: 15, scope: !5263)
!5269 = !DILocation(line: 488, column: 20, scope: !5263)
!5270 = !DILocation(line: 488, column: 5, scope: !5263)
!5271 = !DILocation(line: 489, column: 12, scope: !5263)
!5272 = !DILocation(line: 490, column: 4, scope: !5263)
!5273 = !DILocation(line: 491, column: 3, scope: !5250)
!5274 = !DILocation(line: 482, column: 35, scope: !5244)
!5275 = !DILocation(line: 482, column: 3, scope: !5244)
!5276 = distinct !{!5276, !5248, !5277}
!5277 = !DILocation(line: 491, column: 3, scope: !5240)
!5278 = !DILocation(line: 494, column: 7, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 494, column: 7)
!5280 = !DILocation(line: 494, column: 7, scope: !5241)
!5281 = !DILocation(line: 494, column: 14, scope: !5279)
!5282 = !DILocation(line: 494, column: 11, scope: !5279)
!5283 = !DILocation(line: 495, column: 10, scope: !5279)
!5284 = !DILocation(line: 496, column: 2, scope: !5241)
!5285 = !DILocation(line: 481, column: 30, scope: !5235)
!5286 = !DILocation(line: 481, column: 36, scope: !5235)
!5287 = !DILocation(line: 481, column: 2, scope: !5235)
!5288 = distinct !{!5288, !5238, !5289}
!5289 = !DILocation(line: 496, column: 2, scope: !5232)
!5290 = !DILocation(line: 499, column: 6, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 499, column: 6)
!5292 = !DILocation(line: 499, column: 6, scope: !5137)
!5293 = !DILocation(line: 500, column: 13, scope: !5291)
!5294 = !DILocation(line: 500, column: 25, scope: !5291)
!5295 = !DILocation(line: 500, column: 23, scope: !5291)
!5296 = !DILocation(line: 500, column: 3, scope: !5291)
!5297 = !DILocation(line: 501, column: 14, scope: !5137)
!5298 = !DILocation(line: 501, column: 20, scope: !5137)
!5299 = !DILocation(line: 501, column: 24, scope: !5137)
!5300 = !DILocation(line: 501, column: 31, scope: !5137)
!5301 = !DILocation(line: 501, column: 2, scope: !5137)
!5302 = !DILocation(line: 504, column: 13, scope: !5137)
!5303 = !DILocation(line: 504, column: 21, scope: !5137)
!5304 = !DILocation(line: 504, column: 2, scope: !5137)
!5305 = !DILocation(line: 505, column: 1, scope: !5137)
!5306 = distinct !DISubprogram(name: "copy_v3_v3", scope: !3158, file: !3158, line: 64, type: !5307, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5307 = !DISubroutineType(types: !5308)
!5308 = !{null, !1080, !1054}
!5309 = !DILocalVariable(name: "r", arg: 1, scope: !5306, file: !3158, line: 64, type: !1080)
!5310 = !DILocation(line: 64, column: 31, scope: !5306)
!5311 = !DILocalVariable(name: "a", arg: 2, scope: !5306, file: !3158, line: 64, type: !1054)
!5312 = !DILocation(line: 64, column: 49, scope: !5306)
!5313 = !DILocation(line: 66, column: 9, scope: !5306)
!5314 = !DILocation(line: 66, column: 2, scope: !5306)
!5315 = !DILocation(line: 66, column: 7, scope: !5306)
!5316 = !DILocation(line: 67, column: 9, scope: !5306)
!5317 = !DILocation(line: 67, column: 2, scope: !5306)
!5318 = !DILocation(line: 67, column: 7, scope: !5306)
!5319 = !DILocation(line: 68, column: 9, scope: !5306)
!5320 = !DILocation(line: 68, column: 2, scope: !5306)
!5321 = !DILocation(line: 68, column: 7, scope: !5306)
!5322 = !DILocation(line: 69, column: 1, scope: !5306)
!5323 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !3158, file: !3158, line: 507, type: !5324, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5324 = !DISubroutineType(types: !5325)
!5325 = !{null, !1080, !1054, !467}
!5326 = !DILocalVariable(name: "r", arg: 1, scope: !5323, file: !3158, line: 507, type: !1080)
!5327 = !DILocation(line: 507, column: 33, scope: !5323)
!5328 = !DILocalVariable(name: "a", arg: 2, scope: !5323, file: !3158, line: 507, type: !1054)
!5329 = !DILocation(line: 507, column: 51, scope: !5323)
!5330 = !DILocalVariable(name: "f", arg: 3, scope: !5323, file: !3158, line: 507, type: !467)
!5331 = !DILocation(line: 507, column: 63, scope: !5323)
!5332 = !DILocation(line: 509, column: 10, scope: !5323)
!5333 = !DILocation(line: 509, column: 17, scope: !5323)
!5334 = !DILocation(line: 509, column: 15, scope: !5323)
!5335 = !DILocation(line: 509, column: 2, scope: !5323)
!5336 = !DILocation(line: 509, column: 7, scope: !5323)
!5337 = !DILocation(line: 510, column: 10, scope: !5323)
!5338 = !DILocation(line: 510, column: 17, scope: !5323)
!5339 = !DILocation(line: 510, column: 15, scope: !5323)
!5340 = !DILocation(line: 510, column: 2, scope: !5323)
!5341 = !DILocation(line: 510, column: 7, scope: !5323)
!5342 = !DILocation(line: 511, column: 10, scope: !5323)
!5343 = !DILocation(line: 511, column: 17, scope: !5323)
!5344 = !DILocation(line: 511, column: 15, scope: !5323)
!5345 = !DILocation(line: 511, column: 2, scope: !5323)
!5346 = !DILocation(line: 511, column: 7, scope: !5323)
!5347 = !DILocation(line: 512, column: 1, scope: !5323)
!5348 = distinct !DISubprogram(name: "mul_v3_fl", scope: !3158, file: !3158, line: 392, type: !5349, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{null, !1080, !467}
!5351 = !DILocalVariable(name: "r", arg: 1, scope: !5348, file: !3158, line: 392, type: !1080)
!5352 = !DILocation(line: 392, column: 30, scope: !5348)
!5353 = !DILocalVariable(name: "f", arg: 2, scope: !5348, file: !3158, line: 392, type: !467)
!5354 = !DILocation(line: 392, column: 42, scope: !5348)
!5355 = !DILocation(line: 394, column: 10, scope: !5348)
!5356 = !DILocation(line: 394, column: 2, scope: !5348)
!5357 = !DILocation(line: 394, column: 7, scope: !5348)
!5358 = !DILocation(line: 395, column: 10, scope: !5348)
!5359 = !DILocation(line: 395, column: 2, scope: !5348)
!5360 = !DILocation(line: 395, column: 7, scope: !5348)
!5361 = !DILocation(line: 396, column: 10, scope: !5348)
!5362 = !DILocation(line: 396, column: 2, scope: !5348)
!5363 = !DILocation(line: 396, column: 7, scope: !5348)
!5364 = !DILocation(line: 397, column: 1, scope: !5348)
!5365 = distinct !DISubprogram(name: "normalize_v3", scope: !3158, file: !3158, line: 830, type: !5366, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{!467, !1080}
!5368 = !DILocalVariable(name: "n", arg: 1, scope: !5365, file: !3158, line: 830, type: !1080)
!5369 = !DILocation(line: 830, column: 34, scope: !5365)
!5370 = !DILocation(line: 832, column: 25, scope: !5365)
!5371 = !DILocation(line: 832, column: 28, scope: !5365)
!5372 = !DILocation(line: 832, column: 9, scope: !5365)
!5373 = !DILocation(line: 832, column: 2, scope: !5365)
!5374 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !3158, file: !3158, line: 634, type: !5375, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{null, !1080, !1054, !1054}
!5377 = !DILocalVariable(name: "r", arg: 1, scope: !5374, file: !3158, line: 634, type: !1080)
!5378 = !DILocation(line: 634, column: 34, scope: !5374)
!5379 = !DILocalVariable(name: "a", arg: 2, scope: !5374, file: !3158, line: 634, type: !1054)
!5380 = !DILocation(line: 634, column: 52, scope: !5374)
!5381 = !DILocalVariable(name: "b", arg: 3, scope: !5374, file: !3158, line: 634, type: !1054)
!5382 = !DILocation(line: 634, column: 70, scope: !5374)
!5383 = !DILocation(line: 637, column: 9, scope: !5374)
!5384 = !DILocation(line: 637, column: 16, scope: !5374)
!5385 = !DILocation(line: 637, column: 14, scope: !5374)
!5386 = !DILocation(line: 637, column: 23, scope: !5374)
!5387 = !DILocation(line: 637, column: 30, scope: !5374)
!5388 = !DILocation(line: 637, column: 28, scope: !5374)
!5389 = !DILocation(line: 637, column: 21, scope: !5374)
!5390 = !DILocation(line: 637, column: 2, scope: !5374)
!5391 = !DILocation(line: 637, column: 7, scope: !5374)
!5392 = !DILocation(line: 638, column: 9, scope: !5374)
!5393 = !DILocation(line: 638, column: 16, scope: !5374)
!5394 = !DILocation(line: 638, column: 14, scope: !5374)
!5395 = !DILocation(line: 638, column: 23, scope: !5374)
!5396 = !DILocation(line: 638, column: 30, scope: !5374)
!5397 = !DILocation(line: 638, column: 28, scope: !5374)
!5398 = !DILocation(line: 638, column: 21, scope: !5374)
!5399 = !DILocation(line: 638, column: 2, scope: !5374)
!5400 = !DILocation(line: 638, column: 7, scope: !5374)
!5401 = !DILocation(line: 639, column: 9, scope: !5374)
!5402 = !DILocation(line: 639, column: 16, scope: !5374)
!5403 = !DILocation(line: 639, column: 14, scope: !5374)
!5404 = !DILocation(line: 639, column: 23, scope: !5374)
!5405 = !DILocation(line: 639, column: 30, scope: !5374)
!5406 = !DILocation(line: 639, column: 28, scope: !5374)
!5407 = !DILocation(line: 639, column: 21, scope: !5374)
!5408 = !DILocation(line: 639, column: 2, scope: !5374)
!5409 = !DILocation(line: 639, column: 7, scope: !5374)
!5410 = !DILocation(line: 640, column: 1, scope: !5374)
!5411 = distinct !DISubprogram(name: "len_v3", scope: !3158, file: !3158, line: 714, type: !5412, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{!467, !1054}
!5414 = !DILocalVariable(name: "a", arg: 1, scope: !5411, file: !3158, line: 714, type: !1054)
!5415 = !DILocation(line: 714, column: 34, scope: !5411)
!5416 = !DILocation(line: 716, column: 24, scope: !5411)
!5417 = !DILocation(line: 716, column: 27, scope: !5411)
!5418 = !DILocation(line: 716, column: 15, scope: !5411)
!5419 = !DILocation(line: 716, column: 9, scope: !5411)
!5420 = !DILocation(line: 716, column: 2, scope: !5411)
!5421 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !3158, file: !3158, line: 788, type: !5422, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5422 = !DISubroutineType(types: !5423)
!5423 = !{!467, !1080, !1054}
!5424 = !DILocalVariable(name: "r", arg: 1, scope: !5421, file: !3158, line: 788, type: !1080)
!5425 = !DILocation(line: 788, column: 37, scope: !5421)
!5426 = !DILocalVariable(name: "a", arg: 2, scope: !5421, file: !3158, line: 788, type: !1054)
!5427 = !DILocation(line: 788, column: 55, scope: !5421)
!5428 = !DILocalVariable(name: "d", scope: !5421, file: !3158, line: 790, type: !467)
!5429 = !DILocation(line: 790, column: 8, scope: !5421)
!5430 = !DILocation(line: 790, column: 21, scope: !5421)
!5431 = !DILocation(line: 790, column: 24, scope: !5421)
!5432 = !DILocation(line: 790, column: 12, scope: !5421)
!5433 = !DILocation(line: 794, column: 6, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5421, file: !3158, line: 794, column: 6)
!5435 = !DILocation(line: 794, column: 8, scope: !5434)
!5436 = !DILocation(line: 794, column: 6, scope: !5421)
!5437 = !DILocation(line: 795, column: 13, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5434, file: !3158, line: 794, column: 20)
!5439 = !DILocation(line: 795, column: 7, scope: !5438)
!5440 = !DILocation(line: 795, column: 5, scope: !5438)
!5441 = !DILocation(line: 796, column: 15, scope: !5438)
!5442 = !DILocation(line: 796, column: 18, scope: !5438)
!5443 = !DILocation(line: 796, column: 28, scope: !5438)
!5444 = !DILocation(line: 796, column: 26, scope: !5438)
!5445 = !DILocation(line: 796, column: 3, scope: !5438)
!5446 = !DILocation(line: 797, column: 2, scope: !5438)
!5447 = !DILocation(line: 799, column: 11, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5434, file: !3158, line: 798, column: 7)
!5449 = !DILocation(line: 799, column: 3, scope: !5448)
!5450 = !DILocation(line: 800, column: 5, scope: !5448)
!5451 = !DILocation(line: 803, column: 9, scope: !5421)
!5452 = !DILocation(line: 803, column: 2, scope: !5421)
!5453 = distinct !DISubprogram(name: "dot_v3v3", scope: !3158, file: !3158, line: 619, type: !5454, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{!467, !1054, !1054}
!5456 = !DILocalVariable(name: "a", arg: 1, scope: !5453, file: !3158, line: 619, type: !1054)
!5457 = !DILocation(line: 619, column: 36, scope: !5453)
!5458 = !DILocalVariable(name: "b", arg: 2, scope: !5453, file: !3158, line: 619, type: !1054)
!5459 = !DILocation(line: 619, column: 54, scope: !5453)
!5460 = !DILocation(line: 621, column: 9, scope: !5453)
!5461 = !DILocation(line: 621, column: 16, scope: !5453)
!5462 = !DILocation(line: 621, column: 14, scope: !5453)
!5463 = !DILocation(line: 621, column: 23, scope: !5453)
!5464 = !DILocation(line: 621, column: 30, scope: !5453)
!5465 = !DILocation(line: 621, column: 28, scope: !5453)
!5466 = !DILocation(line: 621, column: 21, scope: !5453)
!5467 = !DILocation(line: 621, column: 37, scope: !5453)
!5468 = !DILocation(line: 621, column: 44, scope: !5453)
!5469 = !DILocation(line: 621, column: 42, scope: !5453)
!5470 = !DILocation(line: 621, column: 35, scope: !5453)
!5471 = !DILocation(line: 621, column: 2, scope: !5453)
!5472 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !3158, file: !3158, line: 399, type: !5324, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5473 = !DILocalVariable(name: "r", arg: 1, scope: !5472, file: !3158, line: 399, type: !1080)
!5474 = !DILocation(line: 399, column: 32, scope: !5472)
!5475 = !DILocalVariable(name: "a", arg: 2, scope: !5472, file: !3158, line: 399, type: !1054)
!5476 = !DILocation(line: 399, column: 50, scope: !5472)
!5477 = !DILocalVariable(name: "f", arg: 3, scope: !5472, file: !3158, line: 399, type: !467)
!5478 = !DILocation(line: 399, column: 62, scope: !5472)
!5479 = !DILocation(line: 401, column: 9, scope: !5472)
!5480 = !DILocation(line: 401, column: 16, scope: !5472)
!5481 = !DILocation(line: 401, column: 14, scope: !5472)
!5482 = !DILocation(line: 401, column: 2, scope: !5472)
!5483 = !DILocation(line: 401, column: 7, scope: !5472)
!5484 = !DILocation(line: 402, column: 9, scope: !5472)
!5485 = !DILocation(line: 402, column: 16, scope: !5472)
!5486 = !DILocation(line: 402, column: 14, scope: !5472)
!5487 = !DILocation(line: 402, column: 2, scope: !5472)
!5488 = !DILocation(line: 402, column: 7, scope: !5472)
!5489 = !DILocation(line: 403, column: 9, scope: !5472)
!5490 = !DILocation(line: 403, column: 16, scope: !5472)
!5491 = !DILocation(line: 403, column: 14, scope: !5472)
!5492 = !DILocation(line: 403, column: 2, scope: !5472)
!5493 = !DILocation(line: 403, column: 7, scope: !5472)
!5494 = !DILocation(line: 404, column: 1, scope: !5472)
!5495 = distinct !DISubprogram(name: "add_v3_v3", scope: !3158, file: !3158, line: 302, type: !5307, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5496 = !DILocalVariable(name: "r", arg: 1, scope: !5495, file: !3158, line: 302, type: !1080)
!5497 = !DILocation(line: 302, column: 30, scope: !5495)
!5498 = !DILocalVariable(name: "a", arg: 2, scope: !5495, file: !3158, line: 302, type: !1054)
!5499 = !DILocation(line: 302, column: 48, scope: !5495)
!5500 = !DILocation(line: 304, column: 10, scope: !5495)
!5501 = !DILocation(line: 304, column: 2, scope: !5495)
!5502 = !DILocation(line: 304, column: 7, scope: !5495)
!5503 = !DILocation(line: 305, column: 10, scope: !5495)
!5504 = !DILocation(line: 305, column: 2, scope: !5495)
!5505 = !DILocation(line: 305, column: 7, scope: !5495)
!5506 = !DILocation(line: 306, column: 10, scope: !5495)
!5507 = !DILocation(line: 306, column: 2, scope: !5495)
!5508 = !DILocation(line: 306, column: 7, scope: !5495)
!5509 = !DILocation(line: 307, column: 1, scope: !5495)
!5510 = distinct !DISubprogram(name: "trackto_id_looper", scope: !3, file: !3, line: 854, type: !4251, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5511 = !DILocalVariable(name: "con", arg: 1, scope: !5510, file: !3, line: 854, type: !2708)
!5512 = !DILocation(line: 854, column: 44, scope: !5510)
!5513 = !DILocalVariable(name: "func", arg: 2, scope: !5510, file: !3, line: 854, type: !2599)
!5514 = !DILocation(line: 854, column: 66, scope: !5510)
!5515 = !DILocalVariable(name: "userdata", arg: 3, scope: !5510, file: !3, line: 854, type: !431)
!5516 = !DILocation(line: 854, column: 78, scope: !5510)
!5517 = !DILocalVariable(name: "data", scope: !5510, file: !3, line: 856, type: !2320)
!5518 = !DILocation(line: 856, column: 22, scope: !5510)
!5519 = !DILocation(line: 856, column: 29, scope: !5510)
!5520 = !DILocation(line: 856, column: 34, scope: !5510)
!5521 = !DILocation(line: 859, column: 2, scope: !5510)
!5522 = !DILocation(line: 859, column: 7, scope: !5510)
!5523 = !DILocation(line: 859, column: 20, scope: !5510)
!5524 = !DILocation(line: 859, column: 26, scope: !5510)
!5525 = !DILocation(line: 859, column: 12, scope: !5510)
!5526 = !DILocation(line: 859, column: 38, scope: !5510)
!5527 = !DILocation(line: 860, column: 1, scope: !5510)
!5528 = distinct !DISubprogram(name: "trackto_new_data", scope: !3, file: !3, line: 846, type: !2610, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5529 = !DILocalVariable(name: "cdata", arg: 1, scope: !5528, file: !3, line: 846, type: !431)
!5530 = !DILocation(line: 846, column: 36, scope: !5528)
!5531 = !DILocalVariable(name: "data", scope: !5528, file: !3, line: 848, type: !2320)
!5532 = !DILocation(line: 848, column: 22, scope: !5528)
!5533 = !DILocation(line: 848, column: 51, scope: !5528)
!5534 = !DILocation(line: 848, column: 29, scope: !5528)
!5535 = !DILocation(line: 850, column: 2, scope: !5528)
!5536 = !DILocation(line: 850, column: 8, scope: !5528)
!5537 = !DILocation(line: 850, column: 18, scope: !5528)
!5538 = !DILocation(line: 851, column: 2, scope: !5528)
!5539 = !DILocation(line: 851, column: 8, scope: !5528)
!5540 = !DILocation(line: 851, column: 18, scope: !5528)
!5541 = !DILocation(line: 852, column: 1, scope: !5528)
!5542 = distinct !DISubprogram(name: "trackto_get_tars", scope: !3, file: !3, line: 862, type: !4285, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5543 = !DILocalVariable(name: "con", arg: 1, scope: !5542, file: !3, line: 862, type: !2708)
!5544 = !DILocation(line: 862, column: 42, scope: !5542)
!5545 = !DILocalVariable(name: "list", arg: 2, scope: !5542, file: !3, line: 862, type: !1287)
!5546 = !DILocation(line: 862, column: 57, scope: !5542)
!5547 = !DILocation(line: 864, column: 6, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5542, file: !3, line: 864, column: 6)
!5549 = !DILocation(line: 864, column: 10, scope: !5548)
!5550 = !DILocation(line: 864, column: 13, scope: !5548)
!5551 = !DILocation(line: 864, column: 6, scope: !5542)
!5552 = !DILocalVariable(name: "data", scope: !5553, file: !3, line: 865, type: !2320)
!5553 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 864, column: 19)
!5554 = !DILocation(line: 865, column: 23, scope: !5553)
!5555 = !DILocation(line: 865, column: 30, scope: !5553)
!5556 = !DILocation(line: 865, column: 35, scope: !5553)
!5557 = !DILocalVariable(name: "ct", scope: !5553, file: !3, line: 866, type: !2244)
!5558 = !DILocation(line: 866, column: 22, scope: !5553)
!5559 = !DILocation(line: 869, column: 3, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 869, column: 3)
!5561 = !DILocation(line: 869, column: 3, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 869, column: 3)
!5563 = !DILocation(line: 869, column: 3, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 869, column: 3)
!5565 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 869, column: 3)
!5566 = !DILocation(line: 869, column: 3, scope: !5565)
!5567 = !DILocalVariable(name: "pchan", scope: !5568, file: !3, line: 869, type: !399)
!5568 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 869, column: 3)
!5569 = !DILocation(line: 869, column: 3, scope: !5568)
!5570 = !DILocation(line: 869, column: 3, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 869, column: 3)
!5572 = !DILocation(line: 869, column: 3, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 869, column: 3)
!5574 = !DILocation(line: 869, column: 3, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 869, column: 3)
!5576 = !DILocation(line: 871, column: 3, scope: !5553)
!5577 = !DILocation(line: 874, column: 2, scope: !5542)
!5578 = !DILocation(line: 875, column: 1, scope: !5542)
!5579 = distinct !DISubprogram(name: "trackto_flush_tars", scope: !3, file: !3, line: 877, type: !4324, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5580 = !DILocalVariable(name: "con", arg: 1, scope: !5579, file: !3, line: 877, type: !2708)
!5581 = !DILocation(line: 877, column: 45, scope: !5579)
!5582 = !DILocalVariable(name: "list", arg: 2, scope: !5579, file: !3, line: 877, type: !1287)
!5583 = !DILocation(line: 877, column: 60, scope: !5579)
!5584 = !DILocalVariable(name: "no_copy", arg: 3, scope: !5579, file: !3, line: 877, type: !1111)
!5585 = !DILocation(line: 877, column: 71, scope: !5579)
!5586 = !DILocation(line: 879, column: 6, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 879, column: 6)
!5588 = !DILocation(line: 879, column: 10, scope: !5587)
!5589 = !DILocation(line: 879, column: 13, scope: !5587)
!5590 = !DILocation(line: 879, column: 6, scope: !5579)
!5591 = !DILocalVariable(name: "data", scope: !5592, file: !3, line: 880, type: !2320)
!5592 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 879, column: 19)
!5593 = !DILocation(line: 880, column: 23, scope: !5592)
!5594 = !DILocation(line: 880, column: 30, scope: !5592)
!5595 = !DILocation(line: 880, column: 35, scope: !5592)
!5596 = !DILocalVariable(name: "ct", scope: !5592, file: !3, line: 881, type: !2244)
!5597 = !DILocation(line: 881, column: 22, scope: !5592)
!5598 = !DILocation(line: 881, column: 27, scope: !5592)
!5599 = !DILocation(line: 881, column: 33, scope: !5592)
!5600 = !DILocation(line: 884, column: 3, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 884, column: 3)
!5602 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 884, column: 3)
!5603 = !DILocation(line: 884, column: 3, scope: !5602)
!5604 = !DILocalVariable(name: "ctn", scope: !5605, file: !3, line: 884, type: !2244)
!5605 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 884, column: 3)
!5606 = !DILocation(line: 884, column: 3, scope: !5605)
!5607 = !DILocation(line: 884, column: 3, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 884, column: 3)
!5609 = !DILocation(line: 884, column: 3, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 884, column: 3)
!5611 = !DILocation(line: 885, column: 2, scope: !5592)
!5612 = !DILocation(line: 886, column: 1, scope: !5579)
!5613 = distinct !DISubprogram(name: "trackto_evaluate", scope: !3, file: !3, line: 969, type: !4392, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5614 = !DILocalVariable(name: "con", arg: 1, scope: !5613, file: !3, line: 969, type: !2708)
!5615 = !DILocation(line: 969, column: 43, scope: !5613)
!5616 = !DILocalVariable(name: "cob", arg: 2, scope: !5613, file: !3, line: 969, type: !2733)
!5617 = !DILocation(line: 969, column: 63, scope: !5613)
!5618 = !DILocalVariable(name: "targets", arg: 3, scope: !5613, file: !3, line: 969, type: !1287)
!5619 = !DILocation(line: 969, column: 78, scope: !5613)
!5620 = !DILocalVariable(name: "data", scope: !5613, file: !3, line: 971, type: !2320)
!5621 = !DILocation(line: 971, column: 22, scope: !5613)
!5622 = !DILocation(line: 971, column: 29, scope: !5613)
!5623 = !DILocation(line: 971, column: 34, scope: !5613)
!5624 = !DILocalVariable(name: "ct", scope: !5613, file: !3, line: 972, type: !2244)
!5625 = !DILocation(line: 972, column: 21, scope: !5613)
!5626 = !DILocation(line: 972, column: 26, scope: !5613)
!5627 = !DILocation(line: 972, column: 35, scope: !5613)
!5628 = !DILocation(line: 974, column: 6, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5613, file: !3, line: 974, column: 6)
!5630 = !DILocation(line: 974, column: 6, scope: !5613)
!5631 = !DILocalVariable(name: "size", scope: !5632, file: !3, line: 975, type: !469)
!5632 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 974, column: 29)
!5633 = !DILocation(line: 975, column: 9, scope: !5632)
!5634 = !DILocalVariable(name: "vec", scope: !5632, file: !3, line: 975, type: !469)
!5635 = !DILocation(line: 975, column: 18, scope: !5632)
!5636 = !DILocalVariable(name: "totmat", scope: !5632, file: !3, line: 976, type: !474)
!5637 = !DILocation(line: 976, column: 9, scope: !5632)
!5638 = !DILocation(line: 979, column: 16, scope: !5632)
!5639 = !DILocation(line: 979, column: 22, scope: !5632)
!5640 = !DILocation(line: 979, column: 27, scope: !5632)
!5641 = !DILocation(line: 979, column: 3, scope: !5632)
!5642 = !DILocation(line: 982, column: 23, scope: !5632)
!5643 = !DILocation(line: 982, column: 3, scope: !5632)
!5644 = !DILocation(line: 982, column: 8, scope: !5632)
!5645 = !DILocation(line: 982, column: 21, scope: !5632)
!5646 = !DILocation(line: 983, column: 3, scope: !5632)
!5647 = !DILocation(line: 983, column: 8, scope: !5632)
!5648 = !DILocation(line: 983, column: 21, scope: !5632)
!5649 = !DILocation(line: 984, column: 3, scope: !5632)
!5650 = !DILocation(line: 984, column: 8, scope: !5632)
!5651 = !DILocation(line: 984, column: 21, scope: !5632)
!5652 = !DILocation(line: 985, column: 3, scope: !5632)
!5653 = !DILocation(line: 985, column: 8, scope: !5632)
!5654 = !DILocation(line: 985, column: 21, scope: !5632)
!5655 = !DILocation(line: 986, column: 23, scope: !5632)
!5656 = !DILocation(line: 986, column: 3, scope: !5632)
!5657 = !DILocation(line: 986, column: 8, scope: !5632)
!5658 = !DILocation(line: 986, column: 21, scope: !5632)
!5659 = !DILocation(line: 987, column: 3, scope: !5632)
!5660 = !DILocation(line: 987, column: 8, scope: !5632)
!5661 = !DILocation(line: 987, column: 21, scope: !5632)
!5662 = !DILocation(line: 988, column: 3, scope: !5632)
!5663 = !DILocation(line: 988, column: 8, scope: !5632)
!5664 = !DILocation(line: 988, column: 21, scope: !5632)
!5665 = !DILocation(line: 989, column: 3, scope: !5632)
!5666 = !DILocation(line: 989, column: 8, scope: !5632)
!5667 = !DILocation(line: 989, column: 21, scope: !5632)
!5668 = !DILocation(line: 990, column: 23, scope: !5632)
!5669 = !DILocation(line: 990, column: 3, scope: !5632)
!5670 = !DILocation(line: 990, column: 8, scope: !5632)
!5671 = !DILocation(line: 990, column: 21, scope: !5632)
!5672 = !DILocation(line: 995, column: 15, scope: !5632)
!5673 = !DILocation(line: 995, column: 20, scope: !5632)
!5674 = !DILocation(line: 995, column: 25, scope: !5632)
!5675 = !DILocation(line: 995, column: 36, scope: !5632)
!5676 = !DILocation(line: 995, column: 40, scope: !5632)
!5677 = !DILocation(line: 995, column: 3, scope: !5632)
!5678 = !DILocation(line: 996, column: 12, scope: !5632)
!5679 = !DILocation(line: 996, column: 17, scope: !5632)
!5680 = !DILocation(line: 996, column: 21, scope: !5632)
!5681 = !DILocation(line: 997, column: 19, scope: !5632)
!5682 = !DILocation(line: 997, column: 25, scope: !5632)
!5683 = !DILocation(line: 997, column: 12, scope: !5632)
!5684 = !DILocation(line: 997, column: 43, scope: !5632)
!5685 = !DILocation(line: 997, column: 49, scope: !5632)
!5686 = !DILocation(line: 997, column: 36, scope: !5632)
!5687 = !DILocation(line: 998, column: 12, scope: !5632)
!5688 = !DILocation(line: 998, column: 18, scope: !5632)
!5689 = !DILocation(line: 998, column: 25, scope: !5632)
!5690 = !DILocation(line: 996, column: 3, scope: !5632)
!5691 = !DILocation(line: 1000, column: 15, scope: !5632)
!5692 = !DILocation(line: 1000, column: 20, scope: !5632)
!5693 = !DILocation(line: 1000, column: 28, scope: !5632)
!5694 = !DILocation(line: 1000, column: 36, scope: !5632)
!5695 = !DILocation(line: 1000, column: 41, scope: !5632)
!5696 = !DILocation(line: 1000, column: 3, scope: !5632)
!5697 = !DILocation(line: 1001, column: 2, scope: !5632)
!5698 = !DILocation(line: 1002, column: 1, scope: !5613)
!5699 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !3158, file: !3158, line: 357, type: !5375, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5700 = !DILocalVariable(name: "r", arg: 1, scope: !5699, file: !3158, line: 357, type: !1080)
!5701 = !DILocation(line: 357, column: 32, scope: !5699)
!5702 = !DILocalVariable(name: "a", arg: 2, scope: !5699, file: !3158, line: 357, type: !1054)
!5703 = !DILocation(line: 357, column: 50, scope: !5699)
!5704 = !DILocalVariable(name: "b", arg: 3, scope: !5699, file: !3158, line: 357, type: !1054)
!5705 = !DILocation(line: 357, column: 68, scope: !5699)
!5706 = !DILocation(line: 359, column: 9, scope: !5699)
!5707 = !DILocation(line: 359, column: 16, scope: !5699)
!5708 = !DILocation(line: 359, column: 14, scope: !5699)
!5709 = !DILocation(line: 359, column: 2, scope: !5699)
!5710 = !DILocation(line: 359, column: 7, scope: !5699)
!5711 = !DILocation(line: 360, column: 9, scope: !5699)
!5712 = !DILocation(line: 360, column: 16, scope: !5699)
!5713 = !DILocation(line: 360, column: 14, scope: !5699)
!5714 = !DILocation(line: 360, column: 2, scope: !5699)
!5715 = !DILocation(line: 360, column: 7, scope: !5699)
!5716 = !DILocation(line: 361, column: 9, scope: !5699)
!5717 = !DILocation(line: 361, column: 16, scope: !5699)
!5718 = !DILocation(line: 361, column: 14, scope: !5699)
!5719 = !DILocation(line: 361, column: 2, scope: !5699)
!5720 = !DILocation(line: 361, column: 7, scope: !5699)
!5721 = !DILocation(line: 362, column: 1, scope: !5699)
!5722 = distinct !DISubprogram(name: "vectomat", scope: !3, file: !3, line: 905, type: !5723, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{null, !1054, !1054, !420, !420, !420, !1089}
!5725 = !DILocalVariable(name: "vec", arg: 1, scope: !5722, file: !3, line: 905, type: !1054)
!5726 = !DILocation(line: 905, column: 34, scope: !5722)
!5727 = !DILocalVariable(name: "target_up", arg: 2, scope: !5722, file: !3, line: 905, type: !1054)
!5728 = !DILocation(line: 905, column: 54, scope: !5722)
!5729 = !DILocalVariable(name: "axis", arg: 3, scope: !5722, file: !3, line: 905, type: !420)
!5730 = !DILocation(line: 905, column: 74, scope: !5722)
!5731 = !DILocalVariable(name: "upflag", arg: 4, scope: !5722, file: !3, line: 905, type: !420)
!5732 = !DILocation(line: 905, column: 86, scope: !5722)
!5733 = !DILocalVariable(name: "flags", arg: 5, scope: !5722, file: !3, line: 905, type: !420)
!5734 = !DILocation(line: 905, column: 100, scope: !5722)
!5735 = !DILocalVariable(name: "m", arg: 6, scope: !5722, file: !3, line: 905, type: !1089)
!5736 = !DILocation(line: 905, column: 113, scope: !5722)
!5737 = !DILocalVariable(name: "n", scope: !5722, file: !3, line: 907, type: !469)
!5738 = !DILocation(line: 907, column: 8, scope: !5722)
!5739 = !DILocalVariable(name: "u", scope: !5722, file: !3, line: 908, type: !469)
!5740 = !DILocation(line: 908, column: 8, scope: !5722)
!5741 = !DILocalVariable(name: "proj", scope: !5722, file: !3, line: 909, type: !469)
!5742 = !DILocation(line: 909, column: 8, scope: !5722)
!5743 = !DILocalVariable(name: "right", scope: !5722, file: !3, line: 910, type: !469)
!5744 = !DILocation(line: 910, column: 8, scope: !5722)
!5745 = !DILocalVariable(name: "neg", scope: !5722, file: !3, line: 911, type: !467)
!5746 = !DILocation(line: 911, column: 8, scope: !5722)
!5747 = !DILocalVariable(name: "right_index", scope: !5722, file: !3, line: 912, type: !352)
!5748 = !DILocation(line: 912, column: 6, scope: !5722)
!5749 = !DILocation(line: 914, column: 22, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 914, column: 6)
!5751 = !DILocation(line: 914, column: 25, scope: !5750)
!5752 = !DILocation(line: 914, column: 6, scope: !5750)
!5753 = !DILocation(line: 914, column: 30, scope: !5750)
!5754 = !DILocation(line: 914, column: 6, scope: !5722)
!5755 = !DILocation(line: 915, column: 3, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 914, column: 39)
!5757 = !DILocation(line: 915, column: 8, scope: !5756)
!5758 = !DILocation(line: 916, column: 3, scope: !5756)
!5759 = !DILocation(line: 916, column: 8, scope: !5756)
!5760 = !DILocation(line: 917, column: 3, scope: !5756)
!5761 = !DILocation(line: 917, column: 8, scope: !5756)
!5762 = !DILocation(line: 918, column: 2, scope: !5756)
!5763 = !DILocation(line: 919, column: 6, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 919, column: 6)
!5765 = !DILocation(line: 919, column: 11, scope: !5764)
!5766 = !DILocation(line: 919, column: 6, scope: !5722)
!5767 = !DILocation(line: 919, column: 21, scope: !5764)
!5768 = !DILocation(line: 919, column: 16, scope: !5764)
!5769 = !DILocation(line: 920, column: 17, scope: !5764)
!5770 = !DILocation(line: 920, column: 7, scope: !5764)
!5771 = !DILocation(line: 923, column: 6, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 923, column: 6)
!5773 = !DILocation(line: 923, column: 12, scope: !5772)
!5774 = !DILocation(line: 923, column: 6, scope: !5722)
!5775 = !DILocation(line: 925, column: 14, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 923, column: 27)
!5777 = !DILocation(line: 925, column: 17, scope: !5776)
!5778 = !DILocation(line: 925, column: 3, scope: !5776)
!5779 = !DILocation(line: 926, column: 2, scope: !5776)
!5780 = !DILocation(line: 929, column: 3, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 927, column: 7)
!5782 = !DILocation(line: 929, column: 8, scope: !5781)
!5783 = !DILocation(line: 930, column: 3, scope: !5781)
!5784 = !DILocation(line: 930, column: 8, scope: !5781)
!5785 = !DILocation(line: 931, column: 3, scope: !5781)
!5786 = !DILocation(line: 931, column: 8, scope: !5781)
!5787 = !DILocation(line: 935, column: 18, scope: !5722)
!5788 = !DILocation(line: 935, column: 24, scope: !5722)
!5789 = !DILocation(line: 935, column: 27, scope: !5722)
!5790 = !DILocation(line: 935, column: 2, scope: !5722)
!5791 = !DILocation(line: 936, column: 14, scope: !5722)
!5792 = !DILocation(line: 936, column: 20, scope: !5722)
!5793 = !DILocation(line: 936, column: 23, scope: !5722)
!5794 = !DILocation(line: 936, column: 2, scope: !5722)
!5795 = !DILocation(line: 939, column: 19, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 939, column: 6)
!5797 = !DILocation(line: 939, column: 6, scope: !5796)
!5798 = !DILocation(line: 939, column: 25, scope: !5796)
!5799 = !DILocation(line: 939, column: 6, scope: !5722)
!5800 = !DILocation(line: 940, column: 3, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 939, column: 34)
!5802 = !DILocation(line: 940, column: 11, scope: !5801)
!5803 = !DILocation(line: 941, column: 3, scope: !5801)
!5804 = !DILocation(line: 941, column: 11, scope: !5801)
!5805 = !DILocation(line: 942, column: 3, scope: !5801)
!5806 = !DILocation(line: 942, column: 11, scope: !5801)
!5807 = !DILocation(line: 943, column: 2, scope: !5801)
!5808 = !DILocation(line: 946, column: 16, scope: !5722)
!5809 = !DILocation(line: 946, column: 23, scope: !5722)
!5810 = !DILocation(line: 946, column: 29, scope: !5722)
!5811 = !DILocation(line: 946, column: 2, scope: !5722)
!5812 = !DILocation(line: 947, column: 15, scope: !5722)
!5813 = !DILocation(line: 947, column: 2, scope: !5722)
!5814 = !DILocation(line: 949, column: 6, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 949, column: 6)
!5816 = !DILocation(line: 949, column: 14, scope: !5815)
!5817 = !DILocation(line: 949, column: 11, scope: !5815)
!5818 = !DILocation(line: 949, column: 6, scope: !5722)
!5819 = !DILocation(line: 950, column: 21, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 949, column: 22)
!5821 = !DILocation(line: 950, column: 19, scope: !5820)
!5822 = !DILocation(line: 950, column: 28, scope: !5820)
!5823 = !DILocation(line: 950, column: 26, scope: !5820)
!5824 = !DILocation(line: 950, column: 15, scope: !5820)
!5825 = !DILocation(line: 951, column: 28, scope: !5820)
!5826 = !DILocation(line: 951, column: 34, scope: !5820)
!5827 = !DILocation(line: 951, column: 16, scope: !5820)
!5828 = !DILocation(line: 951, column: 9, scope: !5820)
!5829 = !DILocation(line: 951, column: 7, scope: !5820)
!5830 = !DILocation(line: 954, column: 23, scope: !5820)
!5831 = !DILocation(line: 954, column: 29, scope: !5820)
!5832 = !DILocation(line: 954, column: 27, scope: !5820)
!5833 = !DILocation(line: 954, column: 3, scope: !5820)
!5834 = !DILocation(line: 954, column: 5, scope: !5820)
!5835 = !DILocation(line: 954, column: 21, scope: !5820)
!5836 = !DILocation(line: 955, column: 23, scope: !5820)
!5837 = !DILocation(line: 955, column: 29, scope: !5820)
!5838 = !DILocation(line: 955, column: 27, scope: !5820)
!5839 = !DILocation(line: 955, column: 3, scope: !5820)
!5840 = !DILocation(line: 955, column: 5, scope: !5820)
!5841 = !DILocation(line: 955, column: 21, scope: !5820)
!5842 = !DILocation(line: 956, column: 23, scope: !5820)
!5843 = !DILocation(line: 956, column: 29, scope: !5820)
!5844 = !DILocation(line: 956, column: 27, scope: !5820)
!5845 = !DILocation(line: 956, column: 3, scope: !5820)
!5846 = !DILocation(line: 956, column: 5, scope: !5820)
!5847 = !DILocation(line: 956, column: 21, scope: !5820)
!5848 = !DILocation(line: 958, column: 14, scope: !5820)
!5849 = !DILocation(line: 958, column: 16, scope: !5820)
!5850 = !DILocation(line: 958, column: 25, scope: !5820)
!5851 = !DILocation(line: 958, column: 3, scope: !5820)
!5852 = !DILocation(line: 960, column: 14, scope: !5820)
!5853 = !DILocation(line: 960, column: 16, scope: !5820)
!5854 = !DILocation(line: 960, column: 23, scope: !5820)
!5855 = !DILocation(line: 960, column: 3, scope: !5820)
!5856 = !DILocation(line: 961, column: 2, scope: !5820)
!5857 = !DILocation(line: 964, column: 11, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 963, column: 7)
!5859 = !DILocation(line: 964, column: 3, scope: !5858)
!5860 = !DILocation(line: 966, column: 1, scope: !5722)
!5861 = distinct !DISubprogram(name: "negate_v3", scope: !3158, file: !3158, line: 576, type: !3159, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5862 = !DILocalVariable(name: "r", arg: 1, scope: !5861, file: !3158, line: 576, type: !1080)
!5863 = !DILocation(line: 576, column: 30, scope: !5861)
!5864 = !DILocation(line: 578, column: 10, scope: !5861)
!5865 = !DILocation(line: 578, column: 9, scope: !5861)
!5866 = !DILocation(line: 578, column: 2, scope: !5861)
!5867 = !DILocation(line: 578, column: 7, scope: !5861)
!5868 = !DILocation(line: 579, column: 10, scope: !5861)
!5869 = !DILocation(line: 579, column: 9, scope: !5861)
!5870 = !DILocation(line: 579, column: 2, scope: !5861)
!5871 = !DILocation(line: 579, column: 7, scope: !5861)
!5872 = !DILocation(line: 580, column: 10, scope: !5861)
!5873 = !DILocation(line: 580, column: 9, scope: !5861)
!5874 = !DILocation(line: 580, column: 2, scope: !5861)
!5875 = !DILocation(line: 580, column: 7, scope: !5861)
!5876 = !DILocation(line: 581, column: 1, scope: !5861)
!5877 = distinct !DISubprogram(name: "basis_cross", scope: !3, file: !3, line: 889, type: !5878, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5878 = !DISubroutineType(types: !5879)
!5879 = !{!352, !352, !352}
!5880 = !DILocalVariable(name: "n", arg: 1, scope: !5877, file: !3, line: 889, type: !352)
!5881 = !DILocation(line: 889, column: 28, scope: !5877)
!5882 = !DILocalVariable(name: "m", arg: 2, scope: !5877, file: !3, line: 889, type: !352)
!5883 = !DILocation(line: 889, column: 35, scope: !5877)
!5884 = !DILocation(line: 891, column: 10, scope: !5877)
!5885 = !DILocation(line: 891, column: 14, scope: !5877)
!5886 = !DILocation(line: 891, column: 12, scope: !5877)
!5887 = !DILocation(line: 891, column: 2, scope: !5877)
!5888 = !DILocation(line: 894, column: 4, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 891, column: 17)
!5890 = !DILocation(line: 898, column: 4, scope: !5889)
!5891 = !DILocation(line: 901, column: 4, scope: !5889)
!5892 = !DILocation(line: 903, column: 1, scope: !5877)
!5893 = distinct !DISubprogram(name: "kinematic_id_looper", scope: !3, file: !3, line: 1032, type: !4251, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5894 = !DILocalVariable(name: "con", arg: 1, scope: !5893, file: !3, line: 1032, type: !2708)
!5895 = !DILocation(line: 1032, column: 46, scope: !5893)
!5896 = !DILocalVariable(name: "func", arg: 2, scope: !5893, file: !3, line: 1032, type: !2599)
!5897 = !DILocation(line: 1032, column: 68, scope: !5893)
!5898 = !DILocalVariable(name: "userdata", arg: 3, scope: !5893, file: !3, line: 1032, type: !431)
!5899 = !DILocation(line: 1032, column: 80, scope: !5893)
!5900 = !DILocalVariable(name: "data", scope: !5893, file: !3, line: 1034, type: !2330)
!5901 = !DILocation(line: 1034, column: 24, scope: !5893)
!5902 = !DILocation(line: 1034, column: 31, scope: !5893)
!5903 = !DILocation(line: 1034, column: 36, scope: !5893)
!5904 = !DILocation(line: 1037, column: 2, scope: !5893)
!5905 = !DILocation(line: 1037, column: 7, scope: !5893)
!5906 = !DILocation(line: 1037, column: 20, scope: !5893)
!5907 = !DILocation(line: 1037, column: 26, scope: !5893)
!5908 = !DILocation(line: 1037, column: 12, scope: !5893)
!5909 = !DILocation(line: 1037, column: 38, scope: !5893)
!5910 = !DILocation(line: 1040, column: 2, scope: !5893)
!5911 = !DILocation(line: 1040, column: 7, scope: !5893)
!5912 = !DILocation(line: 1040, column: 20, scope: !5893)
!5913 = !DILocation(line: 1040, column: 26, scope: !5893)
!5914 = !DILocation(line: 1040, column: 12, scope: !5893)
!5915 = !DILocation(line: 1040, column: 42, scope: !5893)
!5916 = !DILocation(line: 1041, column: 1, scope: !5893)
!5917 = distinct !DISubprogram(name: "kinematic_new_data", scope: !3, file: !3, line: 1021, type: !2610, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5918 = !DILocalVariable(name: "cdata", arg: 1, scope: !5917, file: !3, line: 1021, type: !431)
!5919 = !DILocation(line: 1021, column: 38, scope: !5917)
!5920 = !DILocalVariable(name: "data", scope: !5917, file: !3, line: 1023, type: !2330)
!5921 = !DILocation(line: 1023, column: 24, scope: !5917)
!5922 = !DILocation(line: 1023, column: 55, scope: !5917)
!5923 = !DILocation(line: 1023, column: 31, scope: !5917)
!5924 = !DILocation(line: 1025, column: 2, scope: !5917)
!5925 = !DILocation(line: 1025, column: 8, scope: !5917)
!5926 = !DILocation(line: 1025, column: 15, scope: !5917)
!5927 = !DILocation(line: 1026, column: 2, scope: !5917)
!5928 = !DILocation(line: 1026, column: 8, scope: !5917)
!5929 = !DILocation(line: 1026, column: 21, scope: !5917)
!5930 = !DILocation(line: 1027, column: 2, scope: !5917)
!5931 = !DILocation(line: 1027, column: 8, scope: !5917)
!5932 = !DILocation(line: 1027, column: 19, scope: !5917)
!5933 = !DILocation(line: 1028, column: 2, scope: !5917)
!5934 = !DILocation(line: 1028, column: 8, scope: !5917)
!5935 = !DILocation(line: 1028, column: 13, scope: !5917)
!5936 = !DILocation(line: 1029, column: 2, scope: !5917)
!5937 = !DILocation(line: 1029, column: 8, scope: !5917)
!5938 = !DILocation(line: 1029, column: 13, scope: !5917)
!5939 = !DILocation(line: 1030, column: 1, scope: !5917)
!5940 = distinct !DISubprogram(name: "kinematic_get_tars", scope: !3, file: !3, line: 1043, type: !4285, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5941 = !DILocalVariable(name: "con", arg: 1, scope: !5940, file: !3, line: 1043, type: !2708)
!5942 = !DILocation(line: 1043, column: 44, scope: !5940)
!5943 = !DILocalVariable(name: "list", arg: 2, scope: !5940, file: !3, line: 1043, type: !1287)
!5944 = !DILocation(line: 1043, column: 59, scope: !5940)
!5945 = !DILocation(line: 1045, column: 6, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 1045, column: 6)
!5947 = !DILocation(line: 1045, column: 10, scope: !5946)
!5948 = !DILocation(line: 1045, column: 13, scope: !5946)
!5949 = !DILocation(line: 1045, column: 6, scope: !5940)
!5950 = !DILocalVariable(name: "data", scope: !5951, file: !3, line: 1046, type: !2330)
!5951 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 1045, column: 19)
!5952 = !DILocation(line: 1046, column: 25, scope: !5951)
!5953 = !DILocation(line: 1046, column: 32, scope: !5951)
!5954 = !DILocation(line: 1046, column: 37, scope: !5951)
!5955 = !DILocalVariable(name: "ct", scope: !5951, file: !3, line: 1047, type: !2244)
!5956 = !DILocation(line: 1047, column: 22, scope: !5951)
!5957 = !DILocation(line: 1050, column: 3, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1050, column: 3)
!5959 = !DILocation(line: 1050, column: 3, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 1050, column: 3)
!5961 = !DILocation(line: 1050, column: 3, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 1050, column: 3)
!5963 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 1050, column: 3)
!5964 = !DILocation(line: 1050, column: 3, scope: !5963)
!5965 = !DILocalVariable(name: "pchan", scope: !5966, file: !3, line: 1050, type: !399)
!5966 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 1050, column: 3)
!5967 = !DILocation(line: 1050, column: 3, scope: !5966)
!5968 = !DILocation(line: 1050, column: 3, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 1050, column: 3)
!5970 = !DILocation(line: 1050, column: 3, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 1050, column: 3)
!5972 = !DILocation(line: 1050, column: 3, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 1050, column: 3)
!5974 = !DILocation(line: 1051, column: 3, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1051, column: 3)
!5976 = !DILocation(line: 1051, column: 3, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1051, column: 3)
!5978 = !DILocation(line: 1051, column: 3, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1051, column: 3)
!5980 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 1051, column: 3)
!5981 = !DILocation(line: 1051, column: 3, scope: !5980)
!5982 = !DILocalVariable(name: "pchan", scope: !5983, file: !3, line: 1051, type: !399)
!5983 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 1051, column: 3)
!5984 = !DILocation(line: 1051, column: 3, scope: !5983)
!5985 = !DILocation(line: 1051, column: 3, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 1051, column: 3)
!5987 = !DILocation(line: 1051, column: 3, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 1051, column: 3)
!5989 = !DILocation(line: 1051, column: 3, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 1051, column: 3)
!5991 = !DILocation(line: 1053, column: 3, scope: !5951)
!5992 = !DILocation(line: 1056, column: 2, scope: !5940)
!5993 = !DILocation(line: 1057, column: 1, scope: !5940)
!5994 = distinct !DISubprogram(name: "kinematic_flush_tars", scope: !3, file: !3, line: 1059, type: !4324, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!5995 = !DILocalVariable(name: "con", arg: 1, scope: !5994, file: !3, line: 1059, type: !2708)
!5996 = !DILocation(line: 1059, column: 47, scope: !5994)
!5997 = !DILocalVariable(name: "list", arg: 2, scope: !5994, file: !3, line: 1059, type: !1287)
!5998 = !DILocation(line: 1059, column: 62, scope: !5994)
!5999 = !DILocalVariable(name: "no_copy", arg: 3, scope: !5994, file: !3, line: 1059, type: !1111)
!6000 = !DILocation(line: 1059, column: 73, scope: !5994)
!6001 = !DILocation(line: 1061, column: 6, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5994, file: !3, line: 1061, column: 6)
!6003 = !DILocation(line: 1061, column: 10, scope: !6002)
!6004 = !DILocation(line: 1061, column: 13, scope: !6002)
!6005 = !DILocation(line: 1061, column: 6, scope: !5994)
!6006 = !DILocalVariable(name: "data", scope: !6007, file: !3, line: 1062, type: !2330)
!6007 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 1061, column: 19)
!6008 = !DILocation(line: 1062, column: 25, scope: !6007)
!6009 = !DILocation(line: 1062, column: 32, scope: !6007)
!6010 = !DILocation(line: 1062, column: 37, scope: !6007)
!6011 = !DILocalVariable(name: "ct", scope: !6007, file: !3, line: 1063, type: !2244)
!6012 = !DILocation(line: 1063, column: 22, scope: !6007)
!6013 = !DILocation(line: 1063, column: 27, scope: !6007)
!6014 = !DILocation(line: 1063, column: 33, scope: !6007)
!6015 = !DILocation(line: 1066, column: 3, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 1066, column: 3)
!6017 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1066, column: 3)
!6018 = !DILocation(line: 1066, column: 3, scope: !6017)
!6019 = !DILocalVariable(name: "ctn", scope: !6020, file: !3, line: 1066, type: !2244)
!6020 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 1066, column: 3)
!6021 = !DILocation(line: 1066, column: 3, scope: !6020)
!6022 = !DILocation(line: 1066, column: 3, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 1066, column: 3)
!6024 = !DILocation(line: 1066, column: 3, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 1066, column: 3)
!6026 = !DILocation(line: 1067, column: 3, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 1067, column: 3)
!6028 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1067, column: 3)
!6029 = !DILocation(line: 1067, column: 3, scope: !6028)
!6030 = !DILocalVariable(name: "ctn", scope: !6031, file: !3, line: 1067, type: !2244)
!6031 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1067, column: 3)
!6032 = !DILocation(line: 1067, column: 3, scope: !6031)
!6033 = !DILocation(line: 1067, column: 3, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 1067, column: 3)
!6035 = !DILocation(line: 1067, column: 3, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 1067, column: 3)
!6037 = !DILocation(line: 1068, column: 2, scope: !6007)
!6038 = !DILocation(line: 1069, column: 1, scope: !5994)
!6039 = distinct !DISubprogram(name: "kinematic_get_tarmat", scope: !3, file: !3, line: 1071, type: !4360, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!6040 = !DILocalVariable(name: "con", arg: 1, scope: !6039, file: !3, line: 1071, type: !2708)
!6041 = !DILocation(line: 1071, column: 47, scope: !6039)
!6042 = !DILocalVariable(name: "cob", arg: 2, scope: !6039, file: !3, line: 1071, type: !2733)
!6043 = !DILocation(line: 1071, column: 67, scope: !6039)
!6044 = !DILocalVariable(name: "ct", arg: 3, scope: !6039, file: !3, line: 1071, type: !2244)
!6045 = !DILocation(line: 1071, column: 91, scope: !6039)
!6046 = !DILocalVariable(name: "UNUSED_ctime", arg: 4, scope: !6039, file: !3, line: 1071, type: !467)
!6047 = !DILocation(line: 1071, column: 101, scope: !6039)
!6048 = !DILocalVariable(name: "data", scope: !6039, file: !3, line: 1073, type: !2330)
!6049 = !DILocation(line: 1073, column: 24, scope: !6039)
!6050 = !DILocation(line: 1073, column: 31, scope: !6039)
!6051 = !DILocation(line: 1073, column: 36, scope: !6039)
!6052 = !DILocation(line: 1075, column: 6, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1075, column: 6)
!6054 = !DILocation(line: 1075, column: 6, scope: !6039)
!6055 = !DILocation(line: 1076, column: 29, scope: !6053)
!6056 = !DILocation(line: 1076, column: 33, scope: !6053)
!6057 = !DILocation(line: 1076, column: 38, scope: !6053)
!6058 = !DILocation(line: 1076, column: 42, scope: !6053)
!6059 = !DILocation(line: 1076, column: 53, scope: !6053)
!6060 = !DILocation(line: 1076, column: 57, scope: !6053)
!6061 = !DILocation(line: 1076, column: 89, scope: !6053)
!6062 = !DILocation(line: 1076, column: 93, scope: !6053)
!6063 = !DILocation(line: 1076, column: 100, scope: !6053)
!6064 = !DILocation(line: 1076, column: 105, scope: !6053)
!6065 = !DILocation(line: 1076, column: 3, scope: !6053)
!6066 = !DILocation(line: 1077, column: 11, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 1077, column: 11)
!6068 = !DILocation(line: 1077, column: 11, scope: !6053)
!6069 = !DILocation(line: 1078, column: 7, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 1078, column: 7)
!6071 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 1077, column: 15)
!6072 = !DILocation(line: 1078, column: 13, scope: !6070)
!6073 = !DILocation(line: 1078, column: 18, scope: !6070)
!6074 = !DILocation(line: 1078, column: 7, scope: !6071)
!6075 = !DILocalVariable(name: "ob", scope: !6076, file: !3, line: 1079, type: !2242)
!6076 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1078, column: 40)
!6077 = !DILocation(line: 1079, column: 12, scope: !6076)
!6078 = !DILocation(line: 1079, column: 17, scope: !6076)
!6079 = !DILocation(line: 1079, column: 22, scope: !6076)
!6080 = !DILocation(line: 1081, column: 8, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 1081, column: 8)
!6082 = !DILocation(line: 1081, column: 11, scope: !6081)
!6083 = !DILocation(line: 1081, column: 8, scope: !6076)
!6084 = !DILocation(line: 1082, column: 13, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 1081, column: 20)
!6086 = !DILocation(line: 1082, column: 17, scope: !6085)
!6087 = !DILocation(line: 1082, column: 5, scope: !6085)
!6088 = !DILocation(line: 1083, column: 4, scope: !6085)
!6089 = !DILocalVariable(name: "vec", scope: !6090, file: !3, line: 1085, type: !469)
!6090 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 1084, column: 9)
!6091 = !DILocation(line: 1085, column: 11, scope: !6090)
!6092 = !DILocation(line: 1087, column: 17, scope: !6090)
!6093 = !DILocation(line: 1087, column: 22, scope: !6090)
!6094 = !DILocation(line: 1087, column: 26, scope: !6090)
!6095 = !DILocation(line: 1087, column: 33, scope: !6090)
!6096 = !DILocation(line: 1087, column: 39, scope: !6090)
!6097 = !DILocation(line: 1087, column: 5, scope: !6090)
!6098 = !DILocation(line: 1088, column: 16, scope: !6090)
!6099 = !DILocation(line: 1088, column: 20, scope: !6090)
!6100 = !DILocation(line: 1088, column: 28, scope: !6090)
!6101 = !DILocation(line: 1088, column: 32, scope: !6090)
!6102 = !DILocation(line: 1088, column: 5, scope: !6090)
!6103 = !DILocation(line: 1089, column: 16, scope: !6090)
!6104 = !DILocation(line: 1089, column: 20, scope: !6090)
!6105 = !DILocation(line: 1089, column: 31, scope: !6090)
!6106 = !DILocation(line: 1089, column: 5, scope: !6090)
!6107 = !DILocation(line: 1091, column: 3, scope: !6076)
!6108 = !DILocation(line: 1093, column: 12, scope: !6070)
!6109 = !DILocation(line: 1093, column: 16, scope: !6070)
!6110 = !DILocation(line: 1093, column: 4, scope: !6070)
!6111 = !DILocation(line: 1094, column: 2, scope: !6071)
!6112 = !DILocation(line: 1095, column: 1, scope: !6039)
!6113 = distinct !DISubprogram(name: "followpath_id_looper", scope: !3, file: !3, line: 1124, type: !4251, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!6114 = !DILocalVariable(name: "con", arg: 1, scope: !6113, file: !3, line: 1124, type: !2708)
!6115 = !DILocation(line: 1124, column: 47, scope: !6113)
!6116 = !DILocalVariable(name: "func", arg: 2, scope: !6113, file: !3, line: 1124, type: !2599)
!6117 = !DILocation(line: 1124, column: 69, scope: !6113)
!6118 = !DILocalVariable(name: "userdata", arg: 3, scope: !6113, file: !3, line: 1124, type: !431)
!6119 = !DILocation(line: 1124, column: 81, scope: !6113)
!6120 = !DILocalVariable(name: "data", scope: !6113, file: !3, line: 1126, type: !2349)
!6121 = !DILocation(line: 1126, column: 25, scope: !6113)
!6122 = !DILocation(line: 1126, column: 32, scope: !6113)
!6123 = !DILocation(line: 1126, column: 37, scope: !6113)
!6124 = !DILocation(line: 1129, column: 2, scope: !6113)
!6125 = !DILocation(line: 1129, column: 7, scope: !6113)
!6126 = !DILocation(line: 1129, column: 20, scope: !6113)
!6127 = !DILocation(line: 1129, column: 26, scope: !6113)
!6128 = !DILocation(line: 1129, column: 12, scope: !6113)
!6129 = !DILocation(line: 1129, column: 38, scope: !6113)
!6130 = !DILocation(line: 1130, column: 1, scope: !6113)
!6131 = distinct !DISubprogram(name: "followpath_new_data", scope: !3, file: !3, line: 1114, type: !2610, scopeLine: 1115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!6132 = !DILocalVariable(name: "cdata", arg: 1, scope: !6131, file: !3, line: 1114, type: !431)
!6133 = !DILocation(line: 1114, column: 39, scope: !6131)
!6134 = !DILocalVariable(name: "data", scope: !6131, file: !3, line: 1116, type: !2349)
!6135 = !DILocation(line: 1116, column: 25, scope: !6131)
!6136 = !DILocation(line: 1116, column: 57, scope: !6131)
!6137 = !DILocation(line: 1116, column: 32, scope: !6131)
!6138 = !DILocation(line: 1118, column: 2, scope: !6131)
!6139 = !DILocation(line: 1118, column: 8, scope: !6131)
!6140 = !DILocation(line: 1118, column: 18, scope: !6131)
!6141 = !DILocation(line: 1119, column: 2, scope: !6131)
!6142 = !DILocation(line: 1119, column: 8, scope: !6131)
!6143 = !DILocation(line: 1119, column: 15, scope: !6131)
!6144 = !DILocation(line: 1120, column: 2, scope: !6131)
!6145 = !DILocation(line: 1120, column: 8, scope: !6131)
!6146 = !DILocation(line: 1120, column: 15, scope: !6131)
!6147 = !DILocation(line: 1121, column: 2, scope: !6131)
!6148 = !DILocation(line: 1121, column: 8, scope: !6131)
!6149 = !DILocation(line: 1121, column: 19, scope: !6131)
!6150 = !DILocation(line: 1122, column: 1, scope: !6131)
!6151 = distinct !DISubprogram(name: "followpath_get_tars", scope: !3, file: !3, line: 1132, type: !4285, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!6152 = !DILocalVariable(name: "con", arg: 1, scope: !6151, file: !3, line: 1132, type: !2708)
!6153 = !DILocation(line: 1132, column: 45, scope: !6151)
!6154 = !DILocalVariable(name: "list", arg: 2, scope: !6151, file: !3, line: 1132, type: !1287)
!6155 = !DILocation(line: 1132, column: 60, scope: !6151)
!6156 = !DILocation(line: 1134, column: 6, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 1134, column: 6)
!6158 = !DILocation(line: 1134, column: 10, scope: !6157)
!6159 = !DILocation(line: 1134, column: 13, scope: !6157)
!6160 = !DILocation(line: 1134, column: 6, scope: !6151)
!6161 = !DILocalVariable(name: "data", scope: !6162, file: !3, line: 1135, type: !2349)
!6162 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 1134, column: 19)
!6163 = !DILocation(line: 1135, column: 26, scope: !6162)
!6164 = !DILocation(line: 1135, column: 33, scope: !6162)
!6165 = !DILocation(line: 1135, column: 38, scope: !6162)
!6166 = !DILocalVariable(name: "ct", scope: !6162, file: !3, line: 1136, type: !2244)
!6167 = !DILocation(line: 1136, column: 22, scope: !6162)
!6168 = !DILocation(line: 1139, column: 3, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6162, file: !3, line: 1139, column: 3)
!6170 = !DILocation(line: 1139, column: 3, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 1139, column: 3)
!6172 = !DILocation(line: 1141, column: 3, scope: !6162)
!6173 = !DILocation(line: 1144, column: 2, scope: !6151)
!6174 = !DILocation(line: 1145, column: 1, scope: !6151)
!6175 = distinct !DISubprogram(name: "followpath_flush_tars", scope: !3, file: !3, line: 1147, type: !4324, scopeLine: 1148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!6176 = !DILocalVariable(name: "con", arg: 1, scope: !6175, file: !3, line: 1147, type: !2708)
!6177 = !DILocation(line: 1147, column: 48, scope: !6175)
!6178 = !DILocalVariable(name: "list", arg: 2, scope: !6175, file: !3, line: 1147, type: !1287)
!6179 = !DILocation(line: 1147, column: 63, scope: !6175)
!6180 = !DILocalVariable(name: "no_copy", arg: 3, scope: !6175, file: !3, line: 1147, type: !1111)
!6181 = !DILocation(line: 1147, column: 74, scope: !6175)
!6182 = !DILocation(line: 1149, column: 6, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 1149, column: 6)
!6184 = !DILocation(line: 1149, column: 10, scope: !6183)
!6185 = !DILocation(line: 1149, column: 13, scope: !6183)
!6186 = !DILocation(line: 1149, column: 6, scope: !6175)
!6187 = !DILocalVariable(name: "data", scope: !6188, file: !3, line: 1150, type: !2349)
!6188 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1149, column: 19)
!6189 = !DILocation(line: 1150, column: 26, scope: !6188)
!6190 = !DILocation(line: 1150, column: 33, scope: !6188)
!6191 = !DILocation(line: 1150, column: 38, scope: !6188)
!6192 = !DILocalVariable(name: "ct", scope: !6188, file: !3, line: 1151, type: !2244)
!6193 = !DILocation(line: 1151, column: 22, scope: !6188)
!6194 = !DILocation(line: 1151, column: 27, scope: !6188)
!6195 = !DILocation(line: 1151, column: 33, scope: !6188)
!6196 = !DILocation(line: 1154, column: 3, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 1154, column: 3)
!6198 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 1154, column: 3)
!6199 = !DILocation(line: 1154, column: 3, scope: !6198)
!6200 = !DILocalVariable(name: "ctn", scope: !6201, file: !3, line: 1154, type: !2244)
!6201 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 1154, column: 3)
!6202 = !DILocation(line: 1154, column: 3, scope: !6201)
!6203 = !DILocation(line: 1154, column: 3, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 1154, column: 3)
!6205 = !DILocation(line: 1154, column: 3, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 1154, column: 3)
!6207 = !DILocation(line: 1155, column: 2, scope: !6188)
!6208 = !DILocation(line: 1156, column: 1, scope: !6175)
!6209 = distinct !DISubprogram(name: "followpath_get_tarmat", scope: !3, file: !3, line: 1158, type: !4360, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!6210 = !DILocalVariable(name: "con", arg: 1, scope: !6209, file: !3, line: 1158, type: !2708)
!6211 = !DILocation(line: 1158, column: 48, scope: !6209)
!6212 = !DILocalVariable(name: "cob", arg: 2, scope: !6209, file: !3, line: 1158, type: !2733)
!6213 = !DILocation(line: 1158, column: 68, scope: !6209)
!6214 = !DILocalVariable(name: "ct", arg: 3, scope: !6209, file: !3, line: 1158, type: !2244)
!6215 = !DILocation(line: 1158, column: 92, scope: !6209)
!6216 = !DILocalVariable(name: "UNUSED_ctime", arg: 4, scope: !6209, file: !3, line: 1158, type: !467)
!6217 = !DILocation(line: 1158, column: 102, scope: !6209)
!6218 = !DILocalVariable(name: "data", scope: !6209, file: !3, line: 1160, type: !2349)
!6219 = !DILocation(line: 1160, column: 25, scope: !6209)
!6220 = !DILocation(line: 1160, column: 32, scope: !6209)
!6221 = !DILocation(line: 1160, column: 37, scope: !6209)
!6222 = !DILocation(line: 1162, column: 6, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 1162, column: 6)
!6224 = !DILocation(line: 1162, column: 28, scope: !6223)
!6225 = !DILocation(line: 1162, column: 32, scope: !6223)
!6226 = !DILocation(line: 1162, column: 36, scope: !6223)
!6227 = !DILocation(line: 1162, column: 41, scope: !6223)
!6228 = !DILocation(line: 1162, column: 46, scope: !6223)
!6229 = !DILocation(line: 1162, column: 6, scope: !6209)
!6230 = !DILocalVariable(name: "cu", scope: !6231, file: !3, line: 1163, type: !6232)
!6231 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 1162, column: 60)
!6232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6233, size: 64)
!6233 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !774, line: 273, baseType: !6234)
!6234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !774, line: 193, size: 4224, elements: !6235)
!6235 = !{!6236, !6237, !6238, !6239, !6240, !6249, !6250, !6251, !6252, !6253, !6254, !6255, !6256, !6257, !6258, !6259, !6260, !6261, !6262, !6263, !6264, !6265, !6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280, !6281, !6282, !6283, !6284, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297, !6300, !6301, !6304, !6305, !6306, !6307, !6315, !6316, !6317, !6326, !6327, !6328, !6329, !6330, !6331, !6332}
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6234, file: !774, line: 194, baseType: !525, size: 960)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !6234, file: !774, line: 195, baseType: !561, size: 64, offset: 960)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !6234, file: !774, line: 197, baseType: !581, size: 64, offset: 1024)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !6234, file: !774, line: 199, baseType: !433, size: 128, offset: 1088)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !6234, file: !774, line: 201, baseType: !6241, size: 64, offset: 1216)
!6241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6242, size: 64)
!6242 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !774, line: 191, baseType: !6243)
!6243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !774, line: 180, size: 256, elements: !6244)
!6244 = !{!6245, !6246, !6247, !6248}
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !6243, file: !774, line: 182, baseType: !433, size: 128)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !6243, file: !774, line: 185, baseType: !610, size: 64, offset: 128)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !6243, file: !774, line: 188, baseType: !352, size: 32, offset: 192)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6243, file: !774, line: 190, baseType: !2319, size: 32, offset: 224)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !6234, file: !774, line: 203, baseType: !521, size: 64, offset: 1280)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !6234, file: !774, line: 203, baseType: !521, size: 64, offset: 1344)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !6234, file: !774, line: 203, baseType: !521, size: 64, offset: 1408)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !6234, file: !774, line: 204, baseType: !578, size: 64, offset: 1472)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6234, file: !774, line: 205, baseType: !2307, size: 64, offset: 1536)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !6234, file: !774, line: 206, baseType: !658, size: 64, offset: 1600)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !6234, file: !774, line: 209, baseType: !469, size: 96, offset: 1664)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6234, file: !774, line: 210, baseType: !469, size: 96, offset: 1760)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !6234, file: !774, line: 211, baseType: !469, size: 96, offset: 1856)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6234, file: !774, line: 213, baseType: !420, size: 16, offset: 1952)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !6234, file: !774, line: 215, baseType: !420, size: 16, offset: 1968)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !6234, file: !774, line: 216, baseType: !420, size: 16, offset: 1984)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !6234, file: !774, line: 216, baseType: !420, size: 16, offset: 2000)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !6234, file: !774, line: 217, baseType: !467, size: 32, offset: 2016)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !6234, file: !774, line: 217, baseType: !467, size: 32, offset: 2048)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !6234, file: !774, line: 219, baseType: !352, size: 32, offset: 2080)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !6234, file: !774, line: 220, baseType: !420, size: 16, offset: 2112)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !6234, file: !774, line: 220, baseType: !420, size: 16, offset: 2128)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6234, file: !774, line: 221, baseType: !352, size: 32, offset: 2144)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !6234, file: !774, line: 222, baseType: !467, size: 32, offset: 2176)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !6234, file: !774, line: 222, baseType: !467, size: 32, offset: 2208)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !6234, file: !774, line: 222, baseType: !467, size: 32, offset: 2240)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !6234, file: !774, line: 225, baseType: !420, size: 16, offset: 2272)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !6234, file: !774, line: 225, baseType: !420, size: 16, offset: 2288)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !6234, file: !774, line: 226, baseType: !420, size: 16, offset: 2304)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !6234, file: !774, line: 226, baseType: !420, size: 16, offset: 2320)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !6234, file: !774, line: 229, baseType: !352, size: 32, offset: 2336)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !6234, file: !774, line: 231, baseType: !352, size: 32, offset: 2368)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6234, file: !774, line: 233, baseType: !2319, size: 32, offset: 2400)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !6234, file: !774, line: 236, baseType: !420, size: 16, offset: 2432)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !6234, file: !774, line: 237, baseType: !417, size: 8, offset: 2448)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !6234, file: !774, line: 237, baseType: !417, size: 8, offset: 2456)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !6234, file: !774, line: 238, baseType: !467, size: 32, offset: 2464)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !6234, file: !774, line: 238, baseType: !467, size: 32, offset: 2496)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !6234, file: !774, line: 238, baseType: !467, size: 32, offset: 2528)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !6234, file: !774, line: 238, baseType: !467, size: 32, offset: 2560)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !6234, file: !774, line: 238, baseType: !467, size: 32, offset: 2592)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !6234, file: !774, line: 238, baseType: !467, size: 32, offset: 2624)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !6234, file: !774, line: 238, baseType: !467, size: 32, offset: 2656)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !6234, file: !774, line: 239, baseType: !467, size: 32, offset: 2688)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !6234, file: !774, line: 239, baseType: !467, size: 32, offset: 2720)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !6234, file: !774, line: 240, baseType: !467, size: 32, offset: 2752)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !6234, file: !774, line: 244, baseType: !352, size: 32, offset: 2784)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !6234, file: !774, line: 245, baseType: !352, size: 32, offset: 2816)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !6234, file: !774, line: 245, baseType: !352, size: 32, offset: 2848)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !6234, file: !774, line: 248, baseType: !352, size: 32, offset: 2880)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6234, file: !774, line: 249, baseType: !352, size: 32, offset: 2912)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !6234, file: !774, line: 250, baseType: !662, size: 64, offset: 2944)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !6234, file: !774, line: 251, baseType: !6298, size: 64, offset: 3008)
!6298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6299, size: 64)
!6299 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !774, line: 50, flags: DIFlagFwdDecl)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !6234, file: !774, line: 253, baseType: !422, size: 512, offset: 3072)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !6234, file: !774, line: 254, baseType: !6302, size: 64, offset: 3584)
!6302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6303, size: 64)
!6303 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !774, line: 47, flags: DIFlagFwdDecl)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !6234, file: !774, line: 255, baseType: !6302, size: 64, offset: 3648)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !6234, file: !774, line: 256, baseType: !6302, size: 64, offset: 3712)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !6234, file: !774, line: 257, baseType: !6302, size: 64, offset: 3776)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !6234, file: !774, line: 259, baseType: !6308, size: 64, offset: 3840)
!6308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6309, size: 64)
!6309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !774, line: 176, size: 128, elements: !6310)
!6310 = !{!6311, !6312, !6313, !6314}
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !6309, file: !774, line: 177, baseType: !467, size: 32)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !6309, file: !774, line: 177, baseType: !467, size: 32, offset: 32)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !6309, file: !774, line: 177, baseType: !467, size: 32, offset: 64)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !6309, file: !774, line: 177, baseType: !467, size: 32, offset: 96)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !6234, file: !774, line: 260, baseType: !352, size: 32, offset: 3904)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !6234, file: !774, line: 260, baseType: !352, size: 32, offset: 3936)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !6234, file: !774, line: 262, baseType: !6318, size: 64, offset: 3968)
!6318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6319, size: 64)
!6319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !774, line: 168, size: 64, elements: !6320)
!6320 = !{!6321, !6322, !6323, !6324, !6325}
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !6319, file: !774, line: 169, baseType: !420, size: 16)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !6319, file: !774, line: 170, baseType: !420, size: 16, offset: 16)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6319, file: !774, line: 171, baseType: !417, size: 8, offset: 32)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6319, file: !774, line: 172, baseType: !417, size: 8, offset: 40)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6319, file: !774, line: 173, baseType: !420, size: 16, offset: 48)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !6234, file: !774, line: 263, baseType: !6319, size: 64, offset: 4032)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6234, file: !774, line: 267, baseType: !467, size: 32, offset: 4096)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !6234, file: !774, line: 268, baseType: !467, size: 32, offset: 4128)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !6234, file: !774, line: 268, baseType: !467, size: 32, offset: 4160)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !6234, file: !774, line: 269, baseType: !417, size: 8, offset: 4192)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !6234, file: !774, line: 269, baseType: !417, size: 8, offset: 4200)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6234, file: !774, line: 271, baseType: !1557, size: 16, offset: 4208)
!6333 = !DILocation(line: 1163, column: 10, scope: !6231)
!6334 = !DILocation(line: 1163, column: 15, scope: !6231)
!6335 = !DILocation(line: 1163, column: 19, scope: !6231)
!6336 = !DILocation(line: 1163, column: 24, scope: !6231)
!6337 = !DILocalVariable(name: "vec", scope: !6231, file: !3, line: 1164, type: !674)
!6338 = !DILocation(line: 1164, column: 9, scope: !6231)
!6339 = !DILocalVariable(name: "dir", scope: !6231, file: !3, line: 1164, type: !469)
!6340 = !DILocation(line: 1164, column: 17, scope: !6231)
!6341 = !DILocalVariable(name: "radius", scope: !6231, file: !3, line: 1164, type: !467)
!6342 = !DILocation(line: 1164, column: 25, scope: !6231)
!6343 = !DILocalVariable(name: "curvetime", scope: !6231, file: !3, line: 1165, type: !467)
!6344 = !DILocation(line: 1165, column: 9, scope: !6231)
!6345 = !DILocation(line: 1167, column: 11, scope: !6231)
!6346 = !DILocation(line: 1167, column: 15, scope: !6231)
!6347 = !DILocation(line: 1167, column: 3, scope: !6231)
!6348 = !DILocation(line: 1174, column: 7, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 1174, column: 7)
!6350 = !DILocation(line: 1174, column: 11, scope: !6349)
!6351 = !DILocation(line: 1174, column: 16, scope: !6349)
!6352 = !DILocation(line: 1174, column: 28, scope: !6349)
!6353 = !DILocation(line: 1174, column: 7, scope: !6231)
!6354 = !DILocation(line: 1175, column: 33, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 1174, column: 37)
!6356 = !DILocation(line: 1175, column: 38, scope: !6355)
!6357 = !DILocation(line: 1175, column: 45, scope: !6355)
!6358 = !DILocation(line: 1175, column: 49, scope: !6355)
!6359 = !DILocation(line: 1175, column: 4, scope: !6355)
!6360 = !DILocation(line: 1176, column: 3, scope: !6355)
!6361 = !DILocation(line: 1179, column: 7, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 1179, column: 7)
!6363 = !DILocation(line: 1179, column: 11, scope: !6362)
!6364 = !DILocation(line: 1179, column: 16, scope: !6362)
!6365 = !DILocation(line: 1179, column: 29, scope: !6362)
!6366 = !DILocation(line: 1179, column: 34, scope: !6362)
!6367 = !DILocation(line: 1179, column: 37, scope: !6362)
!6368 = !DILocation(line: 1179, column: 41, scope: !6362)
!6369 = !DILocation(line: 1179, column: 46, scope: !6362)
!6370 = !DILocation(line: 1179, column: 59, scope: !6362)
!6371 = !DILocation(line: 1179, column: 65, scope: !6362)
!6372 = !DILocation(line: 1179, column: 7, scope: !6231)
!6373 = !DILocalVariable(name: "quat", scope: !6374, file: !3, line: 1180, type: !674)
!6374 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 1179, column: 71)
!6375 = !DILocation(line: 1180, column: 10, scope: !6374)
!6376 = !DILocation(line: 1181, column: 9, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 1181, column: 8)
!6378 = !DILocation(line: 1181, column: 15, scope: !6377)
!6379 = !DILocation(line: 1181, column: 26, scope: !6377)
!6380 = !DILocation(line: 1181, column: 47, scope: !6377)
!6381 = !DILocation(line: 1181, column: 8, scope: !6374)
!6382 = !DILocalVariable(name: "nu", scope: !6383, file: !3, line: 1183, type: !6384)
!6383 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 1181, column: 53)
!6384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6385, size: 64)
!6385 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nurb", file: !774, line: 166, baseType: !6386)
!6386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Nurb", file: !774, line: 147, size: 704, elements: !6387)
!6387 = !{!6388, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405, !6406, !6407, !6428, !6429, !6430}
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6386, file: !774, line: 148, baseType: !6389, size: 64)
!6389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6386, size: 64)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6386, file: !774, line: 148, baseType: !6389, size: 64, offset: 64)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6386, file: !774, line: 149, baseType: !420, size: 16, offset: 128)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !6386, file: !774, line: 150, baseType: !420, size: 16, offset: 144)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !6386, file: !774, line: 151, baseType: !420, size: 16, offset: 160)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6386, file: !774, line: 151, baseType: !420, size: 16, offset: 176)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !6386, file: !774, line: 152, baseType: !352, size: 32, offset: 192)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !6386, file: !774, line: 152, baseType: !352, size: 32, offset: 224)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6386, file: !774, line: 153, baseType: !1185, size: 32, offset: 256)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !6386, file: !774, line: 154, baseType: !420, size: 16, offset: 288)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !6386, file: !774, line: 154, baseType: !420, size: 16, offset: 304)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "orderu", scope: !6386, file: !774, line: 155, baseType: !420, size: 16, offset: 320)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "orderv", scope: !6386, file: !774, line: 155, baseType: !420, size: 16, offset: 336)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "flagu", scope: !6386, file: !774, line: 156, baseType: !420, size: 16, offset: 352)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "flagv", scope: !6386, file: !774, line: 156, baseType: !420, size: 16, offset: 368)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "knotsu", scope: !6386, file: !774, line: 158, baseType: !1080, size: 64, offset: 384)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "knotsv", scope: !6386, file: !774, line: 158, baseType: !1080, size: 64, offset: 448)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !6386, file: !774, line: 159, baseType: !5183, size: 64, offset: 512)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !6386, file: !774, line: 160, baseType: !6408, size: 64, offset: 576)
!6408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6409, size: 64)
!6409 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !774, line: 133, baseType: !6410)
!6410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !774, line: 117, size: 576, elements: !6411)
!6411 = !{!6412, !6413, !6414, !6415, !6416, !6417, !6418, !6419, !6420, !6421, !6422, !6423, !6424, !6425, !6426, !6427}
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !6410, file: !774, line: 118, baseType: !474, size: 288)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !6410, file: !774, line: 119, baseType: !467, size: 32, offset: 288)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !6410, file: !774, line: 119, baseType: !467, size: 32, offset: 320)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !6410, file: !774, line: 119, baseType: !467, size: 32, offset: 352)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !6410, file: !774, line: 121, baseType: !417, size: 8, offset: 384)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !6410, file: !774, line: 123, baseType: !417, size: 8, offset: 392)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !6410, file: !774, line: 123, baseType: !417, size: 8, offset: 400)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !6410, file: !774, line: 124, baseType: !417, size: 8, offset: 408)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !6410, file: !774, line: 124, baseType: !417, size: 8, offset: 416)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !6410, file: !774, line: 124, baseType: !417, size: 8, offset: 424)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !6410, file: !774, line: 126, baseType: !417, size: 8, offset: 432)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !6410, file: !774, line: 128, baseType: !417, size: 8, offset: 440)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !6410, file: !774, line: 129, baseType: !467, size: 32, offset: 448)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !6410, file: !774, line: 130, baseType: !467, size: 32, offset: 480)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !6410, file: !774, line: 130, baseType: !467, size: 32, offset: 512)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6410, file: !774, line: 132, baseType: !2319, size: 32, offset: 544)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_interp", scope: !6386, file: !774, line: 162, baseType: !420, size: 16, offset: 640)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "radius_interp", scope: !6386, file: !774, line: 163, baseType: !420, size: 16, offset: 656)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !6386, file: !774, line: 165, baseType: !352, size: 32, offset: 672)
!6431 = !DILocation(line: 1183, column: 11, scope: !6383)
!6432 = !DILocation(line: 1183, column: 16, scope: !6383)
!6433 = !DILocation(line: 1183, column: 20, scope: !6383)
!6434 = !DILocation(line: 1183, column: 25, scope: !6383)
!6435 = !DILocation(line: 1184, column: 17, scope: !6383)
!6436 = !DILocation(line: 1184, column: 21, scope: !6383)
!6437 = !DILocation(line: 1184, column: 29, scope: !6383)
!6438 = !DILocation(line: 1184, column: 35, scope: !6383)
!6439 = !DILocation(line: 1184, column: 27, scope: !6383)
!6440 = !DILocation(line: 1184, column: 15, scope: !6383)
!6441 = !DILocation(line: 1192, column: 18, scope: !6383)
!6442 = !DILocation(line: 1192, column: 22, scope: !6383)
!6443 = !DILocation(line: 1192, column: 15, scope: !6383)
!6444 = !DILocation(line: 1194, column: 9, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1194, column: 9)
!6446 = !DILocation(line: 1194, column: 12, scope: !6445)
!6447 = !DILocation(line: 1194, column: 15, scope: !6445)
!6448 = !DILocation(line: 1194, column: 19, scope: !6445)
!6449 = !DILocation(line: 1194, column: 25, scope: !6445)
!6450 = !DILocation(line: 1194, column: 9, scope: !6383)
!6451 = !DILocation(line: 1197, column: 11, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 1197, column: 10)
!6453 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 1194, column: 43)
!6454 = !DILocation(line: 1197, column: 21, scope: !6452)
!6455 = !DILocation(line: 1197, column: 29, scope: !6452)
!6456 = !DILocation(line: 1197, column: 33, scope: !6452)
!6457 = !DILocation(line: 1197, column: 43, scope: !6452)
!6458 = !DILocation(line: 1197, column: 10, scope: !6453)
!6459 = !DILocation(line: 1198, column: 27, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6452, file: !3, line: 1197, column: 52)
!6461 = !DILocation(line: 1198, column: 20, scope: !6460)
!6462 = !DILocation(line: 1198, column: 17, scope: !6460)
!6463 = !DILocation(line: 1199, column: 6, scope: !6460)
!6464 = !DILocation(line: 1200, column: 5, scope: !6453)
!6465 = !DILocation(line: 1203, column: 6, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 1203, column: 6)
!6467 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 1203, column: 6)
!6468 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 1201, column: 10)
!6469 = !DILocation(line: 1203, column: 6, scope: !6467)
!6470 = !DILocation(line: 1203, column: 6, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 1203, column: 6)
!6472 = !DILocation(line: 1205, column: 4, scope: !6383)
!6473 = !DILocation(line: 1208, column: 17, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 1206, column: 9)
!6475 = !DILocation(line: 1208, column: 23, scope: !6474)
!6476 = !DILocation(line: 1208, column: 15, scope: !6474)
!6477 = !DILocation(line: 1211, column: 22, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 1211, column: 8)
!6479 = !DILocation(line: 1211, column: 26, scope: !6478)
!6480 = !DILocation(line: 1211, column: 31, scope: !6478)
!6481 = !DILocation(line: 1211, column: 42, scope: !6478)
!6482 = !DILocation(line: 1211, column: 47, scope: !6478)
!6483 = !DILocation(line: 1211, column: 53, scope: !6478)
!6484 = !DILocation(line: 1211, column: 59, scope: !6478)
!6485 = !DILocation(line: 1211, column: 70, scope: !6478)
!6486 = !DILocation(line: 1211, column: 52, scope: !6478)
!6487 = !DILocation(line: 1211, column: 93, scope: !6478)
!6488 = !DILocation(line: 1211, column: 8, scope: !6478)
!6489 = !DILocation(line: 1211, column: 8, scope: !6374)
!6490 = !DILocalVariable(name: "totmat", scope: !6491, file: !3, line: 1212, type: !480)
!6491 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 1211, column: 123)
!6492 = !DILocation(line: 1212, column: 11, scope: !6491)
!6493 = !DILocation(line: 1213, column: 13, scope: !6491)
!6494 = !DILocation(line: 1213, column: 5, scope: !6491)
!6495 = !DILocation(line: 1215, column: 9, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1215, column: 9)
!6497 = !DILocation(line: 1215, column: 15, scope: !6496)
!6498 = !DILocation(line: 1215, column: 26, scope: !6496)
!6499 = !DILocation(line: 1215, column: 9, scope: !6491)
!6500 = !DILocation(line: 1228, column: 23, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 1215, column: 47)
!6502 = !DILocation(line: 1228, column: 29, scope: !6501)
!6503 = !DILocation(line: 1228, column: 35, scope: !6501)
!6504 = !DILocation(line: 1228, column: 46, scope: !6501)
!6505 = !DILocation(line: 1228, column: 52, scope: !6501)
!6506 = !DILocation(line: 1228, column: 6, scope: !6501)
!6507 = !DILocation(line: 1231, column: 19, scope: !6501)
!6508 = !DILocation(line: 1231, column: 27, scope: !6501)
!6509 = !DILocation(line: 1231, column: 6, scope: !6501)
!6510 = !DILocation(line: 1232, column: 5, scope: !6501)
!6511 = !DILocation(line: 1234, column: 9, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1234, column: 9)
!6513 = !DILocation(line: 1234, column: 15, scope: !6512)
!6514 = !DILocation(line: 1234, column: 26, scope: !6512)
!6515 = !DILocation(line: 1234, column: 9, scope: !6491)
!6516 = !DILocalVariable(name: "tmat", scope: !6517, file: !3, line: 1235, type: !480)
!6517 = distinct !DILexicalBlock(scope: !6512, file: !3, line: 1234, column: 47)
!6518 = !DILocation(line: 1235, column: 12, scope: !6517)
!6519 = !DILocalVariable(name: "rmat", scope: !6517, file: !3, line: 1235, type: !480)
!6520 = !DILocation(line: 1235, column: 24, scope: !6517)
!6521 = !DILocation(line: 1236, column: 18, scope: !6517)
!6522 = !DILocation(line: 1236, column: 24, scope: !6517)
!6523 = !DILocation(line: 1236, column: 6, scope: !6517)
!6524 = !DILocation(line: 1237, column: 18, scope: !6517)
!6525 = !DILocation(line: 1237, column: 24, scope: !6517)
!6526 = !DILocation(line: 1237, column: 30, scope: !6517)
!6527 = !DILocation(line: 1237, column: 6, scope: !6517)
!6528 = !DILocation(line: 1238, column: 17, scope: !6517)
!6529 = !DILocation(line: 1238, column: 25, scope: !6517)
!6530 = !DILocation(line: 1238, column: 6, scope: !6517)
!6531 = !DILocation(line: 1239, column: 5, scope: !6517)
!6532 = !DILocation(line: 1241, column: 16, scope: !6491)
!6533 = !DILocation(line: 1241, column: 27, scope: !6491)
!6534 = !DILocation(line: 1241, column: 5, scope: !6491)
!6535 = !DILocation(line: 1243, column: 17, scope: !6491)
!6536 = !DILocation(line: 1243, column: 21, scope: !6491)
!6537 = !DILocation(line: 1243, column: 29, scope: !6491)
!6538 = !DILocation(line: 1243, column: 33, scope: !6491)
!6539 = !DILocation(line: 1243, column: 38, scope: !6491)
!6540 = !DILocation(line: 1243, column: 45, scope: !6491)
!6541 = !DILocation(line: 1243, column: 5, scope: !6491)
!6542 = !DILocation(line: 1244, column: 4, scope: !6491)
!6543 = !DILocation(line: 1245, column: 3, scope: !6374)
!6544 = !DILocation(line: 1246, column: 2, scope: !6231)
!6545 = !DILocation(line: 1247, column: 11, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 1247, column: 11)
!6547 = !DILocation(line: 1247, column: 11, scope: !6223)
!6548 = !DILocation(line: 1248, column: 11, scope: !6546)
!6549 = !DILocation(line: 1248, column: 15, scope: !6546)
!6550 = !DILocation(line: 1248, column: 3, scope: !6546)
!6551 = !DILocation(line: 1249, column: 1, scope: !6209)
!6552 = distinct !DISubprogram(name: "followpath_evaluate", scope: !3, file: !3, line: 1251, type: !4392, scopeLine: 1252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!6553 = !DILocalVariable(name: "con", arg: 1, scope: !6552, file: !3, line: 1251, type: !2708)
!6554 = !DILocation(line: 1251, column: 46, scope: !6552)
!6555 = !DILocalVariable(name: "cob", arg: 2, scope: !6552, file: !3, line: 1251, type: !2733)
!6556 = !DILocation(line: 1251, column: 66, scope: !6552)
!6557 = !DILocalVariable(name: "targets", arg: 3, scope: !6552, file: !3, line: 1251, type: !1287)
!6558 = !DILocation(line: 1251, column: 81, scope: !6552)
!6559 = !DILocalVariable(name: "ct", scope: !6552, file: !3, line: 1253, type: !2244)
!6560 = !DILocation(line: 1253, column: 21, scope: !6552)
!6561 = !DILocation(line: 1253, column: 26, scope: !6552)
!6562 = !DILocation(line: 1253, column: 35, scope: !6552)
!6563 = !DILocation(line: 1256, column: 6, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 1256, column: 6)
!6565 = !DILocation(line: 1256, column: 6, scope: !6552)
!6566 = !DILocalVariable(name: "obmat", scope: !6567, file: !3, line: 1257, type: !480)
!6567 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 1256, column: 29)
!6568 = !DILocation(line: 1257, column: 9, scope: !6567)
!6569 = !DILocalVariable(name: "size", scope: !6567, file: !3, line: 1258, type: !469)
!6570 = !DILocation(line: 1258, column: 9, scope: !6567)
!6571 = !DILocalVariable(name: "data", scope: !6567, file: !3, line: 1259, type: !2349)
!6572 = !DILocation(line: 1259, column: 26, scope: !6567)
!6573 = !DILocation(line: 1259, column: 33, scope: !6567)
!6574 = !DILocation(line: 1259, column: 38, scope: !6567)
!6575 = !DILocation(line: 1263, column: 14, scope: !6567)
!6576 = !DILocation(line: 1263, column: 21, scope: !6567)
!6577 = !DILocation(line: 1263, column: 26, scope: !6567)
!6578 = !DILocation(line: 1263, column: 3, scope: !6567)
!6579 = !DILocation(line: 1266, column: 16, scope: !6567)
!6580 = !DILocation(line: 1266, column: 22, scope: !6567)
!6581 = !DILocation(line: 1266, column: 27, scope: !6567)
!6582 = !DILocation(line: 1266, column: 3, scope: !6567)
!6583 = !DILocation(line: 1269, column: 15, scope: !6567)
!6584 = !DILocation(line: 1269, column: 20, scope: !6567)
!6585 = !DILocation(line: 1269, column: 28, scope: !6567)
!6586 = !DILocation(line: 1269, column: 32, scope: !6567)
!6587 = !DILocation(line: 1269, column: 40, scope: !6567)
!6588 = !DILocation(line: 1269, column: 3, scope: !6567)
!6589 = !DILocation(line: 1272, column: 8, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1272, column: 7)
!6591 = !DILocation(line: 1272, column: 14, scope: !6590)
!6592 = !DILocation(line: 1272, column: 25, scope: !6590)
!6593 = !DILocation(line: 1272, column: 46, scope: !6590)
!6594 = !DILocation(line: 1272, column: 7, scope: !6567)
!6595 = !DILocalVariable(name: "obsize", scope: !6596, file: !3, line: 1273, type: !469)
!6596 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 1272, column: 52)
!6597 = !DILocation(line: 1273, column: 10, scope: !6596)
!6598 = !DILocation(line: 1275, column: 17, scope: !6596)
!6599 = !DILocation(line: 1275, column: 25, scope: !6596)
!6600 = !DILocation(line: 1275, column: 30, scope: !6596)
!6601 = !DILocation(line: 1275, column: 4, scope: !6596)
!6602 = !DILocation(line: 1276, column: 8, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1276, column: 8)
!6604 = !DILocation(line: 1276, column: 8, scope: !6596)
!6605 = !DILocation(line: 1277, column: 15, scope: !6603)
!6606 = !DILocation(line: 1277, column: 20, scope: !6603)
!6607 = !DILocation(line: 1277, column: 31, scope: !6603)
!6608 = !DILocation(line: 1277, column: 41, scope: !6603)
!6609 = !DILocation(line: 1277, column: 39, scope: !6603)
!6610 = !DILocation(line: 1277, column: 5, scope: !6603)
!6611 = !DILocation(line: 1278, column: 8, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1278, column: 8)
!6613 = !DILocation(line: 1278, column: 8, scope: !6596)
!6614 = !DILocation(line: 1279, column: 15, scope: !6612)
!6615 = !DILocation(line: 1279, column: 20, scope: !6612)
!6616 = !DILocation(line: 1279, column: 31, scope: !6612)
!6617 = !DILocation(line: 1279, column: 41, scope: !6612)
!6618 = !DILocation(line: 1279, column: 39, scope: !6612)
!6619 = !DILocation(line: 1279, column: 5, scope: !6612)
!6620 = !DILocation(line: 1280, column: 8, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1280, column: 8)
!6622 = !DILocation(line: 1280, column: 8, scope: !6596)
!6623 = !DILocation(line: 1281, column: 15, scope: !6621)
!6624 = !DILocation(line: 1281, column: 20, scope: !6621)
!6625 = !DILocation(line: 1281, column: 31, scope: !6621)
!6626 = !DILocation(line: 1281, column: 41, scope: !6621)
!6627 = !DILocation(line: 1281, column: 39, scope: !6621)
!6628 = !DILocation(line: 1281, column: 5, scope: !6621)
!6629 = !DILocation(line: 1282, column: 3, scope: !6596)
!6630 = !DILocation(line: 1283, column: 2, scope: !6567)
!6631 = !DILocation(line: 1284, column: 1, scope: !6552)
!6632 = distinct !DISubprogram(name: "rotlimit_evaluate", scope: !3, file: !3, line: 1351, type: !4392, scopeLine: 1352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!6633 = !DILocalVariable(name: "con", arg: 1, scope: !6632, file: !3, line: 1351, type: !2708)
!6634 = !DILocation(line: 1351, column: 44, scope: !6632)
!6635 = !DILocalVariable(name: "cob", arg: 2, scope: !6632, file: !3, line: 1351, type: !2733)
!6636 = !DILocation(line: 1351, column: 64, scope: !6632)
!6637 = !DILocalVariable(name: "UNUSED_targets", arg: 3, scope: !6632, file: !3, line: 1351, type: !1287)
!6638 = !DILocation(line: 1351, column: 79, scope: !6632)
!6639 = !DILocalVariable(name: "data", scope: !6632, file: !3, line: 1353, type: !6640)
!6640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6641, size: 64)
!6641 = !DIDerivedType(tag: DW_TAG_typedef, name: "bRotLimitConstraint", file: !44, line: 394, baseType: !6642)
!6642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bRotLimitConstraint", file: !44, line: 388, size: 224, elements: !6643)
!6643 = !{!6644, !6645, !6646, !6647, !6648, !6649, !6650, !6651}
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !6642, file: !44, line: 389, baseType: !467, size: 32)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !6642, file: !44, line: 389, baseType: !467, size: 32, offset: 32)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !6642, file: !44, line: 390, baseType: !467, size: 32, offset: 64)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !6642, file: !44, line: 390, baseType: !467, size: 32, offset: 96)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "zmin", scope: !6642, file: !44, line: 391, baseType: !467, size: 32, offset: 128)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "zmax", scope: !6642, file: !44, line: 391, baseType: !467, size: 32, offset: 160)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6642, file: !44, line: 392, baseType: !420, size: 16, offset: 192)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !6642, file: !44, line: 393, baseType: !420, size: 16, offset: 208)
!6652 = !DILocation(line: 1353, column: 23, scope: !6632)
!6653 = !DILocation(line: 1353, column: 30, scope: !6632)
!6654 = !DILocation(line: 1353, column: 35, scope: !6632)
!6655 = !DILocalVariable(name: "loc", scope: !6632, file: !3, line: 1354, type: !469)
!6656 = !DILocation(line: 1354, column: 8, scope: !6632)
!6657 = !DILocalVariable(name: "eul", scope: !6632, file: !3, line: 1355, type: !469)
!6658 = !DILocation(line: 1355, column: 8, scope: !6632)
!6659 = !DILocalVariable(name: "size", scope: !6632, file: !3, line: 1356, type: !469)
!6660 = !DILocation(line: 1356, column: 8, scope: !6632)
!6661 = !DILocation(line: 1358, column: 13, scope: !6632)
!6662 = !DILocation(line: 1358, column: 18, scope: !6632)
!6663 = !DILocation(line: 1358, column: 23, scope: !6632)
!6664 = !DILocation(line: 1358, column: 2, scope: !6632)
!6665 = !DILocation(line: 1359, column: 15, scope: !6632)
!6666 = !DILocation(line: 1359, column: 21, scope: !6632)
!6667 = !DILocation(line: 1359, column: 26, scope: !6632)
!6668 = !DILocation(line: 1359, column: 2, scope: !6632)
!6669 = !DILocation(line: 1361, column: 15, scope: !6632)
!6670 = !DILocation(line: 1361, column: 20, scope: !6632)
!6671 = !DILocation(line: 1361, column: 25, scope: !6632)
!6672 = !DILocation(line: 1361, column: 35, scope: !6632)
!6673 = !DILocation(line: 1361, column: 40, scope: !6632)
!6674 = !DILocation(line: 1361, column: 2, scope: !6632)
!6675 = !DILocation(line: 1366, column: 6, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 1366, column: 6)
!6677 = !DILocation(line: 1366, column: 12, scope: !6676)
!6678 = !DILocation(line: 1366, column: 17, scope: !6676)
!6679 = !DILocation(line: 1366, column: 6, scope: !6632)
!6680 = !DILocation(line: 1367, column: 7, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 1367, column: 7)
!6682 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1366, column: 31)
!6683 = !DILocation(line: 1367, column: 16, scope: !6681)
!6684 = !DILocation(line: 1367, column: 22, scope: !6681)
!6685 = !DILocation(line: 1367, column: 14, scope: !6681)
!6686 = !DILocation(line: 1367, column: 7, scope: !6682)
!6687 = !DILocation(line: 1368, column: 13, scope: !6681)
!6688 = !DILocation(line: 1368, column: 19, scope: !6681)
!6689 = !DILocation(line: 1368, column: 4, scope: !6681)
!6690 = !DILocation(line: 1368, column: 11, scope: !6681)
!6691 = !DILocation(line: 1370, column: 7, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 1370, column: 7)
!6693 = !DILocation(line: 1370, column: 16, scope: !6692)
!6694 = !DILocation(line: 1370, column: 22, scope: !6692)
!6695 = !DILocation(line: 1370, column: 14, scope: !6692)
!6696 = !DILocation(line: 1370, column: 7, scope: !6682)
!6697 = !DILocation(line: 1371, column: 13, scope: !6692)
!6698 = !DILocation(line: 1371, column: 19, scope: !6692)
!6699 = !DILocation(line: 1371, column: 4, scope: !6692)
!6700 = !DILocation(line: 1371, column: 11, scope: !6692)
!6701 = !DILocation(line: 1372, column: 2, scope: !6682)
!6702 = !DILocation(line: 1373, column: 6, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 1373, column: 6)
!6704 = !DILocation(line: 1373, column: 12, scope: !6703)
!6705 = !DILocation(line: 1373, column: 17, scope: !6703)
!6706 = !DILocation(line: 1373, column: 6, scope: !6632)
!6707 = !DILocation(line: 1374, column: 7, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1374, column: 7)
!6709 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1373, column: 31)
!6710 = !DILocation(line: 1374, column: 16, scope: !6708)
!6711 = !DILocation(line: 1374, column: 22, scope: !6708)
!6712 = !DILocation(line: 1374, column: 14, scope: !6708)
!6713 = !DILocation(line: 1374, column: 7, scope: !6709)
!6714 = !DILocation(line: 1375, column: 13, scope: !6708)
!6715 = !DILocation(line: 1375, column: 19, scope: !6708)
!6716 = !DILocation(line: 1375, column: 4, scope: !6708)
!6717 = !DILocation(line: 1375, column: 11, scope: !6708)
!6718 = !DILocation(line: 1377, column: 7, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1377, column: 7)
!6720 = !DILocation(line: 1377, column: 16, scope: !6719)
!6721 = !DILocation(line: 1377, column: 22, scope: !6719)
!6722 = !DILocation(line: 1377, column: 14, scope: !6719)
!6723 = !DILocation(line: 1377, column: 7, scope: !6709)
!6724 = !DILocation(line: 1378, column: 13, scope: !6719)
!6725 = !DILocation(line: 1378, column: 19, scope: !6719)
!6726 = !DILocation(line: 1378, column: 4, scope: !6719)
!6727 = !DILocation(line: 1378, column: 11, scope: !6719)
!6728 = !DILocation(line: 1379, column: 2, scope: !6709)
!6729 = !DILocation(line: 1380, column: 6, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 1380, column: 6)
!6731 = !DILocation(line: 1380, column: 12, scope: !6730)
!6732 = !DILocation(line: 1380, column: 17, scope: !6730)
!6733 = !DILocation(line: 1380, column: 6, scope: !6632)
!6734 = !DILocation(line: 1381, column: 7, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 1381, column: 7)
!6736 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 1380, column: 31)
!6737 = !DILocation(line: 1381, column: 16, scope: !6735)
!6738 = !DILocation(line: 1381, column: 22, scope: !6735)
!6739 = !DILocation(line: 1381, column: 14, scope: !6735)
!6740 = !DILocation(line: 1381, column: 7, scope: !6736)
!6741 = !DILocation(line: 1382, column: 13, scope: !6735)
!6742 = !DILocation(line: 1382, column: 19, scope: !6735)
!6743 = !DILocation(line: 1382, column: 4, scope: !6735)
!6744 = !DILocation(line: 1382, column: 11, scope: !6735)
!6745 = !DILocation(line: 1384, column: 7, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 1384, column: 7)
!6747 = !DILocation(line: 1384, column: 16, scope: !6746)
!6748 = !DILocation(line: 1384, column: 22, scope: !6746)
!6749 = !DILocation(line: 1384, column: 14, scope: !6746)
!6750 = !DILocation(line: 1384, column: 7, scope: !6736)
!6751 = !DILocation(line: 1385, column: 13, scope: !6746)
!6752 = !DILocation(line: 1385, column: 19, scope: !6746)
!6753 = !DILocation(line: 1385, column: 4, scope: !6746)
!6754 = !DILocation(line: 1385, column: 11, scope: !6746)
!6755 = !DILocation(line: 1386, column: 2, scope: !6736)
!6756 = !DILocation(line: 1388, column: 24, scope: !6632)
!6757 = !DILocation(line: 1388, column: 29, scope: !6632)
!6758 = !DILocation(line: 1388, column: 37, scope: !6632)
!6759 = !DILocation(line: 1388, column: 42, scope: !6632)
!6760 = !DILocation(line: 1388, column: 47, scope: !6632)
!6761 = !DILocation(line: 1388, column: 53, scope: !6632)
!6762 = !DILocation(line: 1388, column: 58, scope: !6632)
!6763 = !DILocation(line: 1388, column: 2, scope: !6632)
!6764 = !DILocation(line: 1389, column: 1, scope: !6632)
!6765 = distinct !DISubprogram(name: "loclimit_evaluate", scope: !3, file: !3, line: 1304, type: !4392, scopeLine: 1305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!6766 = !DILocalVariable(name: "con", arg: 1, scope: !6765, file: !3, line: 1304, type: !2708)
!6767 = !DILocation(line: 1304, column: 44, scope: !6765)
!6768 = !DILocalVariable(name: "cob", arg: 2, scope: !6765, file: !3, line: 1304, type: !2733)
!6769 = !DILocation(line: 1304, column: 64, scope: !6765)
!6770 = !DILocalVariable(name: "UNUSED_targets", arg: 3, scope: !6765, file: !3, line: 1304, type: !1287)
!6771 = !DILocation(line: 1304, column: 79, scope: !6765)
!6772 = !DILocalVariable(name: "data", scope: !6765, file: !3, line: 1306, type: !6773)
!6773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6774, size: 64)
!6774 = !DIDerivedType(tag: DW_TAG_typedef, name: "bLocLimitConstraint", file: !44, line: 385, baseType: !6775)
!6775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bLocLimitConstraint", file: !44, line: 379, size: 224, elements: !6776)
!6776 = !{!6777, !6778, !6779, !6780, !6781, !6782, !6783, !6784}
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !6775, file: !44, line: 380, baseType: !467, size: 32)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !6775, file: !44, line: 380, baseType: !467, size: 32, offset: 32)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !6775, file: !44, line: 381, baseType: !467, size: 32, offset: 64)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !6775, file: !44, line: 381, baseType: !467, size: 32, offset: 96)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "zmin", scope: !6775, file: !44, line: 382, baseType: !467, size: 32, offset: 128)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "zmax", scope: !6775, file: !44, line: 382, baseType: !467, size: 32, offset: 160)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6775, file: !44, line: 383, baseType: !420, size: 16, offset: 192)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !6775, file: !44, line: 384, baseType: !420, size: 16, offset: 208)
!6785 = !DILocation(line: 1306, column: 23, scope: !6765)
!6786 = !DILocation(line: 1306, column: 30, scope: !6765)
!6787 = !DILocation(line: 1306, column: 35, scope: !6765)
!6788 = !DILocation(line: 1308, column: 6, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1308, column: 6)
!6790 = !DILocation(line: 1308, column: 12, scope: !6789)
!6791 = !DILocation(line: 1308, column: 17, scope: !6789)
!6792 = !DILocation(line: 1308, column: 6, scope: !6765)
!6793 = !DILocation(line: 1309, column: 7, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 1309, column: 7)
!6795 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 1308, column: 31)
!6796 = !DILocation(line: 1309, column: 12, scope: !6794)
!6797 = !DILocation(line: 1309, column: 27, scope: !6794)
!6798 = !DILocation(line: 1309, column: 33, scope: !6794)
!6799 = !DILocation(line: 1309, column: 25, scope: !6794)
!6800 = !DILocation(line: 1309, column: 7, scope: !6795)
!6801 = !DILocation(line: 1310, column: 24, scope: !6794)
!6802 = !DILocation(line: 1310, column: 30, scope: !6794)
!6803 = !DILocation(line: 1310, column: 4, scope: !6794)
!6804 = !DILocation(line: 1310, column: 9, scope: !6794)
!6805 = !DILocation(line: 1310, column: 22, scope: !6794)
!6806 = !DILocation(line: 1311, column: 2, scope: !6795)
!6807 = !DILocation(line: 1312, column: 6, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1312, column: 6)
!6809 = !DILocation(line: 1312, column: 12, scope: !6808)
!6810 = !DILocation(line: 1312, column: 17, scope: !6808)
!6811 = !DILocation(line: 1312, column: 6, scope: !6765)
!6812 = !DILocation(line: 1313, column: 7, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 1313, column: 7)
!6814 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 1312, column: 31)
!6815 = !DILocation(line: 1313, column: 12, scope: !6813)
!6816 = !DILocation(line: 1313, column: 27, scope: !6813)
!6817 = !DILocation(line: 1313, column: 33, scope: !6813)
!6818 = !DILocation(line: 1313, column: 25, scope: !6813)
!6819 = !DILocation(line: 1313, column: 7, scope: !6814)
!6820 = !DILocation(line: 1314, column: 24, scope: !6813)
!6821 = !DILocation(line: 1314, column: 30, scope: !6813)
!6822 = !DILocation(line: 1314, column: 4, scope: !6813)
!6823 = !DILocation(line: 1314, column: 9, scope: !6813)
!6824 = !DILocation(line: 1314, column: 22, scope: !6813)
!6825 = !DILocation(line: 1315, column: 2, scope: !6814)
!6826 = !DILocation(line: 1316, column: 6, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1316, column: 6)
!6828 = !DILocation(line: 1316, column: 12, scope: !6827)
!6829 = !DILocation(line: 1316, column: 17, scope: !6827)
!6830 = !DILocation(line: 1316, column: 6, scope: !6765)
!6831 = !DILocation(line: 1317, column: 7, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 1317, column: 7)
!6833 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 1316, column: 31)
!6834 = !DILocation(line: 1317, column: 12, scope: !6832)
!6835 = !DILocation(line: 1317, column: 27, scope: !6832)
!6836 = !DILocation(line: 1317, column: 33, scope: !6832)
!6837 = !DILocation(line: 1317, column: 25, scope: !6832)
!6838 = !DILocation(line: 1317, column: 7, scope: !6833)
!6839 = !DILocation(line: 1318, column: 24, scope: !6832)
!6840 = !DILocation(line: 1318, column: 30, scope: !6832)
!6841 = !DILocation(line: 1318, column: 4, scope: !6832)
!6842 = !DILocation(line: 1318, column: 9, scope: !6832)
!6843 = !DILocation(line: 1318, column: 22, scope: !6832)
!6844 = !DILocation(line: 1319, column: 2, scope: !6833)
!6845 = !DILocation(line: 1320, column: 6, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1320, column: 6)
!6847 = !DILocation(line: 1320, column: 12, scope: !6846)
!6848 = !DILocation(line: 1320, column: 17, scope: !6846)
!6849 = !DILocation(line: 1320, column: 6, scope: !6765)
!6850 = !DILocation(line: 1321, column: 7, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 1321, column: 7)
!6852 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 1320, column: 31)
!6853 = !DILocation(line: 1321, column: 12, scope: !6851)
!6854 = !DILocation(line: 1321, column: 27, scope: !6851)
!6855 = !DILocation(line: 1321, column: 33, scope: !6851)
!6856 = !DILocation(line: 1321, column: 25, scope: !6851)
!6857 = !DILocation(line: 1321, column: 7, scope: !6852)
!6858 = !DILocation(line: 1322, column: 24, scope: !6851)
!6859 = !DILocation(line: 1322, column: 30, scope: !6851)
!6860 = !DILocation(line: 1322, column: 4, scope: !6851)
!6861 = !DILocation(line: 1322, column: 9, scope: !6851)
!6862 = !DILocation(line: 1322, column: 22, scope: !6851)
!6863 = !DILocation(line: 1323, column: 2, scope: !6852)
!6864 = !DILocation(line: 1324, column: 6, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1324, column: 6)
!6866 = !DILocation(line: 1324, column: 12, scope: !6865)
!6867 = !DILocation(line: 1324, column: 17, scope: !6865)
!6868 = !DILocation(line: 1324, column: 6, scope: !6765)
!6869 = !DILocation(line: 1325, column: 7, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 1325, column: 7)
!6871 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 1324, column: 31)
!6872 = !DILocation(line: 1325, column: 12, scope: !6870)
!6873 = !DILocation(line: 1325, column: 27, scope: !6870)
!6874 = !DILocation(line: 1325, column: 33, scope: !6870)
!6875 = !DILocation(line: 1325, column: 25, scope: !6870)
!6876 = !DILocation(line: 1325, column: 7, scope: !6871)
!6877 = !DILocation(line: 1326, column: 24, scope: !6870)
!6878 = !DILocation(line: 1326, column: 30, scope: !6870)
!6879 = !DILocation(line: 1326, column: 4, scope: !6870)
!6880 = !DILocation(line: 1326, column: 9, scope: !6870)
!6881 = !DILocation(line: 1326, column: 22, scope: !6870)
!6882 = !DILocation(line: 1327, column: 2, scope: !6871)
!6883 = !DILocation(line: 1328, column: 6, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1328, column: 6)
!6885 = !DILocation(line: 1328, column: 12, scope: !6884)
!6886 = !DILocation(line: 1328, column: 17, scope: !6884)
!6887 = !DILocation(line: 1328, column: 6, scope: !6765)
!6888 = !DILocation(line: 1329, column: 7, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 1329, column: 7)
!6890 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1328, column: 31)
!6891 = !DILocation(line: 1329, column: 12, scope: !6889)
!6892 = !DILocation(line: 1329, column: 27, scope: !6889)
!6893 = !DILocation(line: 1329, column: 33, scope: !6889)
!6894 = !DILocation(line: 1329, column: 25, scope: !6889)
!6895 = !DILocation(line: 1329, column: 7, scope: !6890)
!6896 = !DILocation(line: 1330, column: 24, scope: !6889)
!6897 = !DILocation(line: 1330, column: 30, scope: !6889)
!6898 = !DILocation(line: 1330, column: 4, scope: !6889)
!6899 = !DILocation(line: 1330, column: 9, scope: !6889)
!6900 = !DILocation(line: 1330, column: 22, scope: !6889)
!6901 = !DILocation(line: 1331, column: 2, scope: !6890)
!6902 = !DILocation(line: 1332, column: 1, scope: !6765)
!6903 = distinct !DISubprogram(name: "sizelimit_evaluate", scope: !3, file: !3, line: 1409, type: !4392, scopeLine: 1410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!6904 = !DILocalVariable(name: "con", arg: 1, scope: !6903, file: !3, line: 1409, type: !2708)
!6905 = !DILocation(line: 1409, column: 45, scope: !6903)
!6906 = !DILocalVariable(name: "cob", arg: 2, scope: !6903, file: !3, line: 1409, type: !2733)
!6907 = !DILocation(line: 1409, column: 65, scope: !6903)
!6908 = !DILocalVariable(name: "UNUSED_targets", arg: 3, scope: !6903, file: !3, line: 1409, type: !1287)
!6909 = !DILocation(line: 1409, column: 80, scope: !6903)
!6910 = !DILocalVariable(name: "data", scope: !6903, file: !3, line: 1411, type: !6911)
!6911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6912, size: 64)
!6912 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSizeLimitConstraint", file: !44, line: 403, baseType: !6913)
!6913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSizeLimitConstraint", file: !44, line: 397, size: 224, elements: !6914)
!6914 = !{!6915, !6916, !6917, !6918, !6919, !6920, !6921, !6922}
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !6913, file: !44, line: 398, baseType: !467, size: 32)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !6913, file: !44, line: 398, baseType: !467, size: 32, offset: 32)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !6913, file: !44, line: 399, baseType: !467, size: 32, offset: 64)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !6913, file: !44, line: 399, baseType: !467, size: 32, offset: 96)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "zmin", scope: !6913, file: !44, line: 400, baseType: !467, size: 32, offset: 128)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "zmax", scope: !6913, file: !44, line: 400, baseType: !467, size: 32, offset: 160)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6913, file: !44, line: 401, baseType: !420, size: 16, offset: 192)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !6913, file: !44, line: 402, baseType: !420, size: 16, offset: 208)
!6923 = !DILocation(line: 1411, column: 24, scope: !6903)
!6924 = !DILocation(line: 1411, column: 31, scope: !6903)
!6925 = !DILocation(line: 1411, column: 36, scope: !6903)
!6926 = !DILocalVariable(name: "obsize", scope: !6903, file: !3, line: 1412, type: !469)
!6927 = !DILocation(line: 1412, column: 8, scope: !6903)
!6928 = !DILocalVariable(name: "size", scope: !6903, file: !3, line: 1412, type: !469)
!6929 = !DILocation(line: 1412, column: 19, scope: !6903)
!6930 = !DILocation(line: 1414, column: 15, scope: !6903)
!6931 = !DILocation(line: 1414, column: 21, scope: !6903)
!6932 = !DILocation(line: 1414, column: 26, scope: !6903)
!6933 = !DILocation(line: 1414, column: 2, scope: !6903)
!6934 = !DILocation(line: 1415, column: 15, scope: !6903)
!6935 = !DILocation(line: 1415, column: 23, scope: !6903)
!6936 = !DILocation(line: 1415, column: 28, scope: !6903)
!6937 = !DILocation(line: 1415, column: 2, scope: !6903)
!6938 = !DILocation(line: 1417, column: 6, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1417, column: 6)
!6940 = !DILocation(line: 1417, column: 12, scope: !6939)
!6941 = !DILocation(line: 1417, column: 17, scope: !6939)
!6942 = !DILocation(line: 1417, column: 6, scope: !6903)
!6943 = !DILocation(line: 1418, column: 7, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 1418, column: 7)
!6945 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 1417, column: 31)
!6946 = !DILocation(line: 1418, column: 17, scope: !6944)
!6947 = !DILocation(line: 1418, column: 23, scope: !6944)
!6948 = !DILocation(line: 1418, column: 15, scope: !6944)
!6949 = !DILocation(line: 1418, column: 7, scope: !6945)
!6950 = !DILocation(line: 1419, column: 14, scope: !6944)
!6951 = !DILocation(line: 1419, column: 20, scope: !6944)
!6952 = !DILocation(line: 1419, column: 4, scope: !6944)
!6953 = !DILocation(line: 1419, column: 12, scope: !6944)
!6954 = !DILocation(line: 1420, column: 2, scope: !6945)
!6955 = !DILocation(line: 1421, column: 6, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1421, column: 6)
!6957 = !DILocation(line: 1421, column: 12, scope: !6956)
!6958 = !DILocation(line: 1421, column: 17, scope: !6956)
!6959 = !DILocation(line: 1421, column: 6, scope: !6903)
!6960 = !DILocation(line: 1422, column: 7, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 1422, column: 7)
!6962 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1421, column: 31)
!6963 = !DILocation(line: 1422, column: 17, scope: !6961)
!6964 = !DILocation(line: 1422, column: 23, scope: !6961)
!6965 = !DILocation(line: 1422, column: 15, scope: !6961)
!6966 = !DILocation(line: 1422, column: 7, scope: !6962)
!6967 = !DILocation(line: 1423, column: 14, scope: !6961)
!6968 = !DILocation(line: 1423, column: 20, scope: !6961)
!6969 = !DILocation(line: 1423, column: 4, scope: !6961)
!6970 = !DILocation(line: 1423, column: 12, scope: !6961)
!6971 = !DILocation(line: 1424, column: 2, scope: !6962)
!6972 = !DILocation(line: 1425, column: 6, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1425, column: 6)
!6974 = !DILocation(line: 1425, column: 12, scope: !6973)
!6975 = !DILocation(line: 1425, column: 17, scope: !6973)
!6976 = !DILocation(line: 1425, column: 6, scope: !6903)
!6977 = !DILocation(line: 1426, column: 7, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !3, line: 1426, column: 7)
!6979 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 1425, column: 31)
!6980 = !DILocation(line: 1426, column: 17, scope: !6978)
!6981 = !DILocation(line: 1426, column: 23, scope: !6978)
!6982 = !DILocation(line: 1426, column: 15, scope: !6978)
!6983 = !DILocation(line: 1426, column: 7, scope: !6979)
!6984 = !DILocation(line: 1427, column: 14, scope: !6978)
!6985 = !DILocation(line: 1427, column: 20, scope: !6978)
!6986 = !DILocation(line: 1427, column: 4, scope: !6978)
!6987 = !DILocation(line: 1427, column: 12, scope: !6978)
!6988 = !DILocation(line: 1428, column: 2, scope: !6979)
!6989 = !DILocation(line: 1429, column: 6, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1429, column: 6)
!6991 = !DILocation(line: 1429, column: 12, scope: !6990)
!6992 = !DILocation(line: 1429, column: 17, scope: !6990)
!6993 = !DILocation(line: 1429, column: 6, scope: !6903)
!6994 = !DILocation(line: 1430, column: 7, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 1430, column: 7)
!6996 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 1429, column: 31)
!6997 = !DILocation(line: 1430, column: 17, scope: !6995)
!6998 = !DILocation(line: 1430, column: 23, scope: !6995)
!6999 = !DILocation(line: 1430, column: 15, scope: !6995)
!7000 = !DILocation(line: 1430, column: 7, scope: !6996)
!7001 = !DILocation(line: 1431, column: 14, scope: !6995)
!7002 = !DILocation(line: 1431, column: 20, scope: !6995)
!7003 = !DILocation(line: 1431, column: 4, scope: !6995)
!7004 = !DILocation(line: 1431, column: 12, scope: !6995)
!7005 = !DILocation(line: 1432, column: 2, scope: !6996)
!7006 = !DILocation(line: 1433, column: 6, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1433, column: 6)
!7008 = !DILocation(line: 1433, column: 12, scope: !7007)
!7009 = !DILocation(line: 1433, column: 17, scope: !7007)
!7010 = !DILocation(line: 1433, column: 6, scope: !6903)
!7011 = !DILocation(line: 1434, column: 7, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 1434, column: 7)
!7013 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 1433, column: 31)
!7014 = !DILocation(line: 1434, column: 17, scope: !7012)
!7015 = !DILocation(line: 1434, column: 23, scope: !7012)
!7016 = !DILocation(line: 1434, column: 15, scope: !7012)
!7017 = !DILocation(line: 1434, column: 7, scope: !7013)
!7018 = !DILocation(line: 1435, column: 14, scope: !7012)
!7019 = !DILocation(line: 1435, column: 20, scope: !7012)
!7020 = !DILocation(line: 1435, column: 4, scope: !7012)
!7021 = !DILocation(line: 1435, column: 12, scope: !7012)
!7022 = !DILocation(line: 1436, column: 2, scope: !7013)
!7023 = !DILocation(line: 1437, column: 6, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1437, column: 6)
!7025 = !DILocation(line: 1437, column: 12, scope: !7024)
!7026 = !DILocation(line: 1437, column: 17, scope: !7024)
!7027 = !DILocation(line: 1437, column: 6, scope: !6903)
!7028 = !DILocation(line: 1438, column: 7, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 1438, column: 7)
!7030 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 1437, column: 31)
!7031 = !DILocation(line: 1438, column: 17, scope: !7029)
!7032 = !DILocation(line: 1438, column: 23, scope: !7029)
!7033 = !DILocation(line: 1438, column: 15, scope: !7029)
!7034 = !DILocation(line: 1438, column: 7, scope: !7030)
!7035 = !DILocation(line: 1439, column: 14, scope: !7029)
!7036 = !DILocation(line: 1439, column: 20, scope: !7029)
!7037 = !DILocation(line: 1439, column: 4, scope: !7029)
!7038 = !DILocation(line: 1439, column: 12, scope: !7029)
!7039 = !DILocation(line: 1440, column: 2, scope: !7030)
!7040 = !DILocation(line: 1442, column: 6, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1442, column: 6)
!7042 = !DILocation(line: 1442, column: 6, scope: !6903)
!7043 = !DILocation(line: 1443, column: 13, scope: !7041)
!7044 = !DILocation(line: 1443, column: 18, scope: !7041)
!7045 = !DILocation(line: 1443, column: 29, scope: !7041)
!7046 = !DILocation(line: 1443, column: 39, scope: !7041)
!7047 = !DILocation(line: 1443, column: 37, scope: !7041)
!7048 = !DILocation(line: 1443, column: 3, scope: !7041)
!7049 = !DILocation(line: 1444, column: 6, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1444, column: 6)
!7051 = !DILocation(line: 1444, column: 6, scope: !6903)
!7052 = !DILocation(line: 1445, column: 13, scope: !7050)
!7053 = !DILocation(line: 1445, column: 18, scope: !7050)
!7054 = !DILocation(line: 1445, column: 29, scope: !7050)
!7055 = !DILocation(line: 1445, column: 39, scope: !7050)
!7056 = !DILocation(line: 1445, column: 37, scope: !7050)
!7057 = !DILocation(line: 1445, column: 3, scope: !7050)
!7058 = !DILocation(line: 1446, column: 6, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1446, column: 6)
!7060 = !DILocation(line: 1446, column: 6, scope: !6903)
!7061 = !DILocation(line: 1447, column: 13, scope: !7059)
!7062 = !DILocation(line: 1447, column: 18, scope: !7059)
!7063 = !DILocation(line: 1447, column: 29, scope: !7059)
!7064 = !DILocation(line: 1447, column: 39, scope: !7059)
!7065 = !DILocation(line: 1447, column: 37, scope: !7059)
!7066 = !DILocation(line: 1447, column: 3, scope: !7059)
!7067 = !DILocation(line: 1448, column: 1, scope: !6903)
!7068 = distinct !DISubprogram(name: "rotlike_id_looper", scope: !3, file: !3, line: 1564, type: !4251, scopeLine: 1565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7069 = !DILocalVariable(name: "con", arg: 1, scope: !7068, file: !3, line: 1564, type: !2708)
!7070 = !DILocation(line: 1564, column: 44, scope: !7068)
!7071 = !DILocalVariable(name: "func", arg: 2, scope: !7068, file: !3, line: 1564, type: !2599)
!7072 = !DILocation(line: 1564, column: 66, scope: !7068)
!7073 = !DILocalVariable(name: "userdata", arg: 3, scope: !7068, file: !3, line: 1564, type: !431)
!7074 = !DILocation(line: 1564, column: 78, scope: !7068)
!7075 = !DILocalVariable(name: "data", scope: !7068, file: !3, line: 1566, type: !2359)
!7076 = !DILocation(line: 1566, column: 25, scope: !7068)
!7077 = !DILocation(line: 1566, column: 32, scope: !7068)
!7078 = !DILocation(line: 1566, column: 37, scope: !7068)
!7079 = !DILocation(line: 1569, column: 2, scope: !7068)
!7080 = !DILocation(line: 1569, column: 7, scope: !7068)
!7081 = !DILocation(line: 1569, column: 20, scope: !7068)
!7082 = !DILocation(line: 1569, column: 26, scope: !7068)
!7083 = !DILocation(line: 1569, column: 12, scope: !7068)
!7084 = !DILocation(line: 1569, column: 38, scope: !7068)
!7085 = !DILocation(line: 1570, column: 1, scope: !7068)
!7086 = distinct !DISubprogram(name: "rotlike_new_data", scope: !3, file: !3, line: 1557, type: !2610, scopeLine: 1558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7087 = !DILocalVariable(name: "cdata", arg: 1, scope: !7086, file: !3, line: 1557, type: !431)
!7088 = !DILocation(line: 1557, column: 36, scope: !7086)
!7089 = !DILocalVariable(name: "data", scope: !7086, file: !3, line: 1559, type: !2359)
!7090 = !DILocation(line: 1559, column: 25, scope: !7086)
!7091 = !DILocation(line: 1559, column: 57, scope: !7086)
!7092 = !DILocation(line: 1559, column: 32, scope: !7086)
!7093 = !DILocation(line: 1561, column: 2, scope: !7086)
!7094 = !DILocation(line: 1561, column: 8, scope: !7086)
!7095 = !DILocation(line: 1561, column: 13, scope: !7086)
!7096 = !DILocation(line: 1562, column: 1, scope: !7086)
!7097 = distinct !DISubprogram(name: "rotlike_get_tars", scope: !3, file: !3, line: 1572, type: !4285, scopeLine: 1573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7098 = !DILocalVariable(name: "con", arg: 1, scope: !7097, file: !3, line: 1572, type: !2708)
!7099 = !DILocation(line: 1572, column: 42, scope: !7097)
!7100 = !DILocalVariable(name: "list", arg: 2, scope: !7097, file: !3, line: 1572, type: !1287)
!7101 = !DILocation(line: 1572, column: 57, scope: !7097)
!7102 = !DILocation(line: 1574, column: 6, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 1574, column: 6)
!7104 = !DILocation(line: 1574, column: 10, scope: !7103)
!7105 = !DILocation(line: 1574, column: 13, scope: !7103)
!7106 = !DILocation(line: 1574, column: 6, scope: !7097)
!7107 = !DILocalVariable(name: "data", scope: !7108, file: !3, line: 1575, type: !2359)
!7108 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 1574, column: 19)
!7109 = !DILocation(line: 1575, column: 26, scope: !7108)
!7110 = !DILocation(line: 1575, column: 33, scope: !7108)
!7111 = !DILocation(line: 1575, column: 38, scope: !7108)
!7112 = !DILocalVariable(name: "ct", scope: !7108, file: !3, line: 1576, type: !2244)
!7113 = !DILocation(line: 1576, column: 22, scope: !7108)
!7114 = !DILocation(line: 1579, column: 3, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 1579, column: 3)
!7116 = !DILocation(line: 1579, column: 3, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 1579, column: 3)
!7118 = !DILocation(line: 1579, column: 3, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 1579, column: 3)
!7120 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1579, column: 3)
!7121 = !DILocation(line: 1579, column: 3, scope: !7120)
!7122 = !DILocalVariable(name: "pchan", scope: !7123, file: !3, line: 1579, type: !399)
!7123 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 1579, column: 3)
!7124 = !DILocation(line: 1579, column: 3, scope: !7123)
!7125 = !DILocation(line: 1579, column: 3, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 1579, column: 3)
!7127 = !DILocation(line: 1579, column: 3, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1579, column: 3)
!7129 = !DILocation(line: 1579, column: 3, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1579, column: 3)
!7131 = !DILocation(line: 1581, column: 3, scope: !7108)
!7132 = !DILocation(line: 1584, column: 2, scope: !7097)
!7133 = !DILocation(line: 1585, column: 1, scope: !7097)
!7134 = distinct !DISubprogram(name: "rotlike_flush_tars", scope: !3, file: !3, line: 1587, type: !4324, scopeLine: 1588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7135 = !DILocalVariable(name: "con", arg: 1, scope: !7134, file: !3, line: 1587, type: !2708)
!7136 = !DILocation(line: 1587, column: 45, scope: !7134)
!7137 = !DILocalVariable(name: "list", arg: 2, scope: !7134, file: !3, line: 1587, type: !1287)
!7138 = !DILocation(line: 1587, column: 60, scope: !7134)
!7139 = !DILocalVariable(name: "no_copy", arg: 3, scope: !7134, file: !3, line: 1587, type: !1111)
!7140 = !DILocation(line: 1587, column: 71, scope: !7134)
!7141 = !DILocation(line: 1589, column: 6, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 1589, column: 6)
!7143 = !DILocation(line: 1589, column: 10, scope: !7142)
!7144 = !DILocation(line: 1589, column: 13, scope: !7142)
!7145 = !DILocation(line: 1589, column: 6, scope: !7134)
!7146 = !DILocalVariable(name: "data", scope: !7147, file: !3, line: 1590, type: !2359)
!7147 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 1589, column: 19)
!7148 = !DILocation(line: 1590, column: 26, scope: !7147)
!7149 = !DILocation(line: 1590, column: 33, scope: !7147)
!7150 = !DILocation(line: 1590, column: 38, scope: !7147)
!7151 = !DILocalVariable(name: "ct", scope: !7147, file: !3, line: 1591, type: !2244)
!7152 = !DILocation(line: 1591, column: 22, scope: !7147)
!7153 = !DILocation(line: 1591, column: 27, scope: !7147)
!7154 = !DILocation(line: 1591, column: 33, scope: !7147)
!7155 = !DILocation(line: 1594, column: 3, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1594, column: 3)
!7157 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 1594, column: 3)
!7158 = !DILocation(line: 1594, column: 3, scope: !7157)
!7159 = !DILocalVariable(name: "ctn", scope: !7160, file: !3, line: 1594, type: !2244)
!7160 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 1594, column: 3)
!7161 = !DILocation(line: 1594, column: 3, scope: !7160)
!7162 = !DILocation(line: 1594, column: 3, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 1594, column: 3)
!7164 = !DILocation(line: 1594, column: 3, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 1594, column: 3)
!7166 = !DILocation(line: 1595, column: 2, scope: !7147)
!7167 = !DILocation(line: 1596, column: 1, scope: !7134)
!7168 = distinct !DISubprogram(name: "rotlike_evaluate", scope: !3, file: !3, line: 1598, type: !4392, scopeLine: 1599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7169 = !DILocalVariable(name: "con", arg: 1, scope: !7168, file: !3, line: 1598, type: !2708)
!7170 = !DILocation(line: 1598, column: 43, scope: !7168)
!7171 = !DILocalVariable(name: "cob", arg: 2, scope: !7168, file: !3, line: 1598, type: !2733)
!7172 = !DILocation(line: 1598, column: 63, scope: !7168)
!7173 = !DILocalVariable(name: "targets", arg: 3, scope: !7168, file: !3, line: 1598, type: !1287)
!7174 = !DILocation(line: 1598, column: 78, scope: !7168)
!7175 = !DILocalVariable(name: "data", scope: !7168, file: !3, line: 1600, type: !2359)
!7176 = !DILocation(line: 1600, column: 25, scope: !7168)
!7177 = !DILocation(line: 1600, column: 32, scope: !7168)
!7178 = !DILocation(line: 1600, column: 37, scope: !7168)
!7179 = !DILocalVariable(name: "ct", scope: !7168, file: !3, line: 1601, type: !2244)
!7180 = !DILocation(line: 1601, column: 21, scope: !7168)
!7181 = !DILocation(line: 1601, column: 26, scope: !7168)
!7182 = !DILocation(line: 1601, column: 35, scope: !7168)
!7183 = !DILocation(line: 1603, column: 6, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7168, file: !3, line: 1603, column: 6)
!7185 = !DILocation(line: 1603, column: 6, scope: !7168)
!7186 = !DILocalVariable(name: "loc", scope: !7187, file: !3, line: 1604, type: !469)
!7187 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 1603, column: 29)
!7188 = !DILocation(line: 1604, column: 9, scope: !7187)
!7189 = !DILocalVariable(name: "eul", scope: !7187, file: !3, line: 1605, type: !469)
!7190 = !DILocation(line: 1605, column: 9, scope: !7187)
!7191 = !DILocalVariable(name: "obeul", scope: !7187, file: !3, line: 1605, type: !469)
!7192 = !DILocation(line: 1605, column: 17, scope: !7187)
!7193 = !DILocalVariable(name: "size", scope: !7187, file: !3, line: 1606, type: !469)
!7194 = !DILocation(line: 1606, column: 9, scope: !7187)
!7195 = !DILocation(line: 1608, column: 14, scope: !7187)
!7196 = !DILocation(line: 1608, column: 19, scope: !7187)
!7197 = !DILocation(line: 1608, column: 24, scope: !7187)
!7198 = !DILocation(line: 1608, column: 3, scope: !7187)
!7199 = !DILocation(line: 1609, column: 16, scope: !7187)
!7200 = !DILocation(line: 1609, column: 22, scope: !7187)
!7201 = !DILocation(line: 1609, column: 27, scope: !7187)
!7202 = !DILocation(line: 1609, column: 3, scope: !7187)
!7203 = !DILocation(line: 1612, column: 16, scope: !7187)
!7204 = !DILocation(line: 1612, column: 23, scope: !7187)
!7205 = !DILocation(line: 1612, column: 28, scope: !7187)
!7206 = !DILocation(line: 1612, column: 38, scope: !7187)
!7207 = !DILocation(line: 1612, column: 43, scope: !7187)
!7208 = !DILocation(line: 1612, column: 3, scope: !7187)
!7209 = !DILocation(line: 1614, column: 27, scope: !7187)
!7210 = !DILocation(line: 1614, column: 32, scope: !7187)
!7211 = !DILocation(line: 1614, column: 39, scope: !7187)
!7212 = !DILocation(line: 1614, column: 44, scope: !7187)
!7213 = !DILocation(line: 1614, column: 54, scope: !7187)
!7214 = !DILocation(line: 1614, column: 58, scope: !7187)
!7215 = !DILocation(line: 1614, column: 3, scope: !7187)
!7216 = !DILocation(line: 1616, column: 8, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 1616, column: 7)
!7218 = !DILocation(line: 1616, column: 14, scope: !7217)
!7219 = !DILocation(line: 1616, column: 19, scope: !7217)
!7220 = !DILocation(line: 1616, column: 32, scope: !7217)
!7221 = !DILocation(line: 1616, column: 7, scope: !7187)
!7222 = !DILocation(line: 1617, column: 13, scope: !7217)
!7223 = !DILocation(line: 1617, column: 4, scope: !7217)
!7224 = !DILocation(line: 1617, column: 11, scope: !7217)
!7225 = !DILocation(line: 1619, column: 8, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 1619, column: 8)
!7227 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 1618, column: 8)
!7228 = !DILocation(line: 1619, column: 14, scope: !7226)
!7229 = !DILocation(line: 1619, column: 19, scope: !7226)
!7230 = !DILocation(line: 1619, column: 8, scope: !7227)
!7231 = !DILocation(line: 1620, column: 17, scope: !7226)
!7232 = !DILocation(line: 1620, column: 22, scope: !7226)
!7233 = !DILocation(line: 1620, column: 27, scope: !7226)
!7234 = !DILocation(line: 1620, column: 42, scope: !7226)
!7235 = !DILocation(line: 1620, column: 5, scope: !7226)
!7236 = !DILocation(line: 1622, column: 8, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 1622, column: 8)
!7238 = !DILocation(line: 1622, column: 14, scope: !7237)
!7239 = !DILocation(line: 1622, column: 19, scope: !7237)
!7240 = !DILocation(line: 1622, column: 8, scope: !7227)
!7241 = !DILocation(line: 1623, column: 5, scope: !7237)
!7242 = !DILocation(line: 1623, column: 12, scope: !7237)
!7243 = !DILocation(line: 1626, column: 8, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 1626, column: 7)
!7245 = !DILocation(line: 1626, column: 14, scope: !7244)
!7246 = !DILocation(line: 1626, column: 19, scope: !7244)
!7247 = !DILocation(line: 1626, column: 32, scope: !7244)
!7248 = !DILocation(line: 1626, column: 7, scope: !7187)
!7249 = !DILocation(line: 1627, column: 13, scope: !7244)
!7250 = !DILocation(line: 1627, column: 4, scope: !7244)
!7251 = !DILocation(line: 1627, column: 11, scope: !7244)
!7252 = !DILocation(line: 1629, column: 8, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 1629, column: 8)
!7254 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 1628, column: 8)
!7255 = !DILocation(line: 1629, column: 14, scope: !7253)
!7256 = !DILocation(line: 1629, column: 19, scope: !7253)
!7257 = !DILocation(line: 1629, column: 8, scope: !7254)
!7258 = !DILocation(line: 1630, column: 17, scope: !7253)
!7259 = !DILocation(line: 1630, column: 22, scope: !7253)
!7260 = !DILocation(line: 1630, column: 27, scope: !7253)
!7261 = !DILocation(line: 1630, column: 42, scope: !7253)
!7262 = !DILocation(line: 1630, column: 5, scope: !7253)
!7263 = !DILocation(line: 1632, column: 8, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 1632, column: 8)
!7265 = !DILocation(line: 1632, column: 14, scope: !7264)
!7266 = !DILocation(line: 1632, column: 19, scope: !7264)
!7267 = !DILocation(line: 1632, column: 8, scope: !7254)
!7268 = !DILocation(line: 1633, column: 5, scope: !7264)
!7269 = !DILocation(line: 1633, column: 12, scope: !7264)
!7270 = !DILocation(line: 1636, column: 8, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 1636, column: 7)
!7272 = !DILocation(line: 1636, column: 14, scope: !7271)
!7273 = !DILocation(line: 1636, column: 19, scope: !7271)
!7274 = !DILocation(line: 1636, column: 32, scope: !7271)
!7275 = !DILocation(line: 1636, column: 7, scope: !7187)
!7276 = !DILocation(line: 1637, column: 13, scope: !7271)
!7277 = !DILocation(line: 1637, column: 4, scope: !7271)
!7278 = !DILocation(line: 1637, column: 11, scope: !7271)
!7279 = !DILocation(line: 1639, column: 8, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 1639, column: 8)
!7281 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 1638, column: 8)
!7282 = !DILocation(line: 1639, column: 14, scope: !7280)
!7283 = !DILocation(line: 1639, column: 19, scope: !7280)
!7284 = !DILocation(line: 1639, column: 8, scope: !7281)
!7285 = !DILocation(line: 1640, column: 17, scope: !7280)
!7286 = !DILocation(line: 1640, column: 22, scope: !7280)
!7287 = !DILocation(line: 1640, column: 27, scope: !7280)
!7288 = !DILocation(line: 1640, column: 42, scope: !7280)
!7289 = !DILocation(line: 1640, column: 5, scope: !7280)
!7290 = !DILocation(line: 1642, column: 8, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 1642, column: 8)
!7292 = !DILocation(line: 1642, column: 14, scope: !7291)
!7293 = !DILocation(line: 1642, column: 19, scope: !7291)
!7294 = !DILocation(line: 1642, column: 8, scope: !7281)
!7295 = !DILocation(line: 1643, column: 5, scope: !7291)
!7296 = !DILocation(line: 1643, column: 12, scope: !7291)
!7297 = !DILocation(line: 1647, column: 18, scope: !7187)
!7298 = !DILocation(line: 1647, column: 23, scope: !7187)
!7299 = !DILocation(line: 1647, column: 3, scope: !7187)
!7300 = !DILocation(line: 1648, column: 25, scope: !7187)
!7301 = !DILocation(line: 1648, column: 30, scope: !7187)
!7302 = !DILocation(line: 1648, column: 38, scope: !7187)
!7303 = !DILocation(line: 1648, column: 43, scope: !7187)
!7304 = !DILocation(line: 1648, column: 48, scope: !7187)
!7305 = !DILocation(line: 1648, column: 54, scope: !7187)
!7306 = !DILocation(line: 1648, column: 59, scope: !7187)
!7307 = !DILocation(line: 1648, column: 3, scope: !7187)
!7308 = !DILocation(line: 1649, column: 2, scope: !7187)
!7309 = !DILocation(line: 1650, column: 1, scope: !7168)
!7310 = distinct !DISubprogram(name: "loclike_id_looper", scope: !3, file: !3, line: 1474, type: !4251, scopeLine: 1475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7311 = !DILocalVariable(name: "con", arg: 1, scope: !7310, file: !3, line: 1474, type: !2708)
!7312 = !DILocation(line: 1474, column: 44, scope: !7310)
!7313 = !DILocalVariable(name: "func", arg: 2, scope: !7310, file: !3, line: 1474, type: !2599)
!7314 = !DILocation(line: 1474, column: 66, scope: !7310)
!7315 = !DILocalVariable(name: "userdata", arg: 3, scope: !7310, file: !3, line: 1474, type: !431)
!7316 = !DILocation(line: 1474, column: 78, scope: !7310)
!7317 = !DILocalVariable(name: "data", scope: !7310, file: !3, line: 1476, type: !2367)
!7318 = !DILocation(line: 1476, column: 25, scope: !7310)
!7319 = !DILocation(line: 1476, column: 32, scope: !7310)
!7320 = !DILocation(line: 1476, column: 37, scope: !7310)
!7321 = !DILocation(line: 1479, column: 2, scope: !7310)
!7322 = !DILocation(line: 1479, column: 7, scope: !7310)
!7323 = !DILocation(line: 1479, column: 20, scope: !7310)
!7324 = !DILocation(line: 1479, column: 26, scope: !7310)
!7325 = !DILocation(line: 1479, column: 12, scope: !7310)
!7326 = !DILocation(line: 1479, column: 38, scope: !7310)
!7327 = !DILocation(line: 1480, column: 1, scope: !7310)
!7328 = distinct !DISubprogram(name: "loclike_new_data", scope: !3, file: !3, line: 1467, type: !2610, scopeLine: 1468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7329 = !DILocalVariable(name: "cdata", arg: 1, scope: !7328, file: !3, line: 1467, type: !431)
!7330 = !DILocation(line: 1467, column: 36, scope: !7328)
!7331 = !DILocalVariable(name: "data", scope: !7328, file: !3, line: 1469, type: !2367)
!7332 = !DILocation(line: 1469, column: 25, scope: !7328)
!7333 = !DILocation(line: 1469, column: 57, scope: !7328)
!7334 = !DILocation(line: 1469, column: 32, scope: !7328)
!7335 = !DILocation(line: 1471, column: 2, scope: !7328)
!7336 = !DILocation(line: 1471, column: 8, scope: !7328)
!7337 = !DILocation(line: 1471, column: 13, scope: !7328)
!7338 = !DILocation(line: 1472, column: 1, scope: !7328)
!7339 = distinct !DISubprogram(name: "loclike_get_tars", scope: !3, file: !3, line: 1482, type: !4285, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7340 = !DILocalVariable(name: "con", arg: 1, scope: !7339, file: !3, line: 1482, type: !2708)
!7341 = !DILocation(line: 1482, column: 42, scope: !7339)
!7342 = !DILocalVariable(name: "list", arg: 2, scope: !7339, file: !3, line: 1482, type: !1287)
!7343 = !DILocation(line: 1482, column: 57, scope: !7339)
!7344 = !DILocation(line: 1484, column: 6, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7339, file: !3, line: 1484, column: 6)
!7346 = !DILocation(line: 1484, column: 10, scope: !7345)
!7347 = !DILocation(line: 1484, column: 13, scope: !7345)
!7348 = !DILocation(line: 1484, column: 6, scope: !7339)
!7349 = !DILocalVariable(name: "data", scope: !7350, file: !3, line: 1485, type: !2367)
!7350 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 1484, column: 19)
!7351 = !DILocation(line: 1485, column: 26, scope: !7350)
!7352 = !DILocation(line: 1485, column: 33, scope: !7350)
!7353 = !DILocation(line: 1485, column: 38, scope: !7350)
!7354 = !DILocalVariable(name: "ct", scope: !7350, file: !3, line: 1486, type: !2244)
!7355 = !DILocation(line: 1486, column: 22, scope: !7350)
!7356 = !DILocation(line: 1489, column: 3, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 1489, column: 3)
!7358 = !DILocation(line: 1489, column: 3, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 1489, column: 3)
!7360 = !DILocation(line: 1489, column: 3, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 1489, column: 3)
!7362 = distinct !DILexicalBlock(scope: !7359, file: !3, line: 1489, column: 3)
!7363 = !DILocation(line: 1489, column: 3, scope: !7362)
!7364 = !DILocalVariable(name: "pchan", scope: !7365, file: !3, line: 1489, type: !399)
!7365 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 1489, column: 3)
!7366 = !DILocation(line: 1489, column: 3, scope: !7365)
!7367 = !DILocation(line: 1489, column: 3, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 1489, column: 3)
!7369 = !DILocation(line: 1489, column: 3, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 1489, column: 3)
!7371 = !DILocation(line: 1489, column: 3, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 1489, column: 3)
!7373 = !DILocation(line: 1491, column: 3, scope: !7350)
!7374 = !DILocation(line: 1494, column: 2, scope: !7339)
!7375 = !DILocation(line: 1495, column: 1, scope: !7339)
!7376 = distinct !DISubprogram(name: "loclike_flush_tars", scope: !3, file: !3, line: 1497, type: !4324, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7377 = !DILocalVariable(name: "con", arg: 1, scope: !7376, file: !3, line: 1497, type: !2708)
!7378 = !DILocation(line: 1497, column: 45, scope: !7376)
!7379 = !DILocalVariable(name: "list", arg: 2, scope: !7376, file: !3, line: 1497, type: !1287)
!7380 = !DILocation(line: 1497, column: 60, scope: !7376)
!7381 = !DILocalVariable(name: "no_copy", arg: 3, scope: !7376, file: !3, line: 1497, type: !1111)
!7382 = !DILocation(line: 1497, column: 71, scope: !7376)
!7383 = !DILocation(line: 1499, column: 6, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 1499, column: 6)
!7385 = !DILocation(line: 1499, column: 10, scope: !7384)
!7386 = !DILocation(line: 1499, column: 13, scope: !7384)
!7387 = !DILocation(line: 1499, column: 6, scope: !7376)
!7388 = !DILocalVariable(name: "data", scope: !7389, file: !3, line: 1500, type: !2367)
!7389 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 1499, column: 19)
!7390 = !DILocation(line: 1500, column: 26, scope: !7389)
!7391 = !DILocation(line: 1500, column: 33, scope: !7389)
!7392 = !DILocation(line: 1500, column: 38, scope: !7389)
!7393 = !DILocalVariable(name: "ct", scope: !7389, file: !3, line: 1501, type: !2244)
!7394 = !DILocation(line: 1501, column: 22, scope: !7389)
!7395 = !DILocation(line: 1501, column: 27, scope: !7389)
!7396 = !DILocation(line: 1501, column: 33, scope: !7389)
!7397 = !DILocation(line: 1504, column: 3, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 1504, column: 3)
!7399 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 1504, column: 3)
!7400 = !DILocation(line: 1504, column: 3, scope: !7399)
!7401 = !DILocalVariable(name: "ctn", scope: !7402, file: !3, line: 1504, type: !2244)
!7402 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 1504, column: 3)
!7403 = !DILocation(line: 1504, column: 3, scope: !7402)
!7404 = !DILocation(line: 1504, column: 3, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 1504, column: 3)
!7406 = !DILocation(line: 1504, column: 3, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7405, file: !3, line: 1504, column: 3)
!7408 = !DILocation(line: 1505, column: 2, scope: !7389)
!7409 = !DILocation(line: 1506, column: 1, scope: !7376)
!7410 = distinct !DISubprogram(name: "loclike_evaluate", scope: !3, file: !3, line: 1508, type: !4392, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7411 = !DILocalVariable(name: "con", arg: 1, scope: !7410, file: !3, line: 1508, type: !2708)
!7412 = !DILocation(line: 1508, column: 43, scope: !7410)
!7413 = !DILocalVariable(name: "cob", arg: 2, scope: !7410, file: !3, line: 1508, type: !2733)
!7414 = !DILocation(line: 1508, column: 63, scope: !7410)
!7415 = !DILocalVariable(name: "targets", arg: 3, scope: !7410, file: !3, line: 1508, type: !1287)
!7416 = !DILocation(line: 1508, column: 78, scope: !7410)
!7417 = !DILocalVariable(name: "data", scope: !7410, file: !3, line: 1510, type: !2367)
!7418 = !DILocation(line: 1510, column: 25, scope: !7410)
!7419 = !DILocation(line: 1510, column: 32, scope: !7410)
!7420 = !DILocation(line: 1510, column: 37, scope: !7410)
!7421 = !DILocalVariable(name: "ct", scope: !7410, file: !3, line: 1511, type: !2244)
!7422 = !DILocation(line: 1511, column: 21, scope: !7410)
!7423 = !DILocation(line: 1511, column: 26, scope: !7410)
!7424 = !DILocation(line: 1511, column: 35, scope: !7410)
!7425 = !DILocation(line: 1513, column: 6, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 1513, column: 6)
!7427 = !DILocation(line: 1513, column: 6, scope: !7410)
!7428 = !DILocalVariable(name: "offset", scope: !7429, file: !3, line: 1514, type: !469)
!7429 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 1513, column: 29)
!7430 = !DILocation(line: 1514, column: 9, scope: !7429)
!7431 = !DILocation(line: 1516, column: 7, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1516, column: 7)
!7433 = !DILocation(line: 1516, column: 13, scope: !7432)
!7434 = !DILocation(line: 1516, column: 18, scope: !7432)
!7435 = !DILocation(line: 1516, column: 7, scope: !7429)
!7436 = !DILocation(line: 1517, column: 15, scope: !7432)
!7437 = !DILocation(line: 1517, column: 23, scope: !7432)
!7438 = !DILocation(line: 1517, column: 28, scope: !7432)
!7439 = !DILocation(line: 1517, column: 4, scope: !7432)
!7440 = !DILocation(line: 1519, column: 7, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1519, column: 7)
!7442 = !DILocation(line: 1519, column: 13, scope: !7441)
!7443 = !DILocation(line: 1519, column: 18, scope: !7441)
!7444 = !DILocation(line: 1519, column: 7, scope: !7429)
!7445 = !DILocation(line: 1520, column: 24, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7441, file: !3, line: 1519, column: 31)
!7447 = !DILocation(line: 1520, column: 28, scope: !7446)
!7448 = !DILocation(line: 1520, column: 4, scope: !7446)
!7449 = !DILocation(line: 1520, column: 9, scope: !7446)
!7450 = !DILocation(line: 1520, column: 22, scope: !7446)
!7451 = !DILocation(line: 1522, column: 8, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 1522, column: 8)
!7453 = !DILocation(line: 1522, column: 14, scope: !7452)
!7454 = !DILocation(line: 1522, column: 19, scope: !7452)
!7455 = !DILocation(line: 1522, column: 8, scope: !7446)
!7456 = !DILocation(line: 1522, column: 39, scope: !7452)
!7457 = !DILocation(line: 1522, column: 44, scope: !7452)
!7458 = !DILocation(line: 1522, column: 57, scope: !7452)
!7459 = !DILocation(line: 1523, column: 25, scope: !7446)
!7460 = !DILocation(line: 1523, column: 4, scope: !7446)
!7461 = !DILocation(line: 1523, column: 9, scope: !7446)
!7462 = !DILocation(line: 1523, column: 22, scope: !7446)
!7463 = !DILocation(line: 1524, column: 3, scope: !7446)
!7464 = !DILocation(line: 1525, column: 7, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1525, column: 7)
!7466 = !DILocation(line: 1525, column: 13, scope: !7465)
!7467 = !DILocation(line: 1525, column: 18, scope: !7465)
!7468 = !DILocation(line: 1525, column: 7, scope: !7429)
!7469 = !DILocation(line: 1526, column: 24, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1525, column: 31)
!7471 = !DILocation(line: 1526, column: 28, scope: !7470)
!7472 = !DILocation(line: 1526, column: 4, scope: !7470)
!7473 = !DILocation(line: 1526, column: 9, scope: !7470)
!7474 = !DILocation(line: 1526, column: 22, scope: !7470)
!7475 = !DILocation(line: 1528, column: 8, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7470, file: !3, line: 1528, column: 8)
!7477 = !DILocation(line: 1528, column: 14, scope: !7476)
!7478 = !DILocation(line: 1528, column: 19, scope: !7476)
!7479 = !DILocation(line: 1528, column: 8, scope: !7470)
!7480 = !DILocation(line: 1528, column: 39, scope: !7476)
!7481 = !DILocation(line: 1528, column: 44, scope: !7476)
!7482 = !DILocation(line: 1528, column: 57, scope: !7476)
!7483 = !DILocation(line: 1529, column: 25, scope: !7470)
!7484 = !DILocation(line: 1529, column: 4, scope: !7470)
!7485 = !DILocation(line: 1529, column: 9, scope: !7470)
!7486 = !DILocation(line: 1529, column: 22, scope: !7470)
!7487 = !DILocation(line: 1530, column: 3, scope: !7470)
!7488 = !DILocation(line: 1531, column: 7, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1531, column: 7)
!7490 = !DILocation(line: 1531, column: 13, scope: !7489)
!7491 = !DILocation(line: 1531, column: 18, scope: !7489)
!7492 = !DILocation(line: 1531, column: 7, scope: !7429)
!7493 = !DILocation(line: 1532, column: 24, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 1531, column: 31)
!7495 = !DILocation(line: 1532, column: 28, scope: !7494)
!7496 = !DILocation(line: 1532, column: 4, scope: !7494)
!7497 = !DILocation(line: 1532, column: 9, scope: !7494)
!7498 = !DILocation(line: 1532, column: 22, scope: !7494)
!7499 = !DILocation(line: 1534, column: 8, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 1534, column: 8)
!7501 = !DILocation(line: 1534, column: 14, scope: !7500)
!7502 = !DILocation(line: 1534, column: 19, scope: !7500)
!7503 = !DILocation(line: 1534, column: 8, scope: !7494)
!7504 = !DILocation(line: 1534, column: 39, scope: !7500)
!7505 = !DILocation(line: 1534, column: 44, scope: !7500)
!7506 = !DILocation(line: 1534, column: 57, scope: !7500)
!7507 = !DILocation(line: 1535, column: 25, scope: !7494)
!7508 = !DILocation(line: 1535, column: 4, scope: !7494)
!7509 = !DILocation(line: 1535, column: 9, scope: !7494)
!7510 = !DILocation(line: 1535, column: 22, scope: !7494)
!7511 = !DILocation(line: 1536, column: 3, scope: !7494)
!7512 = !DILocation(line: 1537, column: 2, scope: !7429)
!7513 = !DILocation(line: 1538, column: 1, scope: !7410)
!7514 = distinct !DISubprogram(name: "sizelike_id_looper", scope: !3, file: !3, line: 1676, type: !4251, scopeLine: 1677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7515 = !DILocalVariable(name: "con", arg: 1, scope: !7514, file: !3, line: 1676, type: !2708)
!7516 = !DILocation(line: 1676, column: 45, scope: !7514)
!7517 = !DILocalVariable(name: "func", arg: 2, scope: !7514, file: !3, line: 1676, type: !2599)
!7518 = !DILocation(line: 1676, column: 67, scope: !7514)
!7519 = !DILocalVariable(name: "userdata", arg: 3, scope: !7514, file: !3, line: 1676, type: !431)
!7520 = !DILocation(line: 1676, column: 79, scope: !7514)
!7521 = !DILocalVariable(name: "data", scope: !7514, file: !3, line: 1678, type: !2375)
!7522 = !DILocation(line: 1678, column: 23, scope: !7514)
!7523 = !DILocation(line: 1678, column: 30, scope: !7514)
!7524 = !DILocation(line: 1678, column: 35, scope: !7514)
!7525 = !DILocation(line: 1681, column: 2, scope: !7514)
!7526 = !DILocation(line: 1681, column: 7, scope: !7514)
!7527 = !DILocation(line: 1681, column: 20, scope: !7514)
!7528 = !DILocation(line: 1681, column: 26, scope: !7514)
!7529 = !DILocation(line: 1681, column: 12, scope: !7514)
!7530 = !DILocation(line: 1681, column: 38, scope: !7514)
!7531 = !DILocation(line: 1682, column: 1, scope: !7514)
!7532 = distinct !DISubprogram(name: "sizelike_new_data", scope: !3, file: !3, line: 1669, type: !2610, scopeLine: 1670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7533 = !DILocalVariable(name: "cdata", arg: 1, scope: !7532, file: !3, line: 1669, type: !431)
!7534 = !DILocation(line: 1669, column: 37, scope: !7532)
!7535 = !DILocalVariable(name: "data", scope: !7532, file: !3, line: 1671, type: !2375)
!7536 = !DILocation(line: 1671, column: 23, scope: !7532)
!7537 = !DILocation(line: 1671, column: 53, scope: !7532)
!7538 = !DILocation(line: 1671, column: 30, scope: !7532)
!7539 = !DILocation(line: 1673, column: 2, scope: !7532)
!7540 = !DILocation(line: 1673, column: 8, scope: !7532)
!7541 = !DILocation(line: 1673, column: 13, scope: !7532)
!7542 = !DILocation(line: 1674, column: 1, scope: !7532)
!7543 = distinct !DISubprogram(name: "sizelike_get_tars", scope: !3, file: !3, line: 1684, type: !4285, scopeLine: 1685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7544 = !DILocalVariable(name: "con", arg: 1, scope: !7543, file: !3, line: 1684, type: !2708)
!7545 = !DILocation(line: 1684, column: 43, scope: !7543)
!7546 = !DILocalVariable(name: "list", arg: 2, scope: !7543, file: !3, line: 1684, type: !1287)
!7547 = !DILocation(line: 1684, column: 58, scope: !7543)
!7548 = !DILocation(line: 1686, column: 6, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 1686, column: 6)
!7550 = !DILocation(line: 1686, column: 10, scope: !7549)
!7551 = !DILocation(line: 1686, column: 13, scope: !7549)
!7552 = !DILocation(line: 1686, column: 6, scope: !7543)
!7553 = !DILocalVariable(name: "data", scope: !7554, file: !3, line: 1687, type: !2375)
!7554 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 1686, column: 19)
!7555 = !DILocation(line: 1687, column: 24, scope: !7554)
!7556 = !DILocation(line: 1687, column: 31, scope: !7554)
!7557 = !DILocation(line: 1687, column: 36, scope: !7554)
!7558 = !DILocalVariable(name: "ct", scope: !7554, file: !3, line: 1688, type: !2244)
!7559 = !DILocation(line: 1688, column: 22, scope: !7554)
!7560 = !DILocation(line: 1691, column: 3, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 1691, column: 3)
!7562 = !DILocation(line: 1691, column: 3, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 1691, column: 3)
!7564 = !DILocation(line: 1691, column: 3, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 1691, column: 3)
!7566 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 1691, column: 3)
!7567 = !DILocation(line: 1691, column: 3, scope: !7566)
!7568 = !DILocalVariable(name: "pchan", scope: !7569, file: !3, line: 1691, type: !399)
!7569 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 1691, column: 3)
!7570 = !DILocation(line: 1691, column: 3, scope: !7569)
!7571 = !DILocation(line: 1691, column: 3, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 1691, column: 3)
!7573 = !DILocation(line: 1691, column: 3, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 1691, column: 3)
!7575 = !DILocation(line: 1691, column: 3, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 1691, column: 3)
!7577 = !DILocation(line: 1693, column: 3, scope: !7554)
!7578 = !DILocation(line: 1696, column: 2, scope: !7543)
!7579 = !DILocation(line: 1697, column: 1, scope: !7543)
!7580 = distinct !DISubprogram(name: "sizelike_flush_tars", scope: !3, file: !3, line: 1699, type: !4324, scopeLine: 1700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7581 = !DILocalVariable(name: "con", arg: 1, scope: !7580, file: !3, line: 1699, type: !2708)
!7582 = !DILocation(line: 1699, column: 46, scope: !7580)
!7583 = !DILocalVariable(name: "list", arg: 2, scope: !7580, file: !3, line: 1699, type: !1287)
!7584 = !DILocation(line: 1699, column: 61, scope: !7580)
!7585 = !DILocalVariable(name: "no_copy", arg: 3, scope: !7580, file: !3, line: 1699, type: !1111)
!7586 = !DILocation(line: 1699, column: 72, scope: !7580)
!7587 = !DILocation(line: 1701, column: 6, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 1701, column: 6)
!7589 = !DILocation(line: 1701, column: 10, scope: !7588)
!7590 = !DILocation(line: 1701, column: 13, scope: !7588)
!7591 = !DILocation(line: 1701, column: 6, scope: !7580)
!7592 = !DILocalVariable(name: "data", scope: !7593, file: !3, line: 1702, type: !2375)
!7593 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 1701, column: 19)
!7594 = !DILocation(line: 1702, column: 24, scope: !7593)
!7595 = !DILocation(line: 1702, column: 31, scope: !7593)
!7596 = !DILocation(line: 1702, column: 36, scope: !7593)
!7597 = !DILocalVariable(name: "ct", scope: !7593, file: !3, line: 1703, type: !2244)
!7598 = !DILocation(line: 1703, column: 22, scope: !7593)
!7599 = !DILocation(line: 1703, column: 27, scope: !7593)
!7600 = !DILocation(line: 1703, column: 33, scope: !7593)
!7601 = !DILocation(line: 1706, column: 3, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 1706, column: 3)
!7603 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 1706, column: 3)
!7604 = !DILocation(line: 1706, column: 3, scope: !7603)
!7605 = !DILocalVariable(name: "ctn", scope: !7606, file: !3, line: 1706, type: !2244)
!7606 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 1706, column: 3)
!7607 = !DILocation(line: 1706, column: 3, scope: !7606)
!7608 = !DILocation(line: 1706, column: 3, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 1706, column: 3)
!7610 = !DILocation(line: 1706, column: 3, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1706, column: 3)
!7612 = !DILocation(line: 1707, column: 2, scope: !7593)
!7613 = !DILocation(line: 1708, column: 1, scope: !7580)
!7614 = distinct !DISubprogram(name: "sizelike_evaluate", scope: !3, file: !3, line: 1710, type: !4392, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7615 = !DILocalVariable(name: "con", arg: 1, scope: !7614, file: !3, line: 1710, type: !2708)
!7616 = !DILocation(line: 1710, column: 44, scope: !7614)
!7617 = !DILocalVariable(name: "cob", arg: 2, scope: !7614, file: !3, line: 1710, type: !2733)
!7618 = !DILocation(line: 1710, column: 64, scope: !7614)
!7619 = !DILocalVariable(name: "targets", arg: 3, scope: !7614, file: !3, line: 1710, type: !1287)
!7620 = !DILocation(line: 1710, column: 79, scope: !7614)
!7621 = !DILocalVariable(name: "data", scope: !7614, file: !3, line: 1712, type: !2375)
!7622 = !DILocation(line: 1712, column: 23, scope: !7614)
!7623 = !DILocation(line: 1712, column: 30, scope: !7614)
!7624 = !DILocation(line: 1712, column: 35, scope: !7614)
!7625 = !DILocalVariable(name: "ct", scope: !7614, file: !3, line: 1713, type: !2244)
!7626 = !DILocation(line: 1713, column: 21, scope: !7614)
!7627 = !DILocation(line: 1713, column: 26, scope: !7614)
!7628 = !DILocation(line: 1713, column: 35, scope: !7614)
!7629 = !DILocation(line: 1715, column: 6, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 1715, column: 6)
!7631 = !DILocation(line: 1715, column: 6, scope: !7614)
!7632 = !DILocalVariable(name: "obsize", scope: !7633, file: !3, line: 1716, type: !469)
!7633 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 1715, column: 29)
!7634 = !DILocation(line: 1716, column: 9, scope: !7633)
!7635 = !DILocalVariable(name: "size", scope: !7633, file: !3, line: 1716, type: !469)
!7636 = !DILocation(line: 1716, column: 20, scope: !7633)
!7637 = !DILocation(line: 1718, column: 16, scope: !7633)
!7638 = !DILocation(line: 1718, column: 22, scope: !7633)
!7639 = !DILocation(line: 1718, column: 26, scope: !7633)
!7640 = !DILocation(line: 1718, column: 3, scope: !7633)
!7641 = !DILocation(line: 1719, column: 16, scope: !7633)
!7642 = !DILocation(line: 1719, column: 24, scope: !7633)
!7643 = !DILocation(line: 1719, column: 29, scope: !7633)
!7644 = !DILocation(line: 1719, column: 3, scope: !7633)
!7645 = !DILocation(line: 1721, column: 8, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1721, column: 7)
!7647 = !DILocation(line: 1721, column: 14, scope: !7646)
!7648 = !DILocation(line: 1721, column: 19, scope: !7646)
!7649 = !DILocation(line: 1721, column: 33, scope: !7646)
!7650 = !DILocation(line: 1721, column: 37, scope: !7646)
!7651 = !DILocation(line: 1721, column: 47, scope: !7646)
!7652 = !DILocation(line: 1721, column: 7, scope: !7633)
!7653 = !DILocation(line: 1722, column: 8, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 1722, column: 8)
!7655 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 1721, column: 54)
!7656 = !DILocation(line: 1722, column: 14, scope: !7654)
!7657 = !DILocation(line: 1722, column: 19, scope: !7654)
!7658 = !DILocation(line: 1722, column: 8, scope: !7655)
!7659 = !DILocation(line: 1723, column: 17, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 1722, column: 38)
!7661 = !DILocation(line: 1723, column: 27, scope: !7660)
!7662 = !DILocation(line: 1723, column: 5, scope: !7660)
!7663 = !DILocation(line: 1723, column: 13, scope: !7660)
!7664 = !DILocation(line: 1724, column: 15, scope: !7660)
!7665 = !DILocation(line: 1724, column: 20, scope: !7660)
!7666 = !DILocation(line: 1724, column: 31, scope: !7660)
!7667 = !DILocation(line: 1724, column: 41, scope: !7660)
!7668 = !DILocation(line: 1724, column: 39, scope: !7660)
!7669 = !DILocation(line: 1724, column: 5, scope: !7660)
!7670 = !DILocation(line: 1725, column: 4, scope: !7660)
!7671 = !DILocation(line: 1727, column: 15, scope: !7654)
!7672 = !DILocation(line: 1727, column: 20, scope: !7654)
!7673 = !DILocation(line: 1727, column: 31, scope: !7654)
!7674 = !DILocation(line: 1727, column: 41, scope: !7654)
!7675 = !DILocation(line: 1727, column: 39, scope: !7654)
!7676 = !DILocation(line: 1727, column: 5, scope: !7654)
!7677 = !DILocation(line: 1728, column: 3, scope: !7655)
!7678 = !DILocation(line: 1729, column: 8, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1729, column: 7)
!7680 = !DILocation(line: 1729, column: 14, scope: !7679)
!7681 = !DILocation(line: 1729, column: 19, scope: !7679)
!7682 = !DILocation(line: 1729, column: 33, scope: !7679)
!7683 = !DILocation(line: 1729, column: 37, scope: !7679)
!7684 = !DILocation(line: 1729, column: 47, scope: !7679)
!7685 = !DILocation(line: 1729, column: 7, scope: !7633)
!7686 = !DILocation(line: 1730, column: 8, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 1730, column: 8)
!7688 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 1729, column: 54)
!7689 = !DILocation(line: 1730, column: 14, scope: !7687)
!7690 = !DILocation(line: 1730, column: 19, scope: !7687)
!7691 = !DILocation(line: 1730, column: 8, scope: !7688)
!7692 = !DILocation(line: 1731, column: 17, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 1730, column: 38)
!7694 = !DILocation(line: 1731, column: 27, scope: !7693)
!7695 = !DILocation(line: 1731, column: 5, scope: !7693)
!7696 = !DILocation(line: 1731, column: 13, scope: !7693)
!7697 = !DILocation(line: 1732, column: 15, scope: !7693)
!7698 = !DILocation(line: 1732, column: 20, scope: !7693)
!7699 = !DILocation(line: 1732, column: 31, scope: !7693)
!7700 = !DILocation(line: 1732, column: 41, scope: !7693)
!7701 = !DILocation(line: 1732, column: 39, scope: !7693)
!7702 = !DILocation(line: 1732, column: 5, scope: !7693)
!7703 = !DILocation(line: 1733, column: 4, scope: !7693)
!7704 = !DILocation(line: 1735, column: 15, scope: !7687)
!7705 = !DILocation(line: 1735, column: 20, scope: !7687)
!7706 = !DILocation(line: 1735, column: 31, scope: !7687)
!7707 = !DILocation(line: 1735, column: 41, scope: !7687)
!7708 = !DILocation(line: 1735, column: 39, scope: !7687)
!7709 = !DILocation(line: 1735, column: 5, scope: !7687)
!7710 = !DILocation(line: 1736, column: 3, scope: !7688)
!7711 = !DILocation(line: 1737, column: 8, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1737, column: 7)
!7713 = !DILocation(line: 1737, column: 14, scope: !7712)
!7714 = !DILocation(line: 1737, column: 19, scope: !7712)
!7715 = !DILocation(line: 1737, column: 33, scope: !7712)
!7716 = !DILocation(line: 1737, column: 37, scope: !7712)
!7717 = !DILocation(line: 1737, column: 47, scope: !7712)
!7718 = !DILocation(line: 1737, column: 7, scope: !7633)
!7719 = !DILocation(line: 1738, column: 8, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 1738, column: 8)
!7721 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 1737, column: 54)
!7722 = !DILocation(line: 1738, column: 14, scope: !7720)
!7723 = !DILocation(line: 1738, column: 19, scope: !7720)
!7724 = !DILocation(line: 1738, column: 8, scope: !7721)
!7725 = !DILocation(line: 1739, column: 17, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1738, column: 38)
!7727 = !DILocation(line: 1739, column: 27, scope: !7726)
!7728 = !DILocation(line: 1739, column: 5, scope: !7726)
!7729 = !DILocation(line: 1739, column: 13, scope: !7726)
!7730 = !DILocation(line: 1740, column: 15, scope: !7726)
!7731 = !DILocation(line: 1740, column: 20, scope: !7726)
!7732 = !DILocation(line: 1740, column: 31, scope: !7726)
!7733 = !DILocation(line: 1740, column: 41, scope: !7726)
!7734 = !DILocation(line: 1740, column: 39, scope: !7726)
!7735 = !DILocation(line: 1740, column: 5, scope: !7726)
!7736 = !DILocation(line: 1741, column: 4, scope: !7726)
!7737 = !DILocation(line: 1743, column: 15, scope: !7720)
!7738 = !DILocation(line: 1743, column: 20, scope: !7720)
!7739 = !DILocation(line: 1743, column: 31, scope: !7720)
!7740 = !DILocation(line: 1743, column: 41, scope: !7720)
!7741 = !DILocation(line: 1743, column: 39, scope: !7720)
!7742 = !DILocation(line: 1743, column: 5, scope: !7720)
!7743 = !DILocation(line: 1744, column: 3, scope: !7721)
!7744 = !DILocation(line: 1745, column: 2, scope: !7633)
!7745 = !DILocation(line: 1746, column: 1, scope: !7614)
!7746 = distinct !DISubprogram(name: "pycon_free", scope: !3, file: !3, line: 1882, type: !3246, scopeLine: 1883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7747 = !DILocalVariable(name: "con", arg: 1, scope: !7746, file: !3, line: 1882, type: !2708)
!7748 = !DILocation(line: 1882, column: 37, scope: !7746)
!7749 = !DILocalVariable(name: "data", scope: !7746, file: !3, line: 1884, type: !2383)
!7750 = !DILocation(line: 1884, column: 21, scope: !7746)
!7751 = !DILocation(line: 1884, column: 28, scope: !7746)
!7752 = !DILocation(line: 1884, column: 33, scope: !7746)
!7753 = !DILocation(line: 1887, column: 19, scope: !7746)
!7754 = !DILocation(line: 1887, column: 25, scope: !7746)
!7755 = !DILocation(line: 1887, column: 2, scope: !7746)
!7756 = !DILocation(line: 1888, column: 2, scope: !7746)
!7757 = !DILocation(line: 1888, column: 12, scope: !7746)
!7758 = !DILocation(line: 1888, column: 18, scope: !7746)
!7759 = !DILocation(line: 1891, column: 17, scope: !7746)
!7760 = !DILocation(line: 1891, column: 23, scope: !7746)
!7761 = !DILocation(line: 1891, column: 2, scope: !7746)
!7762 = !DILocation(line: 1892, column: 1, scope: !7746)
!7763 = distinct !DISubprogram(name: "pycon_id_looper", scope: !3, file: !3, line: 1926, type: !4251, scopeLine: 1927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7764 = !DILocalVariable(name: "con", arg: 1, scope: !7763, file: !3, line: 1926, type: !2708)
!7765 = !DILocation(line: 1926, column: 42, scope: !7763)
!7766 = !DILocalVariable(name: "func", arg: 2, scope: !7763, file: !3, line: 1926, type: !2599)
!7767 = !DILocation(line: 1926, column: 64, scope: !7763)
!7768 = !DILocalVariable(name: "userdata", arg: 3, scope: !7763, file: !3, line: 1926, type: !431)
!7769 = !DILocation(line: 1926, column: 76, scope: !7763)
!7770 = !DILocalVariable(name: "data", scope: !7763, file: !3, line: 1928, type: !2383)
!7771 = !DILocation(line: 1928, column: 21, scope: !7763)
!7772 = !DILocation(line: 1928, column: 28, scope: !7763)
!7773 = !DILocation(line: 1928, column: 33, scope: !7763)
!7774 = !DILocalVariable(name: "ct", scope: !7763, file: !3, line: 1929, type: !2244)
!7775 = !DILocation(line: 1929, column: 21, scope: !7763)
!7776 = !DILocation(line: 1932, column: 12, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 1932, column: 2)
!7778 = !DILocation(line: 1932, column: 18, scope: !7777)
!7779 = !DILocation(line: 1932, column: 26, scope: !7777)
!7780 = !DILocation(line: 1932, column: 10, scope: !7777)
!7781 = !DILocation(line: 1932, column: 7, scope: !7777)
!7782 = !DILocation(line: 1932, column: 33, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 1932, column: 2)
!7784 = !DILocation(line: 1932, column: 2, scope: !7777)
!7785 = !DILocation(line: 1933, column: 3, scope: !7783)
!7786 = !DILocation(line: 1933, column: 8, scope: !7783)
!7787 = !DILocation(line: 1933, column: 21, scope: !7783)
!7788 = !DILocation(line: 1933, column: 25, scope: !7783)
!7789 = !DILocation(line: 1933, column: 13, scope: !7783)
!7790 = !DILocation(line: 1933, column: 37, scope: !7783)
!7791 = !DILocation(line: 1932, column: 42, scope: !7783)
!7792 = !DILocation(line: 1932, column: 46, scope: !7783)
!7793 = !DILocation(line: 1932, column: 40, scope: !7783)
!7794 = !DILocation(line: 1932, column: 2, scope: !7783)
!7795 = distinct !{!7795, !7784, !7796}
!7796 = !DILocation(line: 1933, column: 45, scope: !7777)
!7797 = !DILocation(line: 1936, column: 2, scope: !7763)
!7798 = !DILocation(line: 1936, column: 7, scope: !7763)
!7799 = !DILocation(line: 1936, column: 20, scope: !7763)
!7800 = !DILocation(line: 1936, column: 26, scope: !7763)
!7801 = !DILocation(line: 1936, column: 12, scope: !7763)
!7802 = !DILocation(line: 1936, column: 38, scope: !7763)
!7803 = !DILocation(line: 1937, column: 1, scope: !7763)
!7804 = distinct !DISubprogram(name: "pycon_copy", scope: !3, file: !3, line: 1894, type: !7805, scopeLine: 1895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7805 = !DISubroutineType(types: !7806)
!7806 = !{null, !2708, !2708}
!7807 = !DILocalVariable(name: "con", arg: 1, scope: !7804, file: !3, line: 1894, type: !2708)
!7808 = !DILocation(line: 1894, column: 37, scope: !7804)
!7809 = !DILocalVariable(name: "srccon", arg: 2, scope: !7804, file: !3, line: 1894, type: !2708)
!7810 = !DILocation(line: 1894, column: 55, scope: !7804)
!7811 = !DILocalVariable(name: "pycon", scope: !7804, file: !3, line: 1896, type: !2383)
!7812 = !DILocation(line: 1896, column: 21, scope: !7804)
!7813 = !DILocation(line: 1896, column: 50, scope: !7804)
!7814 = !DILocation(line: 1896, column: 55, scope: !7804)
!7815 = !DILocation(line: 1896, column: 29, scope: !7804)
!7816 = !DILocalVariable(name: "opycon", scope: !7804, file: !3, line: 1897, type: !2383)
!7817 = !DILocation(line: 1897, column: 21, scope: !7804)
!7818 = !DILocation(line: 1897, column: 51, scope: !7804)
!7819 = !DILocation(line: 1897, column: 59, scope: !7804)
!7820 = !DILocation(line: 1897, column: 30, scope: !7804)
!7821 = !DILocation(line: 1899, column: 33, scope: !7804)
!7822 = !DILocation(line: 1899, column: 41, scope: !7804)
!7823 = !DILocation(line: 1899, column: 16, scope: !7804)
!7824 = !DILocation(line: 1899, column: 2, scope: !7804)
!7825 = !DILocation(line: 1899, column: 9, scope: !7804)
!7826 = !DILocation(line: 1899, column: 14, scope: !7804)
!7827 = !DILocation(line: 1900, column: 21, scope: !7804)
!7828 = !DILocation(line: 1900, column: 28, scope: !7804)
!7829 = !DILocation(line: 1900, column: 38, scope: !7804)
!7830 = !DILocation(line: 1900, column: 46, scope: !7804)
!7831 = !DILocation(line: 1900, column: 2, scope: !7804)
!7832 = !DILocation(line: 1901, column: 1, scope: !7804)
!7833 = distinct !DISubprogram(name: "pycon_new_data", scope: !3, file: !3, line: 1903, type: !2610, scopeLine: 1904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7834 = !DILocalVariable(name: "cdata", arg: 1, scope: !7833, file: !3, line: 1903, type: !431)
!7835 = !DILocation(line: 1903, column: 34, scope: !7833)
!7836 = !DILocalVariable(name: "data", scope: !7833, file: !3, line: 1905, type: !2383)
!7837 = !DILocation(line: 1905, column: 21, scope: !7833)
!7838 = !DILocation(line: 1905, column: 49, scope: !7833)
!7839 = !DILocation(line: 1905, column: 28, scope: !7833)
!7840 = !DILocation(line: 1908, column: 15, scope: !7833)
!7841 = !DILocation(line: 1908, column: 2, scope: !7833)
!7842 = !DILocation(line: 1908, column: 8, scope: !7833)
!7843 = !DILocation(line: 1908, column: 13, scope: !7833)
!7844 = !DILocation(line: 1909, column: 2, scope: !7833)
!7845 = !DILocation(line: 1909, column: 8, scope: !7833)
!7846 = !DILocation(line: 1909, column: 14, scope: !7833)
!7847 = !DILocation(line: 1909, column: 19, scope: !7833)
!7848 = !DILocation(line: 1910, column: 1, scope: !7833)
!7849 = distinct !DISubprogram(name: "pycon_get_tars", scope: !3, file: !3, line: 1912, type: !4285, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7850 = !DILocalVariable(name: "con", arg: 1, scope: !7849, file: !3, line: 1912, type: !2708)
!7851 = !DILocation(line: 1912, column: 40, scope: !7849)
!7852 = !DILocalVariable(name: "list", arg: 2, scope: !7849, file: !3, line: 1912, type: !1287)
!7853 = !DILocation(line: 1912, column: 55, scope: !7849)
!7854 = !DILocation(line: 1914, column: 6, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 1914, column: 6)
!7856 = !DILocation(line: 1914, column: 10, scope: !7855)
!7857 = !DILocation(line: 1914, column: 13, scope: !7855)
!7858 = !DILocation(line: 1914, column: 6, scope: !7849)
!7859 = !DILocalVariable(name: "data", scope: !7860, file: !3, line: 1915, type: !2383)
!7860 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 1914, column: 19)
!7861 = !DILocation(line: 1915, column: 22, scope: !7860)
!7862 = !DILocation(line: 1915, column: 29, scope: !7860)
!7863 = !DILocation(line: 1915, column: 34, scope: !7860)
!7864 = !DILocation(line: 1917, column: 17, scope: !7860)
!7865 = !DILocation(line: 1917, column: 23, scope: !7860)
!7866 = !DILocation(line: 1917, column: 31, scope: !7860)
!7867 = !DILocation(line: 1917, column: 3, scope: !7860)
!7868 = !DILocation(line: 1917, column: 9, scope: !7860)
!7869 = !DILocation(line: 1917, column: 15, scope: !7860)
!7870 = !DILocation(line: 1918, column: 16, scope: !7860)
!7871 = !DILocation(line: 1918, column: 22, scope: !7860)
!7872 = !DILocation(line: 1918, column: 30, scope: !7860)
!7873 = !DILocation(line: 1918, column: 3, scope: !7860)
!7874 = !DILocation(line: 1918, column: 9, scope: !7860)
!7875 = !DILocation(line: 1918, column: 14, scope: !7860)
!7876 = !DILocation(line: 1920, column: 10, scope: !7860)
!7877 = !DILocation(line: 1920, column: 16, scope: !7860)
!7878 = !DILocation(line: 1920, column: 3, scope: !7860)
!7879 = !DILocation(line: 1923, column: 2, scope: !7849)
!7880 = !DILocation(line: 1924, column: 1, scope: !7849)
!7881 = distinct !DISubprogram(name: "pycon_get_tarmat", scope: !3, file: !3, line: 1940, type: !4360, scopeLine: 1941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7882 = !DILocalVariable(name: "con", arg: 1, scope: !7881, file: !3, line: 1940, type: !2708)
!7883 = !DILocation(line: 1940, column: 43, scope: !7881)
!7884 = !DILocalVariable(name: "cob", arg: 2, scope: !7881, file: !3, line: 1940, type: !2733)
!7885 = !DILocation(line: 1940, column: 63, scope: !7881)
!7886 = !DILocalVariable(name: "ct", arg: 3, scope: !7881, file: !3, line: 1940, type: !2244)
!7887 = !DILocation(line: 1940, column: 87, scope: !7881)
!7888 = !DILocalVariable(name: "UNUSED_ctime", arg: 4, scope: !7881, file: !3, line: 1940, type: !467)
!7889 = !DILocation(line: 1940, column: 97, scope: !7881)
!7890 = !DILocation(line: 1946, column: 6, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7881, file: !3, line: 1946, column: 6)
!7892 = !DILocation(line: 1946, column: 6, scope: !7881)
!7893 = !DILocation(line: 1949, column: 7, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 1949, column: 7)
!7895 = distinct !DILexicalBlock(scope: !7891, file: !3, line: 1946, column: 29)
!7896 = !DILocation(line: 1949, column: 11, scope: !7894)
!7897 = !DILocation(line: 1949, column: 16, scope: !7894)
!7898 = !DILocation(line: 1949, column: 21, scope: !7894)
!7899 = !DILocation(line: 1949, column: 7, scope: !7895)
!7900 = !DILocation(line: 1950, column: 8, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 1950, column: 8)
!7902 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 1949, column: 34)
!7903 = !DILocation(line: 1950, column: 12, scope: !7901)
!7904 = !DILocation(line: 1950, column: 17, scope: !7901)
!7905 = !DILocation(line: 1950, column: 29, scope: !7901)
!7906 = !DILocation(line: 1950, column: 8, scope: !7902)
!7907 = !DILocation(line: 1951, column: 34, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 1950, column: 38)
!7909 = !DILocation(line: 1951, column: 39, scope: !7908)
!7910 = !DILocation(line: 1951, column: 46, scope: !7908)
!7911 = !DILocation(line: 1951, column: 50, scope: !7908)
!7912 = !DILocation(line: 1951, column: 5, scope: !7908)
!7913 = !DILocation(line: 1952, column: 4, scope: !7908)
!7914 = !DILocation(line: 1953, column: 3, scope: !7902)
!7915 = !DILocation(line: 1959, column: 29, scope: !7895)
!7916 = !DILocation(line: 1959, column: 33, scope: !7895)
!7917 = !DILocation(line: 1959, column: 38, scope: !7895)
!7918 = !DILocation(line: 1959, column: 42, scope: !7895)
!7919 = !DILocation(line: 1959, column: 53, scope: !7895)
!7920 = !DILocation(line: 1959, column: 57, scope: !7895)
!7921 = !DILocation(line: 1959, column: 89, scope: !7895)
!7922 = !DILocation(line: 1959, column: 93, scope: !7895)
!7923 = !DILocation(line: 1959, column: 100, scope: !7895)
!7924 = !DILocation(line: 1959, column: 105, scope: !7895)
!7925 = !DILocation(line: 1959, column: 3, scope: !7895)
!7926 = !DILocation(line: 1966, column: 2, scope: !7895)
!7927 = !DILocation(line: 1967, column: 11, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7891, file: !3, line: 1967, column: 11)
!7929 = !DILocation(line: 1967, column: 11, scope: !7891)
!7930 = !DILocation(line: 1968, column: 11, scope: !7928)
!7931 = !DILocation(line: 1968, column: 15, scope: !7928)
!7932 = !DILocation(line: 1968, column: 3, scope: !7928)
!7933 = !DILocation(line: 1969, column: 1, scope: !7881)
!7934 = distinct !DISubprogram(name: "pycon_evaluate", scope: !3, file: !3, line: 1971, type: !4392, scopeLine: 1972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7935 = !DILocalVariable(name: "con", arg: 1, scope: !7934, file: !3, line: 1971, type: !2708)
!7936 = !DILocation(line: 1971, column: 41, scope: !7934)
!7937 = !DILocalVariable(name: "cob", arg: 2, scope: !7934, file: !3, line: 1971, type: !2733)
!7938 = !DILocation(line: 1971, column: 61, scope: !7934)
!7939 = !DILocalVariable(name: "targets", arg: 3, scope: !7934, file: !3, line: 1971, type: !1287)
!7940 = !DILocation(line: 1971, column: 76, scope: !7934)
!7941 = !DILocation(line: 1974, column: 8, scope: !7934)
!7942 = !DILocation(line: 1974, column: 19, scope: !7934)
!7943 = !DILocation(line: 1974, column: 30, scope: !7934)
!7944 = !DILocation(line: 1975, column: 2, scope: !7934)
!7945 = distinct !DISubprogram(name: "actcon_id_looper", scope: !3, file: !3, line: 2021, type: !4251, scopeLine: 2022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7946 = !DILocalVariable(name: "con", arg: 1, scope: !7945, file: !3, line: 2021, type: !2708)
!7947 = !DILocation(line: 2021, column: 43, scope: !7945)
!7948 = !DILocalVariable(name: "func", arg: 2, scope: !7945, file: !3, line: 2021, type: !2599)
!7949 = !DILocation(line: 2021, column: 65, scope: !7945)
!7950 = !DILocalVariable(name: "userdata", arg: 3, scope: !7945, file: !3, line: 2021, type: !431)
!7951 = !DILocation(line: 2021, column: 77, scope: !7945)
!7952 = !DILocalVariable(name: "data", scope: !7945, file: !3, line: 2023, type: !2394)
!7953 = !DILocation(line: 2023, column: 21, scope: !7945)
!7954 = !DILocation(line: 2023, column: 28, scope: !7945)
!7955 = !DILocation(line: 2023, column: 33, scope: !7945)
!7956 = !DILocation(line: 2026, column: 2, scope: !7945)
!7957 = !DILocation(line: 2026, column: 7, scope: !7945)
!7958 = !DILocation(line: 2026, column: 20, scope: !7945)
!7959 = !DILocation(line: 2026, column: 26, scope: !7945)
!7960 = !DILocation(line: 2026, column: 12, scope: !7945)
!7961 = !DILocation(line: 2026, column: 38, scope: !7945)
!7962 = !DILocation(line: 2029, column: 2, scope: !7945)
!7963 = !DILocation(line: 2029, column: 7, scope: !7945)
!7964 = !DILocation(line: 2029, column: 20, scope: !7945)
!7965 = !DILocation(line: 2029, column: 26, scope: !7945)
!7966 = !DILocation(line: 2029, column: 12, scope: !7945)
!7967 = !DILocation(line: 2029, column: 37, scope: !7945)
!7968 = !DILocation(line: 2030, column: 1, scope: !7945)
!7969 = distinct !DISubprogram(name: "actcon_new_data", scope: !3, file: !3, line: 2013, type: !2610, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7970 = !DILocalVariable(name: "cdata", arg: 1, scope: !7969, file: !3, line: 2013, type: !431)
!7971 = !DILocation(line: 2013, column: 35, scope: !7969)
!7972 = !DILocalVariable(name: "data", scope: !7969, file: !3, line: 2015, type: !2394)
!7973 = !DILocation(line: 2015, column: 21, scope: !7969)
!7974 = !DILocation(line: 2015, column: 49, scope: !7969)
!7975 = !DILocation(line: 2015, column: 28, scope: !7969)
!7976 = !DILocation(line: 2018, column: 2, scope: !7969)
!7977 = !DILocation(line: 2018, column: 8, scope: !7969)
!7978 = !DILocation(line: 2018, column: 13, scope: !7969)
!7979 = !DILocation(line: 2019, column: 1, scope: !7969)
!7980 = distinct !DISubprogram(name: "actcon_get_tars", scope: !3, file: !3, line: 2032, type: !4285, scopeLine: 2033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!7981 = !DILocalVariable(name: "con", arg: 1, scope: !7980, file: !3, line: 2032, type: !2708)
!7982 = !DILocation(line: 2032, column: 41, scope: !7980)
!7983 = !DILocalVariable(name: "list", arg: 2, scope: !7980, file: !3, line: 2032, type: !1287)
!7984 = !DILocation(line: 2032, column: 56, scope: !7980)
!7985 = !DILocation(line: 2034, column: 6, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 2034, column: 6)
!7987 = !DILocation(line: 2034, column: 10, scope: !7986)
!7988 = !DILocation(line: 2034, column: 13, scope: !7986)
!7989 = !DILocation(line: 2034, column: 6, scope: !7980)
!7990 = !DILocalVariable(name: "data", scope: !7991, file: !3, line: 2035, type: !2394)
!7991 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 2034, column: 19)
!7992 = !DILocation(line: 2035, column: 22, scope: !7991)
!7993 = !DILocation(line: 2035, column: 29, scope: !7991)
!7994 = !DILocation(line: 2035, column: 34, scope: !7991)
!7995 = !DILocalVariable(name: "ct", scope: !7991, file: !3, line: 2036, type: !2244)
!7996 = !DILocation(line: 2036, column: 22, scope: !7991)
!7997 = !DILocation(line: 2039, column: 3, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 2039, column: 3)
!7999 = !DILocation(line: 2039, column: 3, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 2039, column: 3)
!8001 = !DILocation(line: 2039, column: 3, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 2039, column: 3)
!8003 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 2039, column: 3)
!8004 = !DILocation(line: 2039, column: 3, scope: !8003)
!8005 = !DILocalVariable(name: "pchan", scope: !8006, file: !3, line: 2039, type: !399)
!8006 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 2039, column: 3)
!8007 = !DILocation(line: 2039, column: 3, scope: !8006)
!8008 = !DILocation(line: 2039, column: 3, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 2039, column: 3)
!8010 = !DILocation(line: 2039, column: 3, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 2039, column: 3)
!8012 = !DILocation(line: 2039, column: 3, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 2039, column: 3)
!8014 = !DILocation(line: 2041, column: 3, scope: !7991)
!8015 = !DILocation(line: 2044, column: 2, scope: !7980)
!8016 = !DILocation(line: 2045, column: 1, scope: !7980)
!8017 = distinct !DISubprogram(name: "actcon_flush_tars", scope: !3, file: !3, line: 2047, type: !4324, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8018 = !DILocalVariable(name: "con", arg: 1, scope: !8017, file: !3, line: 2047, type: !2708)
!8019 = !DILocation(line: 2047, column: 44, scope: !8017)
!8020 = !DILocalVariable(name: "list", arg: 2, scope: !8017, file: !3, line: 2047, type: !1287)
!8021 = !DILocation(line: 2047, column: 59, scope: !8017)
!8022 = !DILocalVariable(name: "no_copy", arg: 3, scope: !8017, file: !3, line: 2047, type: !1111)
!8023 = !DILocation(line: 2047, column: 70, scope: !8017)
!8024 = !DILocation(line: 2049, column: 6, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 2049, column: 6)
!8026 = !DILocation(line: 2049, column: 10, scope: !8025)
!8027 = !DILocation(line: 2049, column: 13, scope: !8025)
!8028 = !DILocation(line: 2049, column: 6, scope: !8017)
!8029 = !DILocalVariable(name: "data", scope: !8030, file: !3, line: 2050, type: !2394)
!8030 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 2049, column: 19)
!8031 = !DILocation(line: 2050, column: 22, scope: !8030)
!8032 = !DILocation(line: 2050, column: 29, scope: !8030)
!8033 = !DILocation(line: 2050, column: 34, scope: !8030)
!8034 = !DILocalVariable(name: "ct", scope: !8030, file: !3, line: 2051, type: !2244)
!8035 = !DILocation(line: 2051, column: 22, scope: !8030)
!8036 = !DILocation(line: 2051, column: 27, scope: !8030)
!8037 = !DILocation(line: 2051, column: 33, scope: !8030)
!8038 = !DILocation(line: 2054, column: 3, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 2054, column: 3)
!8040 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2054, column: 3)
!8041 = !DILocation(line: 2054, column: 3, scope: !8040)
!8042 = !DILocalVariable(name: "ctn", scope: !8043, file: !3, line: 2054, type: !2244)
!8043 = distinct !DILexicalBlock(scope: !8039, file: !3, line: 2054, column: 3)
!8044 = !DILocation(line: 2054, column: 3, scope: !8043)
!8045 = !DILocation(line: 2054, column: 3, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 2054, column: 3)
!8047 = !DILocation(line: 2054, column: 3, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 2054, column: 3)
!8049 = !DILocation(line: 2055, column: 2, scope: !8030)
!8050 = !DILocation(line: 2056, column: 1, scope: !8017)
!8051 = distinct !DISubprogram(name: "actcon_get_tarmat", scope: !3, file: !3, line: 2058, type: !4360, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8052 = !DILocalVariable(name: "con", arg: 1, scope: !8051, file: !3, line: 2058, type: !2708)
!8053 = !DILocation(line: 2058, column: 44, scope: !8051)
!8054 = !DILocalVariable(name: "cob", arg: 2, scope: !8051, file: !3, line: 2058, type: !2733)
!8055 = !DILocation(line: 2058, column: 64, scope: !8051)
!8056 = !DILocalVariable(name: "ct", arg: 3, scope: !8051, file: !3, line: 2058, type: !2244)
!8057 = !DILocation(line: 2058, column: 88, scope: !8051)
!8058 = !DILocalVariable(name: "UNUSED_ctime", arg: 4, scope: !8051, file: !3, line: 2058, type: !467)
!8059 = !DILocation(line: 2058, column: 98, scope: !8051)
!8060 = !DILocalVariable(name: "data", scope: !8051, file: !3, line: 2060, type: !2394)
!8061 = !DILocation(line: 2060, column: 21, scope: !8051)
!8062 = !DILocation(line: 2060, column: 28, scope: !8051)
!8063 = !DILocation(line: 2060, column: 33, scope: !8051)
!8064 = !DILocation(line: 2062, column: 6, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 2062, column: 6)
!8066 = !DILocation(line: 2062, column: 6, scope: !8051)
!8067 = !DILocalVariable(name: "tempmat", scope: !8068, file: !3, line: 2063, type: !480)
!8068 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 2062, column: 29)
!8069 = !DILocation(line: 2063, column: 9, scope: !8068)
!8070 = !DILocalVariable(name: "vec", scope: !8068, file: !3, line: 2063, type: !469)
!8071 = !DILocation(line: 2063, column: 24, scope: !8068)
!8072 = !DILocalVariable(name: "s", scope: !8068, file: !3, line: 2064, type: !467)
!8073 = !DILocation(line: 2064, column: 9, scope: !8068)
!8074 = !DILocalVariable(name: "t", scope: !8068, file: !3, line: 2064, type: !467)
!8075 = !DILocation(line: 2064, column: 12, scope: !8068)
!8076 = !DILocalVariable(name: "axis", scope: !8068, file: !3, line: 2065, type: !420)
!8077 = !DILocation(line: 2065, column: 9, scope: !8068)
!8078 = !DILocation(line: 2068, column: 11, scope: !8068)
!8079 = !DILocation(line: 2068, column: 15, scope: !8068)
!8080 = !DILocation(line: 2068, column: 3, scope: !8068)
!8081 = !DILocation(line: 2071, column: 29, scope: !8068)
!8082 = !DILocation(line: 2071, column: 33, scope: !8068)
!8083 = !DILocation(line: 2071, column: 38, scope: !8068)
!8084 = !DILocation(line: 2071, column: 42, scope: !8068)
!8085 = !DILocation(line: 2071, column: 53, scope: !8068)
!8086 = !DILocation(line: 2071, column: 86, scope: !8068)
!8087 = !DILocation(line: 2071, column: 90, scope: !8068)
!8088 = !DILocation(line: 2071, column: 97, scope: !8068)
!8089 = !DILocation(line: 2071, column: 102, scope: !8068)
!8090 = !DILocation(line: 2071, column: 3, scope: !8068)
!8091 = !DILocation(line: 2079, column: 7, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2079, column: 7)
!8093 = !DILocation(line: 2079, column: 13, scope: !8092)
!8094 = !DILocation(line: 2079, column: 18, scope: !8092)
!8095 = !DILocation(line: 2079, column: 7, scope: !8068)
!8096 = !DILocation(line: 2081, column: 16, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 2079, column: 24)
!8098 = !DILocation(line: 2081, column: 21, scope: !8097)
!8099 = !DILocation(line: 2081, column: 4, scope: !8097)
!8100 = !DILocation(line: 2082, column: 14, scope: !8097)
!8101 = !DILocation(line: 2082, column: 4, scope: !8097)
!8102 = !DILocation(line: 2083, column: 11, scope: !8097)
!8103 = !DILocation(line: 2083, column: 17, scope: !8097)
!8104 = !DILocation(line: 2083, column: 9, scope: !8097)
!8105 = !DILocation(line: 2084, column: 3, scope: !8097)
!8106 = !DILocation(line: 2085, column: 12, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 2085, column: 12)
!8108 = !DILocation(line: 2085, column: 18, scope: !8107)
!8109 = !DILocation(line: 2085, column: 23, scope: !8107)
!8110 = !DILocation(line: 2085, column: 12, scope: !8092)
!8111 = !DILocation(line: 2087, column: 17, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 2085, column: 29)
!8113 = !DILocation(line: 2087, column: 22, scope: !8112)
!8114 = !DILocation(line: 2087, column: 4, scope: !8112)
!8115 = !DILocation(line: 2088, column: 11, scope: !8112)
!8116 = !DILocation(line: 2088, column: 17, scope: !8112)
!8117 = !DILocation(line: 2088, column: 22, scope: !8112)
!8118 = !DILocation(line: 2088, column: 9, scope: !8112)
!8119 = !DILocation(line: 2089, column: 3, scope: !8112)
!8120 = !DILocation(line: 2092, column: 15, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 2090, column: 8)
!8122 = !DILocation(line: 2092, column: 20, scope: !8121)
!8123 = !DILocation(line: 2092, column: 4, scope: !8121)
!8124 = !DILocation(line: 2093, column: 11, scope: !8121)
!8125 = !DILocation(line: 2093, column: 17, scope: !8121)
!8126 = !DILocation(line: 2093, column: 22, scope: !8121)
!8127 = !DILocation(line: 2093, column: 9, scope: !8121)
!8128 = !DILocation(line: 2099, column: 12, scope: !8068)
!8129 = !DILocation(line: 2099, column: 8, scope: !8068)
!8130 = !DILocation(line: 2099, column: 20, scope: !8068)
!8131 = !DILocation(line: 2099, column: 26, scope: !8068)
!8132 = !DILocation(line: 2099, column: 18, scope: !8068)
!8133 = !DILocation(line: 2099, column: 34, scope: !8068)
!8134 = !DILocation(line: 2099, column: 40, scope: !8068)
!8135 = !DILocation(line: 2099, column: 46, scope: !8068)
!8136 = !DILocation(line: 2099, column: 52, scope: !8068)
!8137 = !DILocation(line: 2099, column: 44, scope: !8068)
!8138 = !DILocation(line: 2099, column: 31, scope: !8068)
!8139 = !DILocation(line: 2099, column: 5, scope: !8068)
!8140 = !DILocation(line: 2100, column: 3, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 2100, column: 3)
!8142 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2100, column: 3)
!8143 = !DILocation(line: 2100, column: 3, scope: !8142)
!8144 = !DILocation(line: 2100, column: 3, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 2100, column: 3)
!8146 = !DILocation(line: 2101, column: 8, scope: !8068)
!8147 = !DILocation(line: 2101, column: 13, scope: !8068)
!8148 = !DILocation(line: 2101, column: 19, scope: !8068)
!8149 = !DILocation(line: 2101, column: 25, scope: !8068)
!8150 = !DILocation(line: 2101, column: 31, scope: !8068)
!8151 = !DILocation(line: 2101, column: 23, scope: !8068)
!8152 = !DILocation(line: 2101, column: 12, scope: !8068)
!8153 = !DILocation(line: 2101, column: 10, scope: !8068)
!8154 = !DILocation(line: 2101, column: 41, scope: !8068)
!8155 = !DILocation(line: 2101, column: 47, scope: !8068)
!8156 = !DILocation(line: 2101, column: 39, scope: !8068)
!8157 = !DILocation(line: 2101, column: 5, scope: !8068)
!8158 = !DILocation(line: 2103, column: 9, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2103, column: 7)
!8160 = !DILocation(line: 2103, column: 15, scope: !8159)
!8161 = !DILocation(line: 2103, column: 7, scope: !8068)
!8162 = !DILocation(line: 2104, column: 57, scope: !8159)
!8163 = !DILocation(line: 2104, column: 62, scope: !8159)
!8164 = !DILocation(line: 2104, column: 68, scope: !8159)
!8165 = !DILocation(line: 2104, column: 73, scope: !8159)
!8166 = !DILocation(line: 2104, column: 77, scope: !8159)
!8167 = !DILocation(line: 2104, column: 80, scope: !8159)
!8168 = !DILocation(line: 2104, column: 85, scope: !8159)
!8169 = !DILocation(line: 2104, column: 91, scope: !8159)
!8170 = !DILocation(line: 2104, column: 96, scope: !8159)
!8171 = !DILocation(line: 2104, column: 90, scope: !8159)
!8172 = !DILocation(line: 2104, column: 105, scope: !8159)
!8173 = !DILocation(line: 2104, column: 110, scope: !8159)
!8174 = !DILocation(line: 2104, column: 117, scope: !8159)
!8175 = !DILocation(line: 2104, column: 4, scope: !8159)
!8176 = !DILocation(line: 2107, column: 7, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2107, column: 7)
!8178 = !DILocation(line: 2107, column: 12, scope: !8177)
!8179 = !DILocation(line: 2107, column: 17, scope: !8177)
!8180 = !DILocation(line: 2107, column: 45, scope: !8177)
!8181 = !DILocation(line: 2107, column: 49, scope: !8177)
!8182 = !DILocation(line: 2107, column: 55, scope: !8177)
!8183 = !DILocation(line: 2107, column: 60, scope: !8177)
!8184 = !DILocation(line: 2107, column: 7, scope: !8068)
!8185 = !DILocalVariable(name: "workob", scope: !8186, file: !3, line: 2108, type: !2243)
!8186 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 2107, column: 94)
!8187 = !DILocation(line: 2108, column: 11, scope: !8186)
!8188 = !DILocation(line: 2112, column: 23, scope: !8186)
!8189 = !DILocation(line: 2112, column: 28, scope: !8186)
!8190 = !DILocation(line: 2112, column: 47, scope: !8186)
!8191 = !DILocation(line: 2112, column: 53, scope: !8186)
!8192 = !DILocation(line: 2112, column: 64, scope: !8186)
!8193 = !DILocation(line: 2112, column: 4, scope: !8186)
!8194 = !DILocation(line: 2113, column: 32, scope: !8186)
!8195 = !DILocation(line: 2113, column: 36, scope: !8186)
!8196 = !DILocation(line: 2113, column: 4, scope: !8186)
!8197 = !DILocation(line: 2114, column: 3, scope: !8186)
!8198 = !DILocation(line: 2115, column: 12, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 2115, column: 12)
!8200 = !DILocation(line: 2115, column: 17, scope: !8199)
!8201 = !DILocation(line: 2115, column: 22, scope: !8199)
!8202 = !DILocation(line: 2115, column: 12, scope: !8177)
!8203 = !DILocalVariable(name: "workob", scope: !8204, file: !3, line: 2116, type: !2243)
!8204 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 2115, column: 49)
!8205 = !DILocation(line: 2116, column: 11, scope: !8204)
!8206 = !DILocalVariable(name: "pose", scope: !8204, file: !3, line: 2117, type: !8207)
!8207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8208, size: 64)
!8208 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPose", file: !401, line: 356, baseType: !606)
!8209 = !DILocation(line: 2117, column: 11, scope: !8204)
!8210 = !DILocalVariable(name: "pchan", scope: !8204, file: !3, line: 2118, type: !399)
!8211 = !DILocation(line: 2118, column: 18, scope: !8204)
!8212 = !DILocalVariable(name: "tchan", scope: !8204, file: !3, line: 2118, type: !399)
!8213 = !DILocation(line: 2118, column: 26, scope: !8204)
!8214 = !DILocation(line: 2121, column: 11, scope: !8204)
!8215 = !DILocation(line: 2121, column: 9, scope: !8204)
!8216 = !DILocation(line: 2126, column: 12, scope: !8204)
!8217 = !DILocation(line: 2126, column: 17, scope: !8204)
!8218 = !DILocation(line: 2126, column: 10, scope: !8204)
!8219 = !DILocation(line: 2128, column: 36, scope: !8204)
!8220 = !DILocation(line: 2128, column: 42, scope: !8204)
!8221 = !DILocation(line: 2128, column: 49, scope: !8204)
!8222 = !DILocation(line: 2128, column: 12, scope: !8204)
!8223 = !DILocation(line: 2128, column: 10, scope: !8204)
!8224 = !DILocation(line: 2129, column: 21, scope: !8204)
!8225 = !DILocation(line: 2129, column: 28, scope: !8204)
!8226 = !DILocation(line: 2129, column: 4, scope: !8204)
!8227 = !DILocation(line: 2129, column: 11, scope: !8204)
!8228 = !DILocation(line: 2129, column: 19, scope: !8204)
!8229 = !DILocation(line: 2132, column: 23, scope: !8204)
!8230 = !DILocation(line: 2132, column: 28, scope: !8204)
!8231 = !DILocation(line: 2132, column: 41, scope: !8204)
!8232 = !DILocation(line: 2132, column: 47, scope: !8204)
!8233 = !DILocation(line: 2132, column: 53, scope: !8204)
!8234 = !DILocation(line: 2132, column: 58, scope: !8204)
!8235 = !DILocation(line: 2132, column: 65, scope: !8204)
!8236 = !DILocation(line: 2132, column: 71, scope: !8204)
!8237 = !DILocation(line: 2132, column: 4, scope: !8204)
!8238 = !DILocation(line: 2135, column: 23, scope: !8204)
!8239 = !DILocation(line: 2135, column: 4, scope: !8204)
!8240 = !DILocation(line: 2136, column: 15, scope: !8204)
!8241 = !DILocation(line: 2136, column: 19, scope: !8204)
!8242 = !DILocation(line: 2136, column: 27, scope: !8204)
!8243 = !DILocation(line: 2136, column: 34, scope: !8204)
!8244 = !DILocation(line: 2136, column: 4, scope: !8204)
!8245 = !DILocation(line: 2139, column: 18, scope: !8204)
!8246 = !DILocation(line: 2139, column: 4, scope: !8204)
!8247 = !DILocation(line: 2140, column: 3, scope: !8204)
!8248 = !DILocation(line: 2143, column: 4, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 2141, column: 8)
!8250 = !DILocation(line: 2145, column: 2, scope: !8068)
!8251 = !DILocation(line: 2146, column: 1, scope: !8051)
!8252 = distinct !DISubprogram(name: "actcon_evaluate", scope: !3, file: !3, line: 2148, type: !4392, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8253 = !DILocalVariable(name: "UNUSED_con", arg: 1, scope: !8252, file: !3, line: 2148, type: !2708)
!8254 = !DILocation(line: 2148, column: 42, scope: !8252)
!8255 = !DILocalVariable(name: "cob", arg: 2, scope: !8252, file: !3, line: 2148, type: !2733)
!8256 = !DILocation(line: 2148, column: 70, scope: !8252)
!8257 = !DILocalVariable(name: "targets", arg: 3, scope: !8252, file: !3, line: 2148, type: !1287)
!8258 = !DILocation(line: 2148, column: 85, scope: !8252)
!8259 = !DILocalVariable(name: "ct", scope: !8252, file: !3, line: 2150, type: !2244)
!8260 = !DILocation(line: 2150, column: 21, scope: !8252)
!8261 = !DILocation(line: 2150, column: 26, scope: !8252)
!8262 = !DILocation(line: 2150, column: 35, scope: !8252)
!8263 = !DILocation(line: 2152, column: 6, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 2152, column: 6)
!8265 = !DILocation(line: 2152, column: 6, scope: !8252)
!8266 = !DILocalVariable(name: "temp", scope: !8267, file: !3, line: 2153, type: !480)
!8267 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 2152, column: 29)
!8268 = !DILocation(line: 2153, column: 9, scope: !8267)
!8269 = !DILocation(line: 2158, column: 14, scope: !8267)
!8270 = !DILocation(line: 2158, column: 20, scope: !8267)
!8271 = !DILocation(line: 2158, column: 25, scope: !8267)
!8272 = !DILocation(line: 2158, column: 3, scope: !8267)
!8273 = !DILocation(line: 2159, column: 15, scope: !8267)
!8274 = !DILocation(line: 2159, column: 20, scope: !8267)
!8275 = !DILocation(line: 2159, column: 28, scope: !8267)
!8276 = !DILocation(line: 2159, column: 34, scope: !8267)
!8277 = !DILocation(line: 2159, column: 38, scope: !8267)
!8278 = !DILocation(line: 2159, column: 3, scope: !8267)
!8279 = !DILocation(line: 2160, column: 2, scope: !8267)
!8280 = !DILocation(line: 2161, column: 1, scope: !8252)
!8281 = distinct !DISubprogram(name: "locktrack_id_looper", scope: !3, file: !3, line: 2188, type: !4251, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8282 = !DILocalVariable(name: "con", arg: 1, scope: !8281, file: !3, line: 2188, type: !2708)
!8283 = !DILocation(line: 2188, column: 46, scope: !8281)
!8284 = !DILocalVariable(name: "func", arg: 2, scope: !8281, file: !3, line: 2188, type: !2599)
!8285 = !DILocation(line: 2188, column: 68, scope: !8281)
!8286 = !DILocalVariable(name: "userdata", arg: 3, scope: !8281, file: !3, line: 2188, type: !431)
!8287 = !DILocation(line: 2188, column: 80, scope: !8281)
!8288 = !DILocalVariable(name: "data", scope: !8281, file: !3, line: 2190, type: !2408)
!8289 = !DILocation(line: 2190, column: 24, scope: !8281)
!8290 = !DILocation(line: 2190, column: 31, scope: !8281)
!8291 = !DILocation(line: 2190, column: 36, scope: !8281)
!8292 = !DILocation(line: 2193, column: 2, scope: !8281)
!8293 = !DILocation(line: 2193, column: 7, scope: !8281)
!8294 = !DILocation(line: 2193, column: 20, scope: !8281)
!8295 = !DILocation(line: 2193, column: 26, scope: !8281)
!8296 = !DILocation(line: 2193, column: 12, scope: !8281)
!8297 = !DILocation(line: 2193, column: 38, scope: !8281)
!8298 = !DILocation(line: 2194, column: 1, scope: !8281)
!8299 = distinct !DISubprogram(name: "locktrack_new_data", scope: !3, file: !3, line: 2180, type: !2610, scopeLine: 2181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8300 = !DILocalVariable(name: "cdata", arg: 1, scope: !8299, file: !3, line: 2180, type: !431)
!8301 = !DILocation(line: 2180, column: 38, scope: !8299)
!8302 = !DILocalVariable(name: "data", scope: !8299, file: !3, line: 2182, type: !2408)
!8303 = !DILocation(line: 2182, column: 24, scope: !8299)
!8304 = !DILocation(line: 2182, column: 55, scope: !8299)
!8305 = !DILocation(line: 2182, column: 31, scope: !8299)
!8306 = !DILocation(line: 2184, column: 2, scope: !8299)
!8307 = !DILocation(line: 2184, column: 8, scope: !8299)
!8308 = !DILocation(line: 2184, column: 18, scope: !8299)
!8309 = !DILocation(line: 2185, column: 2, scope: !8299)
!8310 = !DILocation(line: 2185, column: 8, scope: !8299)
!8311 = !DILocation(line: 2185, column: 17, scope: !8299)
!8312 = !DILocation(line: 2186, column: 1, scope: !8299)
!8313 = distinct !DISubprogram(name: "locktrack_get_tars", scope: !3, file: !3, line: 2196, type: !4285, scopeLine: 2197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8314 = !DILocalVariable(name: "con", arg: 1, scope: !8313, file: !3, line: 2196, type: !2708)
!8315 = !DILocation(line: 2196, column: 44, scope: !8313)
!8316 = !DILocalVariable(name: "list", arg: 2, scope: !8313, file: !3, line: 2196, type: !1287)
!8317 = !DILocation(line: 2196, column: 59, scope: !8313)
!8318 = !DILocation(line: 2198, column: 6, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2198, column: 6)
!8320 = !DILocation(line: 2198, column: 10, scope: !8319)
!8321 = !DILocation(line: 2198, column: 13, scope: !8319)
!8322 = !DILocation(line: 2198, column: 6, scope: !8313)
!8323 = !DILocalVariable(name: "data", scope: !8324, file: !3, line: 2199, type: !2408)
!8324 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 2198, column: 19)
!8325 = !DILocation(line: 2199, column: 25, scope: !8324)
!8326 = !DILocation(line: 2199, column: 32, scope: !8324)
!8327 = !DILocation(line: 2199, column: 37, scope: !8324)
!8328 = !DILocalVariable(name: "ct", scope: !8324, file: !3, line: 2200, type: !2244)
!8329 = !DILocation(line: 2200, column: 22, scope: !8324)
!8330 = !DILocation(line: 2203, column: 3, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 2203, column: 3)
!8332 = !DILocation(line: 2203, column: 3, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 2203, column: 3)
!8334 = !DILocation(line: 2203, column: 3, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 2203, column: 3)
!8336 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 2203, column: 3)
!8337 = !DILocation(line: 2203, column: 3, scope: !8336)
!8338 = !DILocalVariable(name: "pchan", scope: !8339, file: !3, line: 2203, type: !399)
!8339 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 2203, column: 3)
!8340 = !DILocation(line: 2203, column: 3, scope: !8339)
!8341 = !DILocation(line: 2203, column: 3, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 2203, column: 3)
!8343 = !DILocation(line: 2203, column: 3, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 2203, column: 3)
!8345 = !DILocation(line: 2203, column: 3, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 2203, column: 3)
!8347 = !DILocation(line: 2205, column: 3, scope: !8324)
!8348 = !DILocation(line: 2208, column: 2, scope: !8313)
!8349 = !DILocation(line: 2209, column: 1, scope: !8313)
!8350 = distinct !DISubprogram(name: "locktrack_flush_tars", scope: !3, file: !3, line: 2211, type: !4324, scopeLine: 2212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8351 = !DILocalVariable(name: "con", arg: 1, scope: !8350, file: !3, line: 2211, type: !2708)
!8352 = !DILocation(line: 2211, column: 47, scope: !8350)
!8353 = !DILocalVariable(name: "list", arg: 2, scope: !8350, file: !3, line: 2211, type: !1287)
!8354 = !DILocation(line: 2211, column: 62, scope: !8350)
!8355 = !DILocalVariable(name: "no_copy", arg: 3, scope: !8350, file: !3, line: 2211, type: !1111)
!8356 = !DILocation(line: 2211, column: 73, scope: !8350)
!8357 = !DILocation(line: 2213, column: 6, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 2213, column: 6)
!8359 = !DILocation(line: 2213, column: 10, scope: !8358)
!8360 = !DILocation(line: 2213, column: 13, scope: !8358)
!8361 = !DILocation(line: 2213, column: 6, scope: !8350)
!8362 = !DILocalVariable(name: "data", scope: !8363, file: !3, line: 2214, type: !2408)
!8363 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 2213, column: 19)
!8364 = !DILocation(line: 2214, column: 25, scope: !8363)
!8365 = !DILocation(line: 2214, column: 32, scope: !8363)
!8366 = !DILocation(line: 2214, column: 37, scope: !8363)
!8367 = !DILocalVariable(name: "ct", scope: !8363, file: !3, line: 2215, type: !2244)
!8368 = !DILocation(line: 2215, column: 22, scope: !8363)
!8369 = !DILocation(line: 2215, column: 27, scope: !8363)
!8370 = !DILocation(line: 2215, column: 33, scope: !8363)
!8371 = !DILocation(line: 2218, column: 3, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 2218, column: 3)
!8373 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 2218, column: 3)
!8374 = !DILocation(line: 2218, column: 3, scope: !8373)
!8375 = !DILocalVariable(name: "ctn", scope: !8376, file: !3, line: 2218, type: !2244)
!8376 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 2218, column: 3)
!8377 = !DILocation(line: 2218, column: 3, scope: !8376)
!8378 = !DILocation(line: 2218, column: 3, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8376, file: !3, line: 2218, column: 3)
!8380 = !DILocation(line: 2218, column: 3, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 2218, column: 3)
!8382 = !DILocation(line: 2219, column: 2, scope: !8363)
!8383 = !DILocation(line: 2220, column: 1, scope: !8350)
!8384 = distinct !DISubprogram(name: "locktrack_evaluate", scope: !3, file: !3, line: 2222, type: !4392, scopeLine: 2223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8385 = !DILocalVariable(name: "con", arg: 1, scope: !8384, file: !3, line: 2222, type: !2708)
!8386 = !DILocation(line: 2222, column: 45, scope: !8384)
!8387 = !DILocalVariable(name: "cob", arg: 2, scope: !8384, file: !3, line: 2222, type: !2733)
!8388 = !DILocation(line: 2222, column: 65, scope: !8384)
!8389 = !DILocalVariable(name: "targets", arg: 3, scope: !8384, file: !3, line: 2222, type: !1287)
!8390 = !DILocation(line: 2222, column: 80, scope: !8384)
!8391 = !DILocalVariable(name: "data", scope: !8384, file: !3, line: 2224, type: !2408)
!8392 = !DILocation(line: 2224, column: 24, scope: !8384)
!8393 = !DILocation(line: 2224, column: 31, scope: !8384)
!8394 = !DILocation(line: 2224, column: 36, scope: !8384)
!8395 = !DILocalVariable(name: "ct", scope: !8384, file: !3, line: 2225, type: !2244)
!8396 = !DILocation(line: 2225, column: 21, scope: !8384)
!8397 = !DILocation(line: 2225, column: 26, scope: !8384)
!8398 = !DILocation(line: 2225, column: 35, scope: !8384)
!8399 = !DILocation(line: 2227, column: 6, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 2227, column: 6)
!8401 = !DILocation(line: 2227, column: 6, scope: !8384)
!8402 = !DILocalVariable(name: "vec", scope: !8403, file: !3, line: 2228, type: !469)
!8403 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 2227, column: 29)
!8404 = !DILocation(line: 2228, column: 9, scope: !8403)
!8405 = !DILocalVariable(name: "vec2", scope: !8403, file: !3, line: 2228, type: !469)
!8406 = !DILocation(line: 2228, column: 17, scope: !8403)
!8407 = !DILocalVariable(name: "totmat", scope: !8403, file: !3, line: 2229, type: !474)
!8408 = !DILocation(line: 2229, column: 9, scope: !8403)
!8409 = !DILocalVariable(name: "tmpmat", scope: !8403, file: !3, line: 2230, type: !474)
!8410 = !DILocation(line: 2230, column: 9, scope: !8403)
!8411 = !DILocalVariable(name: "invmat", scope: !8403, file: !3, line: 2231, type: !474)
!8412 = !DILocation(line: 2231, column: 9, scope: !8403)
!8413 = !DILocalVariable(name: "mdet", scope: !8403, file: !3, line: 2232, type: !467)
!8414 = !DILocation(line: 2232, column: 9, scope: !8403)
!8415 = !DILocation(line: 2235, column: 15, scope: !8403)
!8416 = !DILocation(line: 2235, column: 20, scope: !8403)
!8417 = !DILocation(line: 2235, column: 24, scope: !8403)
!8418 = !DILocation(line: 2235, column: 35, scope: !8403)
!8419 = !DILocation(line: 2235, column: 40, scope: !8403)
!8420 = !DILocation(line: 2235, column: 3, scope: !8403)
!8421 = !DILocation(line: 2236, column: 11, scope: !8403)
!8422 = !DILocation(line: 2236, column: 17, scope: !8403)
!8423 = !DILocation(line: 2236, column: 3, scope: !8403)
!8424 = !DILocation(line: 2239, column: 13, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2238, column: 4)
!8426 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 2236, column: 27)
!8427 = !DILocation(line: 2239, column: 19, scope: !8425)
!8428 = !DILocation(line: 2239, column: 5, scope: !8425)
!8429 = !DILocation(line: 2243, column: 23, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 2241, column: 6)
!8431 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 2239, column: 30)
!8432 = !DILocation(line: 2243, column: 29, scope: !8430)
!8433 = !DILocation(line: 2243, column: 34, scope: !8430)
!8434 = !DILocation(line: 2243, column: 39, scope: !8430)
!8435 = !DILocation(line: 2243, column: 7, scope: !8430)
!8436 = !DILocation(line: 2244, column: 19, scope: !8430)
!8437 = !DILocation(line: 2244, column: 30, scope: !8430)
!8438 = !DILocation(line: 2244, column: 35, scope: !8430)
!8439 = !DILocation(line: 2244, column: 7, scope: !8430)
!8440 = !DILocation(line: 2245, column: 20, scope: !8430)
!8441 = !DILocation(line: 2245, column: 7, scope: !8430)
!8442 = !DILocation(line: 2248, column: 23, scope: !8430)
!8443 = !DILocation(line: 2248, column: 34, scope: !8430)
!8444 = !DILocation(line: 2248, column: 39, scope: !8430)
!8445 = !DILocation(line: 2248, column: 7, scope: !8430)
!8446 = !DILocation(line: 2251, column: 21, scope: !8430)
!8447 = !DILocation(line: 2251, column: 32, scope: !8430)
!8448 = !DILocation(line: 2251, column: 43, scope: !8430)
!8449 = !DILocation(line: 2251, column: 7, scope: !8430)
!8450 = !DILocation(line: 2252, column: 7, scope: !8430)
!8451 = !DILocation(line: 2257, column: 23, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 2255, column: 6)
!8453 = !DILocation(line: 2257, column: 29, scope: !8452)
!8454 = !DILocation(line: 2257, column: 34, scope: !8452)
!8455 = !DILocation(line: 2257, column: 39, scope: !8452)
!8456 = !DILocation(line: 2257, column: 7, scope: !8452)
!8457 = !DILocation(line: 2258, column: 19, scope: !8452)
!8458 = !DILocation(line: 2258, column: 30, scope: !8452)
!8459 = !DILocation(line: 2258, column: 35, scope: !8452)
!8460 = !DILocation(line: 2258, column: 7, scope: !8452)
!8461 = !DILocation(line: 2259, column: 20, scope: !8452)
!8462 = !DILocation(line: 2259, column: 7, scope: !8452)
!8463 = !DILocation(line: 2262, column: 23, scope: !8452)
!8464 = !DILocation(line: 2262, column: 34, scope: !8452)
!8465 = !DILocation(line: 2262, column: 39, scope: !8452)
!8466 = !DILocation(line: 2262, column: 7, scope: !8452)
!8467 = !DILocation(line: 2265, column: 21, scope: !8452)
!8468 = !DILocation(line: 2265, column: 32, scope: !8452)
!8469 = !DILocation(line: 2265, column: 43, scope: !8452)
!8470 = !DILocation(line: 2265, column: 7, scope: !8452)
!8471 = !DILocation(line: 2266, column: 7, scope: !8452)
!8472 = !DILocation(line: 2271, column: 23, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 2269, column: 6)
!8474 = !DILocation(line: 2271, column: 29, scope: !8473)
!8475 = !DILocation(line: 2271, column: 34, scope: !8473)
!8476 = !DILocation(line: 2271, column: 39, scope: !8473)
!8477 = !DILocation(line: 2271, column: 7, scope: !8473)
!8478 = !DILocation(line: 2272, column: 19, scope: !8473)
!8479 = !DILocation(line: 2272, column: 30, scope: !8473)
!8480 = !DILocation(line: 2272, column: 35, scope: !8473)
!8481 = !DILocation(line: 2272, column: 7, scope: !8473)
!8482 = !DILocation(line: 2273, column: 20, scope: !8473)
!8483 = !DILocation(line: 2273, column: 7, scope: !8473)
!8484 = !DILocation(line: 2274, column: 17, scope: !8473)
!8485 = !DILocation(line: 2274, column: 7, scope: !8473)
!8486 = !DILocation(line: 2277, column: 23, scope: !8473)
!8487 = !DILocation(line: 2277, column: 34, scope: !8473)
!8488 = !DILocation(line: 2277, column: 39, scope: !8473)
!8489 = !DILocation(line: 2277, column: 7, scope: !8473)
!8490 = !DILocation(line: 2280, column: 21, scope: !8473)
!8491 = !DILocation(line: 2280, column: 32, scope: !8473)
!8492 = !DILocation(line: 2280, column: 43, scope: !8473)
!8493 = !DILocation(line: 2280, column: 7, scope: !8473)
!8494 = !DILocation(line: 2281, column: 7, scope: !8473)
!8495 = !DILocation(line: 2286, column: 23, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 2284, column: 6)
!8497 = !DILocation(line: 2286, column: 29, scope: !8496)
!8498 = !DILocation(line: 2286, column: 34, scope: !8496)
!8499 = !DILocation(line: 2286, column: 39, scope: !8496)
!8500 = !DILocation(line: 2286, column: 7, scope: !8496)
!8501 = !DILocation(line: 2287, column: 19, scope: !8496)
!8502 = !DILocation(line: 2287, column: 30, scope: !8496)
!8503 = !DILocation(line: 2287, column: 35, scope: !8496)
!8504 = !DILocation(line: 2287, column: 7, scope: !8496)
!8505 = !DILocation(line: 2288, column: 20, scope: !8496)
!8506 = !DILocation(line: 2288, column: 7, scope: !8496)
!8507 = !DILocation(line: 2289, column: 17, scope: !8496)
!8508 = !DILocation(line: 2289, column: 7, scope: !8496)
!8509 = !DILocation(line: 2292, column: 23, scope: !8496)
!8510 = !DILocation(line: 2292, column: 34, scope: !8496)
!8511 = !DILocation(line: 2292, column: 39, scope: !8496)
!8512 = !DILocation(line: 2292, column: 7, scope: !8496)
!8513 = !DILocation(line: 2295, column: 21, scope: !8496)
!8514 = !DILocation(line: 2295, column: 32, scope: !8496)
!8515 = !DILocation(line: 2295, column: 43, scope: !8496)
!8516 = !DILocation(line: 2295, column: 7, scope: !8496)
!8517 = !DILocation(line: 2296, column: 7, scope: !8496)
!8518 = !DILocation(line: 2300, column: 15, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 2299, column: 6)
!8520 = !DILocation(line: 2300, column: 7, scope: !8519)
!8521 = !DILocation(line: 2301, column: 7, scope: !8519)
!8522 = !DILocation(line: 2304, column: 5, scope: !8425)
!8523 = !DILocation(line: 2308, column: 13, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2307, column: 4)
!8525 = !DILocation(line: 2308, column: 19, scope: !8524)
!8526 = !DILocation(line: 2308, column: 5, scope: !8524)
!8527 = !DILocation(line: 2312, column: 23, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2310, column: 6)
!8529 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 2308, column: 30)
!8530 = !DILocation(line: 2312, column: 29, scope: !8528)
!8531 = !DILocation(line: 2312, column: 34, scope: !8528)
!8532 = !DILocation(line: 2312, column: 39, scope: !8528)
!8533 = !DILocation(line: 2312, column: 7, scope: !8528)
!8534 = !DILocation(line: 2313, column: 19, scope: !8528)
!8535 = !DILocation(line: 2313, column: 30, scope: !8528)
!8536 = !DILocation(line: 2313, column: 35, scope: !8528)
!8537 = !DILocation(line: 2313, column: 7, scope: !8528)
!8538 = !DILocation(line: 2314, column: 20, scope: !8528)
!8539 = !DILocation(line: 2314, column: 7, scope: !8528)
!8540 = !DILocation(line: 2317, column: 23, scope: !8528)
!8541 = !DILocation(line: 2317, column: 34, scope: !8528)
!8542 = !DILocation(line: 2317, column: 39, scope: !8528)
!8543 = !DILocation(line: 2317, column: 7, scope: !8528)
!8544 = !DILocation(line: 2320, column: 21, scope: !8528)
!8545 = !DILocation(line: 2320, column: 32, scope: !8528)
!8546 = !DILocation(line: 2320, column: 43, scope: !8528)
!8547 = !DILocation(line: 2320, column: 7, scope: !8528)
!8548 = !DILocation(line: 2321, column: 7, scope: !8528)
!8549 = !DILocation(line: 2326, column: 23, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2324, column: 6)
!8551 = !DILocation(line: 2326, column: 29, scope: !8550)
!8552 = !DILocation(line: 2326, column: 34, scope: !8550)
!8553 = !DILocation(line: 2326, column: 39, scope: !8550)
!8554 = !DILocation(line: 2326, column: 7, scope: !8550)
!8555 = !DILocation(line: 2327, column: 19, scope: !8550)
!8556 = !DILocation(line: 2327, column: 30, scope: !8550)
!8557 = !DILocation(line: 2327, column: 35, scope: !8550)
!8558 = !DILocation(line: 2327, column: 7, scope: !8550)
!8559 = !DILocation(line: 2328, column: 20, scope: !8550)
!8560 = !DILocation(line: 2328, column: 7, scope: !8550)
!8561 = !DILocation(line: 2331, column: 23, scope: !8550)
!8562 = !DILocation(line: 2331, column: 34, scope: !8550)
!8563 = !DILocation(line: 2331, column: 39, scope: !8550)
!8564 = !DILocation(line: 2331, column: 7, scope: !8550)
!8565 = !DILocation(line: 2334, column: 21, scope: !8550)
!8566 = !DILocation(line: 2334, column: 32, scope: !8550)
!8567 = !DILocation(line: 2334, column: 43, scope: !8550)
!8568 = !DILocation(line: 2334, column: 7, scope: !8550)
!8569 = !DILocation(line: 2335, column: 7, scope: !8550)
!8570 = !DILocation(line: 2340, column: 23, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2338, column: 6)
!8572 = !DILocation(line: 2340, column: 29, scope: !8571)
!8573 = !DILocation(line: 2340, column: 34, scope: !8571)
!8574 = !DILocation(line: 2340, column: 39, scope: !8571)
!8575 = !DILocation(line: 2340, column: 7, scope: !8571)
!8576 = !DILocation(line: 2341, column: 19, scope: !8571)
!8577 = !DILocation(line: 2341, column: 30, scope: !8571)
!8578 = !DILocation(line: 2341, column: 35, scope: !8571)
!8579 = !DILocation(line: 2341, column: 7, scope: !8571)
!8580 = !DILocation(line: 2342, column: 20, scope: !8571)
!8581 = !DILocation(line: 2342, column: 7, scope: !8571)
!8582 = !DILocation(line: 2343, column: 17, scope: !8571)
!8583 = !DILocation(line: 2343, column: 7, scope: !8571)
!8584 = !DILocation(line: 2346, column: 23, scope: !8571)
!8585 = !DILocation(line: 2346, column: 34, scope: !8571)
!8586 = !DILocation(line: 2346, column: 39, scope: !8571)
!8587 = !DILocation(line: 2346, column: 7, scope: !8571)
!8588 = !DILocation(line: 2349, column: 21, scope: !8571)
!8589 = !DILocation(line: 2349, column: 32, scope: !8571)
!8590 = !DILocation(line: 2349, column: 43, scope: !8571)
!8591 = !DILocation(line: 2349, column: 7, scope: !8571)
!8592 = !DILocation(line: 2350, column: 7, scope: !8571)
!8593 = !DILocation(line: 2355, column: 23, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2353, column: 6)
!8595 = !DILocation(line: 2355, column: 29, scope: !8594)
!8596 = !DILocation(line: 2355, column: 34, scope: !8594)
!8597 = !DILocation(line: 2355, column: 39, scope: !8594)
!8598 = !DILocation(line: 2355, column: 7, scope: !8594)
!8599 = !DILocation(line: 2356, column: 19, scope: !8594)
!8600 = !DILocation(line: 2356, column: 30, scope: !8594)
!8601 = !DILocation(line: 2356, column: 35, scope: !8594)
!8602 = !DILocation(line: 2356, column: 7, scope: !8594)
!8603 = !DILocation(line: 2357, column: 20, scope: !8594)
!8604 = !DILocation(line: 2357, column: 7, scope: !8594)
!8605 = !DILocation(line: 2358, column: 17, scope: !8594)
!8606 = !DILocation(line: 2358, column: 7, scope: !8594)
!8607 = !DILocation(line: 2361, column: 23, scope: !8594)
!8608 = !DILocation(line: 2361, column: 34, scope: !8594)
!8609 = !DILocation(line: 2361, column: 39, scope: !8594)
!8610 = !DILocation(line: 2361, column: 7, scope: !8594)
!8611 = !DILocation(line: 2364, column: 21, scope: !8594)
!8612 = !DILocation(line: 2364, column: 32, scope: !8594)
!8613 = !DILocation(line: 2364, column: 43, scope: !8594)
!8614 = !DILocation(line: 2364, column: 7, scope: !8594)
!8615 = !DILocation(line: 2365, column: 7, scope: !8594)
!8616 = !DILocation(line: 2369, column: 15, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2368, column: 6)
!8618 = !DILocation(line: 2369, column: 7, scope: !8617)
!8619 = !DILocation(line: 2370, column: 7, scope: !8617)
!8620 = !DILocation(line: 2373, column: 5, scope: !8524)
!8621 = !DILocation(line: 2377, column: 13, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2376, column: 4)
!8623 = !DILocation(line: 2377, column: 19, scope: !8622)
!8624 = !DILocation(line: 2377, column: 5, scope: !8622)
!8625 = !DILocation(line: 2381, column: 23, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2379, column: 6)
!8627 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 2377, column: 30)
!8628 = !DILocation(line: 2381, column: 29, scope: !8626)
!8629 = !DILocation(line: 2381, column: 34, scope: !8626)
!8630 = !DILocation(line: 2381, column: 39, scope: !8626)
!8631 = !DILocation(line: 2381, column: 7, scope: !8626)
!8632 = !DILocation(line: 2382, column: 19, scope: !8626)
!8633 = !DILocation(line: 2382, column: 30, scope: !8626)
!8634 = !DILocation(line: 2382, column: 35, scope: !8626)
!8635 = !DILocation(line: 2382, column: 7, scope: !8626)
!8636 = !DILocation(line: 2383, column: 20, scope: !8626)
!8637 = !DILocation(line: 2383, column: 7, scope: !8626)
!8638 = !DILocation(line: 2386, column: 23, scope: !8626)
!8639 = !DILocation(line: 2386, column: 34, scope: !8626)
!8640 = !DILocation(line: 2386, column: 39, scope: !8626)
!8641 = !DILocation(line: 2386, column: 7, scope: !8626)
!8642 = !DILocation(line: 2389, column: 21, scope: !8626)
!8643 = !DILocation(line: 2389, column: 32, scope: !8626)
!8644 = !DILocation(line: 2389, column: 43, scope: !8626)
!8645 = !DILocation(line: 2389, column: 7, scope: !8626)
!8646 = !DILocation(line: 2390, column: 7, scope: !8626)
!8647 = !DILocation(line: 2395, column: 23, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2393, column: 6)
!8649 = !DILocation(line: 2395, column: 29, scope: !8648)
!8650 = !DILocation(line: 2395, column: 34, scope: !8648)
!8651 = !DILocation(line: 2395, column: 39, scope: !8648)
!8652 = !DILocation(line: 2395, column: 7, scope: !8648)
!8653 = !DILocation(line: 2396, column: 19, scope: !8648)
!8654 = !DILocation(line: 2396, column: 30, scope: !8648)
!8655 = !DILocation(line: 2396, column: 35, scope: !8648)
!8656 = !DILocation(line: 2396, column: 7, scope: !8648)
!8657 = !DILocation(line: 2397, column: 20, scope: !8648)
!8658 = !DILocation(line: 2397, column: 7, scope: !8648)
!8659 = !DILocation(line: 2400, column: 23, scope: !8648)
!8660 = !DILocation(line: 2400, column: 34, scope: !8648)
!8661 = !DILocation(line: 2400, column: 39, scope: !8648)
!8662 = !DILocation(line: 2400, column: 7, scope: !8648)
!8663 = !DILocation(line: 2403, column: 21, scope: !8648)
!8664 = !DILocation(line: 2403, column: 32, scope: !8648)
!8665 = !DILocation(line: 2403, column: 43, scope: !8648)
!8666 = !DILocation(line: 2403, column: 7, scope: !8648)
!8667 = !DILocation(line: 2404, column: 7, scope: !8648)
!8668 = !DILocation(line: 2409, column: 23, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2407, column: 6)
!8670 = !DILocation(line: 2409, column: 29, scope: !8669)
!8671 = !DILocation(line: 2409, column: 34, scope: !8669)
!8672 = !DILocation(line: 2409, column: 39, scope: !8669)
!8673 = !DILocation(line: 2409, column: 7, scope: !8669)
!8674 = !DILocation(line: 2410, column: 19, scope: !8669)
!8675 = !DILocation(line: 2410, column: 30, scope: !8669)
!8676 = !DILocation(line: 2410, column: 35, scope: !8669)
!8677 = !DILocation(line: 2410, column: 7, scope: !8669)
!8678 = !DILocation(line: 2411, column: 20, scope: !8669)
!8679 = !DILocation(line: 2411, column: 7, scope: !8669)
!8680 = !DILocation(line: 2412, column: 17, scope: !8669)
!8681 = !DILocation(line: 2412, column: 7, scope: !8669)
!8682 = !DILocation(line: 2415, column: 23, scope: !8669)
!8683 = !DILocation(line: 2415, column: 34, scope: !8669)
!8684 = !DILocation(line: 2415, column: 39, scope: !8669)
!8685 = !DILocation(line: 2415, column: 7, scope: !8669)
!8686 = !DILocation(line: 2418, column: 21, scope: !8669)
!8687 = !DILocation(line: 2418, column: 32, scope: !8669)
!8688 = !DILocation(line: 2418, column: 43, scope: !8669)
!8689 = !DILocation(line: 2418, column: 7, scope: !8669)
!8690 = !DILocation(line: 2419, column: 7, scope: !8669)
!8691 = !DILocation(line: 2424, column: 23, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2422, column: 6)
!8693 = !DILocation(line: 2424, column: 29, scope: !8692)
!8694 = !DILocation(line: 2424, column: 34, scope: !8692)
!8695 = !DILocation(line: 2424, column: 39, scope: !8692)
!8696 = !DILocation(line: 2424, column: 7, scope: !8692)
!8697 = !DILocation(line: 2425, column: 19, scope: !8692)
!8698 = !DILocation(line: 2425, column: 30, scope: !8692)
!8699 = !DILocation(line: 2425, column: 35, scope: !8692)
!8700 = !DILocation(line: 2425, column: 7, scope: !8692)
!8701 = !DILocation(line: 2426, column: 20, scope: !8692)
!8702 = !DILocation(line: 2426, column: 7, scope: !8692)
!8703 = !DILocation(line: 2427, column: 17, scope: !8692)
!8704 = !DILocation(line: 2427, column: 7, scope: !8692)
!8705 = !DILocation(line: 2430, column: 23, scope: !8692)
!8706 = !DILocation(line: 2430, column: 34, scope: !8692)
!8707 = !DILocation(line: 2430, column: 39, scope: !8692)
!8708 = !DILocation(line: 2430, column: 7, scope: !8692)
!8709 = !DILocation(line: 2433, column: 21, scope: !8692)
!8710 = !DILocation(line: 2433, column: 32, scope: !8692)
!8711 = !DILocation(line: 2433, column: 43, scope: !8692)
!8712 = !DILocation(line: 2433, column: 7, scope: !8692)
!8713 = !DILocation(line: 2434, column: 7, scope: !8692)
!8714 = !DILocation(line: 2438, column: 15, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2437, column: 6)
!8716 = !DILocation(line: 2438, column: 7, scope: !8715)
!8717 = !DILocation(line: 2439, column: 7, scope: !8715)
!8718 = !DILocation(line: 2442, column: 5, scope: !8622)
!8719 = !DILocation(line: 2446, column: 13, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2445, column: 4)
!8721 = !DILocation(line: 2446, column: 5, scope: !8720)
!8722 = !DILocation(line: 2447, column: 5, scope: !8720)
!8723 = !DILocation(line: 2451, column: 14, scope: !8403)
!8724 = !DILocation(line: 2451, column: 22, scope: !8403)
!8725 = !DILocation(line: 2451, column: 27, scope: !8403)
!8726 = !DILocation(line: 2451, column: 3, scope: !8403)
!8727 = !DILocation(line: 2452, column: 16, scope: !8403)
!8728 = !DILocation(line: 2452, column: 3, scope: !8403)
!8729 = !DILocation(line: 2453, column: 16, scope: !8403)
!8730 = !DILocation(line: 2453, column: 24, scope: !8403)
!8731 = !DILocation(line: 2453, column: 3, scope: !8403)
!8732 = !DILocation(line: 2454, column: 15, scope: !8403)
!8733 = !DILocation(line: 2454, column: 23, scope: !8403)
!8734 = !DILocation(line: 2454, column: 31, scope: !8403)
!8735 = !DILocation(line: 2454, column: 3, scope: !8403)
!8736 = !DILocation(line: 2455, column: 18, scope: !8403)
!8737 = !DILocation(line: 2455, column: 3, scope: !8403)
!8738 = !DILocation(line: 2455, column: 16, scope: !8403)
!8739 = !DILocation(line: 2455, column: 47, scope: !8403)
!8740 = !DILocation(line: 2455, column: 32, scope: !8403)
!8741 = !DILocation(line: 2455, column: 45, scope: !8403)
!8742 = !DILocation(line: 2455, column: 76, scope: !8403)
!8743 = !DILocation(line: 2455, column: 61, scope: !8403)
!8744 = !DILocation(line: 2455, column: 74, scope: !8403)
!8745 = !DILocation(line: 2456, column: 18, scope: !8403)
!8746 = !DILocation(line: 2456, column: 3, scope: !8403)
!8747 = !DILocation(line: 2456, column: 16, scope: !8403)
!8748 = !DILocation(line: 2456, column: 47, scope: !8403)
!8749 = !DILocation(line: 2456, column: 32, scope: !8403)
!8750 = !DILocation(line: 2456, column: 45, scope: !8403)
!8751 = !DILocation(line: 2456, column: 76, scope: !8403)
!8752 = !DILocation(line: 2456, column: 61, scope: !8403)
!8753 = !DILocation(line: 2456, column: 74, scope: !8403)
!8754 = !DILocation(line: 2457, column: 18, scope: !8403)
!8755 = !DILocation(line: 2457, column: 3, scope: !8403)
!8756 = !DILocation(line: 2457, column: 16, scope: !8403)
!8757 = !DILocation(line: 2457, column: 47, scope: !8403)
!8758 = !DILocation(line: 2457, column: 32, scope: !8403)
!8759 = !DILocation(line: 2457, column: 45, scope: !8403)
!8760 = !DILocation(line: 2457, column: 76, scope: !8403)
!8761 = !DILocation(line: 2457, column: 61, scope: !8403)
!8762 = !DILocation(line: 2457, column: 74, scope: !8403)
!8763 = !DILocation(line: 2459, column: 25, scope: !8403)
!8764 = !DILocation(line: 2459, column: 39, scope: !8403)
!8765 = !DILocation(line: 2459, column: 53, scope: !8403)
!8766 = !DILocation(line: 2460, column: 25, scope: !8403)
!8767 = !DILocation(line: 2460, column: 39, scope: !8403)
!8768 = !DILocation(line: 2460, column: 53, scope: !8403)
!8769 = !DILocation(line: 2461, column: 25, scope: !8403)
!8770 = !DILocation(line: 2461, column: 39, scope: !8403)
!8771 = !DILocation(line: 2461, column: 53, scope: !8403)
!8772 = !DILocation(line: 2459, column: 10, scope: !8403)
!8773 = !DILocation(line: 2459, column: 8, scope: !8403)
!8774 = !DILocation(line: 2462, column: 7, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 2462, column: 7)
!8776 = !DILocation(line: 2462, column: 12, scope: !8775)
!8777 = !DILocation(line: 2462, column: 7, scope: !8403)
!8778 = !DILocation(line: 2463, column: 12, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 2462, column: 18)
!8780 = !DILocation(line: 2463, column: 4, scope: !8779)
!8781 = !DILocation(line: 2464, column: 3, scope: !8779)
!8782 = !DILocation(line: 2467, column: 15, scope: !8403)
!8783 = !DILocation(line: 2467, column: 20, scope: !8403)
!8784 = !DILocation(line: 2467, column: 28, scope: !8403)
!8785 = !DILocation(line: 2467, column: 36, scope: !8403)
!8786 = !DILocation(line: 2467, column: 41, scope: !8403)
!8787 = !DILocation(line: 2467, column: 3, scope: !8403)
!8788 = !DILocation(line: 2468, column: 2, scope: !8403)
!8789 = !DILocation(line: 2469, column: 1, scope: !8384)
!8790 = distinct !DISubprogram(name: "distlimit_id_looper", scope: !3, file: !3, line: 2495, type: !4251, scopeLine: 2496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8791 = !DILocalVariable(name: "con", arg: 1, scope: !8790, file: !3, line: 2495, type: !2708)
!8792 = !DILocation(line: 2495, column: 46, scope: !8790)
!8793 = !DILocalVariable(name: "func", arg: 2, scope: !8790, file: !3, line: 2495, type: !2599)
!8794 = !DILocation(line: 2495, column: 68, scope: !8790)
!8795 = !DILocalVariable(name: "userdata", arg: 3, scope: !8790, file: !3, line: 2495, type: !431)
!8796 = !DILocation(line: 2495, column: 80, scope: !8790)
!8797 = !DILocalVariable(name: "data", scope: !8790, file: !3, line: 2497, type: !2416)
!8798 = !DILocation(line: 2497, column: 24, scope: !8790)
!8799 = !DILocation(line: 2497, column: 31, scope: !8790)
!8800 = !DILocation(line: 2497, column: 36, scope: !8790)
!8801 = !DILocation(line: 2500, column: 2, scope: !8790)
!8802 = !DILocation(line: 2500, column: 7, scope: !8790)
!8803 = !DILocation(line: 2500, column: 20, scope: !8790)
!8804 = !DILocation(line: 2500, column: 26, scope: !8790)
!8805 = !DILocation(line: 2500, column: 12, scope: !8790)
!8806 = !DILocation(line: 2500, column: 38, scope: !8790)
!8807 = !DILocation(line: 2501, column: 1, scope: !8790)
!8808 = distinct !DISubprogram(name: "distlimit_new_data", scope: !3, file: !3, line: 2488, type: !2610, scopeLine: 2489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8809 = !DILocalVariable(name: "cdata", arg: 1, scope: !8808, file: !3, line: 2488, type: !431)
!8810 = !DILocation(line: 2488, column: 38, scope: !8808)
!8811 = !DILocalVariable(name: "data", scope: !8808, file: !3, line: 2490, type: !2416)
!8812 = !DILocation(line: 2490, column: 24, scope: !8808)
!8813 = !DILocation(line: 2490, column: 55, scope: !8808)
!8814 = !DILocation(line: 2490, column: 31, scope: !8808)
!8815 = !DILocation(line: 2492, column: 2, scope: !8808)
!8816 = !DILocation(line: 2492, column: 8, scope: !8808)
!8817 = !DILocation(line: 2492, column: 13, scope: !8808)
!8818 = !DILocation(line: 2493, column: 1, scope: !8808)
!8819 = distinct !DISubprogram(name: "distlimit_get_tars", scope: !3, file: !3, line: 2503, type: !4285, scopeLine: 2504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8820 = !DILocalVariable(name: "con", arg: 1, scope: !8819, file: !3, line: 2503, type: !2708)
!8821 = !DILocation(line: 2503, column: 44, scope: !8819)
!8822 = !DILocalVariable(name: "list", arg: 2, scope: !8819, file: !3, line: 2503, type: !1287)
!8823 = !DILocation(line: 2503, column: 59, scope: !8819)
!8824 = !DILocation(line: 2505, column: 6, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 2505, column: 6)
!8826 = !DILocation(line: 2505, column: 10, scope: !8825)
!8827 = !DILocation(line: 2505, column: 13, scope: !8825)
!8828 = !DILocation(line: 2505, column: 6, scope: !8819)
!8829 = !DILocalVariable(name: "data", scope: !8830, file: !3, line: 2506, type: !2416)
!8830 = distinct !DILexicalBlock(scope: !8825, file: !3, line: 2505, column: 19)
!8831 = !DILocation(line: 2506, column: 25, scope: !8830)
!8832 = !DILocation(line: 2506, column: 32, scope: !8830)
!8833 = !DILocation(line: 2506, column: 37, scope: !8830)
!8834 = !DILocalVariable(name: "ct", scope: !8830, file: !3, line: 2507, type: !2244)
!8835 = !DILocation(line: 2507, column: 22, scope: !8830)
!8836 = !DILocation(line: 2510, column: 3, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8830, file: !3, line: 2510, column: 3)
!8838 = !DILocation(line: 2510, column: 3, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 2510, column: 3)
!8840 = !DILocation(line: 2510, column: 3, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 2510, column: 3)
!8842 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2510, column: 3)
!8843 = !DILocation(line: 2510, column: 3, scope: !8842)
!8844 = !DILocalVariable(name: "pchan", scope: !8845, file: !3, line: 2510, type: !399)
!8845 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 2510, column: 3)
!8846 = !DILocation(line: 2510, column: 3, scope: !8845)
!8847 = !DILocation(line: 2510, column: 3, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 2510, column: 3)
!8849 = !DILocation(line: 2510, column: 3, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8848, file: !3, line: 2510, column: 3)
!8851 = !DILocation(line: 2510, column: 3, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8848, file: !3, line: 2510, column: 3)
!8853 = !DILocation(line: 2512, column: 3, scope: !8830)
!8854 = !DILocation(line: 2515, column: 2, scope: !8819)
!8855 = !DILocation(line: 2516, column: 1, scope: !8819)
!8856 = distinct !DISubprogram(name: "distlimit_flush_tars", scope: !3, file: !3, line: 2518, type: !4324, scopeLine: 2519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8857 = !DILocalVariable(name: "con", arg: 1, scope: !8856, file: !3, line: 2518, type: !2708)
!8858 = !DILocation(line: 2518, column: 47, scope: !8856)
!8859 = !DILocalVariable(name: "list", arg: 2, scope: !8856, file: !3, line: 2518, type: !1287)
!8860 = !DILocation(line: 2518, column: 62, scope: !8856)
!8861 = !DILocalVariable(name: "no_copy", arg: 3, scope: !8856, file: !3, line: 2518, type: !1111)
!8862 = !DILocation(line: 2518, column: 73, scope: !8856)
!8863 = !DILocation(line: 2520, column: 6, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 2520, column: 6)
!8865 = !DILocation(line: 2520, column: 10, scope: !8864)
!8866 = !DILocation(line: 2520, column: 13, scope: !8864)
!8867 = !DILocation(line: 2520, column: 6, scope: !8856)
!8868 = !DILocalVariable(name: "data", scope: !8869, file: !3, line: 2521, type: !2416)
!8869 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 2520, column: 19)
!8870 = !DILocation(line: 2521, column: 25, scope: !8869)
!8871 = !DILocation(line: 2521, column: 32, scope: !8869)
!8872 = !DILocation(line: 2521, column: 37, scope: !8869)
!8873 = !DILocalVariable(name: "ct", scope: !8869, file: !3, line: 2522, type: !2244)
!8874 = !DILocation(line: 2522, column: 22, scope: !8869)
!8875 = !DILocation(line: 2522, column: 27, scope: !8869)
!8876 = !DILocation(line: 2522, column: 33, scope: !8869)
!8877 = !DILocation(line: 2525, column: 3, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2525, column: 3)
!8879 = distinct !DILexicalBlock(scope: !8869, file: !3, line: 2525, column: 3)
!8880 = !DILocation(line: 2525, column: 3, scope: !8879)
!8881 = !DILocalVariable(name: "ctn", scope: !8882, file: !3, line: 2525, type: !2244)
!8882 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 2525, column: 3)
!8883 = !DILocation(line: 2525, column: 3, scope: !8882)
!8884 = !DILocation(line: 2525, column: 3, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 2525, column: 3)
!8886 = !DILocation(line: 2525, column: 3, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2525, column: 3)
!8888 = !DILocation(line: 2526, column: 2, scope: !8869)
!8889 = !DILocation(line: 2527, column: 1, scope: !8856)
!8890 = distinct !DISubprogram(name: "distlimit_evaluate", scope: !3, file: !3, line: 2529, type: !4392, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!8891 = !DILocalVariable(name: "con", arg: 1, scope: !8890, file: !3, line: 2529, type: !2708)
!8892 = !DILocation(line: 2529, column: 45, scope: !8890)
!8893 = !DILocalVariable(name: "cob", arg: 2, scope: !8890, file: !3, line: 2529, type: !2733)
!8894 = !DILocation(line: 2529, column: 65, scope: !8890)
!8895 = !DILocalVariable(name: "targets", arg: 3, scope: !8890, file: !3, line: 2529, type: !1287)
!8896 = !DILocation(line: 2529, column: 80, scope: !8890)
!8897 = !DILocalVariable(name: "data", scope: !8890, file: !3, line: 2531, type: !2416)
!8898 = !DILocation(line: 2531, column: 24, scope: !8890)
!8899 = !DILocation(line: 2531, column: 31, scope: !8890)
!8900 = !DILocation(line: 2531, column: 36, scope: !8890)
!8901 = !DILocalVariable(name: "ct", scope: !8890, file: !3, line: 2532, type: !2244)
!8902 = !DILocation(line: 2532, column: 21, scope: !8890)
!8903 = !DILocation(line: 2532, column: 26, scope: !8890)
!8904 = !DILocation(line: 2532, column: 35, scope: !8890)
!8905 = !DILocation(line: 2535, column: 6, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 2535, column: 6)
!8907 = !DILocation(line: 2535, column: 6, scope: !8890)
!8908 = !DILocalVariable(name: "dvec", scope: !8909, file: !3, line: 2536, type: !469)
!8909 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 2535, column: 29)
!8910 = !DILocation(line: 2536, column: 9, scope: !8909)
!8911 = !DILocalVariable(name: "dist", scope: !8909, file: !3, line: 2536, type: !467)
!8912 = !DILocation(line: 2536, column: 18, scope: !8909)
!8913 = !DILocalVariable(name: "sfac", scope: !8909, file: !3, line: 2536, type: !467)
!8914 = !DILocation(line: 2536, column: 24, scope: !8909)
!8915 = !DILocalVariable(name: "clamp_surf", scope: !8909, file: !3, line: 2537, type: !420)
!8916 = !DILocation(line: 2537, column: 9, scope: !8909)
!8917 = !DILocation(line: 2540, column: 19, scope: !8909)
!8918 = !DILocation(line: 2540, column: 24, scope: !8909)
!8919 = !DILocation(line: 2540, column: 35, scope: !8909)
!8920 = !DILocation(line: 2540, column: 39, scope: !8909)
!8921 = !DILocation(line: 2540, column: 10, scope: !8909)
!8922 = !DILocation(line: 2540, column: 8, scope: !8909)
!8923 = !DILocation(line: 2543, column: 7, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 2543, column: 7)
!8925 = !DILocation(line: 2543, column: 13, scope: !8924)
!8926 = !DILocation(line: 2543, column: 18, scope: !8924)
!8927 = !DILocation(line: 2543, column: 7, scope: !8909)
!8928 = !DILocation(line: 2544, column: 17, scope: !8924)
!8929 = !DILocation(line: 2544, column: 4, scope: !8924)
!8930 = !DILocation(line: 2544, column: 10, scope: !8924)
!8931 = !DILocation(line: 2544, column: 15, scope: !8924)
!8932 = !DILocation(line: 2547, column: 7, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 2547, column: 7)
!8934 = !DILocation(line: 2547, column: 13, scope: !8933)
!8935 = !DILocation(line: 2547, column: 18, scope: !8933)
!8936 = !DILocation(line: 2547, column: 7, scope: !8909)
!8937 = !DILocation(line: 2549, column: 8, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 2549, column: 8)
!8939 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 2547, column: 40)
!8940 = !DILocation(line: 2549, column: 16, scope: !8938)
!8941 = !DILocation(line: 2549, column: 22, scope: !8938)
!8942 = !DILocation(line: 2549, column: 13, scope: !8938)
!8943 = !DILocation(line: 2549, column: 8, scope: !8939)
!8944 = !DILocation(line: 2550, column: 16, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 2549, column: 28)
!8946 = !DILocation(line: 2551, column: 9, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 2551, column: 9)
!8948 = !DILocation(line: 2551, column: 14, scope: !8947)
!8949 = !DILocation(line: 2551, column: 9, scope: !8945)
!8950 = !DILocation(line: 2551, column: 30, scope: !8947)
!8951 = !DILocation(line: 2551, column: 36, scope: !8947)
!8952 = !DILocation(line: 2551, column: 43, scope: !8947)
!8953 = !DILocation(line: 2551, column: 41, scope: !8947)
!8954 = !DILocation(line: 2551, column: 28, scope: !8947)
!8955 = !DILocation(line: 2551, column: 23, scope: !8947)
!8956 = !DILocation(line: 2552, column: 4, scope: !8945)
!8957 = !DILocation(line: 2554, column: 13, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 2554, column: 13)
!8959 = !DILocation(line: 2554, column: 19, scope: !8958)
!8960 = !DILocation(line: 2554, column: 24, scope: !8958)
!8961 = !DILocation(line: 2554, column: 13, scope: !8938)
!8962 = !DILocation(line: 2555, column: 9, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 2555, column: 9)
!8964 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 2554, column: 45)
!8965 = !DILocation(line: 2555, column: 18, scope: !8963)
!8966 = !DILocation(line: 2555, column: 24, scope: !8963)
!8967 = !DILocation(line: 2555, column: 31, scope: !8963)
!8968 = !DILocation(line: 2555, column: 37, scope: !8963)
!8969 = !DILocation(line: 2555, column: 29, scope: !8963)
!8970 = !DILocation(line: 2555, column: 14, scope: !8963)
!8971 = !DILocation(line: 2555, column: 9, scope: !8964)
!8972 = !DILocation(line: 2557, column: 5, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 2555, column: 44)
!8974 = !DILocation(line: 2558, column: 4, scope: !8964)
!8975 = !DILocation(line: 2559, column: 3, scope: !8939)
!8976 = !DILocation(line: 2560, column: 12, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 2560, column: 12)
!8978 = !DILocation(line: 2560, column: 18, scope: !8977)
!8979 = !DILocation(line: 2560, column: 23, scope: !8977)
!8980 = !DILocation(line: 2560, column: 12, scope: !8933)
!8981 = !DILocation(line: 2562, column: 8, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 2562, column: 8)
!8983 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 2560, column: 44)
!8984 = !DILocation(line: 2562, column: 16, scope: !8982)
!8985 = !DILocation(line: 2562, column: 22, scope: !8982)
!8986 = !DILocation(line: 2562, column: 13, scope: !8982)
!8987 = !DILocation(line: 2562, column: 8, scope: !8983)
!8988 = !DILocation(line: 2563, column: 16, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 2562, column: 28)
!8990 = !DILocation(line: 2564, column: 9, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8989, file: !3, line: 2564, column: 9)
!8992 = !DILocation(line: 2564, column: 14, scope: !8991)
!8993 = !DILocation(line: 2564, column: 9, scope: !8989)
!8994 = !DILocation(line: 2564, column: 30, scope: !8991)
!8995 = !DILocation(line: 2564, column: 36, scope: !8991)
!8996 = !DILocation(line: 2564, column: 43, scope: !8991)
!8997 = !DILocation(line: 2564, column: 41, scope: !8991)
!8998 = !DILocation(line: 2564, column: 28, scope: !8991)
!8999 = !DILocation(line: 2564, column: 23, scope: !8991)
!9000 = !DILocation(line: 2565, column: 4, scope: !8989)
!9001 = !DILocation(line: 2567, column: 13, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 2567, column: 13)
!9003 = !DILocation(line: 2567, column: 19, scope: !9002)
!9004 = !DILocation(line: 2567, column: 24, scope: !9002)
!9005 = !DILocation(line: 2567, column: 13, scope: !8982)
!9006 = !DILocation(line: 2569, column: 9, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 2569, column: 9)
!9008 = distinct !DILexicalBlock(scope: !9002, file: !3, line: 2567, column: 45)
!9009 = !DILocation(line: 2569, column: 18, scope: !9007)
!9010 = !DILocation(line: 2569, column: 24, scope: !9007)
!9011 = !DILocation(line: 2569, column: 31, scope: !9007)
!9012 = !DILocation(line: 2569, column: 37, scope: !9007)
!9013 = !DILocation(line: 2569, column: 29, scope: !9007)
!9014 = !DILocation(line: 2569, column: 14, scope: !9007)
!9015 = !DILocation(line: 2569, column: 9, scope: !9008)
!9016 = !DILocation(line: 2570, column: 21, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 2569, column: 44)
!9018 = !DILocation(line: 2570, column: 27, scope: !9017)
!9019 = !DILocation(line: 2570, column: 49, scope: !9017)
!9020 = !DILocation(line: 2570, column: 56, scope: !9017)
!9021 = !DILocation(line: 2570, column: 62, scope: !9017)
!9022 = !DILocation(line: 2570, column: 54, scope: !9017)
!9023 = !DILocation(line: 2570, column: 47, scope: !9017)
!9024 = !DILocation(line: 2570, column: 70, scope: !9017)
!9025 = !DILocation(line: 2570, column: 76, scope: !9017)
!9026 = !DILocation(line: 2570, column: 68, scope: !9017)
!9027 = !DILocation(line: 2570, column: 42, scope: !9017)
!9028 = !DILocation(line: 2570, column: 40, scope: !9017)
!9029 = !DILocation(line: 2570, column: 32, scope: !9017)
!9030 = !DILocation(line: 2570, column: 85, scope: !9017)
!9031 = !DILocation(line: 2570, column: 91, scope: !9017)
!9032 = !DILocation(line: 2570, column: 83, scope: !9017)
!9033 = !DILocation(line: 2570, column: 11, scope: !9017)
!9034 = !DILocation(line: 2571, column: 10, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 2571, column: 10)
!9036 = !DILocation(line: 2571, column: 15, scope: !9035)
!9037 = !DILocation(line: 2571, column: 10, scope: !9017)
!9038 = !DILocation(line: 2571, column: 32, scope: !9035)
!9039 = !DILocation(line: 2571, column: 29, scope: !9035)
!9040 = !DILocation(line: 2571, column: 24, scope: !9035)
!9041 = !DILocation(line: 2573, column: 17, scope: !9017)
!9042 = !DILocation(line: 2574, column: 5, scope: !9017)
!9043 = !DILocation(line: 2575, column: 4, scope: !9008)
!9044 = !DILocation(line: 2576, column: 3, scope: !8983)
!9045 = !DILocation(line: 2578, column: 8, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 2578, column: 8)
!9047 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 2577, column: 8)
!9048 = !DILocation(line: 2578, column: 33, scope: !9046)
!9049 = !DILocation(line: 2578, column: 8, scope: !9047)
!9050 = !DILocation(line: 2579, column: 16, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 2578, column: 39)
!9052 = !DILocation(line: 2580, column: 9, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 2580, column: 9)
!9054 = !DILocation(line: 2580, column: 14, scope: !9053)
!9055 = !DILocation(line: 2580, column: 9, scope: !9051)
!9056 = !DILocation(line: 2580, column: 30, scope: !9053)
!9057 = !DILocation(line: 2580, column: 36, scope: !9053)
!9058 = !DILocation(line: 2580, column: 43, scope: !9053)
!9059 = !DILocation(line: 2580, column: 41, scope: !9053)
!9060 = !DILocation(line: 2580, column: 28, scope: !9053)
!9061 = !DILocation(line: 2580, column: 23, scope: !9053)
!9062 = !DILocation(line: 2581, column: 4, scope: !9051)
!9063 = !DILocation(line: 2585, column: 7, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 2585, column: 7)
!9065 = !DILocation(line: 2585, column: 7, scope: !8909)
!9066 = !DILocation(line: 2587, column: 19, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 2585, column: 19)
!9068 = !DILocation(line: 2587, column: 25, scope: !9067)
!9069 = !DILocation(line: 2587, column: 29, scope: !9067)
!9070 = !DILocation(line: 2587, column: 40, scope: !9067)
!9071 = !DILocation(line: 2587, column: 45, scope: !9067)
!9072 = !DILocation(line: 2587, column: 56, scope: !9067)
!9073 = !DILocation(line: 2587, column: 4, scope: !9067)
!9074 = !DILocation(line: 2590, column: 15, scope: !9067)
!9075 = !DILocation(line: 2590, column: 20, scope: !9067)
!9076 = !DILocation(line: 2590, column: 31, scope: !9067)
!9077 = !DILocation(line: 2590, column: 4, scope: !9067)
!9078 = !DILocation(line: 2591, column: 3, scope: !9067)
!9079 = !DILocation(line: 2592, column: 2, scope: !8909)
!9080 = !DILocation(line: 2593, column: 1, scope: !8890)
!9081 = distinct !DISubprogram(name: "len_v3v3", scope: !3158, file: !3158, line: 759, type: !5454, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9082 = !DILocalVariable(name: "a", arg: 1, scope: !9081, file: !3158, line: 759, type: !1054)
!9083 = !DILocation(line: 759, column: 36, scope: !9081)
!9084 = !DILocalVariable(name: "b", arg: 2, scope: !9081, file: !3158, line: 759, type: !1054)
!9085 = !DILocation(line: 759, column: 54, scope: !9081)
!9086 = !DILocalVariable(name: "d", scope: !9081, file: !3158, line: 761, type: !469)
!9087 = !DILocation(line: 761, column: 8, scope: !9081)
!9088 = !DILocation(line: 763, column: 14, scope: !9081)
!9089 = !DILocation(line: 763, column: 17, scope: !9081)
!9090 = !DILocation(line: 763, column: 20, scope: !9081)
!9091 = !DILocation(line: 763, column: 2, scope: !9081)
!9092 = !DILocation(line: 764, column: 16, scope: !9081)
!9093 = !DILocation(line: 764, column: 9, scope: !9081)
!9094 = !DILocation(line: 764, column: 2, scope: !9081)
!9095 = distinct !DISubprogram(name: "stretchto_id_looper", scope: !3, file: !3, line: 2624, type: !4251, scopeLine: 2625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9096 = !DILocalVariable(name: "con", arg: 1, scope: !9095, file: !3, line: 2624, type: !2708)
!9097 = !DILocation(line: 2624, column: 46, scope: !9095)
!9098 = !DILocalVariable(name: "func", arg: 2, scope: !9095, file: !3, line: 2624, type: !2599)
!9099 = !DILocation(line: 2624, column: 68, scope: !9095)
!9100 = !DILocalVariable(name: "userdata", arg: 3, scope: !9095, file: !3, line: 2624, type: !431)
!9101 = !DILocation(line: 2624, column: 80, scope: !9095)
!9102 = !DILocalVariable(name: "data", scope: !9095, file: !3, line: 2626, type: !2427)
!9103 = !DILocation(line: 2626, column: 24, scope: !9095)
!9104 = !DILocation(line: 2626, column: 31, scope: !9095)
!9105 = !DILocation(line: 2626, column: 36, scope: !9095)
!9106 = !DILocation(line: 2629, column: 2, scope: !9095)
!9107 = !DILocation(line: 2629, column: 7, scope: !9095)
!9108 = !DILocation(line: 2629, column: 20, scope: !9095)
!9109 = !DILocation(line: 2629, column: 26, scope: !9095)
!9110 = !DILocation(line: 2629, column: 12, scope: !9095)
!9111 = !DILocation(line: 2629, column: 38, scope: !9095)
!9112 = !DILocation(line: 2630, column: 1, scope: !9095)
!9113 = distinct !DISubprogram(name: "stretchto_new_data", scope: !3, file: !3, line: 2612, type: !2610, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9114 = !DILocalVariable(name: "cdata", arg: 1, scope: !9113, file: !3, line: 2612, type: !431)
!9115 = !DILocation(line: 2612, column: 38, scope: !9113)
!9116 = !DILocalVariable(name: "data", scope: !9113, file: !3, line: 2614, type: !2427)
!9117 = !DILocation(line: 2614, column: 24, scope: !9113)
!9118 = !DILocation(line: 2614, column: 55, scope: !9113)
!9119 = !DILocation(line: 2614, column: 31, scope: !9113)
!9120 = !DILocation(line: 2616, column: 2, scope: !9113)
!9121 = !DILocation(line: 2616, column: 8, scope: !9113)
!9122 = !DILocation(line: 2616, column: 16, scope: !9113)
!9123 = !DILocation(line: 2617, column: 2, scope: !9113)
!9124 = !DILocation(line: 2617, column: 8, scope: !9113)
!9125 = !DILocation(line: 2617, column: 14, scope: !9113)
!9126 = !DILocation(line: 2618, column: 2, scope: !9113)
!9127 = !DILocation(line: 2618, column: 8, scope: !9113)
!9128 = !DILocation(line: 2618, column: 18, scope: !9113)
!9129 = !DILocation(line: 2619, column: 2, scope: !9113)
!9130 = !DILocation(line: 2619, column: 8, scope: !9113)
!9131 = !DILocation(line: 2619, column: 14, scope: !9113)
!9132 = !DILocation(line: 2620, column: 2, scope: !9113)
!9133 = !DILocation(line: 2620, column: 8, scope: !9113)
!9134 = !DILocation(line: 2620, column: 18, scope: !9113)
!9135 = !DILocation(line: 2621, column: 2, scope: !9113)
!9136 = !DILocation(line: 2621, column: 8, scope: !9113)
!9137 = !DILocation(line: 2621, column: 18, scope: !9113)
!9138 = !DILocation(line: 2622, column: 1, scope: !9113)
!9139 = distinct !DISubprogram(name: "stretchto_get_tars", scope: !3, file: !3, line: 2632, type: !4285, scopeLine: 2633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9140 = !DILocalVariable(name: "con", arg: 1, scope: !9139, file: !3, line: 2632, type: !2708)
!9141 = !DILocation(line: 2632, column: 44, scope: !9139)
!9142 = !DILocalVariable(name: "list", arg: 2, scope: !9139, file: !3, line: 2632, type: !1287)
!9143 = !DILocation(line: 2632, column: 59, scope: !9139)
!9144 = !DILocation(line: 2634, column: 6, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 2634, column: 6)
!9146 = !DILocation(line: 2634, column: 10, scope: !9145)
!9147 = !DILocation(line: 2634, column: 13, scope: !9145)
!9148 = !DILocation(line: 2634, column: 6, scope: !9139)
!9149 = !DILocalVariable(name: "data", scope: !9150, file: !3, line: 2635, type: !2427)
!9150 = distinct !DILexicalBlock(scope: !9145, file: !3, line: 2634, column: 19)
!9151 = !DILocation(line: 2635, column: 25, scope: !9150)
!9152 = !DILocation(line: 2635, column: 32, scope: !9150)
!9153 = !DILocation(line: 2635, column: 37, scope: !9150)
!9154 = !DILocalVariable(name: "ct", scope: !9150, file: !3, line: 2636, type: !2244)
!9155 = !DILocation(line: 2636, column: 22, scope: !9150)
!9156 = !DILocation(line: 2639, column: 3, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 2639, column: 3)
!9158 = !DILocation(line: 2639, column: 3, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 2639, column: 3)
!9160 = !DILocation(line: 2639, column: 3, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 2639, column: 3)
!9162 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 2639, column: 3)
!9163 = !DILocation(line: 2639, column: 3, scope: !9162)
!9164 = !DILocalVariable(name: "pchan", scope: !9165, file: !3, line: 2639, type: !399)
!9165 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 2639, column: 3)
!9166 = !DILocation(line: 2639, column: 3, scope: !9165)
!9167 = !DILocation(line: 2639, column: 3, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 2639, column: 3)
!9169 = !DILocation(line: 2639, column: 3, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 2639, column: 3)
!9171 = !DILocation(line: 2639, column: 3, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 2639, column: 3)
!9173 = !DILocation(line: 2641, column: 3, scope: !9150)
!9174 = !DILocation(line: 2644, column: 2, scope: !9139)
!9175 = !DILocation(line: 2645, column: 1, scope: !9139)
!9176 = distinct !DISubprogram(name: "stretchto_flush_tars", scope: !3, file: !3, line: 2647, type: !4324, scopeLine: 2648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9177 = !DILocalVariable(name: "con", arg: 1, scope: !9176, file: !3, line: 2647, type: !2708)
!9178 = !DILocation(line: 2647, column: 47, scope: !9176)
!9179 = !DILocalVariable(name: "list", arg: 2, scope: !9176, file: !3, line: 2647, type: !1287)
!9180 = !DILocation(line: 2647, column: 62, scope: !9176)
!9181 = !DILocalVariable(name: "no_copy", arg: 3, scope: !9176, file: !3, line: 2647, type: !1111)
!9182 = !DILocation(line: 2647, column: 73, scope: !9176)
!9183 = !DILocation(line: 2649, column: 6, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 2649, column: 6)
!9185 = !DILocation(line: 2649, column: 10, scope: !9184)
!9186 = !DILocation(line: 2649, column: 13, scope: !9184)
!9187 = !DILocation(line: 2649, column: 6, scope: !9176)
!9188 = !DILocalVariable(name: "data", scope: !9189, file: !3, line: 2650, type: !2427)
!9189 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 2649, column: 19)
!9190 = !DILocation(line: 2650, column: 25, scope: !9189)
!9191 = !DILocation(line: 2650, column: 32, scope: !9189)
!9192 = !DILocation(line: 2650, column: 37, scope: !9189)
!9193 = !DILocalVariable(name: "ct", scope: !9189, file: !3, line: 2651, type: !2244)
!9194 = !DILocation(line: 2651, column: 22, scope: !9189)
!9195 = !DILocation(line: 2651, column: 27, scope: !9189)
!9196 = !DILocation(line: 2651, column: 33, scope: !9189)
!9197 = !DILocation(line: 2654, column: 3, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 2654, column: 3)
!9199 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 2654, column: 3)
!9200 = !DILocation(line: 2654, column: 3, scope: !9199)
!9201 = !DILocalVariable(name: "ctn", scope: !9202, file: !3, line: 2654, type: !2244)
!9202 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 2654, column: 3)
!9203 = !DILocation(line: 2654, column: 3, scope: !9202)
!9204 = !DILocation(line: 2654, column: 3, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 2654, column: 3)
!9206 = !DILocation(line: 2654, column: 3, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 2654, column: 3)
!9208 = !DILocation(line: 2655, column: 2, scope: !9189)
!9209 = !DILocation(line: 2656, column: 1, scope: !9176)
!9210 = distinct !DISubprogram(name: "stretchto_evaluate", scope: !3, file: !3, line: 2658, type: !4392, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9211 = !DILocalVariable(name: "con", arg: 1, scope: !9210, file: !3, line: 2658, type: !2708)
!9212 = !DILocation(line: 2658, column: 45, scope: !9210)
!9213 = !DILocalVariable(name: "cob", arg: 2, scope: !9210, file: !3, line: 2658, type: !2733)
!9214 = !DILocation(line: 2658, column: 65, scope: !9210)
!9215 = !DILocalVariable(name: "targets", arg: 3, scope: !9210, file: !3, line: 2658, type: !1287)
!9216 = !DILocation(line: 2658, column: 80, scope: !9210)
!9217 = !DILocalVariable(name: "data", scope: !9210, file: !3, line: 2660, type: !2427)
!9218 = !DILocation(line: 2660, column: 24, scope: !9210)
!9219 = !DILocation(line: 2660, column: 31, scope: !9210)
!9220 = !DILocation(line: 2660, column: 36, scope: !9210)
!9221 = !DILocalVariable(name: "ct", scope: !9210, file: !3, line: 2661, type: !2244)
!9222 = !DILocation(line: 2661, column: 21, scope: !9210)
!9223 = !DILocation(line: 2661, column: 26, scope: !9210)
!9224 = !DILocation(line: 2661, column: 35, scope: !9210)
!9225 = !DILocation(line: 2664, column: 6, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 2664, column: 6)
!9227 = !DILocation(line: 2664, column: 6, scope: !9210)
!9228 = !DILocalVariable(name: "size", scope: !9229, file: !3, line: 2665, type: !469)
!9229 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 2664, column: 29)
!9230 = !DILocation(line: 2665, column: 9, scope: !9229)
!9231 = !DILocalVariable(name: "scale", scope: !9229, file: !3, line: 2665, type: !469)
!9232 = !DILocation(line: 2665, column: 18, scope: !9229)
!9233 = !DILocalVariable(name: "vec", scope: !9229, file: !3, line: 2665, type: !469)
!9234 = !DILocation(line: 2665, column: 28, scope: !9229)
!9235 = !DILocalVariable(name: "xx", scope: !9229, file: !3, line: 2665, type: !469)
!9236 = !DILocation(line: 2665, column: 36, scope: !9229)
!9237 = !DILocalVariable(name: "zz", scope: !9229, file: !3, line: 2665, type: !469)
!9238 = !DILocation(line: 2665, column: 43, scope: !9229)
!9239 = !DILocalVariable(name: "orth", scope: !9229, file: !3, line: 2665, type: !469)
!9240 = !DILocation(line: 2665, column: 50, scope: !9229)
!9241 = !DILocalVariable(name: "totmat", scope: !9229, file: !3, line: 2666, type: !474)
!9242 = !DILocation(line: 2666, column: 9, scope: !9229)
!9243 = !DILocalVariable(name: "dist", scope: !9229, file: !3, line: 2667, type: !467)
!9244 = !DILocation(line: 2667, column: 9, scope: !9229)
!9245 = !DILocalVariable(name: "bulge", scope: !9229, file: !3, line: 2667, type: !467)
!9246 = !DILocation(line: 2667, column: 15, scope: !9229)
!9247 = !DILocation(line: 2670, column: 16, scope: !9229)
!9248 = !DILocation(line: 2670, column: 22, scope: !9229)
!9249 = !DILocation(line: 2670, column: 27, scope: !9229)
!9250 = !DILocation(line: 2670, column: 3, scope: !9229)
!9251 = !DILocation(line: 2673, column: 19, scope: !9229)
!9252 = !DILocation(line: 2673, column: 23, scope: !9229)
!9253 = !DILocation(line: 2673, column: 28, scope: !9229)
!9254 = !DILocation(line: 2673, column: 3, scope: !9229)
!9255 = !DILocation(line: 2676, column: 19, scope: !9229)
!9256 = !DILocation(line: 2676, column: 23, scope: !9229)
!9257 = !DILocation(line: 2676, column: 28, scope: !9229)
!9258 = !DILocation(line: 2676, column: 3, scope: !9229)
!9259 = !DILocation(line: 2686, column: 19, scope: !9229)
!9260 = !DILocation(line: 2686, column: 24, scope: !9229)
!9261 = !DILocation(line: 2686, column: 35, scope: !9229)
!9262 = !DILocation(line: 2686, column: 39, scope: !9229)
!9263 = !DILocation(line: 2686, column: 10, scope: !9229)
!9264 = !DILocation(line: 2686, column: 8, scope: !9229)
!9265 = !DILocation(line: 2688, column: 11, scope: !9229)
!9266 = !DILocation(line: 2688, column: 8, scope: !9229)
!9267 = !DILocation(line: 2691, column: 7, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 2691, column: 7)
!9269 = !DILocation(line: 2691, column: 13, scope: !9268)
!9270 = !DILocation(line: 2691, column: 23, scope: !9268)
!9271 = !DILocation(line: 2691, column: 7, scope: !9229)
!9272 = !DILocation(line: 2692, column: 22, scope: !9268)
!9273 = !DILocation(line: 2692, column: 4, scope: !9268)
!9274 = !DILocation(line: 2692, column: 10, scope: !9268)
!9275 = !DILocation(line: 2692, column: 20, scope: !9268)
!9276 = !DILocation(line: 2694, column: 14, scope: !9229)
!9277 = !DILocation(line: 2694, column: 21, scope: !9229)
!9278 = !DILocation(line: 2694, column: 27, scope: !9229)
!9279 = !DILocation(line: 2694, column: 19, scope: !9229)
!9280 = !DILocation(line: 2694, column: 3, scope: !9229)
!9281 = !DILocation(line: 2694, column: 12, scope: !9229)
!9282 = !DILocation(line: 2696, column: 16, scope: !9229)
!9283 = !DILocation(line: 2696, column: 22, scope: !9229)
!9284 = !DILocation(line: 2696, column: 34, scope: !9229)
!9285 = !DILocation(line: 2696, column: 32, scope: !9229)
!9286 = !DILocation(line: 2696, column: 40, scope: !9229)
!9287 = !DILocation(line: 2696, column: 46, scope: !9229)
!9288 = !DILocation(line: 2696, column: 11, scope: !9229)
!9289 = !DILocation(line: 2696, column: 9, scope: !9229)
!9290 = !DILocation(line: 2698, column: 7, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 2698, column: 7)
!9292 = !DILocation(line: 2698, column: 13, scope: !9291)
!9293 = !DILocation(line: 2698, column: 7, scope: !9229)
!9294 = !DILocation(line: 2699, column: 8, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 2699, column: 8)
!9296 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 2698, column: 21)
!9297 = !DILocation(line: 2699, column: 14, scope: !9295)
!9298 = !DILocation(line: 2699, column: 19, scope: !9295)
!9299 = !DILocation(line: 2699, column: 8, scope: !9296)
!9300 = !DILocalVariable(name: "bulge_max", scope: !9301, file: !3, line: 2700, type: !467)
!9301 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 2699, column: 49)
!9302 = !DILocation(line: 2700, column: 11, scope: !9301)
!9303 = !DILocation(line: 2700, column: 30, scope: !9301)
!9304 = !DILocation(line: 2700, column: 36, scope: !9301)
!9305 = !DILocation(line: 2700, column: 23, scope: !9301)
!9306 = !DILocalVariable(name: "hard", scope: !9301, file: !3, line: 2701, type: !467)
!9307 = !DILocation(line: 2701, column: 11, scope: !9301)
!9308 = !DILocation(line: 2701, column: 25, scope: !9301)
!9309 = !DILocation(line: 2701, column: 32, scope: !9301)
!9310 = !DILocation(line: 2701, column: 18, scope: !9301)
!9311 = !DILocalVariable(name: "range", scope: !9301, file: !3, line: 2703, type: !467)
!9312 = !DILocation(line: 2703, column: 11, scope: !9301)
!9313 = !DILocation(line: 2703, column: 19, scope: !9301)
!9314 = !DILocation(line: 2703, column: 29, scope: !9301)
!9315 = !DILocalVariable(name: "scale", scope: !9301, file: !3, line: 2704, type: !467)
!9316 = !DILocation(line: 2704, column: 11, scope: !9301)
!9317 = !DILocation(line: 2704, column: 20, scope: !9301)
!9318 = !DILocation(line: 2704, column: 26, scope: !9301)
!9319 = !DILocation(line: 2704, column: 19, scope: !9301)
!9320 = !DILocation(line: 2704, column: 43, scope: !9301)
!9321 = !DILocation(line: 2704, column: 41, scope: !9301)
!9322 = !DILocalVariable(name: "soft", scope: !9301, file: !3, line: 2705, type: !467)
!9323 = !DILocation(line: 2705, column: 11, scope: !9301)
!9324 = !DILocation(line: 2705, column: 25, scope: !9301)
!9325 = !DILocation(line: 2705, column: 40, scope: !9301)
!9326 = !DILocation(line: 2705, column: 46, scope: !9301)
!9327 = !DILocation(line: 2705, column: 56, scope: !9301)
!9328 = !DILocation(line: 2705, column: 54, scope: !9301)
!9329 = !DILocation(line: 2705, column: 33, scope: !9301)
!9330 = !DILocation(line: 2705, column: 31, scope: !9301)
!9331 = !DILocation(line: 2705, column: 63, scope: !9301)
!9332 = !DILocation(line: 2705, column: 23, scope: !9301)
!9333 = !DILocation(line: 2705, column: 18, scope: !9301)
!9334 = !DILocation(line: 2707, column: 21, scope: !9301)
!9335 = !DILocation(line: 2707, column: 27, scope: !9301)
!9336 = !DILocation(line: 2707, column: 33, scope: !9301)
!9337 = !DILocation(line: 2707, column: 39, scope: !9301)
!9338 = !DILocation(line: 2707, column: 13, scope: !9301)
!9339 = !DILocation(line: 2707, column: 11, scope: !9301)
!9340 = !DILocation(line: 2708, column: 4, scope: !9301)
!9341 = !DILocation(line: 2709, column: 3, scope: !9296)
!9342 = !DILocation(line: 2710, column: 7, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 2710, column: 7)
!9344 = !DILocation(line: 2710, column: 13, scope: !9343)
!9345 = !DILocation(line: 2710, column: 7, scope: !9229)
!9346 = !DILocation(line: 2711, column: 8, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9348, file: !3, line: 2711, column: 8)
!9348 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 2710, column: 21)
!9349 = !DILocation(line: 2711, column: 14, scope: !9347)
!9350 = !DILocation(line: 2711, column: 19, scope: !9347)
!9351 = !DILocation(line: 2711, column: 8, scope: !9348)
!9352 = !DILocalVariable(name: "bulge_min", scope: !9353, file: !3, line: 2712, type: !467)
!9353 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 2711, column: 49)
!9354 = !DILocation(line: 2712, column: 11, scope: !9353)
!9355 = !DILocation(line: 2712, column: 23, scope: !9353)
!9356 = !DILocalVariable(name: "hard", scope: !9353, file: !3, line: 2713, type: !467)
!9357 = !DILocation(line: 2713, column: 11, scope: !9353)
!9358 = !DILocation(line: 2713, column: 25, scope: !9353)
!9359 = !DILocation(line: 2713, column: 32, scope: !9353)
!9360 = !DILocation(line: 2713, column: 18, scope: !9353)
!9361 = !DILocalVariable(name: "range", scope: !9353, file: !3, line: 2715, type: !467)
!9362 = !DILocation(line: 2715, column: 11, scope: !9353)
!9363 = !DILocation(line: 2715, column: 26, scope: !9353)
!9364 = !DILocation(line: 2715, column: 24, scope: !9353)
!9365 = !DILocalVariable(name: "scale", scope: !9353, file: !3, line: 2716, type: !467)
!9366 = !DILocation(line: 2716, column: 11, scope: !9353)
!9367 = !DILocation(line: 2716, column: 20, scope: !9353)
!9368 = !DILocation(line: 2716, column: 26, scope: !9353)
!9369 = !DILocation(line: 2716, column: 19, scope: !9353)
!9370 = !DILocation(line: 2716, column: 43, scope: !9353)
!9371 = !DILocation(line: 2716, column: 41, scope: !9353)
!9372 = !DILocalVariable(name: "soft", scope: !9353, file: !3, line: 2717, type: !467)
!9373 = !DILocation(line: 2717, column: 11, scope: !9353)
!9374 = !DILocation(line: 2717, column: 25, scope: !9353)
!9375 = !DILocation(line: 2717, column: 47, scope: !9353)
!9376 = !DILocation(line: 2717, column: 45, scope: !9353)
!9377 = !DILocation(line: 2717, column: 56, scope: !9353)
!9378 = !DILocation(line: 2717, column: 54, scope: !9353)
!9379 = !DILocation(line: 2717, column: 33, scope: !9353)
!9380 = !DILocation(line: 2717, column: 31, scope: !9353)
!9381 = !DILocation(line: 2717, column: 63, scope: !9353)
!9382 = !DILocation(line: 2717, column: 23, scope: !9353)
!9383 = !DILocation(line: 2717, column: 18, scope: !9353)
!9384 = !DILocation(line: 2719, column: 21, scope: !9353)
!9385 = !DILocation(line: 2719, column: 27, scope: !9353)
!9386 = !DILocation(line: 2719, column: 33, scope: !9353)
!9387 = !DILocation(line: 2719, column: 39, scope: !9353)
!9388 = !DILocation(line: 2719, column: 13, scope: !9353)
!9389 = !DILocation(line: 2719, column: 11, scope: !9353)
!9390 = !DILocation(line: 2720, column: 4, scope: !9353)
!9391 = !DILocation(line: 2721, column: 3, scope: !9348)
!9392 = !DILocation(line: 2723, column: 11, scope: !9229)
!9393 = !DILocation(line: 2723, column: 17, scope: !9229)
!9394 = !DILocation(line: 2723, column: 3, scope: !9229)
!9395 = !DILocation(line: 2726, column: 22, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 2723, column: 26)
!9397 = !DILocation(line: 2726, column: 16, scope: !9396)
!9398 = !DILocation(line: 2726, column: 5, scope: !9396)
!9399 = !DILocation(line: 2726, column: 14, scope: !9396)
!9400 = !DILocation(line: 2727, column: 16, scope: !9396)
!9401 = !DILocation(line: 2727, column: 5, scope: !9396)
!9402 = !DILocation(line: 2727, column: 14, scope: !9396)
!9403 = !DILocation(line: 2728, column: 5, scope: !9396)
!9404 = !DILocation(line: 2730, column: 16, scope: !9396)
!9405 = !DILocation(line: 2730, column: 5, scope: !9396)
!9406 = !DILocation(line: 2730, column: 14, scope: !9396)
!9407 = !DILocation(line: 2731, column: 5, scope: !9396)
!9408 = !DILocation(line: 2731, column: 14, scope: !9396)
!9409 = !DILocation(line: 2732, column: 5, scope: !9396)
!9410 = !DILocation(line: 2734, column: 5, scope: !9396)
!9411 = !DILocation(line: 2734, column: 14, scope: !9396)
!9412 = !DILocation(line: 2735, column: 16, scope: !9396)
!9413 = !DILocation(line: 2735, column: 5, scope: !9396)
!9414 = !DILocation(line: 2735, column: 14, scope: !9396)
!9415 = !DILocation(line: 2736, column: 5, scope: !9396)
!9416 = !DILocation(line: 2739, column: 5, scope: !9396)
!9417 = !DILocation(line: 2739, column: 14, scope: !9396)
!9418 = !DILocation(line: 2740, column: 5, scope: !9396)
!9419 = !DILocation(line: 2740, column: 14, scope: !9396)
!9420 = !DILocation(line: 2741, column: 5, scope: !9396)
!9421 = !DILocation(line: 2743, column: 5, scope: !9396)
!9422 = !DILocation(line: 2747, column: 23, scope: !9229)
!9423 = !DILocation(line: 2747, column: 33, scope: !9229)
!9424 = !DILocation(line: 2747, column: 31, scope: !9229)
!9425 = !DILocation(line: 2747, column: 3, scope: !9229)
!9426 = !DILocation(line: 2747, column: 8, scope: !9229)
!9427 = !DILocation(line: 2747, column: 21, scope: !9229)
!9428 = !DILocation(line: 2748, column: 3, scope: !9229)
!9429 = !DILocation(line: 2748, column: 8, scope: !9229)
!9430 = !DILocation(line: 2748, column: 21, scope: !9229)
!9431 = !DILocation(line: 2749, column: 3, scope: !9229)
!9432 = !DILocation(line: 2749, column: 8, scope: !9229)
!9433 = !DILocation(line: 2749, column: 21, scope: !9229)
!9434 = !DILocation(line: 2750, column: 3, scope: !9229)
!9435 = !DILocation(line: 2750, column: 8, scope: !9229)
!9436 = !DILocation(line: 2750, column: 21, scope: !9229)
!9437 = !DILocation(line: 2751, column: 23, scope: !9229)
!9438 = !DILocation(line: 2751, column: 33, scope: !9229)
!9439 = !DILocation(line: 2751, column: 31, scope: !9229)
!9440 = !DILocation(line: 2751, column: 3, scope: !9229)
!9441 = !DILocation(line: 2751, column: 8, scope: !9229)
!9442 = !DILocation(line: 2751, column: 21, scope: !9229)
!9443 = !DILocation(line: 2752, column: 3, scope: !9229)
!9444 = !DILocation(line: 2752, column: 8, scope: !9229)
!9445 = !DILocation(line: 2752, column: 21, scope: !9229)
!9446 = !DILocation(line: 2753, column: 3, scope: !9229)
!9447 = !DILocation(line: 2753, column: 8, scope: !9229)
!9448 = !DILocation(line: 2753, column: 21, scope: !9229)
!9449 = !DILocation(line: 2754, column: 3, scope: !9229)
!9450 = !DILocation(line: 2754, column: 8, scope: !9229)
!9451 = !DILocation(line: 2754, column: 21, scope: !9229)
!9452 = !DILocation(line: 2755, column: 23, scope: !9229)
!9453 = !DILocation(line: 2755, column: 33, scope: !9229)
!9454 = !DILocation(line: 2755, column: 31, scope: !9229)
!9455 = !DILocation(line: 2755, column: 3, scope: !9229)
!9456 = !DILocation(line: 2755, column: 8, scope: !9229)
!9457 = !DILocation(line: 2755, column: 21, scope: !9229)
!9458 = !DILocation(line: 2757, column: 15, scope: !9229)
!9459 = !DILocation(line: 2757, column: 20, scope: !9229)
!9460 = !DILocation(line: 2757, column: 25, scope: !9229)
!9461 = !DILocation(line: 2757, column: 36, scope: !9229)
!9462 = !DILocation(line: 2757, column: 40, scope: !9229)
!9463 = !DILocation(line: 2757, column: 3, scope: !9229)
!9464 = !DILocation(line: 2758, column: 16, scope: !9229)
!9465 = !DILocation(line: 2758, column: 3, scope: !9229)
!9466 = !DILocation(line: 2761, column: 16, scope: !9229)
!9467 = !DILocation(line: 2761, column: 27, scope: !9229)
!9468 = !DILocation(line: 2761, column: 3, scope: !9229)
!9469 = !DILocation(line: 2762, column: 11, scope: !9229)
!9470 = !DILocation(line: 2762, column: 17, scope: !9229)
!9471 = !DILocation(line: 2762, column: 3, scope: !9229)
!9472 = !DILocation(line: 2766, column: 19, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 2762, column: 24)
!9474 = !DILocation(line: 2766, column: 25, scope: !9473)
!9475 = !DILocation(line: 2766, column: 30, scope: !9473)
!9476 = !DILocation(line: 2766, column: 5, scope: !9473)
!9477 = !DILocation(line: 2767, column: 18, scope: !9473)
!9478 = !DILocation(line: 2767, column: 5, scope: !9473)
!9479 = !DILocation(line: 2770, column: 16, scope: !9473)
!9480 = !DILocation(line: 2770, column: 27, scope: !9473)
!9481 = !DILocation(line: 2770, column: 5, scope: !9473)
!9482 = !DILocation(line: 2773, column: 19, scope: !9473)
!9483 = !DILocation(line: 2773, column: 23, scope: !9473)
!9484 = !DILocation(line: 2773, column: 29, scope: !9473)
!9485 = !DILocation(line: 2773, column: 5, scope: !9473)
!9486 = !DILocation(line: 2774, column: 21, scope: !9473)
!9487 = !DILocation(line: 2774, column: 32, scope: !9473)
!9488 = !DILocation(line: 2774, column: 5, scope: !9473)
!9489 = !DILocation(line: 2775, column: 5, scope: !9473)
!9490 = !DILocation(line: 2779, column: 19, scope: !9473)
!9491 = !DILocation(line: 2779, column: 25, scope: !9473)
!9492 = !DILocation(line: 2779, column: 30, scope: !9473)
!9493 = !DILocation(line: 2779, column: 5, scope: !9473)
!9494 = !DILocation(line: 2780, column: 18, scope: !9473)
!9495 = !DILocation(line: 2780, column: 5, scope: !9473)
!9496 = !DILocation(line: 2783, column: 18, scope: !9473)
!9497 = !DILocation(line: 2783, column: 29, scope: !9473)
!9498 = !DILocation(line: 2783, column: 5, scope: !9473)
!9499 = !DILocation(line: 2786, column: 19, scope: !9473)
!9500 = !DILocation(line: 2786, column: 23, scope: !9473)
!9501 = !DILocation(line: 2786, column: 29, scope: !9473)
!9502 = !DILocation(line: 2786, column: 5, scope: !9473)
!9503 = !DILocation(line: 2787, column: 21, scope: !9473)
!9504 = !DILocation(line: 2787, column: 32, scope: !9473)
!9505 = !DILocation(line: 2787, column: 5, scope: !9473)
!9506 = !DILocation(line: 2788, column: 5, scope: !9473)
!9507 = !DILocation(line: 2791, column: 15, scope: !9229)
!9508 = !DILocation(line: 2791, column: 20, scope: !9229)
!9509 = !DILocation(line: 2791, column: 28, scope: !9229)
!9510 = !DILocation(line: 2791, column: 36, scope: !9229)
!9511 = !DILocation(line: 2791, column: 41, scope: !9229)
!9512 = !DILocation(line: 2791, column: 3, scope: !9229)
!9513 = !DILocation(line: 2792, column: 2, scope: !9229)
!9514 = !DILocation(line: 2793, column: 1, scope: !9210)
!9515 = distinct !DISubprogram(name: "max_ff", scope: !9516, file: !9516, line: 206, type: !9517, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9516 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9517 = !DISubroutineType(types: !9518)
!9518 = !{!467, !467, !467}
!9519 = !DILocalVariable(name: "a", arg: 1, scope: !9515, file: !9516, line: 206, type: !467)
!9520 = !DILocation(line: 206, column: 28, scope: !9515)
!9521 = !DILocalVariable(name: "b", arg: 2, scope: !9515, file: !9516, line: 206, type: !467)
!9522 = !DILocation(line: 206, column: 37, scope: !9515)
!9523 = !DILocation(line: 208, column: 10, scope: !9515)
!9524 = !DILocation(line: 208, column: 14, scope: !9515)
!9525 = !DILocation(line: 208, column: 12, scope: !9515)
!9526 = !DILocation(line: 208, column: 9, scope: !9515)
!9527 = !DILocation(line: 208, column: 19, scope: !9515)
!9528 = !DILocation(line: 208, column: 23, scope: !9515)
!9529 = !DILocation(line: 208, column: 2, scope: !9515)
!9530 = distinct !DISubprogram(name: "min_ff", scope: !9516, file: !9516, line: 202, type: !9517, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9531 = !DILocalVariable(name: "a", arg: 1, scope: !9530, file: !9516, line: 202, type: !467)
!9532 = !DILocation(line: 202, column: 28, scope: !9530)
!9533 = !DILocalVariable(name: "b", arg: 2, scope: !9530, file: !9516, line: 202, type: !467)
!9534 = !DILocation(line: 202, column: 37, scope: !9530)
!9535 = !DILocation(line: 204, column: 10, scope: !9530)
!9536 = !DILocation(line: 204, column: 14, scope: !9530)
!9537 = !DILocation(line: 204, column: 12, scope: !9530)
!9538 = !DILocation(line: 204, column: 9, scope: !9530)
!9539 = !DILocation(line: 204, column: 19, scope: !9530)
!9540 = !DILocation(line: 204, column: 23, scope: !9530)
!9541 = !DILocation(line: 204, column: 2, scope: !9530)
!9542 = distinct !DISubprogram(name: "interpf", scope: !9516, file: !9516, line: 106, type: !9543, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9543 = !DISubroutineType(types: !9544)
!9544 = !{!467, !467, !467, !467}
!9545 = !DILocalVariable(name: "target", arg: 1, scope: !9542, file: !9516, line: 106, type: !467)
!9546 = !DILocation(line: 106, column: 29, scope: !9542)
!9547 = !DILocalVariable(name: "origin", arg: 2, scope: !9542, file: !9516, line: 106, type: !467)
!9548 = !DILocation(line: 106, column: 43, scope: !9542)
!9549 = !DILocalVariable(name: "fac", arg: 3, scope: !9542, file: !9516, line: 106, type: !467)
!9550 = !DILocation(line: 106, column: 57, scope: !9542)
!9551 = !DILocation(line: 108, column: 10, scope: !9542)
!9552 = !DILocation(line: 108, column: 16, scope: !9542)
!9553 = !DILocation(line: 108, column: 14, scope: !9542)
!9554 = !DILocation(line: 108, column: 34, scope: !9542)
!9555 = !DILocation(line: 108, column: 32, scope: !9542)
!9556 = !DILocation(line: 108, column: 41, scope: !9542)
!9557 = !DILocation(line: 108, column: 39, scope: !9542)
!9558 = !DILocation(line: 108, column: 24, scope: !9542)
!9559 = !DILocation(line: 108, column: 2, scope: !9542)
!9560 = distinct !DISubprogram(name: "negate_v3_v3", scope: !3158, file: !3158, line: 583, type: !5307, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9561 = !DILocalVariable(name: "r", arg: 1, scope: !9560, file: !3158, line: 583, type: !1080)
!9562 = !DILocation(line: 583, column: 33, scope: !9560)
!9563 = !DILocalVariable(name: "a", arg: 2, scope: !9560, file: !3158, line: 583, type: !1054)
!9564 = !DILocation(line: 583, column: 51, scope: !9560)
!9565 = !DILocation(line: 585, column: 10, scope: !9560)
!9566 = !DILocation(line: 585, column: 9, scope: !9560)
!9567 = !DILocation(line: 585, column: 2, scope: !9560)
!9568 = !DILocation(line: 585, column: 7, scope: !9560)
!9569 = !DILocation(line: 586, column: 10, scope: !9560)
!9570 = !DILocation(line: 586, column: 9, scope: !9560)
!9571 = !DILocation(line: 586, column: 2, scope: !9560)
!9572 = !DILocation(line: 586, column: 7, scope: !9560)
!9573 = !DILocation(line: 587, column: 10, scope: !9560)
!9574 = !DILocation(line: 587, column: 9, scope: !9560)
!9575 = !DILocation(line: 587, column: 2, scope: !9560)
!9576 = !DILocation(line: 587, column: 7, scope: !9560)
!9577 = !DILocation(line: 588, column: 1, scope: !9560)
!9578 = distinct !DISubprogram(name: "minmax_id_looper", scope: !3, file: !3, line: 2822, type: !4251, scopeLine: 2823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9579 = !DILocalVariable(name: "con", arg: 1, scope: !9578, file: !3, line: 2822, type: !2708)
!9580 = !DILocation(line: 2822, column: 43, scope: !9578)
!9581 = !DILocalVariable(name: "func", arg: 2, scope: !9578, file: !3, line: 2822, type: !2599)
!9582 = !DILocation(line: 2822, column: 65, scope: !9578)
!9583 = !DILocalVariable(name: "userdata", arg: 3, scope: !9578, file: !3, line: 2822, type: !431)
!9584 = !DILocation(line: 2822, column: 77, scope: !9578)
!9585 = !DILocalVariable(name: "data", scope: !9578, file: !3, line: 2824, type: !2441)
!9586 = !DILocation(line: 2824, column: 21, scope: !9578)
!9587 = !DILocation(line: 2824, column: 28, scope: !9578)
!9588 = !DILocation(line: 2824, column: 33, scope: !9578)
!9589 = !DILocation(line: 2827, column: 2, scope: !9578)
!9590 = !DILocation(line: 2827, column: 7, scope: !9578)
!9591 = !DILocation(line: 2827, column: 20, scope: !9578)
!9592 = !DILocation(line: 2827, column: 26, scope: !9578)
!9593 = !DILocation(line: 2827, column: 12, scope: !9578)
!9594 = !DILocation(line: 2827, column: 38, scope: !9578)
!9595 = !DILocation(line: 2828, column: 1, scope: !9578)
!9596 = distinct !DISubprogram(name: "minmax_new_data", scope: !3, file: !3, line: 2812, type: !2610, scopeLine: 2813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9597 = !DILocalVariable(name: "cdata", arg: 1, scope: !9596, file: !3, line: 2812, type: !431)
!9598 = !DILocation(line: 2812, column: 35, scope: !9596)
!9599 = !DILocalVariable(name: "data", scope: !9596, file: !3, line: 2814, type: !2441)
!9600 = !DILocation(line: 2814, column: 21, scope: !9596)
!9601 = !DILocation(line: 2814, column: 49, scope: !9596)
!9602 = !DILocation(line: 2814, column: 28, scope: !9596)
!9603 = !DILocation(line: 2816, column: 2, scope: !9596)
!9604 = !DILocation(line: 2816, column: 8, scope: !9596)
!9605 = !DILocation(line: 2816, column: 19, scope: !9596)
!9606 = !DILocation(line: 2817, column: 2, scope: !9596)
!9607 = !DILocation(line: 2817, column: 8, scope: !9596)
!9608 = !DILocation(line: 2817, column: 15, scope: !9596)
!9609 = !DILocation(line: 2818, column: 10, scope: !9596)
!9610 = !DILocation(line: 2818, column: 16, scope: !9596)
!9611 = !DILocation(line: 2818, column: 2, scope: !9596)
!9612 = !DILocation(line: 2819, column: 2, scope: !9596)
!9613 = !DILocation(line: 2819, column: 8, scope: !9596)
!9614 = !DILocation(line: 2819, column: 13, scope: !9596)
!9615 = !DILocation(line: 2820, column: 1, scope: !9596)
!9616 = distinct !DISubprogram(name: "minmax_get_tars", scope: !3, file: !3, line: 2830, type: !4285, scopeLine: 2831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9617 = !DILocalVariable(name: "con", arg: 1, scope: !9616, file: !3, line: 2830, type: !2708)
!9618 = !DILocation(line: 2830, column: 41, scope: !9616)
!9619 = !DILocalVariable(name: "list", arg: 2, scope: !9616, file: !3, line: 2830, type: !1287)
!9620 = !DILocation(line: 2830, column: 56, scope: !9616)
!9621 = !DILocation(line: 2832, column: 6, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 2832, column: 6)
!9623 = !DILocation(line: 2832, column: 10, scope: !9622)
!9624 = !DILocation(line: 2832, column: 13, scope: !9622)
!9625 = !DILocation(line: 2832, column: 6, scope: !9616)
!9626 = !DILocalVariable(name: "data", scope: !9627, file: !3, line: 2833, type: !2441)
!9627 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 2832, column: 19)
!9628 = !DILocation(line: 2833, column: 22, scope: !9627)
!9629 = !DILocation(line: 2833, column: 29, scope: !9627)
!9630 = !DILocation(line: 2833, column: 34, scope: !9627)
!9631 = !DILocalVariable(name: "ct", scope: !9627, file: !3, line: 2834, type: !2244)
!9632 = !DILocation(line: 2834, column: 22, scope: !9627)
!9633 = !DILocation(line: 2837, column: 3, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9627, file: !3, line: 2837, column: 3)
!9635 = !DILocation(line: 2837, column: 3, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2837, column: 3)
!9637 = !DILocation(line: 2837, column: 3, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 2837, column: 3)
!9639 = distinct !DILexicalBlock(scope: !9636, file: !3, line: 2837, column: 3)
!9640 = !DILocation(line: 2837, column: 3, scope: !9639)
!9641 = !DILocalVariable(name: "pchan", scope: !9642, file: !3, line: 2837, type: !399)
!9642 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 2837, column: 3)
!9643 = !DILocation(line: 2837, column: 3, scope: !9642)
!9644 = !DILocation(line: 2837, column: 3, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 2837, column: 3)
!9646 = !DILocation(line: 2837, column: 3, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 2837, column: 3)
!9648 = !DILocation(line: 2837, column: 3, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 2837, column: 3)
!9650 = !DILocation(line: 2839, column: 3, scope: !9627)
!9651 = !DILocation(line: 2842, column: 2, scope: !9616)
!9652 = !DILocation(line: 2843, column: 1, scope: !9616)
!9653 = distinct !DISubprogram(name: "minmax_flush_tars", scope: !3, file: !3, line: 2845, type: !4324, scopeLine: 2846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9654 = !DILocalVariable(name: "con", arg: 1, scope: !9653, file: !3, line: 2845, type: !2708)
!9655 = !DILocation(line: 2845, column: 44, scope: !9653)
!9656 = !DILocalVariable(name: "list", arg: 2, scope: !9653, file: !3, line: 2845, type: !1287)
!9657 = !DILocation(line: 2845, column: 59, scope: !9653)
!9658 = !DILocalVariable(name: "no_copy", arg: 3, scope: !9653, file: !3, line: 2845, type: !1111)
!9659 = !DILocation(line: 2845, column: 70, scope: !9653)
!9660 = !DILocation(line: 2847, column: 6, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 2847, column: 6)
!9662 = !DILocation(line: 2847, column: 10, scope: !9661)
!9663 = !DILocation(line: 2847, column: 13, scope: !9661)
!9664 = !DILocation(line: 2847, column: 6, scope: !9653)
!9665 = !DILocalVariable(name: "data", scope: !9666, file: !3, line: 2848, type: !2441)
!9666 = distinct !DILexicalBlock(scope: !9661, file: !3, line: 2847, column: 19)
!9667 = !DILocation(line: 2848, column: 22, scope: !9666)
!9668 = !DILocation(line: 2848, column: 29, scope: !9666)
!9669 = !DILocation(line: 2848, column: 34, scope: !9666)
!9670 = !DILocalVariable(name: "ct", scope: !9666, file: !3, line: 2849, type: !2244)
!9671 = !DILocation(line: 2849, column: 22, scope: !9666)
!9672 = !DILocation(line: 2849, column: 27, scope: !9666)
!9673 = !DILocation(line: 2849, column: 33, scope: !9666)
!9674 = !DILocation(line: 2852, column: 3, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 2852, column: 3)
!9676 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 2852, column: 3)
!9677 = !DILocation(line: 2852, column: 3, scope: !9676)
!9678 = !DILocalVariable(name: "ctn", scope: !9679, file: !3, line: 2852, type: !2244)
!9679 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 2852, column: 3)
!9680 = !DILocation(line: 2852, column: 3, scope: !9679)
!9681 = !DILocation(line: 2852, column: 3, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 2852, column: 3)
!9683 = !DILocation(line: 2852, column: 3, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 2852, column: 3)
!9685 = !DILocation(line: 2853, column: 2, scope: !9666)
!9686 = !DILocation(line: 2854, column: 1, scope: !9653)
!9687 = distinct !DISubprogram(name: "minmax_evaluate", scope: !3, file: !3, line: 2856, type: !4392, scopeLine: 2857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9688 = !DILocalVariable(name: "con", arg: 1, scope: !9687, file: !3, line: 2856, type: !2708)
!9689 = !DILocation(line: 2856, column: 42, scope: !9687)
!9690 = !DILocalVariable(name: "cob", arg: 2, scope: !9687, file: !3, line: 2856, type: !2733)
!9691 = !DILocation(line: 2856, column: 62, scope: !9687)
!9692 = !DILocalVariable(name: "targets", arg: 3, scope: !9687, file: !3, line: 2856, type: !1287)
!9693 = !DILocation(line: 2856, column: 77, scope: !9687)
!9694 = !DILocalVariable(name: "data", scope: !9687, file: !3, line: 2858, type: !2441)
!9695 = !DILocation(line: 2858, column: 21, scope: !9687)
!9696 = !DILocation(line: 2858, column: 28, scope: !9687)
!9697 = !DILocation(line: 2858, column: 33, scope: !9687)
!9698 = !DILocalVariable(name: "ct", scope: !9687, file: !3, line: 2859, type: !2244)
!9699 = !DILocation(line: 2859, column: 21, scope: !9687)
!9700 = !DILocation(line: 2859, column: 26, scope: !9687)
!9701 = !DILocation(line: 2859, column: 35, scope: !9687)
!9702 = !DILocation(line: 2862, column: 6, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 2862, column: 6)
!9704 = !DILocation(line: 2862, column: 6, scope: !9687)
!9705 = !DILocalVariable(name: "obmat", scope: !9706, file: !3, line: 2863, type: !480)
!9706 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2862, column: 29)
!9707 = !DILocation(line: 2863, column: 9, scope: !9706)
!9708 = !DILocalVariable(name: "imat", scope: !9706, file: !3, line: 2863, type: !480)
!9709 = !DILocation(line: 2863, column: 22, scope: !9706)
!9710 = !DILocalVariable(name: "tarmat", scope: !9706, file: !3, line: 2863, type: !480)
!9711 = !DILocation(line: 2863, column: 34, scope: !9706)
!9712 = !DILocalVariable(name: "tmat", scope: !9706, file: !3, line: 2863, type: !480)
!9713 = !DILocation(line: 2863, column: 48, scope: !9706)
!9714 = !DILocalVariable(name: "val1", scope: !9706, file: !3, line: 2864, type: !467)
!9715 = !DILocation(line: 2864, column: 9, scope: !9706)
!9716 = !DILocalVariable(name: "val2", scope: !9706, file: !3, line: 2864, type: !467)
!9717 = !DILocation(line: 2864, column: 15, scope: !9706)
!9718 = !DILocalVariable(name: "index", scope: !9706, file: !3, line: 2865, type: !352)
!9719 = !DILocation(line: 2865, column: 7, scope: !9706)
!9720 = !DILocation(line: 2867, column: 14, scope: !9706)
!9721 = !DILocation(line: 2867, column: 21, scope: !9706)
!9722 = !DILocation(line: 2867, column: 26, scope: !9706)
!9723 = !DILocation(line: 2867, column: 3, scope: !9706)
!9724 = !DILocation(line: 2868, column: 14, scope: !9706)
!9725 = !DILocation(line: 2868, column: 22, scope: !9706)
!9726 = !DILocation(line: 2868, column: 26, scope: !9706)
!9727 = !DILocation(line: 2868, column: 3, scope: !9706)
!9728 = !DILocation(line: 2870, column: 7, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 2870, column: 7)
!9730 = !DILocation(line: 2870, column: 13, scope: !9729)
!9731 = !DILocation(line: 2870, column: 18, scope: !9729)
!9732 = !DILocation(line: 2870, column: 7, scope: !9706)
!9733 = !DILocation(line: 2872, column: 17, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 2870, column: 35)
!9735 = !DILocation(line: 2872, column: 23, scope: !9734)
!9736 = !DILocation(line: 2872, column: 4, scope: !9734)
!9737 = !DILocation(line: 2873, column: 16, scope: !9734)
!9738 = !DILocation(line: 2873, column: 22, scope: !9734)
!9739 = !DILocation(line: 2873, column: 28, scope: !9734)
!9740 = !DILocation(line: 2873, column: 4, scope: !9734)
!9741 = !DILocation(line: 2874, column: 15, scope: !9734)
!9742 = !DILocation(line: 2874, column: 22, scope: !9734)
!9743 = !DILocation(line: 2874, column: 4, scope: !9734)
!9744 = !DILocation(line: 2875, column: 12, scope: !9734)
!9745 = !DILocation(line: 2875, column: 4, scope: !9734)
!9746 = !DILocation(line: 2876, column: 3, scope: !9734)
!9747 = !DILocation(line: 2878, column: 11, scope: !9706)
!9748 = !DILocation(line: 2878, column: 17, scope: !9706)
!9749 = !DILocation(line: 2878, column: 3, scope: !9706)
!9750 = !DILocation(line: 2880, column: 12, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 2878, column: 29)
!9752 = !DILocation(line: 2880, column: 10, scope: !9751)
!9753 = !DILocation(line: 2881, column: 12, scope: !9751)
!9754 = !DILocation(line: 2881, column: 26, scope: !9751)
!9755 = !DILocation(line: 2881, column: 32, scope: !9751)
!9756 = !DILocation(line: 2881, column: 24, scope: !9751)
!9757 = !DILocation(line: 2881, column: 10, scope: !9751)
!9758 = !DILocation(line: 2882, column: 11, scope: !9751)
!9759 = !DILocation(line: 2883, column: 5, scope: !9751)
!9760 = !DILocation(line: 2885, column: 12, scope: !9751)
!9761 = !DILocation(line: 2885, column: 10, scope: !9751)
!9762 = !DILocation(line: 2886, column: 12, scope: !9751)
!9763 = !DILocation(line: 2886, column: 26, scope: !9751)
!9764 = !DILocation(line: 2886, column: 32, scope: !9751)
!9765 = !DILocation(line: 2886, column: 24, scope: !9751)
!9766 = !DILocation(line: 2886, column: 10, scope: !9751)
!9767 = !DILocation(line: 2887, column: 11, scope: !9751)
!9768 = !DILocation(line: 2888, column: 5, scope: !9751)
!9769 = !DILocation(line: 2890, column: 12, scope: !9751)
!9770 = !DILocation(line: 2890, column: 10, scope: !9751)
!9771 = !DILocation(line: 2891, column: 12, scope: !9751)
!9772 = !DILocation(line: 2891, column: 26, scope: !9751)
!9773 = !DILocation(line: 2891, column: 32, scope: !9751)
!9774 = !DILocation(line: 2891, column: 24, scope: !9751)
!9775 = !DILocation(line: 2891, column: 10, scope: !9751)
!9776 = !DILocation(line: 2892, column: 11, scope: !9751)
!9777 = !DILocation(line: 2893, column: 5, scope: !9751)
!9778 = !DILocation(line: 2895, column: 12, scope: !9751)
!9779 = !DILocation(line: 2895, column: 10, scope: !9751)
!9780 = !DILocation(line: 2896, column: 12, scope: !9751)
!9781 = !DILocation(line: 2896, column: 26, scope: !9751)
!9782 = !DILocation(line: 2896, column: 32, scope: !9751)
!9783 = !DILocation(line: 2896, column: 24, scope: !9751)
!9784 = !DILocation(line: 2896, column: 10, scope: !9751)
!9785 = !DILocation(line: 2897, column: 11, scope: !9751)
!9786 = !DILocation(line: 2898, column: 5, scope: !9751)
!9787 = !DILocation(line: 2900, column: 12, scope: !9751)
!9788 = !DILocation(line: 2900, column: 10, scope: !9751)
!9789 = !DILocation(line: 2901, column: 12, scope: !9751)
!9790 = !DILocation(line: 2901, column: 26, scope: !9751)
!9791 = !DILocation(line: 2901, column: 32, scope: !9751)
!9792 = !DILocation(line: 2901, column: 24, scope: !9751)
!9793 = !DILocation(line: 2901, column: 10, scope: !9751)
!9794 = !DILocation(line: 2902, column: 11, scope: !9751)
!9795 = !DILocation(line: 2903, column: 5, scope: !9751)
!9796 = !DILocation(line: 2905, column: 12, scope: !9751)
!9797 = !DILocation(line: 2905, column: 10, scope: !9751)
!9798 = !DILocation(line: 2906, column: 12, scope: !9751)
!9799 = !DILocation(line: 2906, column: 26, scope: !9751)
!9800 = !DILocation(line: 2906, column: 32, scope: !9751)
!9801 = !DILocation(line: 2906, column: 24, scope: !9751)
!9802 = !DILocation(line: 2906, column: 10, scope: !9751)
!9803 = !DILocation(line: 2907, column: 11, scope: !9751)
!9804 = !DILocation(line: 2908, column: 5, scope: !9751)
!9805 = !DILocation(line: 2910, column: 5, scope: !9751)
!9806 = !DILocation(line: 2913, column: 7, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 2913, column: 7)
!9808 = !DILocation(line: 2913, column: 14, scope: !9807)
!9809 = !DILocation(line: 2913, column: 12, scope: !9807)
!9810 = !DILocation(line: 2913, column: 7, scope: !9706)
!9811 = !DILocation(line: 2914, column: 22, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 2913, column: 20)
!9813 = !DILocation(line: 2914, column: 32, scope: !9812)
!9814 = !DILocation(line: 2914, column: 41, scope: !9812)
!9815 = !DILocation(line: 2914, column: 47, scope: !9812)
!9816 = !DILocation(line: 2914, column: 39, scope: !9812)
!9817 = !DILocation(line: 2914, column: 4, scope: !9812)
!9818 = !DILocation(line: 2914, column: 13, scope: !9812)
!9819 = !DILocation(line: 2914, column: 20, scope: !9812)
!9820 = !DILocation(line: 2915, column: 8, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 2915, column: 8)
!9822 = !DILocation(line: 2915, column: 14, scope: !9821)
!9823 = !DILocation(line: 2915, column: 19, scope: !9821)
!9824 = !DILocation(line: 2915, column: 8, scope: !9812)
!9825 = !DILocation(line: 2916, column: 9, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 2916, column: 9)
!9827 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 2915, column: 36)
!9828 = !DILocation(line: 2916, column: 15, scope: !9826)
!9829 = !DILocation(line: 2916, column: 20, scope: !9826)
!9830 = !DILocation(line: 2916, column: 9, scope: !9827)
!9831 = !DILocation(line: 2917, column: 17, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9826, file: !3, line: 2916, column: 36)
!9833 = !DILocation(line: 2917, column: 27, scope: !9832)
!9834 = !DILocation(line: 2917, column: 33, scope: !9832)
!9835 = !DILocation(line: 2917, column: 6, scope: !9832)
!9836 = !DILocation(line: 2918, column: 5, scope: !9832)
!9837 = !DILocation(line: 2920, column: 17, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9826, file: !3, line: 2919, column: 10)
!9839 = !DILocation(line: 2920, column: 23, scope: !9838)
!9840 = !DILocation(line: 2920, column: 30, scope: !9838)
!9841 = !DILocation(line: 2920, column: 6, scope: !9838)
!9842 = !DILocation(line: 2921, column: 6, scope: !9838)
!9843 = !DILocation(line: 2921, column: 12, scope: !9838)
!9844 = !DILocation(line: 2921, column: 17, scope: !9838)
!9845 = !DILocation(line: 2923, column: 4, scope: !9827)
!9846 = !DILocation(line: 2924, column: 8, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 2924, column: 8)
!9848 = !DILocation(line: 2924, column: 14, scope: !9847)
!9849 = !DILocation(line: 2924, column: 19, scope: !9847)
!9850 = !DILocation(line: 2924, column: 8, scope: !9812)
!9851 = !DILocation(line: 2926, column: 17, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 2924, column: 36)
!9853 = !DILocation(line: 2926, column: 23, scope: !9852)
!9854 = !DILocation(line: 2926, column: 27, scope: !9852)
!9855 = !DILocation(line: 2926, column: 35, scope: !9852)
!9856 = !DILocation(line: 2926, column: 5, scope: !9852)
!9857 = !DILocation(line: 2927, column: 16, scope: !9852)
!9858 = !DILocation(line: 2927, column: 21, scope: !9852)
!9859 = !DILocation(line: 2927, column: 29, scope: !9852)
!9860 = !DILocation(line: 2927, column: 5, scope: !9852)
!9861 = !DILocation(line: 2928, column: 4, scope: !9852)
!9862 = !DILocation(line: 2930, column: 16, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 2929, column: 9)
!9864 = !DILocation(line: 2930, column: 21, scope: !9863)
!9865 = !DILocation(line: 2930, column: 32, scope: !9863)
!9866 = !DILocation(line: 2930, column: 5, scope: !9863)
!9867 = !DILocation(line: 2932, column: 3, scope: !9812)
!9868 = !DILocation(line: 2934, column: 4, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 2933, column: 8)
!9870 = !DILocation(line: 2934, column: 10, scope: !9869)
!9871 = !DILocation(line: 2934, column: 15, scope: !9869)
!9872 = !DILocation(line: 2936, column: 2, scope: !9706)
!9873 = !DILocation(line: 2937, column: 1, scope: !9687)
!9874 = distinct !DISubprogram(name: "rbj_id_looper", scope: !3, file: !3, line: 2964, type: !4251, scopeLine: 2965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9875 = !DILocalVariable(name: "con", arg: 1, scope: !9874, file: !3, line: 2964, type: !2708)
!9876 = !DILocation(line: 2964, column: 40, scope: !9874)
!9877 = !DILocalVariable(name: "func", arg: 2, scope: !9874, file: !3, line: 2964, type: !2599)
!9878 = !DILocation(line: 2964, column: 62, scope: !9874)
!9879 = !DILocalVariable(name: "userdata", arg: 3, scope: !9874, file: !3, line: 2964, type: !431)
!9880 = !DILocation(line: 2964, column: 74, scope: !9874)
!9881 = !DILocalVariable(name: "data", scope: !9874, file: !3, line: 2966, type: !2455)
!9882 = !DILocation(line: 2966, column: 29, scope: !9874)
!9883 = !DILocation(line: 2966, column: 36, scope: !9874)
!9884 = !DILocation(line: 2966, column: 41, scope: !9874)
!9885 = !DILocation(line: 2969, column: 2, scope: !9874)
!9886 = !DILocation(line: 2969, column: 7, scope: !9874)
!9887 = !DILocation(line: 2969, column: 20, scope: !9874)
!9888 = !DILocation(line: 2969, column: 26, scope: !9874)
!9889 = !DILocation(line: 2969, column: 12, scope: !9874)
!9890 = !DILocation(line: 2969, column: 38, scope: !9874)
!9891 = !DILocation(line: 2970, column: 2, scope: !9874)
!9892 = !DILocation(line: 2970, column: 7, scope: !9874)
!9893 = !DILocation(line: 2970, column: 20, scope: !9874)
!9894 = !DILocation(line: 2970, column: 26, scope: !9874)
!9895 = !DILocation(line: 2970, column: 12, scope: !9874)
!9896 = !DILocation(line: 2970, column: 40, scope: !9874)
!9897 = !DILocation(line: 2971, column: 1, scope: !9874)
!9898 = distinct !DISubprogram(name: "rbj_new_data", scope: !3, file: !3, line: 2956, type: !2610, scopeLine: 2957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9899 = !DILocalVariable(name: "cdata", arg: 1, scope: !9898, file: !3, line: 2956, type: !431)
!9900 = !DILocation(line: 2956, column: 32, scope: !9898)
!9901 = !DILocalVariable(name: "data", scope: !9898, file: !3, line: 2958, type: !2455)
!9902 = !DILocation(line: 2958, column: 29, scope: !9898)
!9903 = !DILocation(line: 2958, column: 65, scope: !9898)
!9904 = !DILocation(line: 2958, column: 36, scope: !9898)
!9905 = !DILocation(line: 2961, column: 2, scope: !9898)
!9906 = !DILocation(line: 2961, column: 8, scope: !9898)
!9907 = !DILocation(line: 2961, column: 13, scope: !9898)
!9908 = !DILocation(line: 2962, column: 1, scope: !9898)
!9909 = distinct !DISubprogram(name: "rbj_get_tars", scope: !3, file: !3, line: 2973, type: !4285, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9910 = !DILocalVariable(name: "con", arg: 1, scope: !9909, file: !3, line: 2973, type: !2708)
!9911 = !DILocation(line: 2973, column: 38, scope: !9909)
!9912 = !DILocalVariable(name: "list", arg: 2, scope: !9909, file: !3, line: 2973, type: !1287)
!9913 = !DILocation(line: 2973, column: 53, scope: !9909)
!9914 = !DILocation(line: 2975, column: 6, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9909, file: !3, line: 2975, column: 6)
!9916 = !DILocation(line: 2975, column: 10, scope: !9915)
!9917 = !DILocation(line: 2975, column: 13, scope: !9915)
!9918 = !DILocation(line: 2975, column: 6, scope: !9909)
!9919 = !DILocalVariable(name: "data", scope: !9920, file: !3, line: 2976, type: !2455)
!9920 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 2975, column: 19)
!9921 = !DILocation(line: 2976, column: 30, scope: !9920)
!9922 = !DILocation(line: 2976, column: 37, scope: !9920)
!9923 = !DILocation(line: 2976, column: 42, scope: !9920)
!9924 = !DILocalVariable(name: "ct", scope: !9920, file: !3, line: 2977, type: !2244)
!9925 = !DILocation(line: 2977, column: 22, scope: !9920)
!9926 = !DILocation(line: 2980, column: 3, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 2980, column: 3)
!9928 = !DILocation(line: 2980, column: 3, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9927, file: !3, line: 2980, column: 3)
!9930 = !DILocation(line: 2982, column: 3, scope: !9920)
!9931 = !DILocation(line: 2985, column: 2, scope: !9909)
!9932 = !DILocation(line: 2986, column: 1, scope: !9909)
!9933 = distinct !DISubprogram(name: "rbj_flush_tars", scope: !3, file: !3, line: 2988, type: !4324, scopeLine: 2989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9934 = !DILocalVariable(name: "con", arg: 1, scope: !9933, file: !3, line: 2988, type: !2708)
!9935 = !DILocation(line: 2988, column: 41, scope: !9933)
!9936 = !DILocalVariable(name: "list", arg: 2, scope: !9933, file: !3, line: 2988, type: !1287)
!9937 = !DILocation(line: 2988, column: 56, scope: !9933)
!9938 = !DILocalVariable(name: "no_copy", arg: 3, scope: !9933, file: !3, line: 2988, type: !1111)
!9939 = !DILocation(line: 2988, column: 67, scope: !9933)
!9940 = !DILocation(line: 2990, column: 6, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 2990, column: 6)
!9942 = !DILocation(line: 2990, column: 10, scope: !9941)
!9943 = !DILocation(line: 2990, column: 13, scope: !9941)
!9944 = !DILocation(line: 2990, column: 6, scope: !9933)
!9945 = !DILocalVariable(name: "data", scope: !9946, file: !3, line: 2991, type: !2455)
!9946 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 2990, column: 19)
!9947 = !DILocation(line: 2991, column: 30, scope: !9946)
!9948 = !DILocation(line: 2991, column: 37, scope: !9946)
!9949 = !DILocation(line: 2991, column: 42, scope: !9946)
!9950 = !DILocalVariable(name: "ct", scope: !9946, file: !3, line: 2992, type: !2244)
!9951 = !DILocation(line: 2992, column: 22, scope: !9946)
!9952 = !DILocation(line: 2992, column: 27, scope: !9946)
!9953 = !DILocation(line: 2992, column: 33, scope: !9946)
!9954 = !DILocation(line: 2995, column: 3, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 2995, column: 3)
!9956 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 2995, column: 3)
!9957 = !DILocation(line: 2995, column: 3, scope: !9956)
!9958 = !DILocalVariable(name: "ctn", scope: !9959, file: !3, line: 2995, type: !2244)
!9959 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 2995, column: 3)
!9960 = !DILocation(line: 2995, column: 3, scope: !9959)
!9961 = !DILocation(line: 2995, column: 3, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 2995, column: 3)
!9963 = !DILocation(line: 2995, column: 3, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9962, file: !3, line: 2995, column: 3)
!9965 = !DILocation(line: 2996, column: 2, scope: !9946)
!9966 = !DILocation(line: 2997, column: 1, scope: !9933)
!9967 = distinct !DISubprogram(name: "clampto_id_looper", scope: !3, file: !3, line: 3016, type: !4251, scopeLine: 3017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9968 = !DILocalVariable(name: "con", arg: 1, scope: !9967, file: !3, line: 3016, type: !2708)
!9969 = !DILocation(line: 3016, column: 44, scope: !9967)
!9970 = !DILocalVariable(name: "func", arg: 2, scope: !9967, file: !3, line: 3016, type: !2599)
!9971 = !DILocation(line: 3016, column: 66, scope: !9967)
!9972 = !DILocalVariable(name: "userdata", arg: 3, scope: !9967, file: !3, line: 3016, type: !431)
!9973 = !DILocation(line: 3016, column: 78, scope: !9967)
!9974 = !DILocalVariable(name: "data", scope: !9967, file: !3, line: 3018, type: !9975)
!9975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9976, size: 64)
!9976 = !DIDerivedType(tag: DW_TAG_typedef, name: "bClampToConstraint", file: !44, line: 323, baseType: !9977)
!9977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bClampToConstraint", file: !44, line: 319, size: 128, elements: !9978)
!9978 = !{!9979, !9980, !9981}
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !9977, file: !44, line: 320, baseType: !521, size: 64)
!9980 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9977, file: !44, line: 321, baseType: !352, size: 32, offset: 64)
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !9977, file: !44, line: 322, baseType: !352, size: 32, offset: 96)
!9982 = !DILocation(line: 3018, column: 22, scope: !9967)
!9983 = !DILocation(line: 3018, column: 29, scope: !9967)
!9984 = !DILocation(line: 3018, column: 34, scope: !9967)
!9985 = !DILocation(line: 3021, column: 2, scope: !9967)
!9986 = !DILocation(line: 3021, column: 7, scope: !9967)
!9987 = !DILocation(line: 3021, column: 20, scope: !9967)
!9988 = !DILocation(line: 3021, column: 26, scope: !9967)
!9989 = !DILocation(line: 3021, column: 12, scope: !9967)
!9990 = !DILocation(line: 3021, column: 38, scope: !9967)
!9991 = !DILocation(line: 3022, column: 1, scope: !9967)
!9992 = distinct !DISubprogram(name: "clampto_get_tars", scope: !3, file: !3, line: 3024, type: !4285, scopeLine: 3025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!9993 = !DILocalVariable(name: "con", arg: 1, scope: !9992, file: !3, line: 3024, type: !2708)
!9994 = !DILocation(line: 3024, column: 42, scope: !9992)
!9995 = !DILocalVariable(name: "list", arg: 2, scope: !9992, file: !3, line: 3024, type: !1287)
!9996 = !DILocation(line: 3024, column: 57, scope: !9992)
!9997 = !DILocation(line: 3026, column: 6, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 3026, column: 6)
!9999 = !DILocation(line: 3026, column: 10, scope: !9998)
!10000 = !DILocation(line: 3026, column: 13, scope: !9998)
!10001 = !DILocation(line: 3026, column: 6, scope: !9992)
!10002 = !DILocalVariable(name: "data", scope: !10003, file: !3, line: 3027, type: !9975)
!10003 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 3026, column: 19)
!10004 = !DILocation(line: 3027, column: 23, scope: !10003)
!10005 = !DILocation(line: 3027, column: 30, scope: !10003)
!10006 = !DILocation(line: 3027, column: 35, scope: !10003)
!10007 = !DILocalVariable(name: "ct", scope: !10003, file: !3, line: 3028, type: !2244)
!10008 = !DILocation(line: 3028, column: 22, scope: !10003)
!10009 = !DILocation(line: 3031, column: 3, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 3031, column: 3)
!10011 = !DILocation(line: 3031, column: 3, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 3031, column: 3)
!10013 = !DILocation(line: 3033, column: 3, scope: !10003)
!10014 = !DILocation(line: 3036, column: 2, scope: !9992)
!10015 = !DILocation(line: 3037, column: 1, scope: !9992)
!10016 = distinct !DISubprogram(name: "clampto_flush_tars", scope: !3, file: !3, line: 3039, type: !4324, scopeLine: 3040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10017 = !DILocalVariable(name: "con", arg: 1, scope: !10016, file: !3, line: 3039, type: !2708)
!10018 = !DILocation(line: 3039, column: 45, scope: !10016)
!10019 = !DILocalVariable(name: "list", arg: 2, scope: !10016, file: !3, line: 3039, type: !1287)
!10020 = !DILocation(line: 3039, column: 60, scope: !10016)
!10021 = !DILocalVariable(name: "no_copy", arg: 3, scope: !10016, file: !3, line: 3039, type: !1111)
!10022 = !DILocation(line: 3039, column: 71, scope: !10016)
!10023 = !DILocation(line: 3041, column: 6, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 3041, column: 6)
!10025 = !DILocation(line: 3041, column: 10, scope: !10024)
!10026 = !DILocation(line: 3041, column: 13, scope: !10024)
!10027 = !DILocation(line: 3041, column: 6, scope: !10016)
!10028 = !DILocalVariable(name: "data", scope: !10029, file: !3, line: 3042, type: !9975)
!10029 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 3041, column: 19)
!10030 = !DILocation(line: 3042, column: 23, scope: !10029)
!10031 = !DILocation(line: 3042, column: 30, scope: !10029)
!10032 = !DILocation(line: 3042, column: 35, scope: !10029)
!10033 = !DILocalVariable(name: "ct", scope: !10029, file: !3, line: 3043, type: !2244)
!10034 = !DILocation(line: 3043, column: 22, scope: !10029)
!10035 = !DILocation(line: 3043, column: 27, scope: !10029)
!10036 = !DILocation(line: 3043, column: 33, scope: !10029)
!10037 = !DILocation(line: 3046, column: 3, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 3046, column: 3)
!10039 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 3046, column: 3)
!10040 = !DILocation(line: 3046, column: 3, scope: !10039)
!10041 = !DILocalVariable(name: "ctn", scope: !10042, file: !3, line: 3046, type: !2244)
!10042 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 3046, column: 3)
!10043 = !DILocation(line: 3046, column: 3, scope: !10042)
!10044 = !DILocation(line: 3046, column: 3, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 3046, column: 3)
!10046 = !DILocation(line: 3046, column: 3, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 3046, column: 3)
!10048 = !DILocation(line: 3047, column: 2, scope: !10029)
!10049 = !DILocation(line: 3048, column: 1, scope: !10016)
!10050 = distinct !DISubprogram(name: "clampto_get_tarmat", scope: !3, file: !3, line: 3050, type: !4360, scopeLine: 3051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10051 = !DILocalVariable(name: "UNUSED_con", arg: 1, scope: !10050, file: !3, line: 3050, type: !2708)
!10052 = !DILocation(line: 3050, column: 45, scope: !10050)
!10053 = !DILocalVariable(name: "cob", arg: 2, scope: !10050, file: !3, line: 3050, type: !2733)
!10054 = !DILocation(line: 3050, column: 73, scope: !10050)
!10055 = !DILocalVariable(name: "ct", arg: 3, scope: !10050, file: !3, line: 3050, type: !2244)
!10056 = !DILocation(line: 3050, column: 97, scope: !10050)
!10057 = !DILocalVariable(name: "UNUSED_ctime", arg: 4, scope: !10050, file: !3, line: 3050, type: !467)
!10058 = !DILocation(line: 3050, column: 107, scope: !10050)
!10059 = !DILocation(line: 3053, column: 6, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 3053, column: 6)
!10061 = !DILocation(line: 3053, column: 6, scope: !10050)
!10062 = !DILocation(line: 3054, column: 7, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 3054, column: 7)
!10064 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 3053, column: 29)
!10065 = !DILocation(line: 3054, column: 11, scope: !10063)
!10066 = !DILocation(line: 3054, column: 16, scope: !10063)
!10067 = !DILocation(line: 3054, column: 28, scope: !10063)
!10068 = !DILocation(line: 3054, column: 7, scope: !10064)
!10069 = !DILocation(line: 3055, column: 33, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 3054, column: 37)
!10071 = !DILocation(line: 3055, column: 38, scope: !10070)
!10072 = !DILocation(line: 3055, column: 45, scope: !10070)
!10073 = !DILocation(line: 3055, column: 49, scope: !10070)
!10074 = !DILocation(line: 3055, column: 4, scope: !10070)
!10075 = !DILocation(line: 3056, column: 3, scope: !10070)
!10076 = !DILocation(line: 3057, column: 2, scope: !10064)
!10077 = !DILocation(line: 3063, column: 6, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 3063, column: 6)
!10079 = !DILocation(line: 3063, column: 6, scope: !10050)
!10080 = !DILocation(line: 3064, column: 11, scope: !10078)
!10081 = !DILocation(line: 3064, column: 15, scope: !10078)
!10082 = !DILocation(line: 3064, column: 3, scope: !10078)
!10083 = !DILocation(line: 3065, column: 1, scope: !10050)
!10084 = distinct !DISubprogram(name: "clampto_evaluate", scope: !3, file: !3, line: 3067, type: !4392, scopeLine: 3068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10085 = !DILocalVariable(name: "con", arg: 1, scope: !10084, file: !3, line: 3067, type: !2708)
!10086 = !DILocation(line: 3067, column: 43, scope: !10084)
!10087 = !DILocalVariable(name: "cob", arg: 2, scope: !10084, file: !3, line: 3067, type: !2733)
!10088 = !DILocation(line: 3067, column: 63, scope: !10084)
!10089 = !DILocalVariable(name: "targets", arg: 3, scope: !10084, file: !3, line: 3067, type: !1287)
!10090 = !DILocation(line: 3067, column: 78, scope: !10084)
!10091 = !DILocalVariable(name: "data", scope: !10084, file: !3, line: 3069, type: !9975)
!10092 = !DILocation(line: 3069, column: 22, scope: !10084)
!10093 = !DILocation(line: 3069, column: 29, scope: !10084)
!10094 = !DILocation(line: 3069, column: 34, scope: !10084)
!10095 = !DILocalVariable(name: "ct", scope: !10084, file: !3, line: 3070, type: !2244)
!10096 = !DILocation(line: 3070, column: 21, scope: !10084)
!10097 = !DILocation(line: 3070, column: 26, scope: !10084)
!10098 = !DILocation(line: 3070, column: 35, scope: !10084)
!10099 = !DILocation(line: 3073, column: 6, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 3073, column: 6)
!10101 = !DILocation(line: 3073, column: 28, scope: !10100)
!10102 = !DILocation(line: 3073, column: 32, scope: !10100)
!10103 = !DILocation(line: 3073, column: 36, scope: !10100)
!10104 = !DILocation(line: 3073, column: 41, scope: !10100)
!10105 = !DILocation(line: 3073, column: 46, scope: !10100)
!10106 = !DILocation(line: 3073, column: 6, scope: !10084)
!10107 = !DILocalVariable(name: "obmat", scope: !10108, file: !3, line: 3074, type: !480)
!10108 = distinct !DILexicalBlock(scope: !10100, file: !3, line: 3073, column: 60)
!10109 = !DILocation(line: 3074, column: 9, scope: !10108)
!10110 = !DILocalVariable(name: "ownLoc", scope: !10108, file: !3, line: 3074, type: !469)
!10111 = !DILocation(line: 3074, column: 22, scope: !10108)
!10112 = !DILocalVariable(name: "curveMin", scope: !10108, file: !3, line: 3075, type: !469)
!10113 = !DILocation(line: 3075, column: 9, scope: !10108)
!10114 = !DILocalVariable(name: "curveMax", scope: !10108, file: !3, line: 3075, type: !469)
!10115 = !DILocation(line: 3075, column: 22, scope: !10108)
!10116 = !DILocalVariable(name: "targetMatrix", scope: !10108, file: !3, line: 3076, type: !480)
!10117 = !DILocation(line: 3076, column: 9, scope: !10108)
!10118 = !DILocation(line: 3078, column: 14, scope: !10108)
!10119 = !DILocation(line: 3078, column: 21, scope: !10108)
!10120 = !DILocation(line: 3078, column: 26, scope: !10108)
!10121 = !DILocation(line: 3078, column: 3, scope: !10108)
!10122 = !DILocation(line: 3079, column: 14, scope: !10108)
!10123 = !DILocation(line: 3079, column: 22, scope: !10108)
!10124 = !DILocation(line: 3079, column: 3, scope: !10108)
!10125 = !DILocation(line: 3081, column: 11, scope: !10108)
!10126 = !DILocation(line: 3081, column: 3, scope: !10108)
!10127 = !DILocation(line: 3082, column: 3, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10108, file: !3, line: 3082, column: 3)
!10129 = !DILocation(line: 3084, column: 21, scope: !10108)
!10130 = !DILocation(line: 3084, column: 25, scope: !10108)
!10131 = !DILocation(line: 3084, column: 30, scope: !10108)
!10132 = !DILocation(line: 3084, column: 40, scope: !10108)
!10133 = !DILocation(line: 3084, column: 3, scope: !10108)
!10134 = !DILocation(line: 3087, column: 7, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10108, file: !3, line: 3087, column: 7)
!10136 = !DILocation(line: 3087, column: 13, scope: !10135)
!10137 = !DILocation(line: 3087, column: 18, scope: !10135)
!10138 = !DILocation(line: 3087, column: 30, scope: !10135)
!10139 = !DILocation(line: 3087, column: 34, scope: !10135)
!10140 = !DILocation(line: 3087, column: 40, scope: !10135)
!10141 = !DILocation(line: 3087, column: 45, scope: !10135)
!10142 = !DILocation(line: 3087, column: 58, scope: !10135)
!10143 = !DILocation(line: 3087, column: 63, scope: !10135)
!10144 = !DILocation(line: 3087, column: 66, scope: !10135)
!10145 = !DILocation(line: 3087, column: 72, scope: !10135)
!10146 = !DILocation(line: 3087, column: 77, scope: !10135)
!10147 = !DILocation(line: 3087, column: 90, scope: !10135)
!10148 = !DILocation(line: 3087, column: 96, scope: !10135)
!10149 = !DILocation(line: 3087, column: 7, scope: !10108)
!10150 = !DILocalVariable(name: "vec", scope: !10151, file: !3, line: 3088, type: !674)
!10151 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 3087, column: 102)
!10152 = !DILocation(line: 3088, column: 10, scope: !10151)
!10153 = !DILocalVariable(name: "dir", scope: !10151, file: !3, line: 3088, type: !469)
!10154 = !DILocation(line: 3088, column: 18, scope: !10151)
!10155 = !DILocalVariable(name: "totmat", scope: !10151, file: !3, line: 3088, type: !480)
!10156 = !DILocation(line: 3088, column: 26, scope: !10151)
!10157 = !DILocalVariable(name: "curvetime", scope: !10151, file: !3, line: 3089, type: !467)
!10158 = !DILocation(line: 3089, column: 10, scope: !10151)
!10159 = !DILocalVariable(name: "clamp_axis", scope: !10151, file: !3, line: 3090, type: !420)
!10160 = !DILocation(line: 3090, column: 10, scope: !10151)
!10161 = !DILocation(line: 3094, column: 8, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 3094, column: 8)
!10163 = !DILocation(line: 3094, column: 14, scope: !10162)
!10164 = !DILocation(line: 3094, column: 19, scope: !10162)
!10165 = !DILocation(line: 3094, column: 8, scope: !10151)
!10166 = !DILocalVariable(name: "size", scope: !10167, file: !3, line: 3095, type: !469)
!10167 = distinct !DILexicalBlock(scope: !10162, file: !3, line: 3094, column: 36)
!10168 = !DILocation(line: 3095, column: 11, scope: !10167)
!10169 = !DILocation(line: 3096, column: 17, scope: !10167)
!10170 = !DILocation(line: 3096, column: 23, scope: !10167)
!10171 = !DILocation(line: 3096, column: 33, scope: !10167)
!10172 = !DILocation(line: 3096, column: 5, scope: !10167)
!10173 = !DILocation(line: 3102, column: 10, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10167, file: !3, line: 3102, column: 9)
!10175 = !DILocation(line: 3102, column: 20, scope: !10174)
!10176 = !DILocation(line: 3102, column: 18, scope: !10174)
!10177 = !DILocation(line: 3102, column: 29, scope: !10174)
!10178 = !DILocation(line: 3102, column: 33, scope: !10174)
!10179 = !DILocation(line: 3102, column: 43, scope: !10174)
!10180 = !DILocation(line: 3102, column: 41, scope: !10174)
!10181 = !DILocation(line: 3102, column: 9, scope: !10167)
!10182 = !DILocation(line: 3103, column: 17, scope: !10174)
!10183 = !DILocation(line: 3103, column: 6, scope: !10174)
!10184 = !DILocation(line: 3104, column: 15, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10174, file: !3, line: 3104, column: 14)
!10186 = !DILocation(line: 3104, column: 25, scope: !10185)
!10187 = !DILocation(line: 3104, column: 23, scope: !10185)
!10188 = !DILocation(line: 3104, column: 34, scope: !10185)
!10189 = !DILocation(line: 3104, column: 38, scope: !10185)
!10190 = !DILocation(line: 3104, column: 48, scope: !10185)
!10191 = !DILocation(line: 3104, column: 46, scope: !10185)
!10192 = !DILocation(line: 3104, column: 14, scope: !10174)
!10193 = !DILocation(line: 3105, column: 17, scope: !10185)
!10194 = !DILocation(line: 3105, column: 6, scope: !10185)
!10195 = !DILocation(line: 3107, column: 17, scope: !10185)
!10196 = !DILocation(line: 3108, column: 4, scope: !10167)
!10197 = !DILocation(line: 3110, column: 18, scope: !10162)
!10198 = !DILocation(line: 3110, column: 24, scope: !10162)
!10199 = !DILocation(line: 3110, column: 29, scope: !10162)
!10200 = !DILocation(line: 3110, column: 16, scope: !10162)
!10201 = !DILocation(line: 3113, column: 8, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 3113, column: 8)
!10203 = !DILocation(line: 3113, column: 14, scope: !10202)
!10204 = !DILocation(line: 3113, column: 20, scope: !10202)
!10205 = !DILocation(line: 3113, column: 8, scope: !10151)
!10206 = !DILocalVariable(name: "len", scope: !10207, file: !3, line: 3115, type: !467)
!10207 = distinct !DILexicalBlock(scope: !10202, file: !3, line: 3113, column: 38)
!10208 = !DILocation(line: 3115, column: 11, scope: !10207)
!10209 = !DILocation(line: 3115, column: 27, scope: !10207)
!10210 = !DILocation(line: 3115, column: 18, scope: !10207)
!10211 = !DILocation(line: 3115, column: 50, scope: !10207)
!10212 = !DILocation(line: 3115, column: 41, scope: !10207)
!10213 = !DILocation(line: 3115, column: 39, scope: !10207)
!10214 = !DILocalVariable(name: "offset", scope: !10207, file: !3, line: 3116, type: !467)
!10215 = !DILocation(line: 3116, column: 11, scope: !10207)
!10216 = !DILocation(line: 3119, column: 9, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 3119, column: 9)
!10218 = !DILocation(line: 3119, column: 27, scope: !10217)
!10219 = !DILocation(line: 3119, column: 9, scope: !10207)
!10220 = !DILocation(line: 3121, column: 17, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10222, file: !3, line: 3121, column: 10)
!10222 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 3119, column: 37)
!10223 = !DILocation(line: 3121, column: 10, scope: !10221)
!10224 = !DILocation(line: 3121, column: 40, scope: !10221)
!10225 = !DILocation(line: 3121, column: 31, scope: !10221)
!10226 = !DILocation(line: 3121, column: 29, scope: !10221)
!10227 = !DILocation(line: 3121, column: 10, scope: !10222)
!10228 = !DILocation(line: 3123, column: 25, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 3121, column: 53)
!10230 = !DILocation(line: 3123, column: 16, scope: !10229)
!10231 = !DILocation(line: 3123, column: 55, scope: !10229)
!10232 = !DILocation(line: 3123, column: 46, scope: !10229)
!10233 = !DILocation(line: 3123, column: 76, scope: !10229)
!10234 = !DILocation(line: 3123, column: 69, scope: !10229)
!10235 = !DILocation(line: 3123, column: 67, scope: !10229)
!10236 = !DILocation(line: 3123, column: 91, scope: !10229)
!10237 = !DILocation(line: 3123, column: 89, scope: !10229)
!10238 = !DILocation(line: 3123, column: 39, scope: !10229)
!10239 = !DILocation(line: 3123, column: 98, scope: !10229)
!10240 = !DILocation(line: 3123, column: 96, scope: !10229)
!10241 = !DILocation(line: 3123, column: 37, scope: !10229)
!10242 = !DILocation(line: 3123, column: 14, scope: !10229)
!10243 = !DILocation(line: 3126, column: 27, scope: !10229)
!10244 = !DILocation(line: 3126, column: 20, scope: !10229)
!10245 = !DILocation(line: 3126, column: 41, scope: !10229)
!10246 = !DILocation(line: 3126, column: 39, scope: !10229)
!10247 = !DILocation(line: 3126, column: 52, scope: !10229)
!10248 = !DILocation(line: 3126, column: 49, scope: !10229)
!10249 = !DILocation(line: 3126, column: 17, scope: !10229)
!10250 = !DILocation(line: 3127, column: 6, scope: !10229)
!10251 = !DILocation(line: 3128, column: 22, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 3128, column: 15)
!10253 = !DILocation(line: 3128, column: 15, scope: !10252)
!10254 = !DILocation(line: 3128, column: 45, scope: !10252)
!10255 = !DILocation(line: 3128, column: 36, scope: !10252)
!10256 = !DILocation(line: 3128, column: 34, scope: !10252)
!10257 = !DILocation(line: 3128, column: 15, scope: !10221)
!10258 = !DILocation(line: 3130, column: 25, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 3128, column: 58)
!10260 = !DILocation(line: 3130, column: 16, scope: !10259)
!10261 = !DILocation(line: 3130, column: 53, scope: !10259)
!10262 = !DILocation(line: 3130, column: 46, scope: !10259)
!10263 = !DILocation(line: 3130, column: 76, scope: !10259)
!10264 = !DILocation(line: 3130, column: 67, scope: !10259)
!10265 = !DILocation(line: 3130, column: 65, scope: !10259)
!10266 = !DILocation(line: 3130, column: 91, scope: !10259)
!10267 = !DILocation(line: 3130, column: 89, scope: !10259)
!10268 = !DILocation(line: 3130, column: 39, scope: !10259)
!10269 = !DILocation(line: 3130, column: 98, scope: !10259)
!10270 = !DILocation(line: 3130, column: 96, scope: !10259)
!10271 = !DILocation(line: 3130, column: 37, scope: !10259)
!10272 = !DILocation(line: 3130, column: 14, scope: !10259)
!10273 = !DILocation(line: 3133, column: 27, scope: !10259)
!10274 = !DILocation(line: 3133, column: 20, scope: !10259)
!10275 = !DILocation(line: 3133, column: 41, scope: !10259)
!10276 = !DILocation(line: 3133, column: 39, scope: !10259)
!10277 = !DILocation(line: 3133, column: 52, scope: !10259)
!10278 = !DILocation(line: 3133, column: 49, scope: !10259)
!10279 = !DILocation(line: 3133, column: 17, scope: !10259)
!10280 = !DILocation(line: 3134, column: 6, scope: !10259)
!10281 = !DILocation(line: 3137, column: 27, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 3135, column: 11)
!10283 = !DILocation(line: 3137, column: 20, scope: !10282)
!10284 = !DILocation(line: 3137, column: 50, scope: !10282)
!10285 = !DILocation(line: 3137, column: 41, scope: !10282)
!10286 = !DILocation(line: 3137, column: 39, scope: !10282)
!10287 = !DILocation(line: 3137, column: 66, scope: !10282)
!10288 = !DILocation(line: 3137, column: 63, scope: !10282)
!10289 = !DILocation(line: 3137, column: 17, scope: !10282)
!10290 = !DILocation(line: 3139, column: 5, scope: !10222)
!10291 = !DILocation(line: 3142, column: 16, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 3140, column: 10)
!10293 = !DILocation(line: 3144, column: 4, scope: !10207)
!10294 = !DILocation(line: 3147, column: 16, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10296, file: !3, line: 3147, column: 9)
!10296 = distinct !DILexicalBlock(scope: !10202, file: !3, line: 3145, column: 9)
!10297 = !DILocation(line: 3147, column: 9, scope: !10295)
!10298 = !DILocation(line: 3147, column: 40, scope: !10295)
!10299 = !DILocation(line: 3147, column: 31, scope: !10295)
!10300 = !DILocation(line: 3147, column: 28, scope: !10295)
!10301 = !DILocation(line: 3147, column: 9, scope: !10296)
!10302 = !DILocation(line: 3148, column: 16, scope: !10295)
!10303 = !DILocation(line: 3148, column: 6, scope: !10295)
!10304 = !DILocation(line: 3149, column: 21, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 3149, column: 14)
!10306 = !DILocation(line: 3149, column: 14, scope: !10305)
!10307 = !DILocation(line: 3149, column: 45, scope: !10305)
!10308 = !DILocation(line: 3149, column: 36, scope: !10305)
!10309 = !DILocation(line: 3149, column: 33, scope: !10305)
!10310 = !DILocation(line: 3149, column: 14, scope: !10295)
!10311 = !DILocation(line: 3150, column: 16, scope: !10305)
!10312 = !DILocation(line: 3150, column: 6, scope: !10305)
!10313 = !DILocation(line: 3151, column: 14, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 3151, column: 14)
!10315 = !DILocation(line: 3151, column: 74, scope: !10314)
!10316 = !DILocation(line: 3151, column: 14, scope: !10305)
!10317 = !DILocation(line: 3152, column: 26, scope: !10314)
!10318 = !DILocation(line: 3152, column: 19, scope: !10314)
!10319 = !DILocation(line: 3152, column: 49, scope: !10314)
!10320 = !DILocation(line: 3152, column: 40, scope: !10314)
!10321 = !DILocation(line: 3152, column: 38, scope: !10314)
!10322 = !DILocation(line: 3152, column: 74, scope: !10314)
!10323 = !DILocation(line: 3152, column: 65, scope: !10314)
!10324 = !DILocation(line: 3152, column: 97, scope: !10314)
!10325 = !DILocation(line: 3152, column: 88, scope: !10314)
!10326 = !DILocation(line: 3152, column: 86, scope: !10314)
!10327 = !DILocation(line: 3152, column: 62, scope: !10314)
!10328 = !DILocation(line: 3152, column: 16, scope: !10314)
!10329 = !DILocation(line: 3152, column: 6, scope: !10314)
!10330 = !DILocation(line: 3154, column: 16, scope: !10314)
!10331 = !DILocation(line: 3158, column: 22, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 3158, column: 8)
!10333 = !DILocation(line: 3158, column: 26, scope: !10332)
!10334 = !DILocation(line: 3158, column: 31, scope: !10332)
!10335 = !DILocation(line: 3158, column: 42, scope: !10332)
!10336 = !DILocation(line: 3158, column: 47, scope: !10332)
!10337 = !DILocation(line: 3158, column: 8, scope: !10332)
!10338 = !DILocation(line: 3158, column: 8, scope: !10151)
!10339 = !DILocation(line: 3159, column: 13, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 3158, column: 72)
!10341 = !DILocation(line: 3159, column: 5, scope: !10340)
!10342 = !DILocation(line: 3160, column: 16, scope: !10340)
!10343 = !DILocation(line: 3160, column: 27, scope: !10340)
!10344 = !DILocation(line: 3160, column: 5, scope: !10340)
!10345 = !DILocation(line: 3162, column: 17, scope: !10340)
!10346 = !DILocation(line: 3162, column: 31, scope: !10340)
!10347 = !DILocation(line: 3162, column: 35, scope: !10340)
!10348 = !DILocation(line: 3162, column: 40, scope: !10340)
!10349 = !DILocation(line: 3162, column: 47, scope: !10340)
!10350 = !DILocation(line: 3162, column: 5, scope: !10340)
!10351 = !DILocation(line: 3163, column: 4, scope: !10340)
!10352 = !DILocation(line: 3164, column: 3, scope: !10151)
!10353 = !DILocation(line: 3167, column: 14, scope: !10108)
!10354 = !DILocation(line: 3167, column: 19, scope: !10108)
!10355 = !DILocation(line: 3167, column: 30, scope: !10108)
!10356 = !DILocation(line: 3167, column: 3, scope: !10108)
!10357 = !DILocation(line: 3168, column: 2, scope: !10108)
!10358 = !DILocation(line: 3169, column: 1, scope: !10084)
!10359 = distinct !DISubprogram(name: "transform_id_looper", scope: !3, file: !3, line: 3197, type: !4251, scopeLine: 3198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10360 = !DILocalVariable(name: "con", arg: 1, scope: !10359, file: !3, line: 3197, type: !2708)
!10361 = !DILocation(line: 3197, column: 46, scope: !10359)
!10362 = !DILocalVariable(name: "func", arg: 2, scope: !10359, file: !3, line: 3197, type: !2599)
!10363 = !DILocation(line: 3197, column: 68, scope: !10359)
!10364 = !DILocalVariable(name: "userdata", arg: 3, scope: !10359, file: !3, line: 3197, type: !431)
!10365 = !DILocation(line: 3197, column: 80, scope: !10359)
!10366 = !DILocalVariable(name: "data", scope: !10359, file: !3, line: 3199, type: !2476)
!10367 = !DILocation(line: 3199, column: 24, scope: !10359)
!10368 = !DILocation(line: 3199, column: 31, scope: !10359)
!10369 = !DILocation(line: 3199, column: 36, scope: !10359)
!10370 = !DILocation(line: 3202, column: 2, scope: !10359)
!10371 = !DILocation(line: 3202, column: 7, scope: !10359)
!10372 = !DILocation(line: 3202, column: 20, scope: !10359)
!10373 = !DILocation(line: 3202, column: 26, scope: !10359)
!10374 = !DILocation(line: 3202, column: 12, scope: !10359)
!10375 = !DILocation(line: 3202, column: 38, scope: !10359)
!10376 = !DILocation(line: 3203, column: 1, scope: !10359)
!10377 = distinct !DISubprogram(name: "transform_new_data", scope: !3, file: !3, line: 3188, type: !2610, scopeLine: 3189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10378 = !DILocalVariable(name: "cdata", arg: 1, scope: !10377, file: !3, line: 3188, type: !431)
!10379 = !DILocation(line: 3188, column: 38, scope: !10377)
!10380 = !DILocalVariable(name: "data", scope: !10377, file: !3, line: 3190, type: !2476)
!10381 = !DILocation(line: 3190, column: 24, scope: !10377)
!10382 = !DILocation(line: 3190, column: 55, scope: !10377)
!10383 = !DILocation(line: 3190, column: 31, scope: !10377)
!10384 = !DILocation(line: 3192, column: 2, scope: !10377)
!10385 = !DILocation(line: 3192, column: 8, scope: !10377)
!10386 = !DILocation(line: 3192, column: 15, scope: !10377)
!10387 = !DILocation(line: 3193, column: 2, scope: !10377)
!10388 = !DILocation(line: 3193, column: 8, scope: !10377)
!10389 = !DILocation(line: 3193, column: 15, scope: !10377)
!10390 = !DILocation(line: 3194, column: 2, scope: !10377)
!10391 = !DILocation(line: 3194, column: 8, scope: !10377)
!10392 = !DILocation(line: 3194, column: 15, scope: !10377)
!10393 = !DILocation(line: 3195, column: 1, scope: !10377)
!10394 = distinct !DISubprogram(name: "transform_get_tars", scope: !3, file: !3, line: 3205, type: !4285, scopeLine: 3206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10395 = !DILocalVariable(name: "con", arg: 1, scope: !10394, file: !3, line: 3205, type: !2708)
!10396 = !DILocation(line: 3205, column: 44, scope: !10394)
!10397 = !DILocalVariable(name: "list", arg: 2, scope: !10394, file: !3, line: 3205, type: !1287)
!10398 = !DILocation(line: 3205, column: 59, scope: !10394)
!10399 = !DILocation(line: 3207, column: 6, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 3207, column: 6)
!10401 = !DILocation(line: 3207, column: 10, scope: !10400)
!10402 = !DILocation(line: 3207, column: 13, scope: !10400)
!10403 = !DILocation(line: 3207, column: 6, scope: !10394)
!10404 = !DILocalVariable(name: "data", scope: !10405, file: !3, line: 3208, type: !2476)
!10405 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 3207, column: 19)
!10406 = !DILocation(line: 3208, column: 25, scope: !10405)
!10407 = !DILocation(line: 3208, column: 32, scope: !10405)
!10408 = !DILocation(line: 3208, column: 37, scope: !10405)
!10409 = !DILocalVariable(name: "ct", scope: !10405, file: !3, line: 3209, type: !2244)
!10410 = !DILocation(line: 3209, column: 22, scope: !10405)
!10411 = !DILocation(line: 3212, column: 3, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10405, file: !3, line: 3212, column: 3)
!10413 = !DILocation(line: 3212, column: 3, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10412, file: !3, line: 3212, column: 3)
!10415 = !DILocation(line: 3212, column: 3, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 3212, column: 3)
!10417 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 3212, column: 3)
!10418 = !DILocation(line: 3212, column: 3, scope: !10417)
!10419 = !DILocalVariable(name: "pchan", scope: !10420, file: !3, line: 3212, type: !399)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 3212, column: 3)
!10421 = !DILocation(line: 3212, column: 3, scope: !10420)
!10422 = !DILocation(line: 3212, column: 3, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 3212, column: 3)
!10424 = !DILocation(line: 3212, column: 3, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 3212, column: 3)
!10426 = !DILocation(line: 3212, column: 3, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 3212, column: 3)
!10428 = !DILocation(line: 3214, column: 3, scope: !10405)
!10429 = !DILocation(line: 3217, column: 2, scope: !10394)
!10430 = !DILocation(line: 3218, column: 1, scope: !10394)
!10431 = distinct !DISubprogram(name: "transform_flush_tars", scope: !3, file: !3, line: 3220, type: !4324, scopeLine: 3221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10432 = !DILocalVariable(name: "con", arg: 1, scope: !10431, file: !3, line: 3220, type: !2708)
!10433 = !DILocation(line: 3220, column: 47, scope: !10431)
!10434 = !DILocalVariable(name: "list", arg: 2, scope: !10431, file: !3, line: 3220, type: !1287)
!10435 = !DILocation(line: 3220, column: 62, scope: !10431)
!10436 = !DILocalVariable(name: "no_copy", arg: 3, scope: !10431, file: !3, line: 3220, type: !1111)
!10437 = !DILocation(line: 3220, column: 73, scope: !10431)
!10438 = !DILocation(line: 3222, column: 6, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 3222, column: 6)
!10440 = !DILocation(line: 3222, column: 10, scope: !10439)
!10441 = !DILocation(line: 3222, column: 13, scope: !10439)
!10442 = !DILocation(line: 3222, column: 6, scope: !10431)
!10443 = !DILocalVariable(name: "data", scope: !10444, file: !3, line: 3223, type: !2476)
!10444 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 3222, column: 19)
!10445 = !DILocation(line: 3223, column: 25, scope: !10444)
!10446 = !DILocation(line: 3223, column: 32, scope: !10444)
!10447 = !DILocation(line: 3223, column: 37, scope: !10444)
!10448 = !DILocalVariable(name: "ct", scope: !10444, file: !3, line: 3224, type: !2244)
!10449 = !DILocation(line: 3224, column: 22, scope: !10444)
!10450 = !DILocation(line: 3224, column: 27, scope: !10444)
!10451 = !DILocation(line: 3224, column: 33, scope: !10444)
!10452 = !DILocation(line: 3227, column: 3, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10454, file: !3, line: 3227, column: 3)
!10454 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 3227, column: 3)
!10455 = !DILocation(line: 3227, column: 3, scope: !10454)
!10456 = !DILocalVariable(name: "ctn", scope: !10457, file: !3, line: 3227, type: !2244)
!10457 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 3227, column: 3)
!10458 = !DILocation(line: 3227, column: 3, scope: !10457)
!10459 = !DILocation(line: 3227, column: 3, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 3227, column: 3)
!10461 = !DILocation(line: 3227, column: 3, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10460, file: !3, line: 3227, column: 3)
!10463 = !DILocation(line: 3228, column: 2, scope: !10444)
!10464 = !DILocation(line: 3229, column: 1, scope: !10431)
!10465 = distinct !DISubprogram(name: "transform_evaluate", scope: !3, file: !3, line: 3231, type: !4392, scopeLine: 3232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10466 = !DILocalVariable(name: "con", arg: 1, scope: !10465, file: !3, line: 3231, type: !2708)
!10467 = !DILocation(line: 3231, column: 45, scope: !10465)
!10468 = !DILocalVariable(name: "cob", arg: 2, scope: !10465, file: !3, line: 3231, type: !2733)
!10469 = !DILocation(line: 3231, column: 65, scope: !10465)
!10470 = !DILocalVariable(name: "targets", arg: 3, scope: !10465, file: !3, line: 3231, type: !1287)
!10471 = !DILocation(line: 3231, column: 80, scope: !10465)
!10472 = !DILocalVariable(name: "data", scope: !10465, file: !3, line: 3233, type: !2476)
!10473 = !DILocation(line: 3233, column: 24, scope: !10465)
!10474 = !DILocation(line: 3233, column: 31, scope: !10465)
!10475 = !DILocation(line: 3233, column: 36, scope: !10465)
!10476 = !DILocalVariable(name: "ct", scope: !10465, file: !3, line: 3234, type: !2244)
!10477 = !DILocation(line: 3234, column: 21, scope: !10465)
!10478 = !DILocation(line: 3234, column: 26, scope: !10465)
!10479 = !DILocation(line: 3234, column: 35, scope: !10465)
!10480 = !DILocation(line: 3237, column: 6, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10465, file: !3, line: 3237, column: 6)
!10482 = !DILocation(line: 3237, column: 6, scope: !10465)
!10483 = !DILocalVariable(name: "from_min", scope: !10484, file: !3, line: 3238, type: !1080)
!10484 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 3237, column: 29)
!10485 = !DILocation(line: 3238, column: 10, scope: !10484)
!10486 = !DILocalVariable(name: "from_max", scope: !10484, file: !3, line: 3238, type: !1080)
!10487 = !DILocation(line: 3238, column: 21, scope: !10484)
!10488 = !DILocalVariable(name: "to_min", scope: !10484, file: !3, line: 3238, type: !1080)
!10489 = !DILocation(line: 3238, column: 32, scope: !10484)
!10490 = !DILocalVariable(name: "to_max", scope: !10484, file: !3, line: 3238, type: !1080)
!10491 = !DILocation(line: 3238, column: 41, scope: !10484)
!10492 = !DILocalVariable(name: "loc", scope: !10484, file: !3, line: 3239, type: !469)
!10493 = !DILocation(line: 3239, column: 9, scope: !10484)
!10494 = !DILocalVariable(name: "eul", scope: !10484, file: !3, line: 3239, type: !469)
!10495 = !DILocation(line: 3239, column: 17, scope: !10484)
!10496 = !DILocalVariable(name: "size", scope: !10484, file: !3, line: 3239, type: !469)
!10497 = !DILocation(line: 3239, column: 25, scope: !10484)
!10498 = !DILocalVariable(name: "dvec", scope: !10484, file: !3, line: 3240, type: !469)
!10499 = !DILocation(line: 3240, column: 9, scope: !10484)
!10500 = !DILocalVariable(name: "sval", scope: !10484, file: !3, line: 3240, type: !469)
!10501 = !DILocation(line: 3240, column: 18, scope: !10484)
!10502 = !DILocalVariable(name: "i", scope: !10484, file: !3, line: 3241, type: !352)
!10503 = !DILocation(line: 3241, column: 7, scope: !10484)
!10504 = !DILocation(line: 3244, column: 11, scope: !10484)
!10505 = !DILocation(line: 3244, column: 17, scope: !10484)
!10506 = !DILocation(line: 3244, column: 3, scope: !10484)
!10507 = !DILocation(line: 3246, column: 18, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 3244, column: 23)
!10509 = !DILocation(line: 3246, column: 24, scope: !10508)
!10510 = !DILocation(line: 3246, column: 28, scope: !10508)
!10511 = !DILocation(line: 3246, column: 5, scope: !10508)
!10512 = !DILocation(line: 3248, column: 24, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 3248, column: 9)
!10514 = !DILocation(line: 3248, column: 28, scope: !10513)
!10515 = !DILocation(line: 3248, column: 9, scope: !10513)
!10516 = !DILocation(line: 3248, column: 9, scope: !10508)
!10517 = !DILocation(line: 3254, column: 16, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10513, file: !3, line: 3248, column: 37)
!10519 = !DILocation(line: 3254, column: 6, scope: !10518)
!10520 = !DILocation(line: 3255, column: 5, scope: !10518)
!10521 = !DILocation(line: 3256, column: 16, scope: !10508)
!10522 = !DILocation(line: 3256, column: 22, scope: !10508)
!10523 = !DILocation(line: 3256, column: 14, scope: !10508)
!10524 = !DILocation(line: 3257, column: 16, scope: !10508)
!10525 = !DILocation(line: 3257, column: 22, scope: !10508)
!10526 = !DILocation(line: 3257, column: 14, scope: !10508)
!10527 = !DILocation(line: 3258, column: 5, scope: !10508)
!10528 = !DILocation(line: 3260, column: 18, scope: !10508)
!10529 = !DILocation(line: 3260, column: 24, scope: !10508)
!10530 = !DILocation(line: 3260, column: 29, scope: !10508)
!10531 = !DILocation(line: 3260, column: 39, scope: !10508)
!10532 = !DILocation(line: 3260, column: 43, scope: !10508)
!10533 = !DILocation(line: 3260, column: 5, scope: !10508)
!10534 = !DILocation(line: 3261, column: 16, scope: !10508)
!10535 = !DILocation(line: 3261, column: 22, scope: !10508)
!10536 = !DILocation(line: 3261, column: 14, scope: !10508)
!10537 = !DILocation(line: 3262, column: 16, scope: !10508)
!10538 = !DILocation(line: 3262, column: 22, scope: !10508)
!10539 = !DILocation(line: 3262, column: 14, scope: !10508)
!10540 = !DILocation(line: 3263, column: 5, scope: !10508)
!10541 = !DILocation(line: 3266, column: 16, scope: !10508)
!10542 = !DILocation(line: 3266, column: 22, scope: !10508)
!10543 = !DILocation(line: 3266, column: 26, scope: !10508)
!10544 = !DILocation(line: 3266, column: 5, scope: !10508)
!10545 = !DILocation(line: 3267, column: 16, scope: !10508)
!10546 = !DILocation(line: 3267, column: 22, scope: !10508)
!10547 = !DILocation(line: 3267, column: 14, scope: !10508)
!10548 = !DILocation(line: 3268, column: 16, scope: !10508)
!10549 = !DILocation(line: 3268, column: 22, scope: !10508)
!10550 = !DILocation(line: 3268, column: 14, scope: !10508)
!10551 = !DILocation(line: 3269, column: 5, scope: !10508)
!10552 = !DILocation(line: 3273, column: 14, scope: !10484)
!10553 = !DILocation(line: 3273, column: 19, scope: !10484)
!10554 = !DILocation(line: 3273, column: 24, scope: !10484)
!10555 = !DILocation(line: 3273, column: 3, scope: !10484)
!10556 = !DILocation(line: 3274, column: 16, scope: !10484)
!10557 = !DILocation(line: 3274, column: 21, scope: !10484)
!10558 = !DILocation(line: 3274, column: 26, scope: !10484)
!10559 = !DILocation(line: 3274, column: 36, scope: !10484)
!10560 = !DILocation(line: 3274, column: 41, scope: !10484)
!10561 = !DILocation(line: 3274, column: 3, scope: !10484)
!10562 = !DILocation(line: 3275, column: 16, scope: !10484)
!10563 = !DILocation(line: 3275, column: 22, scope: !10484)
!10564 = !DILocation(line: 3275, column: 27, scope: !10484)
!10565 = !DILocation(line: 3275, column: 3, scope: !10484)
!10566 = !DILocation(line: 3278, column: 7, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 3278, column: 7)
!10568 = !DILocation(line: 3278, column: 13, scope: !10567)
!10569 = !DILocation(line: 3278, column: 7, scope: !10484)
!10570 = !DILocation(line: 3279, column: 11, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 3279, column: 4)
!10572 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 3278, column: 19)
!10573 = !DILocation(line: 3279, column: 9, scope: !10571)
!10574 = !DILocation(line: 3279, column: 16, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 3279, column: 4)
!10576 = !DILocation(line: 3279, column: 18, scope: !10575)
!10577 = !DILocation(line: 3279, column: 4, scope: !10571)
!10578 = !DILocation(line: 3280, column: 9, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 3280, column: 9)
!10580 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 3279, column: 28)
!10581 = !DILocation(line: 3280, column: 18, scope: !10579)
!10582 = !DILocation(line: 3280, column: 23, scope: !10579)
!10583 = !DILocation(line: 3280, column: 32, scope: !10579)
!10584 = !DILocation(line: 3280, column: 21, scope: !10579)
!10585 = !DILocation(line: 3280, column: 9, scope: !10580)
!10586 = !DILocation(line: 3281, column: 22, scope: !10579)
!10587 = !DILocation(line: 3281, column: 17, scope: !10579)
!10588 = !DILocation(line: 3281, column: 27, scope: !10579)
!10589 = !DILocation(line: 3281, column: 36, scope: !10579)
!10590 = !DILocation(line: 3281, column: 25, scope: !10579)
!10591 = !DILocation(line: 3281, column: 43, scope: !10579)
!10592 = !DILocation(line: 3281, column: 52, scope: !10579)
!10593 = !DILocation(line: 3281, column: 57, scope: !10579)
!10594 = !DILocation(line: 3281, column: 66, scope: !10579)
!10595 = !DILocation(line: 3281, column: 55, scope: !10579)
!10596 = !DILocation(line: 3281, column: 40, scope: !10579)
!10597 = !DILocation(line: 3281, column: 11, scope: !10579)
!10598 = !DILocation(line: 3281, column: 6, scope: !10579)
!10599 = !DILocation(line: 3281, column: 14, scope: !10579)
!10600 = !DILocation(line: 3283, column: 11, scope: !10579)
!10601 = !DILocation(line: 3283, column: 6, scope: !10579)
!10602 = !DILocation(line: 3283, column: 14, scope: !10579)
!10603 = !DILocation(line: 3284, column: 4, scope: !10580)
!10604 = !DILocation(line: 3279, column: 24, scope: !10575)
!10605 = !DILocation(line: 3279, column: 4, scope: !10575)
!10606 = distinct !{!10606, !10577, !10607}
!10607 = !DILocation(line: 3284, column: 4, scope: !10571)
!10608 = !DILocation(line: 3285, column: 3, scope: !10572)
!10609 = !DILocation(line: 3288, column: 11, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 3288, column: 4)
!10611 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 3286, column: 8)
!10612 = !DILocation(line: 3288, column: 9, scope: !10610)
!10613 = !DILocation(line: 3288, column: 16, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 3288, column: 4)
!10615 = !DILocation(line: 3288, column: 18, scope: !10614)
!10616 = !DILocation(line: 3288, column: 4, scope: !10610)
!10617 = !DILocation(line: 3289, column: 5, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 3289, column: 5)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 3289, column: 5)
!10620 = distinct !DILexicalBlock(scope: !10614, file: !3, line: 3288, column: 28)
!10621 = !DILocation(line: 3289, column: 5, scope: !10619)
!10622 = !DILocation(line: 3289, column: 5, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 3289, column: 5)
!10624 = !DILocation(line: 3290, column: 9, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 3290, column: 9)
!10626 = !DILocation(line: 3290, column: 18, scope: !10625)
!10627 = !DILocation(line: 3290, column: 23, scope: !10625)
!10628 = !DILocation(line: 3290, column: 32, scope: !10625)
!10629 = !DILocation(line: 3290, column: 21, scope: !10625)
!10630 = !DILocation(line: 3290, column: 9, scope: !10620)
!10631 = !DILocation(line: 3291, column: 22, scope: !10625)
!10632 = !DILocation(line: 3291, column: 17, scope: !10625)
!10633 = !DILocation(line: 3291, column: 27, scope: !10625)
!10634 = !DILocation(line: 3291, column: 36, scope: !10625)
!10635 = !DILocation(line: 3291, column: 25, scope: !10625)
!10636 = !DILocation(line: 3291, column: 43, scope: !10625)
!10637 = !DILocation(line: 3291, column: 52, scope: !10625)
!10638 = !DILocation(line: 3291, column: 57, scope: !10625)
!10639 = !DILocation(line: 3291, column: 66, scope: !10625)
!10640 = !DILocation(line: 3291, column: 55, scope: !10625)
!10641 = !DILocation(line: 3291, column: 40, scope: !10625)
!10642 = !DILocation(line: 3291, column: 11, scope: !10625)
!10643 = !DILocation(line: 3291, column: 6, scope: !10625)
!10644 = !DILocation(line: 3291, column: 14, scope: !10625)
!10645 = !DILocation(line: 3293, column: 11, scope: !10625)
!10646 = !DILocation(line: 3293, column: 6, scope: !10625)
!10647 = !DILocation(line: 3293, column: 14, scope: !10625)
!10648 = !DILocation(line: 3294, column: 4, scope: !10620)
!10649 = !DILocation(line: 3288, column: 24, scope: !10614)
!10650 = !DILocation(line: 3288, column: 4, scope: !10614)
!10651 = distinct !{!10651, !10616, !10652}
!10652 = !DILocation(line: 3294, column: 4, scope: !10610)
!10653 = !DILocation(line: 3299, column: 11, scope: !10484)
!10654 = !DILocation(line: 3299, column: 17, scope: !10484)
!10655 = !DILocation(line: 3299, column: 3, scope: !10484)
!10656 = !DILocation(line: 3301, column: 14, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 3299, column: 21)
!10658 = !DILocation(line: 3301, column: 20, scope: !10657)
!10659 = !DILocation(line: 3301, column: 12, scope: !10657)
!10660 = !DILocation(line: 3302, column: 14, scope: !10657)
!10661 = !DILocation(line: 3302, column: 20, scope: !10657)
!10662 = !DILocation(line: 3302, column: 12, scope: !10657)
!10663 = !DILocation(line: 3303, column: 12, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 3303, column: 5)
!10665 = !DILocation(line: 3303, column: 10, scope: !10664)
!10666 = !DILocation(line: 3303, column: 17, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 3303, column: 5)
!10668 = !DILocation(line: 3303, column: 19, scope: !10667)
!10669 = !DILocation(line: 3303, column: 5, scope: !10664)
!10670 = !DILocation(line: 3307, column: 16, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 3303, column: 29)
!10672 = !DILocation(line: 3307, column: 23, scope: !10671)
!10673 = !DILocation(line: 3307, column: 39, scope: !10671)
!10674 = !DILocation(line: 3307, column: 45, scope: !10671)
!10675 = !DILocation(line: 3307, column: 49, scope: !10671)
!10676 = !DILocation(line: 3307, column: 34, scope: !10671)
!10677 = !DILocation(line: 3307, column: 29, scope: !10671)
!10678 = !DILocation(line: 3307, column: 56, scope: !10671)
!10679 = !DILocation(line: 3307, column: 63, scope: !10671)
!10680 = !DILocation(line: 3307, column: 68, scope: !10671)
!10681 = !DILocation(line: 3307, column: 75, scope: !10671)
!10682 = !DILocation(line: 3307, column: 66, scope: !10671)
!10683 = !DILocation(line: 3307, column: 53, scope: !10671)
!10684 = !DILocation(line: 3307, column: 26, scope: !10671)
!10685 = !DILocation(line: 3307, column: 11, scope: !10671)
!10686 = !DILocation(line: 3307, column: 6, scope: !10671)
!10687 = !DILocation(line: 3307, column: 14, scope: !10671)
!10688 = !DILocation(line: 3308, column: 5, scope: !10671)
!10689 = !DILocation(line: 3303, column: 25, scope: !10667)
!10690 = !DILocation(line: 3303, column: 5, scope: !10667)
!10691 = distinct !{!10691, !10669, !10692}
!10692 = !DILocation(line: 3308, column: 5, scope: !10664)
!10693 = !DILocation(line: 3309, column: 5, scope: !10657)
!10694 = !DILocation(line: 3311, column: 14, scope: !10657)
!10695 = !DILocation(line: 3311, column: 20, scope: !10657)
!10696 = !DILocation(line: 3311, column: 12, scope: !10657)
!10697 = !DILocation(line: 3312, column: 14, scope: !10657)
!10698 = !DILocation(line: 3312, column: 20, scope: !10657)
!10699 = !DILocation(line: 3312, column: 12, scope: !10657)
!10700 = !DILocation(line: 3313, column: 12, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 3313, column: 5)
!10702 = !DILocation(line: 3313, column: 10, scope: !10701)
!10703 = !DILocation(line: 3313, column: 17, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 3313, column: 5)
!10705 = !DILocation(line: 3313, column: 19, scope: !10704)
!10706 = !DILocation(line: 3313, column: 5, scope: !10701)
!10707 = !DILocation(line: 3315, column: 16, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 3313, column: 29)
!10709 = !DILocation(line: 3315, column: 23, scope: !10708)
!10710 = !DILocation(line: 3315, column: 39, scope: !10708)
!10711 = !DILocation(line: 3315, column: 45, scope: !10708)
!10712 = !DILocation(line: 3315, column: 49, scope: !10708)
!10713 = !DILocation(line: 3315, column: 34, scope: !10708)
!10714 = !DILocation(line: 3315, column: 29, scope: !10708)
!10715 = !DILocation(line: 3315, column: 56, scope: !10708)
!10716 = !DILocation(line: 3315, column: 63, scope: !10708)
!10717 = !DILocation(line: 3315, column: 68, scope: !10708)
!10718 = !DILocation(line: 3315, column: 75, scope: !10708)
!10719 = !DILocation(line: 3315, column: 66, scope: !10708)
!10720 = !DILocation(line: 3315, column: 53, scope: !10708)
!10721 = !DILocation(line: 3315, column: 26, scope: !10708)
!10722 = !DILocation(line: 3315, column: 10, scope: !10708)
!10723 = !DILocation(line: 3315, column: 6, scope: !10708)
!10724 = !DILocation(line: 3315, column: 13, scope: !10708)
!10725 = !DILocation(line: 3316, column: 5, scope: !10708)
!10726 = !DILocation(line: 3313, column: 25, scope: !10704)
!10727 = !DILocation(line: 3313, column: 5, scope: !10704)
!10728 = distinct !{!10728, !10706, !10729}
!10729 = !DILocation(line: 3316, column: 5, scope: !10701)
!10730 = !DILocation(line: 3317, column: 5, scope: !10657)
!10731 = !DILocation(line: 3320, column: 14, scope: !10657)
!10732 = !DILocation(line: 3320, column: 20, scope: !10657)
!10733 = !DILocation(line: 3320, column: 12, scope: !10657)
!10734 = !DILocation(line: 3321, column: 14, scope: !10657)
!10735 = !DILocation(line: 3321, column: 20, scope: !10657)
!10736 = !DILocation(line: 3321, column: 12, scope: !10657)
!10737 = !DILocation(line: 3322, column: 12, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 3322, column: 5)
!10739 = !DILocation(line: 3322, column: 10, scope: !10738)
!10740 = !DILocation(line: 3322, column: 17, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10738, file: !3, line: 3322, column: 5)
!10742 = !DILocation(line: 3322, column: 19, scope: !10741)
!10743 = !DILocation(line: 3322, column: 5, scope: !10738)
!10744 = !DILocation(line: 3324, column: 17, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10741, file: !3, line: 3322, column: 29)
!10746 = !DILocation(line: 3324, column: 24, scope: !10745)
!10747 = !DILocation(line: 3324, column: 40, scope: !10745)
!10748 = !DILocation(line: 3324, column: 46, scope: !10745)
!10749 = !DILocation(line: 3324, column: 50, scope: !10745)
!10750 = !DILocation(line: 3324, column: 35, scope: !10745)
!10751 = !DILocation(line: 3324, column: 30, scope: !10745)
!10752 = !DILocation(line: 3324, column: 57, scope: !10745)
!10753 = !DILocation(line: 3324, column: 64, scope: !10745)
!10754 = !DILocation(line: 3324, column: 69, scope: !10745)
!10755 = !DILocation(line: 3324, column: 76, scope: !10745)
!10756 = !DILocation(line: 3324, column: 67, scope: !10745)
!10757 = !DILocation(line: 3324, column: 54, scope: !10745)
!10758 = !DILocation(line: 3324, column: 27, scope: !10745)
!10759 = !DILocation(line: 3324, column: 10, scope: !10745)
!10760 = !DILocation(line: 3324, column: 6, scope: !10745)
!10761 = !DILocation(line: 3324, column: 13, scope: !10745)
!10762 = !DILocation(line: 3325, column: 5, scope: !10745)
!10763 = !DILocation(line: 3322, column: 25, scope: !10741)
!10764 = !DILocation(line: 3322, column: 5, scope: !10741)
!10765 = distinct !{!10765, !10743, !10766}
!10766 = !DILocation(line: 3325, column: 5, scope: !10738)
!10767 = !DILocation(line: 3326, column: 5, scope: !10657)
!10768 = !DILocation(line: 3330, column: 25, scope: !10484)
!10769 = !DILocation(line: 3330, column: 30, scope: !10484)
!10770 = !DILocation(line: 3330, column: 38, scope: !10484)
!10771 = !DILocation(line: 3330, column: 43, scope: !10484)
!10772 = !DILocation(line: 3330, column: 48, scope: !10484)
!10773 = !DILocation(line: 3330, column: 54, scope: !10484)
!10774 = !DILocation(line: 3330, column: 59, scope: !10484)
!10775 = !DILocation(line: 3330, column: 3, scope: !10484)
!10776 = !DILocation(line: 3331, column: 2, scope: !10484)
!10777 = !DILocation(line: 3332, column: 1, scope: !10465)
!10778 = distinct !DISubprogram(name: "shrinkwrap_id_looper", scope: !3, file: !3, line: 3351, type: !4251, scopeLine: 3352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10779 = !DILocalVariable(name: "con", arg: 1, scope: !10778, file: !3, line: 3351, type: !2708)
!10780 = !DILocation(line: 3351, column: 47, scope: !10778)
!10781 = !DILocalVariable(name: "func", arg: 2, scope: !10778, file: !3, line: 3351, type: !2599)
!10782 = !DILocation(line: 3351, column: 69, scope: !10778)
!10783 = !DILocalVariable(name: "userdata", arg: 3, scope: !10778, file: !3, line: 3351, type: !431)
!10784 = !DILocation(line: 3351, column: 81, scope: !10778)
!10785 = !DILocalVariable(name: "data", scope: !10778, file: !3, line: 3353, type: !2498)
!10786 = !DILocation(line: 3353, column: 25, scope: !10778)
!10787 = !DILocation(line: 3353, column: 32, scope: !10778)
!10788 = !DILocation(line: 3353, column: 37, scope: !10778)
!10789 = !DILocation(line: 3356, column: 2, scope: !10778)
!10790 = !DILocation(line: 3356, column: 7, scope: !10778)
!10791 = !DILocation(line: 3356, column: 20, scope: !10778)
!10792 = !DILocation(line: 3356, column: 26, scope: !10778)
!10793 = !DILocation(line: 3356, column: 12, scope: !10778)
!10794 = !DILocation(line: 3356, column: 41, scope: !10778)
!10795 = !DILocation(line: 3357, column: 1, scope: !10778)
!10796 = distinct !DISubprogram(name: "shrinkwrap_new_data", scope: !3, file: !3, line: 3359, type: !2610, scopeLine: 3360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10797 = !DILocalVariable(name: "cdata", arg: 1, scope: !10796, file: !3, line: 3359, type: !431)
!10798 = !DILocation(line: 3359, column: 39, scope: !10796)
!10799 = !DILocalVariable(name: "data", scope: !10796, file: !3, line: 3361, type: !2498)
!10800 = !DILocation(line: 3361, column: 25, scope: !10796)
!10801 = !DILocation(line: 3361, column: 57, scope: !10796)
!10802 = !DILocation(line: 3361, column: 32, scope: !10796)
!10803 = !DILocation(line: 3363, column: 2, scope: !10796)
!10804 = !DILocation(line: 3363, column: 8, scope: !10796)
!10805 = !DILocation(line: 3363, column: 17, scope: !10796)
!10806 = !DILocation(line: 3364, column: 2, scope: !10796)
!10807 = !DILocation(line: 3364, column: 8, scope: !10796)
!10808 = !DILocation(line: 3364, column: 22, scope: !10796)
!10809 = !DILocation(line: 3365, column: 1, scope: !10796)
!10810 = distinct !DISubprogram(name: "shrinkwrap_get_tars", scope: !3, file: !3, line: 3367, type: !4285, scopeLine: 3368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10811 = !DILocalVariable(name: "con", arg: 1, scope: !10810, file: !3, line: 3367, type: !2708)
!10812 = !DILocation(line: 3367, column: 45, scope: !10810)
!10813 = !DILocalVariable(name: "list", arg: 2, scope: !10810, file: !3, line: 3367, type: !1287)
!10814 = !DILocation(line: 3367, column: 60, scope: !10810)
!10815 = !DILocation(line: 3369, column: 6, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 3369, column: 6)
!10817 = !DILocation(line: 3369, column: 10, scope: !10816)
!10818 = !DILocation(line: 3369, column: 13, scope: !10816)
!10819 = !DILocation(line: 3369, column: 6, scope: !10810)
!10820 = !DILocalVariable(name: "data", scope: !10821, file: !3, line: 3370, type: !2498)
!10821 = distinct !DILexicalBlock(scope: !10816, file: !3, line: 3369, column: 19)
!10822 = !DILocation(line: 3370, column: 26, scope: !10821)
!10823 = !DILocation(line: 3370, column: 33, scope: !10821)
!10824 = !DILocation(line: 3370, column: 38, scope: !10821)
!10825 = !DILocalVariable(name: "ct", scope: !10821, file: !3, line: 3371, type: !2244)
!10826 = !DILocation(line: 3371, column: 22, scope: !10821)
!10827 = !DILocation(line: 3373, column: 3, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 3373, column: 3)
!10829 = !DILocation(line: 3373, column: 3, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 3373, column: 3)
!10831 = !DILocation(line: 3375, column: 3, scope: !10821)
!10832 = !DILocation(line: 3378, column: 2, scope: !10810)
!10833 = !DILocation(line: 3379, column: 1, scope: !10810)
!10834 = distinct !DISubprogram(name: "shrinkwrap_flush_tars", scope: !3, file: !3, line: 3382, type: !4324, scopeLine: 3383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10835 = !DILocalVariable(name: "con", arg: 1, scope: !10834, file: !3, line: 3382, type: !2708)
!10836 = !DILocation(line: 3382, column: 48, scope: !10834)
!10837 = !DILocalVariable(name: "list", arg: 2, scope: !10834, file: !3, line: 3382, type: !1287)
!10838 = !DILocation(line: 3382, column: 63, scope: !10834)
!10839 = !DILocalVariable(name: "no_copy", arg: 3, scope: !10834, file: !3, line: 3382, type: !1111)
!10840 = !DILocation(line: 3382, column: 74, scope: !10834)
!10841 = !DILocation(line: 3384, column: 6, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 3384, column: 6)
!10843 = !DILocation(line: 3384, column: 10, scope: !10842)
!10844 = !DILocation(line: 3384, column: 13, scope: !10842)
!10845 = !DILocation(line: 3384, column: 6, scope: !10834)
!10846 = !DILocalVariable(name: "data", scope: !10847, file: !3, line: 3385, type: !2498)
!10847 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3384, column: 19)
!10848 = !DILocation(line: 3385, column: 26, scope: !10847)
!10849 = !DILocation(line: 3385, column: 33, scope: !10847)
!10850 = !DILocation(line: 3385, column: 38, scope: !10847)
!10851 = !DILocalVariable(name: "ct", scope: !10847, file: !3, line: 3386, type: !2244)
!10852 = !DILocation(line: 3386, column: 22, scope: !10847)
!10853 = !DILocation(line: 3386, column: 27, scope: !10847)
!10854 = !DILocation(line: 3386, column: 33, scope: !10847)
!10855 = !DILocation(line: 3388, column: 3, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 3388, column: 3)
!10857 = distinct !DILexicalBlock(scope: !10847, file: !3, line: 3388, column: 3)
!10858 = !DILocation(line: 3388, column: 3, scope: !10857)
!10859 = !DILocalVariable(name: "ctn", scope: !10860, file: !3, line: 3388, type: !2244)
!10860 = distinct !DILexicalBlock(scope: !10856, file: !3, line: 3388, column: 3)
!10861 = !DILocation(line: 3388, column: 3, scope: !10860)
!10862 = !DILocation(line: 3388, column: 3, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10860, file: !3, line: 3388, column: 3)
!10864 = !DILocation(line: 3388, column: 3, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10863, file: !3, line: 3388, column: 3)
!10866 = !DILocation(line: 3389, column: 2, scope: !10847)
!10867 = !DILocation(line: 3390, column: 1, scope: !10834)
!10868 = distinct !DISubprogram(name: "shrinkwrap_get_tarmat", scope: !3, file: !3, line: 3393, type: !4360, scopeLine: 3394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!10869 = !DILocalVariable(name: "con", arg: 1, scope: !10868, file: !3, line: 3393, type: !2708)
!10870 = !DILocation(line: 3393, column: 48, scope: !10868)
!10871 = !DILocalVariable(name: "cob", arg: 2, scope: !10868, file: !3, line: 3393, type: !2733)
!10872 = !DILocation(line: 3393, column: 68, scope: !10868)
!10873 = !DILocalVariable(name: "ct", arg: 3, scope: !10868, file: !3, line: 3393, type: !2244)
!10874 = !DILocation(line: 3393, column: 92, scope: !10868)
!10875 = !DILocalVariable(name: "UNUSED_ctime", arg: 4, scope: !10868, file: !3, line: 3393, type: !467)
!10876 = !DILocation(line: 3393, column: 102, scope: !10868)
!10877 = !DILocalVariable(name: "scon", scope: !10868, file: !3, line: 3395, type: !2498)
!10878 = !DILocation(line: 3395, column: 25, scope: !10868)
!10879 = !DILocation(line: 3395, column: 58, scope: !10868)
!10880 = !DILocation(line: 3395, column: 63, scope: !10868)
!10881 = !DILocation(line: 3395, column: 32, scope: !10868)
!10882 = !DILocation(line: 3397, column: 6, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10868, file: !3, line: 3397, column: 6)
!10884 = !DILocation(line: 3397, column: 28, scope: !10883)
!10885 = !DILocation(line: 3397, column: 32, scope: !10883)
!10886 = !DILocation(line: 3397, column: 36, scope: !10883)
!10887 = !DILocation(line: 3397, column: 41, scope: !10883)
!10888 = !DILocation(line: 3397, column: 46, scope: !10883)
!10889 = !DILocation(line: 3397, column: 6, scope: !10868)
!10890 = !DILocalVariable(name: "fail", scope: !10891, file: !3, line: 3398, type: !1111)
!10891 = distinct !DILexicalBlock(scope: !10883, file: !3, line: 3397, column: 60)
!10892 = !DILocation(line: 3398, column: 8, scope: !10891)
!10893 = !DILocalVariable(name: "co", scope: !10891, file: !3, line: 3399, type: !469)
!10894 = !DILocation(line: 3399, column: 9, scope: !10891)
!10895 = !DILocalVariable(name: "transform", scope: !10891, file: !3, line: 3401, type: !10896)
!10896 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceTransform", file: !10897, line: 247, baseType: !10898)
!10897 = !DIFile(filename: "blender/source/blender/blenlib/BLI_math_matrix.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceTransform", file: !10897, line: 243, size: 1024, elements: !10899)
!10899 = !{!10900, !10901}
!10900 = !DIDerivedType(tag: DW_TAG_member, name: "local2target", scope: !10898, file: !10897, line: 244, baseType: !480, size: 512)
!10901 = !DIDerivedType(tag: DW_TAG_member, name: "target2local", scope: !10898, file: !10897, line: 245, baseType: !480, size: 512, offset: 512)
!10902 = !DILocation(line: 3401, column: 18, scope: !10891)
!10903 = !DILocalVariable(name: "target", scope: !10891, file: !3, line: 3403, type: !857)
!10904 = !DILocation(line: 3403, column: 16, scope: !10891)
!10905 = !DILocation(line: 3403, column: 50, scope: !10891)
!10906 = !DILocation(line: 3403, column: 54, scope: !10891)
!10907 = !DILocation(line: 3403, column: 25, scope: !10891)
!10908 = !DILocalVariable(name: "treeData", scope: !10891, file: !3, line: 3405, type: !10909)
!10909 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeFromMesh", file: !838, line: 69, baseType: !10910)
!10910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeFromMesh", file: !838, line: 47, size: 576, elements: !10911)
!10911 = !{!10912, !10916, !10930, !10952, !10953, !10954, !10955, !10956, !10957, !10958, !10959, !10960}
!10912 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !10910, file: !838, line: 48, baseType: !10913, size: 64)
!10913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10914, size: 64)
!10914 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !10915, line: 42, flags: DIFlagFwdDecl)
!10915 = !DIFile(filename: "blender/source/blender/blenlib/BLI_kdopbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10916 = !DIDerivedType(tag: DW_TAG_member, name: "nearest_callback", scope: !10910, file: !838, line: 51, baseType: !10917, size: 64, offset: 64)
!10917 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree_NearestPointCallback", file: !10915, line: 76, baseType: !10918)
!10918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10919, size: 64)
!10919 = !DISubroutineType(types: !10920)
!10920 = !{null, !431, !352, !1054, !10921}
!10921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10922, size: 64)
!10922 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeNearest", file: !10915, line: 59, baseType: !10923)
!10923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeNearest", file: !10915, line: 53, size: 288, elements: !10924)
!10924 = !{!10925, !10926, !10927, !10928, !10929}
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10923, file: !10915, line: 54, baseType: !352, size: 32)
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !10923, file: !10915, line: 55, baseType: !469, size: 96, offset: 32)
!10927 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !10923, file: !10915, line: 56, baseType: !469, size: 96, offset: 128)
!10928 = !DIDerivedType(tag: DW_TAG_member, name: "dist_sq", scope: !10923, file: !10915, line: 57, baseType: !467, size: 32, offset: 224)
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10923, file: !10915, line: 58, baseType: !352, size: 32, offset: 256)
!10930 = !DIDerivedType(tag: DW_TAG_member, name: "raycast_callback", scope: !10910, file: !838, line: 52, baseType: !10931, size: 64, offset: 128)
!10931 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree_RayCastCallback", file: !10915, line: 79, baseType: !10932)
!10932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10933, size: 64)
!10933 = !DISubroutineType(types: !10934)
!10934 = !{null, !431, !352, !10935, !10943}
!10935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10936, size: 64)
!10936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10937)
!10937 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeRay", file: !10915, line: 65, baseType: !10938)
!10938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeRay", file: !10915, line: 61, size: 224, elements: !10939)
!10939 = !{!10940, !10941, !10942}
!10940 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !10938, file: !10915, line: 62, baseType: !469, size: 96)
!10941 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10938, file: !10915, line: 63, baseType: !469, size: 96, offset: 96)
!10942 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !10938, file: !10915, line: 64, baseType: !467, size: 32, offset: 192)
!10943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10944, size: 64)
!10944 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeRayHit", file: !10915, line: 73, baseType: !10945)
!10945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeRayHit", file: !10915, line: 67, size: 288, elements: !10946)
!10946 = !{!10947, !10948, !10949, !10950, !10951}
!10947 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10945, file: !10915, line: 68, baseType: !352, size: 32)
!10948 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !10945, file: !10915, line: 69, baseType: !469, size: 96, offset: 32)
!10949 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !10945, file: !10915, line: 70, baseType: !469, size: 96, offset: 128)
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !10945, file: !10915, line: 71, baseType: !467, size: 32, offset: 224)
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10945, file: !10915, line: 72, baseType: !352, size: 32, offset: 256)
!10952 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !10910, file: !838, line: 55, baseType: !877, size: 64, offset: 192)
!10953 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !10910, file: !838, line: 56, baseType: !890, size: 64, offset: 256)
!10954 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !10910, file: !838, line: 57, baseType: !902, size: 64, offset: 320)
!10955 = !DIDerivedType(tag: DW_TAG_member, name: "vert_allocated", scope: !10910, file: !838, line: 58, baseType: !1111, size: 8, offset: 384)
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "face_allocated", scope: !10910, file: !838, line: 59, baseType: !1111, size: 8, offset: 392)
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "edge_allocated", scope: !10910, file: !838, line: 60, baseType: !1111, size: 8, offset: 400)
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !10910, file: !838, line: 63, baseType: !467, size: 32, offset: 416)
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "em_evil", scope: !10910, file: !838, line: 66, baseType: !431, size: 64, offset: 448)
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "cached", scope: !10910, file: !838, line: 67, baseType: !1111, size: 8, offset: 512)
!10961 = !DILocation(line: 3405, column: 19, scope: !10891)
!10962 = !DILocation(line: 3407, column: 11, scope: !10891)
!10963 = !DILocation(line: 3407, column: 15, scope: !10891)
!10964 = !DILocation(line: 3407, column: 3, scope: !10891)
!10965 = !DILocation(line: 3409, column: 7, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10891, file: !3, line: 3409, column: 7)
!10967 = !DILocation(line: 3409, column: 14, scope: !10966)
!10968 = !DILocation(line: 3409, column: 7, scope: !10891)
!10969 = !DILocation(line: 3410, column: 50, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3409, column: 23)
!10971 = !DILocation(line: 3410, column: 55, scope: !10970)
!10972 = !DILocation(line: 3410, column: 63, scope: !10970)
!10973 = !DILocation(line: 3410, column: 67, scope: !10970)
!10974 = !DILocation(line: 3410, column: 72, scope: !10970)
!10975 = !DILocation(line: 3410, column: 4, scope: !10970)
!10976 = !DILocation(line: 3412, column: 12, scope: !10970)
!10977 = !DILocation(line: 3412, column: 18, scope: !10970)
!10978 = !DILocation(line: 3412, column: 4, scope: !10970)
!10979 = !DILocalVariable(name: "nearest", scope: !10980, file: !3, line: 3416, type: !10922)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 3415, column: 5)
!10981 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 3412, column: 30)
!10982 = !DILocation(line: 3416, column: 21, scope: !10980)
!10983 = !DILocalVariable(name: "dist", scope: !10980, file: !3, line: 3417, type: !467)
!10984 = !DILocation(line: 3417, column: 12, scope: !10980)
!10985 = !DILocation(line: 3419, column: 14, scope: !10980)
!10986 = !DILocation(line: 3419, column: 20, scope: !10980)
!10987 = !DILocation(line: 3420, column: 14, scope: !10980)
!10988 = !DILocation(line: 3420, column: 22, scope: !10980)
!10989 = !DILocation(line: 3422, column: 10, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 3422, column: 10)
!10991 = !DILocation(line: 3422, column: 16, scope: !10990)
!10992 = !DILocation(line: 3422, column: 27, scope: !10990)
!10993 = !DILocation(line: 3422, column: 10, scope: !10980)
!10994 = !DILocation(line: 3423, column: 42, scope: !10990)
!10995 = !DILocation(line: 3423, column: 7, scope: !10990)
!10996 = !DILocation(line: 3425, column: 42, scope: !10990)
!10997 = !DILocation(line: 3425, column: 7, scope: !10990)
!10998 = !DILocation(line: 3427, column: 19, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 3427, column: 10)
!11000 = !DILocation(line: 3427, column: 24, scope: !10999)
!11001 = !DILocation(line: 3427, column: 10, scope: !10980)
!11002 = !DILocation(line: 3428, column: 12, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 3427, column: 33)
!11004 = !DILocation(line: 3429, column: 7, scope: !11003)
!11005 = !DILocation(line: 3432, column: 44, scope: !10980)
!11006 = !DILocation(line: 3432, column: 6, scope: !10980)
!11007 = !DILocation(line: 3434, column: 40, scope: !10980)
!11008 = !DILocation(line: 3434, column: 46, scope: !10980)
!11009 = !DILocation(line: 3434, column: 69, scope: !10980)
!11010 = !DILocation(line: 3434, column: 87, scope: !10980)
!11011 = !DILocation(line: 3434, column: 6, scope: !10980)
!11012 = !DILocation(line: 3436, column: 22, scope: !10980)
!11013 = !DILocation(line: 3436, column: 34, scope: !10980)
!11014 = !DILocation(line: 3436, column: 26, scope: !10980)
!11015 = !DILocation(line: 3436, column: 13, scope: !10980)
!11016 = !DILocation(line: 3436, column: 11, scope: !10980)
!11017 = !DILocation(line: 3437, column: 10, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 3437, column: 10)
!11019 = !DILocation(line: 3437, column: 15, scope: !11018)
!11020 = !DILocation(line: 3437, column: 10, scope: !10980)
!11021 = !DILocation(line: 3438, column: 22, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 3437, column: 24)
!11023 = !DILocation(line: 3438, column: 26, scope: !11022)
!11024 = !DILocation(line: 3438, column: 38, scope: !11022)
!11025 = !DILocation(line: 3438, column: 30, scope: !11022)
!11026 = !DILocation(line: 3438, column: 43, scope: !11022)
!11027 = !DILocation(line: 3438, column: 50, scope: !11022)
!11028 = !DILocation(line: 3438, column: 56, scope: !11022)
!11029 = !DILocation(line: 3438, column: 48, scope: !11022)
!11030 = !DILocation(line: 3438, column: 64, scope: !11022)
!11031 = !DILocation(line: 3438, column: 62, scope: !11022)
!11032 = !DILocation(line: 3438, column: 7, scope: !11022)
!11033 = !DILocation(line: 3439, column: 6, scope: !11022)
!11034 = !DILocation(line: 3440, column: 45, scope: !10980)
!11035 = !DILocation(line: 3440, column: 6, scope: !10980)
!11036 = !DILocation(line: 3441, column: 6, scope: !10980)
!11037 = !DILocalVariable(name: "hit", scope: !11038, file: !3, line: 3445, type: !10944)
!11038 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 3444, column: 5)
!11039 = !DILocation(line: 3445, column: 20, scope: !11038)
!11040 = !DILocalVariable(name: "mat", scope: !11038, file: !3, line: 3447, type: !480)
!11041 = !DILocation(line: 3447, column: 12, scope: !11038)
!11042 = !DILocalVariable(name: "no", scope: !11038, file: !3, line: 3448, type: !469)
!11043 = !DILocation(line: 3448, column: 12, scope: !11038)
!11044 = !DILocation(line: 3451, column: 10, scope: !11038)
!11045 = !DILocation(line: 3451, column: 16, scope: !11038)
!11046 = !DILocation(line: 3452, column: 18, scope: !11038)
!11047 = !DILocation(line: 3452, column: 24, scope: !11038)
!11048 = !DILocation(line: 3452, column: 34, scope: !11038)
!11049 = !DILocation(line: 3452, column: 17, scope: !11038)
!11050 = !DILocation(line: 3452, column: 57, scope: !11038)
!11051 = !DILocation(line: 3452, column: 63, scope: !11038)
!11052 = !DILocation(line: 3452, column: 10, scope: !11038)
!11053 = !DILocation(line: 3452, column: 15, scope: !11038)
!11054 = !DILocation(line: 3454, column: 14, scope: !11038)
!11055 = !DILocation(line: 3454, column: 20, scope: !11038)
!11056 = !DILocation(line: 3454, column: 6, scope: !11038)
!11057 = !DILocation(line: 3456, column: 11, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 3454, column: 30)
!11059 = !DILocation(line: 3456, column: 17, scope: !11058)
!11060 = !DILocation(line: 3456, column: 26, scope: !11058)
!11061 = !DILocation(line: 3456, column: 8, scope: !11058)
!11062 = !DILocation(line: 3456, column: 37, scope: !11058)
!11063 = !DILocation(line: 3457, column: 8, scope: !11058)
!11064 = !DILocation(line: 3459, column: 11, scope: !11058)
!11065 = !DILocation(line: 3459, column: 17, scope: !11058)
!11066 = !DILocation(line: 3459, column: 26, scope: !11058)
!11067 = !DILocation(line: 3459, column: 8, scope: !11058)
!11068 = !DILocation(line: 3459, column: 37, scope: !11058)
!11069 = !DILocation(line: 3460, column: 8, scope: !11058)
!11070 = !DILocation(line: 3464, column: 14, scope: !11038)
!11071 = !DILocation(line: 3464, column: 6, scope: !11038)
!11072 = !DILocation(line: 3465, column: 38, scope: !11038)
!11073 = !DILocation(line: 3465, column: 43, scope: !11038)
!11074 = !DILocation(line: 3465, column: 47, scope: !11038)
!11075 = !DILocation(line: 3465, column: 52, scope: !11038)
!11076 = !DILocation(line: 3465, column: 59, scope: !11038)
!11077 = !DILocation(line: 3465, column: 88, scope: !11038)
!11078 = !DILocation(line: 3465, column: 94, scope: !11038)
!11079 = !DILocation(line: 3465, column: 6, scope: !11038)
!11080 = !DILocation(line: 3466, column: 16, scope: !11038)
!11081 = !DILocation(line: 3466, column: 6, scope: !11038)
!11082 = !DILocation(line: 3467, column: 21, scope: !11038)
!11083 = !DILocation(line: 3467, column: 26, scope: !11038)
!11084 = !DILocation(line: 3467, column: 6, scope: !11038)
!11085 = !DILocation(line: 3469, column: 23, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 3469, column: 10)
!11087 = !DILocation(line: 3469, column: 10, scope: !11086)
!11088 = !DILocation(line: 3469, column: 27, scope: !11086)
!11089 = !DILocation(line: 3469, column: 10, scope: !11038)
!11090 = !DILocation(line: 3470, column: 12, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 3469, column: 42)
!11092 = !DILocation(line: 3471, column: 7, scope: !11091)
!11093 = !DILocation(line: 3474, column: 41, scope: !11038)
!11094 = !DILocation(line: 3474, column: 49, scope: !11038)
!11095 = !DILocation(line: 3474, column: 55, scope: !11038)
!11096 = !DILocation(line: 3474, column: 6, scope: !11038)
!11097 = !DILocation(line: 3475, column: 19, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 3475, column: 10)
!11099 = !DILocation(line: 3475, column: 24, scope: !11098)
!11100 = !DILocation(line: 3475, column: 10, scope: !11038)
!11101 = !DILocation(line: 3476, column: 12, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 3475, column: 33)
!11103 = !DILocation(line: 3477, column: 7, scope: !11102)
!11104 = !DILocation(line: 3481, column: 43, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 3481, column: 10)
!11106 = !DILocation(line: 3481, column: 47, scope: !11105)
!11107 = !DILocation(line: 3481, column: 72, scope: !11105)
!11108 = !DILocation(line: 3482, column: 49, scope: !11105)
!11109 = !DILocation(line: 3482, column: 67, scope: !11105)
!11110 = !DILocation(line: 3481, column: 10, scope: !11105)
!11111 = !DILocation(line: 3482, column: 78, scope: !11105)
!11112 = !DILocation(line: 3481, column: 10, scope: !11038)
!11113 = !DILocation(line: 3484, column: 12, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 3483, column: 6)
!11115 = !DILocation(line: 3485, column: 7, scope: !11114)
!11116 = !DILocation(line: 3487, column: 17, scope: !11038)
!11117 = !DILocation(line: 3487, column: 25, scope: !11038)
!11118 = !DILocation(line: 3487, column: 21, scope: !11038)
!11119 = !DILocation(line: 3487, column: 6, scope: !11038)
!11120 = !DILocation(line: 3488, column: 6, scope: !11038)
!11121 = !DILocation(line: 3492, column: 4, scope: !10970)
!11122 = !DILocation(line: 3494, column: 4, scope: !10970)
!11123 = !DILocation(line: 3494, column: 12, scope: !10970)
!11124 = !DILocation(line: 3494, column: 20, scope: !10970)
!11125 = !DILocation(line: 3496, column: 8, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 3496, column: 8)
!11127 = !DILocation(line: 3496, column: 13, scope: !11126)
!11128 = !DILocation(line: 3496, column: 8, scope: !10970)
!11129 = !DILocation(line: 3498, column: 13, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 3496, column: 22)
!11131 = !DILocation(line: 3498, column: 5, scope: !11130)
!11132 = !DILocation(line: 3499, column: 4, scope: !11130)
!11133 = !DILocation(line: 3502, column: 14, scope: !10970)
!11134 = !DILocation(line: 3502, column: 19, scope: !10970)
!11135 = !DILocation(line: 3502, column: 27, scope: !10970)
!11136 = !DILocation(line: 3502, column: 4, scope: !10970)
!11137 = !DILocation(line: 3503, column: 15, scope: !10970)
!11138 = !DILocation(line: 3503, column: 19, scope: !10970)
!11139 = !DILocation(line: 3503, column: 30, scope: !10970)
!11140 = !DILocation(line: 3503, column: 4, scope: !10970)
!11141 = !DILocation(line: 3504, column: 3, scope: !10970)
!11142 = !DILocation(line: 3505, column: 2, scope: !10891)
!11143 = !DILocation(line: 3506, column: 1, scope: !10868)
!11144 = distinct !DISubprogram(name: "shrinkwrap_evaluate", scope: !3, file: !3, line: 3508, type: !4392, scopeLine: 3509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11145 = !DILocalVariable(name: "UNUSED_con", arg: 1, scope: !11144, file: !3, line: 3508, type: !2708)
!11146 = !DILocation(line: 3508, column: 46, scope: !11144)
!11147 = !DILocalVariable(name: "cob", arg: 2, scope: !11144, file: !3, line: 3508, type: !2733)
!11148 = !DILocation(line: 3508, column: 74, scope: !11144)
!11149 = !DILocalVariable(name: "targets", arg: 3, scope: !11144, file: !3, line: 3508, type: !1287)
!11150 = !DILocation(line: 3508, column: 89, scope: !11144)
!11151 = !DILocalVariable(name: "ct", scope: !11144, file: !3, line: 3510, type: !2244)
!11152 = !DILocation(line: 3510, column: 21, scope: !11144)
!11153 = !DILocation(line: 3510, column: 26, scope: !11144)
!11154 = !DILocation(line: 3510, column: 35, scope: !11144)
!11155 = !DILocation(line: 3513, column: 6, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 3513, column: 6)
!11157 = !DILocation(line: 3513, column: 6, scope: !11144)
!11158 = !DILocation(line: 3514, column: 14, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 3513, column: 29)
!11160 = !DILocation(line: 3514, column: 19, scope: !11159)
!11161 = !DILocation(line: 3514, column: 30, scope: !11159)
!11162 = !DILocation(line: 3514, column: 34, scope: !11159)
!11163 = !DILocation(line: 3514, column: 3, scope: !11159)
!11164 = !DILocation(line: 3515, column: 2, scope: !11159)
!11165 = !DILocation(line: 3516, column: 1, scope: !11144)
!11166 = distinct !DISubprogram(name: "damptrack_id_looper", scope: !3, file: !3, line: 3542, type: !4251, scopeLine: 3543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11167 = !DILocalVariable(name: "con", arg: 1, scope: !11166, file: !3, line: 3542, type: !2708)
!11168 = !DILocation(line: 3542, column: 46, scope: !11166)
!11169 = !DILocalVariable(name: "func", arg: 2, scope: !11166, file: !3, line: 3542, type: !2599)
!11170 = !DILocation(line: 3542, column: 68, scope: !11166)
!11171 = !DILocalVariable(name: "userdata", arg: 3, scope: !11166, file: !3, line: 3542, type: !431)
!11172 = !DILocation(line: 3542, column: 80, scope: !11166)
!11173 = !DILocalVariable(name: "data", scope: !11166, file: !3, line: 3544, type: !2509)
!11174 = !DILocation(line: 3544, column: 24, scope: !11166)
!11175 = !DILocation(line: 3544, column: 31, scope: !11166)
!11176 = !DILocation(line: 3544, column: 36, scope: !11166)
!11177 = !DILocation(line: 3547, column: 2, scope: !11166)
!11178 = !DILocation(line: 3547, column: 7, scope: !11166)
!11179 = !DILocation(line: 3547, column: 20, scope: !11166)
!11180 = !DILocation(line: 3547, column: 26, scope: !11166)
!11181 = !DILocation(line: 3547, column: 12, scope: !11166)
!11182 = !DILocation(line: 3547, column: 38, scope: !11166)
!11183 = !DILocation(line: 3548, column: 1, scope: !11166)
!11184 = distinct !DISubprogram(name: "damptrack_new_data", scope: !3, file: !3, line: 3535, type: !2610, scopeLine: 3536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11185 = !DILocalVariable(name: "cdata", arg: 1, scope: !11184, file: !3, line: 3535, type: !431)
!11186 = !DILocation(line: 3535, column: 38, scope: !11184)
!11187 = !DILocalVariable(name: "data", scope: !11184, file: !3, line: 3537, type: !2509)
!11188 = !DILocation(line: 3537, column: 24, scope: !11184)
!11189 = !DILocation(line: 3537, column: 55, scope: !11184)
!11190 = !DILocation(line: 3537, column: 31, scope: !11184)
!11191 = !DILocation(line: 3539, column: 2, scope: !11184)
!11192 = !DILocation(line: 3539, column: 8, scope: !11184)
!11193 = !DILocation(line: 3539, column: 18, scope: !11184)
!11194 = !DILocation(line: 3540, column: 1, scope: !11184)
!11195 = distinct !DISubprogram(name: "damptrack_get_tars", scope: !3, file: !3, line: 3550, type: !4285, scopeLine: 3551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11196 = !DILocalVariable(name: "con", arg: 1, scope: !11195, file: !3, line: 3550, type: !2708)
!11197 = !DILocation(line: 3550, column: 44, scope: !11195)
!11198 = !DILocalVariable(name: "list", arg: 2, scope: !11195, file: !3, line: 3550, type: !1287)
!11199 = !DILocation(line: 3550, column: 59, scope: !11195)
!11200 = !DILocation(line: 3552, column: 6, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 3552, column: 6)
!11202 = !DILocation(line: 3552, column: 10, scope: !11201)
!11203 = !DILocation(line: 3552, column: 13, scope: !11201)
!11204 = !DILocation(line: 3552, column: 6, scope: !11195)
!11205 = !DILocalVariable(name: "data", scope: !11206, file: !3, line: 3553, type: !2509)
!11206 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 3552, column: 19)
!11207 = !DILocation(line: 3553, column: 25, scope: !11206)
!11208 = !DILocation(line: 3553, column: 32, scope: !11206)
!11209 = !DILocation(line: 3553, column: 37, scope: !11206)
!11210 = !DILocalVariable(name: "ct", scope: !11206, file: !3, line: 3554, type: !2244)
!11211 = !DILocation(line: 3554, column: 22, scope: !11206)
!11212 = !DILocation(line: 3557, column: 3, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 3557, column: 3)
!11214 = !DILocation(line: 3557, column: 3, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 3557, column: 3)
!11216 = !DILocation(line: 3557, column: 3, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11218, file: !3, line: 3557, column: 3)
!11218 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 3557, column: 3)
!11219 = !DILocation(line: 3557, column: 3, scope: !11218)
!11220 = !DILocalVariable(name: "pchan", scope: !11221, file: !3, line: 3557, type: !399)
!11221 = distinct !DILexicalBlock(scope: !11217, file: !3, line: 3557, column: 3)
!11222 = !DILocation(line: 3557, column: 3, scope: !11221)
!11223 = !DILocation(line: 3557, column: 3, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11217, file: !3, line: 3557, column: 3)
!11225 = !DILocation(line: 3557, column: 3, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11224, file: !3, line: 3557, column: 3)
!11227 = !DILocation(line: 3557, column: 3, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11224, file: !3, line: 3557, column: 3)
!11229 = !DILocation(line: 3559, column: 3, scope: !11206)
!11230 = !DILocation(line: 3562, column: 2, scope: !11195)
!11231 = !DILocation(line: 3563, column: 1, scope: !11195)
!11232 = distinct !DISubprogram(name: "damptrack_flush_tars", scope: !3, file: !3, line: 3565, type: !4324, scopeLine: 3566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11233 = !DILocalVariable(name: "con", arg: 1, scope: !11232, file: !3, line: 3565, type: !2708)
!11234 = !DILocation(line: 3565, column: 47, scope: !11232)
!11235 = !DILocalVariable(name: "list", arg: 2, scope: !11232, file: !3, line: 3565, type: !1287)
!11236 = !DILocation(line: 3565, column: 62, scope: !11232)
!11237 = !DILocalVariable(name: "no_copy", arg: 3, scope: !11232, file: !3, line: 3565, type: !1111)
!11238 = !DILocation(line: 3565, column: 73, scope: !11232)
!11239 = !DILocation(line: 3567, column: 6, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 3567, column: 6)
!11241 = !DILocation(line: 3567, column: 10, scope: !11240)
!11242 = !DILocation(line: 3567, column: 13, scope: !11240)
!11243 = !DILocation(line: 3567, column: 6, scope: !11232)
!11244 = !DILocalVariable(name: "data", scope: !11245, file: !3, line: 3568, type: !2509)
!11245 = distinct !DILexicalBlock(scope: !11240, file: !3, line: 3567, column: 19)
!11246 = !DILocation(line: 3568, column: 25, scope: !11245)
!11247 = !DILocation(line: 3568, column: 32, scope: !11245)
!11248 = !DILocation(line: 3568, column: 37, scope: !11245)
!11249 = !DILocalVariable(name: "ct", scope: !11245, file: !3, line: 3569, type: !2244)
!11250 = !DILocation(line: 3569, column: 22, scope: !11245)
!11251 = !DILocation(line: 3569, column: 27, scope: !11245)
!11252 = !DILocation(line: 3569, column: 33, scope: !11245)
!11253 = !DILocation(line: 3572, column: 3, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11255, file: !3, line: 3572, column: 3)
!11255 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 3572, column: 3)
!11256 = !DILocation(line: 3572, column: 3, scope: !11255)
!11257 = !DILocalVariable(name: "ctn", scope: !11258, file: !3, line: 3572, type: !2244)
!11258 = distinct !DILexicalBlock(scope: !11254, file: !3, line: 3572, column: 3)
!11259 = !DILocation(line: 3572, column: 3, scope: !11258)
!11260 = !DILocation(line: 3572, column: 3, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 3572, column: 3)
!11262 = !DILocation(line: 3572, column: 3, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 3572, column: 3)
!11264 = !DILocation(line: 3573, column: 2, scope: !11245)
!11265 = !DILocation(line: 3574, column: 1, scope: !11232)
!11266 = distinct !DISubprogram(name: "damptrack_evaluate", scope: !3, file: !3, line: 3582, type: !4392, scopeLine: 3583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11267 = !DILocalVariable(name: "con", arg: 1, scope: !11266, file: !3, line: 3582, type: !2708)
!11268 = !DILocation(line: 3582, column: 45, scope: !11266)
!11269 = !DILocalVariable(name: "cob", arg: 2, scope: !11266, file: !3, line: 3582, type: !2733)
!11270 = !DILocation(line: 3582, column: 65, scope: !11266)
!11271 = !DILocalVariable(name: "targets", arg: 3, scope: !11266, file: !3, line: 3582, type: !1287)
!11272 = !DILocation(line: 3582, column: 80, scope: !11266)
!11273 = !DILocalVariable(name: "data", scope: !11266, file: !3, line: 3584, type: !2509)
!11274 = !DILocation(line: 3584, column: 24, scope: !11266)
!11275 = !DILocation(line: 3584, column: 31, scope: !11266)
!11276 = !DILocation(line: 3584, column: 36, scope: !11266)
!11277 = !DILocalVariable(name: "ct", scope: !11266, file: !3, line: 3585, type: !2244)
!11278 = !DILocation(line: 3585, column: 21, scope: !11266)
!11279 = !DILocation(line: 3585, column: 26, scope: !11266)
!11280 = !DILocation(line: 3585, column: 35, scope: !11266)
!11281 = !DILocation(line: 3587, column: 6, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 3587, column: 6)
!11283 = !DILocation(line: 3587, column: 6, scope: !11266)
!11284 = !DILocalVariable(name: "obvec", scope: !11285, file: !3, line: 3588, type: !469)
!11285 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 3587, column: 29)
!11286 = !DILocation(line: 3588, column: 9, scope: !11285)
!11287 = !DILocalVariable(name: "tarvec", scope: !11285, file: !3, line: 3588, type: !469)
!11288 = !DILocation(line: 3588, column: 19, scope: !11285)
!11289 = !DILocalVariable(name: "obloc", scope: !11285, file: !3, line: 3588, type: !469)
!11290 = !DILocation(line: 3588, column: 30, scope: !11285)
!11291 = !DILocalVariable(name: "raxis", scope: !11285, file: !3, line: 3589, type: !469)
!11292 = !DILocation(line: 3589, column: 9, scope: !11285)
!11293 = !DILocalVariable(name: "rangle", scope: !11285, file: !3, line: 3589, type: !467)
!11294 = !DILocation(line: 3589, column: 19, scope: !11285)
!11295 = !DILocalVariable(name: "rmat", scope: !11285, file: !3, line: 3590, type: !474)
!11296 = !DILocation(line: 3590, column: 9, scope: !11285)
!11297 = !DILocalVariable(name: "tmat", scope: !11285, file: !3, line: 3590, type: !480)
!11298 = !DILocation(line: 3590, column: 21, scope: !11285)
!11299 = !DILocation(line: 3597, column: 14, scope: !11285)
!11300 = !DILocation(line: 3597, column: 36, scope: !11285)
!11301 = !DILocation(line: 3597, column: 42, scope: !11285)
!11302 = !DILocation(line: 3597, column: 21, scope: !11285)
!11303 = !DILocation(line: 3597, column: 3, scope: !11285)
!11304 = !DILocation(line: 3598, column: 18, scope: !11285)
!11305 = !DILocation(line: 3598, column: 23, scope: !11285)
!11306 = !DILocation(line: 3598, column: 31, scope: !11285)
!11307 = !DILocation(line: 3598, column: 3, scope: !11285)
!11308 = !DILocation(line: 3600, column: 20, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11285, file: !3, line: 3600, column: 7)
!11310 = !DILocation(line: 3600, column: 7, scope: !11309)
!11311 = !DILocation(line: 3600, column: 27, scope: !11309)
!11312 = !DILocation(line: 3600, column: 7, scope: !11285)
!11313 = !DILocation(line: 3602, column: 15, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 3600, column: 36)
!11315 = !DILocation(line: 3602, column: 37, scope: !11314)
!11316 = !DILocation(line: 3602, column: 43, scope: !11314)
!11317 = !DILocation(line: 3602, column: 22, scope: !11314)
!11318 = !DILocation(line: 3602, column: 4, scope: !11314)
!11319 = !DILocation(line: 3603, column: 3, scope: !11314)
!11320 = !DILocation(line: 3606, column: 14, scope: !11285)
!11321 = !DILocation(line: 3606, column: 21, scope: !11285)
!11322 = !DILocation(line: 3606, column: 26, scope: !11285)
!11323 = !DILocation(line: 3606, column: 3, scope: !11285)
!11324 = !DILocation(line: 3607, column: 15, scope: !11285)
!11325 = !DILocation(line: 3607, column: 23, scope: !11285)
!11326 = !DILocation(line: 3607, column: 27, scope: !11285)
!11327 = !DILocation(line: 3607, column: 38, scope: !11285)
!11328 = !DILocation(line: 3607, column: 3, scope: !11285)
!11329 = !DILocation(line: 3609, column: 20, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11285, file: !3, line: 3609, column: 7)
!11331 = !DILocation(line: 3609, column: 7, scope: !11330)
!11332 = !DILocation(line: 3609, column: 28, scope: !11330)
!11333 = !DILocation(line: 3609, column: 7, scope: !11285)
!11334 = !DILocation(line: 3612, column: 15, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 3609, column: 37)
!11336 = !DILocation(line: 3612, column: 23, scope: !11335)
!11337 = !DILocation(line: 3612, column: 4, scope: !11335)
!11338 = !DILocation(line: 3614, column: 3, scope: !11335)
!11339 = !DILocation(line: 3624, column: 17, scope: !11285)
!11340 = !DILocation(line: 3624, column: 24, scope: !11285)
!11341 = !DILocation(line: 3624, column: 31, scope: !11285)
!11342 = !DILocation(line: 3624, column: 3, scope: !11285)
!11343 = !DILocation(line: 3626, column: 21, scope: !11285)
!11344 = !DILocation(line: 3626, column: 28, scope: !11285)
!11345 = !DILocation(line: 3626, column: 12, scope: !11285)
!11346 = !DILocation(line: 3626, column: 10, scope: !11285)
!11347 = !DILocation(line: 3627, column: 45, scope: !11285)
!11348 = !DILocation(line: 3627, column: 32, scope: !11285)
!11349 = !DILocation(line: 3627, column: 18, scope: !11285)
!11350 = !DILocation(line: 3627, column: 12, scope: !11285)
!11351 = !DILocation(line: 3627, column: 10, scope: !11285)
!11352 = !DILocation(line: 3632, column: 22, scope: !11285)
!11353 = !DILocation(line: 3632, column: 28, scope: !11285)
!11354 = !DILocation(line: 3632, column: 35, scope: !11285)
!11355 = !DILocation(line: 3632, column: 3, scope: !11285)
!11356 = !DILocation(line: 3637, column: 11, scope: !11285)
!11357 = !DILocation(line: 3637, column: 3, scope: !11285)
!11358 = !DILocation(line: 3638, column: 15, scope: !11285)
!11359 = !DILocation(line: 3638, column: 21, scope: !11285)
!11360 = !DILocation(line: 3638, column: 27, scope: !11285)
!11361 = !DILocation(line: 3638, column: 32, scope: !11285)
!11362 = !DILocation(line: 3638, column: 3, scope: !11285)
!11363 = !DILocation(line: 3640, column: 14, scope: !11285)
!11364 = !DILocation(line: 3640, column: 19, scope: !11285)
!11365 = !DILocation(line: 3640, column: 27, scope: !11285)
!11366 = !DILocation(line: 3640, column: 3, scope: !11285)
!11367 = !DILocation(line: 3641, column: 14, scope: !11285)
!11368 = !DILocation(line: 3641, column: 19, scope: !11285)
!11369 = !DILocation(line: 3641, column: 30, scope: !11285)
!11370 = !DILocation(line: 3641, column: 3, scope: !11285)
!11371 = !DILocation(line: 3642, column: 2, scope: !11285)
!11372 = !DILocation(line: 3643, column: 1, scope: !11266)
!11373 = distinct !DISubprogram(name: "splineik_free", scope: !3, file: !3, line: 3662, type: !3246, scopeLine: 3663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11374 = !DILocalVariable(name: "con", arg: 1, scope: !11373, file: !3, line: 3662, type: !2708)
!11375 = !DILocation(line: 3662, column: 40, scope: !11373)
!11376 = !DILocalVariable(name: "data", scope: !11373, file: !3, line: 3664, type: !2517)
!11377 = !DILocation(line: 3664, column: 23, scope: !11373)
!11378 = !DILocation(line: 3664, column: 30, scope: !11373)
!11379 = !DILocation(line: 3664, column: 35, scope: !11373)
!11380 = !DILocation(line: 3667, column: 6, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 3667, column: 6)
!11382 = !DILocation(line: 3667, column: 12, scope: !11381)
!11383 = !DILocation(line: 3667, column: 6, scope: !11373)
!11384 = !DILocation(line: 3668, column: 3, scope: !11381)
!11385 = !DILocation(line: 3668, column: 13, scope: !11381)
!11386 = !DILocation(line: 3668, column: 19, scope: !11381)
!11387 = !DILocation(line: 3669, column: 1, scope: !11373)
!11388 = distinct !DISubprogram(name: "splineik_id_looper", scope: !3, file: !3, line: 3687, type: !4251, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11389 = !DILocalVariable(name: "con", arg: 1, scope: !11388, file: !3, line: 3687, type: !2708)
!11390 = !DILocation(line: 3687, column: 45, scope: !11388)
!11391 = !DILocalVariable(name: "func", arg: 2, scope: !11388, file: !3, line: 3687, type: !2599)
!11392 = !DILocation(line: 3687, column: 67, scope: !11388)
!11393 = !DILocalVariable(name: "userdata", arg: 3, scope: !11388, file: !3, line: 3687, type: !431)
!11394 = !DILocation(line: 3687, column: 79, scope: !11388)
!11395 = !DILocalVariable(name: "data", scope: !11388, file: !3, line: 3689, type: !2517)
!11396 = !DILocation(line: 3689, column: 23, scope: !11388)
!11397 = !DILocation(line: 3689, column: 30, scope: !11388)
!11398 = !DILocation(line: 3689, column: 35, scope: !11388)
!11399 = !DILocation(line: 3692, column: 2, scope: !11388)
!11400 = !DILocation(line: 3692, column: 7, scope: !11388)
!11401 = !DILocation(line: 3692, column: 20, scope: !11388)
!11402 = !DILocation(line: 3692, column: 26, scope: !11388)
!11403 = !DILocation(line: 3692, column: 12, scope: !11388)
!11404 = !DILocation(line: 3692, column: 38, scope: !11388)
!11405 = !DILocation(line: 3693, column: 1, scope: !11388)
!11406 = distinct !DISubprogram(name: "splineik_copy", scope: !3, file: !3, line: 3671, type: !7805, scopeLine: 3672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11407 = !DILocalVariable(name: "con", arg: 1, scope: !11406, file: !3, line: 3671, type: !2708)
!11408 = !DILocation(line: 3671, column: 40, scope: !11406)
!11409 = !DILocalVariable(name: "srccon", arg: 2, scope: !11406, file: !3, line: 3671, type: !2708)
!11410 = !DILocation(line: 3671, column: 58, scope: !11406)
!11411 = !DILocalVariable(name: "src", scope: !11406, file: !3, line: 3673, type: !2517)
!11412 = !DILocation(line: 3673, column: 23, scope: !11406)
!11413 = !DILocation(line: 3673, column: 29, scope: !11406)
!11414 = !DILocation(line: 3673, column: 37, scope: !11406)
!11415 = !DILocalVariable(name: "dst", scope: !11406, file: !3, line: 3674, type: !2517)
!11416 = !DILocation(line: 3674, column: 23, scope: !11406)
!11417 = !DILocation(line: 3674, column: 29, scope: !11406)
!11418 = !DILocation(line: 3674, column: 34, scope: !11406)
!11419 = !DILocation(line: 3677, column: 16, scope: !11406)
!11420 = !DILocation(line: 3677, column: 30, scope: !11406)
!11421 = !DILocation(line: 3677, column: 35, scope: !11406)
!11422 = !DILocation(line: 3677, column: 2, scope: !11406)
!11423 = !DILocation(line: 3677, column: 7, scope: !11406)
!11424 = !DILocation(line: 3677, column: 14, scope: !11406)
!11425 = !DILocation(line: 3678, column: 1, scope: !11406)
!11426 = distinct !DISubprogram(name: "splineik_new_data", scope: !3, file: !3, line: 3680, type: !2610, scopeLine: 3681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11427 = !DILocalVariable(name: "cdata", arg: 1, scope: !11426, file: !3, line: 3680, type: !431)
!11428 = !DILocation(line: 3680, column: 37, scope: !11426)
!11429 = !DILocalVariable(name: "data", scope: !11426, file: !3, line: 3682, type: !2517)
!11430 = !DILocation(line: 3682, column: 23, scope: !11426)
!11431 = !DILocation(line: 3682, column: 53, scope: !11426)
!11432 = !DILocation(line: 3682, column: 30, scope: !11426)
!11433 = !DILocation(line: 3684, column: 2, scope: !11426)
!11434 = !DILocation(line: 3684, column: 8, scope: !11426)
!11435 = !DILocation(line: 3684, column: 17, scope: !11426)
!11436 = !DILocation(line: 3685, column: 1, scope: !11426)
!11437 = distinct !DISubprogram(name: "splineik_get_tars", scope: !3, file: !3, line: 3695, type: !4285, scopeLine: 3696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11438 = !DILocalVariable(name: "con", arg: 1, scope: !11437, file: !3, line: 3695, type: !2708)
!11439 = !DILocation(line: 3695, column: 43, scope: !11437)
!11440 = !DILocalVariable(name: "list", arg: 2, scope: !11437, file: !3, line: 3695, type: !1287)
!11441 = !DILocation(line: 3695, column: 58, scope: !11437)
!11442 = !DILocation(line: 3697, column: 6, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11437, file: !3, line: 3697, column: 6)
!11444 = !DILocation(line: 3697, column: 10, scope: !11443)
!11445 = !DILocation(line: 3697, column: 13, scope: !11443)
!11446 = !DILocation(line: 3697, column: 6, scope: !11437)
!11447 = !DILocalVariable(name: "data", scope: !11448, file: !3, line: 3698, type: !2517)
!11448 = distinct !DILexicalBlock(scope: !11443, file: !3, line: 3697, column: 19)
!11449 = !DILocation(line: 3698, column: 24, scope: !11448)
!11450 = !DILocation(line: 3698, column: 31, scope: !11448)
!11451 = !DILocation(line: 3698, column: 36, scope: !11448)
!11452 = !DILocalVariable(name: "ct", scope: !11448, file: !3, line: 3699, type: !2244)
!11453 = !DILocation(line: 3699, column: 22, scope: !11448)
!11454 = !DILocation(line: 3702, column: 3, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 3702, column: 3)
!11456 = !DILocation(line: 3702, column: 3, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11455, file: !3, line: 3702, column: 3)
!11458 = !DILocation(line: 3704, column: 3, scope: !11448)
!11459 = !DILocation(line: 3707, column: 2, scope: !11437)
!11460 = !DILocation(line: 3708, column: 1, scope: !11437)
!11461 = distinct !DISubprogram(name: "splineik_flush_tars", scope: !3, file: !3, line: 3710, type: !4324, scopeLine: 3711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11462 = !DILocalVariable(name: "con", arg: 1, scope: !11461, file: !3, line: 3710, type: !2708)
!11463 = !DILocation(line: 3710, column: 46, scope: !11461)
!11464 = !DILocalVariable(name: "list", arg: 2, scope: !11461, file: !3, line: 3710, type: !1287)
!11465 = !DILocation(line: 3710, column: 61, scope: !11461)
!11466 = !DILocalVariable(name: "no_copy", arg: 3, scope: !11461, file: !3, line: 3710, type: !1111)
!11467 = !DILocation(line: 3710, column: 72, scope: !11461)
!11468 = !DILocation(line: 3712, column: 6, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 3712, column: 6)
!11470 = !DILocation(line: 3712, column: 10, scope: !11469)
!11471 = !DILocation(line: 3712, column: 13, scope: !11469)
!11472 = !DILocation(line: 3712, column: 6, scope: !11461)
!11473 = !DILocalVariable(name: "data", scope: !11474, file: !3, line: 3713, type: !2517)
!11474 = distinct !DILexicalBlock(scope: !11469, file: !3, line: 3712, column: 19)
!11475 = !DILocation(line: 3713, column: 24, scope: !11474)
!11476 = !DILocation(line: 3713, column: 31, scope: !11474)
!11477 = !DILocation(line: 3713, column: 36, scope: !11474)
!11478 = !DILocalVariable(name: "ct", scope: !11474, file: !3, line: 3714, type: !2244)
!11479 = !DILocation(line: 3714, column: 22, scope: !11474)
!11480 = !DILocation(line: 3714, column: 27, scope: !11474)
!11481 = !DILocation(line: 3714, column: 33, scope: !11474)
!11482 = !DILocation(line: 3717, column: 3, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 3717, column: 3)
!11484 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 3717, column: 3)
!11485 = !DILocation(line: 3717, column: 3, scope: !11484)
!11486 = !DILocalVariable(name: "ctn", scope: !11487, file: !3, line: 3717, type: !2244)
!11487 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 3717, column: 3)
!11488 = !DILocation(line: 3717, column: 3, scope: !11487)
!11489 = !DILocation(line: 3717, column: 3, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 3717, column: 3)
!11491 = !DILocation(line: 3717, column: 3, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11490, file: !3, line: 3717, column: 3)
!11493 = !DILocation(line: 3718, column: 2, scope: !11474)
!11494 = !DILocation(line: 3719, column: 1, scope: !11461)
!11495 = distinct !DISubprogram(name: "splineik_get_tarmat", scope: !3, file: !3, line: 3721, type: !4360, scopeLine: 3722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11496 = !DILocalVariable(name: "UNUSED_con", arg: 1, scope: !11495, file: !3, line: 3721, type: !2708)
!11497 = !DILocation(line: 3721, column: 46, scope: !11495)
!11498 = !DILocalVariable(name: "cob", arg: 2, scope: !11495, file: !3, line: 3721, type: !2733)
!11499 = !DILocation(line: 3721, column: 74, scope: !11495)
!11500 = !DILocalVariable(name: "ct", arg: 3, scope: !11495, file: !3, line: 3721, type: !2244)
!11501 = !DILocation(line: 3721, column: 98, scope: !11495)
!11502 = !DILocalVariable(name: "UNUSED_ctime", arg: 4, scope: !11495, file: !3, line: 3721, type: !467)
!11503 = !DILocation(line: 3721, column: 108, scope: !11495)
!11504 = !DILocation(line: 3724, column: 6, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11495, file: !3, line: 3724, column: 6)
!11506 = !DILocation(line: 3724, column: 6, scope: !11495)
!11507 = !DILocation(line: 3725, column: 7, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 3725, column: 7)
!11509 = distinct !DILexicalBlock(scope: !11505, file: !3, line: 3724, column: 29)
!11510 = !DILocation(line: 3725, column: 11, scope: !11508)
!11511 = !DILocation(line: 3725, column: 16, scope: !11508)
!11512 = !DILocation(line: 3725, column: 28, scope: !11508)
!11513 = !DILocation(line: 3725, column: 7, scope: !11509)
!11514 = !DILocation(line: 3726, column: 33, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 3725, column: 37)
!11516 = !DILocation(line: 3726, column: 38, scope: !11515)
!11517 = !DILocation(line: 3726, column: 45, scope: !11515)
!11518 = !DILocation(line: 3726, column: 49, scope: !11515)
!11519 = !DILocation(line: 3726, column: 4, scope: !11515)
!11520 = !DILocation(line: 3727, column: 3, scope: !11515)
!11521 = !DILocation(line: 3728, column: 2, scope: !11509)
!11522 = !DILocation(line: 3734, column: 6, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11495, file: !3, line: 3734, column: 6)
!11524 = !DILocation(line: 3734, column: 6, scope: !11495)
!11525 = !DILocation(line: 3735, column: 11, scope: !11523)
!11526 = !DILocation(line: 3735, column: 15, scope: !11523)
!11527 = !DILocation(line: 3735, column: 3, scope: !11523)
!11528 = !DILocation(line: 3736, column: 1, scope: !11495)
!11529 = distinct !DISubprogram(name: "translike_id_looper", scope: !3, file: !3, line: 1765, type: !4251, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11530 = !DILocalVariable(name: "con", arg: 1, scope: !11529, file: !3, line: 1765, type: !2708)
!11531 = !DILocation(line: 1765, column: 46, scope: !11529)
!11532 = !DILocalVariable(name: "func", arg: 2, scope: !11529, file: !3, line: 1765, type: !2599)
!11533 = !DILocation(line: 1765, column: 68, scope: !11529)
!11534 = !DILocalVariable(name: "userdata", arg: 3, scope: !11529, file: !3, line: 1765, type: !431)
!11535 = !DILocation(line: 1765, column: 80, scope: !11529)
!11536 = !DILocalVariable(name: "data", scope: !11529, file: !3, line: 1767, type: !11537)
!11537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11538, size: 64)
!11538 = !DIDerivedType(tag: DW_TAG_typedef, name: "bTransLikeConstraint", file: !44, line: 228, baseType: !11539)
!11539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bTransLikeConstraint", file: !44, line: 225, size: 576, elements: !11540)
!11540 = !{!11541, !11542}
!11541 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !11539, file: !44, line: 226, baseType: !521, size: 64)
!11542 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !11539, file: !44, line: 227, baseType: !422, size: 512, offset: 64)
!11543 = !DILocation(line: 1767, column: 24, scope: !11529)
!11544 = !DILocation(line: 1767, column: 31, scope: !11529)
!11545 = !DILocation(line: 1767, column: 36, scope: !11529)
!11546 = !DILocation(line: 1770, column: 2, scope: !11529)
!11547 = !DILocation(line: 1770, column: 7, scope: !11529)
!11548 = !DILocation(line: 1770, column: 20, scope: !11529)
!11549 = !DILocation(line: 1770, column: 26, scope: !11529)
!11550 = !DILocation(line: 1770, column: 12, scope: !11529)
!11551 = !DILocation(line: 1770, column: 38, scope: !11529)
!11552 = !DILocation(line: 1771, column: 1, scope: !11529)
!11553 = distinct !DISubprogram(name: "translike_get_tars", scope: !3, file: !3, line: 1773, type: !4285, scopeLine: 1774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11554 = !DILocalVariable(name: "con", arg: 1, scope: !11553, file: !3, line: 1773, type: !2708)
!11555 = !DILocation(line: 1773, column: 44, scope: !11553)
!11556 = !DILocalVariable(name: "list", arg: 2, scope: !11553, file: !3, line: 1773, type: !1287)
!11557 = !DILocation(line: 1773, column: 59, scope: !11553)
!11558 = !DILocation(line: 1775, column: 6, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 1775, column: 6)
!11560 = !DILocation(line: 1775, column: 10, scope: !11559)
!11561 = !DILocation(line: 1775, column: 13, scope: !11559)
!11562 = !DILocation(line: 1775, column: 6, scope: !11553)
!11563 = !DILocalVariable(name: "data", scope: !11564, file: !3, line: 1776, type: !11537)
!11564 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 1775, column: 19)
!11565 = !DILocation(line: 1776, column: 25, scope: !11564)
!11566 = !DILocation(line: 1776, column: 32, scope: !11564)
!11567 = !DILocation(line: 1776, column: 37, scope: !11564)
!11568 = !DILocalVariable(name: "ct", scope: !11564, file: !3, line: 1777, type: !2244)
!11569 = !DILocation(line: 1777, column: 22, scope: !11564)
!11570 = !DILocation(line: 1780, column: 3, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11564, file: !3, line: 1780, column: 3)
!11572 = !DILocation(line: 1780, column: 3, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11571, file: !3, line: 1780, column: 3)
!11574 = !DILocation(line: 1780, column: 3, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11576, file: !3, line: 1780, column: 3)
!11576 = distinct !DILexicalBlock(scope: !11573, file: !3, line: 1780, column: 3)
!11577 = !DILocation(line: 1780, column: 3, scope: !11576)
!11578 = !DILocalVariable(name: "pchan", scope: !11579, file: !3, line: 1780, type: !399)
!11579 = distinct !DILexicalBlock(scope: !11575, file: !3, line: 1780, column: 3)
!11580 = !DILocation(line: 1780, column: 3, scope: !11579)
!11581 = !DILocation(line: 1780, column: 3, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11575, file: !3, line: 1780, column: 3)
!11583 = !DILocation(line: 1780, column: 3, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 1780, column: 3)
!11585 = !DILocation(line: 1780, column: 3, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 1780, column: 3)
!11587 = !DILocation(line: 1782, column: 3, scope: !11564)
!11588 = !DILocation(line: 1785, column: 2, scope: !11553)
!11589 = !DILocation(line: 1786, column: 1, scope: !11553)
!11590 = distinct !DISubprogram(name: "translike_flush_tars", scope: !3, file: !3, line: 1788, type: !4324, scopeLine: 1789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11591 = !DILocalVariable(name: "con", arg: 1, scope: !11590, file: !3, line: 1788, type: !2708)
!11592 = !DILocation(line: 1788, column: 47, scope: !11590)
!11593 = !DILocalVariable(name: "list", arg: 2, scope: !11590, file: !3, line: 1788, type: !1287)
!11594 = !DILocation(line: 1788, column: 62, scope: !11590)
!11595 = !DILocalVariable(name: "no_copy", arg: 3, scope: !11590, file: !3, line: 1788, type: !1111)
!11596 = !DILocation(line: 1788, column: 73, scope: !11590)
!11597 = !DILocation(line: 1790, column: 6, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 1790, column: 6)
!11599 = !DILocation(line: 1790, column: 10, scope: !11598)
!11600 = !DILocation(line: 1790, column: 13, scope: !11598)
!11601 = !DILocation(line: 1790, column: 6, scope: !11590)
!11602 = !DILocalVariable(name: "data", scope: !11603, file: !3, line: 1791, type: !11537)
!11603 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 1790, column: 19)
!11604 = !DILocation(line: 1791, column: 25, scope: !11603)
!11605 = !DILocation(line: 1791, column: 32, scope: !11603)
!11606 = !DILocation(line: 1791, column: 37, scope: !11603)
!11607 = !DILocalVariable(name: "ct", scope: !11603, file: !3, line: 1792, type: !2244)
!11608 = !DILocation(line: 1792, column: 22, scope: !11603)
!11609 = !DILocation(line: 1792, column: 27, scope: !11603)
!11610 = !DILocation(line: 1792, column: 33, scope: !11603)
!11611 = !DILocation(line: 1795, column: 3, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11613, file: !3, line: 1795, column: 3)
!11613 = distinct !DILexicalBlock(scope: !11603, file: !3, line: 1795, column: 3)
!11614 = !DILocation(line: 1795, column: 3, scope: !11613)
!11615 = !DILocalVariable(name: "ctn", scope: !11616, file: !3, line: 1795, type: !2244)
!11616 = distinct !DILexicalBlock(scope: !11612, file: !3, line: 1795, column: 3)
!11617 = !DILocation(line: 1795, column: 3, scope: !11616)
!11618 = !DILocation(line: 1795, column: 3, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 1795, column: 3)
!11620 = !DILocation(line: 1795, column: 3, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11619, file: !3, line: 1795, column: 3)
!11622 = !DILocation(line: 1796, column: 2, scope: !11603)
!11623 = !DILocation(line: 1797, column: 1, scope: !11590)
!11624 = distinct !DISubprogram(name: "translike_evaluate", scope: !3, file: !3, line: 1799, type: !4392, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11625 = !DILocalVariable(name: "UNUSED_con", arg: 1, scope: !11624, file: !3, line: 1799, type: !2708)
!11626 = !DILocation(line: 1799, column: 45, scope: !11624)
!11627 = !DILocalVariable(name: "cob", arg: 2, scope: !11624, file: !3, line: 1799, type: !2733)
!11628 = !DILocation(line: 1799, column: 73, scope: !11624)
!11629 = !DILocalVariable(name: "targets", arg: 3, scope: !11624, file: !3, line: 1799, type: !1287)
!11630 = !DILocation(line: 1799, column: 88, scope: !11624)
!11631 = !DILocalVariable(name: "ct", scope: !11624, file: !3, line: 1801, type: !2244)
!11632 = !DILocation(line: 1801, column: 21, scope: !11624)
!11633 = !DILocation(line: 1801, column: 26, scope: !11624)
!11634 = !DILocation(line: 1801, column: 35, scope: !11624)
!11635 = !DILocation(line: 1803, column: 6, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 1803, column: 6)
!11637 = !DILocation(line: 1803, column: 6, scope: !11624)
!11638 = !DILocation(line: 1805, column: 14, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11636, file: !3, line: 1803, column: 29)
!11640 = !DILocation(line: 1805, column: 19, scope: !11639)
!11641 = !DILocation(line: 1805, column: 27, scope: !11639)
!11642 = !DILocation(line: 1805, column: 31, scope: !11639)
!11643 = !DILocation(line: 1805, column: 3, scope: !11639)
!11644 = !DILocation(line: 1806, column: 2, scope: !11639)
!11645 = !DILocation(line: 1807, column: 1, scope: !11624)
!11646 = distinct !DISubprogram(name: "samevolume_new_data", scope: !3, file: !3, line: 1826, type: !2610, scopeLine: 1827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11647 = !DILocalVariable(name: "cdata", arg: 1, scope: !11646, file: !3, line: 1826, type: !431)
!11648 = !DILocation(line: 1826, column: 39, scope: !11646)
!11649 = !DILocalVariable(name: "data", scope: !11646, file: !3, line: 1828, type: !2527)
!11650 = !DILocation(line: 1828, column: 25, scope: !11646)
!11651 = !DILocation(line: 1828, column: 57, scope: !11646)
!11652 = !DILocation(line: 1828, column: 32, scope: !11646)
!11653 = !DILocation(line: 1830, column: 2, scope: !11646)
!11654 = !DILocation(line: 1830, column: 8, scope: !11646)
!11655 = !DILocation(line: 1830, column: 13, scope: !11646)
!11656 = !DILocation(line: 1831, column: 2, scope: !11646)
!11657 = !DILocation(line: 1831, column: 8, scope: !11646)
!11658 = !DILocation(line: 1831, column: 15, scope: !11646)
!11659 = !DILocation(line: 1832, column: 1, scope: !11646)
!11660 = distinct !DISubprogram(name: "samevolume_evaluate", scope: !3, file: !3, line: 1834, type: !4392, scopeLine: 1835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11661 = !DILocalVariable(name: "con", arg: 1, scope: !11660, file: !3, line: 1834, type: !2708)
!11662 = !DILocation(line: 1834, column: 46, scope: !11660)
!11663 = !DILocalVariable(name: "cob", arg: 2, scope: !11660, file: !3, line: 1834, type: !2733)
!11664 = !DILocation(line: 1834, column: 66, scope: !11660)
!11665 = !DILocalVariable(name: "UNUSED_targets", arg: 3, scope: !11660, file: !3, line: 1834, type: !1287)
!11666 = !DILocation(line: 1834, column: 81, scope: !11660)
!11667 = !DILocalVariable(name: "data", scope: !11660, file: !3, line: 1836, type: !2527)
!11668 = !DILocation(line: 1836, column: 25, scope: !11660)
!11669 = !DILocation(line: 1836, column: 32, scope: !11660)
!11670 = !DILocation(line: 1836, column: 37, scope: !11660)
!11671 = !DILocalVariable(name: "volume", scope: !11660, file: !3, line: 1838, type: !467)
!11672 = !DILocation(line: 1838, column: 8, scope: !11660)
!11673 = !DILocation(line: 1838, column: 17, scope: !11660)
!11674 = !DILocation(line: 1838, column: 23, scope: !11660)
!11675 = !DILocalVariable(name: "fac", scope: !11660, file: !3, line: 1839, type: !467)
!11676 = !DILocation(line: 1839, column: 8, scope: !11660)
!11677 = !DILocalVariable(name: "obsize", scope: !11660, file: !3, line: 1840, type: !469)
!11678 = !DILocation(line: 1840, column: 8, scope: !11660)
!11679 = !DILocation(line: 1842, column: 15, scope: !11660)
!11680 = !DILocation(line: 1842, column: 23, scope: !11660)
!11681 = !DILocation(line: 1842, column: 28, scope: !11660)
!11682 = !DILocation(line: 1842, column: 2, scope: !11660)
!11683 = !DILocation(line: 1845, column: 13, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 1845, column: 6)
!11685 = !DILocation(line: 1845, column: 19, scope: !11684)
!11686 = !DILocation(line: 1845, column: 6, scope: !11684)
!11687 = !DILocation(line: 1845, column: 25, scope: !11684)
!11688 = !DILocation(line: 1845, column: 6, scope: !11660)
!11689 = !DILocation(line: 1846, column: 15, scope: !11684)
!11690 = !DILocation(line: 1846, column: 31, scope: !11684)
!11691 = !DILocation(line: 1846, column: 37, scope: !11684)
!11692 = !DILocation(line: 1846, column: 24, scope: !11684)
!11693 = !DILocation(line: 1846, column: 22, scope: !11684)
!11694 = !DILocation(line: 1846, column: 9, scope: !11684)
!11695 = !DILocation(line: 1846, column: 53, scope: !11684)
!11696 = !DILocation(line: 1846, column: 59, scope: !11684)
!11697 = !DILocation(line: 1846, column: 46, scope: !11684)
!11698 = !DILocation(line: 1846, column: 44, scope: !11684)
!11699 = !DILocation(line: 1846, column: 7, scope: !11684)
!11700 = !DILocation(line: 1846, column: 3, scope: !11684)
!11701 = !DILocation(line: 1849, column: 10, scope: !11660)
!11702 = !DILocation(line: 1849, column: 16, scope: !11660)
!11703 = !DILocation(line: 1849, column: 2, scope: !11660)
!11704 = !DILocation(line: 1851, column: 14, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 1849, column: 22)
!11706 = !DILocation(line: 1851, column: 19, scope: !11705)
!11707 = !DILocation(line: 1851, column: 30, scope: !11705)
!11708 = !DILocation(line: 1851, column: 4, scope: !11705)
!11709 = !DILocation(line: 1852, column: 14, scope: !11705)
!11710 = !DILocation(line: 1852, column: 19, scope: !11705)
!11711 = !DILocation(line: 1852, column: 30, scope: !11705)
!11712 = !DILocation(line: 1852, column: 4, scope: !11705)
!11713 = !DILocation(line: 1853, column: 4, scope: !11705)
!11714 = !DILocation(line: 1855, column: 14, scope: !11705)
!11715 = !DILocation(line: 1855, column: 19, scope: !11705)
!11716 = !DILocation(line: 1855, column: 30, scope: !11705)
!11717 = !DILocation(line: 1855, column: 4, scope: !11705)
!11718 = !DILocation(line: 1856, column: 14, scope: !11705)
!11719 = !DILocation(line: 1856, column: 19, scope: !11705)
!11720 = !DILocation(line: 1856, column: 30, scope: !11705)
!11721 = !DILocation(line: 1856, column: 4, scope: !11705)
!11722 = !DILocation(line: 1857, column: 4, scope: !11705)
!11723 = !DILocation(line: 1859, column: 14, scope: !11705)
!11724 = !DILocation(line: 1859, column: 19, scope: !11705)
!11725 = !DILocation(line: 1859, column: 30, scope: !11705)
!11726 = !DILocation(line: 1859, column: 4, scope: !11705)
!11727 = !DILocation(line: 1860, column: 14, scope: !11705)
!11728 = !DILocation(line: 1860, column: 19, scope: !11705)
!11729 = !DILocation(line: 1860, column: 30, scope: !11705)
!11730 = !DILocation(line: 1860, column: 4, scope: !11705)
!11731 = !DILocation(line: 1861, column: 4, scope: !11705)
!11732 = !DILocation(line: 1863, column: 1, scope: !11660)
!11733 = distinct !DISubprogram(name: "pivotcon_id_looper", scope: !3, file: !3, line: 3755, type: !4251, scopeLine: 3756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11734 = !DILocalVariable(name: "con", arg: 1, scope: !11733, file: !3, line: 3755, type: !2708)
!11735 = !DILocation(line: 3755, column: 45, scope: !11733)
!11736 = !DILocalVariable(name: "func", arg: 2, scope: !11733, file: !3, line: 3755, type: !2599)
!11737 = !DILocation(line: 3755, column: 67, scope: !11733)
!11738 = !DILocalVariable(name: "userdata", arg: 3, scope: !11733, file: !3, line: 3755, type: !431)
!11739 = !DILocation(line: 3755, column: 79, scope: !11733)
!11740 = !DILocalVariable(name: "data", scope: !11733, file: !3, line: 3757, type: !11741)
!11741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11742, size: 64)
!11742 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPivotConstraint", file: !44, line: 375, baseType: !11743)
!11743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPivotConstraint", file: !44, line: 360, size: 704, elements: !11744)
!11744 = !{!11745, !11746, !11747, !11748, !11749}
!11745 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !11743, file: !44, line: 364, baseType: !521, size: 64)
!11746 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !11743, file: !44, line: 365, baseType: !422, size: 512, offset: 64)
!11747 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !11743, file: !44, line: 366, baseType: !469, size: 96, offset: 576)
!11748 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !11743, file: !44, line: 371, baseType: !420, size: 16, offset: 672)
!11749 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !11743, file: !44, line: 374, baseType: !420, size: 16, offset: 688)
!11750 = !DILocation(line: 3757, column: 20, scope: !11733)
!11751 = !DILocation(line: 3757, column: 27, scope: !11733)
!11752 = !DILocation(line: 3757, column: 32, scope: !11733)
!11753 = !DILocation(line: 3760, column: 2, scope: !11733)
!11754 = !DILocation(line: 3760, column: 7, scope: !11733)
!11755 = !DILocation(line: 3760, column: 20, scope: !11733)
!11756 = !DILocation(line: 3760, column: 26, scope: !11733)
!11757 = !DILocation(line: 3760, column: 12, scope: !11733)
!11758 = !DILocation(line: 3760, column: 38, scope: !11733)
!11759 = !DILocation(line: 3761, column: 1, scope: !11733)
!11760 = distinct !DISubprogram(name: "pivotcon_get_tars", scope: !3, file: !3, line: 3763, type: !4285, scopeLine: 3764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11761 = !DILocalVariable(name: "con", arg: 1, scope: !11760, file: !3, line: 3763, type: !2708)
!11762 = !DILocation(line: 3763, column: 43, scope: !11760)
!11763 = !DILocalVariable(name: "list", arg: 2, scope: !11760, file: !3, line: 3763, type: !1287)
!11764 = !DILocation(line: 3763, column: 58, scope: !11760)
!11765 = !DILocation(line: 3765, column: 6, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11760, file: !3, line: 3765, column: 6)
!11767 = !DILocation(line: 3765, column: 10, scope: !11766)
!11768 = !DILocation(line: 3765, column: 13, scope: !11766)
!11769 = !DILocation(line: 3765, column: 6, scope: !11760)
!11770 = !DILocalVariable(name: "data", scope: !11771, file: !3, line: 3766, type: !11741)
!11771 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 3765, column: 19)
!11772 = !DILocation(line: 3766, column: 21, scope: !11771)
!11773 = !DILocation(line: 3766, column: 28, scope: !11771)
!11774 = !DILocation(line: 3766, column: 33, scope: !11771)
!11775 = !DILocalVariable(name: "ct", scope: !11771, file: !3, line: 3767, type: !2244)
!11776 = !DILocation(line: 3767, column: 22, scope: !11771)
!11777 = !DILocation(line: 3770, column: 3, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 3770, column: 3)
!11779 = !DILocation(line: 3770, column: 3, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11778, file: !3, line: 3770, column: 3)
!11781 = !DILocation(line: 3770, column: 3, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !3, line: 3770, column: 3)
!11783 = distinct !DILexicalBlock(scope: !11780, file: !3, line: 3770, column: 3)
!11784 = !DILocation(line: 3770, column: 3, scope: !11783)
!11785 = !DILocalVariable(name: "pchan", scope: !11786, file: !3, line: 3770, type: !399)
!11786 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 3770, column: 3)
!11787 = !DILocation(line: 3770, column: 3, scope: !11786)
!11788 = !DILocation(line: 3770, column: 3, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 3770, column: 3)
!11790 = !DILocation(line: 3770, column: 3, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 3770, column: 3)
!11792 = !DILocation(line: 3770, column: 3, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 3770, column: 3)
!11794 = !DILocation(line: 3772, column: 3, scope: !11771)
!11795 = !DILocation(line: 3775, column: 2, scope: !11760)
!11796 = !DILocation(line: 3776, column: 1, scope: !11760)
!11797 = distinct !DISubprogram(name: "pivotcon_flush_tars", scope: !3, file: !3, line: 3778, type: !4324, scopeLine: 3779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11798 = !DILocalVariable(name: "con", arg: 1, scope: !11797, file: !3, line: 3778, type: !2708)
!11799 = !DILocation(line: 3778, column: 46, scope: !11797)
!11800 = !DILocalVariable(name: "list", arg: 2, scope: !11797, file: !3, line: 3778, type: !1287)
!11801 = !DILocation(line: 3778, column: 61, scope: !11797)
!11802 = !DILocalVariable(name: "no_copy", arg: 3, scope: !11797, file: !3, line: 3778, type: !1111)
!11803 = !DILocation(line: 3778, column: 72, scope: !11797)
!11804 = !DILocation(line: 3780, column: 6, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11797, file: !3, line: 3780, column: 6)
!11806 = !DILocation(line: 3780, column: 10, scope: !11805)
!11807 = !DILocation(line: 3780, column: 13, scope: !11805)
!11808 = !DILocation(line: 3780, column: 6, scope: !11797)
!11809 = !DILocalVariable(name: "data", scope: !11810, file: !3, line: 3781, type: !11741)
!11810 = distinct !DILexicalBlock(scope: !11805, file: !3, line: 3780, column: 19)
!11811 = !DILocation(line: 3781, column: 21, scope: !11810)
!11812 = !DILocation(line: 3781, column: 28, scope: !11810)
!11813 = !DILocation(line: 3781, column: 33, scope: !11810)
!11814 = !DILocalVariable(name: "ct", scope: !11810, file: !3, line: 3782, type: !2244)
!11815 = !DILocation(line: 3782, column: 22, scope: !11810)
!11816 = !DILocation(line: 3782, column: 27, scope: !11810)
!11817 = !DILocation(line: 3782, column: 33, scope: !11810)
!11818 = !DILocation(line: 3785, column: 3, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 3785, column: 3)
!11820 = distinct !DILexicalBlock(scope: !11810, file: !3, line: 3785, column: 3)
!11821 = !DILocation(line: 3785, column: 3, scope: !11820)
!11822 = !DILocalVariable(name: "ctn", scope: !11823, file: !3, line: 3785, type: !2244)
!11823 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 3785, column: 3)
!11824 = !DILocation(line: 3785, column: 3, scope: !11823)
!11825 = !DILocation(line: 3785, column: 3, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 3785, column: 3)
!11827 = !DILocation(line: 3785, column: 3, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11826, file: !3, line: 3785, column: 3)
!11829 = !DILocation(line: 3786, column: 2, scope: !11810)
!11830 = !DILocation(line: 3787, column: 1, scope: !11797)
!11831 = distinct !DISubprogram(name: "pivotcon_evaluate", scope: !3, file: !3, line: 3789, type: !4392, scopeLine: 3790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11832 = !DILocalVariable(name: "con", arg: 1, scope: !11831, file: !3, line: 3789, type: !2708)
!11833 = !DILocation(line: 3789, column: 44, scope: !11831)
!11834 = !DILocalVariable(name: "cob", arg: 2, scope: !11831, file: !3, line: 3789, type: !2733)
!11835 = !DILocation(line: 3789, column: 64, scope: !11831)
!11836 = !DILocalVariable(name: "targets", arg: 3, scope: !11831, file: !3, line: 3789, type: !1287)
!11837 = !DILocation(line: 3789, column: 79, scope: !11831)
!11838 = !DILocalVariable(name: "data", scope: !11831, file: !3, line: 3791, type: !11741)
!11839 = !DILocation(line: 3791, column: 20, scope: !11831)
!11840 = !DILocation(line: 3791, column: 27, scope: !11831)
!11841 = !DILocation(line: 3791, column: 32, scope: !11831)
!11842 = !DILocalVariable(name: "ct", scope: !11831, file: !3, line: 3792, type: !2244)
!11843 = !DILocation(line: 3792, column: 21, scope: !11831)
!11844 = !DILocation(line: 3792, column: 26, scope: !11831)
!11845 = !DILocation(line: 3792, column: 35, scope: !11831)
!11846 = !DILocalVariable(name: "pivot", scope: !11831, file: !3, line: 3794, type: !469)
!11847 = !DILocation(line: 3794, column: 8, scope: !11831)
!11848 = !DILocalVariable(name: "vec", scope: !11831, file: !3, line: 3794, type: !469)
!11849 = !DILocation(line: 3794, column: 18, scope: !11831)
!11850 = !DILocalVariable(name: "rotMat", scope: !11831, file: !3, line: 3795, type: !474)
!11851 = !DILocation(line: 3795, column: 8, scope: !11831)
!11852 = !DILocalVariable(name: "axis", scope: !11831, file: !3, line: 3798, type: !469)
!11853 = !DILocation(line: 3798, column: 8, scope: !11831)
!11854 = !DILocalVariable(name: "angle", scope: !11831, file: !3, line: 3798, type: !467)
!11855 = !DILocation(line: 3798, column: 17, scope: !11831)
!11856 = !DILocation(line: 3801, column: 6, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 3801, column: 6)
!11858 = !DILocation(line: 3801, column: 12, scope: !11857)
!11859 = !DILocation(line: 3801, column: 20, scope: !11857)
!11860 = !DILocation(line: 3801, column: 6, scope: !11831)
!11861 = !DILocalVariable(name: "rot", scope: !11862, file: !3, line: 3802, type: !469)
!11862 = distinct !DILexicalBlock(scope: !11857, file: !3, line: 3801, column: 43)
!11863 = !DILocation(line: 3802, column: 9, scope: !11862)
!11864 = !DILocation(line: 3805, column: 16, scope: !11862)
!11865 = !DILocation(line: 3805, column: 21, scope: !11862)
!11866 = !DILocation(line: 3805, column: 26, scope: !11862)
!11867 = !DILocation(line: 3805, column: 36, scope: !11862)
!11868 = !DILocation(line: 3805, column: 41, scope: !11862)
!11869 = !DILocation(line: 3805, column: 3, scope: !11862)
!11870 = !DILocation(line: 3808, column: 7, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 3808, column: 7)
!11872 = !DILocation(line: 3808, column: 13, scope: !11871)
!11873 = !DILocation(line: 3808, column: 21, scope: !11871)
!11874 = !DILocation(line: 3808, column: 7, scope: !11862)
!11875 = !DILocation(line: 3810, column: 12, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11877, file: !3, line: 3810, column: 8)
!11877 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 3808, column: 40)
!11878 = !DILocation(line: 3810, column: 18, scope: !11876)
!11879 = !DILocation(line: 3810, column: 8, scope: !11876)
!11880 = !DILocation(line: 3810, column: 27, scope: !11876)
!11881 = !DILocation(line: 3810, column: 8, scope: !11877)
!11882 = !DILocation(line: 3811, column: 5, scope: !11876)
!11883 = !DILocation(line: 3812, column: 3, scope: !11877)
!11884 = !DILocation(line: 3815, column: 12, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 3815, column: 8)
!11886 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 3813, column: 8)
!11887 = !DILocation(line: 3815, column: 18, scope: !11885)
!11888 = !DILocation(line: 3815, column: 26, scope: !11885)
!11889 = !DILocation(line: 3815, column: 8, scope: !11885)
!11890 = !DILocation(line: 3815, column: 45, scope: !11885)
!11891 = !DILocation(line: 3815, column: 8, scope: !11886)
!11892 = !DILocation(line: 3816, column: 5, scope: !11885)
!11893 = !DILocation(line: 3818, column: 2, scope: !11862)
!11894 = !DILocation(line: 3821, column: 6, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 3821, column: 6)
!11896 = !DILocation(line: 3821, column: 6, scope: !11831)
!11897 = !DILocation(line: 3823, column: 15, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11895, file: !3, line: 3821, column: 29)
!11899 = !DILocation(line: 3823, column: 22, scope: !11898)
!11900 = !DILocation(line: 3823, column: 26, scope: !11898)
!11901 = !DILocation(line: 3823, column: 37, scope: !11898)
!11902 = !DILocation(line: 3823, column: 43, scope: !11898)
!11903 = !DILocation(line: 3823, column: 3, scope: !11898)
!11904 = !DILocation(line: 3824, column: 2, scope: !11898)
!11905 = !DILocation(line: 3827, column: 8, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11907, file: !3, line: 3827, column: 7)
!11907 = distinct !DILexicalBlock(scope: !11895, file: !3, line: 3825, column: 7)
!11908 = !DILocation(line: 3827, column: 14, scope: !11906)
!11909 = !DILocation(line: 3827, column: 19, scope: !11906)
!11910 = !DILocation(line: 3827, column: 47, scope: !11906)
!11911 = !DILocation(line: 3827, column: 7, scope: !11907)
!11912 = !DILocation(line: 3829, column: 16, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11906, file: !3, line: 3827, column: 53)
!11914 = !DILocation(line: 3829, column: 23, scope: !11913)
!11915 = !DILocation(line: 3829, column: 28, scope: !11913)
!11916 = !DILocation(line: 3829, column: 39, scope: !11913)
!11917 = !DILocation(line: 3829, column: 45, scope: !11913)
!11918 = !DILocation(line: 3829, column: 4, scope: !11913)
!11919 = !DILocation(line: 3830, column: 3, scope: !11913)
!11920 = !DILocation(line: 3833, column: 15, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11906, file: !3, line: 3831, column: 8)
!11922 = !DILocation(line: 3833, column: 22, scope: !11921)
!11923 = !DILocation(line: 3833, column: 28, scope: !11921)
!11924 = !DILocation(line: 3833, column: 4, scope: !11921)
!11925 = !DILocation(line: 3839, column: 13, scope: !11831)
!11926 = !DILocation(line: 3839, column: 21, scope: !11831)
!11927 = !DILocation(line: 3839, column: 26, scope: !11831)
!11928 = !DILocation(line: 3839, column: 2, scope: !11831)
!11929 = !DILocation(line: 3840, column: 15, scope: !11831)
!11930 = !DILocation(line: 3840, column: 2, scope: !11831)
!11931 = !DILocation(line: 3844, column: 21, scope: !11831)
!11932 = !DILocation(line: 3844, column: 35, scope: !11831)
!11933 = !DILocation(line: 3844, column: 2, scope: !11831)
!11934 = !DILocation(line: 3845, column: 6, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 3845, column: 6)
!11936 = !DILocation(line: 3845, column: 6, scope: !11831)
!11937 = !DILocalVariable(name: "dvec", scope: !11938, file: !3, line: 3846, type: !469)
!11938 = distinct !DILexicalBlock(scope: !11935, file: !3, line: 3845, column: 13)
!11939 = !DILocation(line: 3846, column: 9, scope: !11938)
!11940 = !DILocation(line: 3847, column: 15, scope: !11938)
!11941 = !DILocation(line: 3847, column: 20, scope: !11938)
!11942 = !DILocation(line: 3847, column: 27, scope: !11938)
!11943 = !DILocation(line: 3847, column: 32, scope: !11938)
!11944 = !DILocation(line: 3847, column: 3, scope: !11938)
!11945 = !DILocation(line: 3848, column: 19, scope: !11938)
!11946 = !DILocation(line: 3848, column: 25, scope: !11938)
!11947 = !DILocation(line: 3848, column: 30, scope: !11938)
!11948 = !DILocation(line: 3848, column: 3, scope: !11938)
!11949 = !DILocation(line: 3849, column: 13, scope: !11938)
!11950 = !DILocation(line: 3849, column: 20, scope: !11938)
!11951 = !DILocation(line: 3849, column: 3, scope: !11938)
!11952 = !DILocation(line: 3850, column: 2, scope: !11938)
!11953 = !DILocation(line: 3854, column: 14, scope: !11831)
!11954 = !DILocation(line: 3854, column: 19, scope: !11831)
!11955 = !DILocation(line: 3854, column: 24, scope: !11831)
!11956 = !DILocation(line: 3854, column: 35, scope: !11831)
!11957 = !DILocation(line: 3854, column: 2, scope: !11831)
!11958 = !DILocation(line: 3856, column: 12, scope: !11831)
!11959 = !DILocation(line: 3856, column: 20, scope: !11831)
!11960 = !DILocation(line: 3856, column: 2, scope: !11831)
!11961 = !DILocation(line: 3858, column: 14, scope: !11831)
!11962 = !DILocation(line: 3858, column: 19, scope: !11831)
!11963 = !DILocation(line: 3858, column: 30, scope: !11831)
!11964 = !DILocation(line: 3858, column: 37, scope: !11831)
!11965 = !DILocation(line: 3858, column: 2, scope: !11831)
!11966 = !DILocation(line: 3859, column: 1, scope: !11831)
!11967 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !3158, file: !3158, line: 309, type: !5375, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11968 = !DILocalVariable(name: "r", arg: 1, scope: !11967, file: !3158, line: 309, type: !1080)
!11969 = !DILocation(line: 309, column: 32, scope: !11967)
!11970 = !DILocalVariable(name: "a", arg: 2, scope: !11967, file: !3158, line: 309, type: !1054)
!11971 = !DILocation(line: 309, column: 50, scope: !11967)
!11972 = !DILocalVariable(name: "b", arg: 3, scope: !11967, file: !3158, line: 309, type: !1054)
!11973 = !DILocation(line: 309, column: 68, scope: !11967)
!11974 = !DILocation(line: 311, column: 9, scope: !11967)
!11975 = !DILocation(line: 311, column: 16, scope: !11967)
!11976 = !DILocation(line: 311, column: 14, scope: !11967)
!11977 = !DILocation(line: 311, column: 2, scope: !11967)
!11978 = !DILocation(line: 311, column: 7, scope: !11967)
!11979 = !DILocation(line: 312, column: 9, scope: !11967)
!11980 = !DILocation(line: 312, column: 16, scope: !11967)
!11981 = !DILocation(line: 312, column: 14, scope: !11967)
!11982 = !DILocation(line: 312, column: 2, scope: !11967)
!11983 = !DILocation(line: 312, column: 7, scope: !11967)
!11984 = !DILocation(line: 313, column: 9, scope: !11967)
!11985 = !DILocation(line: 313, column: 16, scope: !11967)
!11986 = !DILocation(line: 313, column: 14, scope: !11967)
!11987 = !DILocation(line: 313, column: 2, scope: !11967)
!11988 = !DILocation(line: 313, column: 7, scope: !11967)
!11989 = !DILocation(line: 314, column: 1, scope: !11967)
!11990 = distinct !DISubprogram(name: "sub_v3_v3", scope: !3158, file: !3158, line: 350, type: !5307, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!11991 = !DILocalVariable(name: "r", arg: 1, scope: !11990, file: !3158, line: 350, type: !1080)
!11992 = !DILocation(line: 350, column: 30, scope: !11990)
!11993 = !DILocalVariable(name: "a", arg: 2, scope: !11990, file: !3158, line: 350, type: !1054)
!11994 = !DILocation(line: 350, column: 48, scope: !11990)
!11995 = !DILocation(line: 352, column: 10, scope: !11990)
!11996 = !DILocation(line: 352, column: 2, scope: !11990)
!11997 = !DILocation(line: 352, column: 7, scope: !11990)
!11998 = !DILocation(line: 353, column: 10, scope: !11990)
!11999 = !DILocation(line: 353, column: 2, scope: !11990)
!12000 = !DILocation(line: 353, column: 7, scope: !11990)
!12001 = !DILocation(line: 354, column: 10, scope: !11990)
!12002 = !DILocation(line: 354, column: 2, scope: !11990)
!12003 = !DILocation(line: 354, column: 7, scope: !11990)
!12004 = !DILocation(line: 355, column: 1, scope: !11990)
!12005 = distinct !DISubprogram(name: "followtrack_id_looper", scope: !3, file: !3, line: 3887, type: !4251, scopeLine: 3888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12006 = !DILocalVariable(name: "con", arg: 1, scope: !12005, file: !3, line: 3887, type: !2708)
!12007 = !DILocation(line: 3887, column: 48, scope: !12005)
!12008 = !DILocalVariable(name: "func", arg: 2, scope: !12005, file: !3, line: 3887, type: !2599)
!12009 = !DILocation(line: 3887, column: 70, scope: !12005)
!12010 = !DILocalVariable(name: "userdata", arg: 3, scope: !12005, file: !3, line: 3887, type: !431)
!12011 = !DILocation(line: 3887, column: 82, scope: !12005)
!12012 = !DILocalVariable(name: "data", scope: !12005, file: !3, line: 3889, type: !2533)
!12013 = !DILocation(line: 3889, column: 26, scope: !12005)
!12014 = !DILocation(line: 3889, column: 33, scope: !12005)
!12015 = !DILocation(line: 3889, column: 38, scope: !12005)
!12016 = !DILocation(line: 3891, column: 2, scope: !12005)
!12017 = !DILocation(line: 3891, column: 7, scope: !12005)
!12018 = !DILocation(line: 3891, column: 20, scope: !12005)
!12019 = !DILocation(line: 3891, column: 26, scope: !12005)
!12020 = !DILocation(line: 3891, column: 12, scope: !12005)
!12021 = !DILocation(line: 3891, column: 38, scope: !12005)
!12022 = !DILocation(line: 3892, column: 2, scope: !12005)
!12023 = !DILocation(line: 3892, column: 7, scope: !12005)
!12024 = !DILocation(line: 3892, column: 20, scope: !12005)
!12025 = !DILocation(line: 3892, column: 26, scope: !12005)
!12026 = !DILocation(line: 3892, column: 12, scope: !12005)
!12027 = !DILocation(line: 3892, column: 41, scope: !12005)
!12028 = !DILocation(line: 3893, column: 2, scope: !12005)
!12029 = !DILocation(line: 3893, column: 7, scope: !12005)
!12030 = !DILocation(line: 3893, column: 20, scope: !12005)
!12031 = !DILocation(line: 3893, column: 26, scope: !12005)
!12032 = !DILocation(line: 3893, column: 12, scope: !12005)
!12033 = !DILocation(line: 3893, column: 43, scope: !12005)
!12034 = !DILocation(line: 3894, column: 1, scope: !12005)
!12035 = distinct !DISubprogram(name: "followtrack_new_data", scope: !3, file: !3, line: 3879, type: !2610, scopeLine: 3880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12036 = !DILocalVariable(name: "cdata", arg: 1, scope: !12035, file: !3, line: 3879, type: !431)
!12037 = !DILocation(line: 3879, column: 40, scope: !12035)
!12038 = !DILocalVariable(name: "data", scope: !12035, file: !3, line: 3881, type: !2533)
!12039 = !DILocation(line: 3881, column: 26, scope: !12035)
!12040 = !DILocation(line: 3881, column: 59, scope: !12035)
!12041 = !DILocation(line: 3881, column: 33, scope: !12035)
!12042 = !DILocation(line: 3883, column: 2, scope: !12035)
!12043 = !DILocation(line: 3883, column: 8, scope: !12035)
!12044 = !DILocation(line: 3883, column: 13, scope: !12035)
!12045 = !DILocation(line: 3884, column: 2, scope: !12035)
!12046 = !DILocation(line: 3884, column: 8, scope: !12035)
!12047 = !DILocation(line: 3884, column: 13, scope: !12035)
!12048 = !DILocation(line: 3885, column: 1, scope: !12035)
!12049 = distinct !DISubprogram(name: "followtrack_evaluate", scope: !3, file: !3, line: 3896, type: !4392, scopeLine: 3897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12050 = !DILocalVariable(name: "con", arg: 1, scope: !12049, file: !3, line: 3896, type: !2708)
!12051 = !DILocation(line: 3896, column: 47, scope: !12049)
!12052 = !DILocalVariable(name: "cob", arg: 2, scope: !12049, file: !3, line: 3896, type: !2733)
!12053 = !DILocation(line: 3896, column: 67, scope: !12049)
!12054 = !DILocalVariable(name: "UNUSED_targets", arg: 3, scope: !12049, file: !3, line: 3896, type: !1287)
!12055 = !DILocation(line: 3896, column: 82, scope: !12049)
!12056 = !DILocalVariable(name: "scene", scope: !12049, file: !3, line: 3898, type: !2722)
!12057 = !DILocation(line: 3898, column: 9, scope: !12049)
!12058 = !DILocation(line: 3898, column: 17, scope: !12049)
!12059 = !DILocation(line: 3898, column: 22, scope: !12049)
!12060 = !DILocalVariable(name: "data", scope: !12049, file: !3, line: 3899, type: !2533)
!12061 = !DILocation(line: 3899, column: 26, scope: !12049)
!12062 = !DILocation(line: 3899, column: 33, scope: !12049)
!12063 = !DILocation(line: 3899, column: 38, scope: !12049)
!12064 = !DILocalVariable(name: "clip", scope: !12049, file: !3, line: 3900, type: !12065)
!12065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12066, size: 64)
!12066 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieClip", file: !1986, line: 101, baseType: !1985)
!12067 = !DILocation(line: 3900, column: 13, scope: !12049)
!12068 = !DILocation(line: 3900, column: 20, scope: !12049)
!12069 = !DILocation(line: 3900, column: 26, scope: !12049)
!12070 = !DILocalVariable(name: "tracking", scope: !12049, file: !3, line: 3901, type: !12071)
!12071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12072, size: 64)
!12072 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTracking", file: !371, line: 356, baseType: !2003)
!12073 = !DILocation(line: 3901, column: 17, scope: !12049)
!12074 = !DILocalVariable(name: "track", scope: !12049, file: !3, line: 3902, type: !2077)
!12075 = !DILocation(line: 3902, column: 22, scope: !12049)
!12076 = !DILocalVariable(name: "tracking_object", scope: !12049, file: !3, line: 3903, type: !12077)
!12077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12078, size: 64)
!12078 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingObject", file: !371, line: 293, baseType: !12079)
!12079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingObject", file: !371, line: 280, size: 1216, elements: !12080)
!12080 = !{!12081, !12083, !12084, !12085, !12086, !12087, !12088, !12089, !12090, !12091}
!12081 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12079, file: !371, line: 281, baseType: !12082, size: 64)
!12082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12079, size: 64)
!12083 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12079, file: !371, line: 281, baseType: !12082, size: 64, offset: 64)
!12084 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12079, file: !371, line: 283, baseType: !422, size: 512, offset: 128)
!12085 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12079, file: !371, line: 284, baseType: !352, size: 32, offset: 640)
!12086 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !12079, file: !371, line: 285, baseType: !467, size: 32, offset: 672)
!12087 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !12079, file: !371, line: 287, baseType: !433, size: 128, offset: 704)
!12088 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !12079, file: !371, line: 288, baseType: !433, size: 128, offset: 832)
!12089 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !12079, file: !371, line: 289, baseType: !2054, size: 192, offset: 960)
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !12079, file: !371, line: 292, baseType: !352, size: 32, offset: 1152)
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !12079, file: !371, line: 292, baseType: !352, size: 32, offset: 1184)
!12092 = !DILocation(line: 3903, column: 23, scope: !12049)
!12093 = !DILocalVariable(name: "camob", scope: !12049, file: !3, line: 3904, type: !2242)
!12094 = !DILocation(line: 3904, column: 10, scope: !12049)
!12095 = !DILocation(line: 3904, column: 18, scope: !12049)
!12096 = !DILocation(line: 3904, column: 24, scope: !12049)
!12097 = !DILocation(line: 3904, column: 33, scope: !12049)
!12098 = !DILocation(line: 3904, column: 39, scope: !12049)
!12099 = !DILocation(line: 3904, column: 48, scope: !12049)
!12100 = !DILocation(line: 3904, column: 55, scope: !12049)
!12101 = !DILocalVariable(name: "framenr", scope: !12049, file: !3, line: 3905, type: !352)
!12102 = !DILocation(line: 3905, column: 6, scope: !12049)
!12103 = !DILocation(line: 3907, column: 6, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 3907, column: 6)
!12105 = !DILocation(line: 3907, column: 12, scope: !12104)
!12106 = !DILocation(line: 3907, column: 17, scope: !12104)
!12107 = !DILocation(line: 3907, column: 6, scope: !12049)
!12108 = !DILocation(line: 3908, column: 10, scope: !12104)
!12109 = !DILocation(line: 3908, column: 17, scope: !12104)
!12110 = !DILocation(line: 3908, column: 8, scope: !12104)
!12111 = !DILocation(line: 3908, column: 3, scope: !12104)
!12112 = !DILocation(line: 3910, column: 7, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 3910, column: 6)
!12114 = !DILocation(line: 3910, column: 12, scope: !12113)
!12115 = !DILocation(line: 3910, column: 16, scope: !12113)
!12116 = !DILocation(line: 3910, column: 22, scope: !12113)
!12117 = !DILocation(line: 3910, column: 31, scope: !12113)
!12118 = !DILocation(line: 3910, column: 35, scope: !12113)
!12119 = !DILocation(line: 3910, column: 6, scope: !12049)
!12120 = !DILocation(line: 3911, column: 3, scope: !12113)
!12121 = !DILocation(line: 3913, column: 14, scope: !12049)
!12122 = !DILocation(line: 3913, column: 20, scope: !12049)
!12123 = !DILocation(line: 3913, column: 11, scope: !12049)
!12124 = !DILocation(line: 3915, column: 6, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 3915, column: 6)
!12126 = !DILocation(line: 3915, column: 12, scope: !12125)
!12127 = !DILocation(line: 3915, column: 6, scope: !12049)
!12128 = !DILocation(line: 3916, column: 51, scope: !12125)
!12129 = !DILocation(line: 3916, column: 61, scope: !12125)
!12130 = !DILocation(line: 3916, column: 67, scope: !12125)
!12131 = !DILocation(line: 3916, column: 21, scope: !12125)
!12132 = !DILocation(line: 3916, column: 19, scope: !12125)
!12133 = !DILocation(line: 3916, column: 3, scope: !12125)
!12134 = !DILocation(line: 3918, column: 52, scope: !12125)
!12135 = !DILocation(line: 3918, column: 21, scope: !12125)
!12136 = !DILocation(line: 3918, column: 19, scope: !12125)
!12137 = !DILocation(line: 3920, column: 7, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 3920, column: 6)
!12139 = !DILocation(line: 3920, column: 6, scope: !12049)
!12140 = !DILocation(line: 3921, column: 3, scope: !12138)
!12141 = !DILocation(line: 3923, column: 39, scope: !12049)
!12142 = !DILocation(line: 3923, column: 49, scope: !12049)
!12143 = !DILocation(line: 3923, column: 66, scope: !12049)
!12144 = !DILocation(line: 3923, column: 72, scope: !12049)
!12145 = !DILocation(line: 3923, column: 10, scope: !12049)
!12146 = !DILocation(line: 3923, column: 8, scope: !12049)
!12147 = !DILocation(line: 3925, column: 7, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 3925, column: 6)
!12149 = !DILocation(line: 3925, column: 6, scope: !12049)
!12150 = !DILocation(line: 3926, column: 3, scope: !12148)
!12151 = !DILocation(line: 3928, column: 52, scope: !12049)
!12152 = !DILocation(line: 3928, column: 58, scope: !12049)
!12153 = !DILocation(line: 3928, column: 65, scope: !12049)
!12154 = !DILocation(line: 3928, column: 67, scope: !12049)
!12155 = !DILocation(line: 3928, column: 12, scope: !12049)
!12156 = !DILocation(line: 3928, column: 10, scope: !12049)
!12157 = !DILocation(line: 3930, column: 6, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 3930, column: 6)
!12159 = !DILocation(line: 3930, column: 12, scope: !12158)
!12160 = !DILocation(line: 3930, column: 17, scope: !12158)
!12161 = !DILocation(line: 3930, column: 6, scope: !12049)
!12162 = !DILocation(line: 3931, column: 7, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 3931, column: 7)
!12164 = distinct !DILexicalBlock(scope: !12158, file: !3, line: 3930, column: 48)
!12165 = !DILocation(line: 3931, column: 14, scope: !12163)
!12166 = !DILocation(line: 3931, column: 19, scope: !12163)
!12167 = !DILocation(line: 3931, column: 7, scope: !12164)
!12168 = !DILocalVariable(name: "obmat", scope: !12169, file: !3, line: 3932, type: !480)
!12169 = distinct !DILexicalBlock(scope: !12163, file: !3, line: 3931, column: 39)
!12170 = !DILocation(line: 3932, column: 10, scope: !12169)
!12171 = !DILocalVariable(name: "mat", scope: !12169, file: !3, line: 3932, type: !480)
!12172 = !DILocation(line: 3932, column: 23, scope: !12169)
!12173 = !DILocation(line: 3934, column: 15, scope: !12169)
!12174 = !DILocation(line: 3934, column: 22, scope: !12169)
!12175 = !DILocation(line: 3934, column: 27, scope: !12169)
!12176 = !DILocation(line: 3934, column: 4, scope: !12169)
!12177 = !DILocation(line: 3936, column: 9, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12169, file: !3, line: 3936, column: 8)
!12179 = !DILocation(line: 3936, column: 26, scope: !12178)
!12180 = !DILocation(line: 3936, column: 31, scope: !12178)
!12181 = !DILocation(line: 3936, column: 57, scope: !12178)
!12182 = !DILocation(line: 3936, column: 8, scope: !12169)
!12183 = !DILocalVariable(name: "imat", scope: !12184, file: !3, line: 3937, type: !480)
!12184 = distinct !DILexicalBlock(scope: !12178, file: !3, line: 3936, column: 63)
!12185 = !DILocation(line: 3937, column: 11, scope: !12184)
!12186 = !DILocation(line: 3939, column: 16, scope: !12184)
!12187 = !DILocation(line: 3939, column: 21, scope: !12184)
!12188 = !DILocation(line: 3939, column: 28, scope: !12184)
!12189 = !DILocation(line: 3939, column: 5, scope: !12184)
!12190 = !DILocation(line: 3941, column: 55, scope: !12184)
!12191 = !DILocation(line: 3941, column: 65, scope: !12184)
!12192 = !DILocation(line: 3941, column: 82, scope: !12184)
!12193 = !DILocation(line: 3941, column: 91, scope: !12184)
!12194 = !DILocation(line: 3941, column: 5, scope: !12184)
!12195 = !DILocation(line: 3942, column: 15, scope: !12184)
!12196 = !DILocation(line: 3942, column: 5, scope: !12184)
!12197 = !DILocation(line: 3944, column: 5, scope: !12184)
!12198 = !DILocation(line: 3945, column: 18, scope: !12184)
!12199 = !DILocation(line: 3945, column: 23, scope: !12184)
!12200 = !DILocation(line: 3945, column: 31, scope: !12184)
!12201 = !DILocation(line: 3945, column: 38, scope: !12184)
!12202 = !DILocation(line: 3945, column: 53, scope: !12184)
!12203 = !DILocation(line: 3945, column: 60, scope: !12184)
!12204 = !DILocation(line: 3945, column: 75, scope: !12184)
!12205 = !DILocation(line: 3945, column: 82, scope: !12184)
!12206 = !DILocation(line: 3945, column: 5, scope: !12184)
!12207 = !DILocation(line: 3946, column: 4, scope: !12184)
!12208 = !DILocation(line: 3948, column: 43, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12178, file: !3, line: 3947, column: 9)
!12210 = !DILocation(line: 3948, column: 48, scope: !12209)
!12211 = !DILocation(line: 3948, column: 55, scope: !12209)
!12212 = !DILocation(line: 3948, column: 62, scope: !12209)
!12213 = !DILocation(line: 3948, column: 5, scope: !12209)
!12214 = !DILocation(line: 3950, column: 17, scope: !12209)
!12215 = !DILocation(line: 3950, column: 22, scope: !12209)
!12216 = !DILocation(line: 3950, column: 30, scope: !12209)
!12217 = !DILocation(line: 3950, column: 37, scope: !12209)
!12218 = !DILocation(line: 3950, column: 5, scope: !12209)
!12219 = !DILocation(line: 3951, column: 18, scope: !12209)
!12220 = !DILocation(line: 3951, column: 23, scope: !12209)
!12221 = !DILocation(line: 3951, column: 31, scope: !12209)
!12222 = !DILocation(line: 3951, column: 38, scope: !12209)
!12223 = !DILocation(line: 3951, column: 53, scope: !12209)
!12224 = !DILocation(line: 3951, column: 60, scope: !12209)
!12225 = !DILocation(line: 3951, column: 75, scope: !12209)
!12226 = !DILocation(line: 3951, column: 82, scope: !12209)
!12227 = !DILocation(line: 3951, column: 5, scope: !12209)
!12228 = !DILocation(line: 3953, column: 3, scope: !12169)
!12229 = !DILocation(line: 3954, column: 2, scope: !12164)
!12230 = !DILocalVariable(name: "marker", scope: !12231, file: !3, line: 3956, type: !2093)
!12231 = distinct !DILexicalBlock(scope: !12158, file: !3, line: 3955, column: 7)
!12232 = !DILocation(line: 3956, column: 24, scope: !12231)
!12233 = !DILocalVariable(name: "vec", scope: !12231, file: !3, line: 3957, type: !469)
!12234 = !DILocation(line: 3957, column: 9, scope: !12231)
!12235 = !DILocalVariable(name: "disp", scope: !12231, file: !3, line: 3957, type: !469)
!12236 = !DILocation(line: 3957, column: 17, scope: !12231)
!12237 = !DILocalVariable(name: "axis", scope: !12231, file: !3, line: 3957, type: !469)
!12238 = !DILocation(line: 3957, column: 26, scope: !12231)
!12239 = !DILocalVariable(name: "mat", scope: !12231, file: !3, line: 3957, type: !480)
!12240 = !DILocation(line: 3957, column: 35, scope: !12231)
!12241 = !DILocalVariable(name: "aspect", scope: !12231, file: !3, line: 3958, type: !467)
!12242 = !DILocation(line: 3958, column: 9, scope: !12231)
!12243 = !DILocation(line: 3958, column: 19, scope: !12231)
!12244 = !DILocation(line: 3958, column: 26, scope: !12231)
!12245 = !DILocation(line: 3958, column: 28, scope: !12231)
!12246 = !DILocation(line: 3958, column: 35, scope: !12231)
!12247 = !DILocation(line: 3958, column: 42, scope: !12231)
!12248 = !DILocation(line: 3958, column: 44, scope: !12231)
!12249 = !DILocation(line: 3958, column: 33, scope: !12231)
!12250 = !DILocation(line: 3958, column: 53, scope: !12231)
!12251 = !DILocation(line: 3958, column: 60, scope: !12231)
!12252 = !DILocation(line: 3958, column: 62, scope: !12231)
!12253 = !DILocation(line: 3958, column: 69, scope: !12231)
!12254 = !DILocation(line: 3958, column: 76, scope: !12231)
!12255 = !DILocation(line: 3958, column: 78, scope: !12231)
!12256 = !DILocation(line: 3958, column: 67, scope: !12231)
!12257 = !DILocation(line: 3958, column: 50, scope: !12231)
!12258 = !DILocalVariable(name: "len", scope: !12231, file: !3, line: 3959, type: !467)
!12259 = !DILocation(line: 3959, column: 9, scope: !12231)
!12260 = !DILocalVariable(name: "d", scope: !12231, file: !3, line: 3959, type: !467)
!12261 = !DILocation(line: 3959, column: 14, scope: !12231)
!12262 = !DILocation(line: 3961, column: 33, scope: !12231)
!12263 = !DILocation(line: 3961, column: 40, scope: !12231)
!12264 = !DILocation(line: 3961, column: 47, scope: !12231)
!12265 = !DILocation(line: 3961, column: 3, scope: !12231)
!12266 = !DILocation(line: 3964, column: 3, scope: !12231)
!12267 = !DILocation(line: 3964, column: 10, scope: !12231)
!12268 = !DILocation(line: 3965, column: 3, scope: !12231)
!12269 = !DILocation(line: 3965, column: 10, scope: !12231)
!12270 = !DILocation(line: 3966, column: 3, scope: !12231)
!12271 = !DILocation(line: 3966, column: 10, scope: !12231)
!12272 = !DILocation(line: 3967, column: 15, scope: !12231)
!12273 = !DILocation(line: 3967, column: 21, scope: !12231)
!12274 = !DILocation(line: 3967, column: 26, scope: !12231)
!12275 = !DILocation(line: 3967, column: 3, scope: !12231)
!12276 = !DILocation(line: 3970, column: 14, scope: !12231)
!12277 = !DILocation(line: 3970, column: 19, scope: !12231)
!12278 = !DILocation(line: 3970, column: 24, scope: !12231)
!12279 = !DILocation(line: 3970, column: 3, scope: !12231)
!12280 = !DILocation(line: 3971, column: 13, scope: !12231)
!12281 = !DILocation(line: 3971, column: 18, scope: !12231)
!12282 = !DILocation(line: 3971, column: 3, scope: !12231)
!12283 = !DILocation(line: 3972, column: 19, scope: !12231)
!12284 = !DILocation(line: 3972, column: 25, scope: !12231)
!12285 = !DILocation(line: 3972, column: 30, scope: !12231)
!12286 = !DILocation(line: 3972, column: 3, scope: !12231)
!12287 = !DILocation(line: 3974, column: 16, scope: !12231)
!12288 = !DILocation(line: 3974, column: 9, scope: !12231)
!12289 = !DILocation(line: 3974, column: 7, scope: !12231)
!12290 = !DILocation(line: 3976, column: 7, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12231, file: !3, line: 3976, column: 7)
!12292 = !DILocation(line: 3976, column: 11, scope: !12291)
!12293 = !DILocation(line: 3976, column: 7, scope: !12231)
!12294 = !DILocalVariable(name: "params", scope: !12295, file: !3, line: 3977, type: !12296)
!12295 = distinct !DILexicalBlock(scope: !12291, file: !3, line: 3976, column: 26)
!12296 = !DIDerivedType(tag: DW_TAG_typedef, name: "CameraParams", file: !12297, line: 104, baseType: !12298)
!12297 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_camera.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CameraParams", file: !12297, line: 70, size: 1248, elements: !12299)
!12299 = !{!12300, !12301, !12302, !12303, !12304, !12305, !12306, !12307, !12308, !12309, !12310, !12311, !12312, !12313, !12314, !12315, !12316, !12317, !12318, !12319, !12320}
!12300 = !DIDerivedType(tag: DW_TAG_member, name: "is_ortho", scope: !12298, file: !12297, line: 72, baseType: !1111, size: 8)
!12301 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !12298, file: !12297, line: 73, baseType: !467, size: 32, offset: 32)
!12302 = !DIDerivedType(tag: DW_TAG_member, name: "ortho_scale", scope: !12298, file: !12297, line: 74, baseType: !467, size: 32, offset: 64)
!12303 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !12298, file: !12297, line: 75, baseType: !467, size: 32, offset: 96)
!12304 = !DIDerivedType(tag: DW_TAG_member, name: "shiftx", scope: !12298, file: !12297, line: 77, baseType: !467, size: 32, offset: 128)
!12305 = !DIDerivedType(tag: DW_TAG_member, name: "shifty", scope: !12298, file: !12297, line: 78, baseType: !467, size: 32, offset: 160)
!12306 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !12298, file: !12297, line: 79, baseType: !467, size: 32, offset: 192)
!12307 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !12298, file: !12297, line: 80, baseType: !467, size: 32, offset: 224)
!12308 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_x", scope: !12298, file: !12297, line: 83, baseType: !467, size: 32, offset: 256)
!12309 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_y", scope: !12298, file: !12297, line: 84, baseType: !467, size: 32, offset: 288)
!12310 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_fit", scope: !12298, file: !12297, line: 85, baseType: !352, size: 32, offset: 320)
!12311 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !12298, file: !12297, line: 88, baseType: !467, size: 32, offset: 352)
!12312 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !12298, file: !12297, line: 89, baseType: !467, size: 32, offset: 384)
!12313 = !DIDerivedType(tag: DW_TAG_member, name: "use_fields", scope: !12298, file: !12297, line: 92, baseType: !352, size: 32, offset: 416)
!12314 = !DIDerivedType(tag: DW_TAG_member, name: "field_second", scope: !12298, file: !12297, line: 93, baseType: !352, size: 32, offset: 448)
!12315 = !DIDerivedType(tag: DW_TAG_member, name: "field_odd", scope: !12298, file: !12297, line: 94, baseType: !352, size: 32, offset: 480)
!12316 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !12298, file: !12297, line: 97, baseType: !467, size: 32, offset: 512)
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !12298, file: !12297, line: 98, baseType: !467, size: 32, offset: 544)
!12318 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !12298, file: !12297, line: 99, baseType: !467, size: 32, offset: 576)
!12319 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !12298, file: !12297, line: 100, baseType: !1611, size: 128, offset: 608)
!12320 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !12298, file: !12297, line: 103, baseType: !480, size: 512, offset: 736)
!12321 = !DILocation(line: 3977, column: 17, scope: !12295)
!12322 = !DILocalVariable(name: "width", scope: !12295, file: !3, line: 3978, type: !352)
!12323 = !DILocation(line: 3978, column: 8, scope: !12295)
!12324 = !DILocalVariable(name: "height", scope: !12295, file: !3, line: 3978, type: !352)
!12325 = !DILocation(line: 3978, column: 15, scope: !12295)
!12326 = !DILocalVariable(name: "pos", scope: !12295, file: !3, line: 3979, type: !1295)
!12327 = !DILocation(line: 3979, column: 10, scope: !12295)
!12328 = !DILocalVariable(name: "rmat", scope: !12295, file: !3, line: 3979, type: !480)
!12329 = !DILocation(line: 3979, column: 18, scope: !12295)
!12330 = !DILocation(line: 3981, column: 27, scope: !12295)
!12331 = !DILocation(line: 3981, column: 4, scope: !12295)
!12332 = !DILocation(line: 3983, column: 37, scope: !12295)
!12333 = !DILocation(line: 3983, column: 44, scope: !12295)
!12334 = !DILocation(line: 3983, column: 13, scope: !12295)
!12335 = !DILocation(line: 3983, column: 11, scope: !12295)
!12336 = !DILocation(line: 3985, column: 16, scope: !12295)
!12337 = !DILocation(line: 3985, column: 21, scope: !12295)
!12338 = !DILocation(line: 3985, column: 29, scope: !12295)
!12339 = !DILocation(line: 3985, column: 34, scope: !12295)
!12340 = !DILocation(line: 3985, column: 41, scope: !12295)
!12341 = !DILocation(line: 3985, column: 4, scope: !12295)
!12342 = !DILocation(line: 3987, column: 8, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 3987, column: 8)
!12344 = !DILocation(line: 3987, column: 14, scope: !12343)
!12345 = !DILocation(line: 3987, column: 19, scope: !12343)
!12346 = !DILocation(line: 3987, column: 8, scope: !12295)
!12347 = !DILocation(line: 3989, column: 15, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 3987, column: 51)
!12349 = !DILocation(line: 3989, column: 5, scope: !12348)
!12350 = !DILocation(line: 3989, column: 12, scope: !12348)
!12351 = !DILocation(line: 3990, column: 15, scope: !12348)
!12352 = !DILocation(line: 3990, column: 5, scope: !12348)
!12353 = !DILocation(line: 3990, column: 12, scope: !12348)
!12354 = !DILocation(line: 3992, column: 31, scope: !12348)
!12355 = !DILocation(line: 3992, column: 41, scope: !12348)
!12356 = !DILocation(line: 3992, column: 46, scope: !12348)
!12357 = !DILocation(line: 3992, column: 5, scope: !12348)
!12358 = !DILocation(line: 3995, column: 15, scope: !12348)
!12359 = !DILocation(line: 3995, column: 5, scope: !12348)
!12360 = !DILocation(line: 3995, column: 12, scope: !12348)
!12361 = !DILocation(line: 3996, column: 15, scope: !12348)
!12362 = !DILocation(line: 3996, column: 5, scope: !12348)
!12363 = !DILocation(line: 3996, column: 12, scope: !12348)
!12364 = !DILocation(line: 3997, column: 4, scope: !12348)
!12365 = !DILocation(line: 4000, column: 8, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 4000, column: 8)
!12367 = !DILocation(line: 4000, column: 14, scope: !12366)
!12368 = !DILocation(line: 4000, column: 27, scope: !12366)
!12369 = !DILocation(line: 4000, column: 8, scope: !12295)
!12370 = !DILocalVariable(name: "w_src", scope: !12371, file: !3, line: 4001, type: !467)
!12371 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 4000, column: 57)
!12372 = !DILocation(line: 4001, column: 11, scope: !12371)
!12373 = !DILocalVariable(name: "h_src", scope: !12371, file: !3, line: 4001, type: !467)
!12374 = !DILocation(line: 4001, column: 18, scope: !12371)
!12375 = !DILocalVariable(name: "w_dst", scope: !12371, file: !3, line: 4001, type: !467)
!12376 = !DILocation(line: 4001, column: 25, scope: !12371)
!12377 = !DILocalVariable(name: "h_dst", scope: !12371, file: !3, line: 4001, type: !467)
!12378 = !DILocation(line: 4001, column: 32, scope: !12371)
!12379 = !DILocalVariable(name: "asp_src", scope: !12371, file: !3, line: 4001, type: !467)
!12380 = !DILocation(line: 4001, column: 39, scope: !12371)
!12381 = !DILocalVariable(name: "asp_dst", scope: !12371, file: !3, line: 4001, type: !467)
!12382 = !DILocation(line: 4001, column: 48, scope: !12371)
!12383 = !DILocation(line: 4004, column: 13, scope: !12371)
!12384 = !DILocation(line: 4004, column: 21, scope: !12371)
!12385 = !DILocation(line: 4004, column: 27, scope: !12371)
!12386 = !DILocation(line: 4004, column: 19, scope: !12371)
!12387 = !DILocation(line: 4004, column: 11, scope: !12371)
!12388 = !DILocation(line: 4005, column: 13, scope: !12371)
!12389 = !DILocation(line: 4005, column: 22, scope: !12371)
!12390 = !DILocation(line: 4005, column: 28, scope: !12371)
!12391 = !DILocation(line: 4005, column: 20, scope: !12371)
!12392 = !DILocation(line: 4005, column: 11, scope: !12371)
!12393 = !DILocation(line: 4007, column: 13, scope: !12371)
!12394 = !DILocation(line: 4007, column: 20, scope: !12371)
!12395 = !DILocation(line: 4007, column: 22, scope: !12371)
!12396 = !DILocation(line: 4007, column: 29, scope: !12371)
!12397 = !DILocation(line: 4007, column: 36, scope: !12371)
!12398 = !DILocation(line: 4007, column: 38, scope: !12371)
!12399 = !DILocation(line: 4007, column: 27, scope: !12371)
!12400 = !DILocation(line: 4007, column: 11, scope: !12371)
!12401 = !DILocation(line: 4008, column: 13, scope: !12371)
!12402 = !DILocation(line: 4008, column: 20, scope: !12371)
!12403 = !DILocation(line: 4008, column: 22, scope: !12371)
!12404 = !DILocation(line: 4008, column: 29, scope: !12371)
!12405 = !DILocation(line: 4008, column: 36, scope: !12371)
!12406 = !DILocation(line: 4008, column: 38, scope: !12371)
!12407 = !DILocation(line: 4008, column: 27, scope: !12371)
!12408 = !DILocation(line: 4008, column: 11, scope: !12371)
!12409 = !DILocation(line: 4010, column: 15, scope: !12371)
!12410 = !DILocation(line: 4010, column: 23, scope: !12371)
!12411 = !DILocation(line: 4010, column: 21, scope: !12371)
!12412 = !DILocation(line: 4010, column: 13, scope: !12371)
!12413 = !DILocation(line: 4011, column: 15, scope: !12371)
!12414 = !DILocation(line: 4011, column: 23, scope: !12371)
!12415 = !DILocation(line: 4011, column: 21, scope: !12371)
!12416 = !DILocation(line: 4011, column: 13, scope: !12371)
!12417 = !DILocation(line: 4013, column: 15, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12371, file: !3, line: 4013, column: 9)
!12419 = !DILocation(line: 4013, column: 25, scope: !12418)
!12420 = !DILocation(line: 4013, column: 23, scope: !12418)
!12421 = !DILocation(line: 4013, column: 9, scope: !12418)
!12422 = !DILocation(line: 4013, column: 34, scope: !12418)
!12423 = !DILocation(line: 4013, column: 9, scope: !12371)
!12424 = !DILocation(line: 4014, column: 11, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12426, file: !3, line: 4014, column: 10)
!12426 = distinct !DILexicalBlock(scope: !12418, file: !3, line: 4013, column: 50)
!12427 = !DILocation(line: 4014, column: 21, scope: !12425)
!12428 = !DILocation(line: 4014, column: 19, scope: !12425)
!12429 = !DILocation(line: 4014, column: 34, scope: !12425)
!12430 = !DILocation(line: 4014, column: 40, scope: !12425)
!12431 = !DILocation(line: 4014, column: 53, scope: !12425)
!12432 = !DILocation(line: 4014, column: 30, scope: !12425)
!12433 = !DILocation(line: 4014, column: 10, scope: !12426)
!12434 = !DILocalVariable(name: "div", scope: !12435, file: !3, line: 4016, type: !467)
!12435 = distinct !DILexicalBlock(scope: !12425, file: !3, line: 4014, column: 81)
!12436 = !DILocation(line: 4016, column: 13, scope: !12435)
!12437 = !DILocation(line: 4016, column: 19, scope: !12435)
!12438 = !DILocation(line: 4016, column: 29, scope: !12435)
!12439 = !DILocation(line: 4016, column: 27, scope: !12435)
!12440 = !DILocalVariable(name: "cent", scope: !12435, file: !3, line: 4017, type: !467)
!12441 = !DILocation(line: 4017, column: 13, scope: !12435)
!12442 = !DILocation(line: 4017, column: 28, scope: !12435)
!12443 = !DILocation(line: 4017, column: 20, scope: !12435)
!12444 = !DILocation(line: 4017, column: 34, scope: !12435)
!12445 = !DILocation(line: 4019, column: 19, scope: !12435)
!12446 = !DILocation(line: 4019, column: 28, scope: !12435)
!12447 = !DILocation(line: 4019, column: 26, scope: !12435)
!12448 = !DILocation(line: 4019, column: 36, scope: !12435)
!12449 = !DILocation(line: 4019, column: 34, scope: !12435)
!12450 = !DILocation(line: 4019, column: 44, scope: !12435)
!12451 = !DILocation(line: 4019, column: 42, scope: !12435)
!12452 = !DILocation(line: 4019, column: 51, scope: !12435)
!12453 = !DILocation(line: 4019, column: 49, scope: !12435)
!12454 = !DILocation(line: 4019, column: 59, scope: !12435)
!12455 = !DILocation(line: 4019, column: 57, scope: !12435)
!12456 = !DILocation(line: 4019, column: 7, scope: !12435)
!12457 = !DILocation(line: 4019, column: 14, scope: !12435)
!12458 = !DILocation(line: 4020, column: 6, scope: !12435)
!12459 = !DILocalVariable(name: "div", scope: !12460, file: !3, line: 4023, type: !467)
!12460 = distinct !DILexicalBlock(scope: !12425, file: !3, line: 4021, column: 11)
!12461 = !DILocation(line: 4023, column: 13, scope: !12460)
!12462 = !DILocation(line: 4023, column: 19, scope: !12460)
!12463 = !DILocation(line: 4023, column: 29, scope: !12460)
!12464 = !DILocation(line: 4023, column: 27, scope: !12460)
!12465 = !DILocalVariable(name: "cent", scope: !12460, file: !3, line: 4024, type: !467)
!12466 = !DILocation(line: 4024, column: 13, scope: !12460)
!12467 = !DILocation(line: 4024, column: 28, scope: !12460)
!12468 = !DILocation(line: 4024, column: 20, scope: !12460)
!12469 = !DILocation(line: 4024, column: 35, scope: !12460)
!12470 = !DILocation(line: 4026, column: 19, scope: !12460)
!12471 = !DILocation(line: 4026, column: 28, scope: !12460)
!12472 = !DILocation(line: 4026, column: 26, scope: !12460)
!12473 = !DILocation(line: 4026, column: 37, scope: !12460)
!12474 = !DILocation(line: 4026, column: 35, scope: !12460)
!12475 = !DILocation(line: 4026, column: 45, scope: !12460)
!12476 = !DILocation(line: 4026, column: 43, scope: !12460)
!12477 = !DILocation(line: 4026, column: 52, scope: !12460)
!12478 = !DILocation(line: 4026, column: 50, scope: !12460)
!12479 = !DILocation(line: 4026, column: 60, scope: !12460)
!12480 = !DILocation(line: 4026, column: 58, scope: !12460)
!12481 = !DILocation(line: 4026, column: 7, scope: !12460)
!12482 = !DILocation(line: 4026, column: 14, scope: !12460)
!12483 = !DILocation(line: 4028, column: 5, scope: !12426)
!12484 = !DILocation(line: 4029, column: 4, scope: !12371)
!12485 = !DILocation(line: 4031, column: 4, scope: !12295)
!12486 = !DILocation(line: 4032, column: 43, scope: !12295)
!12487 = !DILocation(line: 4032, column: 4, scope: !12295)
!12488 = !DILocation(line: 4034, column: 15, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 4034, column: 8)
!12490 = !DILocation(line: 4034, column: 8, scope: !12489)
!12491 = !DILocation(line: 4034, column: 8, scope: !12295)
!12492 = !DILocation(line: 4035, column: 21, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12489, file: !3, line: 4034, column: 25)
!12494 = !DILocation(line: 4035, column: 36, scope: !12493)
!12495 = !DILocation(line: 4035, column: 43, scope: !12493)
!12496 = !DILocation(line: 4035, column: 59, scope: !12493)
!12497 = !DILocation(line: 4035, column: 50, scope: !12493)
!12498 = !DILocation(line: 4035, column: 33, scope: !12493)
!12499 = !DILocation(line: 4035, column: 5, scope: !12493)
!12500 = !DILocation(line: 4035, column: 12, scope: !12493)
!12501 = !DILocation(line: 4036, column: 21, scope: !12493)
!12502 = !DILocation(line: 4036, column: 36, scope: !12493)
!12503 = !DILocation(line: 4036, column: 43, scope: !12493)
!12504 = !DILocation(line: 4036, column: 59, scope: !12493)
!12505 = !DILocation(line: 4036, column: 50, scope: !12493)
!12506 = !DILocation(line: 4036, column: 33, scope: !12493)
!12507 = !DILocation(line: 4036, column: 5, scope: !12493)
!12508 = !DILocation(line: 4036, column: 12, scope: !12493)
!12509 = !DILocation(line: 4037, column: 15, scope: !12493)
!12510 = !DILocation(line: 4037, column: 14, scope: !12493)
!12511 = !DILocation(line: 4037, column: 5, scope: !12493)
!12512 = !DILocation(line: 4037, column: 12, scope: !12493)
!12513 = !DILocation(line: 4039, column: 9, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 4039, column: 9)
!12515 = !DILocation(line: 4039, column: 16, scope: !12514)
!12516 = !DILocation(line: 4039, column: 9, scope: !12493)
!12517 = !DILocation(line: 4040, column: 16, scope: !12514)
!12518 = !DILocation(line: 4040, column: 6, scope: !12514)
!12519 = !DILocation(line: 4040, column: 13, scope: !12514)
!12520 = !DILocation(line: 4042, column: 16, scope: !12514)
!12521 = !DILocation(line: 4042, column: 6, scope: !12514)
!12522 = !DILocation(line: 4042, column: 13, scope: !12514)
!12523 = !DILocation(line: 4044, column: 17, scope: !12493)
!12524 = !DILocation(line: 4044, column: 23, scope: !12493)
!12525 = !DILocation(line: 4044, column: 30, scope: !12493)
!12526 = !DILocation(line: 4044, column: 37, scope: !12493)
!12527 = !DILocation(line: 4044, column: 5, scope: !12493)
!12528 = !DILocation(line: 4046, column: 16, scope: !12493)
!12529 = !DILocation(line: 4046, column: 22, scope: !12493)
!12530 = !DILocation(line: 4046, column: 29, scope: !12493)
!12531 = !DILocation(line: 4046, column: 5, scope: !12493)
!12532 = !DILocation(line: 4047, column: 13, scope: !12493)
!12533 = !DILocation(line: 4047, column: 5, scope: !12493)
!12534 = !DILocation(line: 4048, column: 17, scope: !12493)
!12535 = !DILocation(line: 4048, column: 22, scope: !12493)
!12536 = !DILocation(line: 4048, column: 30, scope: !12493)
!12537 = !DILocation(line: 4048, column: 35, scope: !12493)
!12538 = !DILocation(line: 4048, column: 43, scope: !12493)
!12539 = !DILocation(line: 4048, column: 5, scope: !12493)
!12540 = !DILocation(line: 4050, column: 16, scope: !12493)
!12541 = !DILocation(line: 4050, column: 21, scope: !12493)
!12542 = !DILocation(line: 4050, column: 32, scope: !12493)
!12543 = !DILocation(line: 4050, column: 5, scope: !12493)
!12544 = !DILocation(line: 4051, column: 4, scope: !12493)
!12545 = !DILocation(line: 4053, column: 11, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12489, file: !3, line: 4052, column: 9)
!12547 = !DILocation(line: 4053, column: 24, scope: !12546)
!12548 = !DILocation(line: 4053, column: 15, scope: !12546)
!12549 = !DILocation(line: 4053, column: 51, scope: !12546)
!12550 = !DILocation(line: 4053, column: 42, scope: !12546)
!12551 = !DILocation(line: 4053, column: 34, scope: !12546)
!12552 = !DILocation(line: 4053, column: 7, scope: !12546)
!12553 = !DILocation(line: 4055, column: 14, scope: !12546)
!12554 = !DILocation(line: 4055, column: 27, scope: !12546)
!12555 = !DILocation(line: 4055, column: 43, scope: !12546)
!12556 = !DILocation(line: 4055, column: 34, scope: !12546)
!12557 = !DILocation(line: 4055, column: 24, scope: !12546)
!12558 = !DILocation(line: 4055, column: 51, scope: !12546)
!12559 = !DILocation(line: 4055, column: 16, scope: !12546)
!12560 = !DILocation(line: 4055, column: 5, scope: !12546)
!12561 = !DILocation(line: 4055, column: 12, scope: !12546)
!12562 = !DILocation(line: 4056, column: 14, scope: !12546)
!12563 = !DILocation(line: 4056, column: 27, scope: !12546)
!12564 = !DILocation(line: 4056, column: 43, scope: !12546)
!12565 = !DILocation(line: 4056, column: 34, scope: !12546)
!12566 = !DILocation(line: 4056, column: 24, scope: !12546)
!12567 = !DILocation(line: 4056, column: 51, scope: !12546)
!12568 = !DILocation(line: 4056, column: 16, scope: !12546)
!12569 = !DILocation(line: 4056, column: 5, scope: !12546)
!12570 = !DILocation(line: 4056, column: 12, scope: !12546)
!12571 = !DILocation(line: 4057, column: 15, scope: !12546)
!12572 = !DILocation(line: 4057, column: 14, scope: !12546)
!12573 = !DILocation(line: 4057, column: 5, scope: !12546)
!12574 = !DILocation(line: 4057, column: 12, scope: !12546)
!12575 = !DILocation(line: 4059, column: 9, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12546, file: !3, line: 4059, column: 9)
!12577 = !DILocation(line: 4059, column: 16, scope: !12576)
!12578 = !DILocation(line: 4059, column: 9, scope: !12546)
!12579 = !DILocation(line: 4060, column: 16, scope: !12576)
!12580 = !DILocation(line: 4060, column: 6, scope: !12576)
!12581 = !DILocation(line: 4060, column: 13, scope: !12576)
!12582 = !DILocation(line: 4062, column: 16, scope: !12576)
!12583 = !DILocation(line: 4062, column: 6, scope: !12576)
!12584 = !DILocation(line: 4062, column: 13, scope: !12576)
!12585 = !DILocation(line: 4064, column: 17, scope: !12546)
!12586 = !DILocation(line: 4064, column: 23, scope: !12546)
!12587 = !DILocation(line: 4064, column: 30, scope: !12546)
!12588 = !DILocation(line: 4064, column: 37, scope: !12546)
!12589 = !DILocation(line: 4064, column: 5, scope: !12546)
!12590 = !DILocation(line: 4067, column: 16, scope: !12546)
!12591 = !DILocation(line: 4067, column: 22, scope: !12546)
!12592 = !DILocation(line: 4067, column: 29, scope: !12546)
!12593 = !DILocation(line: 4067, column: 5, scope: !12546)
!12594 = !DILocation(line: 4068, column: 13, scope: !12546)
!12595 = !DILocation(line: 4068, column: 5, scope: !12546)
!12596 = !DILocation(line: 4069, column: 17, scope: !12546)
!12597 = !DILocation(line: 4069, column: 22, scope: !12546)
!12598 = !DILocation(line: 4069, column: 30, scope: !12546)
!12599 = !DILocation(line: 4069, column: 35, scope: !12546)
!12600 = !DILocation(line: 4069, column: 43, scope: !12546)
!12601 = !DILocation(line: 4069, column: 5, scope: !12546)
!12602 = !DILocation(line: 4071, column: 16, scope: !12546)
!12603 = !DILocation(line: 4071, column: 21, scope: !12546)
!12604 = !DILocation(line: 4071, column: 32, scope: !12546)
!12605 = !DILocation(line: 4071, column: 5, scope: !12546)
!12606 = !DILocation(line: 4074, column: 8, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 4074, column: 8)
!12608 = !DILocation(line: 4074, column: 14, scope: !12607)
!12609 = !DILocation(line: 4074, column: 8, scope: !12295)
!12610 = !DILocalVariable(name: "depth_ob", scope: !12611, file: !3, line: 4075, type: !2242)
!12611 = distinct !DILexicalBlock(scope: !12607, file: !3, line: 4074, column: 24)
!12612 = !DILocation(line: 4075, column: 13, scope: !12611)
!12613 = !DILocation(line: 4075, column: 24, scope: !12611)
!12614 = !DILocation(line: 4075, column: 30, scope: !12611)
!12615 = !DILocalVariable(name: "target", scope: !12611, file: !3, line: 4077, type: !857)
!12616 = !DILocation(line: 4077, column: 18, scope: !12611)
!12617 = !DILocation(line: 4077, column: 52, scope: !12611)
!12618 = !DILocation(line: 4077, column: 27, scope: !12611)
!12619 = !DILocation(line: 4078, column: 9, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12611, file: !3, line: 4078, column: 9)
!12621 = !DILocation(line: 4078, column: 9, scope: !12611)
!12622 = !DILocalVariable(name: "treeData", scope: !12623, file: !3, line: 4079, type: !10909)
!12623 = distinct !DILexicalBlock(scope: !12620, file: !3, line: 4078, column: 17)
!12624 = !DILocation(line: 4079, column: 22, scope: !12623)
!12625 = !DILocalVariable(name: "hit", scope: !12623, file: !3, line: 4080, type: !10944)
!12626 = !DILocation(line: 4080, column: 20, scope: !12623)
!12627 = !DILocalVariable(name: "ray_start", scope: !12623, file: !3, line: 4081, type: !469)
!12628 = !DILocation(line: 4081, column: 12, scope: !12623)
!12629 = !DILocalVariable(name: "ray_end", scope: !12623, file: !3, line: 4081, type: !469)
!12630 = !DILocation(line: 4081, column: 26, scope: !12623)
!12631 = !DILocalVariable(name: "ray_nor", scope: !12623, file: !3, line: 4081, type: !469)
!12632 = !DILocation(line: 4081, column: 38, scope: !12623)
!12633 = !DILocalVariable(name: "imat", scope: !12623, file: !3, line: 4081, type: !480)
!12634 = !DILocation(line: 4081, column: 50, scope: !12623)
!12635 = !DILocalVariable(name: "result", scope: !12623, file: !3, line: 4082, type: !352)
!12636 = !DILocation(line: 4082, column: 10, scope: !12623)
!12637 = !DILocation(line: 4084, column: 19, scope: !12623)
!12638 = !DILocation(line: 4084, column: 25, scope: !12623)
!12639 = !DILocation(line: 4084, column: 35, scope: !12623)
!12640 = !DILocation(line: 4084, column: 6, scope: !12623)
!12641 = !DILocation(line: 4086, column: 18, scope: !12623)
!12642 = !DILocation(line: 4086, column: 29, scope: !12623)
!12643 = !DILocation(line: 4086, column: 35, scope: !12623)
!12644 = !DILocation(line: 4086, column: 42, scope: !12623)
!12645 = !DILocation(line: 4086, column: 6, scope: !12623)
!12646 = !DILocation(line: 4087, column: 18, scope: !12623)
!12647 = !DILocation(line: 4087, column: 27, scope: !12623)
!12648 = !DILocation(line: 4087, column: 33, scope: !12623)
!12649 = !DILocation(line: 4087, column: 38, scope: !12623)
!12650 = !DILocation(line: 4087, column: 6, scope: !12623)
!12651 = !DILocation(line: 4089, column: 18, scope: !12623)
!12652 = !DILocation(line: 4089, column: 27, scope: !12623)
!12653 = !DILocation(line: 4089, column: 36, scope: !12623)
!12654 = !DILocation(line: 4089, column: 6, scope: !12623)
!12655 = !DILocation(line: 4091, column: 41, scope: !12623)
!12656 = !DILocation(line: 4091, column: 6, scope: !12623)
!12657 = !DILocation(line: 4093, column: 10, scope: !12623)
!12658 = !DILocation(line: 4093, column: 15, scope: !12623)
!12659 = !DILocation(line: 4094, column: 10, scope: !12623)
!12660 = !DILocation(line: 4094, column: 16, scope: !12623)
!12661 = !DILocation(line: 4096, column: 45, scope: !12623)
!12662 = !DILocation(line: 4096, column: 51, scope: !12623)
!12663 = !DILocation(line: 4096, column: 62, scope: !12623)
!12664 = !DILocation(line: 4096, column: 92, scope: !12623)
!12665 = !DILocation(line: 4096, column: 110, scope: !12623)
!12666 = !DILocation(line: 4096, column: 15, scope: !12623)
!12667 = !DILocation(line: 4096, column: 13, scope: !12623)
!12668 = !DILocation(line: 4098, column: 10, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 4098, column: 10)
!12670 = !DILocation(line: 4098, column: 17, scope: !12669)
!12671 = !DILocation(line: 4098, column: 10, scope: !12623)
!12672 = !DILocation(line: 4099, column: 19, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 4098, column: 24)
!12674 = !DILocation(line: 4099, column: 24, scope: !12673)
!12675 = !DILocation(line: 4099, column: 35, scope: !12673)
!12676 = !DILocation(line: 4099, column: 45, scope: !12673)
!12677 = !DILocation(line: 4099, column: 56, scope: !12673)
!12678 = !DILocation(line: 4099, column: 52, scope: !12673)
!12679 = !DILocation(line: 4099, column: 7, scope: !12673)
!12680 = !DILocation(line: 4100, column: 6, scope: !12673)
!12681 = !DILocation(line: 4102, column: 6, scope: !12623)
!12682 = !DILocation(line: 4103, column: 6, scope: !12623)
!12683 = !DILocation(line: 4103, column: 14, scope: !12623)
!12684 = !DILocation(line: 4103, column: 22, scope: !12623)
!12685 = !DILocation(line: 4104, column: 5, scope: !12623)
!12686 = !DILocation(line: 4105, column: 4, scope: !12611)
!12687 = !DILocation(line: 4106, column: 3, scope: !12295)
!12688 = !DILocation(line: 4108, column: 1, scope: !12049)
!12689 = distinct !DISubprogram(name: "add_v2_v2v2", scope: !3158, file: !3158, line: 290, type: !5375, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12690 = !DILocalVariable(name: "r", arg: 1, scope: !12689, file: !3158, line: 290, type: !1080)
!12691 = !DILocation(line: 290, column: 32, scope: !12689)
!12692 = !DILocalVariable(name: "a", arg: 2, scope: !12689, file: !3158, line: 290, type: !1054)
!12693 = !DILocation(line: 290, column: 50, scope: !12689)
!12694 = !DILocalVariable(name: "b", arg: 3, scope: !12689, file: !3158, line: 290, type: !1054)
!12695 = !DILocation(line: 290, column: 68, scope: !12689)
!12696 = !DILocation(line: 292, column: 9, scope: !12689)
!12697 = !DILocation(line: 292, column: 16, scope: !12689)
!12698 = !DILocation(line: 292, column: 14, scope: !12689)
!12699 = !DILocation(line: 292, column: 2, scope: !12689)
!12700 = !DILocation(line: 292, column: 7, scope: !12689)
!12701 = !DILocation(line: 293, column: 9, scope: !12689)
!12702 = !DILocation(line: 293, column: 16, scope: !12689)
!12703 = !DILocation(line: 293, column: 14, scope: !12689)
!12704 = !DILocation(line: 293, column: 2, scope: !12689)
!12705 = !DILocation(line: 293, column: 7, scope: !12689)
!12706 = !DILocation(line: 294, column: 1, scope: !12689)
!12707 = distinct !DISubprogram(name: "camerasolver_id_looper", scope: !3, file: !3, line: 4135, type: !4251, scopeLine: 4136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12708 = !DILocalVariable(name: "con", arg: 1, scope: !12707, file: !3, line: 4135, type: !2708)
!12709 = !DILocation(line: 4135, column: 49, scope: !12707)
!12710 = !DILocalVariable(name: "func", arg: 2, scope: !12707, file: !3, line: 4135, type: !2599)
!12711 = !DILocation(line: 4135, column: 71, scope: !12707)
!12712 = !DILocalVariable(name: "userdata", arg: 3, scope: !12707, file: !3, line: 4135, type: !431)
!12713 = !DILocation(line: 4135, column: 83, scope: !12707)
!12714 = !DILocalVariable(name: "data", scope: !12707, file: !3, line: 4137, type: !2544)
!12715 = !DILocation(line: 4137, column: 27, scope: !12707)
!12716 = !DILocation(line: 4137, column: 34, scope: !12707)
!12717 = !DILocation(line: 4137, column: 39, scope: !12707)
!12718 = !DILocation(line: 4139, column: 2, scope: !12707)
!12719 = !DILocation(line: 4139, column: 7, scope: !12707)
!12720 = !DILocation(line: 4139, column: 20, scope: !12707)
!12721 = !DILocation(line: 4139, column: 26, scope: !12707)
!12722 = !DILocation(line: 4139, column: 12, scope: !12707)
!12723 = !DILocation(line: 4139, column: 38, scope: !12707)
!12724 = !DILocation(line: 4140, column: 1, scope: !12707)
!12725 = distinct !DISubprogram(name: "camerasolver_new_data", scope: !3, file: !3, line: 4127, type: !2610, scopeLine: 4128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12726 = !DILocalVariable(name: "cdata", arg: 1, scope: !12725, file: !3, line: 4127, type: !431)
!12727 = !DILocation(line: 4127, column: 41, scope: !12725)
!12728 = !DILocalVariable(name: "data", scope: !12725, file: !3, line: 4129, type: !2544)
!12729 = !DILocation(line: 4129, column: 27, scope: !12725)
!12730 = !DILocation(line: 4129, column: 61, scope: !12725)
!12731 = !DILocation(line: 4129, column: 34, scope: !12725)
!12732 = !DILocation(line: 4131, column: 2, scope: !12725)
!12733 = !DILocation(line: 4131, column: 8, scope: !12725)
!12734 = !DILocation(line: 4131, column: 13, scope: !12725)
!12735 = !DILocation(line: 4132, column: 2, scope: !12725)
!12736 = !DILocation(line: 4132, column: 8, scope: !12725)
!12737 = !DILocation(line: 4132, column: 13, scope: !12725)
!12738 = !DILocation(line: 4133, column: 1, scope: !12725)
!12739 = distinct !DISubprogram(name: "camerasolver_evaluate", scope: !3, file: !3, line: 4142, type: !4392, scopeLine: 4143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12740 = !DILocalVariable(name: "con", arg: 1, scope: !12739, file: !3, line: 4142, type: !2708)
!12741 = !DILocation(line: 4142, column: 48, scope: !12739)
!12742 = !DILocalVariable(name: "cob", arg: 2, scope: !12739, file: !3, line: 4142, type: !2733)
!12743 = !DILocation(line: 4142, column: 68, scope: !12739)
!12744 = !DILocalVariable(name: "UNUSED_targets", arg: 3, scope: !12739, file: !3, line: 4142, type: !1287)
!12745 = !DILocation(line: 4142, column: 83, scope: !12739)
!12746 = !DILocalVariable(name: "scene", scope: !12739, file: !3, line: 4144, type: !2722)
!12747 = !DILocation(line: 4144, column: 9, scope: !12739)
!12748 = !DILocation(line: 4144, column: 17, scope: !12739)
!12749 = !DILocation(line: 4144, column: 22, scope: !12739)
!12750 = !DILocalVariable(name: "data", scope: !12739, file: !3, line: 4145, type: !2544)
!12751 = !DILocation(line: 4145, column: 27, scope: !12739)
!12752 = !DILocation(line: 4145, column: 34, scope: !12739)
!12753 = !DILocation(line: 4145, column: 39, scope: !12739)
!12754 = !DILocalVariable(name: "clip", scope: !12739, file: !3, line: 4146, type: !12065)
!12755 = !DILocation(line: 4146, column: 13, scope: !12739)
!12756 = !DILocation(line: 4146, column: 20, scope: !12739)
!12757 = !DILocation(line: 4146, column: 26, scope: !12739)
!12758 = !DILocation(line: 4148, column: 6, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 4148, column: 6)
!12760 = !DILocation(line: 4148, column: 12, scope: !12759)
!12761 = !DILocation(line: 4148, column: 17, scope: !12759)
!12762 = !DILocation(line: 4148, column: 6, scope: !12739)
!12763 = !DILocation(line: 4149, column: 10, scope: !12759)
!12764 = !DILocation(line: 4149, column: 17, scope: !12759)
!12765 = !DILocation(line: 4149, column: 8, scope: !12759)
!12766 = !DILocation(line: 4149, column: 3, scope: !12759)
!12767 = !DILocation(line: 4151, column: 6, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 4151, column: 6)
!12769 = !DILocation(line: 4151, column: 6, scope: !12739)
!12770 = !DILocalVariable(name: "mat", scope: !12771, file: !3, line: 4152, type: !480)
!12771 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 4151, column: 12)
!12772 = !DILocation(line: 4152, column: 9, scope: !12771)
!12773 = !DILocalVariable(name: "obmat", scope: !12771, file: !3, line: 4152, type: !480)
!12774 = !DILocation(line: 4152, column: 20, scope: !12771)
!12775 = !DILocalVariable(name: "tracking", scope: !12771, file: !3, line: 4153, type: !12071)
!12776 = !DILocation(line: 4153, column: 18, scope: !12771)
!12777 = !DILocation(line: 4153, column: 30, scope: !12771)
!12778 = !DILocation(line: 4153, column: 36, scope: !12771)
!12779 = !DILocalVariable(name: "object", scope: !12771, file: !3, line: 4154, type: !12077)
!12780 = !DILocation(line: 4154, column: 24, scope: !12771)
!12781 = !DILocation(line: 4154, column: 64, scope: !12771)
!12782 = !DILocation(line: 4154, column: 33, scope: !12771)
!12783 = !DILocalVariable(name: "framenr", scope: !12771, file: !3, line: 4155, type: !352)
!12784 = !DILocation(line: 4155, column: 7, scope: !12771)
!12785 = !DILocation(line: 4155, column: 57, scope: !12771)
!12786 = !DILocation(line: 4155, column: 63, scope: !12771)
!12787 = !DILocation(line: 4155, column: 70, scope: !12771)
!12788 = !DILocation(line: 4155, column: 72, scope: !12771)
!12789 = !DILocation(line: 4155, column: 17, scope: !12771)
!12790 = !DILocation(line: 4157, column: 53, scope: !12771)
!12791 = !DILocation(line: 4157, column: 63, scope: !12771)
!12792 = !DILocation(line: 4157, column: 71, scope: !12771)
!12793 = !DILocation(line: 4157, column: 80, scope: !12771)
!12794 = !DILocation(line: 4157, column: 3, scope: !12771)
!12795 = !DILocation(line: 4159, column: 14, scope: !12771)
!12796 = !DILocation(line: 4159, column: 21, scope: !12771)
!12797 = !DILocation(line: 4159, column: 26, scope: !12771)
!12798 = !DILocation(line: 4159, column: 3, scope: !12771)
!12799 = !DILocation(line: 4161, column: 15, scope: !12771)
!12800 = !DILocation(line: 4161, column: 20, scope: !12771)
!12801 = !DILocation(line: 4161, column: 28, scope: !12771)
!12802 = !DILocation(line: 4161, column: 35, scope: !12771)
!12803 = !DILocation(line: 4161, column: 3, scope: !12771)
!12804 = !DILocation(line: 4162, column: 2, scope: !12771)
!12805 = !DILocation(line: 4163, column: 1, scope: !12739)
!12806 = distinct !DISubprogram(name: "objectsolver_id_looper", scope: !3, file: !3, line: 4191, type: !4251, scopeLine: 4192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12807 = !DILocalVariable(name: "con", arg: 1, scope: !12806, file: !3, line: 4191, type: !2708)
!12808 = !DILocation(line: 4191, column: 49, scope: !12806)
!12809 = !DILocalVariable(name: "func", arg: 2, scope: !12806, file: !3, line: 4191, type: !2599)
!12810 = !DILocation(line: 4191, column: 71, scope: !12806)
!12811 = !DILocalVariable(name: "userdata", arg: 3, scope: !12806, file: !3, line: 4191, type: !431)
!12812 = !DILocation(line: 4191, column: 83, scope: !12806)
!12813 = !DILocalVariable(name: "data", scope: !12806, file: !3, line: 4193, type: !2551)
!12814 = !DILocation(line: 4193, column: 27, scope: !12806)
!12815 = !DILocation(line: 4193, column: 34, scope: !12806)
!12816 = !DILocation(line: 4193, column: 39, scope: !12806)
!12817 = !DILocation(line: 4195, column: 2, scope: !12806)
!12818 = !DILocation(line: 4195, column: 7, scope: !12806)
!12819 = !DILocation(line: 4195, column: 20, scope: !12806)
!12820 = !DILocation(line: 4195, column: 26, scope: !12806)
!12821 = !DILocation(line: 4195, column: 12, scope: !12806)
!12822 = !DILocation(line: 4195, column: 39, scope: !12806)
!12823 = !DILocation(line: 4196, column: 2, scope: !12806)
!12824 = !DILocation(line: 4196, column: 7, scope: !12806)
!12825 = !DILocation(line: 4196, column: 20, scope: !12806)
!12826 = !DILocation(line: 4196, column: 26, scope: !12806)
!12827 = !DILocation(line: 4196, column: 12, scope: !12806)
!12828 = !DILocation(line: 4196, column: 41, scope: !12806)
!12829 = !DILocation(line: 4197, column: 1, scope: !12806)
!12830 = distinct !DISubprogram(name: "objectsolver_new_data", scope: !3, file: !3, line: 4182, type: !2610, scopeLine: 4183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12831 = !DILocalVariable(name: "cdata", arg: 1, scope: !12830, file: !3, line: 4182, type: !431)
!12832 = !DILocation(line: 4182, column: 41, scope: !12830)
!12833 = !DILocalVariable(name: "data", scope: !12830, file: !3, line: 4184, type: !2551)
!12834 = !DILocation(line: 4184, column: 27, scope: !12830)
!12835 = !DILocation(line: 4184, column: 61, scope: !12830)
!12836 = !DILocation(line: 4184, column: 34, scope: !12830)
!12837 = !DILocation(line: 4186, column: 2, scope: !12830)
!12838 = !DILocation(line: 4186, column: 8, scope: !12830)
!12839 = !DILocation(line: 4186, column: 13, scope: !12830)
!12840 = !DILocation(line: 4187, column: 2, scope: !12830)
!12841 = !DILocation(line: 4187, column: 8, scope: !12830)
!12842 = !DILocation(line: 4187, column: 13, scope: !12830)
!12843 = !DILocation(line: 4188, column: 10, scope: !12830)
!12844 = !DILocation(line: 4188, column: 16, scope: !12830)
!12845 = !DILocation(line: 4188, column: 2, scope: !12830)
!12846 = !DILocation(line: 4189, column: 1, scope: !12830)
!12847 = distinct !DISubprogram(name: "objectsolver_evaluate", scope: !3, file: !3, line: 4199, type: !4392, scopeLine: 4200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12848 = !DILocalVariable(name: "con", arg: 1, scope: !12847, file: !3, line: 4199, type: !2708)
!12849 = !DILocation(line: 4199, column: 48, scope: !12847)
!12850 = !DILocalVariable(name: "cob", arg: 2, scope: !12847, file: !3, line: 4199, type: !2733)
!12851 = !DILocation(line: 4199, column: 68, scope: !12847)
!12852 = !DILocalVariable(name: "UNUSED_targets", arg: 3, scope: !12847, file: !3, line: 4199, type: !1287)
!12853 = !DILocation(line: 4199, column: 83, scope: !12847)
!12854 = !DILocalVariable(name: "scene", scope: !12847, file: !3, line: 4201, type: !2722)
!12855 = !DILocation(line: 4201, column: 9, scope: !12847)
!12856 = !DILocation(line: 4201, column: 17, scope: !12847)
!12857 = !DILocation(line: 4201, column: 22, scope: !12847)
!12858 = !DILocalVariable(name: "data", scope: !12847, file: !3, line: 4202, type: !2551)
!12859 = !DILocation(line: 4202, column: 27, scope: !12847)
!12860 = !DILocation(line: 4202, column: 34, scope: !12847)
!12861 = !DILocation(line: 4202, column: 39, scope: !12847)
!12862 = !DILocalVariable(name: "clip", scope: !12847, file: !3, line: 4203, type: !12065)
!12863 = !DILocation(line: 4203, column: 13, scope: !12847)
!12864 = !DILocation(line: 4203, column: 20, scope: !12847)
!12865 = !DILocation(line: 4203, column: 26, scope: !12847)
!12866 = !DILocalVariable(name: "camob", scope: !12847, file: !3, line: 4204, type: !2242)
!12867 = !DILocation(line: 4204, column: 10, scope: !12847)
!12868 = !DILocation(line: 4204, column: 18, scope: !12847)
!12869 = !DILocation(line: 4204, column: 24, scope: !12847)
!12870 = !DILocation(line: 4204, column: 33, scope: !12847)
!12871 = !DILocation(line: 4204, column: 39, scope: !12847)
!12872 = !DILocation(line: 4204, column: 48, scope: !12847)
!12873 = !DILocation(line: 4204, column: 55, scope: !12847)
!12874 = !DILocation(line: 4206, column: 6, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12847, file: !3, line: 4206, column: 6)
!12876 = !DILocation(line: 4206, column: 12, scope: !12875)
!12877 = !DILocation(line: 4206, column: 17, scope: !12875)
!12878 = !DILocation(line: 4206, column: 6, scope: !12847)
!12879 = !DILocation(line: 4207, column: 10, scope: !12875)
!12880 = !DILocation(line: 4207, column: 17, scope: !12875)
!12881 = !DILocation(line: 4207, column: 8, scope: !12875)
!12882 = !DILocation(line: 4207, column: 3, scope: !12875)
!12883 = !DILocation(line: 4209, column: 7, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12847, file: !3, line: 4209, column: 6)
!12885 = !DILocation(line: 4209, column: 13, scope: !12884)
!12886 = !DILocation(line: 4209, column: 17, scope: !12884)
!12887 = !DILocation(line: 4209, column: 6, scope: !12847)
!12888 = !DILocation(line: 4210, column: 3, scope: !12884)
!12889 = !DILocation(line: 4212, column: 6, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12847, file: !3, line: 4212, column: 6)
!12891 = !DILocation(line: 4212, column: 6, scope: !12847)
!12892 = !DILocalVariable(name: "tracking", scope: !12893, file: !3, line: 4213, type: !12071)
!12893 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 4212, column: 12)
!12894 = !DILocation(line: 4213, column: 18, scope: !12893)
!12895 = !DILocation(line: 4213, column: 30, scope: !12893)
!12896 = !DILocation(line: 4213, column: 36, scope: !12893)
!12897 = !DILocalVariable(name: "object", scope: !12893, file: !3, line: 4214, type: !12077)
!12898 = !DILocation(line: 4214, column: 24, scope: !12893)
!12899 = !DILocation(line: 4216, column: 42, scope: !12893)
!12900 = !DILocation(line: 4216, column: 52, scope: !12893)
!12901 = !DILocation(line: 4216, column: 58, scope: !12893)
!12902 = !DILocation(line: 4216, column: 12, scope: !12893)
!12903 = !DILocation(line: 4216, column: 10, scope: !12893)
!12904 = !DILocation(line: 4218, column: 7, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12893, file: !3, line: 4218, column: 7)
!12906 = !DILocation(line: 4218, column: 7, scope: !12893)
!12907 = !DILocalVariable(name: "mat", scope: !12908, file: !3, line: 4219, type: !480)
!12908 = distinct !DILexicalBlock(scope: !12905, file: !3, line: 4218, column: 15)
!12909 = !DILocation(line: 4219, column: 10, scope: !12908)
!12910 = !DILocalVariable(name: "obmat", scope: !12908, file: !3, line: 4219, type: !480)
!12911 = !DILocation(line: 4219, column: 21, scope: !12908)
!12912 = !DILocalVariable(name: "imat", scope: !12908, file: !3, line: 4219, type: !480)
!12913 = !DILocation(line: 4219, column: 34, scope: !12908)
!12914 = !DILocalVariable(name: "cammat", scope: !12908, file: !3, line: 4219, type: !480)
!12915 = !DILocation(line: 4219, column: 46, scope: !12908)
!12916 = !DILocalVariable(name: "camimat", scope: !12908, file: !3, line: 4219, type: !480)
!12917 = !DILocation(line: 4219, column: 60, scope: !12908)
!12918 = !DILocalVariable(name: "parmat", scope: !12908, file: !3, line: 4219, type: !480)
!12919 = !DILocation(line: 4219, column: 75, scope: !12908)
!12920 = !DILocalVariable(name: "framenr", scope: !12908, file: !3, line: 4220, type: !352)
!12921 = !DILocation(line: 4220, column: 8, scope: !12908)
!12922 = !DILocation(line: 4220, column: 58, scope: !12908)
!12923 = !DILocation(line: 4220, column: 64, scope: !12908)
!12924 = !DILocation(line: 4220, column: 71, scope: !12908)
!12925 = !DILocation(line: 4220, column: 73, scope: !12908)
!12926 = !DILocation(line: 4220, column: 18, scope: !12908)
!12927 = !DILocation(line: 4222, column: 34, scope: !12908)
!12928 = !DILocation(line: 4222, column: 41, scope: !12908)
!12929 = !DILocation(line: 4222, column: 48, scope: !12908)
!12930 = !DILocation(line: 4222, column: 4, scope: !12908)
!12931 = !DILocation(line: 4224, column: 54, scope: !12908)
!12932 = !DILocation(line: 4224, column: 64, scope: !12908)
!12933 = !DILocation(line: 4224, column: 72, scope: !12908)
!12934 = !DILocation(line: 4224, column: 81, scope: !12908)
!12935 = !DILocation(line: 4224, column: 4, scope: !12908)
!12936 = !DILocation(line: 4226, column: 17, scope: !12908)
!12937 = !DILocation(line: 4226, column: 26, scope: !12908)
!12938 = !DILocation(line: 4226, column: 4, scope: !12908)
!12939 = !DILocation(line: 4227, column: 16, scope: !12908)
!12940 = !DILocation(line: 4227, column: 24, scope: !12908)
!12941 = !DILocation(line: 4227, column: 32, scope: !12908)
!12942 = !DILocation(line: 4227, column: 38, scope: !12908)
!12943 = !DILocation(line: 4227, column: 4, scope: !12908)
!12944 = !DILocation(line: 4229, column: 15, scope: !12908)
!12945 = !DILocation(line: 4229, column: 23, scope: !12908)
!12946 = !DILocation(line: 4229, column: 30, scope: !12908)
!12947 = !DILocation(line: 4229, column: 4, scope: !12908)
!12948 = !DILocation(line: 4230, column: 15, scope: !12908)
!12949 = !DILocation(line: 4230, column: 22, scope: !12908)
!12950 = !DILocation(line: 4230, column: 27, scope: !12908)
!12951 = !DILocation(line: 4230, column: 4, scope: !12908)
!12952 = !DILocation(line: 4232, column: 17, scope: !12908)
!12953 = !DILocation(line: 4232, column: 23, scope: !12908)
!12954 = !DILocation(line: 4232, column: 4, scope: !12908)
!12955 = !DILocation(line: 4234, column: 4, scope: !12908)
!12956 = !DILocation(line: 4235, column: 3, scope: !12908)
!12957 = !DILocation(line: 4236, column: 2, scope: !12893)
!12958 = !DILocation(line: 4237, column: 1, scope: !12847)
!12959 = distinct !DISubprogram(name: "add_new_constraint_internal", scope: !3, file: !3, line: 4401, type: !12960, scopeLine: 4402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2710)
!12960 = !DISubroutineType(types: !12961)
!12961 = !{!2708, !3352, !420}
!12962 = !DILocalVariable(name: "name", arg: 1, scope: !12959, file: !3, line: 4401, type: !3352)
!12963 = !DILocation(line: 4401, column: 61, scope: !12959)
!12964 = !DILocalVariable(name: "type", arg: 2, scope: !12959, file: !3, line: 4401, type: !420)
!12965 = !DILocation(line: 4401, column: 73, scope: !12959)
!12966 = !DILocalVariable(name: "con", scope: !12959, file: !3, line: 4403, type: !2708)
!12967 = !DILocation(line: 4403, column: 15, scope: !12959)
!12968 = !DILocation(line: 4403, column: 21, scope: !12959)
!12969 = !DILocalVariable(name: "cti", scope: !12959, file: !3, line: 4404, type: !2565)
!12970 = !DILocation(line: 4404, column: 23, scope: !12959)
!12971 = !DILocation(line: 4404, column: 63, scope: !12959)
!12972 = !DILocation(line: 4404, column: 29, scope: !12959)
!12973 = !DILocalVariable(name: "newName", scope: !12959, file: !3, line: 4405, type: !3352)
!12974 = !DILocation(line: 4405, column: 14, scope: !12959)
!12975 = !DILocation(line: 4408, column: 14, scope: !12959)
!12976 = !DILocation(line: 4408, column: 2, scope: !12959)
!12977 = !DILocation(line: 4408, column: 7, scope: !12959)
!12978 = !DILocation(line: 4408, column: 12, scope: !12959)
!12979 = !DILocation(line: 4409, column: 2, scope: !12959)
!12980 = !DILocation(line: 4409, column: 7, scope: !12959)
!12981 = !DILocation(line: 4409, column: 12, scope: !12959)
!12982 = !DILocation(line: 4410, column: 2, scope: !12959)
!12983 = !DILocation(line: 4410, column: 7, scope: !12959)
!12984 = !DILocation(line: 4410, column: 15, scope: !12959)
!12985 = !DILocation(line: 4413, column: 6, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12959, file: !3, line: 4413, column: 6)
!12987 = !DILocation(line: 4413, column: 6, scope: !12959)
!12988 = !DILocation(line: 4415, column: 15, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12986, file: !3, line: 4413, column: 11)
!12990 = !DILocation(line: 4415, column: 27, scope: !12989)
!12991 = !DILocation(line: 4415, column: 32, scope: !12989)
!12992 = !DILocation(line: 4415, column: 38, scope: !12989)
!12993 = !DILocation(line: 4415, column: 43, scope: !12989)
!12994 = !DILocation(line: 4415, column: 3, scope: !12989)
!12995 = !DILocation(line: 4415, column: 8, scope: !12989)
!12996 = !DILocation(line: 4415, column: 13, scope: !12989)
!12997 = !DILocation(line: 4418, column: 7, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12989, file: !3, line: 4418, column: 7)
!12999 = !DILocation(line: 4418, column: 12, scope: !12998)
!13000 = !DILocation(line: 4418, column: 7, scope: !12989)
!13001 = !DILocation(line: 4419, column: 4, scope: !12998)
!13002 = !DILocation(line: 4419, column: 9, scope: !12998)
!13003 = !DILocation(line: 4419, column: 18, scope: !12998)
!13004 = !DILocation(line: 4419, column: 23, scope: !12998)
!13005 = !DILocation(line: 4422, column: 14, scope: !12989)
!13006 = !DILocation(line: 4422, column: 19, scope: !12989)
!13007 = !DILocation(line: 4422, column: 22, scope: !12989)
!13008 = !DILocation(line: 4422, column: 13, scope: !12989)
!13009 = !DILocation(line: 4422, column: 33, scope: !12989)
!13010 = !DILocation(line: 4422, column: 40, scope: !12989)
!13011 = !DILocation(line: 4422, column: 11, scope: !12989)
!13012 = !DILocation(line: 4423, column: 2, scope: !12989)
!13013 = !DILocation(line: 4427, column: 14, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !12986, file: !3, line: 4424, column: 7)
!13015 = !DILocation(line: 4427, column: 19, scope: !13014)
!13016 = !DILocation(line: 4427, column: 22, scope: !13014)
!13017 = !DILocation(line: 4427, column: 13, scope: !13014)
!13018 = !DILocation(line: 4427, column: 33, scope: !13014)
!13019 = !DILocation(line: 4427, column: 11, scope: !13014)
!13020 = !DILocation(line: 4431, column: 14, scope: !12959)
!13021 = !DILocation(line: 4431, column: 19, scope: !12959)
!13022 = !DILocation(line: 4431, column: 25, scope: !12959)
!13023 = !DILocation(line: 4431, column: 2, scope: !12959)
!13024 = !DILocation(line: 4434, column: 9, scope: !12959)
!13025 = !DILocation(line: 4434, column: 2, scope: !12959)
