; ModuleID = 'blender/intern/mikktspace/mikktspace.c'
source_filename = "blender/intern/mikktspace/mikktspace.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.SMikkTSpaceContext = type { %struct.SMikkTSpaceInterface*, i8* }
%struct.SMikkTSpaceInterface = type { {}*, i32 (%struct.SMikkTSpaceContext*, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float*, float, float, i32, i32, i32)* }
%struct.STriInfo = type { [3 x i32], [3 x %struct.SGroup*], %struct.SVec3, %struct.SVec3, float, float, i32, i32, i32, [4 x i8] }
%struct.SGroup = type { i32, i32*, i32, i32 }
%struct.SVec3 = type { float, float, float }
%struct.STSpace = type { %struct.SVec3, float, %struct.SVec3, float, i32, i32 }
%struct.STmpVert = type { [3 x float], i32 }
%union.SEdge = type { %struct.anon }
%struct.anon = type { i32, i32, i32 }
%struct.SSubGroup = type { i32, i32* }

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @genTangSpaceDefault(%struct.SMikkTSpaceContext* %pContext) #0 !dbg !88 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !128, metadata !DIExpression()), !dbg !129
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !130
  %call = call i32 @genTangSpace(%struct.SMikkTSpaceContext* %0, float 1.800000e+02), !dbg !131
  ret i32 %call, !dbg !132
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @genTangSpace(%struct.SMikkTSpaceContext* %pContext, float %fAngularThreshold) #2 !dbg !133 {
entry:
  %retval = alloca i32, align 4
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %fAngularThreshold.addr = alloca float, align 4
  %piTriListIn = alloca i32*, align 8
  %piGroupTrianglesBuffer = alloca i32*, align 8
  %pTriInfos = alloca %struct.STriInfo*, align 8
  %pGroups = alloca %struct.SGroup*, align 8
  %psTspace = alloca %struct.STSpace*, align 8
  %iNrTrianglesIn = alloca i32, align 4
  %f = alloca i32, align 4
  %t = alloca i32, align 4
  %i = alloca i32, align 4
  %iNrTSPaces = alloca i32, align 4
  %iTotTris = alloca i32, align 4
  %iDegenTriangles = alloca i32, align 4
  %iNrMaxGroups = alloca i32, align 4
  %iNrActiveGroups = alloca i32, align 4
  %index = alloca i32, align 4
  %iNrFaces = alloca i32, align 4
  %bRes = alloca i32, align 4
  %fThresCos = alloca float, align 4
  %verts = alloca i32, align 4
  %i0 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %p0 = alloca %struct.SVec3, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %p1 = alloca %struct.SVec3, align 4
  %tmp79 = alloca { <2 x float>, float }, align 8
  %p2 = alloca %struct.SVec3, align 4
  %tmp81 = alloca { <2 x float>, float }, align 8
  %p0.coerce = alloca { <2 x float>, float }, align 4
  %p1.coerce = alloca { <2 x float>, float }, align 4
  %p0.coerce84 = alloca { <2 x float>, float }, align 4
  %p2.coerce = alloca { <2 x float>, float }, align 4
  %p1.coerce88 = alloca { <2 x float>, float }, align 4
  %p2.coerce89 = alloca { <2 x float>, float }, align 4
  %verts171 = alloca i32, align 4
  %pTSpace = alloca %struct.STSpace*, align 8
  %tang = alloca [3 x float], align 4
  %bitang = alloca [3 x float], align 4
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !136, metadata !DIExpression()), !dbg !137
  store float %fAngularThreshold, float* %fAngularThreshold.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fAngularThreshold.addr, metadata !138, metadata !DIExpression()), !dbg !139
  call void @llvm.dbg.declare(metadata i32** %piTriListIn, metadata !140, metadata !DIExpression()), !dbg !141
  store i32* null, i32** %piTriListIn, align 8, !dbg !141
  call void @llvm.dbg.declare(metadata i32** %piGroupTrianglesBuffer, metadata !142, metadata !DIExpression()), !dbg !143
  store i32* null, i32** %piGroupTrianglesBuffer, align 8, !dbg !143
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pTriInfos, metadata !144, metadata !DIExpression()), !dbg !145
  store %struct.STriInfo* null, %struct.STriInfo** %pTriInfos, align 8, !dbg !145
  call void @llvm.dbg.declare(metadata %struct.SGroup** %pGroups, metadata !146, metadata !DIExpression()), !dbg !147
  store %struct.SGroup* null, %struct.SGroup** %pGroups, align 8, !dbg !147
  call void @llvm.dbg.declare(metadata %struct.STSpace** %psTspace, metadata !148, metadata !DIExpression()), !dbg !149
  store %struct.STSpace* null, %struct.STSpace** %psTspace, align 8, !dbg !149
  call void @llvm.dbg.declare(metadata i32* %iNrTrianglesIn, metadata !150, metadata !DIExpression()), !dbg !151
  store i32 0, i32* %iNrTrianglesIn, align 4, !dbg !151
  call void @llvm.dbg.declare(metadata i32* %f, metadata !152, metadata !DIExpression()), !dbg !153
  store i32 0, i32* %f, align 4, !dbg !153
  call void @llvm.dbg.declare(metadata i32* %t, metadata !154, metadata !DIExpression()), !dbg !155
  store i32 0, i32* %t, align 4, !dbg !155
  call void @llvm.dbg.declare(metadata i32* %i, metadata !156, metadata !DIExpression()), !dbg !157
  store i32 0, i32* %i, align 4, !dbg !157
  call void @llvm.dbg.declare(metadata i32* %iNrTSPaces, metadata !158, metadata !DIExpression()), !dbg !159
  store i32 0, i32* %iNrTSPaces, align 4, !dbg !159
  call void @llvm.dbg.declare(metadata i32* %iTotTris, metadata !160, metadata !DIExpression()), !dbg !161
  store i32 0, i32* %iTotTris, align 4, !dbg !161
  call void @llvm.dbg.declare(metadata i32* %iDegenTriangles, metadata !162, metadata !DIExpression()), !dbg !163
  store i32 0, i32* %iDegenTriangles, align 4, !dbg !163
  call void @llvm.dbg.declare(metadata i32* %iNrMaxGroups, metadata !164, metadata !DIExpression()), !dbg !165
  store i32 0, i32* %iNrMaxGroups, align 4, !dbg !165
  call void @llvm.dbg.declare(metadata i32* %iNrActiveGroups, metadata !166, metadata !DIExpression()), !dbg !167
  store i32 0, i32* %iNrActiveGroups, align 4, !dbg !167
  call void @llvm.dbg.declare(metadata i32* %index, metadata !168, metadata !DIExpression()), !dbg !169
  store i32 0, i32* %index, align 4, !dbg !169
  call void @llvm.dbg.declare(metadata i32* %iNrFaces, metadata !170, metadata !DIExpression()), !dbg !171
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !172
  %m_pInterface = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 0, !dbg !173
  %1 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface, align 8, !dbg !173
  %m_getNumFaces = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %1, i32 0, i32 0, !dbg !174
  %m_getNumFaces1 = bitcast {}** %m_getNumFaces to i32 (%struct.SMikkTSpaceContext*)**, !dbg !174
  %2 = load i32 (%struct.SMikkTSpaceContext*)*, i32 (%struct.SMikkTSpaceContext*)** %m_getNumFaces1, align 8, !dbg !174
  %3 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !175
  %call = call i32 %2(%struct.SMikkTSpaceContext* %3), !dbg !172
  store i32 %call, i32* %iNrFaces, align 4, !dbg !171
  call void @llvm.dbg.declare(metadata i32* %bRes, metadata !176, metadata !DIExpression()), !dbg !177
  store i32 0, i32* %bRes, align 4, !dbg !177
  call void @llvm.dbg.declare(metadata float* %fThresCos, metadata !178, metadata !DIExpression()), !dbg !179
  %4 = load float, float* %fAngularThreshold.addr, align 4, !dbg !180
  %mul = fmul float %4, 0x400921FB60000000, !dbg !181
  %div = fdiv float %mul, 1.800000e+02, !dbg !182
  %conv = fpext float %div to double, !dbg !183
  %call2 = call double @cos(double %conv) #5, !dbg !184
  %conv3 = fptrunc double %call2 to float, !dbg !185
  store float %conv3, float* %fThresCos, align 4, !dbg !179
  %5 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !186
  %m_pInterface4 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %5, i32 0, i32 0, !dbg !188
  %6 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface4, align 8, !dbg !188
  %m_getNumFaces5 = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %6, i32 0, i32 0, !dbg !189
  %m_getNumFaces6 = bitcast {}** %m_getNumFaces5 to i32 (%struct.SMikkTSpaceContext*)**, !dbg !189
  %7 = load i32 (%struct.SMikkTSpaceContext*)*, i32 (%struct.SMikkTSpaceContext*)** %m_getNumFaces6, align 8, !dbg !189
  %cmp = icmp eq i32 (%struct.SMikkTSpaceContext*)* %7, null, !dbg !190
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !191

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !192
  %m_pInterface8 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %8, i32 0, i32 0, !dbg !193
  %9 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface8, align 8, !dbg !193
  %m_getNumVerticesOfFace = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %9, i32 0, i32 1, !dbg !194
  %10 = load i32 (%struct.SMikkTSpaceContext*, i32)*, i32 (%struct.SMikkTSpaceContext*, i32)** %m_getNumVerticesOfFace, align 8, !dbg !194
  %cmp9 = icmp eq i32 (%struct.SMikkTSpaceContext*, i32)* %10, null, !dbg !195
  br i1 %cmp9, label %if.then, label %lor.lhs.false11, !dbg !196

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %11 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !197
  %m_pInterface12 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %11, i32 0, i32 0, !dbg !198
  %12 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface12, align 8, !dbg !198
  %m_getPosition = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %12, i32 0, i32 2, !dbg !199
  %13 = load void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getPosition, align 8, !dbg !199
  %cmp13 = icmp eq void (%struct.SMikkTSpaceContext*, float*, i32, i32)* %13, null, !dbg !200
  br i1 %cmp13, label %if.then, label %lor.lhs.false15, !dbg !201

lor.lhs.false15:                                  ; preds = %lor.lhs.false11
  %14 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !202
  %m_pInterface16 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %14, i32 0, i32 0, !dbg !203
  %15 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface16, align 8, !dbg !203
  %m_getNormal = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %15, i32 0, i32 3, !dbg !204
  %16 = load void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getNormal, align 8, !dbg !204
  %cmp17 = icmp eq void (%struct.SMikkTSpaceContext*, float*, i32, i32)* %16, null, !dbg !205
  br i1 %cmp17, label %if.then, label %lor.lhs.false19, !dbg !206

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %17 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !207
  %m_pInterface20 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %17, i32 0, i32 0, !dbg !208
  %18 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface20, align 8, !dbg !208
  %m_getTexCoord = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %18, i32 0, i32 4, !dbg !209
  %19 = load void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getTexCoord, align 8, !dbg !209
  %cmp21 = icmp eq void (%struct.SMikkTSpaceContext*, float*, i32, i32)* %19, null, !dbg !210
  br i1 %cmp21, label %if.then, label %if.end, !dbg !211

if.then:                                          ; preds = %lor.lhs.false19, %lor.lhs.false15, %lor.lhs.false11, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !212
  br label %return, !dbg !212

if.end:                                           ; preds = %lor.lhs.false19
  store i32 0, i32* %f, align 4, !dbg !213
  br label %for.cond, !dbg !215

for.cond:                                         ; preds = %for.inc, %if.end
  %20 = load i32, i32* %f, align 4, !dbg !216
  %21 = load i32, i32* %iNrFaces, align 4, !dbg !218
  %cmp23 = icmp slt i32 %20, %21, !dbg !219
  br i1 %cmp23, label %for.body, label %for.end, !dbg !220

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %verts, metadata !221, metadata !DIExpression()), !dbg !223
  %22 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !224
  %m_pInterface25 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %22, i32 0, i32 0, !dbg !225
  %23 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface25, align 8, !dbg !225
  %m_getNumVerticesOfFace26 = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %23, i32 0, i32 1, !dbg !226
  %24 = load i32 (%struct.SMikkTSpaceContext*, i32)*, i32 (%struct.SMikkTSpaceContext*, i32)** %m_getNumVerticesOfFace26, align 8, !dbg !226
  %25 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !227
  %26 = load i32, i32* %f, align 4, !dbg !228
  %call27 = call i32 %24(%struct.SMikkTSpaceContext* %25, i32 %26), !dbg !224
  store i32 %call27, i32* %verts, align 4, !dbg !223
  %27 = load i32, i32* %verts, align 4, !dbg !229
  %cmp28 = icmp eq i32 %27, 3, !dbg !231
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !232

if.then30:                                        ; preds = %for.body
  %28 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !233
  %inc = add nsw i32 %28, 1, !dbg !233
  store i32 %inc, i32* %iNrTrianglesIn, align 4, !dbg !233
  br label %if.end35, !dbg !233

if.else:                                          ; preds = %for.body
  %29 = load i32, i32* %verts, align 4, !dbg !234
  %cmp31 = icmp eq i32 %29, 4, !dbg !236
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !237

if.then33:                                        ; preds = %if.else
  %30 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !238
  %add = add nsw i32 %30, 2, !dbg !238
  store i32 %add, i32* %iNrTrianglesIn, align 4, !dbg !238
  br label %if.end34, !dbg !239

if.end34:                                         ; preds = %if.then33, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then30
  br label %for.inc, !dbg !240

for.inc:                                          ; preds = %if.end35
  %31 = load i32, i32* %f, align 4, !dbg !241
  %inc36 = add nsw i32 %31, 1, !dbg !241
  store i32 %inc36, i32* %f, align 4, !dbg !241
  br label %for.cond, !dbg !242, !llvm.loop !243

for.end:                                          ; preds = %for.cond
  %32 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !245
  %cmp37 = icmp sle i32 %32, 0, !dbg !247
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !248

if.then39:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !249
  br label %return, !dbg !249

if.end40:                                         ; preds = %for.end
  %33 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !250
  %conv41 = sext i32 %33 to i64, !dbg !250
  %mul42 = mul i64 12, %conv41, !dbg !251
  %call43 = call noalias i8* @malloc(i64 %mul42) #5, !dbg !252
  %34 = bitcast i8* %call43 to i32*, !dbg !253
  store i32* %34, i32** %piTriListIn, align 8, !dbg !254
  %35 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !255
  %conv44 = sext i32 %35 to i64, !dbg !255
  %mul45 = mul i64 88, %conv44, !dbg !256
  %call46 = call noalias i8* @malloc(i64 %mul45) #5, !dbg !257
  %36 = bitcast i8* %call46 to %struct.STriInfo*, !dbg !258
  store %struct.STriInfo* %36, %struct.STriInfo** %pTriInfos, align 8, !dbg !259
  %37 = load i32*, i32** %piTriListIn, align 8, !dbg !260
  %cmp47 = icmp eq i32* %37, null, !dbg !262
  br i1 %cmp47, label %if.then52, label %lor.lhs.false49, !dbg !263

lor.lhs.false49:                                  ; preds = %if.end40
  %38 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !264
  %cmp50 = icmp eq %struct.STriInfo* %38, null, !dbg !265
  br i1 %cmp50, label %if.then52, label %if.end61, !dbg !266

if.then52:                                        ; preds = %lor.lhs.false49, %if.end40
  %39 = load i32*, i32** %piTriListIn, align 8, !dbg !267
  %cmp53 = icmp ne i32* %39, null, !dbg !270
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !271

if.then55:                                        ; preds = %if.then52
  %40 = load i32*, i32** %piTriListIn, align 8, !dbg !272
  %41 = bitcast i32* %40 to i8*, !dbg !272
  call void @free(i8* %41) #5, !dbg !273
  br label %if.end56, !dbg !273

if.end56:                                         ; preds = %if.then55, %if.then52
  %42 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !274
  %cmp57 = icmp ne %struct.STriInfo* %42, null, !dbg !276
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !277

if.then59:                                        ; preds = %if.end56
  %43 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !278
  %44 = bitcast %struct.STriInfo* %43 to i8*, !dbg !278
  call void @free(i8* %44) #5, !dbg !279
  br label %if.end60, !dbg !279

if.end60:                                         ; preds = %if.then59, %if.end56
  store i32 0, i32* %retval, align 4, !dbg !280
  br label %return, !dbg !280

if.end61:                                         ; preds = %lor.lhs.false49
  %45 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !281
  %46 = load i32*, i32** %piTriListIn, align 8, !dbg !282
  %47 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !283
  %48 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !284
  %call62 = call i32 @GenerateInitialVerticesIndexList(%struct.STriInfo* %45, i32* %46, %struct.SMikkTSpaceContext* %47, i32 %48), !dbg !285
  store i32 %call62, i32* %iNrTSPaces, align 4, !dbg !286
  %49 = load i32*, i32** %piTriListIn, align 8, !dbg !287
  %50 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !288
  %51 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !289
  call void @GenerateSharedVerticesIndexList(i32* %49, %struct.SMikkTSpaceContext* %50, i32 %51), !dbg !290
  %52 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !291
  store i32 %52, i32* %iTotTris, align 4, !dbg !292
  store i32 0, i32* %iDegenTriangles, align 4, !dbg !293
  store i32 0, i32* %t, align 4, !dbg !294
  br label %for.cond63, !dbg !296

for.cond63:                                       ; preds = %for.inc97, %if.end61
  %53 = load i32, i32* %t, align 4, !dbg !297
  %54 = load i32, i32* %iTotTris, align 4, !dbg !299
  %cmp64 = icmp slt i32 %53, %54, !dbg !300
  br i1 %cmp64, label %for.body66, label %for.end99, !dbg !301

for.body66:                                       ; preds = %for.cond63
  call void @llvm.dbg.declare(metadata i32* %i0, metadata !302, metadata !DIExpression()), !dbg !304
  %55 = load i32*, i32** %piTriListIn, align 8, !dbg !305
  %56 = load i32, i32* %t, align 4, !dbg !306
  %mul67 = mul nsw i32 %56, 3, !dbg !307
  %add68 = add nsw i32 %mul67, 0, !dbg !308
  %idxprom = sext i32 %add68 to i64, !dbg !305
  %arrayidx = getelementptr inbounds i32, i32* %55, i64 %idxprom, !dbg !305
  %57 = load i32, i32* %arrayidx, align 4, !dbg !305
  store i32 %57, i32* %i0, align 4, !dbg !304
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !309, metadata !DIExpression()), !dbg !310
  %58 = load i32*, i32** %piTriListIn, align 8, !dbg !311
  %59 = load i32, i32* %t, align 4, !dbg !312
  %mul69 = mul nsw i32 %59, 3, !dbg !313
  %add70 = add nsw i32 %mul69, 1, !dbg !314
  %idxprom71 = sext i32 %add70 to i64, !dbg !311
  %arrayidx72 = getelementptr inbounds i32, i32* %58, i64 %idxprom71, !dbg !311
  %60 = load i32, i32* %arrayidx72, align 4, !dbg !311
  store i32 %60, i32* %i1, align 4, !dbg !310
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !315, metadata !DIExpression()), !dbg !316
  %61 = load i32*, i32** %piTriListIn, align 8, !dbg !317
  %62 = load i32, i32* %t, align 4, !dbg !318
  %mul73 = mul nsw i32 %62, 3, !dbg !319
  %add74 = add nsw i32 %mul73, 2, !dbg !320
  %idxprom75 = sext i32 %add74 to i64, !dbg !317
  %arrayidx76 = getelementptr inbounds i32, i32* %61, i64 %idxprom75, !dbg !317
  %63 = load i32, i32* %arrayidx76, align 4, !dbg !317
  store i32 %63, i32* %i2, align 4, !dbg !316
  call void @llvm.dbg.declare(metadata %struct.SVec3* %p0, metadata !321, metadata !DIExpression()), !dbg !323
  %64 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !324
  %65 = load i32, i32* %i0, align 4, !dbg !325
  %call77 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %64, i32 %65), !dbg !326
  store { <2 x float>, float } %call77, { <2 x float>, float }* %tmp, align 8, !dbg !326
  %66 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !326
  %67 = bitcast %struct.SVec3* %p0 to i8*, !dbg !326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 8 %66, i64 12, i1 false), !dbg !326
  call void @llvm.dbg.declare(metadata %struct.SVec3* %p1, metadata !327, metadata !DIExpression()), !dbg !328
  %68 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !329
  %69 = load i32, i32* %i1, align 4, !dbg !330
  %call78 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %68, i32 %69), !dbg !331
  store { <2 x float>, float } %call78, { <2 x float>, float }* %tmp79, align 8, !dbg !331
  %70 = bitcast { <2 x float>, float }* %tmp79 to i8*, !dbg !331
  %71 = bitcast %struct.SVec3* %p1 to i8*, !dbg !331
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 8 %70, i64 12, i1 false), !dbg !331
  call void @llvm.dbg.declare(metadata %struct.SVec3* %p2, metadata !332, metadata !DIExpression()), !dbg !333
  %72 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !334
  %73 = load i32, i32* %i2, align 4, !dbg !335
  %call80 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %72, i32 %73), !dbg !336
  store { <2 x float>, float } %call80, { <2 x float>, float }* %tmp81, align 8, !dbg !336
  %74 = bitcast { <2 x float>, float }* %tmp81 to i8*, !dbg !336
  %75 = bitcast %struct.SVec3* %p2 to i8*, !dbg !336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 8 %74, i64 12, i1 false), !dbg !336
  %76 = bitcast { <2 x float>, float }* %p0.coerce to i8*, !dbg !337
  %77 = bitcast %struct.SVec3* %p0 to i8*, !dbg !337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 12, i1 false), !dbg !337
  %78 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p0.coerce, i32 0, i32 0, !dbg !337
  %79 = load <2 x float>, <2 x float>* %78, align 4, !dbg !337
  %80 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p0.coerce, i32 0, i32 1, !dbg !337
  %81 = load float, float* %80, align 4, !dbg !337
  %82 = bitcast { <2 x float>, float }* %p1.coerce to i8*, !dbg !337
  %83 = bitcast %struct.SVec3* %p1 to i8*, !dbg !337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 12, i1 false), !dbg !337
  %84 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p1.coerce, i32 0, i32 0, !dbg !337
  %85 = load <2 x float>, <2 x float>* %84, align 4, !dbg !337
  %86 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p1.coerce, i32 0, i32 1, !dbg !337
  %87 = load float, float* %86, align 4, !dbg !337
  %call82 = call i32 @veq(<2 x float> %79, float %81, <2 x float> %85, float %87), !dbg !337
  %tobool = icmp ne i32 %call82, 0, !dbg !337
  br i1 %tobool, label %if.then92, label %lor.lhs.false83, !dbg !339

lor.lhs.false83:                                  ; preds = %for.body66
  %88 = bitcast { <2 x float>, float }* %p0.coerce84 to i8*, !dbg !340
  %89 = bitcast %struct.SVec3* %p0 to i8*, !dbg !340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 12, i1 false), !dbg !340
  %90 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p0.coerce84, i32 0, i32 0, !dbg !340
  %91 = load <2 x float>, <2 x float>* %90, align 4, !dbg !340
  %92 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p0.coerce84, i32 0, i32 1, !dbg !340
  %93 = load float, float* %92, align 4, !dbg !340
  %94 = bitcast { <2 x float>, float }* %p2.coerce to i8*, !dbg !340
  %95 = bitcast %struct.SVec3* %p2 to i8*, !dbg !340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 12, i1 false), !dbg !340
  %96 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p2.coerce, i32 0, i32 0, !dbg !340
  %97 = load <2 x float>, <2 x float>* %96, align 4, !dbg !340
  %98 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p2.coerce, i32 0, i32 1, !dbg !340
  %99 = load float, float* %98, align 4, !dbg !340
  %call85 = call i32 @veq(<2 x float> %91, float %93, <2 x float> %97, float %99), !dbg !340
  %tobool86 = icmp ne i32 %call85, 0, !dbg !340
  br i1 %tobool86, label %if.then92, label %lor.lhs.false87, !dbg !341

lor.lhs.false87:                                  ; preds = %lor.lhs.false83
  %100 = bitcast { <2 x float>, float }* %p1.coerce88 to i8*, !dbg !342
  %101 = bitcast %struct.SVec3* %p1 to i8*, !dbg !342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* align 4 %101, i64 12, i1 false), !dbg !342
  %102 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p1.coerce88, i32 0, i32 0, !dbg !342
  %103 = load <2 x float>, <2 x float>* %102, align 4, !dbg !342
  %104 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p1.coerce88, i32 0, i32 1, !dbg !342
  %105 = load float, float* %104, align 4, !dbg !342
  %106 = bitcast { <2 x float>, float }* %p2.coerce89 to i8*, !dbg !342
  %107 = bitcast %struct.SVec3* %p2 to i8*, !dbg !342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 12, i1 false), !dbg !342
  %108 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p2.coerce89, i32 0, i32 0, !dbg !342
  %109 = load <2 x float>, <2 x float>* %108, align 4, !dbg !342
  %110 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p2.coerce89, i32 0, i32 1, !dbg !342
  %111 = load float, float* %110, align 4, !dbg !342
  %call90 = call i32 @veq(<2 x float> %103, float %105, <2 x float> %109, float %111), !dbg !342
  %tobool91 = icmp ne i32 %call90, 0, !dbg !342
  br i1 %tobool91, label %if.then92, label %if.end96, !dbg !343

if.then92:                                        ; preds = %lor.lhs.false87, %lor.lhs.false83, %for.body66
  %112 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !344
  %113 = load i32, i32* %t, align 4, !dbg !346
  %idxprom93 = sext i32 %113 to i64, !dbg !344
  %arrayidx94 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %112, i64 %idxprom93, !dbg !344
  %iFlag = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx94, i32 0, i32 7, !dbg !347
  %114 = load i32, i32* %iFlag, align 4, !dbg !348
  %or = or i32 %114, 1, !dbg !348
  store i32 %or, i32* %iFlag, align 4, !dbg !348
  %115 = load i32, i32* %iDegenTriangles, align 4, !dbg !349
  %inc95 = add nsw i32 %115, 1, !dbg !349
  store i32 %inc95, i32* %iDegenTriangles, align 4, !dbg !349
  br label %if.end96, !dbg !350

if.end96:                                         ; preds = %if.then92, %lor.lhs.false87
  br label %for.inc97, !dbg !351

for.inc97:                                        ; preds = %if.end96
  %116 = load i32, i32* %t, align 4, !dbg !352
  %inc98 = add nsw i32 %116, 1, !dbg !352
  store i32 %inc98, i32* %t, align 4, !dbg !352
  br label %for.cond63, !dbg !353, !llvm.loop !354

for.end99:                                        ; preds = %for.cond63
  %117 = load i32, i32* %iTotTris, align 4, !dbg !356
  %118 = load i32, i32* %iDegenTriangles, align 4, !dbg !357
  %sub = sub nsw i32 %117, %118, !dbg !358
  store i32 %sub, i32* %iNrTrianglesIn, align 4, !dbg !359
  %119 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !360
  %120 = load i32*, i32** %piTriListIn, align 8, !dbg !361
  %121 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !362
  %122 = load i32, i32* %iTotTris, align 4, !dbg !363
  call void @DegenPrologue(%struct.STriInfo* %119, i32* %120, i32 %121, i32 %122), !dbg !364
  %123 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !365
  %124 = load i32*, i32** %piTriListIn, align 8, !dbg !366
  %125 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !367
  %126 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !368
  call void @InitTriInfo(%struct.STriInfo* %123, i32* %124, %struct.SMikkTSpaceContext* %125, i32 %126), !dbg !369
  %127 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !370
  %mul100 = mul nsw i32 %127, 3, !dbg !371
  store i32 %mul100, i32* %iNrMaxGroups, align 4, !dbg !372
  %128 = load i32, i32* %iNrMaxGroups, align 4, !dbg !373
  %conv101 = sext i32 %128 to i64, !dbg !373
  %mul102 = mul i64 24, %conv101, !dbg !374
  %call103 = call noalias i8* @malloc(i64 %mul102) #5, !dbg !375
  %129 = bitcast i8* %call103 to %struct.SGroup*, !dbg !376
  store %struct.SGroup* %129, %struct.SGroup** %pGroups, align 8, !dbg !377
  %130 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !378
  %conv104 = sext i32 %130 to i64, !dbg !378
  %mul105 = mul i64 4, %conv104, !dbg !379
  %mul106 = mul i64 %mul105, 3, !dbg !380
  %call107 = call noalias i8* @malloc(i64 %mul106) #5, !dbg !381
  %131 = bitcast i8* %call107 to i32*, !dbg !382
  store i32* %131, i32** %piGroupTrianglesBuffer, align 8, !dbg !383
  %132 = load %struct.SGroup*, %struct.SGroup** %pGroups, align 8, !dbg !384
  %cmp108 = icmp eq %struct.SGroup* %132, null, !dbg !386
  br i1 %cmp108, label %if.then113, label %lor.lhs.false110, !dbg !387

lor.lhs.false110:                                 ; preds = %for.end99
  %133 = load i32*, i32** %piGroupTrianglesBuffer, align 8, !dbg !388
  %cmp111 = icmp eq i32* %133, null, !dbg !389
  br i1 %cmp111, label %if.then113, label %if.end122, !dbg !390

if.then113:                                       ; preds = %lor.lhs.false110, %for.end99
  %134 = load %struct.SGroup*, %struct.SGroup** %pGroups, align 8, !dbg !391
  %cmp114 = icmp ne %struct.SGroup* %134, null, !dbg !394
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !395

if.then116:                                       ; preds = %if.then113
  %135 = load %struct.SGroup*, %struct.SGroup** %pGroups, align 8, !dbg !396
  %136 = bitcast %struct.SGroup* %135 to i8*, !dbg !396
  call void @free(i8* %136) #5, !dbg !397
  br label %if.end117, !dbg !397

if.end117:                                        ; preds = %if.then116, %if.then113
  %137 = load i32*, i32** %piGroupTrianglesBuffer, align 8, !dbg !398
  %cmp118 = icmp ne i32* %137, null, !dbg !400
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !401

if.then120:                                       ; preds = %if.end117
  %138 = load i32*, i32** %piGroupTrianglesBuffer, align 8, !dbg !402
  %139 = bitcast i32* %138 to i8*, !dbg !402
  call void @free(i8* %139) #5, !dbg !403
  br label %if.end121, !dbg !403

if.end121:                                        ; preds = %if.then120, %if.end117
  %140 = load i32*, i32** %piTriListIn, align 8, !dbg !404
  %141 = bitcast i32* %140 to i8*, !dbg !404
  call void @free(i8* %141) #5, !dbg !405
  %142 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !406
  %143 = bitcast %struct.STriInfo* %142 to i8*, !dbg !406
  call void @free(i8* %143) #5, !dbg !407
  store i32 0, i32* %retval, align 4, !dbg !408
  br label %return, !dbg !408

if.end122:                                        ; preds = %lor.lhs.false110
  %144 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !409
  %145 = load %struct.SGroup*, %struct.SGroup** %pGroups, align 8, !dbg !410
  %146 = load i32*, i32** %piGroupTrianglesBuffer, align 8, !dbg !411
  %147 = load i32*, i32** %piTriListIn, align 8, !dbg !412
  %148 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !413
  %call123 = call i32 @Build4RuleGroups(%struct.STriInfo* %144, %struct.SGroup* %145, i32* %146, i32* %147, i32 %148), !dbg !414
  store i32 %call123, i32* %iNrActiveGroups, align 4, !dbg !415
  %149 = load i32, i32* %iNrTSPaces, align 4, !dbg !416
  %conv124 = sext i32 %149 to i64, !dbg !416
  %mul125 = mul i64 40, %conv124, !dbg !417
  %call126 = call noalias i8* @malloc(i64 %mul125) #5, !dbg !418
  %150 = bitcast i8* %call126 to %struct.STSpace*, !dbg !419
  store %struct.STSpace* %150, %struct.STSpace** %psTspace, align 8, !dbg !420
  %151 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !421
  %cmp127 = icmp eq %struct.STSpace* %151, null, !dbg !423
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !424

if.then129:                                       ; preds = %if.end122
  %152 = load i32*, i32** %piTriListIn, align 8, !dbg !425
  %153 = bitcast i32* %152 to i8*, !dbg !425
  call void @free(i8* %153) #5, !dbg !427
  %154 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !428
  %155 = bitcast %struct.STriInfo* %154 to i8*, !dbg !428
  call void @free(i8* %155) #5, !dbg !429
  %156 = load %struct.SGroup*, %struct.SGroup** %pGroups, align 8, !dbg !430
  %157 = bitcast %struct.SGroup* %156 to i8*, !dbg !430
  call void @free(i8* %157) #5, !dbg !431
  %158 = load i32*, i32** %piGroupTrianglesBuffer, align 8, !dbg !432
  %159 = bitcast i32* %158 to i8*, !dbg !432
  call void @free(i8* %159) #5, !dbg !433
  store i32 0, i32* %retval, align 4, !dbg !434
  br label %return, !dbg !434

if.end130:                                        ; preds = %if.end122
  %160 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !435
  %161 = bitcast %struct.STSpace* %160 to i8*, !dbg !436
  %162 = load i32, i32* %iNrTSPaces, align 4, !dbg !437
  %conv131 = sext i32 %162 to i64, !dbg !437
  %mul132 = mul i64 40, %conv131, !dbg !438
  call void @llvm.memset.p0i8.i64(i8* align 4 %161, i8 0, i64 %mul132, i1 false), !dbg !436
  store i32 0, i32* %t, align 4, !dbg !439
  br label %for.cond133, !dbg !441

for.cond133:                                      ; preds = %for.inc160, %if.end130
  %163 = load i32, i32* %t, align 4, !dbg !442
  %164 = load i32, i32* %iNrTSPaces, align 4, !dbg !444
  %cmp134 = icmp slt i32 %163, %164, !dbg !445
  br i1 %cmp134, label %for.body136, label %for.end162, !dbg !446

for.body136:                                      ; preds = %for.cond133
  %165 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !447
  %166 = load i32, i32* %t, align 4, !dbg !449
  %idxprom137 = sext i32 %166 to i64, !dbg !447
  %arrayidx138 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %165, i64 %idxprom137, !dbg !447
  %vOs = getelementptr inbounds %struct.STSpace, %struct.STSpace* %arrayidx138, i32 0, i32 0, !dbg !450
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs, i32 0, i32 0, !dbg !451
  store float 1.000000e+00, float* %x, align 4, !dbg !452
  %167 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !453
  %168 = load i32, i32* %t, align 4, !dbg !454
  %idxprom139 = sext i32 %168 to i64, !dbg !453
  %arrayidx140 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %167, i64 %idxprom139, !dbg !453
  %vOs141 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %arrayidx140, i32 0, i32 0, !dbg !455
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs141, i32 0, i32 1, !dbg !456
  store float 0.000000e+00, float* %y, align 4, !dbg !457
  %169 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !458
  %170 = load i32, i32* %t, align 4, !dbg !459
  %idxprom142 = sext i32 %170 to i64, !dbg !458
  %arrayidx143 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %169, i64 %idxprom142, !dbg !458
  %vOs144 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %arrayidx143, i32 0, i32 0, !dbg !460
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs144, i32 0, i32 2, !dbg !461
  store float 0.000000e+00, float* %z, align 4, !dbg !462
  %171 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !463
  %172 = load i32, i32* %t, align 4, !dbg !464
  %idxprom145 = sext i32 %172 to i64, !dbg !463
  %arrayidx146 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %171, i64 %idxprom145, !dbg !463
  %fMagS = getelementptr inbounds %struct.STSpace, %struct.STSpace* %arrayidx146, i32 0, i32 1, !dbg !465
  store float 1.000000e+00, float* %fMagS, align 4, !dbg !466
  %173 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !467
  %174 = load i32, i32* %t, align 4, !dbg !468
  %idxprom147 = sext i32 %174 to i64, !dbg !467
  %arrayidx148 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %173, i64 %idxprom147, !dbg !467
  %vOt = getelementptr inbounds %struct.STSpace, %struct.STSpace* %arrayidx148, i32 0, i32 2, !dbg !469
  %x149 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt, i32 0, i32 0, !dbg !470
  store float 0.000000e+00, float* %x149, align 4, !dbg !471
  %175 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !472
  %176 = load i32, i32* %t, align 4, !dbg !473
  %idxprom150 = sext i32 %176 to i64, !dbg !472
  %arrayidx151 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %175, i64 %idxprom150, !dbg !472
  %vOt152 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %arrayidx151, i32 0, i32 2, !dbg !474
  %y153 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt152, i32 0, i32 1, !dbg !475
  store float 1.000000e+00, float* %y153, align 4, !dbg !476
  %177 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !477
  %178 = load i32, i32* %t, align 4, !dbg !478
  %idxprom154 = sext i32 %178 to i64, !dbg !477
  %arrayidx155 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %177, i64 %idxprom154, !dbg !477
  %vOt156 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %arrayidx155, i32 0, i32 2, !dbg !479
  %z157 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt156, i32 0, i32 2, !dbg !480
  store float 0.000000e+00, float* %z157, align 4, !dbg !481
  %179 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !482
  %180 = load i32, i32* %t, align 4, !dbg !483
  %idxprom158 = sext i32 %180 to i64, !dbg !482
  %arrayidx159 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %179, i64 %idxprom158, !dbg !482
  %fMagT = getelementptr inbounds %struct.STSpace, %struct.STSpace* %arrayidx159, i32 0, i32 3, !dbg !484
  store float 1.000000e+00, float* %fMagT, align 4, !dbg !485
  br label %for.inc160, !dbg !486

for.inc160:                                       ; preds = %for.body136
  %181 = load i32, i32* %t, align 4, !dbg !487
  %inc161 = add nsw i32 %181, 1, !dbg !487
  store i32 %inc161, i32* %t, align 4, !dbg !487
  br label %for.cond133, !dbg !488, !llvm.loop !489

for.end162:                                       ; preds = %for.cond133
  %182 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !491
  %183 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !492
  %184 = load %struct.SGroup*, %struct.SGroup** %pGroups, align 8, !dbg !493
  %185 = load i32, i32* %iNrActiveGroups, align 4, !dbg !494
  %186 = load i32*, i32** %piTriListIn, align 8, !dbg !495
  %187 = load float, float* %fThresCos, align 4, !dbg !496
  %188 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !497
  %call163 = call i32 @GenerateTSpaces(%struct.STSpace* %182, %struct.STriInfo* %183, %struct.SGroup* %184, i32 %185, i32* %186, float %187, %struct.SMikkTSpaceContext* %188), !dbg !498
  store i32 %call163, i32* %bRes, align 4, !dbg !499
  %189 = load %struct.SGroup*, %struct.SGroup** %pGroups, align 8, !dbg !500
  %190 = bitcast %struct.SGroup* %189 to i8*, !dbg !500
  call void @free(i8* %190) #5, !dbg !501
  %191 = load i32*, i32** %piGroupTrianglesBuffer, align 8, !dbg !502
  %192 = bitcast i32* %191 to i8*, !dbg !502
  call void @free(i8* %192) #5, !dbg !503
  %193 = load i32, i32* %bRes, align 4, !dbg !504
  %tobool164 = icmp ne i32 %193, 0, !dbg !504
  br i1 %tobool164, label %if.end166, label %if.then165, !dbg !506

if.then165:                                       ; preds = %for.end162
  %194 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !507
  %195 = bitcast %struct.STriInfo* %194 to i8*, !dbg !507
  call void @free(i8* %195) #5, !dbg !509
  %196 = load i32*, i32** %piTriListIn, align 8, !dbg !510
  %197 = bitcast i32* %196 to i8*, !dbg !510
  call void @free(i8* %197) #5, !dbg !511
  %198 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !512
  %199 = bitcast %struct.STSpace* %198 to i8*, !dbg !512
  call void @free(i8* %199) #5, !dbg !513
  store i32 0, i32* %retval, align 4, !dbg !514
  br label %return, !dbg !514

if.end166:                                        ; preds = %for.end162
  %200 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !515
  %201 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !516
  %202 = load i32*, i32** %piTriListIn, align 8, !dbg !517
  %203 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !518
  %204 = load i32, i32* %iNrTrianglesIn, align 4, !dbg !519
  %205 = load i32, i32* %iTotTris, align 4, !dbg !520
  call void @DegenEpilogue(%struct.STSpace* %200, %struct.STriInfo* %201, i32* %202, %struct.SMikkTSpaceContext* %203, i32 %204, i32 %205), !dbg !521
  %206 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos, align 8, !dbg !522
  %207 = bitcast %struct.STriInfo* %206 to i8*, !dbg !522
  call void @free(i8* %207) #5, !dbg !523
  %208 = load i32*, i32** %piTriListIn, align 8, !dbg !524
  %209 = bitcast i32* %208 to i8*, !dbg !524
  call void @free(i8* %209) #5, !dbg !525
  store i32 0, i32* %index, align 4, !dbg !526
  store i32 0, i32* %f, align 4, !dbg !527
  br label %for.cond167, !dbg !529

for.cond167:                                      ; preds = %for.inc228, %if.end166
  %210 = load i32, i32* %f, align 4, !dbg !530
  %211 = load i32, i32* %iNrFaces, align 4, !dbg !532
  %cmp168 = icmp slt i32 %210, %211, !dbg !533
  br i1 %cmp168, label %for.body170, label %for.end230, !dbg !534

for.body170:                                      ; preds = %for.cond167
  call void @llvm.dbg.declare(metadata i32* %verts171, metadata !535, metadata !DIExpression()), !dbg !537
  %212 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !538
  %m_pInterface172 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %212, i32 0, i32 0, !dbg !539
  %213 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface172, align 8, !dbg !539
  %m_getNumVerticesOfFace173 = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %213, i32 0, i32 1, !dbg !540
  %214 = load i32 (%struct.SMikkTSpaceContext*, i32)*, i32 (%struct.SMikkTSpaceContext*, i32)** %m_getNumVerticesOfFace173, align 8, !dbg !540
  %215 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !541
  %216 = load i32, i32* %f, align 4, !dbg !542
  %call174 = call i32 %214(%struct.SMikkTSpaceContext* %215, i32 %216), !dbg !538
  store i32 %call174, i32* %verts171, align 4, !dbg !537
  %217 = load i32, i32* %verts171, align 4, !dbg !543
  %cmp175 = icmp ne i32 %217, 3, !dbg !545
  br i1 %cmp175, label %land.lhs.true, label %if.end180, !dbg !546

land.lhs.true:                                    ; preds = %for.body170
  %218 = load i32, i32* %verts171, align 4, !dbg !547
  %cmp177 = icmp ne i32 %218, 4, !dbg !548
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !549

if.then179:                                       ; preds = %land.lhs.true
  br label %for.inc228, !dbg !550

if.end180:                                        ; preds = %land.lhs.true, %for.body170
  store i32 0, i32* %i, align 4, !dbg !551
  br label %for.cond181, !dbg !553

for.cond181:                                      ; preds = %for.inc225, %if.end180
  %219 = load i32, i32* %i, align 4, !dbg !554
  %220 = load i32, i32* %verts171, align 4, !dbg !556
  %cmp182 = icmp slt i32 %219, %220, !dbg !557
  br i1 %cmp182, label %for.body184, label %for.end227, !dbg !558

for.body184:                                      ; preds = %for.cond181
  call void @llvm.dbg.declare(metadata %struct.STSpace** %pTSpace, metadata !559, metadata !DIExpression()), !dbg !563
  %221 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !564
  %222 = load i32, i32* %index, align 4, !dbg !565
  %idxprom185 = sext i32 %222 to i64, !dbg !564
  %arrayidx186 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %221, i64 %idxprom185, !dbg !564
  store %struct.STSpace* %arrayidx186, %struct.STSpace** %pTSpace, align 8, !dbg !563
  call void @llvm.dbg.declare(metadata [3 x float]* %tang, metadata !566, metadata !DIExpression()), !dbg !567
  %arrayinit.begin = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !568
  %223 = load %struct.STSpace*, %struct.STSpace** %pTSpace, align 8, !dbg !569
  %vOs187 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %223, i32 0, i32 0, !dbg !570
  %x188 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs187, i32 0, i32 0, !dbg !571
  %224 = load float, float* %x188, align 4, !dbg !571
  store float %224, float* %arrayinit.begin, align 4, !dbg !568
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !568
  %225 = load %struct.STSpace*, %struct.STSpace** %pTSpace, align 8, !dbg !572
  %vOs189 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %225, i32 0, i32 0, !dbg !573
  %y190 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs189, i32 0, i32 1, !dbg !574
  %226 = load float, float* %y190, align 4, !dbg !574
  store float %226, float* %arrayinit.element, align 4, !dbg !568
  %arrayinit.element191 = getelementptr inbounds float, float* %arrayinit.element, i64 1, !dbg !568
  %227 = load %struct.STSpace*, %struct.STSpace** %pTSpace, align 8, !dbg !575
  %vOs192 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %227, i32 0, i32 0, !dbg !576
  %z193 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs192, i32 0, i32 2, !dbg !577
  %228 = load float, float* %z193, align 4, !dbg !577
  store float %228, float* %arrayinit.element191, align 4, !dbg !568
  call void @llvm.dbg.declare(metadata [3 x float]* %bitang, metadata !578, metadata !DIExpression()), !dbg !579
  %arrayinit.begin194 = getelementptr inbounds [3 x float], [3 x float]* %bitang, i64 0, i64 0, !dbg !580
  %229 = load %struct.STSpace*, %struct.STSpace** %pTSpace, align 8, !dbg !581
  %vOt195 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %229, i32 0, i32 2, !dbg !582
  %x196 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt195, i32 0, i32 0, !dbg !583
  %230 = load float, float* %x196, align 4, !dbg !583
  store float %230, float* %arrayinit.begin194, align 4, !dbg !580
  %arrayinit.element197 = getelementptr inbounds float, float* %arrayinit.begin194, i64 1, !dbg !580
  %231 = load %struct.STSpace*, %struct.STSpace** %pTSpace, align 8, !dbg !584
  %vOt198 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %231, i32 0, i32 2, !dbg !585
  %y199 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt198, i32 0, i32 1, !dbg !586
  %232 = load float, float* %y199, align 4, !dbg !586
  store float %232, float* %arrayinit.element197, align 4, !dbg !580
  %arrayinit.element200 = getelementptr inbounds float, float* %arrayinit.element197, i64 1, !dbg !580
  %233 = load %struct.STSpace*, %struct.STSpace** %pTSpace, align 8, !dbg !587
  %vOt201 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %233, i32 0, i32 2, !dbg !588
  %z202 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt201, i32 0, i32 2, !dbg !589
  %234 = load float, float* %z202, align 4, !dbg !589
  store float %234, float* %arrayinit.element200, align 4, !dbg !580
  %235 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !590
  %m_pInterface203 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %235, i32 0, i32 0, !dbg !592
  %236 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface203, align 8, !dbg !592
  %m_setTSpace = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %236, i32 0, i32 6, !dbg !593
  %237 = load void (%struct.SMikkTSpaceContext*, float*, float*, float, float, i32, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float*, float, float, i32, i32, i32)** %m_setTSpace, align 8, !dbg !593
  %cmp204 = icmp ne void (%struct.SMikkTSpaceContext*, float*, float*, float, float, i32, i32, i32)* %237, null, !dbg !594
  br i1 %cmp204, label %if.then206, label %if.end212, !dbg !595

if.then206:                                       ; preds = %for.body184
  %238 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !596
  %m_pInterface207 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %238, i32 0, i32 0, !dbg !597
  %239 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface207, align 8, !dbg !597
  %m_setTSpace208 = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %239, i32 0, i32 6, !dbg !598
  %240 = load void (%struct.SMikkTSpaceContext*, float*, float*, float, float, i32, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float*, float, float, i32, i32, i32)** %m_setTSpace208, align 8, !dbg !598
  %241 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !599
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !600
  %arraydecay209 = getelementptr inbounds [3 x float], [3 x float]* %bitang, i64 0, i64 0, !dbg !601
  %242 = load %struct.STSpace*, %struct.STSpace** %pTSpace, align 8, !dbg !602
  %fMagS210 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %242, i32 0, i32 1, !dbg !603
  %243 = load float, float* %fMagS210, align 4, !dbg !603
  %244 = load %struct.STSpace*, %struct.STSpace** %pTSpace, align 8, !dbg !604
  %fMagT211 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %244, i32 0, i32 3, !dbg !605
  %245 = load float, float* %fMagT211, align 4, !dbg !605
  %246 = load %struct.STSpace*, %struct.STSpace** %pTSpace, align 8, !dbg !606
  %bOrient = getelementptr inbounds %struct.STSpace, %struct.STSpace* %246, i32 0, i32 5, !dbg !607
  %247 = load i32, i32* %bOrient, align 4, !dbg !607
  %248 = load i32, i32* %f, align 4, !dbg !608
  %249 = load i32, i32* %i, align 4, !dbg !609
  call void %240(%struct.SMikkTSpaceContext* %241, float* %arraydecay, float* %arraydecay209, float %243, float %245, i32 %247, i32 %248, i32 %249), !dbg !596
  br label %if.end212, !dbg !596

if.end212:                                        ; preds = %if.then206, %for.body184
  %250 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !610
  %m_pInterface213 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %250, i32 0, i32 0, !dbg !612
  %251 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface213, align 8, !dbg !612
  %m_setTSpaceBasic = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %251, i32 0, i32 5, !dbg !613
  %252 = load void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)** %m_setTSpaceBasic, align 8, !dbg !613
  %cmp214 = icmp ne void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)* %252, null, !dbg !614
  br i1 %cmp214, label %if.then216, label %if.end223, !dbg !615

if.then216:                                       ; preds = %if.end212
  %253 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !616
  %m_pInterface217 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %253, i32 0, i32 0, !dbg !617
  %254 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface217, align 8, !dbg !617
  %m_setTSpaceBasic218 = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %254, i32 0, i32 5, !dbg !618
  %255 = load void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)** %m_setTSpaceBasic218, align 8, !dbg !618
  %256 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !619
  %arraydecay219 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !620
  %257 = load %struct.STSpace*, %struct.STSpace** %pTSpace, align 8, !dbg !621
  %bOrient220 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %257, i32 0, i32 5, !dbg !622
  %258 = load i32, i32* %bOrient220, align 4, !dbg !622
  %cmp221 = icmp eq i32 %258, 1, !dbg !623
  %259 = zext i1 %cmp221 to i64, !dbg !621
  %cond = select i1 %cmp221, float 1.000000e+00, float -1.000000e+00, !dbg !621
  %260 = load i32, i32* %f, align 4, !dbg !624
  %261 = load i32, i32* %i, align 4, !dbg !625
  call void %255(%struct.SMikkTSpaceContext* %256, float* %arraydecay219, float %cond, i32 %260, i32 %261), !dbg !616
  br label %if.end223, !dbg !616

if.end223:                                        ; preds = %if.then216, %if.end212
  %262 = load i32, i32* %index, align 4, !dbg !626
  %inc224 = add nsw i32 %262, 1, !dbg !626
  store i32 %inc224, i32* %index, align 4, !dbg !626
  br label %for.inc225, !dbg !627

for.inc225:                                       ; preds = %if.end223
  %263 = load i32, i32* %i, align 4, !dbg !628
  %inc226 = add nsw i32 %263, 1, !dbg !628
  store i32 %inc226, i32* %i, align 4, !dbg !628
  br label %for.cond181, !dbg !629, !llvm.loop !630

for.end227:                                       ; preds = %for.cond181
  br label %for.inc228, !dbg !632

for.inc228:                                       ; preds = %for.end227, %if.then179
  %264 = load i32, i32* %f, align 4, !dbg !633
  %inc229 = add nsw i32 %264, 1, !dbg !633
  store i32 %inc229, i32* %f, align 4, !dbg !633
  br label %for.cond167, !dbg !634, !llvm.loop !635

for.end230:                                       ; preds = %for.cond167
  %265 = load %struct.STSpace*, %struct.STSpace** %psTspace, align 8, !dbg !637
  %266 = bitcast %struct.STSpace* %265 to i8*, !dbg !637
  call void @free(i8* %266) #5, !dbg !638
  store i32 1, i32* %retval, align 4, !dbg !639
  br label %return, !dbg !639

return:                                           ; preds = %for.end230, %if.then165, %if.then129, %if.end121, %if.end60, %if.then39, %if.then
  %267 = load i32, i32* %retval, align 4, !dbg !640
  ret i32 %267, !dbg !640
}

; Function Attrs: nounwind
declare dso_local double @cos(double) #3

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

; Function Attrs: nounwind
declare dso_local void @free(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @GenerateInitialVerticesIndexList(%struct.STriInfo* %pTriInfos, i32* %piTriList_out, %struct.SMikkTSpaceContext* %pContext, i32 %iNrTrianglesIn) #2 !dbg !641 {
entry:
  %pTriInfos.addr = alloca %struct.STriInfo*, align 8
  %piTriList_out.addr = alloca i32*, align 8
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %iNrTrianglesIn.addr = alloca i32, align 4
  %iTSpacesOffs = alloca i32, align 4
  %f = alloca i32, align 4
  %t = alloca i32, align 4
  %iDstTriIndex = alloca i32, align 4
  %verts = alloca i32, align 4
  %pVerts = alloca i8*, align 8
  %i0 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %i3 = alloca i32, align 4
  %T0 = alloca %struct.SVec3, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %T1 = alloca %struct.SVec3, align 4
  %tmp43 = alloca { <2 x float>, float }, align 8
  %T2 = alloca %struct.SVec3, align 4
  %tmp45 = alloca { <2 x float>, float }, align 8
  %T3 = alloca %struct.SVec3, align 4
  %tmp47 = alloca { <2 x float>, float }, align 8
  %distSQ_02 = alloca float, align 4
  %agg.tmp = alloca %struct.SVec3, align 4
  %T2.coerce = alloca { <2 x float>, float }, align 4
  %T0.coerce = alloca { <2 x float>, float }, align 4
  %tmp49 = alloca { <2 x float>, float }, align 8
  %agg.tmp.coerce = alloca { <2 x float>, float }, align 4
  %distSQ_13 = alloca float, align 4
  %agg.tmp51 = alloca %struct.SVec3, align 4
  %T3.coerce = alloca { <2 x float>, float }, align 4
  %T1.coerce = alloca { <2 x float>, float }, align 4
  %tmp53 = alloca { <2 x float>, float }, align 8
  %agg.tmp51.coerce = alloca { <2 x float>, float }, align 4
  %bQuadDiagIs_02 = alloca i32, align 4
  %P0 = alloca %struct.SVec3, align 4
  %tmp62 = alloca { <2 x float>, float }, align 8
  %P1 = alloca %struct.SVec3, align 4
  %tmp64 = alloca { <2 x float>, float }, align 8
  %P2 = alloca %struct.SVec3, align 4
  %tmp66 = alloca { <2 x float>, float }, align 8
  %P3 = alloca %struct.SVec3, align 4
  %tmp68 = alloca { <2 x float>, float }, align 8
  %distSQ_0269 = alloca float, align 4
  %agg.tmp70 = alloca %struct.SVec3, align 4
  %P2.coerce = alloca { <2 x float>, float }, align 4
  %P0.coerce = alloca { <2 x float>, float }, align 4
  %tmp72 = alloca { <2 x float>, float }, align 8
  %agg.tmp70.coerce = alloca { <2 x float>, float }, align 4
  %distSQ_1374 = alloca float, align 4
  %agg.tmp75 = alloca %struct.SVec3, align 4
  %P3.coerce = alloca { <2 x float>, float }, align 4
  %P1.coerce = alloca { <2 x float>, float }, align 4
  %tmp77 = alloca { <2 x float>, float }, align 8
  %agg.tmp75.coerce = alloca { <2 x float>, float }, align 4
  %pVerts_A = alloca i8*, align 8
  %pVerts_B = alloca i8*, align 8
  %pVerts_A124 = alloca i8*, align 8
  %pVerts_B145 = alloca i8*, align 8
  store %struct.STriInfo* %pTriInfos, %struct.STriInfo** %pTriInfos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pTriInfos.addr, metadata !644, metadata !DIExpression()), !dbg !645
  store i32* %piTriList_out, i32** %piTriList_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriList_out.addr, metadata !646, metadata !DIExpression()), !dbg !647
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !648, metadata !DIExpression()), !dbg !649
  store i32 %iNrTrianglesIn, i32* %iNrTrianglesIn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iNrTrianglesIn.addr, metadata !650, metadata !DIExpression()), !dbg !651
  call void @llvm.dbg.declare(metadata i32* %iTSpacesOffs, metadata !652, metadata !DIExpression()), !dbg !653
  store i32 0, i32* %iTSpacesOffs, align 4, !dbg !653
  call void @llvm.dbg.declare(metadata i32* %f, metadata !654, metadata !DIExpression()), !dbg !655
  store i32 0, i32* %f, align 4, !dbg !655
  call void @llvm.dbg.declare(metadata i32* %t, metadata !656, metadata !DIExpression()), !dbg !657
  store i32 0, i32* %t, align 4, !dbg !657
  call void @llvm.dbg.declare(metadata i32* %iDstTriIndex, metadata !658, metadata !DIExpression()), !dbg !659
  store i32 0, i32* %iDstTriIndex, align 4, !dbg !659
  store i32 0, i32* %f, align 4, !dbg !660
  br label %for.cond, !dbg !662

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %f, align 4, !dbg !663
  %1 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !665
  %m_pInterface = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %1, i32 0, i32 0, !dbg !666
  %2 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface, align 8, !dbg !666
  %m_getNumFaces = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %2, i32 0, i32 0, !dbg !667
  %m_getNumFaces1 = bitcast {}** %m_getNumFaces to i32 (%struct.SMikkTSpaceContext*)**, !dbg !667
  %3 = load i32 (%struct.SMikkTSpaceContext*)*, i32 (%struct.SMikkTSpaceContext*)** %m_getNumFaces1, align 8, !dbg !667
  %4 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !668
  %call = call i32 %3(%struct.SMikkTSpaceContext* %4), !dbg !665
  %cmp = icmp slt i32 %0, %call, !dbg !669
  br i1 %cmp, label %for.body, label %for.end, !dbg !670

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %verts, metadata !671, metadata !DIExpression()), !dbg !673
  %5 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !674
  %m_pInterface2 = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %5, i32 0, i32 0, !dbg !675
  %6 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface2, align 8, !dbg !675
  %m_getNumVerticesOfFace = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %6, i32 0, i32 1, !dbg !676
  %7 = load i32 (%struct.SMikkTSpaceContext*, i32)*, i32 (%struct.SMikkTSpaceContext*, i32)** %m_getNumVerticesOfFace, align 8, !dbg !676
  %8 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !677
  %9 = load i32, i32* %f, align 4, !dbg !678
  %call3 = call i32 %7(%struct.SMikkTSpaceContext* %8, i32 %9), !dbg !674
  store i32 %call3, i32* %verts, align 4, !dbg !673
  %10 = load i32, i32* %verts, align 4, !dbg !679
  %cmp4 = icmp ne i32 %10, 3, !dbg !681
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !682

land.lhs.true:                                    ; preds = %for.body
  %11 = load i32, i32* %verts, align 4, !dbg !683
  %cmp5 = icmp ne i32 %11, 4, !dbg !684
  br i1 %cmp5, label %if.then, label %if.end, !dbg !685

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !686

if.end:                                           ; preds = %land.lhs.true, %for.body
  %12 = load i32, i32* %f, align 4, !dbg !687
  %13 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !688
  %14 = load i32, i32* %iDstTriIndex, align 4, !dbg !689
  %idxprom = sext i32 %14 to i64, !dbg !688
  %arrayidx = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %13, i64 %idxprom, !dbg !688
  %iOrgFaceNumber = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx, i32 0, i32 6, !dbg !690
  store i32 %12, i32* %iOrgFaceNumber, align 8, !dbg !691
  %15 = load i32, i32* %iTSpacesOffs, align 4, !dbg !692
  %16 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !693
  %17 = load i32, i32* %iDstTriIndex, align 4, !dbg !694
  %idxprom6 = sext i32 %17 to i64, !dbg !693
  %arrayidx7 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %16, i64 %idxprom6, !dbg !693
  %iTSpacesOffs8 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx7, i32 0, i32 8, !dbg !695
  store i32 %15, i32* %iTSpacesOffs8, align 8, !dbg !696
  %18 = load i32, i32* %verts, align 4, !dbg !697
  %cmp9 = icmp eq i32 %18, 3, !dbg !699
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !700

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %pVerts, metadata !701, metadata !DIExpression()), !dbg !704
  %19 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !705
  %20 = load i32, i32* %iDstTriIndex, align 4, !dbg !706
  %idxprom11 = sext i32 %20 to i64, !dbg !705
  %arrayidx12 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %19, i64 %idxprom11, !dbg !705
  %vert_num = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx12, i32 0, i32 9, !dbg !707
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %vert_num, i64 0, i64 0, !dbg !705
  store i8* %arraydecay, i8** %pVerts, align 8, !dbg !704
  %21 = load i8*, i8** %pVerts, align 8, !dbg !708
  %arrayidx13 = getelementptr inbounds i8, i8* %21, i64 0, !dbg !708
  store i8 0, i8* %arrayidx13, align 1, !dbg !709
  %22 = load i8*, i8** %pVerts, align 8, !dbg !710
  %arrayidx14 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !710
  store i8 1, i8* %arrayidx14, align 1, !dbg !711
  %23 = load i8*, i8** %pVerts, align 8, !dbg !712
  %arrayidx15 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !712
  store i8 2, i8* %arrayidx15, align 1, !dbg !713
  %24 = load i32, i32* %f, align 4, !dbg !714
  %call16 = call i32 @MakeIndex(i32 %24, i32 0), !dbg !715
  %25 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !716
  %26 = load i32, i32* %iDstTriIndex, align 4, !dbg !717
  %mul = mul nsw i32 %26, 3, !dbg !718
  %add = add nsw i32 %mul, 0, !dbg !719
  %idxprom17 = sext i32 %add to i64, !dbg !716
  %arrayidx18 = getelementptr inbounds i32, i32* %25, i64 %idxprom17, !dbg !716
  store i32 %call16, i32* %arrayidx18, align 4, !dbg !720
  %27 = load i32, i32* %f, align 4, !dbg !721
  %call19 = call i32 @MakeIndex(i32 %27, i32 1), !dbg !722
  %28 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !723
  %29 = load i32, i32* %iDstTriIndex, align 4, !dbg !724
  %mul20 = mul nsw i32 %29, 3, !dbg !725
  %add21 = add nsw i32 %mul20, 1, !dbg !726
  %idxprom22 = sext i32 %add21 to i64, !dbg !723
  %arrayidx23 = getelementptr inbounds i32, i32* %28, i64 %idxprom22, !dbg !723
  store i32 %call19, i32* %arrayidx23, align 4, !dbg !727
  %30 = load i32, i32* %f, align 4, !dbg !728
  %call24 = call i32 @MakeIndex(i32 %30, i32 2), !dbg !729
  %31 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !730
  %32 = load i32, i32* %iDstTriIndex, align 4, !dbg !731
  %mul25 = mul nsw i32 %32, 3, !dbg !732
  %add26 = add nsw i32 %mul25, 2, !dbg !733
  %idxprom27 = sext i32 %add26 to i64, !dbg !730
  %arrayidx28 = getelementptr inbounds i32, i32* %31, i64 %idxprom27, !dbg !730
  store i32 %call24, i32* %arrayidx28, align 4, !dbg !734
  %33 = load i32, i32* %iDstTriIndex, align 4, !dbg !735
  %inc = add nsw i32 %33, 1, !dbg !735
  store i32 %inc, i32* %iDstTriIndex, align 4, !dbg !735
  br label %if.end167, !dbg !736

if.else:                                          ; preds = %if.end
  %34 = load i32, i32* %f, align 4, !dbg !737
  %35 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !740
  %36 = load i32, i32* %iDstTriIndex, align 4, !dbg !741
  %add29 = add nsw i32 %36, 1, !dbg !742
  %idxprom30 = sext i32 %add29 to i64, !dbg !740
  %arrayidx31 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %35, i64 %idxprom30, !dbg !740
  %iOrgFaceNumber32 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx31, i32 0, i32 6, !dbg !743
  store i32 %34, i32* %iOrgFaceNumber32, align 8, !dbg !744
  %37 = load i32, i32* %iTSpacesOffs, align 4, !dbg !745
  %38 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !746
  %39 = load i32, i32* %iDstTriIndex, align 4, !dbg !747
  %add33 = add nsw i32 %39, 1, !dbg !748
  %idxprom34 = sext i32 %add33 to i64, !dbg !746
  %arrayidx35 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %38, i64 %idxprom34, !dbg !746
  %iTSpacesOffs36 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx35, i32 0, i32 8, !dbg !749
  store i32 %37, i32* %iTSpacesOffs36, align 8, !dbg !750
  call void @llvm.dbg.declare(metadata i32* %i0, metadata !751, metadata !DIExpression()), !dbg !753
  %40 = load i32, i32* %f, align 4, !dbg !754
  %call37 = call i32 @MakeIndex(i32 %40, i32 0), !dbg !755
  store i32 %call37, i32* %i0, align 4, !dbg !753
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !756, metadata !DIExpression()), !dbg !757
  %41 = load i32, i32* %f, align 4, !dbg !758
  %call38 = call i32 @MakeIndex(i32 %41, i32 1), !dbg !759
  store i32 %call38, i32* %i1, align 4, !dbg !757
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !760, metadata !DIExpression()), !dbg !761
  %42 = load i32, i32* %f, align 4, !dbg !762
  %call39 = call i32 @MakeIndex(i32 %42, i32 2), !dbg !763
  store i32 %call39, i32* %i2, align 4, !dbg !761
  call void @llvm.dbg.declare(metadata i32* %i3, metadata !764, metadata !DIExpression()), !dbg !765
  %43 = load i32, i32* %f, align 4, !dbg !766
  %call40 = call i32 @MakeIndex(i32 %43, i32 3), !dbg !767
  store i32 %call40, i32* %i3, align 4, !dbg !765
  call void @llvm.dbg.declare(metadata %struct.SVec3* %T0, metadata !768, metadata !DIExpression()), !dbg !769
  %44 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !770
  %45 = load i32, i32* %i0, align 4, !dbg !771
  %call41 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %44, i32 %45), !dbg !772
  store { <2 x float>, float } %call41, { <2 x float>, float }* %tmp, align 8, !dbg !772
  %46 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !772
  %47 = bitcast %struct.SVec3* %T0 to i8*, !dbg !772
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 8 %46, i64 12, i1 false), !dbg !772
  call void @llvm.dbg.declare(metadata %struct.SVec3* %T1, metadata !773, metadata !DIExpression()), !dbg !774
  %48 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !775
  %49 = load i32, i32* %i1, align 4, !dbg !776
  %call42 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %48, i32 %49), !dbg !777
  store { <2 x float>, float } %call42, { <2 x float>, float }* %tmp43, align 8, !dbg !777
  %50 = bitcast { <2 x float>, float }* %tmp43 to i8*, !dbg !777
  %51 = bitcast %struct.SVec3* %T1 to i8*, !dbg !777
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 8 %50, i64 12, i1 false), !dbg !777
  call void @llvm.dbg.declare(metadata %struct.SVec3* %T2, metadata !778, metadata !DIExpression()), !dbg !779
  %52 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !780
  %53 = load i32, i32* %i2, align 4, !dbg !781
  %call44 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %52, i32 %53), !dbg !782
  store { <2 x float>, float } %call44, { <2 x float>, float }* %tmp45, align 8, !dbg !782
  %54 = bitcast { <2 x float>, float }* %tmp45 to i8*, !dbg !782
  %55 = bitcast %struct.SVec3* %T2 to i8*, !dbg !782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 8 %54, i64 12, i1 false), !dbg !782
  call void @llvm.dbg.declare(metadata %struct.SVec3* %T3, metadata !783, metadata !DIExpression()), !dbg !784
  %56 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !785
  %57 = load i32, i32* %i3, align 4, !dbg !786
  %call46 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %56, i32 %57), !dbg !787
  store { <2 x float>, float } %call46, { <2 x float>, float }* %tmp47, align 8, !dbg !787
  %58 = bitcast { <2 x float>, float }* %tmp47 to i8*, !dbg !787
  %59 = bitcast %struct.SVec3* %T3 to i8*, !dbg !787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 8 %58, i64 12, i1 false), !dbg !787
  call void @llvm.dbg.declare(metadata float* %distSQ_02, metadata !788, metadata !DIExpression()), !dbg !789
  %60 = bitcast { <2 x float>, float }* %T2.coerce to i8*, !dbg !790
  %61 = bitcast %struct.SVec3* %T2 to i8*, !dbg !790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 12, i1 false), !dbg !790
  %62 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %T2.coerce, i32 0, i32 0, !dbg !790
  %63 = load <2 x float>, <2 x float>* %62, align 4, !dbg !790
  %64 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %T2.coerce, i32 0, i32 1, !dbg !790
  %65 = load float, float* %64, align 4, !dbg !790
  %66 = bitcast { <2 x float>, float }* %T0.coerce to i8*, !dbg !790
  %67 = bitcast %struct.SVec3* %T0 to i8*, !dbg !790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 12, i1 false), !dbg !790
  %68 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %T0.coerce, i32 0, i32 0, !dbg !790
  %69 = load <2 x float>, <2 x float>* %68, align 4, !dbg !790
  %70 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %T0.coerce, i32 0, i32 1, !dbg !790
  %71 = load float, float* %70, align 4, !dbg !790
  %call48 = call { <2 x float>, float } @vsub(<2 x float> %63, float %65, <2 x float> %69, float %71), !dbg !790
  store { <2 x float>, float } %call48, { <2 x float>, float }* %tmp49, align 8, !dbg !790
  %72 = bitcast { <2 x float>, float }* %tmp49 to i8*, !dbg !790
  %73 = bitcast %struct.SVec3* %agg.tmp to i8*, !dbg !790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 8 %72, i64 12, i1 false), !dbg !790
  %74 = bitcast { <2 x float>, float }* %agg.tmp.coerce to i8*, !dbg !791
  %75 = bitcast %struct.SVec3* %agg.tmp to i8*, !dbg !791
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* align 4 %75, i64 12, i1 false), !dbg !791
  %76 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 0, !dbg !791
  %77 = load <2 x float>, <2 x float>* %76, align 4, !dbg !791
  %78 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 1, !dbg !791
  %79 = load float, float* %78, align 4, !dbg !791
  %call50 = call float @LengthSquared(<2 x float> %77, float %79), !dbg !791
  store float %call50, float* %distSQ_02, align 4, !dbg !789
  call void @llvm.dbg.declare(metadata float* %distSQ_13, metadata !792, metadata !DIExpression()), !dbg !793
  %80 = bitcast { <2 x float>, float }* %T3.coerce to i8*, !dbg !794
  %81 = bitcast %struct.SVec3* %T3 to i8*, !dbg !794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 12, i1 false), !dbg !794
  %82 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %T3.coerce, i32 0, i32 0, !dbg !794
  %83 = load <2 x float>, <2 x float>* %82, align 4, !dbg !794
  %84 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %T3.coerce, i32 0, i32 1, !dbg !794
  %85 = load float, float* %84, align 4, !dbg !794
  %86 = bitcast { <2 x float>, float }* %T1.coerce to i8*, !dbg !794
  %87 = bitcast %struct.SVec3* %T1 to i8*, !dbg !794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 12, i1 false), !dbg !794
  %88 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %T1.coerce, i32 0, i32 0, !dbg !794
  %89 = load <2 x float>, <2 x float>* %88, align 4, !dbg !794
  %90 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %T1.coerce, i32 0, i32 1, !dbg !794
  %91 = load float, float* %90, align 4, !dbg !794
  %call52 = call { <2 x float>, float } @vsub(<2 x float> %83, float %85, <2 x float> %89, float %91), !dbg !794
  store { <2 x float>, float } %call52, { <2 x float>, float }* %tmp53, align 8, !dbg !794
  %92 = bitcast { <2 x float>, float }* %tmp53 to i8*, !dbg !794
  %93 = bitcast %struct.SVec3* %agg.tmp51 to i8*, !dbg !794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 8 %92, i64 12, i1 false), !dbg !794
  %94 = bitcast { <2 x float>, float }* %agg.tmp51.coerce to i8*, !dbg !795
  %95 = bitcast %struct.SVec3* %agg.tmp51 to i8*, !dbg !795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 12, i1 false), !dbg !795
  %96 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp51.coerce, i32 0, i32 0, !dbg !795
  %97 = load <2 x float>, <2 x float>* %96, align 4, !dbg !795
  %98 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp51.coerce, i32 0, i32 1, !dbg !795
  %99 = load float, float* %98, align 4, !dbg !795
  %call54 = call float @LengthSquared(<2 x float> %97, float %99), !dbg !795
  store float %call54, float* %distSQ_13, align 4, !dbg !793
  call void @llvm.dbg.declare(metadata i32* %bQuadDiagIs_02, metadata !796, metadata !DIExpression()), !dbg !797
  %100 = load float, float* %distSQ_02, align 4, !dbg !798
  %101 = load float, float* %distSQ_13, align 4, !dbg !800
  %cmp55 = fcmp olt float %100, %101, !dbg !801
  br i1 %cmp55, label %if.then56, label %if.else57, !dbg !802

if.then56:                                        ; preds = %if.else
  store i32 1, i32* %bQuadDiagIs_02, align 4, !dbg !803
  br label %if.end81, !dbg !804

if.else57:                                        ; preds = %if.else
  %102 = load float, float* %distSQ_13, align 4, !dbg !805
  %103 = load float, float* %distSQ_02, align 4, !dbg !807
  %cmp58 = fcmp olt float %102, %103, !dbg !808
  br i1 %cmp58, label %if.then59, label %if.else60, !dbg !809

if.then59:                                        ; preds = %if.else57
  store i32 0, i32* %bQuadDiagIs_02, align 4, !dbg !810
  br label %if.end80, !dbg !811

if.else60:                                        ; preds = %if.else57
  call void @llvm.dbg.declare(metadata %struct.SVec3* %P0, metadata !812, metadata !DIExpression()), !dbg !814
  %104 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !815
  %105 = load i32, i32* %i0, align 4, !dbg !816
  %call61 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %104, i32 %105), !dbg !817
  store { <2 x float>, float } %call61, { <2 x float>, float }* %tmp62, align 8, !dbg !817
  %106 = bitcast { <2 x float>, float }* %tmp62 to i8*, !dbg !817
  %107 = bitcast %struct.SVec3* %P0 to i8*, !dbg !817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 8 %106, i64 12, i1 false), !dbg !817
  call void @llvm.dbg.declare(metadata %struct.SVec3* %P1, metadata !818, metadata !DIExpression()), !dbg !819
  %108 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !820
  %109 = load i32, i32* %i1, align 4, !dbg !821
  %call63 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %108, i32 %109), !dbg !822
  store { <2 x float>, float } %call63, { <2 x float>, float }* %tmp64, align 8, !dbg !822
  %110 = bitcast { <2 x float>, float }* %tmp64 to i8*, !dbg !822
  %111 = bitcast %struct.SVec3* %P1 to i8*, !dbg !822
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %111, i8* align 8 %110, i64 12, i1 false), !dbg !822
  call void @llvm.dbg.declare(metadata %struct.SVec3* %P2, metadata !823, metadata !DIExpression()), !dbg !824
  %112 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !825
  %113 = load i32, i32* %i2, align 4, !dbg !826
  %call65 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %112, i32 %113), !dbg !827
  store { <2 x float>, float } %call65, { <2 x float>, float }* %tmp66, align 8, !dbg !827
  %114 = bitcast { <2 x float>, float }* %tmp66 to i8*, !dbg !827
  %115 = bitcast %struct.SVec3* %P2 to i8*, !dbg !827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 8 %114, i64 12, i1 false), !dbg !827
  call void @llvm.dbg.declare(metadata %struct.SVec3* %P3, metadata !828, metadata !DIExpression()), !dbg !829
  %116 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !830
  %117 = load i32, i32* %i3, align 4, !dbg !831
  %call67 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %116, i32 %117), !dbg !832
  store { <2 x float>, float } %call67, { <2 x float>, float }* %tmp68, align 8, !dbg !832
  %118 = bitcast { <2 x float>, float }* %tmp68 to i8*, !dbg !832
  %119 = bitcast %struct.SVec3* %P3 to i8*, !dbg !832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %119, i8* align 8 %118, i64 12, i1 false), !dbg !832
  call void @llvm.dbg.declare(metadata float* %distSQ_0269, metadata !833, metadata !DIExpression()), !dbg !834
  %120 = bitcast { <2 x float>, float }* %P2.coerce to i8*, !dbg !835
  %121 = bitcast %struct.SVec3* %P2 to i8*, !dbg !835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 12, i1 false), !dbg !835
  %122 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %P2.coerce, i32 0, i32 0, !dbg !835
  %123 = load <2 x float>, <2 x float>* %122, align 4, !dbg !835
  %124 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %P2.coerce, i32 0, i32 1, !dbg !835
  %125 = load float, float* %124, align 4, !dbg !835
  %126 = bitcast { <2 x float>, float }* %P0.coerce to i8*, !dbg !835
  %127 = bitcast %struct.SVec3* %P0 to i8*, !dbg !835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %127, i64 12, i1 false), !dbg !835
  %128 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %P0.coerce, i32 0, i32 0, !dbg !835
  %129 = load <2 x float>, <2 x float>* %128, align 4, !dbg !835
  %130 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %P0.coerce, i32 0, i32 1, !dbg !835
  %131 = load float, float* %130, align 4, !dbg !835
  %call71 = call { <2 x float>, float } @vsub(<2 x float> %123, float %125, <2 x float> %129, float %131), !dbg !835
  store { <2 x float>, float } %call71, { <2 x float>, float }* %tmp72, align 8, !dbg !835
  %132 = bitcast { <2 x float>, float }* %tmp72 to i8*, !dbg !835
  %133 = bitcast %struct.SVec3* %agg.tmp70 to i8*, !dbg !835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 8 %132, i64 12, i1 false), !dbg !835
  %134 = bitcast { <2 x float>, float }* %agg.tmp70.coerce to i8*, !dbg !836
  %135 = bitcast %struct.SVec3* %agg.tmp70 to i8*, !dbg !836
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %134, i8* align 4 %135, i64 12, i1 false), !dbg !836
  %136 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp70.coerce, i32 0, i32 0, !dbg !836
  %137 = load <2 x float>, <2 x float>* %136, align 4, !dbg !836
  %138 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp70.coerce, i32 0, i32 1, !dbg !836
  %139 = load float, float* %138, align 4, !dbg !836
  %call73 = call float @LengthSquared(<2 x float> %137, float %139), !dbg !836
  store float %call73, float* %distSQ_0269, align 4, !dbg !834
  call void @llvm.dbg.declare(metadata float* %distSQ_1374, metadata !837, metadata !DIExpression()), !dbg !838
  %140 = bitcast { <2 x float>, float }* %P3.coerce to i8*, !dbg !839
  %141 = bitcast %struct.SVec3* %P3 to i8*, !dbg !839
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %141, i64 12, i1 false), !dbg !839
  %142 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %P3.coerce, i32 0, i32 0, !dbg !839
  %143 = load <2 x float>, <2 x float>* %142, align 4, !dbg !839
  %144 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %P3.coerce, i32 0, i32 1, !dbg !839
  %145 = load float, float* %144, align 4, !dbg !839
  %146 = bitcast { <2 x float>, float }* %P1.coerce to i8*, !dbg !839
  %147 = bitcast %struct.SVec3* %P1 to i8*, !dbg !839
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %147, i64 12, i1 false), !dbg !839
  %148 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %P1.coerce, i32 0, i32 0, !dbg !839
  %149 = load <2 x float>, <2 x float>* %148, align 4, !dbg !839
  %150 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %P1.coerce, i32 0, i32 1, !dbg !839
  %151 = load float, float* %150, align 4, !dbg !839
  %call76 = call { <2 x float>, float } @vsub(<2 x float> %143, float %145, <2 x float> %149, float %151), !dbg !839
  store { <2 x float>, float } %call76, { <2 x float>, float }* %tmp77, align 8, !dbg !839
  %152 = bitcast { <2 x float>, float }* %tmp77 to i8*, !dbg !839
  %153 = bitcast %struct.SVec3* %agg.tmp75 to i8*, !dbg !839
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %153, i8* align 8 %152, i64 12, i1 false), !dbg !839
  %154 = bitcast { <2 x float>, float }* %agg.tmp75.coerce to i8*, !dbg !840
  %155 = bitcast %struct.SVec3* %agg.tmp75 to i8*, !dbg !840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 12, i1 false), !dbg !840
  %156 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp75.coerce, i32 0, i32 0, !dbg !840
  %157 = load <2 x float>, <2 x float>* %156, align 4, !dbg !840
  %158 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp75.coerce, i32 0, i32 1, !dbg !840
  %159 = load float, float* %158, align 4, !dbg !840
  %call78 = call float @LengthSquared(<2 x float> %157, float %159), !dbg !840
  store float %call78, float* %distSQ_1374, align 4, !dbg !838
  %160 = load float, float* %distSQ_1374, align 4, !dbg !841
  %161 = load float, float* %distSQ_0269, align 4, !dbg !842
  %cmp79 = fcmp olt float %160, %161, !dbg !843
  %162 = zext i1 %cmp79 to i64, !dbg !841
  %cond = select i1 %cmp79, i32 0, i32 1, !dbg !841
  store i32 %cond, i32* %bQuadDiagIs_02, align 4, !dbg !844
  br label %if.end80

if.end80:                                         ; preds = %if.else60, %if.then59
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then56
  %163 = load i32, i32* %bQuadDiagIs_02, align 4, !dbg !845
  %tobool = icmp ne i32 %163, 0, !dbg !845
  br i1 %tobool, label %if.then82, label %if.else123, !dbg !847

if.then82:                                        ; preds = %if.end81
  call void @llvm.dbg.declare(metadata i8** %pVerts_A, metadata !848, metadata !DIExpression()), !dbg !851
  %164 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !852
  %165 = load i32, i32* %iDstTriIndex, align 4, !dbg !853
  %idxprom83 = sext i32 %165 to i64, !dbg !852
  %arrayidx84 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %164, i64 %idxprom83, !dbg !852
  %vert_num85 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx84, i32 0, i32 9, !dbg !854
  %arraydecay86 = getelementptr inbounds [4 x i8], [4 x i8]* %vert_num85, i64 0, i64 0, !dbg !852
  store i8* %arraydecay86, i8** %pVerts_A, align 8, !dbg !851
  %166 = load i8*, i8** %pVerts_A, align 8, !dbg !855
  %arrayidx87 = getelementptr inbounds i8, i8* %166, i64 0, !dbg !855
  store i8 0, i8* %arrayidx87, align 1, !dbg !856
  %167 = load i8*, i8** %pVerts_A, align 8, !dbg !857
  %arrayidx88 = getelementptr inbounds i8, i8* %167, i64 1, !dbg !857
  store i8 1, i8* %arrayidx88, align 1, !dbg !858
  %168 = load i8*, i8** %pVerts_A, align 8, !dbg !859
  %arrayidx89 = getelementptr inbounds i8, i8* %168, i64 2, !dbg !859
  store i8 2, i8* %arrayidx89, align 1, !dbg !860
  %169 = load i32, i32* %i0, align 4, !dbg !861
  %170 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !862
  %171 = load i32, i32* %iDstTriIndex, align 4, !dbg !863
  %mul90 = mul nsw i32 %171, 3, !dbg !864
  %add91 = add nsw i32 %mul90, 0, !dbg !865
  %idxprom92 = sext i32 %add91 to i64, !dbg !862
  %arrayidx93 = getelementptr inbounds i32, i32* %170, i64 %idxprom92, !dbg !862
  store i32 %169, i32* %arrayidx93, align 4, !dbg !866
  %172 = load i32, i32* %i1, align 4, !dbg !867
  %173 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !868
  %174 = load i32, i32* %iDstTriIndex, align 4, !dbg !869
  %mul94 = mul nsw i32 %174, 3, !dbg !870
  %add95 = add nsw i32 %mul94, 1, !dbg !871
  %idxprom96 = sext i32 %add95 to i64, !dbg !868
  %arrayidx97 = getelementptr inbounds i32, i32* %173, i64 %idxprom96, !dbg !868
  store i32 %172, i32* %arrayidx97, align 4, !dbg !872
  %175 = load i32, i32* %i2, align 4, !dbg !873
  %176 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !874
  %177 = load i32, i32* %iDstTriIndex, align 4, !dbg !875
  %mul98 = mul nsw i32 %177, 3, !dbg !876
  %add99 = add nsw i32 %mul98, 2, !dbg !877
  %idxprom100 = sext i32 %add99 to i64, !dbg !874
  %arrayidx101 = getelementptr inbounds i32, i32* %176, i64 %idxprom100, !dbg !874
  store i32 %175, i32* %arrayidx101, align 4, !dbg !878
  %178 = load i32, i32* %iDstTriIndex, align 4, !dbg !879
  %inc102 = add nsw i32 %178, 1, !dbg !879
  store i32 %inc102, i32* %iDstTriIndex, align 4, !dbg !879
  call void @llvm.dbg.declare(metadata i8** %pVerts_B, metadata !880, metadata !DIExpression()), !dbg !882
  %179 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !883
  %180 = load i32, i32* %iDstTriIndex, align 4, !dbg !884
  %idxprom103 = sext i32 %180 to i64, !dbg !883
  %arrayidx104 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %179, i64 %idxprom103, !dbg !883
  %vert_num105 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx104, i32 0, i32 9, !dbg !885
  %arraydecay106 = getelementptr inbounds [4 x i8], [4 x i8]* %vert_num105, i64 0, i64 0, !dbg !883
  store i8* %arraydecay106, i8** %pVerts_B, align 8, !dbg !882
  %181 = load i8*, i8** %pVerts_B, align 8, !dbg !886
  %arrayidx107 = getelementptr inbounds i8, i8* %181, i64 0, !dbg !886
  store i8 0, i8* %arrayidx107, align 1, !dbg !887
  %182 = load i8*, i8** %pVerts_B, align 8, !dbg !888
  %arrayidx108 = getelementptr inbounds i8, i8* %182, i64 1, !dbg !888
  store i8 2, i8* %arrayidx108, align 1, !dbg !889
  %183 = load i8*, i8** %pVerts_B, align 8, !dbg !890
  %arrayidx109 = getelementptr inbounds i8, i8* %183, i64 2, !dbg !890
  store i8 3, i8* %arrayidx109, align 1, !dbg !891
  %184 = load i32, i32* %i0, align 4, !dbg !892
  %185 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !893
  %186 = load i32, i32* %iDstTriIndex, align 4, !dbg !894
  %mul110 = mul nsw i32 %186, 3, !dbg !895
  %add111 = add nsw i32 %mul110, 0, !dbg !896
  %idxprom112 = sext i32 %add111 to i64, !dbg !893
  %arrayidx113 = getelementptr inbounds i32, i32* %185, i64 %idxprom112, !dbg !893
  store i32 %184, i32* %arrayidx113, align 4, !dbg !897
  %187 = load i32, i32* %i2, align 4, !dbg !898
  %188 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !899
  %189 = load i32, i32* %iDstTriIndex, align 4, !dbg !900
  %mul114 = mul nsw i32 %189, 3, !dbg !901
  %add115 = add nsw i32 %mul114, 1, !dbg !902
  %idxprom116 = sext i32 %add115 to i64, !dbg !899
  %arrayidx117 = getelementptr inbounds i32, i32* %188, i64 %idxprom116, !dbg !899
  store i32 %187, i32* %arrayidx117, align 4, !dbg !903
  %190 = load i32, i32* %i3, align 4, !dbg !904
  %191 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !905
  %192 = load i32, i32* %iDstTriIndex, align 4, !dbg !906
  %mul118 = mul nsw i32 %192, 3, !dbg !907
  %add119 = add nsw i32 %mul118, 2, !dbg !908
  %idxprom120 = sext i32 %add119 to i64, !dbg !905
  %arrayidx121 = getelementptr inbounds i32, i32* %191, i64 %idxprom120, !dbg !905
  store i32 %190, i32* %arrayidx121, align 4, !dbg !909
  %193 = load i32, i32* %iDstTriIndex, align 4, !dbg !910
  %inc122 = add nsw i32 %193, 1, !dbg !910
  store i32 %inc122, i32* %iDstTriIndex, align 4, !dbg !910
  br label %if.end166, !dbg !911

if.else123:                                       ; preds = %if.end81
  call void @llvm.dbg.declare(metadata i8** %pVerts_A124, metadata !912, metadata !DIExpression()), !dbg !915
  %194 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !916
  %195 = load i32, i32* %iDstTriIndex, align 4, !dbg !917
  %idxprom125 = sext i32 %195 to i64, !dbg !916
  %arrayidx126 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %194, i64 %idxprom125, !dbg !916
  %vert_num127 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx126, i32 0, i32 9, !dbg !918
  %arraydecay128 = getelementptr inbounds [4 x i8], [4 x i8]* %vert_num127, i64 0, i64 0, !dbg !916
  store i8* %arraydecay128, i8** %pVerts_A124, align 8, !dbg !915
  %196 = load i8*, i8** %pVerts_A124, align 8, !dbg !919
  %arrayidx129 = getelementptr inbounds i8, i8* %196, i64 0, !dbg !919
  store i8 0, i8* %arrayidx129, align 1, !dbg !920
  %197 = load i8*, i8** %pVerts_A124, align 8, !dbg !921
  %arrayidx130 = getelementptr inbounds i8, i8* %197, i64 1, !dbg !921
  store i8 1, i8* %arrayidx130, align 1, !dbg !922
  %198 = load i8*, i8** %pVerts_A124, align 8, !dbg !923
  %arrayidx131 = getelementptr inbounds i8, i8* %198, i64 2, !dbg !923
  store i8 3, i8* %arrayidx131, align 1, !dbg !924
  %199 = load i32, i32* %i0, align 4, !dbg !925
  %200 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !926
  %201 = load i32, i32* %iDstTriIndex, align 4, !dbg !927
  %mul132 = mul nsw i32 %201, 3, !dbg !928
  %add133 = add nsw i32 %mul132, 0, !dbg !929
  %idxprom134 = sext i32 %add133 to i64, !dbg !926
  %arrayidx135 = getelementptr inbounds i32, i32* %200, i64 %idxprom134, !dbg !926
  store i32 %199, i32* %arrayidx135, align 4, !dbg !930
  %202 = load i32, i32* %i1, align 4, !dbg !931
  %203 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !932
  %204 = load i32, i32* %iDstTriIndex, align 4, !dbg !933
  %mul136 = mul nsw i32 %204, 3, !dbg !934
  %add137 = add nsw i32 %mul136, 1, !dbg !935
  %idxprom138 = sext i32 %add137 to i64, !dbg !932
  %arrayidx139 = getelementptr inbounds i32, i32* %203, i64 %idxprom138, !dbg !932
  store i32 %202, i32* %arrayidx139, align 4, !dbg !936
  %205 = load i32, i32* %i3, align 4, !dbg !937
  %206 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !938
  %207 = load i32, i32* %iDstTriIndex, align 4, !dbg !939
  %mul140 = mul nsw i32 %207, 3, !dbg !940
  %add141 = add nsw i32 %mul140, 2, !dbg !941
  %idxprom142 = sext i32 %add141 to i64, !dbg !938
  %arrayidx143 = getelementptr inbounds i32, i32* %206, i64 %idxprom142, !dbg !938
  store i32 %205, i32* %arrayidx143, align 4, !dbg !942
  %208 = load i32, i32* %iDstTriIndex, align 4, !dbg !943
  %inc144 = add nsw i32 %208, 1, !dbg !943
  store i32 %inc144, i32* %iDstTriIndex, align 4, !dbg !943
  call void @llvm.dbg.declare(metadata i8** %pVerts_B145, metadata !944, metadata !DIExpression()), !dbg !946
  %209 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !947
  %210 = load i32, i32* %iDstTriIndex, align 4, !dbg !948
  %idxprom146 = sext i32 %210 to i64, !dbg !947
  %arrayidx147 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %209, i64 %idxprom146, !dbg !947
  %vert_num148 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx147, i32 0, i32 9, !dbg !949
  %arraydecay149 = getelementptr inbounds [4 x i8], [4 x i8]* %vert_num148, i64 0, i64 0, !dbg !947
  store i8* %arraydecay149, i8** %pVerts_B145, align 8, !dbg !946
  %211 = load i8*, i8** %pVerts_B145, align 8, !dbg !950
  %arrayidx150 = getelementptr inbounds i8, i8* %211, i64 0, !dbg !950
  store i8 1, i8* %arrayidx150, align 1, !dbg !951
  %212 = load i8*, i8** %pVerts_B145, align 8, !dbg !952
  %arrayidx151 = getelementptr inbounds i8, i8* %212, i64 1, !dbg !952
  store i8 2, i8* %arrayidx151, align 1, !dbg !953
  %213 = load i8*, i8** %pVerts_B145, align 8, !dbg !954
  %arrayidx152 = getelementptr inbounds i8, i8* %213, i64 2, !dbg !954
  store i8 3, i8* %arrayidx152, align 1, !dbg !955
  %214 = load i32, i32* %i1, align 4, !dbg !956
  %215 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !957
  %216 = load i32, i32* %iDstTriIndex, align 4, !dbg !958
  %mul153 = mul nsw i32 %216, 3, !dbg !959
  %add154 = add nsw i32 %mul153, 0, !dbg !960
  %idxprom155 = sext i32 %add154 to i64, !dbg !957
  %arrayidx156 = getelementptr inbounds i32, i32* %215, i64 %idxprom155, !dbg !957
  store i32 %214, i32* %arrayidx156, align 4, !dbg !961
  %217 = load i32, i32* %i2, align 4, !dbg !962
  %218 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !963
  %219 = load i32, i32* %iDstTriIndex, align 4, !dbg !964
  %mul157 = mul nsw i32 %219, 3, !dbg !965
  %add158 = add nsw i32 %mul157, 1, !dbg !966
  %idxprom159 = sext i32 %add158 to i64, !dbg !963
  %arrayidx160 = getelementptr inbounds i32, i32* %218, i64 %idxprom159, !dbg !963
  store i32 %217, i32* %arrayidx160, align 4, !dbg !967
  %220 = load i32, i32* %i3, align 4, !dbg !968
  %221 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !969
  %222 = load i32, i32* %iDstTriIndex, align 4, !dbg !970
  %mul161 = mul nsw i32 %222, 3, !dbg !971
  %add162 = add nsw i32 %mul161, 2, !dbg !972
  %idxprom163 = sext i32 %add162 to i64, !dbg !969
  %arrayidx164 = getelementptr inbounds i32, i32* %221, i64 %idxprom163, !dbg !969
  store i32 %220, i32* %arrayidx164, align 4, !dbg !973
  %223 = load i32, i32* %iDstTriIndex, align 4, !dbg !974
  %inc165 = add nsw i32 %223, 1, !dbg !974
  store i32 %inc165, i32* %iDstTriIndex, align 4, !dbg !974
  br label %if.end166

if.end166:                                        ; preds = %if.else123, %if.then82
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.then10
  %224 = load i32, i32* %verts, align 4, !dbg !975
  %225 = load i32, i32* %iTSpacesOffs, align 4, !dbg !976
  %add168 = add nsw i32 %225, %224, !dbg !976
  store i32 %add168, i32* %iTSpacesOffs, align 4, !dbg !976
  br label %for.inc, !dbg !977

for.inc:                                          ; preds = %if.end167, %if.then
  %226 = load i32, i32* %f, align 4, !dbg !978
  %inc169 = add nsw i32 %226, 1, !dbg !978
  store i32 %inc169, i32* %f, align 4, !dbg !978
  br label %for.cond, !dbg !979, !llvm.loop !980

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %t, align 4, !dbg !982
  br label %for.cond170, !dbg !984

for.cond170:                                      ; preds = %for.inc175, %for.end
  %227 = load i32, i32* %t, align 4, !dbg !985
  %228 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !987
  %cmp171 = icmp slt i32 %227, %228, !dbg !988
  br i1 %cmp171, label %for.body172, label %for.end177, !dbg !989

for.body172:                                      ; preds = %for.cond170
  %229 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !990
  %230 = load i32, i32* %t, align 4, !dbg !991
  %idxprom173 = sext i32 %230 to i64, !dbg !990
  %arrayidx174 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %229, i64 %idxprom173, !dbg !990
  %iFlag = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx174, i32 0, i32 7, !dbg !992
  store i32 0, i32* %iFlag, align 4, !dbg !993
  br label %for.inc175, !dbg !990

for.inc175:                                       ; preds = %for.body172
  %231 = load i32, i32* %t, align 4, !dbg !994
  %inc176 = add nsw i32 %231, 1, !dbg !994
  store i32 %inc176, i32* %t, align 4, !dbg !994
  br label %for.cond170, !dbg !995, !llvm.loop !996

for.end177:                                       ; preds = %for.cond170
  %232 = load i32, i32* %iTSpacesOffs, align 4, !dbg !998
  ret i32 %232, !dbg !999
}

; Function Attrs: noinline nounwind uwtable
define internal void @GenerateSharedVerticesIndexList(i32* %piTriList_in_and_out, %struct.SMikkTSpaceContext* %pContext, i32 %iNrTrianglesIn) #2 !dbg !1000 {
entry:
  %piTriList_in_and_out.addr = alloca i32*, align 8
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %iNrTrianglesIn.addr = alloca i32, align 4
  %piHashTable = alloca i32*, align 8
  %piHashCount = alloca i32*, align 8
  %piHashOffsets = alloca i32*, align 8
  %piHashCount2 = alloca i32*, align 8
  %pTmpVert = alloca %struct.STmpVert*, align 8
  %i = alloca i32, align 4
  %iChannel = alloca i32, align 4
  %k = alloca i32, align 4
  %e = alloca i32, align 4
  %iMaxCount = alloca i32, align 4
  %vMin = alloca %struct.SVec3, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %vMax = alloca %struct.SVec3, align 4
  %vDim = alloca %struct.SVec3, align 4
  %fMin = alloca float, align 4
  %fMax = alloca float, align 4
  %index = alloca i32, align 4
  %vP = alloca %struct.SVec3, align 4
  %tmp2 = alloca { <2 x float>, float }, align 8
  %tmp42 = alloca %struct.SVec3, align 4
  %vMax.coerce = alloca { <2 x float>, float }, align 4
  %vMin.coerce = alloca { <2 x float>, float }, align 4
  %tmp44 = alloca { <2 x float>, float }, align 8
  %index104 = alloca i32, align 4
  %vP107 = alloca %struct.SVec3, align 4
  %tmp109 = alloca { <2 x float>, float }, align 8
  %fVal = alloca float, align 4
  %iCell = alloca i32, align 4
  %index148 = alloca i32, align 4
  %vP151 = alloca %struct.SVec3, align 4
  %tmp153 = alloca { <2 x float>, float }, align 8
  %fVal154 = alloca float, align 4
  %iCell170 = alloca i32, align 4
  %pTable = alloca i32*, align 8
  %pTable216 = alloca i32*, align 8
  %iEntries = alloca i32, align 4
  %i234 = alloca i32, align 4
  %vP237 = alloca %struct.SVec3, align 4
  %tmp241 = alloca { <2 x float>, float }, align 8
  store i32* %piTriList_in_and_out, i32** %piTriList_in_and_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriList_in_and_out.addr, metadata !1003, metadata !DIExpression()), !dbg !1004
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !1005, metadata !DIExpression()), !dbg !1006
  store i32 %iNrTrianglesIn, i32* %iNrTrianglesIn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iNrTrianglesIn.addr, metadata !1007, metadata !DIExpression()), !dbg !1008
  call void @llvm.dbg.declare(metadata i32** %piHashTable, metadata !1009, metadata !DIExpression()), !dbg !1010
  store i32* null, i32** %piHashTable, align 8, !dbg !1010
  call void @llvm.dbg.declare(metadata i32** %piHashCount, metadata !1011, metadata !DIExpression()), !dbg !1012
  store i32* null, i32** %piHashCount, align 8, !dbg !1012
  call void @llvm.dbg.declare(metadata i32** %piHashOffsets, metadata !1013, metadata !DIExpression()), !dbg !1014
  store i32* null, i32** %piHashOffsets, align 8, !dbg !1014
  call void @llvm.dbg.declare(metadata i32** %piHashCount2, metadata !1015, metadata !DIExpression()), !dbg !1016
  store i32* null, i32** %piHashCount2, align 8, !dbg !1016
  call void @llvm.dbg.declare(metadata %struct.STmpVert** %pTmpVert, metadata !1017, metadata !DIExpression()), !dbg !1018
  store %struct.STmpVert* null, %struct.STmpVert** %pTmpVert, align 8, !dbg !1018
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1019, metadata !DIExpression()), !dbg !1020
  store i32 0, i32* %i, align 4, !dbg !1020
  call void @llvm.dbg.declare(metadata i32* %iChannel, metadata !1021, metadata !DIExpression()), !dbg !1022
  store i32 0, i32* %iChannel, align 4, !dbg !1022
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1023, metadata !DIExpression()), !dbg !1024
  store i32 0, i32* %k, align 4, !dbg !1024
  call void @llvm.dbg.declare(metadata i32* %e, metadata !1025, metadata !DIExpression()), !dbg !1026
  store i32 0, i32* %e, align 4, !dbg !1026
  call void @llvm.dbg.declare(metadata i32* %iMaxCount, metadata !1027, metadata !DIExpression()), !dbg !1028
  store i32 0, i32* %iMaxCount, align 4, !dbg !1028
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vMin, metadata !1029, metadata !DIExpression()), !dbg !1030
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1031
  %call = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %0, i32 0), !dbg !1032
  store { <2 x float>, float } %call, { <2 x float>, float }* %tmp, align 8, !dbg !1032
  %1 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !1032
  %2 = bitcast %struct.SVec3* %vMin to i8*, !dbg !1032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 8 %1, i64 12, i1 false), !dbg !1032
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vMax, metadata !1033, metadata !DIExpression()), !dbg !1034
  %3 = bitcast %struct.SVec3* %vMax to i8*, !dbg !1035
  %4 = bitcast %struct.SVec3* %vMin to i8*, !dbg !1035
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 12, i1 false), !dbg !1035
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vDim, metadata !1036, metadata !DIExpression()), !dbg !1037
  call void @llvm.dbg.declare(metadata float* %fMin, metadata !1038, metadata !DIExpression()), !dbg !1039
  call void @llvm.dbg.declare(metadata float* %fMax, metadata !1040, metadata !DIExpression()), !dbg !1041
  store i32 1, i32* %i, align 4, !dbg !1042
  br label %for.cond, !dbg !1044

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !1045
  %6 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !1047
  %mul = mul nsw i32 %6, 3, !dbg !1048
  %cmp = icmp slt i32 %5, %mul, !dbg !1049
  br i1 %cmp, label %for.body, label %for.end, !dbg !1050

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %index, metadata !1051, metadata !DIExpression()), !dbg !1053
  %7 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !1054
  %8 = load i32, i32* %i, align 4, !dbg !1055
  %idxprom = sext i32 %8 to i64, !dbg !1054
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !1054
  %9 = load i32, i32* %arrayidx, align 4, !dbg !1054
  store i32 %9, i32* %index, align 4, !dbg !1053
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vP, metadata !1056, metadata !DIExpression()), !dbg !1057
  %10 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1058
  %11 = load i32, i32* %index, align 4, !dbg !1059
  %call1 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %10, i32 %11), !dbg !1060
  store { <2 x float>, float } %call1, { <2 x float>, float }* %tmp2, align 8, !dbg !1060
  %12 = bitcast { <2 x float>, float }* %tmp2 to i8*, !dbg !1060
  %13 = bitcast %struct.SVec3* %vP to i8*, !dbg !1060
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 8 %12, i64 12, i1 false), !dbg !1060
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMin, i32 0, i32 0, !dbg !1061
  %14 = load float, float* %x, align 4, !dbg !1061
  %x3 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 0, !dbg !1063
  %15 = load float, float* %x3, align 4, !dbg !1063
  %cmp4 = fcmp ogt float %14, %15, !dbg !1064
  br i1 %cmp4, label %if.then, label %if.else, !dbg !1065

if.then:                                          ; preds = %for.body
  %x5 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 0, !dbg !1066
  %16 = load float, float* %x5, align 4, !dbg !1066
  %x6 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMin, i32 0, i32 0, !dbg !1067
  store float %16, float* %x6, align 4, !dbg !1068
  br label %if.end13, !dbg !1069

if.else:                                          ; preds = %for.body
  %x7 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMax, i32 0, i32 0, !dbg !1070
  %17 = load float, float* %x7, align 4, !dbg !1070
  %x8 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 0, !dbg !1072
  %18 = load float, float* %x8, align 4, !dbg !1072
  %cmp9 = fcmp olt float %17, %18, !dbg !1073
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !1074

if.then10:                                        ; preds = %if.else
  %x11 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 0, !dbg !1075
  %19 = load float, float* %x11, align 4, !dbg !1075
  %x12 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMax, i32 0, i32 0, !dbg !1076
  store float %19, float* %x12, align 4, !dbg !1077
  br label %if.end, !dbg !1078

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMin, i32 0, i32 1, !dbg !1079
  %20 = load float, float* %y, align 4, !dbg !1079
  %y14 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 1, !dbg !1081
  %21 = load float, float* %y14, align 4, !dbg !1081
  %cmp15 = fcmp ogt float %20, %21, !dbg !1082
  br i1 %cmp15, label %if.then16, label %if.else19, !dbg !1083

if.then16:                                        ; preds = %if.end13
  %y17 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 1, !dbg !1084
  %22 = load float, float* %y17, align 4, !dbg !1084
  %y18 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMin, i32 0, i32 1, !dbg !1085
  store float %22, float* %y18, align 4, !dbg !1086
  br label %if.end27, !dbg !1087

if.else19:                                        ; preds = %if.end13
  %y20 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMax, i32 0, i32 1, !dbg !1088
  %23 = load float, float* %y20, align 4, !dbg !1088
  %y21 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 1, !dbg !1090
  %24 = load float, float* %y21, align 4, !dbg !1090
  %cmp22 = fcmp olt float %23, %24, !dbg !1091
  br i1 %cmp22, label %if.then23, label %if.end26, !dbg !1092

if.then23:                                        ; preds = %if.else19
  %y24 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 1, !dbg !1093
  %25 = load float, float* %y24, align 4, !dbg !1093
  %y25 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMax, i32 0, i32 1, !dbg !1094
  store float %25, float* %y25, align 4, !dbg !1095
  br label %if.end26, !dbg !1096

if.end26:                                         ; preds = %if.then23, %if.else19
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then16
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMin, i32 0, i32 2, !dbg !1097
  %26 = load float, float* %z, align 4, !dbg !1097
  %z28 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 2, !dbg !1099
  %27 = load float, float* %z28, align 4, !dbg !1099
  %cmp29 = fcmp ogt float %26, %27, !dbg !1100
  br i1 %cmp29, label %if.then30, label %if.else33, !dbg !1101

if.then30:                                        ; preds = %if.end27
  %z31 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 2, !dbg !1102
  %28 = load float, float* %z31, align 4, !dbg !1102
  %z32 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMin, i32 0, i32 2, !dbg !1103
  store float %28, float* %z32, align 4, !dbg !1104
  br label %if.end41, !dbg !1105

if.else33:                                        ; preds = %if.end27
  %z34 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMax, i32 0, i32 2, !dbg !1106
  %29 = load float, float* %z34, align 4, !dbg !1106
  %z35 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 2, !dbg !1108
  %30 = load float, float* %z35, align 4, !dbg !1108
  %cmp36 = fcmp olt float %29, %30, !dbg !1109
  br i1 %cmp36, label %if.then37, label %if.end40, !dbg !1110

if.then37:                                        ; preds = %if.else33
  %z38 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 2, !dbg !1111
  %31 = load float, float* %z38, align 4, !dbg !1111
  %z39 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMax, i32 0, i32 2, !dbg !1112
  store float %31, float* %z39, align 4, !dbg !1113
  br label %if.end40, !dbg !1114

if.end40:                                         ; preds = %if.then37, %if.else33
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then30
  br label %for.inc, !dbg !1115

for.inc:                                          ; preds = %if.end41
  %32 = load i32, i32* %i, align 4, !dbg !1116
  %inc = add nsw i32 %32, 1, !dbg !1116
  store i32 %inc, i32* %i, align 4, !dbg !1116
  br label %for.cond, !dbg !1117, !llvm.loop !1118

for.end:                                          ; preds = %for.cond
  %33 = bitcast { <2 x float>, float }* %vMax.coerce to i8*, !dbg !1120
  %34 = bitcast %struct.SVec3* %vMax to i8*, !dbg !1120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 12, i1 false), !dbg !1120
  %35 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vMax.coerce, i32 0, i32 0, !dbg !1120
  %36 = load <2 x float>, <2 x float>* %35, align 4, !dbg !1120
  %37 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vMax.coerce, i32 0, i32 1, !dbg !1120
  %38 = load float, float* %37, align 4, !dbg !1120
  %39 = bitcast { <2 x float>, float }* %vMin.coerce to i8*, !dbg !1120
  %40 = bitcast %struct.SVec3* %vMin to i8*, !dbg !1120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 12, i1 false), !dbg !1120
  %41 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vMin.coerce, i32 0, i32 0, !dbg !1120
  %42 = load <2 x float>, <2 x float>* %41, align 4, !dbg !1120
  %43 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vMin.coerce, i32 0, i32 1, !dbg !1120
  %44 = load float, float* %43, align 4, !dbg !1120
  %call43 = call { <2 x float>, float } @vsub(<2 x float> %36, float %38, <2 x float> %42, float %44), !dbg !1120
  store { <2 x float>, float } %call43, { <2 x float>, float }* %tmp44, align 8, !dbg !1120
  %45 = bitcast { <2 x float>, float }* %tmp44 to i8*, !dbg !1120
  %46 = bitcast %struct.SVec3* %tmp42 to i8*, !dbg !1120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 8 %45, i64 12, i1 false), !dbg !1120
  %47 = bitcast %struct.SVec3* %vDim to i8*, !dbg !1120
  %48 = bitcast %struct.SVec3* %tmp42 to i8*, !dbg !1120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 12, i1 false), !dbg !1120
  store i32 0, i32* %iChannel, align 4, !dbg !1121
  %x45 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMin, i32 0, i32 0, !dbg !1122
  %49 = load float, float* %x45, align 4, !dbg !1122
  store float %49, float* %fMin, align 4, !dbg !1123
  %x46 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMax, i32 0, i32 0, !dbg !1124
  %50 = load float, float* %x46, align 4, !dbg !1124
  store float %50, float* %fMax, align 4, !dbg !1125
  %y47 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vDim, i32 0, i32 1, !dbg !1126
  %51 = load float, float* %y47, align 4, !dbg !1126
  %x48 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vDim, i32 0, i32 0, !dbg !1128
  %52 = load float, float* %x48, align 4, !dbg !1128
  %cmp49 = fcmp ogt float %51, %52, !dbg !1129
  br i1 %cmp49, label %land.lhs.true, label %if.else56, !dbg !1130

land.lhs.true:                                    ; preds = %for.end
  %y50 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vDim, i32 0, i32 1, !dbg !1131
  %53 = load float, float* %y50, align 4, !dbg !1131
  %z51 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vDim, i32 0, i32 2, !dbg !1132
  %54 = load float, float* %z51, align 4, !dbg !1132
  %cmp52 = fcmp ogt float %53, %54, !dbg !1133
  br i1 %cmp52, label %if.then53, label %if.else56, !dbg !1134

if.then53:                                        ; preds = %land.lhs.true
  store i32 1, i32* %iChannel, align 4, !dbg !1135
  %y54 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMin, i32 0, i32 1, !dbg !1137
  %55 = load float, float* %y54, align 4, !dbg !1137
  store float %55, float* %fMin, align 4, !dbg !1138
  %y55 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMax, i32 0, i32 1, !dbg !1139
  %56 = load float, float* %y55, align 4, !dbg !1139
  store float %56, float* %fMax, align 4, !dbg !1140
  br label %if.end64, !dbg !1141

if.else56:                                        ; preds = %land.lhs.true, %for.end
  %z57 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vDim, i32 0, i32 2, !dbg !1142
  %57 = load float, float* %z57, align 4, !dbg !1142
  %x58 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vDim, i32 0, i32 0, !dbg !1144
  %58 = load float, float* %x58, align 4, !dbg !1144
  %cmp59 = fcmp ogt float %57, %58, !dbg !1145
  br i1 %cmp59, label %if.then60, label %if.end63, !dbg !1146

if.then60:                                        ; preds = %if.else56
  store i32 2, i32* %iChannel, align 4, !dbg !1147
  %z61 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMin, i32 0, i32 2, !dbg !1149
  %59 = load float, float* %z61, align 4, !dbg !1149
  store float %59, float* %fMin, align 4, !dbg !1150
  %z62 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vMax, i32 0, i32 2, !dbg !1151
  %60 = load float, float* %z62, align 4, !dbg !1151
  store float %60, float* %fMax, align 4, !dbg !1152
  br label %if.end63, !dbg !1153

if.end63:                                         ; preds = %if.then60, %if.else56
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then53
  %61 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !1154
  %conv = sext i32 %61 to i64, !dbg !1154
  %mul65 = mul i64 4, %conv, !dbg !1155
  %mul66 = mul i64 %mul65, 3, !dbg !1156
  %call67 = call noalias i8* @malloc(i64 %mul66) #5, !dbg !1157
  %62 = bitcast i8* %call67 to i32*, !dbg !1158
  store i32* %62, i32** %piHashTable, align 8, !dbg !1159
  %call68 = call noalias i8* @malloc(i64 8192) #5, !dbg !1160
  %63 = bitcast i8* %call68 to i32*, !dbg !1161
  store i32* %63, i32** %piHashCount, align 8, !dbg !1162
  %call69 = call noalias i8* @malloc(i64 8192) #5, !dbg !1163
  %64 = bitcast i8* %call69 to i32*, !dbg !1164
  store i32* %64, i32** %piHashOffsets, align 8, !dbg !1165
  %call70 = call noalias i8* @malloc(i64 8192) #5, !dbg !1166
  %65 = bitcast i8* %call70 to i32*, !dbg !1167
  store i32* %65, i32** %piHashCount2, align 8, !dbg !1168
  %66 = load i32*, i32** %piHashTable, align 8, !dbg !1169
  %cmp71 = icmp eq i32* %66, null, !dbg !1171
  br i1 %cmp71, label %if.then81, label %lor.lhs.false, !dbg !1172

lor.lhs.false:                                    ; preds = %if.end64
  %67 = load i32*, i32** %piHashCount, align 8, !dbg !1173
  %cmp73 = icmp eq i32* %67, null, !dbg !1174
  br i1 %cmp73, label %if.then81, label %lor.lhs.false75, !dbg !1175

lor.lhs.false75:                                  ; preds = %lor.lhs.false
  %68 = load i32*, i32** %piHashOffsets, align 8, !dbg !1176
  %cmp76 = icmp eq i32* %68, null, !dbg !1177
  br i1 %cmp76, label %if.then81, label %lor.lhs.false78, !dbg !1178

lor.lhs.false78:                                  ; preds = %lor.lhs.false75
  %69 = load i32*, i32** %piHashCount2, align 8, !dbg !1179
  %cmp79 = icmp eq i32* %69, null, !dbg !1180
  br i1 %cmp79, label %if.then81, label %if.end98, !dbg !1181

if.then81:                                        ; preds = %lor.lhs.false78, %lor.lhs.false75, %lor.lhs.false, %if.end64
  %70 = load i32*, i32** %piHashTable, align 8, !dbg !1182
  %cmp82 = icmp ne i32* %70, null, !dbg !1185
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !1186

if.then84:                                        ; preds = %if.then81
  %71 = load i32*, i32** %piHashTable, align 8, !dbg !1187
  %72 = bitcast i32* %71 to i8*, !dbg !1187
  call void @free(i8* %72) #5, !dbg !1188
  br label %if.end85, !dbg !1188

if.end85:                                         ; preds = %if.then84, %if.then81
  %73 = load i32*, i32** %piHashCount, align 8, !dbg !1189
  %cmp86 = icmp ne i32* %73, null, !dbg !1191
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !1192

if.then88:                                        ; preds = %if.end85
  %74 = load i32*, i32** %piHashCount, align 8, !dbg !1193
  %75 = bitcast i32* %74 to i8*, !dbg !1193
  call void @free(i8* %75) #5, !dbg !1194
  br label %if.end89, !dbg !1194

if.end89:                                         ; preds = %if.then88, %if.end85
  %76 = load i32*, i32** %piHashOffsets, align 8, !dbg !1195
  %cmp90 = icmp ne i32* %76, null, !dbg !1197
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !1198

if.then92:                                        ; preds = %if.end89
  %77 = load i32*, i32** %piHashOffsets, align 8, !dbg !1199
  %78 = bitcast i32* %77 to i8*, !dbg !1199
  call void @free(i8* %78) #5, !dbg !1200
  br label %if.end93, !dbg !1200

if.end93:                                         ; preds = %if.then92, %if.end89
  %79 = load i32*, i32** %piHashCount2, align 8, !dbg !1201
  %cmp94 = icmp ne i32* %79, null, !dbg !1203
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !1204

if.then96:                                        ; preds = %if.end93
  %80 = load i32*, i32** %piHashCount2, align 8, !dbg !1205
  %81 = bitcast i32* %80 to i8*, !dbg !1205
  call void @free(i8* %81) #5, !dbg !1206
  br label %if.end97, !dbg !1206

if.end97:                                         ; preds = %if.then96, %if.end93
  %82 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !1207
  %83 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1208
  %84 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !1209
  call void @GenerateSharedVerticesIndexListSlow(i32* %82, %struct.SMikkTSpaceContext* %83, i32 %84), !dbg !1210
  br label %return, !dbg !1211

if.end98:                                         ; preds = %lor.lhs.false78
  %85 = load i32*, i32** %piHashCount, align 8, !dbg !1212
  %86 = bitcast i32* %85 to i8*, !dbg !1213
  call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 8192, i1 false), !dbg !1213
  %87 = load i32*, i32** %piHashCount2, align 8, !dbg !1214
  %88 = bitcast i32* %87 to i8*, !dbg !1215
  call void @llvm.memset.p0i8.i64(i8* align 4 %88, i8 0, i64 8192, i1 false), !dbg !1215
  store i32 0, i32* %i, align 4, !dbg !1216
  br label %for.cond99, !dbg !1218

for.cond99:                                       ; preds = %for.inc125, %if.end98
  %89 = load i32, i32* %i, align 4, !dbg !1219
  %90 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !1221
  %mul100 = mul nsw i32 %90, 3, !dbg !1222
  %cmp101 = icmp slt i32 %89, %mul100, !dbg !1223
  br i1 %cmp101, label %for.body103, label %for.end127, !dbg !1224

for.body103:                                      ; preds = %for.cond99
  call void @llvm.dbg.declare(metadata i32* %index104, metadata !1225, metadata !DIExpression()), !dbg !1227
  %91 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !1228
  %92 = load i32, i32* %i, align 4, !dbg !1229
  %idxprom105 = sext i32 %92 to i64, !dbg !1228
  %arrayidx106 = getelementptr inbounds i32, i32* %91, i64 %idxprom105, !dbg !1228
  %93 = load i32, i32* %arrayidx106, align 4, !dbg !1228
  store i32 %93, i32* %index104, align 4, !dbg !1227
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vP107, metadata !1230, metadata !DIExpression()), !dbg !1231
  %94 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1232
  %95 = load i32, i32* %index104, align 4, !dbg !1233
  %call108 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %94, i32 %95), !dbg !1234
  store { <2 x float>, float } %call108, { <2 x float>, float }* %tmp109, align 8, !dbg !1234
  %96 = bitcast { <2 x float>, float }* %tmp109 to i8*, !dbg !1234
  %97 = bitcast %struct.SVec3* %vP107 to i8*, !dbg !1234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 8 %96, i64 12, i1 false), !dbg !1234
  call void @llvm.dbg.declare(metadata float* %fVal, metadata !1235, metadata !DIExpression()), !dbg !1236
  %98 = load i32, i32* %iChannel, align 4, !dbg !1237
  %cmp110 = icmp eq i32 %98, 0, !dbg !1238
  br i1 %cmp110, label %cond.true, label %cond.false, !dbg !1237

cond.true:                                        ; preds = %for.body103
  %x112 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP107, i32 0, i32 0, !dbg !1239
  %99 = load float, float* %x112, align 4, !dbg !1239
  br label %cond.end119, !dbg !1237

cond.false:                                       ; preds = %for.body103
  %100 = load i32, i32* %iChannel, align 4, !dbg !1240
  %cmp113 = icmp eq i32 %100, 1, !dbg !1241
  br i1 %cmp113, label %cond.true115, label %cond.false117, !dbg !1240

cond.true115:                                     ; preds = %cond.false
  %y116 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP107, i32 0, i32 1, !dbg !1242
  %101 = load float, float* %y116, align 4, !dbg !1242
  br label %cond.end, !dbg !1240

cond.false117:                                    ; preds = %cond.false
  %z118 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP107, i32 0, i32 2, !dbg !1243
  %102 = load float, float* %z118, align 4, !dbg !1243
  br label %cond.end, !dbg !1240

cond.end:                                         ; preds = %cond.false117, %cond.true115
  %cond = phi float [ %101, %cond.true115 ], [ %102, %cond.false117 ], !dbg !1240
  br label %cond.end119, !dbg !1237

cond.end119:                                      ; preds = %cond.end, %cond.true
  %cond120 = phi float [ %99, %cond.true ], [ %cond, %cond.end ], !dbg !1237
  store float %cond120, float* %fVal, align 4, !dbg !1236
  call void @llvm.dbg.declare(metadata i32* %iCell, metadata !1244, metadata !DIExpression()), !dbg !1245
  %103 = load float, float* %fMin, align 4, !dbg !1246
  %104 = load float, float* %fMax, align 4, !dbg !1247
  %105 = load float, float* %fVal, align 4, !dbg !1248
  %call121 = call i32 @FindGridCell(float %103, float %104, float %105), !dbg !1249
  store i32 %call121, i32* %iCell, align 4, !dbg !1245
  %106 = load i32*, i32** %piHashCount, align 8, !dbg !1250
  %107 = load i32, i32* %iCell, align 4, !dbg !1251
  %idxprom122 = sext i32 %107 to i64, !dbg !1250
  %arrayidx123 = getelementptr inbounds i32, i32* %106, i64 %idxprom122, !dbg !1250
  %108 = load i32, i32* %arrayidx123, align 4, !dbg !1252
  %inc124 = add nsw i32 %108, 1, !dbg !1252
  store i32 %inc124, i32* %arrayidx123, align 4, !dbg !1252
  br label %for.inc125, !dbg !1253

for.inc125:                                       ; preds = %cond.end119
  %109 = load i32, i32* %i, align 4, !dbg !1254
  %inc126 = add nsw i32 %109, 1, !dbg !1254
  store i32 %inc126, i32* %i, align 4, !dbg !1254
  br label %for.cond99, !dbg !1255, !llvm.loop !1256

for.end127:                                       ; preds = %for.cond99
  %110 = load i32*, i32** %piHashOffsets, align 8, !dbg !1258
  %arrayidx128 = getelementptr inbounds i32, i32* %110, i64 0, !dbg !1258
  store i32 0, i32* %arrayidx128, align 4, !dbg !1259
  store i32 1, i32* %k, align 4, !dbg !1260
  br label %for.cond129, !dbg !1262

for.cond129:                                      ; preds = %for.inc140, %for.end127
  %111 = load i32, i32* %k, align 4, !dbg !1263
  %cmp130 = icmp slt i32 %111, 2048, !dbg !1265
  br i1 %cmp130, label %for.body132, label %for.end142, !dbg !1266

for.body132:                                      ; preds = %for.cond129
  %112 = load i32*, i32** %piHashOffsets, align 8, !dbg !1267
  %113 = load i32, i32* %k, align 4, !dbg !1268
  %sub = sub nsw i32 %113, 1, !dbg !1269
  %idxprom133 = sext i32 %sub to i64, !dbg !1267
  %arrayidx134 = getelementptr inbounds i32, i32* %112, i64 %idxprom133, !dbg !1267
  %114 = load i32, i32* %arrayidx134, align 4, !dbg !1267
  %115 = load i32*, i32** %piHashCount, align 8, !dbg !1270
  %116 = load i32, i32* %k, align 4, !dbg !1271
  %sub135 = sub nsw i32 %116, 1, !dbg !1272
  %idxprom136 = sext i32 %sub135 to i64, !dbg !1270
  %arrayidx137 = getelementptr inbounds i32, i32* %115, i64 %idxprom136, !dbg !1270
  %117 = load i32, i32* %arrayidx137, align 4, !dbg !1270
  %add = add nsw i32 %114, %117, !dbg !1273
  %118 = load i32*, i32** %piHashOffsets, align 8, !dbg !1274
  %119 = load i32, i32* %k, align 4, !dbg !1275
  %idxprom138 = sext i32 %119 to i64, !dbg !1274
  %arrayidx139 = getelementptr inbounds i32, i32* %118, i64 %idxprom138, !dbg !1274
  store i32 %add, i32* %arrayidx139, align 4, !dbg !1276
  br label %for.inc140, !dbg !1274

for.inc140:                                       ; preds = %for.body132
  %120 = load i32, i32* %k, align 4, !dbg !1277
  %inc141 = add nsw i32 %120, 1, !dbg !1277
  store i32 %inc141, i32* %k, align 4, !dbg !1277
  br label %for.cond129, !dbg !1278, !llvm.loop !1279

for.end142:                                       ; preds = %for.cond129
  store i32 0, i32* %i, align 4, !dbg !1281
  br label %for.cond143, !dbg !1283

for.cond143:                                      ; preds = %for.inc183, %for.end142
  %121 = load i32, i32* %i, align 4, !dbg !1284
  %122 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !1286
  %mul144 = mul nsw i32 %122, 3, !dbg !1287
  %cmp145 = icmp slt i32 %121, %mul144, !dbg !1288
  br i1 %cmp145, label %for.body147, label %for.end185, !dbg !1289

for.body147:                                      ; preds = %for.cond143
  call void @llvm.dbg.declare(metadata i32* %index148, metadata !1290, metadata !DIExpression()), !dbg !1292
  %123 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !1293
  %124 = load i32, i32* %i, align 4, !dbg !1294
  %idxprom149 = sext i32 %124 to i64, !dbg !1293
  %arrayidx150 = getelementptr inbounds i32, i32* %123, i64 %idxprom149, !dbg !1293
  %125 = load i32, i32* %arrayidx150, align 4, !dbg !1293
  store i32 %125, i32* %index148, align 4, !dbg !1292
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vP151, metadata !1295, metadata !DIExpression()), !dbg !1296
  %126 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1297
  %127 = load i32, i32* %index148, align 4, !dbg !1298
  %call152 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %126, i32 %127), !dbg !1299
  store { <2 x float>, float } %call152, { <2 x float>, float }* %tmp153, align 8, !dbg !1299
  %128 = bitcast { <2 x float>, float }* %tmp153 to i8*, !dbg !1299
  %129 = bitcast %struct.SVec3* %vP151 to i8*, !dbg !1299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %129, i8* align 8 %128, i64 12, i1 false), !dbg !1299
  call void @llvm.dbg.declare(metadata float* %fVal154, metadata !1300, metadata !DIExpression()), !dbg !1301
  %130 = load i32, i32* %iChannel, align 4, !dbg !1302
  %cmp155 = icmp eq i32 %130, 0, !dbg !1303
  br i1 %cmp155, label %cond.true157, label %cond.false159, !dbg !1302

cond.true157:                                     ; preds = %for.body147
  %x158 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP151, i32 0, i32 0, !dbg !1304
  %131 = load float, float* %x158, align 4, !dbg !1304
  br label %cond.end168, !dbg !1302

cond.false159:                                    ; preds = %for.body147
  %132 = load i32, i32* %iChannel, align 4, !dbg !1305
  %cmp160 = icmp eq i32 %132, 1, !dbg !1306
  br i1 %cmp160, label %cond.true162, label %cond.false164, !dbg !1305

cond.true162:                                     ; preds = %cond.false159
  %y163 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP151, i32 0, i32 1, !dbg !1307
  %133 = load float, float* %y163, align 4, !dbg !1307
  br label %cond.end166, !dbg !1305

cond.false164:                                    ; preds = %cond.false159
  %z165 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP151, i32 0, i32 2, !dbg !1308
  %134 = load float, float* %z165, align 4, !dbg !1308
  br label %cond.end166, !dbg !1305

cond.end166:                                      ; preds = %cond.false164, %cond.true162
  %cond167 = phi float [ %133, %cond.true162 ], [ %134, %cond.false164 ], !dbg !1305
  br label %cond.end168, !dbg !1302

cond.end168:                                      ; preds = %cond.end166, %cond.true157
  %cond169 = phi float [ %131, %cond.true157 ], [ %cond167, %cond.end166 ], !dbg !1302
  store float %cond169, float* %fVal154, align 4, !dbg !1301
  call void @llvm.dbg.declare(metadata i32* %iCell170, metadata !1309, metadata !DIExpression()), !dbg !1310
  %135 = load float, float* %fMin, align 4, !dbg !1311
  %136 = load float, float* %fMax, align 4, !dbg !1312
  %137 = load float, float* %fVal154, align 4, !dbg !1313
  %call171 = call i32 @FindGridCell(float %135, float %136, float %137), !dbg !1314
  store i32 %call171, i32* %iCell170, align 4, !dbg !1310
  call void @llvm.dbg.declare(metadata i32** %pTable, metadata !1315, metadata !DIExpression()), !dbg !1316
  store i32* null, i32** %pTable, align 8, !dbg !1316
  %138 = load i32*, i32** %piHashTable, align 8, !dbg !1317
  %139 = load i32*, i32** %piHashOffsets, align 8, !dbg !1318
  %140 = load i32, i32* %iCell170, align 4, !dbg !1319
  %idxprom172 = sext i32 %140 to i64, !dbg !1318
  %arrayidx173 = getelementptr inbounds i32, i32* %139, i64 %idxprom172, !dbg !1318
  %141 = load i32, i32* %arrayidx173, align 4, !dbg !1318
  %idxprom174 = sext i32 %141 to i64, !dbg !1317
  %arrayidx175 = getelementptr inbounds i32, i32* %138, i64 %idxprom174, !dbg !1317
  store i32* %arrayidx175, i32** %pTable, align 8, !dbg !1320
  %142 = load i32, i32* %i, align 4, !dbg !1321
  %143 = load i32*, i32** %pTable, align 8, !dbg !1322
  %144 = load i32*, i32** %piHashCount2, align 8, !dbg !1323
  %145 = load i32, i32* %iCell170, align 4, !dbg !1324
  %idxprom176 = sext i32 %145 to i64, !dbg !1323
  %arrayidx177 = getelementptr inbounds i32, i32* %144, i64 %idxprom176, !dbg !1323
  %146 = load i32, i32* %arrayidx177, align 4, !dbg !1323
  %idxprom178 = sext i32 %146 to i64, !dbg !1322
  %arrayidx179 = getelementptr inbounds i32, i32* %143, i64 %idxprom178, !dbg !1322
  store i32 %142, i32* %arrayidx179, align 4, !dbg !1325
  %147 = load i32*, i32** %piHashCount2, align 8, !dbg !1326
  %148 = load i32, i32* %iCell170, align 4, !dbg !1327
  %idxprom180 = sext i32 %148 to i64, !dbg !1326
  %arrayidx181 = getelementptr inbounds i32, i32* %147, i64 %idxprom180, !dbg !1326
  %149 = load i32, i32* %arrayidx181, align 4, !dbg !1328
  %inc182 = add nsw i32 %149, 1, !dbg !1328
  store i32 %inc182, i32* %arrayidx181, align 4, !dbg !1328
  br label %for.inc183, !dbg !1329

for.inc183:                                       ; preds = %cond.end168
  %150 = load i32, i32* %i, align 4, !dbg !1330
  %inc184 = add nsw i32 %150, 1, !dbg !1330
  store i32 %inc184, i32* %i, align 4, !dbg !1330
  br label %for.cond143, !dbg !1331, !llvm.loop !1332

for.end185:                                       ; preds = %for.cond143
  store i32 0, i32* %k, align 4, !dbg !1334
  br label %for.cond186, !dbg !1336

for.cond186:                                      ; preds = %for.inc190, %for.end185
  %151 = load i32, i32* %k, align 4, !dbg !1337
  %cmp187 = icmp slt i32 %151, 2048, !dbg !1339
  br i1 %cmp187, label %for.body189, label %for.end192, !dbg !1340

for.body189:                                      ; preds = %for.cond186
  br label %for.inc190, !dbg !1341

for.inc190:                                       ; preds = %for.body189
  %152 = load i32, i32* %k, align 4, !dbg !1342
  %inc191 = add nsw i32 %152, 1, !dbg !1342
  store i32 %inc191, i32* %k, align 4, !dbg !1342
  br label %for.cond186, !dbg !1343, !llvm.loop !1344

for.end192:                                       ; preds = %for.cond186
  %153 = load i32*, i32** %piHashCount2, align 8, !dbg !1346
  %154 = bitcast i32* %153 to i8*, !dbg !1346
  call void @free(i8* %154) #5, !dbg !1347
  %155 = load i32*, i32** %piHashCount, align 8, !dbg !1348
  %arrayidx193 = getelementptr inbounds i32, i32* %155, i64 0, !dbg !1348
  %156 = load i32, i32* %arrayidx193, align 4, !dbg !1348
  store i32 %156, i32* %iMaxCount, align 4, !dbg !1349
  store i32 1, i32* %k, align 4, !dbg !1350
  br label %for.cond194, !dbg !1352

for.cond194:                                      ; preds = %for.inc206, %for.end192
  %157 = load i32, i32* %k, align 4, !dbg !1353
  %cmp195 = icmp slt i32 %157, 2048, !dbg !1355
  br i1 %cmp195, label %for.body197, label %for.end208, !dbg !1356

for.body197:                                      ; preds = %for.cond194
  %158 = load i32, i32* %iMaxCount, align 4, !dbg !1357
  %159 = load i32*, i32** %piHashCount, align 8, !dbg !1359
  %160 = load i32, i32* %k, align 4, !dbg !1360
  %idxprom198 = sext i32 %160 to i64, !dbg !1359
  %arrayidx199 = getelementptr inbounds i32, i32* %159, i64 %idxprom198, !dbg !1359
  %161 = load i32, i32* %arrayidx199, align 4, !dbg !1359
  %cmp200 = icmp slt i32 %158, %161, !dbg !1361
  br i1 %cmp200, label %if.then202, label %if.end205, !dbg !1362

if.then202:                                       ; preds = %for.body197
  %162 = load i32*, i32** %piHashCount, align 8, !dbg !1363
  %163 = load i32, i32* %k, align 4, !dbg !1364
  %idxprom203 = sext i32 %163 to i64, !dbg !1363
  %arrayidx204 = getelementptr inbounds i32, i32* %162, i64 %idxprom203, !dbg !1363
  %164 = load i32, i32* %arrayidx204, align 4, !dbg !1363
  store i32 %164, i32* %iMaxCount, align 4, !dbg !1365
  br label %if.end205, !dbg !1366

if.end205:                                        ; preds = %if.then202, %for.body197
  br label %for.inc206, !dbg !1367

for.inc206:                                       ; preds = %if.end205
  %165 = load i32, i32* %k, align 4, !dbg !1368
  %inc207 = add nsw i32 %165, 1, !dbg !1368
  store i32 %inc207, i32* %k, align 4, !dbg !1368
  br label %for.cond194, !dbg !1369, !llvm.loop !1370

for.end208:                                       ; preds = %for.cond194
  %166 = load i32, i32* %iMaxCount, align 4, !dbg !1372
  %conv209 = sext i32 %166 to i64, !dbg !1372
  %mul210 = mul i64 16, %conv209, !dbg !1373
  %call211 = call noalias i8* @malloc(i64 %mul210) #5, !dbg !1374
  %167 = bitcast i8* %call211 to %struct.STmpVert*, !dbg !1375
  store %struct.STmpVert* %167, %struct.STmpVert** %pTmpVert, align 8, !dbg !1376
  store i32 0, i32* %k, align 4, !dbg !1377
  br label %for.cond212, !dbg !1379

for.cond212:                                      ; preds = %for.inc265, %for.end208
  %168 = load i32, i32* %k, align 4, !dbg !1380
  %cmp213 = icmp slt i32 %168, 2048, !dbg !1382
  br i1 %cmp213, label %for.body215, label %for.end267, !dbg !1383

for.body215:                                      ; preds = %for.cond212
  call void @llvm.dbg.declare(metadata i32** %pTable216, metadata !1384, metadata !DIExpression()), !dbg !1386
  %169 = load i32*, i32** %piHashTable, align 8, !dbg !1387
  %170 = load i32*, i32** %piHashOffsets, align 8, !dbg !1388
  %171 = load i32, i32* %k, align 4, !dbg !1389
  %idxprom217 = sext i32 %171 to i64, !dbg !1388
  %arrayidx218 = getelementptr inbounds i32, i32* %170, i64 %idxprom217, !dbg !1388
  %172 = load i32, i32* %arrayidx218, align 4, !dbg !1388
  %idxprom219 = sext i32 %172 to i64, !dbg !1387
  %arrayidx220 = getelementptr inbounds i32, i32* %169, i64 %idxprom219, !dbg !1387
  store i32* %arrayidx220, i32** %pTable216, align 8, !dbg !1386
  call void @llvm.dbg.declare(metadata i32* %iEntries, metadata !1390, metadata !DIExpression()), !dbg !1391
  %173 = load i32*, i32** %piHashCount, align 8, !dbg !1392
  %174 = load i32, i32* %k, align 4, !dbg !1393
  %idxprom221 = sext i32 %174 to i64, !dbg !1392
  %arrayidx222 = getelementptr inbounds i32, i32* %173, i64 %idxprom221, !dbg !1392
  %175 = load i32, i32* %arrayidx222, align 4, !dbg !1392
  store i32 %175, i32* %iEntries, align 4, !dbg !1391
  %176 = load i32, i32* %iEntries, align 4, !dbg !1394
  %cmp223 = icmp slt i32 %176, 2, !dbg !1396
  br i1 %cmp223, label %if.then225, label %if.end226, !dbg !1397

if.then225:                                       ; preds = %for.body215
  br label %for.inc265, !dbg !1398

if.end226:                                        ; preds = %for.body215
  %177 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert, align 8, !dbg !1399
  %cmp227 = icmp ne %struct.STmpVert* %177, null, !dbg !1401
  br i1 %cmp227, label %if.then229, label %if.else263, !dbg !1402

if.then229:                                       ; preds = %if.end226
  store i32 0, i32* %e, align 4, !dbg !1403
  br label %for.cond230, !dbg !1406

for.cond230:                                      ; preds = %for.inc259, %if.then229
  %178 = load i32, i32* %e, align 4, !dbg !1407
  %179 = load i32, i32* %iEntries, align 4, !dbg !1409
  %cmp231 = icmp slt i32 %178, %179, !dbg !1410
  br i1 %cmp231, label %for.body233, label %for.end261, !dbg !1411

for.body233:                                      ; preds = %for.cond230
  call void @llvm.dbg.declare(metadata i32* %i234, metadata !1412, metadata !DIExpression()), !dbg !1414
  %180 = load i32*, i32** %pTable216, align 8, !dbg !1415
  %181 = load i32, i32* %e, align 4, !dbg !1416
  %idxprom235 = sext i32 %181 to i64, !dbg !1415
  %arrayidx236 = getelementptr inbounds i32, i32* %180, i64 %idxprom235, !dbg !1415
  %182 = load i32, i32* %arrayidx236, align 4, !dbg !1415
  store i32 %182, i32* %i234, align 4, !dbg !1414
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vP237, metadata !1417, metadata !DIExpression()), !dbg !1418
  %183 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1419
  %184 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !1420
  %185 = load i32, i32* %i234, align 4, !dbg !1421
  %idxprom238 = sext i32 %185 to i64, !dbg !1420
  %arrayidx239 = getelementptr inbounds i32, i32* %184, i64 %idxprom238, !dbg !1420
  %186 = load i32, i32* %arrayidx239, align 4, !dbg !1420
  %call240 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %183, i32 %186), !dbg !1422
  store { <2 x float>, float } %call240, { <2 x float>, float }* %tmp241, align 8, !dbg !1422
  %187 = bitcast { <2 x float>, float }* %tmp241 to i8*, !dbg !1422
  %188 = bitcast %struct.SVec3* %vP237 to i8*, !dbg !1422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 8 %187, i64 12, i1 false), !dbg !1422
  %x242 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP237, i32 0, i32 0, !dbg !1423
  %189 = load float, float* %x242, align 4, !dbg !1423
  %190 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert, align 8, !dbg !1424
  %191 = load i32, i32* %e, align 4, !dbg !1425
  %idxprom243 = sext i32 %191 to i64, !dbg !1424
  %arrayidx244 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %190, i64 %idxprom243, !dbg !1424
  %vert = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx244, i32 0, i32 0, !dbg !1426
  %arrayidx245 = getelementptr inbounds [3 x float], [3 x float]* %vert, i64 0, i64 0, !dbg !1424
  store float %189, float* %arrayidx245, align 4, !dbg !1427
  %y246 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP237, i32 0, i32 1, !dbg !1428
  %192 = load float, float* %y246, align 4, !dbg !1428
  %193 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert, align 8, !dbg !1429
  %194 = load i32, i32* %e, align 4, !dbg !1430
  %idxprom247 = sext i32 %194 to i64, !dbg !1429
  %arrayidx248 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %193, i64 %idxprom247, !dbg !1429
  %vert249 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx248, i32 0, i32 0, !dbg !1431
  %arrayidx250 = getelementptr inbounds [3 x float], [3 x float]* %vert249, i64 0, i64 1, !dbg !1429
  store float %192, float* %arrayidx250, align 4, !dbg !1432
  %z251 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP237, i32 0, i32 2, !dbg !1433
  %195 = load float, float* %z251, align 4, !dbg !1433
  %196 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert, align 8, !dbg !1434
  %197 = load i32, i32* %e, align 4, !dbg !1435
  %idxprom252 = sext i32 %197 to i64, !dbg !1434
  %arrayidx253 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %196, i64 %idxprom252, !dbg !1434
  %vert254 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx253, i32 0, i32 0, !dbg !1436
  %arrayidx255 = getelementptr inbounds [3 x float], [3 x float]* %vert254, i64 0, i64 2, !dbg !1434
  store float %195, float* %arrayidx255, align 4, !dbg !1437
  %198 = load i32, i32* %i234, align 4, !dbg !1438
  %199 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert, align 8, !dbg !1439
  %200 = load i32, i32* %e, align 4, !dbg !1440
  %idxprom256 = sext i32 %200 to i64, !dbg !1439
  %arrayidx257 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %199, i64 %idxprom256, !dbg !1439
  %index258 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx257, i32 0, i32 1, !dbg !1441
  store i32 %198, i32* %index258, align 4, !dbg !1442
  br label %for.inc259, !dbg !1443

for.inc259:                                       ; preds = %for.body233
  %201 = load i32, i32* %e, align 4, !dbg !1444
  %inc260 = add nsw i32 %201, 1, !dbg !1444
  store i32 %inc260, i32* %e, align 4, !dbg !1444
  br label %for.cond230, !dbg !1445, !llvm.loop !1446

for.end261:                                       ; preds = %for.cond230
  %202 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !1448
  %203 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert, align 8, !dbg !1449
  %204 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1450
  %205 = load i32, i32* %iEntries, align 4, !dbg !1451
  %sub262 = sub nsw i32 %205, 1, !dbg !1452
  call void @MergeVertsFast(i32* %202, %struct.STmpVert* %203, %struct.SMikkTSpaceContext* %204, i32 0, i32 %sub262), !dbg !1453
  br label %if.end264, !dbg !1454

if.else263:                                       ; preds = %if.end226
  %206 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !1455
  %207 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1456
  %208 = load i32*, i32** %pTable216, align 8, !dbg !1457
  %209 = load i32, i32* %iEntries, align 4, !dbg !1458
  call void @MergeVertsSlow(i32* %206, %struct.SMikkTSpaceContext* %207, i32* %208, i32 %209), !dbg !1459
  br label %if.end264

if.end264:                                        ; preds = %if.else263, %for.end261
  br label %for.inc265, !dbg !1460

for.inc265:                                       ; preds = %if.end264, %if.then225
  %210 = load i32, i32* %k, align 4, !dbg !1461
  %inc266 = add nsw i32 %210, 1, !dbg !1461
  store i32 %inc266, i32* %k, align 4, !dbg !1461
  br label %for.cond212, !dbg !1462, !llvm.loop !1463

for.end267:                                       ; preds = %for.cond212
  %211 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert, align 8, !dbg !1465
  %cmp268 = icmp ne %struct.STmpVert* %211, null, !dbg !1467
  br i1 %cmp268, label %if.then270, label %if.end271, !dbg !1468

if.then270:                                       ; preds = %for.end267
  %212 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert, align 8, !dbg !1469
  %213 = bitcast %struct.STmpVert* %212 to i8*, !dbg !1469
  call void @free(i8* %213) #5, !dbg !1471
  br label %if.end271, !dbg !1472

if.end271:                                        ; preds = %if.then270, %for.end267
  %214 = load i32*, i32** %piHashTable, align 8, !dbg !1473
  %215 = bitcast i32* %214 to i8*, !dbg !1473
  call void @free(i8* %215) #5, !dbg !1474
  %216 = load i32*, i32** %piHashCount, align 8, !dbg !1475
  %217 = bitcast i32* %216 to i8*, !dbg !1475
  call void @free(i8* %217) #5, !dbg !1476
  %218 = load i32*, i32** %piHashOffsets, align 8, !dbg !1477
  %219 = bitcast i32* %218 to i8*, !dbg !1477
  call void @free(i8* %219) #5, !dbg !1478
  br label %return, !dbg !1479

return:                                           ; preds = %if.end271, %if.end97
  ret void, !dbg !1479
}

; Function Attrs: noinline nounwind uwtable
define internal { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %pContext, i32 %index) #0 !dbg !1480 {
entry:
  %retval = alloca %struct.SVec3, align 4
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %index.addr = alloca i32, align 4
  %iF = alloca i32, align 4
  %iI = alloca i32, align 4
  %pos = alloca [3 x float], align 4
  %tmp = alloca { <2 x float>, float }, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !1483, metadata !DIExpression()), !dbg !1484
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !1485, metadata !DIExpression()), !dbg !1486
  call void @llvm.dbg.declare(metadata i32* %iF, metadata !1487, metadata !DIExpression()), !dbg !1488
  call void @llvm.dbg.declare(metadata i32* %iI, metadata !1489, metadata !DIExpression()), !dbg !1490
  call void @llvm.dbg.declare(metadata %struct.SVec3* %retval, metadata !1491, metadata !DIExpression()), !dbg !1492
  call void @llvm.dbg.declare(metadata [3 x float]* %pos, metadata !1493, metadata !DIExpression()), !dbg !1494
  %0 = load i32, i32* %index.addr, align 4, !dbg !1495
  call void @IndexToData(i32* %iF, i32* %iI, i32 %0), !dbg !1496
  %1 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1497
  %m_pInterface = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %1, i32 0, i32 0, !dbg !1498
  %2 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface, align 8, !dbg !1498
  %m_getPosition = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %2, i32 0, i32 2, !dbg !1499
  %3 = load void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getPosition, align 8, !dbg !1499
  %4 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1500
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !1501
  %5 = load i32, i32* %iF, align 4, !dbg !1502
  %6 = load i32, i32* %iI, align 4, !dbg !1503
  call void %3(%struct.SMikkTSpaceContext* %4, float* %arraydecay, i32 %5, i32 %6), !dbg !1497
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !1504
  %7 = load float, float* %arrayidx, align 4, !dbg !1504
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 0, !dbg !1505
  store float %7, float* %x, align 4, !dbg !1506
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 1, !dbg !1507
  %8 = load float, float* %arrayidx1, align 4, !dbg !1507
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 1, !dbg !1508
  store float %8, float* %y, align 4, !dbg !1509
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 2, !dbg !1510
  %9 = load float, float* %arrayidx2, align 4, !dbg !1510
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 2, !dbg !1511
  store float %9, float* %z, align 4, !dbg !1512
  %10 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !1513
  %11 = bitcast %struct.SVec3* %retval to i8*, !dbg !1513
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 12, i1 false), !dbg !1513
  %12 = load { <2 x float>, float }, { <2 x float>, float }* %tmp, align 8, !dbg !1513
  ret { <2 x float>, float } %12, !dbg !1513
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @veq(<2 x float> %v1.coerce0, float %v1.coerce1, <2 x float> %v2.coerce0, float %v2.coerce1) #2 !dbg !1514 {
entry:
  %v1 = alloca %struct.SVec3, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %v2 = alloca %struct.SVec3, align 4
  %coerce1 = alloca { <2 x float>, float }, align 4
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %v1.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %v1.coerce1, float* %1, align 4
  %2 = bitcast %struct.SVec3* %v1 to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  %4 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce1, i32 0, i32 0
  store <2 x float> %v2.coerce0, <2 x float>* %4, align 4
  %5 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce1, i32 0, i32 1
  store float %v2.coerce1, float* %5, align 4
  %6 = bitcast %struct.SVec3* %v2 to i8*
  %7 = bitcast { <2 x float>, float }* %coerce1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 12, i1 false)
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v1, metadata !1517, metadata !DIExpression()), !dbg !1518
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v2, metadata !1519, metadata !DIExpression()), !dbg !1520
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 0, !dbg !1521
  %8 = load float, float* %x, align 4, !dbg !1521
  %x2 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 0, !dbg !1522
  %9 = load float, float* %x2, align 4, !dbg !1522
  %cmp = fcmp oeq float %8, %9, !dbg !1523
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !1524

land.lhs.true:                                    ; preds = %entry
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 1, !dbg !1525
  %10 = load float, float* %y, align 4, !dbg !1525
  %y3 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 1, !dbg !1526
  %11 = load float, float* %y3, align 4, !dbg !1526
  %cmp4 = fcmp oeq float %10, %11, !dbg !1527
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !1528

land.rhs:                                         ; preds = %land.lhs.true
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 2, !dbg !1529
  %12 = load float, float* %z, align 4, !dbg !1529
  %z5 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 2, !dbg !1530
  %13 = load float, float* %z5, align 4, !dbg !1530
  %cmp6 = fcmp oeq float %12, %13, !dbg !1531
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %14 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp6, %land.rhs ], !dbg !1532
  %land.ext = zext i1 %14 to i32, !dbg !1528
  ret i32 %land.ext, !dbg !1533
}

; Function Attrs: noinline nounwind uwtable
define internal void @DegenPrologue(%struct.STriInfo* %pTriInfos, i32* %piTriList_out, i32 %iNrTrianglesIn, i32 %iTotTris) #0 !dbg !1534 {
entry:
  %pTriInfos.addr = alloca %struct.STriInfo*, align 8
  %piTriList_out.addr = alloca i32*, align 8
  %iNrTrianglesIn.addr = alloca i32, align 4
  %iTotTris.addr = alloca i32, align 4
  %iNextGoodTriangleSearchIndex = alloca i32, align 4
  %bStillFindingGoodOnes = alloca i32, align 4
  %t = alloca i32, align 4
  %iFO_a = alloca i32, align 4
  %iFO_b = alloca i32, align 4
  %bIsDeg_a = alloca i32, align 4
  %bIsDeg_b = alloca i32, align 4
  %bIsGood = alloca i32, align 4
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  %bJustADegenerate = alloca i32, align 4
  %bIsGood50 = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %tri_info = alloca %struct.STriInfo, align 8
  store %struct.STriInfo* %pTriInfos, %struct.STriInfo** %pTriInfos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pTriInfos.addr, metadata !1537, metadata !DIExpression()), !dbg !1538
  store i32* %piTriList_out, i32** %piTriList_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriList_out.addr, metadata !1539, metadata !DIExpression()), !dbg !1540
  store i32 %iNrTrianglesIn, i32* %iNrTrianglesIn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iNrTrianglesIn.addr, metadata !1541, metadata !DIExpression()), !dbg !1542
  store i32 %iTotTris, i32* %iTotTris.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iTotTris.addr, metadata !1543, metadata !DIExpression()), !dbg !1544
  call void @llvm.dbg.declare(metadata i32* %iNextGoodTriangleSearchIndex, metadata !1545, metadata !DIExpression()), !dbg !1546
  store i32 -1, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1546
  call void @llvm.dbg.declare(metadata i32* %bStillFindingGoodOnes, metadata !1547, metadata !DIExpression()), !dbg !1548
  call void @llvm.dbg.declare(metadata i32* %t, metadata !1549, metadata !DIExpression()), !dbg !1550
  store i32 0, i32* %t, align 4, !dbg !1550
  br label %while.cond, !dbg !1551

while.cond:                                       ; preds = %if.end26, %entry
  %0 = load i32, i32* %t, align 4, !dbg !1552
  %1 = load i32, i32* %iTotTris.addr, align 4, !dbg !1553
  %sub = sub nsw i32 %1, 1, !dbg !1554
  %cmp = icmp slt i32 %0, %sub, !dbg !1555
  br i1 %cmp, label %while.body, label %while.end, !dbg !1551

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %iFO_a, metadata !1556, metadata !DIExpression()), !dbg !1558
  %2 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1559
  %3 = load i32, i32* %t, align 4, !dbg !1560
  %idxprom = sext i32 %3 to i64, !dbg !1559
  %arrayidx = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %2, i64 %idxprom, !dbg !1559
  %iOrgFaceNumber = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx, i32 0, i32 6, !dbg !1561
  %4 = load i32, i32* %iOrgFaceNumber, align 8, !dbg !1561
  store i32 %4, i32* %iFO_a, align 4, !dbg !1558
  call void @llvm.dbg.declare(metadata i32* %iFO_b, metadata !1562, metadata !DIExpression()), !dbg !1563
  %5 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1564
  %6 = load i32, i32* %t, align 4, !dbg !1565
  %add = add nsw i32 %6, 1, !dbg !1566
  %idxprom1 = sext i32 %add to i64, !dbg !1564
  %arrayidx2 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %5, i64 %idxprom1, !dbg !1564
  %iOrgFaceNumber3 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx2, i32 0, i32 6, !dbg !1567
  %7 = load i32, i32* %iOrgFaceNumber3, align 8, !dbg !1567
  store i32 %7, i32* %iFO_b, align 4, !dbg !1563
  %8 = load i32, i32* %iFO_a, align 4, !dbg !1568
  %9 = load i32, i32* %iFO_b, align 4, !dbg !1570
  %cmp4 = icmp eq i32 %8, %9, !dbg !1571
  br i1 %cmp4, label %if.then, label %if.else, !dbg !1572

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %bIsDeg_a, metadata !1573, metadata !DIExpression()), !dbg !1575
  %10 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1576
  %11 = load i32, i32* %t, align 4, !dbg !1577
  %idxprom5 = sext i32 %11 to i64, !dbg !1576
  %arrayidx6 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %10, i64 %idxprom5, !dbg !1576
  %iFlag = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx6, i32 0, i32 7, !dbg !1578
  %12 = load i32, i32* %iFlag, align 4, !dbg !1578
  %and = and i32 %12, 1, !dbg !1579
  %cmp7 = icmp ne i32 %and, 0, !dbg !1580
  %13 = zext i1 %cmp7 to i64, !dbg !1581
  %cond = select i1 %cmp7, i32 1, i32 0, !dbg !1581
  store i32 %cond, i32* %bIsDeg_a, align 4, !dbg !1575
  call void @llvm.dbg.declare(metadata i32* %bIsDeg_b, metadata !1582, metadata !DIExpression()), !dbg !1583
  %14 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1584
  %15 = load i32, i32* %t, align 4, !dbg !1585
  %add8 = add nsw i32 %15, 1, !dbg !1586
  %idxprom9 = sext i32 %add8 to i64, !dbg !1584
  %arrayidx10 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %14, i64 %idxprom9, !dbg !1584
  %iFlag11 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx10, i32 0, i32 7, !dbg !1587
  %16 = load i32, i32* %iFlag11, align 4, !dbg !1587
  %and12 = and i32 %16, 1, !dbg !1588
  %cmp13 = icmp ne i32 %and12, 0, !dbg !1589
  %17 = zext i1 %cmp13 to i64, !dbg !1590
  %cond14 = select i1 %cmp13, i32 1, i32 0, !dbg !1590
  store i32 %cond14, i32* %bIsDeg_b, align 4, !dbg !1583
  %18 = load i32, i32* %bIsDeg_a, align 4, !dbg !1591
  %19 = load i32, i32* %bIsDeg_b, align 4, !dbg !1593
  %xor = xor i32 %18, %19, !dbg !1594
  %cmp15 = icmp ne i32 %xor, 0, !dbg !1595
  br i1 %cmp15, label %if.then16, label %if.end, !dbg !1596

if.then16:                                        ; preds = %if.then
  %20 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1597
  %21 = load i32, i32* %t, align 4, !dbg !1599
  %idxprom17 = sext i32 %21 to i64, !dbg !1597
  %arrayidx18 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %20, i64 %idxprom17, !dbg !1597
  %iFlag19 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx18, i32 0, i32 7, !dbg !1600
  %22 = load i32, i32* %iFlag19, align 4, !dbg !1601
  %or = or i32 %22, 2, !dbg !1601
  store i32 %or, i32* %iFlag19, align 4, !dbg !1601
  %23 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1602
  %24 = load i32, i32* %t, align 4, !dbg !1603
  %add20 = add nsw i32 %24, 1, !dbg !1604
  %idxprom21 = sext i32 %add20 to i64, !dbg !1602
  %arrayidx22 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %23, i64 %idxprom21, !dbg !1602
  %iFlag23 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx22, i32 0, i32 7, !dbg !1605
  %25 = load i32, i32* %iFlag23, align 4, !dbg !1606
  %or24 = or i32 %25, 2, !dbg !1606
  store i32 %or24, i32* %iFlag23, align 4, !dbg !1606
  br label %if.end, !dbg !1607

if.end:                                           ; preds = %if.then16, %if.then
  %26 = load i32, i32* %t, align 4, !dbg !1608
  %add25 = add nsw i32 %26, 2, !dbg !1608
  store i32 %add25, i32* %t, align 4, !dbg !1608
  br label %if.end26, !dbg !1609

if.else:                                          ; preds = %while.body
  %27 = load i32, i32* %t, align 4, !dbg !1610
  %inc = add nsw i32 %27, 1, !dbg !1610
  store i32 %inc, i32* %t, align 4, !dbg !1610
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.end
  br label %while.cond, !dbg !1551, !llvm.loop !1611

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1613
  store i32 0, i32* %t, align 4, !dbg !1614
  store i32 1, i32* %bStillFindingGoodOnes, align 4, !dbg !1615
  br label %while.cond27, !dbg !1616

while.cond27:                                     ; preds = %if.end97, %while.end
  %28 = load i32, i32* %t, align 4, !dbg !1617
  %29 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !1618
  %cmp28 = icmp slt i32 %28, %29, !dbg !1619
  br i1 %cmp28, label %land.rhs, label %land.end, !dbg !1620

land.rhs:                                         ; preds = %while.cond27
  %30 = load i32, i32* %bStillFindingGoodOnes, align 4, !dbg !1621
  %tobool = icmp ne i32 %30, 0, !dbg !1620
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond27
  %31 = phi i1 [ false, %while.cond27 ], [ %tobool, %land.rhs ], !dbg !1622
  br i1 %31, label %while.body29, label %while.end98, !dbg !1616

while.body29:                                     ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %bIsGood, metadata !1623, metadata !DIExpression()), !dbg !1625
  %32 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1626
  %33 = load i32, i32* %t, align 4, !dbg !1627
  %idxprom30 = sext i32 %33 to i64, !dbg !1626
  %arrayidx31 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %32, i64 %idxprom30, !dbg !1626
  %iFlag32 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx31, i32 0, i32 7, !dbg !1628
  %34 = load i32, i32* %iFlag32, align 4, !dbg !1628
  %and33 = and i32 %34, 1, !dbg !1629
  %cmp34 = icmp eq i32 %and33, 0, !dbg !1630
  %35 = zext i1 %cmp34 to i64, !dbg !1631
  %cond35 = select i1 %cmp34, i32 1, i32 0, !dbg !1631
  store i32 %cond35, i32* %bIsGood, align 4, !dbg !1625
  %36 = load i32, i32* %bIsGood, align 4, !dbg !1632
  %tobool36 = icmp ne i32 %36, 0, !dbg !1632
  br i1 %tobool36, label %if.then37, label %if.else43, !dbg !1634

if.then37:                                        ; preds = %while.body29
  %37 = load i32, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1635
  %38 = load i32, i32* %t, align 4, !dbg !1638
  %add38 = add nsw i32 %38, 2, !dbg !1639
  %cmp39 = icmp slt i32 %37, %add38, !dbg !1640
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !1641

if.then40:                                        ; preds = %if.then37
  %39 = load i32, i32* %t, align 4, !dbg !1642
  %add41 = add nsw i32 %39, 2, !dbg !1643
  store i32 %add41, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1644
  br label %if.end42, !dbg !1645

if.end42:                                         ; preds = %if.then40, %if.then37
  br label %if.end93, !dbg !1646

if.else43:                                        ; preds = %while.body29
  call void @llvm.dbg.declare(metadata i32* %t0, metadata !1647, metadata !DIExpression()), !dbg !1649
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !1650, metadata !DIExpression()), !dbg !1651
  call void @llvm.dbg.declare(metadata i32* %bJustADegenerate, metadata !1652, metadata !DIExpression()), !dbg !1653
  store i32 1, i32* %bJustADegenerate, align 4, !dbg !1653
  br label %while.cond44, !dbg !1654

while.cond44:                                     ; preds = %if.end61, %if.else43
  %40 = load i32, i32* %bJustADegenerate, align 4, !dbg !1655
  %tobool45 = icmp ne i32 %40, 0, !dbg !1655
  br i1 %tobool45, label %land.rhs46, label %land.end48, !dbg !1656

land.rhs46:                                       ; preds = %while.cond44
  %41 = load i32, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1657
  %42 = load i32, i32* %iTotTris.addr, align 4, !dbg !1658
  %cmp47 = icmp slt i32 %41, %42, !dbg !1659
  br label %land.end48

land.end48:                                       ; preds = %land.rhs46, %while.cond44
  %43 = phi i1 [ false, %while.cond44 ], [ %cmp47, %land.rhs46 ], !dbg !1660
  br i1 %43, label %while.body49, label %while.end62, !dbg !1654

while.body49:                                     ; preds = %land.end48
  call void @llvm.dbg.declare(metadata i32* %bIsGood50, metadata !1661, metadata !DIExpression()), !dbg !1663
  %44 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1664
  %45 = load i32, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1665
  %idxprom51 = sext i32 %45 to i64, !dbg !1664
  %arrayidx52 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %44, i64 %idxprom51, !dbg !1664
  %iFlag53 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx52, i32 0, i32 7, !dbg !1666
  %46 = load i32, i32* %iFlag53, align 4, !dbg !1666
  %and54 = and i32 %46, 1, !dbg !1667
  %cmp55 = icmp eq i32 %and54, 0, !dbg !1668
  %47 = zext i1 %cmp55 to i64, !dbg !1669
  %cond56 = select i1 %cmp55, i32 1, i32 0, !dbg !1669
  store i32 %cond56, i32* %bIsGood50, align 4, !dbg !1663
  %48 = load i32, i32* %bIsGood50, align 4, !dbg !1670
  %tobool57 = icmp ne i32 %48, 0, !dbg !1670
  br i1 %tobool57, label %if.then58, label %if.else59, !dbg !1672

if.then58:                                        ; preds = %while.body49
  store i32 0, i32* %bJustADegenerate, align 4, !dbg !1673
  br label %if.end61, !dbg !1674

if.else59:                                        ; preds = %while.body49
  %49 = load i32, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1675
  %inc60 = add nsw i32 %49, 1, !dbg !1675
  store i32 %inc60, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1675
  br label %if.end61

if.end61:                                         ; preds = %if.else59, %if.then58
  br label %while.cond44, !dbg !1654, !llvm.loop !1676

while.end62:                                      ; preds = %land.end48
  %50 = load i32, i32* %t, align 4, !dbg !1678
  store i32 %50, i32* %t0, align 4, !dbg !1679
  %51 = load i32, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1680
  store i32 %51, i32* %t1, align 4, !dbg !1681
  %52 = load i32, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1682
  %inc63 = add nsw i32 %52, 1, !dbg !1682
  store i32 %inc63, i32* %iNextGoodTriangleSearchIndex, align 4, !dbg !1682
  %53 = load i32, i32* %bJustADegenerate, align 4, !dbg !1683
  %tobool64 = icmp ne i32 %53, 0, !dbg !1683
  br i1 %tobool64, label %if.else91, label %if.then65, !dbg !1685

if.then65:                                        ; preds = %while.end62
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1686, metadata !DIExpression()), !dbg !1688
  store i32 0, i32* %i, align 4, !dbg !1688
  store i32 0, i32* %i, align 4, !dbg !1689
  br label %for.cond, !dbg !1691

for.cond:                                         ; preds = %for.inc, %if.then65
  %54 = load i32, i32* %i, align 4, !dbg !1692
  %cmp66 = icmp slt i32 %54, 3, !dbg !1694
  br i1 %cmp66, label %for.body, label %for.end, !dbg !1695

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %index, metadata !1696, metadata !DIExpression()), !dbg !1698
  %55 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !1699
  %56 = load i32, i32* %t0, align 4, !dbg !1700
  %mul = mul nsw i32 %56, 3, !dbg !1701
  %57 = load i32, i32* %i, align 4, !dbg !1702
  %add67 = add nsw i32 %mul, %57, !dbg !1703
  %idxprom68 = sext i32 %add67 to i64, !dbg !1699
  %arrayidx69 = getelementptr inbounds i32, i32* %55, i64 %idxprom68, !dbg !1699
  %58 = load i32, i32* %arrayidx69, align 4, !dbg !1699
  store i32 %58, i32* %index, align 4, !dbg !1698
  %59 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !1704
  %60 = load i32, i32* %t1, align 4, !dbg !1705
  %mul70 = mul nsw i32 %60, 3, !dbg !1706
  %61 = load i32, i32* %i, align 4, !dbg !1707
  %add71 = add nsw i32 %mul70, %61, !dbg !1708
  %idxprom72 = sext i32 %add71 to i64, !dbg !1704
  %arrayidx73 = getelementptr inbounds i32, i32* %59, i64 %idxprom72, !dbg !1704
  %62 = load i32, i32* %arrayidx73, align 4, !dbg !1704
  %63 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !1709
  %64 = load i32, i32* %t0, align 4, !dbg !1710
  %mul74 = mul nsw i32 %64, 3, !dbg !1711
  %65 = load i32, i32* %i, align 4, !dbg !1712
  %add75 = add nsw i32 %mul74, %65, !dbg !1713
  %idxprom76 = sext i32 %add75 to i64, !dbg !1709
  %arrayidx77 = getelementptr inbounds i32, i32* %63, i64 %idxprom76, !dbg !1709
  store i32 %62, i32* %arrayidx77, align 4, !dbg !1714
  %66 = load i32, i32* %index, align 4, !dbg !1715
  %67 = load i32*, i32** %piTriList_out.addr, align 8, !dbg !1716
  %68 = load i32, i32* %t1, align 4, !dbg !1717
  %mul78 = mul nsw i32 %68, 3, !dbg !1718
  %69 = load i32, i32* %i, align 4, !dbg !1719
  %add79 = add nsw i32 %mul78, %69, !dbg !1720
  %idxprom80 = sext i32 %add79 to i64, !dbg !1716
  %arrayidx81 = getelementptr inbounds i32, i32* %67, i64 %idxprom80, !dbg !1716
  store i32 %66, i32* %arrayidx81, align 4, !dbg !1721
  br label %for.inc, !dbg !1722

for.inc:                                          ; preds = %for.body
  %70 = load i32, i32* %i, align 4, !dbg !1723
  %inc82 = add nsw i32 %70, 1, !dbg !1723
  store i32 %inc82, i32* %i, align 4, !dbg !1723
  br label %for.cond, !dbg !1724, !llvm.loop !1725

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.STriInfo* %tri_info, metadata !1727, metadata !DIExpression()), !dbg !1730
  %71 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1731
  %72 = load i32, i32* %t0, align 4, !dbg !1732
  %idxprom83 = sext i32 %72 to i64, !dbg !1731
  %arrayidx84 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %71, i64 %idxprom83, !dbg !1731
  %73 = bitcast %struct.STriInfo* %tri_info to i8*, !dbg !1731
  %74 = bitcast %struct.STriInfo* %arrayidx84 to i8*, !dbg !1731
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 88, i1 false), !dbg !1731
  %75 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1733
  %76 = load i32, i32* %t0, align 4, !dbg !1734
  %idxprom85 = sext i32 %76 to i64, !dbg !1733
  %arrayidx86 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %75, i64 %idxprom85, !dbg !1733
  %77 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1735
  %78 = load i32, i32* %t1, align 4, !dbg !1736
  %idxprom87 = sext i32 %78 to i64, !dbg !1735
  %arrayidx88 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %77, i64 %idxprom87, !dbg !1735
  %79 = bitcast %struct.STriInfo* %arrayidx86 to i8*, !dbg !1735
  %80 = bitcast %struct.STriInfo* %arrayidx88 to i8*, !dbg !1735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 88, i1 false), !dbg !1735
  %81 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1737
  %82 = load i32, i32* %t1, align 4, !dbg !1738
  %idxprom89 = sext i32 %82 to i64, !dbg !1737
  %arrayidx90 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %81, i64 %idxprom89, !dbg !1737
  %83 = bitcast %struct.STriInfo* %arrayidx90 to i8*, !dbg !1739
  %84 = bitcast %struct.STriInfo* %tri_info to i8*, !dbg !1739
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 88, i1 false), !dbg !1739
  br label %if.end92, !dbg !1740

if.else91:                                        ; preds = %while.end62
  store i32 0, i32* %bStillFindingGoodOnes, align 4, !dbg !1741
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %for.end
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.end42
  %85 = load i32, i32* %bStillFindingGoodOnes, align 4, !dbg !1742
  %tobool94 = icmp ne i32 %85, 0, !dbg !1742
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !1744

if.then95:                                        ; preds = %if.end93
  %86 = load i32, i32* %t, align 4, !dbg !1745
  %inc96 = add nsw i32 %86, 1, !dbg !1745
  store i32 %inc96, i32* %t, align 4, !dbg !1745
  br label %if.end97, !dbg !1745

if.end97:                                         ; preds = %if.then95, %if.end93
  br label %while.cond27, !dbg !1616, !llvm.loop !1746

while.end98:                                      ; preds = %land.end
  ret void, !dbg !1748
}

; Function Attrs: noinline nounwind uwtable
define internal void @InitTriInfo(%struct.STriInfo* %pTriInfos, i32* %piTriListIn, %struct.SMikkTSpaceContext* %pContext, i32 %iNrTrianglesIn) #2 !dbg !1749 {
entry:
  %pTriInfos.addr = alloca %struct.STriInfo*, align 8
  %piTriListIn.addr = alloca i32*, align 8
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %iNrTrianglesIn.addr = alloca i32, align 4
  %f = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  %v1 = alloca %struct.SVec3, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %v2 = alloca %struct.SVec3, align 4
  %tmp48 = alloca { <2 x float>, float }, align 8
  %v3 = alloca %struct.SVec3, align 4
  %tmp54 = alloca { <2 x float>, float }, align 8
  %t1 = alloca %struct.SVec3, align 4
  %tmp60 = alloca { <2 x float>, float }, align 8
  %t2 = alloca %struct.SVec3, align 4
  %tmp66 = alloca { <2 x float>, float }, align 8
  %t3 = alloca %struct.SVec3, align 4
  %tmp72 = alloca { <2 x float>, float }, align 8
  %t21x = alloca float, align 4
  %t21y = alloca float, align 4
  %t31x = alloca float, align 4
  %t31y = alloca float, align 4
  %d1 = alloca %struct.SVec3, align 4
  %v2.coerce = alloca { <2 x float>, float }, align 4
  %v1.coerce = alloca { <2 x float>, float }, align 4
  %tmp85 = alloca { <2 x float>, float }, align 8
  %d2 = alloca %struct.SVec3, align 4
  %v3.coerce = alloca { <2 x float>, float }, align 4
  %v1.coerce86 = alloca { <2 x float>, float }, align 4
  %tmp88 = alloca { <2 x float>, float }, align 8
  %fSignedAreaSTx2 = alloca float, align 4
  %vOs92 = alloca %struct.SVec3, align 4
  %agg.tmp = alloca %struct.SVec3, align 4
  %d1.coerce = alloca { <2 x float>, float }, align 4
  %tmp94 = alloca { <2 x float>, float }, align 8
  %agg.tmp95 = alloca %struct.SVec3, align 4
  %d2.coerce = alloca { <2 x float>, float }, align 4
  %tmp97 = alloca { <2 x float>, float }, align 8
  %agg.tmp.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp95.coerce = alloca { <2 x float>, float }, align 4
  %tmp99 = alloca { <2 x float>, float }, align 8
  %vOt100 = alloca %struct.SVec3, align 4
  %agg.tmp101 = alloca %struct.SVec3, align 4
  %d1.coerce102 = alloca { <2 x float>, float }, align 4
  %tmp104 = alloca { <2 x float>, float }, align 8
  %agg.tmp105 = alloca %struct.SVec3, align 4
  %d2.coerce106 = alloca { <2 x float>, float }, align 4
  %tmp108 = alloca { <2 x float>, float }, align 8
  %agg.tmp101.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp105.coerce = alloca { <2 x float>, float }, align 4
  %tmp110 = alloca { <2 x float>, float }, align 8
  %fAbsArea = alloca float, align 4
  %fLenOs = alloca float, align 4
  %vOs92.coerce = alloca { <2 x float>, float }, align 4
  %fLenOt = alloca float, align 4
  %vOt100.coerce = alloca { <2 x float>, float }, align 4
  %fS = alloca float, align 4
  %tmp130 = alloca %struct.SVec3, align 4
  %vOs92.coerce131 = alloca { <2 x float>, float }, align 4
  %tmp133 = alloca { <2 x float>, float }, align 8
  %tmp140 = alloca %struct.SVec3, align 4
  %vOt100.coerce142 = alloca { <2 x float>, float }, align 4
  %tmp144 = alloca { <2 x float>, float }, align 8
  %iFO_a = alloca i32, align 4
  %iFO_b = alloca i32, align 4
  %bIsDeg_a = alloca i32, align 4
  %bIsDeg_b = alloca i32, align 4
  %bOrientA = alloca i32, align 4
  %bOrientB = alloca i32, align 4
  %bChooseOrientFirstTri = alloca i32, align 4
  %t0 = alloca i32, align 4
  %t1241 = alloca i32, align 4
  %pEdges = alloca %union.SEdge*, align 8
  store %struct.STriInfo* %pTriInfos, %struct.STriInfo** %pTriInfos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pTriInfos.addr, metadata !1753, metadata !DIExpression()), !dbg !1754
  store i32* %piTriListIn, i32** %piTriListIn.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriListIn.addr, metadata !1755, metadata !DIExpression()), !dbg !1756
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !1757, metadata !DIExpression()), !dbg !1758
  store i32 %iNrTrianglesIn, i32* %iNrTrianglesIn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iNrTrianglesIn.addr, metadata !1759, metadata !DIExpression()), !dbg !1760
  call void @llvm.dbg.declare(metadata i32* %f, metadata !1761, metadata !DIExpression()), !dbg !1762
  store i32 0, i32* %f, align 4, !dbg !1762
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1763, metadata !DIExpression()), !dbg !1764
  store i32 0, i32* %i, align 4, !dbg !1764
  call void @llvm.dbg.declare(metadata i32* %t, metadata !1765, metadata !DIExpression()), !dbg !1766
  store i32 0, i32* %t, align 4, !dbg !1766
  store i32 0, i32* %f, align 4, !dbg !1767
  br label %for.cond, !dbg !1769

for.cond:                                         ; preds = %for.inc35, %entry
  %0 = load i32, i32* %f, align 4, !dbg !1770
  %1 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !1772
  %cmp = icmp slt i32 %0, %1, !dbg !1773
  br i1 %cmp, label %for.body, label %for.end37, !dbg !1774

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1775
  br label %for.cond1, !dbg !1777

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !1778
  %cmp2 = icmp slt i32 %2, 3, !dbg !1780
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !1781

for.body3:                                        ; preds = %for.cond1
  %3 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1782
  %4 = load i32, i32* %f, align 4, !dbg !1784
  %idxprom = sext i32 %4 to i64, !dbg !1782
  %arrayidx = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %3, i64 %idxprom, !dbg !1782
  %FaceNeighbors = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx, i32 0, i32 0, !dbg !1785
  %5 = load i32, i32* %i, align 4, !dbg !1786
  %idxprom4 = sext i32 %5 to i64, !dbg !1782
  %arrayidx5 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors, i64 0, i64 %idxprom4, !dbg !1782
  store i32 -1, i32* %arrayidx5, align 4, !dbg !1787
  %6 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1788
  %7 = load i32, i32* %f, align 4, !dbg !1789
  %idxprom6 = sext i32 %7 to i64, !dbg !1788
  %arrayidx7 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %6, i64 %idxprom6, !dbg !1788
  %AssignedGroup = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx7, i32 0, i32 1, !dbg !1790
  %8 = load i32, i32* %i, align 4, !dbg !1791
  %idxprom8 = sext i32 %8 to i64, !dbg !1788
  %arrayidx9 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup, i64 0, i64 %idxprom8, !dbg !1788
  store %struct.SGroup* null, %struct.SGroup** %arrayidx9, align 8, !dbg !1792
  %9 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1793
  %10 = load i32, i32* %f, align 4, !dbg !1794
  %idxprom10 = sext i32 %10 to i64, !dbg !1793
  %arrayidx11 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %9, i64 %idxprom10, !dbg !1793
  %vOs = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx11, i32 0, i32 2, !dbg !1795
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs, i32 0, i32 0, !dbg !1796
  store float 0.000000e+00, float* %x, align 8, !dbg !1797
  %11 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1798
  %12 = load i32, i32* %f, align 4, !dbg !1799
  %idxprom12 = sext i32 %12 to i64, !dbg !1798
  %arrayidx13 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %11, i64 %idxprom12, !dbg !1798
  %vOs14 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx13, i32 0, i32 2, !dbg !1800
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs14, i32 0, i32 1, !dbg !1801
  store float 0.000000e+00, float* %y, align 4, !dbg !1802
  %13 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1803
  %14 = load i32, i32* %f, align 4, !dbg !1804
  %idxprom15 = sext i32 %14 to i64, !dbg !1803
  %arrayidx16 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %13, i64 %idxprom15, !dbg !1803
  %vOs17 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx16, i32 0, i32 2, !dbg !1805
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs17, i32 0, i32 2, !dbg !1806
  store float 0.000000e+00, float* %z, align 8, !dbg !1807
  %15 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1808
  %16 = load i32, i32* %f, align 4, !dbg !1809
  %idxprom18 = sext i32 %16 to i64, !dbg !1808
  %arrayidx19 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %15, i64 %idxprom18, !dbg !1808
  %vOt = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx19, i32 0, i32 3, !dbg !1810
  %x20 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt, i32 0, i32 0, !dbg !1811
  store float 0.000000e+00, float* %x20, align 4, !dbg !1812
  %17 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1813
  %18 = load i32, i32* %f, align 4, !dbg !1814
  %idxprom21 = sext i32 %18 to i64, !dbg !1813
  %arrayidx22 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %17, i64 %idxprom21, !dbg !1813
  %vOt23 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx22, i32 0, i32 3, !dbg !1815
  %y24 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt23, i32 0, i32 1, !dbg !1816
  store float 0.000000e+00, float* %y24, align 4, !dbg !1817
  %19 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1818
  %20 = load i32, i32* %f, align 4, !dbg !1819
  %idxprom25 = sext i32 %20 to i64, !dbg !1818
  %arrayidx26 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %19, i64 %idxprom25, !dbg !1818
  %vOt27 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx26, i32 0, i32 3, !dbg !1820
  %z28 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt27, i32 0, i32 2, !dbg !1821
  store float 0.000000e+00, float* %z28, align 4, !dbg !1822
  %21 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1823
  %22 = load i32, i32* %f, align 4, !dbg !1824
  %idxprom29 = sext i32 %22 to i64, !dbg !1823
  %arrayidx30 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %21, i64 %idxprom29, !dbg !1823
  %fMagS = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx30, i32 0, i32 4, !dbg !1825
  store float 0.000000e+00, float* %fMagS, align 8, !dbg !1826
  %23 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1827
  %24 = load i32, i32* %f, align 4, !dbg !1828
  %idxprom31 = sext i32 %24 to i64, !dbg !1827
  %arrayidx32 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %23, i64 %idxprom31, !dbg !1827
  %fMagT = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx32, i32 0, i32 5, !dbg !1829
  store float 0.000000e+00, float* %fMagT, align 4, !dbg !1830
  %25 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1831
  %26 = load i32, i32* %f, align 4, !dbg !1832
  %idxprom33 = sext i32 %26 to i64, !dbg !1831
  %arrayidx34 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %25, i64 %idxprom33, !dbg !1831
  %iFlag = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx34, i32 0, i32 7, !dbg !1833
  %27 = load i32, i32* %iFlag, align 4, !dbg !1834
  %or = or i32 %27, 4, !dbg !1834
  store i32 %or, i32* %iFlag, align 4, !dbg !1834
  br label %for.inc, !dbg !1835

for.inc:                                          ; preds = %for.body3
  %28 = load i32, i32* %i, align 4, !dbg !1836
  %inc = add nsw i32 %28, 1, !dbg !1836
  store i32 %inc, i32* %i, align 4, !dbg !1836
  br label %for.cond1, !dbg !1837, !llvm.loop !1838

for.end:                                          ; preds = %for.cond1
  br label %for.inc35, !dbg !1839

for.inc35:                                        ; preds = %for.end
  %29 = load i32, i32* %f, align 4, !dbg !1840
  %inc36 = add nsw i32 %29, 1, !dbg !1840
  store i32 %inc36, i32* %f, align 4, !dbg !1840
  br label %for.cond, !dbg !1841, !llvm.loop !1842

for.end37:                                        ; preds = %for.cond
  store i32 0, i32* %f, align 4, !dbg !1844
  br label %for.cond38, !dbg !1846

for.cond38:                                       ; preds = %for.inc171, %for.end37
  %30 = load i32, i32* %f, align 4, !dbg !1847
  %31 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !1849
  %cmp39 = icmp slt i32 %30, %31, !dbg !1850
  br i1 %cmp39, label %for.body40, label %for.end173, !dbg !1851

for.body40:                                       ; preds = %for.cond38
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v1, metadata !1852, metadata !DIExpression()), !dbg !1854
  %32 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1855
  %33 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !1856
  %34 = load i32, i32* %f, align 4, !dbg !1857
  %mul = mul nsw i32 %34, 3, !dbg !1858
  %add = add nsw i32 %mul, 0, !dbg !1859
  %idxprom41 = sext i32 %add to i64, !dbg !1856
  %arrayidx42 = getelementptr inbounds i32, i32* %33, i64 %idxprom41, !dbg !1856
  %35 = load i32, i32* %arrayidx42, align 4, !dbg !1856
  %call = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %32, i32 %35), !dbg !1860
  store { <2 x float>, float } %call, { <2 x float>, float }* %tmp, align 8, !dbg !1860
  %36 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !1860
  %37 = bitcast %struct.SVec3* %v1 to i8*, !dbg !1860
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 8 %36, i64 12, i1 false), !dbg !1860
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v2, metadata !1861, metadata !DIExpression()), !dbg !1862
  %38 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1863
  %39 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !1864
  %40 = load i32, i32* %f, align 4, !dbg !1865
  %mul43 = mul nsw i32 %40, 3, !dbg !1866
  %add44 = add nsw i32 %mul43, 1, !dbg !1867
  %idxprom45 = sext i32 %add44 to i64, !dbg !1864
  %arrayidx46 = getelementptr inbounds i32, i32* %39, i64 %idxprom45, !dbg !1864
  %41 = load i32, i32* %arrayidx46, align 4, !dbg !1864
  %call47 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %38, i32 %41), !dbg !1868
  store { <2 x float>, float } %call47, { <2 x float>, float }* %tmp48, align 8, !dbg !1868
  %42 = bitcast { <2 x float>, float }* %tmp48 to i8*, !dbg !1868
  %43 = bitcast %struct.SVec3* %v2 to i8*, !dbg !1868
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 8 %42, i64 12, i1 false), !dbg !1868
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v3, metadata !1869, metadata !DIExpression()), !dbg !1870
  %44 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1871
  %45 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !1872
  %46 = load i32, i32* %f, align 4, !dbg !1873
  %mul49 = mul nsw i32 %46, 3, !dbg !1874
  %add50 = add nsw i32 %mul49, 2, !dbg !1875
  %idxprom51 = sext i32 %add50 to i64, !dbg !1872
  %arrayidx52 = getelementptr inbounds i32, i32* %45, i64 %idxprom51, !dbg !1872
  %47 = load i32, i32* %arrayidx52, align 4, !dbg !1872
  %call53 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %44, i32 %47), !dbg !1876
  store { <2 x float>, float } %call53, { <2 x float>, float }* %tmp54, align 8, !dbg !1876
  %48 = bitcast { <2 x float>, float }* %tmp54 to i8*, !dbg !1876
  %49 = bitcast %struct.SVec3* %v3 to i8*, !dbg !1876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 8 %48, i64 12, i1 false), !dbg !1876
  call void @llvm.dbg.declare(metadata %struct.SVec3* %t1, metadata !1877, metadata !DIExpression()), !dbg !1878
  %50 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1879
  %51 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !1880
  %52 = load i32, i32* %f, align 4, !dbg !1881
  %mul55 = mul nsw i32 %52, 3, !dbg !1882
  %add56 = add nsw i32 %mul55, 0, !dbg !1883
  %idxprom57 = sext i32 %add56 to i64, !dbg !1880
  %arrayidx58 = getelementptr inbounds i32, i32* %51, i64 %idxprom57, !dbg !1880
  %53 = load i32, i32* %arrayidx58, align 4, !dbg !1880
  %call59 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %50, i32 %53), !dbg !1884
  store { <2 x float>, float } %call59, { <2 x float>, float }* %tmp60, align 8, !dbg !1884
  %54 = bitcast { <2 x float>, float }* %tmp60 to i8*, !dbg !1884
  %55 = bitcast %struct.SVec3* %t1 to i8*, !dbg !1884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 8 %54, i64 12, i1 false), !dbg !1884
  call void @llvm.dbg.declare(metadata %struct.SVec3* %t2, metadata !1885, metadata !DIExpression()), !dbg !1886
  %56 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1887
  %57 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !1888
  %58 = load i32, i32* %f, align 4, !dbg !1889
  %mul61 = mul nsw i32 %58, 3, !dbg !1890
  %add62 = add nsw i32 %mul61, 1, !dbg !1891
  %idxprom63 = sext i32 %add62 to i64, !dbg !1888
  %arrayidx64 = getelementptr inbounds i32, i32* %57, i64 %idxprom63, !dbg !1888
  %59 = load i32, i32* %arrayidx64, align 4, !dbg !1888
  %call65 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %56, i32 %59), !dbg !1892
  store { <2 x float>, float } %call65, { <2 x float>, float }* %tmp66, align 8, !dbg !1892
  %60 = bitcast { <2 x float>, float }* %tmp66 to i8*, !dbg !1892
  %61 = bitcast %struct.SVec3* %t2 to i8*, !dbg !1892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 8 %60, i64 12, i1 false), !dbg !1892
  call void @llvm.dbg.declare(metadata %struct.SVec3* %t3, metadata !1893, metadata !DIExpression()), !dbg !1894
  %62 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !1895
  %63 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !1896
  %64 = load i32, i32* %f, align 4, !dbg !1897
  %mul67 = mul nsw i32 %64, 3, !dbg !1898
  %add68 = add nsw i32 %mul67, 2, !dbg !1899
  %idxprom69 = sext i32 %add68 to i64, !dbg !1896
  %arrayidx70 = getelementptr inbounds i32, i32* %63, i64 %idxprom69, !dbg !1896
  %65 = load i32, i32* %arrayidx70, align 4, !dbg !1896
  %call71 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %62, i32 %65), !dbg !1900
  store { <2 x float>, float } %call71, { <2 x float>, float }* %tmp72, align 8, !dbg !1900
  %66 = bitcast { <2 x float>, float }* %tmp72 to i8*, !dbg !1900
  %67 = bitcast %struct.SVec3* %t3 to i8*, !dbg !1900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 8 %66, i64 12, i1 false), !dbg !1900
  call void @llvm.dbg.declare(metadata float* %t21x, metadata !1901, metadata !DIExpression()), !dbg !1902
  %x73 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t2, i32 0, i32 0, !dbg !1903
  %68 = load float, float* %x73, align 4, !dbg !1903
  %x74 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t1, i32 0, i32 0, !dbg !1904
  %69 = load float, float* %x74, align 4, !dbg !1904
  %sub = fsub float %68, %69, !dbg !1905
  store float %sub, float* %t21x, align 4, !dbg !1902
  call void @llvm.dbg.declare(metadata float* %t21y, metadata !1906, metadata !DIExpression()), !dbg !1907
  %y75 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t2, i32 0, i32 1, !dbg !1908
  %70 = load float, float* %y75, align 4, !dbg !1908
  %y76 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t1, i32 0, i32 1, !dbg !1909
  %71 = load float, float* %y76, align 4, !dbg !1909
  %sub77 = fsub float %70, %71, !dbg !1910
  store float %sub77, float* %t21y, align 4, !dbg !1907
  call void @llvm.dbg.declare(metadata float* %t31x, metadata !1911, metadata !DIExpression()), !dbg !1912
  %x78 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t3, i32 0, i32 0, !dbg !1913
  %72 = load float, float* %x78, align 4, !dbg !1913
  %x79 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t1, i32 0, i32 0, !dbg !1914
  %73 = load float, float* %x79, align 4, !dbg !1914
  %sub80 = fsub float %72, %73, !dbg !1915
  store float %sub80, float* %t31x, align 4, !dbg !1912
  call void @llvm.dbg.declare(metadata float* %t31y, metadata !1916, metadata !DIExpression()), !dbg !1917
  %y81 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t3, i32 0, i32 1, !dbg !1918
  %74 = load float, float* %y81, align 4, !dbg !1918
  %y82 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t1, i32 0, i32 1, !dbg !1919
  %75 = load float, float* %y82, align 4, !dbg !1919
  %sub83 = fsub float %74, %75, !dbg !1920
  store float %sub83, float* %t31y, align 4, !dbg !1917
  call void @llvm.dbg.declare(metadata %struct.SVec3* %d1, metadata !1921, metadata !DIExpression()), !dbg !1922
  %76 = bitcast { <2 x float>, float }* %v2.coerce to i8*, !dbg !1923
  %77 = bitcast %struct.SVec3* %v2 to i8*, !dbg !1923
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 12, i1 false), !dbg !1923
  %78 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce, i32 0, i32 0, !dbg !1923
  %79 = load <2 x float>, <2 x float>* %78, align 4, !dbg !1923
  %80 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce, i32 0, i32 1, !dbg !1923
  %81 = load float, float* %80, align 4, !dbg !1923
  %82 = bitcast { <2 x float>, float }* %v1.coerce to i8*, !dbg !1923
  %83 = bitcast %struct.SVec3* %v1 to i8*, !dbg !1923
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 12, i1 false), !dbg !1923
  %84 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce, i32 0, i32 0, !dbg !1923
  %85 = load <2 x float>, <2 x float>* %84, align 4, !dbg !1923
  %86 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce, i32 0, i32 1, !dbg !1923
  %87 = load float, float* %86, align 4, !dbg !1923
  %call84 = call { <2 x float>, float } @vsub(<2 x float> %79, float %81, <2 x float> %85, float %87), !dbg !1923
  store { <2 x float>, float } %call84, { <2 x float>, float }* %tmp85, align 8, !dbg !1923
  %88 = bitcast { <2 x float>, float }* %tmp85 to i8*, !dbg !1923
  %89 = bitcast %struct.SVec3* %d1 to i8*, !dbg !1923
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 8 %88, i64 12, i1 false), !dbg !1923
  call void @llvm.dbg.declare(metadata %struct.SVec3* %d2, metadata !1924, metadata !DIExpression()), !dbg !1925
  %90 = bitcast { <2 x float>, float }* %v3.coerce to i8*, !dbg !1926
  %91 = bitcast %struct.SVec3* %v3 to i8*, !dbg !1926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 12, i1 false), !dbg !1926
  %92 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v3.coerce, i32 0, i32 0, !dbg !1926
  %93 = load <2 x float>, <2 x float>* %92, align 4, !dbg !1926
  %94 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v3.coerce, i32 0, i32 1, !dbg !1926
  %95 = load float, float* %94, align 4, !dbg !1926
  %96 = bitcast { <2 x float>, float }* %v1.coerce86 to i8*, !dbg !1926
  %97 = bitcast %struct.SVec3* %v1 to i8*, !dbg !1926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* align 4 %97, i64 12, i1 false), !dbg !1926
  %98 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce86, i32 0, i32 0, !dbg !1926
  %99 = load <2 x float>, <2 x float>* %98, align 4, !dbg !1926
  %100 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce86, i32 0, i32 1, !dbg !1926
  %101 = load float, float* %100, align 4, !dbg !1926
  %call87 = call { <2 x float>, float } @vsub(<2 x float> %93, float %95, <2 x float> %99, float %101), !dbg !1926
  store { <2 x float>, float } %call87, { <2 x float>, float }* %tmp88, align 8, !dbg !1926
  %102 = bitcast { <2 x float>, float }* %tmp88 to i8*, !dbg !1926
  %103 = bitcast %struct.SVec3* %d2 to i8*, !dbg !1926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 8 %102, i64 12, i1 false), !dbg !1926
  call void @llvm.dbg.declare(metadata float* %fSignedAreaSTx2, metadata !1927, metadata !DIExpression()), !dbg !1928
  %104 = load float, float* %t21x, align 4, !dbg !1929
  %105 = load float, float* %t31y, align 4, !dbg !1930
  %mul89 = fmul float %104, %105, !dbg !1931
  %106 = load float, float* %t21y, align 4, !dbg !1932
  %107 = load float, float* %t31x, align 4, !dbg !1933
  %mul90 = fmul float %106, %107, !dbg !1934
  %sub91 = fsub float %mul89, %mul90, !dbg !1935
  store float %sub91, float* %fSignedAreaSTx2, align 4, !dbg !1928
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vOs92, metadata !1936, metadata !DIExpression()), !dbg !1937
  %108 = load float, float* %t31y, align 4, !dbg !1938
  %109 = bitcast { <2 x float>, float }* %d1.coerce to i8*, !dbg !1939
  %110 = bitcast %struct.SVec3* %d1 to i8*, !dbg !1939
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %110, i64 12, i1 false), !dbg !1939
  %111 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %d1.coerce, i32 0, i32 0, !dbg !1939
  %112 = load <2 x float>, <2 x float>* %111, align 4, !dbg !1939
  %113 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %d1.coerce, i32 0, i32 1, !dbg !1939
  %114 = load float, float* %113, align 4, !dbg !1939
  %call93 = call { <2 x float>, float } @vscale(float %108, <2 x float> %112, float %114), !dbg !1939
  store { <2 x float>, float } %call93, { <2 x float>, float }* %tmp94, align 8, !dbg !1939
  %115 = bitcast { <2 x float>, float }* %tmp94 to i8*, !dbg !1939
  %116 = bitcast %struct.SVec3* %agg.tmp to i8*, !dbg !1939
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 8 %115, i64 12, i1 false), !dbg !1939
  %117 = load float, float* %t21y, align 4, !dbg !1940
  %118 = bitcast { <2 x float>, float }* %d2.coerce to i8*, !dbg !1941
  %119 = bitcast %struct.SVec3* %d2 to i8*, !dbg !1941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %119, i64 12, i1 false), !dbg !1941
  %120 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %d2.coerce, i32 0, i32 0, !dbg !1941
  %121 = load <2 x float>, <2 x float>* %120, align 4, !dbg !1941
  %122 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %d2.coerce, i32 0, i32 1, !dbg !1941
  %123 = load float, float* %122, align 4, !dbg !1941
  %call96 = call { <2 x float>, float } @vscale(float %117, <2 x float> %121, float %123), !dbg !1941
  store { <2 x float>, float } %call96, { <2 x float>, float }* %tmp97, align 8, !dbg !1941
  %124 = bitcast { <2 x float>, float }* %tmp97 to i8*, !dbg !1941
  %125 = bitcast %struct.SVec3* %agg.tmp95 to i8*, !dbg !1941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* align 8 %124, i64 12, i1 false), !dbg !1941
  %126 = bitcast { <2 x float>, float }* %agg.tmp.coerce to i8*, !dbg !1942
  %127 = bitcast %struct.SVec3* %agg.tmp to i8*, !dbg !1942
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %127, i64 12, i1 false), !dbg !1942
  %128 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 0, !dbg !1942
  %129 = load <2 x float>, <2 x float>* %128, align 4, !dbg !1942
  %130 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 1, !dbg !1942
  %131 = load float, float* %130, align 4, !dbg !1942
  %132 = bitcast { <2 x float>, float }* %agg.tmp95.coerce to i8*, !dbg !1942
  %133 = bitcast %struct.SVec3* %agg.tmp95 to i8*, !dbg !1942
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 4 %133, i64 12, i1 false), !dbg !1942
  %134 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp95.coerce, i32 0, i32 0, !dbg !1942
  %135 = load <2 x float>, <2 x float>* %134, align 4, !dbg !1942
  %136 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp95.coerce, i32 0, i32 1, !dbg !1942
  %137 = load float, float* %136, align 4, !dbg !1942
  %call98 = call { <2 x float>, float } @vsub(<2 x float> %129, float %131, <2 x float> %135, float %137), !dbg !1942
  store { <2 x float>, float } %call98, { <2 x float>, float }* %tmp99, align 8, !dbg !1942
  %138 = bitcast { <2 x float>, float }* %tmp99 to i8*, !dbg !1942
  %139 = bitcast %struct.SVec3* %vOs92 to i8*, !dbg !1942
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 8 %138, i64 12, i1 false), !dbg !1942
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vOt100, metadata !1943, metadata !DIExpression()), !dbg !1944
  %140 = load float, float* %t31x, align 4, !dbg !1945
  %fneg = fneg float %140, !dbg !1946
  %141 = bitcast { <2 x float>, float }* %d1.coerce102 to i8*, !dbg !1947
  %142 = bitcast %struct.SVec3* %d1 to i8*, !dbg !1947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* align 4 %142, i64 12, i1 false), !dbg !1947
  %143 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %d1.coerce102, i32 0, i32 0, !dbg !1947
  %144 = load <2 x float>, <2 x float>* %143, align 4, !dbg !1947
  %145 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %d1.coerce102, i32 0, i32 1, !dbg !1947
  %146 = load float, float* %145, align 4, !dbg !1947
  %call103 = call { <2 x float>, float } @vscale(float %fneg, <2 x float> %144, float %146), !dbg !1947
  store { <2 x float>, float } %call103, { <2 x float>, float }* %tmp104, align 8, !dbg !1947
  %147 = bitcast { <2 x float>, float }* %tmp104 to i8*, !dbg !1947
  %148 = bitcast %struct.SVec3* %agg.tmp101 to i8*, !dbg !1947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 8 %147, i64 12, i1 false), !dbg !1947
  %149 = load float, float* %t21x, align 4, !dbg !1948
  %150 = bitcast { <2 x float>, float }* %d2.coerce106 to i8*, !dbg !1949
  %151 = bitcast %struct.SVec3* %d2 to i8*, !dbg !1949
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %150, i8* align 4 %151, i64 12, i1 false), !dbg !1949
  %152 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %d2.coerce106, i32 0, i32 0, !dbg !1949
  %153 = load <2 x float>, <2 x float>* %152, align 4, !dbg !1949
  %154 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %d2.coerce106, i32 0, i32 1, !dbg !1949
  %155 = load float, float* %154, align 4, !dbg !1949
  %call107 = call { <2 x float>, float } @vscale(float %149, <2 x float> %153, float %155), !dbg !1949
  store { <2 x float>, float } %call107, { <2 x float>, float }* %tmp108, align 8, !dbg !1949
  %156 = bitcast { <2 x float>, float }* %tmp108 to i8*, !dbg !1949
  %157 = bitcast %struct.SVec3* %agg.tmp105 to i8*, !dbg !1949
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %157, i8* align 8 %156, i64 12, i1 false), !dbg !1949
  %158 = bitcast { <2 x float>, float }* %agg.tmp101.coerce to i8*, !dbg !1950
  %159 = bitcast %struct.SVec3* %agg.tmp101 to i8*, !dbg !1950
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %158, i8* align 4 %159, i64 12, i1 false), !dbg !1950
  %160 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp101.coerce, i32 0, i32 0, !dbg !1950
  %161 = load <2 x float>, <2 x float>* %160, align 4, !dbg !1950
  %162 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp101.coerce, i32 0, i32 1, !dbg !1950
  %163 = load float, float* %162, align 4, !dbg !1950
  %164 = bitcast { <2 x float>, float }* %agg.tmp105.coerce to i8*, !dbg !1950
  %165 = bitcast %struct.SVec3* %agg.tmp105 to i8*, !dbg !1950
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %164, i8* align 4 %165, i64 12, i1 false), !dbg !1950
  %166 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp105.coerce, i32 0, i32 0, !dbg !1950
  %167 = load <2 x float>, <2 x float>* %166, align 4, !dbg !1950
  %168 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp105.coerce, i32 0, i32 1, !dbg !1950
  %169 = load float, float* %168, align 4, !dbg !1950
  %call109 = call { <2 x float>, float } @vadd(<2 x float> %161, float %163, <2 x float> %167, float %169), !dbg !1950
  store { <2 x float>, float } %call109, { <2 x float>, float }* %tmp110, align 8, !dbg !1950
  %170 = bitcast { <2 x float>, float }* %tmp110 to i8*, !dbg !1950
  %171 = bitcast %struct.SVec3* %vOt100 to i8*, !dbg !1950
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 8 %170, i64 12, i1 false), !dbg !1950
  %172 = load float, float* %fSignedAreaSTx2, align 4, !dbg !1951
  %cmp111 = fcmp ogt float %172, 0.000000e+00, !dbg !1952
  %173 = zext i1 %cmp111 to i64, !dbg !1951
  %cond = select i1 %cmp111, i32 8, i32 0, !dbg !1951
  %174 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1953
  %175 = load i32, i32* %f, align 4, !dbg !1954
  %idxprom112 = sext i32 %175 to i64, !dbg !1953
  %arrayidx113 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %174, i64 %idxprom112, !dbg !1953
  %iFlag114 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx113, i32 0, i32 7, !dbg !1955
  %176 = load i32, i32* %iFlag114, align 4, !dbg !1956
  %or115 = or i32 %176, %cond, !dbg !1956
  store i32 %or115, i32* %iFlag114, align 4, !dbg !1956
  %177 = load float, float* %fSignedAreaSTx2, align 4, !dbg !1957
  %call116 = call i32 @NotZero(float %177), !dbg !1959
  %tobool = icmp ne i32 %call116, 0, !dbg !1959
  br i1 %tobool, label %if.then, label %if.end170, !dbg !1960

if.then:                                          ; preds = %for.body40
  call void @llvm.dbg.declare(metadata float* %fAbsArea, metadata !1961, metadata !DIExpression()), !dbg !1963
  %178 = load float, float* %fSignedAreaSTx2, align 4, !dbg !1964
  %179 = call float @llvm.fabs.f32(float %178), !dbg !1965
  store float %179, float* %fAbsArea, align 4, !dbg !1963
  call void @llvm.dbg.declare(metadata float* %fLenOs, metadata !1966, metadata !DIExpression()), !dbg !1967
  %180 = bitcast { <2 x float>, float }* %vOs92.coerce to i8*, !dbg !1968
  %181 = bitcast %struct.SVec3* %vOs92 to i8*, !dbg !1968
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %181, i64 12, i1 false), !dbg !1968
  %182 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs92.coerce, i32 0, i32 0, !dbg !1968
  %183 = load <2 x float>, <2 x float>* %182, align 4, !dbg !1968
  %184 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs92.coerce, i32 0, i32 1, !dbg !1968
  %185 = load float, float* %184, align 4, !dbg !1968
  %call117 = call float @Length(<2 x float> %183, float %185), !dbg !1968
  store float %call117, float* %fLenOs, align 4, !dbg !1967
  call void @llvm.dbg.declare(metadata float* %fLenOt, metadata !1969, metadata !DIExpression()), !dbg !1970
  %186 = bitcast { <2 x float>, float }* %vOt100.coerce to i8*, !dbg !1971
  %187 = bitcast %struct.SVec3* %vOt100 to i8*, !dbg !1971
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %186, i8* align 4 %187, i64 12, i1 false), !dbg !1971
  %188 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt100.coerce, i32 0, i32 0, !dbg !1971
  %189 = load <2 x float>, <2 x float>* %188, align 4, !dbg !1971
  %190 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt100.coerce, i32 0, i32 1, !dbg !1971
  %191 = load float, float* %190, align 4, !dbg !1971
  %call118 = call float @Length(<2 x float> %189, float %191), !dbg !1971
  store float %call118, float* %fLenOt, align 4, !dbg !1970
  call void @llvm.dbg.declare(metadata float* %fS, metadata !1972, metadata !DIExpression()), !dbg !1973
  %192 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1974
  %193 = load i32, i32* %f, align 4, !dbg !1975
  %idxprom119 = sext i32 %193 to i64, !dbg !1974
  %arrayidx120 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %192, i64 %idxprom119, !dbg !1974
  %iFlag121 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx120, i32 0, i32 7, !dbg !1976
  %194 = load i32, i32* %iFlag121, align 4, !dbg !1976
  %and = and i32 %194, 8, !dbg !1977
  %cmp122 = icmp eq i32 %and, 0, !dbg !1978
  %195 = zext i1 %cmp122 to i64, !dbg !1979
  %cond123 = select i1 %cmp122, float -1.000000e+00, float 1.000000e+00, !dbg !1979
  store float %cond123, float* %fS, align 4, !dbg !1973
  %196 = load float, float* %fLenOs, align 4, !dbg !1980
  %call124 = call i32 @NotZero(float %196), !dbg !1982
  %tobool125 = icmp ne i32 %call124, 0, !dbg !1982
  br i1 %tobool125, label %if.then126, label %if.end, !dbg !1983

if.then126:                                       ; preds = %if.then
  %197 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1984
  %198 = load i32, i32* %f, align 4, !dbg !1985
  %idxprom127 = sext i32 %198 to i64, !dbg !1984
  %arrayidx128 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %197, i64 %idxprom127, !dbg !1984
  %vOs129 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx128, i32 0, i32 2, !dbg !1986
  %199 = load float, float* %fS, align 4, !dbg !1987
  %200 = load float, float* %fLenOs, align 4, !dbg !1988
  %div = fdiv float %199, %200, !dbg !1989
  %201 = bitcast { <2 x float>, float }* %vOs92.coerce131 to i8*, !dbg !1990
  %202 = bitcast %struct.SVec3* %vOs92 to i8*, !dbg !1990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %201, i8* align 4 %202, i64 12, i1 false), !dbg !1990
  %203 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs92.coerce131, i32 0, i32 0, !dbg !1990
  %204 = load <2 x float>, <2 x float>* %203, align 4, !dbg !1990
  %205 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs92.coerce131, i32 0, i32 1, !dbg !1990
  %206 = load float, float* %205, align 4, !dbg !1990
  %call132 = call { <2 x float>, float } @vscale(float %div, <2 x float> %204, float %206), !dbg !1990
  store { <2 x float>, float } %call132, { <2 x float>, float }* %tmp133, align 8, !dbg !1990
  %207 = bitcast { <2 x float>, float }* %tmp133 to i8*, !dbg !1990
  %208 = bitcast %struct.SVec3* %tmp130 to i8*, !dbg !1990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 8 %207, i64 12, i1 false), !dbg !1990
  %209 = bitcast %struct.SVec3* %vOs129 to i8*, !dbg !1990
  %210 = bitcast %struct.SVec3* %tmp130 to i8*, !dbg !1990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 4 %210, i64 12, i1 false), !dbg !1990
  br label %if.end, !dbg !1984

if.end:                                           ; preds = %if.then126, %if.then
  %211 = load float, float* %fLenOt, align 4, !dbg !1991
  %call134 = call i32 @NotZero(float %211), !dbg !1993
  %tobool135 = icmp ne i32 %call134, 0, !dbg !1993
  br i1 %tobool135, label %if.then136, label %if.end145, !dbg !1994

if.then136:                                       ; preds = %if.end
  %212 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !1995
  %213 = load i32, i32* %f, align 4, !dbg !1996
  %idxprom137 = sext i32 %213 to i64, !dbg !1995
  %arrayidx138 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %212, i64 %idxprom137, !dbg !1995
  %vOt139 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx138, i32 0, i32 3, !dbg !1997
  %214 = load float, float* %fS, align 4, !dbg !1998
  %215 = load float, float* %fLenOt, align 4, !dbg !1999
  %div141 = fdiv float %214, %215, !dbg !2000
  %216 = bitcast { <2 x float>, float }* %vOt100.coerce142 to i8*, !dbg !2001
  %217 = bitcast %struct.SVec3* %vOt100 to i8*, !dbg !2001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %216, i8* align 4 %217, i64 12, i1 false), !dbg !2001
  %218 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt100.coerce142, i32 0, i32 0, !dbg !2001
  %219 = load <2 x float>, <2 x float>* %218, align 4, !dbg !2001
  %220 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt100.coerce142, i32 0, i32 1, !dbg !2001
  %221 = load float, float* %220, align 4, !dbg !2001
  %call143 = call { <2 x float>, float } @vscale(float %div141, <2 x float> %219, float %221), !dbg !2001
  store { <2 x float>, float } %call143, { <2 x float>, float }* %tmp144, align 8, !dbg !2001
  %222 = bitcast { <2 x float>, float }* %tmp144 to i8*, !dbg !2001
  %223 = bitcast %struct.SVec3* %tmp140 to i8*, !dbg !2001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %223, i8* align 8 %222, i64 12, i1 false), !dbg !2001
  %224 = bitcast %struct.SVec3* %vOt139 to i8*, !dbg !2001
  %225 = bitcast %struct.SVec3* %tmp140 to i8*, !dbg !2001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %224, i8* align 4 %225, i64 12, i1 false), !dbg !2001
  br label %if.end145, !dbg !1995

if.end145:                                        ; preds = %if.then136, %if.end
  %226 = load float, float* %fLenOs, align 4, !dbg !2002
  %227 = load float, float* %fAbsArea, align 4, !dbg !2003
  %div146 = fdiv float %226, %227, !dbg !2004
  %228 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2005
  %229 = load i32, i32* %f, align 4, !dbg !2006
  %idxprom147 = sext i32 %229 to i64, !dbg !2005
  %arrayidx148 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %228, i64 %idxprom147, !dbg !2005
  %fMagS149 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx148, i32 0, i32 4, !dbg !2007
  store float %div146, float* %fMagS149, align 8, !dbg !2008
  %230 = load float, float* %fLenOt, align 4, !dbg !2009
  %231 = load float, float* %fAbsArea, align 4, !dbg !2010
  %div150 = fdiv float %230, %231, !dbg !2011
  %232 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2012
  %233 = load i32, i32* %f, align 4, !dbg !2013
  %idxprom151 = sext i32 %233 to i64, !dbg !2012
  %arrayidx152 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %232, i64 %idxprom151, !dbg !2012
  %fMagT153 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx152, i32 0, i32 5, !dbg !2014
  store float %div150, float* %fMagT153, align 4, !dbg !2015
  %234 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2016
  %235 = load i32, i32* %f, align 4, !dbg !2018
  %idxprom154 = sext i32 %235 to i64, !dbg !2016
  %arrayidx155 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %234, i64 %idxprom154, !dbg !2016
  %fMagS156 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx155, i32 0, i32 4, !dbg !2019
  %236 = load float, float* %fMagS156, align 8, !dbg !2019
  %call157 = call i32 @NotZero(float %236), !dbg !2020
  %tobool158 = icmp ne i32 %call157, 0, !dbg !2020
  br i1 %tobool158, label %land.lhs.true, label %if.end169, !dbg !2021

land.lhs.true:                                    ; preds = %if.end145
  %237 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2022
  %238 = load i32, i32* %f, align 4, !dbg !2023
  %idxprom159 = sext i32 %238 to i64, !dbg !2022
  %arrayidx160 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %237, i64 %idxprom159, !dbg !2022
  %fMagT161 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx160, i32 0, i32 5, !dbg !2024
  %239 = load float, float* %fMagT161, align 4, !dbg !2024
  %call162 = call i32 @NotZero(float %239), !dbg !2025
  %tobool163 = icmp ne i32 %call162, 0, !dbg !2025
  br i1 %tobool163, label %if.then164, label %if.end169, !dbg !2026

if.then164:                                       ; preds = %land.lhs.true
  %240 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2027
  %241 = load i32, i32* %f, align 4, !dbg !2028
  %idxprom165 = sext i32 %241 to i64, !dbg !2027
  %arrayidx166 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %240, i64 %idxprom165, !dbg !2027
  %iFlag167 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx166, i32 0, i32 7, !dbg !2029
  %242 = load i32, i32* %iFlag167, align 4, !dbg !2030
  %and168 = and i32 %242, -5, !dbg !2030
  store i32 %and168, i32* %iFlag167, align 4, !dbg !2030
  br label %if.end169, !dbg !2027

if.end169:                                        ; preds = %if.then164, %land.lhs.true, %if.end145
  br label %if.end170, !dbg !2031

if.end170:                                        ; preds = %if.end169, %for.body40
  br label %for.inc171, !dbg !2032

for.inc171:                                       ; preds = %if.end170
  %243 = load i32, i32* %f, align 4, !dbg !2033
  %inc172 = add nsw i32 %243, 1, !dbg !2033
  store i32 %inc172, i32* %f, align 4, !dbg !2033
  br label %for.cond38, !dbg !2034, !llvm.loop !2035

for.end173:                                       ; preds = %for.cond38
  br label %while.cond, !dbg !2037

while.cond:                                       ; preds = %if.end265, %for.end173
  %244 = load i32, i32* %t, align 4, !dbg !2038
  %245 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !2039
  %sub174 = sub nsw i32 %245, 1, !dbg !2040
  %cmp175 = icmp slt i32 %244, %sub174, !dbg !2041
  br i1 %cmp175, label %while.body, label %while.end, !dbg !2037

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %iFO_a, metadata !2042, metadata !DIExpression()), !dbg !2044
  %246 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2045
  %247 = load i32, i32* %t, align 4, !dbg !2046
  %idxprom176 = sext i32 %247 to i64, !dbg !2045
  %arrayidx177 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %246, i64 %idxprom176, !dbg !2045
  %iOrgFaceNumber = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx177, i32 0, i32 6, !dbg !2047
  %248 = load i32, i32* %iOrgFaceNumber, align 8, !dbg !2047
  store i32 %248, i32* %iFO_a, align 4, !dbg !2044
  call void @llvm.dbg.declare(metadata i32* %iFO_b, metadata !2048, metadata !DIExpression()), !dbg !2049
  %249 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2050
  %250 = load i32, i32* %t, align 4, !dbg !2051
  %add178 = add nsw i32 %250, 1, !dbg !2052
  %idxprom179 = sext i32 %add178 to i64, !dbg !2050
  %arrayidx180 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %249, i64 %idxprom179, !dbg !2050
  %iOrgFaceNumber181 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx180, i32 0, i32 6, !dbg !2053
  %251 = load i32, i32* %iOrgFaceNumber181, align 8, !dbg !2053
  store i32 %251, i32* %iFO_b, align 4, !dbg !2049
  %252 = load i32, i32* %iFO_a, align 4, !dbg !2054
  %253 = load i32, i32* %iFO_b, align 4, !dbg !2056
  %cmp182 = icmp eq i32 %252, %253, !dbg !2057
  br i1 %cmp182, label %if.then183, label %if.else263, !dbg !2058

if.then183:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %bIsDeg_a, metadata !2059, metadata !DIExpression()), !dbg !2061
  %254 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2062
  %255 = load i32, i32* %t, align 4, !dbg !2063
  %idxprom184 = sext i32 %255 to i64, !dbg !2062
  %arrayidx185 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %254, i64 %idxprom184, !dbg !2062
  %iFlag186 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx185, i32 0, i32 7, !dbg !2064
  %256 = load i32, i32* %iFlag186, align 4, !dbg !2064
  %and187 = and i32 %256, 1, !dbg !2065
  %cmp188 = icmp ne i32 %and187, 0, !dbg !2066
  %257 = zext i1 %cmp188 to i64, !dbg !2067
  %cond189 = select i1 %cmp188, i32 1, i32 0, !dbg !2067
  store i32 %cond189, i32* %bIsDeg_a, align 4, !dbg !2061
  call void @llvm.dbg.declare(metadata i32* %bIsDeg_b, metadata !2068, metadata !DIExpression()), !dbg !2069
  %258 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2070
  %259 = load i32, i32* %t, align 4, !dbg !2071
  %add190 = add nsw i32 %259, 1, !dbg !2072
  %idxprom191 = sext i32 %add190 to i64, !dbg !2070
  %arrayidx192 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %258, i64 %idxprom191, !dbg !2070
  %iFlag193 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx192, i32 0, i32 7, !dbg !2073
  %260 = load i32, i32* %iFlag193, align 4, !dbg !2073
  %and194 = and i32 %260, 1, !dbg !2074
  %cmp195 = icmp ne i32 %and194, 0, !dbg !2075
  %261 = zext i1 %cmp195 to i64, !dbg !2076
  %cond196 = select i1 %cmp195, i32 1, i32 0, !dbg !2076
  store i32 %cond196, i32* %bIsDeg_b, align 4, !dbg !2069
  %262 = load i32, i32* %bIsDeg_a, align 4, !dbg !2077
  %tobool197 = icmp ne i32 %262, 0, !dbg !2077
  br i1 %tobool197, label %lor.end, label %lor.rhs, !dbg !2079

lor.rhs:                                          ; preds = %if.then183
  %263 = load i32, i32* %bIsDeg_b, align 4, !dbg !2080
  %tobool198 = icmp ne i32 %263, 0, !dbg !2079
  br label %lor.end, !dbg !2079

lor.end:                                          ; preds = %lor.rhs, %if.then183
  %264 = phi i1 [ true, %if.then183 ], [ %tobool198, %lor.rhs ]
  %lor.ext = zext i1 %264 to i32, !dbg !2079
  %cmp199 = icmp eq i32 %lor.ext, 0, !dbg !2081
  br i1 %cmp199, label %if.then200, label %if.end261, !dbg !2082

if.then200:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %bOrientA, metadata !2083, metadata !DIExpression()), !dbg !2085
  %265 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2086
  %266 = load i32, i32* %t, align 4, !dbg !2087
  %idxprom201 = sext i32 %266 to i64, !dbg !2086
  %arrayidx202 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %265, i64 %idxprom201, !dbg !2086
  %iFlag203 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx202, i32 0, i32 7, !dbg !2088
  %267 = load i32, i32* %iFlag203, align 4, !dbg !2088
  %and204 = and i32 %267, 8, !dbg !2089
  %cmp205 = icmp ne i32 %and204, 0, !dbg !2090
  %268 = zext i1 %cmp205 to i64, !dbg !2091
  %cond206 = select i1 %cmp205, i32 1, i32 0, !dbg !2091
  store i32 %cond206, i32* %bOrientA, align 4, !dbg !2085
  call void @llvm.dbg.declare(metadata i32* %bOrientB, metadata !2092, metadata !DIExpression()), !dbg !2093
  %269 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2094
  %270 = load i32, i32* %t, align 4, !dbg !2095
  %add207 = add nsw i32 %270, 1, !dbg !2096
  %idxprom208 = sext i32 %add207 to i64, !dbg !2094
  %arrayidx209 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %269, i64 %idxprom208, !dbg !2094
  %iFlag210 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx209, i32 0, i32 7, !dbg !2097
  %271 = load i32, i32* %iFlag210, align 4, !dbg !2097
  %and211 = and i32 %271, 8, !dbg !2098
  %cmp212 = icmp ne i32 %and211, 0, !dbg !2099
  %272 = zext i1 %cmp212 to i64, !dbg !2100
  %cond213 = select i1 %cmp212, i32 1, i32 0, !dbg !2100
  store i32 %cond213, i32* %bOrientB, align 4, !dbg !2093
  %273 = load i32, i32* %bOrientA, align 4, !dbg !2101
  %274 = load i32, i32* %bOrientB, align 4, !dbg !2103
  %cmp214 = icmp ne i32 %273, %274, !dbg !2104
  br i1 %cmp214, label %if.then215, label %if.end260, !dbg !2105

if.then215:                                       ; preds = %if.then200
  call void @llvm.dbg.declare(metadata i32* %bChooseOrientFirstTri, metadata !2106, metadata !DIExpression()), !dbg !2108
  store i32 0, i32* %bChooseOrientFirstTri, align 4, !dbg !2108
  %275 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2109
  %276 = load i32, i32* %t, align 4, !dbg !2111
  %add216 = add nsw i32 %276, 1, !dbg !2112
  %idxprom217 = sext i32 %add216 to i64, !dbg !2109
  %arrayidx218 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %275, i64 %idxprom217, !dbg !2109
  %iFlag219 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx218, i32 0, i32 7, !dbg !2113
  %277 = load i32, i32* %iFlag219, align 4, !dbg !2113
  %and220 = and i32 %277, 4, !dbg !2114
  %cmp221 = icmp ne i32 %and220, 0, !dbg !2115
  br i1 %cmp221, label %if.then222, label %if.else, !dbg !2116

if.then222:                                       ; preds = %if.then215
  store i32 1, i32* %bChooseOrientFirstTri, align 4, !dbg !2117
  br label %if.end237, !dbg !2118

if.else:                                          ; preds = %if.then215
  %278 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !2119
  %279 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !2121
  %280 = load i32, i32* %t, align 4, !dbg !2122
  %mul223 = mul nsw i32 %280, 3, !dbg !2123
  %add224 = add nsw i32 %mul223, 0, !dbg !2124
  %idxprom225 = sext i32 %add224 to i64, !dbg !2121
  %arrayidx226 = getelementptr inbounds i32, i32* %279, i64 %idxprom225, !dbg !2121
  %call227 = call float @CalcTexArea(%struct.SMikkTSpaceContext* %278, i32* %arrayidx226), !dbg !2125
  %281 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !2126
  %282 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !2127
  %283 = load i32, i32* %t, align 4, !dbg !2128
  %add228 = add nsw i32 %283, 1, !dbg !2129
  %mul229 = mul nsw i32 %add228, 3, !dbg !2130
  %add230 = add nsw i32 %mul229, 0, !dbg !2131
  %idxprom231 = sext i32 %add230 to i64, !dbg !2127
  %arrayidx232 = getelementptr inbounds i32, i32* %282, i64 %idxprom231, !dbg !2127
  %call233 = call float @CalcTexArea(%struct.SMikkTSpaceContext* %281, i32* %arrayidx232), !dbg !2132
  %cmp234 = fcmp oge float %call227, %call233, !dbg !2133
  br i1 %cmp234, label %if.then235, label %if.end236, !dbg !2134

if.then235:                                       ; preds = %if.else
  store i32 1, i32* %bChooseOrientFirstTri, align 4, !dbg !2135
  br label %if.end236, !dbg !2136

if.end236:                                        ; preds = %if.then235, %if.else
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %if.then222
  call void @llvm.dbg.declare(metadata i32* %t0, metadata !2137, metadata !DIExpression()), !dbg !2139
  %284 = load i32, i32* %bChooseOrientFirstTri, align 4, !dbg !2140
  %tobool238 = icmp ne i32 %284, 0, !dbg !2140
  br i1 %tobool238, label %cond.true, label %cond.false, !dbg !2140

cond.true:                                        ; preds = %if.end237
  %285 = load i32, i32* %t, align 4, !dbg !2141
  br label %cond.end, !dbg !2140

cond.false:                                       ; preds = %if.end237
  %286 = load i32, i32* %t, align 4, !dbg !2142
  %add239 = add nsw i32 %286, 1, !dbg !2143
  br label %cond.end, !dbg !2140

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond240 = phi i32 [ %285, %cond.true ], [ %add239, %cond.false ], !dbg !2140
  store i32 %cond240, i32* %t0, align 4, !dbg !2139
  call void @llvm.dbg.declare(metadata i32* %t1241, metadata !2144, metadata !DIExpression()), !dbg !2145
  %287 = load i32, i32* %bChooseOrientFirstTri, align 4, !dbg !2146
  %tobool242 = icmp ne i32 %287, 0, !dbg !2146
  br i1 %tobool242, label %cond.true243, label %cond.false245, !dbg !2146

cond.true243:                                     ; preds = %cond.end
  %288 = load i32, i32* %t, align 4, !dbg !2147
  %add244 = add nsw i32 %288, 1, !dbg !2148
  br label %cond.end246, !dbg !2146

cond.false245:                                    ; preds = %cond.end
  %289 = load i32, i32* %t, align 4, !dbg !2149
  br label %cond.end246, !dbg !2146

cond.end246:                                      ; preds = %cond.false245, %cond.true243
  %cond247 = phi i32 [ %add244, %cond.true243 ], [ %289, %cond.false245 ], !dbg !2146
  store i32 %cond247, i32* %t1241, align 4, !dbg !2145
  %290 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2150
  %291 = load i32, i32* %t1241, align 4, !dbg !2151
  %idxprom248 = sext i32 %291 to i64, !dbg !2150
  %arrayidx249 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %290, i64 %idxprom248, !dbg !2150
  %iFlag250 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx249, i32 0, i32 7, !dbg !2152
  %292 = load i32, i32* %iFlag250, align 4, !dbg !2153
  %and251 = and i32 %292, -9, !dbg !2153
  store i32 %and251, i32* %iFlag250, align 4, !dbg !2153
  %293 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2154
  %294 = load i32, i32* %t0, align 4, !dbg !2155
  %idxprom252 = sext i32 %294 to i64, !dbg !2154
  %arrayidx253 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %293, i64 %idxprom252, !dbg !2154
  %iFlag254 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx253, i32 0, i32 7, !dbg !2156
  %295 = load i32, i32* %iFlag254, align 4, !dbg !2156
  %and255 = and i32 %295, 8, !dbg !2157
  %296 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2158
  %297 = load i32, i32* %t1241, align 4, !dbg !2159
  %idxprom256 = sext i32 %297 to i64, !dbg !2158
  %arrayidx257 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %296, i64 %idxprom256, !dbg !2158
  %iFlag258 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx257, i32 0, i32 7, !dbg !2160
  %298 = load i32, i32* %iFlag258, align 4, !dbg !2161
  %or259 = or i32 %298, %and255, !dbg !2161
  store i32 %or259, i32* %iFlag258, align 4, !dbg !2161
  br label %if.end260, !dbg !2162

if.end260:                                        ; preds = %cond.end246, %if.then200
  br label %if.end261, !dbg !2163

if.end261:                                        ; preds = %if.end260, %lor.end
  %299 = load i32, i32* %t, align 4, !dbg !2164
  %add262 = add nsw i32 %299, 2, !dbg !2164
  store i32 %add262, i32* %t, align 4, !dbg !2164
  br label %if.end265, !dbg !2165

if.else263:                                       ; preds = %while.body
  %300 = load i32, i32* %t, align 4, !dbg !2166
  %inc264 = add nsw i32 %300, 1, !dbg !2166
  store i32 %inc264, i32* %t, align 4, !dbg !2166
  br label %if.end265

if.end265:                                        ; preds = %if.else263, %if.end261
  br label %while.cond, !dbg !2037, !llvm.loop !2167

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %union.SEdge** %pEdges, metadata !2169, metadata !DIExpression()), !dbg !2171
  %301 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !2172
  %conv = sext i32 %301 to i64, !dbg !2172
  %mul266 = mul i64 12, %conv, !dbg !2173
  %mul267 = mul i64 %mul266, 3, !dbg !2174
  %call268 = call noalias i8* @malloc(i64 %mul267) #5, !dbg !2175
  %302 = bitcast i8* %call268 to %union.SEdge*, !dbg !2176
  store %union.SEdge* %302, %union.SEdge** %pEdges, align 8, !dbg !2171
  %303 = load %union.SEdge*, %union.SEdge** %pEdges, align 8, !dbg !2177
  %cmp269 = icmp eq %union.SEdge* %303, null, !dbg !2179
  br i1 %cmp269, label %if.then271, label %if.else272, !dbg !2180

if.then271:                                       ; preds = %while.end
  %304 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2181
  %305 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !2182
  %306 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !2183
  call void @BuildNeighborsSlow(%struct.STriInfo* %304, i32* %305, i32 %306), !dbg !2184
  br label %if.end273, !dbg !2184

if.else272:                                       ; preds = %while.end
  %307 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2185
  %308 = load %union.SEdge*, %union.SEdge** %pEdges, align 8, !dbg !2187
  %309 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !2188
  %310 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !2189
  call void @BuildNeighborsFast(%struct.STriInfo* %307, %union.SEdge* %308, i32* %309, i32 %310), !dbg !2190
  %311 = load %union.SEdge*, %union.SEdge** %pEdges, align 8, !dbg !2191
  %312 = bitcast %union.SEdge* %311 to i8*, !dbg !2191
  call void @free(i8* %312) #5, !dbg !2192
  br label %if.end273

if.end273:                                        ; preds = %if.else272, %if.then271
  ret void, !dbg !2193
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @Build4RuleGroups(%struct.STriInfo* %pTriInfos, %struct.SGroup* %pGroups, i32* %piGroupTrianglesBuffer, i32* %piTriListIn, i32 %iNrTrianglesIn) #0 !dbg !2194 {
entry:
  %pTriInfos.addr = alloca %struct.STriInfo*, align 8
  %pGroups.addr = alloca %struct.SGroup*, align 8
  %piGroupTrianglesBuffer.addr = alloca i32*, align 8
  %piTriListIn.addr = alloca i32*, align 8
  %iNrTrianglesIn.addr = alloca i32, align 4
  %iNrMaxGroups = alloca i32, align 4
  %iNrActiveGroups = alloca i32, align 4
  %iOffset = alloca i32, align 4
  %f = alloca i32, align 4
  %i = alloca i32, align 4
  %bOrPre = alloca i32, align 4
  %neigh_indexL = alloca i32, align 4
  %neigh_indexR = alloca i32, align 4
  %vert_index = alloca i32, align 4
  %bAnswer = alloca i32, align 4
  %bOrPre2 = alloca i32, align 4
  %bDiff = alloca i32, align 4
  %bAnswer91 = alloca i32, align 4
  %bOrPre298 = alloca i32, align 4
  %bDiff106 = alloca i32, align 4
  store %struct.STriInfo* %pTriInfos, %struct.STriInfo** %pTriInfos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pTriInfos.addr, metadata !2197, metadata !DIExpression()), !dbg !2198
  store %struct.SGroup* %pGroups, %struct.SGroup** %pGroups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SGroup** %pGroups.addr, metadata !2199, metadata !DIExpression()), !dbg !2200
  store i32* %piGroupTrianglesBuffer, i32** %piGroupTrianglesBuffer.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piGroupTrianglesBuffer.addr, metadata !2201, metadata !DIExpression()), !dbg !2202
  store i32* %piTriListIn, i32** %piTriListIn.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriListIn.addr, metadata !2203, metadata !DIExpression()), !dbg !2204
  store i32 %iNrTrianglesIn, i32* %iNrTrianglesIn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iNrTrianglesIn.addr, metadata !2205, metadata !DIExpression()), !dbg !2206
  call void @llvm.dbg.declare(metadata i32* %iNrMaxGroups, metadata !2207, metadata !DIExpression()), !dbg !2208
  %0 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !2209
  %mul = mul nsw i32 %0, 3, !dbg !2210
  store i32 %mul, i32* %iNrMaxGroups, align 4, !dbg !2208
  call void @llvm.dbg.declare(metadata i32* %iNrActiveGroups, metadata !2211, metadata !DIExpression()), !dbg !2212
  store i32 0, i32* %iNrActiveGroups, align 4, !dbg !2212
  call void @llvm.dbg.declare(metadata i32* %iOffset, metadata !2213, metadata !DIExpression()), !dbg !2214
  store i32 0, i32* %iOffset, align 4, !dbg !2214
  call void @llvm.dbg.declare(metadata i32* %f, metadata !2215, metadata !DIExpression()), !dbg !2216
  store i32 0, i32* %f, align 4, !dbg !2216
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2217, metadata !DIExpression()), !dbg !2218
  store i32 0, i32* %i, align 4, !dbg !2218
  %1 = load i32, i32* %iNrMaxGroups, align 4, !dbg !2219
  store i32 0, i32* %f, align 4, !dbg !2220
  br label %for.cond, !dbg !2222

for.cond:                                         ; preds = %for.inc120, %entry
  %2 = load i32, i32* %f, align 4, !dbg !2223
  %3 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !2225
  %cmp = icmp slt i32 %2, %3, !dbg !2226
  br i1 %cmp, label %for.body, label %for.end122, !dbg !2227

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !2228
  br label %for.cond1, !dbg !2231

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %i, align 4, !dbg !2232
  %cmp2 = icmp slt i32 %4, 3, !dbg !2234
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !2235

for.body3:                                        ; preds = %for.cond1
  %5 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2236
  %6 = load i32, i32* %f, align 4, !dbg !2239
  %idxprom = sext i32 %6 to i64, !dbg !2236
  %arrayidx = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %5, i64 %idxprom, !dbg !2236
  %iFlag = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx, i32 0, i32 7, !dbg !2240
  %7 = load i32, i32* %iFlag, align 4, !dbg !2240
  %and = and i32 %7, 4, !dbg !2241
  %cmp4 = icmp eq i32 %and, 0, !dbg !2242
  br i1 %cmp4, label %land.lhs.true, label %if.end118, !dbg !2243

land.lhs.true:                                    ; preds = %for.body3
  %8 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2244
  %9 = load i32, i32* %f, align 4, !dbg !2245
  %idxprom5 = sext i32 %9 to i64, !dbg !2244
  %arrayidx6 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %8, i64 %idxprom5, !dbg !2244
  %AssignedGroup = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx6, i32 0, i32 1, !dbg !2246
  %10 = load i32, i32* %i, align 4, !dbg !2247
  %idxprom7 = sext i32 %10 to i64, !dbg !2244
  %arrayidx8 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup, i64 0, i64 %idxprom7, !dbg !2244
  %11 = load %struct.SGroup*, %struct.SGroup** %arrayidx8, align 8, !dbg !2244
  %cmp9 = icmp eq %struct.SGroup* %11, null, !dbg !2248
  br i1 %cmp9, label %if.then, label %if.end118, !dbg !2249

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %bOrPre, metadata !2250, metadata !DIExpression()), !dbg !2252
  call void @llvm.dbg.declare(metadata i32* %neigh_indexL, metadata !2253, metadata !DIExpression()), !dbg !2254
  call void @llvm.dbg.declare(metadata i32* %neigh_indexR, metadata !2255, metadata !DIExpression()), !dbg !2256
  call void @llvm.dbg.declare(metadata i32* %vert_index, metadata !2257, metadata !DIExpression()), !dbg !2258
  %12 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !2259
  %13 = load i32, i32* %f, align 4, !dbg !2260
  %mul10 = mul nsw i32 %13, 3, !dbg !2261
  %14 = load i32, i32* %i, align 4, !dbg !2262
  %add = add nsw i32 %mul10, %14, !dbg !2263
  %idxprom11 = sext i32 %add to i64, !dbg !2259
  %arrayidx12 = getelementptr inbounds i32, i32* %12, i64 %idxprom11, !dbg !2259
  %15 = load i32, i32* %arrayidx12, align 4, !dbg !2259
  store i32 %15, i32* %vert_index, align 4, !dbg !2258
  %16 = load %struct.SGroup*, %struct.SGroup** %pGroups.addr, align 8, !dbg !2264
  %17 = load i32, i32* %iNrActiveGroups, align 4, !dbg !2265
  %idxprom13 = sext i32 %17 to i64, !dbg !2264
  %arrayidx14 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %16, i64 %idxprom13, !dbg !2264
  %18 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2266
  %19 = load i32, i32* %f, align 4, !dbg !2267
  %idxprom15 = sext i32 %19 to i64, !dbg !2266
  %arrayidx16 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %18, i64 %idxprom15, !dbg !2266
  %AssignedGroup17 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx16, i32 0, i32 1, !dbg !2268
  %20 = load i32, i32* %i, align 4, !dbg !2269
  %idxprom18 = sext i32 %20 to i64, !dbg !2266
  %arrayidx19 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup17, i64 0, i64 %idxprom18, !dbg !2266
  store %struct.SGroup* %arrayidx14, %struct.SGroup** %arrayidx19, align 8, !dbg !2270
  %21 = load i32, i32* %vert_index, align 4, !dbg !2271
  %22 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2272
  %23 = load i32, i32* %f, align 4, !dbg !2273
  %idxprom20 = sext i32 %23 to i64, !dbg !2272
  %arrayidx21 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %22, i64 %idxprom20, !dbg !2272
  %AssignedGroup22 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx21, i32 0, i32 1, !dbg !2274
  %24 = load i32, i32* %i, align 4, !dbg !2275
  %idxprom23 = sext i32 %24 to i64, !dbg !2272
  %arrayidx24 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup22, i64 0, i64 %idxprom23, !dbg !2272
  %25 = load %struct.SGroup*, %struct.SGroup** %arrayidx24, align 8, !dbg !2272
  %iVertexRepresentitive = getelementptr inbounds %struct.SGroup, %struct.SGroup* %25, i32 0, i32 2, !dbg !2276
  store i32 %21, i32* %iVertexRepresentitive, align 8, !dbg !2277
  %26 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2278
  %27 = load i32, i32* %f, align 4, !dbg !2279
  %idxprom25 = sext i32 %27 to i64, !dbg !2278
  %arrayidx26 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %26, i64 %idxprom25, !dbg !2278
  %iFlag27 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx26, i32 0, i32 7, !dbg !2280
  %28 = load i32, i32* %iFlag27, align 4, !dbg !2280
  %and28 = and i32 %28, 8, !dbg !2281
  %cmp29 = icmp ne i32 %and28, 0, !dbg !2282
  %conv = zext i1 %cmp29 to i32, !dbg !2282
  %29 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2283
  %30 = load i32, i32* %f, align 4, !dbg !2284
  %idxprom30 = sext i32 %30 to i64, !dbg !2283
  %arrayidx31 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %29, i64 %idxprom30, !dbg !2283
  %AssignedGroup32 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx31, i32 0, i32 1, !dbg !2285
  %31 = load i32, i32* %i, align 4, !dbg !2286
  %idxprom33 = sext i32 %31 to i64, !dbg !2283
  %arrayidx34 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup32, i64 0, i64 %idxprom33, !dbg !2283
  %32 = load %struct.SGroup*, %struct.SGroup** %arrayidx34, align 8, !dbg !2283
  %bOrientPreservering = getelementptr inbounds %struct.SGroup, %struct.SGroup* %32, i32 0, i32 3, !dbg !2287
  store i32 %conv, i32* %bOrientPreservering, align 4, !dbg !2288
  %33 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2289
  %34 = load i32, i32* %f, align 4, !dbg !2290
  %idxprom35 = sext i32 %34 to i64, !dbg !2289
  %arrayidx36 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %33, i64 %idxprom35, !dbg !2289
  %AssignedGroup37 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx36, i32 0, i32 1, !dbg !2291
  %35 = load i32, i32* %i, align 4, !dbg !2292
  %idxprom38 = sext i32 %35 to i64, !dbg !2289
  %arrayidx39 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup37, i64 0, i64 %idxprom38, !dbg !2289
  %36 = load %struct.SGroup*, %struct.SGroup** %arrayidx39, align 8, !dbg !2289
  %iNrFaces = getelementptr inbounds %struct.SGroup, %struct.SGroup* %36, i32 0, i32 0, !dbg !2293
  store i32 0, i32* %iNrFaces, align 8, !dbg !2294
  %37 = load i32*, i32** %piGroupTrianglesBuffer.addr, align 8, !dbg !2295
  %38 = load i32, i32* %iOffset, align 4, !dbg !2296
  %idxprom40 = sext i32 %38 to i64, !dbg !2295
  %arrayidx41 = getelementptr inbounds i32, i32* %37, i64 %idxprom40, !dbg !2295
  %39 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2297
  %40 = load i32, i32* %f, align 4, !dbg !2298
  %idxprom42 = sext i32 %40 to i64, !dbg !2297
  %arrayidx43 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %39, i64 %idxprom42, !dbg !2297
  %AssignedGroup44 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx43, i32 0, i32 1, !dbg !2299
  %41 = load i32, i32* %i, align 4, !dbg !2300
  %idxprom45 = sext i32 %41 to i64, !dbg !2297
  %arrayidx46 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup44, i64 0, i64 %idxprom45, !dbg !2297
  %42 = load %struct.SGroup*, %struct.SGroup** %arrayidx46, align 8, !dbg !2297
  %pFaceIndices = getelementptr inbounds %struct.SGroup, %struct.SGroup* %42, i32 0, i32 1, !dbg !2301
  store i32* %arrayidx41, i32** %pFaceIndices, align 8, !dbg !2302
  %43 = load i32, i32* %iNrActiveGroups, align 4, !dbg !2303
  %inc = add nsw i32 %43, 1, !dbg !2303
  store i32 %inc, i32* %iNrActiveGroups, align 4, !dbg !2303
  %44 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2304
  %45 = load i32, i32* %f, align 4, !dbg !2305
  %idxprom47 = sext i32 %45 to i64, !dbg !2304
  %arrayidx48 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %44, i64 %idxprom47, !dbg !2304
  %AssignedGroup49 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx48, i32 0, i32 1, !dbg !2306
  %46 = load i32, i32* %i, align 4, !dbg !2307
  %idxprom50 = sext i32 %46 to i64, !dbg !2304
  %arrayidx51 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup49, i64 0, i64 %idxprom50, !dbg !2304
  %47 = load %struct.SGroup*, %struct.SGroup** %arrayidx51, align 8, !dbg !2304
  %48 = load i32, i32* %f, align 4, !dbg !2308
  call void @AddTriToGroup(%struct.SGroup* %47, i32 %48), !dbg !2309
  %49 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2310
  %50 = load i32, i32* %f, align 4, !dbg !2311
  %idxprom52 = sext i32 %50 to i64, !dbg !2310
  %arrayidx53 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %49, i64 %idxprom52, !dbg !2310
  %iFlag54 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx53, i32 0, i32 7, !dbg !2312
  %51 = load i32, i32* %iFlag54, align 4, !dbg !2312
  %and55 = and i32 %51, 8, !dbg !2313
  %cmp56 = icmp ne i32 %and55, 0, !dbg !2314
  %52 = zext i1 %cmp56 to i64, !dbg !2315
  %cond = select i1 %cmp56, i32 1, i32 0, !dbg !2315
  store i32 %cond, i32* %bOrPre, align 4, !dbg !2316
  %53 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2317
  %54 = load i32, i32* %f, align 4, !dbg !2318
  %idxprom58 = sext i32 %54 to i64, !dbg !2317
  %arrayidx59 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %53, i64 %idxprom58, !dbg !2317
  %FaceNeighbors = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx59, i32 0, i32 0, !dbg !2319
  %55 = load i32, i32* %i, align 4, !dbg !2320
  %idxprom60 = sext i32 %55 to i64, !dbg !2317
  %arrayidx61 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors, i64 0, i64 %idxprom60, !dbg !2317
  %56 = load i32, i32* %arrayidx61, align 4, !dbg !2317
  store i32 %56, i32* %neigh_indexL, align 4, !dbg !2321
  %57 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2322
  %58 = load i32, i32* %f, align 4, !dbg !2323
  %idxprom62 = sext i32 %58 to i64, !dbg !2322
  %arrayidx63 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %57, i64 %idxprom62, !dbg !2322
  %FaceNeighbors64 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx63, i32 0, i32 0, !dbg !2324
  %59 = load i32, i32* %i, align 4, !dbg !2325
  %cmp65 = icmp sgt i32 %59, 0, !dbg !2326
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !2325

cond.true:                                        ; preds = %if.then
  %60 = load i32, i32* %i, align 4, !dbg !2327
  %sub = sub nsw i32 %60, 1, !dbg !2328
  br label %cond.end, !dbg !2325

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !2325

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond67 = phi i32 [ %sub, %cond.true ], [ 2, %cond.false ], !dbg !2325
  %idxprom68 = sext i32 %cond67 to i64, !dbg !2322
  %arrayidx69 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors64, i64 0, i64 %idxprom68, !dbg !2322
  %61 = load i32, i32* %arrayidx69, align 4, !dbg !2322
  store i32 %61, i32* %neigh_indexR, align 4, !dbg !2329
  %62 = load i32, i32* %neigh_indexL, align 4, !dbg !2330
  %cmp70 = icmp sge i32 %62, 0, !dbg !2332
  br i1 %cmp70, label %if.then72, label %if.end, !dbg !2333

if.then72:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %bAnswer, metadata !2334, metadata !DIExpression()), !dbg !2336
  %63 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !2337
  %64 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2338
  %65 = load i32, i32* %neigh_indexL, align 4, !dbg !2339
  %66 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2340
  %67 = load i32, i32* %f, align 4, !dbg !2341
  %idxprom73 = sext i32 %67 to i64, !dbg !2340
  %arrayidx74 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %66, i64 %idxprom73, !dbg !2340
  %AssignedGroup75 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx74, i32 0, i32 1, !dbg !2342
  %68 = load i32, i32* %i, align 4, !dbg !2343
  %idxprom76 = sext i32 %68 to i64, !dbg !2340
  %arrayidx77 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup75, i64 0, i64 %idxprom76, !dbg !2340
  %69 = load %struct.SGroup*, %struct.SGroup** %arrayidx77, align 8, !dbg !2340
  %call = call i32 @AssignRecur(i32* %63, %struct.STriInfo* %64, i32 %65, %struct.SGroup* %69), !dbg !2344
  store i32 %call, i32* %bAnswer, align 4, !dbg !2336
  call void @llvm.dbg.declare(metadata i32* %bOrPre2, metadata !2345, metadata !DIExpression()), !dbg !2346
  %70 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2347
  %71 = load i32, i32* %neigh_indexL, align 4, !dbg !2348
  %idxprom78 = sext i32 %71 to i64, !dbg !2347
  %arrayidx79 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %70, i64 %idxprom78, !dbg !2347
  %iFlag80 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx79, i32 0, i32 7, !dbg !2349
  %72 = load i32, i32* %iFlag80, align 4, !dbg !2349
  %and81 = and i32 %72, 8, !dbg !2350
  %cmp82 = icmp ne i32 %and81, 0, !dbg !2351
  %73 = zext i1 %cmp82 to i64, !dbg !2352
  %cond84 = select i1 %cmp82, i32 1, i32 0, !dbg !2352
  store i32 %cond84, i32* %bOrPre2, align 4, !dbg !2346
  call void @llvm.dbg.declare(metadata i32* %bDiff, metadata !2353, metadata !DIExpression()), !dbg !2354
  %74 = load i32, i32* %bOrPre, align 4, !dbg !2355
  %75 = load i32, i32* %bOrPre2, align 4, !dbg !2356
  %cmp85 = icmp ne i32 %74, %75, !dbg !2357
  %76 = zext i1 %cmp85 to i64, !dbg !2355
  %cond87 = select i1 %cmp85, i32 1, i32 0, !dbg !2355
  store i32 %cond87, i32* %bDiff, align 4, !dbg !2354
  %77 = load i32, i32* %bAnswer, align 4, !dbg !2358
  %78 = load i32, i32* %bDiff, align 4, !dbg !2359
  br label %if.end, !dbg !2360

if.end:                                           ; preds = %if.then72, %cond.end
  %79 = load i32, i32* %neigh_indexR, align 4, !dbg !2361
  %cmp88 = icmp sge i32 %79, 0, !dbg !2363
  br i1 %cmp88, label %if.then90, label %if.end110, !dbg !2364

if.then90:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %bAnswer91, metadata !2365, metadata !DIExpression()), !dbg !2367
  %80 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !2368
  %81 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2369
  %82 = load i32, i32* %neigh_indexR, align 4, !dbg !2370
  %83 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2371
  %84 = load i32, i32* %f, align 4, !dbg !2372
  %idxprom92 = sext i32 %84 to i64, !dbg !2371
  %arrayidx93 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %83, i64 %idxprom92, !dbg !2371
  %AssignedGroup94 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx93, i32 0, i32 1, !dbg !2373
  %85 = load i32, i32* %i, align 4, !dbg !2374
  %idxprom95 = sext i32 %85 to i64, !dbg !2371
  %arrayidx96 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup94, i64 0, i64 %idxprom95, !dbg !2371
  %86 = load %struct.SGroup*, %struct.SGroup** %arrayidx96, align 8, !dbg !2371
  %call97 = call i32 @AssignRecur(i32* %80, %struct.STriInfo* %81, i32 %82, %struct.SGroup* %86), !dbg !2375
  store i32 %call97, i32* %bAnswer91, align 4, !dbg !2367
  call void @llvm.dbg.declare(metadata i32* %bOrPre298, metadata !2376, metadata !DIExpression()), !dbg !2377
  %87 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2378
  %88 = load i32, i32* %neigh_indexR, align 4, !dbg !2379
  %idxprom99 = sext i32 %88 to i64, !dbg !2378
  %arrayidx100 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %87, i64 %idxprom99, !dbg !2378
  %iFlag101 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx100, i32 0, i32 7, !dbg !2380
  %89 = load i32, i32* %iFlag101, align 4, !dbg !2380
  %and102 = and i32 %89, 8, !dbg !2381
  %cmp103 = icmp ne i32 %and102, 0, !dbg !2382
  %90 = zext i1 %cmp103 to i64, !dbg !2383
  %cond105 = select i1 %cmp103, i32 1, i32 0, !dbg !2383
  store i32 %cond105, i32* %bOrPre298, align 4, !dbg !2377
  call void @llvm.dbg.declare(metadata i32* %bDiff106, metadata !2384, metadata !DIExpression()), !dbg !2385
  %91 = load i32, i32* %bOrPre, align 4, !dbg !2386
  %92 = load i32, i32* %bOrPre298, align 4, !dbg !2387
  %cmp107 = icmp ne i32 %91, %92, !dbg !2388
  %93 = zext i1 %cmp107 to i64, !dbg !2386
  %cond109 = select i1 %cmp107, i32 1, i32 0, !dbg !2386
  store i32 %cond109, i32* %bDiff106, align 4, !dbg !2385
  %94 = load i32, i32* %bAnswer91, align 4, !dbg !2389
  %95 = load i32, i32* %bDiff106, align 4, !dbg !2390
  br label %if.end110, !dbg !2391

if.end110:                                        ; preds = %if.then90, %if.end
  %96 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2392
  %97 = load i32, i32* %f, align 4, !dbg !2393
  %idxprom111 = sext i32 %97 to i64, !dbg !2392
  %arrayidx112 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %96, i64 %idxprom111, !dbg !2392
  %AssignedGroup113 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx112, i32 0, i32 1, !dbg !2394
  %98 = load i32, i32* %i, align 4, !dbg !2395
  %idxprom114 = sext i32 %98 to i64, !dbg !2392
  %arrayidx115 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup113, i64 0, i64 %idxprom114, !dbg !2392
  %99 = load %struct.SGroup*, %struct.SGroup** %arrayidx115, align 8, !dbg !2392
  %iNrFaces116 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %99, i32 0, i32 0, !dbg !2396
  %100 = load i32, i32* %iNrFaces116, align 8, !dbg !2396
  %101 = load i32, i32* %iOffset, align 4, !dbg !2397
  %add117 = add nsw i32 %101, %100, !dbg !2397
  store i32 %add117, i32* %iOffset, align 4, !dbg !2397
  br label %if.end118, !dbg !2398

if.end118:                                        ; preds = %if.end110, %land.lhs.true, %for.body3
  br label %for.inc, !dbg !2399

for.inc:                                          ; preds = %if.end118
  %102 = load i32, i32* %i, align 4, !dbg !2400
  %inc119 = add nsw i32 %102, 1, !dbg !2400
  store i32 %inc119, i32* %i, align 4, !dbg !2400
  br label %for.cond1, !dbg !2401, !llvm.loop !2402

for.end:                                          ; preds = %for.cond1
  br label %for.inc120, !dbg !2404

for.inc120:                                       ; preds = %for.end
  %103 = load i32, i32* %f, align 4, !dbg !2405
  %inc121 = add nsw i32 %103, 1, !dbg !2405
  store i32 %inc121, i32* %f, align 4, !dbg !2405
  br label %for.cond, !dbg !2406, !llvm.loop !2407

for.end122:                                       ; preds = %for.cond
  %104 = load i32, i32* %iNrActiveGroups, align 4, !dbg !2409
  ret i32 %104, !dbg !2410
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @GenerateTSpaces(%struct.STSpace* %psTspace, %struct.STriInfo* %pTriInfos, %struct.SGroup* %pGroups, i32 %iNrActiveGroups, i32* %piTriListIn, float %fThresCos, %struct.SMikkTSpaceContext* %pContext) #2 !dbg !2411 {
entry:
  %retval = alloca i32, align 4
  %psTspace.addr = alloca %struct.STSpace*, align 8
  %pTriInfos.addr = alloca %struct.STriInfo*, align 8
  %pGroups.addr = alloca %struct.SGroup*, align 8
  %iNrActiveGroups.addr = alloca i32, align 4
  %piTriListIn.addr = alloca i32*, align 8
  %fThresCos.addr = alloca float, align 4
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %pSubGroupTspace = alloca %struct.STSpace*, align 8
  %pUniSubGroups = alloca %struct.SSubGroup*, align 8
  %pTmpMembers = alloca i32*, align 8
  %iMaxNrFaces = alloca i32, align 4
  %iUniqueTspaces = alloca i32, align 4
  %g = alloca i32, align 4
  %i = alloca i32, align 4
  %pGroup = alloca %struct.SGroup*, align 8
  %iUniqueSubGroups = alloca i32, align 4
  %s = alloca i32, align 4
  %f = alloca i32, align 4
  %index = alloca i32, align 4
  %iVertIndex = alloca i32, align 4
  %iOF_1 = alloca i32, align 4
  %iMembers = alloca i32, align 4
  %j = alloca i32, align 4
  %l = alloca i32, align 4
  %tmp_group = alloca %struct.SSubGroup, align 8
  %bFound = alloca i32, align 4
  %n = alloca %struct.SVec3, align 4
  %vOs = alloca %struct.SVec3, align 4
  %vOt = alloca %struct.SVec3, align 4
  %tmp = alloca %struct.SVec3, align 4
  %tmp76 = alloca { <2 x float>, float }, align 8
  %tmp77 = alloca %struct.SVec3, align 4
  %agg.tmp = alloca %struct.SVec3, align 4
  %n.coerce = alloca { <2 x float>, float }, align 4
  %vOs83.coerce = alloca { <2 x float>, float }, align 8
  %n.coerce85 = alloca { <2 x float>, float }, align 4
  %tmp87 = alloca { <2 x float>, float }, align 8
  %vOs80.coerce = alloca { <2 x float>, float }, align 8
  %agg.tmp.coerce = alloca { <2 x float>, float }, align 4
  %tmp89 = alloca { <2 x float>, float }, align 8
  %tmp90 = alloca %struct.SVec3, align 4
  %agg.tmp94 = alloca %struct.SVec3, align 4
  %n.coerce98 = alloca { <2 x float>, float }, align 4
  %vOt97.coerce = alloca { <2 x float>, float }, align 4
  %n.coerce100 = alloca { <2 x float>, float }, align 4
  %tmp102 = alloca { <2 x float>, float }, align 8
  %vOt93.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp94.coerce = alloca { <2 x float>, float }, align 4
  %tmp104 = alloca { <2 x float>, float }, align 8
  %vOs.coerce = alloca { <2 x float>, float }, align 4
  %tmp107 = alloca %struct.SVec3, align 4
  %vOs.coerce108 = alloca { <2 x float>, float }, align 4
  %tmp110 = alloca { <2 x float>, float }, align 8
  %vOt.coerce = alloca { <2 x float>, float }, align 4
  %tmp115 = alloca %struct.SVec3, align 4
  %vOt.coerce116 = alloca { <2 x float>, float }, align 4
  %tmp118 = alloca { <2 x float>, float }, align 8
  %t = alloca i32, align 4
  %iOF_2 = alloca i32, align 4
  %vOs2 = alloca %struct.SVec3, align 4
  %agg.tmp136 = alloca %struct.SVec3, align 4
  %n.coerce140 = alloca { <2 x float>, float }, align 4
  %vOs139.coerce = alloca { <2 x float>, float }, align 8
  %n.coerce142 = alloca { <2 x float>, float }, align 4
  %tmp144 = alloca { <2 x float>, float }, align 8
  %vOs135.coerce = alloca { <2 x float>, float }, align 8
  %agg.tmp136.coerce = alloca { <2 x float>, float }, align 4
  %tmp146 = alloca { <2 x float>, float }, align 8
  %vOt2 = alloca %struct.SVec3, align 4
  %agg.tmp150 = alloca %struct.SVec3, align 4
  %n.coerce154 = alloca { <2 x float>, float }, align 4
  %vOt153.coerce = alloca { <2 x float>, float }, align 4
  %n.coerce156 = alloca { <2 x float>, float }, align 4
  %tmp158 = alloca { <2 x float>, float }, align 8
  %vOt149.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp150.coerce = alloca { <2 x float>, float }, align 4
  %tmp160 = alloca { <2 x float>, float }, align 8
  %vOs2.coerce = alloca { <2 x float>, float }, align 4
  %tmp164 = alloca %struct.SVec3, align 4
  %vOs2.coerce165 = alloca { <2 x float>, float }, align 4
  %tmp167 = alloca { <2 x float>, float }, align 8
  %vOt2.coerce = alloca { <2 x float>, float }, align 4
  %tmp172 = alloca %struct.SVec3, align 4
  %vOt2.coerce173 = alloca { <2 x float>, float }, align 4
  %tmp175 = alloca { <2 x float>, float }, align 8
  %bAny = alloca i32, align 4
  %bSameOrgFace = alloca i32, align 4
  %fCosS = alloca float, align 4
  %vOs.coerce187 = alloca { <2 x float>, float }, align 4
  %vOs2.coerce188 = alloca { <2 x float>, float }, align 4
  %fCosT = alloca float, align 4
  %vOt.coerce190 = alloca { <2 x float>, float }, align 4
  %vOt2.coerce191 = alloca { <2 x float>, float }, align 4
  %uSeed = alloca i32, align 4
  %pIndices = alloca i32*, align 8
  %s232 = alloca i32, align 4
  %tmp255 = alloca %struct.STSpace, align 4
  %iOffs = alloca i32, align 4
  %iVert = alloca i32, align 4
  %pTS_out = alloca %struct.STSpace*, align 8
  %tmp272 = alloca %struct.STSpace, align 4
  store %struct.STSpace* %psTspace, %struct.STSpace** %psTspace.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STSpace** %psTspace.addr, metadata !2417, metadata !DIExpression()), !dbg !2418
  store %struct.STriInfo* %pTriInfos, %struct.STriInfo** %pTriInfos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pTriInfos.addr, metadata !2419, metadata !DIExpression()), !dbg !2420
  store %struct.SGroup* %pGroups, %struct.SGroup** %pGroups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SGroup** %pGroups.addr, metadata !2421, metadata !DIExpression()), !dbg !2422
  store i32 %iNrActiveGroups, i32* %iNrActiveGroups.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iNrActiveGroups.addr, metadata !2423, metadata !DIExpression()), !dbg !2424
  store i32* %piTriListIn, i32** %piTriListIn.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriListIn.addr, metadata !2425, metadata !DIExpression()), !dbg !2426
  store float %fThresCos, float* %fThresCos.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fThresCos.addr, metadata !2427, metadata !DIExpression()), !dbg !2428
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !2429, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.declare(metadata %struct.STSpace** %pSubGroupTspace, metadata !2431, metadata !DIExpression()), !dbg !2432
  store %struct.STSpace* null, %struct.STSpace** %pSubGroupTspace, align 8, !dbg !2432
  call void @llvm.dbg.declare(metadata %struct.SSubGroup** %pUniSubGroups, metadata !2433, metadata !DIExpression()), !dbg !2434
  store %struct.SSubGroup* null, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2434
  call void @llvm.dbg.declare(metadata i32** %pTmpMembers, metadata !2435, metadata !DIExpression()), !dbg !2436
  store i32* null, i32** %pTmpMembers, align 8, !dbg !2436
  call void @llvm.dbg.declare(metadata i32* %iMaxNrFaces, metadata !2437, metadata !DIExpression()), !dbg !2438
  store i32 0, i32* %iMaxNrFaces, align 4, !dbg !2438
  call void @llvm.dbg.declare(metadata i32* %iUniqueTspaces, metadata !2439, metadata !DIExpression()), !dbg !2440
  store i32 0, i32* %iUniqueTspaces, align 4, !dbg !2440
  call void @llvm.dbg.declare(metadata i32* %g, metadata !2441, metadata !DIExpression()), !dbg !2442
  store i32 0, i32* %g, align 4, !dbg !2442
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2443, metadata !DIExpression()), !dbg !2444
  store i32 0, i32* %i, align 4, !dbg !2444
  store i32 0, i32* %g, align 4, !dbg !2445
  br label %for.cond, !dbg !2447

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %g, align 4, !dbg !2448
  %1 = load i32, i32* %iNrActiveGroups.addr, align 4, !dbg !2450
  %cmp = icmp slt i32 %0, %1, !dbg !2451
  br i1 %cmp, label %for.body, label %for.end, !dbg !2452

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %iMaxNrFaces, align 4, !dbg !2453
  %3 = load %struct.SGroup*, %struct.SGroup** %pGroups.addr, align 8, !dbg !2455
  %4 = load i32, i32* %g, align 4, !dbg !2456
  %idxprom = sext i32 %4 to i64, !dbg !2455
  %arrayidx = getelementptr inbounds %struct.SGroup, %struct.SGroup* %3, i64 %idxprom, !dbg !2455
  %iNrFaces = getelementptr inbounds %struct.SGroup, %struct.SGroup* %arrayidx, i32 0, i32 0, !dbg !2457
  %5 = load i32, i32* %iNrFaces, align 8, !dbg !2457
  %cmp1 = icmp slt i32 %2, %5, !dbg !2458
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2459

if.then:                                          ; preds = %for.body
  %6 = load %struct.SGroup*, %struct.SGroup** %pGroups.addr, align 8, !dbg !2460
  %7 = load i32, i32* %g, align 4, !dbg !2461
  %idxprom2 = sext i32 %7 to i64, !dbg !2460
  %arrayidx3 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %6, i64 %idxprom2, !dbg !2460
  %iNrFaces4 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %arrayidx3, i32 0, i32 0, !dbg !2462
  %8 = load i32, i32* %iNrFaces4, align 8, !dbg !2462
  store i32 %8, i32* %iMaxNrFaces, align 4, !dbg !2463
  br label %if.end, !dbg !2464

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !2457

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %g, align 4, !dbg !2465
  %inc = add nsw i32 %9, 1, !dbg !2465
  store i32 %inc, i32* %g, align 4, !dbg !2465
  br label %for.cond, !dbg !2466, !llvm.loop !2467

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %iMaxNrFaces, align 4, !dbg !2469
  %cmp5 = icmp eq i32 %10, 0, !dbg !2471
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2472

if.then6:                                         ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !2473
  br label %return, !dbg !2473

if.end7:                                          ; preds = %for.end
  %11 = load i32, i32* %iMaxNrFaces, align 4, !dbg !2474
  %conv = sext i32 %11 to i64, !dbg !2474
  %mul = mul i64 40, %conv, !dbg !2475
  %call = call noalias i8* @malloc(i64 %mul) #5, !dbg !2476
  %12 = bitcast i8* %call to %struct.STSpace*, !dbg !2477
  store %struct.STSpace* %12, %struct.STSpace** %pSubGroupTspace, align 8, !dbg !2478
  %13 = load i32, i32* %iMaxNrFaces, align 4, !dbg !2479
  %conv8 = sext i32 %13 to i64, !dbg !2479
  %mul9 = mul i64 16, %conv8, !dbg !2480
  %call10 = call noalias i8* @malloc(i64 %mul9) #5, !dbg !2481
  %14 = bitcast i8* %call10 to %struct.SSubGroup*, !dbg !2482
  store %struct.SSubGroup* %14, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2483
  %15 = load i32, i32* %iMaxNrFaces, align 4, !dbg !2484
  %conv11 = sext i32 %15 to i64, !dbg !2484
  %mul12 = mul i64 4, %conv11, !dbg !2485
  %call13 = call noalias i8* @malloc(i64 %mul12) #5, !dbg !2486
  %16 = bitcast i8* %call13 to i32*, !dbg !2487
  store i32* %16, i32** %pTmpMembers, align 8, !dbg !2488
  %17 = load %struct.STSpace*, %struct.STSpace** %pSubGroupTspace, align 8, !dbg !2489
  %cmp14 = icmp eq %struct.STSpace* %17, null, !dbg !2491
  br i1 %cmp14, label %if.then21, label %lor.lhs.false, !dbg !2492

lor.lhs.false:                                    ; preds = %if.end7
  %18 = load %struct.SSubGroup*, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2493
  %cmp16 = icmp eq %struct.SSubGroup* %18, null, !dbg !2494
  br i1 %cmp16, label %if.then21, label %lor.lhs.false18, !dbg !2495

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %19 = load i32*, i32** %pTmpMembers, align 8, !dbg !2496
  %cmp19 = icmp eq i32* %19, null, !dbg !2497
  br i1 %cmp19, label %if.then21, label %if.end34, !dbg !2498

if.then21:                                        ; preds = %lor.lhs.false18, %lor.lhs.false, %if.end7
  %20 = load %struct.STSpace*, %struct.STSpace** %pSubGroupTspace, align 8, !dbg !2499
  %cmp22 = icmp ne %struct.STSpace* %20, null, !dbg !2502
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !2503

if.then24:                                        ; preds = %if.then21
  %21 = load %struct.STSpace*, %struct.STSpace** %pSubGroupTspace, align 8, !dbg !2504
  %22 = bitcast %struct.STSpace* %21 to i8*, !dbg !2504
  call void @free(i8* %22) #5, !dbg !2505
  br label %if.end25, !dbg !2505

if.end25:                                         ; preds = %if.then24, %if.then21
  %23 = load %struct.SSubGroup*, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2506
  %cmp26 = icmp ne %struct.SSubGroup* %23, null, !dbg !2508
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !2509

if.then28:                                        ; preds = %if.end25
  %24 = load %struct.SSubGroup*, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2510
  %25 = bitcast %struct.SSubGroup* %24 to i8*, !dbg !2510
  call void @free(i8* %25) #5, !dbg !2511
  br label %if.end29, !dbg !2511

if.end29:                                         ; preds = %if.then28, %if.end25
  %26 = load i32*, i32** %pTmpMembers, align 8, !dbg !2512
  %cmp30 = icmp ne i32* %26, null, !dbg !2514
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !2515

if.then32:                                        ; preds = %if.end29
  %27 = load i32*, i32** %pTmpMembers, align 8, !dbg !2516
  %28 = bitcast i32* %27 to i8*, !dbg !2516
  call void @free(i8* %28) #5, !dbg !2517
  br label %if.end33, !dbg !2517

if.end33:                                         ; preds = %if.then32, %if.end29
  store i32 0, i32* %retval, align 4, !dbg !2518
  br label %return, !dbg !2518

if.end34:                                         ; preds = %lor.lhs.false18
  store i32 0, i32* %iUniqueTspaces, align 4, !dbg !2519
  store i32 0, i32* %g, align 4, !dbg !2520
  br label %for.cond35, !dbg !2522

for.cond35:                                       ; preds = %for.inc297, %if.end34
  %29 = load i32, i32* %g, align 4, !dbg !2523
  %30 = load i32, i32* %iNrActiveGroups.addr, align 4, !dbg !2525
  %cmp36 = icmp slt i32 %29, %30, !dbg !2526
  br i1 %cmp36, label %for.body38, label %for.end299, !dbg !2527

for.body38:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata %struct.SGroup** %pGroup, metadata !2528, metadata !DIExpression()), !dbg !2530
  %31 = load %struct.SGroup*, %struct.SGroup** %pGroups.addr, align 8, !dbg !2531
  %32 = load i32, i32* %g, align 4, !dbg !2532
  %idxprom39 = sext i32 %32 to i64, !dbg !2531
  %arrayidx40 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %31, i64 %idxprom39, !dbg !2531
  store %struct.SGroup* %arrayidx40, %struct.SGroup** %pGroup, align 8, !dbg !2530
  call void @llvm.dbg.declare(metadata i32* %iUniqueSubGroups, metadata !2533, metadata !DIExpression()), !dbg !2534
  store i32 0, i32* %iUniqueSubGroups, align 4, !dbg !2534
  call void @llvm.dbg.declare(metadata i32* %s, metadata !2535, metadata !DIExpression()), !dbg !2536
  store i32 0, i32* %s, align 4, !dbg !2536
  store i32 0, i32* %i, align 4, !dbg !2537
  br label %for.cond41, !dbg !2539

for.cond41:                                       ; preds = %for.inc283, %for.body38
  %33 = load i32, i32* %i, align 4, !dbg !2540
  %34 = load %struct.SGroup*, %struct.SGroup** %pGroup, align 8, !dbg !2542
  %iNrFaces42 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %34, i32 0, i32 0, !dbg !2543
  %35 = load i32, i32* %iNrFaces42, align 8, !dbg !2543
  %cmp43 = icmp slt i32 %33, %35, !dbg !2544
  br i1 %cmp43, label %for.body45, label %for.end285, !dbg !2545

for.body45:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata i32* %f, metadata !2546, metadata !DIExpression()), !dbg !2548
  %36 = load %struct.SGroup*, %struct.SGroup** %pGroup, align 8, !dbg !2549
  %pFaceIndices = getelementptr inbounds %struct.SGroup, %struct.SGroup* %36, i32 0, i32 1, !dbg !2550
  %37 = load i32*, i32** %pFaceIndices, align 8, !dbg !2550
  %38 = load i32, i32* %i, align 4, !dbg !2551
  %idxprom46 = sext i32 %38 to i64, !dbg !2549
  %arrayidx47 = getelementptr inbounds i32, i32* %37, i64 %idxprom46, !dbg !2549
  %39 = load i32, i32* %arrayidx47, align 4, !dbg !2549
  store i32 %39, i32* %f, align 4, !dbg !2548
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2552, metadata !DIExpression()), !dbg !2553
  store i32 -1, i32* %index, align 4, !dbg !2553
  call void @llvm.dbg.declare(metadata i32* %iVertIndex, metadata !2554, metadata !DIExpression()), !dbg !2555
  store i32 -1, i32* %iVertIndex, align 4, !dbg !2555
  call void @llvm.dbg.declare(metadata i32* %iOF_1, metadata !2556, metadata !DIExpression()), !dbg !2557
  store i32 -1, i32* %iOF_1, align 4, !dbg !2557
  call void @llvm.dbg.declare(metadata i32* %iMembers, metadata !2558, metadata !DIExpression()), !dbg !2559
  store i32 0, i32* %iMembers, align 4, !dbg !2559
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2560, metadata !DIExpression()), !dbg !2561
  store i32 0, i32* %j, align 4, !dbg !2561
  call void @llvm.dbg.declare(metadata i32* %l, metadata !2562, metadata !DIExpression()), !dbg !2563
  store i32 0, i32* %l, align 4, !dbg !2563
  call void @llvm.dbg.declare(metadata %struct.SSubGroup* %tmp_group, metadata !2564, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.declare(metadata i32* %bFound, metadata !2566, metadata !DIExpression()), !dbg !2567
  call void @llvm.dbg.declare(metadata %struct.SVec3* %n, metadata !2568, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vOs, metadata !2570, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vOt, metadata !2572, metadata !DIExpression()), !dbg !2573
  %40 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2574
  %41 = load i32, i32* %f, align 4, !dbg !2576
  %idxprom48 = sext i32 %41 to i64, !dbg !2574
  %arrayidx49 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %40, i64 %idxprom48, !dbg !2574
  %AssignedGroup = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx49, i32 0, i32 1, !dbg !2577
  %arrayidx50 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup, i64 0, i64 0, !dbg !2574
  %42 = load %struct.SGroup*, %struct.SGroup** %arrayidx50, align 8, !dbg !2574
  %43 = load %struct.SGroup*, %struct.SGroup** %pGroup, align 8, !dbg !2578
  %cmp51 = icmp eq %struct.SGroup* %42, %43, !dbg !2579
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !2580

if.then53:                                        ; preds = %for.body45
  store i32 0, i32* %index, align 4, !dbg !2581
  br label %if.end71, !dbg !2582

if.else:                                          ; preds = %for.body45
  %44 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2583
  %45 = load i32, i32* %f, align 4, !dbg !2585
  %idxprom54 = sext i32 %45 to i64, !dbg !2583
  %arrayidx55 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %44, i64 %idxprom54, !dbg !2583
  %AssignedGroup56 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx55, i32 0, i32 1, !dbg !2586
  %arrayidx57 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup56, i64 0, i64 1, !dbg !2583
  %46 = load %struct.SGroup*, %struct.SGroup** %arrayidx57, align 8, !dbg !2583
  %47 = load %struct.SGroup*, %struct.SGroup** %pGroup, align 8, !dbg !2587
  %cmp58 = icmp eq %struct.SGroup* %46, %47, !dbg !2588
  br i1 %cmp58, label %if.then60, label %if.else61, !dbg !2589

if.then60:                                        ; preds = %if.else
  store i32 1, i32* %index, align 4, !dbg !2590
  br label %if.end70, !dbg !2591

if.else61:                                        ; preds = %if.else
  %48 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2592
  %49 = load i32, i32* %f, align 4, !dbg !2594
  %idxprom62 = sext i32 %49 to i64, !dbg !2592
  %arrayidx63 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %48, i64 %idxprom62, !dbg !2592
  %AssignedGroup64 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx63, i32 0, i32 1, !dbg !2595
  %arrayidx65 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup64, i64 0, i64 2, !dbg !2592
  %50 = load %struct.SGroup*, %struct.SGroup** %arrayidx65, align 8, !dbg !2592
  %51 = load %struct.SGroup*, %struct.SGroup** %pGroup, align 8, !dbg !2596
  %cmp66 = icmp eq %struct.SGroup* %50, %51, !dbg !2597
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !2598

if.then68:                                        ; preds = %if.else61
  store i32 2, i32* %index, align 4, !dbg !2599
  br label %if.end69, !dbg !2600

if.end69:                                         ; preds = %if.then68, %if.else61
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then60
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then53
  %52 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !2601
  %53 = load i32, i32* %f, align 4, !dbg !2602
  %mul72 = mul nsw i32 %53, 3, !dbg !2603
  %54 = load i32, i32* %index, align 4, !dbg !2604
  %add = add nsw i32 %mul72, %54, !dbg !2605
  %idxprom73 = sext i32 %add to i64, !dbg !2601
  %arrayidx74 = getelementptr inbounds i32, i32* %52, i64 %idxprom73, !dbg !2601
  %55 = load i32, i32* %arrayidx74, align 4, !dbg !2601
  store i32 %55, i32* %iVertIndex, align 4, !dbg !2606
  %56 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !2607
  %57 = load i32, i32* %iVertIndex, align 4, !dbg !2608
  %call75 = call { <2 x float>, float } @GetNormal(%struct.SMikkTSpaceContext* %56, i32 %57), !dbg !2609
  store { <2 x float>, float } %call75, { <2 x float>, float }* %tmp76, align 8, !dbg !2609
  %58 = bitcast { <2 x float>, float }* %tmp76 to i8*, !dbg !2609
  %59 = bitcast %struct.SVec3* %tmp to i8*, !dbg !2609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 8 %58, i64 12, i1 false), !dbg !2609
  %60 = bitcast %struct.SVec3* %n to i8*, !dbg !2609
  %61 = bitcast %struct.SVec3* %tmp to i8*, !dbg !2609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 12, i1 false), !dbg !2609
  %62 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2610
  %63 = load i32, i32* %f, align 4, !dbg !2611
  %idxprom78 = sext i32 %63 to i64, !dbg !2610
  %arrayidx79 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %62, i64 %idxprom78, !dbg !2610
  %vOs80 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx79, i32 0, i32 2, !dbg !2612
  %64 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2613
  %65 = load i32, i32* %f, align 4, !dbg !2614
  %idxprom81 = sext i32 %65 to i64, !dbg !2613
  %arrayidx82 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %64, i64 %idxprom81, !dbg !2613
  %vOs83 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx82, i32 0, i32 2, !dbg !2615
  %66 = bitcast { <2 x float>, float }* %n.coerce to i8*, !dbg !2616
  %67 = bitcast %struct.SVec3* %n to i8*, !dbg !2616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 12, i1 false), !dbg !2616
  %68 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce, i32 0, i32 0, !dbg !2616
  %69 = load <2 x float>, <2 x float>* %68, align 4, !dbg !2616
  %70 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce, i32 0, i32 1, !dbg !2616
  %71 = load float, float* %70, align 4, !dbg !2616
  %72 = bitcast { <2 x float>, float }* %vOs83.coerce to i8*, !dbg !2616
  %73 = bitcast %struct.SVec3* %vOs83 to i8*, !dbg !2616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 12, i1 false), !dbg !2616
  %74 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs83.coerce, i32 0, i32 0, !dbg !2616
  %75 = load <2 x float>, <2 x float>* %74, align 8, !dbg !2616
  %76 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs83.coerce, i32 0, i32 1, !dbg !2616
  %77 = load float, float* %76, align 8, !dbg !2616
  %call84 = call float @vdot(<2 x float> %69, float %71, <2 x float> %75, float %77), !dbg !2616
  %78 = bitcast { <2 x float>, float }* %n.coerce85 to i8*, !dbg !2617
  %79 = bitcast %struct.SVec3* %n to i8*, !dbg !2617
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 12, i1 false), !dbg !2617
  %80 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce85, i32 0, i32 0, !dbg !2617
  %81 = load <2 x float>, <2 x float>* %80, align 4, !dbg !2617
  %82 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce85, i32 0, i32 1, !dbg !2617
  %83 = load float, float* %82, align 4, !dbg !2617
  %call86 = call { <2 x float>, float } @vscale(float %call84, <2 x float> %81, float %83), !dbg !2617
  store { <2 x float>, float } %call86, { <2 x float>, float }* %tmp87, align 8, !dbg !2617
  %84 = bitcast { <2 x float>, float }* %tmp87 to i8*, !dbg !2617
  %85 = bitcast %struct.SVec3* %agg.tmp to i8*, !dbg !2617
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 8 %84, i64 12, i1 false), !dbg !2617
  %86 = bitcast { <2 x float>, float }* %vOs80.coerce to i8*, !dbg !2618
  %87 = bitcast %struct.SVec3* %vOs80 to i8*, !dbg !2618
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 12, i1 false), !dbg !2618
  %88 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs80.coerce, i32 0, i32 0, !dbg !2618
  %89 = load <2 x float>, <2 x float>* %88, align 8, !dbg !2618
  %90 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs80.coerce, i32 0, i32 1, !dbg !2618
  %91 = load float, float* %90, align 8, !dbg !2618
  %92 = bitcast { <2 x float>, float }* %agg.tmp.coerce to i8*, !dbg !2618
  %93 = bitcast %struct.SVec3* %agg.tmp to i8*, !dbg !2618
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 12, i1 false), !dbg !2618
  %94 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 0, !dbg !2618
  %95 = load <2 x float>, <2 x float>* %94, align 4, !dbg !2618
  %96 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 1, !dbg !2618
  %97 = load float, float* %96, align 4, !dbg !2618
  %call88 = call { <2 x float>, float } @vsub(<2 x float> %89, float %91, <2 x float> %95, float %97), !dbg !2618
  store { <2 x float>, float } %call88, { <2 x float>, float }* %tmp89, align 8, !dbg !2618
  %98 = bitcast { <2 x float>, float }* %tmp89 to i8*, !dbg !2618
  %99 = bitcast %struct.SVec3* %tmp77 to i8*, !dbg !2618
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 8 %98, i64 12, i1 false), !dbg !2618
  %100 = bitcast %struct.SVec3* %vOs to i8*, !dbg !2618
  %101 = bitcast %struct.SVec3* %tmp77 to i8*, !dbg !2618
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* align 4 %101, i64 12, i1 false), !dbg !2618
  %102 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2619
  %103 = load i32, i32* %f, align 4, !dbg !2620
  %idxprom91 = sext i32 %103 to i64, !dbg !2619
  %arrayidx92 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %102, i64 %idxprom91, !dbg !2619
  %vOt93 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx92, i32 0, i32 3, !dbg !2621
  %104 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2622
  %105 = load i32, i32* %f, align 4, !dbg !2623
  %idxprom95 = sext i32 %105 to i64, !dbg !2622
  %arrayidx96 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %104, i64 %idxprom95, !dbg !2622
  %vOt97 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx96, i32 0, i32 3, !dbg !2624
  %106 = bitcast { <2 x float>, float }* %n.coerce98 to i8*, !dbg !2625
  %107 = bitcast %struct.SVec3* %n to i8*, !dbg !2625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 12, i1 false), !dbg !2625
  %108 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce98, i32 0, i32 0, !dbg !2625
  %109 = load <2 x float>, <2 x float>* %108, align 4, !dbg !2625
  %110 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce98, i32 0, i32 1, !dbg !2625
  %111 = load float, float* %110, align 4, !dbg !2625
  %112 = bitcast { <2 x float>, float }* %vOt97.coerce to i8*, !dbg !2625
  %113 = bitcast %struct.SVec3* %vOt97 to i8*, !dbg !2625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 12, i1 false), !dbg !2625
  %114 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt97.coerce, i32 0, i32 0, !dbg !2625
  %115 = load <2 x float>, <2 x float>* %114, align 4, !dbg !2625
  %116 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt97.coerce, i32 0, i32 1, !dbg !2625
  %117 = load float, float* %116, align 4, !dbg !2625
  %call99 = call float @vdot(<2 x float> %109, float %111, <2 x float> %115, float %117), !dbg !2625
  %118 = bitcast { <2 x float>, float }* %n.coerce100 to i8*, !dbg !2626
  %119 = bitcast %struct.SVec3* %n to i8*, !dbg !2626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %119, i64 12, i1 false), !dbg !2626
  %120 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce100, i32 0, i32 0, !dbg !2626
  %121 = load <2 x float>, <2 x float>* %120, align 4, !dbg !2626
  %122 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce100, i32 0, i32 1, !dbg !2626
  %123 = load float, float* %122, align 4, !dbg !2626
  %call101 = call { <2 x float>, float } @vscale(float %call99, <2 x float> %121, float %123), !dbg !2626
  store { <2 x float>, float } %call101, { <2 x float>, float }* %tmp102, align 8, !dbg !2626
  %124 = bitcast { <2 x float>, float }* %tmp102 to i8*, !dbg !2626
  %125 = bitcast %struct.SVec3* %agg.tmp94 to i8*, !dbg !2626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* align 8 %124, i64 12, i1 false), !dbg !2626
  %126 = bitcast { <2 x float>, float }* %vOt93.coerce to i8*, !dbg !2627
  %127 = bitcast %struct.SVec3* %vOt93 to i8*, !dbg !2627
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %127, i64 12, i1 false), !dbg !2627
  %128 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt93.coerce, i32 0, i32 0, !dbg !2627
  %129 = load <2 x float>, <2 x float>* %128, align 4, !dbg !2627
  %130 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt93.coerce, i32 0, i32 1, !dbg !2627
  %131 = load float, float* %130, align 4, !dbg !2627
  %132 = bitcast { <2 x float>, float }* %agg.tmp94.coerce to i8*, !dbg !2627
  %133 = bitcast %struct.SVec3* %agg.tmp94 to i8*, !dbg !2627
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 4 %133, i64 12, i1 false), !dbg !2627
  %134 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp94.coerce, i32 0, i32 0, !dbg !2627
  %135 = load <2 x float>, <2 x float>* %134, align 4, !dbg !2627
  %136 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp94.coerce, i32 0, i32 1, !dbg !2627
  %137 = load float, float* %136, align 4, !dbg !2627
  %call103 = call { <2 x float>, float } @vsub(<2 x float> %129, float %131, <2 x float> %135, float %137), !dbg !2627
  store { <2 x float>, float } %call103, { <2 x float>, float }* %tmp104, align 8, !dbg !2627
  %138 = bitcast { <2 x float>, float }* %tmp104 to i8*, !dbg !2627
  %139 = bitcast %struct.SVec3* %tmp90 to i8*, !dbg !2627
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 8 %138, i64 12, i1 false), !dbg !2627
  %140 = bitcast %struct.SVec3* %vOt to i8*, !dbg !2627
  %141 = bitcast %struct.SVec3* %tmp90 to i8*, !dbg !2627
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %141, i64 12, i1 false), !dbg !2627
  %142 = bitcast { <2 x float>, float }* %vOs.coerce to i8*, !dbg !2628
  %143 = bitcast %struct.SVec3* %vOs to i8*, !dbg !2628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %142, i8* align 4 %143, i64 12, i1 false), !dbg !2628
  %144 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs.coerce, i32 0, i32 0, !dbg !2628
  %145 = load <2 x float>, <2 x float>* %144, align 4, !dbg !2628
  %146 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs.coerce, i32 0, i32 1, !dbg !2628
  %147 = load float, float* %146, align 4, !dbg !2628
  %call105 = call i32 @VNotZero(<2 x float> %145, float %147), !dbg !2628
  %tobool = icmp ne i32 %call105, 0, !dbg !2628
  br i1 %tobool, label %if.then106, label %if.end111, !dbg !2630

if.then106:                                       ; preds = %if.end71
  %148 = bitcast { <2 x float>, float }* %vOs.coerce108 to i8*, !dbg !2631
  %149 = bitcast %struct.SVec3* %vOs to i8*, !dbg !2631
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 12, i1 false), !dbg !2631
  %150 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs.coerce108, i32 0, i32 0, !dbg !2631
  %151 = load <2 x float>, <2 x float>* %150, align 4, !dbg !2631
  %152 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs.coerce108, i32 0, i32 1, !dbg !2631
  %153 = load float, float* %152, align 4, !dbg !2631
  %call109 = call { <2 x float>, float } @Normalize(<2 x float> %151, float %153), !dbg !2631
  store { <2 x float>, float } %call109, { <2 x float>, float }* %tmp110, align 8, !dbg !2631
  %154 = bitcast { <2 x float>, float }* %tmp110 to i8*, !dbg !2631
  %155 = bitcast %struct.SVec3* %tmp107 to i8*, !dbg !2631
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %155, i8* align 8 %154, i64 12, i1 false), !dbg !2631
  %156 = bitcast %struct.SVec3* %vOs to i8*, !dbg !2631
  %157 = bitcast %struct.SVec3* %tmp107 to i8*, !dbg !2631
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %156, i8* align 4 %157, i64 12, i1 false), !dbg !2631
  br label %if.end111, !dbg !2632

if.end111:                                        ; preds = %if.then106, %if.end71
  %158 = bitcast { <2 x float>, float }* %vOt.coerce to i8*, !dbg !2633
  %159 = bitcast %struct.SVec3* %vOt to i8*, !dbg !2633
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %158, i8* align 4 %159, i64 12, i1 false), !dbg !2633
  %160 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt.coerce, i32 0, i32 0, !dbg !2633
  %161 = load <2 x float>, <2 x float>* %160, align 4, !dbg !2633
  %162 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt.coerce, i32 0, i32 1, !dbg !2633
  %163 = load float, float* %162, align 4, !dbg !2633
  %call112 = call i32 @VNotZero(<2 x float> %161, float %163), !dbg !2633
  %tobool113 = icmp ne i32 %call112, 0, !dbg !2633
  br i1 %tobool113, label %if.then114, label %if.end119, !dbg !2635

if.then114:                                       ; preds = %if.end111
  %164 = bitcast { <2 x float>, float }* %vOt.coerce116 to i8*, !dbg !2636
  %165 = bitcast %struct.SVec3* %vOt to i8*, !dbg !2636
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %164, i8* align 4 %165, i64 12, i1 false), !dbg !2636
  %166 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt.coerce116, i32 0, i32 0, !dbg !2636
  %167 = load <2 x float>, <2 x float>* %166, align 4, !dbg !2636
  %168 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt.coerce116, i32 0, i32 1, !dbg !2636
  %169 = load float, float* %168, align 4, !dbg !2636
  %call117 = call { <2 x float>, float } @Normalize(<2 x float> %167, float %169), !dbg !2636
  store { <2 x float>, float } %call117, { <2 x float>, float }* %tmp118, align 8, !dbg !2636
  %170 = bitcast { <2 x float>, float }* %tmp118 to i8*, !dbg !2636
  %171 = bitcast %struct.SVec3* %tmp115 to i8*, !dbg !2636
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 8 %170, i64 12, i1 false), !dbg !2636
  %172 = bitcast %struct.SVec3* %vOt to i8*, !dbg !2636
  %173 = bitcast %struct.SVec3* %tmp115 to i8*, !dbg !2636
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %173, i64 12, i1 false), !dbg !2636
  br label %if.end119, !dbg !2637

if.end119:                                        ; preds = %if.then114, %if.end111
  %174 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2638
  %175 = load i32, i32* %f, align 4, !dbg !2639
  %idxprom120 = sext i32 %175 to i64, !dbg !2638
  %arrayidx121 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %174, i64 %idxprom120, !dbg !2638
  %iOrgFaceNumber = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx121, i32 0, i32 6, !dbg !2640
  %176 = load i32, i32* %iOrgFaceNumber, align 8, !dbg !2640
  store i32 %176, i32* %iOF_1, align 4, !dbg !2641
  store i32 0, i32* %iMembers, align 4, !dbg !2642
  store i32 0, i32* %j, align 4, !dbg !2643
  br label %for.cond122, !dbg !2645

for.cond122:                                      ; preds = %for.inc206, %if.end119
  %177 = load i32, i32* %j, align 4, !dbg !2646
  %178 = load %struct.SGroup*, %struct.SGroup** %pGroup, align 8, !dbg !2648
  %iNrFaces123 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %178, i32 0, i32 0, !dbg !2649
  %179 = load i32, i32* %iNrFaces123, align 8, !dbg !2649
  %cmp124 = icmp slt i32 %177, %179, !dbg !2650
  br i1 %cmp124, label %for.body126, label %for.end208, !dbg !2651

for.body126:                                      ; preds = %for.cond122
  call void @llvm.dbg.declare(metadata i32* %t, metadata !2652, metadata !DIExpression()), !dbg !2654
  %180 = load %struct.SGroup*, %struct.SGroup** %pGroup, align 8, !dbg !2655
  %pFaceIndices127 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %180, i32 0, i32 1, !dbg !2656
  %181 = load i32*, i32** %pFaceIndices127, align 8, !dbg !2656
  %182 = load i32, i32* %j, align 4, !dbg !2657
  %idxprom128 = sext i32 %182 to i64, !dbg !2655
  %arrayidx129 = getelementptr inbounds i32, i32* %181, i64 %idxprom128, !dbg !2655
  %183 = load i32, i32* %arrayidx129, align 4, !dbg !2655
  store i32 %183, i32* %t, align 4, !dbg !2654
  call void @llvm.dbg.declare(metadata i32* %iOF_2, metadata !2658, metadata !DIExpression()), !dbg !2659
  %184 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2660
  %185 = load i32, i32* %t, align 4, !dbg !2661
  %idxprom130 = sext i32 %185 to i64, !dbg !2660
  %arrayidx131 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %184, i64 %idxprom130, !dbg !2660
  %iOrgFaceNumber132 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx131, i32 0, i32 6, !dbg !2662
  %186 = load i32, i32* %iOrgFaceNumber132, align 8, !dbg !2662
  store i32 %186, i32* %iOF_2, align 4, !dbg !2659
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vOs2, metadata !2663, metadata !DIExpression()), !dbg !2664
  %187 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2665
  %188 = load i32, i32* %t, align 4, !dbg !2666
  %idxprom133 = sext i32 %188 to i64, !dbg !2665
  %arrayidx134 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %187, i64 %idxprom133, !dbg !2665
  %vOs135 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx134, i32 0, i32 2, !dbg !2667
  %189 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2668
  %190 = load i32, i32* %t, align 4, !dbg !2669
  %idxprom137 = sext i32 %190 to i64, !dbg !2668
  %arrayidx138 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %189, i64 %idxprom137, !dbg !2668
  %vOs139 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx138, i32 0, i32 2, !dbg !2670
  %191 = bitcast { <2 x float>, float }* %n.coerce140 to i8*, !dbg !2671
  %192 = bitcast %struct.SVec3* %n to i8*, !dbg !2671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %192, i64 12, i1 false), !dbg !2671
  %193 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce140, i32 0, i32 0, !dbg !2671
  %194 = load <2 x float>, <2 x float>* %193, align 4, !dbg !2671
  %195 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce140, i32 0, i32 1, !dbg !2671
  %196 = load float, float* %195, align 4, !dbg !2671
  %197 = bitcast { <2 x float>, float }* %vOs139.coerce to i8*, !dbg !2671
  %198 = bitcast %struct.SVec3* %vOs139 to i8*, !dbg !2671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %198, i64 12, i1 false), !dbg !2671
  %199 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs139.coerce, i32 0, i32 0, !dbg !2671
  %200 = load <2 x float>, <2 x float>* %199, align 8, !dbg !2671
  %201 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs139.coerce, i32 0, i32 1, !dbg !2671
  %202 = load float, float* %201, align 8, !dbg !2671
  %call141 = call float @vdot(<2 x float> %194, float %196, <2 x float> %200, float %202), !dbg !2671
  %203 = bitcast { <2 x float>, float }* %n.coerce142 to i8*, !dbg !2672
  %204 = bitcast %struct.SVec3* %n to i8*, !dbg !2672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %203, i8* align 4 %204, i64 12, i1 false), !dbg !2672
  %205 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce142, i32 0, i32 0, !dbg !2672
  %206 = load <2 x float>, <2 x float>* %205, align 4, !dbg !2672
  %207 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce142, i32 0, i32 1, !dbg !2672
  %208 = load float, float* %207, align 4, !dbg !2672
  %call143 = call { <2 x float>, float } @vscale(float %call141, <2 x float> %206, float %208), !dbg !2672
  store { <2 x float>, float } %call143, { <2 x float>, float }* %tmp144, align 8, !dbg !2672
  %209 = bitcast { <2 x float>, float }* %tmp144 to i8*, !dbg !2672
  %210 = bitcast %struct.SVec3* %agg.tmp136 to i8*, !dbg !2672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 8 %209, i64 12, i1 false), !dbg !2672
  %211 = bitcast { <2 x float>, float }* %vOs135.coerce to i8*, !dbg !2673
  %212 = bitcast %struct.SVec3* %vOs135 to i8*, !dbg !2673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 12, i1 false), !dbg !2673
  %213 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs135.coerce, i32 0, i32 0, !dbg !2673
  %214 = load <2 x float>, <2 x float>* %213, align 8, !dbg !2673
  %215 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs135.coerce, i32 0, i32 1, !dbg !2673
  %216 = load float, float* %215, align 8, !dbg !2673
  %217 = bitcast { <2 x float>, float }* %agg.tmp136.coerce to i8*, !dbg !2673
  %218 = bitcast %struct.SVec3* %agg.tmp136 to i8*, !dbg !2673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 12, i1 false), !dbg !2673
  %219 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp136.coerce, i32 0, i32 0, !dbg !2673
  %220 = load <2 x float>, <2 x float>* %219, align 4, !dbg !2673
  %221 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp136.coerce, i32 0, i32 1, !dbg !2673
  %222 = load float, float* %221, align 4, !dbg !2673
  %call145 = call { <2 x float>, float } @vsub(<2 x float> %214, float %216, <2 x float> %220, float %222), !dbg !2673
  store { <2 x float>, float } %call145, { <2 x float>, float }* %tmp146, align 8, !dbg !2673
  %223 = bitcast { <2 x float>, float }* %tmp146 to i8*, !dbg !2673
  %224 = bitcast %struct.SVec3* %vOs2 to i8*, !dbg !2673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %224, i8* align 8 %223, i64 12, i1 false), !dbg !2673
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vOt2, metadata !2674, metadata !DIExpression()), !dbg !2675
  %225 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2676
  %226 = load i32, i32* %t, align 4, !dbg !2677
  %idxprom147 = sext i32 %226 to i64, !dbg !2676
  %arrayidx148 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %225, i64 %idxprom147, !dbg !2676
  %vOt149 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx148, i32 0, i32 3, !dbg !2678
  %227 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2679
  %228 = load i32, i32* %t, align 4, !dbg !2680
  %idxprom151 = sext i32 %228 to i64, !dbg !2679
  %arrayidx152 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %227, i64 %idxprom151, !dbg !2679
  %vOt153 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx152, i32 0, i32 3, !dbg !2681
  %229 = bitcast { <2 x float>, float }* %n.coerce154 to i8*, !dbg !2682
  %230 = bitcast %struct.SVec3* %n to i8*, !dbg !2682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %229, i8* align 4 %230, i64 12, i1 false), !dbg !2682
  %231 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce154, i32 0, i32 0, !dbg !2682
  %232 = load <2 x float>, <2 x float>* %231, align 4, !dbg !2682
  %233 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce154, i32 0, i32 1, !dbg !2682
  %234 = load float, float* %233, align 4, !dbg !2682
  %235 = bitcast { <2 x float>, float }* %vOt153.coerce to i8*, !dbg !2682
  %236 = bitcast %struct.SVec3* %vOt153 to i8*, !dbg !2682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %235, i8* align 4 %236, i64 12, i1 false), !dbg !2682
  %237 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt153.coerce, i32 0, i32 0, !dbg !2682
  %238 = load <2 x float>, <2 x float>* %237, align 4, !dbg !2682
  %239 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt153.coerce, i32 0, i32 1, !dbg !2682
  %240 = load float, float* %239, align 4, !dbg !2682
  %call155 = call float @vdot(<2 x float> %232, float %234, <2 x float> %238, float %240), !dbg !2682
  %241 = bitcast { <2 x float>, float }* %n.coerce156 to i8*, !dbg !2683
  %242 = bitcast %struct.SVec3* %n to i8*, !dbg !2683
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %241, i8* align 4 %242, i64 12, i1 false), !dbg !2683
  %243 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce156, i32 0, i32 0, !dbg !2683
  %244 = load <2 x float>, <2 x float>* %243, align 4, !dbg !2683
  %245 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce156, i32 0, i32 1, !dbg !2683
  %246 = load float, float* %245, align 4, !dbg !2683
  %call157 = call { <2 x float>, float } @vscale(float %call155, <2 x float> %244, float %246), !dbg !2683
  store { <2 x float>, float } %call157, { <2 x float>, float }* %tmp158, align 8, !dbg !2683
  %247 = bitcast { <2 x float>, float }* %tmp158 to i8*, !dbg !2683
  %248 = bitcast %struct.SVec3* %agg.tmp150 to i8*, !dbg !2683
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %248, i8* align 8 %247, i64 12, i1 false), !dbg !2683
  %249 = bitcast { <2 x float>, float }* %vOt149.coerce to i8*, !dbg !2684
  %250 = bitcast %struct.SVec3* %vOt149 to i8*, !dbg !2684
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %249, i8* align 4 %250, i64 12, i1 false), !dbg !2684
  %251 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt149.coerce, i32 0, i32 0, !dbg !2684
  %252 = load <2 x float>, <2 x float>* %251, align 4, !dbg !2684
  %253 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt149.coerce, i32 0, i32 1, !dbg !2684
  %254 = load float, float* %253, align 4, !dbg !2684
  %255 = bitcast { <2 x float>, float }* %agg.tmp150.coerce to i8*, !dbg !2684
  %256 = bitcast %struct.SVec3* %agg.tmp150 to i8*, !dbg !2684
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %255, i8* align 4 %256, i64 12, i1 false), !dbg !2684
  %257 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp150.coerce, i32 0, i32 0, !dbg !2684
  %258 = load <2 x float>, <2 x float>* %257, align 4, !dbg !2684
  %259 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp150.coerce, i32 0, i32 1, !dbg !2684
  %260 = load float, float* %259, align 4, !dbg !2684
  %call159 = call { <2 x float>, float } @vsub(<2 x float> %252, float %254, <2 x float> %258, float %260), !dbg !2684
  store { <2 x float>, float } %call159, { <2 x float>, float }* %tmp160, align 8, !dbg !2684
  %261 = bitcast { <2 x float>, float }* %tmp160 to i8*, !dbg !2684
  %262 = bitcast %struct.SVec3* %vOt2 to i8*, !dbg !2684
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %262, i8* align 8 %261, i64 12, i1 false), !dbg !2684
  %263 = bitcast { <2 x float>, float }* %vOs2.coerce to i8*, !dbg !2685
  %264 = bitcast %struct.SVec3* %vOs2 to i8*, !dbg !2685
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %264, i64 12, i1 false), !dbg !2685
  %265 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs2.coerce, i32 0, i32 0, !dbg !2685
  %266 = load <2 x float>, <2 x float>* %265, align 4, !dbg !2685
  %267 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs2.coerce, i32 0, i32 1, !dbg !2685
  %268 = load float, float* %267, align 4, !dbg !2685
  %call161 = call i32 @VNotZero(<2 x float> %266, float %268), !dbg !2685
  %tobool162 = icmp ne i32 %call161, 0, !dbg !2685
  br i1 %tobool162, label %if.then163, label %if.end168, !dbg !2687

if.then163:                                       ; preds = %for.body126
  %269 = bitcast { <2 x float>, float }* %vOs2.coerce165 to i8*, !dbg !2688
  %270 = bitcast %struct.SVec3* %vOs2 to i8*, !dbg !2688
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %269, i8* align 4 %270, i64 12, i1 false), !dbg !2688
  %271 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs2.coerce165, i32 0, i32 0, !dbg !2688
  %272 = load <2 x float>, <2 x float>* %271, align 4, !dbg !2688
  %273 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs2.coerce165, i32 0, i32 1, !dbg !2688
  %274 = load float, float* %273, align 4, !dbg !2688
  %call166 = call { <2 x float>, float } @Normalize(<2 x float> %272, float %274), !dbg !2688
  store { <2 x float>, float } %call166, { <2 x float>, float }* %tmp167, align 8, !dbg !2688
  %275 = bitcast { <2 x float>, float }* %tmp167 to i8*, !dbg !2688
  %276 = bitcast %struct.SVec3* %tmp164 to i8*, !dbg !2688
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %276, i8* align 8 %275, i64 12, i1 false), !dbg !2688
  %277 = bitcast %struct.SVec3* %vOs2 to i8*, !dbg !2688
  %278 = bitcast %struct.SVec3* %tmp164 to i8*, !dbg !2688
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %277, i8* align 4 %278, i64 12, i1 false), !dbg !2688
  br label %if.end168, !dbg !2689

if.end168:                                        ; preds = %if.then163, %for.body126
  %279 = bitcast { <2 x float>, float }* %vOt2.coerce to i8*, !dbg !2690
  %280 = bitcast %struct.SVec3* %vOt2 to i8*, !dbg !2690
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %279, i8* align 4 %280, i64 12, i1 false), !dbg !2690
  %281 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt2.coerce, i32 0, i32 0, !dbg !2690
  %282 = load <2 x float>, <2 x float>* %281, align 4, !dbg !2690
  %283 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt2.coerce, i32 0, i32 1, !dbg !2690
  %284 = load float, float* %283, align 4, !dbg !2690
  %call169 = call i32 @VNotZero(<2 x float> %282, float %284), !dbg !2690
  %tobool170 = icmp ne i32 %call169, 0, !dbg !2690
  br i1 %tobool170, label %if.then171, label %if.end176, !dbg !2692

if.then171:                                       ; preds = %if.end168
  %285 = bitcast { <2 x float>, float }* %vOt2.coerce173 to i8*, !dbg !2693
  %286 = bitcast %struct.SVec3* %vOt2 to i8*, !dbg !2693
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %285, i8* align 4 %286, i64 12, i1 false), !dbg !2693
  %287 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt2.coerce173, i32 0, i32 0, !dbg !2693
  %288 = load <2 x float>, <2 x float>* %287, align 4, !dbg !2693
  %289 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt2.coerce173, i32 0, i32 1, !dbg !2693
  %290 = load float, float* %289, align 4, !dbg !2693
  %call174 = call { <2 x float>, float } @Normalize(<2 x float> %288, float %290), !dbg !2693
  store { <2 x float>, float } %call174, { <2 x float>, float }* %tmp175, align 8, !dbg !2693
  %291 = bitcast { <2 x float>, float }* %tmp175 to i8*, !dbg !2693
  %292 = bitcast %struct.SVec3* %tmp172 to i8*, !dbg !2693
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %292, i8* align 8 %291, i64 12, i1 false), !dbg !2693
  %293 = bitcast %struct.SVec3* %vOt2 to i8*, !dbg !2693
  %294 = bitcast %struct.SVec3* %tmp172 to i8*, !dbg !2693
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* align 4 %294, i64 12, i1 false), !dbg !2693
  br label %if.end176, !dbg !2694

if.end176:                                        ; preds = %if.then171, %if.end168
  call void @llvm.dbg.declare(metadata i32* %bAny, metadata !2695, metadata !DIExpression()), !dbg !2697
  %295 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2698
  %296 = load i32, i32* %f, align 4, !dbg !2699
  %idxprom177 = sext i32 %296 to i64, !dbg !2698
  %arrayidx178 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %295, i64 %idxprom177, !dbg !2698
  %iFlag = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx178, i32 0, i32 7, !dbg !2700
  %297 = load i32, i32* %iFlag, align 4, !dbg !2700
  %298 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2701
  %299 = load i32, i32* %t, align 4, !dbg !2702
  %idxprom179 = sext i32 %299 to i64, !dbg !2701
  %arrayidx180 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %298, i64 %idxprom179, !dbg !2701
  %iFlag181 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx180, i32 0, i32 7, !dbg !2703
  %300 = load i32, i32* %iFlag181, align 4, !dbg !2703
  %or = or i32 %297, %300, !dbg !2704
  %and = and i32 %or, 4, !dbg !2705
  %cmp182 = icmp ne i32 %and, 0, !dbg !2706
  %301 = zext i1 %cmp182 to i64, !dbg !2707
  %cond = select i1 %cmp182, i32 1, i32 0, !dbg !2707
  store i32 %cond, i32* %bAny, align 4, !dbg !2697
  call void @llvm.dbg.declare(metadata i32* %bSameOrgFace, metadata !2708, metadata !DIExpression()), !dbg !2709
  %302 = load i32, i32* %iOF_1, align 4, !dbg !2710
  %303 = load i32, i32* %iOF_2, align 4, !dbg !2711
  %cmp184 = icmp eq i32 %302, %303, !dbg !2712
  %304 = zext i1 %cmp184 to i64, !dbg !2710
  %cond186 = select i1 %cmp184, i32 1, i32 0, !dbg !2710
  store i32 %cond186, i32* %bSameOrgFace, align 4, !dbg !2709
  call void @llvm.dbg.declare(metadata float* %fCosS, metadata !2713, metadata !DIExpression()), !dbg !2714
  %305 = bitcast { <2 x float>, float }* %vOs.coerce187 to i8*, !dbg !2715
  %306 = bitcast %struct.SVec3* %vOs to i8*, !dbg !2715
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %305, i8* align 4 %306, i64 12, i1 false), !dbg !2715
  %307 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs.coerce187, i32 0, i32 0, !dbg !2715
  %308 = load <2 x float>, <2 x float>* %307, align 4, !dbg !2715
  %309 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs.coerce187, i32 0, i32 1, !dbg !2715
  %310 = load float, float* %309, align 4, !dbg !2715
  %311 = bitcast { <2 x float>, float }* %vOs2.coerce188 to i8*, !dbg !2715
  %312 = bitcast %struct.SVec3* %vOs2 to i8*, !dbg !2715
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %311, i8* align 4 %312, i64 12, i1 false), !dbg !2715
  %313 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs2.coerce188, i32 0, i32 0, !dbg !2715
  %314 = load <2 x float>, <2 x float>* %313, align 4, !dbg !2715
  %315 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs2.coerce188, i32 0, i32 1, !dbg !2715
  %316 = load float, float* %315, align 4, !dbg !2715
  %call189 = call float @vdot(<2 x float> %308, float %310, <2 x float> %314, float %316), !dbg !2715
  store float %call189, float* %fCosS, align 4, !dbg !2714
  call void @llvm.dbg.declare(metadata float* %fCosT, metadata !2716, metadata !DIExpression()), !dbg !2717
  %317 = bitcast { <2 x float>, float }* %vOt.coerce190 to i8*, !dbg !2718
  %318 = bitcast %struct.SVec3* %vOt to i8*, !dbg !2718
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %317, i8* align 4 %318, i64 12, i1 false), !dbg !2718
  %319 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt.coerce190, i32 0, i32 0, !dbg !2718
  %320 = load <2 x float>, <2 x float>* %319, align 4, !dbg !2718
  %321 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt.coerce190, i32 0, i32 1, !dbg !2718
  %322 = load float, float* %321, align 4, !dbg !2718
  %323 = bitcast { <2 x float>, float }* %vOt2.coerce191 to i8*, !dbg !2718
  %324 = bitcast %struct.SVec3* %vOt2 to i8*, !dbg !2718
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %323, i8* align 4 %324, i64 12, i1 false), !dbg !2718
  %325 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt2.coerce191, i32 0, i32 0, !dbg !2718
  %326 = load <2 x float>, <2 x float>* %325, align 4, !dbg !2718
  %327 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt2.coerce191, i32 0, i32 1, !dbg !2718
  %328 = load float, float* %327, align 4, !dbg !2718
  %call192 = call float @vdot(<2 x float> %320, float %322, <2 x float> %326, float %328), !dbg !2718
  store float %call192, float* %fCosT, align 4, !dbg !2717
  %329 = load i32, i32* %bAny, align 4, !dbg !2719
  %tobool193 = icmp ne i32 %329, 0, !dbg !2719
  br i1 %tobool193, label %if.then201, label %lor.lhs.false194, !dbg !2721

lor.lhs.false194:                                 ; preds = %if.end176
  %330 = load i32, i32* %bSameOrgFace, align 4, !dbg !2722
  %tobool195 = icmp ne i32 %330, 0, !dbg !2722
  br i1 %tobool195, label %if.then201, label %lor.lhs.false196, !dbg !2723

lor.lhs.false196:                                 ; preds = %lor.lhs.false194
  %331 = load float, float* %fCosS, align 4, !dbg !2724
  %332 = load float, float* %fThresCos.addr, align 4, !dbg !2725
  %cmp197 = fcmp ogt float %331, %332, !dbg !2726
  br i1 %cmp197, label %land.lhs.true, label %if.end205, !dbg !2727

land.lhs.true:                                    ; preds = %lor.lhs.false196
  %333 = load float, float* %fCosT, align 4, !dbg !2728
  %334 = load float, float* %fThresCos.addr, align 4, !dbg !2729
  %cmp199 = fcmp ogt float %333, %334, !dbg !2730
  br i1 %cmp199, label %if.then201, label %if.end205, !dbg !2731

if.then201:                                       ; preds = %land.lhs.true, %lor.lhs.false194, %if.end176
  %335 = load i32, i32* %t, align 4, !dbg !2732
  %336 = load i32*, i32** %pTmpMembers, align 8, !dbg !2733
  %337 = load i32, i32* %iMembers, align 4, !dbg !2734
  %inc202 = add nsw i32 %337, 1, !dbg !2734
  store i32 %inc202, i32* %iMembers, align 4, !dbg !2734
  %idxprom203 = sext i32 %337 to i64, !dbg !2733
  %arrayidx204 = getelementptr inbounds i32, i32* %336, i64 %idxprom203, !dbg !2733
  store i32 %335, i32* %arrayidx204, align 4, !dbg !2735
  br label %if.end205, !dbg !2733

if.end205:                                        ; preds = %if.then201, %land.lhs.true, %lor.lhs.false196
  br label %for.inc206, !dbg !2736

for.inc206:                                       ; preds = %if.end205
  %338 = load i32, i32* %j, align 4, !dbg !2737
  %inc207 = add nsw i32 %338, 1, !dbg !2737
  store i32 %inc207, i32* %j, align 4, !dbg !2737
  br label %for.cond122, !dbg !2738, !llvm.loop !2739

for.end208:                                       ; preds = %for.cond122
  %339 = load i32, i32* %iMembers, align 4, !dbg !2741
  %iNrFaces209 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %tmp_group, i32 0, i32 0, !dbg !2742
  store i32 %339, i32* %iNrFaces209, align 8, !dbg !2743
  %340 = load i32*, i32** %pTmpMembers, align 8, !dbg !2744
  %pTriMembers = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %tmp_group, i32 0, i32 1, !dbg !2745
  store i32* %340, i32** %pTriMembers, align 8, !dbg !2746
  %341 = load i32, i32* %iMembers, align 4, !dbg !2747
  %cmp210 = icmp sgt i32 %341, 1, !dbg !2749
  br i1 %cmp210, label %if.then212, label %if.end213, !dbg !2750

if.then212:                                       ; preds = %for.end208
  call void @llvm.dbg.declare(metadata i32* %uSeed, metadata !2751, metadata !DIExpression()), !dbg !2754
  store i32 39871946, i32* %uSeed, align 4, !dbg !2754
  %342 = load i32*, i32** %pTmpMembers, align 8, !dbg !2755
  %343 = load i32, i32* %iMembers, align 4, !dbg !2756
  %sub = sub nsw i32 %343, 1, !dbg !2757
  %344 = load i32, i32* %uSeed, align 4, !dbg !2758
  call void @QuickSort(i32* %342, i32 0, i32 %sub, i32 %344), !dbg !2759
  br label %if.end213, !dbg !2760

if.end213:                                        ; preds = %if.then212, %for.end208
  store i32 0, i32* %bFound, align 4, !dbg !2761
  store i32 0, i32* %l, align 4, !dbg !2762
  br label %while.cond, !dbg !2763

while.cond:                                       ; preds = %if.end223, %if.end213
  %345 = load i32, i32* %l, align 4, !dbg !2764
  %346 = load i32, i32* %iUniqueSubGroups, align 4, !dbg !2765
  %cmp214 = icmp slt i32 %345, %346, !dbg !2766
  br i1 %cmp214, label %land.rhs, label %land.end, !dbg !2767

land.rhs:                                         ; preds = %while.cond
  %347 = load i32, i32* %bFound, align 4, !dbg !2768
  %tobool216 = icmp ne i32 %347, 0, !dbg !2769
  %lnot = xor i1 %tobool216, true, !dbg !2769
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %348 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !2770
  br i1 %348, label %while.body, label %while.end, !dbg !2763

while.body:                                       ; preds = %land.end
  %349 = load %struct.SSubGroup*, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2771
  %350 = load i32, i32* %l, align 4, !dbg !2773
  %idxprom217 = sext i32 %350 to i64, !dbg !2771
  %arrayidx218 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %349, i64 %idxprom217, !dbg !2771
  %call219 = call i32 @CompareSubGroups(%struct.SSubGroup* %tmp_group, %struct.SSubGroup* %arrayidx218), !dbg !2774
  store i32 %call219, i32* %bFound, align 4, !dbg !2775
  %351 = load i32, i32* %bFound, align 4, !dbg !2776
  %tobool220 = icmp ne i32 %351, 0, !dbg !2776
  br i1 %tobool220, label %if.end223, label %if.then221, !dbg !2778

if.then221:                                       ; preds = %while.body
  %352 = load i32, i32* %l, align 4, !dbg !2779
  %inc222 = add nsw i32 %352, 1, !dbg !2779
  store i32 %inc222, i32* %l, align 4, !dbg !2779
  br label %if.end223, !dbg !2779

if.end223:                                        ; preds = %if.then221, %while.body
  br label %while.cond, !dbg !2763, !llvm.loop !2780

while.end:                                        ; preds = %land.end
  %353 = load i32, i32* %bFound, align 4, !dbg !2782
  %tobool224 = icmp ne i32 %353, 0, !dbg !2782
  br i1 %tobool224, label %if.end258, label %if.then225, !dbg !2784

if.then225:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32** %pIndices, metadata !2785, metadata !DIExpression()), !dbg !2787
  %354 = load i32, i32* %iMembers, align 4, !dbg !2788
  %conv226 = sext i32 %354 to i64, !dbg !2788
  %mul227 = mul i64 4, %conv226, !dbg !2789
  %call228 = call noalias i8* @malloc(i64 %mul227) #5, !dbg !2790
  %355 = bitcast i8* %call228 to i32*, !dbg !2791
  store i32* %355, i32** %pIndices, align 8, !dbg !2787
  %356 = load i32*, i32** %pIndices, align 8, !dbg !2792
  %cmp229 = icmp eq i32* %356, null, !dbg !2794
  br i1 %cmp229, label %if.then231, label %if.end243, !dbg !2795

if.then231:                                       ; preds = %if.then225
  call void @llvm.dbg.declare(metadata i32* %s232, metadata !2796, metadata !DIExpression()), !dbg !2798
  store i32 0, i32* %s232, align 4, !dbg !2798
  store i32 0, i32* %s232, align 4, !dbg !2799
  br label %for.cond233, !dbg !2801

for.cond233:                                      ; preds = %for.inc240, %if.then231
  %357 = load i32, i32* %s232, align 4, !dbg !2802
  %358 = load i32, i32* %iUniqueSubGroups, align 4, !dbg !2804
  %cmp234 = icmp slt i32 %357, %358, !dbg !2805
  br i1 %cmp234, label %for.body236, label %for.end242, !dbg !2806

for.body236:                                      ; preds = %for.cond233
  %359 = load %struct.SSubGroup*, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2807
  %360 = load i32, i32* %s232, align 4, !dbg !2808
  %idxprom237 = sext i32 %360 to i64, !dbg !2807
  %arrayidx238 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %359, i64 %idxprom237, !dbg !2807
  %pTriMembers239 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %arrayidx238, i32 0, i32 1, !dbg !2809
  %361 = load i32*, i32** %pTriMembers239, align 8, !dbg !2809
  %362 = bitcast i32* %361 to i8*, !dbg !2807
  call void @free(i8* %362) #5, !dbg !2810
  br label %for.inc240, !dbg !2810

for.inc240:                                       ; preds = %for.body236
  %363 = load i32, i32* %s232, align 4, !dbg !2811
  %inc241 = add nsw i32 %363, 1, !dbg !2811
  store i32 %inc241, i32* %s232, align 4, !dbg !2811
  br label %for.cond233, !dbg !2812, !llvm.loop !2813

for.end242:                                       ; preds = %for.cond233
  %364 = load %struct.SSubGroup*, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2815
  %365 = bitcast %struct.SSubGroup* %364 to i8*, !dbg !2815
  call void @free(i8* %365) #5, !dbg !2816
  %366 = load i32*, i32** %pTmpMembers, align 8, !dbg !2817
  %367 = bitcast i32* %366 to i8*, !dbg !2817
  call void @free(i8* %367) #5, !dbg !2818
  %368 = load %struct.STSpace*, %struct.STSpace** %pSubGroupTspace, align 8, !dbg !2819
  %369 = bitcast %struct.STSpace* %368 to i8*, !dbg !2819
  call void @free(i8* %369) #5, !dbg !2820
  store i32 0, i32* %retval, align 4, !dbg !2821
  br label %return, !dbg !2821

if.end243:                                        ; preds = %if.then225
  %370 = load i32, i32* %iMembers, align 4, !dbg !2822
  %371 = load %struct.SSubGroup*, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2823
  %372 = load i32, i32* %iUniqueSubGroups, align 4, !dbg !2824
  %idxprom244 = sext i32 %372 to i64, !dbg !2823
  %arrayidx245 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %371, i64 %idxprom244, !dbg !2823
  %iNrFaces246 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %arrayidx245, i32 0, i32 0, !dbg !2825
  store i32 %370, i32* %iNrFaces246, align 8, !dbg !2826
  %373 = load i32*, i32** %pIndices, align 8, !dbg !2827
  %374 = load %struct.SSubGroup*, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2828
  %375 = load i32, i32* %iUniqueSubGroups, align 4, !dbg !2829
  %idxprom247 = sext i32 %375 to i64, !dbg !2828
  %arrayidx248 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %374, i64 %idxprom247, !dbg !2828
  %pTriMembers249 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %arrayidx248, i32 0, i32 1, !dbg !2830
  store i32* %373, i32** %pTriMembers249, align 8, !dbg !2831
  %376 = load i32*, i32** %pIndices, align 8, !dbg !2832
  %377 = bitcast i32* %376 to i8*, !dbg !2833
  %pTriMembers250 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %tmp_group, i32 0, i32 1, !dbg !2834
  %378 = load i32*, i32** %pTriMembers250, align 8, !dbg !2834
  %379 = bitcast i32* %378 to i8*, !dbg !2833
  %380 = load i32, i32* %iMembers, align 4, !dbg !2835
  %conv251 = sext i32 %380 to i64, !dbg !2835
  %mul252 = mul i64 %conv251, 4, !dbg !2836
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %377, i8* align 4 %379, i64 %mul252, i1 false), !dbg !2833
  %381 = load %struct.STSpace*, %struct.STSpace** %pSubGroupTspace, align 8, !dbg !2837
  %382 = load i32, i32* %iUniqueSubGroups, align 4, !dbg !2838
  %idxprom253 = sext i32 %382 to i64, !dbg !2837
  %arrayidx254 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %381, i64 %idxprom253, !dbg !2837
  %pTriMembers256 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %tmp_group, i32 0, i32 1, !dbg !2839
  %383 = load i32*, i32** %pTriMembers256, align 8, !dbg !2839
  %384 = load i32, i32* %iMembers, align 4, !dbg !2840
  %385 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !2841
  %386 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2842
  %387 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !2843
  %388 = load %struct.SGroup*, %struct.SGroup** %pGroup, align 8, !dbg !2844
  %iVertexRepresentitive = getelementptr inbounds %struct.SGroup, %struct.SGroup* %388, i32 0, i32 2, !dbg !2845
  %389 = load i32, i32* %iVertexRepresentitive, align 8, !dbg !2845
  call void @EvalTspace(%struct.STSpace* sret %tmp255, i32* %383, i32 %384, i32* %385, %struct.STriInfo* %386, %struct.SMikkTSpaceContext* %387, i32 %389), !dbg !2846
  %390 = bitcast %struct.STSpace* %arrayidx254 to i8*, !dbg !2846
  %391 = bitcast %struct.STSpace* %tmp255 to i8*, !dbg !2846
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %390, i8* align 4 %391, i64 40, i1 false), !dbg !2846
  %392 = load i32, i32* %iUniqueSubGroups, align 4, !dbg !2847
  %inc257 = add nsw i32 %392, 1, !dbg !2847
  store i32 %inc257, i32* %iUniqueSubGroups, align 4, !dbg !2847
  br label %if.end258, !dbg !2848

if.end258:                                        ; preds = %if.end243, %while.end
  call void @llvm.dbg.declare(metadata i32* %iOffs, metadata !2849, metadata !DIExpression()), !dbg !2851
  %393 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2852
  %394 = load i32, i32* %f, align 4, !dbg !2853
  %idxprom259 = sext i32 %394 to i64, !dbg !2852
  %arrayidx260 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %393, i64 %idxprom259, !dbg !2852
  %iTSpacesOffs = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx260, i32 0, i32 8, !dbg !2854
  %395 = load i32, i32* %iTSpacesOffs, align 8, !dbg !2854
  store i32 %395, i32* %iOffs, align 4, !dbg !2851
  call void @llvm.dbg.declare(metadata i32* %iVert, metadata !2855, metadata !DIExpression()), !dbg !2856
  %396 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2857
  %397 = load i32, i32* %f, align 4, !dbg !2858
  %idxprom261 = sext i32 %397 to i64, !dbg !2857
  %arrayidx262 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %396, i64 %idxprom261, !dbg !2857
  %vert_num = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx262, i32 0, i32 9, !dbg !2859
  %398 = load i32, i32* %index, align 4, !dbg !2860
  %idxprom263 = sext i32 %398 to i64, !dbg !2857
  %arrayidx264 = getelementptr inbounds [4 x i8], [4 x i8]* %vert_num, i64 0, i64 %idxprom263, !dbg !2857
  %399 = load i8, i8* %arrayidx264, align 1, !dbg !2857
  %conv265 = zext i8 %399 to i32, !dbg !2857
  store i32 %conv265, i32* %iVert, align 4, !dbg !2856
  call void @llvm.dbg.declare(metadata %struct.STSpace** %pTS_out, metadata !2861, metadata !DIExpression()), !dbg !2862
  %400 = load %struct.STSpace*, %struct.STSpace** %psTspace.addr, align 8, !dbg !2863
  %401 = load i32, i32* %iOffs, align 4, !dbg !2864
  %402 = load i32, i32* %iVert, align 4, !dbg !2865
  %add266 = add nsw i32 %401, %402, !dbg !2866
  %idxprom267 = sext i32 %add266 to i64, !dbg !2863
  %arrayidx268 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %400, i64 %idxprom267, !dbg !2863
  store %struct.STSpace* %arrayidx268, %struct.STSpace** %pTS_out, align 8, !dbg !2862
  %403 = load %struct.STSpace*, %struct.STSpace** %pTS_out, align 8, !dbg !2867
  %iCounter = getelementptr inbounds %struct.STSpace, %struct.STSpace* %403, i32 0, i32 4, !dbg !2869
  %404 = load i32, i32* %iCounter, align 4, !dbg !2869
  %cmp269 = icmp eq i32 %404, 1, !dbg !2870
  br i1 %cmp269, label %if.then271, label %if.else276, !dbg !2871

if.then271:                                       ; preds = %if.end258
  %405 = load %struct.STSpace*, %struct.STSpace** %pTS_out, align 8, !dbg !2872
  %406 = load %struct.STSpace*, %struct.STSpace** %pTS_out, align 8, !dbg !2874
  %407 = load %struct.STSpace*, %struct.STSpace** %pSubGroupTspace, align 8, !dbg !2875
  %408 = load i32, i32* %l, align 4, !dbg !2876
  %idxprom273 = sext i32 %408 to i64, !dbg !2875
  %arrayidx274 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %407, i64 %idxprom273, !dbg !2875
  call void @AvgTSpace(%struct.STSpace* sret %tmp272, %struct.STSpace* %406, %struct.STSpace* %arrayidx274), !dbg !2877
  %409 = bitcast %struct.STSpace* %405 to i8*, !dbg !2877
  %410 = bitcast %struct.STSpace* %tmp272 to i8*, !dbg !2877
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %409, i8* align 4 %410, i64 40, i1 false), !dbg !2877
  %411 = load %struct.STSpace*, %struct.STSpace** %pTS_out, align 8, !dbg !2878
  %iCounter275 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %411, i32 0, i32 4, !dbg !2879
  store i32 2, i32* %iCounter275, align 4, !dbg !2880
  %412 = load %struct.SGroup*, %struct.SGroup** %pGroup, align 8, !dbg !2881
  %bOrientPreservering = getelementptr inbounds %struct.SGroup, %struct.SGroup* %412, i32 0, i32 3, !dbg !2882
  %413 = load i32, i32* %bOrientPreservering, align 4, !dbg !2882
  %414 = load %struct.STSpace*, %struct.STSpace** %pTS_out, align 8, !dbg !2883
  %bOrient = getelementptr inbounds %struct.STSpace, %struct.STSpace* %414, i32 0, i32 5, !dbg !2884
  store i32 %413, i32* %bOrient, align 4, !dbg !2885
  br label %if.end282, !dbg !2886

if.else276:                                       ; preds = %if.end258
  %415 = load %struct.STSpace*, %struct.STSpace** %pTS_out, align 8, !dbg !2887
  %416 = load %struct.STSpace*, %struct.STSpace** %pSubGroupTspace, align 8, !dbg !2889
  %417 = load i32, i32* %l, align 4, !dbg !2890
  %idxprom277 = sext i32 %417 to i64, !dbg !2889
  %arrayidx278 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %416, i64 %idxprom277, !dbg !2889
  %418 = bitcast %struct.STSpace* %415 to i8*, !dbg !2889
  %419 = bitcast %struct.STSpace* %arrayidx278 to i8*, !dbg !2889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %418, i8* align 4 %419, i64 40, i1 false), !dbg !2889
  %420 = load %struct.STSpace*, %struct.STSpace** %pTS_out, align 8, !dbg !2891
  %iCounter279 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %420, i32 0, i32 4, !dbg !2892
  store i32 1, i32* %iCounter279, align 4, !dbg !2893
  %421 = load %struct.SGroup*, %struct.SGroup** %pGroup, align 8, !dbg !2894
  %bOrientPreservering280 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %421, i32 0, i32 3, !dbg !2895
  %422 = load i32, i32* %bOrientPreservering280, align 4, !dbg !2895
  %423 = load %struct.STSpace*, %struct.STSpace** %pTS_out, align 8, !dbg !2896
  %bOrient281 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %423, i32 0, i32 5, !dbg !2897
  store i32 %422, i32* %bOrient281, align 4, !dbg !2898
  br label %if.end282

if.end282:                                        ; preds = %if.else276, %if.then271
  br label %for.inc283, !dbg !2899

for.inc283:                                       ; preds = %if.end282
  %424 = load i32, i32* %i, align 4, !dbg !2900
  %inc284 = add nsw i32 %424, 1, !dbg !2900
  store i32 %inc284, i32* %i, align 4, !dbg !2900
  br label %for.cond41, !dbg !2901, !llvm.loop !2902

for.end285:                                       ; preds = %for.cond41
  store i32 0, i32* %s, align 4, !dbg !2904
  br label %for.cond286, !dbg !2906

for.cond286:                                      ; preds = %for.inc293, %for.end285
  %425 = load i32, i32* %s, align 4, !dbg !2907
  %426 = load i32, i32* %iUniqueSubGroups, align 4, !dbg !2909
  %cmp287 = icmp slt i32 %425, %426, !dbg !2910
  br i1 %cmp287, label %for.body289, label %for.end295, !dbg !2911

for.body289:                                      ; preds = %for.cond286
  %427 = load %struct.SSubGroup*, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2912
  %428 = load i32, i32* %s, align 4, !dbg !2913
  %idxprom290 = sext i32 %428 to i64, !dbg !2912
  %arrayidx291 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %427, i64 %idxprom290, !dbg !2912
  %pTriMembers292 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %arrayidx291, i32 0, i32 1, !dbg !2914
  %429 = load i32*, i32** %pTriMembers292, align 8, !dbg !2914
  %430 = bitcast i32* %429 to i8*, !dbg !2912
  call void @free(i8* %430) #5, !dbg !2915
  br label %for.inc293, !dbg !2915

for.inc293:                                       ; preds = %for.body289
  %431 = load i32, i32* %s, align 4, !dbg !2916
  %inc294 = add nsw i32 %431, 1, !dbg !2916
  store i32 %inc294, i32* %s, align 4, !dbg !2916
  br label %for.cond286, !dbg !2917, !llvm.loop !2918

for.end295:                                       ; preds = %for.cond286
  %432 = load i32, i32* %iUniqueSubGroups, align 4, !dbg !2920
  %433 = load i32, i32* %iUniqueTspaces, align 4, !dbg !2921
  %add296 = add nsw i32 %433, %432, !dbg !2921
  store i32 %add296, i32* %iUniqueTspaces, align 4, !dbg !2921
  br label %for.inc297, !dbg !2922

for.inc297:                                       ; preds = %for.end295
  %434 = load i32, i32* %g, align 4, !dbg !2923
  %inc298 = add nsw i32 %434, 1, !dbg !2923
  store i32 %inc298, i32* %g, align 4, !dbg !2923
  br label %for.cond35, !dbg !2924, !llvm.loop !2925

for.end299:                                       ; preds = %for.cond35
  %435 = load %struct.SSubGroup*, %struct.SSubGroup** %pUniSubGroups, align 8, !dbg !2927
  %436 = bitcast %struct.SSubGroup* %435 to i8*, !dbg !2927
  call void @free(i8* %436) #5, !dbg !2928
  %437 = load i32*, i32** %pTmpMembers, align 8, !dbg !2929
  %438 = bitcast i32* %437 to i8*, !dbg !2929
  call void @free(i8* %438) #5, !dbg !2930
  %439 = load %struct.STSpace*, %struct.STSpace** %pSubGroupTspace, align 8, !dbg !2931
  %440 = bitcast %struct.STSpace* %439 to i8*, !dbg !2931
  call void @free(i8* %440) #5, !dbg !2932
  store i32 1, i32* %retval, align 4, !dbg !2933
  br label %return, !dbg !2933

return:                                           ; preds = %for.end299, %for.end242, %if.end33, %if.then6
  %441 = load i32, i32* %retval, align 4, !dbg !2934
  ret i32 %441, !dbg !2934
}

; Function Attrs: noinline nounwind uwtable
define internal void @DegenEpilogue(%struct.STSpace* %psTspace, %struct.STriInfo* %pTriInfos, i32* %piTriListIn, %struct.SMikkTSpaceContext* %pContext, i32 %iNrTrianglesIn, i32 %iTotTris) #2 !dbg !2935 {
entry:
  %psTspace.addr = alloca %struct.STSpace*, align 8
  %pTriInfos.addr = alloca %struct.STriInfo*, align 8
  %piTriListIn.addr = alloca i32*, align 8
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %iNrTrianglesIn.addr = alloca i32, align 4
  %iTotTris.addr = alloca i32, align 4
  %t = alloca i32, align 4
  %i = alloca i32, align 4
  %bSkip = alloca i32, align 4
  %index1 = alloca i32, align 4
  %bNotFound = alloca i32, align 4
  %j = alloca i32, align 4
  %index2 = alloca i32, align 4
  %iTri = alloca i32, align 4
  %iVert = alloca i32, align 4
  %iSrcVert = alloca i32, align 4
  %iSrcOffs = alloca i32, align 4
  %iDstVert = alloca i32, align 4
  %iDstOffs = alloca i32, align 4
  %vDstP = alloca %struct.SVec3, align 4
  %iOrgF = alloca i32, align 4
  %i54 = alloca i32, align 4
  %bNotFound55 = alloca i32, align 4
  %pV = alloca i8*, align 8
  %iFlag59 = alloca i32, align 4
  %iMissingIndex = alloca i32, align 4
  %tmp = alloca %struct.SVec3, align 4
  %tmp89 = alloca { <2 x float>, float }, align 8
  %iVert97 = alloca i32, align 4
  %vSrcP = alloca %struct.SVec3, align 4
  %tmp103 = alloca { <2 x float>, float }, align 8
  %vSrcP.coerce = alloca { <2 x float>, float }, align 4
  %vDstP.coerce = alloca { <2 x float>, float }, align 4
  %iOffs = alloca i32, align 4
  store %struct.STSpace* %psTspace, %struct.STSpace** %psTspace.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STSpace** %psTspace.addr, metadata !2938, metadata !DIExpression()), !dbg !2939
  store %struct.STriInfo* %pTriInfos, %struct.STriInfo** %pTriInfos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pTriInfos.addr, metadata !2940, metadata !DIExpression()), !dbg !2941
  store i32* %piTriListIn, i32** %piTriListIn.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriListIn.addr, metadata !2942, metadata !DIExpression()), !dbg !2943
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !2944, metadata !DIExpression()), !dbg !2945
  store i32 %iNrTrianglesIn, i32* %iNrTrianglesIn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iNrTrianglesIn.addr, metadata !2946, metadata !DIExpression()), !dbg !2947
  store i32 %iTotTris, i32* %iTotTris.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iTotTris.addr, metadata !2948, metadata !DIExpression()), !dbg !2949
  call void @llvm.dbg.declare(metadata i32* %t, metadata !2950, metadata !DIExpression()), !dbg !2951
  store i32 0, i32* %t, align 4, !dbg !2951
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2952, metadata !DIExpression()), !dbg !2953
  store i32 0, i32* %i, align 4, !dbg !2953
  %0 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !2954
  store i32 %0, i32* %t, align 4, !dbg !2956
  br label %for.cond, !dbg !2957

for.cond:                                         ; preds = %for.inc40, %entry
  %1 = load i32, i32* %t, align 4, !dbg !2958
  %2 = load i32, i32* %iTotTris.addr, align 4, !dbg !2960
  %cmp = icmp slt i32 %1, %2, !dbg !2961
  br i1 %cmp, label %for.body, label %for.end42, !dbg !2962

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %bSkip, metadata !2963, metadata !DIExpression()), !dbg !2965
  %3 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !2966
  %4 = load i32, i32* %t, align 4, !dbg !2967
  %idxprom = sext i32 %4 to i64, !dbg !2966
  %arrayidx = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %3, i64 %idxprom, !dbg !2966
  %iFlag = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx, i32 0, i32 7, !dbg !2968
  %5 = load i32, i32* %iFlag, align 4, !dbg !2968
  %and = and i32 %5, 2, !dbg !2969
  %cmp1 = icmp ne i32 %and, 0, !dbg !2970
  %6 = zext i1 %cmp1 to i64, !dbg !2971
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !2971
  store i32 %cond, i32* %bSkip, align 4, !dbg !2965
  %7 = load i32, i32* %bSkip, align 4, !dbg !2972
  %tobool = icmp ne i32 %7, 0, !dbg !2972
  br i1 %tobool, label %if.end39, label %if.then, !dbg !2974

if.then:                                          ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !2975
  br label %for.cond2, !dbg !2978

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load i32, i32* %i, align 4, !dbg !2979
  %cmp3 = icmp slt i32 %8, 3, !dbg !2981
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !2982

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i32* %index1, metadata !2983, metadata !DIExpression()), !dbg !2985
  %9 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !2986
  %10 = load i32, i32* %t, align 4, !dbg !2987
  %mul = mul nsw i32 %10, 3, !dbg !2988
  %11 = load i32, i32* %i, align 4, !dbg !2989
  %add = add nsw i32 %mul, %11, !dbg !2990
  %idxprom5 = sext i32 %add to i64, !dbg !2986
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 %idxprom5, !dbg !2986
  %12 = load i32, i32* %arrayidx6, align 4, !dbg !2986
  store i32 %12, i32* %index1, align 4, !dbg !2985
  call void @llvm.dbg.declare(metadata i32* %bNotFound, metadata !2991, metadata !DIExpression()), !dbg !2992
  store i32 1, i32* %bNotFound, align 4, !dbg !2992
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2993, metadata !DIExpression()), !dbg !2994
  store i32 0, i32* %j, align 4, !dbg !2994
  br label %while.cond, !dbg !2995

while.cond:                                       ; preds = %if.end, %for.body4
  %13 = load i32, i32* %bNotFound, align 4, !dbg !2996
  %tobool7 = icmp ne i32 %13, 0, !dbg !2996
  br i1 %tobool7, label %land.rhs, label %land.end, !dbg !2997

land.rhs:                                         ; preds = %while.cond
  %14 = load i32, i32* %j, align 4, !dbg !2998
  %15 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !2999
  %mul8 = mul nsw i32 3, %15, !dbg !3000
  %cmp9 = icmp slt i32 %14, %mul8, !dbg !3001
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %16 = phi i1 [ false, %while.cond ], [ %cmp9, %land.rhs ], !dbg !3002
  br i1 %16, label %while.body, label %while.end, !dbg !2995

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !3003, metadata !DIExpression()), !dbg !3005
  %17 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !3006
  %18 = load i32, i32* %j, align 4, !dbg !3007
  %idxprom10 = sext i32 %18 to i64, !dbg !3006
  %arrayidx11 = getelementptr inbounds i32, i32* %17, i64 %idxprom10, !dbg !3006
  %19 = load i32, i32* %arrayidx11, align 4, !dbg !3006
  store i32 %19, i32* %index2, align 4, !dbg !3005
  %20 = load i32, i32* %index1, align 4, !dbg !3008
  %21 = load i32, i32* %index2, align 4, !dbg !3010
  %cmp12 = icmp eq i32 %20, %21, !dbg !3011
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !3012

if.then13:                                        ; preds = %while.body
  store i32 0, i32* %bNotFound, align 4, !dbg !3013
  br label %if.end, !dbg !3014

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %j, align 4, !dbg !3015
  %inc = add nsw i32 %22, 1, !dbg !3015
  store i32 %inc, i32* %j, align 4, !dbg !3015
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  br label %while.cond, !dbg !2995, !llvm.loop !3016

while.end:                                        ; preds = %land.end
  %23 = load i32, i32* %bNotFound, align 4, !dbg !3018
  %tobool14 = icmp ne i32 %23, 0, !dbg !3018
  br i1 %tobool14, label %if.end37, label %if.then15, !dbg !3020

if.then15:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %iTri, metadata !3021, metadata !DIExpression()), !dbg !3023
  %24 = load i32, i32* %j, align 4, !dbg !3024
  %div = sdiv i32 %24, 3, !dbg !3025
  store i32 %div, i32* %iTri, align 4, !dbg !3023
  call void @llvm.dbg.declare(metadata i32* %iVert, metadata !3026, metadata !DIExpression()), !dbg !3027
  %25 = load i32, i32* %j, align 4, !dbg !3028
  %rem = srem i32 %25, 3, !dbg !3029
  store i32 %rem, i32* %iVert, align 4, !dbg !3027
  call void @llvm.dbg.declare(metadata i32* %iSrcVert, metadata !3030, metadata !DIExpression()), !dbg !3031
  %26 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !3032
  %27 = load i32, i32* %iTri, align 4, !dbg !3033
  %idxprom16 = sext i32 %27 to i64, !dbg !3032
  %arrayidx17 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %26, i64 %idxprom16, !dbg !3032
  %vert_num = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx17, i32 0, i32 9, !dbg !3034
  %28 = load i32, i32* %iVert, align 4, !dbg !3035
  %idxprom18 = sext i32 %28 to i64, !dbg !3032
  %arrayidx19 = getelementptr inbounds [4 x i8], [4 x i8]* %vert_num, i64 0, i64 %idxprom18, !dbg !3032
  %29 = load i8, i8* %arrayidx19, align 1, !dbg !3032
  %conv = zext i8 %29 to i32, !dbg !3032
  store i32 %conv, i32* %iSrcVert, align 4, !dbg !3031
  call void @llvm.dbg.declare(metadata i32* %iSrcOffs, metadata !3036, metadata !DIExpression()), !dbg !3037
  %30 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !3038
  %31 = load i32, i32* %iTri, align 4, !dbg !3039
  %idxprom20 = sext i32 %31 to i64, !dbg !3038
  %arrayidx21 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %30, i64 %idxprom20, !dbg !3038
  %iTSpacesOffs = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx21, i32 0, i32 8, !dbg !3040
  %32 = load i32, i32* %iTSpacesOffs, align 8, !dbg !3040
  store i32 %32, i32* %iSrcOffs, align 4, !dbg !3037
  call void @llvm.dbg.declare(metadata i32* %iDstVert, metadata !3041, metadata !DIExpression()), !dbg !3042
  %33 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !3043
  %34 = load i32, i32* %t, align 4, !dbg !3044
  %idxprom22 = sext i32 %34 to i64, !dbg !3043
  %arrayidx23 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %33, i64 %idxprom22, !dbg !3043
  %vert_num24 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx23, i32 0, i32 9, !dbg !3045
  %35 = load i32, i32* %i, align 4, !dbg !3046
  %idxprom25 = sext i32 %35 to i64, !dbg !3043
  %arrayidx26 = getelementptr inbounds [4 x i8], [4 x i8]* %vert_num24, i64 0, i64 %idxprom25, !dbg !3043
  %36 = load i8, i8* %arrayidx26, align 1, !dbg !3043
  %conv27 = zext i8 %36 to i32, !dbg !3043
  store i32 %conv27, i32* %iDstVert, align 4, !dbg !3042
  call void @llvm.dbg.declare(metadata i32* %iDstOffs, metadata !3047, metadata !DIExpression()), !dbg !3048
  %37 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !3049
  %38 = load i32, i32* %t, align 4, !dbg !3050
  %idxprom28 = sext i32 %38 to i64, !dbg !3049
  %arrayidx29 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %37, i64 %idxprom28, !dbg !3049
  %iTSpacesOffs30 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx29, i32 0, i32 8, !dbg !3051
  %39 = load i32, i32* %iTSpacesOffs30, align 8, !dbg !3051
  store i32 %39, i32* %iDstOffs, align 4, !dbg !3048
  %40 = load %struct.STSpace*, %struct.STSpace** %psTspace.addr, align 8, !dbg !3052
  %41 = load i32, i32* %iDstOffs, align 4, !dbg !3053
  %42 = load i32, i32* %iDstVert, align 4, !dbg !3054
  %add31 = add nsw i32 %41, %42, !dbg !3055
  %idxprom32 = sext i32 %add31 to i64, !dbg !3052
  %arrayidx33 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %40, i64 %idxprom32, !dbg !3052
  %43 = load %struct.STSpace*, %struct.STSpace** %psTspace.addr, align 8, !dbg !3056
  %44 = load i32, i32* %iSrcOffs, align 4, !dbg !3057
  %45 = load i32, i32* %iSrcVert, align 4, !dbg !3058
  %add34 = add nsw i32 %44, %45, !dbg !3059
  %idxprom35 = sext i32 %add34 to i64, !dbg !3056
  %arrayidx36 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %43, i64 %idxprom35, !dbg !3056
  %46 = bitcast %struct.STSpace* %arrayidx33 to i8*, !dbg !3056
  %47 = bitcast %struct.STSpace* %arrayidx36 to i8*, !dbg !3056
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 40, i1 false), !dbg !3056
  br label %if.end37, !dbg !3060

if.end37:                                         ; preds = %if.then15, %while.end
  br label %for.inc, !dbg !3061

for.inc:                                          ; preds = %if.end37
  %48 = load i32, i32* %i, align 4, !dbg !3062
  %inc38 = add nsw i32 %48, 1, !dbg !3062
  store i32 %inc38, i32* %i, align 4, !dbg !3062
  br label %for.cond2, !dbg !3063, !llvm.loop !3064

for.end:                                          ; preds = %for.cond2
  br label %if.end39, !dbg !3066

if.end39:                                         ; preds = %for.end, %for.body
  br label %for.inc40, !dbg !3067

for.inc40:                                        ; preds = %if.end39
  %49 = load i32, i32* %t, align 4, !dbg !3068
  %inc41 = add nsw i32 %49, 1, !dbg !3068
  store i32 %inc41, i32* %t, align 4, !dbg !3068
  br label %for.cond, !dbg !3069, !llvm.loop !3070

for.end42:                                        ; preds = %for.cond
  store i32 0, i32* %t, align 4, !dbg !3072
  br label %for.cond43, !dbg !3074

for.cond43:                                       ; preds = %for.inc122, %for.end42
  %50 = load i32, i32* %t, align 4, !dbg !3075
  %51 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !3077
  %cmp44 = icmp slt i32 %50, %51, !dbg !3078
  br i1 %cmp44, label %for.body46, label %for.end124, !dbg !3079

for.body46:                                       ; preds = %for.cond43
  %52 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !3080
  %53 = load i32, i32* %t, align 4, !dbg !3083
  %idxprom47 = sext i32 %53 to i64, !dbg !3080
  %arrayidx48 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %52, i64 %idxprom47, !dbg !3080
  %iFlag49 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx48, i32 0, i32 7, !dbg !3084
  %54 = load i32, i32* %iFlag49, align 4, !dbg !3084
  %and50 = and i32 %54, 2, !dbg !3085
  %cmp51 = icmp ne i32 %and50, 0, !dbg !3086
  br i1 %cmp51, label %if.then53, label %if.end121, !dbg !3087

if.then53:                                        ; preds = %for.body46
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vDstP, metadata !3088, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.declare(metadata i32* %iOrgF, metadata !3091, metadata !DIExpression()), !dbg !3092
  store i32 -1, i32* %iOrgF, align 4, !dbg !3092
  call void @llvm.dbg.declare(metadata i32* %i54, metadata !3093, metadata !DIExpression()), !dbg !3094
  store i32 0, i32* %i54, align 4, !dbg !3094
  call void @llvm.dbg.declare(metadata i32* %bNotFound55, metadata !3095, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.declare(metadata i8** %pV, metadata !3097, metadata !DIExpression()), !dbg !3098
  %55 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !3099
  %56 = load i32, i32* %t, align 4, !dbg !3100
  %idxprom56 = sext i32 %56 to i64, !dbg !3099
  %arrayidx57 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %55, i64 %idxprom56, !dbg !3099
  %vert_num58 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx57, i32 0, i32 9, !dbg !3101
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %vert_num58, i64 0, i64 0, !dbg !3099
  store i8* %arraydecay, i8** %pV, align 8, !dbg !3098
  call void @llvm.dbg.declare(metadata i32* %iFlag59, metadata !3102, metadata !DIExpression()), !dbg !3103
  %57 = load i8*, i8** %pV, align 8, !dbg !3104
  %arrayidx60 = getelementptr inbounds i8, i8* %57, i64 0, !dbg !3104
  %58 = load i8, i8* %arrayidx60, align 1, !dbg !3104
  %conv61 = zext i8 %58 to i32, !dbg !3104
  %shl = shl i32 1, %conv61, !dbg !3105
  %59 = load i8*, i8** %pV, align 8, !dbg !3106
  %arrayidx62 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !3106
  %60 = load i8, i8* %arrayidx62, align 1, !dbg !3106
  %conv63 = zext i8 %60 to i32, !dbg !3106
  %shl64 = shl i32 1, %conv63, !dbg !3107
  %or = or i32 %shl, %shl64, !dbg !3108
  %61 = load i8*, i8** %pV, align 8, !dbg !3109
  %arrayidx65 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !3109
  %62 = load i8, i8* %arrayidx65, align 1, !dbg !3109
  %conv66 = zext i8 %62 to i32, !dbg !3109
  %shl67 = shl i32 1, %conv66, !dbg !3110
  %or68 = or i32 %or, %shl67, !dbg !3111
  store i32 %or68, i32* %iFlag59, align 4, !dbg !3103
  call void @llvm.dbg.declare(metadata i32* %iMissingIndex, metadata !3112, metadata !DIExpression()), !dbg !3113
  store i32 0, i32* %iMissingIndex, align 4, !dbg !3113
  %63 = load i32, i32* %iFlag59, align 4, !dbg !3114
  %and69 = and i32 %63, 2, !dbg !3116
  %cmp70 = icmp eq i32 %and69, 0, !dbg !3117
  br i1 %cmp70, label %if.then72, label %if.else73, !dbg !3118

if.then72:                                        ; preds = %if.then53
  store i32 1, i32* %iMissingIndex, align 4, !dbg !3119
  br label %if.end85, !dbg !3120

if.else73:                                        ; preds = %if.then53
  %64 = load i32, i32* %iFlag59, align 4, !dbg !3121
  %and74 = and i32 %64, 4, !dbg !3123
  %cmp75 = icmp eq i32 %and74, 0, !dbg !3124
  br i1 %cmp75, label %if.then77, label %if.else78, !dbg !3125

if.then77:                                        ; preds = %if.else73
  store i32 2, i32* %iMissingIndex, align 4, !dbg !3126
  br label %if.end84, !dbg !3127

if.else78:                                        ; preds = %if.else73
  %65 = load i32, i32* %iFlag59, align 4, !dbg !3128
  %and79 = and i32 %65, 8, !dbg !3130
  %cmp80 = icmp eq i32 %and79, 0, !dbg !3131
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !3132

if.then82:                                        ; preds = %if.else78
  store i32 3, i32* %iMissingIndex, align 4, !dbg !3133
  br label %if.end83, !dbg !3134

if.end83:                                         ; preds = %if.then82, %if.else78
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then77
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then72
  %66 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !3135
  %67 = load i32, i32* %t, align 4, !dbg !3136
  %idxprom86 = sext i32 %67 to i64, !dbg !3135
  %arrayidx87 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %66, i64 %idxprom86, !dbg !3135
  %iOrgFaceNumber = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx87, i32 0, i32 6, !dbg !3137
  %68 = load i32, i32* %iOrgFaceNumber, align 8, !dbg !3137
  store i32 %68, i32* %iOrgF, align 4, !dbg !3138
  %69 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3139
  %70 = load i32, i32* %iOrgF, align 4, !dbg !3140
  %71 = load i32, i32* %iMissingIndex, align 4, !dbg !3141
  %call = call i32 @MakeIndex(i32 %70, i32 %71), !dbg !3142
  %call88 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %69, i32 %call), !dbg !3143
  store { <2 x float>, float } %call88, { <2 x float>, float }* %tmp89, align 8, !dbg !3143
  %72 = bitcast { <2 x float>, float }* %tmp89 to i8*, !dbg !3143
  %73 = bitcast %struct.SVec3* %tmp to i8*, !dbg !3143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 8 %72, i64 12, i1 false), !dbg !3143
  %74 = bitcast %struct.SVec3* %vDstP to i8*, !dbg !3143
  %75 = bitcast %struct.SVec3* %tmp to i8*, !dbg !3143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* align 4 %75, i64 12, i1 false), !dbg !3143
  store i32 1, i32* %bNotFound55, align 4, !dbg !3144
  store i32 0, i32* %i54, align 4, !dbg !3145
  br label %while.cond90, !dbg !3146

while.cond90:                                     ; preds = %if.end119, %if.end85
  %76 = load i32, i32* %bNotFound55, align 4, !dbg !3147
  %tobool91 = icmp ne i32 %76, 0, !dbg !3147
  br i1 %tobool91, label %land.rhs92, label %land.end95, !dbg !3148

land.rhs92:                                       ; preds = %while.cond90
  %77 = load i32, i32* %i54, align 4, !dbg !3149
  %cmp93 = icmp slt i32 %77, 3, !dbg !3150
  br label %land.end95

land.end95:                                       ; preds = %land.rhs92, %while.cond90
  %78 = phi i1 [ false, %while.cond90 ], [ %cmp93, %land.rhs92 ], !dbg !3151
  br i1 %78, label %while.body96, label %while.end120, !dbg !3146

while.body96:                                     ; preds = %land.end95
  call void @llvm.dbg.declare(metadata i32* %iVert97, metadata !3152, metadata !DIExpression()), !dbg !3154
  %79 = load i8*, i8** %pV, align 8, !dbg !3155
  %80 = load i32, i32* %i54, align 4, !dbg !3156
  %idxprom98 = sext i32 %80 to i64, !dbg !3155
  %arrayidx99 = getelementptr inbounds i8, i8* %79, i64 %idxprom98, !dbg !3155
  %81 = load i8, i8* %arrayidx99, align 1, !dbg !3155
  %conv100 = zext i8 %81 to i32, !dbg !3155
  store i32 %conv100, i32* %iVert97, align 4, !dbg !3154
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vSrcP, metadata !3157, metadata !DIExpression()), !dbg !3158
  %82 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3159
  %83 = load i32, i32* %iOrgF, align 4, !dbg !3160
  %84 = load i32, i32* %iVert97, align 4, !dbg !3161
  %call101 = call i32 @MakeIndex(i32 %83, i32 %84), !dbg !3162
  %call102 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %82, i32 %call101), !dbg !3163
  store { <2 x float>, float } %call102, { <2 x float>, float }* %tmp103, align 8, !dbg !3163
  %85 = bitcast { <2 x float>, float }* %tmp103 to i8*, !dbg !3163
  %86 = bitcast %struct.SVec3* %vSrcP to i8*, !dbg !3163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 8 %85, i64 12, i1 false), !dbg !3163
  %87 = bitcast { <2 x float>, float }* %vSrcP.coerce to i8*, !dbg !3164
  %88 = bitcast %struct.SVec3* %vSrcP to i8*, !dbg !3164
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 12, i1 false), !dbg !3164
  %89 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vSrcP.coerce, i32 0, i32 0, !dbg !3164
  %90 = load <2 x float>, <2 x float>* %89, align 4, !dbg !3164
  %91 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vSrcP.coerce, i32 0, i32 1, !dbg !3164
  %92 = load float, float* %91, align 4, !dbg !3164
  %93 = bitcast { <2 x float>, float }* %vDstP.coerce to i8*, !dbg !3164
  %94 = bitcast %struct.SVec3* %vDstP to i8*, !dbg !3164
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 12, i1 false), !dbg !3164
  %95 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vDstP.coerce, i32 0, i32 0, !dbg !3164
  %96 = load <2 x float>, <2 x float>* %95, align 4, !dbg !3164
  %97 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vDstP.coerce, i32 0, i32 1, !dbg !3164
  %98 = load float, float* %97, align 4, !dbg !3164
  %call104 = call i32 @veq(<2 x float> %90, float %92, <2 x float> %96, float %98), !dbg !3164
  %cmp105 = icmp eq i32 %call104, 1, !dbg !3166
  br i1 %cmp105, label %if.then107, label %if.else117, !dbg !3167

if.then107:                                       ; preds = %while.body96
  call void @llvm.dbg.declare(metadata i32* %iOffs, metadata !3168, metadata !DIExpression()), !dbg !3170
  %99 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !3171
  %100 = load i32, i32* %t, align 4, !dbg !3172
  %idxprom108 = sext i32 %100 to i64, !dbg !3171
  %arrayidx109 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %99, i64 %idxprom108, !dbg !3171
  %iTSpacesOffs110 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx109, i32 0, i32 8, !dbg !3173
  %101 = load i32, i32* %iTSpacesOffs110, align 8, !dbg !3173
  store i32 %101, i32* %iOffs, align 4, !dbg !3170
  %102 = load %struct.STSpace*, %struct.STSpace** %psTspace.addr, align 8, !dbg !3174
  %103 = load i32, i32* %iOffs, align 4, !dbg !3175
  %104 = load i32, i32* %iMissingIndex, align 4, !dbg !3176
  %add111 = add nsw i32 %103, %104, !dbg !3177
  %idxprom112 = sext i32 %add111 to i64, !dbg !3174
  %arrayidx113 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %102, i64 %idxprom112, !dbg !3174
  %105 = load %struct.STSpace*, %struct.STSpace** %psTspace.addr, align 8, !dbg !3178
  %106 = load i32, i32* %iOffs, align 4, !dbg !3179
  %107 = load i32, i32* %iVert97, align 4, !dbg !3180
  %add114 = add nsw i32 %106, %107, !dbg !3181
  %idxprom115 = sext i32 %add114 to i64, !dbg !3178
  %arrayidx116 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %105, i64 %idxprom115, !dbg !3178
  %108 = bitcast %struct.STSpace* %arrayidx113 to i8*, !dbg !3178
  %109 = bitcast %struct.STSpace* %arrayidx116 to i8*, !dbg !3178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 40, i1 false), !dbg !3178
  store i32 0, i32* %bNotFound55, align 4, !dbg !3182
  br label %if.end119, !dbg !3183

if.else117:                                       ; preds = %while.body96
  %110 = load i32, i32* %i54, align 4, !dbg !3184
  %inc118 = add nsw i32 %110, 1, !dbg !3184
  store i32 %inc118, i32* %i54, align 4, !dbg !3184
  br label %if.end119

if.end119:                                        ; preds = %if.else117, %if.then107
  br label %while.cond90, !dbg !3146, !llvm.loop !3185

while.end120:                                     ; preds = %land.end95
  br label %if.end121, !dbg !3187

if.end121:                                        ; preds = %while.end120, %for.body46
  br label %for.inc122, !dbg !3188

for.inc122:                                       ; preds = %if.end121
  %111 = load i32, i32* %t, align 4, !dbg !3189
  %inc123 = add nsw i32 %111, 1, !dbg !3189
  store i32 %inc123, i32* %t, align 4, !dbg !3189
  br label %for.cond43, !dbg !3190, !llvm.loop !3191

for.end124:                                       ; preds = %for.cond43
  ret void, !dbg !3193
}

; Function Attrs: noinline nounwind uwtable
define internal { <2 x float>, float } @vsub(<2 x float> %v1.coerce0, float %v1.coerce1, <2 x float> %v2.coerce0, float %v2.coerce1) #2 !dbg !3194 {
entry:
  %retval = alloca %struct.SVec3, align 4
  %v1 = alloca %struct.SVec3, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %v2 = alloca %struct.SVec3, align 4
  %coerce1 = alloca { <2 x float>, float }, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %v1.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %v1.coerce1, float* %1, align 4
  %2 = bitcast %struct.SVec3* %v1 to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  %4 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce1, i32 0, i32 0
  store <2 x float> %v2.coerce0, <2 x float>* %4, align 4
  %5 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce1, i32 0, i32 1
  store float %v2.coerce1, float* %5, align 4
  %6 = bitcast %struct.SVec3* %v2 to i8*
  %7 = bitcast { <2 x float>, float }* %coerce1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 12, i1 false)
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v1, metadata !3197, metadata !DIExpression()), !dbg !3198
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v2, metadata !3199, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.declare(metadata %struct.SVec3* %retval, metadata !3201, metadata !DIExpression()), !dbg !3202
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 0, !dbg !3203
  %8 = load float, float* %x, align 4, !dbg !3203
  %x2 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 0, !dbg !3204
  %9 = load float, float* %x2, align 4, !dbg !3204
  %sub = fsub float %8, %9, !dbg !3205
  %x3 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 0, !dbg !3206
  store float %sub, float* %x3, align 4, !dbg !3207
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 1, !dbg !3208
  %10 = load float, float* %y, align 4, !dbg !3208
  %y4 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 1, !dbg !3209
  %11 = load float, float* %y4, align 4, !dbg !3209
  %sub5 = fsub float %10, %11, !dbg !3210
  %y6 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 1, !dbg !3211
  store float %sub5, float* %y6, align 4, !dbg !3212
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 2, !dbg !3213
  %12 = load float, float* %z, align 4, !dbg !3213
  %z7 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 2, !dbg !3214
  %13 = load float, float* %z7, align 4, !dbg !3214
  %sub8 = fsub float %12, %13, !dbg !3215
  %z9 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 2, !dbg !3216
  store float %sub8, float* %z9, align 4, !dbg !3217
  %14 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !3218
  %15 = bitcast %struct.SVec3* %retval to i8*, !dbg !3218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 4 %15, i64 12, i1 false), !dbg !3218
  %16 = load { <2 x float>, float }, { <2 x float>, float }* %tmp, align 8, !dbg !3218
  ret { <2 x float>, float } %16, !dbg !3218
}

; Function Attrs: noinline nounwind uwtable
define internal void @GenerateSharedVerticesIndexListSlow(i32* %piTriList_in_and_out, %struct.SMikkTSpaceContext* %pContext, i32 %iNrTrianglesIn) #2 !dbg !3219 {
entry:
  %piTriList_in_and_out.addr = alloca i32*, align 8
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %iNrTrianglesIn.addr = alloca i32, align 4
  %iNumUniqueVerts = alloca i32, align 4
  %t = alloca i32, align 4
  %i = alloca i32, align 4
  %offs = alloca i32, align 4
  %index = alloca i32, align 4
  %vP = alloca %struct.SVec3, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %vN = alloca %struct.SVec3, align 4
  %tmp5 = alloca { <2 x float>, float }, align 8
  %vT = alloca %struct.SVec3, align 4
  %tmp7 = alloca { <2 x float>, float }, align 8
  %bFound = alloca i32, align 4
  %t2 = alloca i32, align 4
  %index2rec = alloca i32, align 4
  %j = alloca i32, align 4
  %index2 = alloca i32, align 4
  %vP2 = alloca %struct.SVec3, align 4
  %tmp20 = alloca { <2 x float>, float }, align 8
  %vN2 = alloca %struct.SVec3, align 4
  %tmp22 = alloca { <2 x float>, float }, align 8
  %vT2 = alloca %struct.SVec3, align 4
  %tmp24 = alloca { <2 x float>, float }, align 8
  %vP.coerce = alloca { <2 x float>, float }, align 4
  %vP2.coerce = alloca { <2 x float>, float }, align 4
  %vN.coerce = alloca { <2 x float>, float }, align 4
  %vN2.coerce = alloca { <2 x float>, float }, align 4
  %vT.coerce = alloca { <2 x float>, float }, align 4
  %vT2.coerce = alloca { <2 x float>, float }, align 4
  store i32* %piTriList_in_and_out, i32** %piTriList_in_and_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriList_in_and_out.addr, metadata !3220, metadata !DIExpression()), !dbg !3221
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !3222, metadata !DIExpression()), !dbg !3223
  store i32 %iNrTrianglesIn, i32* %iNrTrianglesIn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iNrTrianglesIn.addr, metadata !3224, metadata !DIExpression()), !dbg !3225
  call void @llvm.dbg.declare(metadata i32* %iNumUniqueVerts, metadata !3226, metadata !DIExpression()), !dbg !3227
  store i32 0, i32* %iNumUniqueVerts, align 4, !dbg !3227
  call void @llvm.dbg.declare(metadata i32* %t, metadata !3228, metadata !DIExpression()), !dbg !3229
  store i32 0, i32* %t, align 4, !dbg !3229
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3230, metadata !DIExpression()), !dbg !3231
  store i32 0, i32* %i, align 4, !dbg !3231
  store i32 0, i32* %t, align 4, !dbg !3232
  br label %for.cond, !dbg !3234

for.cond:                                         ; preds = %for.inc44, %entry
  %0 = load i32, i32* %t, align 4, !dbg !3235
  %1 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !3237
  %cmp = icmp slt i32 %0, %1, !dbg !3238
  br i1 %cmp, label %for.body, label %for.end46, !dbg !3239

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3240
  br label %for.cond1, !dbg !3243

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !3244
  %cmp2 = icmp slt i32 %2, 3, !dbg !3246
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3247

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !3248, metadata !DIExpression()), !dbg !3250
  %3 = load i32, i32* %t, align 4, !dbg !3251
  %mul = mul nsw i32 %3, 3, !dbg !3252
  %4 = load i32, i32* %i, align 4, !dbg !3253
  %add = add nsw i32 %mul, %4, !dbg !3254
  store i32 %add, i32* %offs, align 4, !dbg !3250
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3255, metadata !DIExpression()), !dbg !3256
  %5 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3257
  %6 = load i32, i32* %offs, align 4, !dbg !3258
  %idxprom = sext i32 %6 to i64, !dbg !3257
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !3257
  %7 = load i32, i32* %arrayidx, align 4, !dbg !3257
  store i32 %7, i32* %index, align 4, !dbg !3256
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vP, metadata !3259, metadata !DIExpression()), !dbg !3260
  %8 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3261
  %9 = load i32, i32* %index, align 4, !dbg !3262
  %call = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %8, i32 %9), !dbg !3263
  store { <2 x float>, float } %call, { <2 x float>, float }* %tmp, align 8, !dbg !3263
  %10 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !3263
  %11 = bitcast %struct.SVec3* %vP to i8*, !dbg !3263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 8 %10, i64 12, i1 false), !dbg !3263
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vN, metadata !3264, metadata !DIExpression()), !dbg !3265
  %12 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3266
  %13 = load i32, i32* %index, align 4, !dbg !3267
  %call4 = call { <2 x float>, float } @GetNormal(%struct.SMikkTSpaceContext* %12, i32 %13), !dbg !3268
  store { <2 x float>, float } %call4, { <2 x float>, float }* %tmp5, align 8, !dbg !3268
  %14 = bitcast { <2 x float>, float }* %tmp5 to i8*, !dbg !3268
  %15 = bitcast %struct.SVec3* %vN to i8*, !dbg !3268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 8 %14, i64 12, i1 false), !dbg !3268
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vT, metadata !3269, metadata !DIExpression()), !dbg !3270
  %16 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3271
  %17 = load i32, i32* %index, align 4, !dbg !3272
  %call6 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %16, i32 %17), !dbg !3273
  store { <2 x float>, float } %call6, { <2 x float>, float }* %tmp7, align 8, !dbg !3273
  %18 = bitcast { <2 x float>, float }* %tmp7 to i8*, !dbg !3273
  %19 = bitcast %struct.SVec3* %vT to i8*, !dbg !3273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 8 %18, i64 12, i1 false), !dbg !3273
  call void @llvm.dbg.declare(metadata i32* %bFound, metadata !3274, metadata !DIExpression()), !dbg !3275
  store i32 0, i32* %bFound, align 4, !dbg !3275
  call void @llvm.dbg.declare(metadata i32* %t2, metadata !3276, metadata !DIExpression()), !dbg !3277
  store i32 0, i32* %t2, align 4, !dbg !3277
  call void @llvm.dbg.declare(metadata i32* %index2rec, metadata !3278, metadata !DIExpression()), !dbg !3279
  store i32 -1, i32* %index2rec, align 4, !dbg !3279
  br label %while.cond, !dbg !3280

while.cond:                                       ; preds = %if.end35, %for.body3
  %20 = load i32, i32* %bFound, align 4, !dbg !3281
  %tobool = icmp ne i32 %20, 0, !dbg !3281
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3282

land.rhs:                                         ; preds = %while.cond
  %21 = load i32, i32* %t2, align 4, !dbg !3283
  %22 = load i32, i32* %t, align 4, !dbg !3284
  %cmp8 = icmp sle i32 %21, %22, !dbg !3285
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %23 = phi i1 [ false, %while.cond ], [ %cmp8, %land.rhs ], !dbg !3286
  br i1 %23, label %while.body, label %while.end36, !dbg !3280

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3287, metadata !DIExpression()), !dbg !3289
  store i32 0, i32* %j, align 4, !dbg !3289
  br label %while.cond9, !dbg !3290

while.cond9:                                      ; preds = %if.end, %while.body
  %24 = load i32, i32* %bFound, align 4, !dbg !3291
  %tobool10 = icmp ne i32 %24, 0, !dbg !3291
  br i1 %tobool10, label %land.end13, label %land.rhs11, !dbg !3292

land.rhs11:                                       ; preds = %while.cond9
  %25 = load i32, i32* %j, align 4, !dbg !3293
  %cmp12 = icmp slt i32 %25, 3, !dbg !3294
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond9
  %26 = phi i1 [ false, %while.cond9 ], [ %cmp12, %land.rhs11 ], !dbg !3295
  br i1 %26, label %while.body14, label %while.end, !dbg !3290

while.body14:                                     ; preds = %land.end13
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !3296, metadata !DIExpression()), !dbg !3298
  %27 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3299
  %28 = load i32, i32* %t2, align 4, !dbg !3300
  %mul15 = mul nsw i32 %28, 3, !dbg !3301
  %29 = load i32, i32* %j, align 4, !dbg !3302
  %add16 = add nsw i32 %mul15, %29, !dbg !3303
  %idxprom17 = sext i32 %add16 to i64, !dbg !3299
  %arrayidx18 = getelementptr inbounds i32, i32* %27, i64 %idxprom17, !dbg !3299
  %30 = load i32, i32* %arrayidx18, align 4, !dbg !3299
  store i32 %30, i32* %index2, align 4, !dbg !3298
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vP2, metadata !3304, metadata !DIExpression()), !dbg !3305
  %31 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3306
  %32 = load i32, i32* %index2, align 4, !dbg !3307
  %call19 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %31, i32 %32), !dbg !3308
  store { <2 x float>, float } %call19, { <2 x float>, float }* %tmp20, align 8, !dbg !3308
  %33 = bitcast { <2 x float>, float }* %tmp20 to i8*, !dbg !3308
  %34 = bitcast %struct.SVec3* %vP2 to i8*, !dbg !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 8 %33, i64 12, i1 false), !dbg !3308
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vN2, metadata !3309, metadata !DIExpression()), !dbg !3310
  %35 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3311
  %36 = load i32, i32* %index2, align 4, !dbg !3312
  %call21 = call { <2 x float>, float } @GetNormal(%struct.SMikkTSpaceContext* %35, i32 %36), !dbg !3313
  store { <2 x float>, float } %call21, { <2 x float>, float }* %tmp22, align 8, !dbg !3313
  %37 = bitcast { <2 x float>, float }* %tmp22 to i8*, !dbg !3313
  %38 = bitcast %struct.SVec3* %vN2 to i8*, !dbg !3313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 8 %37, i64 12, i1 false), !dbg !3313
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vT2, metadata !3314, metadata !DIExpression()), !dbg !3315
  %39 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3316
  %40 = load i32, i32* %index2, align 4, !dbg !3317
  %call23 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %39, i32 %40), !dbg !3318
  store { <2 x float>, float } %call23, { <2 x float>, float }* %tmp24, align 8, !dbg !3318
  %41 = bitcast { <2 x float>, float }* %tmp24 to i8*, !dbg !3318
  %42 = bitcast %struct.SVec3* %vT2 to i8*, !dbg !3318
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 8 %41, i64 12, i1 false), !dbg !3318
  %43 = bitcast { <2 x float>, float }* %vP.coerce to i8*, !dbg !3319
  %44 = bitcast %struct.SVec3* %vP to i8*, !dbg !3319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %44, i64 12, i1 false), !dbg !3319
  %45 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vP.coerce, i32 0, i32 0, !dbg !3319
  %46 = load <2 x float>, <2 x float>* %45, align 4, !dbg !3319
  %47 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vP.coerce, i32 0, i32 1, !dbg !3319
  %48 = load float, float* %47, align 4, !dbg !3319
  %49 = bitcast { <2 x float>, float }* %vP2.coerce to i8*, !dbg !3319
  %50 = bitcast %struct.SVec3* %vP2 to i8*, !dbg !3319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 12, i1 false), !dbg !3319
  %51 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vP2.coerce, i32 0, i32 0, !dbg !3319
  %52 = load <2 x float>, <2 x float>* %51, align 4, !dbg !3319
  %53 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vP2.coerce, i32 0, i32 1, !dbg !3319
  %54 = load float, float* %53, align 4, !dbg !3319
  %call25 = call i32 @veq(<2 x float> %46, float %48, <2 x float> %52, float %54), !dbg !3319
  %tobool26 = icmp ne i32 %call25, 0, !dbg !3319
  br i1 %tobool26, label %land.lhs.true, label %if.else, !dbg !3321

land.lhs.true:                                    ; preds = %while.body14
  %55 = bitcast { <2 x float>, float }* %vN.coerce to i8*, !dbg !3322
  %56 = bitcast %struct.SVec3* %vN to i8*, !dbg !3322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56, i64 12, i1 false), !dbg !3322
  %57 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vN.coerce, i32 0, i32 0, !dbg !3322
  %58 = load <2 x float>, <2 x float>* %57, align 4, !dbg !3322
  %59 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vN.coerce, i32 0, i32 1, !dbg !3322
  %60 = load float, float* %59, align 4, !dbg !3322
  %61 = bitcast { <2 x float>, float }* %vN2.coerce to i8*, !dbg !3322
  %62 = bitcast %struct.SVec3* %vN2 to i8*, !dbg !3322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 12, i1 false), !dbg !3322
  %63 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vN2.coerce, i32 0, i32 0, !dbg !3322
  %64 = load <2 x float>, <2 x float>* %63, align 4, !dbg !3322
  %65 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vN2.coerce, i32 0, i32 1, !dbg !3322
  %66 = load float, float* %65, align 4, !dbg !3322
  %call27 = call i32 @veq(<2 x float> %58, float %60, <2 x float> %64, float %66), !dbg !3322
  %tobool28 = icmp ne i32 %call27, 0, !dbg !3322
  br i1 %tobool28, label %land.lhs.true29, label %if.else, !dbg !3323

land.lhs.true29:                                  ; preds = %land.lhs.true
  %67 = bitcast { <2 x float>, float }* %vT.coerce to i8*, !dbg !3324
  %68 = bitcast %struct.SVec3* %vT to i8*, !dbg !3324
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 12, i1 false), !dbg !3324
  %69 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vT.coerce, i32 0, i32 0, !dbg !3324
  %70 = load <2 x float>, <2 x float>* %69, align 4, !dbg !3324
  %71 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vT.coerce, i32 0, i32 1, !dbg !3324
  %72 = load float, float* %71, align 4, !dbg !3324
  %73 = bitcast { <2 x float>, float }* %vT2.coerce to i8*, !dbg !3324
  %74 = bitcast %struct.SVec3* %vT2 to i8*, !dbg !3324
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 12, i1 false), !dbg !3324
  %75 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vT2.coerce, i32 0, i32 0, !dbg !3324
  %76 = load <2 x float>, <2 x float>* %75, align 4, !dbg !3324
  %77 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vT2.coerce, i32 0, i32 1, !dbg !3324
  %78 = load float, float* %77, align 4, !dbg !3324
  %call30 = call i32 @veq(<2 x float> %70, float %72, <2 x float> %76, float %78), !dbg !3324
  %tobool31 = icmp ne i32 %call30, 0, !dbg !3324
  br i1 %tobool31, label %if.then, label %if.else, !dbg !3325

if.then:                                          ; preds = %land.lhs.true29
  store i32 1, i32* %bFound, align 4, !dbg !3326
  br label %if.end, !dbg !3327

if.else:                                          ; preds = %land.lhs.true29, %land.lhs.true, %while.body14
  %79 = load i32, i32* %j, align 4, !dbg !3328
  %inc = add nsw i32 %79, 1, !dbg !3328
  store i32 %inc, i32* %j, align 4, !dbg !3328
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond9, !dbg !3290, !llvm.loop !3329

while.end:                                        ; preds = %land.end13
  %80 = load i32, i32* %bFound, align 4, !dbg !3331
  %tobool32 = icmp ne i32 %80, 0, !dbg !3331
  br i1 %tobool32, label %if.end35, label %if.then33, !dbg !3333

if.then33:                                        ; preds = %while.end
  %81 = load i32, i32* %t2, align 4, !dbg !3334
  %inc34 = add nsw i32 %81, 1, !dbg !3334
  store i32 %inc34, i32* %t2, align 4, !dbg !3334
  br label %if.end35, !dbg !3334

if.end35:                                         ; preds = %if.then33, %while.end
  br label %while.cond, !dbg !3280, !llvm.loop !3335

while.end36:                                      ; preds = %land.end
  %82 = load i32, i32* %index2rec, align 4, !dbg !3337
  %83 = load i32, i32* %index, align 4, !dbg !3339
  %cmp37 = icmp eq i32 %82, %83, !dbg !3340
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !3341

if.then38:                                        ; preds = %while.end36
  %84 = load i32, i32* %iNumUniqueVerts, align 4, !dbg !3342
  %inc39 = add nsw i32 %84, 1, !dbg !3342
  store i32 %inc39, i32* %iNumUniqueVerts, align 4, !dbg !3342
  br label %if.end40, !dbg !3344

if.end40:                                         ; preds = %if.then38, %while.end36
  %85 = load i32, i32* %index2rec, align 4, !dbg !3345
  %86 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3346
  %87 = load i32, i32* %offs, align 4, !dbg !3347
  %idxprom41 = sext i32 %87 to i64, !dbg !3346
  %arrayidx42 = getelementptr inbounds i32, i32* %86, i64 %idxprom41, !dbg !3346
  store i32 %85, i32* %arrayidx42, align 4, !dbg !3348
  br label %for.inc, !dbg !3349

for.inc:                                          ; preds = %if.end40
  %88 = load i32, i32* %i, align 4, !dbg !3350
  %inc43 = add nsw i32 %88, 1, !dbg !3350
  store i32 %inc43, i32* %i, align 4, !dbg !3350
  br label %for.cond1, !dbg !3351, !llvm.loop !3352

for.end:                                          ; preds = %for.cond1
  br label %for.inc44, !dbg !3354

for.inc44:                                        ; preds = %for.end
  %89 = load i32, i32* %t, align 4, !dbg !3355
  %inc45 = add nsw i32 %89, 1, !dbg !3355
  store i32 %inc45, i32* %t, align 4, !dbg !3355
  br label %for.cond, !dbg !3356, !llvm.loop !3357

for.end46:                                        ; preds = %for.cond
  ret void, !dbg !3359
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @FindGridCell(float %fMin, float %fMax, float %fVal) #0 !dbg !3360 {
entry:
  %fMin.addr = alloca float, align 4
  %fMax.addr = alloca float, align 4
  %fVal.addr = alloca float, align 4
  %fIndex = alloca float, align 4
  %iIndex = alloca i32, align 4
  store float %fMin, float* %fMin.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fMin.addr, metadata !3363, metadata !DIExpression()), !dbg !3364
  store float %fMax, float* %fMax.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fMax.addr, metadata !3365, metadata !DIExpression()), !dbg !3366
  store float %fVal, float* %fVal.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fVal.addr, metadata !3367, metadata !DIExpression()), !dbg !3368
  call void @llvm.dbg.declare(metadata float* %fIndex, metadata !3369, metadata !DIExpression()), !dbg !3370
  %0 = load float, float* %fVal.addr, align 4, !dbg !3371
  %1 = load float, float* %fMin.addr, align 4, !dbg !3372
  %sub = fsub float %0, %1, !dbg !3373
  %2 = load float, float* %fMax.addr, align 4, !dbg !3374
  %3 = load float, float* %fMin.addr, align 4, !dbg !3375
  %sub1 = fsub float %2, %3, !dbg !3376
  %div = fdiv float %sub, %sub1, !dbg !3377
  %mul = fmul float 2.048000e+03, %div, !dbg !3378
  store float %mul, float* %fIndex, align 4, !dbg !3370
  call void @llvm.dbg.declare(metadata i32* %iIndex, metadata !3379, metadata !DIExpression()), !dbg !3380
  %4 = load float, float* %fIndex, align 4, !dbg !3381
  %conv = fptosi float %4 to i32, !dbg !3382
  store i32 %conv, i32* %iIndex, align 4, !dbg !3380
  %5 = load i32, i32* %iIndex, align 4, !dbg !3383
  %cmp = icmp slt i32 %5, 2048, !dbg !3384
  br i1 %cmp, label %cond.true, label %cond.false6, !dbg !3383

cond.true:                                        ; preds = %entry
  %6 = load i32, i32* %iIndex, align 4, !dbg !3385
  %cmp3 = icmp sge i32 %6, 0, !dbg !3386
  br i1 %cmp3, label %cond.true5, label %cond.false, !dbg !3385

cond.true5:                                       ; preds = %cond.true
  %7 = load i32, i32* %iIndex, align 4, !dbg !3387
  br label %cond.end, !dbg !3385

cond.false:                                       ; preds = %cond.true
  br label %cond.end, !dbg !3385

cond.end:                                         ; preds = %cond.false, %cond.true5
  %cond = phi i32 [ %7, %cond.true5 ], [ 0, %cond.false ], !dbg !3385
  br label %cond.end7, !dbg !3383

cond.false6:                                      ; preds = %entry
  br label %cond.end7, !dbg !3383

cond.end7:                                        ; preds = %cond.false6, %cond.end
  %cond8 = phi i32 [ %cond, %cond.end ], [ 2047, %cond.false6 ], !dbg !3383
  ret i32 %cond8, !dbg !3388
}

; Function Attrs: noinline nounwind uwtable
define internal void @MergeVertsFast(i32* %piTriList_in_and_out, %struct.STmpVert* %pTmpVert, %struct.SMikkTSpaceContext* %pContext, i32 %iL_in, i32 %iR_in) #0 !dbg !3389 {
entry:
  %piTriList_in_and_out.addr = alloca i32*, align 8
  %pTmpVert.addr = alloca %struct.STmpVert*, align 8
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %iL_in.addr = alloca i32, align 4
  %iR_in.addr = alloca i32, align 4
  %c = alloca i32, align 4
  %l = alloca i32, align 4
  %channel = alloca i32, align 4
  %fvMin = alloca [3 x float], align 4
  %fvMax = alloca [3 x float], align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %dz = alloca float, align 4
  %fSep = alloca float, align 4
  %i = alloca i32, align 4
  %index86 = alloca i32, align 4
  %vP = alloca %struct.SVec3, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %vN = alloca %struct.SVec3, align 4
  %tmp90 = alloca { <2 x float>, float }, align 8
  %vT = alloca %struct.SVec3, align 4
  %tmp92 = alloca { <2 x float>, float }, align 8
  %bNotFound = alloca i32, align 4
  %l2 = alloca i32, align 4
  %i2rec = alloca i32, align 4
  %i2 = alloca i32, align 4
  %index2 = alloca i32, align 4
  %vP2 = alloca %struct.SVec3, align 4
  %tmp100 = alloca { <2 x float>, float }, align 8
  %vN2 = alloca %struct.SVec3, align 4
  %tmp102 = alloca { <2 x float>, float }, align 8
  %vT2 = alloca %struct.SVec3, align 4
  %tmp104 = alloca { <2 x float>, float }, align 8
  %iL = alloca i32, align 4
  %iR = alloca i32, align 4
  %bReadyLeftSwap = alloca i32, align 4
  %bReadyRightSwap = alloca i32, align 4
  %sTmp = alloca %struct.STmpVert, align 4
  %bReadyRightSwap207 = alloca i32, align 4
  store i32* %piTriList_in_and_out, i32** %piTriList_in_and_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriList_in_and_out.addr, metadata !3392, metadata !DIExpression()), !dbg !3393
  store %struct.STmpVert* %pTmpVert, %struct.STmpVert** %pTmpVert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STmpVert** %pTmpVert.addr, metadata !3394, metadata !DIExpression()), !dbg !3395
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !3396, metadata !DIExpression()), !dbg !3397
  store i32 %iL_in, i32* %iL_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iL_in.addr, metadata !3398, metadata !DIExpression()), !dbg !3399
  store i32 %iR_in, i32* %iR_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iR_in.addr, metadata !3400, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.declare(metadata i32* %c, metadata !3402, metadata !DIExpression()), !dbg !3403
  store i32 0, i32* %c, align 4, !dbg !3403
  call void @llvm.dbg.declare(metadata i32* %l, metadata !3404, metadata !DIExpression()), !dbg !3405
  store i32 0, i32* %l, align 4, !dbg !3405
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !3406, metadata !DIExpression()), !dbg !3407
  store i32 0, i32* %channel, align 4, !dbg !3407
  call void @llvm.dbg.declare(metadata [3 x float]* %fvMin, metadata !3408, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.declare(metadata [3 x float]* %fvMax, metadata !3410, metadata !DIExpression()), !dbg !3411
  call void @llvm.dbg.declare(metadata float* %dx, metadata !3412, metadata !DIExpression()), !dbg !3413
  store float 0.000000e+00, float* %dx, align 4, !dbg !3413
  call void @llvm.dbg.declare(metadata float* %dy, metadata !3414, metadata !DIExpression()), !dbg !3415
  store float 0.000000e+00, float* %dy, align 4, !dbg !3415
  call void @llvm.dbg.declare(metadata float* %dz, metadata !3416, metadata !DIExpression()), !dbg !3417
  store float 0.000000e+00, float* %dz, align 4, !dbg !3417
  call void @llvm.dbg.declare(metadata float* %fSep, metadata !3418, metadata !DIExpression()), !dbg !3419
  store float 0.000000e+00, float* %fSep, align 4, !dbg !3419
  store i32 0, i32* %c, align 4, !dbg !3420
  br label %for.cond, !dbg !3422

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %c, align 4, !dbg !3423
  %cmp = icmp slt i32 %0, 3, !dbg !3425
  br i1 %cmp, label %for.body, label %for.end, !dbg !3426

for.body:                                         ; preds = %for.cond
  %1 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3427
  %2 = load i32, i32* %iL_in.addr, align 4, !dbg !3429
  %idxprom = sext i32 %2 to i64, !dbg !3427
  %arrayidx = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %1, i64 %idxprom, !dbg !3427
  %vert = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx, i32 0, i32 0, !dbg !3430
  %3 = load i32, i32* %c, align 4, !dbg !3431
  %idxprom1 = sext i32 %3 to i64, !dbg !3427
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %vert, i64 0, i64 %idxprom1, !dbg !3427
  %4 = load float, float* %arrayidx2, align 4, !dbg !3427
  %5 = load i32, i32* %c, align 4, !dbg !3432
  %idxprom3 = sext i32 %5 to i64, !dbg !3433
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %fvMin, i64 0, i64 %idxprom3, !dbg !3433
  store float %4, float* %arrayidx4, align 4, !dbg !3434
  %6 = load i32, i32* %c, align 4, !dbg !3435
  %idxprom5 = sext i32 %6 to i64, !dbg !3436
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %fvMin, i64 0, i64 %idxprom5, !dbg !3436
  %7 = load float, float* %arrayidx6, align 4, !dbg !3436
  %8 = load i32, i32* %c, align 4, !dbg !3437
  %idxprom7 = sext i32 %8 to i64, !dbg !3438
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %fvMax, i64 0, i64 %idxprom7, !dbg !3438
  store float %7, float* %arrayidx8, align 4, !dbg !3439
  br label %for.inc, !dbg !3440

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %c, align 4, !dbg !3441
  %inc = add nsw i32 %9, 1, !dbg !3441
  store i32 %inc, i32* %c, align 4, !dbg !3441
  br label %for.cond, !dbg !3442, !llvm.loop !3443

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %iL_in.addr, align 4, !dbg !3445
  %add = add nsw i32 %10, 1, !dbg !3447
  store i32 %add, i32* %l, align 4, !dbg !3448
  br label %for.cond9, !dbg !3449

for.cond9:                                        ; preds = %for.inc50, %for.end
  %11 = load i32, i32* %l, align 4, !dbg !3450
  %12 = load i32, i32* %iR_in.addr, align 4, !dbg !3452
  %cmp10 = icmp sle i32 %11, %12, !dbg !3453
  br i1 %cmp10, label %for.body11, label %for.end52, !dbg !3454

for.body11:                                       ; preds = %for.cond9
  store i32 0, i32* %c, align 4, !dbg !3455
  br label %for.cond12, !dbg !3457

for.cond12:                                       ; preds = %for.inc47, %for.body11
  %13 = load i32, i32* %c, align 4, !dbg !3458
  %cmp13 = icmp slt i32 %13, 3, !dbg !3460
  br i1 %cmp13, label %for.body14, label %for.end49, !dbg !3461

for.body14:                                       ; preds = %for.cond12
  %14 = load i32, i32* %c, align 4, !dbg !3462
  %idxprom15 = sext i32 %14 to i64, !dbg !3464
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %fvMin, i64 0, i64 %idxprom15, !dbg !3464
  %15 = load float, float* %arrayidx16, align 4, !dbg !3464
  %16 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3465
  %17 = load i32, i32* %l, align 4, !dbg !3466
  %idxprom17 = sext i32 %17 to i64, !dbg !3465
  %arrayidx18 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %16, i64 %idxprom17, !dbg !3465
  %vert19 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx18, i32 0, i32 0, !dbg !3467
  %18 = load i32, i32* %c, align 4, !dbg !3468
  %idxprom20 = sext i32 %18 to i64, !dbg !3465
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %vert19, i64 0, i64 %idxprom20, !dbg !3465
  %19 = load float, float* %arrayidx21, align 4, !dbg !3465
  %cmp22 = fcmp ogt float %15, %19, !dbg !3469
  br i1 %cmp22, label %if.then, label %if.else, !dbg !3470

if.then:                                          ; preds = %for.body14
  %20 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3471
  %21 = load i32, i32* %l, align 4, !dbg !3472
  %idxprom23 = sext i32 %21 to i64, !dbg !3471
  %arrayidx24 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %20, i64 %idxprom23, !dbg !3471
  %vert25 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx24, i32 0, i32 0, !dbg !3473
  %22 = load i32, i32* %c, align 4, !dbg !3474
  %idxprom26 = sext i32 %22 to i64, !dbg !3471
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %vert25, i64 0, i64 %idxprom26, !dbg !3471
  %23 = load float, float* %arrayidx27, align 4, !dbg !3471
  %24 = load i32, i32* %c, align 4, !dbg !3475
  %idxprom28 = sext i32 %24 to i64, !dbg !3476
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %fvMin, i64 0, i64 %idxprom28, !dbg !3476
  store float %23, float* %arrayidx29, align 4, !dbg !3477
  br label %if.end46, !dbg !3476

if.else:                                          ; preds = %for.body14
  %25 = load i32, i32* %c, align 4, !dbg !3478
  %idxprom30 = sext i32 %25 to i64, !dbg !3480
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %fvMax, i64 0, i64 %idxprom30, !dbg !3480
  %26 = load float, float* %arrayidx31, align 4, !dbg !3480
  %27 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3481
  %28 = load i32, i32* %l, align 4, !dbg !3482
  %idxprom32 = sext i32 %28 to i64, !dbg !3481
  %arrayidx33 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %27, i64 %idxprom32, !dbg !3481
  %vert34 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx33, i32 0, i32 0, !dbg !3483
  %29 = load i32, i32* %c, align 4, !dbg !3484
  %idxprom35 = sext i32 %29 to i64, !dbg !3481
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %vert34, i64 0, i64 %idxprom35, !dbg !3481
  %30 = load float, float* %arrayidx36, align 4, !dbg !3481
  %cmp37 = fcmp olt float %26, %30, !dbg !3485
  br i1 %cmp37, label %if.then38, label %if.end, !dbg !3486

if.then38:                                        ; preds = %if.else
  %31 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3487
  %32 = load i32, i32* %l, align 4, !dbg !3488
  %idxprom39 = sext i32 %32 to i64, !dbg !3487
  %arrayidx40 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %31, i64 %idxprom39, !dbg !3487
  %vert41 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx40, i32 0, i32 0, !dbg !3489
  %33 = load i32, i32* %c, align 4, !dbg !3490
  %idxprom42 = sext i32 %33 to i64, !dbg !3487
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %vert41, i64 0, i64 %idxprom42, !dbg !3487
  %34 = load float, float* %arrayidx43, align 4, !dbg !3487
  %35 = load i32, i32* %c, align 4, !dbg !3491
  %idxprom44 = sext i32 %35 to i64, !dbg !3492
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %fvMax, i64 0, i64 %idxprom44, !dbg !3492
  store float %34, float* %arrayidx45, align 4, !dbg !3493
  br label %if.end, !dbg !3492

if.end:                                           ; preds = %if.then38, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end, %if.then
  br label %for.inc47, !dbg !3494

for.inc47:                                        ; preds = %if.end46
  %36 = load i32, i32* %c, align 4, !dbg !3495
  %inc48 = add nsw i32 %36, 1, !dbg !3495
  store i32 %inc48, i32* %c, align 4, !dbg !3495
  br label %for.cond12, !dbg !3496, !llvm.loop !3497

for.end49:                                        ; preds = %for.cond12
  br label %for.inc50, !dbg !3498

for.inc50:                                        ; preds = %for.end49
  %37 = load i32, i32* %l, align 4, !dbg !3499
  %inc51 = add nsw i32 %37, 1, !dbg !3499
  store i32 %inc51, i32* %l, align 4, !dbg !3499
  br label %for.cond9, !dbg !3500, !llvm.loop !3501

for.end52:                                        ; preds = %for.cond9
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %fvMax, i64 0, i64 0, !dbg !3503
  %38 = load float, float* %arrayidx53, align 4, !dbg !3503
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %fvMin, i64 0, i64 0, !dbg !3504
  %39 = load float, float* %arrayidx54, align 4, !dbg !3504
  %sub = fsub float %38, %39, !dbg !3505
  store float %sub, float* %dx, align 4, !dbg !3506
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %fvMax, i64 0, i64 1, !dbg !3507
  %40 = load float, float* %arrayidx55, align 4, !dbg !3507
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %fvMin, i64 0, i64 1, !dbg !3508
  %41 = load float, float* %arrayidx56, align 4, !dbg !3508
  %sub57 = fsub float %40, %41, !dbg !3509
  store float %sub57, float* %dy, align 4, !dbg !3510
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %fvMax, i64 0, i64 2, !dbg !3511
  %42 = load float, float* %arrayidx58, align 4, !dbg !3511
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %fvMin, i64 0, i64 2, !dbg !3512
  %43 = load float, float* %arrayidx59, align 4, !dbg !3512
  %sub60 = fsub float %42, %43, !dbg !3513
  store float %sub60, float* %dz, align 4, !dbg !3514
  store i32 0, i32* %channel, align 4, !dbg !3515
  %44 = load float, float* %dy, align 4, !dbg !3516
  %45 = load float, float* %dx, align 4, !dbg !3518
  %cmp61 = fcmp ogt float %44, %45, !dbg !3519
  br i1 %cmp61, label %land.lhs.true, label %if.else64, !dbg !3520

land.lhs.true:                                    ; preds = %for.end52
  %46 = load float, float* %dy, align 4, !dbg !3521
  %47 = load float, float* %dz, align 4, !dbg !3522
  %cmp62 = fcmp ogt float %46, %47, !dbg !3523
  br i1 %cmp62, label %if.then63, label %if.else64, !dbg !3524

if.then63:                                        ; preds = %land.lhs.true
  store i32 1, i32* %channel, align 4, !dbg !3525
  br label %if.end68, !dbg !3526

if.else64:                                        ; preds = %land.lhs.true, %for.end52
  %48 = load float, float* %dz, align 4, !dbg !3527
  %49 = load float, float* %dx, align 4, !dbg !3529
  %cmp65 = fcmp ogt float %48, %49, !dbg !3530
  br i1 %cmp65, label %if.then66, label %if.end67, !dbg !3531

if.then66:                                        ; preds = %if.else64
  store i32 2, i32* %channel, align 4, !dbg !3532
  br label %if.end67, !dbg !3533

if.end67:                                         ; preds = %if.then66, %if.else64
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then63
  %50 = load i32, i32* %channel, align 4, !dbg !3534
  %idxprom69 = sext i32 %50 to i64, !dbg !3535
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %fvMax, i64 0, i64 %idxprom69, !dbg !3535
  %51 = load float, float* %arrayidx70, align 4, !dbg !3535
  %52 = load i32, i32* %channel, align 4, !dbg !3536
  %idxprom71 = sext i32 %52 to i64, !dbg !3537
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %fvMin, i64 0, i64 %idxprom71, !dbg !3537
  %53 = load float, float* %arrayidx72, align 4, !dbg !3537
  %add73 = fadd float %51, %53, !dbg !3538
  %mul = fmul float 5.000000e-01, %add73, !dbg !3539
  store float %mul, float* %fSep, align 4, !dbg !3540
  %54 = load float, float* %fSep, align 4, !dbg !3541
  %55 = load i32, i32* %channel, align 4, !dbg !3543
  %idxprom74 = sext i32 %55 to i64, !dbg !3544
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %fvMax, i64 0, i64 %idxprom74, !dbg !3544
  %56 = load float, float* %arrayidx75, align 4, !dbg !3544
  %cmp76 = fcmp oge float %54, %56, !dbg !3545
  br i1 %cmp76, label %if.then80, label %lor.lhs.false, !dbg !3546

lor.lhs.false:                                    ; preds = %if.end68
  %57 = load float, float* %fSep, align 4, !dbg !3547
  %58 = load i32, i32* %channel, align 4, !dbg !3548
  %idxprom77 = sext i32 %58 to i64, !dbg !3549
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %fvMin, i64 0, i64 %idxprom77, !dbg !3549
  %59 = load float, float* %arrayidx78, align 4, !dbg !3549
  %cmp79 = fcmp ole float %57, %59, !dbg !3550
  br i1 %cmp79, label %if.then80, label %if.else151, !dbg !3551

if.then80:                                        ; preds = %lor.lhs.false, %if.end68
  %60 = load i32, i32* %iL_in.addr, align 4, !dbg !3552
  store i32 %60, i32* %l, align 4, !dbg !3555
  br label %for.cond81, !dbg !3556

for.cond81:                                       ; preds = %for.inc148, %if.then80
  %61 = load i32, i32* %l, align 4, !dbg !3557
  %62 = load i32, i32* %iR_in.addr, align 4, !dbg !3559
  %cmp82 = icmp sle i32 %61, %62, !dbg !3560
  br i1 %cmp82, label %for.body83, label %for.end150, !dbg !3561

for.body83:                                       ; preds = %for.cond81
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3562, metadata !DIExpression()), !dbg !3564
  %63 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3565
  %64 = load i32, i32* %l, align 4, !dbg !3566
  %idxprom84 = sext i32 %64 to i64, !dbg !3565
  %arrayidx85 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %63, i64 %idxprom84, !dbg !3565
  %index = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx85, i32 0, i32 1, !dbg !3567
  %65 = load i32, i32* %index, align 4, !dbg !3567
  store i32 %65, i32* %i, align 4, !dbg !3564
  call void @llvm.dbg.declare(metadata i32* %index86, metadata !3568, metadata !DIExpression()), !dbg !3569
  %66 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3570
  %67 = load i32, i32* %i, align 4, !dbg !3571
  %idxprom87 = sext i32 %67 to i64, !dbg !3570
  %arrayidx88 = getelementptr inbounds i32, i32* %66, i64 %idxprom87, !dbg !3570
  %68 = load i32, i32* %arrayidx88, align 4, !dbg !3570
  store i32 %68, i32* %index86, align 4, !dbg !3569
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vP, metadata !3572, metadata !DIExpression()), !dbg !3573
  %69 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3574
  %70 = load i32, i32* %index86, align 4, !dbg !3575
  %call = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %69, i32 %70), !dbg !3576
  store { <2 x float>, float } %call, { <2 x float>, float }* %tmp, align 8, !dbg !3576
  %71 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !3576
  %72 = bitcast %struct.SVec3* %vP to i8*, !dbg !3576
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 8 %71, i64 12, i1 false), !dbg !3576
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vN, metadata !3577, metadata !DIExpression()), !dbg !3578
  %73 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3579
  %74 = load i32, i32* %index86, align 4, !dbg !3580
  %call89 = call { <2 x float>, float } @GetNormal(%struct.SMikkTSpaceContext* %73, i32 %74), !dbg !3581
  store { <2 x float>, float } %call89, { <2 x float>, float }* %tmp90, align 8, !dbg !3581
  %75 = bitcast { <2 x float>, float }* %tmp90 to i8*, !dbg !3581
  %76 = bitcast %struct.SVec3* %vN to i8*, !dbg !3581
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 8 %75, i64 12, i1 false), !dbg !3581
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vT, metadata !3582, metadata !DIExpression()), !dbg !3583
  %77 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3584
  %78 = load i32, i32* %index86, align 4, !dbg !3585
  %call91 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %77, i32 %78), !dbg !3586
  store { <2 x float>, float } %call91, { <2 x float>, float }* %tmp92, align 8, !dbg !3586
  %79 = bitcast { <2 x float>, float }* %tmp92 to i8*, !dbg !3586
  %80 = bitcast %struct.SVec3* %vT to i8*, !dbg !3586
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 8 %79, i64 12, i1 false), !dbg !3586
  call void @llvm.dbg.declare(metadata i32* %bNotFound, metadata !3587, metadata !DIExpression()), !dbg !3588
  store i32 1, i32* %bNotFound, align 4, !dbg !3588
  call void @llvm.dbg.declare(metadata i32* %l2, metadata !3589, metadata !DIExpression()), !dbg !3590
  %81 = load i32, i32* %iL_in.addr, align 4, !dbg !3591
  store i32 %81, i32* %l2, align 4, !dbg !3590
  call void @llvm.dbg.declare(metadata i32* %i2rec, metadata !3592, metadata !DIExpression()), !dbg !3593
  store i32 -1, i32* %i2rec, align 4, !dbg !3593
  br label %while.cond, !dbg !3594

while.cond:                                       ; preds = %if.end140, %for.body83
  %82 = load i32, i32* %l2, align 4, !dbg !3595
  %83 = load i32, i32* %l, align 4, !dbg !3596
  %cmp93 = icmp slt i32 %82, %83, !dbg !3597
  br i1 %cmp93, label %land.rhs, label %land.end, !dbg !3598

land.rhs:                                         ; preds = %while.cond
  %84 = load i32, i32* %bNotFound, align 4, !dbg !3599
  %tobool = icmp ne i32 %84, 0, !dbg !3598
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %85 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !3600
  br i1 %85, label %while.body, label %while.end, !dbg !3594

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !3601, metadata !DIExpression()), !dbg !3603
  %86 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3604
  %87 = load i32, i32* %l2, align 4, !dbg !3605
  %idxprom94 = sext i32 %87 to i64, !dbg !3604
  %arrayidx95 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %86, i64 %idxprom94, !dbg !3604
  %index96 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx95, i32 0, i32 1, !dbg !3606
  %88 = load i32, i32* %index96, align 4, !dbg !3606
  store i32 %88, i32* %i2, align 4, !dbg !3603
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !3607, metadata !DIExpression()), !dbg !3608
  %89 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3609
  %90 = load i32, i32* %i2, align 4, !dbg !3610
  %idxprom97 = sext i32 %90 to i64, !dbg !3609
  %arrayidx98 = getelementptr inbounds i32, i32* %89, i64 %idxprom97, !dbg !3609
  %91 = load i32, i32* %arrayidx98, align 4, !dbg !3609
  store i32 %91, i32* %index2, align 4, !dbg !3608
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vP2, metadata !3611, metadata !DIExpression()), !dbg !3612
  %92 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3613
  %93 = load i32, i32* %index2, align 4, !dbg !3614
  %call99 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %92, i32 %93), !dbg !3615
  store { <2 x float>, float } %call99, { <2 x float>, float }* %tmp100, align 8, !dbg !3615
  %94 = bitcast { <2 x float>, float }* %tmp100 to i8*, !dbg !3615
  %95 = bitcast %struct.SVec3* %vP2 to i8*, !dbg !3615
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 8 %94, i64 12, i1 false), !dbg !3615
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vN2, metadata !3616, metadata !DIExpression()), !dbg !3617
  %96 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3618
  %97 = load i32, i32* %index2, align 4, !dbg !3619
  %call101 = call { <2 x float>, float } @GetNormal(%struct.SMikkTSpaceContext* %96, i32 %97), !dbg !3620
  store { <2 x float>, float } %call101, { <2 x float>, float }* %tmp102, align 8, !dbg !3620
  %98 = bitcast { <2 x float>, float }* %tmp102 to i8*, !dbg !3620
  %99 = bitcast %struct.SVec3* %vN2 to i8*, !dbg !3620
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 8 %98, i64 12, i1 false), !dbg !3620
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vT2, metadata !3621, metadata !DIExpression()), !dbg !3622
  %100 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3623
  %101 = load i32, i32* %index2, align 4, !dbg !3624
  %call103 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %100, i32 %101), !dbg !3625
  store { <2 x float>, float } %call103, { <2 x float>, float }* %tmp104, align 8, !dbg !3625
  %102 = bitcast { <2 x float>, float }* %tmp104 to i8*, !dbg !3625
  %103 = bitcast %struct.SVec3* %vT2 to i8*, !dbg !3625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 8 %102, i64 12, i1 false), !dbg !3625
  %104 = load i32, i32* %i2, align 4, !dbg !3626
  store i32 %104, i32* %i2rec, align 4, !dbg !3627
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 0, !dbg !3628
  %105 = load float, float* %x, align 4, !dbg !3628
  %x105 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP2, i32 0, i32 0, !dbg !3630
  %106 = load float, float* %x105, align 4, !dbg !3630
  %cmp106 = fcmp oeq float %105, %106, !dbg !3631
  br i1 %cmp106, label %land.lhs.true107, label %if.else138, !dbg !3632

land.lhs.true107:                                 ; preds = %while.body
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 1, !dbg !3633
  %107 = load float, float* %y, align 4, !dbg !3633
  %y108 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP2, i32 0, i32 1, !dbg !3634
  %108 = load float, float* %y108, align 4, !dbg !3634
  %cmp109 = fcmp oeq float %107, %108, !dbg !3635
  br i1 %cmp109, label %land.lhs.true110, label %if.else138, !dbg !3636

land.lhs.true110:                                 ; preds = %land.lhs.true107
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP, i32 0, i32 2, !dbg !3637
  %109 = load float, float* %z, align 4, !dbg !3637
  %z111 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vP2, i32 0, i32 2, !dbg !3638
  %110 = load float, float* %z111, align 4, !dbg !3638
  %cmp112 = fcmp oeq float %109, %110, !dbg !3639
  br i1 %cmp112, label %land.lhs.true113, label %if.else138, !dbg !3640

land.lhs.true113:                                 ; preds = %land.lhs.true110
  %x114 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vN, i32 0, i32 0, !dbg !3641
  %111 = load float, float* %x114, align 4, !dbg !3641
  %x115 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vN2, i32 0, i32 0, !dbg !3642
  %112 = load float, float* %x115, align 4, !dbg !3642
  %cmp116 = fcmp oeq float %111, %112, !dbg !3643
  br i1 %cmp116, label %land.lhs.true117, label %if.else138, !dbg !3644

land.lhs.true117:                                 ; preds = %land.lhs.true113
  %y118 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vN, i32 0, i32 1, !dbg !3645
  %113 = load float, float* %y118, align 4, !dbg !3645
  %y119 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vN2, i32 0, i32 1, !dbg !3646
  %114 = load float, float* %y119, align 4, !dbg !3646
  %cmp120 = fcmp oeq float %113, %114, !dbg !3647
  br i1 %cmp120, label %land.lhs.true121, label %if.else138, !dbg !3648

land.lhs.true121:                                 ; preds = %land.lhs.true117
  %z122 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vN, i32 0, i32 2, !dbg !3649
  %115 = load float, float* %z122, align 4, !dbg !3649
  %z123 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vN2, i32 0, i32 2, !dbg !3650
  %116 = load float, float* %z123, align 4, !dbg !3650
  %cmp124 = fcmp oeq float %115, %116, !dbg !3651
  br i1 %cmp124, label %land.lhs.true125, label %if.else138, !dbg !3652

land.lhs.true125:                                 ; preds = %land.lhs.true121
  %x126 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vT, i32 0, i32 0, !dbg !3653
  %117 = load float, float* %x126, align 4, !dbg !3653
  %x127 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vT2, i32 0, i32 0, !dbg !3654
  %118 = load float, float* %x127, align 4, !dbg !3654
  %cmp128 = fcmp oeq float %117, %118, !dbg !3655
  br i1 %cmp128, label %land.lhs.true129, label %if.else138, !dbg !3656

land.lhs.true129:                                 ; preds = %land.lhs.true125
  %y130 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vT, i32 0, i32 1, !dbg !3657
  %119 = load float, float* %y130, align 4, !dbg !3657
  %y131 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vT2, i32 0, i32 1, !dbg !3658
  %120 = load float, float* %y131, align 4, !dbg !3658
  %cmp132 = fcmp oeq float %119, %120, !dbg !3659
  br i1 %cmp132, label %land.lhs.true133, label %if.else138, !dbg !3660

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %z134 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vT, i32 0, i32 2, !dbg !3661
  %121 = load float, float* %z134, align 4, !dbg !3661
  %z135 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vT2, i32 0, i32 2, !dbg !3662
  %122 = load float, float* %z135, align 4, !dbg !3662
  %cmp136 = fcmp oeq float %121, %122, !dbg !3663
  br i1 %cmp136, label %if.then137, label %if.else138, !dbg !3664

if.then137:                                       ; preds = %land.lhs.true133
  store i32 0, i32* %bNotFound, align 4, !dbg !3665
  br label %if.end140, !dbg !3666

if.else138:                                       ; preds = %land.lhs.true133, %land.lhs.true129, %land.lhs.true125, %land.lhs.true121, %land.lhs.true117, %land.lhs.true113, %land.lhs.true110, %land.lhs.true107, %while.body
  %123 = load i32, i32* %l2, align 4, !dbg !3667
  %inc139 = add nsw i32 %123, 1, !dbg !3667
  store i32 %inc139, i32* %l2, align 4, !dbg !3667
  br label %if.end140

if.end140:                                        ; preds = %if.else138, %if.then137
  br label %while.cond, !dbg !3594, !llvm.loop !3668

while.end:                                        ; preds = %land.end
  %124 = load i32, i32* %bNotFound, align 4, !dbg !3670
  %tobool141 = icmp ne i32 %124, 0, !dbg !3670
  br i1 %tobool141, label %if.end147, label %if.then142, !dbg !3672

if.then142:                                       ; preds = %while.end
  %125 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3673
  %126 = load i32, i32* %i2rec, align 4, !dbg !3674
  %idxprom143 = sext i32 %126 to i64, !dbg !3673
  %arrayidx144 = getelementptr inbounds i32, i32* %125, i64 %idxprom143, !dbg !3673
  %127 = load i32, i32* %arrayidx144, align 4, !dbg !3673
  %128 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3675
  %129 = load i32, i32* %i, align 4, !dbg !3676
  %idxprom145 = sext i32 %129 to i64, !dbg !3675
  %arrayidx146 = getelementptr inbounds i32, i32* %128, i64 %idxprom145, !dbg !3675
  store i32 %127, i32* %arrayidx146, align 4, !dbg !3677
  br label %if.end147, !dbg !3675

if.end147:                                        ; preds = %if.then142, %while.end
  br label %for.inc148, !dbg !3678

for.inc148:                                       ; preds = %if.end147
  %130 = load i32, i32* %l, align 4, !dbg !3679
  %inc149 = add nsw i32 %130, 1, !dbg !3679
  store i32 %inc149, i32* %l, align 4, !dbg !3679
  br label %for.cond81, !dbg !3680, !llvm.loop !3681

for.end150:                                       ; preds = %for.cond81
  br label %if.end230, !dbg !3683

if.else151:                                       ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %iL, metadata !3684, metadata !DIExpression()), !dbg !3686
  %131 = load i32, i32* %iL_in.addr, align 4, !dbg !3687
  store i32 %131, i32* %iL, align 4, !dbg !3686
  call void @llvm.dbg.declare(metadata i32* %iR, metadata !3688, metadata !DIExpression()), !dbg !3689
  %132 = load i32, i32* %iR_in.addr, align 4, !dbg !3690
  store i32 %132, i32* %iR, align 4, !dbg !3689
  br label %while.cond152, !dbg !3691

while.cond152:                                    ; preds = %if.end202, %if.else151
  %133 = load i32, i32* %iL, align 4, !dbg !3692
  %134 = load i32, i32* %iR, align 4, !dbg !3693
  %cmp153 = icmp slt i32 %133, %134, !dbg !3694
  br i1 %cmp153, label %while.body154, label %while.end203, !dbg !3691

while.body154:                                    ; preds = %while.cond152
  call void @llvm.dbg.declare(metadata i32* %bReadyLeftSwap, metadata !3695, metadata !DIExpression()), !dbg !3697
  store i32 0, i32* %bReadyLeftSwap, align 4, !dbg !3697
  call void @llvm.dbg.declare(metadata i32* %bReadyRightSwap, metadata !3698, metadata !DIExpression()), !dbg !3699
  store i32 0, i32* %bReadyRightSwap, align 4, !dbg !3699
  br label %while.cond155, !dbg !3700

while.cond155:                                    ; preds = %if.end170, %while.body154
  %135 = load i32, i32* %bReadyLeftSwap, align 4, !dbg !3701
  %tobool156 = icmp ne i32 %135, 0, !dbg !3701
  br i1 %tobool156, label %land.end159, label %land.rhs157, !dbg !3702

land.rhs157:                                      ; preds = %while.cond155
  %136 = load i32, i32* %iL, align 4, !dbg !3703
  %137 = load i32, i32* %iR, align 4, !dbg !3704
  %cmp158 = icmp slt i32 %136, %137, !dbg !3705
  br label %land.end159

land.end159:                                      ; preds = %land.rhs157, %while.cond155
  %138 = phi i1 [ false, %while.cond155 ], [ %cmp158, %land.rhs157 ], !dbg !3706
  br i1 %138, label %while.body160, label %while.end171, !dbg !3700

while.body160:                                    ; preds = %land.end159
  %139 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3707
  %140 = load i32, i32* %iL, align 4, !dbg !3709
  %idxprom161 = sext i32 %140 to i64, !dbg !3707
  %arrayidx162 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %139, i64 %idxprom161, !dbg !3707
  %vert163 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx162, i32 0, i32 0, !dbg !3710
  %141 = load i32, i32* %channel, align 4, !dbg !3711
  %idxprom164 = sext i32 %141 to i64, !dbg !3707
  %arrayidx165 = getelementptr inbounds [3 x float], [3 x float]* %vert163, i64 0, i64 %idxprom164, !dbg !3707
  %142 = load float, float* %arrayidx165, align 4, !dbg !3707
  %143 = load float, float* %fSep, align 4, !dbg !3712
  %cmp166 = fcmp olt float %142, %143, !dbg !3713
  %lnot = xor i1 %cmp166, true, !dbg !3714
  %lnot.ext = zext i1 %lnot to i32, !dbg !3714
  store i32 %lnot.ext, i32* %bReadyLeftSwap, align 4, !dbg !3715
  %144 = load i32, i32* %bReadyLeftSwap, align 4, !dbg !3716
  %tobool167 = icmp ne i32 %144, 0, !dbg !3716
  br i1 %tobool167, label %if.end170, label %if.then168, !dbg !3718

if.then168:                                       ; preds = %while.body160
  %145 = load i32, i32* %iL, align 4, !dbg !3719
  %inc169 = add nsw i32 %145, 1, !dbg !3719
  store i32 %inc169, i32* %iL, align 4, !dbg !3719
  br label %if.end170, !dbg !3719

if.end170:                                        ; preds = %if.then168, %while.body160
  br label %while.cond155, !dbg !3700, !llvm.loop !3720

while.end171:                                     ; preds = %land.end159
  br label %while.cond172, !dbg !3722

while.cond172:                                    ; preds = %if.end186, %while.end171
  %146 = load i32, i32* %bReadyRightSwap, align 4, !dbg !3723
  %tobool173 = icmp ne i32 %146, 0, !dbg !3723
  br i1 %tobool173, label %land.end176, label %land.rhs174, !dbg !3724

land.rhs174:                                      ; preds = %while.cond172
  %147 = load i32, i32* %iL, align 4, !dbg !3725
  %148 = load i32, i32* %iR, align 4, !dbg !3726
  %cmp175 = icmp slt i32 %147, %148, !dbg !3727
  br label %land.end176

land.end176:                                      ; preds = %land.rhs174, %while.cond172
  %149 = phi i1 [ false, %while.cond172 ], [ %cmp175, %land.rhs174 ], !dbg !3706
  br i1 %149, label %while.body177, label %while.end187, !dbg !3722

while.body177:                                    ; preds = %land.end176
  %150 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3728
  %151 = load i32, i32* %iR, align 4, !dbg !3730
  %idxprom178 = sext i32 %151 to i64, !dbg !3728
  %arrayidx179 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %150, i64 %idxprom178, !dbg !3728
  %vert180 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx179, i32 0, i32 0, !dbg !3731
  %152 = load i32, i32* %channel, align 4, !dbg !3732
  %idxprom181 = sext i32 %152 to i64, !dbg !3728
  %arrayidx182 = getelementptr inbounds [3 x float], [3 x float]* %vert180, i64 0, i64 %idxprom181, !dbg !3728
  %153 = load float, float* %arrayidx182, align 4, !dbg !3728
  %154 = load float, float* %fSep, align 4, !dbg !3733
  %cmp183 = fcmp olt float %153, %154, !dbg !3734
  %conv = zext i1 %cmp183 to i32, !dbg !3734
  store i32 %conv, i32* %bReadyRightSwap, align 4, !dbg !3735
  %155 = load i32, i32* %bReadyRightSwap, align 4, !dbg !3736
  %tobool184 = icmp ne i32 %155, 0, !dbg !3736
  br i1 %tobool184, label %if.end186, label %if.then185, !dbg !3738

if.then185:                                       ; preds = %while.body177
  %156 = load i32, i32* %iR, align 4, !dbg !3739
  %dec = add nsw i32 %156, -1, !dbg !3739
  store i32 %dec, i32* %iR, align 4, !dbg !3739
  br label %if.end186, !dbg !3739

if.end186:                                        ; preds = %if.then185, %while.body177
  br label %while.cond172, !dbg !3722, !llvm.loop !3740

while.end187:                                     ; preds = %land.end176
  %157 = load i32, i32* %bReadyLeftSwap, align 4, !dbg !3742
  %tobool188 = icmp ne i32 %157, 0, !dbg !3742
  br i1 %tobool188, label %land.lhs.true189, label %if.end202, !dbg !3744

land.lhs.true189:                                 ; preds = %while.end187
  %158 = load i32, i32* %bReadyRightSwap, align 4, !dbg !3745
  %tobool190 = icmp ne i32 %158, 0, !dbg !3745
  br i1 %tobool190, label %if.then191, label %if.end202, !dbg !3746

if.then191:                                       ; preds = %land.lhs.true189
  call void @llvm.dbg.declare(metadata %struct.STmpVert* %sTmp, metadata !3747, metadata !DIExpression()), !dbg !3750
  %159 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3751
  %160 = load i32, i32* %iL, align 4, !dbg !3752
  %idxprom192 = sext i32 %160 to i64, !dbg !3751
  %arrayidx193 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %159, i64 %idxprom192, !dbg !3751
  %161 = bitcast %struct.STmpVert* %sTmp to i8*, !dbg !3751
  %162 = bitcast %struct.STmpVert* %arrayidx193 to i8*, !dbg !3751
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 16, i1 false), !dbg !3751
  %163 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3753
  %164 = load i32, i32* %iL, align 4, !dbg !3754
  %idxprom194 = sext i32 %164 to i64, !dbg !3753
  %arrayidx195 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %163, i64 %idxprom194, !dbg !3753
  %165 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3755
  %166 = load i32, i32* %iR, align 4, !dbg !3756
  %idxprom196 = sext i32 %166 to i64, !dbg !3755
  %arrayidx197 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %165, i64 %idxprom196, !dbg !3755
  %167 = bitcast %struct.STmpVert* %arrayidx195 to i8*, !dbg !3755
  %168 = bitcast %struct.STmpVert* %arrayidx197 to i8*, !dbg !3755
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %168, i64 16, i1 false), !dbg !3755
  %169 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3757
  %170 = load i32, i32* %iR, align 4, !dbg !3758
  %idxprom198 = sext i32 %170 to i64, !dbg !3757
  %arrayidx199 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %169, i64 %idxprom198, !dbg !3757
  %171 = bitcast %struct.STmpVert* %arrayidx199 to i8*, !dbg !3759
  %172 = bitcast %struct.STmpVert* %sTmp to i8*, !dbg !3759
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 4 %172, i64 16, i1 false), !dbg !3759
  %173 = load i32, i32* %iL, align 4, !dbg !3760
  %inc200 = add nsw i32 %173, 1, !dbg !3760
  store i32 %inc200, i32* %iL, align 4, !dbg !3760
  %174 = load i32, i32* %iR, align 4, !dbg !3761
  %dec201 = add nsw i32 %174, -1, !dbg !3761
  store i32 %dec201, i32* %iR, align 4, !dbg !3761
  br label %if.end202, !dbg !3762

if.end202:                                        ; preds = %if.then191, %land.lhs.true189, %while.end187
  br label %while.cond152, !dbg !3691, !llvm.loop !3763

while.end203:                                     ; preds = %while.cond152
  %175 = load i32, i32* %iL, align 4, !dbg !3765
  %176 = load i32, i32* %iR, align 4, !dbg !3767
  %cmp204 = icmp eq i32 %175, %176, !dbg !3768
  br i1 %cmp204, label %if.then206, label %if.end221, !dbg !3769

if.then206:                                       ; preds = %while.end203
  call void @llvm.dbg.declare(metadata i32* %bReadyRightSwap207, metadata !3770, metadata !DIExpression()), !dbg !3772
  %177 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3773
  %178 = load i32, i32* %iR, align 4, !dbg !3774
  %idxprom208 = sext i32 %178 to i64, !dbg !3773
  %arrayidx209 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %177, i64 %idxprom208, !dbg !3773
  %vert210 = getelementptr inbounds %struct.STmpVert, %struct.STmpVert* %arrayidx209, i32 0, i32 0, !dbg !3775
  %179 = load i32, i32* %channel, align 4, !dbg !3776
  %idxprom211 = sext i32 %179 to i64, !dbg !3773
  %arrayidx212 = getelementptr inbounds [3 x float], [3 x float]* %vert210, i64 0, i64 %idxprom211, !dbg !3773
  %180 = load float, float* %arrayidx212, align 4, !dbg !3773
  %181 = load float, float* %fSep, align 4, !dbg !3777
  %cmp213 = fcmp olt float %180, %181, !dbg !3778
  %conv214 = zext i1 %cmp213 to i32, !dbg !3778
  store i32 %conv214, i32* %bReadyRightSwap207, align 4, !dbg !3772
  %182 = load i32, i32* %bReadyRightSwap207, align 4, !dbg !3779
  %tobool215 = icmp ne i32 %182, 0, !dbg !3779
  br i1 %tobool215, label %if.then216, label %if.else218, !dbg !3781

if.then216:                                       ; preds = %if.then206
  %183 = load i32, i32* %iL, align 4, !dbg !3782
  %inc217 = add nsw i32 %183, 1, !dbg !3782
  store i32 %inc217, i32* %iL, align 4, !dbg !3782
  br label %if.end220, !dbg !3782

if.else218:                                       ; preds = %if.then206
  %184 = load i32, i32* %iR, align 4, !dbg !3783
  %dec219 = add nsw i32 %184, -1, !dbg !3783
  store i32 %dec219, i32* %iR, align 4, !dbg !3783
  br label %if.end220

if.end220:                                        ; preds = %if.else218, %if.then216
  br label %if.end221, !dbg !3784

if.end221:                                        ; preds = %if.end220, %while.end203
  %185 = load i32, i32* %iL_in.addr, align 4, !dbg !3785
  %186 = load i32, i32* %iR, align 4, !dbg !3787
  %cmp222 = icmp slt i32 %185, %186, !dbg !3788
  br i1 %cmp222, label %if.then224, label %if.end225, !dbg !3789

if.then224:                                       ; preds = %if.end221
  %187 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3790
  %188 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3791
  %189 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3792
  %190 = load i32, i32* %iL_in.addr, align 4, !dbg !3793
  %191 = load i32, i32* %iR, align 4, !dbg !3794
  call void @MergeVertsFast(i32* %187, %struct.STmpVert* %188, %struct.SMikkTSpaceContext* %189, i32 %190, i32 %191), !dbg !3795
  br label %if.end225, !dbg !3795

if.end225:                                        ; preds = %if.then224, %if.end221
  %192 = load i32, i32* %iL, align 4, !dbg !3796
  %193 = load i32, i32* %iR_in.addr, align 4, !dbg !3798
  %cmp226 = icmp slt i32 %192, %193, !dbg !3799
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !3800

if.then228:                                       ; preds = %if.end225
  %194 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3801
  %195 = load %struct.STmpVert*, %struct.STmpVert** %pTmpVert.addr, align 8, !dbg !3802
  %196 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3803
  %197 = load i32, i32* %iL, align 4, !dbg !3804
  %198 = load i32, i32* %iR_in.addr, align 4, !dbg !3805
  call void @MergeVertsFast(i32* %194, %struct.STmpVert* %195, %struct.SMikkTSpaceContext* %196, i32 %197, i32 %198), !dbg !3806
  br label %if.end229, !dbg !3806

if.end229:                                        ; preds = %if.then228, %if.end225
  br label %if.end230

if.end230:                                        ; preds = %if.end229, %for.end150
  ret void, !dbg !3807
}

; Function Attrs: noinline nounwind uwtable
define internal void @MergeVertsSlow(i32* %piTriList_in_and_out, %struct.SMikkTSpaceContext* %pContext, i32* %pTable, i32 %iEntries) #2 !dbg !3808 {
entry:
  %piTriList_in_and_out.addr = alloca i32*, align 8
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %pTable.addr = alloca i32*, align 8
  %iEntries.addr = alloca i32, align 4
  %e = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %vP = alloca %struct.SVec3, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %vN = alloca %struct.SVec3, align 4
  %tmp4 = alloca { <2 x float>, float }, align 8
  %vT = alloca %struct.SVec3, align 4
  %tmp6 = alloca { <2 x float>, float }, align 8
  %bNotFound = alloca i32, align 4
  %e2 = alloca i32, align 4
  %i2rec = alloca i32, align 4
  %i2 = alloca i32, align 4
  %index2 = alloca i32, align 4
  %vP2 = alloca %struct.SVec3, align 4
  %tmp13 = alloca { <2 x float>, float }, align 8
  %vN2 = alloca %struct.SVec3, align 4
  %tmp15 = alloca { <2 x float>, float }, align 8
  %vT2 = alloca %struct.SVec3, align 4
  %tmp17 = alloca { <2 x float>, float }, align 8
  %vP.coerce = alloca { <2 x float>, float }, align 4
  %vP2.coerce = alloca { <2 x float>, float }, align 4
  %vN.coerce = alloca { <2 x float>, float }, align 4
  %vN2.coerce = alloca { <2 x float>, float }, align 4
  %vT.coerce = alloca { <2 x float>, float }, align 4
  %vT2.coerce = alloca { <2 x float>, float }, align 4
  store i32* %piTriList_in_and_out, i32** %piTriList_in_and_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriList_in_and_out.addr, metadata !3811, metadata !DIExpression()), !dbg !3812
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !3813, metadata !DIExpression()), !dbg !3814
  store i32* %pTable, i32** %pTable.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pTable.addr, metadata !3815, metadata !DIExpression()), !dbg !3816
  store i32 %iEntries, i32* %iEntries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iEntries.addr, metadata !3817, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3819, metadata !DIExpression()), !dbg !3820
  store i32 0, i32* %e, align 4, !dbg !3820
  store i32 0, i32* %e, align 4, !dbg !3821
  br label %for.cond, !dbg !3823

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %e, align 4, !dbg !3824
  %1 = load i32, i32* %iEntries.addr, align 4, !dbg !3826
  %cmp = icmp slt i32 %0, %1, !dbg !3827
  br i1 %cmp, label %for.body, label %for.end, !dbg !3828

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3829, metadata !DIExpression()), !dbg !3831
  %2 = load i32*, i32** %pTable.addr, align 8, !dbg !3832
  %3 = load i32, i32* %e, align 4, !dbg !3833
  %idxprom = sext i32 %3 to i64, !dbg !3832
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !3832
  %4 = load i32, i32* %arrayidx, align 4, !dbg !3832
  store i32 %4, i32* %i, align 4, !dbg !3831
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3834, metadata !DIExpression()), !dbg !3835
  %5 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3836
  %6 = load i32, i32* %i, align 4, !dbg !3837
  %idxprom1 = sext i32 %6 to i64, !dbg !3836
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i64 %idxprom1, !dbg !3836
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !3836
  store i32 %7, i32* %index, align 4, !dbg !3835
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vP, metadata !3838, metadata !DIExpression()), !dbg !3839
  %8 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3840
  %9 = load i32, i32* %index, align 4, !dbg !3841
  %call = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %8, i32 %9), !dbg !3842
  store { <2 x float>, float } %call, { <2 x float>, float }* %tmp, align 8, !dbg !3842
  %10 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !3842
  %11 = bitcast %struct.SVec3* %vP to i8*, !dbg !3842
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 8 %10, i64 12, i1 false), !dbg !3842
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vN, metadata !3843, metadata !DIExpression()), !dbg !3844
  %12 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3845
  %13 = load i32, i32* %index, align 4, !dbg !3846
  %call3 = call { <2 x float>, float } @GetNormal(%struct.SMikkTSpaceContext* %12, i32 %13), !dbg !3847
  store { <2 x float>, float } %call3, { <2 x float>, float }* %tmp4, align 8, !dbg !3847
  %14 = bitcast { <2 x float>, float }* %tmp4 to i8*, !dbg !3847
  %15 = bitcast %struct.SVec3* %vN to i8*, !dbg !3847
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 8 %14, i64 12, i1 false), !dbg !3847
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vT, metadata !3848, metadata !DIExpression()), !dbg !3849
  %16 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3850
  %17 = load i32, i32* %index, align 4, !dbg !3851
  %call5 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %16, i32 %17), !dbg !3852
  store { <2 x float>, float } %call5, { <2 x float>, float }* %tmp6, align 8, !dbg !3852
  %18 = bitcast { <2 x float>, float }* %tmp6 to i8*, !dbg !3852
  %19 = bitcast %struct.SVec3* %vT to i8*, !dbg !3852
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 8 %18, i64 12, i1 false), !dbg !3852
  call void @llvm.dbg.declare(metadata i32* %bNotFound, metadata !3853, metadata !DIExpression()), !dbg !3854
  store i32 1, i32* %bNotFound, align 4, !dbg !3854
  call void @llvm.dbg.declare(metadata i32* %e2, metadata !3855, metadata !DIExpression()), !dbg !3856
  store i32 0, i32* %e2, align 4, !dbg !3856
  call void @llvm.dbg.declare(metadata i32* %i2rec, metadata !3857, metadata !DIExpression()), !dbg !3858
  store i32 -1, i32* %i2rec, align 4, !dbg !3858
  br label %while.cond, !dbg !3859

while.cond:                                       ; preds = %if.end, %for.body
  %20 = load i32, i32* %e2, align 4, !dbg !3860
  %21 = load i32, i32* %e, align 4, !dbg !3861
  %cmp7 = icmp slt i32 %20, %21, !dbg !3862
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !3863

land.rhs:                                         ; preds = %while.cond
  %22 = load i32, i32* %bNotFound, align 4, !dbg !3864
  %tobool = icmp ne i32 %22, 0, !dbg !3863
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %23 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !3865
  br i1 %23, label %while.body, label %while.end, !dbg !3859

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !3866, metadata !DIExpression()), !dbg !3868
  %24 = load i32*, i32** %pTable.addr, align 8, !dbg !3869
  %25 = load i32, i32* %e2, align 4, !dbg !3870
  %idxprom8 = sext i32 %25 to i64, !dbg !3869
  %arrayidx9 = getelementptr inbounds i32, i32* %24, i64 %idxprom8, !dbg !3869
  %26 = load i32, i32* %arrayidx9, align 4, !dbg !3869
  store i32 %26, i32* %i2, align 4, !dbg !3868
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !3871, metadata !DIExpression()), !dbg !3872
  %27 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3873
  %28 = load i32, i32* %i2, align 4, !dbg !3874
  %idxprom10 = sext i32 %28 to i64, !dbg !3873
  %arrayidx11 = getelementptr inbounds i32, i32* %27, i64 %idxprom10, !dbg !3873
  %29 = load i32, i32* %arrayidx11, align 4, !dbg !3873
  store i32 %29, i32* %index2, align 4, !dbg !3872
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vP2, metadata !3875, metadata !DIExpression()), !dbg !3876
  %30 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3877
  %31 = load i32, i32* %index2, align 4, !dbg !3878
  %call12 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %30, i32 %31), !dbg !3879
  store { <2 x float>, float } %call12, { <2 x float>, float }* %tmp13, align 8, !dbg !3879
  %32 = bitcast { <2 x float>, float }* %tmp13 to i8*, !dbg !3879
  %33 = bitcast %struct.SVec3* %vP2 to i8*, !dbg !3879
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 8 %32, i64 12, i1 false), !dbg !3879
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vN2, metadata !3880, metadata !DIExpression()), !dbg !3881
  %34 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3882
  %35 = load i32, i32* %index2, align 4, !dbg !3883
  %call14 = call { <2 x float>, float } @GetNormal(%struct.SMikkTSpaceContext* %34, i32 %35), !dbg !3884
  store { <2 x float>, float } %call14, { <2 x float>, float }* %tmp15, align 8, !dbg !3884
  %36 = bitcast { <2 x float>, float }* %tmp15 to i8*, !dbg !3884
  %37 = bitcast %struct.SVec3* %vN2 to i8*, !dbg !3884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 8 %36, i64 12, i1 false), !dbg !3884
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vT2, metadata !3885, metadata !DIExpression()), !dbg !3886
  %38 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3887
  %39 = load i32, i32* %index2, align 4, !dbg !3888
  %call16 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %38, i32 %39), !dbg !3889
  store { <2 x float>, float } %call16, { <2 x float>, float }* %tmp17, align 8, !dbg !3889
  %40 = bitcast { <2 x float>, float }* %tmp17 to i8*, !dbg !3889
  %41 = bitcast %struct.SVec3* %vT2 to i8*, !dbg !3889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 8 %40, i64 12, i1 false), !dbg !3889
  %42 = load i32, i32* %i2, align 4, !dbg !3890
  store i32 %42, i32* %i2rec, align 4, !dbg !3891
  %43 = bitcast { <2 x float>, float }* %vP.coerce to i8*, !dbg !3892
  %44 = bitcast %struct.SVec3* %vP to i8*, !dbg !3892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %44, i64 12, i1 false), !dbg !3892
  %45 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vP.coerce, i32 0, i32 0, !dbg !3892
  %46 = load <2 x float>, <2 x float>* %45, align 4, !dbg !3892
  %47 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vP.coerce, i32 0, i32 1, !dbg !3892
  %48 = load float, float* %47, align 4, !dbg !3892
  %49 = bitcast { <2 x float>, float }* %vP2.coerce to i8*, !dbg !3892
  %50 = bitcast %struct.SVec3* %vP2 to i8*, !dbg !3892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 12, i1 false), !dbg !3892
  %51 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vP2.coerce, i32 0, i32 0, !dbg !3892
  %52 = load <2 x float>, <2 x float>* %51, align 4, !dbg !3892
  %53 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vP2.coerce, i32 0, i32 1, !dbg !3892
  %54 = load float, float* %53, align 4, !dbg !3892
  %call18 = call i32 @veq(<2 x float> %46, float %48, <2 x float> %52, float %54), !dbg !3892
  %tobool19 = icmp ne i32 %call18, 0, !dbg !3892
  br i1 %tobool19, label %land.lhs.true, label %if.else, !dbg !3894

land.lhs.true:                                    ; preds = %while.body
  %55 = bitcast { <2 x float>, float }* %vN.coerce to i8*, !dbg !3895
  %56 = bitcast %struct.SVec3* %vN to i8*, !dbg !3895
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56, i64 12, i1 false), !dbg !3895
  %57 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vN.coerce, i32 0, i32 0, !dbg !3895
  %58 = load <2 x float>, <2 x float>* %57, align 4, !dbg !3895
  %59 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vN.coerce, i32 0, i32 1, !dbg !3895
  %60 = load float, float* %59, align 4, !dbg !3895
  %61 = bitcast { <2 x float>, float }* %vN2.coerce to i8*, !dbg !3895
  %62 = bitcast %struct.SVec3* %vN2 to i8*, !dbg !3895
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 12, i1 false), !dbg !3895
  %63 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vN2.coerce, i32 0, i32 0, !dbg !3895
  %64 = load <2 x float>, <2 x float>* %63, align 4, !dbg !3895
  %65 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vN2.coerce, i32 0, i32 1, !dbg !3895
  %66 = load float, float* %65, align 4, !dbg !3895
  %call20 = call i32 @veq(<2 x float> %58, float %60, <2 x float> %64, float %66), !dbg !3895
  %tobool21 = icmp ne i32 %call20, 0, !dbg !3895
  br i1 %tobool21, label %land.lhs.true22, label %if.else, !dbg !3896

land.lhs.true22:                                  ; preds = %land.lhs.true
  %67 = bitcast { <2 x float>, float }* %vT.coerce to i8*, !dbg !3897
  %68 = bitcast %struct.SVec3* %vT to i8*, !dbg !3897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 12, i1 false), !dbg !3897
  %69 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vT.coerce, i32 0, i32 0, !dbg !3897
  %70 = load <2 x float>, <2 x float>* %69, align 4, !dbg !3897
  %71 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vT.coerce, i32 0, i32 1, !dbg !3897
  %72 = load float, float* %71, align 4, !dbg !3897
  %73 = bitcast { <2 x float>, float }* %vT2.coerce to i8*, !dbg !3897
  %74 = bitcast %struct.SVec3* %vT2 to i8*, !dbg !3897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 12, i1 false), !dbg !3897
  %75 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vT2.coerce, i32 0, i32 0, !dbg !3897
  %76 = load <2 x float>, <2 x float>* %75, align 4, !dbg !3897
  %77 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vT2.coerce, i32 0, i32 1, !dbg !3897
  %78 = load float, float* %77, align 4, !dbg !3897
  %call23 = call i32 @veq(<2 x float> %70, float %72, <2 x float> %76, float %78), !dbg !3897
  %tobool24 = icmp ne i32 %call23, 0, !dbg !3897
  br i1 %tobool24, label %if.then, label %if.else, !dbg !3898

if.then:                                          ; preds = %land.lhs.true22
  store i32 0, i32* %bNotFound, align 4, !dbg !3899
  br label %if.end, !dbg !3900

if.else:                                          ; preds = %land.lhs.true22, %land.lhs.true, %while.body
  %79 = load i32, i32* %e2, align 4, !dbg !3901
  %inc = add nsw i32 %79, 1, !dbg !3901
  store i32 %inc, i32* %e2, align 4, !dbg !3901
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !3859, !llvm.loop !3902

while.end:                                        ; preds = %land.end
  %80 = load i32, i32* %bNotFound, align 4, !dbg !3904
  %tobool25 = icmp ne i32 %80, 0, !dbg !3904
  br i1 %tobool25, label %if.end31, label %if.then26, !dbg !3906

if.then26:                                        ; preds = %while.end
  %81 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3907
  %82 = load i32, i32* %i2rec, align 4, !dbg !3908
  %idxprom27 = sext i32 %82 to i64, !dbg !3907
  %arrayidx28 = getelementptr inbounds i32, i32* %81, i64 %idxprom27, !dbg !3907
  %83 = load i32, i32* %arrayidx28, align 4, !dbg !3907
  %84 = load i32*, i32** %piTriList_in_and_out.addr, align 8, !dbg !3909
  %85 = load i32, i32* %i, align 4, !dbg !3910
  %idxprom29 = sext i32 %85 to i64, !dbg !3909
  %arrayidx30 = getelementptr inbounds i32, i32* %84, i64 %idxprom29, !dbg !3909
  store i32 %83, i32* %arrayidx30, align 4, !dbg !3911
  br label %if.end31, !dbg !3909

if.end31:                                         ; preds = %if.then26, %while.end
  br label %for.inc, !dbg !3912

for.inc:                                          ; preds = %if.end31
  %86 = load i32, i32* %e, align 4, !dbg !3913
  %inc32 = add nsw i32 %86, 1, !dbg !3913
  store i32 %inc32, i32* %e, align 4, !dbg !3913
  br label %for.cond, !dbg !3914, !llvm.loop !3915

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3917
}

; Function Attrs: noinline nounwind uwtable
define internal { <2 x float>, float } @GetNormal(%struct.SMikkTSpaceContext* %pContext, i32 %index) #0 !dbg !3918 {
entry:
  %retval = alloca %struct.SVec3, align 4
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %index.addr = alloca i32, align 4
  %iF = alloca i32, align 4
  %iI = alloca i32, align 4
  %norm = alloca [3 x float], align 4
  %tmp = alloca { <2 x float>, float }, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !3919, metadata !DIExpression()), !dbg !3920
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3921, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.declare(metadata i32* %iF, metadata !3923, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.declare(metadata i32* %iI, metadata !3925, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.declare(metadata %struct.SVec3* %retval, metadata !3927, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.declare(metadata [3 x float]* %norm, metadata !3929, metadata !DIExpression()), !dbg !3930
  %0 = load i32, i32* %index.addr, align 4, !dbg !3931
  call void @IndexToData(i32* %iF, i32* %iI, i32 %0), !dbg !3932
  %1 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3933
  %m_pInterface = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %1, i32 0, i32 0, !dbg !3934
  %2 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface, align 8, !dbg !3934
  %m_getNormal = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %2, i32 0, i32 3, !dbg !3935
  %3 = load void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getNormal, align 8, !dbg !3935
  %4 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3936
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !3937
  %5 = load i32, i32* %iF, align 4, !dbg !3938
  %6 = load i32, i32* %iI, align 4, !dbg !3939
  call void %3(%struct.SMikkTSpaceContext* %4, float* %arraydecay, i32 %5, i32 %6), !dbg !3933
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !3940
  %7 = load float, float* %arrayidx, align 4, !dbg !3940
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 0, !dbg !3941
  store float %7, float* %x, align 4, !dbg !3942
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 1, !dbg !3943
  %8 = load float, float* %arrayidx1, align 4, !dbg !3943
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 1, !dbg !3944
  store float %8, float* %y, align 4, !dbg !3945
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 2, !dbg !3946
  %9 = load float, float* %arrayidx2, align 4, !dbg !3946
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 2, !dbg !3947
  store float %9, float* %z, align 4, !dbg !3948
  %10 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !3949
  %11 = bitcast %struct.SVec3* %retval to i8*, !dbg !3949
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 12, i1 false), !dbg !3949
  %12 = load { <2 x float>, float }, { <2 x float>, float }* %tmp, align 8, !dbg !3949
  ret { <2 x float>, float } %12, !dbg !3949
}

; Function Attrs: noinline nounwind uwtable
define internal { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %pContext, i32 %index) #0 !dbg !3950 {
entry:
  %retval = alloca %struct.SVec3, align 4
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %index.addr = alloca i32, align 4
  %iF = alloca i32, align 4
  %iI = alloca i32, align 4
  %texc = alloca [2 x float], align 4
  %tmp = alloca { <2 x float>, float }, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !3951, metadata !DIExpression()), !dbg !3952
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3953, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.declare(metadata i32* %iF, metadata !3955, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.declare(metadata i32* %iI, metadata !3957, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.declare(metadata %struct.SVec3* %retval, metadata !3959, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.declare(metadata [2 x float]* %texc, metadata !3961, metadata !DIExpression()), !dbg !3965
  %0 = load i32, i32* %index.addr, align 4, !dbg !3966
  call void @IndexToData(i32* %iF, i32* %iI, i32 %0), !dbg !3967
  %1 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3968
  %m_pInterface = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %1, i32 0, i32 0, !dbg !3969
  %2 = load %struct.SMikkTSpaceInterface*, %struct.SMikkTSpaceInterface** %m_pInterface, align 8, !dbg !3969
  %m_getTexCoord = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %2, i32 0, i32 4, !dbg !3970
  %3 = load void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getTexCoord, align 8, !dbg !3970
  %4 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !3971
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %texc, i64 0, i64 0, !dbg !3972
  %5 = load i32, i32* %iF, align 4, !dbg !3973
  %6 = load i32, i32* %iI, align 4, !dbg !3974
  call void %3(%struct.SMikkTSpaceContext* %4, float* %arraydecay, i32 %5, i32 %6), !dbg !3968
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %texc, i64 0, i64 0, !dbg !3975
  %7 = load float, float* %arrayidx, align 4, !dbg !3975
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 0, !dbg !3976
  store float %7, float* %x, align 4, !dbg !3977
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %texc, i64 0, i64 1, !dbg !3978
  %8 = load float, float* %arrayidx1, align 4, !dbg !3978
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 1, !dbg !3979
  store float %8, float* %y, align 4, !dbg !3980
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 2, !dbg !3981
  store float 1.000000e+00, float* %z, align 4, !dbg !3982
  %9 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !3983
  %10 = bitcast %struct.SVec3* %retval to i8*, !dbg !3983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %10, i64 12, i1 false), !dbg !3983
  %11 = load { <2 x float>, float }, { <2 x float>, float }* %tmp, align 8, !dbg !3983
  ret { <2 x float>, float } %11, !dbg !3983
}

; Function Attrs: noinline nounwind uwtable
define internal void @IndexToData(i32* %piFace, i32* %piVert, i32 %iIndexIn) #0 !dbg !3984 {
entry:
  %piFace.addr = alloca i32*, align 8
  %piVert.addr = alloca i32*, align 8
  %iIndexIn.addr = alloca i32, align 4
  store i32* %piFace, i32** %piFace.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piFace.addr, metadata !3987, metadata !DIExpression()), !dbg !3988
  store i32* %piVert, i32** %piVert.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piVert.addr, metadata !3989, metadata !DIExpression()), !dbg !3990
  store i32 %iIndexIn, i32* %iIndexIn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iIndexIn.addr, metadata !3991, metadata !DIExpression()), !dbg !3992
  %0 = load i32, i32* %iIndexIn.addr, align 4, !dbg !3993
  %and = and i32 %0, 3, !dbg !3994
  %1 = load i32*, i32** %piVert.addr, align 8, !dbg !3995
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0, !dbg !3995
  store i32 %and, i32* %arrayidx, align 4, !dbg !3996
  %2 = load i32, i32* %iIndexIn.addr, align 4, !dbg !3997
  %shr = ashr i32 %2, 2, !dbg !3998
  %3 = load i32*, i32** %piFace.addr, align 8, !dbg !3999
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 0, !dbg !3999
  store i32 %shr, i32* %arrayidx1, align 4, !dbg !4000
  ret void, !dbg !4001
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @MakeIndex(i32 %iFace, i32 %iVert) #0 !dbg !4002 {
entry:
  %iFace.addr = alloca i32, align 4
  %iVert.addr = alloca i32, align 4
  store i32 %iFace, i32* %iFace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iFace.addr, metadata !4005, metadata !DIExpression()), !dbg !4006
  store i32 %iVert, i32* %iVert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iVert.addr, metadata !4007, metadata !DIExpression()), !dbg !4008
  %0 = load i32, i32* %iFace.addr, align 4, !dbg !4009
  %shl = shl i32 %0, 2, !dbg !4010
  %1 = load i32, i32* %iVert.addr, align 4, !dbg !4011
  %and = and i32 %1, 3, !dbg !4012
  %or = or i32 %shl, %and, !dbg !4013
  ret i32 %or, !dbg !4014
}

; Function Attrs: noinline nounwind uwtable
define internal float @LengthSquared(<2 x float> %v.coerce0, float %v.coerce1) #2 !dbg !4015 {
entry:
  %v = alloca %struct.SVec3, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %v.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %v.coerce1, float* %1, align 4
  %2 = bitcast %struct.SVec3* %v to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v, metadata !4018, metadata !DIExpression()), !dbg !4019
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 0, !dbg !4020
  %4 = load float, float* %x, align 4, !dbg !4020
  %x1 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 0, !dbg !4021
  %5 = load float, float* %x1, align 4, !dbg !4021
  %mul = fmul float %4, %5, !dbg !4022
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 1, !dbg !4023
  %6 = load float, float* %y, align 4, !dbg !4023
  %y2 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 1, !dbg !4024
  %7 = load float, float* %y2, align 4, !dbg !4024
  %mul3 = fmul float %6, %7, !dbg !4025
  %add = fadd float %mul, %mul3, !dbg !4026
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 2, !dbg !4027
  %8 = load float, float* %z, align 4, !dbg !4027
  %z4 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 2, !dbg !4028
  %9 = load float, float* %z4, align 4, !dbg !4028
  %mul5 = fmul float %8, %9, !dbg !4029
  %add6 = fadd float %add, %mul5, !dbg !4030
  ret float %add6, !dbg !4031
}

; Function Attrs: noinline nounwind uwtable
define internal { <2 x float>, float } @vscale(float %fS, <2 x float> %v.coerce0, float %v.coerce1) #2 !dbg !4032 {
entry:
  %retval = alloca %struct.SVec3, align 4
  %v = alloca %struct.SVec3, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %fS.addr = alloca float, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %v.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %v.coerce1, float* %1, align 4
  %2 = bitcast %struct.SVec3* %v to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  store float %fS, float* %fS.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fS.addr, metadata !4035, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v, metadata !4037, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.declare(metadata %struct.SVec3* %retval, metadata !4039, metadata !DIExpression()), !dbg !4040
  %4 = load float, float* %fS.addr, align 4, !dbg !4041
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 0, !dbg !4042
  %5 = load float, float* %x, align 4, !dbg !4042
  %mul = fmul float %4, %5, !dbg !4043
  %x1 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 0, !dbg !4044
  store float %mul, float* %x1, align 4, !dbg !4045
  %6 = load float, float* %fS.addr, align 4, !dbg !4046
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 1, !dbg !4047
  %7 = load float, float* %y, align 4, !dbg !4047
  %mul2 = fmul float %6, %7, !dbg !4048
  %y3 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 1, !dbg !4049
  store float %mul2, float* %y3, align 4, !dbg !4050
  %8 = load float, float* %fS.addr, align 4, !dbg !4051
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 2, !dbg !4052
  %9 = load float, float* %z, align 4, !dbg !4052
  %mul4 = fmul float %8, %9, !dbg !4053
  %z5 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 2, !dbg !4054
  store float %mul4, float* %z5, align 4, !dbg !4055
  %10 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !4056
  %11 = bitcast %struct.SVec3* %retval to i8*, !dbg !4056
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 12, i1 false), !dbg !4056
  %12 = load { <2 x float>, float }, { <2 x float>, float }* %tmp, align 8, !dbg !4056
  ret { <2 x float>, float } %12, !dbg !4056
}

; Function Attrs: noinline nounwind uwtable
define internal { <2 x float>, float } @vadd(<2 x float> %v1.coerce0, float %v1.coerce1, <2 x float> %v2.coerce0, float %v2.coerce1) #2 !dbg !4057 {
entry:
  %retval = alloca %struct.SVec3, align 4
  %v1 = alloca %struct.SVec3, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %v2 = alloca %struct.SVec3, align 4
  %coerce1 = alloca { <2 x float>, float }, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %v1.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %v1.coerce1, float* %1, align 4
  %2 = bitcast %struct.SVec3* %v1 to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  %4 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce1, i32 0, i32 0
  store <2 x float> %v2.coerce0, <2 x float>* %4, align 4
  %5 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce1, i32 0, i32 1
  store float %v2.coerce1, float* %5, align 4
  %6 = bitcast %struct.SVec3* %v2 to i8*
  %7 = bitcast { <2 x float>, float }* %coerce1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 12, i1 false)
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v1, metadata !4058, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v2, metadata !4060, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.declare(metadata %struct.SVec3* %retval, metadata !4062, metadata !DIExpression()), !dbg !4063
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 0, !dbg !4064
  %8 = load float, float* %x, align 4, !dbg !4064
  %x2 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 0, !dbg !4065
  %9 = load float, float* %x2, align 4, !dbg !4065
  %add = fadd float %8, %9, !dbg !4066
  %x3 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 0, !dbg !4067
  store float %add, float* %x3, align 4, !dbg !4068
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 1, !dbg !4069
  %10 = load float, float* %y, align 4, !dbg !4069
  %y4 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 1, !dbg !4070
  %11 = load float, float* %y4, align 4, !dbg !4070
  %add5 = fadd float %10, %11, !dbg !4071
  %y6 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 1, !dbg !4072
  store float %add5, float* %y6, align 4, !dbg !4073
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 2, !dbg !4074
  %12 = load float, float* %z, align 4, !dbg !4074
  %z7 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 2, !dbg !4075
  %13 = load float, float* %z7, align 4, !dbg !4075
  %add8 = fadd float %12, %13, !dbg !4076
  %z9 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %retval, i32 0, i32 2, !dbg !4077
  store float %add8, float* %z9, align 4, !dbg !4078
  %14 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !4079
  %15 = bitcast %struct.SVec3* %retval to i8*, !dbg !4079
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 4 %15, i64 12, i1 false), !dbg !4079
  %16 = load { <2 x float>, float }, { <2 x float>, float }* %tmp, align 8, !dbg !4079
  ret { <2 x float>, float } %16, !dbg !4079
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @NotZero(float %fX) #0 !dbg !4080 {
entry:
  %fX.addr = alloca float, align 4
  store float %fX, float* %fX.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fX.addr, metadata !4083, metadata !DIExpression()), !dbg !4084
  %0 = load float, float* %fX.addr, align 4, !dbg !4085
  %1 = call float @llvm.fabs.f32(float %0), !dbg !4086
  %cmp = fcmp ogt float %1, 0x3810000000000000, !dbg !4087
  %conv = zext i1 %cmp to i32, !dbg !4087
  ret i32 %conv, !dbg !4088
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal float @Length(<2 x float> %v.coerce0, float %v.coerce1) #2 !dbg !4089 {
entry:
  %v = alloca %struct.SVec3, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %v.coerce = alloca { <2 x float>, float }, align 4
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %v.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %v.coerce1, float* %1, align 4
  %2 = bitcast %struct.SVec3* %v to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v, metadata !4090, metadata !DIExpression()), !dbg !4091
  %4 = bitcast { <2 x float>, float }* %v.coerce to i8*, !dbg !4092
  %5 = bitcast %struct.SVec3* %v to i8*, !dbg !4092
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false), !dbg !4092
  %6 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v.coerce, i32 0, i32 0, !dbg !4092
  %7 = load <2 x float>, <2 x float>* %6, align 4, !dbg !4092
  %8 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v.coerce, i32 0, i32 1, !dbg !4092
  %9 = load float, float* %8, align 4, !dbg !4092
  %call = call float @LengthSquared(<2 x float> %7, float %9), !dbg !4092
  %call1 = call float @sqrtf(float %call) #5, !dbg !4093
  ret float %call1, !dbg !4094
}

; Function Attrs: noinline nounwind uwtable
define internal float @CalcTexArea(%struct.SMikkTSpaceContext* %pContext, i32* %indices) #0 !dbg !4095 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %indices.addr = alloca i32*, align 8
  %t1 = alloca %struct.SVec3, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %t2 = alloca %struct.SVec3, align 4
  %tmp3 = alloca { <2 x float>, float }, align 8
  %t3 = alloca %struct.SVec3, align 4
  %tmp6 = alloca { <2 x float>, float }, align 8
  %t21x = alloca float, align 4
  %t21y = alloca float, align 4
  %t31x = alloca float, align 4
  %t31y = alloca float, align 4
  %fSignedAreaSTx2 = alloca float, align 4
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !4098, metadata !DIExpression()), !dbg !4099
  store i32* %indices, i32** %indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %indices.addr, metadata !4100, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.declare(metadata %struct.SVec3* %t1, metadata !4102, metadata !DIExpression()), !dbg !4103
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !4104
  %1 = load i32*, i32** %indices.addr, align 8, !dbg !4105
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0, !dbg !4105
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4105
  %call = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %0, i32 %2), !dbg !4106
  store { <2 x float>, float } %call, { <2 x float>, float }* %tmp, align 8, !dbg !4106
  %3 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !4106
  %4 = bitcast %struct.SVec3* %t1 to i8*, !dbg !4106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %3, i64 12, i1 false), !dbg !4106
  call void @llvm.dbg.declare(metadata %struct.SVec3* %t2, metadata !4107, metadata !DIExpression()), !dbg !4108
  %5 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !4109
  %6 = load i32*, i32** %indices.addr, align 8, !dbg !4110
  %arrayidx1 = getelementptr inbounds i32, i32* %6, i64 1, !dbg !4110
  %7 = load i32, i32* %arrayidx1, align 4, !dbg !4110
  %call2 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %5, i32 %7), !dbg !4111
  store { <2 x float>, float } %call2, { <2 x float>, float }* %tmp3, align 8, !dbg !4111
  %8 = bitcast { <2 x float>, float }* %tmp3 to i8*, !dbg !4111
  %9 = bitcast %struct.SVec3* %t2 to i8*, !dbg !4111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %8, i64 12, i1 false), !dbg !4111
  call void @llvm.dbg.declare(metadata %struct.SVec3* %t3, metadata !4112, metadata !DIExpression()), !dbg !4113
  %10 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !4114
  %11 = load i32*, i32** %indices.addr, align 8, !dbg !4115
  %arrayidx4 = getelementptr inbounds i32, i32* %11, i64 2, !dbg !4115
  %12 = load i32, i32* %arrayidx4, align 4, !dbg !4115
  %call5 = call { <2 x float>, float } @GetTexCoord(%struct.SMikkTSpaceContext* %10, i32 %12), !dbg !4116
  store { <2 x float>, float } %call5, { <2 x float>, float }* %tmp6, align 8, !dbg !4116
  %13 = bitcast { <2 x float>, float }* %tmp6 to i8*, !dbg !4116
  %14 = bitcast %struct.SVec3* %t3 to i8*, !dbg !4116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 8 %13, i64 12, i1 false), !dbg !4116
  call void @llvm.dbg.declare(metadata float* %t21x, metadata !4117, metadata !DIExpression()), !dbg !4118
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t2, i32 0, i32 0, !dbg !4119
  %15 = load float, float* %x, align 4, !dbg !4119
  %x7 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t1, i32 0, i32 0, !dbg !4120
  %16 = load float, float* %x7, align 4, !dbg !4120
  %sub = fsub float %15, %16, !dbg !4121
  store float %sub, float* %t21x, align 4, !dbg !4118
  call void @llvm.dbg.declare(metadata float* %t21y, metadata !4122, metadata !DIExpression()), !dbg !4123
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t2, i32 0, i32 1, !dbg !4124
  %17 = load float, float* %y, align 4, !dbg !4124
  %y8 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t1, i32 0, i32 1, !dbg !4125
  %18 = load float, float* %y8, align 4, !dbg !4125
  %sub9 = fsub float %17, %18, !dbg !4126
  store float %sub9, float* %t21y, align 4, !dbg !4123
  call void @llvm.dbg.declare(metadata float* %t31x, metadata !4127, metadata !DIExpression()), !dbg !4128
  %x10 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t3, i32 0, i32 0, !dbg !4129
  %19 = load float, float* %x10, align 4, !dbg !4129
  %x11 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t1, i32 0, i32 0, !dbg !4130
  %20 = load float, float* %x11, align 4, !dbg !4130
  %sub12 = fsub float %19, %20, !dbg !4131
  store float %sub12, float* %t31x, align 4, !dbg !4128
  call void @llvm.dbg.declare(metadata float* %t31y, metadata !4132, metadata !DIExpression()), !dbg !4133
  %y13 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t3, i32 0, i32 1, !dbg !4134
  %21 = load float, float* %y13, align 4, !dbg !4134
  %y14 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %t1, i32 0, i32 1, !dbg !4135
  %22 = load float, float* %y14, align 4, !dbg !4135
  %sub15 = fsub float %21, %22, !dbg !4136
  store float %sub15, float* %t31y, align 4, !dbg !4133
  call void @llvm.dbg.declare(metadata float* %fSignedAreaSTx2, metadata !4137, metadata !DIExpression()), !dbg !4138
  %23 = load float, float* %t21x, align 4, !dbg !4139
  %24 = load float, float* %t31y, align 4, !dbg !4140
  %mul = fmul float %23, %24, !dbg !4141
  %25 = load float, float* %t21y, align 4, !dbg !4142
  %26 = load float, float* %t31x, align 4, !dbg !4143
  %mul16 = fmul float %25, %26, !dbg !4144
  %sub17 = fsub float %mul, %mul16, !dbg !4145
  store float %sub17, float* %fSignedAreaSTx2, align 4, !dbg !4138
  %27 = load float, float* %fSignedAreaSTx2, align 4, !dbg !4146
  %cmp = fcmp olt float %27, 0.000000e+00, !dbg !4147
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4146

cond.true:                                        ; preds = %entry
  %28 = load float, float* %fSignedAreaSTx2, align 4, !dbg !4148
  %fneg = fneg float %28, !dbg !4149
  br label %cond.end, !dbg !4146

cond.false:                                       ; preds = %entry
  %29 = load float, float* %fSignedAreaSTx2, align 4, !dbg !4150
  br label %cond.end, !dbg !4146

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %29, %cond.false ], !dbg !4146
  ret float %cond, !dbg !4151
}

; Function Attrs: noinline nounwind uwtable
define internal void @BuildNeighborsSlow(%struct.STriInfo* %pTriInfos, i32* %piTriListIn, i32 %iNrTrianglesIn) #0 !dbg !4152 {
entry:
  %pTriInfos.addr = alloca %struct.STriInfo*, align 8
  %piTriListIn.addr = alloca i32*, align 8
  %iNrTrianglesIn.addr = alloca i32, align 4
  %f = alloca i32, align 4
  %i = alloca i32, align 4
  %i0_A = alloca i32, align 4
  %i1_A = alloca i32, align 4
  %bFound = alloca i32, align 4
  %t = alloca i32, align 4
  %j = alloca i32, align 4
  %i1_B = alloca i32, align 4
  %i0_B = alloca i32, align 4
  store %struct.STriInfo* %pTriInfos, %struct.STriInfo** %pTriInfos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pTriInfos.addr, metadata !4155, metadata !DIExpression()), !dbg !4156
  store i32* %piTriListIn, i32** %piTriListIn.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriListIn.addr, metadata !4157, metadata !DIExpression()), !dbg !4158
  store i32 %iNrTrianglesIn, i32* %iNrTrianglesIn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iNrTrianglesIn.addr, metadata !4159, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.declare(metadata i32* %f, metadata !4161, metadata !DIExpression()), !dbg !4162
  store i32 0, i32* %f, align 4, !dbg !4162
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4163, metadata !DIExpression()), !dbg !4164
  store i32 0, i32* %i, align 4, !dbg !4164
  store i32 0, i32* %f, align 4, !dbg !4165
  br label %for.cond, !dbg !4167

for.cond:                                         ; preds = %for.inc62, %entry
  %0 = load i32, i32* %f, align 4, !dbg !4168
  %1 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !4170
  %cmp = icmp slt i32 %0, %1, !dbg !4171
  br i1 %cmp, label %for.body, label %for.end64, !dbg !4172

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4173
  br label %for.cond1, !dbg !4176

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !4177
  %cmp2 = icmp slt i32 %2, 3, !dbg !4179
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !4180

for.body3:                                        ; preds = %for.cond1
  %3 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !4181
  %4 = load i32, i32* %f, align 4, !dbg !4184
  %idxprom = sext i32 %4 to i64, !dbg !4181
  %arrayidx = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %3, i64 %idxprom, !dbg !4181
  %FaceNeighbors = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx, i32 0, i32 0, !dbg !4185
  %5 = load i32, i32* %i, align 4, !dbg !4186
  %idxprom4 = sext i32 %5 to i64, !dbg !4181
  %arrayidx5 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors, i64 0, i64 %idxprom4, !dbg !4181
  %6 = load i32, i32* %arrayidx5, align 4, !dbg !4181
  %cmp6 = icmp eq i32 %6, -1, !dbg !4187
  br i1 %cmp6, label %if.then, label %if.end60, !dbg !4188

if.then:                                          ; preds = %for.body3
  call void @llvm.dbg.declare(metadata i32* %i0_A, metadata !4189, metadata !DIExpression()), !dbg !4191
  %7 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !4192
  %8 = load i32, i32* %f, align 4, !dbg !4193
  %mul = mul nsw i32 %8, 3, !dbg !4194
  %9 = load i32, i32* %i, align 4, !dbg !4195
  %add = add nsw i32 %mul, %9, !dbg !4196
  %idxprom7 = sext i32 %add to i64, !dbg !4192
  %arrayidx8 = getelementptr inbounds i32, i32* %7, i64 %idxprom7, !dbg !4192
  %10 = load i32, i32* %arrayidx8, align 4, !dbg !4192
  store i32 %10, i32* %i0_A, align 4, !dbg !4191
  call void @llvm.dbg.declare(metadata i32* %i1_A, metadata !4197, metadata !DIExpression()), !dbg !4198
  %11 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !4199
  %12 = load i32, i32* %f, align 4, !dbg !4200
  %mul9 = mul nsw i32 %12, 3, !dbg !4201
  %13 = load i32, i32* %i, align 4, !dbg !4202
  %cmp10 = icmp slt i32 %13, 2, !dbg !4203
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !4202

cond.true:                                        ; preds = %if.then
  %14 = load i32, i32* %i, align 4, !dbg !4204
  %add11 = add nsw i32 %14, 1, !dbg !4205
  br label %cond.end, !dbg !4202

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !4202

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add11, %cond.true ], [ 0, %cond.false ], !dbg !4202
  %add12 = add nsw i32 %mul9, %cond, !dbg !4206
  %idxprom13 = sext i32 %add12 to i64, !dbg !4199
  %arrayidx14 = getelementptr inbounds i32, i32* %11, i64 %idxprom13, !dbg !4199
  %15 = load i32, i32* %arrayidx14, align 4, !dbg !4199
  store i32 %15, i32* %i1_A, align 4, !dbg !4198
  call void @llvm.dbg.declare(metadata i32* %bFound, metadata !4207, metadata !DIExpression()), !dbg !4208
  store i32 0, i32* %bFound, align 4, !dbg !4208
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4209, metadata !DIExpression()), !dbg !4210
  store i32 0, i32* %t, align 4, !dbg !4210
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4211, metadata !DIExpression()), !dbg !4212
  store i32 0, i32* %j, align 4, !dbg !4212
  br label %while.cond, !dbg !4213

while.cond:                                       ; preds = %if.end45, %cond.end
  %16 = load i32, i32* %bFound, align 4, !dbg !4214
  %tobool = icmp ne i32 %16, 0, !dbg !4214
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !4215

land.rhs:                                         ; preds = %while.cond
  %17 = load i32, i32* %t, align 4, !dbg !4216
  %18 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !4217
  %cmp15 = icmp slt i32 %17, %18, !dbg !4218
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %19 = phi i1 [ false, %while.cond ], [ %cmp15, %land.rhs ], !dbg !4219
  br i1 %19, label %while.body, label %while.end46, !dbg !4213

while.body:                                       ; preds = %land.end
  %20 = load i32, i32* %t, align 4, !dbg !4220
  %21 = load i32, i32* %f, align 4, !dbg !4223
  %cmp16 = icmp ne i32 %20, %21, !dbg !4224
  br i1 %cmp16, label %if.then17, label %if.end41, !dbg !4225

if.then17:                                        ; preds = %while.body
  store i32 0, i32* %j, align 4, !dbg !4226
  br label %while.cond18, !dbg !4228

while.cond18:                                     ; preds = %if.end, %if.then17
  %22 = load i32, i32* %bFound, align 4, !dbg !4229
  %tobool19 = icmp ne i32 %22, 0, !dbg !4229
  br i1 %tobool19, label %land.end22, label %land.rhs20, !dbg !4230

land.rhs20:                                       ; preds = %while.cond18
  %23 = load i32, i32* %j, align 4, !dbg !4231
  %cmp21 = icmp slt i32 %23, 3, !dbg !4232
  br label %land.end22

land.end22:                                       ; preds = %land.rhs20, %while.cond18
  %24 = phi i1 [ false, %while.cond18 ], [ %cmp21, %land.rhs20 ], !dbg !4233
  br i1 %24, label %while.body23, label %while.end, !dbg !4228

while.body23:                                     ; preds = %land.end22
  call void @llvm.dbg.declare(metadata i32* %i1_B, metadata !4234, metadata !DIExpression()), !dbg !4236
  %25 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !4237
  %26 = load i32, i32* %t, align 4, !dbg !4238
  %mul24 = mul nsw i32 %26, 3, !dbg !4239
  %27 = load i32, i32* %j, align 4, !dbg !4240
  %add25 = add nsw i32 %mul24, %27, !dbg !4241
  %idxprom26 = sext i32 %add25 to i64, !dbg !4237
  %arrayidx27 = getelementptr inbounds i32, i32* %25, i64 %idxprom26, !dbg !4237
  %28 = load i32, i32* %arrayidx27, align 4, !dbg !4237
  store i32 %28, i32* %i1_B, align 4, !dbg !4236
  call void @llvm.dbg.declare(metadata i32* %i0_B, metadata !4242, metadata !DIExpression()), !dbg !4243
  %29 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !4244
  %30 = load i32, i32* %t, align 4, !dbg !4245
  %mul28 = mul nsw i32 %30, 3, !dbg !4246
  %31 = load i32, i32* %j, align 4, !dbg !4247
  %cmp29 = icmp slt i32 %31, 2, !dbg !4248
  br i1 %cmp29, label %cond.true30, label %cond.false32, !dbg !4247

cond.true30:                                      ; preds = %while.body23
  %32 = load i32, i32* %j, align 4, !dbg !4249
  %add31 = add nsw i32 %32, 1, !dbg !4250
  br label %cond.end33, !dbg !4247

cond.false32:                                     ; preds = %while.body23
  br label %cond.end33, !dbg !4247

cond.end33:                                       ; preds = %cond.false32, %cond.true30
  %cond34 = phi i32 [ %add31, %cond.true30 ], [ 0, %cond.false32 ], !dbg !4247
  %add35 = add nsw i32 %mul28, %cond34, !dbg !4251
  %idxprom36 = sext i32 %add35 to i64, !dbg !4244
  %arrayidx37 = getelementptr inbounds i32, i32* %29, i64 %idxprom36, !dbg !4244
  %33 = load i32, i32* %arrayidx37, align 4, !dbg !4244
  store i32 %33, i32* %i0_B, align 4, !dbg !4243
  %34 = load i32, i32* %i0_A, align 4, !dbg !4252
  %35 = load i32, i32* %i0_B, align 4, !dbg !4254
  %cmp38 = icmp eq i32 %34, %35, !dbg !4255
  br i1 %cmp38, label %land.lhs.true, label %if.else, !dbg !4256

land.lhs.true:                                    ; preds = %cond.end33
  %36 = load i32, i32* %i1_A, align 4, !dbg !4257
  %37 = load i32, i32* %i1_B, align 4, !dbg !4258
  %cmp39 = icmp eq i32 %36, %37, !dbg !4259
  br i1 %cmp39, label %if.then40, label %if.else, !dbg !4260

if.then40:                                        ; preds = %land.lhs.true
  store i32 1, i32* %bFound, align 4, !dbg !4261
  br label %if.end, !dbg !4262

if.else:                                          ; preds = %land.lhs.true, %cond.end33
  %38 = load i32, i32* %j, align 4, !dbg !4263
  %inc = add nsw i32 %38, 1, !dbg !4263
  store i32 %inc, i32* %j, align 4, !dbg !4263
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then40
  br label %while.cond18, !dbg !4228, !llvm.loop !4264

while.end:                                        ; preds = %land.end22
  br label %if.end41, !dbg !4266

if.end41:                                         ; preds = %while.end, %while.body
  %39 = load i32, i32* %bFound, align 4, !dbg !4267
  %tobool42 = icmp ne i32 %39, 0, !dbg !4267
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !4269

if.then43:                                        ; preds = %if.end41
  %40 = load i32, i32* %t, align 4, !dbg !4270
  %inc44 = add nsw i32 %40, 1, !dbg !4270
  store i32 %inc44, i32* %t, align 4, !dbg !4270
  br label %if.end45, !dbg !4270

if.end45:                                         ; preds = %if.then43, %if.end41
  br label %while.cond, !dbg !4213, !llvm.loop !4271

while.end46:                                      ; preds = %land.end
  %41 = load i32, i32* %bFound, align 4, !dbg !4273
  %tobool47 = icmp ne i32 %41, 0, !dbg !4273
  br i1 %tobool47, label %if.then48, label %if.end59, !dbg !4275

if.then48:                                        ; preds = %while.end46
  %42 = load i32, i32* %t, align 4, !dbg !4276
  %43 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !4278
  %44 = load i32, i32* %f, align 4, !dbg !4279
  %idxprom49 = sext i32 %44 to i64, !dbg !4278
  %arrayidx50 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %43, i64 %idxprom49, !dbg !4278
  %FaceNeighbors51 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx50, i32 0, i32 0, !dbg !4280
  %45 = load i32, i32* %i, align 4, !dbg !4281
  %idxprom52 = sext i32 %45 to i64, !dbg !4278
  %arrayidx53 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors51, i64 0, i64 %idxprom52, !dbg !4278
  store i32 %42, i32* %arrayidx53, align 4, !dbg !4282
  %46 = load i32, i32* %f, align 4, !dbg !4283
  %47 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !4284
  %48 = load i32, i32* %t, align 4, !dbg !4285
  %idxprom54 = sext i32 %48 to i64, !dbg !4284
  %arrayidx55 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %47, i64 %idxprom54, !dbg !4284
  %FaceNeighbors56 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx55, i32 0, i32 0, !dbg !4286
  %49 = load i32, i32* %j, align 4, !dbg !4287
  %idxprom57 = sext i32 %49 to i64, !dbg !4284
  %arrayidx58 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors56, i64 0, i64 %idxprom57, !dbg !4284
  store i32 %46, i32* %arrayidx58, align 4, !dbg !4288
  br label %if.end59, !dbg !4289

if.end59:                                         ; preds = %if.then48, %while.end46
  br label %if.end60, !dbg !4290

if.end60:                                         ; preds = %if.end59, %for.body3
  br label %for.inc, !dbg !4291

for.inc:                                          ; preds = %if.end60
  %50 = load i32, i32* %i, align 4, !dbg !4292
  %inc61 = add nsw i32 %50, 1, !dbg !4292
  store i32 %inc61, i32* %i, align 4, !dbg !4292
  br label %for.cond1, !dbg !4293, !llvm.loop !4294

for.end:                                          ; preds = %for.cond1
  br label %for.inc62, !dbg !4296

for.inc62:                                        ; preds = %for.end
  %51 = load i32, i32* %f, align 4, !dbg !4297
  %inc63 = add nsw i32 %51, 1, !dbg !4297
  store i32 %inc63, i32* %f, align 4, !dbg !4297
  br label %for.cond, !dbg !4298, !llvm.loop !4299

for.end64:                                        ; preds = %for.cond
  ret void, !dbg !4301
}

; Function Attrs: noinline nounwind uwtable
define internal void @BuildNeighborsFast(%struct.STriInfo* %pTriInfos, %union.SEdge* %pEdges, i32* %piTriListIn, i32 %iNrTrianglesIn) #0 !dbg !4302 {
entry:
  %pTriInfos.addr = alloca %struct.STriInfo*, align 8
  %pEdges.addr = alloca %union.SEdge*, align 8
  %piTriListIn.addr = alloca i32*, align 8
  %iNrTrianglesIn.addr = alloca i32, align 4
  %uSeed = alloca i32, align 4
  %iEntries = alloca i32, align 4
  %iCurStartIndex = alloca i32, align 4
  %f = alloca i32, align 4
  %i = alloca i32, align 4
  %i0 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %iL = alloca i32, align 4
  %iR = alloca i32, align 4
  %iL80 = alloca i32, align 4
  %iR81 = alloca i32, align 4
  %i090 = alloca i32, align 4
  %i195 = alloca i32, align 4
  %f100 = alloca i32, align 4
  %bUnassigned_A = alloca i32, align 4
  %i0_A = alloca i32, align 4
  %i1_A = alloca i32, align 4
  %edgenum_A = alloca i32, align 4
  %edgenum_B = alloca i32, align 4
  %j = alloca i32, align 4
  %t = alloca i32, align 4
  %bNotFound = alloca i32, align 4
  %bUnassigned_B = alloca i32, align 4
  %i0_B = alloca i32, align 4
  %i1_B = alloca i32, align 4
  %t161 = alloca i32, align 4
  store %struct.STriInfo* %pTriInfos, %struct.STriInfo** %pTriInfos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pTriInfos.addr, metadata !4305, metadata !DIExpression()), !dbg !4306
  store %union.SEdge* %pEdges, %union.SEdge** %pEdges.addr, align 8
  call void @llvm.dbg.declare(metadata %union.SEdge** %pEdges.addr, metadata !4307, metadata !DIExpression()), !dbg !4308
  store i32* %piTriListIn, i32** %piTriListIn.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriListIn.addr, metadata !4309, metadata !DIExpression()), !dbg !4310
  store i32 %iNrTrianglesIn, i32* %iNrTrianglesIn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iNrTrianglesIn.addr, metadata !4311, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.declare(metadata i32* %uSeed, metadata !4313, metadata !DIExpression()), !dbg !4314
  store i32 39871946, i32* %uSeed, align 4, !dbg !4314
  call void @llvm.dbg.declare(metadata i32* %iEntries, metadata !4315, metadata !DIExpression()), !dbg !4316
  store i32 0, i32* %iEntries, align 4, !dbg !4316
  call void @llvm.dbg.declare(metadata i32* %iCurStartIndex, metadata !4317, metadata !DIExpression()), !dbg !4318
  store i32 -1, i32* %iCurStartIndex, align 4, !dbg !4318
  call void @llvm.dbg.declare(metadata i32* %f, metadata !4319, metadata !DIExpression()), !dbg !4320
  store i32 0, i32* %f, align 4, !dbg !4320
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4321, metadata !DIExpression()), !dbg !4322
  store i32 0, i32* %i, align 4, !dbg !4322
  store i32 0, i32* %f, align 4, !dbg !4323
  br label %for.cond, !dbg !4325

for.cond:                                         ; preds = %for.inc37, %entry
  %0 = load i32, i32* %f, align 4, !dbg !4326
  %1 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !4328
  %cmp = icmp slt i32 %0, %1, !dbg !4329
  br i1 %cmp, label %for.body, label %for.end39, !dbg !4330

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4331
  br label %for.cond1, !dbg !4333

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !4334
  %cmp2 = icmp slt i32 %2, 3, !dbg !4336
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !4337

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %i0, metadata !4338, metadata !DIExpression()), !dbg !4340
  %3 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !4341
  %4 = load i32, i32* %f, align 4, !dbg !4342
  %mul = mul nsw i32 %4, 3, !dbg !4343
  %5 = load i32, i32* %i, align 4, !dbg !4344
  %add = add nsw i32 %mul, %5, !dbg !4345
  %idxprom = sext i32 %add to i64, !dbg !4341
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !4341
  %6 = load i32, i32* %arrayidx, align 4, !dbg !4341
  store i32 %6, i32* %i0, align 4, !dbg !4340
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !4346, metadata !DIExpression()), !dbg !4347
  %7 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !4348
  %8 = load i32, i32* %f, align 4, !dbg !4349
  %mul4 = mul nsw i32 %8, 3, !dbg !4350
  %9 = load i32, i32* %i, align 4, !dbg !4351
  %cmp5 = icmp slt i32 %9, 2, !dbg !4352
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !4351

cond.true:                                        ; preds = %for.body3
  %10 = load i32, i32* %i, align 4, !dbg !4353
  %add6 = add nsw i32 %10, 1, !dbg !4354
  br label %cond.end, !dbg !4351

cond.false:                                       ; preds = %for.body3
  br label %cond.end, !dbg !4351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ 0, %cond.false ], !dbg !4351
  %add7 = add nsw i32 %mul4, %cond, !dbg !4355
  %idxprom8 = sext i32 %add7 to i64, !dbg !4348
  %arrayidx9 = getelementptr inbounds i32, i32* %7, i64 %idxprom8, !dbg !4348
  %11 = load i32, i32* %arrayidx9, align 4, !dbg !4348
  store i32 %11, i32* %i1, align 4, !dbg !4347
  %12 = load i32, i32* %i0, align 4, !dbg !4356
  %13 = load i32, i32* %i1, align 4, !dbg !4357
  %cmp10 = icmp slt i32 %12, %13, !dbg !4358
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !4356

cond.true11:                                      ; preds = %cond.end
  %14 = load i32, i32* %i0, align 4, !dbg !4359
  br label %cond.end13, !dbg !4356

cond.false12:                                     ; preds = %cond.end
  %15 = load i32, i32* %i1, align 4, !dbg !4360
  br label %cond.end13, !dbg !4356

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ %14, %cond.true11 ], [ %15, %cond.false12 ], !dbg !4356
  %16 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4361
  %17 = load i32, i32* %f, align 4, !dbg !4362
  %mul15 = mul nsw i32 %17, 3, !dbg !4363
  %18 = load i32, i32* %i, align 4, !dbg !4364
  %add16 = add nsw i32 %mul15, %18, !dbg !4365
  %idxprom17 = sext i32 %add16 to i64, !dbg !4361
  %arrayidx18 = getelementptr inbounds %union.SEdge, %union.SEdge* %16, i64 %idxprom17, !dbg !4361
  %data = bitcast %union.SEdge* %arrayidx18 to %struct.anon*, !dbg !4366
  %i019 = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 0, !dbg !4367
  store i32 %cond14, i32* %i019, align 4, !dbg !4368
  %19 = load i32, i32* %i0, align 4, !dbg !4369
  %20 = load i32, i32* %i1, align 4, !dbg !4370
  %cmp20 = icmp slt i32 %19, %20, !dbg !4371
  br i1 %cmp20, label %cond.false22, label %cond.true21, !dbg !4372

cond.true21:                                      ; preds = %cond.end13
  %21 = load i32, i32* %i0, align 4, !dbg !4373
  br label %cond.end23, !dbg !4372

cond.false22:                                     ; preds = %cond.end13
  %22 = load i32, i32* %i1, align 4, !dbg !4374
  br label %cond.end23, !dbg !4372

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32 [ %21, %cond.true21 ], [ %22, %cond.false22 ], !dbg !4372
  %23 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4375
  %24 = load i32, i32* %f, align 4, !dbg !4376
  %mul25 = mul nsw i32 %24, 3, !dbg !4377
  %25 = load i32, i32* %i, align 4, !dbg !4378
  %add26 = add nsw i32 %mul25, %25, !dbg !4379
  %idxprom27 = sext i32 %add26 to i64, !dbg !4375
  %arrayidx28 = getelementptr inbounds %union.SEdge, %union.SEdge* %23, i64 %idxprom27, !dbg !4375
  %data29 = bitcast %union.SEdge* %arrayidx28 to %struct.anon*, !dbg !4380
  %i130 = getelementptr inbounds %struct.anon, %struct.anon* %data29, i32 0, i32 1, !dbg !4381
  store i32 %cond24, i32* %i130, align 4, !dbg !4382
  %26 = load i32, i32* %f, align 4, !dbg !4383
  %27 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4384
  %28 = load i32, i32* %f, align 4, !dbg !4385
  %mul31 = mul nsw i32 %28, 3, !dbg !4386
  %29 = load i32, i32* %i, align 4, !dbg !4387
  %add32 = add nsw i32 %mul31, %29, !dbg !4388
  %idxprom33 = sext i32 %add32 to i64, !dbg !4384
  %arrayidx34 = getelementptr inbounds %union.SEdge, %union.SEdge* %27, i64 %idxprom33, !dbg !4384
  %data35 = bitcast %union.SEdge* %arrayidx34 to %struct.anon*, !dbg !4389
  %f36 = getelementptr inbounds %struct.anon, %struct.anon* %data35, i32 0, i32 2, !dbg !4390
  store i32 %26, i32* %f36, align 4, !dbg !4391
  br label %for.inc, !dbg !4392

for.inc:                                          ; preds = %cond.end23
  %30 = load i32, i32* %i, align 4, !dbg !4393
  %inc = add nsw i32 %30, 1, !dbg !4393
  store i32 %inc, i32* %i, align 4, !dbg !4393
  br label %for.cond1, !dbg !4394, !llvm.loop !4395

for.end:                                          ; preds = %for.cond1
  br label %for.inc37, !dbg !4396

for.inc37:                                        ; preds = %for.end
  %31 = load i32, i32* %f, align 4, !dbg !4397
  %inc38 = add nsw i32 %31, 1, !dbg !4397
  store i32 %inc38, i32* %f, align 4, !dbg !4397
  br label %for.cond, !dbg !4398, !llvm.loop !4399

for.end39:                                        ; preds = %for.cond
  %32 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4401
  %33 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !4402
  %mul40 = mul nsw i32 %33, 3, !dbg !4403
  %sub = sub nsw i32 %mul40, 1, !dbg !4404
  %34 = load i32, i32* %uSeed, align 4, !dbg !4405
  call void @QuickSortEdges(%union.SEdge* %32, i32 0, i32 %sub, i32 0, i32 %34), !dbg !4406
  %35 = load i32, i32* %iNrTrianglesIn.addr, align 4, !dbg !4407
  %mul41 = mul nsw i32 %35, 3, !dbg !4408
  store i32 %mul41, i32* %iEntries, align 4, !dbg !4409
  store i32 0, i32* %iCurStartIndex, align 4, !dbg !4410
  store i32 1, i32* %i, align 4, !dbg !4411
  br label %for.cond42, !dbg !4413

for.cond42:                                       ; preds = %for.inc55, %for.end39
  %36 = load i32, i32* %i, align 4, !dbg !4414
  %37 = load i32, i32* %iEntries, align 4, !dbg !4416
  %cmp43 = icmp slt i32 %36, %37, !dbg !4417
  br i1 %cmp43, label %for.body44, label %for.end57, !dbg !4418

for.body44:                                       ; preds = %for.cond42
  %38 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4419
  %39 = load i32, i32* %iCurStartIndex, align 4, !dbg !4422
  %idxprom45 = sext i32 %39 to i64, !dbg !4419
  %arrayidx46 = getelementptr inbounds %union.SEdge, %union.SEdge* %38, i64 %idxprom45, !dbg !4419
  %data47 = bitcast %union.SEdge* %arrayidx46 to %struct.anon*, !dbg !4423
  %i048 = getelementptr inbounds %struct.anon, %struct.anon* %data47, i32 0, i32 0, !dbg !4424
  %40 = load i32, i32* %i048, align 4, !dbg !4424
  %41 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4425
  %42 = load i32, i32* %i, align 4, !dbg !4426
  %idxprom49 = sext i32 %42 to i64, !dbg !4425
  %arrayidx50 = getelementptr inbounds %union.SEdge, %union.SEdge* %41, i64 %idxprom49, !dbg !4425
  %data51 = bitcast %union.SEdge* %arrayidx50 to %struct.anon*, !dbg !4427
  %i052 = getelementptr inbounds %struct.anon, %struct.anon* %data51, i32 0, i32 0, !dbg !4428
  %43 = load i32, i32* %i052, align 4, !dbg !4428
  %cmp53 = icmp ne i32 %40, %43, !dbg !4429
  br i1 %cmp53, label %if.then, label %if.end, !dbg !4430

if.then:                                          ; preds = %for.body44
  call void @llvm.dbg.declare(metadata i32* %iL, metadata !4431, metadata !DIExpression()), !dbg !4433
  %44 = load i32, i32* %iCurStartIndex, align 4, !dbg !4434
  store i32 %44, i32* %iL, align 4, !dbg !4433
  call void @llvm.dbg.declare(metadata i32* %iR, metadata !4435, metadata !DIExpression()), !dbg !4436
  %45 = load i32, i32* %i, align 4, !dbg !4437
  %sub54 = sub nsw i32 %45, 1, !dbg !4438
  store i32 %sub54, i32* %iR, align 4, !dbg !4436
  %46 = load i32, i32* %i, align 4, !dbg !4439
  store i32 %46, i32* %iCurStartIndex, align 4, !dbg !4440
  %47 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4441
  %48 = load i32, i32* %iL, align 4, !dbg !4442
  %49 = load i32, i32* %iR, align 4, !dbg !4443
  %50 = load i32, i32* %uSeed, align 4, !dbg !4444
  call void @QuickSortEdges(%union.SEdge* %47, i32 %48, i32 %49, i32 1, i32 %50), !dbg !4445
  br label %if.end, !dbg !4446

if.end:                                           ; preds = %if.then, %for.body44
  br label %for.inc55, !dbg !4447

for.inc55:                                        ; preds = %if.end
  %51 = load i32, i32* %i, align 4, !dbg !4448
  %inc56 = add nsw i32 %51, 1, !dbg !4448
  store i32 %inc56, i32* %i, align 4, !dbg !4448
  br label %for.cond42, !dbg !4449, !llvm.loop !4450

for.end57:                                        ; preds = %for.cond42
  store i32 0, i32* %iCurStartIndex, align 4, !dbg !4452
  store i32 1, i32* %i, align 4, !dbg !4453
  br label %for.cond58, !dbg !4455

for.cond58:                                       ; preds = %for.inc84, %for.end57
  %52 = load i32, i32* %i, align 4, !dbg !4456
  %53 = load i32, i32* %iEntries, align 4, !dbg !4458
  %cmp59 = icmp slt i32 %52, %53, !dbg !4459
  br i1 %cmp59, label %for.body60, label %for.end86, !dbg !4460

for.body60:                                       ; preds = %for.cond58
  %54 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4461
  %55 = load i32, i32* %iCurStartIndex, align 4, !dbg !4464
  %idxprom61 = sext i32 %55 to i64, !dbg !4461
  %arrayidx62 = getelementptr inbounds %union.SEdge, %union.SEdge* %54, i64 %idxprom61, !dbg !4461
  %data63 = bitcast %union.SEdge* %arrayidx62 to %struct.anon*, !dbg !4465
  %i064 = getelementptr inbounds %struct.anon, %struct.anon* %data63, i32 0, i32 0, !dbg !4466
  %56 = load i32, i32* %i064, align 4, !dbg !4466
  %57 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4467
  %58 = load i32, i32* %i, align 4, !dbg !4468
  %idxprom65 = sext i32 %58 to i64, !dbg !4467
  %arrayidx66 = getelementptr inbounds %union.SEdge, %union.SEdge* %57, i64 %idxprom65, !dbg !4467
  %data67 = bitcast %union.SEdge* %arrayidx66 to %struct.anon*, !dbg !4469
  %i068 = getelementptr inbounds %struct.anon, %struct.anon* %data67, i32 0, i32 0, !dbg !4470
  %59 = load i32, i32* %i068, align 4, !dbg !4470
  %cmp69 = icmp ne i32 %56, %59, !dbg !4471
  br i1 %cmp69, label %if.then79, label %lor.lhs.false, !dbg !4472

lor.lhs.false:                                    ; preds = %for.body60
  %60 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4473
  %61 = load i32, i32* %iCurStartIndex, align 4, !dbg !4474
  %idxprom70 = sext i32 %61 to i64, !dbg !4473
  %arrayidx71 = getelementptr inbounds %union.SEdge, %union.SEdge* %60, i64 %idxprom70, !dbg !4473
  %data72 = bitcast %union.SEdge* %arrayidx71 to %struct.anon*, !dbg !4475
  %i173 = getelementptr inbounds %struct.anon, %struct.anon* %data72, i32 0, i32 1, !dbg !4476
  %62 = load i32, i32* %i173, align 4, !dbg !4476
  %63 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4477
  %64 = load i32, i32* %i, align 4, !dbg !4478
  %idxprom74 = sext i32 %64 to i64, !dbg !4477
  %arrayidx75 = getelementptr inbounds %union.SEdge, %union.SEdge* %63, i64 %idxprom74, !dbg !4477
  %data76 = bitcast %union.SEdge* %arrayidx75 to %struct.anon*, !dbg !4479
  %i177 = getelementptr inbounds %struct.anon, %struct.anon* %data76, i32 0, i32 1, !dbg !4480
  %65 = load i32, i32* %i177, align 4, !dbg !4480
  %cmp78 = icmp ne i32 %62, %65, !dbg !4481
  br i1 %cmp78, label %if.then79, label %if.end83, !dbg !4482

if.then79:                                        ; preds = %lor.lhs.false, %for.body60
  call void @llvm.dbg.declare(metadata i32* %iL80, metadata !4483, metadata !DIExpression()), !dbg !4485
  %66 = load i32, i32* %iCurStartIndex, align 4, !dbg !4486
  store i32 %66, i32* %iL80, align 4, !dbg !4485
  call void @llvm.dbg.declare(metadata i32* %iR81, metadata !4487, metadata !DIExpression()), !dbg !4488
  %67 = load i32, i32* %i, align 4, !dbg !4489
  %sub82 = sub nsw i32 %67, 1, !dbg !4490
  store i32 %sub82, i32* %iR81, align 4, !dbg !4488
  %68 = load i32, i32* %i, align 4, !dbg !4491
  store i32 %68, i32* %iCurStartIndex, align 4, !dbg !4492
  %69 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4493
  %70 = load i32, i32* %iL80, align 4, !dbg !4494
  %71 = load i32, i32* %iR81, align 4, !dbg !4495
  %72 = load i32, i32* %uSeed, align 4, !dbg !4496
  call void @QuickSortEdges(%union.SEdge* %69, i32 %70, i32 %71, i32 2, i32 %72), !dbg !4497
  br label %if.end83, !dbg !4498

if.end83:                                         ; preds = %if.then79, %lor.lhs.false
  br label %for.inc84, !dbg !4499

for.inc84:                                        ; preds = %if.end83
  %73 = load i32, i32* %i, align 4, !dbg !4500
  %inc85 = add nsw i32 %73, 1, !dbg !4500
  store i32 %inc85, i32* %i, align 4, !dbg !4500
  br label %for.cond58, !dbg !4501, !llvm.loop !4502

for.end86:                                        ; preds = %for.cond58
  store i32 0, i32* %i, align 4, !dbg !4504
  br label %for.cond87, !dbg !4506

for.cond87:                                       ; preds = %for.inc178, %for.end86
  %74 = load i32, i32* %i, align 4, !dbg !4507
  %75 = load i32, i32* %iEntries, align 4, !dbg !4509
  %cmp88 = icmp slt i32 %74, %75, !dbg !4510
  br i1 %cmp88, label %for.body89, label %for.end180, !dbg !4511

for.body89:                                       ; preds = %for.cond87
  call void @llvm.dbg.declare(metadata i32* %i090, metadata !4512, metadata !DIExpression()), !dbg !4514
  %76 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4515
  %77 = load i32, i32* %i, align 4, !dbg !4516
  %idxprom91 = sext i32 %77 to i64, !dbg !4515
  %arrayidx92 = getelementptr inbounds %union.SEdge, %union.SEdge* %76, i64 %idxprom91, !dbg !4515
  %data93 = bitcast %union.SEdge* %arrayidx92 to %struct.anon*, !dbg !4517
  %i094 = getelementptr inbounds %struct.anon, %struct.anon* %data93, i32 0, i32 0, !dbg !4518
  %78 = load i32, i32* %i094, align 4, !dbg !4518
  store i32 %78, i32* %i090, align 4, !dbg !4514
  call void @llvm.dbg.declare(metadata i32* %i195, metadata !4519, metadata !DIExpression()), !dbg !4520
  %79 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4521
  %80 = load i32, i32* %i, align 4, !dbg !4522
  %idxprom96 = sext i32 %80 to i64, !dbg !4521
  %arrayidx97 = getelementptr inbounds %union.SEdge, %union.SEdge* %79, i64 %idxprom96, !dbg !4521
  %data98 = bitcast %union.SEdge* %arrayidx97 to %struct.anon*, !dbg !4523
  %i199 = getelementptr inbounds %struct.anon, %struct.anon* %data98, i32 0, i32 1, !dbg !4524
  %81 = load i32, i32* %i199, align 4, !dbg !4524
  store i32 %81, i32* %i195, align 4, !dbg !4520
  call void @llvm.dbg.declare(metadata i32* %f100, metadata !4525, metadata !DIExpression()), !dbg !4526
  %82 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4527
  %83 = load i32, i32* %i, align 4, !dbg !4528
  %idxprom101 = sext i32 %83 to i64, !dbg !4527
  %arrayidx102 = getelementptr inbounds %union.SEdge, %union.SEdge* %82, i64 %idxprom101, !dbg !4527
  %data103 = bitcast %union.SEdge* %arrayidx102 to %struct.anon*, !dbg !4529
  %f104 = getelementptr inbounds %struct.anon, %struct.anon* %data103, i32 0, i32 2, !dbg !4530
  %84 = load i32, i32* %f104, align 4, !dbg !4530
  store i32 %84, i32* %f100, align 4, !dbg !4526
  call void @llvm.dbg.declare(metadata i32* %bUnassigned_A, metadata !4531, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.declare(metadata i32* %i0_A, metadata !4533, metadata !DIExpression()), !dbg !4534
  call void @llvm.dbg.declare(metadata i32* %i1_A, metadata !4535, metadata !DIExpression()), !dbg !4536
  call void @llvm.dbg.declare(metadata i32* %edgenum_A, metadata !4537, metadata !DIExpression()), !dbg !4538
  call void @llvm.dbg.declare(metadata i32* %edgenum_B, metadata !4539, metadata !DIExpression()), !dbg !4540
  store i32 0, i32* %edgenum_B, align 4, !dbg !4540
  %85 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !4541
  %86 = load i32, i32* %f100, align 4, !dbg !4542
  %mul105 = mul nsw i32 %86, 3, !dbg !4543
  %idxprom106 = sext i32 %mul105 to i64, !dbg !4541
  %arrayidx107 = getelementptr inbounds i32, i32* %85, i64 %idxprom106, !dbg !4541
  %87 = load i32, i32* %i090, align 4, !dbg !4544
  %88 = load i32, i32* %i195, align 4, !dbg !4545
  call void @GetEdge(i32* %i0_A, i32* %i1_A, i32* %edgenum_A, i32* %arrayidx107, i32 %87, i32 %88), !dbg !4546
  %89 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !4547
  %90 = load i32, i32* %f100, align 4, !dbg !4548
  %idxprom108 = sext i32 %90 to i64, !dbg !4547
  %arrayidx109 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %89, i64 %idxprom108, !dbg !4547
  %FaceNeighbors = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx109, i32 0, i32 0, !dbg !4549
  %91 = load i32, i32* %edgenum_A, align 4, !dbg !4550
  %idxprom110 = sext i32 %91 to i64, !dbg !4547
  %arrayidx111 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors, i64 0, i64 %idxprom110, !dbg !4547
  %92 = load i32, i32* %arrayidx111, align 4, !dbg !4547
  %cmp112 = icmp eq i32 %92, -1, !dbg !4551
  %93 = zext i1 %cmp112 to i64, !dbg !4547
  %cond113 = select i1 %cmp112, i32 1, i32 0, !dbg !4547
  store i32 %cond113, i32* %bUnassigned_A, align 4, !dbg !4552
  %94 = load i32, i32* %bUnassigned_A, align 4, !dbg !4553
  %tobool = icmp ne i32 %94, 0, !dbg !4553
  br i1 %tobool, label %if.then114, label %if.end177, !dbg !4555

if.then114:                                       ; preds = %for.body89
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4556, metadata !DIExpression()), !dbg !4558
  %95 = load i32, i32* %i, align 4, !dbg !4559
  %add115 = add nsw i32 %95, 1, !dbg !4560
  store i32 %add115, i32* %j, align 4, !dbg !4558
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4561, metadata !DIExpression()), !dbg !4562
  call void @llvm.dbg.declare(metadata i32* %bNotFound, metadata !4563, metadata !DIExpression()), !dbg !4564
  store i32 1, i32* %bNotFound, align 4, !dbg !4564
  br label %while.cond, !dbg !4565

while.cond:                                       ; preds = %if.end158, %if.then114
  %96 = load i32, i32* %j, align 4, !dbg !4566
  %97 = load i32, i32* %iEntries, align 4, !dbg !4567
  %cmp116 = icmp slt i32 %96, %97, !dbg !4568
  br i1 %cmp116, label %land.lhs.true, label %land.end, !dbg !4569

land.lhs.true:                                    ; preds = %while.cond
  %98 = load i32, i32* %i090, align 4, !dbg !4570
  %99 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4571
  %100 = load i32, i32* %j, align 4, !dbg !4572
  %idxprom117 = sext i32 %100 to i64, !dbg !4571
  %arrayidx118 = getelementptr inbounds %union.SEdge, %union.SEdge* %99, i64 %idxprom117, !dbg !4571
  %data119 = bitcast %union.SEdge* %arrayidx118 to %struct.anon*, !dbg !4573
  %i0120 = getelementptr inbounds %struct.anon, %struct.anon* %data119, i32 0, i32 0, !dbg !4574
  %101 = load i32, i32* %i0120, align 4, !dbg !4574
  %cmp121 = icmp eq i32 %98, %101, !dbg !4575
  br i1 %cmp121, label %land.lhs.true122, label %land.end, !dbg !4576

land.lhs.true122:                                 ; preds = %land.lhs.true
  %102 = load i32, i32* %i195, align 4, !dbg !4577
  %103 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4578
  %104 = load i32, i32* %j, align 4, !dbg !4579
  %idxprom123 = sext i32 %104 to i64, !dbg !4578
  %arrayidx124 = getelementptr inbounds %union.SEdge, %union.SEdge* %103, i64 %idxprom123, !dbg !4578
  %data125 = bitcast %union.SEdge* %arrayidx124 to %struct.anon*, !dbg !4580
  %i1126 = getelementptr inbounds %struct.anon, %struct.anon* %data125, i32 0, i32 1, !dbg !4581
  %105 = load i32, i32* %i1126, align 4, !dbg !4581
  %cmp127 = icmp eq i32 %102, %105, !dbg !4582
  br i1 %cmp127, label %land.rhs, label %land.end, !dbg !4583

land.rhs:                                         ; preds = %land.lhs.true122
  %106 = load i32, i32* %bNotFound, align 4, !dbg !4584
  %tobool128 = icmp ne i32 %106, 0, !dbg !4583
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true122, %land.lhs.true, %while.cond
  %107 = phi i1 [ false, %land.lhs.true122 ], [ false, %land.lhs.true ], [ false, %while.cond ], [ %tobool128, %land.rhs ], !dbg !4585
  br i1 %107, label %while.body, label %while.end, !dbg !4565

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %bUnassigned_B, metadata !4586, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.declare(metadata i32* %i0_B, metadata !4589, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.declare(metadata i32* %i1_B, metadata !4591, metadata !DIExpression()), !dbg !4592
  %108 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4593
  %109 = load i32, i32* %j, align 4, !dbg !4594
  %idxprom129 = sext i32 %109 to i64, !dbg !4593
  %arrayidx130 = getelementptr inbounds %union.SEdge, %union.SEdge* %108, i64 %idxprom129, !dbg !4593
  %data131 = bitcast %union.SEdge* %arrayidx130 to %struct.anon*, !dbg !4595
  %f132 = getelementptr inbounds %struct.anon, %struct.anon* %data131, i32 0, i32 2, !dbg !4596
  %110 = load i32, i32* %f132, align 4, !dbg !4596
  store i32 %110, i32* %t, align 4, !dbg !4597
  %111 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !4598
  %112 = load i32, i32* %t, align 4, !dbg !4599
  %mul133 = mul nsw i32 %112, 3, !dbg !4600
  %idxprom134 = sext i32 %mul133 to i64, !dbg !4598
  %arrayidx135 = getelementptr inbounds i32, i32* %111, i64 %idxprom134, !dbg !4598
  %113 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4601
  %114 = load i32, i32* %j, align 4, !dbg !4602
  %idxprom136 = sext i32 %114 to i64, !dbg !4601
  %arrayidx137 = getelementptr inbounds %union.SEdge, %union.SEdge* %113, i64 %idxprom136, !dbg !4601
  %data138 = bitcast %union.SEdge* %arrayidx137 to %struct.anon*, !dbg !4603
  %i0139 = getelementptr inbounds %struct.anon, %struct.anon* %data138, i32 0, i32 0, !dbg !4604
  %115 = load i32, i32* %i0139, align 4, !dbg !4604
  %116 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4605
  %117 = load i32, i32* %j, align 4, !dbg !4606
  %idxprom140 = sext i32 %117 to i64, !dbg !4605
  %arrayidx141 = getelementptr inbounds %union.SEdge, %union.SEdge* %116, i64 %idxprom140, !dbg !4605
  %data142 = bitcast %union.SEdge* %arrayidx141 to %struct.anon*, !dbg !4607
  %i1143 = getelementptr inbounds %struct.anon, %struct.anon* %data142, i32 0, i32 1, !dbg !4608
  %118 = load i32, i32* %i1143, align 4, !dbg !4608
  call void @GetEdge(i32* %i1_B, i32* %i0_B, i32* %edgenum_B, i32* %arrayidx135, i32 %115, i32 %118), !dbg !4609
  %119 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !4610
  %120 = load i32, i32* %t, align 4, !dbg !4611
  %idxprom144 = sext i32 %120 to i64, !dbg !4610
  %arrayidx145 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %119, i64 %idxprom144, !dbg !4610
  %FaceNeighbors146 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx145, i32 0, i32 0, !dbg !4612
  %121 = load i32, i32* %edgenum_B, align 4, !dbg !4613
  %idxprom147 = sext i32 %121 to i64, !dbg !4610
  %arrayidx148 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors146, i64 0, i64 %idxprom147, !dbg !4610
  %122 = load i32, i32* %arrayidx148, align 4, !dbg !4610
  %cmp149 = icmp eq i32 %122, -1, !dbg !4614
  %123 = zext i1 %cmp149 to i64, !dbg !4610
  %cond150 = select i1 %cmp149, i32 1, i32 0, !dbg !4610
  store i32 %cond150, i32* %bUnassigned_B, align 4, !dbg !4615
  %124 = load i32, i32* %i0_A, align 4, !dbg !4616
  %125 = load i32, i32* %i0_B, align 4, !dbg !4618
  %cmp151 = icmp eq i32 %124, %125, !dbg !4619
  br i1 %cmp151, label %land.lhs.true152, label %if.else, !dbg !4620

land.lhs.true152:                                 ; preds = %while.body
  %126 = load i32, i32* %i1_A, align 4, !dbg !4621
  %127 = load i32, i32* %i1_B, align 4, !dbg !4622
  %cmp153 = icmp eq i32 %126, %127, !dbg !4623
  br i1 %cmp153, label %land.lhs.true154, label %if.else, !dbg !4624

land.lhs.true154:                                 ; preds = %land.lhs.true152
  %128 = load i32, i32* %bUnassigned_B, align 4, !dbg !4625
  %tobool155 = icmp ne i32 %128, 0, !dbg !4625
  br i1 %tobool155, label %if.then156, label %if.else, !dbg !4626

if.then156:                                       ; preds = %land.lhs.true154
  store i32 0, i32* %bNotFound, align 4, !dbg !4627
  br label %if.end158, !dbg !4628

if.else:                                          ; preds = %land.lhs.true154, %land.lhs.true152, %while.body
  %129 = load i32, i32* %j, align 4, !dbg !4629
  %inc157 = add nsw i32 %129, 1, !dbg !4629
  store i32 %inc157, i32* %j, align 4, !dbg !4629
  br label %if.end158

if.end158:                                        ; preds = %if.else, %if.then156
  br label %while.cond, !dbg !4565, !llvm.loop !4630

while.end:                                        ; preds = %land.end
  %130 = load i32, i32* %bNotFound, align 4, !dbg !4632
  %tobool159 = icmp ne i32 %130, 0, !dbg !4632
  br i1 %tobool159, label %if.end176, label %if.then160, !dbg !4634

if.then160:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %t161, metadata !4635, metadata !DIExpression()), !dbg !4637
  %131 = load %union.SEdge*, %union.SEdge** %pEdges.addr, align 8, !dbg !4638
  %132 = load i32, i32* %j, align 4, !dbg !4639
  %idxprom162 = sext i32 %132 to i64, !dbg !4638
  %arrayidx163 = getelementptr inbounds %union.SEdge, %union.SEdge* %131, i64 %idxprom162, !dbg !4638
  %data164 = bitcast %union.SEdge* %arrayidx163 to %struct.anon*, !dbg !4640
  %f165 = getelementptr inbounds %struct.anon, %struct.anon* %data164, i32 0, i32 2, !dbg !4641
  %133 = load i32, i32* %f165, align 4, !dbg !4641
  store i32 %133, i32* %t161, align 4, !dbg !4637
  %134 = load i32, i32* %t161, align 4, !dbg !4642
  %135 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !4643
  %136 = load i32, i32* %f100, align 4, !dbg !4644
  %idxprom166 = sext i32 %136 to i64, !dbg !4643
  %arrayidx167 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %135, i64 %idxprom166, !dbg !4643
  %FaceNeighbors168 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx167, i32 0, i32 0, !dbg !4645
  %137 = load i32, i32* %edgenum_A, align 4, !dbg !4646
  %idxprom169 = sext i32 %137 to i64, !dbg !4643
  %arrayidx170 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors168, i64 0, i64 %idxprom169, !dbg !4643
  store i32 %134, i32* %arrayidx170, align 4, !dbg !4647
  %138 = load i32, i32* %f100, align 4, !dbg !4648
  %139 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !4649
  %140 = load i32, i32* %t161, align 4, !dbg !4650
  %idxprom171 = sext i32 %140 to i64, !dbg !4649
  %arrayidx172 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %139, i64 %idxprom171, !dbg !4649
  %FaceNeighbors173 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx172, i32 0, i32 0, !dbg !4651
  %141 = load i32, i32* %edgenum_B, align 4, !dbg !4652
  %idxprom174 = sext i32 %141 to i64, !dbg !4649
  %arrayidx175 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors173, i64 0, i64 %idxprom174, !dbg !4649
  store i32 %138, i32* %arrayidx175, align 4, !dbg !4653
  br label %if.end176, !dbg !4654

if.end176:                                        ; preds = %if.then160, %while.end
  br label %if.end177, !dbg !4655

if.end177:                                        ; preds = %if.end176, %for.body89
  br label %for.inc178, !dbg !4656

for.inc178:                                       ; preds = %if.end177
  %142 = load i32, i32* %i, align 4, !dbg !4657
  %inc179 = add nsw i32 %142, 1, !dbg !4657
  store i32 %inc179, i32* %i, align 4, !dbg !4657
  br label %for.cond87, !dbg !4658, !llvm.loop !4659

for.end180:                                       ; preds = %for.cond87
  ret void, !dbg !4661
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @QuickSortEdges(%union.SEdge* %pSortBuffer, i32 %iLeft, i32 %iRight, i32 %channel, i32 %uSeed) #0 !dbg !4662 {
entry:
  %pSortBuffer.addr = alloca %union.SEdge*, align 8
  %iLeft.addr = alloca i32, align 4
  %iRight.addr = alloca i32, align 4
  %channel.addr = alloca i32, align 4
  %uSeed.addr = alloca i32, align 4
  %t = alloca i32, align 4
  %iL = alloca i32, align 4
  %iR = alloca i32, align 4
  %n = alloca i32, align 4
  %index = alloca i32, align 4
  %iMid = alloca i32, align 4
  %sTmp = alloca %union.SEdge, align 4
  %iElems = alloca i32, align 4
  store %union.SEdge* %pSortBuffer, %union.SEdge** %pSortBuffer.addr, align 8
  call void @llvm.dbg.declare(metadata %union.SEdge** %pSortBuffer.addr, metadata !4665, metadata !DIExpression()), !dbg !4666
  store i32 %iLeft, i32* %iLeft.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iLeft.addr, metadata !4667, metadata !DIExpression()), !dbg !4668
  store i32 %iRight, i32* %iRight.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iRight.addr, metadata !4669, metadata !DIExpression()), !dbg !4670
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4671, metadata !DIExpression()), !dbg !4672
  store i32 %uSeed, i32* %uSeed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uSeed.addr, metadata !4673, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4675, metadata !DIExpression()), !dbg !4676
  call void @llvm.dbg.declare(metadata i32* %iL, metadata !4677, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.declare(metadata i32* %iR, metadata !4679, metadata !DIExpression()), !dbg !4680
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4681, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4683, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.declare(metadata i32* %iMid, metadata !4685, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.declare(metadata %union.SEdge* %sTmp, metadata !4687, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.declare(metadata i32* %iElems, metadata !4689, metadata !DIExpression()), !dbg !4690
  %0 = load i32, i32* %iRight.addr, align 4, !dbg !4691
  %1 = load i32, i32* %iLeft.addr, align 4, !dbg !4692
  %sub = sub nsw i32 %0, %1, !dbg !4693
  %add = add nsw i32 %sub, 1, !dbg !4694
  store i32 %add, i32* %iElems, align 4, !dbg !4690
  %2 = load i32, i32* %iElems, align 4, !dbg !4695
  %cmp = icmp slt i32 %2, 2, !dbg !4697
  br i1 %cmp, label %if.then, label %if.else, !dbg !4698

if.then:                                          ; preds = %entry
  br label %if.end67, !dbg !4699

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %iElems, align 4, !dbg !4700
  %cmp1 = icmp eq i32 %3, 2, !dbg !4702
  br i1 %cmp1, label %if.then2, label %if.end20, !dbg !4703

if.then2:                                         ; preds = %if.else
  %4 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4704
  %5 = load i32, i32* %iLeft.addr, align 4, !dbg !4707
  %idxprom = sext i32 %5 to i64, !dbg !4704
  %arrayidx = getelementptr inbounds %union.SEdge, %union.SEdge* %4, i64 %idxprom, !dbg !4704
  %array = bitcast %union.SEdge* %arrayidx to [3 x i32]*, !dbg !4708
  %6 = load i32, i32* %channel.addr, align 4, !dbg !4709
  %idxprom3 = sext i32 %6 to i64, !dbg !4704
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %array, i64 0, i64 %idxprom3, !dbg !4704
  %7 = load i32, i32* %arrayidx4, align 4, !dbg !4704
  %8 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4710
  %9 = load i32, i32* %iRight.addr, align 4, !dbg !4711
  %idxprom5 = sext i32 %9 to i64, !dbg !4710
  %arrayidx6 = getelementptr inbounds %union.SEdge, %union.SEdge* %8, i64 %idxprom5, !dbg !4710
  %array7 = bitcast %union.SEdge* %arrayidx6 to [3 x i32]*, !dbg !4712
  %10 = load i32, i32* %channel.addr, align 4, !dbg !4713
  %idxprom8 = sext i32 %10 to i64, !dbg !4710
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %array7, i64 0, i64 %idxprom8, !dbg !4710
  %11 = load i32, i32* %arrayidx9, align 4, !dbg !4710
  %cmp10 = icmp sgt i32 %7, %11, !dbg !4714
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !4715

if.then11:                                        ; preds = %if.then2
  %12 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4716
  %13 = load i32, i32* %iLeft.addr, align 4, !dbg !4718
  %idxprom12 = sext i32 %13 to i64, !dbg !4716
  %arrayidx13 = getelementptr inbounds %union.SEdge, %union.SEdge* %12, i64 %idxprom12, !dbg !4716
  %14 = bitcast %union.SEdge* %sTmp to i8*, !dbg !4716
  %15 = bitcast %union.SEdge* %arrayidx13 to i8*, !dbg !4716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 12, i1 false), !dbg !4716
  %16 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4719
  %17 = load i32, i32* %iLeft.addr, align 4, !dbg !4720
  %idxprom14 = sext i32 %17 to i64, !dbg !4719
  %arrayidx15 = getelementptr inbounds %union.SEdge, %union.SEdge* %16, i64 %idxprom14, !dbg !4719
  %18 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4721
  %19 = load i32, i32* %iRight.addr, align 4, !dbg !4722
  %idxprom16 = sext i32 %19 to i64, !dbg !4721
  %arrayidx17 = getelementptr inbounds %union.SEdge, %union.SEdge* %18, i64 %idxprom16, !dbg !4721
  %20 = bitcast %union.SEdge* %arrayidx15 to i8*, !dbg !4721
  %21 = bitcast %union.SEdge* %arrayidx17 to i8*, !dbg !4721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 12, i1 false), !dbg !4721
  %22 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4723
  %23 = load i32, i32* %iRight.addr, align 4, !dbg !4724
  %idxprom18 = sext i32 %23 to i64, !dbg !4723
  %arrayidx19 = getelementptr inbounds %union.SEdge, %union.SEdge* %22, i64 %idxprom18, !dbg !4723
  %24 = bitcast %union.SEdge* %arrayidx19 to i8*, !dbg !4725
  %25 = bitcast %union.SEdge* %sTmp to i8*, !dbg !4725
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 12, i1 false), !dbg !4725
  br label %if.end, !dbg !4726

if.end:                                           ; preds = %if.then11, %if.then2
  br label %if.end67, !dbg !4727

if.end20:                                         ; preds = %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20
  %26 = load i32, i32* %uSeed.addr, align 4, !dbg !4728
  %and = and i32 %26, 31, !dbg !4729
  store i32 %and, i32* %t, align 4, !dbg !4730
  %27 = load i32, i32* %uSeed.addr, align 4, !dbg !4731
  %28 = load i32, i32* %t, align 4, !dbg !4732
  %shl = shl i32 %27, %28, !dbg !4733
  %29 = load i32, i32* %uSeed.addr, align 4, !dbg !4734
  %30 = load i32, i32* %t, align 4, !dbg !4735
  %sub22 = sub i32 32, %30, !dbg !4736
  %shr = lshr i32 %29, %sub22, !dbg !4737
  %or = or i32 %shl, %shr, !dbg !4738
  store i32 %or, i32* %t, align 4, !dbg !4739
  %31 = load i32, i32* %uSeed.addr, align 4, !dbg !4740
  %32 = load i32, i32* %t, align 4, !dbg !4741
  %add23 = add i32 %31, %32, !dbg !4742
  %add24 = add i32 %add23, 3, !dbg !4743
  store i32 %add24, i32* %uSeed.addr, align 4, !dbg !4744
  %33 = load i32, i32* %iLeft.addr, align 4, !dbg !4745
  store i32 %33, i32* %iL, align 4, !dbg !4746
  %34 = load i32, i32* %iRight.addr, align 4, !dbg !4747
  store i32 %34, i32* %iR, align 4, !dbg !4748
  %35 = load i32, i32* %iR, align 4, !dbg !4749
  %36 = load i32, i32* %iL, align 4, !dbg !4750
  %sub25 = sub nsw i32 %35, %36, !dbg !4751
  %add26 = add nsw i32 %sub25, 1, !dbg !4752
  store i32 %add26, i32* %n, align 4, !dbg !4753
  %37 = load i32, i32* %uSeed.addr, align 4, !dbg !4754
  %38 = load i32, i32* %n, align 4, !dbg !4755
  %rem = urem i32 %37, %38, !dbg !4756
  store i32 %rem, i32* %index, align 4, !dbg !4757
  %39 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4758
  %40 = load i32, i32* %index, align 4, !dbg !4759
  %41 = load i32, i32* %iL, align 4, !dbg !4760
  %add27 = add nsw i32 %40, %41, !dbg !4761
  %idxprom28 = sext i32 %add27 to i64, !dbg !4758
  %arrayidx29 = getelementptr inbounds %union.SEdge, %union.SEdge* %39, i64 %idxprom28, !dbg !4758
  %array30 = bitcast %union.SEdge* %arrayidx29 to [3 x i32]*, !dbg !4762
  %42 = load i32, i32* %channel.addr, align 4, !dbg !4763
  %idxprom31 = sext i32 %42 to i64, !dbg !4758
  %arrayidx32 = getelementptr inbounds [3 x i32], [3 x i32]* %array30, i64 0, i64 %idxprom31, !dbg !4758
  %43 = load i32, i32* %arrayidx32, align 4, !dbg !4758
  store i32 %43, i32* %iMid, align 4, !dbg !4764
  br label %do.body, !dbg !4765

do.body:                                          ; preds = %do.cond, %if.end21
  br label %while.cond, !dbg !4766

while.cond:                                       ; preds = %while.body, %do.body
  %44 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4768
  %45 = load i32, i32* %iL, align 4, !dbg !4769
  %idxprom33 = sext i32 %45 to i64, !dbg !4768
  %arrayidx34 = getelementptr inbounds %union.SEdge, %union.SEdge* %44, i64 %idxprom33, !dbg !4768
  %array35 = bitcast %union.SEdge* %arrayidx34 to [3 x i32]*, !dbg !4770
  %46 = load i32, i32* %channel.addr, align 4, !dbg !4771
  %idxprom36 = sext i32 %46 to i64, !dbg !4768
  %arrayidx37 = getelementptr inbounds [3 x i32], [3 x i32]* %array35, i64 0, i64 %idxprom36, !dbg !4768
  %47 = load i32, i32* %arrayidx37, align 4, !dbg !4768
  %48 = load i32, i32* %iMid, align 4, !dbg !4772
  %cmp38 = icmp slt i32 %47, %48, !dbg !4773
  br i1 %cmp38, label %while.body, label %while.end, !dbg !4766

while.body:                                       ; preds = %while.cond
  %49 = load i32, i32* %iL, align 4, !dbg !4774
  %inc = add nsw i32 %49, 1, !dbg !4774
  store i32 %inc, i32* %iL, align 4, !dbg !4774
  br label %while.cond, !dbg !4766, !llvm.loop !4775

while.end:                                        ; preds = %while.cond
  br label %while.cond39, !dbg !4777

while.cond39:                                     ; preds = %while.body46, %while.end
  %50 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4778
  %51 = load i32, i32* %iR, align 4, !dbg !4779
  %idxprom40 = sext i32 %51 to i64, !dbg !4778
  %arrayidx41 = getelementptr inbounds %union.SEdge, %union.SEdge* %50, i64 %idxprom40, !dbg !4778
  %array42 = bitcast %union.SEdge* %arrayidx41 to [3 x i32]*, !dbg !4780
  %52 = load i32, i32* %channel.addr, align 4, !dbg !4781
  %idxprom43 = sext i32 %52 to i64, !dbg !4778
  %arrayidx44 = getelementptr inbounds [3 x i32], [3 x i32]* %array42, i64 0, i64 %idxprom43, !dbg !4778
  %53 = load i32, i32* %arrayidx44, align 4, !dbg !4778
  %54 = load i32, i32* %iMid, align 4, !dbg !4782
  %cmp45 = icmp sgt i32 %53, %54, !dbg !4783
  br i1 %cmp45, label %while.body46, label %while.end47, !dbg !4777

while.body46:                                     ; preds = %while.cond39
  %55 = load i32, i32* %iR, align 4, !dbg !4784
  %dec = add nsw i32 %55, -1, !dbg !4784
  store i32 %dec, i32* %iR, align 4, !dbg !4784
  br label %while.cond39, !dbg !4777, !llvm.loop !4785

while.end47:                                      ; preds = %while.cond39
  %56 = load i32, i32* %iL, align 4, !dbg !4787
  %57 = load i32, i32* %iR, align 4, !dbg !4789
  %cmp48 = icmp sle i32 %56, %57, !dbg !4790
  br i1 %cmp48, label %if.then49, label %if.end60, !dbg !4791

if.then49:                                        ; preds = %while.end47
  %58 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4792
  %59 = load i32, i32* %iL, align 4, !dbg !4794
  %idxprom50 = sext i32 %59 to i64, !dbg !4792
  %arrayidx51 = getelementptr inbounds %union.SEdge, %union.SEdge* %58, i64 %idxprom50, !dbg !4792
  %60 = bitcast %union.SEdge* %sTmp to i8*, !dbg !4792
  %61 = bitcast %union.SEdge* %arrayidx51 to i8*, !dbg !4792
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 12, i1 false), !dbg !4792
  %62 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4795
  %63 = load i32, i32* %iL, align 4, !dbg !4796
  %idxprom52 = sext i32 %63 to i64, !dbg !4795
  %arrayidx53 = getelementptr inbounds %union.SEdge, %union.SEdge* %62, i64 %idxprom52, !dbg !4795
  %64 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4797
  %65 = load i32, i32* %iR, align 4, !dbg !4798
  %idxprom54 = sext i32 %65 to i64, !dbg !4797
  %arrayidx55 = getelementptr inbounds %union.SEdge, %union.SEdge* %64, i64 %idxprom54, !dbg !4797
  %66 = bitcast %union.SEdge* %arrayidx53 to i8*, !dbg !4797
  %67 = bitcast %union.SEdge* %arrayidx55 to i8*, !dbg !4797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 12, i1 false), !dbg !4797
  %68 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4799
  %69 = load i32, i32* %iR, align 4, !dbg !4800
  %idxprom56 = sext i32 %69 to i64, !dbg !4799
  %arrayidx57 = getelementptr inbounds %union.SEdge, %union.SEdge* %68, i64 %idxprom56, !dbg !4799
  %70 = bitcast %union.SEdge* %arrayidx57 to i8*, !dbg !4801
  %71 = bitcast %union.SEdge* %sTmp to i8*, !dbg !4801
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %71, i64 12, i1 false), !dbg !4801
  %72 = load i32, i32* %iL, align 4, !dbg !4802
  %inc58 = add nsw i32 %72, 1, !dbg !4802
  store i32 %inc58, i32* %iL, align 4, !dbg !4802
  %73 = load i32, i32* %iR, align 4, !dbg !4803
  %dec59 = add nsw i32 %73, -1, !dbg !4803
  store i32 %dec59, i32* %iR, align 4, !dbg !4803
  br label %if.end60, !dbg !4804

if.end60:                                         ; preds = %if.then49, %while.end47
  br label %do.cond, !dbg !4805

do.cond:                                          ; preds = %if.end60
  %74 = load i32, i32* %iL, align 4, !dbg !4806
  %75 = load i32, i32* %iR, align 4, !dbg !4807
  %cmp61 = icmp sle i32 %74, %75, !dbg !4808
  br i1 %cmp61, label %do.body, label %do.end, !dbg !4805, !llvm.loop !4809

do.end:                                           ; preds = %do.cond
  %76 = load i32, i32* %iLeft.addr, align 4, !dbg !4811
  %77 = load i32, i32* %iR, align 4, !dbg !4813
  %cmp62 = icmp slt i32 %76, %77, !dbg !4814
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !4815

if.then63:                                        ; preds = %do.end
  %78 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4816
  %79 = load i32, i32* %iLeft.addr, align 4, !dbg !4817
  %80 = load i32, i32* %iR, align 4, !dbg !4818
  %81 = load i32, i32* %channel.addr, align 4, !dbg !4819
  %82 = load i32, i32* %uSeed.addr, align 4, !dbg !4820
  call void @QuickSortEdges(%union.SEdge* %78, i32 %79, i32 %80, i32 %81, i32 %82), !dbg !4821
  br label %if.end64, !dbg !4821

if.end64:                                         ; preds = %if.then63, %do.end
  %83 = load i32, i32* %iL, align 4, !dbg !4822
  %84 = load i32, i32* %iRight.addr, align 4, !dbg !4824
  %cmp65 = icmp slt i32 %83, %84, !dbg !4825
  br i1 %cmp65, label %if.then66, label %if.end67, !dbg !4826

if.then66:                                        ; preds = %if.end64
  %85 = load %union.SEdge*, %union.SEdge** %pSortBuffer.addr, align 8, !dbg !4827
  %86 = load i32, i32* %iL, align 4, !dbg !4828
  %87 = load i32, i32* %iRight.addr, align 4, !dbg !4829
  %88 = load i32, i32* %channel.addr, align 4, !dbg !4830
  %89 = load i32, i32* %uSeed.addr, align 4, !dbg !4831
  call void @QuickSortEdges(%union.SEdge* %85, i32 %86, i32 %87, i32 %88, i32 %89), !dbg !4832
  br label %if.end67, !dbg !4832

if.end67:                                         ; preds = %if.then, %if.end, %if.then66, %if.end64
  ret void, !dbg !4833
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetEdge(i32* %i0_out, i32* %i1_out, i32* %edgenum_out, i32* %indices, i32 %i0_in, i32 %i1_in) #0 !dbg !4834 {
entry:
  %i0_out.addr = alloca i32*, align 8
  %i1_out.addr = alloca i32*, align 8
  %edgenum_out.addr = alloca i32*, align 8
  %indices.addr = alloca i32*, align 8
  %i0_in.addr = alloca i32, align 4
  %i1_in.addr = alloca i32, align 4
  store i32* %i0_out, i32** %i0_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %i0_out.addr, metadata !4837, metadata !DIExpression()), !dbg !4838
  store i32* %i1_out, i32** %i1_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %i1_out.addr, metadata !4839, metadata !DIExpression()), !dbg !4840
  store i32* %edgenum_out, i32** %edgenum_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %edgenum_out.addr, metadata !4841, metadata !DIExpression()), !dbg !4842
  store i32* %indices, i32** %indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %indices.addr, metadata !4843, metadata !DIExpression()), !dbg !4844
  store i32 %i0_in, i32* %i0_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i0_in.addr, metadata !4845, metadata !DIExpression()), !dbg !4846
  store i32 %i1_in, i32* %i1_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i1_in.addr, metadata !4847, metadata !DIExpression()), !dbg !4848
  %0 = load i32*, i32** %edgenum_out.addr, align 8, !dbg !4849
  store i32 -1, i32* %0, align 4, !dbg !4850
  %1 = load i32*, i32** %indices.addr, align 8, !dbg !4851
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0, !dbg !4851
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4851
  %3 = load i32, i32* %i0_in.addr, align 4, !dbg !4853
  %cmp = icmp eq i32 %2, %3, !dbg !4854
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4855

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32*, i32** %indices.addr, align 8, !dbg !4856
  %arrayidx1 = getelementptr inbounds i32, i32* %4, i64 0, !dbg !4856
  %5 = load i32, i32* %arrayidx1, align 4, !dbg !4856
  %6 = load i32, i32* %i1_in.addr, align 4, !dbg !4857
  %cmp2 = icmp eq i32 %5, %6, !dbg !4858
  br i1 %cmp2, label %if.then, label %if.else19, !dbg !4859

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load i32*, i32** %indices.addr, align 8, !dbg !4860
  %arrayidx3 = getelementptr inbounds i32, i32* %7, i64 1, !dbg !4860
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !4860
  %9 = load i32, i32* %i0_in.addr, align 4, !dbg !4863
  %cmp4 = icmp eq i32 %8, %9, !dbg !4864
  br i1 %cmp4, label %if.then8, label %lor.lhs.false5, !dbg !4865

lor.lhs.false5:                                   ; preds = %if.then
  %10 = load i32*, i32** %indices.addr, align 8, !dbg !4866
  %arrayidx6 = getelementptr inbounds i32, i32* %10, i64 1, !dbg !4866
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !4866
  %12 = load i32, i32* %i1_in.addr, align 4, !dbg !4867
  %cmp7 = icmp eq i32 %11, %12, !dbg !4868
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !4869

if.then8:                                         ; preds = %lor.lhs.false5, %if.then
  %13 = load i32*, i32** %edgenum_out.addr, align 8, !dbg !4870
  %arrayidx9 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !4870
  store i32 0, i32* %arrayidx9, align 4, !dbg !4872
  %14 = load i32*, i32** %indices.addr, align 8, !dbg !4873
  %arrayidx10 = getelementptr inbounds i32, i32* %14, i64 0, !dbg !4873
  %15 = load i32, i32* %arrayidx10, align 4, !dbg !4873
  %16 = load i32*, i32** %i0_out.addr, align 8, !dbg !4874
  %arrayidx11 = getelementptr inbounds i32, i32* %16, i64 0, !dbg !4874
  store i32 %15, i32* %arrayidx11, align 4, !dbg !4875
  %17 = load i32*, i32** %indices.addr, align 8, !dbg !4876
  %arrayidx12 = getelementptr inbounds i32, i32* %17, i64 1, !dbg !4876
  %18 = load i32, i32* %arrayidx12, align 4, !dbg !4876
  %19 = load i32*, i32** %i1_out.addr, align 8, !dbg !4877
  %arrayidx13 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !4877
  store i32 %18, i32* %arrayidx13, align 4, !dbg !4878
  br label %if.end, !dbg !4879

if.else:                                          ; preds = %lor.lhs.false5
  %20 = load i32*, i32** %edgenum_out.addr, align 8, !dbg !4880
  %arrayidx14 = getelementptr inbounds i32, i32* %20, i64 0, !dbg !4880
  store i32 2, i32* %arrayidx14, align 4, !dbg !4882
  %21 = load i32*, i32** %indices.addr, align 8, !dbg !4883
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 2, !dbg !4883
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !4883
  %23 = load i32*, i32** %i0_out.addr, align 8, !dbg !4884
  %arrayidx16 = getelementptr inbounds i32, i32* %23, i64 0, !dbg !4884
  store i32 %22, i32* %arrayidx16, align 4, !dbg !4885
  %24 = load i32*, i32** %indices.addr, align 8, !dbg !4886
  %arrayidx17 = getelementptr inbounds i32, i32* %24, i64 0, !dbg !4886
  %25 = load i32, i32* %arrayidx17, align 4, !dbg !4886
  %26 = load i32*, i32** %i1_out.addr, align 8, !dbg !4887
  %arrayidx18 = getelementptr inbounds i32, i32* %26, i64 0, !dbg !4887
  store i32 %25, i32* %arrayidx18, align 4, !dbg !4888
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end25, !dbg !4889

if.else19:                                        ; preds = %lor.lhs.false
  %27 = load i32*, i32** %edgenum_out.addr, align 8, !dbg !4890
  %arrayidx20 = getelementptr inbounds i32, i32* %27, i64 0, !dbg !4890
  store i32 1, i32* %arrayidx20, align 4, !dbg !4892
  %28 = load i32*, i32** %indices.addr, align 8, !dbg !4893
  %arrayidx21 = getelementptr inbounds i32, i32* %28, i64 1, !dbg !4893
  %29 = load i32, i32* %arrayidx21, align 4, !dbg !4893
  %30 = load i32*, i32** %i0_out.addr, align 8, !dbg !4894
  %arrayidx22 = getelementptr inbounds i32, i32* %30, i64 0, !dbg !4894
  store i32 %29, i32* %arrayidx22, align 4, !dbg !4895
  %31 = load i32*, i32** %indices.addr, align 8, !dbg !4896
  %arrayidx23 = getelementptr inbounds i32, i32* %31, i64 2, !dbg !4896
  %32 = load i32, i32* %arrayidx23, align 4, !dbg !4896
  %33 = load i32*, i32** %i1_out.addr, align 8, !dbg !4897
  %arrayidx24 = getelementptr inbounds i32, i32* %33, i64 0, !dbg !4897
  store i32 %32, i32* %arrayidx24, align 4, !dbg !4898
  br label %if.end25

if.end25:                                         ; preds = %if.else19, %if.end
  ret void, !dbg !4899
}

; Function Attrs: noinline nounwind uwtable
define internal void @AddTriToGroup(%struct.SGroup* %pGroup, i32 %iTriIndex) #0 !dbg !4900 {
entry:
  %pGroup.addr = alloca %struct.SGroup*, align 8
  %iTriIndex.addr = alloca i32, align 4
  store %struct.SGroup* %pGroup, %struct.SGroup** %pGroup.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SGroup** %pGroup.addr, metadata !4903, metadata !DIExpression()), !dbg !4904
  store i32 %iTriIndex, i32* %iTriIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iTriIndex.addr, metadata !4905, metadata !DIExpression()), !dbg !4906
  %0 = load i32, i32* %iTriIndex.addr, align 4, !dbg !4907
  %1 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !4908
  %pFaceIndices = getelementptr inbounds %struct.SGroup, %struct.SGroup* %1, i32 0, i32 1, !dbg !4909
  %2 = load i32*, i32** %pFaceIndices, align 8, !dbg !4909
  %3 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !4910
  %iNrFaces = getelementptr inbounds %struct.SGroup, %struct.SGroup* %3, i32 0, i32 0, !dbg !4911
  %4 = load i32, i32* %iNrFaces, align 8, !dbg !4911
  %idxprom = sext i32 %4 to i64, !dbg !4908
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !4908
  store i32 %0, i32* %arrayidx, align 4, !dbg !4912
  %5 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !4913
  %iNrFaces1 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %5, i32 0, i32 0, !dbg !4914
  %6 = load i32, i32* %iNrFaces1, align 8, !dbg !4915
  %inc = add nsw i32 %6, 1, !dbg !4915
  store i32 %inc, i32* %iNrFaces1, align 8, !dbg !4915
  ret void, !dbg !4916
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @AssignRecur(i32* %piTriListIn, %struct.STriInfo* %psTriInfos, i32 %iMyTriIndex, %struct.SGroup* %pGroup) #0 !dbg !4917 {
entry:
  %retval = alloca i32, align 4
  %piTriListIn.addr = alloca i32*, align 8
  %psTriInfos.addr = alloca %struct.STriInfo*, align 8
  %iMyTriIndex.addr = alloca i32, align 4
  %pGroup.addr = alloca %struct.SGroup*, align 8
  %pMyTriInfo = alloca %struct.STriInfo*, align 8
  %iVertRep = alloca i32, align 4
  %pVerts = alloca i32*, align 8
  %i = alloca i32, align 4
  %bOrient = alloca i32, align 4
  %neigh_indexL = alloca i32, align 4
  %neigh_indexR = alloca i32, align 4
  store i32* %piTriListIn, i32** %piTriListIn.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriListIn.addr, metadata !4920, metadata !DIExpression()), !dbg !4921
  store %struct.STriInfo* %psTriInfos, %struct.STriInfo** %psTriInfos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %psTriInfos.addr, metadata !4922, metadata !DIExpression()), !dbg !4923
  store i32 %iMyTriIndex, i32* %iMyTriIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iMyTriIndex.addr, metadata !4924, metadata !DIExpression()), !dbg !4925
  store %struct.SGroup* %pGroup, %struct.SGroup** %pGroup.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SGroup** %pGroup.addr, metadata !4926, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pMyTriInfo, metadata !4928, metadata !DIExpression()), !dbg !4929
  %0 = load %struct.STriInfo*, %struct.STriInfo** %psTriInfos.addr, align 8, !dbg !4930
  %1 = load i32, i32* %iMyTriIndex.addr, align 4, !dbg !4931
  %idxprom = sext i32 %1 to i64, !dbg !4930
  %arrayidx = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %0, i64 %idxprom, !dbg !4930
  store %struct.STriInfo* %arrayidx, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !4929
  call void @llvm.dbg.declare(metadata i32* %iVertRep, metadata !4932, metadata !DIExpression()), !dbg !4933
  %2 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !4934
  %iVertexRepresentitive = getelementptr inbounds %struct.SGroup, %struct.SGroup* %2, i32 0, i32 2, !dbg !4935
  %3 = load i32, i32* %iVertexRepresentitive, align 8, !dbg !4935
  store i32 %3, i32* %iVertRep, align 4, !dbg !4933
  call void @llvm.dbg.declare(metadata i32** %pVerts, metadata !4936, metadata !DIExpression()), !dbg !4937
  %4 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !4938
  %5 = load i32, i32* %iMyTriIndex.addr, align 4, !dbg !4939
  %mul = mul nsw i32 3, %5, !dbg !4940
  %add = add nsw i32 %mul, 0, !dbg !4941
  %idxprom1 = sext i32 %add to i64, !dbg !4938
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 %idxprom1, !dbg !4938
  store i32* %arrayidx2, i32** %pVerts, align 8, !dbg !4937
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4942, metadata !DIExpression()), !dbg !4943
  store i32 -1, i32* %i, align 4, !dbg !4943
  %6 = load i32*, i32** %pVerts, align 8, !dbg !4944
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 0, !dbg !4944
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !4944
  %8 = load i32, i32* %iVertRep, align 4, !dbg !4946
  %cmp = icmp eq i32 %7, %8, !dbg !4947
  br i1 %cmp, label %if.then, label %if.else, !dbg !4948

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4949
  br label %if.end12, !dbg !4950

if.else:                                          ; preds = %entry
  %9 = load i32*, i32** %pVerts, align 8, !dbg !4951
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 1, !dbg !4951
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !4951
  %11 = load i32, i32* %iVertRep, align 4, !dbg !4953
  %cmp5 = icmp eq i32 %10, %11, !dbg !4954
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !4955

if.then6:                                         ; preds = %if.else
  store i32 1, i32* %i, align 4, !dbg !4956
  br label %if.end11, !dbg !4957

if.else7:                                         ; preds = %if.else
  %12 = load i32*, i32** %pVerts, align 8, !dbg !4958
  %arrayidx8 = getelementptr inbounds i32, i32* %12, i64 2, !dbg !4958
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !4958
  %14 = load i32, i32* %iVertRep, align 4, !dbg !4960
  %cmp9 = icmp eq i32 %13, %14, !dbg !4961
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !4962

if.then10:                                        ; preds = %if.else7
  store i32 2, i32* %i, align 4, !dbg !4963
  br label %if.end, !dbg !4964

if.end:                                           ; preds = %if.then10, %if.else7
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  %15 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !4965
  %AssignedGroup = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %15, i32 0, i32 1, !dbg !4967
  %16 = load i32, i32* %i, align 4, !dbg !4968
  %idxprom13 = sext i32 %16 to i64, !dbg !4965
  %arrayidx14 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup, i64 0, i64 %idxprom13, !dbg !4965
  %17 = load %struct.SGroup*, %struct.SGroup** %arrayidx14, align 8, !dbg !4965
  %18 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !4969
  %cmp15 = icmp eq %struct.SGroup* %17, %18, !dbg !4970
  br i1 %cmp15, label %if.then16, label %if.else17, !dbg !4971

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !4972
  br label %return, !dbg !4972

if.else17:                                        ; preds = %if.end12
  %19 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !4973
  %AssignedGroup18 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %19, i32 0, i32 1, !dbg !4975
  %20 = load i32, i32* %i, align 4, !dbg !4976
  %idxprom19 = sext i32 %20 to i64, !dbg !4973
  %arrayidx20 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup18, i64 0, i64 %idxprom19, !dbg !4973
  %21 = load %struct.SGroup*, %struct.SGroup** %arrayidx20, align 8, !dbg !4973
  %cmp21 = icmp ne %struct.SGroup* %21, null, !dbg !4977
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !4978

if.then22:                                        ; preds = %if.else17
  store i32 0, i32* %retval, align 4, !dbg !4979
  br label %return, !dbg !4979

if.end23:                                         ; preds = %if.else17
  br label %if.end24

if.end24:                                         ; preds = %if.end23
  %22 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !4980
  %iFlag = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %22, i32 0, i32 7, !dbg !4982
  %23 = load i32, i32* %iFlag, align 4, !dbg !4982
  %and = and i32 %23, 4, !dbg !4983
  %cmp25 = icmp ne i32 %and, 0, !dbg !4984
  br i1 %cmp25, label %if.then26, label %if.end42, !dbg !4985

if.then26:                                        ; preds = %if.end24
  %24 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !4986
  %AssignedGroup27 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %24, i32 0, i32 1, !dbg !4989
  %arrayidx28 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup27, i64 0, i64 0, !dbg !4986
  %25 = load %struct.SGroup*, %struct.SGroup** %arrayidx28, align 8, !dbg !4986
  %cmp29 = icmp eq %struct.SGroup* %25, null, !dbg !4990
  br i1 %cmp29, label %land.lhs.true, label %if.end41, !dbg !4991

land.lhs.true:                                    ; preds = %if.then26
  %26 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !4992
  %AssignedGroup30 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %26, i32 0, i32 1, !dbg !4993
  %arrayidx31 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup30, i64 0, i64 1, !dbg !4992
  %27 = load %struct.SGroup*, %struct.SGroup** %arrayidx31, align 8, !dbg !4992
  %cmp32 = icmp eq %struct.SGroup* %27, null, !dbg !4994
  br i1 %cmp32, label %land.lhs.true33, label %if.end41, !dbg !4995

land.lhs.true33:                                  ; preds = %land.lhs.true
  %28 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !4996
  %AssignedGroup34 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %28, i32 0, i32 1, !dbg !4997
  %arrayidx35 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup34, i64 0, i64 2, !dbg !4996
  %29 = load %struct.SGroup*, %struct.SGroup** %arrayidx35, align 8, !dbg !4996
  %cmp36 = icmp eq %struct.SGroup* %29, null, !dbg !4998
  br i1 %cmp36, label %if.then37, label %if.end41, !dbg !4999

if.then37:                                        ; preds = %land.lhs.true33
  %30 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !5000
  %iFlag38 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %30, i32 0, i32 7, !dbg !5002
  %31 = load i32, i32* %iFlag38, align 4, !dbg !5003
  %and39 = and i32 %31, -9, !dbg !5003
  store i32 %and39, i32* %iFlag38, align 4, !dbg !5003
  %32 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !5004
  %bOrientPreservering = getelementptr inbounds %struct.SGroup, %struct.SGroup* %32, i32 0, i32 3, !dbg !5005
  %33 = load i32, i32* %bOrientPreservering, align 4, !dbg !5005
  %tobool = icmp ne i32 %33, 0, !dbg !5004
  %34 = zext i1 %tobool to i64, !dbg !5004
  %cond = select i1 %tobool, i32 8, i32 0, !dbg !5004
  %35 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !5006
  %iFlag40 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %35, i32 0, i32 7, !dbg !5007
  %36 = load i32, i32* %iFlag40, align 4, !dbg !5008
  %or = or i32 %36, %cond, !dbg !5008
  store i32 %or, i32* %iFlag40, align 4, !dbg !5008
  br label %if.end41, !dbg !5009

if.end41:                                         ; preds = %if.then37, %land.lhs.true33, %land.lhs.true, %if.then26
  br label %if.end42, !dbg !5010

if.end42:                                         ; preds = %if.end41, %if.end24
  call void @llvm.dbg.declare(metadata i32* %bOrient, metadata !5011, metadata !DIExpression()), !dbg !5013
  %37 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !5014
  %iFlag43 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %37, i32 0, i32 7, !dbg !5015
  %38 = load i32, i32* %iFlag43, align 4, !dbg !5015
  %and44 = and i32 %38, 8, !dbg !5016
  %cmp45 = icmp ne i32 %and44, 0, !dbg !5017
  %39 = zext i1 %cmp45 to i64, !dbg !5018
  %cond46 = select i1 %cmp45, i32 1, i32 0, !dbg !5018
  store i32 %cond46, i32* %bOrient, align 4, !dbg !5013
  %40 = load i32, i32* %bOrient, align 4, !dbg !5019
  %41 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !5021
  %bOrientPreservering47 = getelementptr inbounds %struct.SGroup, %struct.SGroup* %41, i32 0, i32 3, !dbg !5022
  %42 = load i32, i32* %bOrientPreservering47, align 4, !dbg !5022
  %cmp48 = icmp ne i32 %40, %42, !dbg !5023
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !5024

if.then49:                                        ; preds = %if.end42
  store i32 0, i32* %retval, align 4, !dbg !5025
  br label %return, !dbg !5025

if.end50:                                         ; preds = %if.end42
  %43 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !5026
  %44 = load i32, i32* %iMyTriIndex.addr, align 4, !dbg !5027
  call void @AddTriToGroup(%struct.SGroup* %43, i32 %44), !dbg !5028
  %45 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !5029
  %46 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !5030
  %AssignedGroup51 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %46, i32 0, i32 1, !dbg !5031
  %47 = load i32, i32* %i, align 4, !dbg !5032
  %idxprom52 = sext i32 %47 to i64, !dbg !5030
  %arrayidx53 = getelementptr inbounds [3 x %struct.SGroup*], [3 x %struct.SGroup*]* %AssignedGroup51, i64 0, i64 %idxprom52, !dbg !5030
  store %struct.SGroup* %45, %struct.SGroup** %arrayidx53, align 8, !dbg !5033
  call void @llvm.dbg.declare(metadata i32* %neigh_indexL, metadata !5034, metadata !DIExpression()), !dbg !5036
  %48 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !5037
  %FaceNeighbors = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %48, i32 0, i32 0, !dbg !5038
  %49 = load i32, i32* %i, align 4, !dbg !5039
  %idxprom54 = sext i32 %49 to i64, !dbg !5037
  %arrayidx55 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors, i64 0, i64 %idxprom54, !dbg !5037
  %50 = load i32, i32* %arrayidx55, align 4, !dbg !5037
  store i32 %50, i32* %neigh_indexL, align 4, !dbg !5036
  call void @llvm.dbg.declare(metadata i32* %neigh_indexR, metadata !5040, metadata !DIExpression()), !dbg !5041
  %51 = load %struct.STriInfo*, %struct.STriInfo** %pMyTriInfo, align 8, !dbg !5042
  %FaceNeighbors56 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %51, i32 0, i32 0, !dbg !5043
  %52 = load i32, i32* %i, align 4, !dbg !5044
  %cmp57 = icmp sgt i32 %52, 0, !dbg !5045
  br i1 %cmp57, label %cond.true, label %cond.false, !dbg !5044

cond.true:                                        ; preds = %if.end50
  %53 = load i32, i32* %i, align 4, !dbg !5046
  %sub = sub nsw i32 %53, 1, !dbg !5047
  br label %cond.end, !dbg !5044

cond.false:                                       ; preds = %if.end50
  br label %cond.end, !dbg !5044

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond58 = phi i32 [ %sub, %cond.true ], [ 2, %cond.false ], !dbg !5044
  %idxprom59 = sext i32 %cond58 to i64, !dbg !5042
  %arrayidx60 = getelementptr inbounds [3 x i32], [3 x i32]* %FaceNeighbors56, i64 0, i64 %idxprom59, !dbg !5042
  %54 = load i32, i32* %arrayidx60, align 4, !dbg !5042
  store i32 %54, i32* %neigh_indexR, align 4, !dbg !5041
  %55 = load i32, i32* %neigh_indexL, align 4, !dbg !5048
  %cmp61 = icmp sge i32 %55, 0, !dbg !5050
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !5051

if.then62:                                        ; preds = %cond.end
  %56 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !5052
  %57 = load %struct.STriInfo*, %struct.STriInfo** %psTriInfos.addr, align 8, !dbg !5053
  %58 = load i32, i32* %neigh_indexL, align 4, !dbg !5054
  %59 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !5055
  %call = call i32 @AssignRecur(i32* %56, %struct.STriInfo* %57, i32 %58, %struct.SGroup* %59), !dbg !5056
  br label %if.end63, !dbg !5056

if.end63:                                         ; preds = %if.then62, %cond.end
  %60 = load i32, i32* %neigh_indexR, align 4, !dbg !5057
  %cmp64 = icmp sge i32 %60, 0, !dbg !5059
  br i1 %cmp64, label %if.then65, label %if.end67, !dbg !5060

if.then65:                                        ; preds = %if.end63
  %61 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !5061
  %62 = load %struct.STriInfo*, %struct.STriInfo** %psTriInfos.addr, align 8, !dbg !5062
  %63 = load i32, i32* %neigh_indexR, align 4, !dbg !5063
  %64 = load %struct.SGroup*, %struct.SGroup** %pGroup.addr, align 8, !dbg !5064
  %call66 = call i32 @AssignRecur(i32* %61, %struct.STriInfo* %62, i32 %63, %struct.SGroup* %64), !dbg !5065
  br label %if.end67, !dbg !5065

if.end67:                                         ; preds = %if.then65, %if.end63
  store i32 1, i32* %retval, align 4, !dbg !5066
  br label %return, !dbg !5066

return:                                           ; preds = %if.end67, %if.then49, %if.then22, %if.then16
  %65 = load i32, i32* %retval, align 4, !dbg !5067
  ret i32 %65, !dbg !5067
}

; Function Attrs: noinline nounwind uwtable
define internal float @vdot(<2 x float> %v1.coerce0, float %v1.coerce1, <2 x float> %v2.coerce0, float %v2.coerce1) #2 !dbg !5068 {
entry:
  %v1 = alloca %struct.SVec3, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %v2 = alloca %struct.SVec3, align 4
  %coerce1 = alloca { <2 x float>, float }, align 4
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %v1.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %v1.coerce1, float* %1, align 4
  %2 = bitcast %struct.SVec3* %v1 to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  %4 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce1, i32 0, i32 0
  store <2 x float> %v2.coerce0, <2 x float>* %4, align 4
  %5 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce1, i32 0, i32 1
  store float %v2.coerce1, float* %5, align 4
  %6 = bitcast %struct.SVec3* %v2 to i8*
  %7 = bitcast { <2 x float>, float }* %coerce1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 12, i1 false)
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v1, metadata !5071, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v2, metadata !5073, metadata !DIExpression()), !dbg !5074
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 0, !dbg !5075
  %8 = load float, float* %x, align 4, !dbg !5075
  %x2 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 0, !dbg !5076
  %9 = load float, float* %x2, align 4, !dbg !5076
  %mul = fmul float %8, %9, !dbg !5077
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 1, !dbg !5078
  %10 = load float, float* %y, align 4, !dbg !5078
  %y3 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 1, !dbg !5079
  %11 = load float, float* %y3, align 4, !dbg !5079
  %mul4 = fmul float %10, %11, !dbg !5080
  %add = fadd float %mul, %mul4, !dbg !5081
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v1, i32 0, i32 2, !dbg !5082
  %12 = load float, float* %z, align 4, !dbg !5082
  %z5 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v2, i32 0, i32 2, !dbg !5083
  %13 = load float, float* %z5, align 4, !dbg !5083
  %mul6 = fmul float %12, %13, !dbg !5084
  %add7 = fadd float %add, %mul6, !dbg !5085
  ret float %add7, !dbg !5086
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VNotZero(<2 x float> %v.coerce0, float %v.coerce1) #2 !dbg !5087 {
entry:
  %v = alloca %struct.SVec3, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %v.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %v.coerce1, float* %1, align 4
  %2 = bitcast %struct.SVec3* %v to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v, metadata !5090, metadata !DIExpression()), !dbg !5091
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 0, !dbg !5092
  %4 = load float, float* %x, align 4, !dbg !5092
  %call = call i32 @NotZero(float %4), !dbg !5093
  %tobool = icmp ne i32 %call, 0, !dbg !5093
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !5094

lor.lhs.false:                                    ; preds = %entry
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 1, !dbg !5095
  %5 = load float, float* %y, align 4, !dbg !5095
  %call1 = call i32 @NotZero(float %5), !dbg !5096
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5096
  br i1 %tobool2, label %lor.end, label %lor.rhs, !dbg !5097

lor.rhs:                                          ; preds = %lor.lhs.false
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %v, i32 0, i32 2, !dbg !5098
  %6 = load float, float* %z, align 4, !dbg !5098
  %call3 = call i32 @NotZero(float %6), !dbg !5099
  %tobool4 = icmp ne i32 %call3, 0, !dbg !5097
  br label %lor.end, !dbg !5097

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool4, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32, !dbg !5097
  ret i32 %lor.ext, !dbg !5100
}

; Function Attrs: noinline nounwind uwtable
define internal { <2 x float>, float } @Normalize(<2 x float> %v.coerce0, float %v.coerce1) #2 !dbg !5101 {
entry:
  %retval = alloca %struct.SVec3, align 4
  %v = alloca %struct.SVec3, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %v.coerce = alloca { <2 x float>, float }, align 4
  %v.coerce2 = alloca { <2 x float>, float }, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %tmp4 = alloca { <2 x float>, float }, align 8
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %v.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %v.coerce1, float* %1, align 4
  %2 = bitcast %struct.SVec3* %v to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v, metadata !5104, metadata !DIExpression()), !dbg !5105
  %4 = bitcast { <2 x float>, float }* %v.coerce to i8*, !dbg !5106
  %5 = bitcast %struct.SVec3* %v to i8*, !dbg !5106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false), !dbg !5106
  %6 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v.coerce, i32 0, i32 0, !dbg !5106
  %7 = load <2 x float>, <2 x float>* %6, align 4, !dbg !5106
  %8 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v.coerce, i32 0, i32 1, !dbg !5106
  %9 = load float, float* %8, align 4, !dbg !5106
  %call = call float @Length(<2 x float> %7, float %9), !dbg !5106
  %div = fdiv float 1.000000e+00, %call, !dbg !5107
  %10 = bitcast { <2 x float>, float }* %v.coerce2 to i8*, !dbg !5108
  %11 = bitcast %struct.SVec3* %v to i8*, !dbg !5108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 12, i1 false), !dbg !5108
  %12 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v.coerce2, i32 0, i32 0, !dbg !5108
  %13 = load <2 x float>, <2 x float>* %12, align 4, !dbg !5108
  %14 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v.coerce2, i32 0, i32 1, !dbg !5108
  %15 = load float, float* %14, align 4, !dbg !5108
  %call3 = call { <2 x float>, float } @vscale(float %div, <2 x float> %13, float %15), !dbg !5108
  store { <2 x float>, float } %call3, { <2 x float>, float }* %tmp, align 8, !dbg !5108
  %16 = bitcast { <2 x float>, float }* %tmp to i8*, !dbg !5108
  %17 = bitcast %struct.SVec3* %retval to i8*, !dbg !5108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 8 %16, i64 12, i1 false), !dbg !5108
  %18 = bitcast { <2 x float>, float }* %tmp4 to i8*, !dbg !5109
  %19 = bitcast %struct.SVec3* %retval to i8*, !dbg !5109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 12, i1 false), !dbg !5109
  %20 = load { <2 x float>, float }, { <2 x float>, float }* %tmp4, align 8, !dbg !5109
  ret { <2 x float>, float } %20, !dbg !5109
}

; Function Attrs: noinline nounwind uwtable
define internal void @QuickSort(i32* %pSortBuffer, i32 %iLeft, i32 %iRight, i32 %uSeed) #0 !dbg !5110 {
entry:
  %pSortBuffer.addr = alloca i32*, align 8
  %iLeft.addr = alloca i32, align 4
  %iRight.addr = alloca i32, align 4
  %uSeed.addr = alloca i32, align 4
  %iL = alloca i32, align 4
  %iR = alloca i32, align 4
  %n = alloca i32, align 4
  %index = alloca i32, align 4
  %iMid = alloca i32, align 4
  %iTmp = alloca i32, align 4
  %t = alloca i32, align 4
  store i32* %pSortBuffer, i32** %pSortBuffer.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pSortBuffer.addr, metadata !5113, metadata !DIExpression()), !dbg !5114
  store i32 %iLeft, i32* %iLeft.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iLeft.addr, metadata !5115, metadata !DIExpression()), !dbg !5116
  store i32 %iRight, i32* %iRight.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iRight.addr, metadata !5117, metadata !DIExpression()), !dbg !5118
  store i32 %uSeed, i32* %uSeed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uSeed.addr, metadata !5119, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.declare(metadata i32* %iL, metadata !5121, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.declare(metadata i32* %iR, metadata !5123, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5125, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5127, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.declare(metadata i32* %iMid, metadata !5129, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.declare(metadata i32* %iTmp, metadata !5131, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.declare(metadata i32* %t, metadata !5133, metadata !DIExpression()), !dbg !5134
  %0 = load i32, i32* %uSeed.addr, align 4, !dbg !5135
  %and = and i32 %0, 31, !dbg !5136
  store i32 %and, i32* %t, align 4, !dbg !5134
  %1 = load i32, i32* %uSeed.addr, align 4, !dbg !5137
  %2 = load i32, i32* %t, align 4, !dbg !5138
  %shl = shl i32 %1, %2, !dbg !5139
  %3 = load i32, i32* %uSeed.addr, align 4, !dbg !5140
  %4 = load i32, i32* %t, align 4, !dbg !5141
  %sub = sub i32 32, %4, !dbg !5142
  %shr = lshr i32 %3, %sub, !dbg !5143
  %or = or i32 %shl, %shr, !dbg !5144
  store i32 %or, i32* %t, align 4, !dbg !5145
  %5 = load i32, i32* %uSeed.addr, align 4, !dbg !5146
  %6 = load i32, i32* %t, align 4, !dbg !5147
  %add = add i32 %5, %6, !dbg !5148
  %add1 = add i32 %add, 3, !dbg !5149
  store i32 %add1, i32* %uSeed.addr, align 4, !dbg !5150
  %7 = load i32, i32* %iLeft.addr, align 4, !dbg !5151
  store i32 %7, i32* %iL, align 4, !dbg !5152
  %8 = load i32, i32* %iRight.addr, align 4, !dbg !5153
  store i32 %8, i32* %iR, align 4, !dbg !5154
  %9 = load i32, i32* %iR, align 4, !dbg !5155
  %10 = load i32, i32* %iL, align 4, !dbg !5156
  %sub2 = sub nsw i32 %9, %10, !dbg !5157
  %add3 = add nsw i32 %sub2, 1, !dbg !5158
  store i32 %add3, i32* %n, align 4, !dbg !5159
  %11 = load i32, i32* %uSeed.addr, align 4, !dbg !5160
  %12 = load i32, i32* %n, align 4, !dbg !5161
  %rem = urem i32 %11, %12, !dbg !5162
  store i32 %rem, i32* %index, align 4, !dbg !5163
  %13 = load i32*, i32** %pSortBuffer.addr, align 8, !dbg !5164
  %14 = load i32, i32* %index, align 4, !dbg !5165
  %15 = load i32, i32* %iL, align 4, !dbg !5166
  %add4 = add nsw i32 %14, %15, !dbg !5167
  %idxprom = sext i32 %add4 to i64, !dbg !5164
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !5164
  %16 = load i32, i32* %arrayidx, align 4, !dbg !5164
  store i32 %16, i32* %iMid, align 4, !dbg !5168
  br label %do.body, !dbg !5169

do.body:                                          ; preds = %do.cond, %entry
  br label %while.cond, !dbg !5170

while.cond:                                       ; preds = %while.body, %do.body
  %17 = load i32*, i32** %pSortBuffer.addr, align 8, !dbg !5172
  %18 = load i32, i32* %iL, align 4, !dbg !5173
  %idxprom5 = sext i32 %18 to i64, !dbg !5172
  %arrayidx6 = getelementptr inbounds i32, i32* %17, i64 %idxprom5, !dbg !5172
  %19 = load i32, i32* %arrayidx6, align 4, !dbg !5172
  %20 = load i32, i32* %iMid, align 4, !dbg !5174
  %cmp = icmp slt i32 %19, %20, !dbg !5175
  br i1 %cmp, label %while.body, label %while.end, !dbg !5170

while.body:                                       ; preds = %while.cond
  %21 = load i32, i32* %iL, align 4, !dbg !5176
  %inc = add nsw i32 %21, 1, !dbg !5176
  store i32 %inc, i32* %iL, align 4, !dbg !5176
  br label %while.cond, !dbg !5170, !llvm.loop !5177

while.end:                                        ; preds = %while.cond
  br label %while.cond7, !dbg !5179

while.cond7:                                      ; preds = %while.body11, %while.end
  %22 = load i32*, i32** %pSortBuffer.addr, align 8, !dbg !5180
  %23 = load i32, i32* %iR, align 4, !dbg !5181
  %idxprom8 = sext i32 %23 to i64, !dbg !5180
  %arrayidx9 = getelementptr inbounds i32, i32* %22, i64 %idxprom8, !dbg !5180
  %24 = load i32, i32* %arrayidx9, align 4, !dbg !5180
  %25 = load i32, i32* %iMid, align 4, !dbg !5182
  %cmp10 = icmp sgt i32 %24, %25, !dbg !5183
  br i1 %cmp10, label %while.body11, label %while.end12, !dbg !5179

while.body11:                                     ; preds = %while.cond7
  %26 = load i32, i32* %iR, align 4, !dbg !5184
  %dec = add nsw i32 %26, -1, !dbg !5184
  store i32 %dec, i32* %iR, align 4, !dbg !5184
  br label %while.cond7, !dbg !5179, !llvm.loop !5185

while.end12:                                      ; preds = %while.cond7
  %27 = load i32, i32* %iL, align 4, !dbg !5187
  %28 = load i32, i32* %iR, align 4, !dbg !5189
  %cmp13 = icmp sle i32 %27, %28, !dbg !5190
  br i1 %cmp13, label %if.then, label %if.end, !dbg !5191

if.then:                                          ; preds = %while.end12
  %29 = load i32*, i32** %pSortBuffer.addr, align 8, !dbg !5192
  %30 = load i32, i32* %iL, align 4, !dbg !5194
  %idxprom14 = sext i32 %30 to i64, !dbg !5192
  %arrayidx15 = getelementptr inbounds i32, i32* %29, i64 %idxprom14, !dbg !5192
  %31 = load i32, i32* %arrayidx15, align 4, !dbg !5192
  store i32 %31, i32* %iTmp, align 4, !dbg !5195
  %32 = load i32*, i32** %pSortBuffer.addr, align 8, !dbg !5196
  %33 = load i32, i32* %iR, align 4, !dbg !5197
  %idxprom16 = sext i32 %33 to i64, !dbg !5196
  %arrayidx17 = getelementptr inbounds i32, i32* %32, i64 %idxprom16, !dbg !5196
  %34 = load i32, i32* %arrayidx17, align 4, !dbg !5196
  %35 = load i32*, i32** %pSortBuffer.addr, align 8, !dbg !5198
  %36 = load i32, i32* %iL, align 4, !dbg !5199
  %idxprom18 = sext i32 %36 to i64, !dbg !5198
  %arrayidx19 = getelementptr inbounds i32, i32* %35, i64 %idxprom18, !dbg !5198
  store i32 %34, i32* %arrayidx19, align 4, !dbg !5200
  %37 = load i32, i32* %iTmp, align 4, !dbg !5201
  %38 = load i32*, i32** %pSortBuffer.addr, align 8, !dbg !5202
  %39 = load i32, i32* %iR, align 4, !dbg !5203
  %idxprom20 = sext i32 %39 to i64, !dbg !5202
  %arrayidx21 = getelementptr inbounds i32, i32* %38, i64 %idxprom20, !dbg !5202
  store i32 %37, i32* %arrayidx21, align 4, !dbg !5204
  %40 = load i32, i32* %iL, align 4, !dbg !5205
  %inc22 = add nsw i32 %40, 1, !dbg !5205
  store i32 %inc22, i32* %iL, align 4, !dbg !5205
  %41 = load i32, i32* %iR, align 4, !dbg !5206
  %dec23 = add nsw i32 %41, -1, !dbg !5206
  store i32 %dec23, i32* %iR, align 4, !dbg !5206
  br label %if.end, !dbg !5207

if.end:                                           ; preds = %if.then, %while.end12
  br label %do.cond, !dbg !5208

do.cond:                                          ; preds = %if.end
  %42 = load i32, i32* %iL, align 4, !dbg !5209
  %43 = load i32, i32* %iR, align 4, !dbg !5210
  %cmp24 = icmp sle i32 %42, %43, !dbg !5211
  br i1 %cmp24, label %do.body, label %do.end, !dbg !5208, !llvm.loop !5212

do.end:                                           ; preds = %do.cond
  %44 = load i32, i32* %iLeft.addr, align 4, !dbg !5214
  %45 = load i32, i32* %iR, align 4, !dbg !5216
  %cmp25 = icmp slt i32 %44, %45, !dbg !5217
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !5218

if.then26:                                        ; preds = %do.end
  %46 = load i32*, i32** %pSortBuffer.addr, align 8, !dbg !5219
  %47 = load i32, i32* %iLeft.addr, align 4, !dbg !5220
  %48 = load i32, i32* %iR, align 4, !dbg !5221
  %49 = load i32, i32* %uSeed.addr, align 4, !dbg !5222
  call void @QuickSort(i32* %46, i32 %47, i32 %48, i32 %49), !dbg !5223
  br label %if.end27, !dbg !5223

if.end27:                                         ; preds = %if.then26, %do.end
  %50 = load i32, i32* %iL, align 4, !dbg !5224
  %51 = load i32, i32* %iRight.addr, align 4, !dbg !5226
  %cmp28 = icmp slt i32 %50, %51, !dbg !5227
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !5228

if.then29:                                        ; preds = %if.end27
  %52 = load i32*, i32** %pSortBuffer.addr, align 8, !dbg !5229
  %53 = load i32, i32* %iL, align 4, !dbg !5230
  %54 = load i32, i32* %iRight.addr, align 4, !dbg !5231
  %55 = load i32, i32* %uSeed.addr, align 4, !dbg !5232
  call void @QuickSort(i32* %52, i32 %53, i32 %54, i32 %55), !dbg !5233
  br label %if.end30, !dbg !5233

if.end30:                                         ; preds = %if.then29, %if.end27
  ret void, !dbg !5234
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @CompareSubGroups(%struct.SSubGroup* %pg1, %struct.SSubGroup* %pg2) #0 !dbg !5235 {
entry:
  %retval = alloca i32, align 4
  %pg1.addr = alloca %struct.SSubGroup*, align 8
  %pg2.addr = alloca %struct.SSubGroup*, align 8
  %bStillSame = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.SSubGroup* %pg1, %struct.SSubGroup** %pg1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SSubGroup** %pg1.addr, metadata !5240, metadata !DIExpression()), !dbg !5241
  store %struct.SSubGroup* %pg2, %struct.SSubGroup** %pg2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SSubGroup** %pg2.addr, metadata !5242, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.declare(metadata i32* %bStillSame, metadata !5244, metadata !DIExpression()), !dbg !5245
  store i32 1, i32* %bStillSame, align 4, !dbg !5245
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5246, metadata !DIExpression()), !dbg !5247
  store i32 0, i32* %i, align 4, !dbg !5247
  %0 = load %struct.SSubGroup*, %struct.SSubGroup** %pg1.addr, align 8, !dbg !5248
  %iNrFaces = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %0, i32 0, i32 0, !dbg !5250
  %1 = load i32, i32* %iNrFaces, align 8, !dbg !5250
  %2 = load %struct.SSubGroup*, %struct.SSubGroup** %pg2.addr, align 8, !dbg !5251
  %iNrFaces1 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %2, i32 0, i32 0, !dbg !5252
  %3 = load i32, i32* %iNrFaces1, align 8, !dbg !5252
  %cmp = icmp ne i32 %1, %3, !dbg !5253
  br i1 %cmp, label %if.then, label %if.end, !dbg !5254

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5255
  br label %return, !dbg !5255

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !5256

while.cond:                                       ; preds = %if.end10, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !5257
  %5 = load %struct.SSubGroup*, %struct.SSubGroup** %pg1.addr, align 8, !dbg !5258
  %iNrFaces2 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %5, i32 0, i32 0, !dbg !5259
  %6 = load i32, i32* %iNrFaces2, align 8, !dbg !5259
  %cmp3 = icmp slt i32 %4, %6, !dbg !5260
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !5261

land.rhs:                                         ; preds = %while.cond
  %7 = load i32, i32* %bStillSame, align 4, !dbg !5262
  %tobool = icmp ne i32 %7, 0, !dbg !5261
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !5263
  br i1 %8, label %while.body, label %while.end, !dbg !5256

while.body:                                       ; preds = %land.end
  %9 = load %struct.SSubGroup*, %struct.SSubGroup** %pg1.addr, align 8, !dbg !5264
  %pTriMembers = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %9, i32 0, i32 1, !dbg !5266
  %10 = load i32*, i32** %pTriMembers, align 8, !dbg !5266
  %11 = load i32, i32* %i, align 4, !dbg !5267
  %idxprom = sext i32 %11 to i64, !dbg !5264
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !5264
  %12 = load i32, i32* %arrayidx, align 4, !dbg !5264
  %13 = load %struct.SSubGroup*, %struct.SSubGroup** %pg2.addr, align 8, !dbg !5268
  %pTriMembers4 = getelementptr inbounds %struct.SSubGroup, %struct.SSubGroup* %13, i32 0, i32 1, !dbg !5269
  %14 = load i32*, i32** %pTriMembers4, align 8, !dbg !5269
  %15 = load i32, i32* %i, align 4, !dbg !5270
  %idxprom5 = sext i32 %15 to i64, !dbg !5268
  %arrayidx6 = getelementptr inbounds i32, i32* %14, i64 %idxprom5, !dbg !5268
  %16 = load i32, i32* %arrayidx6, align 4, !dbg !5268
  %cmp7 = icmp eq i32 %12, %16, !dbg !5271
  %17 = zext i1 %cmp7 to i64, !dbg !5264
  %cond = select i1 %cmp7, i32 1, i32 0, !dbg !5264
  store i32 %cond, i32* %bStillSame, align 4, !dbg !5272
  %18 = load i32, i32* %bStillSame, align 4, !dbg !5273
  %tobool8 = icmp ne i32 %18, 0, !dbg !5273
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5275

if.then9:                                         ; preds = %while.body
  %19 = load i32, i32* %i, align 4, !dbg !5276
  %inc = add nsw i32 %19, 1, !dbg !5276
  store i32 %inc, i32* %i, align 4, !dbg !5276
  br label %if.end10, !dbg !5276

if.end10:                                         ; preds = %if.then9, %while.body
  br label %while.cond, !dbg !5256, !llvm.loop !5277

while.end:                                        ; preds = %land.end
  %20 = load i32, i32* %bStillSame, align 4, !dbg !5279
  store i32 %20, i32* %retval, align 4, !dbg !5280
  br label %return, !dbg !5280

return:                                           ; preds = %while.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !5281
  ret i32 %21, !dbg !5281
}

; Function Attrs: noinline nounwind uwtable
define internal void @EvalTspace(%struct.STSpace* noalias sret %agg.result, i32* %face_indices, i32 %iFaces, i32* %piTriListIn, %struct.STriInfo* %pTriInfos, %struct.SMikkTSpaceContext* %pContext, i32 %iVertexRepresentitive) #2 !dbg !5282 {
entry:
  %face_indices.addr = alloca i32*, align 8
  %iFaces.addr = alloca i32, align 4
  %piTriListIn.addr = alloca i32*, align 8
  %pTriInfos.addr = alloca %struct.STriInfo*, align 8
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %iVertexRepresentitive.addr = alloca i32, align 4
  %fAngleSum = alloca float, align 4
  %face = alloca i32, align 4
  %f = alloca i32, align 4
  %n = alloca %struct.SVec3, align 4
  %vOs11 = alloca %struct.SVec3, align 4
  %vOt12 = alloca %struct.SVec3, align 4
  %p0 = alloca %struct.SVec3, align 4
  %p1 = alloca %struct.SVec3, align 4
  %p2 = alloca %struct.SVec3, align 4
  %v1 = alloca %struct.SVec3, align 4
  %v2 = alloca %struct.SVec3, align 4
  %fCos = alloca float, align 4
  %fAngle = alloca float, align 4
  %fMagS13 = alloca float, align 4
  %fMagT14 = alloca float, align 4
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %i0 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %tmp = alloca %struct.SVec3, align 4
  %tmp38 = alloca { <2 x float>, float }, align 8
  %tmp39 = alloca %struct.SVec3, align 4
  %agg.tmp = alloca %struct.SVec3, align 4
  %n.coerce = alloca { <2 x float>, float }, align 4
  %vOs45.coerce = alloca { <2 x float>, float }, align 8
  %n.coerce47 = alloca { <2 x float>, float }, align 4
  %tmp49 = alloca { <2 x float>, float }, align 8
  %vOs42.coerce = alloca { <2 x float>, float }, align 8
  %agg.tmp.coerce = alloca { <2 x float>, float }, align 4
  %tmp51 = alloca { <2 x float>, float }, align 8
  %tmp52 = alloca %struct.SVec3, align 4
  %agg.tmp56 = alloca %struct.SVec3, align 4
  %n.coerce60 = alloca { <2 x float>, float }, align 4
  %vOt59.coerce = alloca { <2 x float>, float }, align 4
  %n.coerce62 = alloca { <2 x float>, float }, align 4
  %tmp64 = alloca { <2 x float>, float }, align 8
  %vOt55.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp56.coerce = alloca { <2 x float>, float }, align 4
  %tmp66 = alloca { <2 x float>, float }, align 8
  %vOs11.coerce = alloca { <2 x float>, float }, align 4
  %tmp69 = alloca %struct.SVec3, align 4
  %vOs11.coerce70 = alloca { <2 x float>, float }, align 4
  %tmp72 = alloca { <2 x float>, float }, align 8
  %vOt12.coerce = alloca { <2 x float>, float }, align 4
  %tmp77 = alloca %struct.SVec3, align 4
  %vOt12.coerce78 = alloca { <2 x float>, float }, align 4
  %tmp80 = alloca { <2 x float>, float }, align 8
  %tmp101 = alloca %struct.SVec3, align 4
  %tmp103 = alloca { <2 x float>, float }, align 8
  %tmp104 = alloca %struct.SVec3, align 4
  %tmp106 = alloca { <2 x float>, float }, align 8
  %tmp107 = alloca %struct.SVec3, align 4
  %tmp109 = alloca { <2 x float>, float }, align 8
  %tmp110 = alloca %struct.SVec3, align 4
  %p0.coerce = alloca { <2 x float>, float }, align 4
  %p1.coerce = alloca { <2 x float>, float }, align 4
  %tmp112 = alloca { <2 x float>, float }, align 8
  %tmp113 = alloca %struct.SVec3, align 4
  %p2.coerce = alloca { <2 x float>, float }, align 4
  %p1.coerce114 = alloca { <2 x float>, float }, align 4
  %tmp116 = alloca { <2 x float>, float }, align 8
  %tmp117 = alloca %struct.SVec3, align 4
  %agg.tmp118 = alloca %struct.SVec3, align 4
  %n.coerce119 = alloca { <2 x float>, float }, align 4
  %v1.coerce = alloca { <2 x float>, float }, align 4
  %n.coerce121 = alloca { <2 x float>, float }, align 4
  %tmp123 = alloca { <2 x float>, float }, align 8
  %v1.coerce124 = alloca { <2 x float>, float }, align 4
  %agg.tmp118.coerce = alloca { <2 x float>, float }, align 4
  %tmp126 = alloca { <2 x float>, float }, align 8
  %v1.coerce127 = alloca { <2 x float>, float }, align 4
  %tmp131 = alloca %struct.SVec3, align 4
  %v1.coerce132 = alloca { <2 x float>, float }, align 4
  %tmp134 = alloca { <2 x float>, float }, align 8
  %tmp136 = alloca %struct.SVec3, align 4
  %agg.tmp137 = alloca %struct.SVec3, align 4
  %n.coerce138 = alloca { <2 x float>, float }, align 4
  %v2.coerce = alloca { <2 x float>, float }, align 4
  %n.coerce140 = alloca { <2 x float>, float }, align 4
  %tmp142 = alloca { <2 x float>, float }, align 8
  %v2.coerce143 = alloca { <2 x float>, float }, align 4
  %agg.tmp137.coerce = alloca { <2 x float>, float }, align 4
  %tmp145 = alloca { <2 x float>, float }, align 8
  %v2.coerce146 = alloca { <2 x float>, float }, align 4
  %tmp150 = alloca %struct.SVec3, align 4
  %v2.coerce151 = alloca { <2 x float>, float }, align 4
  %tmp153 = alloca { <2 x float>, float }, align 8
  %v1.coerce155 = alloca { <2 x float>, float }, align 4
  %v2.coerce156 = alloca { <2 x float>, float }, align 4
  %tmp177 = alloca %struct.SVec3, align 4
  %agg.tmp179 = alloca %struct.SVec3, align 4
  %vOs11.coerce180 = alloca { <2 x float>, float }, align 4
  %tmp182 = alloca { <2 x float>, float }, align 8
  %vOs178.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp179.coerce = alloca { <2 x float>, float }, align 4
  %tmp184 = alloca { <2 x float>, float }, align 8
  %tmp186 = alloca %struct.SVec3, align 4
  %agg.tmp188 = alloca %struct.SVec3, align 4
  %vOt12.coerce189 = alloca { <2 x float>, float }, align 4
  %tmp191 = alloca { <2 x float>, float }, align 8
  %vOt187.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp188.coerce = alloca { <2 x float>, float }, align 4
  %tmp193 = alloca { <2 x float>, float }, align 8
  %vOs202.coerce = alloca { <2 x float>, float }, align 4
  %tmp207 = alloca %struct.SVec3, align 4
  %vOs208.coerce = alloca { <2 x float>, float }, align 4
  %tmp210 = alloca { <2 x float>, float }, align 8
  %vOt212.coerce = alloca { <2 x float>, float }, align 4
  %tmp217 = alloca %struct.SVec3, align 4
  %vOt218.coerce = alloca { <2 x float>, float }, align 4
  %tmp220 = alloca { <2 x float>, float }, align 8
  store i32* %face_indices, i32** %face_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %face_indices.addr, metadata !5285, metadata !DIExpression()), !dbg !5286
  store i32 %iFaces, i32* %iFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iFaces.addr, metadata !5287, metadata !DIExpression()), !dbg !5288
  store i32* %piTriListIn, i32** %piTriListIn.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %piTriListIn.addr, metadata !5289, metadata !DIExpression()), !dbg !5290
  store %struct.STriInfo* %pTriInfos, %struct.STriInfo** %pTriInfos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STriInfo** %pTriInfos.addr, metadata !5291, metadata !DIExpression()), !dbg !5292
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !5293, metadata !DIExpression()), !dbg !5294
  store i32 %iVertexRepresentitive, i32* %iVertexRepresentitive.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iVertexRepresentitive.addr, metadata !5295, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.declare(metadata %struct.STSpace* %agg.result, metadata !5297, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.declare(metadata float* %fAngleSum, metadata !5299, metadata !DIExpression()), !dbg !5300
  store float 0.000000e+00, float* %fAngleSum, align 4, !dbg !5300
  call void @llvm.dbg.declare(metadata i32* %face, metadata !5301, metadata !DIExpression()), !dbg !5302
  store i32 0, i32* %face, align 4, !dbg !5302
  %vOs = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5303
  %x = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs, i32 0, i32 0, !dbg !5304
  store float 0.000000e+00, float* %x, align 4, !dbg !5305
  %vOs1 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5306
  %y = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs1, i32 0, i32 1, !dbg !5307
  store float 0.000000e+00, float* %y, align 4, !dbg !5308
  %vOs2 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5309
  %z = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOs2, i32 0, i32 2, !dbg !5310
  store float 0.000000e+00, float* %z, align 4, !dbg !5311
  %vOt = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5312
  %x3 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt, i32 0, i32 0, !dbg !5313
  store float 0.000000e+00, float* %x3, align 4, !dbg !5314
  %vOt4 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5315
  %y5 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt4, i32 0, i32 1, !dbg !5316
  store float 0.000000e+00, float* %y5, align 4, !dbg !5317
  %vOt6 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5318
  %z7 = getelementptr inbounds %struct.SVec3, %struct.SVec3* %vOt6, i32 0, i32 2, !dbg !5319
  store float 0.000000e+00, float* %z7, align 4, !dbg !5320
  %fMagS = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 1, !dbg !5321
  store float 0.000000e+00, float* %fMagS, align 4, !dbg !5322
  %fMagT = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 3, !dbg !5323
  store float 0.000000e+00, float* %fMagT, align 4, !dbg !5324
  store i32 0, i32* %face, align 4, !dbg !5325
  br label %for.cond, !dbg !5327

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %face, align 4, !dbg !5328
  %1 = load i32, i32* %iFaces.addr, align 4, !dbg !5330
  %cmp = icmp slt i32 %0, %1, !dbg !5331
  br i1 %cmp, label %for.body, label %for.end, !dbg !5332

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %f, metadata !5333, metadata !DIExpression()), !dbg !5335
  %2 = load i32*, i32** %face_indices.addr, align 8, !dbg !5336
  %3 = load i32, i32* %face, align 4, !dbg !5337
  %idxprom = sext i32 %3 to i64, !dbg !5336
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !5336
  %4 = load i32, i32* %arrayidx, align 4, !dbg !5336
  store i32 %4, i32* %f, align 4, !dbg !5335
  %5 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !5338
  %6 = load i32, i32* %f, align 4, !dbg !5340
  %idxprom8 = sext i32 %6 to i64, !dbg !5338
  %arrayidx9 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %5, i64 %idxprom8, !dbg !5338
  %iFlag = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx9, i32 0, i32 7, !dbg !5341
  %7 = load i32, i32* %iFlag, align 4, !dbg !5341
  %and = and i32 %7, 4, !dbg !5342
  %cmp10 = icmp eq i32 %and, 0, !dbg !5343
  br i1 %cmp10, label %if.then, label %if.end201, !dbg !5344

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.SVec3* %n, metadata !5345, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vOs11, metadata !5348, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.declare(metadata %struct.SVec3* %vOt12, metadata !5350, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.declare(metadata %struct.SVec3* %p0, metadata !5352, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.declare(metadata %struct.SVec3* %p1, metadata !5354, metadata !DIExpression()), !dbg !5355
  call void @llvm.dbg.declare(metadata %struct.SVec3* %p2, metadata !5356, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v1, metadata !5358, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.declare(metadata %struct.SVec3* %v2, metadata !5360, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.declare(metadata float* %fCos, metadata !5362, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.declare(metadata float* %fAngle, metadata !5364, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.declare(metadata float* %fMagS13, metadata !5366, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.declare(metadata float* %fMagT14, metadata !5368, metadata !DIExpression()), !dbg !5369
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5370, metadata !DIExpression()), !dbg !5371
  store i32 -1, i32* %i, align 4, !dbg !5371
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5372, metadata !DIExpression()), !dbg !5373
  store i32 -1, i32* %index, align 4, !dbg !5373
  call void @llvm.dbg.declare(metadata i32* %i0, metadata !5374, metadata !DIExpression()), !dbg !5375
  store i32 -1, i32* %i0, align 4, !dbg !5375
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !5376, metadata !DIExpression()), !dbg !5377
  store i32 -1, i32* %i1, align 4, !dbg !5377
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !5378, metadata !DIExpression()), !dbg !5379
  store i32 -1, i32* %i2, align 4, !dbg !5379
  %8 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !5380
  %9 = load i32, i32* %f, align 4, !dbg !5382
  %mul = mul nsw i32 3, %9, !dbg !5383
  %add = add nsw i32 %mul, 0, !dbg !5384
  %idxprom15 = sext i32 %add to i64, !dbg !5380
  %arrayidx16 = getelementptr inbounds i32, i32* %8, i64 %idxprom15, !dbg !5380
  %10 = load i32, i32* %arrayidx16, align 4, !dbg !5380
  %11 = load i32, i32* %iVertexRepresentitive.addr, align 4, !dbg !5385
  %cmp17 = icmp eq i32 %10, %11, !dbg !5386
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !5387

if.then18:                                        ; preds = %if.then
  store i32 0, i32* %i, align 4, !dbg !5388
  br label %if.end33, !dbg !5389

if.else:                                          ; preds = %if.then
  %12 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !5390
  %13 = load i32, i32* %f, align 4, !dbg !5392
  %mul19 = mul nsw i32 3, %13, !dbg !5393
  %add20 = add nsw i32 %mul19, 1, !dbg !5394
  %idxprom21 = sext i32 %add20 to i64, !dbg !5390
  %arrayidx22 = getelementptr inbounds i32, i32* %12, i64 %idxprom21, !dbg !5390
  %14 = load i32, i32* %arrayidx22, align 4, !dbg !5390
  %15 = load i32, i32* %iVertexRepresentitive.addr, align 4, !dbg !5395
  %cmp23 = icmp eq i32 %14, %15, !dbg !5396
  br i1 %cmp23, label %if.then24, label %if.else25, !dbg !5397

if.then24:                                        ; preds = %if.else
  store i32 1, i32* %i, align 4, !dbg !5398
  br label %if.end32, !dbg !5399

if.else25:                                        ; preds = %if.else
  %16 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !5400
  %17 = load i32, i32* %f, align 4, !dbg !5402
  %mul26 = mul nsw i32 3, %17, !dbg !5403
  %add27 = add nsw i32 %mul26, 2, !dbg !5404
  %idxprom28 = sext i32 %add27 to i64, !dbg !5400
  %arrayidx29 = getelementptr inbounds i32, i32* %16, i64 %idxprom28, !dbg !5400
  %18 = load i32, i32* %arrayidx29, align 4, !dbg !5400
  %19 = load i32, i32* %iVertexRepresentitive.addr, align 4, !dbg !5405
  %cmp30 = icmp eq i32 %18, %19, !dbg !5406
  br i1 %cmp30, label %if.then31, label %if.end, !dbg !5407

if.then31:                                        ; preds = %if.else25
  store i32 2, i32* %i, align 4, !dbg !5408
  br label %if.end, !dbg !5409

if.end:                                           ; preds = %if.then31, %if.else25
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then24
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then18
  %20 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !5410
  %21 = load i32, i32* %f, align 4, !dbg !5411
  %mul34 = mul nsw i32 3, %21, !dbg !5412
  %22 = load i32, i32* %i, align 4, !dbg !5413
  %add35 = add nsw i32 %mul34, %22, !dbg !5414
  %idxprom36 = sext i32 %add35 to i64, !dbg !5410
  %arrayidx37 = getelementptr inbounds i32, i32* %20, i64 %idxprom36, !dbg !5410
  %23 = load i32, i32* %arrayidx37, align 4, !dbg !5410
  store i32 %23, i32* %index, align 4, !dbg !5415
  %24 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !5416
  %25 = load i32, i32* %index, align 4, !dbg !5417
  %call = call { <2 x float>, float } @GetNormal(%struct.SMikkTSpaceContext* %24, i32 %25), !dbg !5418
  store { <2 x float>, float } %call, { <2 x float>, float }* %tmp38, align 8, !dbg !5418
  %26 = bitcast { <2 x float>, float }* %tmp38 to i8*, !dbg !5418
  %27 = bitcast %struct.SVec3* %tmp to i8*, !dbg !5418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 8 %26, i64 12, i1 false), !dbg !5418
  %28 = bitcast %struct.SVec3* %n to i8*, !dbg !5418
  %29 = bitcast %struct.SVec3* %tmp to i8*, !dbg !5418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 12, i1 false), !dbg !5418
  %30 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !5419
  %31 = load i32, i32* %f, align 4, !dbg !5420
  %idxprom40 = sext i32 %31 to i64, !dbg !5419
  %arrayidx41 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %30, i64 %idxprom40, !dbg !5419
  %vOs42 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx41, i32 0, i32 2, !dbg !5421
  %32 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !5422
  %33 = load i32, i32* %f, align 4, !dbg !5423
  %idxprom43 = sext i32 %33 to i64, !dbg !5422
  %arrayidx44 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %32, i64 %idxprom43, !dbg !5422
  %vOs45 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx44, i32 0, i32 2, !dbg !5424
  %34 = bitcast { <2 x float>, float }* %n.coerce to i8*, !dbg !5425
  %35 = bitcast %struct.SVec3* %n to i8*, !dbg !5425
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 12, i1 false), !dbg !5425
  %36 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce, i32 0, i32 0, !dbg !5425
  %37 = load <2 x float>, <2 x float>* %36, align 4, !dbg !5425
  %38 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce, i32 0, i32 1, !dbg !5425
  %39 = load float, float* %38, align 4, !dbg !5425
  %40 = bitcast { <2 x float>, float }* %vOs45.coerce to i8*, !dbg !5425
  %41 = bitcast %struct.SVec3* %vOs45 to i8*, !dbg !5425
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 12, i1 false), !dbg !5425
  %42 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs45.coerce, i32 0, i32 0, !dbg !5425
  %43 = load <2 x float>, <2 x float>* %42, align 8, !dbg !5425
  %44 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs45.coerce, i32 0, i32 1, !dbg !5425
  %45 = load float, float* %44, align 8, !dbg !5425
  %call46 = call float @vdot(<2 x float> %37, float %39, <2 x float> %43, float %45), !dbg !5425
  %46 = bitcast { <2 x float>, float }* %n.coerce47 to i8*, !dbg !5426
  %47 = bitcast %struct.SVec3* %n to i8*, !dbg !5426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 12, i1 false), !dbg !5426
  %48 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce47, i32 0, i32 0, !dbg !5426
  %49 = load <2 x float>, <2 x float>* %48, align 4, !dbg !5426
  %50 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce47, i32 0, i32 1, !dbg !5426
  %51 = load float, float* %50, align 4, !dbg !5426
  %call48 = call { <2 x float>, float } @vscale(float %call46, <2 x float> %49, float %51), !dbg !5426
  store { <2 x float>, float } %call48, { <2 x float>, float }* %tmp49, align 8, !dbg !5426
  %52 = bitcast { <2 x float>, float }* %tmp49 to i8*, !dbg !5426
  %53 = bitcast %struct.SVec3* %agg.tmp to i8*, !dbg !5426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 8 %52, i64 12, i1 false), !dbg !5426
  %54 = bitcast { <2 x float>, float }* %vOs42.coerce to i8*, !dbg !5427
  %55 = bitcast %struct.SVec3* %vOs42 to i8*, !dbg !5427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 12, i1 false), !dbg !5427
  %56 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs42.coerce, i32 0, i32 0, !dbg !5427
  %57 = load <2 x float>, <2 x float>* %56, align 8, !dbg !5427
  %58 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs42.coerce, i32 0, i32 1, !dbg !5427
  %59 = load float, float* %58, align 8, !dbg !5427
  %60 = bitcast { <2 x float>, float }* %agg.tmp.coerce to i8*, !dbg !5427
  %61 = bitcast %struct.SVec3* %agg.tmp to i8*, !dbg !5427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 12, i1 false), !dbg !5427
  %62 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 0, !dbg !5427
  %63 = load <2 x float>, <2 x float>* %62, align 4, !dbg !5427
  %64 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 1, !dbg !5427
  %65 = load float, float* %64, align 4, !dbg !5427
  %call50 = call { <2 x float>, float } @vsub(<2 x float> %57, float %59, <2 x float> %63, float %65), !dbg !5427
  store { <2 x float>, float } %call50, { <2 x float>, float }* %tmp51, align 8, !dbg !5427
  %66 = bitcast { <2 x float>, float }* %tmp51 to i8*, !dbg !5427
  %67 = bitcast %struct.SVec3* %tmp39 to i8*, !dbg !5427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 8 %66, i64 12, i1 false), !dbg !5427
  %68 = bitcast %struct.SVec3* %vOs11 to i8*, !dbg !5427
  %69 = bitcast %struct.SVec3* %tmp39 to i8*, !dbg !5427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 12, i1 false), !dbg !5427
  %70 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !5428
  %71 = load i32, i32* %f, align 4, !dbg !5429
  %idxprom53 = sext i32 %71 to i64, !dbg !5428
  %arrayidx54 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %70, i64 %idxprom53, !dbg !5428
  %vOt55 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx54, i32 0, i32 3, !dbg !5430
  %72 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !5431
  %73 = load i32, i32* %f, align 4, !dbg !5432
  %idxprom57 = sext i32 %73 to i64, !dbg !5431
  %arrayidx58 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %72, i64 %idxprom57, !dbg !5431
  %vOt59 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx58, i32 0, i32 3, !dbg !5433
  %74 = bitcast { <2 x float>, float }* %n.coerce60 to i8*, !dbg !5434
  %75 = bitcast %struct.SVec3* %n to i8*, !dbg !5434
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* align 4 %75, i64 12, i1 false), !dbg !5434
  %76 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce60, i32 0, i32 0, !dbg !5434
  %77 = load <2 x float>, <2 x float>* %76, align 4, !dbg !5434
  %78 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce60, i32 0, i32 1, !dbg !5434
  %79 = load float, float* %78, align 4, !dbg !5434
  %80 = bitcast { <2 x float>, float }* %vOt59.coerce to i8*, !dbg !5434
  %81 = bitcast %struct.SVec3* %vOt59 to i8*, !dbg !5434
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 12, i1 false), !dbg !5434
  %82 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt59.coerce, i32 0, i32 0, !dbg !5434
  %83 = load <2 x float>, <2 x float>* %82, align 4, !dbg !5434
  %84 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt59.coerce, i32 0, i32 1, !dbg !5434
  %85 = load float, float* %84, align 4, !dbg !5434
  %call61 = call float @vdot(<2 x float> %77, float %79, <2 x float> %83, float %85), !dbg !5434
  %86 = bitcast { <2 x float>, float }* %n.coerce62 to i8*, !dbg !5435
  %87 = bitcast %struct.SVec3* %n to i8*, !dbg !5435
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 12, i1 false), !dbg !5435
  %88 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce62, i32 0, i32 0, !dbg !5435
  %89 = load <2 x float>, <2 x float>* %88, align 4, !dbg !5435
  %90 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce62, i32 0, i32 1, !dbg !5435
  %91 = load float, float* %90, align 4, !dbg !5435
  %call63 = call { <2 x float>, float } @vscale(float %call61, <2 x float> %89, float %91), !dbg !5435
  store { <2 x float>, float } %call63, { <2 x float>, float }* %tmp64, align 8, !dbg !5435
  %92 = bitcast { <2 x float>, float }* %tmp64 to i8*, !dbg !5435
  %93 = bitcast %struct.SVec3* %agg.tmp56 to i8*, !dbg !5435
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 8 %92, i64 12, i1 false), !dbg !5435
  %94 = bitcast { <2 x float>, float }* %vOt55.coerce to i8*, !dbg !5436
  %95 = bitcast %struct.SVec3* %vOt55 to i8*, !dbg !5436
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 12, i1 false), !dbg !5436
  %96 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt55.coerce, i32 0, i32 0, !dbg !5436
  %97 = load <2 x float>, <2 x float>* %96, align 4, !dbg !5436
  %98 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt55.coerce, i32 0, i32 1, !dbg !5436
  %99 = load float, float* %98, align 4, !dbg !5436
  %100 = bitcast { <2 x float>, float }* %agg.tmp56.coerce to i8*, !dbg !5436
  %101 = bitcast %struct.SVec3* %agg.tmp56 to i8*, !dbg !5436
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* align 4 %101, i64 12, i1 false), !dbg !5436
  %102 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp56.coerce, i32 0, i32 0, !dbg !5436
  %103 = load <2 x float>, <2 x float>* %102, align 4, !dbg !5436
  %104 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp56.coerce, i32 0, i32 1, !dbg !5436
  %105 = load float, float* %104, align 4, !dbg !5436
  %call65 = call { <2 x float>, float } @vsub(<2 x float> %97, float %99, <2 x float> %103, float %105), !dbg !5436
  store { <2 x float>, float } %call65, { <2 x float>, float }* %tmp66, align 8, !dbg !5436
  %106 = bitcast { <2 x float>, float }* %tmp66 to i8*, !dbg !5436
  %107 = bitcast %struct.SVec3* %tmp52 to i8*, !dbg !5436
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 8 %106, i64 12, i1 false), !dbg !5436
  %108 = bitcast %struct.SVec3* %vOt12 to i8*, !dbg !5436
  %109 = bitcast %struct.SVec3* %tmp52 to i8*, !dbg !5436
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 12, i1 false), !dbg !5436
  %110 = bitcast { <2 x float>, float }* %vOs11.coerce to i8*, !dbg !5437
  %111 = bitcast %struct.SVec3* %vOs11 to i8*, !dbg !5437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 12, i1 false), !dbg !5437
  %112 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs11.coerce, i32 0, i32 0, !dbg !5437
  %113 = load <2 x float>, <2 x float>* %112, align 4, !dbg !5437
  %114 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs11.coerce, i32 0, i32 1, !dbg !5437
  %115 = load float, float* %114, align 4, !dbg !5437
  %call67 = call i32 @VNotZero(<2 x float> %113, float %115), !dbg !5437
  %tobool = icmp ne i32 %call67, 0, !dbg !5437
  br i1 %tobool, label %if.then68, label %if.end73, !dbg !5439

if.then68:                                        ; preds = %if.end33
  %116 = bitcast { <2 x float>, float }* %vOs11.coerce70 to i8*, !dbg !5440
  %117 = bitcast %struct.SVec3* %vOs11 to i8*, !dbg !5440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 12, i1 false), !dbg !5440
  %118 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs11.coerce70, i32 0, i32 0, !dbg !5440
  %119 = load <2 x float>, <2 x float>* %118, align 4, !dbg !5440
  %120 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs11.coerce70, i32 0, i32 1, !dbg !5440
  %121 = load float, float* %120, align 4, !dbg !5440
  %call71 = call { <2 x float>, float } @Normalize(<2 x float> %119, float %121), !dbg !5440
  store { <2 x float>, float } %call71, { <2 x float>, float }* %tmp72, align 8, !dbg !5440
  %122 = bitcast { <2 x float>, float }* %tmp72 to i8*, !dbg !5440
  %123 = bitcast %struct.SVec3* %tmp69 to i8*, !dbg !5440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %123, i8* align 8 %122, i64 12, i1 false), !dbg !5440
  %124 = bitcast %struct.SVec3* %vOs11 to i8*, !dbg !5440
  %125 = bitcast %struct.SVec3* %tmp69 to i8*, !dbg !5440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 12, i1 false), !dbg !5440
  br label %if.end73, !dbg !5441

if.end73:                                         ; preds = %if.then68, %if.end33
  %126 = bitcast { <2 x float>, float }* %vOt12.coerce to i8*, !dbg !5442
  %127 = bitcast %struct.SVec3* %vOt12 to i8*, !dbg !5442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %127, i64 12, i1 false), !dbg !5442
  %128 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt12.coerce, i32 0, i32 0, !dbg !5442
  %129 = load <2 x float>, <2 x float>* %128, align 4, !dbg !5442
  %130 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt12.coerce, i32 0, i32 1, !dbg !5442
  %131 = load float, float* %130, align 4, !dbg !5442
  %call74 = call i32 @VNotZero(<2 x float> %129, float %131), !dbg !5442
  %tobool75 = icmp ne i32 %call74, 0, !dbg !5442
  br i1 %tobool75, label %if.then76, label %if.end81, !dbg !5444

if.then76:                                        ; preds = %if.end73
  %132 = bitcast { <2 x float>, float }* %vOt12.coerce78 to i8*, !dbg !5445
  %133 = bitcast %struct.SVec3* %vOt12 to i8*, !dbg !5445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 4 %133, i64 12, i1 false), !dbg !5445
  %134 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt12.coerce78, i32 0, i32 0, !dbg !5445
  %135 = load <2 x float>, <2 x float>* %134, align 4, !dbg !5445
  %136 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt12.coerce78, i32 0, i32 1, !dbg !5445
  %137 = load float, float* %136, align 4, !dbg !5445
  %call79 = call { <2 x float>, float } @Normalize(<2 x float> %135, float %137), !dbg !5445
  store { <2 x float>, float } %call79, { <2 x float>, float }* %tmp80, align 8, !dbg !5445
  %138 = bitcast { <2 x float>, float }* %tmp80 to i8*, !dbg !5445
  %139 = bitcast %struct.SVec3* %tmp77 to i8*, !dbg !5445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 8 %138, i64 12, i1 false), !dbg !5445
  %140 = bitcast %struct.SVec3* %vOt12 to i8*, !dbg !5445
  %141 = bitcast %struct.SVec3* %tmp77 to i8*, !dbg !5445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %141, i64 12, i1 false), !dbg !5445
  br label %if.end81, !dbg !5446

if.end81:                                         ; preds = %if.then76, %if.end73
  %142 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !5447
  %143 = load i32, i32* %f, align 4, !dbg !5448
  %mul82 = mul nsw i32 3, %143, !dbg !5449
  %144 = load i32, i32* %i, align 4, !dbg !5450
  %cmp83 = icmp slt i32 %144, 2, !dbg !5451
  br i1 %cmp83, label %cond.true, label %cond.false, !dbg !5450

cond.true:                                        ; preds = %if.end81
  %145 = load i32, i32* %i, align 4, !dbg !5452
  %add84 = add nsw i32 %145, 1, !dbg !5453
  br label %cond.end, !dbg !5450

cond.false:                                       ; preds = %if.end81
  br label %cond.end, !dbg !5450

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add84, %cond.true ], [ 0, %cond.false ], !dbg !5450
  %add85 = add nsw i32 %mul82, %cond, !dbg !5454
  %idxprom86 = sext i32 %add85 to i64, !dbg !5447
  %arrayidx87 = getelementptr inbounds i32, i32* %142, i64 %idxprom86, !dbg !5447
  %146 = load i32, i32* %arrayidx87, align 4, !dbg !5447
  store i32 %146, i32* %i2, align 4, !dbg !5455
  %147 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !5456
  %148 = load i32, i32* %f, align 4, !dbg !5457
  %mul88 = mul nsw i32 3, %148, !dbg !5458
  %149 = load i32, i32* %i, align 4, !dbg !5459
  %add89 = add nsw i32 %mul88, %149, !dbg !5460
  %idxprom90 = sext i32 %add89 to i64, !dbg !5456
  %arrayidx91 = getelementptr inbounds i32, i32* %147, i64 %idxprom90, !dbg !5456
  %150 = load i32, i32* %arrayidx91, align 4, !dbg !5456
  store i32 %150, i32* %i1, align 4, !dbg !5461
  %151 = load i32*, i32** %piTriListIn.addr, align 8, !dbg !5462
  %152 = load i32, i32* %f, align 4, !dbg !5463
  %mul92 = mul nsw i32 3, %152, !dbg !5464
  %153 = load i32, i32* %i, align 4, !dbg !5465
  %cmp93 = icmp sgt i32 %153, 0, !dbg !5466
  br i1 %cmp93, label %cond.true94, label %cond.false95, !dbg !5465

cond.true94:                                      ; preds = %cond.end
  %154 = load i32, i32* %i, align 4, !dbg !5467
  %sub = sub nsw i32 %154, 1, !dbg !5468
  br label %cond.end96, !dbg !5465

cond.false95:                                     ; preds = %cond.end
  br label %cond.end96, !dbg !5465

cond.end96:                                       ; preds = %cond.false95, %cond.true94
  %cond97 = phi i32 [ %sub, %cond.true94 ], [ 2, %cond.false95 ], !dbg !5465
  %add98 = add nsw i32 %mul92, %cond97, !dbg !5469
  %idxprom99 = sext i32 %add98 to i64, !dbg !5462
  %arrayidx100 = getelementptr inbounds i32, i32* %151, i64 %idxprom99, !dbg !5462
  %155 = load i32, i32* %arrayidx100, align 4, !dbg !5462
  store i32 %155, i32* %i0, align 4, !dbg !5470
  %156 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !5471
  %157 = load i32, i32* %i0, align 4, !dbg !5472
  %call102 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %156, i32 %157), !dbg !5473
  store { <2 x float>, float } %call102, { <2 x float>, float }* %tmp103, align 8, !dbg !5473
  %158 = bitcast { <2 x float>, float }* %tmp103 to i8*, !dbg !5473
  %159 = bitcast %struct.SVec3* %tmp101 to i8*, !dbg !5473
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 8 %158, i64 12, i1 false), !dbg !5473
  %160 = bitcast %struct.SVec3* %p0 to i8*, !dbg !5473
  %161 = bitcast %struct.SVec3* %tmp101 to i8*, !dbg !5473
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %160, i8* align 4 %161, i64 12, i1 false), !dbg !5473
  %162 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !5474
  %163 = load i32, i32* %i1, align 4, !dbg !5475
  %call105 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %162, i32 %163), !dbg !5476
  store { <2 x float>, float } %call105, { <2 x float>, float }* %tmp106, align 8, !dbg !5476
  %164 = bitcast { <2 x float>, float }* %tmp106 to i8*, !dbg !5476
  %165 = bitcast %struct.SVec3* %tmp104 to i8*, !dbg !5476
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 8 %164, i64 12, i1 false), !dbg !5476
  %166 = bitcast %struct.SVec3* %p1 to i8*, !dbg !5476
  %167 = bitcast %struct.SVec3* %tmp104 to i8*, !dbg !5476
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %166, i8* align 4 %167, i64 12, i1 false), !dbg !5476
  %168 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !5477
  %169 = load i32, i32* %i2, align 4, !dbg !5478
  %call108 = call { <2 x float>, float } @GetPosition(%struct.SMikkTSpaceContext* %168, i32 %169), !dbg !5479
  store { <2 x float>, float } %call108, { <2 x float>, float }* %tmp109, align 8, !dbg !5479
  %170 = bitcast { <2 x float>, float }* %tmp109 to i8*, !dbg !5479
  %171 = bitcast %struct.SVec3* %tmp107 to i8*, !dbg !5479
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 8 %170, i64 12, i1 false), !dbg !5479
  %172 = bitcast %struct.SVec3* %p2 to i8*, !dbg !5479
  %173 = bitcast %struct.SVec3* %tmp107 to i8*, !dbg !5479
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %173, i64 12, i1 false), !dbg !5479
  %174 = bitcast { <2 x float>, float }* %p0.coerce to i8*, !dbg !5480
  %175 = bitcast %struct.SVec3* %p0 to i8*, !dbg !5480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 12, i1 false), !dbg !5480
  %176 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p0.coerce, i32 0, i32 0, !dbg !5480
  %177 = load <2 x float>, <2 x float>* %176, align 4, !dbg !5480
  %178 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p0.coerce, i32 0, i32 1, !dbg !5480
  %179 = load float, float* %178, align 4, !dbg !5480
  %180 = bitcast { <2 x float>, float }* %p1.coerce to i8*, !dbg !5480
  %181 = bitcast %struct.SVec3* %p1 to i8*, !dbg !5480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %181, i64 12, i1 false), !dbg !5480
  %182 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p1.coerce, i32 0, i32 0, !dbg !5480
  %183 = load <2 x float>, <2 x float>* %182, align 4, !dbg !5480
  %184 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p1.coerce, i32 0, i32 1, !dbg !5480
  %185 = load float, float* %184, align 4, !dbg !5480
  %call111 = call { <2 x float>, float } @vsub(<2 x float> %177, float %179, <2 x float> %183, float %185), !dbg !5480
  store { <2 x float>, float } %call111, { <2 x float>, float }* %tmp112, align 8, !dbg !5480
  %186 = bitcast { <2 x float>, float }* %tmp112 to i8*, !dbg !5480
  %187 = bitcast %struct.SVec3* %tmp110 to i8*, !dbg !5480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 8 %186, i64 12, i1 false), !dbg !5480
  %188 = bitcast %struct.SVec3* %v1 to i8*, !dbg !5480
  %189 = bitcast %struct.SVec3* %tmp110 to i8*, !dbg !5480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 4 %189, i64 12, i1 false), !dbg !5480
  %190 = bitcast { <2 x float>, float }* %p2.coerce to i8*, !dbg !5481
  %191 = bitcast %struct.SVec3* %p2 to i8*, !dbg !5481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %190, i8* align 4 %191, i64 12, i1 false), !dbg !5481
  %192 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p2.coerce, i32 0, i32 0, !dbg !5481
  %193 = load <2 x float>, <2 x float>* %192, align 4, !dbg !5481
  %194 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p2.coerce, i32 0, i32 1, !dbg !5481
  %195 = load float, float* %194, align 4, !dbg !5481
  %196 = bitcast { <2 x float>, float }* %p1.coerce114 to i8*, !dbg !5481
  %197 = bitcast %struct.SVec3* %p1 to i8*, !dbg !5481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %196, i8* align 4 %197, i64 12, i1 false), !dbg !5481
  %198 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p1.coerce114, i32 0, i32 0, !dbg !5481
  %199 = load <2 x float>, <2 x float>* %198, align 4, !dbg !5481
  %200 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %p1.coerce114, i32 0, i32 1, !dbg !5481
  %201 = load float, float* %200, align 4, !dbg !5481
  %call115 = call { <2 x float>, float } @vsub(<2 x float> %193, float %195, <2 x float> %199, float %201), !dbg !5481
  store { <2 x float>, float } %call115, { <2 x float>, float }* %tmp116, align 8, !dbg !5481
  %202 = bitcast { <2 x float>, float }* %tmp116 to i8*, !dbg !5481
  %203 = bitcast %struct.SVec3* %tmp113 to i8*, !dbg !5481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %203, i8* align 8 %202, i64 12, i1 false), !dbg !5481
  %204 = bitcast %struct.SVec3* %v2 to i8*, !dbg !5481
  %205 = bitcast %struct.SVec3* %tmp113 to i8*, !dbg !5481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %204, i8* align 4 %205, i64 12, i1 false), !dbg !5481
  %206 = bitcast { <2 x float>, float }* %n.coerce119 to i8*, !dbg !5482
  %207 = bitcast %struct.SVec3* %n to i8*, !dbg !5482
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %206, i8* align 4 %207, i64 12, i1 false), !dbg !5482
  %208 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce119, i32 0, i32 0, !dbg !5482
  %209 = load <2 x float>, <2 x float>* %208, align 4, !dbg !5482
  %210 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce119, i32 0, i32 1, !dbg !5482
  %211 = load float, float* %210, align 4, !dbg !5482
  %212 = bitcast { <2 x float>, float }* %v1.coerce to i8*, !dbg !5482
  %213 = bitcast %struct.SVec3* %v1 to i8*, !dbg !5482
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %213, i64 12, i1 false), !dbg !5482
  %214 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce, i32 0, i32 0, !dbg !5482
  %215 = load <2 x float>, <2 x float>* %214, align 4, !dbg !5482
  %216 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce, i32 0, i32 1, !dbg !5482
  %217 = load float, float* %216, align 4, !dbg !5482
  %call120 = call float @vdot(<2 x float> %209, float %211, <2 x float> %215, float %217), !dbg !5482
  %218 = bitcast { <2 x float>, float }* %n.coerce121 to i8*, !dbg !5483
  %219 = bitcast %struct.SVec3* %n to i8*, !dbg !5483
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %218, i8* align 4 %219, i64 12, i1 false), !dbg !5483
  %220 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce121, i32 0, i32 0, !dbg !5483
  %221 = load <2 x float>, <2 x float>* %220, align 4, !dbg !5483
  %222 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce121, i32 0, i32 1, !dbg !5483
  %223 = load float, float* %222, align 4, !dbg !5483
  %call122 = call { <2 x float>, float } @vscale(float %call120, <2 x float> %221, float %223), !dbg !5483
  store { <2 x float>, float } %call122, { <2 x float>, float }* %tmp123, align 8, !dbg !5483
  %224 = bitcast { <2 x float>, float }* %tmp123 to i8*, !dbg !5483
  %225 = bitcast %struct.SVec3* %agg.tmp118 to i8*, !dbg !5483
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %225, i8* align 8 %224, i64 12, i1 false), !dbg !5483
  %226 = bitcast { <2 x float>, float }* %v1.coerce124 to i8*, !dbg !5484
  %227 = bitcast %struct.SVec3* %v1 to i8*, !dbg !5484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %226, i8* align 4 %227, i64 12, i1 false), !dbg !5484
  %228 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce124, i32 0, i32 0, !dbg !5484
  %229 = load <2 x float>, <2 x float>* %228, align 4, !dbg !5484
  %230 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce124, i32 0, i32 1, !dbg !5484
  %231 = load float, float* %230, align 4, !dbg !5484
  %232 = bitcast { <2 x float>, float }* %agg.tmp118.coerce to i8*, !dbg !5484
  %233 = bitcast %struct.SVec3* %agg.tmp118 to i8*, !dbg !5484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %233, i64 12, i1 false), !dbg !5484
  %234 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp118.coerce, i32 0, i32 0, !dbg !5484
  %235 = load <2 x float>, <2 x float>* %234, align 4, !dbg !5484
  %236 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp118.coerce, i32 0, i32 1, !dbg !5484
  %237 = load float, float* %236, align 4, !dbg !5484
  %call125 = call { <2 x float>, float } @vsub(<2 x float> %229, float %231, <2 x float> %235, float %237), !dbg !5484
  store { <2 x float>, float } %call125, { <2 x float>, float }* %tmp126, align 8, !dbg !5484
  %238 = bitcast { <2 x float>, float }* %tmp126 to i8*, !dbg !5484
  %239 = bitcast %struct.SVec3* %tmp117 to i8*, !dbg !5484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %239, i8* align 8 %238, i64 12, i1 false), !dbg !5484
  %240 = bitcast %struct.SVec3* %v1 to i8*, !dbg !5484
  %241 = bitcast %struct.SVec3* %tmp117 to i8*, !dbg !5484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %240, i8* align 4 %241, i64 12, i1 false), !dbg !5484
  %242 = bitcast { <2 x float>, float }* %v1.coerce127 to i8*, !dbg !5485
  %243 = bitcast %struct.SVec3* %v1 to i8*, !dbg !5485
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %242, i8* align 4 %243, i64 12, i1 false), !dbg !5485
  %244 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce127, i32 0, i32 0, !dbg !5485
  %245 = load <2 x float>, <2 x float>* %244, align 4, !dbg !5485
  %246 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce127, i32 0, i32 1, !dbg !5485
  %247 = load float, float* %246, align 4, !dbg !5485
  %call128 = call i32 @VNotZero(<2 x float> %245, float %247), !dbg !5485
  %tobool129 = icmp ne i32 %call128, 0, !dbg !5485
  br i1 %tobool129, label %if.then130, label %if.end135, !dbg !5487

if.then130:                                       ; preds = %cond.end96
  %248 = bitcast { <2 x float>, float }* %v1.coerce132 to i8*, !dbg !5488
  %249 = bitcast %struct.SVec3* %v1 to i8*, !dbg !5488
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %248, i8* align 4 %249, i64 12, i1 false), !dbg !5488
  %250 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce132, i32 0, i32 0, !dbg !5488
  %251 = load <2 x float>, <2 x float>* %250, align 4, !dbg !5488
  %252 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce132, i32 0, i32 1, !dbg !5488
  %253 = load float, float* %252, align 4, !dbg !5488
  %call133 = call { <2 x float>, float } @Normalize(<2 x float> %251, float %253), !dbg !5488
  store { <2 x float>, float } %call133, { <2 x float>, float }* %tmp134, align 8, !dbg !5488
  %254 = bitcast { <2 x float>, float }* %tmp134 to i8*, !dbg !5488
  %255 = bitcast %struct.SVec3* %tmp131 to i8*, !dbg !5488
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %255, i8* align 8 %254, i64 12, i1 false), !dbg !5488
  %256 = bitcast %struct.SVec3* %v1 to i8*, !dbg !5488
  %257 = bitcast %struct.SVec3* %tmp131 to i8*, !dbg !5488
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %256, i8* align 4 %257, i64 12, i1 false), !dbg !5488
  br label %if.end135, !dbg !5489

if.end135:                                        ; preds = %if.then130, %cond.end96
  %258 = bitcast { <2 x float>, float }* %n.coerce138 to i8*, !dbg !5490
  %259 = bitcast %struct.SVec3* %n to i8*, !dbg !5490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* align 4 %259, i64 12, i1 false), !dbg !5490
  %260 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce138, i32 0, i32 0, !dbg !5490
  %261 = load <2 x float>, <2 x float>* %260, align 4, !dbg !5490
  %262 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce138, i32 0, i32 1, !dbg !5490
  %263 = load float, float* %262, align 4, !dbg !5490
  %264 = bitcast { <2 x float>, float }* %v2.coerce to i8*, !dbg !5490
  %265 = bitcast %struct.SVec3* %v2 to i8*, !dbg !5490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %264, i8* align 4 %265, i64 12, i1 false), !dbg !5490
  %266 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce, i32 0, i32 0, !dbg !5490
  %267 = load <2 x float>, <2 x float>* %266, align 4, !dbg !5490
  %268 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce, i32 0, i32 1, !dbg !5490
  %269 = load float, float* %268, align 4, !dbg !5490
  %call139 = call float @vdot(<2 x float> %261, float %263, <2 x float> %267, float %269), !dbg !5490
  %270 = bitcast { <2 x float>, float }* %n.coerce140 to i8*, !dbg !5491
  %271 = bitcast %struct.SVec3* %n to i8*, !dbg !5491
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %270, i8* align 4 %271, i64 12, i1 false), !dbg !5491
  %272 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce140, i32 0, i32 0, !dbg !5491
  %273 = load <2 x float>, <2 x float>* %272, align 4, !dbg !5491
  %274 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %n.coerce140, i32 0, i32 1, !dbg !5491
  %275 = load float, float* %274, align 4, !dbg !5491
  %call141 = call { <2 x float>, float } @vscale(float %call139, <2 x float> %273, float %275), !dbg !5491
  store { <2 x float>, float } %call141, { <2 x float>, float }* %tmp142, align 8, !dbg !5491
  %276 = bitcast { <2 x float>, float }* %tmp142 to i8*, !dbg !5491
  %277 = bitcast %struct.SVec3* %agg.tmp137 to i8*, !dbg !5491
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %277, i8* align 8 %276, i64 12, i1 false), !dbg !5491
  %278 = bitcast { <2 x float>, float }* %v2.coerce143 to i8*, !dbg !5492
  %279 = bitcast %struct.SVec3* %v2 to i8*, !dbg !5492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %278, i8* align 4 %279, i64 12, i1 false), !dbg !5492
  %280 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce143, i32 0, i32 0, !dbg !5492
  %281 = load <2 x float>, <2 x float>* %280, align 4, !dbg !5492
  %282 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce143, i32 0, i32 1, !dbg !5492
  %283 = load float, float* %282, align 4, !dbg !5492
  %284 = bitcast { <2 x float>, float }* %agg.tmp137.coerce to i8*, !dbg !5492
  %285 = bitcast %struct.SVec3* %agg.tmp137 to i8*, !dbg !5492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %284, i8* align 4 %285, i64 12, i1 false), !dbg !5492
  %286 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp137.coerce, i32 0, i32 0, !dbg !5492
  %287 = load <2 x float>, <2 x float>* %286, align 4, !dbg !5492
  %288 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp137.coerce, i32 0, i32 1, !dbg !5492
  %289 = load float, float* %288, align 4, !dbg !5492
  %call144 = call { <2 x float>, float } @vsub(<2 x float> %281, float %283, <2 x float> %287, float %289), !dbg !5492
  store { <2 x float>, float } %call144, { <2 x float>, float }* %tmp145, align 8, !dbg !5492
  %290 = bitcast { <2 x float>, float }* %tmp145 to i8*, !dbg !5492
  %291 = bitcast %struct.SVec3* %tmp136 to i8*, !dbg !5492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %291, i8* align 8 %290, i64 12, i1 false), !dbg !5492
  %292 = bitcast %struct.SVec3* %v2 to i8*, !dbg !5492
  %293 = bitcast %struct.SVec3* %tmp136 to i8*, !dbg !5492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %292, i8* align 4 %293, i64 12, i1 false), !dbg !5492
  %294 = bitcast { <2 x float>, float }* %v2.coerce146 to i8*, !dbg !5493
  %295 = bitcast %struct.SVec3* %v2 to i8*, !dbg !5493
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %294, i8* align 4 %295, i64 12, i1 false), !dbg !5493
  %296 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce146, i32 0, i32 0, !dbg !5493
  %297 = load <2 x float>, <2 x float>* %296, align 4, !dbg !5493
  %298 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce146, i32 0, i32 1, !dbg !5493
  %299 = load float, float* %298, align 4, !dbg !5493
  %call147 = call i32 @VNotZero(<2 x float> %297, float %299), !dbg !5493
  %tobool148 = icmp ne i32 %call147, 0, !dbg !5493
  br i1 %tobool148, label %if.then149, label %if.end154, !dbg !5495

if.then149:                                       ; preds = %if.end135
  %300 = bitcast { <2 x float>, float }* %v2.coerce151 to i8*, !dbg !5496
  %301 = bitcast %struct.SVec3* %v2 to i8*, !dbg !5496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %300, i8* align 4 %301, i64 12, i1 false), !dbg !5496
  %302 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce151, i32 0, i32 0, !dbg !5496
  %303 = load <2 x float>, <2 x float>* %302, align 4, !dbg !5496
  %304 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce151, i32 0, i32 1, !dbg !5496
  %305 = load float, float* %304, align 4, !dbg !5496
  %call152 = call { <2 x float>, float } @Normalize(<2 x float> %303, float %305), !dbg !5496
  store { <2 x float>, float } %call152, { <2 x float>, float }* %tmp153, align 8, !dbg !5496
  %306 = bitcast { <2 x float>, float }* %tmp153 to i8*, !dbg !5496
  %307 = bitcast %struct.SVec3* %tmp150 to i8*, !dbg !5496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %307, i8* align 8 %306, i64 12, i1 false), !dbg !5496
  %308 = bitcast %struct.SVec3* %v2 to i8*, !dbg !5496
  %309 = bitcast %struct.SVec3* %tmp150 to i8*, !dbg !5496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %308, i8* align 4 %309, i64 12, i1 false), !dbg !5496
  br label %if.end154, !dbg !5497

if.end154:                                        ; preds = %if.then149, %if.end135
  %310 = bitcast { <2 x float>, float }* %v1.coerce155 to i8*, !dbg !5498
  %311 = bitcast %struct.SVec3* %v1 to i8*, !dbg !5498
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 12, i1 false), !dbg !5498
  %312 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce155, i32 0, i32 0, !dbg !5498
  %313 = load <2 x float>, <2 x float>* %312, align 4, !dbg !5498
  %314 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v1.coerce155, i32 0, i32 1, !dbg !5498
  %315 = load float, float* %314, align 4, !dbg !5498
  %316 = bitcast { <2 x float>, float }* %v2.coerce156 to i8*, !dbg !5498
  %317 = bitcast %struct.SVec3* %v2 to i8*, !dbg !5498
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %316, i8* align 4 %317, i64 12, i1 false), !dbg !5498
  %318 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce156, i32 0, i32 0, !dbg !5498
  %319 = load <2 x float>, <2 x float>* %318, align 4, !dbg !5498
  %320 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %v2.coerce156, i32 0, i32 1, !dbg !5498
  %321 = load float, float* %320, align 4, !dbg !5498
  %call157 = call float @vdot(<2 x float> %313, float %315, <2 x float> %319, float %321), !dbg !5498
  store float %call157, float* %fCos, align 4, !dbg !5499
  %322 = load float, float* %fCos, align 4, !dbg !5500
  %cmp158 = fcmp ogt float %322, 1.000000e+00, !dbg !5501
  br i1 %cmp158, label %cond.true159, label %cond.false160, !dbg !5500

cond.true159:                                     ; preds = %if.end154
  br label %cond.end166, !dbg !5500

cond.false160:                                    ; preds = %if.end154
  %323 = load float, float* %fCos, align 4, !dbg !5502
  %cmp161 = fcmp olt float %323, -1.000000e+00, !dbg !5503
  br i1 %cmp161, label %cond.true162, label %cond.false163, !dbg !5502

cond.true162:                                     ; preds = %cond.false160
  br label %cond.end164, !dbg !5502

cond.false163:                                    ; preds = %cond.false160
  %324 = load float, float* %fCos, align 4, !dbg !5504
  br label %cond.end164, !dbg !5502

cond.end164:                                      ; preds = %cond.false163, %cond.true162
  %cond165 = phi float [ -1.000000e+00, %cond.true162 ], [ %324, %cond.false163 ], !dbg !5502
  br label %cond.end166, !dbg !5500

cond.end166:                                      ; preds = %cond.end164, %cond.true159
  %cond167 = phi float [ 1.000000e+00, %cond.true159 ], [ %cond165, %cond.end164 ], !dbg !5500
  store float %cond167, float* %fCos, align 4, !dbg !5505
  %325 = load float, float* %fCos, align 4, !dbg !5506
  %conv = fpext float %325 to double, !dbg !5506
  %call168 = call double @acos(double %conv) #5, !dbg !5507
  %conv169 = fptrunc double %call168 to float, !dbg !5508
  store float %conv169, float* %fAngle, align 4, !dbg !5509
  %326 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !5510
  %327 = load i32, i32* %f, align 4, !dbg !5511
  %idxprom170 = sext i32 %327 to i64, !dbg !5510
  %arrayidx171 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %326, i64 %idxprom170, !dbg !5510
  %fMagS172 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx171, i32 0, i32 4, !dbg !5512
  %328 = load float, float* %fMagS172, align 8, !dbg !5512
  store float %328, float* %fMagS13, align 4, !dbg !5513
  %329 = load %struct.STriInfo*, %struct.STriInfo** %pTriInfos.addr, align 8, !dbg !5514
  %330 = load i32, i32* %f, align 4, !dbg !5515
  %idxprom173 = sext i32 %330 to i64, !dbg !5514
  %arrayidx174 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %329, i64 %idxprom173, !dbg !5514
  %fMagT175 = getelementptr inbounds %struct.STriInfo, %struct.STriInfo* %arrayidx174, i32 0, i32 5, !dbg !5516
  %331 = load float, float* %fMagT175, align 4, !dbg !5516
  store float %331, float* %fMagT14, align 4, !dbg !5517
  %vOs176 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5518
  %vOs178 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5519
  %332 = load float, float* %fAngle, align 4, !dbg !5520
  %333 = bitcast { <2 x float>, float }* %vOs11.coerce180 to i8*, !dbg !5521
  %334 = bitcast %struct.SVec3* %vOs11 to i8*, !dbg !5521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %333, i8* align 4 %334, i64 12, i1 false), !dbg !5521
  %335 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs11.coerce180, i32 0, i32 0, !dbg !5521
  %336 = load <2 x float>, <2 x float>* %335, align 4, !dbg !5521
  %337 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs11.coerce180, i32 0, i32 1, !dbg !5521
  %338 = load float, float* %337, align 4, !dbg !5521
  %call181 = call { <2 x float>, float } @vscale(float %332, <2 x float> %336, float %338), !dbg !5521
  store { <2 x float>, float } %call181, { <2 x float>, float }* %tmp182, align 8, !dbg !5521
  %339 = bitcast { <2 x float>, float }* %tmp182 to i8*, !dbg !5521
  %340 = bitcast %struct.SVec3* %agg.tmp179 to i8*, !dbg !5521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %340, i8* align 8 %339, i64 12, i1 false), !dbg !5521
  %341 = bitcast { <2 x float>, float }* %vOs178.coerce to i8*, !dbg !5522
  %342 = bitcast %struct.SVec3* %vOs178 to i8*, !dbg !5522
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %341, i8* align 4 %342, i64 12, i1 false), !dbg !5522
  %343 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs178.coerce, i32 0, i32 0, !dbg !5522
  %344 = load <2 x float>, <2 x float>* %343, align 4, !dbg !5522
  %345 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs178.coerce, i32 0, i32 1, !dbg !5522
  %346 = load float, float* %345, align 4, !dbg !5522
  %347 = bitcast { <2 x float>, float }* %agg.tmp179.coerce to i8*, !dbg !5522
  %348 = bitcast %struct.SVec3* %agg.tmp179 to i8*, !dbg !5522
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %347, i8* align 4 %348, i64 12, i1 false), !dbg !5522
  %349 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp179.coerce, i32 0, i32 0, !dbg !5522
  %350 = load <2 x float>, <2 x float>* %349, align 4, !dbg !5522
  %351 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp179.coerce, i32 0, i32 1, !dbg !5522
  %352 = load float, float* %351, align 4, !dbg !5522
  %call183 = call { <2 x float>, float } @vadd(<2 x float> %344, float %346, <2 x float> %350, float %352), !dbg !5522
  store { <2 x float>, float } %call183, { <2 x float>, float }* %tmp184, align 8, !dbg !5522
  %353 = bitcast { <2 x float>, float }* %tmp184 to i8*, !dbg !5522
  %354 = bitcast %struct.SVec3* %tmp177 to i8*, !dbg !5522
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %354, i8* align 8 %353, i64 12, i1 false), !dbg !5522
  %355 = bitcast %struct.SVec3* %vOs176 to i8*, !dbg !5522
  %356 = bitcast %struct.SVec3* %tmp177 to i8*, !dbg !5522
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %355, i8* align 4 %356, i64 12, i1 false), !dbg !5522
  %vOt185 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5523
  %vOt187 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5524
  %357 = load float, float* %fAngle, align 4, !dbg !5525
  %358 = bitcast { <2 x float>, float }* %vOt12.coerce189 to i8*, !dbg !5526
  %359 = bitcast %struct.SVec3* %vOt12 to i8*, !dbg !5526
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %358, i8* align 4 %359, i64 12, i1 false), !dbg !5526
  %360 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt12.coerce189, i32 0, i32 0, !dbg !5526
  %361 = load <2 x float>, <2 x float>* %360, align 4, !dbg !5526
  %362 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt12.coerce189, i32 0, i32 1, !dbg !5526
  %363 = load float, float* %362, align 4, !dbg !5526
  %call190 = call { <2 x float>, float } @vscale(float %357, <2 x float> %361, float %363), !dbg !5526
  store { <2 x float>, float } %call190, { <2 x float>, float }* %tmp191, align 8, !dbg !5526
  %364 = bitcast { <2 x float>, float }* %tmp191 to i8*, !dbg !5526
  %365 = bitcast %struct.SVec3* %agg.tmp188 to i8*, !dbg !5526
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %365, i8* align 8 %364, i64 12, i1 false), !dbg !5526
  %366 = bitcast { <2 x float>, float }* %vOt187.coerce to i8*, !dbg !5527
  %367 = bitcast %struct.SVec3* %vOt187 to i8*, !dbg !5527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %366, i8* align 4 %367, i64 12, i1 false), !dbg !5527
  %368 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt187.coerce, i32 0, i32 0, !dbg !5527
  %369 = load <2 x float>, <2 x float>* %368, align 4, !dbg !5527
  %370 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt187.coerce, i32 0, i32 1, !dbg !5527
  %371 = load float, float* %370, align 4, !dbg !5527
  %372 = bitcast { <2 x float>, float }* %agg.tmp188.coerce to i8*, !dbg !5527
  %373 = bitcast %struct.SVec3* %agg.tmp188 to i8*, !dbg !5527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %372, i8* align 4 %373, i64 12, i1 false), !dbg !5527
  %374 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp188.coerce, i32 0, i32 0, !dbg !5527
  %375 = load <2 x float>, <2 x float>* %374, align 4, !dbg !5527
  %376 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp188.coerce, i32 0, i32 1, !dbg !5527
  %377 = load float, float* %376, align 4, !dbg !5527
  %call192 = call { <2 x float>, float } @vadd(<2 x float> %369, float %371, <2 x float> %375, float %377), !dbg !5527
  store { <2 x float>, float } %call192, { <2 x float>, float }* %tmp193, align 8, !dbg !5527
  %378 = bitcast { <2 x float>, float }* %tmp193 to i8*, !dbg !5527
  %379 = bitcast %struct.SVec3* %tmp186 to i8*, !dbg !5527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %379, i8* align 8 %378, i64 12, i1 false), !dbg !5527
  %380 = bitcast %struct.SVec3* %vOt185 to i8*, !dbg !5527
  %381 = bitcast %struct.SVec3* %tmp186 to i8*, !dbg !5527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %380, i8* align 4 %381, i64 12, i1 false), !dbg !5527
  %382 = load float, float* %fAngle, align 4, !dbg !5528
  %383 = load float, float* %fMagS13, align 4, !dbg !5529
  %mul194 = fmul float %382, %383, !dbg !5530
  %fMagS195 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 1, !dbg !5531
  %384 = load float, float* %fMagS195, align 4, !dbg !5532
  %add196 = fadd float %384, %mul194, !dbg !5532
  store float %add196, float* %fMagS195, align 4, !dbg !5532
  %385 = load float, float* %fAngle, align 4, !dbg !5533
  %386 = load float, float* %fMagT14, align 4, !dbg !5534
  %mul197 = fmul float %385, %386, !dbg !5535
  %fMagT198 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 3, !dbg !5536
  %387 = load float, float* %fMagT198, align 4, !dbg !5537
  %add199 = fadd float %387, %mul197, !dbg !5537
  store float %add199, float* %fMagT198, align 4, !dbg !5537
  %388 = load float, float* %fAngle, align 4, !dbg !5538
  %389 = load float, float* %fAngleSum, align 4, !dbg !5539
  %add200 = fadd float %389, %388, !dbg !5539
  store float %add200, float* %fAngleSum, align 4, !dbg !5539
  br label %if.end201, !dbg !5540

if.end201:                                        ; preds = %cond.end166, %for.body
  br label %for.inc, !dbg !5541

for.inc:                                          ; preds = %if.end201
  %390 = load i32, i32* %face, align 4, !dbg !5542
  %inc = add nsw i32 %390, 1, !dbg !5542
  store i32 %inc, i32* %face, align 4, !dbg !5542
  br label %for.cond, !dbg !5543, !llvm.loop !5544

for.end:                                          ; preds = %for.cond
  %vOs202 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5546
  %391 = bitcast { <2 x float>, float }* %vOs202.coerce to i8*, !dbg !5548
  %392 = bitcast %struct.SVec3* %vOs202 to i8*, !dbg !5548
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %391, i8* align 4 %392, i64 12, i1 false), !dbg !5548
  %393 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs202.coerce, i32 0, i32 0, !dbg !5548
  %394 = load <2 x float>, <2 x float>* %393, align 4, !dbg !5548
  %395 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs202.coerce, i32 0, i32 1, !dbg !5548
  %396 = load float, float* %395, align 4, !dbg !5548
  %call203 = call i32 @VNotZero(<2 x float> %394, float %396), !dbg !5548
  %tobool204 = icmp ne i32 %call203, 0, !dbg !5548
  br i1 %tobool204, label %if.then205, label %if.end211, !dbg !5549

if.then205:                                       ; preds = %for.end
  %vOs206 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5550
  %vOs208 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5551
  %397 = bitcast { <2 x float>, float }* %vOs208.coerce to i8*, !dbg !5552
  %398 = bitcast %struct.SVec3* %vOs208 to i8*, !dbg !5552
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %397, i8* align 4 %398, i64 12, i1 false), !dbg !5552
  %399 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs208.coerce, i32 0, i32 0, !dbg !5552
  %400 = load <2 x float>, <2 x float>* %399, align 4, !dbg !5552
  %401 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs208.coerce, i32 0, i32 1, !dbg !5552
  %402 = load float, float* %401, align 4, !dbg !5552
  %call209 = call { <2 x float>, float } @Normalize(<2 x float> %400, float %402), !dbg !5552
  store { <2 x float>, float } %call209, { <2 x float>, float }* %tmp210, align 8, !dbg !5552
  %403 = bitcast { <2 x float>, float }* %tmp210 to i8*, !dbg !5552
  %404 = bitcast %struct.SVec3* %tmp207 to i8*, !dbg !5552
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %404, i8* align 8 %403, i64 12, i1 false), !dbg !5552
  %405 = bitcast %struct.SVec3* %vOs206 to i8*, !dbg !5552
  %406 = bitcast %struct.SVec3* %tmp207 to i8*, !dbg !5552
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %405, i8* align 4 %406, i64 12, i1 false), !dbg !5552
  br label %if.end211, !dbg !5553

if.end211:                                        ; preds = %if.then205, %for.end
  %vOt212 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5554
  %407 = bitcast { <2 x float>, float }* %vOt212.coerce to i8*, !dbg !5556
  %408 = bitcast %struct.SVec3* %vOt212 to i8*, !dbg !5556
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %407, i8* align 4 %408, i64 12, i1 false), !dbg !5556
  %409 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt212.coerce, i32 0, i32 0, !dbg !5556
  %410 = load <2 x float>, <2 x float>* %409, align 4, !dbg !5556
  %411 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt212.coerce, i32 0, i32 1, !dbg !5556
  %412 = load float, float* %411, align 4, !dbg !5556
  %call213 = call i32 @VNotZero(<2 x float> %410, float %412), !dbg !5556
  %tobool214 = icmp ne i32 %call213, 0, !dbg !5556
  br i1 %tobool214, label %if.then215, label %if.end221, !dbg !5557

if.then215:                                       ; preds = %if.end211
  %vOt216 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5558
  %vOt218 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5559
  %413 = bitcast { <2 x float>, float }* %vOt218.coerce to i8*, !dbg !5560
  %414 = bitcast %struct.SVec3* %vOt218 to i8*, !dbg !5560
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %413, i8* align 4 %414, i64 12, i1 false), !dbg !5560
  %415 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt218.coerce, i32 0, i32 0, !dbg !5560
  %416 = load <2 x float>, <2 x float>* %415, align 4, !dbg !5560
  %417 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt218.coerce, i32 0, i32 1, !dbg !5560
  %418 = load float, float* %417, align 4, !dbg !5560
  %call219 = call { <2 x float>, float } @Normalize(<2 x float> %416, float %418), !dbg !5560
  store { <2 x float>, float } %call219, { <2 x float>, float }* %tmp220, align 8, !dbg !5560
  %419 = bitcast { <2 x float>, float }* %tmp220 to i8*, !dbg !5560
  %420 = bitcast %struct.SVec3* %tmp217 to i8*, !dbg !5560
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %420, i8* align 8 %419, i64 12, i1 false), !dbg !5560
  %421 = bitcast %struct.SVec3* %vOt216 to i8*, !dbg !5560
  %422 = bitcast %struct.SVec3* %tmp217 to i8*, !dbg !5560
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %421, i8* align 4 %422, i64 12, i1 false), !dbg !5560
  br label %if.end221, !dbg !5561

if.end221:                                        ; preds = %if.then215, %if.end211
  %423 = load float, float* %fAngleSum, align 4, !dbg !5562
  %cmp222 = fcmp ogt float %423, 0.000000e+00, !dbg !5564
  br i1 %cmp222, label %if.then224, label %if.end228, !dbg !5565

if.then224:                                       ; preds = %if.end221
  %424 = load float, float* %fAngleSum, align 4, !dbg !5566
  %fMagS225 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 1, !dbg !5568
  %425 = load float, float* %fMagS225, align 4, !dbg !5569
  %div = fdiv float %425, %424, !dbg !5569
  store float %div, float* %fMagS225, align 4, !dbg !5569
  %426 = load float, float* %fAngleSum, align 4, !dbg !5570
  %fMagT226 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 3, !dbg !5571
  %427 = load float, float* %fMagT226, align 4, !dbg !5572
  %div227 = fdiv float %427, %426, !dbg !5572
  store float %div227, float* %fMagT226, align 4, !dbg !5572
  br label %if.end228, !dbg !5573

if.end228:                                        ; preds = %if.then224, %if.end221
  ret void, !dbg !5574
}

; Function Attrs: noinline nounwind uwtable
define internal void @AvgTSpace(%struct.STSpace* noalias sret %agg.result, %struct.STSpace* %pTS0, %struct.STSpace* %pTS1) #2 !dbg !5575 {
entry:
  %pTS0.addr = alloca %struct.STSpace*, align 8
  %pTS1.addr = alloca %struct.STSpace*, align 8
  %vOs.coerce = alloca { <2 x float>, float }, align 4
  %vOs5.coerce = alloca { <2 x float>, float }, align 4
  %vOt.coerce = alloca { <2 x float>, float }, align 4
  %vOt7.coerce = alloca { <2 x float>, float }, align 4
  %tmp = alloca %struct.SVec3, align 4
  %vOs27.coerce = alloca { <2 x float>, float }, align 4
  %vOs28.coerce = alloca { <2 x float>, float }, align 4
  %tmp30 = alloca { <2 x float>, float }, align 8
  %tmp32 = alloca %struct.SVec3, align 4
  %vOt33.coerce = alloca { <2 x float>, float }, align 4
  %vOt34.coerce = alloca { <2 x float>, float }, align 4
  %tmp36 = alloca { <2 x float>, float }, align 8
  %vOs37.coerce = alloca { <2 x float>, float }, align 4
  %tmp42 = alloca %struct.SVec3, align 4
  %vOs43.coerce = alloca { <2 x float>, float }, align 4
  %tmp45 = alloca { <2 x float>, float }, align 8
  %vOt46.coerce = alloca { <2 x float>, float }, align 4
  %tmp51 = alloca %struct.SVec3, align 4
  %vOt52.coerce = alloca { <2 x float>, float }, align 4
  %tmp54 = alloca { <2 x float>, float }, align 8
  store %struct.STSpace* %pTS0, %struct.STSpace** %pTS0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STSpace** %pTS0.addr, metadata !5578, metadata !DIExpression()), !dbg !5579
  store %struct.STSpace* %pTS1, %struct.STSpace** %pTS1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STSpace** %pTS1.addr, metadata !5580, metadata !DIExpression()), !dbg !5581
  call void @llvm.dbg.declare(metadata %struct.STSpace* %agg.result, metadata !5582, metadata !DIExpression()), !dbg !5583
  %0 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5584
  %fMagS = getelementptr inbounds %struct.STSpace, %struct.STSpace* %0, i32 0, i32 1, !dbg !5586
  %1 = load float, float* %fMagS, align 4, !dbg !5586
  %2 = load %struct.STSpace*, %struct.STSpace** %pTS1.addr, align 8, !dbg !5587
  %fMagS1 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %2, i32 0, i32 1, !dbg !5588
  %3 = load float, float* %fMagS1, align 4, !dbg !5588
  %cmp = fcmp oeq float %1, %3, !dbg !5589
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5590

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5591
  %fMagT = getelementptr inbounds %struct.STSpace, %struct.STSpace* %4, i32 0, i32 3, !dbg !5592
  %5 = load float, float* %fMagT, align 4, !dbg !5592
  %6 = load %struct.STSpace*, %struct.STSpace** %pTS1.addr, align 8, !dbg !5593
  %fMagT2 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %6, i32 0, i32 3, !dbg !5594
  %7 = load float, float* %fMagT2, align 4, !dbg !5594
  %cmp3 = fcmp oeq float %5, %7, !dbg !5595
  br i1 %cmp3, label %land.lhs.true4, label %if.else, !dbg !5596

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5597
  %vOs = getelementptr inbounds %struct.STSpace, %struct.STSpace* %8, i32 0, i32 0, !dbg !5598
  %9 = load %struct.STSpace*, %struct.STSpace** %pTS1.addr, align 8, !dbg !5599
  %vOs5 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %9, i32 0, i32 0, !dbg !5600
  %10 = bitcast { <2 x float>, float }* %vOs.coerce to i8*, !dbg !5601
  %11 = bitcast %struct.SVec3* %vOs to i8*, !dbg !5601
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 12, i1 false), !dbg !5601
  %12 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs.coerce, i32 0, i32 0, !dbg !5601
  %13 = load <2 x float>, <2 x float>* %12, align 4, !dbg !5601
  %14 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs.coerce, i32 0, i32 1, !dbg !5601
  %15 = load float, float* %14, align 4, !dbg !5601
  %16 = bitcast { <2 x float>, float }* %vOs5.coerce to i8*, !dbg !5601
  %17 = bitcast %struct.SVec3* %vOs5 to i8*, !dbg !5601
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false), !dbg !5601
  %18 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs5.coerce, i32 0, i32 0, !dbg !5601
  %19 = load <2 x float>, <2 x float>* %18, align 4, !dbg !5601
  %20 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs5.coerce, i32 0, i32 1, !dbg !5601
  %21 = load float, float* %20, align 4, !dbg !5601
  %call = call i32 @veq(<2 x float> %13, float %15, <2 x float> %19, float %21), !dbg !5601
  %tobool = icmp ne i32 %call, 0, !dbg !5601
  br i1 %tobool, label %land.lhs.true6, label %if.else, !dbg !5602

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %22 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5603
  %vOt = getelementptr inbounds %struct.STSpace, %struct.STSpace* %22, i32 0, i32 2, !dbg !5604
  %23 = load %struct.STSpace*, %struct.STSpace** %pTS1.addr, align 8, !dbg !5605
  %vOt7 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %23, i32 0, i32 2, !dbg !5606
  %24 = bitcast { <2 x float>, float }* %vOt.coerce to i8*, !dbg !5607
  %25 = bitcast %struct.SVec3* %vOt to i8*, !dbg !5607
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 12, i1 false), !dbg !5607
  %26 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt.coerce, i32 0, i32 0, !dbg !5607
  %27 = load <2 x float>, <2 x float>* %26, align 4, !dbg !5607
  %28 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt.coerce, i32 0, i32 1, !dbg !5607
  %29 = load float, float* %28, align 4, !dbg !5607
  %30 = bitcast { <2 x float>, float }* %vOt7.coerce to i8*, !dbg !5607
  %31 = bitcast %struct.SVec3* %vOt7 to i8*, !dbg !5607
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 12, i1 false), !dbg !5607
  %32 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt7.coerce, i32 0, i32 0, !dbg !5607
  %33 = load <2 x float>, <2 x float>* %32, align 4, !dbg !5607
  %34 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt7.coerce, i32 0, i32 1, !dbg !5607
  %35 = load float, float* %34, align 4, !dbg !5607
  %call8 = call i32 @veq(<2 x float> %27, float %29, <2 x float> %33, float %35), !dbg !5607
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5607
  br i1 %tobool9, label %if.then, label %if.else, !dbg !5608

if.then:                                          ; preds = %land.lhs.true6
  %36 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5609
  %fMagS10 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %36, i32 0, i32 1, !dbg !5611
  %37 = load float, float* %fMagS10, align 4, !dbg !5611
  %fMagS11 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 1, !dbg !5612
  store float %37, float* %fMagS11, align 4, !dbg !5613
  %38 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5614
  %fMagT12 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %38, i32 0, i32 3, !dbg !5615
  %39 = load float, float* %fMagT12, align 4, !dbg !5615
  %fMagT13 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 3, !dbg !5616
  store float %39, float* %fMagT13, align 4, !dbg !5617
  %vOs14 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5618
  %40 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5619
  %vOs15 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %40, i32 0, i32 0, !dbg !5620
  %41 = bitcast %struct.SVec3* %vOs14 to i8*, !dbg !5620
  %42 = bitcast %struct.SVec3* %vOs15 to i8*, !dbg !5620
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %42, i64 12, i1 false), !dbg !5620
  %vOt16 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5621
  %43 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5622
  %vOt17 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %43, i32 0, i32 2, !dbg !5623
  %44 = bitcast %struct.SVec3* %vOt16 to i8*, !dbg !5623
  %45 = bitcast %struct.SVec3* %vOt17 to i8*, !dbg !5623
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %45, i64 12, i1 false), !dbg !5623
  br label %if.end56, !dbg !5624

if.else:                                          ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %entry
  %46 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5625
  %fMagS18 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %46, i32 0, i32 1, !dbg !5627
  %47 = load float, float* %fMagS18, align 4, !dbg !5627
  %48 = load %struct.STSpace*, %struct.STSpace** %pTS1.addr, align 8, !dbg !5628
  %fMagS19 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %48, i32 0, i32 1, !dbg !5629
  %49 = load float, float* %fMagS19, align 4, !dbg !5629
  %add = fadd float %47, %49, !dbg !5630
  %mul = fmul float 5.000000e-01, %add, !dbg !5631
  %fMagS20 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 1, !dbg !5632
  store float %mul, float* %fMagS20, align 4, !dbg !5633
  %50 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5634
  %fMagT21 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %50, i32 0, i32 3, !dbg !5635
  %51 = load float, float* %fMagT21, align 4, !dbg !5635
  %52 = load %struct.STSpace*, %struct.STSpace** %pTS1.addr, align 8, !dbg !5636
  %fMagT22 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %52, i32 0, i32 3, !dbg !5637
  %53 = load float, float* %fMagT22, align 4, !dbg !5637
  %add23 = fadd float %51, %53, !dbg !5638
  %mul24 = fmul float 5.000000e-01, %add23, !dbg !5639
  %fMagT25 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 3, !dbg !5640
  store float %mul24, float* %fMagT25, align 4, !dbg !5641
  %vOs26 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5642
  %54 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5643
  %vOs27 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %54, i32 0, i32 0, !dbg !5644
  %55 = load %struct.STSpace*, %struct.STSpace** %pTS1.addr, align 8, !dbg !5645
  %vOs28 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %55, i32 0, i32 0, !dbg !5646
  %56 = bitcast { <2 x float>, float }* %vOs27.coerce to i8*, !dbg !5647
  %57 = bitcast %struct.SVec3* %vOs27 to i8*, !dbg !5647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 12, i1 false), !dbg !5647
  %58 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs27.coerce, i32 0, i32 0, !dbg !5647
  %59 = load <2 x float>, <2 x float>* %58, align 4, !dbg !5647
  %60 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs27.coerce, i32 0, i32 1, !dbg !5647
  %61 = load float, float* %60, align 4, !dbg !5647
  %62 = bitcast { <2 x float>, float }* %vOs28.coerce to i8*, !dbg !5647
  %63 = bitcast %struct.SVec3* %vOs28 to i8*, !dbg !5647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 12, i1 false), !dbg !5647
  %64 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs28.coerce, i32 0, i32 0, !dbg !5647
  %65 = load <2 x float>, <2 x float>* %64, align 4, !dbg !5647
  %66 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs28.coerce, i32 0, i32 1, !dbg !5647
  %67 = load float, float* %66, align 4, !dbg !5647
  %call29 = call { <2 x float>, float } @vadd(<2 x float> %59, float %61, <2 x float> %65, float %67), !dbg !5647
  store { <2 x float>, float } %call29, { <2 x float>, float }* %tmp30, align 8, !dbg !5647
  %68 = bitcast { <2 x float>, float }* %tmp30 to i8*, !dbg !5647
  %69 = bitcast %struct.SVec3* %tmp to i8*, !dbg !5647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 8 %68, i64 12, i1 false), !dbg !5647
  %70 = bitcast %struct.SVec3* %vOs26 to i8*, !dbg !5647
  %71 = bitcast %struct.SVec3* %tmp to i8*, !dbg !5647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %71, i64 12, i1 false), !dbg !5647
  %vOt31 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5648
  %72 = load %struct.STSpace*, %struct.STSpace** %pTS0.addr, align 8, !dbg !5649
  %vOt33 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %72, i32 0, i32 2, !dbg !5650
  %73 = load %struct.STSpace*, %struct.STSpace** %pTS1.addr, align 8, !dbg !5651
  %vOt34 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %73, i32 0, i32 2, !dbg !5652
  %74 = bitcast { <2 x float>, float }* %vOt33.coerce to i8*, !dbg !5653
  %75 = bitcast %struct.SVec3* %vOt33 to i8*, !dbg !5653
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* align 4 %75, i64 12, i1 false), !dbg !5653
  %76 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt33.coerce, i32 0, i32 0, !dbg !5653
  %77 = load <2 x float>, <2 x float>* %76, align 4, !dbg !5653
  %78 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt33.coerce, i32 0, i32 1, !dbg !5653
  %79 = load float, float* %78, align 4, !dbg !5653
  %80 = bitcast { <2 x float>, float }* %vOt34.coerce to i8*, !dbg !5653
  %81 = bitcast %struct.SVec3* %vOt34 to i8*, !dbg !5653
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 12, i1 false), !dbg !5653
  %82 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt34.coerce, i32 0, i32 0, !dbg !5653
  %83 = load <2 x float>, <2 x float>* %82, align 4, !dbg !5653
  %84 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt34.coerce, i32 0, i32 1, !dbg !5653
  %85 = load float, float* %84, align 4, !dbg !5653
  %call35 = call { <2 x float>, float } @vadd(<2 x float> %77, float %79, <2 x float> %83, float %85), !dbg !5653
  store { <2 x float>, float } %call35, { <2 x float>, float }* %tmp36, align 8, !dbg !5653
  %86 = bitcast { <2 x float>, float }* %tmp36 to i8*, !dbg !5653
  %87 = bitcast %struct.SVec3* %tmp32 to i8*, !dbg !5653
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 8 %86, i64 12, i1 false), !dbg !5653
  %88 = bitcast %struct.SVec3* %vOt31 to i8*, !dbg !5653
  %89 = bitcast %struct.SVec3* %tmp32 to i8*, !dbg !5653
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 12, i1 false), !dbg !5653
  %vOs37 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5654
  %90 = bitcast { <2 x float>, float }* %vOs37.coerce to i8*, !dbg !5656
  %91 = bitcast %struct.SVec3* %vOs37 to i8*, !dbg !5656
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 12, i1 false), !dbg !5656
  %92 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs37.coerce, i32 0, i32 0, !dbg !5656
  %93 = load <2 x float>, <2 x float>* %92, align 4, !dbg !5656
  %94 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs37.coerce, i32 0, i32 1, !dbg !5656
  %95 = load float, float* %94, align 4, !dbg !5656
  %call38 = call i32 @VNotZero(<2 x float> %93, float %95), !dbg !5656
  %tobool39 = icmp ne i32 %call38, 0, !dbg !5656
  br i1 %tobool39, label %if.then40, label %if.end, !dbg !5657

if.then40:                                        ; preds = %if.else
  %vOs41 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5658
  %vOs43 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 0, !dbg !5659
  %96 = bitcast { <2 x float>, float }* %vOs43.coerce to i8*, !dbg !5660
  %97 = bitcast %struct.SVec3* %vOs43 to i8*, !dbg !5660
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* align 4 %97, i64 12, i1 false), !dbg !5660
  %98 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs43.coerce, i32 0, i32 0, !dbg !5660
  %99 = load <2 x float>, <2 x float>* %98, align 4, !dbg !5660
  %100 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOs43.coerce, i32 0, i32 1, !dbg !5660
  %101 = load float, float* %100, align 4, !dbg !5660
  %call44 = call { <2 x float>, float } @Normalize(<2 x float> %99, float %101), !dbg !5660
  store { <2 x float>, float } %call44, { <2 x float>, float }* %tmp45, align 8, !dbg !5660
  %102 = bitcast { <2 x float>, float }* %tmp45 to i8*, !dbg !5660
  %103 = bitcast %struct.SVec3* %tmp42 to i8*, !dbg !5660
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 8 %102, i64 12, i1 false), !dbg !5660
  %104 = bitcast %struct.SVec3* %vOs41 to i8*, !dbg !5660
  %105 = bitcast %struct.SVec3* %tmp42 to i8*, !dbg !5660
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 12, i1 false), !dbg !5660
  br label %if.end, !dbg !5661

if.end:                                           ; preds = %if.then40, %if.else
  %vOt46 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5662
  %106 = bitcast { <2 x float>, float }* %vOt46.coerce to i8*, !dbg !5664
  %107 = bitcast %struct.SVec3* %vOt46 to i8*, !dbg !5664
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 12, i1 false), !dbg !5664
  %108 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt46.coerce, i32 0, i32 0, !dbg !5664
  %109 = load <2 x float>, <2 x float>* %108, align 4, !dbg !5664
  %110 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt46.coerce, i32 0, i32 1, !dbg !5664
  %111 = load float, float* %110, align 4, !dbg !5664
  %call47 = call i32 @VNotZero(<2 x float> %109, float %111), !dbg !5664
  %tobool48 = icmp ne i32 %call47, 0, !dbg !5664
  br i1 %tobool48, label %if.then49, label %if.end55, !dbg !5665

if.then49:                                        ; preds = %if.end
  %vOt50 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5666
  %vOt52 = getelementptr inbounds %struct.STSpace, %struct.STSpace* %agg.result, i32 0, i32 2, !dbg !5667
  %112 = bitcast { <2 x float>, float }* %vOt52.coerce to i8*, !dbg !5668
  %113 = bitcast %struct.SVec3* %vOt52 to i8*, !dbg !5668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 12, i1 false), !dbg !5668
  %114 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt52.coerce, i32 0, i32 0, !dbg !5668
  %115 = load <2 x float>, <2 x float>* %114, align 4, !dbg !5668
  %116 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %vOt52.coerce, i32 0, i32 1, !dbg !5668
  %117 = load float, float* %116, align 4, !dbg !5668
  %call53 = call { <2 x float>, float } @Normalize(<2 x float> %115, float %117), !dbg !5668
  store { <2 x float>, float } %call53, { <2 x float>, float }* %tmp54, align 8, !dbg !5668
  %118 = bitcast { <2 x float>, float }* %tmp54 to i8*, !dbg !5668
  %119 = bitcast %struct.SVec3* %tmp51 to i8*, !dbg !5668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %119, i8* align 8 %118, i64 12, i1 false), !dbg !5668
  %120 = bitcast %struct.SVec3* %vOt50 to i8*, !dbg !5668
  %121 = bitcast %struct.SVec3* %tmp51 to i8*, !dbg !5668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 12, i1 false), !dbg !5668
  br label %if.end55, !dbg !5669

if.end55:                                         ; preds = %if.then49, %if.end
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then
  ret void, !dbg !5670
}

; Function Attrs: nounwind
declare dso_local double @acos(double) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!84, !85, !86}
!llvm.ident = !{!87}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3, globals: !80, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/intern/mikktspace/mikktspace.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{}
!3 = !{!4, !5, !6, !8, !18, !46, !56, !7, !63, !74}
!4 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "STriInfo", file: !1, line: 153, baseType: !10)
!10 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 141, size: 704, elements: !11)
!11 = !{!12, !16, !28, !35, !36, !37, !38, !39, !40, !41}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "FaceNeighbors", scope: !10, file: !1, line: 142, baseType: !13, size: 96)
!13 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !14)
!14 = !{!15}
!15 = !DISubrange(count: 3)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "AssignedGroup", scope: !10, file: !1, line: 143, baseType: !17, size: 192, offset: 128)
!17 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 192, elements: !14)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "SGroup", file: !1, line: 131, baseType: !20)
!20 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 126, size: 192, elements: !21)
!21 = !{!22, !23, !24, !25}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "iNrFaces", scope: !20, file: !1, line: 127, baseType: !7, size: 32)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "pFaceIndices", scope: !20, file: !1, line: 128, baseType: !6, size: 64, offset: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "iVertexRepresentitive", scope: !20, file: !1, line: 129, baseType: !7, size: 32, offset: 128)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "bOrientPreservering", scope: !20, file: !1, line: 130, baseType: !26, size: 32, offset: 160)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "tbool", file: !27, line: 62, baseType: !7)
!27 = !DIFile(filename: "blender/intern/mikktspace/mikktspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!28 = !DIDerivedType(tag: DW_TAG_member, name: "vOs", scope: !10, file: !1, line: 146, baseType: !29, size: 96, offset: 320)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "SVec3", file: !1, line: 45, baseType: !30)
!30 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 43, size: 96, elements: !31)
!31 = !{!32, !33, !34}
!32 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !30, file: !1, line: 44, baseType: !4, size: 32)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !30, file: !1, line: 44, baseType: !4, size: 32, offset: 32)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !30, file: !1, line: 44, baseType: !4, size: 32, offset: 64)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "vOt", scope: !10, file: !1, line: 146, baseType: !29, size: 96, offset: 416)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "fMagS", scope: !10, file: !1, line: 147, baseType: !4, size: 32, offset: 512)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "fMagT", scope: !10, file: !1, line: 147, baseType: !4, size: 32, offset: 544)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "iOrgFaceNumber", scope: !10, file: !1, line: 150, baseType: !7, size: 32, offset: 576)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "iFlag", scope: !10, file: !1, line: 151, baseType: !7, size: 32, offset: 608)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "iTSpacesOffs", scope: !10, file: !1, line: 151, baseType: !7, size: 32, offset: 640)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "vert_num", scope: !10, file: !1, line: 152, baseType: !42, size: 32, offset: 672)
!42 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 32, elements: !44)
!43 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!44 = !{!45}
!45 = !DISubrange(count: 4)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "STSpace", file: !1, line: 162, baseType: !48)
!48 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 155, size: 320, elements: !49)
!49 = !{!50, !51, !52, !53, !54, !55}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "vOs", scope: !48, file: !1, line: 156, baseType: !29, size: 96)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "fMagS", scope: !48, file: !1, line: 157, baseType: !4, size: 32, offset: 96)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "vOt", scope: !48, file: !1, line: 158, baseType: !29, size: 96, offset: 128)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "fMagT", scope: !48, file: !1, line: 159, baseType: !4, size: 32, offset: 224)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "iCounter", scope: !48, file: !1, line: 160, baseType: !7, size: 32, offset: 256)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "bOrient", scope: !48, file: !1, line: 161, baseType: !26, size: 32, offset: 288)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "STmpVert", file: !1, line: 427, baseType: !58)
!58 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 424, size: 128, elements: !59)
!59 = !{!60, !62}
!60 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !58, file: !1, line: 425, baseType: !61, size: 96)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 96, elements: !14)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !58, file: !1, line: 426, baseType: !7, size: 32, offset: 96)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64)
!64 = !DIDerivedType(tag: DW_TAG_typedef, name: "SEdge", file: !1, line: 915, baseType: !65)
!65 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1, line: 909, size: 96, elements: !66)
!66 = !{!67, !73}
!67 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !65, file: !1, line: 913, baseType: !68, size: 96)
!68 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !65, file: !1, line: 910, size: 96, elements: !69)
!69 = !{!70, !71, !72}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "i0", scope: !68, file: !1, line: 912, baseType: !7, size: 32)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !68, file: !1, line: 912, baseType: !7, size: 32, offset: 32)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !68, file: !1, line: 912, baseType: !7, size: 32, offset: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !65, file: !1, line: 914, baseType: !13, size: 96)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !75, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSubGroup", file: !1, line: 124, baseType: !76)
!76 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 121, size: 128, elements: !77)
!77 = !{!78, !79}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "iNrFaces", scope: !76, file: !1, line: 122, baseType: !7, size: 32)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "pTriMembers", scope: !76, file: !1, line: 123, baseType: !6, size: 64, offset: 64)
!80 = !{!81}
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression(DW_OP_constu, 2048, DW_OP_stack_value))
!82 = distinct !DIGlobalVariable(name: "g_iCells", scope: !0, file: !1, line: 429, type: !83, isLocal: true, isDefinition: true)
!83 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!84 = !{i32 7, !"Dwarf Version", i32 4}
!85 = !{i32 2, !"Debug Info Version", i32 3}
!86 = !{i32 1, !"wchar_size", i32 4}
!87 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!88 = distinct !DISubprogram(name: "genTangSpaceDefault", scope: !1, file: !1, line: 224, type: !89, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!89 = !DISubroutineType(types: !90)
!90 = !{!26, !91}
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !93)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "SMikkTSpaceContext", file: !27, line: 63, baseType: !94)
!94 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SMikkTSpaceContext", file: !27, line: 106, size: 128, elements: !95)
!95 = !{!96, !127}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "m_pInterface", scope: !94, file: !27, line: 108, baseType: !97, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "SMikkTSpaceInterface", file: !27, line: 104, baseType: !99)
!99 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !27, line: 65, size: 448, elements: !100)
!100 = !{!101, !105, !109, !114, !115, !116, !122}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNumFaces", scope: !99, file: !27, line: 67, baseType: !102, size: 64)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!103 = !DISubroutineType(types: !104)
!104 = !{!7, !91}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNumVerticesOfFace", scope: !99, file: !27, line: 71, baseType: !106, size: 64, offset: 64)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!107 = !DISubroutineType(types: !108)
!108 = !{!7, !91, !83}
!109 = !DIDerivedType(tag: DW_TAG_member, name: "m_getPosition", scope: !99, file: !27, line: 75, baseType: !110, size: 64, offset: 128)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!111 = !DISubroutineType(types: !112)
!112 = !{null, !91, !113, !83, !83}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNormal", scope: !99, file: !27, line: 76, baseType: !110, size: 64, offset: 192)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "m_getTexCoord", scope: !99, file: !27, line: 77, baseType: !110, size: 64, offset: 256)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "m_setTSpaceBasic", scope: !99, file: !27, line: 89, baseType: !117, size: 64, offset: 320)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!118 = !DISubroutineType(types: !119)
!119 = !{null, !91, !120, !121, !83, !83}
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "m_setTSpace", scope: !99, file: !27, line: 102, baseType: !123, size: 64, offset: 384)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DISubroutineType(types: !125)
!125 = !{null, !91, !120, !120, !121, !121, !126, !83, !83}
!126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "m_pUserData", scope: !94, file: !27, line: 109, baseType: !5, size: 64, offset: 64)
!128 = !DILocalVariable(name: "pContext", arg: 1, scope: !88, file: !1, line: 224, type: !91)
!129 = !DILocation(line: 224, column: 54, scope: !88)
!130 = !DILocation(line: 226, column: 22, scope: !88)
!131 = !DILocation(line: 226, column: 9, scope: !88)
!132 = !DILocation(line: 226, column: 2, scope: !88)
!133 = distinct !DISubprogram(name: "genTangSpace", scope: !1, file: !1, line: 229, type: !134, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!134 = !DISubroutineType(types: !135)
!135 = !{!26, !91, !121}
!136 = !DILocalVariable(name: "pContext", arg: 1, scope: !133, file: !1, line: 229, type: !91)
!137 = !DILocation(line: 229, column: 47, scope: !133)
!138 = !DILocalVariable(name: "fAngularThreshold", arg: 2, scope: !133, file: !1, line: 229, type: !121)
!139 = !DILocation(line: 229, column: 69, scope: !133)
!140 = !DILocalVariable(name: "piTriListIn", scope: !133, file: !1, line: 232, type: !6)
!141 = !DILocation(line: 232, column: 8, scope: !133)
!142 = !DILocalVariable(name: "piGroupTrianglesBuffer", scope: !133, file: !1, line: 232, type: !6)
!143 = !DILocation(line: 232, column: 30, scope: !133)
!144 = !DILocalVariable(name: "pTriInfos", scope: !133, file: !1, line: 233, type: !8)
!145 = !DILocation(line: 233, column: 13, scope: !133)
!146 = !DILocalVariable(name: "pGroups", scope: !133, file: !1, line: 234, type: !18)
!147 = !DILocation(line: 234, column: 11, scope: !133)
!148 = !DILocalVariable(name: "psTspace", scope: !133, file: !1, line: 235, type: !46)
!149 = !DILocation(line: 235, column: 12, scope: !133)
!150 = !DILocalVariable(name: "iNrTrianglesIn", scope: !133, file: !1, line: 236, type: !7)
!151 = !DILocation(line: 236, column: 6, scope: !133)
!152 = !DILocalVariable(name: "f", scope: !133, file: !1, line: 236, type: !7)
!153 = !DILocation(line: 236, column: 26, scope: !133)
!154 = !DILocalVariable(name: "t", scope: !133, file: !1, line: 236, type: !7)
!155 = !DILocation(line: 236, column: 31, scope: !133)
!156 = !DILocalVariable(name: "i", scope: !133, file: !1, line: 236, type: !7)
!157 = !DILocation(line: 236, column: 36, scope: !133)
!158 = !DILocalVariable(name: "iNrTSPaces", scope: !133, file: !1, line: 237, type: !7)
!159 = !DILocation(line: 237, column: 6, scope: !133)
!160 = !DILocalVariable(name: "iTotTris", scope: !133, file: !1, line: 237, type: !7)
!161 = !DILocation(line: 237, column: 22, scope: !133)
!162 = !DILocalVariable(name: "iDegenTriangles", scope: !133, file: !1, line: 237, type: !7)
!163 = !DILocation(line: 237, column: 36, scope: !133)
!164 = !DILocalVariable(name: "iNrMaxGroups", scope: !133, file: !1, line: 237, type: !7)
!165 = !DILocation(line: 237, column: 57, scope: !133)
!166 = !DILocalVariable(name: "iNrActiveGroups", scope: !133, file: !1, line: 238, type: !7)
!167 = !DILocation(line: 238, column: 6, scope: !133)
!168 = !DILocalVariable(name: "index", scope: !133, file: !1, line: 238, type: !7)
!169 = !DILocation(line: 238, column: 27, scope: !133)
!170 = !DILocalVariable(name: "iNrFaces", scope: !133, file: !1, line: 239, type: !83)
!171 = !DILocation(line: 239, column: 12, scope: !133)
!172 = !DILocation(line: 239, column: 23, scope: !133)
!173 = !DILocation(line: 239, column: 33, scope: !133)
!174 = !DILocation(line: 239, column: 47, scope: !133)
!175 = !DILocation(line: 239, column: 61, scope: !133)
!176 = !DILocalVariable(name: "bRes", scope: !133, file: !1, line: 240, type: !26)
!177 = !DILocation(line: 240, column: 8, scope: !133)
!178 = !DILocalVariable(name: "fThresCos", scope: !133, file: !1, line: 241, type: !121)
!179 = !DILocation(line: 241, column: 14, scope: !133)
!180 = !DILocation(line: 241, column: 39, scope: !133)
!181 = !DILocation(line: 241, column: 56, scope: !133)
!182 = !DILocation(line: 241, column: 69, scope: !133)
!183 = !DILocation(line: 241, column: 38, scope: !133)
!184 = !DILocation(line: 241, column: 34, scope: !133)
!185 = !DILocation(line: 241, column: 26, scope: !133)
!186 = !DILocation(line: 244, column: 7, scope: !187)
!187 = distinct !DILexicalBlock(scope: !133, file: !1, line: 244, column: 7)
!188 = !DILocation(line: 244, column: 17, scope: !187)
!189 = !DILocation(line: 244, column: 31, scope: !187)
!190 = !DILocation(line: 244, column: 44, scope: !187)
!191 = !DILocation(line: 244, column: 51, scope: !187)
!192 = !DILocation(line: 245, column: 3, scope: !187)
!193 = !DILocation(line: 245, column: 13, scope: !187)
!194 = !DILocation(line: 245, column: 27, scope: !187)
!195 = !DILocation(line: 245, column: 49, scope: !187)
!196 = !DILocation(line: 245, column: 56, scope: !187)
!197 = !DILocation(line: 246, column: 3, scope: !187)
!198 = !DILocation(line: 246, column: 13, scope: !187)
!199 = !DILocation(line: 246, column: 27, scope: !187)
!200 = !DILocation(line: 246, column: 40, scope: !187)
!201 = !DILocation(line: 246, column: 47, scope: !187)
!202 = !DILocation(line: 247, column: 3, scope: !187)
!203 = !DILocation(line: 247, column: 13, scope: !187)
!204 = !DILocation(line: 247, column: 27, scope: !187)
!205 = !DILocation(line: 247, column: 38, scope: !187)
!206 = !DILocation(line: 247, column: 45, scope: !187)
!207 = !DILocation(line: 248, column: 3, scope: !187)
!208 = !DILocation(line: 248, column: 13, scope: !187)
!209 = !DILocation(line: 248, column: 27, scope: !187)
!210 = !DILocation(line: 248, column: 40, scope: !187)
!211 = !DILocation(line: 244, column: 7, scope: !133)
!212 = !DILocation(line: 249, column: 3, scope: !187)
!213 = !DILocation(line: 252, column: 8, scope: !214)
!214 = distinct !DILexicalBlock(scope: !133, file: !1, line: 252, column: 2)
!215 = !DILocation(line: 252, column: 7, scope: !214)
!216 = !DILocation(line: 252, column: 12, scope: !217)
!217 = distinct !DILexicalBlock(scope: !214, file: !1, line: 252, column: 2)
!218 = !DILocation(line: 252, column: 14, scope: !217)
!219 = !DILocation(line: 252, column: 13, scope: !217)
!220 = !DILocation(line: 252, column: 2, scope: !214)
!221 = !DILocalVariable(name: "verts", scope: !222, file: !1, line: 254, type: !83)
!222 = distinct !DILexicalBlock(scope: !217, file: !1, line: 253, column: 2)
!223 = !DILocation(line: 254, column: 13, scope: !222)
!224 = !DILocation(line: 254, column: 21, scope: !222)
!225 = !DILocation(line: 254, column: 31, scope: !222)
!226 = !DILocation(line: 254, column: 45, scope: !222)
!227 = !DILocation(line: 254, column: 68, scope: !222)
!228 = !DILocation(line: 254, column: 78, scope: !222)
!229 = !DILocation(line: 255, column: 7, scope: !230)
!230 = distinct !DILexicalBlock(scope: !222, file: !1, line: 255, column: 7)
!231 = !DILocation(line: 255, column: 12, scope: !230)
!232 = !DILocation(line: 255, column: 7, scope: !222)
!233 = !DILocation(line: 255, column: 17, scope: !230)
!234 = !DILocation(line: 256, column: 12, scope: !235)
!235 = distinct !DILexicalBlock(scope: !230, file: !1, line: 256, column: 12)
!236 = !DILocation(line: 256, column: 17, scope: !235)
!237 = !DILocation(line: 256, column: 12, scope: !230)
!238 = !DILocation(line: 256, column: 37, scope: !235)
!239 = !DILocation(line: 256, column: 22, scope: !235)
!240 = !DILocation(line: 257, column: 2, scope: !222)
!241 = !DILocation(line: 252, column: 25, scope: !217)
!242 = !DILocation(line: 252, column: 2, scope: !217)
!243 = distinct !{!243, !220, !244}
!244 = !DILocation(line: 257, column: 2, scope: !214)
!245 = !DILocation(line: 258, column: 6, scope: !246)
!246 = distinct !DILexicalBlock(scope: !133, file: !1, line: 258, column: 6)
!247 = !DILocation(line: 258, column: 20, scope: !246)
!248 = !DILocation(line: 258, column: 6, scope: !133)
!249 = !DILocation(line: 258, column: 25, scope: !246)
!250 = !DILocation(line: 261, column: 45, scope: !133)
!251 = !DILocation(line: 261, column: 44, scope: !133)
!252 = !DILocation(line: 261, column: 24, scope: !133)
!253 = !DILocation(line: 261, column: 16, scope: !133)
!254 = !DILocation(line: 261, column: 14, scope: !133)
!255 = !DILocation(line: 262, column: 51, scope: !133)
!256 = !DILocation(line: 262, column: 50, scope: !133)
!257 = !DILocation(line: 262, column: 27, scope: !133)
!258 = !DILocation(line: 262, column: 14, scope: !133)
!259 = !DILocation(line: 262, column: 12, scope: !133)
!260 = !DILocation(line: 263, column: 6, scope: !261)
!261 = distinct !DILexicalBlock(scope: !133, file: !1, line: 263, column: 6)
!262 = !DILocation(line: 263, column: 17, scope: !261)
!263 = !DILocation(line: 263, column: 24, scope: !261)
!264 = !DILocation(line: 263, column: 27, scope: !261)
!265 = !DILocation(line: 263, column: 36, scope: !261)
!266 = !DILocation(line: 263, column: 6, scope: !133)
!267 = !DILocation(line: 265, column: 7, scope: !268)
!268 = distinct !DILexicalBlock(scope: !269, file: !1, line: 265, column: 7)
!269 = distinct !DILexicalBlock(scope: !261, file: !1, line: 264, column: 2)
!270 = !DILocation(line: 265, column: 18, scope: !268)
!271 = !DILocation(line: 265, column: 7, scope: !269)
!272 = !DILocation(line: 265, column: 31, scope: !268)
!273 = !DILocation(line: 265, column: 26, scope: !268)
!274 = !DILocation(line: 266, column: 7, scope: !275)
!275 = distinct !DILexicalBlock(scope: !269, file: !1, line: 266, column: 7)
!276 = !DILocation(line: 266, column: 16, scope: !275)
!277 = !DILocation(line: 266, column: 7, scope: !269)
!278 = !DILocation(line: 266, column: 29, scope: !275)
!279 = !DILocation(line: 266, column: 24, scope: !275)
!280 = !DILocation(line: 267, column: 3, scope: !269)
!281 = !DILocation(line: 271, column: 48, scope: !133)
!282 = !DILocation(line: 271, column: 59, scope: !133)
!283 = !DILocation(line: 271, column: 72, scope: !133)
!284 = !DILocation(line: 271, column: 82, scope: !133)
!285 = !DILocation(line: 271, column: 15, scope: !133)
!286 = !DILocation(line: 271, column: 13, scope: !133)
!287 = !DILocation(line: 275, column: 34, scope: !133)
!288 = !DILocation(line: 275, column: 47, scope: !133)
!289 = !DILocation(line: 275, column: 57, scope: !133)
!290 = !DILocation(line: 275, column: 2, scope: !133)
!291 = !DILocation(line: 279, column: 13, scope: !133)
!292 = !DILocation(line: 279, column: 11, scope: !133)
!293 = !DILocation(line: 280, column: 18, scope: !133)
!294 = !DILocation(line: 281, column: 8, scope: !295)
!295 = distinct !DILexicalBlock(scope: !133, file: !1, line: 281, column: 2)
!296 = !DILocation(line: 281, column: 7, scope: !295)
!297 = !DILocation(line: 281, column: 12, scope: !298)
!298 = distinct !DILexicalBlock(scope: !295, file: !1, line: 281, column: 2)
!299 = !DILocation(line: 281, column: 14, scope: !298)
!300 = !DILocation(line: 281, column: 13, scope: !298)
!301 = !DILocation(line: 281, column: 2, scope: !295)
!302 = !DILocalVariable(name: "i0", scope: !303, file: !1, line: 283, type: !83)
!303 = distinct !DILexicalBlock(scope: !298, file: !1, line: 282, column: 2)
!304 = !DILocation(line: 283, column: 13, scope: !303)
!305 = !DILocation(line: 283, column: 18, scope: !303)
!306 = !DILocation(line: 283, column: 30, scope: !303)
!307 = !DILocation(line: 283, column: 31, scope: !303)
!308 = !DILocation(line: 283, column: 33, scope: !303)
!309 = !DILocalVariable(name: "i1", scope: !303, file: !1, line: 284, type: !83)
!310 = !DILocation(line: 284, column: 13, scope: !303)
!311 = !DILocation(line: 284, column: 18, scope: !303)
!312 = !DILocation(line: 284, column: 30, scope: !303)
!313 = !DILocation(line: 284, column: 31, scope: !303)
!314 = !DILocation(line: 284, column: 33, scope: !303)
!315 = !DILocalVariable(name: "i2", scope: !303, file: !1, line: 285, type: !83)
!316 = !DILocation(line: 285, column: 13, scope: !303)
!317 = !DILocation(line: 285, column: 18, scope: !303)
!318 = !DILocation(line: 285, column: 30, scope: !303)
!319 = !DILocation(line: 285, column: 31, scope: !303)
!320 = !DILocation(line: 285, column: 33, scope: !303)
!321 = !DILocalVariable(name: "p0", scope: !303, file: !1, line: 286, type: !322)
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !29)
!323 = !DILocation(line: 286, column: 15, scope: !303)
!324 = !DILocation(line: 286, column: 32, scope: !303)
!325 = !DILocation(line: 286, column: 42, scope: !303)
!326 = !DILocation(line: 286, column: 20, scope: !303)
!327 = !DILocalVariable(name: "p1", scope: !303, file: !1, line: 287, type: !322)
!328 = !DILocation(line: 287, column: 15, scope: !303)
!329 = !DILocation(line: 287, column: 32, scope: !303)
!330 = !DILocation(line: 287, column: 42, scope: !303)
!331 = !DILocation(line: 287, column: 20, scope: !303)
!332 = !DILocalVariable(name: "p2", scope: !303, file: !1, line: 288, type: !322)
!333 = !DILocation(line: 288, column: 15, scope: !303)
!334 = !DILocation(line: 288, column: 32, scope: !303)
!335 = !DILocation(line: 288, column: 42, scope: !303)
!336 = !DILocation(line: 288, column: 20, scope: !303)
!337 = !DILocation(line: 289, column: 7, scope: !338)
!338 = distinct !DILexicalBlock(scope: !303, file: !1, line: 289, column: 7)
!339 = !DILocation(line: 289, column: 18, scope: !338)
!340 = !DILocation(line: 289, column: 21, scope: !338)
!341 = !DILocation(line: 289, column: 32, scope: !338)
!342 = !DILocation(line: 289, column: 35, scope: !338)
!343 = !DILocation(line: 289, column: 7, scope: !303)
!344 = !DILocation(line: 291, column: 4, scope: !345)
!345 = distinct !DILexicalBlock(scope: !338, file: !1, line: 290, column: 3)
!346 = !DILocation(line: 291, column: 14, scope: !345)
!347 = !DILocation(line: 291, column: 17, scope: !345)
!348 = !DILocation(line: 291, column: 23, scope: !345)
!349 = !DILocation(line: 292, column: 4, scope: !345)
!350 = !DILocation(line: 293, column: 3, scope: !345)
!351 = !DILocation(line: 294, column: 2, scope: !303)
!352 = !DILocation(line: 281, column: 25, scope: !298)
!353 = !DILocation(line: 281, column: 2, scope: !298)
!354 = distinct !{!354, !301, !355}
!355 = !DILocation(line: 294, column: 2, scope: !295)
!356 = !DILocation(line: 295, column: 19, scope: !133)
!357 = !DILocation(line: 295, column: 30, scope: !133)
!358 = !DILocation(line: 295, column: 28, scope: !133)
!359 = !DILocation(line: 295, column: 17, scope: !133)
!360 = !DILocation(line: 302, column: 16, scope: !133)
!361 = !DILocation(line: 302, column: 27, scope: !133)
!362 = !DILocation(line: 302, column: 40, scope: !133)
!363 = !DILocation(line: 302, column: 56, scope: !133)
!364 = !DILocation(line: 302, column: 2, scope: !133)
!365 = !DILocation(line: 307, column: 14, scope: !133)
!366 = !DILocation(line: 307, column: 25, scope: !133)
!367 = !DILocation(line: 307, column: 38, scope: !133)
!368 = !DILocation(line: 307, column: 48, scope: !133)
!369 = !DILocation(line: 307, column: 2, scope: !133)
!370 = !DILocation(line: 312, column: 17, scope: !133)
!371 = !DILocation(line: 312, column: 31, scope: !133)
!372 = !DILocation(line: 312, column: 15, scope: !133)
!373 = !DILocation(line: 313, column: 45, scope: !133)
!374 = !DILocation(line: 313, column: 44, scope: !133)
!375 = !DILocation(line: 313, column: 23, scope: !133)
!376 = !DILocation(line: 313, column: 12, scope: !133)
!377 = !DILocation(line: 313, column: 10, scope: !133)
!378 = !DILocation(line: 314, column: 54, scope: !133)
!379 = !DILocation(line: 314, column: 53, scope: !133)
!380 = !DILocation(line: 314, column: 68, scope: !133)
!381 = !DILocation(line: 314, column: 35, scope: !133)
!382 = !DILocation(line: 314, column: 27, scope: !133)
!383 = !DILocation(line: 314, column: 25, scope: !133)
!384 = !DILocation(line: 315, column: 6, scope: !385)
!385 = distinct !DILexicalBlock(scope: !133, file: !1, line: 315, column: 6)
!386 = !DILocation(line: 315, column: 13, scope: !385)
!387 = !DILocation(line: 315, column: 20, scope: !385)
!388 = !DILocation(line: 315, column: 23, scope: !385)
!389 = !DILocation(line: 315, column: 45, scope: !385)
!390 = !DILocation(line: 315, column: 6, scope: !133)
!391 = !DILocation(line: 317, column: 7, scope: !392)
!392 = distinct !DILexicalBlock(scope: !393, file: !1, line: 317, column: 7)
!393 = distinct !DILexicalBlock(scope: !385, file: !1, line: 316, column: 2)
!394 = !DILocation(line: 317, column: 14, scope: !392)
!395 = !DILocation(line: 317, column: 7, scope: !393)
!396 = !DILocation(line: 317, column: 27, scope: !392)
!397 = !DILocation(line: 317, column: 22, scope: !392)
!398 = !DILocation(line: 318, column: 7, scope: !399)
!399 = distinct !DILexicalBlock(scope: !393, file: !1, line: 318, column: 7)
!400 = !DILocation(line: 318, column: 29, scope: !399)
!401 = !DILocation(line: 318, column: 7, scope: !393)
!402 = !DILocation(line: 318, column: 42, scope: !399)
!403 = !DILocation(line: 318, column: 37, scope: !399)
!404 = !DILocation(line: 319, column: 8, scope: !393)
!405 = !DILocation(line: 319, column: 3, scope: !393)
!406 = !DILocation(line: 320, column: 8, scope: !393)
!407 = !DILocation(line: 320, column: 3, scope: !393)
!408 = !DILocation(line: 321, column: 3, scope: !393)
!409 = !DILocation(line: 325, column: 20, scope: !133)
!410 = !DILocation(line: 325, column: 31, scope: !133)
!411 = !DILocation(line: 325, column: 40, scope: !133)
!412 = !DILocation(line: 325, column: 64, scope: !133)
!413 = !DILocation(line: 325, column: 77, scope: !133)
!414 = !DILocation(line: 325, column: 3, scope: !133)
!415 = !DILocation(line: 324, column: 18, scope: !133)
!416 = !DILocation(line: 330, column: 48, scope: !133)
!417 = !DILocation(line: 330, column: 47, scope: !133)
!418 = !DILocation(line: 330, column: 25, scope: !133)
!419 = !DILocation(line: 330, column: 13, scope: !133)
!420 = !DILocation(line: 330, column: 11, scope: !133)
!421 = !DILocation(line: 331, column: 6, scope: !422)
!422 = distinct !DILexicalBlock(scope: !133, file: !1, line: 331, column: 6)
!423 = !DILocation(line: 331, column: 14, scope: !422)
!424 = !DILocation(line: 331, column: 6, scope: !133)
!425 = !DILocation(line: 333, column: 8, scope: !426)
!426 = distinct !DILexicalBlock(scope: !422, file: !1, line: 332, column: 2)
!427 = !DILocation(line: 333, column: 3, scope: !426)
!428 = !DILocation(line: 334, column: 8, scope: !426)
!429 = !DILocation(line: 334, column: 3, scope: !426)
!430 = !DILocation(line: 335, column: 8, scope: !426)
!431 = !DILocation(line: 335, column: 3, scope: !426)
!432 = !DILocation(line: 336, column: 8, scope: !426)
!433 = !DILocation(line: 336, column: 3, scope: !426)
!434 = !DILocation(line: 337, column: 3, scope: !426)
!435 = !DILocation(line: 339, column: 9, scope: !133)
!436 = !DILocation(line: 339, column: 2, scope: !133)
!437 = !DILocation(line: 339, column: 38, scope: !133)
!438 = !DILocation(line: 339, column: 37, scope: !133)
!439 = !DILocation(line: 340, column: 8, scope: !440)
!440 = distinct !DILexicalBlock(scope: !133, file: !1, line: 340, column: 2)
!441 = !DILocation(line: 340, column: 7, scope: !440)
!442 = !DILocation(line: 340, column: 12, scope: !443)
!443 = distinct !DILexicalBlock(scope: !440, file: !1, line: 340, column: 2)
!444 = !DILocation(line: 340, column: 14, scope: !443)
!445 = !DILocation(line: 340, column: 13, scope: !443)
!446 = !DILocation(line: 340, column: 2, scope: !440)
!447 = !DILocation(line: 342, column: 3, scope: !448)
!448 = distinct !DILexicalBlock(scope: !443, file: !1, line: 341, column: 2)
!449 = !DILocation(line: 342, column: 12, scope: !448)
!450 = !DILocation(line: 342, column: 15, scope: !448)
!451 = !DILocation(line: 342, column: 19, scope: !448)
!452 = !DILocation(line: 342, column: 20, scope: !448)
!453 = !DILocation(line: 342, column: 27, scope: !448)
!454 = !DILocation(line: 342, column: 36, scope: !448)
!455 = !DILocation(line: 342, column: 39, scope: !448)
!456 = !DILocation(line: 342, column: 43, scope: !448)
!457 = !DILocation(line: 342, column: 44, scope: !448)
!458 = !DILocation(line: 342, column: 51, scope: !448)
!459 = !DILocation(line: 342, column: 60, scope: !448)
!460 = !DILocation(line: 342, column: 63, scope: !448)
!461 = !DILocation(line: 342, column: 67, scope: !448)
!462 = !DILocation(line: 342, column: 68, scope: !448)
!463 = !DILocation(line: 342, column: 75, scope: !448)
!464 = !DILocation(line: 342, column: 84, scope: !448)
!465 = !DILocation(line: 342, column: 87, scope: !448)
!466 = !DILocation(line: 342, column: 93, scope: !448)
!467 = !DILocation(line: 343, column: 3, scope: !448)
!468 = !DILocation(line: 343, column: 12, scope: !448)
!469 = !DILocation(line: 343, column: 15, scope: !448)
!470 = !DILocation(line: 343, column: 19, scope: !448)
!471 = !DILocation(line: 343, column: 20, scope: !448)
!472 = !DILocation(line: 343, column: 27, scope: !448)
!473 = !DILocation(line: 343, column: 36, scope: !448)
!474 = !DILocation(line: 343, column: 39, scope: !448)
!475 = !DILocation(line: 343, column: 43, scope: !448)
!476 = !DILocation(line: 343, column: 44, scope: !448)
!477 = !DILocation(line: 343, column: 51, scope: !448)
!478 = !DILocation(line: 343, column: 60, scope: !448)
!479 = !DILocation(line: 343, column: 63, scope: !448)
!480 = !DILocation(line: 343, column: 67, scope: !448)
!481 = !DILocation(line: 343, column: 68, scope: !448)
!482 = !DILocation(line: 343, column: 75, scope: !448)
!483 = !DILocation(line: 343, column: 84, scope: !448)
!484 = !DILocation(line: 343, column: 87, scope: !448)
!485 = !DILocation(line: 343, column: 93, scope: !448)
!486 = !DILocation(line: 344, column: 2, scope: !448)
!487 = !DILocation(line: 340, column: 27, scope: !443)
!488 = !DILocation(line: 340, column: 2, scope: !443)
!489 = distinct !{!489, !446, !490}
!490 = !DILocation(line: 344, column: 2, scope: !440)
!491 = !DILocation(line: 350, column: 25, scope: !133)
!492 = !DILocation(line: 350, column: 35, scope: !133)
!493 = !DILocation(line: 350, column: 46, scope: !133)
!494 = !DILocation(line: 350, column: 55, scope: !133)
!495 = !DILocation(line: 350, column: 72, scope: !133)
!496 = !DILocation(line: 350, column: 85, scope: !133)
!497 = !DILocation(line: 350, column: 96, scope: !133)
!498 = !DILocation(line: 350, column: 9, scope: !133)
!499 = !DILocation(line: 350, column: 7, scope: !133)
!500 = !DILocation(line: 354, column: 7, scope: !133)
!501 = !DILocation(line: 354, column: 2, scope: !133)
!502 = !DILocation(line: 355, column: 7, scope: !133)
!503 = !DILocation(line: 355, column: 2, scope: !133)
!504 = !DILocation(line: 357, column: 7, scope: !505)
!505 = distinct !DILexicalBlock(scope: !133, file: !1, line: 357, column: 6)
!506 = !DILocation(line: 357, column: 6, scope: !133)
!507 = !DILocation(line: 360, column: 8, scope: !508)
!508 = distinct !DILexicalBlock(scope: !505, file: !1, line: 358, column: 2)
!509 = !DILocation(line: 360, column: 3, scope: !508)
!510 = !DILocation(line: 360, column: 25, scope: !508)
!511 = !DILocation(line: 360, column: 20, scope: !508)
!512 = !DILocation(line: 360, column: 44, scope: !508)
!513 = !DILocation(line: 360, column: 39, scope: !508)
!514 = !DILocation(line: 361, column: 3, scope: !508)
!515 = !DILocation(line: 369, column: 16, scope: !133)
!516 = !DILocation(line: 369, column: 26, scope: !133)
!517 = !DILocation(line: 369, column: 37, scope: !133)
!518 = !DILocation(line: 369, column: 50, scope: !133)
!519 = !DILocation(line: 369, column: 60, scope: !133)
!520 = !DILocation(line: 369, column: 76, scope: !133)
!521 = !DILocation(line: 369, column: 2, scope: !133)
!522 = !DILocation(line: 371, column: 7, scope: !133)
!523 = !DILocation(line: 371, column: 2, scope: !133)
!524 = !DILocation(line: 371, column: 24, scope: !133)
!525 = !DILocation(line: 371, column: 19, scope: !133)
!526 = !DILocation(line: 373, column: 8, scope: !133)
!527 = !DILocation(line: 374, column: 8, scope: !528)
!528 = distinct !DILexicalBlock(scope: !133, file: !1, line: 374, column: 2)
!529 = !DILocation(line: 374, column: 7, scope: !528)
!530 = !DILocation(line: 374, column: 12, scope: !531)
!531 = distinct !DILexicalBlock(scope: !528, file: !1, line: 374, column: 2)
!532 = !DILocation(line: 374, column: 14, scope: !531)
!533 = !DILocation(line: 374, column: 13, scope: !531)
!534 = !DILocation(line: 374, column: 2, scope: !528)
!535 = !DILocalVariable(name: "verts", scope: !536, file: !1, line: 376, type: !83)
!536 = distinct !DILexicalBlock(scope: !531, file: !1, line: 375, column: 2)
!537 = !DILocation(line: 376, column: 13, scope: !536)
!538 = !DILocation(line: 376, column: 21, scope: !536)
!539 = !DILocation(line: 376, column: 31, scope: !536)
!540 = !DILocation(line: 376, column: 45, scope: !536)
!541 = !DILocation(line: 376, column: 68, scope: !536)
!542 = !DILocation(line: 376, column: 78, scope: !536)
!543 = !DILocation(line: 377, column: 7, scope: !544)
!544 = distinct !DILexicalBlock(scope: !536, file: !1, line: 377, column: 7)
!545 = !DILocation(line: 377, column: 12, scope: !544)
!546 = !DILocation(line: 377, column: 16, scope: !544)
!547 = !DILocation(line: 377, column: 19, scope: !544)
!548 = !DILocation(line: 377, column: 24, scope: !544)
!549 = !DILocation(line: 377, column: 7, scope: !536)
!550 = !DILocation(line: 377, column: 29, scope: !544)
!551 = !DILocation(line: 402, column: 9, scope: !552)
!552 = distinct !DILexicalBlock(scope: !536, file: !1, line: 402, column: 3)
!553 = !DILocation(line: 402, column: 8, scope: !552)
!554 = !DILocation(line: 402, column: 13, scope: !555)
!555 = distinct !DILexicalBlock(scope: !552, file: !1, line: 402, column: 3)
!556 = !DILocation(line: 402, column: 15, scope: !555)
!557 = !DILocation(line: 402, column: 14, scope: !555)
!558 = !DILocation(line: 402, column: 3, scope: !552)
!559 = !DILocalVariable(name: "pTSpace", scope: !560, file: !1, line: 404, type: !561)
!560 = distinct !DILexicalBlock(scope: !555, file: !1, line: 403, column: 3)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !47)
!563 = !DILocation(line: 404, column: 20, scope: !560)
!564 = !DILocation(line: 404, column: 31, scope: !560)
!565 = !DILocation(line: 404, column: 40, scope: !560)
!566 = !DILocalVariable(name: "tang", scope: !560, file: !1, line: 405, type: !61)
!567 = !DILocation(line: 405, column: 10, scope: !560)
!568 = !DILocation(line: 405, column: 19, scope: !560)
!569 = !DILocation(line: 405, column: 20, scope: !560)
!570 = !DILocation(line: 405, column: 29, scope: !560)
!571 = !DILocation(line: 405, column: 33, scope: !560)
!572 = !DILocation(line: 405, column: 36, scope: !560)
!573 = !DILocation(line: 405, column: 45, scope: !560)
!574 = !DILocation(line: 405, column: 49, scope: !560)
!575 = !DILocation(line: 405, column: 52, scope: !560)
!576 = !DILocation(line: 405, column: 61, scope: !560)
!577 = !DILocation(line: 405, column: 65, scope: !560)
!578 = !DILocalVariable(name: "bitang", scope: !560, file: !1, line: 406, type: !61)
!579 = !DILocation(line: 406, column: 10, scope: !560)
!580 = !DILocation(line: 406, column: 21, scope: !560)
!581 = !DILocation(line: 406, column: 22, scope: !560)
!582 = !DILocation(line: 406, column: 31, scope: !560)
!583 = !DILocation(line: 406, column: 35, scope: !560)
!584 = !DILocation(line: 406, column: 38, scope: !560)
!585 = !DILocation(line: 406, column: 47, scope: !560)
!586 = !DILocation(line: 406, column: 51, scope: !560)
!587 = !DILocation(line: 406, column: 54, scope: !560)
!588 = !DILocation(line: 406, column: 63, scope: !560)
!589 = !DILocation(line: 406, column: 67, scope: !560)
!590 = !DILocation(line: 407, column: 8, scope: !591)
!591 = distinct !DILexicalBlock(scope: !560, file: !1, line: 407, column: 8)
!592 = !DILocation(line: 407, column: 18, scope: !591)
!593 = !DILocation(line: 407, column: 32, scope: !591)
!594 = !DILocation(line: 407, column: 43, scope: !591)
!595 = !DILocation(line: 407, column: 8, scope: !560)
!596 = !DILocation(line: 408, column: 5, scope: !591)
!597 = !DILocation(line: 408, column: 15, scope: !591)
!598 = !DILocation(line: 408, column: 29, scope: !591)
!599 = !DILocation(line: 408, column: 41, scope: !591)
!600 = !DILocation(line: 408, column: 51, scope: !591)
!601 = !DILocation(line: 408, column: 57, scope: !591)
!602 = !DILocation(line: 408, column: 65, scope: !591)
!603 = !DILocation(line: 408, column: 74, scope: !591)
!604 = !DILocation(line: 408, column: 81, scope: !591)
!605 = !DILocation(line: 408, column: 90, scope: !591)
!606 = !DILocation(line: 408, column: 97, scope: !591)
!607 = !DILocation(line: 408, column: 106, scope: !591)
!608 = !DILocation(line: 408, column: 115, scope: !591)
!609 = !DILocation(line: 408, column: 118, scope: !591)
!610 = !DILocation(line: 409, column: 8, scope: !611)
!611 = distinct !DILexicalBlock(scope: !560, file: !1, line: 409, column: 8)
!612 = !DILocation(line: 409, column: 18, scope: !611)
!613 = !DILocation(line: 409, column: 32, scope: !611)
!614 = !DILocation(line: 409, column: 48, scope: !611)
!615 = !DILocation(line: 409, column: 8, scope: !560)
!616 = !DILocation(line: 410, column: 5, scope: !611)
!617 = !DILocation(line: 410, column: 15, scope: !611)
!618 = !DILocation(line: 410, column: 29, scope: !611)
!619 = !DILocation(line: 410, column: 46, scope: !611)
!620 = !DILocation(line: 410, column: 56, scope: !611)
!621 = !DILocation(line: 410, column: 62, scope: !611)
!622 = !DILocation(line: 410, column: 71, scope: !611)
!623 = !DILocation(line: 410, column: 78, scope: !611)
!624 = !DILocation(line: 410, column: 104, scope: !611)
!625 = !DILocation(line: 410, column: 107, scope: !611)
!626 = !DILocation(line: 412, column: 4, scope: !560)
!627 = !DILocation(line: 413, column: 3, scope: !560)
!628 = !DILocation(line: 402, column: 23, scope: !555)
!629 = !DILocation(line: 402, column: 3, scope: !555)
!630 = distinct !{!630, !558, !631}
!631 = !DILocation(line: 413, column: 3, scope: !552)
!632 = !DILocation(line: 414, column: 2, scope: !536)
!633 = !DILocation(line: 374, column: 25, scope: !531)
!634 = !DILocation(line: 374, column: 2, scope: !531)
!635 = distinct !{!635, !534, !636}
!636 = !DILocation(line: 414, column: 2, scope: !528)
!637 = !DILocation(line: 416, column: 7, scope: !133)
!638 = !DILocation(line: 416, column: 2, scope: !133)
!639 = !DILocation(line: 419, column: 2, scope: !133)
!640 = !DILocation(line: 420, column: 1, scope: !133)
!641 = distinct !DISubprogram(name: "GenerateInitialVerticesIndexList", scope: !1, file: !1, line: 764, type: !642, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!642 = !DISubroutineType(types: !643)
!643 = !{!7, !8, !6, !91, !83}
!644 = !DILocalVariable(name: "pTriInfos", arg: 1, scope: !641, file: !1, line: 764, type: !8)
!645 = !DILocation(line: 764, column: 54, scope: !641)
!646 = !DILocalVariable(name: "piTriList_out", arg: 2, scope: !641, file: !1, line: 764, type: !6)
!647 = !DILocation(line: 764, column: 71, scope: !641)
!648 = !DILocalVariable(name: "pContext", arg: 3, scope: !641, file: !1, line: 764, type: !91)
!649 = !DILocation(line: 764, column: 115, scope: !641)
!650 = !DILocalVariable(name: "iNrTrianglesIn", arg: 4, scope: !641, file: !1, line: 764, type: !83)
!651 = !DILocation(line: 764, column: 135, scope: !641)
!652 = !DILocalVariable(name: "iTSpacesOffs", scope: !641, file: !1, line: 766, type: !7)
!653 = !DILocation(line: 766, column: 6, scope: !641)
!654 = !DILocalVariable(name: "f", scope: !641, file: !1, line: 766, type: !7)
!655 = !DILocation(line: 766, column: 24, scope: !641)
!656 = !DILocalVariable(name: "t", scope: !641, file: !1, line: 766, type: !7)
!657 = !DILocation(line: 766, column: 29, scope: !641)
!658 = !DILocalVariable(name: "iDstTriIndex", scope: !641, file: !1, line: 767, type: !7)
!659 = !DILocation(line: 767, column: 6, scope: !641)
!660 = !DILocation(line: 768, column: 8, scope: !661)
!661 = distinct !DILexicalBlock(scope: !641, file: !1, line: 768, column: 2)
!662 = !DILocation(line: 768, column: 7, scope: !661)
!663 = !DILocation(line: 768, column: 12, scope: !664)
!664 = distinct !DILexicalBlock(scope: !661, file: !1, line: 768, column: 2)
!665 = !DILocation(line: 768, column: 14, scope: !664)
!666 = !DILocation(line: 768, column: 24, scope: !664)
!667 = !DILocation(line: 768, column: 38, scope: !664)
!668 = !DILocation(line: 768, column: 52, scope: !664)
!669 = !DILocation(line: 768, column: 13, scope: !664)
!670 = !DILocation(line: 768, column: 2, scope: !661)
!671 = !DILocalVariable(name: "verts", scope: !672, file: !1, line: 770, type: !83)
!672 = distinct !DILexicalBlock(scope: !664, file: !1, line: 769, column: 2)
!673 = !DILocation(line: 770, column: 13, scope: !672)
!674 = !DILocation(line: 770, column: 21, scope: !672)
!675 = !DILocation(line: 770, column: 31, scope: !672)
!676 = !DILocation(line: 770, column: 45, scope: !672)
!677 = !DILocation(line: 770, column: 68, scope: !672)
!678 = !DILocation(line: 770, column: 78, scope: !672)
!679 = !DILocation(line: 771, column: 7, scope: !680)
!680 = distinct !DILexicalBlock(scope: !672, file: !1, line: 771, column: 7)
!681 = !DILocation(line: 771, column: 12, scope: !680)
!682 = !DILocation(line: 771, column: 16, scope: !680)
!683 = !DILocation(line: 771, column: 19, scope: !680)
!684 = !DILocation(line: 771, column: 24, scope: !680)
!685 = !DILocation(line: 771, column: 7, scope: !672)
!686 = !DILocation(line: 771, column: 29, scope: !680)
!687 = !DILocation(line: 773, column: 44, scope: !672)
!688 = !DILocation(line: 773, column: 3, scope: !672)
!689 = !DILocation(line: 773, column: 13, scope: !672)
!690 = !DILocation(line: 773, column: 27, scope: !672)
!691 = !DILocation(line: 773, column: 42, scope: !672)
!692 = !DILocation(line: 774, column: 42, scope: !672)
!693 = !DILocation(line: 774, column: 3, scope: !672)
!694 = !DILocation(line: 774, column: 13, scope: !672)
!695 = !DILocation(line: 774, column: 27, scope: !672)
!696 = !DILocation(line: 774, column: 40, scope: !672)
!697 = !DILocation(line: 776, column: 7, scope: !698)
!698 = distinct !DILexicalBlock(scope: !672, file: !1, line: 776, column: 7)
!699 = !DILocation(line: 776, column: 12, scope: !698)
!700 = !DILocation(line: 776, column: 7, scope: !672)
!701 = !DILocalVariable(name: "pVerts", scope: !702, file: !1, line: 778, type: !703)
!702 = distinct !DILexicalBlock(scope: !698, file: !1, line: 777, column: 3)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!704 = !DILocation(line: 778, column: 20, scope: !702)
!705 = !DILocation(line: 778, column: 29, scope: !702)
!706 = !DILocation(line: 778, column: 39, scope: !702)
!707 = !DILocation(line: 778, column: 53, scope: !702)
!708 = !DILocation(line: 779, column: 4, scope: !702)
!709 = !DILocation(line: 779, column: 13, scope: !702)
!710 = !DILocation(line: 779, column: 17, scope: !702)
!711 = !DILocation(line: 779, column: 26, scope: !702)
!712 = !DILocation(line: 779, column: 30, scope: !702)
!713 = !DILocation(line: 779, column: 39, scope: !702)
!714 = !DILocation(line: 780, column: 48, scope: !702)
!715 = !DILocation(line: 780, column: 38, scope: !702)
!716 = !DILocation(line: 780, column: 4, scope: !702)
!717 = !DILocation(line: 780, column: 18, scope: !702)
!718 = !DILocation(line: 780, column: 30, scope: !702)
!719 = !DILocation(line: 780, column: 32, scope: !702)
!720 = !DILocation(line: 780, column: 36, scope: !702)
!721 = !DILocation(line: 781, column: 48, scope: !702)
!722 = !DILocation(line: 781, column: 38, scope: !702)
!723 = !DILocation(line: 781, column: 4, scope: !702)
!724 = !DILocation(line: 781, column: 18, scope: !702)
!725 = !DILocation(line: 781, column: 30, scope: !702)
!726 = !DILocation(line: 781, column: 32, scope: !702)
!727 = !DILocation(line: 781, column: 36, scope: !702)
!728 = !DILocation(line: 782, column: 48, scope: !702)
!729 = !DILocation(line: 782, column: 38, scope: !702)
!730 = !DILocation(line: 782, column: 4, scope: !702)
!731 = !DILocation(line: 782, column: 18, scope: !702)
!732 = !DILocation(line: 782, column: 30, scope: !702)
!733 = !DILocation(line: 782, column: 32, scope: !702)
!734 = !DILocation(line: 782, column: 36, scope: !702)
!735 = !DILocation(line: 783, column: 4, scope: !702)
!736 = !DILocation(line: 784, column: 3, scope: !702)
!737 = !DILocation(line: 788, column: 48, scope: !738)
!738 = distinct !DILexicalBlock(scope: !739, file: !1, line: 787, column: 4)
!739 = distinct !DILexicalBlock(scope: !698, file: !1, line: 786, column: 3)
!740 = !DILocation(line: 788, column: 5, scope: !738)
!741 = !DILocation(line: 788, column: 15, scope: !738)
!742 = !DILocation(line: 788, column: 27, scope: !738)
!743 = !DILocation(line: 788, column: 31, scope: !738)
!744 = !DILocation(line: 788, column: 46, scope: !738)
!745 = !DILocation(line: 789, column: 46, scope: !738)
!746 = !DILocation(line: 789, column: 5, scope: !738)
!747 = !DILocation(line: 789, column: 15, scope: !738)
!748 = !DILocation(line: 789, column: 27, scope: !738)
!749 = !DILocation(line: 789, column: 31, scope: !738)
!750 = !DILocation(line: 789, column: 44, scope: !738)
!751 = !DILocalVariable(name: "i0", scope: !752, file: !1, line: 796, type: !83)
!752 = distinct !DILexicalBlock(scope: !739, file: !1, line: 792, column: 4)
!753 = !DILocation(line: 796, column: 15, scope: !752)
!754 = !DILocation(line: 796, column: 30, scope: !752)
!755 = !DILocation(line: 796, column: 20, scope: !752)
!756 = !DILocalVariable(name: "i1", scope: !752, file: !1, line: 797, type: !83)
!757 = !DILocation(line: 797, column: 15, scope: !752)
!758 = !DILocation(line: 797, column: 30, scope: !752)
!759 = !DILocation(line: 797, column: 20, scope: !752)
!760 = !DILocalVariable(name: "i2", scope: !752, file: !1, line: 798, type: !83)
!761 = !DILocation(line: 798, column: 15, scope: !752)
!762 = !DILocation(line: 798, column: 30, scope: !752)
!763 = !DILocation(line: 798, column: 20, scope: !752)
!764 = !DILocalVariable(name: "i3", scope: !752, file: !1, line: 799, type: !83)
!765 = !DILocation(line: 799, column: 15, scope: !752)
!766 = !DILocation(line: 799, column: 30, scope: !752)
!767 = !DILocation(line: 799, column: 20, scope: !752)
!768 = !DILocalVariable(name: "T0", scope: !752, file: !1, line: 800, type: !322)
!769 = !DILocation(line: 800, column: 17, scope: !752)
!770 = !DILocation(line: 800, column: 34, scope: !752)
!771 = !DILocation(line: 800, column: 44, scope: !752)
!772 = !DILocation(line: 800, column: 22, scope: !752)
!773 = !DILocalVariable(name: "T1", scope: !752, file: !1, line: 801, type: !322)
!774 = !DILocation(line: 801, column: 17, scope: !752)
!775 = !DILocation(line: 801, column: 34, scope: !752)
!776 = !DILocation(line: 801, column: 44, scope: !752)
!777 = !DILocation(line: 801, column: 22, scope: !752)
!778 = !DILocalVariable(name: "T2", scope: !752, file: !1, line: 802, type: !322)
!779 = !DILocation(line: 802, column: 17, scope: !752)
!780 = !DILocation(line: 802, column: 34, scope: !752)
!781 = !DILocation(line: 802, column: 44, scope: !752)
!782 = !DILocation(line: 802, column: 22, scope: !752)
!783 = !DILocalVariable(name: "T3", scope: !752, file: !1, line: 803, type: !322)
!784 = !DILocation(line: 803, column: 17, scope: !752)
!785 = !DILocation(line: 803, column: 34, scope: !752)
!786 = !DILocation(line: 803, column: 44, scope: !752)
!787 = !DILocation(line: 803, column: 22, scope: !752)
!788 = !DILocalVariable(name: "distSQ_02", scope: !752, file: !1, line: 804, type: !121)
!789 = !DILocation(line: 804, column: 17, scope: !752)
!790 = !DILocation(line: 804, column: 43, scope: !752)
!791 = !DILocation(line: 804, column: 29, scope: !752)
!792 = !DILocalVariable(name: "distSQ_13", scope: !752, file: !1, line: 805, type: !121)
!793 = !DILocation(line: 805, column: 17, scope: !752)
!794 = !DILocation(line: 805, column: 43, scope: !752)
!795 = !DILocation(line: 805, column: 29, scope: !752)
!796 = !DILocalVariable(name: "bQuadDiagIs_02", scope: !752, file: !1, line: 806, type: !26)
!797 = !DILocation(line: 806, column: 11, scope: !752)
!798 = !DILocation(line: 807, column: 9, scope: !799)
!799 = distinct !DILexicalBlock(scope: !752, file: !1, line: 807, column: 9)
!800 = !DILocation(line: 807, column: 19, scope: !799)
!801 = !DILocation(line: 807, column: 18, scope: !799)
!802 = !DILocation(line: 807, column: 9, scope: !752)
!803 = !DILocation(line: 808, column: 21, scope: !799)
!804 = !DILocation(line: 808, column: 6, scope: !799)
!805 = !DILocation(line: 809, column: 14, scope: !806)
!806 = distinct !DILexicalBlock(scope: !799, file: !1, line: 809, column: 14)
!807 = !DILocation(line: 809, column: 24, scope: !806)
!808 = !DILocation(line: 809, column: 23, scope: !806)
!809 = !DILocation(line: 809, column: 14, scope: !799)
!810 = !DILocation(line: 810, column: 21, scope: !806)
!811 = !DILocation(line: 810, column: 6, scope: !806)
!812 = !DILocalVariable(name: "P0", scope: !813, file: !1, line: 813, type: !322)
!813 = distinct !DILexicalBlock(scope: !806, file: !1, line: 812, column: 5)
!814 = !DILocation(line: 813, column: 18, scope: !813)
!815 = !DILocation(line: 813, column: 35, scope: !813)
!816 = !DILocation(line: 813, column: 45, scope: !813)
!817 = !DILocation(line: 813, column: 23, scope: !813)
!818 = !DILocalVariable(name: "P1", scope: !813, file: !1, line: 814, type: !322)
!819 = !DILocation(line: 814, column: 18, scope: !813)
!820 = !DILocation(line: 814, column: 35, scope: !813)
!821 = !DILocation(line: 814, column: 45, scope: !813)
!822 = !DILocation(line: 814, column: 23, scope: !813)
!823 = !DILocalVariable(name: "P2", scope: !813, file: !1, line: 815, type: !322)
!824 = !DILocation(line: 815, column: 18, scope: !813)
!825 = !DILocation(line: 815, column: 35, scope: !813)
!826 = !DILocation(line: 815, column: 45, scope: !813)
!827 = !DILocation(line: 815, column: 23, scope: !813)
!828 = !DILocalVariable(name: "P3", scope: !813, file: !1, line: 816, type: !322)
!829 = !DILocation(line: 816, column: 18, scope: !813)
!830 = !DILocation(line: 816, column: 35, scope: !813)
!831 = !DILocation(line: 816, column: 45, scope: !813)
!832 = !DILocation(line: 816, column: 23, scope: !813)
!833 = !DILocalVariable(name: "distSQ_02", scope: !813, file: !1, line: 817, type: !121)
!834 = !DILocation(line: 817, column: 18, scope: !813)
!835 = !DILocation(line: 817, column: 44, scope: !813)
!836 = !DILocation(line: 817, column: 30, scope: !813)
!837 = !DILocalVariable(name: "distSQ_13", scope: !813, file: !1, line: 818, type: !121)
!838 = !DILocation(line: 818, column: 18, scope: !813)
!839 = !DILocation(line: 818, column: 44, scope: !813)
!840 = !DILocation(line: 818, column: 30, scope: !813)
!841 = !DILocation(line: 820, column: 23, scope: !813)
!842 = !DILocation(line: 820, column: 33, scope: !813)
!843 = !DILocation(line: 820, column: 32, scope: !813)
!844 = !DILocation(line: 820, column: 21, scope: !813)
!845 = !DILocation(line: 823, column: 9, scope: !846)
!846 = distinct !DILexicalBlock(scope: !752, file: !1, line: 823, column: 9)
!847 = !DILocation(line: 823, column: 9, scope: !752)
!848 = !DILocalVariable(name: "pVerts_A", scope: !849, file: !1, line: 826, type: !703)
!849 = distinct !DILexicalBlock(scope: !850, file: !1, line: 825, column: 6)
!850 = distinct !DILexicalBlock(scope: !846, file: !1, line: 824, column: 5)
!851 = !DILocation(line: 826, column: 23, scope: !849)
!852 = !DILocation(line: 826, column: 34, scope: !849)
!853 = !DILocation(line: 826, column: 44, scope: !849)
!854 = !DILocation(line: 826, column: 58, scope: !849)
!855 = !DILocation(line: 827, column: 7, scope: !849)
!856 = !DILocation(line: 827, column: 18, scope: !849)
!857 = !DILocation(line: 827, column: 22, scope: !849)
!858 = !DILocation(line: 827, column: 33, scope: !849)
!859 = !DILocation(line: 827, column: 37, scope: !849)
!860 = !DILocation(line: 827, column: 48, scope: !849)
!861 = !DILocation(line: 829, column: 40, scope: !850)
!862 = !DILocation(line: 829, column: 6, scope: !850)
!863 = !DILocation(line: 829, column: 20, scope: !850)
!864 = !DILocation(line: 829, column: 32, scope: !850)
!865 = !DILocation(line: 829, column: 34, scope: !850)
!866 = !DILocation(line: 829, column: 38, scope: !850)
!867 = !DILocation(line: 830, column: 40, scope: !850)
!868 = !DILocation(line: 830, column: 6, scope: !850)
!869 = !DILocation(line: 830, column: 20, scope: !850)
!870 = !DILocation(line: 830, column: 32, scope: !850)
!871 = !DILocation(line: 830, column: 34, scope: !850)
!872 = !DILocation(line: 830, column: 38, scope: !850)
!873 = !DILocation(line: 831, column: 40, scope: !850)
!874 = !DILocation(line: 831, column: 6, scope: !850)
!875 = !DILocation(line: 831, column: 20, scope: !850)
!876 = !DILocation(line: 831, column: 32, scope: !850)
!877 = !DILocation(line: 831, column: 34, scope: !850)
!878 = !DILocation(line: 831, column: 38, scope: !850)
!879 = !DILocation(line: 832, column: 6, scope: !850)
!880 = !DILocalVariable(name: "pVerts_B", scope: !881, file: !1, line: 834, type: !703)
!881 = distinct !DILexicalBlock(scope: !850, file: !1, line: 833, column: 6)
!882 = !DILocation(line: 834, column: 23, scope: !881)
!883 = !DILocation(line: 834, column: 34, scope: !881)
!884 = !DILocation(line: 834, column: 44, scope: !881)
!885 = !DILocation(line: 834, column: 58, scope: !881)
!886 = !DILocation(line: 835, column: 7, scope: !881)
!887 = !DILocation(line: 835, column: 18, scope: !881)
!888 = !DILocation(line: 835, column: 22, scope: !881)
!889 = !DILocation(line: 835, column: 33, scope: !881)
!890 = !DILocation(line: 835, column: 37, scope: !881)
!891 = !DILocation(line: 835, column: 48, scope: !881)
!892 = !DILocation(line: 837, column: 40, scope: !850)
!893 = !DILocation(line: 837, column: 6, scope: !850)
!894 = !DILocation(line: 837, column: 20, scope: !850)
!895 = !DILocation(line: 837, column: 32, scope: !850)
!896 = !DILocation(line: 837, column: 34, scope: !850)
!897 = !DILocation(line: 837, column: 38, scope: !850)
!898 = !DILocation(line: 838, column: 40, scope: !850)
!899 = !DILocation(line: 838, column: 6, scope: !850)
!900 = !DILocation(line: 838, column: 20, scope: !850)
!901 = !DILocation(line: 838, column: 32, scope: !850)
!902 = !DILocation(line: 838, column: 34, scope: !850)
!903 = !DILocation(line: 838, column: 38, scope: !850)
!904 = !DILocation(line: 839, column: 40, scope: !850)
!905 = !DILocation(line: 839, column: 6, scope: !850)
!906 = !DILocation(line: 839, column: 20, scope: !850)
!907 = !DILocation(line: 839, column: 32, scope: !850)
!908 = !DILocation(line: 839, column: 34, scope: !850)
!909 = !DILocation(line: 839, column: 38, scope: !850)
!910 = !DILocation(line: 840, column: 6, scope: !850)
!911 = !DILocation(line: 841, column: 5, scope: !850)
!912 = !DILocalVariable(name: "pVerts_A", scope: !913, file: !1, line: 845, type: !703)
!913 = distinct !DILexicalBlock(scope: !914, file: !1, line: 844, column: 6)
!914 = distinct !DILexicalBlock(scope: !846, file: !1, line: 843, column: 5)
!915 = !DILocation(line: 845, column: 23, scope: !913)
!916 = !DILocation(line: 845, column: 34, scope: !913)
!917 = !DILocation(line: 845, column: 44, scope: !913)
!918 = !DILocation(line: 845, column: 58, scope: !913)
!919 = !DILocation(line: 846, column: 7, scope: !913)
!920 = !DILocation(line: 846, column: 18, scope: !913)
!921 = !DILocation(line: 846, column: 22, scope: !913)
!922 = !DILocation(line: 846, column: 33, scope: !913)
!923 = !DILocation(line: 846, column: 37, scope: !913)
!924 = !DILocation(line: 846, column: 48, scope: !913)
!925 = !DILocation(line: 848, column: 40, scope: !914)
!926 = !DILocation(line: 848, column: 6, scope: !914)
!927 = !DILocation(line: 848, column: 20, scope: !914)
!928 = !DILocation(line: 848, column: 32, scope: !914)
!929 = !DILocation(line: 848, column: 34, scope: !914)
!930 = !DILocation(line: 848, column: 38, scope: !914)
!931 = !DILocation(line: 849, column: 40, scope: !914)
!932 = !DILocation(line: 849, column: 6, scope: !914)
!933 = !DILocation(line: 849, column: 20, scope: !914)
!934 = !DILocation(line: 849, column: 32, scope: !914)
!935 = !DILocation(line: 849, column: 34, scope: !914)
!936 = !DILocation(line: 849, column: 38, scope: !914)
!937 = !DILocation(line: 850, column: 40, scope: !914)
!938 = !DILocation(line: 850, column: 6, scope: !914)
!939 = !DILocation(line: 850, column: 20, scope: !914)
!940 = !DILocation(line: 850, column: 32, scope: !914)
!941 = !DILocation(line: 850, column: 34, scope: !914)
!942 = !DILocation(line: 850, column: 38, scope: !914)
!943 = !DILocation(line: 851, column: 6, scope: !914)
!944 = !DILocalVariable(name: "pVerts_B", scope: !945, file: !1, line: 853, type: !703)
!945 = distinct !DILexicalBlock(scope: !914, file: !1, line: 852, column: 6)
!946 = !DILocation(line: 853, column: 23, scope: !945)
!947 = !DILocation(line: 853, column: 34, scope: !945)
!948 = !DILocation(line: 853, column: 44, scope: !945)
!949 = !DILocation(line: 853, column: 58, scope: !945)
!950 = !DILocation(line: 854, column: 7, scope: !945)
!951 = !DILocation(line: 854, column: 18, scope: !945)
!952 = !DILocation(line: 854, column: 22, scope: !945)
!953 = !DILocation(line: 854, column: 33, scope: !945)
!954 = !DILocation(line: 854, column: 37, scope: !945)
!955 = !DILocation(line: 854, column: 48, scope: !945)
!956 = !DILocation(line: 856, column: 40, scope: !914)
!957 = !DILocation(line: 856, column: 6, scope: !914)
!958 = !DILocation(line: 856, column: 20, scope: !914)
!959 = !DILocation(line: 856, column: 32, scope: !914)
!960 = !DILocation(line: 856, column: 34, scope: !914)
!961 = !DILocation(line: 856, column: 38, scope: !914)
!962 = !DILocation(line: 857, column: 40, scope: !914)
!963 = !DILocation(line: 857, column: 6, scope: !914)
!964 = !DILocation(line: 857, column: 20, scope: !914)
!965 = !DILocation(line: 857, column: 32, scope: !914)
!966 = !DILocation(line: 857, column: 34, scope: !914)
!967 = !DILocation(line: 857, column: 38, scope: !914)
!968 = !DILocation(line: 858, column: 40, scope: !914)
!969 = !DILocation(line: 858, column: 6, scope: !914)
!970 = !DILocation(line: 858, column: 20, scope: !914)
!971 = !DILocation(line: 858, column: 32, scope: !914)
!972 = !DILocation(line: 858, column: 34, scope: !914)
!973 = !DILocation(line: 858, column: 38, scope: !914)
!974 = !DILocation(line: 859, column: 6, scope: !914)
!975 = !DILocation(line: 864, column: 19, scope: !672)
!976 = !DILocation(line: 864, column: 16, scope: !672)
!977 = !DILocation(line: 866, column: 2, scope: !672)
!978 = !DILocation(line: 768, column: 64, scope: !664)
!979 = !DILocation(line: 768, column: 2, scope: !664)
!980 = distinct !{!980, !670, !981}
!981 = !DILocation(line: 866, column: 2, scope: !661)
!982 = !DILocation(line: 868, column: 8, scope: !983)
!983 = distinct !DILexicalBlock(scope: !641, file: !1, line: 868, column: 2)
!984 = !DILocation(line: 868, column: 7, scope: !983)
!985 = !DILocation(line: 868, column: 12, scope: !986)
!986 = distinct !DILexicalBlock(scope: !983, file: !1, line: 868, column: 2)
!987 = !DILocation(line: 868, column: 14, scope: !986)
!988 = !DILocation(line: 868, column: 13, scope: !986)
!989 = !DILocation(line: 868, column: 2, scope: !983)
!990 = !DILocation(line: 869, column: 3, scope: !986)
!991 = !DILocation(line: 869, column: 13, scope: !986)
!992 = !DILocation(line: 869, column: 16, scope: !986)
!993 = !DILocation(line: 869, column: 22, scope: !986)
!994 = !DILocation(line: 868, column: 31, scope: !986)
!995 = !DILocation(line: 868, column: 2, scope: !986)
!996 = distinct !{!996, !989, !997}
!997 = !DILocation(line: 869, column: 24, scope: !983)
!998 = !DILocation(line: 872, column: 9, scope: !641)
!999 = !DILocation(line: 872, column: 2, scope: !641)
!1000 = distinct !DISubprogram(name: "GenerateSharedVerticesIndexList", scope: !1, file: !1, line: 451, type: !1001, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{null, !6, !91, !83}
!1003 = !DILocalVariable(name: "piTriList_in_and_out", arg: 1, scope: !1000, file: !1, line: 451, type: !6)
!1004 = !DILocation(line: 451, column: 49, scope: !1000)
!1005 = !DILocalVariable(name: "pContext", arg: 2, scope: !1000, file: !1, line: 451, type: !91)
!1006 = !DILocation(line: 451, column: 100, scope: !1000)
!1007 = !DILocalVariable(name: "iNrTrianglesIn", arg: 3, scope: !1000, file: !1, line: 451, type: !83)
!1008 = !DILocation(line: 451, column: 120, scope: !1000)
!1009 = !DILocalVariable(name: "piHashTable", scope: !1000, file: !1, line: 455, type: !6)
!1010 = !DILocation(line: 455, column: 8, scope: !1000)
!1011 = !DILocalVariable(name: "piHashCount", scope: !1000, file: !1, line: 455, type: !6)
!1012 = !DILocation(line: 455, column: 28, scope: !1000)
!1013 = !DILocalVariable(name: "piHashOffsets", scope: !1000, file: !1, line: 455, type: !6)
!1014 = !DILocation(line: 455, column: 48, scope: !1000)
!1015 = !DILocalVariable(name: "piHashCount2", scope: !1000, file: !1, line: 455, type: !6)
!1016 = !DILocation(line: 455, column: 70, scope: !1000)
!1017 = !DILocalVariable(name: "pTmpVert", scope: !1000, file: !1, line: 456, type: !56)
!1018 = !DILocation(line: 456, column: 13, scope: !1000)
!1019 = !DILocalVariable(name: "i", scope: !1000, file: !1, line: 457, type: !7)
!1020 = !DILocation(line: 457, column: 6, scope: !1000)
!1021 = !DILocalVariable(name: "iChannel", scope: !1000, file: !1, line: 457, type: !7)
!1022 = !DILocation(line: 457, column: 11, scope: !1000)
!1023 = !DILocalVariable(name: "k", scope: !1000, file: !1, line: 457, type: !7)
!1024 = !DILocation(line: 457, column: 23, scope: !1000)
!1025 = !DILocalVariable(name: "e", scope: !1000, file: !1, line: 457, type: !7)
!1026 = !DILocation(line: 457, column: 28, scope: !1000)
!1027 = !DILocalVariable(name: "iMaxCount", scope: !1000, file: !1, line: 458, type: !7)
!1028 = !DILocation(line: 458, column: 6, scope: !1000)
!1029 = !DILocalVariable(name: "vMin", scope: !1000, file: !1, line: 459, type: !29)
!1030 = !DILocation(line: 459, column: 8, scope: !1000)
!1031 = !DILocation(line: 459, column: 27, scope: !1000)
!1032 = !DILocation(line: 459, column: 15, scope: !1000)
!1033 = !DILocalVariable(name: "vMax", scope: !1000, file: !1, line: 459, type: !29)
!1034 = !DILocation(line: 459, column: 41, scope: !1000)
!1035 = !DILocation(line: 459, column: 48, scope: !1000)
!1036 = !DILocalVariable(name: "vDim", scope: !1000, file: !1, line: 459, type: !29)
!1037 = !DILocation(line: 459, column: 54, scope: !1000)
!1038 = !DILocalVariable(name: "fMin", scope: !1000, file: !1, line: 460, type: !4)
!1039 = !DILocation(line: 460, column: 8, scope: !1000)
!1040 = !DILocalVariable(name: "fMax", scope: !1000, file: !1, line: 460, type: !4)
!1041 = !DILocation(line: 460, column: 14, scope: !1000)
!1042 = !DILocation(line: 461, column: 8, scope: !1043)
!1043 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 461, column: 2)
!1044 = !DILocation(line: 461, column: 7, scope: !1043)
!1045 = !DILocation(line: 461, column: 12, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !1043, file: !1, line: 461, column: 2)
!1047 = !DILocation(line: 461, column: 15, scope: !1046)
!1048 = !DILocation(line: 461, column: 29, scope: !1046)
!1049 = !DILocation(line: 461, column: 13, scope: !1046)
!1050 = !DILocation(line: 461, column: 2, scope: !1043)
!1051 = !DILocalVariable(name: "index", scope: !1052, file: !1, line: 463, type: !83)
!1052 = distinct !DILexicalBlock(scope: !1046, file: !1, line: 462, column: 2)
!1053 = !DILocation(line: 463, column: 13, scope: !1052)
!1054 = !DILocation(line: 463, column: 21, scope: !1052)
!1055 = !DILocation(line: 463, column: 42, scope: !1052)
!1056 = !DILocalVariable(name: "vP", scope: !1052, file: !1, line: 465, type: !322)
!1057 = !DILocation(line: 465, column: 15, scope: !1052)
!1058 = !DILocation(line: 465, column: 32, scope: !1052)
!1059 = !DILocation(line: 465, column: 42, scope: !1052)
!1060 = !DILocation(line: 465, column: 20, scope: !1052)
!1061 = !DILocation(line: 466, column: 12, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1052, file: !1, line: 466, column: 7)
!1063 = !DILocation(line: 466, column: 19, scope: !1062)
!1064 = !DILocation(line: 466, column: 14, scope: !1062)
!1065 = !DILocation(line: 466, column: 7, scope: !1052)
!1066 = !DILocation(line: 466, column: 34, scope: !1062)
!1067 = !DILocation(line: 466, column: 27, scope: !1062)
!1068 = !DILocation(line: 466, column: 29, scope: !1062)
!1069 = !DILocation(line: 466, column: 22, scope: !1062)
!1070 = !DILocation(line: 467, column: 17, scope: !1071)
!1071 = distinct !DILexicalBlock(scope: !1062, file: !1, line: 467, column: 12)
!1072 = !DILocation(line: 467, column: 24, scope: !1071)
!1073 = !DILocation(line: 467, column: 19, scope: !1071)
!1074 = !DILocation(line: 467, column: 12, scope: !1062)
!1075 = !DILocation(line: 467, column: 39, scope: !1071)
!1076 = !DILocation(line: 467, column: 32, scope: !1071)
!1077 = !DILocation(line: 467, column: 34, scope: !1071)
!1078 = !DILocation(line: 467, column: 27, scope: !1071)
!1079 = !DILocation(line: 468, column: 12, scope: !1080)
!1080 = distinct !DILexicalBlock(scope: !1052, file: !1, line: 468, column: 7)
!1081 = !DILocation(line: 468, column: 19, scope: !1080)
!1082 = !DILocation(line: 468, column: 14, scope: !1080)
!1083 = !DILocation(line: 468, column: 7, scope: !1052)
!1084 = !DILocation(line: 468, column: 34, scope: !1080)
!1085 = !DILocation(line: 468, column: 27, scope: !1080)
!1086 = !DILocation(line: 468, column: 29, scope: !1080)
!1087 = !DILocation(line: 468, column: 22, scope: !1080)
!1088 = !DILocation(line: 469, column: 17, scope: !1089)
!1089 = distinct !DILexicalBlock(scope: !1080, file: !1, line: 469, column: 12)
!1090 = !DILocation(line: 469, column: 24, scope: !1089)
!1091 = !DILocation(line: 469, column: 19, scope: !1089)
!1092 = !DILocation(line: 469, column: 12, scope: !1080)
!1093 = !DILocation(line: 469, column: 39, scope: !1089)
!1094 = !DILocation(line: 469, column: 32, scope: !1089)
!1095 = !DILocation(line: 469, column: 34, scope: !1089)
!1096 = !DILocation(line: 469, column: 27, scope: !1089)
!1097 = !DILocation(line: 470, column: 12, scope: !1098)
!1098 = distinct !DILexicalBlock(scope: !1052, file: !1, line: 470, column: 7)
!1099 = !DILocation(line: 470, column: 19, scope: !1098)
!1100 = !DILocation(line: 470, column: 14, scope: !1098)
!1101 = !DILocation(line: 470, column: 7, scope: !1052)
!1102 = !DILocation(line: 470, column: 34, scope: !1098)
!1103 = !DILocation(line: 470, column: 27, scope: !1098)
!1104 = !DILocation(line: 470, column: 29, scope: !1098)
!1105 = !DILocation(line: 470, column: 22, scope: !1098)
!1106 = !DILocation(line: 471, column: 17, scope: !1107)
!1107 = distinct !DILexicalBlock(scope: !1098, file: !1, line: 471, column: 12)
!1108 = !DILocation(line: 471, column: 24, scope: !1107)
!1109 = !DILocation(line: 471, column: 19, scope: !1107)
!1110 = !DILocation(line: 471, column: 12, scope: !1098)
!1111 = !DILocation(line: 471, column: 39, scope: !1107)
!1112 = !DILocation(line: 471, column: 32, scope: !1107)
!1113 = !DILocation(line: 471, column: 34, scope: !1107)
!1114 = !DILocation(line: 471, column: 27, scope: !1107)
!1115 = !DILocation(line: 472, column: 2, scope: !1052)
!1116 = !DILocation(line: 461, column: 35, scope: !1046)
!1117 = !DILocation(line: 461, column: 2, scope: !1046)
!1118 = distinct !{!1118, !1050, !1119}
!1119 = !DILocation(line: 472, column: 2, scope: !1043)
!1120 = !DILocation(line: 474, column: 9, scope: !1000)
!1121 = !DILocation(line: 475, column: 11, scope: !1000)
!1122 = !DILocation(line: 476, column: 14, scope: !1000)
!1123 = !DILocation(line: 476, column: 7, scope: !1000)
!1124 = !DILocation(line: 476, column: 27, scope: !1000)
!1125 = !DILocation(line: 476, column: 21, scope: !1000)
!1126 = !DILocation(line: 477, column: 11, scope: !1127)
!1127 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 477, column: 6)
!1128 = !DILocation(line: 477, column: 18, scope: !1127)
!1129 = !DILocation(line: 477, column: 12, scope: !1127)
!1130 = !DILocation(line: 477, column: 20, scope: !1127)
!1131 = !DILocation(line: 477, column: 28, scope: !1127)
!1132 = !DILocation(line: 477, column: 35, scope: !1127)
!1133 = !DILocation(line: 477, column: 29, scope: !1127)
!1134 = !DILocation(line: 477, column: 6, scope: !1000)
!1135 = !DILocation(line: 479, column: 11, scope: !1136)
!1136 = distinct !DILexicalBlock(scope: !1127, file: !1, line: 478, column: 2)
!1137 = !DILocation(line: 480, column: 15, scope: !1136)
!1138 = !DILocation(line: 480, column: 8, scope: !1136)
!1139 = !DILocation(line: 480, column: 28, scope: !1136)
!1140 = !DILocation(line: 480, column: 22, scope: !1136)
!1141 = !DILocation(line: 481, column: 2, scope: !1136)
!1142 = !DILocation(line: 482, column: 16, scope: !1143)
!1143 = distinct !DILexicalBlock(scope: !1127, file: !1, line: 482, column: 11)
!1144 = !DILocation(line: 482, column: 23, scope: !1143)
!1145 = !DILocation(line: 482, column: 17, scope: !1143)
!1146 = !DILocation(line: 482, column: 11, scope: !1127)
!1147 = !DILocation(line: 484, column: 11, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1143, file: !1, line: 483, column: 2)
!1149 = !DILocation(line: 485, column: 15, scope: !1148)
!1150 = !DILocation(line: 485, column: 8, scope: !1148)
!1151 = !DILocation(line: 485, column: 28, scope: !1148)
!1152 = !DILocation(line: 485, column: 22, scope: !1148)
!1153 = !DILocation(line: 486, column: 2, scope: !1148)
!1154 = !DILocation(line: 489, column: 43, scope: !1000)
!1155 = !DILocation(line: 489, column: 42, scope: !1000)
!1156 = !DILocation(line: 489, column: 57, scope: !1000)
!1157 = !DILocation(line: 489, column: 24, scope: !1000)
!1158 = !DILocation(line: 489, column: 16, scope: !1000)
!1159 = !DILocation(line: 489, column: 14, scope: !1000)
!1160 = !DILocation(line: 490, column: 24, scope: !1000)
!1161 = !DILocation(line: 490, column: 16, scope: !1000)
!1162 = !DILocation(line: 490, column: 14, scope: !1000)
!1163 = !DILocation(line: 491, column: 26, scope: !1000)
!1164 = !DILocation(line: 491, column: 18, scope: !1000)
!1165 = !DILocation(line: 491, column: 16, scope: !1000)
!1166 = !DILocation(line: 492, column: 25, scope: !1000)
!1167 = !DILocation(line: 492, column: 17, scope: !1000)
!1168 = !DILocation(line: 492, column: 15, scope: !1000)
!1169 = !DILocation(line: 494, column: 6, scope: !1170)
!1170 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 494, column: 6)
!1171 = !DILocation(line: 494, column: 17, scope: !1170)
!1172 = !DILocation(line: 494, column: 24, scope: !1170)
!1173 = !DILocation(line: 494, column: 27, scope: !1170)
!1174 = !DILocation(line: 494, column: 38, scope: !1170)
!1175 = !DILocation(line: 494, column: 45, scope: !1170)
!1176 = !DILocation(line: 494, column: 48, scope: !1170)
!1177 = !DILocation(line: 494, column: 61, scope: !1170)
!1178 = !DILocation(line: 494, column: 68, scope: !1170)
!1179 = !DILocation(line: 494, column: 71, scope: !1170)
!1180 = !DILocation(line: 494, column: 83, scope: !1170)
!1181 = !DILocation(line: 494, column: 6, scope: !1000)
!1182 = !DILocation(line: 496, column: 7, scope: !1183)
!1183 = distinct !DILexicalBlock(scope: !1184, file: !1, line: 496, column: 7)
!1184 = distinct !DILexicalBlock(scope: !1170, file: !1, line: 495, column: 2)
!1185 = !DILocation(line: 496, column: 18, scope: !1183)
!1186 = !DILocation(line: 496, column: 7, scope: !1184)
!1187 = !DILocation(line: 496, column: 31, scope: !1183)
!1188 = !DILocation(line: 496, column: 26, scope: !1183)
!1189 = !DILocation(line: 497, column: 7, scope: !1190)
!1190 = distinct !DILexicalBlock(scope: !1184, file: !1, line: 497, column: 7)
!1191 = !DILocation(line: 497, column: 18, scope: !1190)
!1192 = !DILocation(line: 497, column: 7, scope: !1184)
!1193 = !DILocation(line: 497, column: 31, scope: !1190)
!1194 = !DILocation(line: 497, column: 26, scope: !1190)
!1195 = !DILocation(line: 498, column: 7, scope: !1196)
!1196 = distinct !DILexicalBlock(scope: !1184, file: !1, line: 498, column: 7)
!1197 = !DILocation(line: 498, column: 20, scope: !1196)
!1198 = !DILocation(line: 498, column: 7, scope: !1184)
!1199 = !DILocation(line: 498, column: 33, scope: !1196)
!1200 = !DILocation(line: 498, column: 28, scope: !1196)
!1201 = !DILocation(line: 499, column: 7, scope: !1202)
!1202 = distinct !DILexicalBlock(scope: !1184, file: !1, line: 499, column: 7)
!1203 = !DILocation(line: 499, column: 19, scope: !1202)
!1204 = !DILocation(line: 499, column: 7, scope: !1184)
!1205 = !DILocation(line: 499, column: 32, scope: !1202)
!1206 = !DILocation(line: 499, column: 27, scope: !1202)
!1207 = !DILocation(line: 500, column: 39, scope: !1184)
!1208 = !DILocation(line: 500, column: 61, scope: !1184)
!1209 = !DILocation(line: 500, column: 71, scope: !1184)
!1210 = !DILocation(line: 500, column: 3, scope: !1184)
!1211 = !DILocation(line: 501, column: 3, scope: !1184)
!1212 = !DILocation(line: 503, column: 9, scope: !1000)
!1213 = !DILocation(line: 503, column: 2, scope: !1000)
!1214 = !DILocation(line: 504, column: 9, scope: !1000)
!1215 = !DILocation(line: 504, column: 2, scope: !1000)
!1216 = !DILocation(line: 507, column: 8, scope: !1217)
!1217 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 507, column: 2)
!1218 = !DILocation(line: 507, column: 7, scope: !1217)
!1219 = !DILocation(line: 507, column: 12, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1217, file: !1, line: 507, column: 2)
!1221 = !DILocation(line: 507, column: 15, scope: !1220)
!1222 = !DILocation(line: 507, column: 29, scope: !1220)
!1223 = !DILocation(line: 507, column: 13, scope: !1220)
!1224 = !DILocation(line: 507, column: 2, scope: !1217)
!1225 = !DILocalVariable(name: "index", scope: !1226, file: !1, line: 509, type: !83)
!1226 = distinct !DILexicalBlock(scope: !1220, file: !1, line: 508, column: 2)
!1227 = !DILocation(line: 509, column: 13, scope: !1226)
!1228 = !DILocation(line: 509, column: 21, scope: !1226)
!1229 = !DILocation(line: 509, column: 42, scope: !1226)
!1230 = !DILocalVariable(name: "vP", scope: !1226, file: !1, line: 510, type: !322)
!1231 = !DILocation(line: 510, column: 15, scope: !1226)
!1232 = !DILocation(line: 510, column: 32, scope: !1226)
!1233 = !DILocation(line: 510, column: 42, scope: !1226)
!1234 = !DILocation(line: 510, column: 20, scope: !1226)
!1235 = !DILocalVariable(name: "fVal", scope: !1226, file: !1, line: 511, type: !121)
!1236 = !DILocation(line: 511, column: 15, scope: !1226)
!1237 = !DILocation(line: 511, column: 22, scope: !1226)
!1238 = !DILocation(line: 511, column: 30, scope: !1226)
!1239 = !DILocation(line: 511, column: 39, scope: !1226)
!1240 = !DILocation(line: 511, column: 44, scope: !1226)
!1241 = !DILocation(line: 511, column: 52, scope: !1226)
!1242 = !DILocation(line: 511, column: 61, scope: !1226)
!1243 = !DILocation(line: 511, column: 68, scope: !1226)
!1244 = !DILocalVariable(name: "iCell", scope: !1226, file: !1, line: 512, type: !83)
!1245 = !DILocation(line: 512, column: 13, scope: !1226)
!1246 = !DILocation(line: 512, column: 34, scope: !1226)
!1247 = !DILocation(line: 512, column: 40, scope: !1226)
!1248 = !DILocation(line: 512, column: 46, scope: !1226)
!1249 = !DILocation(line: 512, column: 21, scope: !1226)
!1250 = !DILocation(line: 513, column: 5, scope: !1226)
!1251 = !DILocation(line: 513, column: 17, scope: !1226)
!1252 = !DILocation(line: 513, column: 3, scope: !1226)
!1253 = !DILocation(line: 514, column: 2, scope: !1226)
!1254 = !DILocation(line: 507, column: 35, scope: !1220)
!1255 = !DILocation(line: 507, column: 2, scope: !1220)
!1256 = distinct !{!1256, !1224, !1257}
!1257 = !DILocation(line: 514, column: 2, scope: !1217)
!1258 = !DILocation(line: 517, column: 2, scope: !1000)
!1259 = !DILocation(line: 517, column: 18, scope: !1000)
!1260 = !DILocation(line: 518, column: 8, scope: !1261)
!1261 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 518, column: 2)
!1262 = !DILocation(line: 518, column: 7, scope: !1261)
!1263 = !DILocation(line: 518, column: 12, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !1261, file: !1, line: 518, column: 2)
!1265 = !DILocation(line: 518, column: 13, scope: !1264)
!1266 = !DILocation(line: 518, column: 2, scope: !1261)
!1267 = !DILocation(line: 519, column: 20, scope: !1264)
!1268 = !DILocation(line: 519, column: 34, scope: !1264)
!1269 = !DILocation(line: 519, column: 35, scope: !1264)
!1270 = !DILocation(line: 519, column: 39, scope: !1264)
!1271 = !DILocation(line: 519, column: 51, scope: !1264)
!1272 = !DILocation(line: 519, column: 52, scope: !1264)
!1273 = !DILocation(line: 519, column: 38, scope: !1264)
!1274 = !DILocation(line: 519, column: 3, scope: !1264)
!1275 = !DILocation(line: 519, column: 17, scope: !1264)
!1276 = !DILocation(line: 519, column: 19, scope: !1264)
!1277 = !DILocation(line: 518, column: 25, scope: !1264)
!1278 = !DILocation(line: 518, column: 2, scope: !1264)
!1279 = distinct !{!1279, !1266, !1280}
!1280 = !DILocation(line: 519, column: 54, scope: !1261)
!1281 = !DILocation(line: 522, column: 8, scope: !1282)
!1282 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 522, column: 2)
!1283 = !DILocation(line: 522, column: 7, scope: !1282)
!1284 = !DILocation(line: 522, column: 12, scope: !1285)
!1285 = distinct !DILexicalBlock(scope: !1282, file: !1, line: 522, column: 2)
!1286 = !DILocation(line: 522, column: 15, scope: !1285)
!1287 = !DILocation(line: 522, column: 29, scope: !1285)
!1288 = !DILocation(line: 522, column: 13, scope: !1285)
!1289 = !DILocation(line: 522, column: 2, scope: !1282)
!1290 = !DILocalVariable(name: "index", scope: !1291, file: !1, line: 524, type: !83)
!1291 = distinct !DILexicalBlock(scope: !1285, file: !1, line: 523, column: 2)
!1292 = !DILocation(line: 524, column: 13, scope: !1291)
!1293 = !DILocation(line: 524, column: 21, scope: !1291)
!1294 = !DILocation(line: 524, column: 42, scope: !1291)
!1295 = !DILocalVariable(name: "vP", scope: !1291, file: !1, line: 525, type: !322)
!1296 = !DILocation(line: 525, column: 15, scope: !1291)
!1297 = !DILocation(line: 525, column: 32, scope: !1291)
!1298 = !DILocation(line: 525, column: 42, scope: !1291)
!1299 = !DILocation(line: 525, column: 20, scope: !1291)
!1300 = !DILocalVariable(name: "fVal", scope: !1291, file: !1, line: 526, type: !121)
!1301 = !DILocation(line: 526, column: 15, scope: !1291)
!1302 = !DILocation(line: 526, column: 22, scope: !1291)
!1303 = !DILocation(line: 526, column: 30, scope: !1291)
!1304 = !DILocation(line: 526, column: 39, scope: !1291)
!1305 = !DILocation(line: 526, column: 44, scope: !1291)
!1306 = !DILocation(line: 526, column: 52, scope: !1291)
!1307 = !DILocation(line: 526, column: 61, scope: !1291)
!1308 = !DILocation(line: 526, column: 68, scope: !1291)
!1309 = !DILocalVariable(name: "iCell", scope: !1291, file: !1, line: 527, type: !83)
!1310 = !DILocation(line: 527, column: 13, scope: !1291)
!1311 = !DILocation(line: 527, column: 34, scope: !1291)
!1312 = !DILocation(line: 527, column: 40, scope: !1291)
!1313 = !DILocation(line: 527, column: 46, scope: !1291)
!1314 = !DILocation(line: 527, column: 21, scope: !1291)
!1315 = !DILocalVariable(name: "pTable", scope: !1291, file: !1, line: 528, type: !6)
!1316 = !DILocation(line: 528, column: 9, scope: !1291)
!1317 = !DILocation(line: 531, column: 13, scope: !1291)
!1318 = !DILocation(line: 531, column: 25, scope: !1291)
!1319 = !DILocation(line: 531, column: 39, scope: !1291)
!1320 = !DILocation(line: 531, column: 10, scope: !1291)
!1321 = !DILocation(line: 532, column: 33, scope: !1291)
!1322 = !DILocation(line: 532, column: 3, scope: !1291)
!1323 = !DILocation(line: 532, column: 10, scope: !1291)
!1324 = !DILocation(line: 532, column: 23, scope: !1291)
!1325 = !DILocation(line: 532, column: 31, scope: !1291)
!1326 = !DILocation(line: 533, column: 5, scope: !1291)
!1327 = !DILocation(line: 533, column: 18, scope: !1291)
!1328 = !DILocation(line: 533, column: 3, scope: !1291)
!1329 = !DILocation(line: 534, column: 2, scope: !1291)
!1330 = !DILocation(line: 522, column: 35, scope: !1285)
!1331 = !DILocation(line: 522, column: 2, scope: !1285)
!1332 = distinct !{!1332, !1289, !1333}
!1333 = !DILocation(line: 534, column: 2, scope: !1282)
!1334 = !DILocation(line: 535, column: 8, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 535, column: 2)
!1336 = !DILocation(line: 535, column: 7, scope: !1335)
!1337 = !DILocation(line: 535, column: 12, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !1335, file: !1, line: 535, column: 2)
!1339 = !DILocation(line: 535, column: 13, scope: !1338)
!1340 = !DILocation(line: 535, column: 2, scope: !1335)
!1341 = !DILocation(line: 536, column: 3, scope: !1338)
!1342 = !DILocation(line: 535, column: 25, scope: !1338)
!1343 = !DILocation(line: 535, column: 2, scope: !1338)
!1344 = distinct !{!1344, !1340, !1345}
!1345 = !DILocation(line: 536, column: 3, scope: !1335)
!1346 = !DILocation(line: 537, column: 7, scope: !1000)
!1347 = !DILocation(line: 537, column: 2, scope: !1000)
!1348 = !DILocation(line: 540, column: 14, scope: !1000)
!1349 = !DILocation(line: 540, column: 12, scope: !1000)
!1350 = !DILocation(line: 541, column: 8, scope: !1351)
!1351 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 541, column: 2)
!1352 = !DILocation(line: 541, column: 7, scope: !1351)
!1353 = !DILocation(line: 541, column: 12, scope: !1354)
!1354 = distinct !DILexicalBlock(scope: !1351, file: !1, line: 541, column: 2)
!1355 = !DILocation(line: 541, column: 13, scope: !1354)
!1356 = !DILocation(line: 541, column: 2, scope: !1351)
!1357 = !DILocation(line: 542, column: 7, scope: !1358)
!1358 = distinct !DILexicalBlock(scope: !1354, file: !1, line: 542, column: 7)
!1359 = !DILocation(line: 542, column: 17, scope: !1358)
!1360 = !DILocation(line: 542, column: 29, scope: !1358)
!1361 = !DILocation(line: 542, column: 16, scope: !1358)
!1362 = !DILocation(line: 542, column: 7, scope: !1354)
!1363 = !DILocation(line: 543, column: 14, scope: !1358)
!1364 = !DILocation(line: 543, column: 26, scope: !1358)
!1365 = !DILocation(line: 543, column: 13, scope: !1358)
!1366 = !DILocation(line: 543, column: 4, scope: !1358)
!1367 = !DILocation(line: 542, column: 30, scope: !1358)
!1368 = !DILocation(line: 541, column: 25, scope: !1354)
!1369 = !DILocation(line: 541, column: 2, scope: !1354)
!1370 = distinct !{!1370, !1356, !1371}
!1371 = !DILocation(line: 543, column: 27, scope: !1351)
!1372 = !DILocation(line: 544, column: 50, scope: !1000)
!1373 = !DILocation(line: 544, column: 49, scope: !1000)
!1374 = !DILocation(line: 544, column: 26, scope: !1000)
!1375 = !DILocation(line: 544, column: 13, scope: !1000)
!1376 = !DILocation(line: 544, column: 11, scope: !1000)
!1377 = !DILocation(line: 548, column: 8, scope: !1378)
!1378 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 548, column: 2)
!1379 = !DILocation(line: 548, column: 7, scope: !1378)
!1380 = !DILocation(line: 548, column: 12, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1378, file: !1, line: 548, column: 2)
!1382 = !DILocation(line: 548, column: 13, scope: !1381)
!1383 = !DILocation(line: 548, column: 2, scope: !1378)
!1384 = !DILocalVariable(name: "pTable", scope: !1385, file: !1, line: 551, type: !6)
!1385 = distinct !DILexicalBlock(scope: !1381, file: !1, line: 549, column: 2)
!1386 = !DILocation(line: 551, column: 9, scope: !1385)
!1387 = !DILocation(line: 551, column: 19, scope: !1385)
!1388 = !DILocation(line: 551, column: 31, scope: !1385)
!1389 = !DILocation(line: 551, column: 45, scope: !1385)
!1390 = !DILocalVariable(name: "iEntries", scope: !1385, file: !1, line: 552, type: !83)
!1391 = !DILocation(line: 552, column: 13, scope: !1385)
!1392 = !DILocation(line: 552, column: 24, scope: !1385)
!1393 = !DILocation(line: 552, column: 36, scope: !1385)
!1394 = !DILocation(line: 553, column: 7, scope: !1395)
!1395 = distinct !DILexicalBlock(scope: !1385, file: !1, line: 553, column: 7)
!1396 = !DILocation(line: 553, column: 16, scope: !1395)
!1397 = !DILocation(line: 553, column: 7, scope: !1385)
!1398 = !DILocation(line: 553, column: 21, scope: !1395)
!1399 = !DILocation(line: 555, column: 7, scope: !1400)
!1400 = distinct !DILexicalBlock(scope: !1385, file: !1, line: 555, column: 7)
!1401 = !DILocation(line: 555, column: 15, scope: !1400)
!1402 = !DILocation(line: 555, column: 7, scope: !1385)
!1403 = !DILocation(line: 557, column: 10, scope: !1404)
!1404 = distinct !DILexicalBlock(scope: !1405, file: !1, line: 557, column: 4)
!1405 = distinct !DILexicalBlock(scope: !1400, file: !1, line: 556, column: 3)
!1406 = !DILocation(line: 557, column: 9, scope: !1404)
!1407 = !DILocation(line: 557, column: 14, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !1404, file: !1, line: 557, column: 4)
!1409 = !DILocation(line: 557, column: 16, scope: !1408)
!1410 = !DILocation(line: 557, column: 15, scope: !1408)
!1411 = !DILocation(line: 557, column: 4, scope: !1404)
!1412 = !DILocalVariable(name: "i", scope: !1413, file: !1, line: 559, type: !7)
!1413 = distinct !DILexicalBlock(scope: !1408, file: !1, line: 558, column: 4)
!1414 = !DILocation(line: 559, column: 9, scope: !1413)
!1415 = !DILocation(line: 559, column: 13, scope: !1413)
!1416 = !DILocation(line: 559, column: 20, scope: !1413)
!1417 = !DILocalVariable(name: "vP", scope: !1413, file: !1, line: 560, type: !322)
!1418 = !DILocation(line: 560, column: 17, scope: !1413)
!1419 = !DILocation(line: 560, column: 34, scope: !1413)
!1420 = !DILocation(line: 560, column: 44, scope: !1413)
!1421 = !DILocation(line: 560, column: 65, scope: !1413)
!1422 = !DILocation(line: 560, column: 22, scope: !1413)
!1423 = !DILocation(line: 561, column: 30, scope: !1413)
!1424 = !DILocation(line: 561, column: 5, scope: !1413)
!1425 = !DILocation(line: 561, column: 14, scope: !1413)
!1426 = !DILocation(line: 561, column: 17, scope: !1413)
!1427 = !DILocation(line: 561, column: 25, scope: !1413)
!1428 = !DILocation(line: 561, column: 58, scope: !1413)
!1429 = !DILocation(line: 561, column: 33, scope: !1413)
!1430 = !DILocation(line: 561, column: 42, scope: !1413)
!1431 = !DILocation(line: 561, column: 45, scope: !1413)
!1432 = !DILocation(line: 561, column: 53, scope: !1413)
!1433 = !DILocation(line: 562, column: 30, scope: !1413)
!1434 = !DILocation(line: 562, column: 5, scope: !1413)
!1435 = !DILocation(line: 562, column: 14, scope: !1413)
!1436 = !DILocation(line: 562, column: 17, scope: !1413)
!1437 = !DILocation(line: 562, column: 25, scope: !1413)
!1438 = !DILocation(line: 562, column: 53, scope: !1413)
!1439 = !DILocation(line: 562, column: 33, scope: !1413)
!1440 = !DILocation(line: 562, column: 42, scope: !1413)
!1441 = !DILocation(line: 562, column: 45, scope: !1413)
!1442 = !DILocation(line: 562, column: 51, scope: !1413)
!1443 = !DILocation(line: 563, column: 4, scope: !1413)
!1444 = !DILocation(line: 557, column: 27, scope: !1408)
!1445 = !DILocation(line: 557, column: 4, scope: !1408)
!1446 = distinct !{!1446, !1411, !1447}
!1447 = !DILocation(line: 563, column: 4, scope: !1404)
!1448 = !DILocation(line: 564, column: 19, scope: !1405)
!1449 = !DILocation(line: 564, column: 41, scope: !1405)
!1450 = !DILocation(line: 564, column: 51, scope: !1405)
!1451 = !DILocation(line: 564, column: 64, scope: !1405)
!1452 = !DILocation(line: 564, column: 72, scope: !1405)
!1453 = !DILocation(line: 564, column: 4, scope: !1405)
!1454 = !DILocation(line: 565, column: 3, scope: !1405)
!1455 = !DILocation(line: 567, column: 19, scope: !1400)
!1456 = !DILocation(line: 567, column: 41, scope: !1400)
!1457 = !DILocation(line: 567, column: 51, scope: !1400)
!1458 = !DILocation(line: 567, column: 59, scope: !1400)
!1459 = !DILocation(line: 567, column: 4, scope: !1400)
!1460 = !DILocation(line: 568, column: 2, scope: !1385)
!1461 = !DILocation(line: 548, column: 25, scope: !1381)
!1462 = !DILocation(line: 548, column: 2, scope: !1381)
!1463 = distinct !{!1463, !1383, !1464}
!1464 = !DILocation(line: 568, column: 2, scope: !1378)
!1465 = !DILocation(line: 570, column: 6, scope: !1466)
!1466 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 570, column: 6)
!1467 = !DILocation(line: 570, column: 14, scope: !1466)
!1468 = !DILocation(line: 570, column: 6, scope: !1000)
!1469 = !DILocation(line: 570, column: 29, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !1466, file: !1, line: 570, column: 22)
!1471 = !DILocation(line: 570, column: 24, scope: !1470)
!1472 = !DILocation(line: 570, column: 40, scope: !1470)
!1473 = !DILocation(line: 571, column: 7, scope: !1000)
!1474 = !DILocation(line: 571, column: 2, scope: !1000)
!1475 = !DILocation(line: 572, column: 7, scope: !1000)
!1476 = !DILocation(line: 572, column: 2, scope: !1000)
!1477 = !DILocation(line: 573, column: 7, scope: !1000)
!1478 = !DILocation(line: 573, column: 2, scope: !1000)
!1479 = !DILocation(line: 574, column: 1, scope: !1000)
!1480 = distinct !DISubprogram(name: "GetPosition", scope: !1, file: !1, line: 875, type: !1481, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!29, !91, !83}
!1483 = !DILocalVariable(name: "pContext", arg: 1, scope: !1480, file: !1, line: 875, type: !91)
!1484 = !DILocation(line: 875, column: 53, scope: !1480)
!1485 = !DILocalVariable(name: "index", arg: 2, scope: !1480, file: !1, line: 875, type: !83)
!1486 = !DILocation(line: 875, column: 73, scope: !1480)
!1487 = !DILocalVariable(name: "iF", scope: !1480, file: !1, line: 877, type: !7)
!1488 = !DILocation(line: 877, column: 6, scope: !1480)
!1489 = !DILocalVariable(name: "iI", scope: !1480, file: !1, line: 877, type: !7)
!1490 = !DILocation(line: 877, column: 10, scope: !1480)
!1491 = !DILocalVariable(name: "res", scope: !1480, file: !1, line: 878, type: !29)
!1492 = !DILocation(line: 878, column: 8, scope: !1480)
!1493 = !DILocalVariable(name: "pos", scope: !1480, file: !1, line: 878, type: !61)
!1494 = !DILocation(line: 878, column: 19, scope: !1480)
!1495 = !DILocation(line: 879, column: 24, scope: !1480)
!1496 = !DILocation(line: 879, column: 2, scope: !1480)
!1497 = !DILocation(line: 880, column: 2, scope: !1480)
!1498 = !DILocation(line: 880, column: 12, scope: !1480)
!1499 = !DILocation(line: 880, column: 26, scope: !1480)
!1500 = !DILocation(line: 880, column: 40, scope: !1480)
!1501 = !DILocation(line: 880, column: 50, scope: !1480)
!1502 = !DILocation(line: 880, column: 55, scope: !1480)
!1503 = !DILocation(line: 880, column: 59, scope: !1480)
!1504 = !DILocation(line: 881, column: 8, scope: !1480)
!1505 = !DILocation(line: 881, column: 6, scope: !1480)
!1506 = !DILocation(line: 881, column: 7, scope: !1480)
!1507 = !DILocation(line: 881, column: 22, scope: !1480)
!1508 = !DILocation(line: 881, column: 20, scope: !1480)
!1509 = !DILocation(line: 881, column: 21, scope: !1480)
!1510 = !DILocation(line: 881, column: 36, scope: !1480)
!1511 = !DILocation(line: 881, column: 34, scope: !1480)
!1512 = !DILocation(line: 881, column: 35, scope: !1480)
!1513 = !DILocation(line: 882, column: 2, scope: !1480)
!1514 = distinct !DISubprogram(name: "veq", scope: !1, file: !1, line: 47, type: !1515, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!26, !322, !322}
!1517 = !DILocalVariable(name: "v1", arg: 1, scope: !1514, file: !1, line: 47, type: !322)
!1518 = !DILocation(line: 47, column: 33, scope: !1514)
!1519 = !DILocalVariable(name: "v2", arg: 2, scope: !1514, file: !1, line: 47, type: !322)
!1520 = !DILocation(line: 47, column: 49, scope: !1514)
!1521 = !DILocation(line: 49, column: 13, scope: !1514)
!1522 = !DILocation(line: 49, column: 21, scope: !1514)
!1523 = !DILocation(line: 49, column: 15, scope: !1514)
!1524 = !DILocation(line: 49, column: 24, scope: !1514)
!1525 = !DILocation(line: 49, column: 31, scope: !1514)
!1526 = !DILocation(line: 49, column: 39, scope: !1514)
!1527 = !DILocation(line: 49, column: 33, scope: !1514)
!1528 = !DILocation(line: 49, column: 42, scope: !1514)
!1529 = !DILocation(line: 49, column: 49, scope: !1514)
!1530 = !DILocation(line: 49, column: 57, scope: !1514)
!1531 = !DILocation(line: 49, column: 51, scope: !1514)
!1532 = !DILocation(line: 0, scope: !1514)
!1533 = !DILocation(line: 49, column: 2, scope: !1514)
!1534 = distinct !DISubprogram(name: "DegenPrologue", scope: !1, file: !1, line: 1729, type: !1535, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{null, !8, !6, !83, !83}
!1537 = !DILocalVariable(name: "pTriInfos", arg: 1, scope: !1534, file: !1, line: 1729, type: !8)
!1538 = !DILocation(line: 1729, column: 36, scope: !1534)
!1539 = !DILocalVariable(name: "piTriList_out", arg: 2, scope: !1534, file: !1, line: 1729, type: !6)
!1540 = !DILocation(line: 1729, column: 53, scope: !1534)
!1541 = !DILocalVariable(name: "iNrTrianglesIn", arg: 3, scope: !1534, file: !1, line: 1729, type: !83)
!1542 = !DILocation(line: 1729, column: 80, scope: !1534)
!1543 = !DILocalVariable(name: "iTotTris", arg: 4, scope: !1534, file: !1, line: 1729, type: !83)
!1544 = !DILocation(line: 1729, column: 106, scope: !1534)
!1545 = !DILocalVariable(name: "iNextGoodTriangleSearchIndex", scope: !1534, file: !1, line: 1731, type: !7)
!1546 = !DILocation(line: 1731, column: 6, scope: !1534)
!1547 = !DILocalVariable(name: "bStillFindingGoodOnes", scope: !1534, file: !1, line: 1732, type: !26)
!1548 = !DILocation(line: 1732, column: 8, scope: !1534)
!1549 = !DILocalVariable(name: "t", scope: !1534, file: !1, line: 1735, type: !7)
!1550 = !DILocation(line: 1735, column: 6, scope: !1534)
!1551 = !DILocation(line: 1736, column: 2, scope: !1534)
!1552 = !DILocation(line: 1736, column: 9, scope: !1534)
!1553 = !DILocation(line: 1736, column: 12, scope: !1534)
!1554 = !DILocation(line: 1736, column: 20, scope: !1534)
!1555 = !DILocation(line: 1736, column: 10, scope: !1534)
!1556 = !DILocalVariable(name: "iFO_a", scope: !1557, file: !1, line: 1738, type: !83)
!1557 = distinct !DILexicalBlock(scope: !1534, file: !1, line: 1737, column: 2)
!1558 = !DILocation(line: 1738, column: 13, scope: !1557)
!1559 = !DILocation(line: 1738, column: 21, scope: !1557)
!1560 = !DILocation(line: 1738, column: 31, scope: !1557)
!1561 = !DILocation(line: 1738, column: 34, scope: !1557)
!1562 = !DILocalVariable(name: "iFO_b", scope: !1557, file: !1, line: 1739, type: !83)
!1563 = !DILocation(line: 1739, column: 13, scope: !1557)
!1564 = !DILocation(line: 1739, column: 21, scope: !1557)
!1565 = !DILocation(line: 1739, column: 31, scope: !1557)
!1566 = !DILocation(line: 1739, column: 32, scope: !1557)
!1567 = !DILocation(line: 1739, column: 36, scope: !1557)
!1568 = !DILocation(line: 1740, column: 7, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1557, file: !1, line: 1740, column: 7)
!1570 = !DILocation(line: 1740, column: 14, scope: !1569)
!1571 = !DILocation(line: 1740, column: 12, scope: !1569)
!1572 = !DILocation(line: 1740, column: 7, scope: !1557)
!1573 = !DILocalVariable(name: "bIsDeg_a", scope: !1574, file: !1, line: 1742, type: !126)
!1574 = distinct !DILexicalBlock(scope: !1569, file: !1, line: 1741, column: 3)
!1575 = !DILocation(line: 1742, column: 16, scope: !1574)
!1576 = !DILocation(line: 1742, column: 28, scope: !1574)
!1577 = !DILocation(line: 1742, column: 38, scope: !1574)
!1578 = !DILocation(line: 1742, column: 41, scope: !1574)
!1579 = !DILocation(line: 1742, column: 46, scope: !1574)
!1580 = !DILocation(line: 1742, column: 63, scope: !1574)
!1581 = !DILocation(line: 1742, column: 27, scope: !1574)
!1582 = !DILocalVariable(name: "bIsDeg_b", scope: !1574, file: !1, line: 1743, type: !126)
!1583 = !DILocation(line: 1743, column: 16, scope: !1574)
!1584 = !DILocation(line: 1743, column: 28, scope: !1574)
!1585 = !DILocation(line: 1743, column: 38, scope: !1574)
!1586 = !DILocation(line: 1743, column: 39, scope: !1574)
!1587 = !DILocation(line: 1743, column: 43, scope: !1574)
!1588 = !DILocation(line: 1743, column: 48, scope: !1574)
!1589 = !DILocation(line: 1743, column: 65, scope: !1574)
!1590 = !DILocation(line: 1743, column: 27, scope: !1574)
!1591 = !DILocation(line: 1744, column: 9, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !1574, file: !1, line: 1744, column: 8)
!1593 = !DILocation(line: 1744, column: 18, scope: !1592)
!1594 = !DILocation(line: 1744, column: 17, scope: !1592)
!1595 = !DILocation(line: 1744, column: 27, scope: !1592)
!1596 = !DILocation(line: 1744, column: 8, scope: !1574)
!1597 = !DILocation(line: 1746, column: 5, scope: !1598)
!1598 = distinct !DILexicalBlock(scope: !1592, file: !1, line: 1745, column: 4)
!1599 = !DILocation(line: 1746, column: 15, scope: !1598)
!1600 = !DILocation(line: 1746, column: 18, scope: !1598)
!1601 = !DILocation(line: 1746, column: 24, scope: !1598)
!1602 = !DILocation(line: 1747, column: 5, scope: !1598)
!1603 = !DILocation(line: 1747, column: 15, scope: !1598)
!1604 = !DILocation(line: 1747, column: 16, scope: !1598)
!1605 = !DILocation(line: 1747, column: 20, scope: !1598)
!1606 = !DILocation(line: 1747, column: 26, scope: !1598)
!1607 = !DILocation(line: 1748, column: 4, scope: !1598)
!1608 = !DILocation(line: 1749, column: 6, scope: !1574)
!1609 = !DILocation(line: 1750, column: 3, scope: !1574)
!1610 = !DILocation(line: 1752, column: 4, scope: !1569)
!1611 = distinct !{!1611, !1551, !1612}
!1612 = !DILocation(line: 1753, column: 2, scope: !1534)
!1613 = !DILocation(line: 1757, column: 31, scope: !1534)
!1614 = !DILocation(line: 1758, column: 3, scope: !1534)
!1615 = !DILocation(line: 1759, column: 24, scope: !1534)
!1616 = !DILocation(line: 1760, column: 2, scope: !1534)
!1617 = !DILocation(line: 1760, column: 9, scope: !1534)
!1618 = !DILocation(line: 1760, column: 11, scope: !1534)
!1619 = !DILocation(line: 1760, column: 10, scope: !1534)
!1620 = !DILocation(line: 1760, column: 26, scope: !1534)
!1621 = !DILocation(line: 1760, column: 29, scope: !1534)
!1622 = !DILocation(line: 0, scope: !1534)
!1623 = !DILocalVariable(name: "bIsGood", scope: !1624, file: !1, line: 1762, type: !126)
!1624 = distinct !DILexicalBlock(scope: !1534, file: !1, line: 1761, column: 2)
!1625 = !DILocation(line: 1762, column: 15, scope: !1624)
!1626 = !DILocation(line: 1762, column: 26, scope: !1624)
!1627 = !DILocation(line: 1762, column: 36, scope: !1624)
!1628 = !DILocation(line: 1762, column: 39, scope: !1624)
!1629 = !DILocation(line: 1762, column: 44, scope: !1624)
!1630 = !DILocation(line: 1762, column: 61, scope: !1624)
!1631 = !DILocation(line: 1762, column: 25, scope: !1624)
!1632 = !DILocation(line: 1763, column: 7, scope: !1633)
!1633 = distinct !DILexicalBlock(scope: !1624, file: !1, line: 1763, column: 7)
!1634 = !DILocation(line: 1763, column: 7, scope: !1624)
!1635 = !DILocation(line: 1765, column: 8, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 1765, column: 8)
!1637 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 1764, column: 3)
!1638 = !DILocation(line: 1765, column: 40, scope: !1636)
!1639 = !DILocation(line: 1765, column: 41, scope: !1636)
!1640 = !DILocation(line: 1765, column: 37, scope: !1636)
!1641 = !DILocation(line: 1765, column: 8, scope: !1637)
!1642 = !DILocation(line: 1766, column: 36, scope: !1636)
!1643 = !DILocation(line: 1766, column: 37, scope: !1636)
!1644 = !DILocation(line: 1766, column: 34, scope: !1636)
!1645 = !DILocation(line: 1766, column: 5, scope: !1636)
!1646 = !DILocation(line: 1767, column: 3, scope: !1637)
!1647 = !DILocalVariable(name: "t0", scope: !1648, file: !1, line: 1770, type: !7)
!1648 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 1769, column: 3)
!1649 = !DILocation(line: 1770, column: 8, scope: !1648)
!1650 = !DILocalVariable(name: "t1", scope: !1648, file: !1, line: 1770, type: !7)
!1651 = !DILocation(line: 1770, column: 12, scope: !1648)
!1652 = !DILocalVariable(name: "bJustADegenerate", scope: !1648, file: !1, line: 1772, type: !26)
!1653 = !DILocation(line: 1772, column: 10, scope: !1648)
!1654 = !DILocation(line: 1773, column: 4, scope: !1648)
!1655 = !DILocation(line: 1773, column: 11, scope: !1648)
!1656 = !DILocation(line: 1773, column: 28, scope: !1648)
!1657 = !DILocation(line: 1773, column: 31, scope: !1648)
!1658 = !DILocation(line: 1773, column: 60, scope: !1648)
!1659 = !DILocation(line: 1773, column: 59, scope: !1648)
!1660 = !DILocation(line: 0, scope: !1648)
!1661 = !DILocalVariable(name: "bIsGood", scope: !1662, file: !1, line: 1775, type: !126)
!1662 = distinct !DILexicalBlock(scope: !1648, file: !1, line: 1774, column: 4)
!1663 = !DILocation(line: 1775, column: 17, scope: !1662)
!1664 = !DILocation(line: 1775, column: 28, scope: !1662)
!1665 = !DILocation(line: 1775, column: 38, scope: !1662)
!1666 = !DILocation(line: 1775, column: 68, scope: !1662)
!1667 = !DILocation(line: 1775, column: 73, scope: !1662)
!1668 = !DILocation(line: 1775, column: 90, scope: !1662)
!1669 = !DILocation(line: 1775, column: 27, scope: !1662)
!1670 = !DILocation(line: 1776, column: 9, scope: !1671)
!1671 = distinct !DILexicalBlock(scope: !1662, file: !1, line: 1776, column: 9)
!1672 = !DILocation(line: 1776, column: 9, scope: !1662)
!1673 = !DILocation(line: 1776, column: 34, scope: !1671)
!1674 = !DILocation(line: 1776, column: 18, scope: !1671)
!1675 = !DILocation(line: 1777, column: 10, scope: !1671)
!1676 = distinct !{!1676, !1654, !1677}
!1677 = !DILocation(line: 1778, column: 4, scope: !1648)
!1678 = !DILocation(line: 1780, column: 9, scope: !1648)
!1679 = !DILocation(line: 1780, column: 7, scope: !1648)
!1680 = !DILocation(line: 1781, column: 9, scope: !1648)
!1681 = !DILocation(line: 1781, column: 7, scope: !1648)
!1682 = !DILocation(line: 1782, column: 4, scope: !1648)
!1683 = !DILocation(line: 1786, column: 9, scope: !1684)
!1684 = distinct !DILexicalBlock(scope: !1648, file: !1, line: 1786, column: 8)
!1685 = !DILocation(line: 1786, column: 8, scope: !1648)
!1686 = !DILocalVariable(name: "i", scope: !1687, file: !1, line: 1788, type: !7)
!1687 = distinct !DILexicalBlock(scope: !1684, file: !1, line: 1787, column: 4)
!1688 = !DILocation(line: 1788, column: 9, scope: !1687)
!1689 = !DILocation(line: 1789, column: 11, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1687, file: !1, line: 1789, column: 5)
!1691 = !DILocation(line: 1789, column: 10, scope: !1690)
!1692 = !DILocation(line: 1789, column: 15, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 1789, column: 5)
!1694 = !DILocation(line: 1789, column: 16, scope: !1693)
!1695 = !DILocation(line: 1789, column: 5, scope: !1690)
!1696 = !DILocalVariable(name: "index", scope: !1697, file: !1, line: 1791, type: !83)
!1697 = distinct !DILexicalBlock(scope: !1693, file: !1, line: 1790, column: 5)
!1698 = !DILocation(line: 1791, column: 16, scope: !1697)
!1699 = !DILocation(line: 1791, column: 24, scope: !1697)
!1700 = !DILocation(line: 1791, column: 38, scope: !1697)
!1701 = !DILocation(line: 1791, column: 40, scope: !1697)
!1702 = !DILocation(line: 1791, column: 43, scope: !1697)
!1703 = !DILocation(line: 1791, column: 42, scope: !1697)
!1704 = !DILocation(line: 1792, column: 30, scope: !1697)
!1705 = !DILocation(line: 1792, column: 44, scope: !1697)
!1706 = !DILocation(line: 1792, column: 46, scope: !1697)
!1707 = !DILocation(line: 1792, column: 49, scope: !1697)
!1708 = !DILocation(line: 1792, column: 48, scope: !1697)
!1709 = !DILocation(line: 1792, column: 6, scope: !1697)
!1710 = !DILocation(line: 1792, column: 20, scope: !1697)
!1711 = !DILocation(line: 1792, column: 22, scope: !1697)
!1712 = !DILocation(line: 1792, column: 25, scope: !1697)
!1713 = !DILocation(line: 1792, column: 24, scope: !1697)
!1714 = !DILocation(line: 1792, column: 28, scope: !1697)
!1715 = !DILocation(line: 1793, column: 30, scope: !1697)
!1716 = !DILocation(line: 1793, column: 6, scope: !1697)
!1717 = !DILocation(line: 1793, column: 20, scope: !1697)
!1718 = !DILocation(line: 1793, column: 22, scope: !1697)
!1719 = !DILocation(line: 1793, column: 25, scope: !1697)
!1720 = !DILocation(line: 1793, column: 24, scope: !1697)
!1721 = !DILocation(line: 1793, column: 28, scope: !1697)
!1722 = !DILocation(line: 1794, column: 5, scope: !1697)
!1723 = !DILocation(line: 1789, column: 21, scope: !1693)
!1724 = !DILocation(line: 1789, column: 5, scope: !1693)
!1725 = distinct !{!1725, !1695, !1726}
!1726 = !DILocation(line: 1794, column: 5, scope: !1690)
!1727 = !DILocalVariable(name: "tri_info", scope: !1728, file: !1, line: 1796, type: !1729)
!1728 = distinct !DILexicalBlock(scope: !1687, file: !1, line: 1795, column: 5)
!1729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!1730 = !DILocation(line: 1796, column: 21, scope: !1728)
!1731 = !DILocation(line: 1796, column: 32, scope: !1728)
!1732 = !DILocation(line: 1796, column: 42, scope: !1728)
!1733 = !DILocation(line: 1797, column: 6, scope: !1728)
!1734 = !DILocation(line: 1797, column: 16, scope: !1728)
!1735 = !DILocation(line: 1797, column: 22, scope: !1728)
!1736 = !DILocation(line: 1797, column: 32, scope: !1728)
!1737 = !DILocation(line: 1798, column: 6, scope: !1728)
!1738 = !DILocation(line: 1798, column: 16, scope: !1728)
!1739 = !DILocation(line: 1798, column: 22, scope: !1728)
!1740 = !DILocation(line: 1800, column: 4, scope: !1687)
!1741 = !DILocation(line: 1802, column: 27, scope: !1684)
!1742 = !DILocation(line: 1805, column: 7, scope: !1743)
!1743 = distinct !DILexicalBlock(scope: !1624, file: !1, line: 1805, column: 7)
!1744 = !DILocation(line: 1805, column: 7, scope: !1624)
!1745 = !DILocation(line: 1805, column: 30, scope: !1743)
!1746 = distinct !{!1746, !1616, !1747}
!1747 = !DILocation(line: 1806, column: 2, scope: !1534)
!1748 = !DILocation(line: 1810, column: 1, scope: !1534)
!1749 = distinct !DISubprogram(name: "InitTriInfo", scope: !1, file: !1, line: 937, type: !1750, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{null, !8, !1752, !91, !83}
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!1753 = !DILocalVariable(name: "pTriInfos", arg: 1, scope: !1749, file: !1, line: 937, type: !8)
!1754 = !DILocation(line: 937, column: 34, scope: !1749)
!1755 = !DILocalVariable(name: "piTriListIn", arg: 2, scope: !1749, file: !1, line: 937, type: !1752)
!1756 = !DILocation(line: 937, column: 57, scope: !1749)
!1757 = !DILocalVariable(name: "pContext", arg: 3, scope: !1749, file: !1, line: 937, type: !91)
!1758 = !DILocation(line: 937, column: 99, scope: !1749)
!1759 = !DILocalVariable(name: "iNrTrianglesIn", arg: 4, scope: !1749, file: !1, line: 937, type: !83)
!1760 = !DILocation(line: 937, column: 119, scope: !1749)
!1761 = !DILocalVariable(name: "f", scope: !1749, file: !1, line: 939, type: !7)
!1762 = !DILocation(line: 939, column: 6, scope: !1749)
!1763 = !DILocalVariable(name: "i", scope: !1749, file: !1, line: 939, type: !7)
!1764 = !DILocation(line: 939, column: 11, scope: !1749)
!1765 = !DILocalVariable(name: "t", scope: !1749, file: !1, line: 939, type: !7)
!1766 = !DILocation(line: 939, column: 16, scope: !1749)
!1767 = !DILocation(line: 943, column: 8, scope: !1768)
!1768 = distinct !DILexicalBlock(scope: !1749, file: !1, line: 943, column: 2)
!1769 = !DILocation(line: 943, column: 7, scope: !1768)
!1770 = !DILocation(line: 943, column: 12, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1768, file: !1, line: 943, column: 2)
!1772 = !DILocation(line: 943, column: 14, scope: !1771)
!1773 = !DILocation(line: 943, column: 13, scope: !1771)
!1774 = !DILocation(line: 943, column: 2, scope: !1768)
!1775 = !DILocation(line: 944, column: 9, scope: !1776)
!1776 = distinct !DILexicalBlock(scope: !1771, file: !1, line: 944, column: 3)
!1777 = !DILocation(line: 944, column: 8, scope: !1776)
!1778 = !DILocation(line: 944, column: 13, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1776, file: !1, line: 944, column: 3)
!1780 = !DILocation(line: 944, column: 14, scope: !1779)
!1781 = !DILocation(line: 944, column: 3, scope: !1776)
!1782 = !DILocation(line: 946, column: 4, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !1779, file: !1, line: 945, column: 3)
!1784 = !DILocation(line: 946, column: 14, scope: !1783)
!1785 = !DILocation(line: 946, column: 17, scope: !1783)
!1786 = !DILocation(line: 946, column: 31, scope: !1783)
!1787 = !DILocation(line: 946, column: 34, scope: !1783)
!1788 = !DILocation(line: 947, column: 4, scope: !1783)
!1789 = !DILocation(line: 947, column: 14, scope: !1783)
!1790 = !DILocation(line: 947, column: 17, scope: !1783)
!1791 = !DILocation(line: 947, column: 31, scope: !1783)
!1792 = !DILocation(line: 947, column: 34, scope: !1783)
!1793 = !DILocation(line: 949, column: 4, scope: !1783)
!1794 = !DILocation(line: 949, column: 14, scope: !1783)
!1795 = !DILocation(line: 949, column: 17, scope: !1783)
!1796 = !DILocation(line: 949, column: 21, scope: !1783)
!1797 = !DILocation(line: 949, column: 22, scope: !1783)
!1798 = !DILocation(line: 949, column: 29, scope: !1783)
!1799 = !DILocation(line: 949, column: 39, scope: !1783)
!1800 = !DILocation(line: 949, column: 42, scope: !1783)
!1801 = !DILocation(line: 949, column: 46, scope: !1783)
!1802 = !DILocation(line: 949, column: 47, scope: !1783)
!1803 = !DILocation(line: 949, column: 54, scope: !1783)
!1804 = !DILocation(line: 949, column: 64, scope: !1783)
!1805 = !DILocation(line: 949, column: 67, scope: !1783)
!1806 = !DILocation(line: 949, column: 71, scope: !1783)
!1807 = !DILocation(line: 949, column: 72, scope: !1783)
!1808 = !DILocation(line: 950, column: 4, scope: !1783)
!1809 = !DILocation(line: 950, column: 14, scope: !1783)
!1810 = !DILocation(line: 950, column: 17, scope: !1783)
!1811 = !DILocation(line: 950, column: 21, scope: !1783)
!1812 = !DILocation(line: 950, column: 22, scope: !1783)
!1813 = !DILocation(line: 950, column: 29, scope: !1783)
!1814 = !DILocation(line: 950, column: 39, scope: !1783)
!1815 = !DILocation(line: 950, column: 42, scope: !1783)
!1816 = !DILocation(line: 950, column: 46, scope: !1783)
!1817 = !DILocation(line: 950, column: 47, scope: !1783)
!1818 = !DILocation(line: 950, column: 54, scope: !1783)
!1819 = !DILocation(line: 950, column: 64, scope: !1783)
!1820 = !DILocation(line: 950, column: 67, scope: !1783)
!1821 = !DILocation(line: 950, column: 71, scope: !1783)
!1822 = !DILocation(line: 950, column: 72, scope: !1783)
!1823 = !DILocation(line: 951, column: 4, scope: !1783)
!1824 = !DILocation(line: 951, column: 14, scope: !1783)
!1825 = !DILocation(line: 951, column: 17, scope: !1783)
!1826 = !DILocation(line: 951, column: 23, scope: !1783)
!1827 = !DILocation(line: 952, column: 4, scope: !1783)
!1828 = !DILocation(line: 952, column: 14, scope: !1783)
!1829 = !DILocation(line: 952, column: 17, scope: !1783)
!1830 = !DILocation(line: 952, column: 23, scope: !1783)
!1831 = !DILocation(line: 955, column: 4, scope: !1783)
!1832 = !DILocation(line: 955, column: 14, scope: !1783)
!1833 = !DILocation(line: 955, column: 17, scope: !1783)
!1834 = !DILocation(line: 955, column: 23, scope: !1783)
!1835 = !DILocation(line: 956, column: 3, scope: !1783)
!1836 = !DILocation(line: 944, column: 19, scope: !1779)
!1837 = !DILocation(line: 944, column: 3, scope: !1779)
!1838 = distinct !{!1838, !1781, !1839}
!1839 = !DILocation(line: 956, column: 3, scope: !1776)
!1840 = !DILocation(line: 943, column: 31, scope: !1771)
!1841 = !DILocation(line: 943, column: 2, scope: !1771)
!1842 = distinct !{!1842, !1774, !1843}
!1843 = !DILocation(line: 956, column: 3, scope: !1768)
!1844 = !DILocation(line: 959, column: 8, scope: !1845)
!1845 = distinct !DILexicalBlock(scope: !1749, file: !1, line: 959, column: 2)
!1846 = !DILocation(line: 959, column: 7, scope: !1845)
!1847 = !DILocation(line: 959, column: 12, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1845, file: !1, line: 959, column: 2)
!1849 = !DILocation(line: 959, column: 14, scope: !1848)
!1850 = !DILocation(line: 959, column: 13, scope: !1848)
!1851 = !DILocation(line: 959, column: 2, scope: !1845)
!1852 = !DILocalVariable(name: "v1", scope: !1853, file: !1, line: 962, type: !322)
!1853 = distinct !DILexicalBlock(scope: !1848, file: !1, line: 960, column: 2)
!1854 = !DILocation(line: 962, column: 15, scope: !1853)
!1855 = !DILocation(line: 962, column: 32, scope: !1853)
!1856 = !DILocation(line: 962, column: 42, scope: !1853)
!1857 = !DILocation(line: 962, column: 54, scope: !1853)
!1858 = !DILocation(line: 962, column: 55, scope: !1853)
!1859 = !DILocation(line: 962, column: 57, scope: !1853)
!1860 = !DILocation(line: 962, column: 20, scope: !1853)
!1861 = !DILocalVariable(name: "v2", scope: !1853, file: !1, line: 963, type: !322)
!1862 = !DILocation(line: 963, column: 15, scope: !1853)
!1863 = !DILocation(line: 963, column: 32, scope: !1853)
!1864 = !DILocation(line: 963, column: 42, scope: !1853)
!1865 = !DILocation(line: 963, column: 54, scope: !1853)
!1866 = !DILocation(line: 963, column: 55, scope: !1853)
!1867 = !DILocation(line: 963, column: 57, scope: !1853)
!1868 = !DILocation(line: 963, column: 20, scope: !1853)
!1869 = !DILocalVariable(name: "v3", scope: !1853, file: !1, line: 964, type: !322)
!1870 = !DILocation(line: 964, column: 15, scope: !1853)
!1871 = !DILocation(line: 964, column: 32, scope: !1853)
!1872 = !DILocation(line: 964, column: 42, scope: !1853)
!1873 = !DILocation(line: 964, column: 54, scope: !1853)
!1874 = !DILocation(line: 964, column: 55, scope: !1853)
!1875 = !DILocation(line: 964, column: 57, scope: !1853)
!1876 = !DILocation(line: 964, column: 20, scope: !1853)
!1877 = !DILocalVariable(name: "t1", scope: !1853, file: !1, line: 965, type: !322)
!1878 = !DILocation(line: 965, column: 15, scope: !1853)
!1879 = !DILocation(line: 965, column: 32, scope: !1853)
!1880 = !DILocation(line: 965, column: 42, scope: !1853)
!1881 = !DILocation(line: 965, column: 54, scope: !1853)
!1882 = !DILocation(line: 965, column: 55, scope: !1853)
!1883 = !DILocation(line: 965, column: 57, scope: !1853)
!1884 = !DILocation(line: 965, column: 20, scope: !1853)
!1885 = !DILocalVariable(name: "t2", scope: !1853, file: !1, line: 966, type: !322)
!1886 = !DILocation(line: 966, column: 15, scope: !1853)
!1887 = !DILocation(line: 966, column: 32, scope: !1853)
!1888 = !DILocation(line: 966, column: 42, scope: !1853)
!1889 = !DILocation(line: 966, column: 54, scope: !1853)
!1890 = !DILocation(line: 966, column: 55, scope: !1853)
!1891 = !DILocation(line: 966, column: 57, scope: !1853)
!1892 = !DILocation(line: 966, column: 20, scope: !1853)
!1893 = !DILocalVariable(name: "t3", scope: !1853, file: !1, line: 967, type: !322)
!1894 = !DILocation(line: 967, column: 15, scope: !1853)
!1895 = !DILocation(line: 967, column: 32, scope: !1853)
!1896 = !DILocation(line: 967, column: 42, scope: !1853)
!1897 = !DILocation(line: 967, column: 54, scope: !1853)
!1898 = !DILocation(line: 967, column: 55, scope: !1853)
!1899 = !DILocation(line: 967, column: 57, scope: !1853)
!1900 = !DILocation(line: 967, column: 20, scope: !1853)
!1901 = !DILocalVariable(name: "t21x", scope: !1853, file: !1, line: 969, type: !121)
!1902 = !DILocation(line: 969, column: 15, scope: !1853)
!1903 = !DILocation(line: 969, column: 25, scope: !1853)
!1904 = !DILocation(line: 969, column: 30, scope: !1853)
!1905 = !DILocation(line: 969, column: 26, scope: !1853)
!1906 = !DILocalVariable(name: "t21y", scope: !1853, file: !1, line: 970, type: !121)
!1907 = !DILocation(line: 970, column: 15, scope: !1853)
!1908 = !DILocation(line: 970, column: 25, scope: !1853)
!1909 = !DILocation(line: 970, column: 30, scope: !1853)
!1910 = !DILocation(line: 970, column: 26, scope: !1853)
!1911 = !DILocalVariable(name: "t31x", scope: !1853, file: !1, line: 971, type: !121)
!1912 = !DILocation(line: 971, column: 15, scope: !1853)
!1913 = !DILocation(line: 971, column: 25, scope: !1853)
!1914 = !DILocation(line: 971, column: 30, scope: !1853)
!1915 = !DILocation(line: 971, column: 26, scope: !1853)
!1916 = !DILocalVariable(name: "t31y", scope: !1853, file: !1, line: 972, type: !121)
!1917 = !DILocation(line: 972, column: 15, scope: !1853)
!1918 = !DILocation(line: 972, column: 25, scope: !1853)
!1919 = !DILocation(line: 972, column: 30, scope: !1853)
!1920 = !DILocation(line: 972, column: 26, scope: !1853)
!1921 = !DILocalVariable(name: "d1", scope: !1853, file: !1, line: 973, type: !322)
!1922 = !DILocation(line: 973, column: 15, scope: !1853)
!1923 = !DILocation(line: 973, column: 20, scope: !1853)
!1924 = !DILocalVariable(name: "d2", scope: !1853, file: !1, line: 974, type: !322)
!1925 = !DILocation(line: 974, column: 15, scope: !1853)
!1926 = !DILocation(line: 974, column: 20, scope: !1853)
!1927 = !DILocalVariable(name: "fSignedAreaSTx2", scope: !1853, file: !1, line: 976, type: !121)
!1928 = !DILocation(line: 976, column: 15, scope: !1853)
!1929 = !DILocation(line: 976, column: 33, scope: !1853)
!1930 = !DILocation(line: 976, column: 38, scope: !1853)
!1931 = !DILocation(line: 976, column: 37, scope: !1853)
!1932 = !DILocation(line: 976, column: 45, scope: !1853)
!1933 = !DILocation(line: 976, column: 50, scope: !1853)
!1934 = !DILocation(line: 976, column: 49, scope: !1853)
!1935 = !DILocation(line: 976, column: 43, scope: !1853)
!1936 = !DILocalVariable(name: "vOs", scope: !1853, file: !1, line: 978, type: !29)
!1937 = !DILocation(line: 978, column: 9, scope: !1853)
!1938 = !DILocation(line: 978, column: 27, scope: !1853)
!1939 = !DILocation(line: 978, column: 20, scope: !1853)
!1940 = !DILocation(line: 978, column: 44, scope: !1853)
!1941 = !DILocation(line: 978, column: 37, scope: !1853)
!1942 = !DILocation(line: 978, column: 15, scope: !1853)
!1943 = !DILocalVariable(name: "vOt", scope: !1853, file: !1, line: 979, type: !29)
!1944 = !DILocation(line: 979, column: 9, scope: !1853)
!1945 = !DILocation(line: 979, column: 28, scope: !1853)
!1946 = !DILocation(line: 979, column: 27, scope: !1853)
!1947 = !DILocation(line: 979, column: 20, scope: !1853)
!1948 = !DILocation(line: 979, column: 45, scope: !1853)
!1949 = !DILocation(line: 979, column: 38, scope: !1853)
!1950 = !DILocation(line: 979, column: 15, scope: !1853)
!1951 = !DILocation(line: 981, column: 26, scope: !1853)
!1952 = !DILocation(line: 981, column: 41, scope: !1853)
!1953 = !DILocation(line: 981, column: 3, scope: !1853)
!1954 = !DILocation(line: 981, column: 13, scope: !1853)
!1955 = !DILocation(line: 981, column: 16, scope: !1853)
!1956 = !DILocation(line: 981, column: 22, scope: !1853)
!1957 = !DILocation(line: 983, column: 16, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !1853, file: !1, line: 983, column: 8)
!1959 = !DILocation(line: 983, column: 8, scope: !1958)
!1960 = !DILocation(line: 983, column: 8, scope: !1853)
!1961 = !DILocalVariable(name: "fAbsArea", scope: !1962, file: !1, line: 985, type: !121)
!1962 = distinct !DILexicalBlock(scope: !1958, file: !1, line: 984, column: 3)
!1963 = !DILocation(line: 985, column: 16, scope: !1962)
!1964 = !DILocation(line: 985, column: 33, scope: !1962)
!1965 = !DILocation(line: 985, column: 27, scope: !1962)
!1966 = !DILocalVariable(name: "fLenOs", scope: !1962, file: !1, line: 986, type: !121)
!1967 = !DILocation(line: 986, column: 16, scope: !1962)
!1968 = !DILocation(line: 986, column: 25, scope: !1962)
!1969 = !DILocalVariable(name: "fLenOt", scope: !1962, file: !1, line: 987, type: !121)
!1970 = !DILocation(line: 987, column: 16, scope: !1962)
!1971 = !DILocation(line: 987, column: 25, scope: !1962)
!1972 = !DILocalVariable(name: "fS", scope: !1962, file: !1, line: 988, type: !121)
!1973 = !DILocation(line: 988, column: 16, scope: !1962)
!1974 = !DILocation(line: 988, column: 22, scope: !1962)
!1975 = !DILocation(line: 988, column: 32, scope: !1962)
!1976 = !DILocation(line: 988, column: 35, scope: !1962)
!1977 = !DILocation(line: 988, column: 40, scope: !1962)
!1978 = !DILocation(line: 988, column: 59, scope: !1962)
!1979 = !DILocation(line: 988, column: 21, scope: !1962)
!1980 = !DILocation(line: 989, column: 17, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !1962, file: !1, line: 989, column: 9)
!1982 = !DILocation(line: 989, column: 9, scope: !1981)
!1983 = !DILocation(line: 989, column: 9, scope: !1962)
!1984 = !DILocation(line: 989, column: 27, scope: !1981)
!1985 = !DILocation(line: 989, column: 37, scope: !1981)
!1986 = !DILocation(line: 989, column: 40, scope: !1981)
!1987 = !DILocation(line: 989, column: 53, scope: !1981)
!1988 = !DILocation(line: 989, column: 56, scope: !1981)
!1989 = !DILocation(line: 989, column: 55, scope: !1981)
!1990 = !DILocation(line: 989, column: 46, scope: !1981)
!1991 = !DILocation(line: 990, column: 17, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !1962, file: !1, line: 990, column: 9)
!1993 = !DILocation(line: 990, column: 9, scope: !1992)
!1994 = !DILocation(line: 990, column: 9, scope: !1962)
!1995 = !DILocation(line: 990, column: 27, scope: !1992)
!1996 = !DILocation(line: 990, column: 37, scope: !1992)
!1997 = !DILocation(line: 990, column: 40, scope: !1992)
!1998 = !DILocation(line: 990, column: 53, scope: !1992)
!1999 = !DILocation(line: 990, column: 56, scope: !1992)
!2000 = !DILocation(line: 990, column: 55, scope: !1992)
!2001 = !DILocation(line: 990, column: 46, scope: !1992)
!2002 = !DILocation(line: 993, column: 25, scope: !1962)
!2003 = !DILocation(line: 993, column: 34, scope: !1962)
!2004 = !DILocation(line: 993, column: 32, scope: !1962)
!2005 = !DILocation(line: 993, column: 4, scope: !1962)
!2006 = !DILocation(line: 993, column: 14, scope: !1962)
!2007 = !DILocation(line: 993, column: 17, scope: !1962)
!2008 = !DILocation(line: 993, column: 23, scope: !1962)
!2009 = !DILocation(line: 994, column: 25, scope: !1962)
!2010 = !DILocation(line: 994, column: 34, scope: !1962)
!2011 = !DILocation(line: 994, column: 32, scope: !1962)
!2012 = !DILocation(line: 994, column: 4, scope: !1962)
!2013 = !DILocation(line: 994, column: 14, scope: !1962)
!2014 = !DILocation(line: 994, column: 17, scope: !1962)
!2015 = !DILocation(line: 994, column: 23, scope: !1962)
!2016 = !DILocation(line: 997, column: 17, scope: !2017)
!2017 = distinct !DILexicalBlock(scope: !1962, file: !1, line: 997, column: 9)
!2018 = !DILocation(line: 997, column: 27, scope: !2017)
!2019 = !DILocation(line: 997, column: 30, scope: !2017)
!2020 = !DILocation(line: 997, column: 9, scope: !2017)
!2021 = !DILocation(line: 997, column: 37, scope: !2017)
!2022 = !DILocation(line: 997, column: 48, scope: !2017)
!2023 = !DILocation(line: 997, column: 58, scope: !2017)
!2024 = !DILocation(line: 997, column: 61, scope: !2017)
!2025 = !DILocation(line: 997, column: 40, scope: !2017)
!2026 = !DILocation(line: 997, column: 9, scope: !1962)
!2027 = !DILocation(line: 998, column: 5, scope: !2017)
!2028 = !DILocation(line: 998, column: 15, scope: !2017)
!2029 = !DILocation(line: 998, column: 18, scope: !2017)
!2030 = !DILocation(line: 998, column: 24, scope: !2017)
!2031 = !DILocation(line: 999, column: 3, scope: !1962)
!2032 = !DILocation(line: 1000, column: 2, scope: !1853)
!2033 = !DILocation(line: 959, column: 31, scope: !1848)
!2034 = !DILocation(line: 959, column: 2, scope: !1848)
!2035 = distinct !{!2035, !1851, !2036}
!2036 = !DILocation(line: 1000, column: 2, scope: !1845)
!2037 = !DILocation(line: 1003, column: 2, scope: !1749)
!2038 = !DILocation(line: 1003, column: 9, scope: !1749)
!2039 = !DILocation(line: 1003, column: 12, scope: !1749)
!2040 = !DILocation(line: 1003, column: 26, scope: !1749)
!2041 = !DILocation(line: 1003, column: 10, scope: !1749)
!2042 = !DILocalVariable(name: "iFO_a", scope: !2043, file: !1, line: 1005, type: !83)
!2043 = distinct !DILexicalBlock(scope: !1749, file: !1, line: 1004, column: 2)
!2044 = !DILocation(line: 1005, column: 13, scope: !2043)
!2045 = !DILocation(line: 1005, column: 21, scope: !2043)
!2046 = !DILocation(line: 1005, column: 31, scope: !2043)
!2047 = !DILocation(line: 1005, column: 34, scope: !2043)
!2048 = !DILocalVariable(name: "iFO_b", scope: !2043, file: !1, line: 1006, type: !83)
!2049 = !DILocation(line: 1006, column: 13, scope: !2043)
!2050 = !DILocation(line: 1006, column: 21, scope: !2043)
!2051 = !DILocation(line: 1006, column: 31, scope: !2043)
!2052 = !DILocation(line: 1006, column: 32, scope: !2043)
!2053 = !DILocation(line: 1006, column: 36, scope: !2043)
!2054 = !DILocation(line: 1007, column: 7, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2043, file: !1, line: 1007, column: 7)
!2056 = !DILocation(line: 1007, column: 14, scope: !2055)
!2057 = !DILocation(line: 1007, column: 12, scope: !2055)
!2058 = !DILocation(line: 1007, column: 7, scope: !2043)
!2059 = !DILocalVariable(name: "bIsDeg_a", scope: !2060, file: !1, line: 1009, type: !126)
!2060 = distinct !DILexicalBlock(scope: !2055, file: !1, line: 1008, column: 3)
!2061 = !DILocation(line: 1009, column: 16, scope: !2060)
!2062 = !DILocation(line: 1009, column: 28, scope: !2060)
!2063 = !DILocation(line: 1009, column: 38, scope: !2060)
!2064 = !DILocation(line: 1009, column: 41, scope: !2060)
!2065 = !DILocation(line: 1009, column: 46, scope: !2060)
!2066 = !DILocation(line: 1009, column: 63, scope: !2060)
!2067 = !DILocation(line: 1009, column: 27, scope: !2060)
!2068 = !DILocalVariable(name: "bIsDeg_b", scope: !2060, file: !1, line: 1010, type: !126)
!2069 = !DILocation(line: 1010, column: 16, scope: !2060)
!2070 = !DILocation(line: 1010, column: 28, scope: !2060)
!2071 = !DILocation(line: 1010, column: 38, scope: !2060)
!2072 = !DILocation(line: 1010, column: 39, scope: !2060)
!2073 = !DILocation(line: 1010, column: 43, scope: !2060)
!2074 = !DILocation(line: 1010, column: 48, scope: !2060)
!2075 = !DILocation(line: 1010, column: 65, scope: !2060)
!2076 = !DILocation(line: 1010, column: 27, scope: !2060)
!2077 = !DILocation(line: 1014, column: 9, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2060, file: !1, line: 1014, column: 8)
!2079 = !DILocation(line: 1014, column: 17, scope: !2078)
!2080 = !DILocation(line: 1014, column: 19, scope: !2078)
!2081 = !DILocation(line: 1014, column: 28, scope: !2078)
!2082 = !DILocation(line: 1014, column: 8, scope: !2060)
!2083 = !DILocalVariable(name: "bOrientA", scope: !2084, file: !1, line: 1016, type: !126)
!2084 = distinct !DILexicalBlock(scope: !2078, file: !1, line: 1015, column: 4)
!2085 = !DILocation(line: 1016, column: 17, scope: !2084)
!2086 = !DILocation(line: 1016, column: 29, scope: !2084)
!2087 = !DILocation(line: 1016, column: 39, scope: !2084)
!2088 = !DILocation(line: 1016, column: 42, scope: !2084)
!2089 = !DILocation(line: 1016, column: 47, scope: !2084)
!2090 = !DILocation(line: 1016, column: 66, scope: !2084)
!2091 = !DILocation(line: 1016, column: 28, scope: !2084)
!2092 = !DILocalVariable(name: "bOrientB", scope: !2084, file: !1, line: 1017, type: !126)
!2093 = !DILocation(line: 1017, column: 17, scope: !2084)
!2094 = !DILocation(line: 1017, column: 29, scope: !2084)
!2095 = !DILocation(line: 1017, column: 39, scope: !2084)
!2096 = !DILocation(line: 1017, column: 40, scope: !2084)
!2097 = !DILocation(line: 1017, column: 44, scope: !2084)
!2098 = !DILocation(line: 1017, column: 49, scope: !2084)
!2099 = !DILocation(line: 1017, column: 68, scope: !2084)
!2100 = !DILocation(line: 1017, column: 28, scope: !2084)
!2101 = !DILocation(line: 1019, column: 9, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2084, file: !1, line: 1019, column: 9)
!2103 = !DILocation(line: 1019, column: 19, scope: !2102)
!2104 = !DILocation(line: 1019, column: 17, scope: !2102)
!2105 = !DILocation(line: 1019, column: 9, scope: !2084)
!2106 = !DILocalVariable(name: "bChooseOrientFirstTri", scope: !2107, file: !1, line: 1022, type: !26)
!2107 = distinct !DILexicalBlock(scope: !2102, file: !1, line: 1020, column: 5)
!2108 = !DILocation(line: 1022, column: 12, scope: !2107)
!2109 = !DILocation(line: 1023, column: 11, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !2107, file: !1, line: 1023, column: 10)
!2111 = !DILocation(line: 1023, column: 21, scope: !2110)
!2112 = !DILocation(line: 1023, column: 22, scope: !2110)
!2113 = !DILocation(line: 1023, column: 26, scope: !2110)
!2114 = !DILocation(line: 1023, column: 31, scope: !2110)
!2115 = !DILocation(line: 1023, column: 47, scope: !2110)
!2116 = !DILocation(line: 1023, column: 10, scope: !2107)
!2117 = !DILocation(line: 1023, column: 74, scope: !2110)
!2118 = !DILocation(line: 1023, column: 52, scope: !2110)
!2119 = !DILocation(line: 1024, column: 28, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2110, file: !1, line: 1024, column: 16)
!2121 = !DILocation(line: 1024, column: 39, scope: !2120)
!2122 = !DILocation(line: 1024, column: 51, scope: !2120)
!2123 = !DILocation(line: 1024, column: 52, scope: !2120)
!2124 = !DILocation(line: 1024, column: 54, scope: !2120)
!2125 = !DILocation(line: 1024, column: 16, scope: !2120)
!2126 = !DILocation(line: 1024, column: 74, scope: !2120)
!2127 = !DILocation(line: 1024, column: 85, scope: !2120)
!2128 = !DILocation(line: 1024, column: 98, scope: !2120)
!2129 = !DILocation(line: 1024, column: 99, scope: !2120)
!2130 = !DILocation(line: 1024, column: 102, scope: !2120)
!2131 = !DILocation(line: 1024, column: 104, scope: !2120)
!2132 = !DILocation(line: 1024, column: 62, scope: !2120)
!2133 = !DILocation(line: 1024, column: 59, scope: !2120)
!2134 = !DILocation(line: 1024, column: 16, scope: !2110)
!2135 = !DILocation(line: 1025, column: 29, scope: !2120)
!2136 = !DILocation(line: 1025, column: 7, scope: !2120)
!2137 = !DILocalVariable(name: "t0", scope: !2138, file: !1, line: 1029, type: !83)
!2138 = distinct !DILexicalBlock(scope: !2107, file: !1, line: 1028, column: 6)
!2139 = !DILocation(line: 1029, column: 17, scope: !2138)
!2140 = !DILocation(line: 1029, column: 22, scope: !2138)
!2141 = !DILocation(line: 1029, column: 46, scope: !2138)
!2142 = !DILocation(line: 1029, column: 51, scope: !2138)
!2143 = !DILocation(line: 1029, column: 52, scope: !2138)
!2144 = !DILocalVariable(name: "t1", scope: !2138, file: !1, line: 1030, type: !83)
!2145 = !DILocation(line: 1030, column: 17, scope: !2138)
!2146 = !DILocation(line: 1030, column: 22, scope: !2138)
!2147 = !DILocation(line: 1030, column: 47, scope: !2138)
!2148 = !DILocation(line: 1030, column: 48, scope: !2138)
!2149 = !DILocation(line: 1030, column: 54, scope: !2138)
!2150 = !DILocation(line: 1031, column: 7, scope: !2138)
!2151 = !DILocation(line: 1031, column: 17, scope: !2138)
!2152 = !DILocation(line: 1031, column: 21, scope: !2138)
!2153 = !DILocation(line: 1031, column: 27, scope: !2138)
!2154 = !DILocation(line: 1032, column: 31, scope: !2138)
!2155 = !DILocation(line: 1032, column: 41, scope: !2138)
!2156 = !DILocation(line: 1032, column: 45, scope: !2138)
!2157 = !DILocation(line: 1032, column: 50, scope: !2138)
!2158 = !DILocation(line: 1032, column: 7, scope: !2138)
!2159 = !DILocation(line: 1032, column: 17, scope: !2138)
!2160 = !DILocation(line: 1032, column: 21, scope: !2138)
!2161 = !DILocation(line: 1032, column: 27, scope: !2138)
!2162 = !DILocation(line: 1034, column: 5, scope: !2107)
!2163 = !DILocation(line: 1035, column: 4, scope: !2084)
!2164 = !DILocation(line: 1036, column: 6, scope: !2060)
!2165 = !DILocation(line: 1037, column: 3, scope: !2060)
!2166 = !DILocation(line: 1039, column: 4, scope: !2055)
!2167 = distinct !{!2167, !2037, !2168}
!2168 = !DILocation(line: 1040, column: 2, scope: !1749)
!2169 = !DILocalVariable(name: "pEdges", scope: !2170, file: !1, line: 1044, type: !63)
!2170 = distinct !DILexicalBlock(scope: !1749, file: !1, line: 1043, column: 2)
!2171 = !DILocation(line: 1044, column: 11, scope: !2170)
!2172 = !DILocation(line: 1044, column: 51, scope: !2170)
!2173 = !DILocation(line: 1044, column: 50, scope: !2170)
!2174 = !DILocation(line: 1044, column: 65, scope: !2170)
!2175 = !DILocation(line: 1044, column: 30, scope: !2170)
!2176 = !DILocation(line: 1044, column: 20, scope: !2170)
!2177 = !DILocation(line: 1045, column: 7, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2170, file: !1, line: 1045, column: 7)
!2179 = !DILocation(line: 1045, column: 13, scope: !2178)
!2180 = !DILocation(line: 1045, column: 7, scope: !2170)
!2181 = !DILocation(line: 1046, column: 23, scope: !2178)
!2182 = !DILocation(line: 1046, column: 34, scope: !2178)
!2183 = !DILocation(line: 1046, column: 47, scope: !2178)
!2184 = !DILocation(line: 1046, column: 4, scope: !2178)
!2185 = !DILocation(line: 1049, column: 23, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !2178, file: !1, line: 1048, column: 3)
!2187 = !DILocation(line: 1049, column: 34, scope: !2186)
!2188 = !DILocation(line: 1049, column: 42, scope: !2186)
!2189 = !DILocation(line: 1049, column: 55, scope: !2186)
!2190 = !DILocation(line: 1049, column: 4, scope: !2186)
!2191 = !DILocation(line: 1051, column: 9, scope: !2186)
!2192 = !DILocation(line: 1051, column: 4, scope: !2186)
!2193 = !DILocation(line: 1054, column: 1, scope: !1749)
!2194 = distinct !DISubprogram(name: "Build4RuleGroups", scope: !1, file: !1, line: 1062, type: !2195, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2195 = !DISubroutineType(types: !2196)
!2196 = !{!7, !8, !18, !6, !1752, !83}
!2197 = !DILocalVariable(name: "pTriInfos", arg: 1, scope: !2194, file: !1, line: 1062, type: !8)
!2198 = !DILocation(line: 1062, column: 38, scope: !2194)
!2199 = !DILocalVariable(name: "pGroups", arg: 2, scope: !2194, file: !1, line: 1062, type: !18)
!2200 = !DILocation(line: 1062, column: 58, scope: !2194)
!2201 = !DILocalVariable(name: "piGroupTrianglesBuffer", arg: 3, scope: !2194, file: !1, line: 1062, type: !6)
!2202 = !DILocation(line: 1062, column: 73, scope: !2194)
!2203 = !DILocalVariable(name: "piTriListIn", arg: 4, scope: !2194, file: !1, line: 1062, type: !1752)
!2204 = !DILocation(line: 1062, column: 109, scope: !2194)
!2205 = !DILocalVariable(name: "iNrTrianglesIn", arg: 5, scope: !2194, file: !1, line: 1062, type: !83)
!2206 = !DILocation(line: 1062, column: 134, scope: !2194)
!2207 = !DILocalVariable(name: "iNrMaxGroups", scope: !2194, file: !1, line: 1064, type: !83)
!2208 = !DILocation(line: 1064, column: 12, scope: !2194)
!2209 = !DILocation(line: 1064, column: 27, scope: !2194)
!2210 = !DILocation(line: 1064, column: 41, scope: !2194)
!2211 = !DILocalVariable(name: "iNrActiveGroups", scope: !2194, file: !1, line: 1065, type: !7)
!2212 = !DILocation(line: 1065, column: 6, scope: !2194)
!2213 = !DILocalVariable(name: "iOffset", scope: !2194, file: !1, line: 1066, type: !7)
!2214 = !DILocation(line: 1066, column: 6, scope: !2194)
!2215 = !DILocalVariable(name: "f", scope: !2194, file: !1, line: 1066, type: !7)
!2216 = !DILocation(line: 1066, column: 19, scope: !2194)
!2217 = !DILocalVariable(name: "i", scope: !2194, file: !1, line: 1066, type: !7)
!2218 = !DILocation(line: 1066, column: 24, scope: !2194)
!2219 = !DILocation(line: 1067, column: 8, scope: !2194)
!2220 = !DILocation(line: 1068, column: 8, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !2194, file: !1, line: 1068, column: 2)
!2222 = !DILocation(line: 1068, column: 7, scope: !2221)
!2223 = !DILocation(line: 1068, column: 12, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2221, file: !1, line: 1068, column: 2)
!2225 = !DILocation(line: 1068, column: 14, scope: !2224)
!2226 = !DILocation(line: 1068, column: 13, scope: !2224)
!2227 = !DILocation(line: 1068, column: 2, scope: !2221)
!2228 = !DILocation(line: 1070, column: 9, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 1070, column: 3)
!2230 = distinct !DILexicalBlock(scope: !2224, file: !1, line: 1069, column: 2)
!2231 = !DILocation(line: 1070, column: 8, scope: !2229)
!2232 = !DILocation(line: 1070, column: 13, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1070, column: 3)
!2234 = !DILocation(line: 1070, column: 14, scope: !2233)
!2235 = !DILocation(line: 1070, column: 3, scope: !2229)
!2236 = !DILocation(line: 1073, column: 9, scope: !2237)
!2237 = distinct !DILexicalBlock(scope: !2238, file: !1, line: 1073, column: 8)
!2238 = distinct !DILexicalBlock(scope: !2233, file: !1, line: 1071, column: 3)
!2239 = !DILocation(line: 1073, column: 19, scope: !2237)
!2240 = !DILocation(line: 1073, column: 22, scope: !2237)
!2241 = !DILocation(line: 1073, column: 27, scope: !2237)
!2242 = !DILocation(line: 1073, column: 43, scope: !2237)
!2243 = !DILocation(line: 1073, column: 47, scope: !2237)
!2244 = !DILocation(line: 1073, column: 50, scope: !2237)
!2245 = !DILocation(line: 1073, column: 60, scope: !2237)
!2246 = !DILocation(line: 1073, column: 63, scope: !2237)
!2247 = !DILocation(line: 1073, column: 77, scope: !2237)
!2248 = !DILocation(line: 1073, column: 79, scope: !2237)
!2249 = !DILocation(line: 1073, column: 8, scope: !2238)
!2250 = !DILocalVariable(name: "bOrPre", scope: !2251, file: !1, line: 1075, type: !26)
!2251 = distinct !DILexicalBlock(scope: !2237, file: !1, line: 1074, column: 4)
!2252 = !DILocation(line: 1075, column: 11, scope: !2251)
!2253 = !DILocalVariable(name: "neigh_indexL", scope: !2251, file: !1, line: 1076, type: !7)
!2254 = !DILocation(line: 1076, column: 9, scope: !2251)
!2255 = !DILocalVariable(name: "neigh_indexR", scope: !2251, file: !1, line: 1076, type: !7)
!2256 = !DILocation(line: 1076, column: 23, scope: !2251)
!2257 = !DILocalVariable(name: "vert_index", scope: !2251, file: !1, line: 1077, type: !83)
!2258 = !DILocation(line: 1077, column: 15, scope: !2251)
!2259 = !DILocation(line: 1077, column: 28, scope: !2251)
!2260 = !DILocation(line: 1077, column: 40, scope: !2251)
!2261 = !DILocation(line: 1077, column: 41, scope: !2251)
!2262 = !DILocation(line: 1077, column: 44, scope: !2251)
!2263 = !DILocation(line: 1077, column: 43, scope: !2251)
!2264 = !DILocation(line: 1079, column: 38, scope: !2251)
!2265 = !DILocation(line: 1079, column: 46, scope: !2251)
!2266 = !DILocation(line: 1079, column: 5, scope: !2251)
!2267 = !DILocation(line: 1079, column: 15, scope: !2251)
!2268 = !DILocation(line: 1079, column: 18, scope: !2251)
!2269 = !DILocation(line: 1079, column: 32, scope: !2251)
!2270 = !DILocation(line: 1079, column: 35, scope: !2251)
!2271 = !DILocation(line: 1080, column: 60, scope: !2251)
!2272 = !DILocation(line: 1080, column: 5, scope: !2251)
!2273 = !DILocation(line: 1080, column: 15, scope: !2251)
!2274 = !DILocation(line: 1080, column: 18, scope: !2251)
!2275 = !DILocation(line: 1080, column: 32, scope: !2251)
!2276 = !DILocation(line: 1080, column: 36, scope: !2251)
!2277 = !DILocation(line: 1080, column: 58, scope: !2251)
!2278 = !DILocation(line: 1081, column: 59, scope: !2251)
!2279 = !DILocation(line: 1081, column: 69, scope: !2251)
!2280 = !DILocation(line: 1081, column: 72, scope: !2251)
!2281 = !DILocation(line: 1081, column: 77, scope: !2251)
!2282 = !DILocation(line: 1081, column: 96, scope: !2251)
!2283 = !DILocation(line: 1081, column: 5, scope: !2251)
!2284 = !DILocation(line: 1081, column: 15, scope: !2251)
!2285 = !DILocation(line: 1081, column: 18, scope: !2251)
!2286 = !DILocation(line: 1081, column: 32, scope: !2251)
!2287 = !DILocation(line: 1081, column: 36, scope: !2251)
!2288 = !DILocation(line: 1081, column: 56, scope: !2251)
!2289 = !DILocation(line: 1082, column: 5, scope: !2251)
!2290 = !DILocation(line: 1082, column: 15, scope: !2251)
!2291 = !DILocation(line: 1082, column: 18, scope: !2251)
!2292 = !DILocation(line: 1082, column: 32, scope: !2251)
!2293 = !DILocation(line: 1082, column: 36, scope: !2251)
!2294 = !DILocation(line: 1082, column: 45, scope: !2251)
!2295 = !DILocation(line: 1083, column: 52, scope: !2251)
!2296 = !DILocation(line: 1083, column: 75, scope: !2251)
!2297 = !DILocation(line: 1083, column: 5, scope: !2251)
!2298 = !DILocation(line: 1083, column: 15, scope: !2251)
!2299 = !DILocation(line: 1083, column: 18, scope: !2251)
!2300 = !DILocation(line: 1083, column: 32, scope: !2251)
!2301 = !DILocation(line: 1083, column: 36, scope: !2251)
!2302 = !DILocation(line: 1083, column: 49, scope: !2251)
!2303 = !DILocation(line: 1084, column: 5, scope: !2251)
!2304 = !DILocation(line: 1086, column: 19, scope: !2251)
!2305 = !DILocation(line: 1086, column: 29, scope: !2251)
!2306 = !DILocation(line: 1086, column: 32, scope: !2251)
!2307 = !DILocation(line: 1086, column: 46, scope: !2251)
!2308 = !DILocation(line: 1086, column: 50, scope: !2251)
!2309 = !DILocation(line: 1086, column: 5, scope: !2251)
!2310 = !DILocation(line: 1087, column: 15, scope: !2251)
!2311 = !DILocation(line: 1087, column: 25, scope: !2251)
!2312 = !DILocation(line: 1087, column: 28, scope: !2251)
!2313 = !DILocation(line: 1087, column: 33, scope: !2251)
!2314 = !DILocation(line: 1087, column: 52, scope: !2251)
!2315 = !DILocation(line: 1087, column: 14, scope: !2251)
!2316 = !DILocation(line: 1087, column: 12, scope: !2251)
!2317 = !DILocation(line: 1088, column: 20, scope: !2251)
!2318 = !DILocation(line: 1088, column: 30, scope: !2251)
!2319 = !DILocation(line: 1088, column: 33, scope: !2251)
!2320 = !DILocation(line: 1088, column: 47, scope: !2251)
!2321 = !DILocation(line: 1088, column: 18, scope: !2251)
!2322 = !DILocation(line: 1089, column: 20, scope: !2251)
!2323 = !DILocation(line: 1089, column: 30, scope: !2251)
!2324 = !DILocation(line: 1089, column: 33, scope: !2251)
!2325 = !DILocation(line: 1089, column: 47, scope: !2251)
!2326 = !DILocation(line: 1089, column: 48, scope: !2251)
!2327 = !DILocation(line: 1089, column: 52, scope: !2251)
!2328 = !DILocation(line: 1089, column: 53, scope: !2251)
!2329 = !DILocation(line: 1089, column: 18, scope: !2251)
!2330 = !DILocation(line: 1090, column: 9, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !2251, file: !1, line: 1090, column: 9)
!2332 = !DILocation(line: 1090, column: 21, scope: !2331)
!2333 = !DILocation(line: 1090, column: 9, scope: !2251)
!2334 = !DILocalVariable(name: "bAnswer", scope: !2335, file: !1, line: 1092, type: !126)
!2335 = distinct !DILexicalBlock(scope: !2331, file: !1, line: 1091, column: 5)
!2336 = !DILocation(line: 1092, column: 18, scope: !2335)
!2337 = !DILocation(line: 1093, column: 19, scope: !2335)
!2338 = !DILocation(line: 1093, column: 32, scope: !2335)
!2339 = !DILocation(line: 1093, column: 43, scope: !2335)
!2340 = !DILocation(line: 1094, column: 10, scope: !2335)
!2341 = !DILocation(line: 1094, column: 20, scope: !2335)
!2342 = !DILocation(line: 1094, column: 23, scope: !2335)
!2343 = !DILocation(line: 1094, column: 37, scope: !2335)
!2344 = !DILocation(line: 1093, column: 7, scope: !2335)
!2345 = !DILocalVariable(name: "bOrPre2", scope: !2335, file: !1, line: 1096, type: !126)
!2346 = !DILocation(line: 1096, column: 18, scope: !2335)
!2347 = !DILocation(line: 1096, column: 29, scope: !2335)
!2348 = !DILocation(line: 1096, column: 39, scope: !2335)
!2349 = !DILocation(line: 1096, column: 53, scope: !2335)
!2350 = !DILocation(line: 1096, column: 58, scope: !2335)
!2351 = !DILocation(line: 1096, column: 77, scope: !2335)
!2352 = !DILocation(line: 1096, column: 28, scope: !2335)
!2353 = !DILocalVariable(name: "bDiff", scope: !2335, file: !1, line: 1097, type: !126)
!2354 = !DILocation(line: 1097, column: 18, scope: !2335)
!2355 = !DILocation(line: 1097, column: 26, scope: !2335)
!2356 = !DILocation(line: 1097, column: 34, scope: !2335)
!2357 = !DILocation(line: 1097, column: 32, scope: !2335)
!2358 = !DILocation(line: 1099, column: 12, scope: !2335)
!2359 = !DILocation(line: 1099, column: 27, scope: !2335)
!2360 = !DILocation(line: 1100, column: 5, scope: !2335)
!2361 = !DILocation(line: 1101, column: 9, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2251, file: !1, line: 1101, column: 9)
!2363 = !DILocation(line: 1101, column: 21, scope: !2362)
!2364 = !DILocation(line: 1101, column: 9, scope: !2251)
!2365 = !DILocalVariable(name: "bAnswer", scope: !2366, file: !1, line: 1103, type: !126)
!2366 = distinct !DILexicalBlock(scope: !2362, file: !1, line: 1102, column: 5)
!2367 = !DILocation(line: 1103, column: 18, scope: !2366)
!2368 = !DILocation(line: 1104, column: 19, scope: !2366)
!2369 = !DILocation(line: 1104, column: 32, scope: !2366)
!2370 = !DILocation(line: 1104, column: 43, scope: !2366)
!2371 = !DILocation(line: 1105, column: 10, scope: !2366)
!2372 = !DILocation(line: 1105, column: 20, scope: !2366)
!2373 = !DILocation(line: 1105, column: 23, scope: !2366)
!2374 = !DILocation(line: 1105, column: 37, scope: !2366)
!2375 = !DILocation(line: 1104, column: 7, scope: !2366)
!2376 = !DILocalVariable(name: "bOrPre2", scope: !2366, file: !1, line: 1107, type: !126)
!2377 = !DILocation(line: 1107, column: 18, scope: !2366)
!2378 = !DILocation(line: 1107, column: 29, scope: !2366)
!2379 = !DILocation(line: 1107, column: 39, scope: !2366)
!2380 = !DILocation(line: 1107, column: 53, scope: !2366)
!2381 = !DILocation(line: 1107, column: 58, scope: !2366)
!2382 = !DILocation(line: 1107, column: 77, scope: !2366)
!2383 = !DILocation(line: 1107, column: 28, scope: !2366)
!2384 = !DILocalVariable(name: "bDiff", scope: !2366, file: !1, line: 1108, type: !126)
!2385 = !DILocation(line: 1108, column: 18, scope: !2366)
!2386 = !DILocation(line: 1108, column: 26, scope: !2366)
!2387 = !DILocation(line: 1108, column: 34, scope: !2366)
!2388 = !DILocation(line: 1108, column: 32, scope: !2366)
!2389 = !DILocation(line: 1110, column: 12, scope: !2366)
!2390 = !DILocation(line: 1110, column: 27, scope: !2366)
!2391 = !DILocation(line: 1111, column: 5, scope: !2366)
!2392 = !DILocation(line: 1114, column: 16, scope: !2251)
!2393 = !DILocation(line: 1114, column: 26, scope: !2251)
!2394 = !DILocation(line: 1114, column: 29, scope: !2251)
!2395 = !DILocation(line: 1114, column: 43, scope: !2251)
!2396 = !DILocation(line: 1114, column: 47, scope: !2251)
!2397 = !DILocation(line: 1114, column: 13, scope: !2251)
!2398 = !DILocation(line: 1119, column: 4, scope: !2251)
!2399 = !DILocation(line: 1120, column: 3, scope: !2238)
!2400 = !DILocation(line: 1070, column: 19, scope: !2233)
!2401 = !DILocation(line: 1070, column: 3, scope: !2233)
!2402 = distinct !{!2402, !2235, !2403}
!2403 = !DILocation(line: 1120, column: 3, scope: !2229)
!2404 = !DILocation(line: 1121, column: 2, scope: !2230)
!2405 = !DILocation(line: 1068, column: 31, scope: !2224)
!2406 = !DILocation(line: 1068, column: 2, scope: !2224)
!2407 = distinct !{!2407, !2227, !2408}
!2408 = !DILocation(line: 1121, column: 2, scope: !2221)
!2409 = !DILocation(line: 1123, column: 9, scope: !2194)
!2410 = !DILocation(line: 1123, column: 2, scope: !2194)
!2411 = distinct !DISubprogram(name: "GenerateTSpaces", scope: !1, file: !1, line: 1191, type: !2412, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!26, !46, !2414, !2415, !83, !1752, !121, !91}
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19)
!2417 = !DILocalVariable(name: "psTspace", arg: 1, scope: !2411, file: !1, line: 1191, type: !46)
!2418 = !DILocation(line: 1191, column: 38, scope: !2411)
!2419 = !DILocalVariable(name: "pTriInfos", arg: 2, scope: !2411, file: !1, line: 1191, type: !2414)
!2420 = !DILocation(line: 1191, column: 65, scope: !2411)
!2421 = !DILocalVariable(name: "pGroups", arg: 3, scope: !2411, file: !1, line: 1191, type: !2415)
!2422 = !DILocation(line: 1191, column: 91, scope: !2411)
!2423 = !DILocalVariable(name: "iNrActiveGroups", arg: 4, scope: !2411, file: !1, line: 1192, type: !83)
!2424 = !DILocation(line: 1192, column: 40, scope: !2411)
!2425 = !DILocalVariable(name: "piTriListIn", arg: 5, scope: !2411, file: !1, line: 1192, type: !1752)
!2426 = !DILocation(line: 1192, column: 67, scope: !2411)
!2427 = !DILocalVariable(name: "fThresCos", arg: 6, scope: !2411, file: !1, line: 1192, type: !121)
!2428 = !DILocation(line: 1192, column: 94, scope: !2411)
!2429 = !DILocalVariable(name: "pContext", arg: 7, scope: !2411, file: !1, line: 1193, type: !91)
!2430 = !DILocation(line: 1193, column: 57, scope: !2411)
!2431 = !DILocalVariable(name: "pSubGroupTspace", scope: !2411, file: !1, line: 1195, type: !46)
!2432 = !DILocation(line: 1195, column: 12, scope: !2411)
!2433 = !DILocalVariable(name: "pUniSubGroups", scope: !2411, file: !1, line: 1196, type: !74)
!2434 = !DILocation(line: 1196, column: 14, scope: !2411)
!2435 = !DILocalVariable(name: "pTmpMembers", scope: !2411, file: !1, line: 1197, type: !6)
!2436 = !DILocation(line: 1197, column: 8, scope: !2411)
!2437 = !DILocalVariable(name: "iMaxNrFaces", scope: !2411, file: !1, line: 1198, type: !7)
!2438 = !DILocation(line: 1198, column: 6, scope: !2411)
!2439 = !DILocalVariable(name: "iUniqueTspaces", scope: !2411, file: !1, line: 1198, type: !7)
!2440 = !DILocation(line: 1198, column: 21, scope: !2411)
!2441 = !DILocalVariable(name: "g", scope: !2411, file: !1, line: 1198, type: !7)
!2442 = !DILocation(line: 1198, column: 39, scope: !2411)
!2443 = !DILocalVariable(name: "i", scope: !2411, file: !1, line: 1198, type: !7)
!2444 = !DILocation(line: 1198, column: 44, scope: !2411)
!2445 = !DILocation(line: 1199, column: 8, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !2411, file: !1, line: 1199, column: 2)
!2447 = !DILocation(line: 1199, column: 7, scope: !2446)
!2448 = !DILocation(line: 1199, column: 12, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2446, file: !1, line: 1199, column: 2)
!2450 = !DILocation(line: 1199, column: 14, scope: !2449)
!2451 = !DILocation(line: 1199, column: 13, scope: !2449)
!2452 = !DILocation(line: 1199, column: 2, scope: !2446)
!2453 = !DILocation(line: 1200, column: 7, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2449, file: !1, line: 1200, column: 7)
!2455 = !DILocation(line: 1200, column: 21, scope: !2454)
!2456 = !DILocation(line: 1200, column: 29, scope: !2454)
!2457 = !DILocation(line: 1200, column: 32, scope: !2454)
!2458 = !DILocation(line: 1200, column: 19, scope: !2454)
!2459 = !DILocation(line: 1200, column: 7, scope: !2449)
!2460 = !DILocation(line: 1201, column: 18, scope: !2454)
!2461 = !DILocation(line: 1201, column: 26, scope: !2454)
!2462 = !DILocation(line: 1201, column: 29, scope: !2454)
!2463 = !DILocation(line: 1201, column: 16, scope: !2454)
!2464 = !DILocation(line: 1201, column: 4, scope: !2454)
!2465 = !DILocation(line: 1199, column: 32, scope: !2449)
!2466 = !DILocation(line: 1199, column: 2, scope: !2449)
!2467 = distinct !{!2467, !2452, !2468}
!2468 = !DILocation(line: 1201, column: 29, scope: !2446)
!2469 = !DILocation(line: 1203, column: 6, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2411, file: !1, line: 1203, column: 6)
!2471 = !DILocation(line: 1203, column: 18, scope: !2470)
!2472 = !DILocation(line: 1203, column: 6, scope: !2411)
!2473 = !DILocation(line: 1203, column: 24, scope: !2470)
!2474 = !DILocation(line: 1206, column: 55, scope: !2411)
!2475 = !DILocation(line: 1206, column: 54, scope: !2411)
!2476 = !DILocation(line: 1206, column: 32, scope: !2411)
!2477 = !DILocation(line: 1206, column: 20, scope: !2411)
!2478 = !DILocation(line: 1206, column: 18, scope: !2411)
!2479 = !DILocation(line: 1207, column: 57, scope: !2411)
!2480 = !DILocation(line: 1207, column: 56, scope: !2411)
!2481 = !DILocation(line: 1207, column: 32, scope: !2411)
!2482 = !DILocation(line: 1207, column: 18, scope: !2411)
!2483 = !DILocation(line: 1207, column: 16, scope: !2411)
!2484 = !DILocation(line: 1208, column: 43, scope: !2411)
!2485 = !DILocation(line: 1208, column: 42, scope: !2411)
!2486 = !DILocation(line: 1208, column: 24, scope: !2411)
!2487 = !DILocation(line: 1208, column: 16, scope: !2411)
!2488 = !DILocation(line: 1208, column: 14, scope: !2411)
!2489 = !DILocation(line: 1209, column: 6, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2411, file: !1, line: 1209, column: 6)
!2491 = !DILocation(line: 1209, column: 21, scope: !2490)
!2492 = !DILocation(line: 1209, column: 28, scope: !2490)
!2493 = !DILocation(line: 1209, column: 31, scope: !2490)
!2494 = !DILocation(line: 1209, column: 44, scope: !2490)
!2495 = !DILocation(line: 1209, column: 51, scope: !2490)
!2496 = !DILocation(line: 1209, column: 54, scope: !2490)
!2497 = !DILocation(line: 1209, column: 65, scope: !2490)
!2498 = !DILocation(line: 1209, column: 6, scope: !2411)
!2499 = !DILocation(line: 1211, column: 7, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2501, file: !1, line: 1211, column: 7)
!2501 = distinct !DILexicalBlock(scope: !2490, file: !1, line: 1210, column: 2)
!2502 = !DILocation(line: 1211, column: 22, scope: !2500)
!2503 = !DILocation(line: 1211, column: 7, scope: !2501)
!2504 = !DILocation(line: 1211, column: 35, scope: !2500)
!2505 = !DILocation(line: 1211, column: 30, scope: !2500)
!2506 = !DILocation(line: 1212, column: 7, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2501, file: !1, line: 1212, column: 7)
!2508 = !DILocation(line: 1212, column: 20, scope: !2507)
!2509 = !DILocation(line: 1212, column: 7, scope: !2501)
!2510 = !DILocation(line: 1212, column: 33, scope: !2507)
!2511 = !DILocation(line: 1212, column: 28, scope: !2507)
!2512 = !DILocation(line: 1213, column: 7, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2501, file: !1, line: 1213, column: 7)
!2514 = !DILocation(line: 1213, column: 18, scope: !2513)
!2515 = !DILocation(line: 1213, column: 7, scope: !2501)
!2516 = !DILocation(line: 1213, column: 31, scope: !2513)
!2517 = !DILocation(line: 1213, column: 26, scope: !2513)
!2518 = !DILocation(line: 1214, column: 3, scope: !2501)
!2519 = !DILocation(line: 1218, column: 17, scope: !2411)
!2520 = !DILocation(line: 1219, column: 8, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2411, file: !1, line: 1219, column: 2)
!2522 = !DILocation(line: 1219, column: 7, scope: !2521)
!2523 = !DILocation(line: 1219, column: 12, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2521, file: !1, line: 1219, column: 2)
!2525 = !DILocation(line: 1219, column: 14, scope: !2524)
!2526 = !DILocation(line: 1219, column: 13, scope: !2524)
!2527 = !DILocation(line: 1219, column: 2, scope: !2521)
!2528 = !DILocalVariable(name: "pGroup", scope: !2529, file: !1, line: 1221, type: !2415)
!2529 = distinct !DILexicalBlock(scope: !2524, file: !1, line: 1220, column: 2)
!2530 = !DILocation(line: 1221, column: 18, scope: !2529)
!2531 = !DILocation(line: 1221, column: 28, scope: !2529)
!2532 = !DILocation(line: 1221, column: 36, scope: !2529)
!2533 = !DILocalVariable(name: "iUniqueSubGroups", scope: !2529, file: !1, line: 1222, type: !7)
!2534 = !DILocation(line: 1222, column: 7, scope: !2529)
!2535 = !DILocalVariable(name: "s", scope: !2529, file: !1, line: 1222, type: !7)
!2536 = !DILocation(line: 1222, column: 29, scope: !2529)
!2537 = !DILocation(line: 1224, column: 9, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2529, file: !1, line: 1224, column: 3)
!2539 = !DILocation(line: 1224, column: 8, scope: !2538)
!2540 = !DILocation(line: 1224, column: 13, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2538, file: !1, line: 1224, column: 3)
!2542 = !DILocation(line: 1224, column: 15, scope: !2541)
!2543 = !DILocation(line: 1224, column: 23, scope: !2541)
!2544 = !DILocation(line: 1224, column: 14, scope: !2541)
!2545 = !DILocation(line: 1224, column: 3, scope: !2538)
!2546 = !DILocalVariable(name: "f", scope: !2547, file: !1, line: 1226, type: !83)
!2547 = distinct !DILexicalBlock(scope: !2541, file: !1, line: 1225, column: 3)
!2548 = !DILocation(line: 1226, column: 14, scope: !2547)
!2549 = !DILocation(line: 1226, column: 18, scope: !2547)
!2550 = !DILocation(line: 1226, column: 26, scope: !2547)
!2551 = !DILocation(line: 1226, column: 39, scope: !2547)
!2552 = !DILocalVariable(name: "index", scope: !2547, file: !1, line: 1227, type: !7)
!2553 = !DILocation(line: 1227, column: 8, scope: !2547)
!2554 = !DILocalVariable(name: "iVertIndex", scope: !2547, file: !1, line: 1227, type: !7)
!2555 = !DILocation(line: 1227, column: 18, scope: !2547)
!2556 = !DILocalVariable(name: "iOF_1", scope: !2547, file: !1, line: 1227, type: !7)
!2557 = !DILocation(line: 1227, column: 33, scope: !2547)
!2558 = !DILocalVariable(name: "iMembers", scope: !2547, file: !1, line: 1227, type: !7)
!2559 = !DILocation(line: 1227, column: 43, scope: !2547)
!2560 = !DILocalVariable(name: "j", scope: !2547, file: !1, line: 1227, type: !7)
!2561 = !DILocation(line: 1227, column: 55, scope: !2547)
!2562 = !DILocalVariable(name: "l", scope: !2547, file: !1, line: 1227, type: !7)
!2563 = !DILocation(line: 1227, column: 60, scope: !2547)
!2564 = !DILocalVariable(name: "tmp_group", scope: !2547, file: !1, line: 1228, type: !75)
!2565 = !DILocation(line: 1228, column: 14, scope: !2547)
!2566 = !DILocalVariable(name: "bFound", scope: !2547, file: !1, line: 1229, type: !26)
!2567 = !DILocation(line: 1229, column: 10, scope: !2547)
!2568 = !DILocalVariable(name: "n", scope: !2547, file: !1, line: 1230, type: !29)
!2569 = !DILocation(line: 1230, column: 10, scope: !2547)
!2570 = !DILocalVariable(name: "vOs", scope: !2547, file: !1, line: 1230, type: !29)
!2571 = !DILocation(line: 1230, column: 13, scope: !2547)
!2572 = !DILocalVariable(name: "vOt", scope: !2547, file: !1, line: 1230, type: !29)
!2573 = !DILocation(line: 1230, column: 18, scope: !2547)
!2574 = !DILocation(line: 1231, column: 8, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2547, file: !1, line: 1231, column: 8)
!2576 = !DILocation(line: 1231, column: 18, scope: !2575)
!2577 = !DILocation(line: 1231, column: 21, scope: !2575)
!2578 = !DILocation(line: 1231, column: 39, scope: !2575)
!2579 = !DILocation(line: 1231, column: 37, scope: !2575)
!2580 = !DILocation(line: 1231, column: 8, scope: !2547)
!2581 = !DILocation(line: 1231, column: 52, scope: !2575)
!2582 = !DILocation(line: 1231, column: 47, scope: !2575)
!2583 = !DILocation(line: 1232, column: 13, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2575, file: !1, line: 1232, column: 13)
!2585 = !DILocation(line: 1232, column: 23, scope: !2584)
!2586 = !DILocation(line: 1232, column: 26, scope: !2584)
!2587 = !DILocation(line: 1232, column: 44, scope: !2584)
!2588 = !DILocation(line: 1232, column: 42, scope: !2584)
!2589 = !DILocation(line: 1232, column: 13, scope: !2575)
!2590 = !DILocation(line: 1232, column: 57, scope: !2584)
!2591 = !DILocation(line: 1232, column: 52, scope: !2584)
!2592 = !DILocation(line: 1233, column: 13, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2584, file: !1, line: 1233, column: 13)
!2594 = !DILocation(line: 1233, column: 23, scope: !2593)
!2595 = !DILocation(line: 1233, column: 26, scope: !2593)
!2596 = !DILocation(line: 1233, column: 44, scope: !2593)
!2597 = !DILocation(line: 1233, column: 42, scope: !2593)
!2598 = !DILocation(line: 1233, column: 13, scope: !2584)
!2599 = !DILocation(line: 1233, column: 57, scope: !2593)
!2600 = !DILocation(line: 1233, column: 52, scope: !2593)
!2601 = !DILocation(line: 1236, column: 17, scope: !2547)
!2602 = !DILocation(line: 1236, column: 29, scope: !2547)
!2603 = !DILocation(line: 1236, column: 30, scope: !2547)
!2604 = !DILocation(line: 1236, column: 33, scope: !2547)
!2605 = !DILocation(line: 1236, column: 32, scope: !2547)
!2606 = !DILocation(line: 1236, column: 15, scope: !2547)
!2607 = !DILocation(line: 1240, column: 18, scope: !2547)
!2608 = !DILocation(line: 1240, column: 28, scope: !2547)
!2609 = !DILocation(line: 1240, column: 8, scope: !2547)
!2610 = !DILocation(line: 1243, column: 15, scope: !2547)
!2611 = !DILocation(line: 1243, column: 25, scope: !2547)
!2612 = !DILocation(line: 1243, column: 28, scope: !2547)
!2613 = !DILocation(line: 1243, column: 47, scope: !2547)
!2614 = !DILocation(line: 1243, column: 57, scope: !2547)
!2615 = !DILocation(line: 1243, column: 60, scope: !2547)
!2616 = !DILocation(line: 1243, column: 40, scope: !2547)
!2617 = !DILocation(line: 1243, column: 33, scope: !2547)
!2618 = !DILocation(line: 1243, column: 10, scope: !2547)
!2619 = !DILocation(line: 1244, column: 15, scope: !2547)
!2620 = !DILocation(line: 1244, column: 25, scope: !2547)
!2621 = !DILocation(line: 1244, column: 28, scope: !2547)
!2622 = !DILocation(line: 1244, column: 47, scope: !2547)
!2623 = !DILocation(line: 1244, column: 57, scope: !2547)
!2624 = !DILocation(line: 1244, column: 60, scope: !2547)
!2625 = !DILocation(line: 1244, column: 40, scope: !2547)
!2626 = !DILocation(line: 1244, column: 33, scope: !2547)
!2627 = !DILocation(line: 1244, column: 10, scope: !2547)
!2628 = !DILocation(line: 1245, column: 9, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2547, file: !1, line: 1245, column: 9)
!2630 = !DILocation(line: 1245, column: 9, scope: !2547)
!2631 = !DILocation(line: 1245, column: 31, scope: !2629)
!2632 = !DILocation(line: 1245, column: 25, scope: !2629)
!2633 = !DILocation(line: 1246, column: 9, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2547, file: !1, line: 1246, column: 9)
!2635 = !DILocation(line: 1246, column: 9, scope: !2547)
!2636 = !DILocation(line: 1246, column: 31, scope: !2634)
!2637 = !DILocation(line: 1246, column: 25, scope: !2634)
!2638 = !DILocation(line: 1249, column: 12, scope: !2547)
!2639 = !DILocation(line: 1249, column: 22, scope: !2547)
!2640 = !DILocation(line: 1249, column: 25, scope: !2547)
!2641 = !DILocation(line: 1249, column: 10, scope: !2547)
!2642 = !DILocation(line: 1251, column: 13, scope: !2547)
!2643 = !DILocation(line: 1252, column: 10, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2547, file: !1, line: 1252, column: 4)
!2645 = !DILocation(line: 1252, column: 9, scope: !2644)
!2646 = !DILocation(line: 1252, column: 14, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2644, file: !1, line: 1252, column: 4)
!2648 = !DILocation(line: 1252, column: 16, scope: !2647)
!2649 = !DILocation(line: 1252, column: 24, scope: !2647)
!2650 = !DILocation(line: 1252, column: 15, scope: !2647)
!2651 = !DILocation(line: 1252, column: 4, scope: !2644)
!2652 = !DILocalVariable(name: "t", scope: !2653, file: !1, line: 1254, type: !83)
!2653 = distinct !DILexicalBlock(scope: !2647, file: !1, line: 1253, column: 4)
!2654 = !DILocation(line: 1254, column: 15, scope: !2653)
!2655 = !DILocation(line: 1254, column: 19, scope: !2653)
!2656 = !DILocation(line: 1254, column: 27, scope: !2653)
!2657 = !DILocation(line: 1254, column: 40, scope: !2653)
!2658 = !DILocalVariable(name: "iOF_2", scope: !2653, file: !1, line: 1255, type: !83)
!2659 = !DILocation(line: 1255, column: 15, scope: !2653)
!2660 = !DILocation(line: 1255, column: 23, scope: !2653)
!2661 = !DILocation(line: 1255, column: 33, scope: !2653)
!2662 = !DILocation(line: 1255, column: 36, scope: !2653)
!2663 = !DILocalVariable(name: "vOs2", scope: !2653, file: !1, line: 1258, type: !29)
!2664 = !DILocation(line: 1258, column: 11, scope: !2653)
!2665 = !DILocation(line: 1258, column: 23, scope: !2653)
!2666 = !DILocation(line: 1258, column: 33, scope: !2653)
!2667 = !DILocation(line: 1258, column: 36, scope: !2653)
!2668 = !DILocation(line: 1258, column: 55, scope: !2653)
!2669 = !DILocation(line: 1258, column: 65, scope: !2653)
!2670 = !DILocation(line: 1258, column: 68, scope: !2653)
!2671 = !DILocation(line: 1258, column: 48, scope: !2653)
!2672 = !DILocation(line: 1258, column: 41, scope: !2653)
!2673 = !DILocation(line: 1258, column: 18, scope: !2653)
!2674 = !DILocalVariable(name: "vOt2", scope: !2653, file: !1, line: 1259, type: !29)
!2675 = !DILocation(line: 1259, column: 11, scope: !2653)
!2676 = !DILocation(line: 1259, column: 23, scope: !2653)
!2677 = !DILocation(line: 1259, column: 33, scope: !2653)
!2678 = !DILocation(line: 1259, column: 36, scope: !2653)
!2679 = !DILocation(line: 1259, column: 55, scope: !2653)
!2680 = !DILocation(line: 1259, column: 65, scope: !2653)
!2681 = !DILocation(line: 1259, column: 68, scope: !2653)
!2682 = !DILocation(line: 1259, column: 48, scope: !2653)
!2683 = !DILocation(line: 1259, column: 41, scope: !2653)
!2684 = !DILocation(line: 1259, column: 18, scope: !2653)
!2685 = !DILocation(line: 1260, column: 10, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2653, file: !1, line: 1260, column: 10)
!2687 = !DILocation(line: 1260, column: 10, scope: !2653)
!2688 = !DILocation(line: 1260, column: 34, scope: !2686)
!2689 = !DILocation(line: 1260, column: 27, scope: !2686)
!2690 = !DILocation(line: 1261, column: 10, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2653, file: !1, line: 1261, column: 10)
!2692 = !DILocation(line: 1261, column: 10, scope: !2653)
!2693 = !DILocation(line: 1261, column: 34, scope: !2691)
!2694 = !DILocation(line: 1261, column: 27, scope: !2691)
!2695 = !DILocalVariable(name: "bAny", scope: !2696, file: !1, line: 1264, type: !126)
!2696 = distinct !DILexicalBlock(scope: !2653, file: !1, line: 1263, column: 5)
!2697 = !DILocation(line: 1264, column: 18, scope: !2696)
!2698 = !DILocation(line: 1264, column: 28, scope: !2696)
!2699 = !DILocation(line: 1264, column: 38, scope: !2696)
!2700 = !DILocation(line: 1264, column: 41, scope: !2696)
!2701 = !DILocation(line: 1264, column: 49, scope: !2696)
!2702 = !DILocation(line: 1264, column: 59, scope: !2696)
!2703 = !DILocation(line: 1264, column: 62, scope: !2696)
!2704 = !DILocation(line: 1264, column: 47, scope: !2696)
!2705 = !DILocation(line: 1264, column: 69, scope: !2696)
!2706 = !DILocation(line: 1264, column: 87, scope: !2696)
!2707 = !DILocation(line: 1264, column: 25, scope: !2696)
!2708 = !DILocalVariable(name: "bSameOrgFace", scope: !2696, file: !1, line: 1266, type: !126)
!2709 = !DILocation(line: 1266, column: 18, scope: !2696)
!2710 = !DILocation(line: 1266, column: 33, scope: !2696)
!2711 = !DILocation(line: 1266, column: 40, scope: !2696)
!2712 = !DILocation(line: 1266, column: 38, scope: !2696)
!2713 = !DILocalVariable(name: "fCosS", scope: !2696, file: !1, line: 1268, type: !121)
!2714 = !DILocation(line: 1268, column: 18, scope: !2696)
!2715 = !DILocation(line: 1268, column: 26, scope: !2696)
!2716 = !DILocalVariable(name: "fCosT", scope: !2696, file: !1, line: 1269, type: !121)
!2717 = !DILocation(line: 1269, column: 18, scope: !2696)
!2718 = !DILocation(line: 1269, column: 26, scope: !2696)
!2719 = !DILocation(line: 1272, column: 10, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2696, file: !1, line: 1272, column: 10)
!2721 = !DILocation(line: 1272, column: 15, scope: !2720)
!2722 = !DILocation(line: 1272, column: 18, scope: !2720)
!2723 = !DILocation(line: 1272, column: 31, scope: !2720)
!2724 = !DILocation(line: 1272, column: 35, scope: !2720)
!2725 = !DILocation(line: 1272, column: 41, scope: !2720)
!2726 = !DILocation(line: 1272, column: 40, scope: !2720)
!2727 = !DILocation(line: 1272, column: 51, scope: !2720)
!2728 = !DILocation(line: 1272, column: 54, scope: !2720)
!2729 = !DILocation(line: 1272, column: 60, scope: !2720)
!2730 = !DILocation(line: 1272, column: 59, scope: !2720)
!2731 = !DILocation(line: 1272, column: 10, scope: !2696)
!2732 = !DILocation(line: 1273, column: 33, scope: !2720)
!2733 = !DILocation(line: 1273, column: 7, scope: !2720)
!2734 = !DILocation(line: 1273, column: 27, scope: !2720)
!2735 = !DILocation(line: 1273, column: 31, scope: !2720)
!2736 = !DILocation(line: 1275, column: 4, scope: !2653)
!2737 = !DILocation(line: 1252, column: 35, scope: !2647)
!2738 = !DILocation(line: 1252, column: 4, scope: !2647)
!2739 = distinct !{!2739, !2651, !2740}
!2740 = !DILocation(line: 1275, column: 4, scope: !2644)
!2741 = !DILocation(line: 1278, column: 25, scope: !2547)
!2742 = !DILocation(line: 1278, column: 14, scope: !2547)
!2743 = !DILocation(line: 1278, column: 23, scope: !2547)
!2744 = !DILocation(line: 1279, column: 28, scope: !2547)
!2745 = !DILocation(line: 1279, column: 14, scope: !2547)
!2746 = !DILocation(line: 1279, column: 26, scope: !2547)
!2747 = !DILocation(line: 1280, column: 8, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2547, file: !1, line: 1280, column: 8)
!2749 = !DILocation(line: 1280, column: 16, scope: !2748)
!2750 = !DILocation(line: 1280, column: 8, scope: !2547)
!2751 = !DILocalVariable(name: "uSeed", scope: !2752, file: !1, line: 1282, type: !2753)
!2752 = distinct !DILexicalBlock(scope: !2748, file: !1, line: 1281, column: 4)
!2753 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!2754 = !DILocation(line: 1282, column: 18, scope: !2752)
!2755 = !DILocation(line: 1283, column: 15, scope: !2752)
!2756 = !DILocation(line: 1283, column: 31, scope: !2752)
!2757 = !DILocation(line: 1283, column: 39, scope: !2752)
!2758 = !DILocation(line: 1283, column: 43, scope: !2752)
!2759 = !DILocation(line: 1283, column: 5, scope: !2752)
!2760 = !DILocation(line: 1284, column: 4, scope: !2752)
!2761 = !DILocation(line: 1287, column: 11, scope: !2547)
!2762 = !DILocation(line: 1288, column: 5, scope: !2547)
!2763 = !DILocation(line: 1289, column: 4, scope: !2547)
!2764 = !DILocation(line: 1289, column: 11, scope: !2547)
!2765 = !DILocation(line: 1289, column: 13, scope: !2547)
!2766 = !DILocation(line: 1289, column: 12, scope: !2547)
!2767 = !DILocation(line: 1289, column: 30, scope: !2547)
!2768 = !DILocation(line: 1289, column: 34, scope: !2547)
!2769 = !DILocation(line: 1289, column: 33, scope: !2547)
!2770 = !DILocation(line: 0, scope: !2547)
!2771 = !DILocation(line: 1291, column: 44, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2547, file: !1, line: 1290, column: 4)
!2773 = !DILocation(line: 1291, column: 58, scope: !2772)
!2774 = !DILocation(line: 1291, column: 14, scope: !2772)
!2775 = !DILocation(line: 1291, column: 12, scope: !2772)
!2776 = !DILocation(line: 1292, column: 10, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2772, file: !1, line: 1292, column: 9)
!2778 = !DILocation(line: 1292, column: 9, scope: !2772)
!2779 = !DILocation(line: 1292, column: 18, scope: !2777)
!2780 = distinct !{!2780, !2763, !2781}
!2781 = !DILocation(line: 1293, column: 4, scope: !2547)
!2782 = !DILocation(line: 1300, column: 9, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2547, file: !1, line: 1300, column: 8)
!2784 = !DILocation(line: 1300, column: 8, scope: !2547)
!2785 = !DILocalVariable(name: "pIndices", scope: !2786, file: !1, line: 1303, type: !6)
!2786 = distinct !DILexicalBlock(scope: !2783, file: !1, line: 1301, column: 4)
!2787 = !DILocation(line: 1303, column: 11, scope: !2786)
!2788 = !DILocation(line: 1303, column: 49, scope: !2786)
!2789 = !DILocation(line: 1303, column: 48, scope: !2786)
!2790 = !DILocation(line: 1303, column: 30, scope: !2786)
!2791 = !DILocation(line: 1303, column: 22, scope: !2786)
!2792 = !DILocation(line: 1304, column: 9, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2786, file: !1, line: 1304, column: 9)
!2794 = !DILocation(line: 1304, column: 17, scope: !2793)
!2795 = !DILocation(line: 1304, column: 9, scope: !2786)
!2796 = !DILocalVariable(name: "s", scope: !2797, file: !1, line: 1307, type: !7)
!2797 = distinct !DILexicalBlock(scope: !2793, file: !1, line: 1305, column: 5)
!2798 = !DILocation(line: 1307, column: 10, scope: !2797)
!2799 = !DILocation(line: 1308, column: 12, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2797, file: !1, line: 1308, column: 6)
!2801 = !DILocation(line: 1308, column: 11, scope: !2800)
!2802 = !DILocation(line: 1308, column: 16, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2800, file: !1, line: 1308, column: 6)
!2804 = !DILocation(line: 1308, column: 18, scope: !2803)
!2805 = !DILocation(line: 1308, column: 17, scope: !2803)
!2806 = !DILocation(line: 1308, column: 6, scope: !2800)
!2807 = !DILocation(line: 1309, column: 12, scope: !2803)
!2808 = !DILocation(line: 1309, column: 26, scope: !2803)
!2809 = !DILocation(line: 1309, column: 29, scope: !2803)
!2810 = !DILocation(line: 1309, column: 7, scope: !2803)
!2811 = !DILocation(line: 1308, column: 37, scope: !2803)
!2812 = !DILocation(line: 1308, column: 6, scope: !2803)
!2813 = distinct !{!2813, !2806, !2814}
!2814 = !DILocation(line: 1309, column: 40, scope: !2800)
!2815 = !DILocation(line: 1310, column: 11, scope: !2797)
!2816 = !DILocation(line: 1310, column: 6, scope: !2797)
!2817 = !DILocation(line: 1311, column: 11, scope: !2797)
!2818 = !DILocation(line: 1311, column: 6, scope: !2797)
!2819 = !DILocation(line: 1312, column: 11, scope: !2797)
!2820 = !DILocation(line: 1312, column: 6, scope: !2797)
!2821 = !DILocation(line: 1313, column: 6, scope: !2797)
!2822 = !DILocation(line: 1315, column: 48, scope: !2786)
!2823 = !DILocation(line: 1315, column: 5, scope: !2786)
!2824 = !DILocation(line: 1315, column: 19, scope: !2786)
!2825 = !DILocation(line: 1315, column: 37, scope: !2786)
!2826 = !DILocation(line: 1315, column: 46, scope: !2786)
!2827 = !DILocation(line: 1316, column: 51, scope: !2786)
!2828 = !DILocation(line: 1316, column: 5, scope: !2786)
!2829 = !DILocation(line: 1316, column: 19, scope: !2786)
!2830 = !DILocation(line: 1316, column: 37, scope: !2786)
!2831 = !DILocation(line: 1316, column: 49, scope: !2786)
!2832 = !DILocation(line: 1317, column: 12, scope: !2786)
!2833 = !DILocation(line: 1317, column: 5, scope: !2786)
!2834 = !DILocation(line: 1317, column: 32, scope: !2786)
!2835 = !DILocation(line: 1317, column: 45, scope: !2786)
!2836 = !DILocation(line: 1317, column: 53, scope: !2786)
!2837 = !DILocation(line: 1318, column: 5, scope: !2786)
!2838 = !DILocation(line: 1318, column: 21, scope: !2786)
!2839 = !DILocation(line: 1319, column: 27, scope: !2786)
!2840 = !DILocation(line: 1319, column: 40, scope: !2786)
!2841 = !DILocation(line: 1319, column: 50, scope: !2786)
!2842 = !DILocation(line: 1319, column: 63, scope: !2786)
!2843 = !DILocation(line: 1319, column: 74, scope: !2786)
!2844 = !DILocation(line: 1319, column: 84, scope: !2786)
!2845 = !DILocation(line: 1319, column: 92, scope: !2786)
!2846 = !DILocation(line: 1319, column: 6, scope: !2786)
!2847 = !DILocation(line: 1320, column: 5, scope: !2786)
!2848 = !DILocation(line: 1321, column: 4, scope: !2786)
!2849 = !DILocalVariable(name: "iOffs", scope: !2850, file: !1, line: 1325, type: !83)
!2850 = distinct !DILexicalBlock(scope: !2547, file: !1, line: 1324, column: 4)
!2851 = !DILocation(line: 1325, column: 15, scope: !2850)
!2852 = !DILocation(line: 1325, column: 23, scope: !2850)
!2853 = !DILocation(line: 1325, column: 33, scope: !2850)
!2854 = !DILocation(line: 1325, column: 36, scope: !2850)
!2855 = !DILocalVariable(name: "iVert", scope: !2850, file: !1, line: 1326, type: !83)
!2856 = !DILocation(line: 1326, column: 15, scope: !2850)
!2857 = !DILocation(line: 1326, column: 23, scope: !2850)
!2858 = !DILocation(line: 1326, column: 33, scope: !2850)
!2859 = !DILocation(line: 1326, column: 36, scope: !2850)
!2860 = !DILocation(line: 1326, column: 45, scope: !2850)
!2861 = !DILocalVariable(name: "pTS_out", scope: !2850, file: !1, line: 1327, type: !46)
!2862 = !DILocation(line: 1327, column: 15, scope: !2850)
!2863 = !DILocation(line: 1327, column: 26, scope: !2850)
!2864 = !DILocation(line: 1327, column: 35, scope: !2850)
!2865 = !DILocation(line: 1327, column: 41, scope: !2850)
!2866 = !DILocation(line: 1327, column: 40, scope: !2850)
!2867 = !DILocation(line: 1330, column: 9, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2850, file: !1, line: 1330, column: 9)
!2869 = !DILocation(line: 1330, column: 18, scope: !2868)
!2870 = !DILocation(line: 1330, column: 26, scope: !2868)
!2871 = !DILocation(line: 1330, column: 9, scope: !2850)
!2872 = !DILocation(line: 1332, column: 7, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2868, file: !1, line: 1331, column: 5)
!2874 = !DILocation(line: 1332, column: 27, scope: !2873)
!2875 = !DILocation(line: 1332, column: 37, scope: !2873)
!2876 = !DILocation(line: 1332, column: 53, scope: !2873)
!2877 = !DILocation(line: 1332, column: 17, scope: !2873)
!2878 = !DILocation(line: 1333, column: 6, scope: !2873)
!2879 = !DILocation(line: 1333, column: 15, scope: !2873)
!2880 = !DILocation(line: 1333, column: 24, scope: !2873)
!2881 = !DILocation(line: 1334, column: 25, scope: !2873)
!2882 = !DILocation(line: 1334, column: 33, scope: !2873)
!2883 = !DILocation(line: 1334, column: 6, scope: !2873)
!2884 = !DILocation(line: 1334, column: 15, scope: !2873)
!2885 = !DILocation(line: 1334, column: 23, scope: !2873)
!2886 = !DILocation(line: 1335, column: 5, scope: !2873)
!2887 = !DILocation(line: 1339, column: 7, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2868, file: !1, line: 1337, column: 5)
!2889 = !DILocation(line: 1339, column: 17, scope: !2888)
!2890 = !DILocation(line: 1339, column: 33, scope: !2888)
!2891 = !DILocation(line: 1340, column: 6, scope: !2888)
!2892 = !DILocation(line: 1340, column: 15, scope: !2888)
!2893 = !DILocation(line: 1340, column: 24, scope: !2888)
!2894 = !DILocation(line: 1341, column: 25, scope: !2888)
!2895 = !DILocation(line: 1341, column: 33, scope: !2888)
!2896 = !DILocation(line: 1341, column: 6, scope: !2888)
!2897 = !DILocation(line: 1341, column: 15, scope: !2888)
!2898 = !DILocation(line: 1341, column: 23, scope: !2888)
!2899 = !DILocation(line: 1344, column: 3, scope: !2547)
!2900 = !DILocation(line: 1224, column: 34, scope: !2541)
!2901 = !DILocation(line: 1224, column: 3, scope: !2541)
!2902 = distinct !{!2902, !2545, !2903}
!2903 = !DILocation(line: 1344, column: 3, scope: !2538)
!2904 = !DILocation(line: 1347, column: 9, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2529, file: !1, line: 1347, column: 3)
!2906 = !DILocation(line: 1347, column: 8, scope: !2905)
!2907 = !DILocation(line: 1347, column: 13, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2905, file: !1, line: 1347, column: 3)
!2909 = !DILocation(line: 1347, column: 15, scope: !2908)
!2910 = !DILocation(line: 1347, column: 14, scope: !2908)
!2911 = !DILocation(line: 1347, column: 3, scope: !2905)
!2912 = !DILocation(line: 1348, column: 9, scope: !2908)
!2913 = !DILocation(line: 1348, column: 23, scope: !2908)
!2914 = !DILocation(line: 1348, column: 26, scope: !2908)
!2915 = !DILocation(line: 1348, column: 4, scope: !2908)
!2916 = !DILocation(line: 1347, column: 34, scope: !2908)
!2917 = !DILocation(line: 1347, column: 3, scope: !2908)
!2918 = distinct !{!2918, !2911, !2919}
!2919 = !DILocation(line: 1348, column: 37, scope: !2905)
!2920 = !DILocation(line: 1349, column: 21, scope: !2529)
!2921 = !DILocation(line: 1349, column: 18, scope: !2529)
!2922 = !DILocation(line: 1350, column: 2, scope: !2529)
!2923 = !DILocation(line: 1219, column: 32, scope: !2524)
!2924 = !DILocation(line: 1219, column: 2, scope: !2524)
!2925 = distinct !{!2925, !2527, !2926}
!2926 = !DILocation(line: 1350, column: 2, scope: !2521)
!2927 = !DILocation(line: 1353, column: 7, scope: !2411)
!2928 = !DILocation(line: 1353, column: 2, scope: !2411)
!2929 = !DILocation(line: 1354, column: 7, scope: !2411)
!2930 = !DILocation(line: 1354, column: 2, scope: !2411)
!2931 = !DILocation(line: 1355, column: 7, scope: !2411)
!2932 = !DILocation(line: 1355, column: 2, scope: !2411)
!2933 = !DILocation(line: 1357, column: 2, scope: !2411)
!2934 = !DILocation(line: 1358, column: 1, scope: !2411)
!2935 = distinct !DISubprogram(name: "DegenEpilogue", scope: !1, file: !1, line: 1812, type: !2936, scopeLine: 1813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{null, !46, !8, !6, !91, !83, !83}
!2938 = !DILocalVariable(name: "psTspace", arg: 1, scope: !2935, file: !1, line: 1812, type: !46)
!2939 = !DILocation(line: 1812, column: 35, scope: !2935)
!2940 = !DILocalVariable(name: "pTriInfos", arg: 2, scope: !2935, file: !1, line: 1812, type: !8)
!2941 = !DILocation(line: 1812, column: 56, scope: !2935)
!2942 = !DILocalVariable(name: "piTriListIn", arg: 3, scope: !2935, file: !1, line: 1812, type: !6)
!2943 = !DILocation(line: 1812, column: 73, scope: !2935)
!2944 = !DILocalVariable(name: "pContext", arg: 4, scope: !2935, file: !1, line: 1812, type: !91)
!2945 = !DILocation(line: 1812, column: 115, scope: !2935)
!2946 = !DILocalVariable(name: "iNrTrianglesIn", arg: 5, scope: !2935, file: !1, line: 1812, type: !83)
!2947 = !DILocation(line: 1812, column: 135, scope: !2935)
!2948 = !DILocalVariable(name: "iTotTris", arg: 6, scope: !2935, file: !1, line: 1812, type: !83)
!2949 = !DILocation(line: 1812, column: 161, scope: !2935)
!2950 = !DILocalVariable(name: "t", scope: !2935, file: !1, line: 1814, type: !7)
!2951 = !DILocation(line: 1814, column: 6, scope: !2935)
!2952 = !DILocalVariable(name: "i", scope: !2935, file: !1, line: 1814, type: !7)
!2953 = !DILocation(line: 1814, column: 11, scope: !2935)
!2954 = !DILocation(line: 1817, column: 9, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2935, file: !1, line: 1817, column: 2)
!2956 = !DILocation(line: 1817, column: 8, scope: !2955)
!2957 = !DILocation(line: 1817, column: 7, scope: !2955)
!2958 = !DILocation(line: 1817, column: 25, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2955, file: !1, line: 1817, column: 2)
!2960 = !DILocation(line: 1817, column: 27, scope: !2959)
!2961 = !DILocation(line: 1817, column: 26, scope: !2959)
!2962 = !DILocation(line: 1817, column: 2, scope: !2955)
!2963 = !DILocalVariable(name: "bSkip", scope: !2964, file: !1, line: 1821, type: !126)
!2964 = distinct !DILexicalBlock(scope: !2959, file: !1, line: 1818, column: 2)
!2965 = !DILocation(line: 1821, column: 15, scope: !2964)
!2966 = !DILocation(line: 1821, column: 24, scope: !2964)
!2967 = !DILocation(line: 1821, column: 34, scope: !2964)
!2968 = !DILocation(line: 1821, column: 37, scope: !2964)
!2969 = !DILocation(line: 1821, column: 42, scope: !2964)
!2970 = !DILocation(line: 1821, column: 62, scope: !2964)
!2971 = !DILocation(line: 1821, column: 23, scope: !2964)
!2972 = !DILocation(line: 1823, column: 8, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2964, file: !1, line: 1823, column: 7)
!2974 = !DILocation(line: 1823, column: 7, scope: !2964)
!2975 = !DILocation(line: 1825, column: 10, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2977, file: !1, line: 1825, column: 4)
!2977 = distinct !DILexicalBlock(scope: !2973, file: !1, line: 1824, column: 3)
!2978 = !DILocation(line: 1825, column: 9, scope: !2976)
!2979 = !DILocation(line: 1825, column: 14, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2976, file: !1, line: 1825, column: 4)
!2981 = !DILocation(line: 1825, column: 15, scope: !2980)
!2982 = !DILocation(line: 1825, column: 4, scope: !2976)
!2983 = !DILocalVariable(name: "index1", scope: !2984, file: !1, line: 1827, type: !83)
!2984 = distinct !DILexicalBlock(scope: !2980, file: !1, line: 1826, column: 4)
!2985 = !DILocation(line: 1827, column: 15, scope: !2984)
!2986 = !DILocation(line: 1827, column: 24, scope: !2984)
!2987 = !DILocation(line: 1827, column: 36, scope: !2984)
!2988 = !DILocation(line: 1827, column: 37, scope: !2984)
!2989 = !DILocation(line: 1827, column: 40, scope: !2984)
!2990 = !DILocation(line: 1827, column: 39, scope: !2984)
!2991 = !DILocalVariable(name: "bNotFound", scope: !2984, file: !1, line: 1829, type: !26)
!2992 = !DILocation(line: 1829, column: 11, scope: !2984)
!2993 = !DILocalVariable(name: "j", scope: !2984, file: !1, line: 1830, type: !7)
!2994 = !DILocation(line: 1830, column: 9, scope: !2984)
!2995 = !DILocation(line: 1831, column: 5, scope: !2984)
!2996 = !DILocation(line: 1831, column: 12, scope: !2984)
!2997 = !DILocation(line: 1831, column: 22, scope: !2984)
!2998 = !DILocation(line: 1831, column: 25, scope: !2984)
!2999 = !DILocation(line: 1831, column: 30, scope: !2984)
!3000 = !DILocation(line: 1831, column: 29, scope: !2984)
!3001 = !DILocation(line: 1831, column: 26, scope: !2984)
!3002 = !DILocation(line: 0, scope: !2984)
!3003 = !DILocalVariable(name: "index2", scope: !3004, file: !1, line: 1833, type: !83)
!3004 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 1832, column: 5)
!3005 = !DILocation(line: 1833, column: 16, scope: !3004)
!3006 = !DILocation(line: 1833, column: 25, scope: !3004)
!3007 = !DILocation(line: 1833, column: 37, scope: !3004)
!3008 = !DILocation(line: 1834, column: 10, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !3004, file: !1, line: 1834, column: 10)
!3010 = !DILocation(line: 1834, column: 18, scope: !3009)
!3011 = !DILocation(line: 1834, column: 16, scope: !3009)
!3012 = !DILocation(line: 1834, column: 10, scope: !3004)
!3013 = !DILocation(line: 1834, column: 35, scope: !3009)
!3014 = !DILocation(line: 1834, column: 26, scope: !3009)
!3015 = !DILocation(line: 1835, column: 11, scope: !3009)
!3016 = distinct !{!3016, !2995, !3017}
!3017 = !DILocation(line: 1836, column: 5, scope: !2984)
!3018 = !DILocation(line: 1838, column: 10, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 1838, column: 9)
!3020 = !DILocation(line: 1838, column: 9, scope: !2984)
!3021 = !DILocalVariable(name: "iTri", scope: !3022, file: !1, line: 1840, type: !83)
!3022 = distinct !DILexicalBlock(scope: !3019, file: !1, line: 1839, column: 5)
!3023 = !DILocation(line: 1840, column: 16, scope: !3022)
!3024 = !DILocation(line: 1840, column: 23, scope: !3022)
!3025 = !DILocation(line: 1840, column: 24, scope: !3022)
!3026 = !DILocalVariable(name: "iVert", scope: !3022, file: !1, line: 1841, type: !83)
!3027 = !DILocation(line: 1841, column: 16, scope: !3022)
!3028 = !DILocation(line: 1841, column: 24, scope: !3022)
!3029 = !DILocation(line: 1841, column: 25, scope: !3022)
!3030 = !DILocalVariable(name: "iSrcVert", scope: !3022, file: !1, line: 1842, type: !83)
!3031 = !DILocation(line: 1842, column: 16, scope: !3022)
!3032 = !DILocation(line: 1842, column: 25, scope: !3022)
!3033 = !DILocation(line: 1842, column: 35, scope: !3022)
!3034 = !DILocation(line: 1842, column: 41, scope: !3022)
!3035 = !DILocation(line: 1842, column: 50, scope: !3022)
!3036 = !DILocalVariable(name: "iSrcOffs", scope: !3022, file: !1, line: 1843, type: !83)
!3037 = !DILocation(line: 1843, column: 16, scope: !3022)
!3038 = !DILocation(line: 1843, column: 25, scope: !3022)
!3039 = !DILocation(line: 1843, column: 35, scope: !3022)
!3040 = !DILocation(line: 1843, column: 41, scope: !3022)
!3041 = !DILocalVariable(name: "iDstVert", scope: !3022, file: !1, line: 1844, type: !83)
!3042 = !DILocation(line: 1844, column: 16, scope: !3022)
!3043 = !DILocation(line: 1844, column: 25, scope: !3022)
!3044 = !DILocation(line: 1844, column: 35, scope: !3022)
!3045 = !DILocation(line: 1844, column: 38, scope: !3022)
!3046 = !DILocation(line: 1844, column: 47, scope: !3022)
!3047 = !DILocalVariable(name: "iDstOffs", scope: !3022, file: !1, line: 1845, type: !83)
!3048 = !DILocation(line: 1845, column: 16, scope: !3022)
!3049 = !DILocation(line: 1845, column: 25, scope: !3022)
!3050 = !DILocation(line: 1845, column: 35, scope: !3022)
!3051 = !DILocation(line: 1845, column: 38, scope: !3022)
!3052 = !DILocation(line: 1848, column: 6, scope: !3022)
!3053 = !DILocation(line: 1848, column: 15, scope: !3022)
!3054 = !DILocation(line: 1848, column: 24, scope: !3022)
!3055 = !DILocation(line: 1848, column: 23, scope: !3022)
!3056 = !DILocation(line: 1848, column: 36, scope: !3022)
!3057 = !DILocation(line: 1848, column: 45, scope: !3022)
!3058 = !DILocation(line: 1848, column: 54, scope: !3022)
!3059 = !DILocation(line: 1848, column: 53, scope: !3022)
!3060 = !DILocation(line: 1849, column: 5, scope: !3022)
!3061 = !DILocation(line: 1850, column: 4, scope: !2984)
!3062 = !DILocation(line: 1825, column: 20, scope: !2980)
!3063 = !DILocation(line: 1825, column: 4, scope: !2980)
!3064 = distinct !{!3064, !2982, !3065}
!3065 = !DILocation(line: 1850, column: 4, scope: !2976)
!3066 = !DILocation(line: 1851, column: 3, scope: !2977)
!3067 = !DILocation(line: 1852, column: 2, scope: !2964)
!3068 = !DILocation(line: 1817, column: 38, scope: !2959)
!3069 = !DILocation(line: 1817, column: 2, scope: !2959)
!3070 = distinct !{!3070, !2962, !3071}
!3071 = !DILocation(line: 1852, column: 2, scope: !2955)
!3072 = !DILocation(line: 1855, column: 8, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !2935, file: !1, line: 1855, column: 2)
!3074 = !DILocation(line: 1855, column: 7, scope: !3073)
!3075 = !DILocation(line: 1855, column: 12, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3073, file: !1, line: 1855, column: 2)
!3077 = !DILocation(line: 1855, column: 14, scope: !3076)
!3078 = !DILocation(line: 1855, column: 13, scope: !3076)
!3079 = !DILocation(line: 1855, column: 2, scope: !3073)
!3080 = !DILocation(line: 1859, column: 9, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3082, file: !1, line: 1859, column: 8)
!3082 = distinct !DILexicalBlock(scope: !3076, file: !1, line: 1856, column: 2)
!3083 = !DILocation(line: 1859, column: 19, scope: !3081)
!3084 = !DILocation(line: 1859, column: 22, scope: !3081)
!3085 = !DILocation(line: 1859, column: 27, scope: !3081)
!3086 = !DILocation(line: 1859, column: 47, scope: !3081)
!3087 = !DILocation(line: 1859, column: 8, scope: !3082)
!3088 = !DILocalVariable(name: "vDstP", scope: !3089, file: !1, line: 1861, type: !29)
!3089 = distinct !DILexicalBlock(scope: !3081, file: !1, line: 1860, column: 3)
!3090 = !DILocation(line: 1861, column: 10, scope: !3089)
!3091 = !DILocalVariable(name: "iOrgF", scope: !3089, file: !1, line: 1862, type: !7)
!3092 = !DILocation(line: 1862, column: 8, scope: !3089)
!3093 = !DILocalVariable(name: "i", scope: !3089, file: !1, line: 1862, type: !7)
!3094 = !DILocation(line: 1862, column: 18, scope: !3089)
!3095 = !DILocalVariable(name: "bNotFound", scope: !3089, file: !1, line: 1863, type: !26)
!3096 = !DILocation(line: 1863, column: 10, scope: !3089)
!3097 = !DILocalVariable(name: "pV", scope: !3089, file: !1, line: 1864, type: !703)
!3098 = !DILocation(line: 1864, column: 20, scope: !3089)
!3099 = !DILocation(line: 1864, column: 25, scope: !3089)
!3100 = !DILocation(line: 1864, column: 35, scope: !3089)
!3101 = !DILocation(line: 1864, column: 38, scope: !3089)
!3102 = !DILocalVariable(name: "iFlag", scope: !3089, file: !1, line: 1865, type: !7)
!3103 = !DILocation(line: 1865, column: 8, scope: !3089)
!3104 = !DILocation(line: 1865, column: 20, scope: !3089)
!3105 = !DILocation(line: 1865, column: 18, scope: !3089)
!3106 = !DILocation(line: 1865, column: 33, scope: !3089)
!3107 = !DILocation(line: 1865, column: 31, scope: !3089)
!3108 = !DILocation(line: 1865, column: 27, scope: !3089)
!3109 = !DILocation(line: 1865, column: 46, scope: !3089)
!3110 = !DILocation(line: 1865, column: 44, scope: !3089)
!3111 = !DILocation(line: 1865, column: 40, scope: !3089)
!3112 = !DILocalVariable(name: "iMissingIndex", scope: !3089, file: !1, line: 1866, type: !7)
!3113 = !DILocation(line: 1866, column: 8, scope: !3089)
!3114 = !DILocation(line: 1867, column: 9, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3089, file: !1, line: 1867, column: 8)
!3116 = !DILocation(line: 1867, column: 14, scope: !3115)
!3117 = !DILocation(line: 1867, column: 17, scope: !3115)
!3118 = !DILocation(line: 1867, column: 8, scope: !3089)
!3119 = !DILocation(line: 1867, column: 35, scope: !3115)
!3120 = !DILocation(line: 1867, column: 22, scope: !3115)
!3121 = !DILocation(line: 1868, column: 14, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3115, file: !1, line: 1868, column: 13)
!3123 = !DILocation(line: 1868, column: 19, scope: !3122)
!3124 = !DILocation(line: 1868, column: 22, scope: !3122)
!3125 = !DILocation(line: 1868, column: 13, scope: !3115)
!3126 = !DILocation(line: 1868, column: 40, scope: !3122)
!3127 = !DILocation(line: 1868, column: 27, scope: !3122)
!3128 = !DILocation(line: 1869, column: 14, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3122, file: !1, line: 1869, column: 13)
!3130 = !DILocation(line: 1869, column: 19, scope: !3129)
!3131 = !DILocation(line: 1869, column: 22, scope: !3129)
!3132 = !DILocation(line: 1869, column: 13, scope: !3122)
!3133 = !DILocation(line: 1869, column: 40, scope: !3129)
!3134 = !DILocation(line: 1869, column: 27, scope: !3129)
!3135 = !DILocation(line: 1871, column: 12, scope: !3089)
!3136 = !DILocation(line: 1871, column: 22, scope: !3089)
!3137 = !DILocation(line: 1871, column: 25, scope: !3089)
!3138 = !DILocation(line: 1871, column: 10, scope: !3089)
!3139 = !DILocation(line: 1872, column: 24, scope: !3089)
!3140 = !DILocation(line: 1872, column: 44, scope: !3089)
!3141 = !DILocation(line: 1872, column: 51, scope: !3089)
!3142 = !DILocation(line: 1872, column: 34, scope: !3089)
!3143 = !DILocation(line: 1872, column: 12, scope: !3089)
!3144 = !DILocation(line: 1873, column: 14, scope: !3089)
!3145 = !DILocation(line: 1874, column: 5, scope: !3089)
!3146 = !DILocation(line: 1875, column: 4, scope: !3089)
!3147 = !DILocation(line: 1875, column: 11, scope: !3089)
!3148 = !DILocation(line: 1875, column: 21, scope: !3089)
!3149 = !DILocation(line: 1875, column: 24, scope: !3089)
!3150 = !DILocation(line: 1875, column: 25, scope: !3089)
!3151 = !DILocation(line: 0, scope: !3089)
!3152 = !DILocalVariable(name: "iVert", scope: !3153, file: !1, line: 1877, type: !83)
!3153 = distinct !DILexicalBlock(scope: !3089, file: !1, line: 1876, column: 4)
!3154 = !DILocation(line: 1877, column: 15, scope: !3153)
!3155 = !DILocation(line: 1877, column: 23, scope: !3153)
!3156 = !DILocation(line: 1877, column: 26, scope: !3153)
!3157 = !DILocalVariable(name: "vSrcP", scope: !3153, file: !1, line: 1878, type: !322)
!3158 = !DILocation(line: 1878, column: 17, scope: !3153)
!3159 = !DILocation(line: 1878, column: 37, scope: !3153)
!3160 = !DILocation(line: 1878, column: 57, scope: !3153)
!3161 = !DILocation(line: 1878, column: 64, scope: !3153)
!3162 = !DILocation(line: 1878, column: 47, scope: !3153)
!3163 = !DILocation(line: 1878, column: 25, scope: !3153)
!3164 = !DILocation(line: 1879, column: 9, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3153, file: !1, line: 1879, column: 9)
!3166 = !DILocation(line: 1879, column: 26, scope: !3165)
!3167 = !DILocation(line: 1879, column: 9, scope: !3153)
!3168 = !DILocalVariable(name: "iOffs", scope: !3169, file: !1, line: 1881, type: !83)
!3169 = distinct !DILexicalBlock(scope: !3165, file: !1, line: 1880, column: 5)
!3170 = !DILocation(line: 1881, column: 16, scope: !3169)
!3171 = !DILocation(line: 1881, column: 24, scope: !3169)
!3172 = !DILocation(line: 1881, column: 34, scope: !3169)
!3173 = !DILocation(line: 1881, column: 37, scope: !3169)
!3174 = !DILocation(line: 1882, column: 6, scope: !3169)
!3175 = !DILocation(line: 1882, column: 15, scope: !3169)
!3176 = !DILocation(line: 1882, column: 21, scope: !3169)
!3177 = !DILocation(line: 1882, column: 20, scope: !3169)
!3178 = !DILocation(line: 1882, column: 38, scope: !3169)
!3179 = !DILocation(line: 1882, column: 47, scope: !3169)
!3180 = !DILocation(line: 1882, column: 53, scope: !3169)
!3181 = !DILocation(line: 1882, column: 52, scope: !3169)
!3182 = !DILocation(line: 1883, column: 15, scope: !3169)
!3183 = !DILocation(line: 1884, column: 5, scope: !3169)
!3184 = !DILocation(line: 1886, column: 6, scope: !3165)
!3185 = distinct !{!3185, !3146, !3186}
!3186 = !DILocation(line: 1887, column: 4, scope: !3089)
!3187 = !DILocation(line: 1889, column: 3, scope: !3089)
!3188 = !DILocation(line: 1890, column: 2, scope: !3082)
!3189 = !DILocation(line: 1855, column: 31, scope: !3076)
!3190 = !DILocation(line: 1855, column: 2, scope: !3076)
!3191 = distinct !{!3191, !3079, !3192}
!3192 = !DILocation(line: 1890, column: 2, scope: !3073)
!3193 = !DILocation(line: 1891, column: 1, scope: !2935)
!3194 = distinct !DISubprogram(name: "vsub", scope: !1, file: !1, line: 64, type: !3195, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!29, !322, !322}
!3197 = !DILocalVariable(name: "v1", arg: 1, scope: !3194, file: !1, line: 64, type: !322)
!3198 = !DILocation(line: 64, column: 33, scope: !3194)
!3199 = !DILocalVariable(name: "v2", arg: 2, scope: !3194, file: !1, line: 64, type: !322)
!3200 = !DILocation(line: 64, column: 49, scope: !3194)
!3201 = !DILocalVariable(name: "vRes", scope: !3194, file: !1, line: 66, type: !29)
!3202 = !DILocation(line: 66, column: 8, scope: !3194)
!3203 = !DILocation(line: 68, column: 14, scope: !3194)
!3204 = !DILocation(line: 68, column: 21, scope: !3194)
!3205 = !DILocation(line: 68, column: 16, scope: !3194)
!3206 = !DILocation(line: 68, column: 7, scope: !3194)
!3207 = !DILocation(line: 68, column: 9, scope: !3194)
!3208 = !DILocation(line: 69, column: 14, scope: !3194)
!3209 = !DILocation(line: 69, column: 21, scope: !3194)
!3210 = !DILocation(line: 69, column: 16, scope: !3194)
!3211 = !DILocation(line: 69, column: 7, scope: !3194)
!3212 = !DILocation(line: 69, column: 9, scope: !3194)
!3213 = !DILocation(line: 70, column: 14, scope: !3194)
!3214 = !DILocation(line: 70, column: 21, scope: !3194)
!3215 = !DILocation(line: 70, column: 16, scope: !3194)
!3216 = !DILocation(line: 70, column: 7, scope: !3194)
!3217 = !DILocation(line: 70, column: 9, scope: !3194)
!3218 = !DILocation(line: 72, column: 2, scope: !3194)
!3219 = distinct !DISubprogram(name: "GenerateSharedVerticesIndexListSlow", scope: !1, file: !1, line: 721, type: !1001, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3220 = !DILocalVariable(name: "piTriList_in_and_out", arg: 1, scope: !3219, file: !1, line: 721, type: !6)
!3221 = !DILocation(line: 721, column: 53, scope: !3219)
!3222 = !DILocalVariable(name: "pContext", arg: 2, scope: !3219, file: !1, line: 721, type: !91)
!3223 = !DILocation(line: 721, column: 104, scope: !3219)
!3224 = !DILocalVariable(name: "iNrTrianglesIn", arg: 3, scope: !3219, file: !1, line: 721, type: !83)
!3225 = !DILocation(line: 721, column: 124, scope: !3219)
!3226 = !DILocalVariable(name: "iNumUniqueVerts", scope: !3219, file: !1, line: 723, type: !7)
!3227 = !DILocation(line: 723, column: 6, scope: !3219)
!3228 = !DILocalVariable(name: "t", scope: !3219, file: !1, line: 723, type: !7)
!3229 = !DILocation(line: 723, column: 27, scope: !3219)
!3230 = !DILocalVariable(name: "i", scope: !3219, file: !1, line: 723, type: !7)
!3231 = !DILocation(line: 723, column: 32, scope: !3219)
!3232 = !DILocation(line: 724, column: 8, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3219, file: !1, line: 724, column: 2)
!3234 = !DILocation(line: 724, column: 7, scope: !3233)
!3235 = !DILocation(line: 724, column: 12, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3233, file: !1, line: 724, column: 2)
!3237 = !DILocation(line: 724, column: 14, scope: !3236)
!3238 = !DILocation(line: 724, column: 13, scope: !3236)
!3239 = !DILocation(line: 724, column: 2, scope: !3233)
!3240 = !DILocation(line: 726, column: 9, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3242, file: !1, line: 726, column: 3)
!3242 = distinct !DILexicalBlock(scope: !3236, file: !1, line: 725, column: 2)
!3243 = !DILocation(line: 726, column: 8, scope: !3241)
!3244 = !DILocation(line: 726, column: 13, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3241, file: !1, line: 726, column: 3)
!3246 = !DILocation(line: 726, column: 14, scope: !3245)
!3247 = !DILocation(line: 726, column: 3, scope: !3241)
!3248 = !DILocalVariable(name: "offs", scope: !3249, file: !1, line: 728, type: !83)
!3249 = distinct !DILexicalBlock(scope: !3245, file: !1, line: 727, column: 3)
!3250 = !DILocation(line: 728, column: 14, scope: !3249)
!3251 = !DILocation(line: 728, column: 21, scope: !3249)
!3252 = !DILocation(line: 728, column: 22, scope: !3249)
!3253 = !DILocation(line: 728, column: 27, scope: !3249)
!3254 = !DILocation(line: 728, column: 25, scope: !3249)
!3255 = !DILocalVariable(name: "index", scope: !3249, file: !1, line: 729, type: !83)
!3256 = !DILocation(line: 729, column: 14, scope: !3249)
!3257 = !DILocation(line: 729, column: 22, scope: !3249)
!3258 = !DILocation(line: 729, column: 43, scope: !3249)
!3259 = !DILocalVariable(name: "vP", scope: !3249, file: !1, line: 731, type: !322)
!3260 = !DILocation(line: 731, column: 16, scope: !3249)
!3261 = !DILocation(line: 731, column: 33, scope: !3249)
!3262 = !DILocation(line: 731, column: 43, scope: !3249)
!3263 = !DILocation(line: 731, column: 21, scope: !3249)
!3264 = !DILocalVariable(name: "vN", scope: !3249, file: !1, line: 732, type: !322)
!3265 = !DILocation(line: 732, column: 16, scope: !3249)
!3266 = !DILocation(line: 732, column: 31, scope: !3249)
!3267 = !DILocation(line: 732, column: 41, scope: !3249)
!3268 = !DILocation(line: 732, column: 21, scope: !3249)
!3269 = !DILocalVariable(name: "vT", scope: !3249, file: !1, line: 733, type: !322)
!3270 = !DILocation(line: 733, column: 16, scope: !3249)
!3271 = !DILocation(line: 733, column: 33, scope: !3249)
!3272 = !DILocation(line: 733, column: 43, scope: !3249)
!3273 = !DILocation(line: 733, column: 21, scope: !3249)
!3274 = !DILocalVariable(name: "bFound", scope: !3249, file: !1, line: 735, type: !26)
!3275 = !DILocation(line: 735, column: 10, scope: !3249)
!3276 = !DILocalVariable(name: "t2", scope: !3249, file: !1, line: 736, type: !7)
!3277 = !DILocation(line: 736, column: 8, scope: !3249)
!3278 = !DILocalVariable(name: "index2rec", scope: !3249, file: !1, line: 736, type: !7)
!3279 = !DILocation(line: 736, column: 14, scope: !3249)
!3280 = !DILocation(line: 737, column: 4, scope: !3249)
!3281 = !DILocation(line: 737, column: 12, scope: !3249)
!3282 = !DILocation(line: 737, column: 19, scope: !3249)
!3283 = !DILocation(line: 737, column: 22, scope: !3249)
!3284 = !DILocation(line: 737, column: 26, scope: !3249)
!3285 = !DILocation(line: 737, column: 24, scope: !3249)
!3286 = !DILocation(line: 0, scope: !3249)
!3287 = !DILocalVariable(name: "j", scope: !3288, file: !1, line: 739, type: !7)
!3288 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 738, column: 4)
!3289 = !DILocation(line: 739, column: 9, scope: !3288)
!3290 = !DILocation(line: 740, column: 5, scope: !3288)
!3291 = !DILocation(line: 740, column: 13, scope: !3288)
!3292 = !DILocation(line: 740, column: 20, scope: !3288)
!3293 = !DILocation(line: 740, column: 23, scope: !3288)
!3294 = !DILocation(line: 740, column: 24, scope: !3288)
!3295 = !DILocation(line: 0, scope: !3288)
!3296 = !DILocalVariable(name: "index2", scope: !3297, file: !1, line: 742, type: !83)
!3297 = distinct !DILexicalBlock(scope: !3288, file: !1, line: 741, column: 5)
!3298 = !DILocation(line: 742, column: 16, scope: !3297)
!3299 = !DILocation(line: 742, column: 25, scope: !3297)
!3300 = !DILocation(line: 742, column: 46, scope: !3297)
!3301 = !DILocation(line: 742, column: 48, scope: !3297)
!3302 = !DILocation(line: 742, column: 53, scope: !3297)
!3303 = !DILocation(line: 742, column: 51, scope: !3297)
!3304 = !DILocalVariable(name: "vP2", scope: !3297, file: !1, line: 743, type: !322)
!3305 = !DILocation(line: 743, column: 18, scope: !3297)
!3306 = !DILocation(line: 743, column: 36, scope: !3297)
!3307 = !DILocation(line: 743, column: 46, scope: !3297)
!3308 = !DILocation(line: 743, column: 24, scope: !3297)
!3309 = !DILocalVariable(name: "vN2", scope: !3297, file: !1, line: 744, type: !322)
!3310 = !DILocation(line: 744, column: 18, scope: !3297)
!3311 = !DILocation(line: 744, column: 34, scope: !3297)
!3312 = !DILocation(line: 744, column: 44, scope: !3297)
!3313 = !DILocation(line: 744, column: 24, scope: !3297)
!3314 = !DILocalVariable(name: "vT2", scope: !3297, file: !1, line: 745, type: !322)
!3315 = !DILocation(line: 745, column: 18, scope: !3297)
!3316 = !DILocation(line: 745, column: 36, scope: !3297)
!3317 = !DILocation(line: 745, column: 46, scope: !3297)
!3318 = !DILocation(line: 745, column: 24, scope: !3297)
!3319 = !DILocation(line: 747, column: 10, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 747, column: 10)
!3321 = !DILocation(line: 747, column: 22, scope: !3320)
!3322 = !DILocation(line: 747, column: 25, scope: !3320)
!3323 = !DILocation(line: 747, column: 37, scope: !3320)
!3324 = !DILocation(line: 747, column: 40, scope: !3320)
!3325 = !DILocation(line: 747, column: 10, scope: !3297)
!3326 = !DILocation(line: 748, column: 14, scope: !3320)
!3327 = !DILocation(line: 748, column: 7, scope: !3320)
!3328 = !DILocation(line: 750, column: 7, scope: !3320)
!3329 = distinct !{!3329, !3290, !3330}
!3330 = !DILocation(line: 751, column: 5, scope: !3288)
!3331 = !DILocation(line: 752, column: 10, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3288, file: !1, line: 752, column: 9)
!3333 = !DILocation(line: 752, column: 9, scope: !3288)
!3334 = !DILocation(line: 752, column: 18, scope: !3332)
!3335 = distinct !{!3335, !3280, !3336}
!3336 = !DILocation(line: 753, column: 4, scope: !3249)
!3337 = !DILocation(line: 757, column: 8, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 757, column: 8)
!3339 = !DILocation(line: 757, column: 21, scope: !3338)
!3340 = !DILocation(line: 757, column: 18, scope: !3338)
!3341 = !DILocation(line: 757, column: 8, scope: !3249)
!3342 = !DILocation(line: 757, column: 30, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3338, file: !1, line: 757, column: 28)
!3344 = !DILocation(line: 757, column: 49, scope: !3343)
!3345 = !DILocation(line: 759, column: 33, scope: !3249)
!3346 = !DILocation(line: 759, column: 4, scope: !3249)
!3347 = !DILocation(line: 759, column: 25, scope: !3249)
!3348 = !DILocation(line: 759, column: 31, scope: !3249)
!3349 = !DILocation(line: 760, column: 3, scope: !3249)
!3350 = !DILocation(line: 726, column: 19, scope: !3245)
!3351 = !DILocation(line: 726, column: 3, scope: !3245)
!3352 = distinct !{!3352, !3247, !3353}
!3353 = !DILocation(line: 760, column: 3, scope: !3241)
!3354 = !DILocation(line: 761, column: 2, scope: !3242)
!3355 = !DILocation(line: 724, column: 31, scope: !3236)
!3356 = !DILocation(line: 724, column: 2, scope: !3236)
!3357 = distinct !{!3357, !3239, !3358}
!3358 = !DILocation(line: 761, column: 2, scope: !3233)
!3359 = !DILocation(line: 762, column: 1, scope: !3219)
!3360 = distinct !DISubprogram(name: "FindGridCell", scope: !1, file: !1, line: 440, type: !3361, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3361 = !DISubroutineType(types: !3362)
!3362 = !{!7, !121, !121, !121}
!3363 = !DILocalVariable(name: "fMin", arg: 1, scope: !3360, file: !1, line: 440, type: !121)
!3364 = !DILocation(line: 440, column: 46, scope: !3360)
!3365 = !DILocalVariable(name: "fMax", arg: 2, scope: !3360, file: !1, line: 440, type: !121)
!3366 = !DILocation(line: 440, column: 64, scope: !3360)
!3367 = !DILocalVariable(name: "fVal", arg: 3, scope: !3360, file: !1, line: 440, type: !121)
!3368 = !DILocation(line: 440, column: 82, scope: !3360)
!3369 = !DILocalVariable(name: "fIndex", scope: !3360, file: !1, line: 442, type: !121)
!3370 = !DILocation(line: 442, column: 14, scope: !3360)
!3371 = !DILocation(line: 442, column: 36, scope: !3360)
!3372 = !DILocation(line: 442, column: 41, scope: !3360)
!3373 = !DILocation(line: 442, column: 40, scope: !3360)
!3374 = !DILocation(line: 442, column: 48, scope: !3360)
!3375 = !DILocation(line: 442, column: 53, scope: !3360)
!3376 = !DILocation(line: 442, column: 52, scope: !3360)
!3377 = !DILocation(line: 442, column: 46, scope: !3360)
!3378 = !DILocation(line: 442, column: 32, scope: !3360)
!3379 = !DILocalVariable(name: "iIndex", scope: !3360, file: !1, line: 443, type: !83)
!3380 = !DILocation(line: 443, column: 12, scope: !3360)
!3381 = !DILocation(line: 443, column: 26, scope: !3360)
!3382 = !DILocation(line: 443, column: 21, scope: !3360)
!3383 = !DILocation(line: 444, column: 9, scope: !3360)
!3384 = !DILocation(line: 444, column: 16, scope: !3360)
!3385 = !DILocation(line: 444, column: 30, scope: !3360)
!3386 = !DILocation(line: 444, column: 37, scope: !3360)
!3387 = !DILocation(line: 444, column: 44, scope: !3360)
!3388 = !DILocation(line: 444, column: 2, scope: !3360)
!3389 = distinct !DISubprogram(name: "MergeVertsFast", scope: !1, file: !1, line: 576, type: !3390, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{null, !6, !56, !91, !83, !83}
!3392 = !DILocalVariable(name: "piTriList_in_and_out", arg: 1, scope: !3389, file: !1, line: 576, type: !6)
!3393 = !DILocation(line: 576, column: 32, scope: !3389)
!3394 = !DILocalVariable(name: "pTmpVert", arg: 2, scope: !3389, file: !1, line: 576, type: !56)
!3395 = !DILocation(line: 576, column: 65, scope: !3389)
!3396 = !DILocalVariable(name: "pContext", arg: 3, scope: !3389, file: !1, line: 576, type: !91)
!3397 = !DILocation(line: 576, column: 104, scope: !3389)
!3398 = !DILocalVariable(name: "iL_in", arg: 4, scope: !3389, file: !1, line: 576, type: !83)
!3399 = !DILocation(line: 576, column: 124, scope: !3389)
!3400 = !DILocalVariable(name: "iR_in", arg: 5, scope: !3389, file: !1, line: 576, type: !83)
!3401 = !DILocation(line: 576, column: 141, scope: !3389)
!3402 = !DILocalVariable(name: "c", scope: !3389, file: !1, line: 579, type: !7)
!3403 = !DILocation(line: 579, column: 6, scope: !3389)
!3404 = !DILocalVariable(name: "l", scope: !3389, file: !1, line: 579, type: !7)
!3405 = !DILocation(line: 579, column: 11, scope: !3389)
!3406 = !DILocalVariable(name: "channel", scope: !3389, file: !1, line: 579, type: !7)
!3407 = !DILocation(line: 579, column: 16, scope: !3389)
!3408 = !DILocalVariable(name: "fvMin", scope: !3389, file: !1, line: 580, type: !61)
!3409 = !DILocation(line: 580, column: 8, scope: !3389)
!3410 = !DILocalVariable(name: "fvMax", scope: !3389, file: !1, line: 580, type: !61)
!3411 = !DILocation(line: 580, column: 18, scope: !3389)
!3412 = !DILocalVariable(name: "dx", scope: !3389, file: !1, line: 581, type: !4)
!3413 = !DILocation(line: 581, column: 8, scope: !3389)
!3414 = !DILocalVariable(name: "dy", scope: !3389, file: !1, line: 581, type: !4)
!3415 = !DILocation(line: 581, column: 14, scope: !3389)
!3416 = !DILocalVariable(name: "dz", scope: !3389, file: !1, line: 581, type: !4)
!3417 = !DILocation(line: 581, column: 20, scope: !3389)
!3418 = !DILocalVariable(name: "fSep", scope: !3389, file: !1, line: 581, type: !4)
!3419 = !DILocation(line: 581, column: 26, scope: !3389)
!3420 = !DILocation(line: 582, column: 8, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3389, file: !1, line: 582, column: 2)
!3422 = !DILocation(line: 582, column: 7, scope: !3421)
!3423 = !DILocation(line: 582, column: 12, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3421, file: !1, line: 582, column: 2)
!3425 = !DILocation(line: 582, column: 13, scope: !3424)
!3426 = !DILocation(line: 582, column: 2, scope: !3421)
!3427 = !DILocation(line: 583, column: 13, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3424, file: !1, line: 583, column: 2)
!3429 = !DILocation(line: 583, column: 22, scope: !3428)
!3430 = !DILocation(line: 583, column: 29, scope: !3428)
!3431 = !DILocation(line: 583, column: 34, scope: !3428)
!3432 = !DILocation(line: 583, column: 10, scope: !3428)
!3433 = !DILocation(line: 583, column: 4, scope: !3428)
!3434 = !DILocation(line: 583, column: 12, scope: !3428)
!3435 = !DILocation(line: 583, column: 53, scope: !3428)
!3436 = !DILocation(line: 583, column: 47, scope: !3428)
!3437 = !DILocation(line: 583, column: 44, scope: !3428)
!3438 = !DILocation(line: 583, column: 38, scope: !3428)
!3439 = !DILocation(line: 583, column: 46, scope: !3428)
!3440 = !DILocation(line: 583, column: 57, scope: !3428)
!3441 = !DILocation(line: 582, column: 18, scope: !3424)
!3442 = !DILocation(line: 582, column: 2, scope: !3424)
!3443 = distinct !{!3443, !3426, !3444}
!3444 = !DILocation(line: 583, column: 57, scope: !3421)
!3445 = !DILocation(line: 584, column: 10, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3389, file: !1, line: 584, column: 2)
!3447 = !DILocation(line: 584, column: 15, scope: !3446)
!3448 = !DILocation(line: 584, column: 8, scope: !3446)
!3449 = !DILocation(line: 584, column: 7, scope: !3446)
!3450 = !DILocation(line: 584, column: 20, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3446, file: !1, line: 584, column: 2)
!3452 = !DILocation(line: 584, column: 23, scope: !3451)
!3453 = !DILocation(line: 584, column: 21, scope: !3451)
!3454 = !DILocation(line: 584, column: 2, scope: !3446)
!3455 = !DILocation(line: 585, column: 9, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3451, file: !1, line: 585, column: 3)
!3457 = !DILocation(line: 585, column: 8, scope: !3456)
!3458 = !DILocation(line: 585, column: 13, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3456, file: !1, line: 585, column: 3)
!3460 = !DILocation(line: 585, column: 14, scope: !3459)
!3461 = !DILocation(line: 585, column: 3, scope: !3456)
!3462 = !DILocation(line: 586, column: 14, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3459, file: !1, line: 586, column: 8)
!3464 = !DILocation(line: 586, column: 8, scope: !3463)
!3465 = !DILocation(line: 586, column: 17, scope: !3463)
!3466 = !DILocation(line: 586, column: 26, scope: !3463)
!3467 = !DILocation(line: 586, column: 29, scope: !3463)
!3468 = !DILocation(line: 586, column: 34, scope: !3463)
!3469 = !DILocation(line: 586, column: 16, scope: !3463)
!3470 = !DILocation(line: 586, column: 8, scope: !3459)
!3471 = !DILocation(line: 586, column: 47, scope: !3463)
!3472 = !DILocation(line: 586, column: 56, scope: !3463)
!3473 = !DILocation(line: 586, column: 59, scope: !3463)
!3474 = !DILocation(line: 586, column: 64, scope: !3463)
!3475 = !DILocation(line: 586, column: 44, scope: !3463)
!3476 = !DILocation(line: 586, column: 38, scope: !3463)
!3477 = !DILocation(line: 586, column: 46, scope: !3463)
!3478 = !DILocation(line: 587, column: 19, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3463, file: !1, line: 587, column: 13)
!3480 = !DILocation(line: 587, column: 13, scope: !3479)
!3481 = !DILocation(line: 587, column: 22, scope: !3479)
!3482 = !DILocation(line: 587, column: 31, scope: !3479)
!3483 = !DILocation(line: 587, column: 34, scope: !3479)
!3484 = !DILocation(line: 587, column: 39, scope: !3479)
!3485 = !DILocation(line: 587, column: 21, scope: !3479)
!3486 = !DILocation(line: 587, column: 13, scope: !3463)
!3487 = !DILocation(line: 587, column: 52, scope: !3479)
!3488 = !DILocation(line: 587, column: 61, scope: !3479)
!3489 = !DILocation(line: 587, column: 64, scope: !3479)
!3490 = !DILocation(line: 587, column: 69, scope: !3479)
!3491 = !DILocation(line: 587, column: 49, scope: !3479)
!3492 = !DILocation(line: 587, column: 43, scope: !3479)
!3493 = !DILocation(line: 587, column: 51, scope: !3479)
!3494 = !DILocation(line: 586, column: 35, scope: !3463)
!3495 = !DILocation(line: 585, column: 19, scope: !3459)
!3496 = !DILocation(line: 585, column: 3, scope: !3459)
!3497 = distinct !{!3497, !3461, !3498}
!3498 = !DILocation(line: 587, column: 70, scope: !3456)
!3499 = !DILocation(line: 584, column: 31, scope: !3451)
!3500 = !DILocation(line: 584, column: 2, scope: !3451)
!3501 = distinct !{!3501, !3454, !3502}
!3502 = !DILocation(line: 587, column: 70, scope: !3446)
!3503 = !DILocation(line: 589, column: 7, scope: !3389)
!3504 = !DILocation(line: 589, column: 16, scope: !3389)
!3505 = !DILocation(line: 589, column: 15, scope: !3389)
!3506 = !DILocation(line: 589, column: 5, scope: !3389)
!3507 = !DILocation(line: 590, column: 7, scope: !3389)
!3508 = !DILocation(line: 590, column: 16, scope: !3389)
!3509 = !DILocation(line: 590, column: 15, scope: !3389)
!3510 = !DILocation(line: 590, column: 5, scope: !3389)
!3511 = !DILocation(line: 591, column: 7, scope: !3389)
!3512 = !DILocation(line: 591, column: 16, scope: !3389)
!3513 = !DILocation(line: 591, column: 15, scope: !3389)
!3514 = !DILocation(line: 591, column: 5, scope: !3389)
!3515 = !DILocation(line: 593, column: 10, scope: !3389)
!3516 = !DILocation(line: 594, column: 6, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3389, file: !1, line: 594, column: 6)
!3518 = !DILocation(line: 594, column: 9, scope: !3517)
!3519 = !DILocation(line: 594, column: 8, scope: !3517)
!3520 = !DILocation(line: 594, column: 12, scope: !3517)
!3521 = !DILocation(line: 594, column: 15, scope: !3517)
!3522 = !DILocation(line: 594, column: 18, scope: !3517)
!3523 = !DILocation(line: 594, column: 17, scope: !3517)
!3524 = !DILocation(line: 594, column: 6, scope: !3389)
!3525 = !DILocation(line: 594, column: 29, scope: !3517)
!3526 = !DILocation(line: 594, column: 22, scope: !3517)
!3527 = !DILocation(line: 595, column: 11, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3517, file: !1, line: 595, column: 11)
!3529 = !DILocation(line: 595, column: 14, scope: !3528)
!3530 = !DILocation(line: 595, column: 13, scope: !3528)
!3531 = !DILocation(line: 595, column: 11, scope: !3517)
!3532 = !DILocation(line: 595, column: 25, scope: !3528)
!3533 = !DILocation(line: 595, column: 18, scope: !3528)
!3534 = !DILocation(line: 597, column: 21, scope: !3389)
!3535 = !DILocation(line: 597, column: 15, scope: !3389)
!3536 = !DILocation(line: 597, column: 36, scope: !3389)
!3537 = !DILocation(line: 597, column: 30, scope: !3389)
!3538 = !DILocation(line: 597, column: 29, scope: !3389)
!3539 = !DILocation(line: 597, column: 13, scope: !3389)
!3540 = !DILocation(line: 597, column: 7, scope: !3389)
!3541 = !DILocation(line: 601, column: 6, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3389, file: !1, line: 601, column: 6)
!3543 = !DILocation(line: 601, column: 18, scope: !3542)
!3544 = !DILocation(line: 601, column: 12, scope: !3542)
!3545 = !DILocation(line: 601, column: 10, scope: !3542)
!3546 = !DILocation(line: 601, column: 27, scope: !3542)
!3547 = !DILocation(line: 601, column: 30, scope: !3542)
!3548 = !DILocation(line: 601, column: 42, scope: !3542)
!3549 = !DILocation(line: 601, column: 36, scope: !3542)
!3550 = !DILocation(line: 601, column: 34, scope: !3542)
!3551 = !DILocation(line: 601, column: 6, scope: !3389)
!3552 = !DILocation(line: 604, column: 10, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !1, line: 604, column: 3)
!3554 = distinct !DILexicalBlock(scope: !3542, file: !1, line: 602, column: 2)
!3555 = !DILocation(line: 604, column: 9, scope: !3553)
!3556 = !DILocation(line: 604, column: 8, scope: !3553)
!3557 = !DILocation(line: 604, column: 17, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3553, file: !1, line: 604, column: 3)
!3559 = !DILocation(line: 604, column: 20, scope: !3558)
!3560 = !DILocation(line: 604, column: 18, scope: !3558)
!3561 = !DILocation(line: 604, column: 3, scope: !3553)
!3562 = !DILocalVariable(name: "i", scope: !3563, file: !1, line: 606, type: !7)
!3563 = distinct !DILexicalBlock(scope: !3558, file: !1, line: 605, column: 3)
!3564 = !DILocation(line: 606, column: 8, scope: !3563)
!3565 = !DILocation(line: 606, column: 12, scope: !3563)
!3566 = !DILocation(line: 606, column: 21, scope: !3563)
!3567 = !DILocation(line: 606, column: 24, scope: !3563)
!3568 = !DILocalVariable(name: "index", scope: !3563, file: !1, line: 607, type: !83)
!3569 = !DILocation(line: 607, column: 14, scope: !3563)
!3570 = !DILocation(line: 607, column: 22, scope: !3563)
!3571 = !DILocation(line: 607, column: 43, scope: !3563)
!3572 = !DILocalVariable(name: "vP", scope: !3563, file: !1, line: 608, type: !322)
!3573 = !DILocation(line: 608, column: 16, scope: !3563)
!3574 = !DILocation(line: 608, column: 33, scope: !3563)
!3575 = !DILocation(line: 608, column: 43, scope: !3563)
!3576 = !DILocation(line: 608, column: 21, scope: !3563)
!3577 = !DILocalVariable(name: "vN", scope: !3563, file: !1, line: 609, type: !322)
!3578 = !DILocation(line: 609, column: 16, scope: !3563)
!3579 = !DILocation(line: 609, column: 31, scope: !3563)
!3580 = !DILocation(line: 609, column: 41, scope: !3563)
!3581 = !DILocation(line: 609, column: 21, scope: !3563)
!3582 = !DILocalVariable(name: "vT", scope: !3563, file: !1, line: 610, type: !322)
!3583 = !DILocation(line: 610, column: 16, scope: !3563)
!3584 = !DILocation(line: 610, column: 33, scope: !3563)
!3585 = !DILocation(line: 610, column: 43, scope: !3563)
!3586 = !DILocation(line: 610, column: 21, scope: !3563)
!3587 = !DILocalVariable(name: "bNotFound", scope: !3563, file: !1, line: 612, type: !26)
!3588 = !DILocation(line: 612, column: 10, scope: !3563)
!3589 = !DILocalVariable(name: "l2", scope: !3563, file: !1, line: 613, type: !7)
!3590 = !DILocation(line: 613, column: 8, scope: !3563)
!3591 = !DILocation(line: 613, column: 11, scope: !3563)
!3592 = !DILocalVariable(name: "i2rec", scope: !3563, file: !1, line: 613, type: !7)
!3593 = !DILocation(line: 613, column: 18, scope: !3563)
!3594 = !DILocation(line: 614, column: 4, scope: !3563)
!3595 = !DILocation(line: 614, column: 11, scope: !3563)
!3596 = !DILocation(line: 614, column: 14, scope: !3563)
!3597 = !DILocation(line: 614, column: 13, scope: !3563)
!3598 = !DILocation(line: 614, column: 16, scope: !3563)
!3599 = !DILocation(line: 614, column: 19, scope: !3563)
!3600 = !DILocation(line: 0, scope: !3563)
!3601 = !DILocalVariable(name: "i2", scope: !3602, file: !1, line: 616, type: !83)
!3602 = distinct !DILexicalBlock(scope: !3563, file: !1, line: 615, column: 4)
!3603 = !DILocation(line: 616, column: 15, scope: !3602)
!3604 = !DILocation(line: 616, column: 20, scope: !3602)
!3605 = !DILocation(line: 616, column: 29, scope: !3602)
!3606 = !DILocation(line: 616, column: 33, scope: !3602)
!3607 = !DILocalVariable(name: "index2", scope: !3602, file: !1, line: 617, type: !83)
!3608 = !DILocation(line: 617, column: 15, scope: !3602)
!3609 = !DILocation(line: 617, column: 24, scope: !3602)
!3610 = !DILocation(line: 617, column: 45, scope: !3602)
!3611 = !DILocalVariable(name: "vP2", scope: !3602, file: !1, line: 618, type: !322)
!3612 = !DILocation(line: 618, column: 17, scope: !3602)
!3613 = !DILocation(line: 618, column: 35, scope: !3602)
!3614 = !DILocation(line: 618, column: 45, scope: !3602)
!3615 = !DILocation(line: 618, column: 23, scope: !3602)
!3616 = !DILocalVariable(name: "vN2", scope: !3602, file: !1, line: 619, type: !322)
!3617 = !DILocation(line: 619, column: 17, scope: !3602)
!3618 = !DILocation(line: 619, column: 33, scope: !3602)
!3619 = !DILocation(line: 619, column: 43, scope: !3602)
!3620 = !DILocation(line: 619, column: 23, scope: !3602)
!3621 = !DILocalVariable(name: "vT2", scope: !3602, file: !1, line: 620, type: !322)
!3622 = !DILocation(line: 620, column: 17, scope: !3602)
!3623 = !DILocation(line: 620, column: 35, scope: !3602)
!3624 = !DILocation(line: 620, column: 45, scope: !3602)
!3625 = !DILocation(line: 620, column: 23, scope: !3602)
!3626 = !DILocation(line: 621, column: 11, scope: !3602)
!3627 = !DILocation(line: 621, column: 10, scope: !3602)
!3628 = !DILocation(line: 624, column: 12, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3602, file: !1, line: 624, column: 9)
!3630 = !DILocation(line: 624, column: 19, scope: !3629)
!3631 = !DILocation(line: 624, column: 13, scope: !3629)
!3632 = !DILocation(line: 624, column: 21, scope: !3629)
!3633 = !DILocation(line: 624, column: 27, scope: !3629)
!3634 = !DILocation(line: 624, column: 34, scope: !3629)
!3635 = !DILocation(line: 624, column: 28, scope: !3629)
!3636 = !DILocation(line: 624, column: 36, scope: !3629)
!3637 = !DILocation(line: 624, column: 42, scope: !3629)
!3638 = !DILocation(line: 624, column: 49, scope: !3629)
!3639 = !DILocation(line: 624, column: 43, scope: !3629)
!3640 = !DILocation(line: 624, column: 51, scope: !3629)
!3641 = !DILocation(line: 625, column: 9, scope: !3629)
!3642 = !DILocation(line: 625, column: 16, scope: !3629)
!3643 = !DILocation(line: 625, column: 10, scope: !3629)
!3644 = !DILocation(line: 625, column: 18, scope: !3629)
!3645 = !DILocation(line: 625, column: 24, scope: !3629)
!3646 = !DILocation(line: 625, column: 31, scope: !3629)
!3647 = !DILocation(line: 625, column: 25, scope: !3629)
!3648 = !DILocation(line: 625, column: 33, scope: !3629)
!3649 = !DILocation(line: 625, column: 39, scope: !3629)
!3650 = !DILocation(line: 625, column: 46, scope: !3629)
!3651 = !DILocation(line: 625, column: 40, scope: !3629)
!3652 = !DILocation(line: 625, column: 48, scope: !3629)
!3653 = !DILocation(line: 626, column: 9, scope: !3629)
!3654 = !DILocation(line: 626, column: 16, scope: !3629)
!3655 = !DILocation(line: 626, column: 10, scope: !3629)
!3656 = !DILocation(line: 626, column: 18, scope: !3629)
!3657 = !DILocation(line: 626, column: 24, scope: !3629)
!3658 = !DILocation(line: 626, column: 31, scope: !3629)
!3659 = !DILocation(line: 626, column: 25, scope: !3629)
!3660 = !DILocation(line: 626, column: 33, scope: !3629)
!3661 = !DILocation(line: 626, column: 39, scope: !3629)
!3662 = !DILocation(line: 626, column: 46, scope: !3629)
!3663 = !DILocation(line: 626, column: 40, scope: !3629)
!3664 = !DILocation(line: 624, column: 9, scope: !3602)
!3665 = !DILocation(line: 627, column: 16, scope: !3629)
!3666 = !DILocation(line: 627, column: 6, scope: !3629)
!3667 = !DILocation(line: 629, column: 6, scope: !3629)
!3668 = distinct !{!3668, !3594, !3669}
!3669 = !DILocation(line: 630, column: 4, scope: !3563)
!3670 = !DILocation(line: 633, column: 9, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3563, file: !1, line: 633, column: 8)
!3672 = !DILocation(line: 633, column: 8, scope: !3563)
!3673 = !DILocation(line: 634, column: 31, scope: !3671)
!3674 = !DILocation(line: 634, column: 52, scope: !3671)
!3675 = !DILocation(line: 634, column: 5, scope: !3671)
!3676 = !DILocation(line: 634, column: 26, scope: !3671)
!3677 = !DILocation(line: 634, column: 29, scope: !3671)
!3678 = !DILocation(line: 635, column: 3, scope: !3563)
!3679 = !DILocation(line: 604, column: 28, scope: !3558)
!3680 = !DILocation(line: 604, column: 3, scope: !3558)
!3681 = distinct !{!3681, !3561, !3682}
!3682 = !DILocation(line: 635, column: 3, scope: !3553)
!3683 = !DILocation(line: 636, column: 2, scope: !3554)
!3684 = !DILocalVariable(name: "iL", scope: !3685, file: !1, line: 639, type: !7)
!3685 = distinct !DILexicalBlock(scope: !3542, file: !1, line: 638, column: 2)
!3686 = !DILocation(line: 639, column: 7, scope: !3685)
!3687 = !DILocation(line: 639, column: 10, scope: !3685)
!3688 = !DILocalVariable(name: "iR", scope: !3685, file: !1, line: 639, type: !7)
!3689 = !DILocation(line: 639, column: 17, scope: !3685)
!3690 = !DILocation(line: 639, column: 20, scope: !3685)
!3691 = !DILocation(line: 643, column: 3, scope: !3685)
!3692 = !DILocation(line: 643, column: 10, scope: !3685)
!3693 = !DILocation(line: 643, column: 15, scope: !3685)
!3694 = !DILocation(line: 643, column: 13, scope: !3685)
!3695 = !DILocalVariable(name: "bReadyLeftSwap", scope: !3696, file: !1, line: 645, type: !26)
!3696 = distinct !DILexicalBlock(scope: !3685, file: !1, line: 644, column: 3)
!3697 = !DILocation(line: 645, column: 10, scope: !3696)
!3698 = !DILocalVariable(name: "bReadyRightSwap", scope: !3696, file: !1, line: 645, type: !26)
!3699 = !DILocation(line: 645, column: 35, scope: !3696)
!3700 = !DILocation(line: 646, column: 4, scope: !3696)
!3701 = !DILocation(line: 646, column: 13, scope: !3696)
!3702 = !DILocation(line: 646, column: 29, scope: !3696)
!3703 = !DILocation(line: 646, column: 32, scope: !3696)
!3704 = !DILocation(line: 646, column: 35, scope: !3696)
!3705 = !DILocation(line: 646, column: 34, scope: !3696)
!3706 = !DILocation(line: 0, scope: !3696)
!3707 = !DILocation(line: 649, column: 24, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3696, file: !1, line: 647, column: 4)
!3709 = !DILocation(line: 649, column: 33, scope: !3708)
!3710 = !DILocation(line: 649, column: 37, scope: !3708)
!3711 = !DILocation(line: 649, column: 42, scope: !3708)
!3712 = !DILocation(line: 649, column: 51, scope: !3708)
!3713 = !DILocation(line: 649, column: 50, scope: !3708)
!3714 = !DILocation(line: 649, column: 22, scope: !3708)
!3715 = !DILocation(line: 649, column: 20, scope: !3708)
!3716 = !DILocation(line: 650, column: 10, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3708, file: !1, line: 650, column: 9)
!3718 = !DILocation(line: 650, column: 9, scope: !3708)
!3719 = !DILocation(line: 650, column: 26, scope: !3717)
!3720 = distinct !{!3720, !3700, !3721}
!3721 = !DILocation(line: 651, column: 4, scope: !3696)
!3722 = !DILocation(line: 652, column: 4, scope: !3696)
!3723 = !DILocation(line: 652, column: 13, scope: !3696)
!3724 = !DILocation(line: 652, column: 30, scope: !3696)
!3725 = !DILocation(line: 652, column: 33, scope: !3696)
!3726 = !DILocation(line: 652, column: 36, scope: !3696)
!3727 = !DILocation(line: 652, column: 35, scope: !3696)
!3728 = !DILocation(line: 655, column: 23, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3696, file: !1, line: 653, column: 4)
!3730 = !DILocation(line: 655, column: 32, scope: !3729)
!3731 = !DILocation(line: 655, column: 36, scope: !3729)
!3732 = !DILocation(line: 655, column: 41, scope: !3729)
!3733 = !DILocation(line: 655, column: 50, scope: !3729)
!3734 = !DILocation(line: 655, column: 49, scope: !3729)
!3735 = !DILocation(line: 655, column: 21, scope: !3729)
!3736 = !DILocation(line: 656, column: 10, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3729, file: !1, line: 656, column: 9)
!3738 = !DILocation(line: 656, column: 9, scope: !3729)
!3739 = !DILocation(line: 656, column: 27, scope: !3737)
!3740 = distinct !{!3740, !3722, !3741}
!3741 = !DILocation(line: 657, column: 4, scope: !3696)
!3742 = !DILocation(line: 660, column: 8, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3696, file: !1, line: 660, column: 8)
!3744 = !DILocation(line: 660, column: 23, scope: !3743)
!3745 = !DILocation(line: 660, column: 26, scope: !3743)
!3746 = !DILocation(line: 660, column: 8, scope: !3696)
!3747 = !DILocalVariable(name: "sTmp", scope: !3748, file: !1, line: 662, type: !3749)
!3748 = distinct !DILexicalBlock(scope: !3743, file: !1, line: 661, column: 4)
!3749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !57)
!3750 = !DILocation(line: 662, column: 20, scope: !3748)
!3751 = !DILocation(line: 662, column: 27, scope: !3748)
!3752 = !DILocation(line: 662, column: 36, scope: !3748)
!3753 = !DILocation(line: 664, column: 5, scope: !3748)
!3754 = !DILocation(line: 664, column: 14, scope: !3748)
!3755 = !DILocation(line: 664, column: 20, scope: !3748)
!3756 = !DILocation(line: 664, column: 29, scope: !3748)
!3757 = !DILocation(line: 665, column: 5, scope: !3748)
!3758 = !DILocation(line: 665, column: 14, scope: !3748)
!3759 = !DILocation(line: 665, column: 20, scope: !3748)
!3760 = !DILocation(line: 666, column: 5, scope: !3748)
!3761 = !DILocation(line: 666, column: 11, scope: !3748)
!3762 = !DILocation(line: 667, column: 4, scope: !3748)
!3763 = distinct !{!3763, !3691, !3764}
!3764 = !DILocation(line: 668, column: 3, scope: !3685)
!3765 = !DILocation(line: 671, column: 7, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3685, file: !1, line: 671, column: 7)
!3767 = !DILocation(line: 671, column: 11, scope: !3766)
!3768 = !DILocation(line: 671, column: 9, scope: !3766)
!3769 = !DILocation(line: 671, column: 7, scope: !3685)
!3770 = !DILocalVariable(name: "bReadyRightSwap", scope: !3771, file: !1, line: 673, type: !126)
!3771 = distinct !DILexicalBlock(scope: !3766, file: !1, line: 672, column: 3)
!3772 = !DILocation(line: 673, column: 16, scope: !3771)
!3773 = !DILocation(line: 673, column: 34, scope: !3771)
!3774 = !DILocation(line: 673, column: 43, scope: !3771)
!3775 = !DILocation(line: 673, column: 47, scope: !3771)
!3776 = !DILocation(line: 673, column: 52, scope: !3771)
!3777 = !DILocation(line: 673, column: 61, scope: !3771)
!3778 = !DILocation(line: 673, column: 60, scope: !3771)
!3779 = !DILocation(line: 674, column: 8, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3771, file: !1, line: 674, column: 8)
!3781 = !DILocation(line: 674, column: 8, scope: !3771)
!3782 = !DILocation(line: 674, column: 25, scope: !3780)
!3783 = !DILocation(line: 675, column: 9, scope: !3780)
!3784 = !DILocation(line: 676, column: 3, scope: !3771)
!3785 = !DILocation(line: 679, column: 7, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3685, file: !1, line: 679, column: 7)
!3787 = !DILocation(line: 679, column: 15, scope: !3786)
!3788 = !DILocation(line: 679, column: 13, scope: !3786)
!3789 = !DILocation(line: 679, column: 7, scope: !3685)
!3790 = !DILocation(line: 680, column: 19, scope: !3786)
!3791 = !DILocation(line: 680, column: 41, scope: !3786)
!3792 = !DILocation(line: 680, column: 51, scope: !3786)
!3793 = !DILocation(line: 680, column: 61, scope: !3786)
!3794 = !DILocation(line: 680, column: 68, scope: !3786)
!3795 = !DILocation(line: 680, column: 4, scope: !3786)
!3796 = !DILocation(line: 681, column: 7, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3685, file: !1, line: 681, column: 7)
!3798 = !DILocation(line: 681, column: 12, scope: !3797)
!3799 = !DILocation(line: 681, column: 10, scope: !3797)
!3800 = !DILocation(line: 681, column: 7, scope: !3685)
!3801 = !DILocation(line: 682, column: 19, scope: !3797)
!3802 = !DILocation(line: 682, column: 41, scope: !3797)
!3803 = !DILocation(line: 682, column: 51, scope: !3797)
!3804 = !DILocation(line: 682, column: 61, scope: !3797)
!3805 = !DILocation(line: 682, column: 65, scope: !3797)
!3806 = !DILocation(line: 682, column: 4, scope: !3797)
!3807 = !DILocation(line: 684, column: 1, scope: !3389)
!3808 = distinct !DISubprogram(name: "MergeVertsSlow", scope: !1, file: !1, line: 686, type: !3809, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null, !6, !91, !1752, !83}
!3811 = !DILocalVariable(name: "piTriList_in_and_out", arg: 1, scope: !3808, file: !1, line: 686, type: !6)
!3812 = !DILocation(line: 686, column: 32, scope: !3808)
!3813 = !DILocalVariable(name: "pContext", arg: 2, scope: !3808, file: !1, line: 686, type: !91)
!3814 = !DILocation(line: 686, column: 83, scope: !3808)
!3815 = !DILocalVariable(name: "pTable", arg: 3, scope: !3808, file: !1, line: 686, type: !1752)
!3816 = !DILocation(line: 686, column: 103, scope: !3808)
!3817 = !DILocalVariable(name: "iEntries", arg: 4, scope: !3808, file: !1, line: 686, type: !83)
!3818 = !DILocation(line: 686, column: 123, scope: !3808)
!3819 = !DILocalVariable(name: "e", scope: !3808, file: !1, line: 689, type: !7)
!3820 = !DILocation(line: 689, column: 6, scope: !3808)
!3821 = !DILocation(line: 690, column: 8, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3808, file: !1, line: 690, column: 2)
!3823 = !DILocation(line: 690, column: 7, scope: !3822)
!3824 = !DILocation(line: 690, column: 12, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3822, file: !1, line: 690, column: 2)
!3826 = !DILocation(line: 690, column: 14, scope: !3825)
!3827 = !DILocation(line: 690, column: 13, scope: !3825)
!3828 = !DILocation(line: 690, column: 2, scope: !3822)
!3829 = !DILocalVariable(name: "i", scope: !3830, file: !1, line: 692, type: !7)
!3830 = distinct !DILexicalBlock(scope: !3825, file: !1, line: 691, column: 2)
!3831 = !DILocation(line: 692, column: 7, scope: !3830)
!3832 = !DILocation(line: 692, column: 11, scope: !3830)
!3833 = !DILocation(line: 692, column: 18, scope: !3830)
!3834 = !DILocalVariable(name: "index", scope: !3830, file: !1, line: 693, type: !83)
!3835 = !DILocation(line: 693, column: 13, scope: !3830)
!3836 = !DILocation(line: 693, column: 21, scope: !3830)
!3837 = !DILocation(line: 693, column: 42, scope: !3830)
!3838 = !DILocalVariable(name: "vP", scope: !3830, file: !1, line: 694, type: !322)
!3839 = !DILocation(line: 694, column: 15, scope: !3830)
!3840 = !DILocation(line: 694, column: 32, scope: !3830)
!3841 = !DILocation(line: 694, column: 42, scope: !3830)
!3842 = !DILocation(line: 694, column: 20, scope: !3830)
!3843 = !DILocalVariable(name: "vN", scope: !3830, file: !1, line: 695, type: !322)
!3844 = !DILocation(line: 695, column: 15, scope: !3830)
!3845 = !DILocation(line: 695, column: 30, scope: !3830)
!3846 = !DILocation(line: 695, column: 40, scope: !3830)
!3847 = !DILocation(line: 695, column: 20, scope: !3830)
!3848 = !DILocalVariable(name: "vT", scope: !3830, file: !1, line: 696, type: !322)
!3849 = !DILocation(line: 696, column: 15, scope: !3830)
!3850 = !DILocation(line: 696, column: 32, scope: !3830)
!3851 = !DILocation(line: 696, column: 42, scope: !3830)
!3852 = !DILocation(line: 696, column: 20, scope: !3830)
!3853 = !DILocalVariable(name: "bNotFound", scope: !3830, file: !1, line: 698, type: !26)
!3854 = !DILocation(line: 698, column: 9, scope: !3830)
!3855 = !DILocalVariable(name: "e2", scope: !3830, file: !1, line: 699, type: !7)
!3856 = !DILocation(line: 699, column: 7, scope: !3830)
!3857 = !DILocalVariable(name: "i2rec", scope: !3830, file: !1, line: 699, type: !7)
!3858 = !DILocation(line: 699, column: 13, scope: !3830)
!3859 = !DILocation(line: 700, column: 3, scope: !3830)
!3860 = !DILocation(line: 700, column: 10, scope: !3830)
!3861 = !DILocation(line: 700, column: 13, scope: !3830)
!3862 = !DILocation(line: 700, column: 12, scope: !3830)
!3863 = !DILocation(line: 700, column: 15, scope: !3830)
!3864 = !DILocation(line: 700, column: 18, scope: !3830)
!3865 = !DILocation(line: 0, scope: !3830)
!3866 = !DILocalVariable(name: "i2", scope: !3867, file: !1, line: 702, type: !83)
!3867 = distinct !DILexicalBlock(scope: !3830, file: !1, line: 701, column: 3)
!3868 = !DILocation(line: 702, column: 14, scope: !3867)
!3869 = !DILocation(line: 702, column: 19, scope: !3867)
!3870 = !DILocation(line: 702, column: 26, scope: !3867)
!3871 = !DILocalVariable(name: "index2", scope: !3867, file: !1, line: 703, type: !83)
!3872 = !DILocation(line: 703, column: 14, scope: !3867)
!3873 = !DILocation(line: 703, column: 23, scope: !3867)
!3874 = !DILocation(line: 703, column: 44, scope: !3867)
!3875 = !DILocalVariable(name: "vP2", scope: !3867, file: !1, line: 704, type: !322)
!3876 = !DILocation(line: 704, column: 16, scope: !3867)
!3877 = !DILocation(line: 704, column: 34, scope: !3867)
!3878 = !DILocation(line: 704, column: 44, scope: !3867)
!3879 = !DILocation(line: 704, column: 22, scope: !3867)
!3880 = !DILocalVariable(name: "vN2", scope: !3867, file: !1, line: 705, type: !322)
!3881 = !DILocation(line: 705, column: 16, scope: !3867)
!3882 = !DILocation(line: 705, column: 32, scope: !3867)
!3883 = !DILocation(line: 705, column: 42, scope: !3867)
!3884 = !DILocation(line: 705, column: 22, scope: !3867)
!3885 = !DILocalVariable(name: "vT2", scope: !3867, file: !1, line: 706, type: !322)
!3886 = !DILocation(line: 706, column: 16, scope: !3867)
!3887 = !DILocation(line: 706, column: 34, scope: !3867)
!3888 = !DILocation(line: 706, column: 44, scope: !3867)
!3889 = !DILocation(line: 706, column: 22, scope: !3867)
!3890 = !DILocation(line: 707, column: 12, scope: !3867)
!3891 = !DILocation(line: 707, column: 10, scope: !3867)
!3892 = !DILocation(line: 709, column: 8, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3867, file: !1, line: 709, column: 8)
!3894 = !DILocation(line: 709, column: 20, scope: !3893)
!3895 = !DILocation(line: 709, column: 23, scope: !3893)
!3896 = !DILocation(line: 709, column: 35, scope: !3893)
!3897 = !DILocation(line: 709, column: 38, scope: !3893)
!3898 = !DILocation(line: 709, column: 8, scope: !3867)
!3899 = !DILocation(line: 710, column: 15, scope: !3893)
!3900 = !DILocation(line: 710, column: 5, scope: !3893)
!3901 = !DILocation(line: 712, column: 5, scope: !3893)
!3902 = distinct !{!3902, !3859, !3903}
!3903 = !DILocation(line: 713, column: 3, scope: !3830)
!3904 = !DILocation(line: 716, column: 8, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3830, file: !1, line: 716, column: 7)
!3906 = !DILocation(line: 716, column: 7, scope: !3830)
!3907 = !DILocation(line: 717, column: 30, scope: !3905)
!3908 = !DILocation(line: 717, column: 51, scope: !3905)
!3909 = !DILocation(line: 717, column: 4, scope: !3905)
!3910 = !DILocation(line: 717, column: 25, scope: !3905)
!3911 = !DILocation(line: 717, column: 28, scope: !3905)
!3912 = !DILocation(line: 718, column: 2, scope: !3830)
!3913 = !DILocation(line: 690, column: 25, scope: !3825)
!3914 = !DILocation(line: 690, column: 2, scope: !3825)
!3915 = distinct !{!3915, !3828, !3916}
!3916 = !DILocation(line: 718, column: 2, scope: !3822)
!3917 = !DILocation(line: 719, column: 1, scope: !3808)
!3918 = distinct !DISubprogram(name: "GetNormal", scope: !1, file: !1, line: 885, type: !1481, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3919 = !DILocalVariable(name: "pContext", arg: 1, scope: !3918, file: !1, line: 885, type: !91)
!3920 = !DILocation(line: 885, column: 51, scope: !3918)
!3921 = !DILocalVariable(name: "index", arg: 2, scope: !3918, file: !1, line: 885, type: !83)
!3922 = !DILocation(line: 885, column: 71, scope: !3918)
!3923 = !DILocalVariable(name: "iF", scope: !3918, file: !1, line: 887, type: !7)
!3924 = !DILocation(line: 887, column: 6, scope: !3918)
!3925 = !DILocalVariable(name: "iI", scope: !3918, file: !1, line: 887, type: !7)
!3926 = !DILocation(line: 887, column: 10, scope: !3918)
!3927 = !DILocalVariable(name: "res", scope: !3918, file: !1, line: 888, type: !29)
!3928 = !DILocation(line: 888, column: 8, scope: !3918)
!3929 = !DILocalVariable(name: "norm", scope: !3918, file: !1, line: 888, type: !61)
!3930 = !DILocation(line: 888, column: 19, scope: !3918)
!3931 = !DILocation(line: 889, column: 24, scope: !3918)
!3932 = !DILocation(line: 889, column: 2, scope: !3918)
!3933 = !DILocation(line: 890, column: 2, scope: !3918)
!3934 = !DILocation(line: 890, column: 12, scope: !3918)
!3935 = !DILocation(line: 890, column: 26, scope: !3918)
!3936 = !DILocation(line: 890, column: 38, scope: !3918)
!3937 = !DILocation(line: 890, column: 48, scope: !3918)
!3938 = !DILocation(line: 890, column: 54, scope: !3918)
!3939 = !DILocation(line: 890, column: 58, scope: !3918)
!3940 = !DILocation(line: 891, column: 8, scope: !3918)
!3941 = !DILocation(line: 891, column: 6, scope: !3918)
!3942 = !DILocation(line: 891, column: 7, scope: !3918)
!3943 = !DILocation(line: 891, column: 23, scope: !3918)
!3944 = !DILocation(line: 891, column: 21, scope: !3918)
!3945 = !DILocation(line: 891, column: 22, scope: !3918)
!3946 = !DILocation(line: 891, column: 38, scope: !3918)
!3947 = !DILocation(line: 891, column: 36, scope: !3918)
!3948 = !DILocation(line: 891, column: 37, scope: !3918)
!3949 = !DILocation(line: 892, column: 2, scope: !3918)
!3950 = distinct !DISubprogram(name: "GetTexCoord", scope: !1, file: !1, line: 895, type: !1481, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3951 = !DILocalVariable(name: "pContext", arg: 1, scope: !3950, file: !1, line: 895, type: !91)
!3952 = !DILocation(line: 895, column: 53, scope: !3950)
!3953 = !DILocalVariable(name: "index", arg: 2, scope: !3950, file: !1, line: 895, type: !83)
!3954 = !DILocation(line: 895, column: 73, scope: !3950)
!3955 = !DILocalVariable(name: "iF", scope: !3950, file: !1, line: 897, type: !7)
!3956 = !DILocation(line: 897, column: 6, scope: !3950)
!3957 = !DILocalVariable(name: "iI", scope: !3950, file: !1, line: 897, type: !7)
!3958 = !DILocation(line: 897, column: 10, scope: !3950)
!3959 = !DILocalVariable(name: "res", scope: !3950, file: !1, line: 898, type: !29)
!3960 = !DILocation(line: 898, column: 8, scope: !3950)
!3961 = !DILocalVariable(name: "texc", scope: !3950, file: !1, line: 898, type: !3962)
!3962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 64, elements: !3963)
!3963 = !{!3964}
!3964 = !DISubrange(count: 2)
!3965 = !DILocation(line: 898, column: 19, scope: !3950)
!3966 = !DILocation(line: 899, column: 24, scope: !3950)
!3967 = !DILocation(line: 899, column: 2, scope: !3950)
!3968 = !DILocation(line: 900, column: 2, scope: !3950)
!3969 = !DILocation(line: 900, column: 12, scope: !3950)
!3970 = !DILocation(line: 900, column: 26, scope: !3950)
!3971 = !DILocation(line: 900, column: 40, scope: !3950)
!3972 = !DILocation(line: 900, column: 50, scope: !3950)
!3973 = !DILocation(line: 900, column: 56, scope: !3950)
!3974 = !DILocation(line: 900, column: 60, scope: !3950)
!3975 = !DILocation(line: 901, column: 8, scope: !3950)
!3976 = !DILocation(line: 901, column: 6, scope: !3950)
!3977 = !DILocation(line: 901, column: 7, scope: !3950)
!3978 = !DILocation(line: 901, column: 23, scope: !3950)
!3979 = !DILocation(line: 901, column: 21, scope: !3950)
!3980 = !DILocation(line: 901, column: 22, scope: !3950)
!3981 = !DILocation(line: 901, column: 36, scope: !3950)
!3982 = !DILocation(line: 901, column: 37, scope: !3950)
!3983 = !DILocation(line: 902, column: 2, scope: !3950)
!3984 = distinct !DISubprogram(name: "IndexToData", scope: !1, file: !1, line: 178, type: !3985, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{null, !6, !6, !83}
!3987 = !DILocalVariable(name: "piFace", arg: 1, scope: !3984, file: !1, line: 178, type: !6)
!3988 = !DILocation(line: 178, column: 31, scope: !3984)
!3989 = !DILocalVariable(name: "piVert", arg: 2, scope: !3984, file: !1, line: 178, type: !6)
!3990 = !DILocation(line: 178, column: 45, scope: !3984)
!3991 = !DILocalVariable(name: "iIndexIn", arg: 3, scope: !3984, file: !1, line: 178, type: !83)
!3992 = !DILocation(line: 178, column: 63, scope: !3984)
!3993 = !DILocation(line: 180, column: 14, scope: !3984)
!3994 = !DILocation(line: 180, column: 22, scope: !3984)
!3995 = !DILocation(line: 180, column: 2, scope: !3984)
!3996 = !DILocation(line: 180, column: 12, scope: !3984)
!3997 = !DILocation(line: 181, column: 14, scope: !3984)
!3998 = !DILocation(line: 181, column: 22, scope: !3984)
!3999 = !DILocation(line: 181, column: 2, scope: !3984)
!4000 = !DILocation(line: 181, column: 12, scope: !3984)
!4001 = !DILocation(line: 182, column: 1, scope: !3984)
!4002 = distinct !DISubprogram(name: "MakeIndex", scope: !1, file: !1, line: 172, type: !4003, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!7, !83, !83}
!4005 = !DILocalVariable(name: "iFace", arg: 1, scope: !4002, file: !1, line: 172, type: !83)
!4006 = !DILocation(line: 172, column: 32, scope: !4002)
!4007 = !DILocalVariable(name: "iVert", arg: 2, scope: !4002, file: !1, line: 172, type: !83)
!4008 = !DILocation(line: 172, column: 49, scope: !4002)
!4009 = !DILocation(line: 175, column: 10, scope: !4002)
!4010 = !DILocation(line: 175, column: 15, scope: !4002)
!4011 = !DILocation(line: 175, column: 23, scope: !4002)
!4012 = !DILocation(line: 175, column: 28, scope: !4002)
!4013 = !DILocation(line: 175, column: 20, scope: !4002)
!4014 = !DILocation(line: 175, column: 2, scope: !4002)
!4015 = distinct !DISubprogram(name: "LengthSquared", scope: !1, file: !1, line: 86, type: !4016, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!4, !322}
!4018 = !DILocalVariable(name: "v", arg: 1, scope: !4015, file: !1, line: 86, type: !322)
!4019 = !DILocation(line: 86, column: 43, scope: !4015)
!4020 = !DILocation(line: 88, column: 11, scope: !4015)
!4021 = !DILocation(line: 88, column: 15, scope: !4015)
!4022 = !DILocation(line: 88, column: 12, scope: !4015)
!4023 = !DILocation(line: 88, column: 21, scope: !4015)
!4024 = !DILocation(line: 88, column: 25, scope: !4015)
!4025 = !DILocation(line: 88, column: 22, scope: !4015)
!4026 = !DILocation(line: 88, column: 17, scope: !4015)
!4027 = !DILocation(line: 88, column: 31, scope: !4015)
!4028 = !DILocation(line: 88, column: 35, scope: !4015)
!4029 = !DILocation(line: 88, column: 32, scope: !4015)
!4030 = !DILocation(line: 88, column: 27, scope: !4015)
!4031 = !DILocation(line: 88, column: 2, scope: !4015)
!4032 = distinct !DISubprogram(name: "vscale", scope: !1, file: !1, line: 75, type: !4033, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4033 = !DISubroutineType(types: !4034)
!4034 = !{!29, !121, !322}
!4035 = !DILocalVariable(name: "fS", arg: 1, scope: !4032, file: !1, line: 75, type: !121)
!4036 = !DILocation(line: 75, column: 34, scope: !4032)
!4037 = !DILocalVariable(name: "v", arg: 2, scope: !4032, file: !1, line: 75, type: !322)
!4038 = !DILocation(line: 75, column: 50, scope: !4032)
!4039 = !DILocalVariable(name: "vRes", scope: !4032, file: !1, line: 77, type: !29)
!4040 = !DILocation(line: 77, column: 8, scope: !4032)
!4041 = !DILocation(line: 79, column: 11, scope: !4032)
!4042 = !DILocation(line: 79, column: 18, scope: !4032)
!4043 = !DILocation(line: 79, column: 14, scope: !4032)
!4044 = !DILocation(line: 79, column: 7, scope: !4032)
!4045 = !DILocation(line: 79, column: 9, scope: !4032)
!4046 = !DILocation(line: 80, column: 11, scope: !4032)
!4047 = !DILocation(line: 80, column: 18, scope: !4032)
!4048 = !DILocation(line: 80, column: 14, scope: !4032)
!4049 = !DILocation(line: 80, column: 7, scope: !4032)
!4050 = !DILocation(line: 80, column: 9, scope: !4032)
!4051 = !DILocation(line: 81, column: 11, scope: !4032)
!4052 = !DILocation(line: 81, column: 18, scope: !4032)
!4053 = !DILocation(line: 81, column: 14, scope: !4032)
!4054 = !DILocation(line: 81, column: 7, scope: !4032)
!4055 = !DILocation(line: 81, column: 9, scope: !4032)
!4056 = !DILocation(line: 83, column: 2, scope: !4032)
!4057 = distinct !DISubprogram(name: "vadd", scope: !1, file: !1, line: 52, type: !3195, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4058 = !DILocalVariable(name: "v1", arg: 1, scope: !4057, file: !1, line: 52, type: !322)
!4059 = !DILocation(line: 52, column: 33, scope: !4057)
!4060 = !DILocalVariable(name: "v2", arg: 2, scope: !4057, file: !1, line: 52, type: !322)
!4061 = !DILocation(line: 52, column: 49, scope: !4057)
!4062 = !DILocalVariable(name: "vRes", scope: !4057, file: !1, line: 54, type: !29)
!4063 = !DILocation(line: 54, column: 8, scope: !4057)
!4064 = !DILocation(line: 56, column: 14, scope: !4057)
!4065 = !DILocation(line: 56, column: 21, scope: !4057)
!4066 = !DILocation(line: 56, column: 16, scope: !4057)
!4067 = !DILocation(line: 56, column: 7, scope: !4057)
!4068 = !DILocation(line: 56, column: 9, scope: !4057)
!4069 = !DILocation(line: 57, column: 14, scope: !4057)
!4070 = !DILocation(line: 57, column: 21, scope: !4057)
!4071 = !DILocation(line: 57, column: 16, scope: !4057)
!4072 = !DILocation(line: 57, column: 7, scope: !4057)
!4073 = !DILocation(line: 57, column: 9, scope: !4057)
!4074 = !DILocation(line: 58, column: 14, scope: !4057)
!4075 = !DILocation(line: 58, column: 21, scope: !4057)
!4076 = !DILocation(line: 58, column: 16, scope: !4057)
!4077 = !DILocation(line: 58, column: 7, scope: !4057)
!4078 = !DILocation(line: 58, column: 9, scope: !4057)
!4079 = !DILocation(line: 60, column: 2, scope: !4057)
!4080 = distinct !DISubprogram(name: "NotZero", scope: !1, file: !1, line: 107, type: !4081, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!26, !121}
!4083 = !DILocalVariable(name: "fX", arg: 1, scope: !4080, file: !1, line: 107, type: !121)
!4084 = !DILocation(line: 107, column: 34, scope: !4080)
!4085 = !DILocation(line: 110, column: 15, scope: !4080)
!4086 = !DILocation(line: 110, column: 9, scope: !4080)
!4087 = !DILocation(line: 110, column: 19, scope: !4080)
!4088 = !DILocation(line: 110, column: 2, scope: !4080)
!4089 = distinct !DISubprogram(name: "Length", scope: !1, file: !1, line: 91, type: !4016, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4090 = !DILocalVariable(name: "v", arg: 1, scope: !4089, file: !1, line: 91, type: !322)
!4091 = !DILocation(line: 91, column: 36, scope: !4089)
!4092 = !DILocation(line: 93, column: 15, scope: !4089)
!4093 = !DILocation(line: 93, column: 9, scope: !4089)
!4094 = !DILocation(line: 93, column: 2, scope: !4089)
!4095 = distinct !DISubprogram(name: "CalcTexArea", scope: !1, file: !1, line: 921, type: !4096, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{!4, !91, !1752}
!4098 = !DILocalVariable(name: "pContext", arg: 1, scope: !4095, file: !1, line: 921, type: !91)
!4099 = !DILocation(line: 921, column: 53, scope: !4095)
!4100 = !DILocalVariable(name: "indices", arg: 2, scope: !4095, file: !1, line: 921, type: !1752)
!4101 = !DILocation(line: 921, column: 73, scope: !4095)
!4102 = !DILocalVariable(name: "t1", scope: !4095, file: !1, line: 923, type: !322)
!4103 = !DILocation(line: 923, column: 14, scope: !4095)
!4104 = !DILocation(line: 923, column: 31, scope: !4095)
!4105 = !DILocation(line: 923, column: 41, scope: !4095)
!4106 = !DILocation(line: 923, column: 19, scope: !4095)
!4107 = !DILocalVariable(name: "t2", scope: !4095, file: !1, line: 924, type: !322)
!4108 = !DILocation(line: 924, column: 14, scope: !4095)
!4109 = !DILocation(line: 924, column: 31, scope: !4095)
!4110 = !DILocation(line: 924, column: 41, scope: !4095)
!4111 = !DILocation(line: 924, column: 19, scope: !4095)
!4112 = !DILocalVariable(name: "t3", scope: !4095, file: !1, line: 925, type: !322)
!4113 = !DILocation(line: 925, column: 14, scope: !4095)
!4114 = !DILocation(line: 925, column: 31, scope: !4095)
!4115 = !DILocation(line: 925, column: 41, scope: !4095)
!4116 = !DILocation(line: 925, column: 19, scope: !4095)
!4117 = !DILocalVariable(name: "t21x", scope: !4095, file: !1, line: 927, type: !121)
!4118 = !DILocation(line: 927, column: 14, scope: !4095)
!4119 = !DILocation(line: 927, column: 24, scope: !4095)
!4120 = !DILocation(line: 927, column: 29, scope: !4095)
!4121 = !DILocation(line: 927, column: 25, scope: !4095)
!4122 = !DILocalVariable(name: "t21y", scope: !4095, file: !1, line: 928, type: !121)
!4123 = !DILocation(line: 928, column: 14, scope: !4095)
!4124 = !DILocation(line: 928, column: 24, scope: !4095)
!4125 = !DILocation(line: 928, column: 29, scope: !4095)
!4126 = !DILocation(line: 928, column: 25, scope: !4095)
!4127 = !DILocalVariable(name: "t31x", scope: !4095, file: !1, line: 929, type: !121)
!4128 = !DILocation(line: 929, column: 14, scope: !4095)
!4129 = !DILocation(line: 929, column: 24, scope: !4095)
!4130 = !DILocation(line: 929, column: 29, scope: !4095)
!4131 = !DILocation(line: 929, column: 25, scope: !4095)
!4132 = !DILocalVariable(name: "t31y", scope: !4095, file: !1, line: 930, type: !121)
!4133 = !DILocation(line: 930, column: 14, scope: !4095)
!4134 = !DILocation(line: 930, column: 24, scope: !4095)
!4135 = !DILocation(line: 930, column: 29, scope: !4095)
!4136 = !DILocation(line: 930, column: 25, scope: !4095)
!4137 = !DILocalVariable(name: "fSignedAreaSTx2", scope: !4095, file: !1, line: 932, type: !121)
!4138 = !DILocation(line: 932, column: 14, scope: !4095)
!4139 = !DILocation(line: 932, column: 32, scope: !4095)
!4140 = !DILocation(line: 932, column: 37, scope: !4095)
!4141 = !DILocation(line: 932, column: 36, scope: !4095)
!4142 = !DILocation(line: 932, column: 44, scope: !4095)
!4143 = !DILocation(line: 932, column: 49, scope: !4095)
!4144 = !DILocation(line: 932, column: 48, scope: !4095)
!4145 = !DILocation(line: 932, column: 42, scope: !4095)
!4146 = !DILocation(line: 934, column: 9, scope: !4095)
!4147 = !DILocation(line: 934, column: 24, scope: !4095)
!4148 = !DILocation(line: 934, column: 31, scope: !4095)
!4149 = !DILocation(line: 934, column: 30, scope: !4095)
!4150 = !DILocation(line: 934, column: 50, scope: !4095)
!4151 = !DILocation(line: 934, column: 2, scope: !4095)
!4152 = distinct !DISubprogram(name: "BuildNeighborsSlow", scope: !1, file: !1, line: 1589, type: !4153, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{null, !8, !1752, !83}
!4155 = !DILocalVariable(name: "pTriInfos", arg: 1, scope: !4152, file: !1, line: 1589, type: !8)
!4156 = !DILocation(line: 1589, column: 41, scope: !4152)
!4157 = !DILocalVariable(name: "piTriListIn", arg: 2, scope: !4152, file: !1, line: 1589, type: !1752)
!4158 = !DILocation(line: 1589, column: 64, scope: !4152)
!4159 = !DILocalVariable(name: "iNrTrianglesIn", arg: 3, scope: !4152, file: !1, line: 1589, type: !83)
!4160 = !DILocation(line: 1589, column: 89, scope: !4152)
!4161 = !DILocalVariable(name: "f", scope: !4152, file: !1, line: 1591, type: !7)
!4162 = !DILocation(line: 1591, column: 6, scope: !4152)
!4163 = !DILocalVariable(name: "i", scope: !4152, file: !1, line: 1591, type: !7)
!4164 = !DILocation(line: 1591, column: 11, scope: !4152)
!4165 = !DILocation(line: 1592, column: 8, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4152, file: !1, line: 1592, column: 2)
!4167 = !DILocation(line: 1592, column: 7, scope: !4166)
!4168 = !DILocation(line: 1592, column: 12, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4166, file: !1, line: 1592, column: 2)
!4170 = !DILocation(line: 1592, column: 14, scope: !4169)
!4171 = !DILocation(line: 1592, column: 13, scope: !4169)
!4172 = !DILocation(line: 1592, column: 2, scope: !4166)
!4173 = !DILocation(line: 1594, column: 9, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !1, line: 1594, column: 3)
!4175 = distinct !DILexicalBlock(scope: !4169, file: !1, line: 1593, column: 2)
!4176 = !DILocation(line: 1594, column: 8, scope: !4174)
!4177 = !DILocation(line: 1594, column: 13, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4174, file: !1, line: 1594, column: 3)
!4179 = !DILocation(line: 1594, column: 14, scope: !4178)
!4180 = !DILocation(line: 1594, column: 3, scope: !4174)
!4181 = !DILocation(line: 1597, column: 8, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !1, line: 1597, column: 8)
!4183 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 1595, column: 3)
!4184 = !DILocation(line: 1597, column: 18, scope: !4182)
!4185 = !DILocation(line: 1597, column: 21, scope: !4182)
!4186 = !DILocation(line: 1597, column: 35, scope: !4182)
!4187 = !DILocation(line: 1597, column: 38, scope: !4182)
!4188 = !DILocation(line: 1597, column: 8, scope: !4183)
!4189 = !DILocalVariable(name: "i0_A", scope: !4190, file: !1, line: 1599, type: !83)
!4190 = distinct !DILexicalBlock(scope: !4182, file: !1, line: 1598, column: 4)
!4191 = !DILocation(line: 1599, column: 15, scope: !4190)
!4192 = !DILocation(line: 1599, column: 22, scope: !4190)
!4193 = !DILocation(line: 1599, column: 34, scope: !4190)
!4194 = !DILocation(line: 1599, column: 35, scope: !4190)
!4195 = !DILocation(line: 1599, column: 38, scope: !4190)
!4196 = !DILocation(line: 1599, column: 37, scope: !4190)
!4197 = !DILocalVariable(name: "i1_A", scope: !4190, file: !1, line: 1600, type: !83)
!4198 = !DILocation(line: 1600, column: 15, scope: !4190)
!4199 = !DILocation(line: 1600, column: 22, scope: !4190)
!4200 = !DILocation(line: 1600, column: 34, scope: !4190)
!4201 = !DILocation(line: 1600, column: 35, scope: !4190)
!4202 = !DILocation(line: 1600, column: 39, scope: !4190)
!4203 = !DILocation(line: 1600, column: 40, scope: !4190)
!4204 = !DILocation(line: 1600, column: 44, scope: !4190)
!4205 = !DILocation(line: 1600, column: 45, scope: !4190)
!4206 = !DILocation(line: 1600, column: 37, scope: !4190)
!4207 = !DILocalVariable(name: "bFound", scope: !4190, file: !1, line: 1603, type: !26)
!4208 = !DILocation(line: 1603, column: 11, scope: !4190)
!4209 = !DILocalVariable(name: "t", scope: !4190, file: !1, line: 1604, type: !7)
!4210 = !DILocation(line: 1604, column: 9, scope: !4190)
!4211 = !DILocalVariable(name: "j", scope: !4190, file: !1, line: 1604, type: !7)
!4212 = !DILocation(line: 1604, column: 14, scope: !4190)
!4213 = !DILocation(line: 1605, column: 5, scope: !4190)
!4214 = !DILocation(line: 1605, column: 13, scope: !4190)
!4215 = !DILocation(line: 1605, column: 20, scope: !4190)
!4216 = !DILocation(line: 1605, column: 23, scope: !4190)
!4217 = !DILocation(line: 1605, column: 25, scope: !4190)
!4218 = !DILocation(line: 1605, column: 24, scope: !4190)
!4219 = !DILocation(line: 0, scope: !4190)
!4220 = !DILocation(line: 1607, column: 10, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !1, line: 1607, column: 10)
!4222 = distinct !DILexicalBlock(scope: !4190, file: !1, line: 1606, column: 5)
!4223 = !DILocation(line: 1607, column: 13, scope: !4221)
!4224 = !DILocation(line: 1607, column: 11, scope: !4221)
!4225 = !DILocation(line: 1607, column: 10, scope: !4222)
!4226 = !DILocation(line: 1609, column: 8, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4221, file: !1, line: 1608, column: 6)
!4228 = !DILocation(line: 1610, column: 7, scope: !4227)
!4229 = !DILocation(line: 1610, column: 15, scope: !4227)
!4230 = !DILocation(line: 1610, column: 22, scope: !4227)
!4231 = !DILocation(line: 1610, column: 25, scope: !4227)
!4232 = !DILocation(line: 1610, column: 26, scope: !4227)
!4233 = !DILocation(line: 0, scope: !4227)
!4234 = !DILocalVariable(name: "i1_B", scope: !4235, file: !1, line: 1613, type: !83)
!4235 = distinct !DILexicalBlock(scope: !4227, file: !1, line: 1611, column: 7)
!4236 = !DILocation(line: 1613, column: 18, scope: !4235)
!4237 = !DILocation(line: 1613, column: 25, scope: !4235)
!4238 = !DILocation(line: 1613, column: 37, scope: !4235)
!4239 = !DILocation(line: 1613, column: 38, scope: !4235)
!4240 = !DILocation(line: 1613, column: 41, scope: !4235)
!4241 = !DILocation(line: 1613, column: 40, scope: !4235)
!4242 = !DILocalVariable(name: "i0_B", scope: !4235, file: !1, line: 1614, type: !83)
!4243 = !DILocation(line: 1614, column: 18, scope: !4235)
!4244 = !DILocation(line: 1614, column: 25, scope: !4235)
!4245 = !DILocation(line: 1614, column: 37, scope: !4235)
!4246 = !DILocation(line: 1614, column: 38, scope: !4235)
!4247 = !DILocation(line: 1614, column: 42, scope: !4235)
!4248 = !DILocation(line: 1614, column: 43, scope: !4235)
!4249 = !DILocation(line: 1614, column: 47, scope: !4235)
!4250 = !DILocation(line: 1614, column: 48, scope: !4235)
!4251 = !DILocation(line: 1614, column: 40, scope: !4235)
!4252 = !DILocation(line: 1616, column: 12, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4235, file: !1, line: 1616, column: 12)
!4254 = !DILocation(line: 1616, column: 18, scope: !4253)
!4255 = !DILocation(line: 1616, column: 16, scope: !4253)
!4256 = !DILocation(line: 1616, column: 23, scope: !4253)
!4257 = !DILocation(line: 1616, column: 26, scope: !4253)
!4258 = !DILocation(line: 1616, column: 32, scope: !4253)
!4259 = !DILocation(line: 1616, column: 30, scope: !4253)
!4260 = !DILocation(line: 1616, column: 12, scope: !4235)
!4261 = !DILocation(line: 1617, column: 16, scope: !4253)
!4262 = !DILocation(line: 1617, column: 9, scope: !4253)
!4263 = !DILocation(line: 1619, column: 9, scope: !4253)
!4264 = distinct !{!4264, !4228, !4265}
!4265 = !DILocation(line: 1620, column: 7, scope: !4227)
!4266 = !DILocation(line: 1621, column: 6, scope: !4227)
!4267 = !DILocation(line: 1623, column: 11, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4222, file: !1, line: 1623, column: 10)
!4269 = !DILocation(line: 1623, column: 10, scope: !4222)
!4270 = !DILocation(line: 1623, column: 19, scope: !4268)
!4271 = distinct !{!4271, !4213, !4272}
!4272 = !DILocation(line: 1624, column: 5, scope: !4190)
!4273 = !DILocation(line: 1627, column: 9, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4190, file: !1, line: 1627, column: 9)
!4275 = !DILocation(line: 1627, column: 9, scope: !4190)
!4276 = !DILocation(line: 1629, column: 38, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4274, file: !1, line: 1628, column: 5)
!4278 = !DILocation(line: 1629, column: 6, scope: !4277)
!4279 = !DILocation(line: 1629, column: 16, scope: !4277)
!4280 = !DILocation(line: 1629, column: 19, scope: !4277)
!4281 = !DILocation(line: 1629, column: 33, scope: !4277)
!4282 = !DILocation(line: 1629, column: 36, scope: !4277)
!4283 = !DILocation(line: 1631, column: 38, scope: !4277)
!4284 = !DILocation(line: 1631, column: 6, scope: !4277)
!4285 = !DILocation(line: 1631, column: 16, scope: !4277)
!4286 = !DILocation(line: 1631, column: 19, scope: !4277)
!4287 = !DILocation(line: 1631, column: 33, scope: !4277)
!4288 = !DILocation(line: 1631, column: 36, scope: !4277)
!4289 = !DILocation(line: 1632, column: 5, scope: !4277)
!4290 = !DILocation(line: 1633, column: 4, scope: !4190)
!4291 = !DILocation(line: 1634, column: 3, scope: !4183)
!4292 = !DILocation(line: 1594, column: 19, scope: !4178)
!4293 = !DILocation(line: 1594, column: 3, scope: !4178)
!4294 = distinct !{!4294, !4180, !4295}
!4295 = !DILocation(line: 1634, column: 3, scope: !4174)
!4296 = !DILocation(line: 1635, column: 2, scope: !4175)
!4297 = !DILocation(line: 1592, column: 31, scope: !4169)
!4298 = !DILocation(line: 1592, column: 2, scope: !4169)
!4299 = distinct !{!4299, !4172, !4300}
!4300 = !DILocation(line: 1635, column: 2, scope: !4166)
!4301 = !DILocation(line: 1636, column: 1, scope: !4152)
!4302 = distinct !DISubprogram(name: "BuildNeighborsFast", scope: !1, file: !1, line: 1494, type: !4303, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4303 = !DISubroutineType(types: !4304)
!4304 = !{null, !8, !63, !1752, !83}
!4305 = !DILocalVariable(name: "pTriInfos", arg: 1, scope: !4302, file: !1, line: 1494, type: !8)
!4306 = !DILocation(line: 1494, column: 41, scope: !4302)
!4307 = !DILocalVariable(name: "pEdges", arg: 2, scope: !4302, file: !1, line: 1494, type: !63)
!4308 = !DILocation(line: 1494, column: 62, scope: !4302)
!4309 = !DILocalVariable(name: "piTriListIn", arg: 3, scope: !4302, file: !1, line: 1494, type: !1752)
!4310 = !DILocation(line: 1494, column: 80, scope: !4302)
!4311 = !DILocalVariable(name: "iNrTrianglesIn", arg: 4, scope: !4302, file: !1, line: 1494, type: !83)
!4312 = !DILocation(line: 1494, column: 105, scope: !4302)
!4313 = !DILocalVariable(name: "uSeed", scope: !4302, file: !1, line: 1497, type: !2753)
!4314 = !DILocation(line: 1497, column: 15, scope: !4302)
!4315 = !DILocalVariable(name: "iEntries", scope: !4302, file: !1, line: 1498, type: !7)
!4316 = !DILocation(line: 1498, column: 6, scope: !4302)
!4317 = !DILocalVariable(name: "iCurStartIndex", scope: !4302, file: !1, line: 1498, type: !7)
!4318 = !DILocation(line: 1498, column: 18, scope: !4302)
!4319 = !DILocalVariable(name: "f", scope: !4302, file: !1, line: 1498, type: !7)
!4320 = !DILocation(line: 1498, column: 37, scope: !4302)
!4321 = !DILocalVariable(name: "i", scope: !4302, file: !1, line: 1498, type: !7)
!4322 = !DILocation(line: 1498, column: 42, scope: !4302)
!4323 = !DILocation(line: 1499, column: 8, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4302, file: !1, line: 1499, column: 2)
!4325 = !DILocation(line: 1499, column: 7, scope: !4324)
!4326 = !DILocation(line: 1499, column: 12, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4324, file: !1, line: 1499, column: 2)
!4328 = !DILocation(line: 1499, column: 14, scope: !4327)
!4329 = !DILocation(line: 1499, column: 13, scope: !4327)
!4330 = !DILocation(line: 1499, column: 2, scope: !4324)
!4331 = !DILocation(line: 1500, column: 9, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4327, file: !1, line: 1500, column: 3)
!4333 = !DILocation(line: 1500, column: 8, scope: !4332)
!4334 = !DILocation(line: 1500, column: 13, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4332, file: !1, line: 1500, column: 3)
!4336 = !DILocation(line: 1500, column: 14, scope: !4335)
!4337 = !DILocation(line: 1500, column: 3, scope: !4332)
!4338 = !DILocalVariable(name: "i0", scope: !4339, file: !1, line: 1502, type: !83)
!4339 = distinct !DILexicalBlock(scope: !4335, file: !1, line: 1501, column: 3)
!4340 = !DILocation(line: 1502, column: 14, scope: !4339)
!4341 = !DILocation(line: 1502, column: 19, scope: !4339)
!4342 = !DILocation(line: 1502, column: 31, scope: !4339)
!4343 = !DILocation(line: 1502, column: 32, scope: !4339)
!4344 = !DILocation(line: 1502, column: 35, scope: !4339)
!4345 = !DILocation(line: 1502, column: 34, scope: !4339)
!4346 = !DILocalVariable(name: "i1", scope: !4339, file: !1, line: 1503, type: !83)
!4347 = !DILocation(line: 1503, column: 14, scope: !4339)
!4348 = !DILocation(line: 1503, column: 19, scope: !4339)
!4349 = !DILocation(line: 1503, column: 31, scope: !4339)
!4350 = !DILocation(line: 1503, column: 32, scope: !4339)
!4351 = !DILocation(line: 1503, column: 36, scope: !4339)
!4352 = !DILocation(line: 1503, column: 37, scope: !4339)
!4353 = !DILocation(line: 1503, column: 41, scope: !4339)
!4354 = !DILocation(line: 1503, column: 42, scope: !4339)
!4355 = !DILocation(line: 1503, column: 34, scope: !4339)
!4356 = !DILocation(line: 1504, column: 28, scope: !4339)
!4357 = !DILocation(line: 1504, column: 33, scope: !4339)
!4358 = !DILocation(line: 1504, column: 31, scope: !4339)
!4359 = !DILocation(line: 1504, column: 38, scope: !4339)
!4360 = !DILocation(line: 1504, column: 43, scope: !4339)
!4361 = !DILocation(line: 1504, column: 4, scope: !4339)
!4362 = !DILocation(line: 1504, column: 11, scope: !4339)
!4363 = !DILocation(line: 1504, column: 12, scope: !4339)
!4364 = !DILocation(line: 1504, column: 15, scope: !4339)
!4365 = !DILocation(line: 1504, column: 14, scope: !4339)
!4366 = !DILocation(line: 1504, column: 18, scope: !4339)
!4367 = !DILocation(line: 1504, column: 23, scope: !4339)
!4368 = !DILocation(line: 1504, column: 26, scope: !4339)
!4369 = !DILocation(line: 1505, column: 30, scope: !4339)
!4370 = !DILocation(line: 1505, column: 35, scope: !4339)
!4371 = !DILocation(line: 1505, column: 33, scope: !4339)
!4372 = !DILocation(line: 1505, column: 28, scope: !4339)
!4373 = !DILocation(line: 1505, column: 41, scope: !4339)
!4374 = !DILocation(line: 1505, column: 46, scope: !4339)
!4375 = !DILocation(line: 1505, column: 4, scope: !4339)
!4376 = !DILocation(line: 1505, column: 11, scope: !4339)
!4377 = !DILocation(line: 1505, column: 12, scope: !4339)
!4378 = !DILocation(line: 1505, column: 15, scope: !4339)
!4379 = !DILocation(line: 1505, column: 14, scope: !4339)
!4380 = !DILocation(line: 1505, column: 18, scope: !4339)
!4381 = !DILocation(line: 1505, column: 23, scope: !4339)
!4382 = !DILocation(line: 1505, column: 26, scope: !4339)
!4383 = !DILocation(line: 1506, column: 27, scope: !4339)
!4384 = !DILocation(line: 1506, column: 4, scope: !4339)
!4385 = !DILocation(line: 1506, column: 11, scope: !4339)
!4386 = !DILocation(line: 1506, column: 12, scope: !4339)
!4387 = !DILocation(line: 1506, column: 15, scope: !4339)
!4388 = !DILocation(line: 1506, column: 14, scope: !4339)
!4389 = !DILocation(line: 1506, column: 18, scope: !4339)
!4390 = !DILocation(line: 1506, column: 23, scope: !4339)
!4391 = !DILocation(line: 1506, column: 25, scope: !4339)
!4392 = !DILocation(line: 1507, column: 3, scope: !4339)
!4393 = !DILocation(line: 1500, column: 19, scope: !4335)
!4394 = !DILocation(line: 1500, column: 3, scope: !4335)
!4395 = distinct !{!4395, !4337, !4396}
!4396 = !DILocation(line: 1507, column: 3, scope: !4332)
!4397 = !DILocation(line: 1499, column: 31, scope: !4327)
!4398 = !DILocation(line: 1499, column: 2, scope: !4327)
!4399 = distinct !{!4399, !4330, !4400}
!4400 = !DILocation(line: 1507, column: 3, scope: !4324)
!4401 = !DILocation(line: 1510, column: 17, scope: !4302)
!4402 = !DILocation(line: 1510, column: 28, scope: !4302)
!4403 = !DILocation(line: 1510, column: 42, scope: !4302)
!4404 = !DILocation(line: 1510, column: 44, scope: !4302)
!4405 = !DILocation(line: 1510, column: 51, scope: !4302)
!4406 = !DILocation(line: 1510, column: 2, scope: !4302)
!4407 = !DILocation(line: 1515, column: 13, scope: !4302)
!4408 = !DILocation(line: 1515, column: 27, scope: !4302)
!4409 = !DILocation(line: 1515, column: 11, scope: !4302)
!4410 = !DILocation(line: 1516, column: 17, scope: !4302)
!4411 = !DILocation(line: 1517, column: 8, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4302, file: !1, line: 1517, column: 2)
!4413 = !DILocation(line: 1517, column: 7, scope: !4412)
!4414 = !DILocation(line: 1517, column: 12, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4412, file: !1, line: 1517, column: 2)
!4416 = !DILocation(line: 1517, column: 14, scope: !4415)
!4417 = !DILocation(line: 1517, column: 13, scope: !4415)
!4418 = !DILocation(line: 1517, column: 2, scope: !4412)
!4419 = !DILocation(line: 1519, column: 7, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !1, line: 1519, column: 7)
!4421 = distinct !DILexicalBlock(scope: !4415, file: !1, line: 1518, column: 2)
!4422 = !DILocation(line: 1519, column: 14, scope: !4420)
!4423 = !DILocation(line: 1519, column: 30, scope: !4420)
!4424 = !DILocation(line: 1519, column: 35, scope: !4420)
!4425 = !DILocation(line: 1519, column: 41, scope: !4420)
!4426 = !DILocation(line: 1519, column: 48, scope: !4420)
!4427 = !DILocation(line: 1519, column: 51, scope: !4420)
!4428 = !DILocation(line: 1519, column: 56, scope: !4420)
!4429 = !DILocation(line: 1519, column: 38, scope: !4420)
!4430 = !DILocation(line: 1519, column: 7, scope: !4421)
!4431 = !DILocalVariable(name: "iL", scope: !4432, file: !1, line: 1521, type: !83)
!4432 = distinct !DILexicalBlock(scope: !4420, file: !1, line: 1520, column: 3)
!4433 = !DILocation(line: 1521, column: 14, scope: !4432)
!4434 = !DILocation(line: 1521, column: 19, scope: !4432)
!4435 = !DILocalVariable(name: "iR", scope: !4432, file: !1, line: 1522, type: !83)
!4436 = !DILocation(line: 1522, column: 14, scope: !4432)
!4437 = !DILocation(line: 1522, column: 19, scope: !4432)
!4438 = !DILocation(line: 1522, column: 20, scope: !4432)
!4439 = !DILocation(line: 1524, column: 21, scope: !4432)
!4440 = !DILocation(line: 1524, column: 19, scope: !4432)
!4441 = !DILocation(line: 1525, column: 19, scope: !4432)
!4442 = !DILocation(line: 1525, column: 27, scope: !4432)
!4443 = !DILocation(line: 1525, column: 31, scope: !4432)
!4444 = !DILocation(line: 1525, column: 38, scope: !4432)
!4445 = !DILocation(line: 1525, column: 4, scope: !4432)
!4446 = !DILocation(line: 1526, column: 3, scope: !4432)
!4447 = !DILocation(line: 1527, column: 2, scope: !4421)
!4448 = !DILocation(line: 1517, column: 25, scope: !4415)
!4449 = !DILocation(line: 1517, column: 2, scope: !4415)
!4450 = distinct !{!4450, !4418, !4451}
!4451 = !DILocation(line: 1527, column: 2, scope: !4412)
!4452 = !DILocation(line: 1532, column: 17, scope: !4302)
!4453 = !DILocation(line: 1533, column: 8, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4302, file: !1, line: 1533, column: 2)
!4455 = !DILocation(line: 1533, column: 7, scope: !4454)
!4456 = !DILocation(line: 1533, column: 12, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4454, file: !1, line: 1533, column: 2)
!4458 = !DILocation(line: 1533, column: 14, scope: !4457)
!4459 = !DILocation(line: 1533, column: 13, scope: !4457)
!4460 = !DILocation(line: 1533, column: 2, scope: !4454)
!4461 = !DILocation(line: 1535, column: 7, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !1, line: 1535, column: 7)
!4463 = distinct !DILexicalBlock(scope: !4457, file: !1, line: 1534, column: 2)
!4464 = !DILocation(line: 1535, column: 14, scope: !4462)
!4465 = !DILocation(line: 1535, column: 30, scope: !4462)
!4466 = !DILocation(line: 1535, column: 35, scope: !4462)
!4467 = !DILocation(line: 1535, column: 41, scope: !4462)
!4468 = !DILocation(line: 1535, column: 48, scope: !4462)
!4469 = !DILocation(line: 1535, column: 51, scope: !4462)
!4470 = !DILocation(line: 1535, column: 56, scope: !4462)
!4471 = !DILocation(line: 1535, column: 38, scope: !4462)
!4472 = !DILocation(line: 1535, column: 59, scope: !4462)
!4473 = !DILocation(line: 1535, column: 62, scope: !4462)
!4474 = !DILocation(line: 1535, column: 69, scope: !4462)
!4475 = !DILocation(line: 1535, column: 85, scope: !4462)
!4476 = !DILocation(line: 1535, column: 90, scope: !4462)
!4477 = !DILocation(line: 1535, column: 96, scope: !4462)
!4478 = !DILocation(line: 1535, column: 103, scope: !4462)
!4479 = !DILocation(line: 1535, column: 106, scope: !4462)
!4480 = !DILocation(line: 1535, column: 111, scope: !4462)
!4481 = !DILocation(line: 1535, column: 93, scope: !4462)
!4482 = !DILocation(line: 1535, column: 7, scope: !4463)
!4483 = !DILocalVariable(name: "iL", scope: !4484, file: !1, line: 1537, type: !83)
!4484 = distinct !DILexicalBlock(scope: !4462, file: !1, line: 1536, column: 3)
!4485 = !DILocation(line: 1537, column: 14, scope: !4484)
!4486 = !DILocation(line: 1537, column: 19, scope: !4484)
!4487 = !DILocalVariable(name: "iR", scope: !4484, file: !1, line: 1538, type: !83)
!4488 = !DILocation(line: 1538, column: 14, scope: !4484)
!4489 = !DILocation(line: 1538, column: 19, scope: !4484)
!4490 = !DILocation(line: 1538, column: 20, scope: !4484)
!4491 = !DILocation(line: 1540, column: 21, scope: !4484)
!4492 = !DILocation(line: 1540, column: 19, scope: !4484)
!4493 = !DILocation(line: 1541, column: 19, scope: !4484)
!4494 = !DILocation(line: 1541, column: 27, scope: !4484)
!4495 = !DILocation(line: 1541, column: 31, scope: !4484)
!4496 = !DILocation(line: 1541, column: 38, scope: !4484)
!4497 = !DILocation(line: 1541, column: 4, scope: !4484)
!4498 = !DILocation(line: 1542, column: 3, scope: !4484)
!4499 = !DILocation(line: 1543, column: 2, scope: !4463)
!4500 = !DILocation(line: 1533, column: 25, scope: !4457)
!4501 = !DILocation(line: 1533, column: 2, scope: !4457)
!4502 = distinct !{!4502, !4460, !4503}
!4503 = !DILocation(line: 1543, column: 2, scope: !4454)
!4504 = !DILocation(line: 1546, column: 8, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4302, file: !1, line: 1546, column: 2)
!4506 = !DILocation(line: 1546, column: 7, scope: !4505)
!4507 = !DILocation(line: 1546, column: 12, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4505, file: !1, line: 1546, column: 2)
!4509 = !DILocation(line: 1546, column: 14, scope: !4508)
!4510 = !DILocation(line: 1546, column: 13, scope: !4508)
!4511 = !DILocation(line: 1546, column: 2, scope: !4505)
!4512 = !DILocalVariable(name: "i0", scope: !4513, file: !1, line: 1548, type: !83)
!4513 = distinct !DILexicalBlock(scope: !4508, file: !1, line: 1547, column: 2)
!4514 = !DILocation(line: 1548, column: 13, scope: !4513)
!4515 = !DILocation(line: 1548, column: 16, scope: !4513)
!4516 = !DILocation(line: 1548, column: 23, scope: !4513)
!4517 = !DILocation(line: 1548, column: 26, scope: !4513)
!4518 = !DILocation(line: 1548, column: 31, scope: !4513)
!4519 = !DILocalVariable(name: "i1", scope: !4513, file: !1, line: 1549, type: !83)
!4520 = !DILocation(line: 1549, column: 13, scope: !4513)
!4521 = !DILocation(line: 1549, column: 16, scope: !4513)
!4522 = !DILocation(line: 1549, column: 23, scope: !4513)
!4523 = !DILocation(line: 1549, column: 26, scope: !4513)
!4524 = !DILocation(line: 1549, column: 31, scope: !4513)
!4525 = !DILocalVariable(name: "f", scope: !4513, file: !1, line: 1550, type: !83)
!4526 = !DILocation(line: 1550, column: 13, scope: !4513)
!4527 = !DILocation(line: 1550, column: 17, scope: !4513)
!4528 = !DILocation(line: 1550, column: 24, scope: !4513)
!4529 = !DILocation(line: 1550, column: 27, scope: !4513)
!4530 = !DILocation(line: 1550, column: 32, scope: !4513)
!4531 = !DILocalVariable(name: "bUnassigned_A", scope: !4513, file: !1, line: 1551, type: !26)
!4532 = !DILocation(line: 1551, column: 9, scope: !4513)
!4533 = !DILocalVariable(name: "i0_A", scope: !4513, file: !1, line: 1553, type: !7)
!4534 = !DILocation(line: 1553, column: 7, scope: !4513)
!4535 = !DILocalVariable(name: "i1_A", scope: !4513, file: !1, line: 1553, type: !7)
!4536 = !DILocation(line: 1553, column: 13, scope: !4513)
!4537 = !DILocalVariable(name: "edgenum_A", scope: !4513, file: !1, line: 1554, type: !7)
!4538 = !DILocation(line: 1554, column: 7, scope: !4513)
!4539 = !DILocalVariable(name: "edgenum_B", scope: !4513, file: !1, line: 1554, type: !7)
!4540 = !DILocation(line: 1554, column: 18, scope: !4513)
!4541 = !DILocation(line: 1555, column: 38, scope: !4513)
!4542 = !DILocation(line: 1555, column: 50, scope: !4513)
!4543 = !DILocation(line: 1555, column: 51, scope: !4513)
!4544 = !DILocation(line: 1555, column: 56, scope: !4513)
!4545 = !DILocation(line: 1555, column: 60, scope: !4513)
!4546 = !DILocation(line: 1555, column: 3, scope: !4513)
!4547 = !DILocation(line: 1556, column: 19, scope: !4513)
!4548 = !DILocation(line: 1556, column: 29, scope: !4513)
!4549 = !DILocation(line: 1556, column: 32, scope: !4513)
!4550 = !DILocation(line: 1556, column: 46, scope: !4513)
!4551 = !DILocation(line: 1556, column: 57, scope: !4513)
!4552 = !DILocation(line: 1556, column: 17, scope: !4513)
!4553 = !DILocation(line: 1558, column: 7, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4513, file: !1, line: 1558, column: 7)
!4555 = !DILocation(line: 1558, column: 7, scope: !4513)
!4556 = !DILocalVariable(name: "j", scope: !4557, file: !1, line: 1561, type: !7)
!4557 = distinct !DILexicalBlock(scope: !4554, file: !1, line: 1559, column: 3)
!4558 = !DILocation(line: 1561, column: 8, scope: !4557)
!4559 = !DILocation(line: 1561, column: 10, scope: !4557)
!4560 = !DILocation(line: 1561, column: 11, scope: !4557)
!4561 = !DILocalVariable(name: "t", scope: !4557, file: !1, line: 1561, type: !7)
!4562 = !DILocation(line: 1561, column: 15, scope: !4557)
!4563 = !DILocalVariable(name: "bNotFound", scope: !4557, file: !1, line: 1562, type: !26)
!4564 = !DILocation(line: 1562, column: 10, scope: !4557)
!4565 = !DILocation(line: 1563, column: 4, scope: !4557)
!4566 = !DILocation(line: 1563, column: 11, scope: !4557)
!4567 = !DILocation(line: 1563, column: 13, scope: !4557)
!4568 = !DILocation(line: 1563, column: 12, scope: !4557)
!4569 = !DILocation(line: 1563, column: 22, scope: !4557)
!4570 = !DILocation(line: 1563, column: 25, scope: !4557)
!4571 = !DILocation(line: 1563, column: 29, scope: !4557)
!4572 = !DILocation(line: 1563, column: 36, scope: !4557)
!4573 = !DILocation(line: 1563, column: 39, scope: !4557)
!4574 = !DILocation(line: 1563, column: 44, scope: !4557)
!4575 = !DILocation(line: 1563, column: 27, scope: !4557)
!4576 = !DILocation(line: 1563, column: 47, scope: !4557)
!4577 = !DILocation(line: 1563, column: 50, scope: !4557)
!4578 = !DILocation(line: 1563, column: 54, scope: !4557)
!4579 = !DILocation(line: 1563, column: 61, scope: !4557)
!4580 = !DILocation(line: 1563, column: 64, scope: !4557)
!4581 = !DILocation(line: 1563, column: 69, scope: !4557)
!4582 = !DILocation(line: 1563, column: 52, scope: !4557)
!4583 = !DILocation(line: 1563, column: 72, scope: !4557)
!4584 = !DILocation(line: 1563, column: 75, scope: !4557)
!4585 = !DILocation(line: 0, scope: !4557)
!4586 = !DILocalVariable(name: "bUnassigned_B", scope: !4587, file: !1, line: 1565, type: !26)
!4587 = distinct !DILexicalBlock(scope: !4557, file: !1, line: 1564, column: 4)
!4588 = !DILocation(line: 1565, column: 11, scope: !4587)
!4589 = !DILocalVariable(name: "i0_B", scope: !4587, file: !1, line: 1566, type: !7)
!4590 = !DILocation(line: 1566, column: 9, scope: !4587)
!4591 = !DILocalVariable(name: "i1_B", scope: !4587, file: !1, line: 1566, type: !7)
!4592 = !DILocation(line: 1566, column: 15, scope: !4587)
!4593 = !DILocation(line: 1567, column: 9, scope: !4587)
!4594 = !DILocation(line: 1567, column: 16, scope: !4587)
!4595 = !DILocation(line: 1567, column: 19, scope: !4587)
!4596 = !DILocation(line: 1567, column: 24, scope: !4587)
!4597 = !DILocation(line: 1567, column: 7, scope: !4587)
!4598 = !DILocation(line: 1569, column: 40, scope: !4587)
!4599 = !DILocation(line: 1569, column: 52, scope: !4587)
!4600 = !DILocation(line: 1569, column: 53, scope: !4587)
!4601 = !DILocation(line: 1569, column: 58, scope: !4587)
!4602 = !DILocation(line: 1569, column: 65, scope: !4587)
!4603 = !DILocation(line: 1569, column: 68, scope: !4587)
!4604 = !DILocation(line: 1569, column: 73, scope: !4587)
!4605 = !DILocation(line: 1569, column: 77, scope: !4587)
!4606 = !DILocation(line: 1569, column: 84, scope: !4587)
!4607 = !DILocation(line: 1569, column: 87, scope: !4587)
!4608 = !DILocation(line: 1569, column: 92, scope: !4587)
!4609 = !DILocation(line: 1569, column: 5, scope: !4587)
!4610 = !DILocation(line: 1571, column: 22, scope: !4587)
!4611 = !DILocation(line: 1571, column: 32, scope: !4587)
!4612 = !DILocation(line: 1571, column: 35, scope: !4587)
!4613 = !DILocation(line: 1571, column: 49, scope: !4587)
!4614 = !DILocation(line: 1571, column: 59, scope: !4587)
!4615 = !DILocation(line: 1571, column: 19, scope: !4587)
!4616 = !DILocation(line: 1572, column: 9, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4587, file: !1, line: 1572, column: 9)
!4618 = !DILocation(line: 1572, column: 15, scope: !4617)
!4619 = !DILocation(line: 1572, column: 13, scope: !4617)
!4620 = !DILocation(line: 1572, column: 20, scope: !4617)
!4621 = !DILocation(line: 1572, column: 23, scope: !4617)
!4622 = !DILocation(line: 1572, column: 29, scope: !4617)
!4623 = !DILocation(line: 1572, column: 27, scope: !4617)
!4624 = !DILocation(line: 1572, column: 34, scope: !4617)
!4625 = !DILocation(line: 1572, column: 37, scope: !4617)
!4626 = !DILocation(line: 1572, column: 9, scope: !4587)
!4627 = !DILocation(line: 1573, column: 16, scope: !4617)
!4628 = !DILocation(line: 1573, column: 6, scope: !4617)
!4629 = !DILocation(line: 1575, column: 6, scope: !4617)
!4630 = distinct !{!4630, !4565, !4631}
!4631 = !DILocation(line: 1576, column: 4, scope: !4557)
!4632 = !DILocation(line: 1578, column: 9, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4557, file: !1, line: 1578, column: 8)
!4634 = !DILocation(line: 1578, column: 8, scope: !4557)
!4635 = !DILocalVariable(name: "t", scope: !4636, file: !1, line: 1580, type: !7)
!4636 = distinct !DILexicalBlock(scope: !4633, file: !1, line: 1579, column: 4)
!4637 = !DILocation(line: 1580, column: 9, scope: !4636)
!4638 = !DILocation(line: 1580, column: 13, scope: !4636)
!4639 = !DILocation(line: 1580, column: 20, scope: !4636)
!4640 = !DILocation(line: 1580, column: 23, scope: !4636)
!4641 = !DILocation(line: 1580, column: 28, scope: !4636)
!4642 = !DILocation(line: 1581, column: 45, scope: !4636)
!4643 = !DILocation(line: 1581, column: 5, scope: !4636)
!4644 = !DILocation(line: 1581, column: 15, scope: !4636)
!4645 = !DILocation(line: 1581, column: 18, scope: !4636)
!4646 = !DILocation(line: 1581, column: 32, scope: !4636)
!4647 = !DILocation(line: 1581, column: 43, scope: !4636)
!4648 = !DILocation(line: 1583, column: 45, scope: !4636)
!4649 = !DILocation(line: 1583, column: 5, scope: !4636)
!4650 = !DILocation(line: 1583, column: 15, scope: !4636)
!4651 = !DILocation(line: 1583, column: 18, scope: !4636)
!4652 = !DILocation(line: 1583, column: 32, scope: !4636)
!4653 = !DILocation(line: 1583, column: 43, scope: !4636)
!4654 = !DILocation(line: 1584, column: 4, scope: !4636)
!4655 = !DILocation(line: 1585, column: 3, scope: !4557)
!4656 = !DILocation(line: 1586, column: 2, scope: !4513)
!4657 = !DILocation(line: 1546, column: 25, scope: !4508)
!4658 = !DILocation(line: 1546, column: 2, scope: !4508)
!4659 = distinct !{!4659, !4511, !4660}
!4660 = !DILocation(line: 1586, column: 2, scope: !4505)
!4661 = !DILocation(line: 1587, column: 1, scope: !4302)
!4662 = distinct !DISubprogram(name: "QuickSortEdges", scope: !1, file: !1, line: 1638, type: !4663, scopeLine: 1639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{null, !63, !7, !7, !83, !2753}
!4665 = !DILocalVariable(name: "pSortBuffer", arg: 1, scope: !4662, file: !1, line: 1638, type: !63)
!4666 = !DILocation(line: 1638, column: 36, scope: !4662)
!4667 = !DILocalVariable(name: "iLeft", arg: 2, scope: !4662, file: !1, line: 1638, type: !7)
!4668 = !DILocation(line: 1638, column: 53, scope: !4662)
!4669 = !DILocalVariable(name: "iRight", arg: 3, scope: !4662, file: !1, line: 1638, type: !7)
!4670 = !DILocation(line: 1638, column: 64, scope: !4662)
!4671 = !DILocalVariable(name: "channel", arg: 4, scope: !4662, file: !1, line: 1638, type: !83)
!4672 = !DILocation(line: 1638, column: 82, scope: !4662)
!4673 = !DILocalVariable(name: "uSeed", arg: 5, scope: !4662, file: !1, line: 1638, type: !2753)
!4674 = !DILocation(line: 1638, column: 104, scope: !4662)
!4675 = !DILocalVariable(name: "t", scope: !4662, file: !1, line: 1640, type: !2753)
!4676 = !DILocation(line: 1640, column: 15, scope: !4662)
!4677 = !DILocalVariable(name: "iL", scope: !4662, file: !1, line: 1641, type: !7)
!4678 = !DILocation(line: 1641, column: 6, scope: !4662)
!4679 = !DILocalVariable(name: "iR", scope: !4662, file: !1, line: 1641, type: !7)
!4680 = !DILocation(line: 1641, column: 10, scope: !4662)
!4681 = !DILocalVariable(name: "n", scope: !4662, file: !1, line: 1641, type: !7)
!4682 = !DILocation(line: 1641, column: 14, scope: !4662)
!4683 = !DILocalVariable(name: "index", scope: !4662, file: !1, line: 1641, type: !7)
!4684 = !DILocation(line: 1641, column: 17, scope: !4662)
!4685 = !DILocalVariable(name: "iMid", scope: !4662, file: !1, line: 1641, type: !7)
!4686 = !DILocation(line: 1641, column: 24, scope: !4662)
!4687 = !DILocalVariable(name: "sTmp", scope: !4662, file: !1, line: 1644, type: !64)
!4688 = !DILocation(line: 1644, column: 8, scope: !4662)
!4689 = !DILocalVariable(name: "iElems", scope: !4662, file: !1, line: 1645, type: !83)
!4690 = !DILocation(line: 1645, column: 12, scope: !4662)
!4691 = !DILocation(line: 1645, column: 21, scope: !4662)
!4692 = !DILocation(line: 1645, column: 28, scope: !4662)
!4693 = !DILocation(line: 1645, column: 27, scope: !4662)
!4694 = !DILocation(line: 1645, column: 33, scope: !4662)
!4695 = !DILocation(line: 1646, column: 6, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4662, file: !1, line: 1646, column: 6)
!4697 = !DILocation(line: 1646, column: 12, scope: !4696)
!4698 = !DILocation(line: 1646, column: 6, scope: !4662)
!4699 = !DILocation(line: 1646, column: 16, scope: !4696)
!4700 = !DILocation(line: 1647, column: 11, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4696, file: !1, line: 1647, column: 11)
!4702 = !DILocation(line: 1647, column: 17, scope: !4701)
!4703 = !DILocation(line: 1647, column: 11, scope: !4696)
!4704 = !DILocation(line: 1649, column: 7, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 1649, column: 7)
!4706 = distinct !DILexicalBlock(scope: !4701, file: !1, line: 1648, column: 2)
!4707 = !DILocation(line: 1649, column: 19, scope: !4705)
!4708 = !DILocation(line: 1649, column: 26, scope: !4705)
!4709 = !DILocation(line: 1649, column: 32, scope: !4705)
!4710 = !DILocation(line: 1649, column: 43, scope: !4705)
!4711 = !DILocation(line: 1649, column: 55, scope: !4705)
!4712 = !DILocation(line: 1649, column: 63, scope: !4705)
!4713 = !DILocation(line: 1649, column: 69, scope: !4705)
!4714 = !DILocation(line: 1649, column: 41, scope: !4705)
!4715 = !DILocation(line: 1649, column: 7, scope: !4706)
!4716 = !DILocation(line: 1651, column: 11, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4705, file: !1, line: 1650, column: 3)
!4718 = !DILocation(line: 1651, column: 23, scope: !4717)
!4719 = !DILocation(line: 1652, column: 4, scope: !4717)
!4720 = !DILocation(line: 1652, column: 16, scope: !4717)
!4721 = !DILocation(line: 1652, column: 25, scope: !4717)
!4722 = !DILocation(line: 1652, column: 37, scope: !4717)
!4723 = !DILocation(line: 1653, column: 4, scope: !4717)
!4724 = !DILocation(line: 1653, column: 16, scope: !4717)
!4725 = !DILocation(line: 1653, column: 26, scope: !4717)
!4726 = !DILocation(line: 1654, column: 3, scope: !4717)
!4727 = !DILocation(line: 1655, column: 3, scope: !4706)
!4728 = !DILocation(line: 1659, column: 4, scope: !4662)
!4729 = !DILocation(line: 1659, column: 9, scope: !4662)
!4730 = !DILocation(line: 1659, column: 3, scope: !4662)
!4731 = !DILocation(line: 1660, column: 5, scope: !4662)
!4732 = !DILocation(line: 1660, column: 12, scope: !4662)
!4733 = !DILocation(line: 1660, column: 10, scope: !4662)
!4734 = !DILocation(line: 1660, column: 16, scope: !4662)
!4735 = !DILocation(line: 1660, column: 27, scope: !4662)
!4736 = !DILocation(line: 1660, column: 26, scope: !4662)
!4737 = !DILocation(line: 1660, column: 21, scope: !4662)
!4738 = !DILocation(line: 1660, column: 14, scope: !4662)
!4739 = !DILocation(line: 1660, column: 3, scope: !4662)
!4740 = !DILocation(line: 1661, column: 8, scope: !4662)
!4741 = !DILocation(line: 1661, column: 14, scope: !4662)
!4742 = !DILocation(line: 1661, column: 13, scope: !4662)
!4743 = !DILocation(line: 1661, column: 15, scope: !4662)
!4744 = !DILocation(line: 1661, column: 7, scope: !4662)
!4745 = !DILocation(line: 1664, column: 5, scope: !4662)
!4746 = !DILocation(line: 1664, column: 4, scope: !4662)
!4747 = !DILocation(line: 1664, column: 15, scope: !4662)
!4748 = !DILocation(line: 1664, column: 14, scope: !4662)
!4749 = !DILocation(line: 1665, column: 7, scope: !4662)
!4750 = !DILocation(line: 1665, column: 10, scope: !4662)
!4751 = !DILocation(line: 1665, column: 9, scope: !4662)
!4752 = !DILocation(line: 1665, column: 13, scope: !4662)
!4753 = !DILocation(line: 1665, column: 4, scope: !4662)
!4754 = !DILocation(line: 1667, column: 17, scope: !4662)
!4755 = !DILocation(line: 1667, column: 23, scope: !4662)
!4756 = !DILocation(line: 1667, column: 22, scope: !4662)
!4757 = !DILocation(line: 1667, column: 8, scope: !4662)
!4758 = !DILocation(line: 1669, column: 7, scope: !4662)
!4759 = !DILocation(line: 1669, column: 19, scope: !4662)
!4760 = !DILocation(line: 1669, column: 27, scope: !4662)
!4761 = !DILocation(line: 1669, column: 25, scope: !4662)
!4762 = !DILocation(line: 1669, column: 31, scope: !4662)
!4763 = !DILocation(line: 1669, column: 37, scope: !4662)
!4764 = !DILocation(line: 1669, column: 6, scope: !4662)
!4765 = !DILocation(line: 1671, column: 2, scope: !4662)
!4766 = !DILocation(line: 1673, column: 3, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4662, file: !1, line: 1672, column: 2)
!4768 = !DILocation(line: 1673, column: 10, scope: !4767)
!4769 = !DILocation(line: 1673, column: 22, scope: !4767)
!4770 = !DILocation(line: 1673, column: 26, scope: !4767)
!4771 = !DILocation(line: 1673, column: 32, scope: !4767)
!4772 = !DILocation(line: 1673, column: 43, scope: !4767)
!4773 = !DILocation(line: 1673, column: 41, scope: !4767)
!4774 = !DILocation(line: 1674, column: 4, scope: !4767)
!4775 = distinct !{!4775, !4766, !4776}
!4776 = !DILocation(line: 1674, column: 6, scope: !4767)
!4777 = !DILocation(line: 1675, column: 3, scope: !4767)
!4778 = !DILocation(line: 1675, column: 10, scope: !4767)
!4779 = !DILocation(line: 1675, column: 22, scope: !4767)
!4780 = !DILocation(line: 1675, column: 26, scope: !4767)
!4781 = !DILocation(line: 1675, column: 32, scope: !4767)
!4782 = !DILocation(line: 1675, column: 43, scope: !4767)
!4783 = !DILocation(line: 1675, column: 41, scope: !4767)
!4784 = !DILocation(line: 1676, column: 4, scope: !4767)
!4785 = distinct !{!4785, !4777, !4786}
!4786 = !DILocation(line: 1676, column: 6, scope: !4767)
!4787 = !DILocation(line: 1678, column: 7, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4767, file: !1, line: 1678, column: 7)
!4789 = !DILocation(line: 1678, column: 13, scope: !4788)
!4790 = !DILocation(line: 1678, column: 10, scope: !4788)
!4791 = !DILocation(line: 1678, column: 7, scope: !4767)
!4792 = !DILocation(line: 1680, column: 11, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4788, file: !1, line: 1679, column: 3)
!4794 = !DILocation(line: 1680, column: 23, scope: !4793)
!4795 = !DILocation(line: 1681, column: 4, scope: !4793)
!4796 = !DILocation(line: 1681, column: 16, scope: !4793)
!4797 = !DILocation(line: 1681, column: 22, scope: !4793)
!4798 = !DILocation(line: 1681, column: 34, scope: !4793)
!4799 = !DILocation(line: 1682, column: 4, scope: !4793)
!4800 = !DILocation(line: 1682, column: 16, scope: !4793)
!4801 = !DILocation(line: 1682, column: 22, scope: !4793)
!4802 = !DILocation(line: 1683, column: 4, scope: !4793)
!4803 = !DILocation(line: 1683, column: 10, scope: !4793)
!4804 = !DILocation(line: 1684, column: 3, scope: !4793)
!4805 = !DILocation(line: 1685, column: 2, scope: !4767)
!4806 = !DILocation(line: 1686, column: 9, scope: !4662)
!4807 = !DILocation(line: 1686, column: 15, scope: !4662)
!4808 = !DILocation(line: 1686, column: 12, scope: !4662)
!4809 = distinct !{!4809, !4765, !4810}
!4810 = !DILocation(line: 1686, column: 17, scope: !4662)
!4811 = !DILocation(line: 1688, column: 6, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4662, file: !1, line: 1688, column: 6)
!4813 = !DILocation(line: 1688, column: 14, scope: !4812)
!4814 = !DILocation(line: 1688, column: 12, scope: !4812)
!4815 = !DILocation(line: 1688, column: 6, scope: !4662)
!4816 = !DILocation(line: 1689, column: 18, scope: !4812)
!4817 = !DILocation(line: 1689, column: 31, scope: !4812)
!4818 = !DILocation(line: 1689, column: 38, scope: !4812)
!4819 = !DILocation(line: 1689, column: 42, scope: !4812)
!4820 = !DILocation(line: 1689, column: 51, scope: !4812)
!4821 = !DILocation(line: 1689, column: 3, scope: !4812)
!4822 = !DILocation(line: 1690, column: 6, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4662, file: !1, line: 1690, column: 6)
!4824 = !DILocation(line: 1690, column: 11, scope: !4823)
!4825 = !DILocation(line: 1690, column: 9, scope: !4823)
!4826 = !DILocation(line: 1690, column: 6, scope: !4662)
!4827 = !DILocation(line: 1691, column: 18, scope: !4823)
!4828 = !DILocation(line: 1691, column: 31, scope: !4823)
!4829 = !DILocation(line: 1691, column: 35, scope: !4823)
!4830 = !DILocation(line: 1691, column: 43, scope: !4823)
!4831 = !DILocation(line: 1691, column: 52, scope: !4823)
!4832 = !DILocation(line: 1691, column: 3, scope: !4823)
!4833 = !DILocation(line: 1692, column: 1, scope: !4662)
!4834 = distinct !DISubprogram(name: "GetEdge", scope: !1, file: !1, line: 1695, type: !4835, scopeLine: 1696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4835 = !DISubroutineType(types: !4836)
!4836 = !{null, !6, !6, !6, !1752, !83, !83}
!4837 = !DILocalVariable(name: "i0_out", arg: 1, scope: !4834, file: !1, line: 1695, type: !6)
!4838 = !DILocation(line: 1695, column: 27, scope: !4834)
!4839 = !DILocalVariable(name: "i1_out", arg: 2, scope: !4834, file: !1, line: 1695, type: !6)
!4840 = !DILocation(line: 1695, column: 41, scope: !4834)
!4841 = !DILocalVariable(name: "edgenum_out", arg: 3, scope: !4834, file: !1, line: 1695, type: !6)
!4842 = !DILocation(line: 1695, column: 55, scope: !4834)
!4843 = !DILocalVariable(name: "indices", arg: 4, scope: !4834, file: !1, line: 1695, type: !1752)
!4844 = !DILocation(line: 1695, column: 78, scope: !4834)
!4845 = !DILocalVariable(name: "i0_in", arg: 5, scope: !4834, file: !1, line: 1695, type: !83)
!4846 = !DILocation(line: 1695, column: 99, scope: !4834)
!4847 = !DILocalVariable(name: "i1_in", arg: 6, scope: !4834, file: !1, line: 1695, type: !83)
!4848 = !DILocation(line: 1695, column: 116, scope: !4834)
!4849 = !DILocation(line: 1697, column: 3, scope: !4834)
!4850 = !DILocation(line: 1697, column: 15, scope: !4834)
!4851 = !DILocation(line: 1700, column: 6, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4834, file: !1, line: 1700, column: 6)
!4853 = !DILocation(line: 1700, column: 18, scope: !4852)
!4854 = !DILocation(line: 1700, column: 16, scope: !4852)
!4855 = !DILocation(line: 1700, column: 24, scope: !4852)
!4856 = !DILocation(line: 1700, column: 27, scope: !4852)
!4857 = !DILocation(line: 1700, column: 39, scope: !4852)
!4858 = !DILocation(line: 1700, column: 37, scope: !4852)
!4859 = !DILocation(line: 1700, column: 6, scope: !4834)
!4860 = !DILocation(line: 1703, column: 7, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !1, line: 1703, column: 7)
!4862 = distinct !DILexicalBlock(scope: !4852, file: !1, line: 1701, column: 2)
!4863 = !DILocation(line: 1703, column: 19, scope: !4861)
!4864 = !DILocation(line: 1703, column: 17, scope: !4861)
!4865 = !DILocation(line: 1703, column: 25, scope: !4861)
!4866 = !DILocation(line: 1703, column: 28, scope: !4861)
!4867 = !DILocation(line: 1703, column: 40, scope: !4861)
!4868 = !DILocation(line: 1703, column: 38, scope: !4861)
!4869 = !DILocation(line: 1703, column: 7, scope: !4862)
!4870 = !DILocation(line: 1705, column: 4, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4861, file: !1, line: 1704, column: 3)
!4872 = !DILocation(line: 1705, column: 18, scope: !4871)
!4873 = !DILocation(line: 1706, column: 14, scope: !4871)
!4874 = !DILocation(line: 1706, column: 4, scope: !4871)
!4875 = !DILocation(line: 1706, column: 13, scope: !4871)
!4876 = !DILocation(line: 1707, column: 14, scope: !4871)
!4877 = !DILocation(line: 1707, column: 4, scope: !4871)
!4878 = !DILocation(line: 1707, column: 13, scope: !4871)
!4879 = !DILocation(line: 1708, column: 3, scope: !4871)
!4880 = !DILocation(line: 1711, column: 4, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4861, file: !1, line: 1710, column: 3)
!4882 = !DILocation(line: 1711, column: 18, scope: !4881)
!4883 = !DILocation(line: 1712, column: 14, scope: !4881)
!4884 = !DILocation(line: 1712, column: 4, scope: !4881)
!4885 = !DILocation(line: 1712, column: 13, scope: !4881)
!4886 = !DILocation(line: 1713, column: 14, scope: !4881)
!4887 = !DILocation(line: 1713, column: 4, scope: !4881)
!4888 = !DILocation(line: 1713, column: 13, scope: !4881)
!4889 = !DILocation(line: 1715, column: 2, scope: !4862)
!4890 = !DILocation(line: 1719, column: 3, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4852, file: !1, line: 1717, column: 2)
!4892 = !DILocation(line: 1719, column: 17, scope: !4891)
!4893 = !DILocation(line: 1720, column: 13, scope: !4891)
!4894 = !DILocation(line: 1720, column: 3, scope: !4891)
!4895 = !DILocation(line: 1720, column: 12, scope: !4891)
!4896 = !DILocation(line: 1721, column: 13, scope: !4891)
!4897 = !DILocation(line: 1721, column: 3, scope: !4891)
!4898 = !DILocation(line: 1721, column: 12, scope: !4891)
!4899 = !DILocation(line: 1723, column: 1, scope: !4834)
!4900 = distinct !DISubprogram(name: "AddTriToGroup", scope: !1, file: !1, line: 1126, type: !4901, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4901 = !DISubroutineType(types: !4902)
!4902 = !{null, !18, !83}
!4903 = !DILocalVariable(name: "pGroup", arg: 1, scope: !4900, file: !1, line: 1126, type: !18)
!4904 = !DILocation(line: 1126, column: 36, scope: !4900)
!4905 = !DILocalVariable(name: "iTriIndex", arg: 2, scope: !4900, file: !1, line: 1126, type: !83)
!4906 = !DILocation(line: 1126, column: 54, scope: !4900)
!4907 = !DILocation(line: 1128, column: 43, scope: !4900)
!4908 = !DILocation(line: 1128, column: 2, scope: !4900)
!4909 = !DILocation(line: 1128, column: 10, scope: !4900)
!4910 = !DILocation(line: 1128, column: 23, scope: !4900)
!4911 = !DILocation(line: 1128, column: 31, scope: !4900)
!4912 = !DILocation(line: 1128, column: 41, scope: !4900)
!4913 = !DILocation(line: 1129, column: 4, scope: !4900)
!4914 = !DILocation(line: 1129, column: 12, scope: !4900)
!4915 = !DILocation(line: 1129, column: 2, scope: !4900)
!4916 = !DILocation(line: 1130, column: 1, scope: !4900)
!4917 = distinct !DISubprogram(name: "AssignRecur", scope: !1, file: !1, line: 1132, type: !4918, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{!26, !1752, !8, !83, !18}
!4920 = !DILocalVariable(name: "piTriListIn", arg: 1, scope: !4917, file: !1, line: 1132, type: !1752)
!4921 = !DILocation(line: 1132, column: 36, scope: !4917)
!4922 = !DILocalVariable(name: "psTriInfos", arg: 2, scope: !4917, file: !1, line: 1132, type: !8)
!4923 = !DILocation(line: 1132, column: 60, scope: !4917)
!4924 = !DILocalVariable(name: "iMyTriIndex", arg: 3, scope: !4917, file: !1, line: 1133, type: !83)
!4925 = !DILocation(line: 1133, column: 16, scope: !4917)
!4926 = !DILocalVariable(name: "pGroup", arg: 4, scope: !4917, file: !1, line: 1133, type: !18)
!4927 = !DILocation(line: 1133, column: 38, scope: !4917)
!4928 = !DILocalVariable(name: "pMyTriInfo", scope: !4917, file: !1, line: 1135, type: !8)
!4929 = !DILocation(line: 1135, column: 13, scope: !4917)
!4930 = !DILocation(line: 1135, column: 27, scope: !4917)
!4931 = !DILocation(line: 1135, column: 38, scope: !4917)
!4932 = !DILocalVariable(name: "iVertRep", scope: !4917, file: !1, line: 1138, type: !83)
!4933 = !DILocation(line: 1138, column: 12, scope: !4917)
!4934 = !DILocation(line: 1138, column: 23, scope: !4917)
!4935 = !DILocation(line: 1138, column: 31, scope: !4917)
!4936 = !DILocalVariable(name: "pVerts", scope: !4917, file: !1, line: 1139, type: !1752)
!4937 = !DILocation(line: 1139, column: 14, scope: !4917)
!4938 = !DILocation(line: 1139, column: 24, scope: !4917)
!4939 = !DILocation(line: 1139, column: 38, scope: !4917)
!4940 = !DILocation(line: 1139, column: 37, scope: !4917)
!4941 = !DILocation(line: 1139, column: 49, scope: !4917)
!4942 = !DILocalVariable(name: "i", scope: !4917, file: !1, line: 1140, type: !7)
!4943 = !DILocation(line: 1140, column: 6, scope: !4917)
!4944 = !DILocation(line: 1141, column: 6, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4917, file: !1, line: 1141, column: 6)
!4946 = !DILocation(line: 1141, column: 17, scope: !4945)
!4947 = !DILocation(line: 1141, column: 15, scope: !4945)
!4948 = !DILocation(line: 1141, column: 6, scope: !4917)
!4949 = !DILocation(line: 1141, column: 28, scope: !4945)
!4950 = !DILocation(line: 1141, column: 27, scope: !4945)
!4951 = !DILocation(line: 1142, column: 11, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4945, file: !1, line: 1142, column: 11)
!4953 = !DILocation(line: 1142, column: 22, scope: !4952)
!4954 = !DILocation(line: 1142, column: 20, scope: !4952)
!4955 = !DILocation(line: 1142, column: 11, scope: !4945)
!4956 = !DILocation(line: 1142, column: 33, scope: !4952)
!4957 = !DILocation(line: 1142, column: 32, scope: !4952)
!4958 = !DILocation(line: 1143, column: 11, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4952, file: !1, line: 1143, column: 11)
!4960 = !DILocation(line: 1143, column: 22, scope: !4959)
!4961 = !DILocation(line: 1143, column: 20, scope: !4959)
!4962 = !DILocation(line: 1143, column: 11, scope: !4952)
!4963 = !DILocation(line: 1143, column: 33, scope: !4959)
!4964 = !DILocation(line: 1143, column: 32, scope: !4959)
!4965 = !DILocation(line: 1147, column: 6, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4917, file: !1, line: 1147, column: 6)
!4967 = !DILocation(line: 1147, column: 18, scope: !4966)
!4968 = !DILocation(line: 1147, column: 32, scope: !4966)
!4969 = !DILocation(line: 1147, column: 38, scope: !4966)
!4970 = !DILocation(line: 1147, column: 35, scope: !4966)
!4971 = !DILocation(line: 1147, column: 6, scope: !4917)
!4972 = !DILocation(line: 1147, column: 46, scope: !4966)
!4973 = !DILocation(line: 1148, column: 11, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4966, file: !1, line: 1148, column: 11)
!4975 = !DILocation(line: 1148, column: 23, scope: !4974)
!4976 = !DILocation(line: 1148, column: 37, scope: !4974)
!4977 = !DILocation(line: 1148, column: 39, scope: !4974)
!4978 = !DILocation(line: 1148, column: 11, scope: !4966)
!4979 = !DILocation(line: 1148, column: 47, scope: !4974)
!4980 = !DILocation(line: 1149, column: 7, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4917, file: !1, line: 1149, column: 6)
!4982 = !DILocation(line: 1149, column: 19, scope: !4981)
!4983 = !DILocation(line: 1149, column: 24, scope: !4981)
!4984 = !DILocation(line: 1149, column: 40, scope: !4981)
!4985 = !DILocation(line: 1149, column: 6, scope: !4917)
!4986 = !DILocation(line: 1154, column: 8, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !1, line: 1154, column: 8)
!4988 = distinct !DILexicalBlock(scope: !4981, file: !1, line: 1150, column: 2)
!4989 = !DILocation(line: 1154, column: 20, scope: !4987)
!4990 = !DILocation(line: 1154, column: 37, scope: !4987)
!4991 = !DILocation(line: 1154, column: 45, scope: !4987)
!4992 = !DILocation(line: 1155, column: 4, scope: !4987)
!4993 = !DILocation(line: 1155, column: 16, scope: !4987)
!4994 = !DILocation(line: 1155, column: 33, scope: !4987)
!4995 = !DILocation(line: 1155, column: 41, scope: !4987)
!4996 = !DILocation(line: 1156, column: 4, scope: !4987)
!4997 = !DILocation(line: 1156, column: 16, scope: !4987)
!4998 = !DILocation(line: 1156, column: 33, scope: !4987)
!4999 = !DILocation(line: 1154, column: 8, scope: !4988)
!5000 = !DILocation(line: 1158, column: 4, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4987, file: !1, line: 1157, column: 3)
!5002 = !DILocation(line: 1158, column: 16, scope: !5001)
!5003 = !DILocation(line: 1158, column: 22, scope: !5001)
!5004 = !DILocation(line: 1159, column: 26, scope: !5001)
!5005 = !DILocation(line: 1159, column: 34, scope: !5001)
!5006 = !DILocation(line: 1159, column: 4, scope: !5001)
!5007 = !DILocation(line: 1159, column: 16, scope: !5001)
!5008 = !DILocation(line: 1159, column: 22, scope: !5001)
!5009 = !DILocation(line: 1160, column: 3, scope: !5001)
!5010 = !DILocation(line: 1161, column: 2, scope: !4988)
!5011 = !DILocalVariable(name: "bOrient", scope: !5012, file: !1, line: 1163, type: !126)
!5012 = distinct !DILexicalBlock(scope: !4917, file: !1, line: 1162, column: 2)
!5013 = !DILocation(line: 1163, column: 15, scope: !5012)
!5014 = !DILocation(line: 1163, column: 26, scope: !5012)
!5015 = !DILocation(line: 1163, column: 38, scope: !5012)
!5016 = !DILocation(line: 1163, column: 43, scope: !5012)
!5017 = !DILocation(line: 1163, column: 62, scope: !5012)
!5018 = !DILocation(line: 1163, column: 25, scope: !5012)
!5019 = !DILocation(line: 1164, column: 7, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5012, file: !1, line: 1164, column: 7)
!5021 = !DILocation(line: 1164, column: 18, scope: !5020)
!5022 = !DILocation(line: 1164, column: 26, scope: !5020)
!5023 = !DILocation(line: 1164, column: 15, scope: !5020)
!5024 = !DILocation(line: 1164, column: 7, scope: !5012)
!5025 = !DILocation(line: 1164, column: 47, scope: !5020)
!5026 = !DILocation(line: 1167, column: 16, scope: !4917)
!5027 = !DILocation(line: 1167, column: 24, scope: !4917)
!5028 = !DILocation(line: 1167, column: 2, scope: !4917)
!5029 = !DILocation(line: 1168, column: 33, scope: !4917)
!5030 = !DILocation(line: 1168, column: 2, scope: !4917)
!5031 = !DILocation(line: 1168, column: 14, scope: !4917)
!5032 = !DILocation(line: 1168, column: 28, scope: !4917)
!5033 = !DILocation(line: 1168, column: 31, scope: !4917)
!5034 = !DILocalVariable(name: "neigh_indexL", scope: !5035, file: !1, line: 1171, type: !83)
!5035 = distinct !DILexicalBlock(scope: !4917, file: !1, line: 1170, column: 2)
!5036 = !DILocation(line: 1171, column: 13, scope: !5035)
!5037 = !DILocation(line: 1171, column: 28, scope: !5035)
!5038 = !DILocation(line: 1171, column: 40, scope: !5035)
!5039 = !DILocation(line: 1171, column: 54, scope: !5035)
!5040 = !DILocalVariable(name: "neigh_indexR", scope: !5035, file: !1, line: 1172, type: !83)
!5041 = !DILocation(line: 1172, column: 13, scope: !5035)
!5042 = !DILocation(line: 1172, column: 28, scope: !5035)
!5043 = !DILocation(line: 1172, column: 40, scope: !5035)
!5044 = !DILocation(line: 1172, column: 54, scope: !5035)
!5045 = !DILocation(line: 1172, column: 55, scope: !5035)
!5046 = !DILocation(line: 1172, column: 59, scope: !5035)
!5047 = !DILocation(line: 1172, column: 60, scope: !5035)
!5048 = !DILocation(line: 1173, column: 7, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5035, file: !1, line: 1173, column: 7)
!5050 = !DILocation(line: 1173, column: 19, scope: !5049)
!5051 = !DILocation(line: 1173, column: 7, scope: !5035)
!5052 = !DILocation(line: 1174, column: 16, scope: !5049)
!5053 = !DILocation(line: 1174, column: 29, scope: !5049)
!5054 = !DILocation(line: 1174, column: 41, scope: !5049)
!5055 = !DILocation(line: 1174, column: 55, scope: !5049)
!5056 = !DILocation(line: 1174, column: 4, scope: !5049)
!5057 = !DILocation(line: 1175, column: 7, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5035, file: !1, line: 1175, column: 7)
!5059 = !DILocation(line: 1175, column: 19, scope: !5058)
!5060 = !DILocation(line: 1175, column: 7, scope: !5035)
!5061 = !DILocation(line: 1176, column: 16, scope: !5058)
!5062 = !DILocation(line: 1176, column: 29, scope: !5058)
!5063 = !DILocation(line: 1176, column: 41, scope: !5058)
!5064 = !DILocation(line: 1176, column: 55, scope: !5058)
!5065 = !DILocation(line: 1176, column: 4, scope: !5058)
!5066 = !DILocation(line: 1181, column: 2, scope: !4917)
!5067 = !DILocation(line: 1182, column: 1, scope: !4917)
!5068 = distinct !DISubprogram(name: "vdot", scope: !1, file: !1, line: 101, type: !5069, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!4, !322, !322}
!5071 = !DILocalVariable(name: "v1", arg: 1, scope: !5068, file: !1, line: 101, type: !322)
!5072 = !DILocation(line: 101, column: 33, scope: !5068)
!5073 = !DILocalVariable(name: "v2", arg: 2, scope: !5068, file: !1, line: 101, type: !322)
!5074 = !DILocation(line: 101, column: 49, scope: !5068)
!5075 = !DILocation(line: 103, column: 12, scope: !5068)
!5076 = !DILocation(line: 103, column: 17, scope: !5068)
!5077 = !DILocation(line: 103, column: 13, scope: !5068)
!5078 = !DILocation(line: 103, column: 24, scope: !5068)
!5079 = !DILocation(line: 103, column: 29, scope: !5068)
!5080 = !DILocation(line: 103, column: 25, scope: !5068)
!5081 = !DILocation(line: 103, column: 19, scope: !5068)
!5082 = !DILocation(line: 103, column: 36, scope: !5068)
!5083 = !DILocation(line: 103, column: 41, scope: !5068)
!5084 = !DILocation(line: 103, column: 37, scope: !5068)
!5085 = !DILocation(line: 103, column: 31, scope: !5068)
!5086 = !DILocation(line: 103, column: 2, scope: !5068)
!5087 = distinct !DISubprogram(name: "VNotZero", scope: !1, file: !1, line: 113, type: !5088, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{!26, !322}
!5090 = !DILocalVariable(name: "v", arg: 1, scope: !5087, file: !1, line: 113, type: !322)
!5091 = !DILocation(line: 113, column: 35, scope: !5087)
!5092 = !DILocation(line: 116, column: 19, scope: !5087)
!5093 = !DILocation(line: 116, column: 9, scope: !5087)
!5094 = !DILocation(line: 116, column: 22, scope: !5087)
!5095 = !DILocation(line: 116, column: 35, scope: !5087)
!5096 = !DILocation(line: 116, column: 25, scope: !5087)
!5097 = !DILocation(line: 116, column: 38, scope: !5087)
!5098 = !DILocation(line: 116, column: 51, scope: !5087)
!5099 = !DILocation(line: 116, column: 41, scope: !5087)
!5100 = !DILocation(line: 116, column: 2, scope: !5087)
!5101 = distinct !DISubprogram(name: "Normalize", scope: !1, file: !1, line: 96, type: !5102, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!29, !322}
!5104 = !DILocalVariable(name: "v", arg: 1, scope: !5101, file: !1, line: 96, type: !322)
!5105 = !DILocation(line: 96, column: 38, scope: !5101)
!5106 = !DILocation(line: 98, column: 20, scope: !5101)
!5107 = !DILocation(line: 98, column: 18, scope: !5101)
!5108 = !DILocation(line: 98, column: 9, scope: !5101)
!5109 = !DILocation(line: 98, column: 2, scope: !5101)
!5110 = distinct !DISubprogram(name: "QuickSort", scope: !1, file: !1, line: 1447, type: !5111, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{null, !6, !7, !7, !2753}
!5113 = !DILocalVariable(name: "pSortBuffer", arg: 1, scope: !5110, file: !1, line: 1447, type: !6)
!5114 = !DILocation(line: 1447, column: 28, scope: !5110)
!5115 = !DILocalVariable(name: "iLeft", arg: 2, scope: !5110, file: !1, line: 1447, type: !7)
!5116 = !DILocation(line: 1447, column: 45, scope: !5110)
!5117 = !DILocalVariable(name: "iRight", arg: 3, scope: !5110, file: !1, line: 1447, type: !7)
!5118 = !DILocation(line: 1447, column: 56, scope: !5110)
!5119 = !DILocalVariable(name: "uSeed", arg: 4, scope: !5110, file: !1, line: 1447, type: !2753)
!5120 = !DILocation(line: 1447, column: 77, scope: !5110)
!5121 = !DILocalVariable(name: "iL", scope: !5110, file: !1, line: 1449, type: !7)
!5122 = !DILocation(line: 1449, column: 6, scope: !5110)
!5123 = !DILocalVariable(name: "iR", scope: !5110, file: !1, line: 1449, type: !7)
!5124 = !DILocation(line: 1449, column: 10, scope: !5110)
!5125 = !DILocalVariable(name: "n", scope: !5110, file: !1, line: 1449, type: !7)
!5126 = !DILocation(line: 1449, column: 14, scope: !5110)
!5127 = !DILocalVariable(name: "index", scope: !5110, file: !1, line: 1449, type: !7)
!5128 = !DILocation(line: 1449, column: 17, scope: !5110)
!5129 = !DILocalVariable(name: "iMid", scope: !5110, file: !1, line: 1449, type: !7)
!5130 = !DILocation(line: 1449, column: 24, scope: !5110)
!5131 = !DILocalVariable(name: "iTmp", scope: !5110, file: !1, line: 1449, type: !7)
!5132 = !DILocation(line: 1449, column: 30, scope: !5110)
!5133 = !DILocalVariable(name: "t", scope: !5110, file: !1, line: 1452, type: !2753)
!5134 = !DILocation(line: 1452, column: 15, scope: !5110)
!5135 = !DILocation(line: 1452, column: 17, scope: !5110)
!5136 = !DILocation(line: 1452, column: 22, scope: !5110)
!5137 = !DILocation(line: 1453, column: 5, scope: !5110)
!5138 = !DILocation(line: 1453, column: 12, scope: !5110)
!5139 = !DILocation(line: 1453, column: 10, scope: !5110)
!5140 = !DILocation(line: 1453, column: 16, scope: !5110)
!5141 = !DILocation(line: 1453, column: 27, scope: !5110)
!5142 = !DILocation(line: 1453, column: 26, scope: !5110)
!5143 = !DILocation(line: 1453, column: 21, scope: !5110)
!5144 = !DILocation(line: 1453, column: 14, scope: !5110)
!5145 = !DILocation(line: 1453, column: 3, scope: !5110)
!5146 = !DILocation(line: 1454, column: 8, scope: !5110)
!5147 = !DILocation(line: 1454, column: 14, scope: !5110)
!5148 = !DILocation(line: 1454, column: 13, scope: !5110)
!5149 = !DILocation(line: 1454, column: 15, scope: !5110)
!5150 = !DILocation(line: 1454, column: 7, scope: !5110)
!5151 = !DILocation(line: 1457, column: 5, scope: !5110)
!5152 = !DILocation(line: 1457, column: 4, scope: !5110)
!5153 = !DILocation(line: 1457, column: 15, scope: !5110)
!5154 = !DILocation(line: 1457, column: 14, scope: !5110)
!5155 = !DILocation(line: 1458, column: 7, scope: !5110)
!5156 = !DILocation(line: 1458, column: 10, scope: !5110)
!5157 = !DILocation(line: 1458, column: 9, scope: !5110)
!5158 = !DILocation(line: 1458, column: 13, scope: !5110)
!5159 = !DILocation(line: 1458, column: 4, scope: !5110)
!5160 = !DILocation(line: 1460, column: 17, scope: !5110)
!5161 = !DILocation(line: 1460, column: 23, scope: !5110)
!5162 = !DILocation(line: 1460, column: 22, scope: !5110)
!5163 = !DILocation(line: 1460, column: 8, scope: !5110)
!5164 = !DILocation(line: 1462, column: 7, scope: !5110)
!5165 = !DILocation(line: 1462, column: 19, scope: !5110)
!5166 = !DILocation(line: 1462, column: 27, scope: !5110)
!5167 = !DILocation(line: 1462, column: 25, scope: !5110)
!5168 = !DILocation(line: 1462, column: 6, scope: !5110)
!5169 = !DILocation(line: 1465, column: 2, scope: !5110)
!5170 = !DILocation(line: 1467, column: 3, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5110, file: !1, line: 1466, column: 2)
!5172 = !DILocation(line: 1467, column: 10, scope: !5171)
!5173 = !DILocation(line: 1467, column: 22, scope: !5171)
!5174 = !DILocation(line: 1467, column: 28, scope: !5171)
!5175 = !DILocation(line: 1467, column: 26, scope: !5171)
!5176 = !DILocation(line: 1468, column: 4, scope: !5171)
!5177 = distinct !{!5177, !5170, !5178}
!5178 = !DILocation(line: 1468, column: 6, scope: !5171)
!5179 = !DILocation(line: 1469, column: 3, scope: !5171)
!5180 = !DILocation(line: 1469, column: 10, scope: !5171)
!5181 = !DILocation(line: 1469, column: 22, scope: !5171)
!5182 = !DILocation(line: 1469, column: 28, scope: !5171)
!5183 = !DILocation(line: 1469, column: 26, scope: !5171)
!5184 = !DILocation(line: 1470, column: 4, scope: !5171)
!5185 = distinct !{!5185, !5179, !5186}
!5186 = !DILocation(line: 1470, column: 6, scope: !5171)
!5187 = !DILocation(line: 1472, column: 7, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5171, file: !1, line: 1472, column: 7)
!5189 = !DILocation(line: 1472, column: 13, scope: !5188)
!5190 = !DILocation(line: 1472, column: 10, scope: !5188)
!5191 = !DILocation(line: 1472, column: 7, scope: !5171)
!5192 = !DILocation(line: 1474, column: 11, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5188, file: !1, line: 1473, column: 3)
!5194 = !DILocation(line: 1474, column: 23, scope: !5193)
!5195 = !DILocation(line: 1474, column: 9, scope: !5193)
!5196 = !DILocation(line: 1475, column: 22, scope: !5193)
!5197 = !DILocation(line: 1475, column: 34, scope: !5193)
!5198 = !DILocation(line: 1475, column: 4, scope: !5193)
!5199 = !DILocation(line: 1475, column: 16, scope: !5193)
!5200 = !DILocation(line: 1475, column: 20, scope: !5193)
!5201 = !DILocation(line: 1476, column: 22, scope: !5193)
!5202 = !DILocation(line: 1476, column: 4, scope: !5193)
!5203 = !DILocation(line: 1476, column: 16, scope: !5193)
!5204 = !DILocation(line: 1476, column: 20, scope: !5193)
!5205 = !DILocation(line: 1477, column: 4, scope: !5193)
!5206 = !DILocation(line: 1477, column: 10, scope: !5193)
!5207 = !DILocation(line: 1478, column: 3, scope: !5193)
!5208 = !DILocation(line: 1479, column: 2, scope: !5171)
!5209 = !DILocation(line: 1480, column: 9, scope: !5110)
!5210 = !DILocation(line: 1480, column: 15, scope: !5110)
!5211 = !DILocation(line: 1480, column: 12, scope: !5110)
!5212 = distinct !{!5212, !5169, !5213}
!5213 = !DILocation(line: 1480, column: 17, scope: !5110)
!5214 = !DILocation(line: 1482, column: 6, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5110, file: !1, line: 1482, column: 6)
!5216 = !DILocation(line: 1482, column: 14, scope: !5215)
!5217 = !DILocation(line: 1482, column: 12, scope: !5215)
!5218 = !DILocation(line: 1482, column: 6, scope: !5110)
!5219 = !DILocation(line: 1483, column: 13, scope: !5215)
!5220 = !DILocation(line: 1483, column: 26, scope: !5215)
!5221 = !DILocation(line: 1483, column: 33, scope: !5215)
!5222 = !DILocation(line: 1483, column: 37, scope: !5215)
!5223 = !DILocation(line: 1483, column: 3, scope: !5215)
!5224 = !DILocation(line: 1484, column: 6, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5110, file: !1, line: 1484, column: 6)
!5226 = !DILocation(line: 1484, column: 11, scope: !5225)
!5227 = !DILocation(line: 1484, column: 9, scope: !5225)
!5228 = !DILocation(line: 1484, column: 6, scope: !5110)
!5229 = !DILocation(line: 1485, column: 13, scope: !5225)
!5230 = !DILocation(line: 1485, column: 26, scope: !5225)
!5231 = !DILocation(line: 1485, column: 30, scope: !5225)
!5232 = !DILocation(line: 1485, column: 38, scope: !5225)
!5233 = !DILocation(line: 1485, column: 3, scope: !5225)
!5234 = !DILocation(line: 1486, column: 1, scope: !5110)
!5235 = distinct !DISubprogram(name: "CompareSubGroups", scope: !1, file: !1, line: 1434, type: !5236, scopeLine: 1435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5236 = !DISubroutineType(types: !5237)
!5237 = !{!26, !5238, !5238}
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 64)
!5239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !75)
!5240 = !DILocalVariable(name: "pg1", arg: 1, scope: !5235, file: !1, line: 1434, type: !5238)
!5241 = !DILocation(line: 1434, column: 49, scope: !5235)
!5242 = !DILocalVariable(name: "pg2", arg: 2, scope: !5235, file: !1, line: 1434, type: !5238)
!5243 = !DILocation(line: 1434, column: 72, scope: !5235)
!5244 = !DILocalVariable(name: "bStillSame", scope: !5235, file: !1, line: 1436, type: !26)
!5245 = !DILocation(line: 1436, column: 8, scope: !5235)
!5246 = !DILocalVariable(name: "i", scope: !5235, file: !1, line: 1437, type: !7)
!5247 = !DILocation(line: 1437, column: 6, scope: !5235)
!5248 = !DILocation(line: 1438, column: 6, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5235, file: !1, line: 1438, column: 6)
!5250 = !DILocation(line: 1438, column: 11, scope: !5249)
!5251 = !DILocation(line: 1438, column: 21, scope: !5249)
!5252 = !DILocation(line: 1438, column: 26, scope: !5249)
!5253 = !DILocation(line: 1438, column: 19, scope: !5249)
!5254 = !DILocation(line: 1438, column: 6, scope: !5235)
!5255 = !DILocation(line: 1438, column: 36, scope: !5249)
!5256 = !DILocation(line: 1439, column: 2, scope: !5235)
!5257 = !DILocation(line: 1439, column: 9, scope: !5235)
!5258 = !DILocation(line: 1439, column: 11, scope: !5235)
!5259 = !DILocation(line: 1439, column: 16, scope: !5235)
!5260 = !DILocation(line: 1439, column: 10, scope: !5235)
!5261 = !DILocation(line: 1439, column: 25, scope: !5235)
!5262 = !DILocation(line: 1439, column: 28, scope: !5235)
!5263 = !DILocation(line: 0, scope: !5235)
!5264 = !DILocation(line: 1441, column: 16, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5235, file: !1, line: 1440, column: 2)
!5266 = !DILocation(line: 1441, column: 21, scope: !5265)
!5267 = !DILocation(line: 1441, column: 33, scope: !5265)
!5268 = !DILocation(line: 1441, column: 37, scope: !5265)
!5269 = !DILocation(line: 1441, column: 42, scope: !5265)
!5270 = !DILocation(line: 1441, column: 54, scope: !5265)
!5271 = !DILocation(line: 1441, column: 35, scope: !5265)
!5272 = !DILocation(line: 1441, column: 14, scope: !5265)
!5273 = !DILocation(line: 1442, column: 7, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5265, file: !1, line: 1442, column: 7)
!5275 = !DILocation(line: 1442, column: 7, scope: !5265)
!5276 = !DILocation(line: 1442, column: 19, scope: !5274)
!5277 = distinct !{!5277, !5256, !5278}
!5278 = !DILocation(line: 1443, column: 2, scope: !5235)
!5279 = !DILocation(line: 1444, column: 9, scope: !5235)
!5280 = !DILocation(line: 1444, column: 2, scope: !5235)
!5281 = !DILocation(line: 1445, column: 1, scope: !5235)
!5282 = distinct !DISubprogram(name: "EvalTspace", scope: !1, file: !1, line: 1360, type: !5283, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5283 = !DISubroutineType(types: !5284)
!5284 = !{!47, !6, !83, !1752, !2414, !91, !83}
!5285 = !DILocalVariable(name: "face_indices", arg: 1, scope: !5282, file: !1, line: 1360, type: !6)
!5286 = !DILocation(line: 1360, column: 31, scope: !5282)
!5287 = !DILocalVariable(name: "iFaces", arg: 2, scope: !5282, file: !1, line: 1360, type: !83)
!5288 = !DILocation(line: 1360, column: 57, scope: !5282)
!5289 = !DILocalVariable(name: "piTriListIn", arg: 3, scope: !5282, file: !1, line: 1360, type: !1752)
!5290 = !DILocation(line: 1360, column: 75, scope: !5282)
!5291 = !DILocalVariable(name: "pTriInfos", arg: 4, scope: !5282, file: !1, line: 1360, type: !2414)
!5292 = !DILocation(line: 1360, column: 105, scope: !5282)
!5293 = !DILocalVariable(name: "pContext", arg: 5, scope: !5282, file: !1, line: 1361, type: !91)
!5294 = !DILocation(line: 1361, column: 54, scope: !5282)
!5295 = !DILocalVariable(name: "iVertexRepresentitive", arg: 6, scope: !5282, file: !1, line: 1361, type: !83)
!5296 = !DILocation(line: 1361, column: 74, scope: !5282)
!5297 = !DILocalVariable(name: "res", scope: !5282, file: !1, line: 1363, type: !47)
!5298 = !DILocation(line: 1363, column: 10, scope: !5282)
!5299 = !DILocalVariable(name: "fAngleSum", scope: !5282, file: !1, line: 1364, type: !4)
!5300 = !DILocation(line: 1364, column: 8, scope: !5282)
!5301 = !DILocalVariable(name: "face", scope: !5282, file: !1, line: 1365, type: !7)
!5302 = !DILocation(line: 1365, column: 6, scope: !5282)
!5303 = !DILocation(line: 1366, column: 6, scope: !5282)
!5304 = !DILocation(line: 1366, column: 10, scope: !5282)
!5305 = !DILocation(line: 1366, column: 11, scope: !5282)
!5306 = !DILocation(line: 1366, column: 22, scope: !5282)
!5307 = !DILocation(line: 1366, column: 26, scope: !5282)
!5308 = !DILocation(line: 1366, column: 27, scope: !5282)
!5309 = !DILocation(line: 1366, column: 38, scope: !5282)
!5310 = !DILocation(line: 1366, column: 42, scope: !5282)
!5311 = !DILocation(line: 1366, column: 43, scope: !5282)
!5312 = !DILocation(line: 1367, column: 6, scope: !5282)
!5313 = !DILocation(line: 1367, column: 10, scope: !5282)
!5314 = !DILocation(line: 1367, column: 11, scope: !5282)
!5315 = !DILocation(line: 1367, column: 22, scope: !5282)
!5316 = !DILocation(line: 1367, column: 26, scope: !5282)
!5317 = !DILocation(line: 1367, column: 27, scope: !5282)
!5318 = !DILocation(line: 1367, column: 38, scope: !5282)
!5319 = !DILocation(line: 1367, column: 42, scope: !5282)
!5320 = !DILocation(line: 1367, column: 43, scope: !5282)
!5321 = !DILocation(line: 1368, column: 6, scope: !5282)
!5322 = !DILocation(line: 1368, column: 12, scope: !5282)
!5323 = !DILocation(line: 1368, column: 21, scope: !5282)
!5324 = !DILocation(line: 1368, column: 27, scope: !5282)
!5325 = !DILocation(line: 1370, column: 11, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5282, file: !1, line: 1370, column: 2)
!5327 = !DILocation(line: 1370, column: 7, scope: !5326)
!5328 = !DILocation(line: 1370, column: 15, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5326, file: !1, line: 1370, column: 2)
!5330 = !DILocation(line: 1370, column: 20, scope: !5329)
!5331 = !DILocation(line: 1370, column: 19, scope: !5329)
!5332 = !DILocation(line: 1370, column: 2, scope: !5326)
!5333 = !DILocalVariable(name: "f", scope: !5334, file: !1, line: 1372, type: !83)
!5334 = distinct !DILexicalBlock(scope: !5329, file: !1, line: 1371, column: 2)
!5335 = !DILocation(line: 1372, column: 13, scope: !5334)
!5336 = !DILocation(line: 1372, column: 17, scope: !5334)
!5337 = !DILocation(line: 1372, column: 30, scope: !5334)
!5338 = !DILocation(line: 1375, column: 9, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5334, file: !1, line: 1375, column: 8)
!5340 = !DILocation(line: 1375, column: 19, scope: !5339)
!5341 = !DILocation(line: 1375, column: 22, scope: !5339)
!5342 = !DILocation(line: 1375, column: 27, scope: !5339)
!5343 = !DILocation(line: 1375, column: 43, scope: !5339)
!5344 = !DILocation(line: 1375, column: 8, scope: !5334)
!5345 = !DILocalVariable(name: "n", scope: !5346, file: !1, line: 1377, type: !29)
!5346 = distinct !DILexicalBlock(scope: !5339, file: !1, line: 1376, column: 3)
!5347 = !DILocation(line: 1377, column: 10, scope: !5346)
!5348 = !DILocalVariable(name: "vOs", scope: !5346, file: !1, line: 1377, type: !29)
!5349 = !DILocation(line: 1377, column: 13, scope: !5346)
!5350 = !DILocalVariable(name: "vOt", scope: !5346, file: !1, line: 1377, type: !29)
!5351 = !DILocation(line: 1377, column: 18, scope: !5346)
!5352 = !DILocalVariable(name: "p0", scope: !5346, file: !1, line: 1377, type: !29)
!5353 = !DILocation(line: 1377, column: 23, scope: !5346)
!5354 = !DILocalVariable(name: "p1", scope: !5346, file: !1, line: 1377, type: !29)
!5355 = !DILocation(line: 1377, column: 27, scope: !5346)
!5356 = !DILocalVariable(name: "p2", scope: !5346, file: !1, line: 1377, type: !29)
!5357 = !DILocation(line: 1377, column: 31, scope: !5346)
!5358 = !DILocalVariable(name: "v1", scope: !5346, file: !1, line: 1377, type: !29)
!5359 = !DILocation(line: 1377, column: 35, scope: !5346)
!5360 = !DILocalVariable(name: "v2", scope: !5346, file: !1, line: 1377, type: !29)
!5361 = !DILocation(line: 1377, column: 39, scope: !5346)
!5362 = !DILocalVariable(name: "fCos", scope: !5346, file: !1, line: 1378, type: !4)
!5363 = !DILocation(line: 1378, column: 10, scope: !5346)
!5364 = !DILocalVariable(name: "fAngle", scope: !5346, file: !1, line: 1378, type: !4)
!5365 = !DILocation(line: 1378, column: 16, scope: !5346)
!5366 = !DILocalVariable(name: "fMagS", scope: !5346, file: !1, line: 1378, type: !4)
!5367 = !DILocation(line: 1378, column: 24, scope: !5346)
!5368 = !DILocalVariable(name: "fMagT", scope: !5346, file: !1, line: 1378, type: !4)
!5369 = !DILocation(line: 1378, column: 31, scope: !5346)
!5370 = !DILocalVariable(name: "i", scope: !5346, file: !1, line: 1379, type: !7)
!5371 = !DILocation(line: 1379, column: 8, scope: !5346)
!5372 = !DILocalVariable(name: "index", scope: !5346, file: !1, line: 1379, type: !7)
!5373 = !DILocation(line: 1379, column: 14, scope: !5346)
!5374 = !DILocalVariable(name: "i0", scope: !5346, file: !1, line: 1379, type: !7)
!5375 = !DILocation(line: 1379, column: 24, scope: !5346)
!5376 = !DILocalVariable(name: "i1", scope: !5346, file: !1, line: 1379, type: !7)
!5377 = !DILocation(line: 1379, column: 31, scope: !5346)
!5378 = !DILocalVariable(name: "i2", scope: !5346, file: !1, line: 1379, type: !7)
!5379 = !DILocation(line: 1379, column: 38, scope: !5346)
!5380 = !DILocation(line: 1380, column: 8, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5346, file: !1, line: 1380, column: 8)
!5382 = !DILocation(line: 1380, column: 22, scope: !5381)
!5383 = !DILocation(line: 1380, column: 21, scope: !5381)
!5384 = !DILocation(line: 1380, column: 23, scope: !5381)
!5385 = !DILocation(line: 1380, column: 28, scope: !5381)
!5386 = !DILocation(line: 1380, column: 26, scope: !5381)
!5387 = !DILocation(line: 1380, column: 8, scope: !5346)
!5388 = !DILocation(line: 1380, column: 52, scope: !5381)
!5389 = !DILocation(line: 1380, column: 51, scope: !5381)
!5390 = !DILocation(line: 1381, column: 13, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5381, file: !1, line: 1381, column: 13)
!5392 = !DILocation(line: 1381, column: 27, scope: !5391)
!5393 = !DILocation(line: 1381, column: 26, scope: !5391)
!5394 = !DILocation(line: 1381, column: 28, scope: !5391)
!5395 = !DILocation(line: 1381, column: 33, scope: !5391)
!5396 = !DILocation(line: 1381, column: 31, scope: !5391)
!5397 = !DILocation(line: 1381, column: 13, scope: !5381)
!5398 = !DILocation(line: 1381, column: 57, scope: !5391)
!5399 = !DILocation(line: 1381, column: 56, scope: !5391)
!5400 = !DILocation(line: 1382, column: 13, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5391, file: !1, line: 1382, column: 13)
!5402 = !DILocation(line: 1382, column: 27, scope: !5401)
!5403 = !DILocation(line: 1382, column: 26, scope: !5401)
!5404 = !DILocation(line: 1382, column: 28, scope: !5401)
!5405 = !DILocation(line: 1382, column: 33, scope: !5401)
!5406 = !DILocation(line: 1382, column: 31, scope: !5401)
!5407 = !DILocation(line: 1382, column: 13, scope: !5391)
!5408 = !DILocation(line: 1382, column: 57, scope: !5401)
!5409 = !DILocation(line: 1382, column: 56, scope: !5401)
!5410 = !DILocation(line: 1386, column: 12, scope: !5346)
!5411 = !DILocation(line: 1386, column: 26, scope: !5346)
!5412 = !DILocation(line: 1386, column: 25, scope: !5346)
!5413 = !DILocation(line: 1386, column: 28, scope: !5346)
!5414 = !DILocation(line: 1386, column: 27, scope: !5346)
!5415 = !DILocation(line: 1386, column: 10, scope: !5346)
!5416 = !DILocation(line: 1387, column: 18, scope: !5346)
!5417 = !DILocation(line: 1387, column: 28, scope: !5346)
!5418 = !DILocation(line: 1387, column: 8, scope: !5346)
!5419 = !DILocation(line: 1388, column: 15, scope: !5346)
!5420 = !DILocation(line: 1388, column: 25, scope: !5346)
!5421 = !DILocation(line: 1388, column: 28, scope: !5346)
!5422 = !DILocation(line: 1388, column: 47, scope: !5346)
!5423 = !DILocation(line: 1388, column: 57, scope: !5346)
!5424 = !DILocation(line: 1388, column: 60, scope: !5346)
!5425 = !DILocation(line: 1388, column: 40, scope: !5346)
!5426 = !DILocation(line: 1388, column: 33, scope: !5346)
!5427 = !DILocation(line: 1388, column: 10, scope: !5346)
!5428 = !DILocation(line: 1389, column: 15, scope: !5346)
!5429 = !DILocation(line: 1389, column: 25, scope: !5346)
!5430 = !DILocation(line: 1389, column: 28, scope: !5346)
!5431 = !DILocation(line: 1389, column: 47, scope: !5346)
!5432 = !DILocation(line: 1389, column: 57, scope: !5346)
!5433 = !DILocation(line: 1389, column: 60, scope: !5346)
!5434 = !DILocation(line: 1389, column: 40, scope: !5346)
!5435 = !DILocation(line: 1389, column: 33, scope: !5346)
!5436 = !DILocation(line: 1389, column: 10, scope: !5346)
!5437 = !DILocation(line: 1390, column: 9, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5346, file: !1, line: 1390, column: 9)
!5439 = !DILocation(line: 1390, column: 9, scope: !5346)
!5440 = !DILocation(line: 1390, column: 31, scope: !5438)
!5441 = !DILocation(line: 1390, column: 25, scope: !5438)
!5442 = !DILocation(line: 1391, column: 9, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5346, file: !1, line: 1391, column: 9)
!5444 = !DILocation(line: 1391, column: 9, scope: !5346)
!5445 = !DILocation(line: 1391, column: 31, scope: !5443)
!5446 = !DILocation(line: 1391, column: 25, scope: !5443)
!5447 = !DILocation(line: 1393, column: 9, scope: !5346)
!5448 = !DILocation(line: 1393, column: 23, scope: !5346)
!5449 = !DILocation(line: 1393, column: 22, scope: !5346)
!5450 = !DILocation(line: 1393, column: 28, scope: !5346)
!5451 = !DILocation(line: 1393, column: 29, scope: !5346)
!5452 = !DILocation(line: 1393, column: 33, scope: !5346)
!5453 = !DILocation(line: 1393, column: 34, scope: !5346)
!5454 = !DILocation(line: 1393, column: 25, scope: !5346)
!5455 = !DILocation(line: 1393, column: 7, scope: !5346)
!5456 = !DILocation(line: 1394, column: 9, scope: !5346)
!5457 = !DILocation(line: 1394, column: 23, scope: !5346)
!5458 = !DILocation(line: 1394, column: 22, scope: !5346)
!5459 = !DILocation(line: 1394, column: 27, scope: !5346)
!5460 = !DILocation(line: 1394, column: 25, scope: !5346)
!5461 = !DILocation(line: 1394, column: 7, scope: !5346)
!5462 = !DILocation(line: 1395, column: 9, scope: !5346)
!5463 = !DILocation(line: 1395, column: 23, scope: !5346)
!5464 = !DILocation(line: 1395, column: 22, scope: !5346)
!5465 = !DILocation(line: 1395, column: 28, scope: !5346)
!5466 = !DILocation(line: 1395, column: 29, scope: !5346)
!5467 = !DILocation(line: 1395, column: 33, scope: !5346)
!5468 = !DILocation(line: 1395, column: 34, scope: !5346)
!5469 = !DILocation(line: 1395, column: 25, scope: !5346)
!5470 = !DILocation(line: 1395, column: 7, scope: !5346)
!5471 = !DILocation(line: 1397, column: 21, scope: !5346)
!5472 = !DILocation(line: 1397, column: 31, scope: !5346)
!5473 = !DILocation(line: 1397, column: 9, scope: !5346)
!5474 = !DILocation(line: 1398, column: 21, scope: !5346)
!5475 = !DILocation(line: 1398, column: 31, scope: !5346)
!5476 = !DILocation(line: 1398, column: 9, scope: !5346)
!5477 = !DILocation(line: 1399, column: 21, scope: !5346)
!5478 = !DILocation(line: 1399, column: 31, scope: !5346)
!5479 = !DILocation(line: 1399, column: 9, scope: !5346)
!5480 = !DILocation(line: 1400, column: 9, scope: !5346)
!5481 = !DILocation(line: 1401, column: 9, scope: !5346)
!5482 = !DILocation(line: 1404, column: 25, scope: !5346)
!5483 = !DILocation(line: 1404, column: 18, scope: !5346)
!5484 = !DILocation(line: 1404, column: 9, scope: !5346)
!5485 = !DILocation(line: 1404, column: 46, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5346, file: !1, line: 1404, column: 46)
!5487 = !DILocation(line: 1404, column: 46, scope: !5346)
!5488 = !DILocation(line: 1404, column: 66, scope: !5486)
!5489 = !DILocation(line: 1404, column: 61, scope: !5486)
!5490 = !DILocation(line: 1405, column: 25, scope: !5346)
!5491 = !DILocation(line: 1405, column: 18, scope: !5346)
!5492 = !DILocation(line: 1405, column: 9, scope: !5346)
!5493 = !DILocation(line: 1405, column: 46, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5346, file: !1, line: 1405, column: 46)
!5495 = !DILocation(line: 1405, column: 46, scope: !5346)
!5496 = !DILocation(line: 1405, column: 66, scope: !5494)
!5497 = !DILocation(line: 1405, column: 61, scope: !5494)
!5498 = !DILocation(line: 1409, column: 11, scope: !5346)
!5499 = !DILocation(line: 1409, column: 9, scope: !5346)
!5500 = !DILocation(line: 1409, column: 29, scope: !5346)
!5501 = !DILocation(line: 1409, column: 33, scope: !5346)
!5502 = !DILocation(line: 1409, column: 39, scope: !5346)
!5503 = !DILocation(line: 1409, column: 43, scope: !5346)
!5504 = !DILocation(line: 1409, column: 58, scope: !5346)
!5505 = !DILocation(line: 1409, column: 28, scope: !5346)
!5506 = !DILocation(line: 1410, column: 26, scope: !5346)
!5507 = !DILocation(line: 1410, column: 21, scope: !5346)
!5508 = !DILocation(line: 1410, column: 13, scope: !5346)
!5509 = !DILocation(line: 1410, column: 11, scope: !5346)
!5510 = !DILocation(line: 1411, column: 12, scope: !5346)
!5511 = !DILocation(line: 1411, column: 22, scope: !5346)
!5512 = !DILocation(line: 1411, column: 25, scope: !5346)
!5513 = !DILocation(line: 1411, column: 10, scope: !5346)
!5514 = !DILocation(line: 1412, column: 12, scope: !5346)
!5515 = !DILocation(line: 1412, column: 22, scope: !5346)
!5516 = !DILocation(line: 1412, column: 25, scope: !5346)
!5517 = !DILocation(line: 1412, column: 10, scope: !5346)
!5518 = !DILocation(line: 1414, column: 8, scope: !5346)
!5519 = !DILocation(line: 1414, column: 21, scope: !5346)
!5520 = !DILocation(line: 1414, column: 33, scope: !5346)
!5521 = !DILocation(line: 1414, column: 26, scope: !5346)
!5522 = !DILocation(line: 1414, column: 12, scope: !5346)
!5523 = !DILocation(line: 1415, column: 8, scope: !5346)
!5524 = !DILocation(line: 1415, column: 21, scope: !5346)
!5525 = !DILocation(line: 1415, column: 32, scope: !5346)
!5526 = !DILocation(line: 1415, column: 25, scope: !5346)
!5527 = !DILocation(line: 1415, column: 12, scope: !5346)
!5528 = !DILocation(line: 1416, column: 16, scope: !5346)
!5529 = !DILocation(line: 1416, column: 23, scope: !5346)
!5530 = !DILocation(line: 1416, column: 22, scope: !5346)
!5531 = !DILocation(line: 1416, column: 8, scope: !5346)
!5532 = !DILocation(line: 1416, column: 13, scope: !5346)
!5533 = !DILocation(line: 1417, column: 16, scope: !5346)
!5534 = !DILocation(line: 1417, column: 23, scope: !5346)
!5535 = !DILocation(line: 1417, column: 22, scope: !5346)
!5536 = !DILocation(line: 1417, column: 8, scope: !5346)
!5537 = !DILocation(line: 1417, column: 13, scope: !5346)
!5538 = !DILocation(line: 1418, column: 17, scope: !5346)
!5539 = !DILocation(line: 1418, column: 14, scope: !5346)
!5540 = !DILocation(line: 1419, column: 3, scope: !5346)
!5541 = !DILocation(line: 1420, column: 2, scope: !5334)
!5542 = !DILocation(line: 1370, column: 32, scope: !5329)
!5543 = !DILocation(line: 1370, column: 2, scope: !5329)
!5544 = distinct !{!5544, !5332, !5545}
!5545 = !DILocation(line: 1420, column: 2, scope: !5326)
!5546 = !DILocation(line: 1423, column: 20, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5282, file: !1, line: 1423, column: 7)
!5548 = !DILocation(line: 1423, column: 7, scope: !5547)
!5549 = !DILocation(line: 1423, column: 7, scope: !5282)
!5550 = !DILocation(line: 1423, column: 31, scope: !5547)
!5551 = !DILocation(line: 1423, column: 51, scope: !5547)
!5552 = !DILocation(line: 1423, column: 37, scope: !5547)
!5553 = !DILocation(line: 1423, column: 27, scope: !5547)
!5554 = !DILocation(line: 1424, column: 20, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5282, file: !1, line: 1424, column: 7)
!5556 = !DILocation(line: 1424, column: 7, scope: !5555)
!5557 = !DILocation(line: 1424, column: 7, scope: !5282)
!5558 = !DILocation(line: 1424, column: 31, scope: !5555)
!5559 = !DILocation(line: 1424, column: 51, scope: !5555)
!5560 = !DILocation(line: 1424, column: 37, scope: !5555)
!5561 = !DILocation(line: 1424, column: 27, scope: !5555)
!5562 = !DILocation(line: 1425, column: 6, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5282, file: !1, line: 1425, column: 6)
!5564 = !DILocation(line: 1425, column: 15, scope: !5563)
!5565 = !DILocation(line: 1425, column: 6, scope: !5282)
!5566 = !DILocation(line: 1427, column: 16, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5563, file: !1, line: 1426, column: 2)
!5568 = !DILocation(line: 1427, column: 7, scope: !5567)
!5569 = !DILocation(line: 1427, column: 13, scope: !5567)
!5570 = !DILocation(line: 1428, column: 16, scope: !5567)
!5571 = !DILocation(line: 1428, column: 7, scope: !5567)
!5572 = !DILocation(line: 1428, column: 13, scope: !5567)
!5573 = !DILocation(line: 1429, column: 2, scope: !5567)
!5574 = !DILocation(line: 1431, column: 2, scope: !5282)
!5575 = distinct !DISubprogram(name: "AvgTSpace", scope: !1, file: !1, line: 184, type: !5576, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5576 = !DISubroutineType(types: !5577)
!5577 = !{!47, !561, !561}
!5578 = !DILocalVariable(name: "pTS0", arg: 1, scope: !5575, file: !1, line: 184, type: !561)
!5579 = !DILocation(line: 184, column: 42, scope: !5575)
!5580 = !DILocalVariable(name: "pTS1", arg: 2, scope: !5575, file: !1, line: 184, type: !561)
!5581 = !DILocation(line: 184, column: 64, scope: !5575)
!5582 = !DILocalVariable(name: "ts_res", scope: !5575, file: !1, line: 186, type: !47)
!5583 = !DILocation(line: 186, column: 10, scope: !5575)
!5584 = !DILocation(line: 191, column: 6, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5575, file: !1, line: 191, column: 6)
!5586 = !DILocation(line: 191, column: 12, scope: !5585)
!5587 = !DILocation(line: 191, column: 19, scope: !5585)
!5588 = !DILocation(line: 191, column: 25, scope: !5585)
!5589 = !DILocation(line: 191, column: 17, scope: !5585)
!5590 = !DILocation(line: 191, column: 31, scope: !5585)
!5591 = !DILocation(line: 191, column: 34, scope: !5585)
!5592 = !DILocation(line: 191, column: 40, scope: !5585)
!5593 = !DILocation(line: 191, column: 47, scope: !5585)
!5594 = !DILocation(line: 191, column: 53, scope: !5585)
!5595 = !DILocation(line: 191, column: 45, scope: !5585)
!5596 = !DILocation(line: 191, column: 59, scope: !5585)
!5597 = !DILocation(line: 192, column: 9, scope: !5585)
!5598 = !DILocation(line: 192, column: 15, scope: !5585)
!5599 = !DILocation(line: 192, column: 19, scope: !5585)
!5600 = !DILocation(line: 192, column: 25, scope: !5585)
!5601 = !DILocation(line: 192, column: 5, scope: !5585)
!5602 = !DILocation(line: 192, column: 30, scope: !5585)
!5603 = !DILocation(line: 192, column: 37, scope: !5585)
!5604 = !DILocation(line: 192, column: 43, scope: !5585)
!5605 = !DILocation(line: 192, column: 48, scope: !5585)
!5606 = !DILocation(line: 192, column: 54, scope: !5585)
!5607 = !DILocation(line: 192, column: 33, scope: !5585)
!5608 = !DILocation(line: 191, column: 6, scope: !5575)
!5609 = !DILocation(line: 194, column: 18, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5585, file: !1, line: 193, column: 2)
!5611 = !DILocation(line: 194, column: 24, scope: !5610)
!5612 = !DILocation(line: 194, column: 10, scope: !5610)
!5613 = !DILocation(line: 194, column: 16, scope: !5610)
!5614 = !DILocation(line: 195, column: 18, scope: !5610)
!5615 = !DILocation(line: 195, column: 24, scope: !5610)
!5616 = !DILocation(line: 195, column: 10, scope: !5610)
!5617 = !DILocation(line: 195, column: 16, scope: !5610)
!5618 = !DILocation(line: 196, column: 10, scope: !5610)
!5619 = !DILocation(line: 196, column: 16, scope: !5610)
!5620 = !DILocation(line: 196, column: 22, scope: !5610)
!5621 = !DILocation(line: 197, column: 10, scope: !5610)
!5622 = !DILocation(line: 197, column: 16, scope: !5610)
!5623 = !DILocation(line: 197, column: 22, scope: !5610)
!5624 = !DILocation(line: 198, column: 2, scope: !5610)
!5625 = !DILocation(line: 201, column: 24, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5585, file: !1, line: 200, column: 2)
!5627 = !DILocation(line: 201, column: 30, scope: !5626)
!5628 = !DILocation(line: 201, column: 36, scope: !5626)
!5629 = !DILocation(line: 201, column: 42, scope: !5626)
!5630 = !DILocation(line: 201, column: 35, scope: !5626)
!5631 = !DILocation(line: 201, column: 22, scope: !5626)
!5632 = !DILocation(line: 201, column: 10, scope: !5626)
!5633 = !DILocation(line: 201, column: 16, scope: !5626)
!5634 = !DILocation(line: 202, column: 24, scope: !5626)
!5635 = !DILocation(line: 202, column: 30, scope: !5626)
!5636 = !DILocation(line: 202, column: 36, scope: !5626)
!5637 = !DILocation(line: 202, column: 42, scope: !5626)
!5638 = !DILocation(line: 202, column: 35, scope: !5626)
!5639 = !DILocation(line: 202, column: 22, scope: !5626)
!5640 = !DILocation(line: 202, column: 10, scope: !5626)
!5641 = !DILocation(line: 202, column: 16, scope: !5626)
!5642 = !DILocation(line: 203, column: 10, scope: !5626)
!5643 = !DILocation(line: 203, column: 21, scope: !5626)
!5644 = !DILocation(line: 203, column: 27, scope: !5626)
!5645 = !DILocation(line: 203, column: 31, scope: !5626)
!5646 = !DILocation(line: 203, column: 37, scope: !5626)
!5647 = !DILocation(line: 203, column: 16, scope: !5626)
!5648 = !DILocation(line: 204, column: 10, scope: !5626)
!5649 = !DILocation(line: 204, column: 21, scope: !5626)
!5650 = !DILocation(line: 204, column: 27, scope: !5626)
!5651 = !DILocation(line: 204, column: 31, scope: !5626)
!5652 = !DILocation(line: 204, column: 37, scope: !5626)
!5653 = !DILocation(line: 204, column: 16, scope: !5626)
!5654 = !DILocation(line: 205, column: 24, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5626, file: !1, line: 205, column: 8)
!5656 = !DILocation(line: 205, column: 8, scope: !5655)
!5657 = !DILocation(line: 205, column: 8, scope: !5626)
!5658 = !DILocation(line: 205, column: 38, scope: !5655)
!5659 = !DILocation(line: 205, column: 61, scope: !5655)
!5660 = !DILocation(line: 205, column: 44, scope: !5655)
!5661 = !DILocation(line: 205, column: 31, scope: !5655)
!5662 = !DILocation(line: 206, column: 24, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5626, file: !1, line: 206, column: 8)
!5664 = !DILocation(line: 206, column: 8, scope: !5663)
!5665 = !DILocation(line: 206, column: 8, scope: !5626)
!5666 = !DILocation(line: 206, column: 38, scope: !5663)
!5667 = !DILocation(line: 206, column: 61, scope: !5663)
!5668 = !DILocation(line: 206, column: 44, scope: !5663)
!5669 = !DILocation(line: 206, column: 31, scope: !5663)
!5670 = !DILocation(line: 209, column: 2, scope: !5575)
