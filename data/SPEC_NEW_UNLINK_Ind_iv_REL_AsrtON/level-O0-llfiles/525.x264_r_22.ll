; ModuleID = 'x264_src/encoder/macroblock.c'
source_filename = "x264_src/encoder/macroblock.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.x264_t = type { %struct.x264_param_t, [129 x %struct.x264_t*], i32, i32, i32, i32, i32, %struct.anon.2, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x %struct.x264_sps_t], %struct.x264_sps_t*, [1 x %struct.x264_pps_t], %struct.x264_pps_t*, i32, i32, [4 x [16 x i32]*], [2 x [64 x i32]*], [4 x [16 x i32]*], [2 x [64 x i32]*], [4 x [16 x i16]*], [2 x [64 x i16]*], [4 x [16 x i16]*], [2 x [64 x i16]*], [92 x i16*], [92 x [4 x i16*]], i8*, [8 x i8], %struct.x264_slice_header_t, %struct.x264_cabac_t, %struct.anon.8, %struct.x264_frame*, %struct.x264_frame*, i32, [19 x %struct.x264_frame*], i32, [19 x %struct.x264_frame*], [2 x i32], i32, i32, i64, %struct.anon.9, %struct.anon.10, %struct.x264_ratecontrol_t*, %struct.anon.13, [2 x [64 x i32]], [2 x [64 x i16]], [2 x i32], i8*, [2 x [3 x i8*]], [2 x [2 x [4 x [4 x i8]]]*], [7 x void (i8*)*], [7 x void (i8*)*], [12 x void (i8*, i8*)*], [12 x void (i8*)*], void (i8*, i8*, i32, i32)*, %struct.x264_pixel_function_t, %struct.x264_mc_functions_t, %struct.x264_dct_function_t, %struct.x264_zigzag_function_t, %struct.x264_quant_function_t, %struct.x264_deblock_function_t, %struct.x264_lookahead_t*, [8 x i8] }
%struct.x264_param_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, [16 x i8], [16 x i8], [16 x i8], [16 x i8], [64 x i8], [64 x i8], void (i8*, i32, i8*, %struct.__va_list_tag*)*, i8*, i32, i32, i8*, %struct.anon.0, %struct.anon.1, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, void (i8*)* }
%struct.anon = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.anon.0 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, i32, [2 x i32], i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, float, float, float, i32, i32, float, float, float, i32, float, i32, i32, i32, i8*, i32, i8*, float, float, float, %struct.x264_zone_t*, i32, i8* }
%struct.x264_zone_t = type { i32, i32, i32, i32, float, %struct.x264_param_t* }
%struct.anon.2 = type { i32, i32, %struct.x264_nal_t*, i32, i8*, %struct.bs_s }
%struct.x264_nal_t = type { i32, i32, i32, i8* }
%struct.bs_s = type { i8*, i8*, i8*, i64, i32, i32 }
%struct.x264_sps_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, %struct.anon.3, i32, %struct.anon.4, i32 }
%struct.anon.3 = type { i32, i32, i32, i32 }
%struct.anon.4 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.anon.5, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.5 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.x264_pps_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i8*] }
%struct.x264_slice_header_t = type { %struct.x264_sps_t*, %struct.x264_pps_t*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, [2 x [16 x %struct.anon.6]], [32 x [3 x %struct.x264_weight_t]], i32, i32, [16 x %struct.anon.7], i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8] }
%struct.anon.6 = type { i32, i32 }
%struct.x264_weight_t = type { [8 x i16], [8 x i16], i32, i32, i32, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)**, [8 x i8] }
%struct.anon.7 = type { i32, i32 }
%struct.x264_cabac_t = type { i32, i32, i32, i32, i8*, i8*, i8*, [8 x i8], i32, [460 x i8] }
%struct.anon.8 = type { %struct.x264_frame**, [2 x %struct.x264_frame**], %struct.x264_frame**, [18 x %struct.x264_frame*], i32, i32, i32, i32, i32, i32, i32, i64, i64, [2 x i64], i64, i64, i32, i32 }
%struct.x264_frame = type { i32, i32, i32, i64, i64, i32, i32, i32, i32, %struct.x264_param_t*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, float, float, i32, i32, [3 x i32], [3 x i32], [3 x i32], i32, i32, i32, [3 x i8*], [4 x i8*], [4 x i8*], i16*, [4 x i8*], [4 x i8*], [8 x i8], [16 x [3 x %struct.x264_weight_t]], [16 x i8*], i32, %struct.x264_frame*, i8*, i8*, [2 x [2 x i16]*], [2 x i16]*, [2 x [17 x [2 x i16]*]], [18 x [18 x i16*]], [2 x [17 x i32*]], [2 x i8*], [2 x i32], [2 x [16 x i32]], [2 x i16], [18 x [18 x i32]], [18 x [18 x i32]], i32, [18 x i32], [18 x [18 x i32*]], i32*, i32*, float*, float*, float*, i32, i16*, i16*, i16*, i32, [18 x float], i32, i64, %struct.x264_hrd_t, [251 x i8], [251 x i32], [251 x double], i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32 }
%struct.x264_hrd_t = type { double, double, double, double }
%struct.anon.9 = type { [16 x i16], [2 x [4 x i16]], [4 x [64 x i16]], [24 x [16 x i16]] }
%struct.anon.10 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], i32, [4 x i32], [16 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i16*, [8 x i8]*, [24 x i8]*, i8*, [2 x [2 x i16]*], [2 x [8 x [2 x i8]]*], [2 x i8*], [2 x [32 x [2 x i16]*]], i8*, i8*, i16*, [16 x i8*], i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], %struct.anon.11, %struct.anon.12, i32, i32, i32, i32, i32, i32, i32, i32, [2 x [2 x i32]], i32, i32, [2 x [32 x [4 x i16]]], [4 x i16]*, [2 x [32 x [4 x i8]]], [4 x i8]*, [18 x i8], i32, [34 x i8], [14 x i8] }
%struct.anon.11 = type { [384 x i8], [864 x i8], [256 x i8], [256 x i8], [3 x [64 x i16]], [15 x [16 x i16]], [4 x i32], [4 x i32], i32, i32, [8 x i8], [4 x [64 x i16]], [16 x [16 x i16]], [9 x i64], [8 x i8], [32 x i32], [3 x i8*], [3 x i8*], [3 x i8*], [2 x i32], [2 x [32 x [6 x i8*]]], [32 x i8*], [2 x [16 x i16*]], [3 x i32] }
%struct.anon.12 = type { [40 x i8], [8 x i8], [48 x i8], [2 x [40 x i8]], [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i8]]], [40 x i8], [2 x [4 x [2 x i16]]], [2 x [4 x i8]], i32, [2 x i16], i32, i32, i32, i32, [8 x i8] }
%struct.x264_ratecontrol_t = type opaque
%struct.anon.13 = type { %struct.anon.14, [5 x i32], [5 x i64], [5 x double], [17 x i32], [5 x i64], [5 x double], [5 x double], [5 x double], [5 x double], [5 x double], [5 x [19 x i64]], [2 x [17 x i64]], [2 x i64], [2 x [2 x [32 x i64]]], [6 x i64], [4 x [13 x i64]], [2 x i32], [2 x i32], [3 x i32] }
%struct.anon.14 = type { i32, i32, i32, [19 x i32], i32, i32, i32, [2 x i32], [2 x [32 x i32]], [17 x i32], [6 x i32], [4 x [13 x i32]], [2 x i32], [3 x i64], double }
%struct.x264_pixel_function_t = type { [7 x i32 (i8*, i32, i8*, i32)*], [7 x i32 (i8*, i32, i8*, i32)*], [7 x i32 (i8*, i32, i8*, i32)*], [7 x i32 (i8*, i32, i8*, i32)*], [4 x i32 (i8*, i32, i8*, i32)*], [7 x i32 (i8*, i32, i8*, i32)*], [7 x i32 (i8*, i32, i8*, i32)*], [7 x i32 (i8*, i32, i8*, i32)*], [7 x void (i8*, i8*, i8*, i8*, i32, i32*)*], [7 x void (i8*, i8*, i8*, i8*, i8*, i32, i32*)*], [7 x i32 (i8*, i32, i8*, i32)*], i32 (i8*, i32, i8*, i32, i32*)*, [4 x i64 (i8*, i32)*], [4 x i64 (i8*, i32)*], void (i8*, i32, i8*, i32, [4 x i32]*)*, float ([4 x i32]*, [4 x i32]*, i32)*, [7 x void (i8*, i8*, i8*, i8*, i32, i32*)*], [7 x void (i8*, i8*, i8*, i8*, i8*, i32, i32*)*], [7 x void (i8*, i8*, i8*, i8*, i32, i32*)*], [7 x void (i8*, i8*, i8*, i8*, i8*, i32, i32*)*], [7 x i32 (i32*, i16*, i32, i16*, i16*, i32, i32)*], void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)*, void (i8*, i8*, i32*)* }
%struct.x264_mc_functions_t = type { void (i8*, i32, i8**, i32, i32, i32, i32, i32, %struct.x264_weight_t*)*, i8* (i8*, i32*, i8**, i32, i32, i32, i32, i32, %struct.x264_weight_t*)*, void (i8*, i32, i8*, i32, i32, i32, i32, i32)*, [10 x void (i8*, i32, i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*], void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32, i32)*, void (i8*, i8*, i8*, i8*, i32, i32, i32, i16*)*, void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i32)*, i8* (i8*, i8*, i64)*, void (i8*, i32)*, void (i16*, i8*, i32)*, void (i16*, i8*, i32)*, void (i16*, i16*, i32)*, void (i16*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32)*, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)**, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)**, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)**, void (%struct.x264_t*, %struct.x264_weight_t*)*, void (i32*, i16*, i16*, i16*, i16*, i32)* }
%struct.x264_dct_function_t = type { void (i16*, i8*, i8*)*, void (i8*, i16*)*, void ([16 x i16]*, i8*, i8*)*, void (i16*, i8*, i8*)*, void (i8*, [16 x i16]*)*, void (i8*, i16*)*, void ([16 x i16]*, i8*, i8*)*, void (i8*, [16 x i16]*)*, void (i8*, i16*)*, void (i16*, i8*, i8*)*, void (i8*, i16*)*, void ([64 x i16]*, i8*, i8*)*, void (i8*, [64 x i16]*)*, void (i16*)*, void (i16*)* }
%struct.x264_zigzag_function_t = type { void (i16*, i16*)*, void (i16*, i16*)*, i32 (i16*, i8*, i8*)*, i32 (i16*, i8*, i8*)*, i32 (i16*, i8*, i8*, i16*)*, void (i16*, i16*, i8*)* }
%struct.x264_quant_function_t = type { i32 (i16*, i16*, i16*)*, i32 (i16*, i16*, i16*)*, i32 (i16*, i32, i32)*, i32 (i16*, i32, i32)*, void (i16*, [64 x i32]*, i32)*, void (i16*, [16 x i32]*, i32)*, void (i16*, [16 x i32]*, i32)*, void (i16*, i32*, i16*, i32)*, i32 (i16*)*, i32 (i16*)*, i32 (i16*)*, [6 x i32 (i16*)*], [5 x i32 (i16*, %struct.x264_run_level_t*)*] }
%struct.x264_run_level_t = type { i32, [16 x i16], [16 x i8] }
%struct.x264_deblock_function_t = type { [2 x void (i8*, i32, i32, i32, i8*)*], [2 x void (i8*, i32, i32, i32, i8*)*], [2 x void (i8*, i32, i32, i32)*], [2 x void (i8*, i32, i32, i32)*], void (i8*, [40 x i8]*, [40 x [2 x i16]]*, [4 x [4 x i8]]*, i32, i32)* }
%struct.x264_lookahead_t = type { i8, i8, i8, i32, i32, %struct.x264_frame*, %struct.x264_synch_frame_list_t, %struct.x264_synch_frame_list_t, %struct.x264_synch_frame_list_t }
%struct.x264_synch_frame_list_t = type { %struct.x264_frame**, i32, i32, i32, i32, i32 }
%union.x264_union16_t = type { i16 }
%union.x264_union64_t = type { i64 }
%union.x264_union32_t = type { i32 }

@block_idx_xy_fenc = internal constant [16 x i8] c"\00\04@D\08\0CHL\80\84\C0\C4\88\8C\C8\CC", align 16, !dbg !0
@block_idx_xy_fdec = internal constant [16 x i16] [i16 0, i16 4, i16 128, i16 132, i16 8, i16 12, i16 136, i16 140, i16 256, i16 260, i16 384, i16 388, i16 264, i16 268, i16 392, i16 396], align 16, !dbg !185
@x264_scan8 = internal constant [27 x i32] [i32 12, i32 13, i32 20, i32 21, i32 14, i32 15, i32 22, i32 23, i32 28, i32 29, i32 36, i32 37, i32 30, i32 31, i32 38, i32 39, i32 9, i32 10, i32 17, i32 18, i32 33, i32 34, i32 41, i32 42, i32 44, i32 46, i32 47], align 16, !dbg !191
@x264_lambda2_tab = external dso_local constant [52 x i32], align 16
@block_idx_x = internal constant [16 x i8] c"\00\01\00\01\02\03\02\03\00\01\00\01\02\03\02\03", align 16, !dbg !198
@block_idx_y = internal constant [16 x i8] c"\00\00\01\01\00\00\01\01\02\02\03\03\02\02\03\03", align 16, !dbg !202
@x264_pred_i4x4_neighbors = internal constant [12 x i8] c"\02\01\03\06\0B\0B\0B\06\01\01\02\00", align 1, !dbg !208
@x264_dct8_weight2_tab = internal constant [64 x i16] [i16 256, i16 227, i16 410, i16 227, i16 256, i16 227, i16 410, i16 227, i16 227, i16 201, i16 363, i16 201, i16 227, i16 201, i16 363, i16 201, i16 410, i16 363, i16 656, i16 363, i16 410, i16 363, i16 656, i16 363, i16 227, i16 201, i16 363, i16 201, i16 227, i16 201, i16 363, i16 201, i16 256, i16 227, i16 410, i16 227, i16 256, i16 227, i16 410, i16 227, i16 227, i16 201, i16 363, i16 201, i16 227, i16 201, i16 363, i16 201, i16 410, i16 363, i16 656, i16 363, i16 410, i16 363, i16 656, i16 363, i16 227, i16 201, i16 363, i16 201, i16 227, i16 201, i16 363, i16 201], align 16, !dbg !213
@x264_dct4_weight2_tab = internal constant [16 x i16] [i16 800, i16 320, i16 800, i16 320, i16 320, i16 128, i16 320, i16 128, i16 800, i16 320, i16 800, i16 320, i16 320, i16 128, i16 320, i16 128], align 16, !dbg !219
@block_idx_yx_1d = internal constant [16 x i8] c"\00\04\01\05\08\0C\09\0D\02\06\03\07\0A\0E\0B\0F", align 16, !dbg !204
@block_idx_xy_1d = internal constant [16 x i8] c"\00\01\04\05\02\03\06\07\08\09\0C\0D\0A\0B\0E\0F", align 16, !dbg !206

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_mb_encode_i4x4(%struct.x264_t* %h, i32 %idx, i32 %i_qp) #0 !dbg !225 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %idx.addr = alloca i32, align 4
  %i_qp.addr = alloca i32, align 4
  %nz = alloca i32, align 4
  %p_src = alloca i8*, align 8
  %p_dst = alloca i8*, align 8
  %dct4x4 = alloca [16 x i16], align 16
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !1510, metadata !DIExpression()), !dbg !1511
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !1512, metadata !DIExpression()), !dbg !1513
  store i32 %i_qp, i32* %i_qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_qp.addr, metadata !1514, metadata !DIExpression()), !dbg !1515
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !1516, metadata !DIExpression()), !dbg !1517
  call void @llvm.dbg.declare(metadata i8** %p_src, metadata !1518, metadata !DIExpression()), !dbg !1519
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1520
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 55, !dbg !1521
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 66, !dbg !1522
  %p_fenc = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 16, !dbg !1523
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc, i64 0, i64 0, !dbg !1520
  %1 = load i8*, i8** %arrayidx, align 16, !dbg !1520
  %2 = load i32, i32* %idx.addr, align 4, !dbg !1524
  %idxprom = sext i32 %2 to i64, !dbg !1525
  %arrayidx1 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_xy_fenc, i64 0, i64 %idxprom, !dbg !1525
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !1525
  %idxprom2 = zext i8 %3 to i64, !dbg !1520
  %arrayidx3 = getelementptr inbounds i8, i8* %1, i64 %idxprom2, !dbg !1520
  store i8* %arrayidx3, i8** %p_src, align 8, !dbg !1519
  call void @llvm.dbg.declare(metadata i8** %p_dst, metadata !1526, metadata !DIExpression()), !dbg !1527
  %4 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1528
  %mb4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %4, i32 0, i32 55, !dbg !1529
  %pic5 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb4, i32 0, i32 66, !dbg !1530
  %p_fdec = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic5, i32 0, i32 18, !dbg !1531
  %arrayidx6 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec, i64 0, i64 0, !dbg !1528
  %5 = load i8*, i8** %arrayidx6, align 16, !dbg !1528
  %6 = load i32, i32* %idx.addr, align 4, !dbg !1532
  %idxprom7 = sext i32 %6 to i64, !dbg !1533
  %arrayidx8 = getelementptr inbounds [16 x i16], [16 x i16]* @block_idx_xy_fdec, i64 0, i64 %idxprom7, !dbg !1533
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !1533
  %idxprom9 = zext i16 %7 to i64, !dbg !1528
  %arrayidx10 = getelementptr inbounds i8, i8* %5, i64 %idxprom9, !dbg !1528
  store i8* %arrayidx10, i8** %p_dst, align 8, !dbg !1527
  call void @llvm.dbg.declare(metadata [16 x i16]* %dct4x4, metadata !1534, metadata !DIExpression()), !dbg !1535
  %8 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1536
  %mb11 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %8, i32 0, i32 55, !dbg !1538
  %b_lossless = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb11, i32 0, i32 73, !dbg !1539
  %9 = load i32, i32* %b_lossless, align 4, !dbg !1539
  %tobool = icmp ne i32 %9, 0, !dbg !1536
  br i1 %tobool, label %if.then, label %if.end, !dbg !1540

if.then:                                          ; preds = %entry
  %10 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1541
  %zigzagf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %10, i32 0, i32 72, !dbg !1543
  %sub_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf, i32 0, i32 3, !dbg !1544
  %11 = load i32 (i16*, i8*, i8*)*, i32 (i16*, i8*, i8*)** %sub_4x4, align 8, !dbg !1544
  %12 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1545
  %dct = getelementptr inbounds %struct.x264_t, %struct.x264_t* %12, i32 0, i32 54, !dbg !1546
  %luma4x4 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct, i32 0, i32 3, !dbg !1547
  %13 = load i32, i32* %idx.addr, align 4, !dbg !1548
  %idxprom12 = sext i32 %13 to i64, !dbg !1545
  %arrayidx13 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4, i64 0, i64 %idxprom12, !dbg !1545
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx13, i64 0, i64 0, !dbg !1545
  %14 = load i8*, i8** %p_src, align 8, !dbg !1549
  %15 = load i8*, i8** %p_dst, align 8, !dbg !1550
  %call = call i32 %11(i16* %arraydecay, i8* %14, i8* %15), !dbg !1541
  store i32 %call, i32* %nz, align 4, !dbg !1551
  %16 = load i32, i32* %nz, align 4, !dbg !1552
  %conv = trunc i32 %16 to i8, !dbg !1552
  %17 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1553
  %mb14 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %17, i32 0, i32 55, !dbg !1554
  %cache = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb14, i32 0, i32 67, !dbg !1555
  %non_zero_count = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache, i32 0, i32 2, !dbg !1556
  %18 = load i32, i32* %idx.addr, align 4, !dbg !1557
  %idxprom15 = sext i32 %18 to i64, !dbg !1558
  %arrayidx16 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom15, !dbg !1558
  %19 = load i32, i32* %arrayidx16, align 4, !dbg !1558
  %idxprom17 = sext i32 %19 to i64, !dbg !1553
  %arrayidx18 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count, i64 0, i64 %idxprom17, !dbg !1553
  store i8 %conv, i8* %arrayidx18, align 1, !dbg !1559
  %20 = load i32, i32* %nz, align 4, !dbg !1560
  %21 = load i32, i32* %idx.addr, align 4, !dbg !1561
  %shr = ashr i32 %21, 2, !dbg !1562
  %shl = shl i32 %20, %shr, !dbg !1563
  %22 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1564
  %mb19 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %22, i32 0, i32 55, !dbg !1565
  %i_cbp_luma = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb19, i32 0, i32 57, !dbg !1566
  %23 = load i32, i32* %i_cbp_luma, align 8, !dbg !1567
  %or = or i32 %23, %shl, !dbg !1567
  store i32 %or, i32* %i_cbp_luma, align 8, !dbg !1567
  br label %if.end49, !dbg !1568

if.end:                                           ; preds = %entry
  %24 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1569
  %dctf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %24, i32 0, i32 71, !dbg !1570
  %sub4x4_dct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf, i32 0, i32 0, !dbg !1571
  %25 = load void (i16*, i8*, i8*)*, void (i16*, i8*, i8*)** %sub4x4_dct, align 16, !dbg !1571
  %arraydecay20 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4, i64 0, i64 0, !dbg !1572
  %26 = load i8*, i8** %p_src, align 8, !dbg !1573
  %27 = load i8*, i8** %p_dst, align 8, !dbg !1574
  call void %25(i16* %arraydecay20, i8* %26, i8* %27), !dbg !1569
  %28 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1575
  %arraydecay21 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4, i64 0, i64 0, !dbg !1576
  %29 = load i32, i32* %i_qp.addr, align 4, !dbg !1577
  %30 = load i32, i32* %idx.addr, align 4, !dbg !1578
  %call22 = call i32 @x264_quant_4x4(%struct.x264_t* %28, i16* %arraydecay21, i32 %29, i32 2, i32 1, i32 %30), !dbg !1579
  store i32 %call22, i32* %nz, align 4, !dbg !1580
  %31 = load i32, i32* %nz, align 4, !dbg !1581
  %conv23 = trunc i32 %31 to i8, !dbg !1581
  %32 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1582
  %mb24 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %32, i32 0, i32 55, !dbg !1583
  %cache25 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb24, i32 0, i32 67, !dbg !1584
  %non_zero_count26 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache25, i32 0, i32 2, !dbg !1585
  %33 = load i32, i32* %idx.addr, align 4, !dbg !1586
  %idxprom27 = sext i32 %33 to i64, !dbg !1587
  %arrayidx28 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom27, !dbg !1587
  %34 = load i32, i32* %arrayidx28, align 4, !dbg !1587
  %idxprom29 = sext i32 %34 to i64, !dbg !1582
  %arrayidx30 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count26, i64 0, i64 %idxprom29, !dbg !1582
  store i8 %conv23, i8* %arrayidx30, align 1, !dbg !1588
  %35 = load i32, i32* %nz, align 4, !dbg !1589
  %tobool31 = icmp ne i32 %35, 0, !dbg !1589
  br i1 %tobool31, label %if.then32, label %if.end49, !dbg !1591

if.then32:                                        ; preds = %if.end
  %36 = load i32, i32* %idx.addr, align 4, !dbg !1592
  %shr33 = ashr i32 %36, 2, !dbg !1594
  %shl34 = shl i32 1, %shr33, !dbg !1595
  %37 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1596
  %mb35 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %37, i32 0, i32 55, !dbg !1597
  %i_cbp_luma36 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb35, i32 0, i32 57, !dbg !1598
  %38 = load i32, i32* %i_cbp_luma36, align 8, !dbg !1599
  %or37 = or i32 %38, %shl34, !dbg !1599
  store i32 %or37, i32* %i_cbp_luma36, align 8, !dbg !1599
  %39 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1600
  %zigzagf38 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %39, i32 0, i32 72, !dbg !1601
  %scan_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf38, i32 0, i32 1, !dbg !1602
  %40 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x4, align 8, !dbg !1602
  %41 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1603
  %dct39 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %41, i32 0, i32 54, !dbg !1604
  %luma4x440 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct39, i32 0, i32 3, !dbg !1605
  %42 = load i32, i32* %idx.addr, align 4, !dbg !1606
  %idxprom41 = sext i32 %42 to i64, !dbg !1603
  %arrayidx42 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x440, i64 0, i64 %idxprom41, !dbg !1603
  %arraydecay43 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx42, i64 0, i64 0, !dbg !1603
  %arraydecay44 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4, i64 0, i64 0, !dbg !1607
  call void %40(i16* %arraydecay43, i16* %arraydecay44), !dbg !1600
  %43 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1608
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %43, i32 0, i32 73, !dbg !1609
  %dequant_4x4 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 5, !dbg !1610
  %44 = load void (i16*, [16 x i32]*, i32)*, void (i16*, [16 x i32]*, i32)** %dequant_4x4, align 8, !dbg !1610
  %arraydecay45 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4, i64 0, i64 0, !dbg !1611
  %45 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1612
  %dequant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %45, i32 0, i32 29, !dbg !1613
  %arrayidx46 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf, i64 0, i64 0, !dbg !1612
  %46 = load [16 x i32]*, [16 x i32]** %arrayidx46, align 16, !dbg !1612
  %47 = load i32, i32* %i_qp.addr, align 4, !dbg !1614
  call void %44(i16* %arraydecay45, [16 x i32]* %46, i32 %47), !dbg !1608
  %48 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1615
  %dctf47 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %48, i32 0, i32 71, !dbg !1616
  %add4x4_idct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf47, i32 0, i32 1, !dbg !1617
  %49 = load void (i8*, i16*)*, void (i8*, i16*)** %add4x4_idct, align 8, !dbg !1617
  %50 = load i8*, i8** %p_dst, align 8, !dbg !1618
  %arraydecay48 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4, i64 0, i64 0, !dbg !1619
  call void %49(i8* %50, i16* %arraydecay48), !dbg !1615
  br label %if.end49, !dbg !1620

if.end49:                                         ; preds = %if.then, %if.then32, %if.end
  ret void, !dbg !1621
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @x264_quant_4x4(%struct.x264_t* %h, i16* %dct, i32 %i_qp, i32 %i_ctxBlockCat, i32 %b_intra, i32 %idx) #0 !dbg !1622 {
entry:
  %retval = alloca i32, align 4
  %h.addr = alloca %struct.x264_t*, align 8
  %dct.addr = alloca i16*, align 8
  %i_qp.addr = alloca i32, align 4
  %i_ctxBlockCat.addr = alloca i32, align 4
  %b_intra.addr = alloca i32, align 4
  %idx.addr = alloca i32, align 4
  %i_quant_cat = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !1625, metadata !DIExpression()), !dbg !1626
  store i16* %dct, i16** %dct.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dct.addr, metadata !1627, metadata !DIExpression()), !dbg !1628
  store i32 %i_qp, i32* %i_qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_qp.addr, metadata !1629, metadata !DIExpression()), !dbg !1630
  store i32 %i_ctxBlockCat, i32* %i_ctxBlockCat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_ctxBlockCat.addr, metadata !1631, metadata !DIExpression()), !dbg !1632
  store i32 %b_intra, i32* %b_intra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b_intra.addr, metadata !1633, metadata !DIExpression()), !dbg !1634
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !1635, metadata !DIExpression()), !dbg !1636
  call void @llvm.dbg.declare(metadata i32* %i_quant_cat, metadata !1637, metadata !DIExpression()), !dbg !1638
  %0 = load i32, i32* %b_intra.addr, align 4, !dbg !1639
  %tobool = icmp ne i32 %0, 0, !dbg !1639
  %1 = zext i1 %tobool to i64, !dbg !1639
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !1639
  store i32 %cond, i32* %i_quant_cat, align 4, !dbg !1638
  %2 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1640
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %2, i32 0, i32 55, !dbg !1642
  %b_trellis = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 12, !dbg !1643
  %3 = load i32, i32* %b_trellis, align 16, !dbg !1643
  %tobool1 = icmp ne i32 %3, 0, !dbg !1640
  br i1 %tobool1, label %if.then, label %if.else, !dbg !1644

if.then:                                          ; preds = %entry
  %4 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1645
  %5 = load i16*, i16** %dct.addr, align 8, !dbg !1646
  %6 = load i32, i32* %i_quant_cat, align 4, !dbg !1647
  %7 = load i32, i32* %i_qp.addr, align 4, !dbg !1648
  %8 = load i32, i32* %i_ctxBlockCat.addr, align 4, !dbg !1649
  %9 = load i32, i32* %b_intra.addr, align 4, !dbg !1650
  %10 = load i32, i32* %idx.addr, align 4, !dbg !1651
  %call = call i32 @x264_quant_4x4_trellis(%struct.x264_t* %4, i16* %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 0, i32 %10), !dbg !1652
  store i32 %call, i32* %retval, align 4, !dbg !1653
  br label %return, !dbg !1653

if.else:                                          ; preds = %entry
  %11 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1654
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %11, i32 0, i32 73, !dbg !1655
  %quant_4x4 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 1, !dbg !1656
  %12 = load i32 (i16*, i16*, i16*)*, i32 (i16*, i16*, i16*)** %quant_4x4, align 8, !dbg !1656
  %13 = load i16*, i16** %dct.addr, align 8, !dbg !1657
  %14 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1658
  %quant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %14, i32 0, i32 33, !dbg !1659
  %15 = load i32, i32* %i_quant_cat, align 4, !dbg !1660
  %idxprom = sext i32 %15 to i64, !dbg !1658
  %arrayidx = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_mf, i64 0, i64 %idxprom, !dbg !1658
  %16 = load [16 x i16]*, [16 x i16]** %arrayidx, align 8, !dbg !1658
  %17 = load i32, i32* %i_qp.addr, align 4, !dbg !1661
  %idxprom2 = sext i32 %17 to i64, !dbg !1658
  %arrayidx3 = getelementptr inbounds [16 x i16], [16 x i16]* %16, i64 %idxprom2, !dbg !1658
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx3, i64 0, i64 0, !dbg !1658
  %18 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1662
  %quant4_bias = getelementptr inbounds %struct.x264_t, %struct.x264_t* %18, i32 0, i32 35, !dbg !1663
  %19 = load i32, i32* %i_quant_cat, align 4, !dbg !1664
  %idxprom4 = sext i32 %19 to i64, !dbg !1662
  %arrayidx5 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_bias, i64 0, i64 %idxprom4, !dbg !1662
  %20 = load [16 x i16]*, [16 x i16]** %arrayidx5, align 8, !dbg !1662
  %21 = load i32, i32* %i_qp.addr, align 4, !dbg !1665
  %idxprom6 = sext i32 %21 to i64, !dbg !1662
  %arrayidx7 = getelementptr inbounds [16 x i16], [16 x i16]* %20, i64 %idxprom6, !dbg !1662
  %arraydecay8 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx7, i64 0, i64 0, !dbg !1662
  %call9 = call i32 %12(i16* %13, i16* %arraydecay, i16* %arraydecay8), !dbg !1654
  store i32 %call9, i32* %retval, align 4, !dbg !1666
  br label %return, !dbg !1666

return:                                           ; preds = %if.else, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !1667
  ret i32 %22, !dbg !1667
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_mb_encode_i8x8(%struct.x264_t* %h, i32 %idx, i32 %i_qp) #0 !dbg !1668 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %idx.addr = alloca i32, align 4
  %i_qp.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %nz = alloca i32, align 4
  %p_src = alloca i8*, align 8
  %p_dst = alloca i8*, align 8
  %dct8x8 = alloca [64 x i16], align 16
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !1669, metadata !DIExpression()), !dbg !1670
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !1671, metadata !DIExpression()), !dbg !1672
  store i32 %i_qp, i32* %i_qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_qp.addr, metadata !1673, metadata !DIExpression()), !dbg !1674
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1675, metadata !DIExpression()), !dbg !1676
  %0 = load i32, i32* %idx.addr, align 4, !dbg !1677
  %and = and i32 %0, 1, !dbg !1678
  %mul = mul nsw i32 8, %and, !dbg !1679
  store i32 %mul, i32* %x, align 4, !dbg !1676
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1680, metadata !DIExpression()), !dbg !1681
  %1 = load i32, i32* %idx.addr, align 4, !dbg !1682
  %shr = ashr i32 %1, 1, !dbg !1683
  %mul1 = mul nsw i32 8, %shr, !dbg !1684
  store i32 %mul1, i32* %y, align 4, !dbg !1681
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !1685, metadata !DIExpression()), !dbg !1686
  call void @llvm.dbg.declare(metadata i8** %p_src, metadata !1687, metadata !DIExpression()), !dbg !1688
  %2 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1689
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %2, i32 0, i32 55, !dbg !1690
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 66, !dbg !1691
  %p_fenc = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 16, !dbg !1692
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc, i64 0, i64 0, !dbg !1689
  %3 = load i8*, i8** %arrayidx, align 16, !dbg !1689
  %4 = load i32, i32* %x, align 4, !dbg !1693
  %5 = load i32, i32* %y, align 4, !dbg !1694
  %mul2 = mul nsw i32 %5, 16, !dbg !1695
  %add = add nsw i32 %4, %mul2, !dbg !1696
  %idxprom = sext i32 %add to i64, !dbg !1689
  %arrayidx3 = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !1689
  store i8* %arrayidx3, i8** %p_src, align 8, !dbg !1688
  call void @llvm.dbg.declare(metadata i8** %p_dst, metadata !1697, metadata !DIExpression()), !dbg !1698
  %6 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1699
  %mb4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %6, i32 0, i32 55, !dbg !1700
  %pic5 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb4, i32 0, i32 66, !dbg !1701
  %p_fdec = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic5, i32 0, i32 18, !dbg !1702
  %arrayidx6 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec, i64 0, i64 0, !dbg !1699
  %7 = load i8*, i8** %arrayidx6, align 16, !dbg !1699
  %8 = load i32, i32* %x, align 4, !dbg !1703
  %9 = load i32, i32* %y, align 4, !dbg !1704
  %mul7 = mul nsw i32 %9, 32, !dbg !1705
  %add8 = add nsw i32 %8, %mul7, !dbg !1706
  %idxprom9 = sext i32 %add8 to i64, !dbg !1699
  %arrayidx10 = getelementptr inbounds i8, i8* %7, i64 %idxprom9, !dbg !1699
  store i8* %arrayidx10, i8** %p_dst, align 8, !dbg !1698
  call void @llvm.dbg.declare(metadata [64 x i16]* %dct8x8, metadata !1707, metadata !DIExpression()), !dbg !1708
  %10 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1709
  %mb11 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %10, i32 0, i32 55, !dbg !1711
  %b_lossless = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb11, i32 0, i32 73, !dbg !1712
  %11 = load i32, i32* %b_lossless, align 4, !dbg !1712
  %tobool = icmp ne i32 %11, 0, !dbg !1709
  br i1 %tobool, label %if.then, label %if.end, !dbg !1713

if.then:                                          ; preds = %entry
  %12 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1714
  %zigzagf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %12, i32 0, i32 72, !dbg !1716
  %sub_8x8 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf, i32 0, i32 2, !dbg !1717
  %13 = load i32 (i16*, i8*, i8*)*, i32 (i16*, i8*, i8*)** %sub_8x8, align 8, !dbg !1717
  %14 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1718
  %dct = getelementptr inbounds %struct.x264_t, %struct.x264_t* %14, i32 0, i32 54, !dbg !1719
  %luma8x8 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct, i32 0, i32 2, !dbg !1720
  %15 = load i32, i32* %idx.addr, align 4, !dbg !1721
  %idxprom12 = sext i32 %15 to i64, !dbg !1718
  %arrayidx13 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %luma8x8, i64 0, i64 %idxprom12, !dbg !1718
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx13, i64 0, i64 0, !dbg !1718
  %16 = load i8*, i8** %p_src, align 8, !dbg !1722
  %17 = load i8*, i8** %p_dst, align 8, !dbg !1723
  %call = call i32 %13(i16* %arraydecay, i8* %16, i8* %17), !dbg !1714
  store i32 %call, i32* %nz, align 4, !dbg !1724
  %18 = load i32, i32* %nz, align 4, !dbg !1725
  %mul14 = mul nsw i32 %18, 257, !dbg !1725
  %conv = trunc i32 %mul14 to i16, !dbg !1725
  %19 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1725
  %mb15 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %19, i32 0, i32 55, !dbg !1725
  %cache = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb15, i32 0, i32 67, !dbg !1725
  %non_zero_count = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache, i32 0, i32 2, !dbg !1725
  %20 = load i32, i32* %idx.addr, align 4, !dbg !1725
  %mul16 = mul nsw i32 %20, 4, !dbg !1725
  %add17 = add nsw i32 %mul16, 0, !dbg !1725
  %idxprom18 = sext i32 %add17 to i64, !dbg !1725
  %arrayidx19 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom18, !dbg !1725
  %21 = load i32, i32* %arrayidx19, align 4, !dbg !1725
  %idxprom20 = sext i32 %21 to i64, !dbg !1725
  %arrayidx21 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count, i64 0, i64 %idxprom20, !dbg !1725
  %22 = bitcast i8* %arrayidx21 to %union.x264_union16_t*, !dbg !1725
  %i = bitcast %union.x264_union16_t* %22 to i16*, !dbg !1725
  store i16 %conv, i16* %i, align 1, !dbg !1725
  %23 = load i32, i32* %nz, align 4, !dbg !1725
  %mul22 = mul nsw i32 %23, 257, !dbg !1725
  %conv23 = trunc i32 %mul22 to i16, !dbg !1725
  %24 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1725
  %mb24 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %24, i32 0, i32 55, !dbg !1725
  %cache25 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb24, i32 0, i32 67, !dbg !1725
  %non_zero_count26 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache25, i32 0, i32 2, !dbg !1725
  %25 = load i32, i32* %idx.addr, align 4, !dbg !1725
  %mul27 = mul nsw i32 %25, 4, !dbg !1725
  %add28 = add nsw i32 %mul27, 2, !dbg !1725
  %idxprom29 = sext i32 %add28 to i64, !dbg !1725
  %arrayidx30 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom29, !dbg !1725
  %26 = load i32, i32* %arrayidx30, align 4, !dbg !1725
  %idxprom31 = sext i32 %26 to i64, !dbg !1725
  %arrayidx32 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count26, i64 0, i64 %idxprom31, !dbg !1725
  %27 = bitcast i8* %arrayidx32 to %union.x264_union16_t*, !dbg !1725
  %i33 = bitcast %union.x264_union16_t* %27 to i16*, !dbg !1725
  store i16 %conv23, i16* %i33, align 1, !dbg !1725
  %28 = load i32, i32* %nz, align 4, !dbg !1727
  %29 = load i32, i32* %idx.addr, align 4, !dbg !1728
  %shl = shl i32 %28, %29, !dbg !1729
  %30 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1730
  %mb34 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %30, i32 0, i32 55, !dbg !1731
  %i_cbp_luma = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb34, i32 0, i32 57, !dbg !1732
  %31 = load i32, i32* %i_cbp_luma, align 8, !dbg !1733
  %or = or i32 %31, %shl, !dbg !1733
  store i32 %or, i32* %i_cbp_luma, align 8, !dbg !1733
  br label %if.end95, !dbg !1734

if.end:                                           ; preds = %entry
  %32 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1735
  %dctf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %32, i32 0, i32 71, !dbg !1736
  %sub8x8_dct8 = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf, i32 0, i32 9, !dbg !1737
  %33 = load void (i16*, i8*, i8*)*, void (i16*, i8*, i8*)** %sub8x8_dct8, align 8, !dbg !1737
  %arraydecay35 = getelementptr inbounds [64 x i16], [64 x i16]* %dct8x8, i64 0, i64 0, !dbg !1738
  %34 = load i8*, i8** %p_src, align 8, !dbg !1739
  %35 = load i8*, i8** %p_dst, align 8, !dbg !1740
  call void %33(i16* %arraydecay35, i8* %34, i8* %35), !dbg !1735
  %36 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1741
  %arraydecay36 = getelementptr inbounds [64 x i16], [64 x i16]* %dct8x8, i64 0, i64 0, !dbg !1742
  %37 = load i32, i32* %i_qp.addr, align 4, !dbg !1743
  %38 = load i32, i32* %idx.addr, align 4, !dbg !1744
  %call37 = call i32 @x264_quant_8x8(%struct.x264_t* %36, i16* %arraydecay36, i32 %37, i32 1, i32 %38), !dbg !1745
  store i32 %call37, i32* %nz, align 4, !dbg !1746
  %39 = load i32, i32* %nz, align 4, !dbg !1747
  %tobool38 = icmp ne i32 %39, 0, !dbg !1747
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !1749

if.then39:                                        ; preds = %if.end
  %40 = load i32, i32* %idx.addr, align 4, !dbg !1750
  %shl40 = shl i32 1, %40, !dbg !1752
  %41 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1753
  %mb41 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %41, i32 0, i32 55, !dbg !1754
  %i_cbp_luma42 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb41, i32 0, i32 57, !dbg !1755
  %42 = load i32, i32* %i_cbp_luma42, align 8, !dbg !1756
  %or43 = or i32 %42, %shl40, !dbg !1756
  store i32 %or43, i32* %i_cbp_luma42, align 8, !dbg !1756
  %43 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1757
  %zigzagf44 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %43, i32 0, i32 72, !dbg !1758
  %scan_8x8 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf44, i32 0, i32 0, !dbg !1759
  %44 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_8x8, align 8, !dbg !1759
  %45 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1760
  %dct45 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %45, i32 0, i32 54, !dbg !1761
  %luma8x846 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct45, i32 0, i32 2, !dbg !1762
  %46 = load i32, i32* %idx.addr, align 4, !dbg !1763
  %idxprom47 = sext i32 %46 to i64, !dbg !1760
  %arrayidx48 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %luma8x846, i64 0, i64 %idxprom47, !dbg !1760
  %arraydecay49 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx48, i64 0, i64 0, !dbg !1760
  %arraydecay50 = getelementptr inbounds [64 x i16], [64 x i16]* %dct8x8, i64 0, i64 0, !dbg !1764
  call void %44(i16* %arraydecay49, i16* %arraydecay50), !dbg !1757
  %47 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1765
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %47, i32 0, i32 73, !dbg !1766
  %dequant_8x8 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 4, !dbg !1767
  %48 = load void (i16*, [64 x i32]*, i32)*, void (i16*, [64 x i32]*, i32)** %dequant_8x8, align 8, !dbg !1767
  %arraydecay51 = getelementptr inbounds [64 x i16], [64 x i16]* %dct8x8, i64 0, i64 0, !dbg !1768
  %49 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1769
  %dequant8_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %49, i32 0, i32 30, !dbg !1770
  %arrayidx52 = getelementptr inbounds [2 x [64 x i32]*], [2 x [64 x i32]*]* %dequant8_mf, i64 0, i64 0, !dbg !1769
  %50 = load [64 x i32]*, [64 x i32]** %arrayidx52, align 16, !dbg !1769
  %51 = load i32, i32* %i_qp.addr, align 4, !dbg !1771
  call void %48(i16* %arraydecay51, [64 x i32]* %50, i32 %51), !dbg !1765
  %52 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1772
  %dctf53 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %52, i32 0, i32 71, !dbg !1773
  %add8x8_idct8 = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf53, i32 0, i32 10, !dbg !1774
  %53 = load void (i8*, i16*)*, void (i8*, i16*)** %add8x8_idct8, align 16, !dbg !1774
  %54 = load i8*, i8** %p_dst, align 8, !dbg !1775
  %arraydecay54 = getelementptr inbounds [64 x i16], [64 x i16]* %dct8x8, i64 0, i64 0, !dbg !1776
  call void %53(i8* %54, i16* %arraydecay54), !dbg !1772
  %55 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1777
  %mb55 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %55, i32 0, i32 55, !dbg !1777
  %cache56 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb55, i32 0, i32 67, !dbg !1777
  %non_zero_count57 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache56, i32 0, i32 2, !dbg !1777
  %56 = load i32, i32* %idx.addr, align 4, !dbg !1777
  %mul58 = mul nsw i32 %56, 4, !dbg !1777
  %add59 = add nsw i32 %mul58, 0, !dbg !1777
  %idxprom60 = sext i32 %add59 to i64, !dbg !1777
  %arrayidx61 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom60, !dbg !1777
  %57 = load i32, i32* %arrayidx61, align 4, !dbg !1777
  %idxprom62 = sext i32 %57 to i64, !dbg !1777
  %arrayidx63 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count57, i64 0, i64 %idxprom62, !dbg !1777
  %58 = bitcast i8* %arrayidx63 to %union.x264_union16_t*, !dbg !1777
  %i64 = bitcast %union.x264_union16_t* %58 to i16*, !dbg !1777
  store i16 257, i16* %i64, align 1, !dbg !1777
  %59 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1777
  %mb65 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %59, i32 0, i32 55, !dbg !1777
  %cache66 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb65, i32 0, i32 67, !dbg !1777
  %non_zero_count67 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache66, i32 0, i32 2, !dbg !1777
  %60 = load i32, i32* %idx.addr, align 4, !dbg !1777
  %mul68 = mul nsw i32 %60, 4, !dbg !1777
  %add69 = add nsw i32 %mul68, 2, !dbg !1777
  %idxprom70 = sext i32 %add69 to i64, !dbg !1777
  %arrayidx71 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom70, !dbg !1777
  %61 = load i32, i32* %arrayidx71, align 4, !dbg !1777
  %idxprom72 = sext i32 %61 to i64, !dbg !1777
  %arrayidx73 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count67, i64 0, i64 %idxprom72, !dbg !1777
  %62 = bitcast i8* %arrayidx73 to %union.x264_union16_t*, !dbg !1777
  %i74 = bitcast %union.x264_union16_t* %62 to i16*, !dbg !1777
  store i16 257, i16* %i74, align 1, !dbg !1777
  br label %if.end95, !dbg !1779

if.else:                                          ; preds = %if.end
  %63 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1780
  %mb75 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %63, i32 0, i32 55, !dbg !1780
  %cache76 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb75, i32 0, i32 67, !dbg !1780
  %non_zero_count77 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache76, i32 0, i32 2, !dbg !1780
  %64 = load i32, i32* %idx.addr, align 4, !dbg !1780
  %mul78 = mul nsw i32 %64, 4, !dbg !1780
  %add79 = add nsw i32 %mul78, 0, !dbg !1780
  %idxprom80 = sext i32 %add79 to i64, !dbg !1780
  %arrayidx81 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom80, !dbg !1780
  %65 = load i32, i32* %arrayidx81, align 4, !dbg !1780
  %idxprom82 = sext i32 %65 to i64, !dbg !1780
  %arrayidx83 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count77, i64 0, i64 %idxprom82, !dbg !1780
  %66 = bitcast i8* %arrayidx83 to %union.x264_union16_t*, !dbg !1780
  %i84 = bitcast %union.x264_union16_t* %66 to i16*, !dbg !1780
  store i16 0, i16* %i84, align 1, !dbg !1780
  %67 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1780
  %mb85 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %67, i32 0, i32 55, !dbg !1780
  %cache86 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb85, i32 0, i32 67, !dbg !1780
  %non_zero_count87 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache86, i32 0, i32 2, !dbg !1780
  %68 = load i32, i32* %idx.addr, align 4, !dbg !1780
  %mul88 = mul nsw i32 %68, 4, !dbg !1780
  %add89 = add nsw i32 %mul88, 2, !dbg !1780
  %idxprom90 = sext i32 %add89 to i64, !dbg !1780
  %arrayidx91 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom90, !dbg !1780
  %69 = load i32, i32* %arrayidx91, align 4, !dbg !1780
  %idxprom92 = sext i32 %69 to i64, !dbg !1780
  %arrayidx93 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count87, i64 0, i64 %idxprom92, !dbg !1780
  %70 = bitcast i8* %arrayidx93 to %union.x264_union16_t*, !dbg !1780
  %i94 = bitcast %union.x264_union16_t* %70 to i16*, !dbg !1780
  store i16 0, i16* %i94, align 1, !dbg !1780
  br label %if.end95

if.end95:                                         ; preds = %if.then, %if.else, %if.then39
  ret void, !dbg !1782
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @x264_quant_8x8(%struct.x264_t* %h, i16* %dct, i32 %i_qp, i32 %b_intra, i32 %idx) #0 !dbg !1783 {
entry:
  %retval = alloca i32, align 4
  %h.addr = alloca %struct.x264_t*, align 8
  %dct.addr = alloca i16*, align 8
  %i_qp.addr = alloca i32, align 4
  %b_intra.addr = alloca i32, align 4
  %idx.addr = alloca i32, align 4
  %i_quant_cat = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !1786, metadata !DIExpression()), !dbg !1787
  store i16* %dct, i16** %dct.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dct.addr, metadata !1788, metadata !DIExpression()), !dbg !1789
  store i32 %i_qp, i32* %i_qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_qp.addr, metadata !1790, metadata !DIExpression()), !dbg !1791
  store i32 %b_intra, i32* %b_intra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b_intra.addr, metadata !1792, metadata !DIExpression()), !dbg !1793
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !1794, metadata !DIExpression()), !dbg !1795
  call void @llvm.dbg.declare(metadata i32* %i_quant_cat, metadata !1796, metadata !DIExpression()), !dbg !1797
  %0 = load i32, i32* %b_intra.addr, align 4, !dbg !1798
  %tobool = icmp ne i32 %0, 0, !dbg !1798
  %1 = zext i1 %tobool to i64, !dbg !1798
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !1798
  store i32 %cond, i32* %i_quant_cat, align 4, !dbg !1797
  %2 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1799
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %2, i32 0, i32 55, !dbg !1801
  %b_trellis = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 12, !dbg !1802
  %3 = load i32, i32* %b_trellis, align 16, !dbg !1802
  %tobool1 = icmp ne i32 %3, 0, !dbg !1799
  br i1 %tobool1, label %if.then, label %if.else, !dbg !1803

if.then:                                          ; preds = %entry
  %4 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1804
  %5 = load i16*, i16** %dct.addr, align 8, !dbg !1805
  %6 = load i32, i32* %i_quant_cat, align 4, !dbg !1806
  %7 = load i32, i32* %i_qp.addr, align 4, !dbg !1807
  %8 = load i32, i32* %b_intra.addr, align 4, !dbg !1808
  %9 = load i32, i32* %idx.addr, align 4, !dbg !1809
  %call = call i32 @x264_quant_8x8_trellis(%struct.x264_t* %4, i16* %5, i32 %6, i32 %7, i32 %8, i32 %9), !dbg !1810
  store i32 %call, i32* %retval, align 4, !dbg !1811
  br label %return, !dbg !1811

if.else:                                          ; preds = %entry
  %10 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1812
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %10, i32 0, i32 73, !dbg !1813
  %quant_8x8 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 0, !dbg !1814
  %11 = load i32 (i16*, i16*, i16*)*, i32 (i16*, i16*, i16*)** %quant_8x8, align 8, !dbg !1814
  %12 = load i16*, i16** %dct.addr, align 8, !dbg !1815
  %13 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1816
  %quant8_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %13, i32 0, i32 34, !dbg !1817
  %14 = load i32, i32* %i_quant_cat, align 4, !dbg !1818
  %idxprom = sext i32 %14 to i64, !dbg !1816
  %arrayidx = getelementptr inbounds [2 x [64 x i16]*], [2 x [64 x i16]*]* %quant8_mf, i64 0, i64 %idxprom, !dbg !1816
  %15 = load [64 x i16]*, [64 x i16]** %arrayidx, align 8, !dbg !1816
  %16 = load i32, i32* %i_qp.addr, align 4, !dbg !1819
  %idxprom2 = sext i32 %16 to i64, !dbg !1816
  %arrayidx3 = getelementptr inbounds [64 x i16], [64 x i16]* %15, i64 %idxprom2, !dbg !1816
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx3, i64 0, i64 0, !dbg !1816
  %17 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1820
  %quant8_bias = getelementptr inbounds %struct.x264_t, %struct.x264_t* %17, i32 0, i32 36, !dbg !1821
  %18 = load i32, i32* %i_quant_cat, align 4, !dbg !1822
  %idxprom4 = sext i32 %18 to i64, !dbg !1820
  %arrayidx5 = getelementptr inbounds [2 x [64 x i16]*], [2 x [64 x i16]*]* %quant8_bias, i64 0, i64 %idxprom4, !dbg !1820
  %19 = load [64 x i16]*, [64 x i16]** %arrayidx5, align 8, !dbg !1820
  %20 = load i32, i32* %i_qp.addr, align 4, !dbg !1823
  %idxprom6 = sext i32 %20 to i64, !dbg !1820
  %arrayidx7 = getelementptr inbounds [64 x i16], [64 x i16]* %19, i64 %idxprom6, !dbg !1820
  %arraydecay8 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx7, i64 0, i64 0, !dbg !1820
  %call9 = call i32 %11(i16* %12, i16* %arraydecay, i16* %arraydecay8), !dbg !1812
  store i32 %call9, i32* %retval, align 4, !dbg !1824
  br label %return, !dbg !1824

return:                                           ; preds = %if.else, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !1825
  ret i32 %21, !dbg !1825
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_mb_encode_8x8_chroma(%struct.x264_t* %h, i32 %b_inter, i32 %i_qp) #0 !dbg !1826 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %b_inter.addr = alloca i32, align 4
  %i_qp.addr = alloca i32, align 4
  %nz = alloca i32, align 4
  %nz_dc = alloca i32, align 4
  %b_decimate = alloca i32, align 4
  %dct2x2 = alloca [4 x i16], align 16
  %thresh = alloca i32, align 4
  %ssd = alloca [2 x i32], align 4
  %score = alloca i32, align 4
  %ch = alloca i32, align 4
  %ch151 = alloca i32, align 4
  %p_src = alloca i8*, align 8
  %p_dst = alloca i8*, align 8
  %i_decimate_score = alloca i32, align 4
  %nz_ac = alloca i32, align 4
  %dct4x4 = alloca [4 x [16 x i16]], align 16
  %i171 = alloca i32, align 4
  %oe = alloca i32, align 4
  %od = alloca i32, align 4
  %i246 = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !1827, metadata !DIExpression()), !dbg !1828
  store i32 %b_inter, i32* %b_inter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b_inter.addr, metadata !1829, metadata !DIExpression()), !dbg !1830
  store i32 %i_qp, i32* %i_qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_qp.addr, metadata !1831, metadata !DIExpression()), !dbg !1832
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !1833, metadata !DIExpression()), !dbg !1834
  call void @llvm.dbg.declare(metadata i32* %nz_dc, metadata !1835, metadata !DIExpression()), !dbg !1836
  call void @llvm.dbg.declare(metadata i32* %b_decimate, metadata !1837, metadata !DIExpression()), !dbg !1838
  %0 = load i32, i32* %b_inter.addr, align 4, !dbg !1839
  %tobool = icmp ne i32 %0, 0, !dbg !1839
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !1840

land.rhs:                                         ; preds = %entry
  %1 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1841
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %1, i32 0, i32 55, !dbg !1842
  %b_dct_decimate = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 14, !dbg !1843
  %2 = load i32, i32* %b_dct_decimate, align 8, !dbg !1843
  %tobool1 = icmp ne i32 %2, 0, !dbg !1840
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !1844
  %land.ext = zext i1 %3 to i32, !dbg !1840
  store i32 %land.ext, i32* %b_decimate, align 4, !dbg !1838
  call void @llvm.dbg.declare(metadata [4 x i16]* %dct2x2, metadata !1845, metadata !DIExpression()), !dbg !1846
  %4 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1847
  %mb2 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %4, i32 0, i32 55, !dbg !1848
  %i_cbp_chroma = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb2, i32 0, i32 58, !dbg !1849
  store i32 0, i32* %i_cbp_chroma, align 4, !dbg !1850
  %5 = load i32, i32* %b_decimate, align 4, !dbg !1851
  %tobool3 = icmp ne i32 %5, 0, !dbg !1851
  br i1 %tobool3, label %land.lhs.true, label %if.end150, !dbg !1853

land.lhs.true:                                    ; preds = %land.end
  %6 = load i32, i32* %i_qp.addr, align 4, !dbg !1854
  %7 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1855
  %mb4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %7, i32 0, i32 55, !dbg !1856
  %b_trellis = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb4, i32 0, i32 12, !dbg !1857
  %8 = load i32, i32* %b_trellis, align 16, !dbg !1857
  %tobool5 = icmp ne i32 %8, 0, !dbg !1855
  %9 = zext i1 %tobool5 to i64, !dbg !1855
  %cond = select i1 %tobool5, i32 12, i32 18, !dbg !1855
  %cmp = icmp sge i32 %6, %cond, !dbg !1858
  br i1 %cmp, label %if.then, label %if.end150, !dbg !1859

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %thresh, metadata !1860, metadata !DIExpression()), !dbg !1862
  %10 = load i32, i32* %i_qp.addr, align 4, !dbg !1863
  %idxprom = sext i32 %10 to i64, !dbg !1864
  %arrayidx = getelementptr inbounds [52 x i32], [52 x i32]* @x264_lambda2_tab, i64 0, i64 %idxprom, !dbg !1864
  %11 = load i32, i32* %arrayidx, align 4, !dbg !1864
  %add = add nsw i32 %11, 32, !dbg !1865
  %shr = ashr i32 %add, 6, !dbg !1866
  store i32 %shr, i32* %thresh, align 4, !dbg !1862
  call void @llvm.dbg.declare(metadata [2 x i32]* %ssd, metadata !1867, metadata !DIExpression()), !dbg !1868
  call void @llvm.dbg.declare(metadata i32* %score, metadata !1869, metadata !DIExpression()), !dbg !1870
  %12 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1871
  %pixf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %12, i32 0, i32 69, !dbg !1872
  %var2_8x8 = getelementptr inbounds %struct.x264_pixel_function_t, %struct.x264_pixel_function_t* %pixf, i32 0, i32 11, !dbg !1873
  %13 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %var2_8x8, align 8, !dbg !1873
  %14 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1874
  %mb6 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %14, i32 0, i32 55, !dbg !1875
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb6, i32 0, i32 66, !dbg !1876
  %p_fenc = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 16, !dbg !1877
  %arrayidx7 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc, i64 0, i64 1, !dbg !1874
  %15 = load i8*, i8** %arrayidx7, align 8, !dbg !1874
  %16 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1878
  %mb8 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %16, i32 0, i32 55, !dbg !1879
  %pic9 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb8, i32 0, i32 66, !dbg !1880
  %p_fdec = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic9, i32 0, i32 18, !dbg !1881
  %arrayidx10 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec, i64 0, i64 1, !dbg !1878
  %17 = load i8*, i8** %arrayidx10, align 8, !dbg !1878
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %ssd, i64 0, i64 0, !dbg !1882
  %call = call i32 %13(i8* %15, i32 16, i8* %17, i32 32, i32* %arrayidx11), !dbg !1871
  store i32 %call, i32* %score, align 4, !dbg !1870
  %18 = load i32, i32* %score, align 4, !dbg !1883
  %19 = load i32, i32* %thresh, align 4, !dbg !1885
  %mul = mul nsw i32 %19, 4, !dbg !1886
  %cmp12 = icmp slt i32 %18, %mul, !dbg !1887
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !1888

if.then13:                                        ; preds = %if.then
  %20 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1889
  %pixf14 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %20, i32 0, i32 69, !dbg !1890
  %var2_8x815 = getelementptr inbounds %struct.x264_pixel_function_t, %struct.x264_pixel_function_t* %pixf14, i32 0, i32 11, !dbg !1891
  %21 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %var2_8x815, align 8, !dbg !1891
  %22 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1892
  %mb16 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %22, i32 0, i32 55, !dbg !1893
  %pic17 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb16, i32 0, i32 66, !dbg !1894
  %p_fenc18 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic17, i32 0, i32 16, !dbg !1895
  %arrayidx19 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc18, i64 0, i64 2, !dbg !1892
  %23 = load i8*, i8** %arrayidx19, align 16, !dbg !1892
  %24 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1896
  %mb20 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %24, i32 0, i32 55, !dbg !1897
  %pic21 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb20, i32 0, i32 66, !dbg !1898
  %p_fdec22 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic21, i32 0, i32 18, !dbg !1899
  %arrayidx23 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec22, i64 0, i64 2, !dbg !1896
  %25 = load i8*, i8** %arrayidx23, align 16, !dbg !1896
  %arrayidx24 = getelementptr inbounds [2 x i32], [2 x i32]* %ssd, i64 0, i64 1, !dbg !1900
  %call25 = call i32 %21(i8* %23, i32 16, i8* %25, i32 32, i32* %arrayidx24), !dbg !1889
  %26 = load i32, i32* %score, align 4, !dbg !1901
  %add26 = add nsw i32 %26, %call25, !dbg !1901
  store i32 %add26, i32* %score, align 4, !dbg !1901
  br label %if.end, !dbg !1902

if.end:                                           ; preds = %if.then13, %if.then
  %27 = load i32, i32* %score, align 4, !dbg !1903
  %28 = load i32, i32* %thresh, align 4, !dbg !1905
  %mul27 = mul nsw i32 %28, 4, !dbg !1906
  %cmp28 = icmp slt i32 %27, %mul27, !dbg !1907
  br i1 %cmp28, label %if.then29, label %if.end149, !dbg !1908

if.then29:                                        ; preds = %if.end
  %29 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1909
  %mb30 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %29, i32 0, i32 55, !dbg !1911
  %cache = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb30, i32 0, i32 67, !dbg !1912
  %non_zero_count = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache, i32 0, i32 2, !dbg !1913
  %30 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 16), align 16, !dbg !1914
  %idxprom31 = sext i32 %30 to i64, !dbg !1909
  %arrayidx32 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count, i64 0, i64 %idxprom31, !dbg !1909
  store i8 0, i8* %arrayidx32, align 1, !dbg !1915
  %31 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1916
  %mb33 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %31, i32 0, i32 55, !dbg !1917
  %cache34 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb33, i32 0, i32 67, !dbg !1918
  %non_zero_count35 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache34, i32 0, i32 2, !dbg !1919
  %32 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 17), align 4, !dbg !1920
  %idxprom36 = sext i32 %32 to i64, !dbg !1916
  %arrayidx37 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count35, i64 0, i64 %idxprom36, !dbg !1916
  store i8 0, i8* %arrayidx37, align 1, !dbg !1921
  %33 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1922
  %mb38 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %33, i32 0, i32 55, !dbg !1923
  %cache39 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb38, i32 0, i32 67, !dbg !1924
  %non_zero_count40 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache39, i32 0, i32 2, !dbg !1925
  %34 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 18), align 8, !dbg !1926
  %idxprom41 = sext i32 %34 to i64, !dbg !1922
  %arrayidx42 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count40, i64 0, i64 %idxprom41, !dbg !1922
  store i8 0, i8* %arrayidx42, align 1, !dbg !1927
  %35 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1928
  %mb43 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %35, i32 0, i32 55, !dbg !1929
  %cache44 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb43, i32 0, i32 67, !dbg !1930
  %non_zero_count45 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache44, i32 0, i32 2, !dbg !1931
  %36 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 19), align 4, !dbg !1932
  %idxprom46 = sext i32 %36 to i64, !dbg !1928
  %arrayidx47 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count45, i64 0, i64 %idxprom46, !dbg !1928
  store i8 0, i8* %arrayidx47, align 1, !dbg !1933
  %37 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1934
  %mb48 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %37, i32 0, i32 55, !dbg !1935
  %cache49 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb48, i32 0, i32 67, !dbg !1936
  %non_zero_count50 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache49, i32 0, i32 2, !dbg !1937
  %38 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 20), align 16, !dbg !1938
  %idxprom51 = sext i32 %38 to i64, !dbg !1934
  %arrayidx52 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count50, i64 0, i64 %idxprom51, !dbg !1934
  store i8 0, i8* %arrayidx52, align 1, !dbg !1939
  %39 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1940
  %mb53 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %39, i32 0, i32 55, !dbg !1941
  %cache54 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb53, i32 0, i32 67, !dbg !1942
  %non_zero_count55 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache54, i32 0, i32 2, !dbg !1943
  %40 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 21), align 4, !dbg !1944
  %idxprom56 = sext i32 %40 to i64, !dbg !1940
  %arrayidx57 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count55, i64 0, i64 %idxprom56, !dbg !1940
  store i8 0, i8* %arrayidx57, align 1, !dbg !1945
  %41 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1946
  %mb58 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %41, i32 0, i32 55, !dbg !1947
  %cache59 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb58, i32 0, i32 67, !dbg !1948
  %non_zero_count60 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache59, i32 0, i32 2, !dbg !1949
  %42 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 22), align 8, !dbg !1950
  %idxprom61 = sext i32 %42 to i64, !dbg !1946
  %arrayidx62 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count60, i64 0, i64 %idxprom61, !dbg !1946
  store i8 0, i8* %arrayidx62, align 1, !dbg !1951
  %43 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1952
  %mb63 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %43, i32 0, i32 55, !dbg !1953
  %cache64 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb63, i32 0, i32 67, !dbg !1954
  %non_zero_count65 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache64, i32 0, i32 2, !dbg !1955
  %44 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 23), align 4, !dbg !1956
  %idxprom66 = sext i32 %44 to i64, !dbg !1952
  %arrayidx67 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count65, i64 0, i64 %idxprom66, !dbg !1952
  store i8 0, i8* %arrayidx67, align 1, !dbg !1957
  %45 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1958
  %mb68 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %45, i32 0, i32 55, !dbg !1958
  %cache69 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb68, i32 0, i32 67, !dbg !1958
  %non_zero_count70 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache69, i32 0, i32 2, !dbg !1958
  %46 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 25), align 4, !dbg !1958
  %idxprom71 = sext i32 %46 to i64, !dbg !1958
  %arrayidx72 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count70, i64 0, i64 %idxprom71, !dbg !1958
  %47 = bitcast i8* %arrayidx72 to %union.x264_union16_t*, !dbg !1958
  %i = bitcast %union.x264_union16_t* %47 to i16*, !dbg !1958
  store i16 0, i16* %i, align 1, !dbg !1959
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !1960, metadata !DIExpression()), !dbg !1962
  store i32 0, i32* %ch, align 4, !dbg !1962
  br label %for.cond, !dbg !1963

for.cond:                                         ; preds = %for.inc, %if.then29
  %48 = load i32, i32* %ch, align 4, !dbg !1964
  %cmp73 = icmp slt i32 %48, 2, !dbg !1966
  br i1 %cmp73, label %for.body, label %for.end, !dbg !1967

for.body:                                         ; preds = %for.cond
  %49 = load i32, i32* %ch, align 4, !dbg !1968
  %idxprom74 = sext i32 %49 to i64, !dbg !1971
  %arrayidx75 = getelementptr inbounds [2 x i32], [2 x i32]* %ssd, i64 0, i64 %idxprom74, !dbg !1971
  %50 = load i32, i32* %arrayidx75, align 4, !dbg !1971
  %51 = load i32, i32* %thresh, align 4, !dbg !1972
  %cmp76 = icmp sgt i32 %50, %51, !dbg !1973
  br i1 %cmp76, label %if.then77, label %if.end148, !dbg !1974

if.then77:                                        ; preds = %for.body
  %52 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1975
  %dctf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %52, i32 0, i32 71, !dbg !1977
  %sub8x8_dct_dc = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf, i32 0, i32 3, !dbg !1978
  %53 = load void (i16*, i8*, i8*)*, void (i16*, i8*, i8*)** %sub8x8_dct_dc, align 8, !dbg !1978
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !1979
  %54 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1980
  %mb78 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %54, i32 0, i32 55, !dbg !1981
  %pic79 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb78, i32 0, i32 66, !dbg !1982
  %p_fenc80 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic79, i32 0, i32 16, !dbg !1983
  %55 = load i32, i32* %ch, align 4, !dbg !1984
  %add81 = add nsw i32 1, %55, !dbg !1985
  %idxprom82 = sext i32 %add81 to i64, !dbg !1980
  %arrayidx83 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc80, i64 0, i64 %idxprom82, !dbg !1980
  %56 = load i8*, i8** %arrayidx83, align 8, !dbg !1980
  %57 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1986
  %mb84 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %57, i32 0, i32 55, !dbg !1987
  %pic85 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb84, i32 0, i32 66, !dbg !1988
  %p_fdec86 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic85, i32 0, i32 18, !dbg !1989
  %58 = load i32, i32* %ch, align 4, !dbg !1990
  %add87 = add nsw i32 1, %58, !dbg !1991
  %idxprom88 = sext i32 %add87 to i64, !dbg !1986
  %arrayidx89 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec86, i64 0, i64 %idxprom88, !dbg !1986
  %59 = load i8*, i8** %arrayidx89, align 8, !dbg !1986
  call void %53(i16* %arraydecay, i8* %56, i8* %59), !dbg !1975
  %60 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1992
  %mb90 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %60, i32 0, i32 55, !dbg !1994
  %b_trellis91 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb90, i32 0, i32 12, !dbg !1995
  %61 = load i32, i32* %b_trellis91, align 16, !dbg !1995
  %tobool92 = icmp ne i32 %61, 0, !dbg !1992
  br i1 %tobool92, label %if.then93, label %if.else, !dbg !1996

if.then93:                                        ; preds = %if.then77
  %62 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !1997
  %arraydecay94 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !1998
  %63 = load i32, i32* %b_inter.addr, align 4, !dbg !1999
  %add95 = add nsw i32 2, %63, !dbg !2000
  %64 = load i32, i32* %i_qp.addr, align 4, !dbg !2001
  %65 = load i32, i32* %b_inter.addr, align 4, !dbg !2002
  %tobool96 = icmp ne i32 %65, 0, !dbg !2003
  %lnot = xor i1 %tobool96, true, !dbg !2003
  %lnot.ext = zext i1 %lnot to i32, !dbg !2003
  %call97 = call i32 @x264_quant_dc_trellis(%struct.x264_t* %62, i16* %arraydecay94, i32 %add95, i32 %64, i32 3, i32 %lnot.ext, i32 1), !dbg !2004
  store i32 %call97, i32* %nz_dc, align 4, !dbg !2005
  br label %if.end114, !dbg !2006

if.else:                                          ; preds = %if.then77
  %66 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2007
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %66, i32 0, i32 73, !dbg !2008
  %quant_2x2_dc = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 3, !dbg !2009
  %67 = load i32 (i16*, i32, i32)*, i32 (i16*, i32, i32)** %quant_2x2_dc, align 8, !dbg !2009
  %arraydecay98 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2010
  %68 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2011
  %quant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %68, i32 0, i32 33, !dbg !2012
  %69 = load i32, i32* %b_inter.addr, align 4, !dbg !2013
  %add99 = add nsw i32 2, %69, !dbg !2014
  %idxprom100 = sext i32 %add99 to i64, !dbg !2011
  %arrayidx101 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_mf, i64 0, i64 %idxprom100, !dbg !2011
  %70 = load [16 x i16]*, [16 x i16]** %arrayidx101, align 8, !dbg !2011
  %71 = load i32, i32* %i_qp.addr, align 4, !dbg !2015
  %idxprom102 = sext i32 %71 to i64, !dbg !2011
  %arrayidx103 = getelementptr inbounds [16 x i16], [16 x i16]* %70, i64 %idxprom102, !dbg !2011
  %arrayidx104 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx103, i64 0, i64 0, !dbg !2011
  %72 = load i16, i16* %arrayidx104, align 2, !dbg !2011
  %conv = zext i16 %72 to i32, !dbg !2011
  %shr105 = ashr i32 %conv, 1, !dbg !2016
  %73 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2017
  %quant4_bias = getelementptr inbounds %struct.x264_t, %struct.x264_t* %73, i32 0, i32 35, !dbg !2018
  %74 = load i32, i32* %b_inter.addr, align 4, !dbg !2019
  %add106 = add nsw i32 2, %74, !dbg !2020
  %idxprom107 = sext i32 %add106 to i64, !dbg !2017
  %arrayidx108 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_bias, i64 0, i64 %idxprom107, !dbg !2017
  %75 = load [16 x i16]*, [16 x i16]** %arrayidx108, align 8, !dbg !2017
  %76 = load i32, i32* %i_qp.addr, align 4, !dbg !2021
  %idxprom109 = sext i32 %76 to i64, !dbg !2017
  %arrayidx110 = getelementptr inbounds [16 x i16], [16 x i16]* %75, i64 %idxprom109, !dbg !2017
  %arrayidx111 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx110, i64 0, i64 0, !dbg !2017
  %77 = load i16, i16* %arrayidx111, align 2, !dbg !2017
  %conv112 = zext i16 %77 to i32, !dbg !2017
  %shl = shl i32 %conv112, 1, !dbg !2022
  %call113 = call i32 %67(i16* %arraydecay98, i32 %shr105, i32 %shl), !dbg !2007
  store i32 %call113, i32* %nz_dc, align 4, !dbg !2023
  br label %if.end114

if.end114:                                        ; preds = %if.else, %if.then93
  %78 = load i32, i32* %nz_dc, align 4, !dbg !2024
  %tobool115 = icmp ne i32 %78, 0, !dbg !2024
  br i1 %tobool115, label %if.then116, label %if.end147, !dbg !2026

if.then116:                                       ; preds = %if.end114
  %79 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2027
  %80 = load i32, i32* %b_inter.addr, align 4, !dbg !2030
  %81 = load i32, i32* %i_qp.addr, align 4, !dbg !2031
  %arraydecay117 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2032
  %call118 = call i32 @x264_mb_optimize_chroma_dc(%struct.x264_t* %79, i32 %80, i32 %81, i16* %arraydecay117), !dbg !2033
  %tobool119 = icmp ne i32 %call118, 0, !dbg !2033
  br i1 %tobool119, label %if.end121, label %if.then120, !dbg !2034

if.then120:                                       ; preds = %if.then116
  br label %for.inc, !dbg !2035

if.end121:                                        ; preds = %if.then116
  %82 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2036
  %mb122 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %82, i32 0, i32 55, !dbg !2037
  %cache123 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb122, i32 0, i32 67, !dbg !2038
  %non_zero_count124 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache123, i32 0, i32 2, !dbg !2039
  %83 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 25), align 4, !dbg !2040
  %84 = load i32, i32* %ch, align 4, !dbg !2041
  %add125 = add nsw i32 %83, %84, !dbg !2042
  %idxprom126 = sext i32 %add125 to i64, !dbg !2036
  %arrayidx127 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count124, i64 0, i64 %idxprom126, !dbg !2036
  store i8 1, i8* %arrayidx127, align 1, !dbg !2043
  %85 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2044
  %dct = getelementptr inbounds %struct.x264_t, %struct.x264_t* %85, i32 0, i32 54, !dbg !2045
  %chroma_dc = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct, i32 0, i32 1, !dbg !2046
  %86 = load i32, i32* %ch, align 4, !dbg !2047
  %idxprom128 = sext i32 %86 to i64, !dbg !2044
  %arrayidx129 = getelementptr inbounds [2 x [4 x i16]], [2 x [4 x i16]]* %chroma_dc, i64 0, i64 %idxprom128, !dbg !2044
  %arraydecay130 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx129, i64 0, i64 0, !dbg !2044
  %arraydecay131 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2048
  call void @zigzag_scan_2x2_dc(i16* %arraydecay130, i16* %arraydecay131), !dbg !2049
  %arraydecay132 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2050
  %arraydecay133 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2051
  %87 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2052
  %dequant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %87, i32 0, i32 29, !dbg !2053
  %88 = load i32, i32* %b_inter.addr, align 4, !dbg !2054
  %add134 = add nsw i32 2, %88, !dbg !2055
  %idxprom135 = sext i32 %add134 to i64, !dbg !2052
  %arrayidx136 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf, i64 0, i64 %idxprom135, !dbg !2052
  %89 = load [16 x i32]*, [16 x i32]** %arrayidx136, align 8, !dbg !2052
  %90 = load i32, i32* %i_qp.addr, align 4, !dbg !2056
  call void @idct_dequant_2x2_dconly(i16* %arraydecay132, i16* %arraydecay133, [16 x i32]* %89, i32 %90), !dbg !2057
  %91 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2058
  %dctf137 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %91, i32 0, i32 71, !dbg !2059
  %add8x8_idct_dc = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf137, i32 0, i32 5, !dbg !2060
  %92 = load void (i8*, i16*)*, void (i8*, i16*)** %add8x8_idct_dc, align 8, !dbg !2060
  %93 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2061
  %mb138 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %93, i32 0, i32 55, !dbg !2062
  %pic139 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb138, i32 0, i32 66, !dbg !2063
  %p_fdec140 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic139, i32 0, i32 18, !dbg !2064
  %94 = load i32, i32* %ch, align 4, !dbg !2065
  %add141 = add nsw i32 1, %94, !dbg !2066
  %idxprom142 = sext i32 %add141 to i64, !dbg !2061
  %arrayidx143 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec140, i64 0, i64 %idxprom142, !dbg !2061
  %95 = load i8*, i8** %arrayidx143, align 8, !dbg !2061
  %arraydecay144 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2067
  call void %92(i8* %95, i16* %arraydecay144), !dbg !2058
  %96 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2068
  %mb145 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %96, i32 0, i32 55, !dbg !2069
  %i_cbp_chroma146 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb145, i32 0, i32 58, !dbg !2070
  store i32 1, i32* %i_cbp_chroma146, align 4, !dbg !2071
  br label %if.end147, !dbg !2072

if.end147:                                        ; preds = %if.end121, %if.end114
  br label %if.end148, !dbg !2073

if.end148:                                        ; preds = %if.end147, %for.body
  br label %for.inc, !dbg !2074

for.inc:                                          ; preds = %if.end148, %if.then120
  %97 = load i32, i32* %ch, align 4, !dbg !2075
  %inc = add nsw i32 %97, 1, !dbg !2075
  store i32 %inc, i32* %ch, align 4, !dbg !2075
  br label %for.cond, !dbg !2076, !llvm.loop !2077

for.end:                                          ; preds = %for.cond
  br label %return, !dbg !2079

if.end149:                                        ; preds = %if.end
  br label %if.end150, !dbg !2080

if.end150:                                        ; preds = %if.end149, %land.lhs.true, %land.end
  call void @llvm.dbg.declare(metadata i32* %ch151, metadata !2081, metadata !DIExpression()), !dbg !2083
  store i32 0, i32* %ch151, align 4, !dbg !2083
  br label %for.cond152, !dbg !2084

for.cond152:                                      ; preds = %for.inc460, %if.end150
  %98 = load i32, i32* %ch151, align 4, !dbg !2085
  %cmp153 = icmp slt i32 %98, 2, !dbg !2087
  br i1 %cmp153, label %for.body155, label %for.end462, !dbg !2088

for.body155:                                      ; preds = %for.cond152
  call void @llvm.dbg.declare(metadata i8** %p_src, metadata !2089, metadata !DIExpression()), !dbg !2091
  %99 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2092
  %mb156 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %99, i32 0, i32 55, !dbg !2093
  %pic157 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb156, i32 0, i32 66, !dbg !2094
  %p_fenc158 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic157, i32 0, i32 16, !dbg !2095
  %100 = load i32, i32* %ch151, align 4, !dbg !2096
  %add159 = add nsw i32 1, %100, !dbg !2097
  %idxprom160 = sext i32 %add159 to i64, !dbg !2092
  %arrayidx161 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc158, i64 0, i64 %idxprom160, !dbg !2092
  %101 = load i8*, i8** %arrayidx161, align 8, !dbg !2092
  store i8* %101, i8** %p_src, align 8, !dbg !2091
  call void @llvm.dbg.declare(metadata i8** %p_dst, metadata !2098, metadata !DIExpression()), !dbg !2099
  %102 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2100
  %mb162 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %102, i32 0, i32 55, !dbg !2101
  %pic163 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb162, i32 0, i32 66, !dbg !2102
  %p_fdec164 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic163, i32 0, i32 18, !dbg !2103
  %103 = load i32, i32* %ch151, align 4, !dbg !2104
  %add165 = add nsw i32 1, %103, !dbg !2105
  %idxprom166 = sext i32 %add165 to i64, !dbg !2100
  %arrayidx167 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec164, i64 0, i64 %idxprom166, !dbg !2100
  %104 = load i8*, i8** %arrayidx167, align 8, !dbg !2100
  store i8* %104, i8** %p_dst, align 8, !dbg !2099
  call void @llvm.dbg.declare(metadata i32* %i_decimate_score, metadata !2106, metadata !DIExpression()), !dbg !2107
  store i32 0, i32* %i_decimate_score, align 4, !dbg !2107
  call void @llvm.dbg.declare(metadata i32* %nz_ac, metadata !2108, metadata !DIExpression()), !dbg !2109
  store i32 0, i32* %nz_ac, align 4, !dbg !2109
  call void @llvm.dbg.declare(metadata [4 x [16 x i16]]* %dct4x4, metadata !2110, metadata !DIExpression()), !dbg !2113
  %105 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2114
  %mb168 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %105, i32 0, i32 55, !dbg !2116
  %b_lossless = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb168, i32 0, i32 73, !dbg !2117
  %106 = load i32, i32* %b_lossless, align 4, !dbg !2117
  %tobool169 = icmp ne i32 %106, 0, !dbg !2114
  br i1 %tobool169, label %if.then170, label %if.end241, !dbg !2118

if.then170:                                       ; preds = %for.body155
  call void @llvm.dbg.declare(metadata i32* %i171, metadata !2119, metadata !DIExpression()), !dbg !2122
  store i32 0, i32* %i171, align 4, !dbg !2122
  br label %for.cond172, !dbg !2123

for.cond172:                                      ; preds = %for.inc225, %if.then170
  %107 = load i32, i32* %i171, align 4, !dbg !2124
  %cmp173 = icmp slt i32 %107, 4, !dbg !2126
  br i1 %cmp173, label %for.body175, label %for.end227, !dbg !2127

for.body175:                                      ; preds = %for.cond172
  call void @llvm.dbg.declare(metadata i32* %oe, metadata !2128, metadata !DIExpression()), !dbg !2130
  %108 = load i32, i32* %i171, align 4, !dbg !2131
  %idxprom176 = sext i32 %108 to i64, !dbg !2132
  %arrayidx177 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_x, i64 0, i64 %idxprom176, !dbg !2132
  %109 = load i8, i8* %arrayidx177, align 1, !dbg !2132
  %conv178 = zext i8 %109 to i32, !dbg !2132
  %mul179 = mul nsw i32 %conv178, 4, !dbg !2133
  %110 = load i32, i32* %i171, align 4, !dbg !2134
  %idxprom180 = sext i32 %110 to i64, !dbg !2135
  %arrayidx181 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_y, i64 0, i64 %idxprom180, !dbg !2135
  %111 = load i8, i8* %arrayidx181, align 1, !dbg !2135
  %conv182 = zext i8 %111 to i32, !dbg !2135
  %mul183 = mul nsw i32 %conv182, 4, !dbg !2136
  %mul184 = mul nsw i32 %mul183, 16, !dbg !2137
  %add185 = add nsw i32 %mul179, %mul184, !dbg !2138
  store i32 %add185, i32* %oe, align 4, !dbg !2130
  call void @llvm.dbg.declare(metadata i32* %od, metadata !2139, metadata !DIExpression()), !dbg !2140
  %112 = load i32, i32* %i171, align 4, !dbg !2141
  %idxprom186 = sext i32 %112 to i64, !dbg !2142
  %arrayidx187 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_x, i64 0, i64 %idxprom186, !dbg !2142
  %113 = load i8, i8* %arrayidx187, align 1, !dbg !2142
  %conv188 = zext i8 %113 to i32, !dbg !2142
  %mul189 = mul nsw i32 %conv188, 4, !dbg !2143
  %114 = load i32, i32* %i171, align 4, !dbg !2144
  %idxprom190 = sext i32 %114 to i64, !dbg !2145
  %arrayidx191 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_y, i64 0, i64 %idxprom190, !dbg !2145
  %115 = load i8, i8* %arrayidx191, align 1, !dbg !2145
  %conv192 = zext i8 %115 to i32, !dbg !2145
  %mul193 = mul nsw i32 %conv192, 4, !dbg !2146
  %mul194 = mul nsw i32 %mul193, 32, !dbg !2147
  %add195 = add nsw i32 %mul189, %mul194, !dbg !2148
  store i32 %add195, i32* %od, align 4, !dbg !2140
  %116 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2149
  %zigzagf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %116, i32 0, i32 72, !dbg !2150
  %sub_4x4ac = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf, i32 0, i32 4, !dbg !2151
  %117 = load i32 (i16*, i8*, i8*, i16*)*, i32 (i16*, i8*, i8*, i16*)** %sub_4x4ac, align 8, !dbg !2151
  %118 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2152
  %dct196 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %118, i32 0, i32 54, !dbg !2153
  %luma4x4 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct196, i32 0, i32 3, !dbg !2154
  %119 = load i32, i32* %i171, align 4, !dbg !2155
  %add197 = add nsw i32 16, %119, !dbg !2156
  %120 = load i32, i32* %ch151, align 4, !dbg !2157
  %mul198 = mul nsw i32 %120, 4, !dbg !2158
  %add199 = add nsw i32 %add197, %mul198, !dbg !2159
  %idxprom200 = sext i32 %add199 to i64, !dbg !2152
  %arrayidx201 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4, i64 0, i64 %idxprom200, !dbg !2152
  %arraydecay202 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx201, i64 0, i64 0, !dbg !2152
  %121 = load i8*, i8** %p_src, align 8, !dbg !2160
  %122 = load i32, i32* %oe, align 4, !dbg !2161
  %idx.ext = sext i32 %122 to i64, !dbg !2162
  %add.ptr = getelementptr inbounds i8, i8* %121, i64 %idx.ext, !dbg !2162
  %123 = load i8*, i8** %p_dst, align 8, !dbg !2163
  %124 = load i32, i32* %od, align 4, !dbg !2164
  %idx.ext203 = sext i32 %124 to i64, !dbg !2165
  %add.ptr204 = getelementptr inbounds i8, i8* %123, i64 %idx.ext203, !dbg !2165
  %125 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2166
  %dct205 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %125, i32 0, i32 54, !dbg !2167
  %chroma_dc206 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct205, i32 0, i32 1, !dbg !2168
  %126 = load i32, i32* %ch151, align 4, !dbg !2169
  %idxprom207 = sext i32 %126 to i64, !dbg !2166
  %arrayidx208 = getelementptr inbounds [2 x [4 x i16]], [2 x [4 x i16]]* %chroma_dc206, i64 0, i64 %idxprom207, !dbg !2166
  %127 = load i32, i32* %i171, align 4, !dbg !2170
  %idxprom209 = sext i32 %127 to i64, !dbg !2166
  %arrayidx210 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx208, i64 0, i64 %idxprom209, !dbg !2166
  %call211 = call i32 %117(i16* %arraydecay202, i8* %add.ptr, i8* %add.ptr204, i16* %arrayidx210), !dbg !2149
  store i32 %call211, i32* %nz, align 4, !dbg !2171
  %128 = load i32, i32* %nz, align 4, !dbg !2172
  %conv212 = trunc i32 %128 to i8, !dbg !2172
  %129 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2173
  %mb213 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %129, i32 0, i32 55, !dbg !2174
  %cache214 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb213, i32 0, i32 67, !dbg !2175
  %non_zero_count215 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache214, i32 0, i32 2, !dbg !2176
  %130 = load i32, i32* %i171, align 4, !dbg !2177
  %add216 = add nsw i32 16, %130, !dbg !2178
  %131 = load i32, i32* %ch151, align 4, !dbg !2179
  %mul217 = mul nsw i32 %131, 4, !dbg !2180
  %add218 = add nsw i32 %add216, %mul217, !dbg !2181
  %idxprom219 = sext i32 %add218 to i64, !dbg !2182
  %arrayidx220 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom219, !dbg !2182
  %132 = load i32, i32* %arrayidx220, align 4, !dbg !2182
  %idxprom221 = sext i32 %132 to i64, !dbg !2173
  %arrayidx222 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count215, i64 0, i64 %idxprom221, !dbg !2173
  store i8 %conv212, i8* %arrayidx222, align 1, !dbg !2183
  %133 = load i32, i32* %nz, align 4, !dbg !2184
  %134 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2185
  %mb223 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %134, i32 0, i32 55, !dbg !2186
  %i_cbp_chroma224 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb223, i32 0, i32 58, !dbg !2187
  %135 = load i32, i32* %i_cbp_chroma224, align 4, !dbg !2188
  %or = or i32 %135, %133, !dbg !2188
  store i32 %or, i32* %i_cbp_chroma224, align 4, !dbg !2188
  br label %for.inc225, !dbg !2189

for.inc225:                                       ; preds = %for.body175
  %136 = load i32, i32* %i171, align 4, !dbg !2190
  %inc226 = add nsw i32 %136, 1, !dbg !2190
  store i32 %inc226, i32* %i171, align 4, !dbg !2190
  br label %for.cond172, !dbg !2191, !llvm.loop !2192

for.end227:                                       ; preds = %for.cond172
  %137 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2194
  %dct228 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %137, i32 0, i32 54, !dbg !2194
  %chroma_dc229 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct228, i32 0, i32 1, !dbg !2194
  %138 = load i32, i32* %ch151, align 4, !dbg !2194
  %idxprom230 = sext i32 %138 to i64, !dbg !2194
  %arrayidx231 = getelementptr inbounds [2 x [4 x i16]], [2 x [4 x i16]]* %chroma_dc229, i64 0, i64 %idxprom230, !dbg !2194
  %arraydecay232 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx231, i64 0, i64 0, !dbg !2194
  %call233 = call i32 @array_non_zero_int(i16* %arraydecay232, i32 8), !dbg !2194
  %conv234 = trunc i32 %call233 to i8, !dbg !2194
  %139 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2195
  %mb235 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %139, i32 0, i32 55, !dbg !2196
  %cache236 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb235, i32 0, i32 67, !dbg !2197
  %non_zero_count237 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache236, i32 0, i32 2, !dbg !2198
  %140 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 25), align 4, !dbg !2199
  %141 = load i32, i32* %ch151, align 4, !dbg !2200
  %add238 = add nsw i32 %140, %141, !dbg !2201
  %idxprom239 = sext i32 %add238 to i64, !dbg !2195
  %arrayidx240 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count237, i64 0, i64 %idxprom239, !dbg !2195
  store i8 %conv234, i8* %arrayidx240, align 1, !dbg !2202
  br label %for.inc460, !dbg !2203

if.end241:                                        ; preds = %for.body155
  %142 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2204
  %dctf242 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %142, i32 0, i32 71, !dbg !2205
  %sub8x8_dct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf242, i32 0, i32 2, !dbg !2206
  %143 = load void ([16 x i16]*, i8*, i8*)*, void ([16 x i16]*, i8*, i8*)** %sub8x8_dct, align 16, !dbg !2206
  %arraydecay243 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !2207
  %144 = load i8*, i8** %p_src, align 8, !dbg !2208
  %145 = load i8*, i8** %p_dst, align 8, !dbg !2209
  call void %143([16 x i16]* %arraydecay243, i8* %144, i8* %145), !dbg !2204
  %arraydecay244 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2210
  %arraydecay245 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !2211
  call void @dct2x2dc(i16* %arraydecay244, [16 x i16]* %arraydecay245), !dbg !2212
  call void @llvm.dbg.declare(metadata i32* %i246, metadata !2213, metadata !DIExpression()), !dbg !2215
  store i32 0, i32* %i246, align 4, !dbg !2215
  br label %for.cond247, !dbg !2216

for.cond247:                                      ; preds = %for.inc332, %if.end241
  %146 = load i32, i32* %i246, align 4, !dbg !2217
  %cmp248 = icmp slt i32 %146, 4, !dbg !2219
  br i1 %cmp248, label %for.body250, label %for.end334, !dbg !2220

for.body250:                                      ; preds = %for.cond247
  %147 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2221
  %mb251 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %147, i32 0, i32 55, !dbg !2224
  %b_trellis252 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb251, i32 0, i32 12, !dbg !2225
  %148 = load i32, i32* %b_trellis252, align 16, !dbg !2225
  %tobool253 = icmp ne i32 %148, 0, !dbg !2221
  br i1 %tobool253, label %if.then254, label %if.else263, !dbg !2226

if.then254:                                       ; preds = %for.body250
  %149 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2227
  %150 = load i32, i32* %i246, align 4, !dbg !2228
  %idxprom255 = sext i32 %150 to i64, !dbg !2229
  %arrayidx256 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom255, !dbg !2229
  %arraydecay257 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx256, i64 0, i64 0, !dbg !2229
  %151 = load i32, i32* %b_inter.addr, align 4, !dbg !2230
  %add258 = add nsw i32 2, %151, !dbg !2231
  %152 = load i32, i32* %i_qp.addr, align 4, !dbg !2232
  %153 = load i32, i32* %b_inter.addr, align 4, !dbg !2233
  %tobool259 = icmp ne i32 %153, 0, !dbg !2234
  %lnot260 = xor i1 %tobool259, true, !dbg !2234
  %lnot.ext261 = zext i1 %lnot260 to i32, !dbg !2234
  %call262 = call i32 @x264_quant_4x4_trellis(%struct.x264_t* %149, i16* %arraydecay257, i32 %add258, i32 %152, i32 4, i32 %lnot.ext261, i32 1, i32 0), !dbg !2235
  store i32 %call262, i32* %nz, align 4, !dbg !2236
  br label %if.end283, !dbg !2237

if.else263:                                       ; preds = %for.body250
  %154 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2238
  %quantf264 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %154, i32 0, i32 73, !dbg !2239
  %quant_4x4 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf264, i32 0, i32 1, !dbg !2240
  %155 = load i32 (i16*, i16*, i16*)*, i32 (i16*, i16*, i16*)** %quant_4x4, align 8, !dbg !2240
  %156 = load i32, i32* %i246, align 4, !dbg !2241
  %idxprom265 = sext i32 %156 to i64, !dbg !2242
  %arrayidx266 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom265, !dbg !2242
  %arraydecay267 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx266, i64 0, i64 0, !dbg !2242
  %157 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2243
  %quant4_mf268 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %157, i32 0, i32 33, !dbg !2244
  %158 = load i32, i32* %b_inter.addr, align 4, !dbg !2245
  %add269 = add nsw i32 2, %158, !dbg !2246
  %idxprom270 = sext i32 %add269 to i64, !dbg !2243
  %arrayidx271 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_mf268, i64 0, i64 %idxprom270, !dbg !2243
  %159 = load [16 x i16]*, [16 x i16]** %arrayidx271, align 8, !dbg !2243
  %160 = load i32, i32* %i_qp.addr, align 4, !dbg !2247
  %idxprom272 = sext i32 %160 to i64, !dbg !2243
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* %159, i64 %idxprom272, !dbg !2243
  %arraydecay274 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx273, i64 0, i64 0, !dbg !2243
  %161 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2248
  %quant4_bias275 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %161, i32 0, i32 35, !dbg !2249
  %162 = load i32, i32* %b_inter.addr, align 4, !dbg !2250
  %add276 = add nsw i32 2, %162, !dbg !2251
  %idxprom277 = sext i32 %add276 to i64, !dbg !2248
  %arrayidx278 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_bias275, i64 0, i64 %idxprom277, !dbg !2248
  %163 = load [16 x i16]*, [16 x i16]** %arrayidx278, align 8, !dbg !2248
  %164 = load i32, i32* %i_qp.addr, align 4, !dbg !2252
  %idxprom279 = sext i32 %164 to i64, !dbg !2248
  %arrayidx280 = getelementptr inbounds [16 x i16], [16 x i16]* %163, i64 %idxprom279, !dbg !2248
  %arraydecay281 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx280, i64 0, i64 0, !dbg !2248
  %call282 = call i32 %155(i16* %arraydecay267, i16* %arraydecay274, i16* %arraydecay281), !dbg !2238
  store i32 %call282, i32* %nz, align 4, !dbg !2253
  br label %if.end283

if.end283:                                        ; preds = %if.else263, %if.then254
  %165 = load i32, i32* %nz, align 4, !dbg !2254
  %conv284 = trunc i32 %165 to i8, !dbg !2254
  %166 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2255
  %mb285 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %166, i32 0, i32 55, !dbg !2256
  %cache286 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb285, i32 0, i32 67, !dbg !2257
  %non_zero_count287 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache286, i32 0, i32 2, !dbg !2258
  %167 = load i32, i32* %i246, align 4, !dbg !2259
  %add288 = add nsw i32 16, %167, !dbg !2260
  %168 = load i32, i32* %ch151, align 4, !dbg !2261
  %mul289 = mul nsw i32 %168, 4, !dbg !2262
  %add290 = add nsw i32 %add288, %mul289, !dbg !2263
  %idxprom291 = sext i32 %add290 to i64, !dbg !2264
  %arrayidx292 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom291, !dbg !2264
  %169 = load i32, i32* %arrayidx292, align 4, !dbg !2264
  %idxprom293 = sext i32 %169 to i64, !dbg !2255
  %arrayidx294 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count287, i64 0, i64 %idxprom293, !dbg !2255
  store i8 %conv284, i8* %arrayidx294, align 1, !dbg !2265
  %170 = load i32, i32* %nz, align 4, !dbg !2266
  %tobool295 = icmp ne i32 %170, 0, !dbg !2266
  br i1 %tobool295, label %if.then296, label %if.end331, !dbg !2268

if.then296:                                       ; preds = %if.end283
  store i32 1, i32* %nz_ac, align 4, !dbg !2269
  %171 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2271
  %zigzagf297 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %171, i32 0, i32 72, !dbg !2272
  %scan_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf297, i32 0, i32 1, !dbg !2273
  %172 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x4, align 8, !dbg !2273
  %173 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2274
  %dct298 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %173, i32 0, i32 54, !dbg !2275
  %luma4x4299 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct298, i32 0, i32 3, !dbg !2276
  %174 = load i32, i32* %i246, align 4, !dbg !2277
  %add300 = add nsw i32 16, %174, !dbg !2278
  %175 = load i32, i32* %ch151, align 4, !dbg !2279
  %mul301 = mul nsw i32 %175, 4, !dbg !2280
  %add302 = add nsw i32 %add300, %mul301, !dbg !2281
  %idxprom303 = sext i32 %add302 to i64, !dbg !2274
  %arrayidx304 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4299, i64 0, i64 %idxprom303, !dbg !2274
  %arraydecay305 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx304, i64 0, i64 0, !dbg !2274
  %176 = load i32, i32* %i246, align 4, !dbg !2282
  %idxprom306 = sext i32 %176 to i64, !dbg !2283
  %arrayidx307 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom306, !dbg !2283
  %arraydecay308 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx307, i64 0, i64 0, !dbg !2283
  call void %172(i16* %arraydecay305, i16* %arraydecay308), !dbg !2271
  %177 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2284
  %quantf309 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %177, i32 0, i32 73, !dbg !2285
  %dequant_4x4 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf309, i32 0, i32 5, !dbg !2286
  %178 = load void (i16*, [16 x i32]*, i32)*, void (i16*, [16 x i32]*, i32)** %dequant_4x4, align 8, !dbg !2286
  %179 = load i32, i32* %i246, align 4, !dbg !2287
  %idxprom310 = sext i32 %179 to i64, !dbg !2288
  %arrayidx311 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom310, !dbg !2288
  %arraydecay312 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx311, i64 0, i64 0, !dbg !2288
  %180 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2289
  %dequant4_mf313 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %180, i32 0, i32 29, !dbg !2290
  %181 = load i32, i32* %b_inter.addr, align 4, !dbg !2291
  %add314 = add nsw i32 2, %181, !dbg !2292
  %idxprom315 = sext i32 %add314 to i64, !dbg !2289
  %arrayidx316 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf313, i64 0, i64 %idxprom315, !dbg !2289
  %182 = load [16 x i32]*, [16 x i32]** %arrayidx316, align 8, !dbg !2289
  %183 = load i32, i32* %i_qp.addr, align 4, !dbg !2293
  call void %178(i16* %arraydecay312, [16 x i32]* %182, i32 %183), !dbg !2284
  %184 = load i32, i32* %b_decimate, align 4, !dbg !2294
  %tobool317 = icmp ne i32 %184, 0, !dbg !2294
  br i1 %tobool317, label %if.then318, label %if.end330, !dbg !2296

if.then318:                                       ; preds = %if.then296
  %185 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2297
  %quantf319 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %185, i32 0, i32 73, !dbg !2298
  %decimate_score15 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf319, i32 0, i32 8, !dbg !2299
  %186 = load i32 (i16*)*, i32 (i16*)** %decimate_score15, align 8, !dbg !2299
  %187 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2300
  %dct320 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %187, i32 0, i32 54, !dbg !2301
  %luma4x4321 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct320, i32 0, i32 3, !dbg !2302
  %188 = load i32, i32* %i246, align 4, !dbg !2303
  %add322 = add nsw i32 16, %188, !dbg !2304
  %189 = load i32, i32* %ch151, align 4, !dbg !2305
  %mul323 = mul nsw i32 %189, 4, !dbg !2306
  %add324 = add nsw i32 %add322, %mul323, !dbg !2307
  %idxprom325 = sext i32 %add324 to i64, !dbg !2300
  %arrayidx326 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4321, i64 0, i64 %idxprom325, !dbg !2300
  %arraydecay327 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx326, i64 0, i64 0, !dbg !2300
  %call328 = call i32 %186(i16* %arraydecay327), !dbg !2297
  %190 = load i32, i32* %i_decimate_score, align 4, !dbg !2308
  %add329 = add nsw i32 %190, %call328, !dbg !2308
  store i32 %add329, i32* %i_decimate_score, align 4, !dbg !2308
  br label %if.end330, !dbg !2309

if.end330:                                        ; preds = %if.then318, %if.then296
  br label %if.end331, !dbg !2310

if.end331:                                        ; preds = %if.end330, %if.end283
  br label %for.inc332, !dbg !2311

for.inc332:                                       ; preds = %if.end331
  %191 = load i32, i32* %i246, align 4, !dbg !2312
  %inc333 = add nsw i32 %191, 1, !dbg !2312
  store i32 %inc333, i32* %i246, align 4, !dbg !2312
  br label %for.cond247, !dbg !2313, !llvm.loop !2314

for.end334:                                       ; preds = %for.cond247
  %192 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2316
  %mb335 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %192, i32 0, i32 55, !dbg !2318
  %b_trellis336 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb335, i32 0, i32 12, !dbg !2319
  %193 = load i32, i32* %b_trellis336, align 16, !dbg !2319
  %tobool337 = icmp ne i32 %193, 0, !dbg !2316
  br i1 %tobool337, label %if.then338, label %if.else345, !dbg !2320

if.then338:                                       ; preds = %for.end334
  %194 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2321
  %arraydecay339 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2322
  %195 = load i32, i32* %b_inter.addr, align 4, !dbg !2323
  %add340 = add nsw i32 2, %195, !dbg !2324
  %196 = load i32, i32* %i_qp.addr, align 4, !dbg !2325
  %197 = load i32, i32* %b_inter.addr, align 4, !dbg !2326
  %tobool341 = icmp ne i32 %197, 0, !dbg !2327
  %lnot342 = xor i1 %tobool341, true, !dbg !2327
  %lnot.ext343 = zext i1 %lnot342 to i32, !dbg !2327
  %call344 = call i32 @x264_quant_dc_trellis(%struct.x264_t* %194, i16* %arraydecay339, i32 %add340, i32 %196, i32 3, i32 %lnot.ext343, i32 1), !dbg !2328
  store i32 %call344, i32* %nz_dc, align 4, !dbg !2329
  br label %if.end368, !dbg !2330

if.else345:                                       ; preds = %for.end334
  %198 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2331
  %quantf346 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %198, i32 0, i32 73, !dbg !2332
  %quant_2x2_dc347 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf346, i32 0, i32 3, !dbg !2333
  %199 = load i32 (i16*, i32, i32)*, i32 (i16*, i32, i32)** %quant_2x2_dc347, align 8, !dbg !2333
  %arraydecay348 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2334
  %200 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2335
  %quant4_mf349 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %200, i32 0, i32 33, !dbg !2336
  %201 = load i32, i32* %b_inter.addr, align 4, !dbg !2337
  %add350 = add nsw i32 2, %201, !dbg !2338
  %idxprom351 = sext i32 %add350 to i64, !dbg !2335
  %arrayidx352 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_mf349, i64 0, i64 %idxprom351, !dbg !2335
  %202 = load [16 x i16]*, [16 x i16]** %arrayidx352, align 8, !dbg !2335
  %203 = load i32, i32* %i_qp.addr, align 4, !dbg !2339
  %idxprom353 = sext i32 %203 to i64, !dbg !2335
  %arrayidx354 = getelementptr inbounds [16 x i16], [16 x i16]* %202, i64 %idxprom353, !dbg !2335
  %arrayidx355 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx354, i64 0, i64 0, !dbg !2335
  %204 = load i16, i16* %arrayidx355, align 2, !dbg !2335
  %conv356 = zext i16 %204 to i32, !dbg !2335
  %shr357 = ashr i32 %conv356, 1, !dbg !2340
  %205 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2341
  %quant4_bias358 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %205, i32 0, i32 35, !dbg !2342
  %206 = load i32, i32* %b_inter.addr, align 4, !dbg !2343
  %add359 = add nsw i32 2, %206, !dbg !2344
  %idxprom360 = sext i32 %add359 to i64, !dbg !2341
  %arrayidx361 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_bias358, i64 0, i64 %idxprom360, !dbg !2341
  %207 = load [16 x i16]*, [16 x i16]** %arrayidx361, align 8, !dbg !2341
  %208 = load i32, i32* %i_qp.addr, align 4, !dbg !2345
  %idxprom362 = sext i32 %208 to i64, !dbg !2341
  %arrayidx363 = getelementptr inbounds [16 x i16], [16 x i16]* %207, i64 %idxprom362, !dbg !2341
  %arrayidx364 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx363, i64 0, i64 0, !dbg !2341
  %209 = load i16, i16* %arrayidx364, align 2, !dbg !2341
  %conv365 = zext i16 %209 to i32, !dbg !2341
  %shl366 = shl i32 %conv365, 1, !dbg !2346
  %call367 = call i32 %199(i16* %arraydecay348, i32 %shr357, i32 %shl366), !dbg !2331
  store i32 %call367, i32* %nz_dc, align 4, !dbg !2347
  br label %if.end368

if.end368:                                        ; preds = %if.else345, %if.then338
  %210 = load i32, i32* %nz_dc, align 4, !dbg !2348
  %conv369 = trunc i32 %210 to i8, !dbg !2348
  %211 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2349
  %mb370 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %211, i32 0, i32 55, !dbg !2350
  %cache371 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb370, i32 0, i32 67, !dbg !2351
  %non_zero_count372 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache371, i32 0, i32 2, !dbg !2352
  %212 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 25), align 4, !dbg !2353
  %213 = load i32, i32* %ch151, align 4, !dbg !2354
  %add373 = add nsw i32 %212, %213, !dbg !2355
  %idxprom374 = sext i32 %add373 to i64, !dbg !2349
  %arrayidx375 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count372, i64 0, i64 %idxprom374, !dbg !2349
  store i8 %conv369, i8* %arrayidx375, align 1, !dbg !2356
  %214 = load i32, i32* %b_decimate, align 4, !dbg !2357
  %tobool376 = icmp ne i32 %214, 0, !dbg !2357
  br i1 %tobool376, label %land.lhs.true377, label %lor.lhs.false, !dbg !2359

land.lhs.true377:                                 ; preds = %if.end368
  %215 = load i32, i32* %i_decimate_score, align 4, !dbg !2360
  %cmp378 = icmp slt i32 %215, 7, !dbg !2361
  br i1 %cmp378, label %if.then381, label %lor.lhs.false, !dbg !2362

lor.lhs.false:                                    ; preds = %land.lhs.true377, %if.end368
  %216 = load i32, i32* %nz_ac, align 4, !dbg !2363
  %tobool380 = icmp ne i32 %216, 0, !dbg !2363
  br i1 %tobool380, label %if.else439, label %if.then381, !dbg !2364

if.then381:                                       ; preds = %lor.lhs.false, %land.lhs.true377
  %217 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2365
  %mb382 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %217, i32 0, i32 55, !dbg !2367
  %cache383 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb382, i32 0, i32 67, !dbg !2368
  %non_zero_count384 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache383, i32 0, i32 2, !dbg !2369
  %218 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 16), align 16, !dbg !2370
  %219 = load i32, i32* %ch151, align 4, !dbg !2371
  %mul385 = mul nsw i32 24, %219, !dbg !2372
  %add386 = add nsw i32 %218, %mul385, !dbg !2373
  %idxprom387 = sext i32 %add386 to i64, !dbg !2365
  %arrayidx388 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count384, i64 0, i64 %idxprom387, !dbg !2365
  store i8 0, i8* %arrayidx388, align 1, !dbg !2374
  %220 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2375
  %mb389 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %220, i32 0, i32 55, !dbg !2376
  %cache390 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb389, i32 0, i32 67, !dbg !2377
  %non_zero_count391 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache390, i32 0, i32 2, !dbg !2378
  %221 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 17), align 4, !dbg !2379
  %222 = load i32, i32* %ch151, align 4, !dbg !2380
  %mul392 = mul nsw i32 24, %222, !dbg !2381
  %add393 = add nsw i32 %221, %mul392, !dbg !2382
  %idxprom394 = sext i32 %add393 to i64, !dbg !2375
  %arrayidx395 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count391, i64 0, i64 %idxprom394, !dbg !2375
  store i8 0, i8* %arrayidx395, align 1, !dbg !2383
  %223 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2384
  %mb396 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %223, i32 0, i32 55, !dbg !2385
  %cache397 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb396, i32 0, i32 67, !dbg !2386
  %non_zero_count398 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache397, i32 0, i32 2, !dbg !2387
  %224 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 18), align 8, !dbg !2388
  %225 = load i32, i32* %ch151, align 4, !dbg !2389
  %mul399 = mul nsw i32 24, %225, !dbg !2390
  %add400 = add nsw i32 %224, %mul399, !dbg !2391
  %idxprom401 = sext i32 %add400 to i64, !dbg !2384
  %arrayidx402 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count398, i64 0, i64 %idxprom401, !dbg !2384
  store i8 0, i8* %arrayidx402, align 1, !dbg !2392
  %226 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2393
  %mb403 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %226, i32 0, i32 55, !dbg !2394
  %cache404 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb403, i32 0, i32 67, !dbg !2395
  %non_zero_count405 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache404, i32 0, i32 2, !dbg !2396
  %227 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 19), align 4, !dbg !2397
  %228 = load i32, i32* %ch151, align 4, !dbg !2398
  %mul406 = mul nsw i32 24, %228, !dbg !2399
  %add407 = add nsw i32 %227, %mul406, !dbg !2400
  %idxprom408 = sext i32 %add407 to i64, !dbg !2393
  %arrayidx409 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count405, i64 0, i64 %idxprom408, !dbg !2393
  store i8 0, i8* %arrayidx409, align 1, !dbg !2401
  %229 = load i32, i32* %nz_dc, align 4, !dbg !2402
  %tobool410 = icmp ne i32 %229, 0, !dbg !2402
  br i1 %tobool410, label %if.end412, label %if.then411, !dbg !2404

if.then411:                                       ; preds = %if.then381
  br label %for.inc460, !dbg !2405

if.end412:                                        ; preds = %if.then381
  %230 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2406
  %231 = load i32, i32* %b_inter.addr, align 4, !dbg !2408
  %232 = load i32, i32* %i_qp.addr, align 4, !dbg !2409
  %arraydecay413 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2410
  %call414 = call i32 @x264_mb_optimize_chroma_dc(%struct.x264_t* %230, i32 %231, i32 %232, i16* %arraydecay413), !dbg !2411
  %tobool415 = icmp ne i32 %call414, 0, !dbg !2411
  br i1 %tobool415, label %if.end423, label %if.then416, !dbg !2412

if.then416:                                       ; preds = %if.end412
  %233 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2413
  %mb417 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %233, i32 0, i32 55, !dbg !2415
  %cache418 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb417, i32 0, i32 67, !dbg !2416
  %non_zero_count419 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache418, i32 0, i32 2, !dbg !2417
  %234 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 25), align 4, !dbg !2418
  %235 = load i32, i32* %ch151, align 4, !dbg !2419
  %add420 = add nsw i32 %234, %235, !dbg !2420
  %idxprom421 = sext i32 %add420 to i64, !dbg !2413
  %arrayidx422 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count419, i64 0, i64 %idxprom421, !dbg !2413
  store i8 0, i8* %arrayidx422, align 1, !dbg !2421
  br label %for.inc460, !dbg !2422

if.end423:                                        ; preds = %if.end412
  %236 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2423
  %dct424 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %236, i32 0, i32 54, !dbg !2424
  %chroma_dc425 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct424, i32 0, i32 1, !dbg !2425
  %237 = load i32, i32* %ch151, align 4, !dbg !2426
  %idxprom426 = sext i32 %237 to i64, !dbg !2423
  %arrayidx427 = getelementptr inbounds [2 x [4 x i16]], [2 x [4 x i16]]* %chroma_dc425, i64 0, i64 %idxprom426, !dbg !2423
  %arraydecay428 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx427, i64 0, i64 0, !dbg !2423
  %arraydecay429 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2427
  call void @zigzag_scan_2x2_dc(i16* %arraydecay428, i16* %arraydecay429), !dbg !2428
  %arraydecay430 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2429
  %arraydecay431 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2430
  %238 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2431
  %dequant4_mf432 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %238, i32 0, i32 29, !dbg !2432
  %239 = load i32, i32* %b_inter.addr, align 4, !dbg !2433
  %add433 = add nsw i32 2, %239, !dbg !2434
  %idxprom434 = sext i32 %add433 to i64, !dbg !2431
  %arrayidx435 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf432, i64 0, i64 %idxprom434, !dbg !2431
  %240 = load [16 x i32]*, [16 x i32]** %arrayidx435, align 8, !dbg !2431
  %241 = load i32, i32* %i_qp.addr, align 4, !dbg !2435
  call void @idct_dequant_2x2_dconly(i16* %arraydecay430, i16* %arraydecay431, [16 x i32]* %240, i32 %241), !dbg !2436
  %242 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2437
  %dctf436 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %242, i32 0, i32 71, !dbg !2438
  %add8x8_idct_dc437 = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf436, i32 0, i32 5, !dbg !2439
  %243 = load void (i8*, i16*)*, void (i8*, i16*)** %add8x8_idct_dc437, align 8, !dbg !2439
  %244 = load i8*, i8** %p_dst, align 8, !dbg !2440
  %arraydecay438 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2441
  call void %243(i8* %244, i16* %arraydecay438), !dbg !2437
  br label %if.end459, !dbg !2442

if.else439:                                       ; preds = %lor.lhs.false
  %245 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2443
  %mb440 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %245, i32 0, i32 55, !dbg !2445
  %i_cbp_chroma441 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb440, i32 0, i32 58, !dbg !2446
  store i32 1, i32* %i_cbp_chroma441, align 4, !dbg !2447
  %246 = load i32, i32* %nz_dc, align 4, !dbg !2448
  %tobool442 = icmp ne i32 %246, 0, !dbg !2448
  br i1 %tobool442, label %if.then443, label %if.end456, !dbg !2450

if.then443:                                       ; preds = %if.else439
  %247 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2451
  %dct444 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %247, i32 0, i32 54, !dbg !2453
  %chroma_dc445 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct444, i32 0, i32 1, !dbg !2454
  %248 = load i32, i32* %ch151, align 4, !dbg !2455
  %idxprom446 = sext i32 %248 to i64, !dbg !2451
  %arrayidx447 = getelementptr inbounds [2 x [4 x i16]], [2 x [4 x i16]]* %chroma_dc445, i64 0, i64 %idxprom446, !dbg !2451
  %arraydecay448 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx447, i64 0, i64 0, !dbg !2451
  %arraydecay449 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2456
  call void @zigzag_scan_2x2_dc(i16* %arraydecay448, i16* %arraydecay449), !dbg !2457
  %arraydecay450 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !2458
  %arraydecay451 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !2459
  %249 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2460
  %dequant4_mf452 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %249, i32 0, i32 29, !dbg !2461
  %250 = load i32, i32* %b_inter.addr, align 4, !dbg !2462
  %add453 = add nsw i32 2, %250, !dbg !2463
  %idxprom454 = sext i32 %add453 to i64, !dbg !2460
  %arrayidx455 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf452, i64 0, i64 %idxprom454, !dbg !2460
  %251 = load [16 x i32]*, [16 x i32]** %arrayidx455, align 8, !dbg !2460
  %252 = load i32, i32* %i_qp.addr, align 4, !dbg !2464
  call void @idct_dequant_2x2_dc(i16* %arraydecay450, [16 x i16]* %arraydecay451, [16 x i32]* %251, i32 %252), !dbg !2465
  br label %if.end456, !dbg !2466

if.end456:                                        ; preds = %if.then443, %if.else439
  %253 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2467
  %dctf457 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %253, i32 0, i32 71, !dbg !2468
  %add8x8_idct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf457, i32 0, i32 4, !dbg !2469
  %254 = load void (i8*, [16 x i16]*)*, void (i8*, [16 x i16]*)** %add8x8_idct, align 16, !dbg !2469
  %255 = load i8*, i8** %p_dst, align 8, !dbg !2470
  %arraydecay458 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !2471
  call void %254(i8* %255, [16 x i16]* %arraydecay458), !dbg !2467
  br label %if.end459

if.end459:                                        ; preds = %if.end456, %if.end423
  br label %for.inc460, !dbg !2472

for.inc460:                                       ; preds = %if.end459, %if.then416, %if.then411, %for.end227
  %256 = load i32, i32* %ch151, align 4, !dbg !2473
  %inc461 = add nsw i32 %256, 1, !dbg !2473
  store i32 %inc461, i32* %ch151, align 4, !dbg !2473
  br label %for.cond152, !dbg !2474, !llvm.loop !2475

for.end462:                                       ; preds = %for.cond152
  %257 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2477
  %mb463 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %257, i32 0, i32 55, !dbg !2477
  %cache464 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb463, i32 0, i32 67, !dbg !2477
  %non_zero_count465 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache464, i32 0, i32 2, !dbg !2477
  %258 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 25), align 4, !dbg !2477
  %idxprom466 = sext i32 %258 to i64, !dbg !2477
  %arrayidx467 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count465, i64 0, i64 %idxprom466, !dbg !2477
  %259 = bitcast i8* %arrayidx467 to %union.x264_union16_t*, !dbg !2477
  %i468 = bitcast %union.x264_union16_t* %259 to i16*, !dbg !2477
  %260 = load i16, i16* %i468, align 1, !dbg !2477
  %tobool469 = icmp ne i16 %260, 0, !dbg !2478
  %lnot470 = xor i1 %tobool469, true, !dbg !2478
  %lnot472 = xor i1 %lnot470, true, !dbg !2479
  %lnot.ext473 = zext i1 %lnot472 to i32, !dbg !2479
  %261 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2480
  %mb474 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %261, i32 0, i32 55, !dbg !2481
  %i_cbp_chroma475 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb474, i32 0, i32 58, !dbg !2482
  %262 = load i32, i32* %i_cbp_chroma475, align 4, !dbg !2482
  %or476 = or i32 %lnot.ext473, %262, !dbg !2483
  %263 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2484
  %mb477 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %263, i32 0, i32 55, !dbg !2485
  %i_cbp_chroma478 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb477, i32 0, i32 58, !dbg !2486
  %264 = load i32, i32* %i_cbp_chroma478, align 4, !dbg !2486
  %add479 = add nsw i32 %or476, %264, !dbg !2487
  %265 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2488
  %mb480 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %265, i32 0, i32 55, !dbg !2489
  %i_cbp_chroma481 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb480, i32 0, i32 58, !dbg !2490
  store i32 %add479, i32* %i_cbp_chroma481, align 4, !dbg !2491
  br label %return, !dbg !2492

return:                                           ; preds = %for.end462, %for.end
  ret void, !dbg !2492
}

declare dso_local i32 @x264_quant_dc_trellis(%struct.x264_t*, i16*, i32, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @x264_mb_optimize_chroma_dc(%struct.x264_t* %h, i32 %b_inter, i32 %i_qp, i16* %dct2x2) #0 !dbg !2493 {
entry:
  %retval = alloca i32, align 4
  %h.addr = alloca %struct.x264_t*, align 8
  %b_inter.addr = alloca i32, align 4
  %i_qp.addr = alloca i32, align 4
  %dct2x2.addr = alloca i16*, align 8
  %dct2x2_orig = alloca [4 x i16], align 2
  %coeff = alloca i32, align 4
  %nz = alloca i32, align 4
  %level = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !2496, metadata !DIExpression()), !dbg !2497
  store i32 %b_inter, i32* %b_inter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b_inter.addr, metadata !2498, metadata !DIExpression()), !dbg !2499
  store i32 %i_qp, i32* %i_qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_qp.addr, metadata !2500, metadata !DIExpression()), !dbg !2501
  store i16* %dct2x2, i16** %dct2x2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dct2x2.addr, metadata !2502, metadata !DIExpression()), !dbg !2503
  call void @llvm.dbg.declare(metadata [4 x i16]* %dct2x2_orig, metadata !2504, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.declare(metadata i32* %coeff, metadata !2506, metadata !DIExpression()), !dbg !2507
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !2508, metadata !DIExpression()), !dbg !2509
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2510
  %dequant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 29, !dbg !2512
  %1 = load i32, i32* %b_inter.addr, align 4, !dbg !2513
  %add = add nsw i32 2, %1, !dbg !2514
  %idxprom = sext i32 %add to i64, !dbg !2510
  %arrayidx = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf, i64 0, i64 %idxprom, !dbg !2510
  %2 = load [16 x i32]*, [16 x i32]** %arrayidx, align 8, !dbg !2510
  %3 = load i32, i32* %i_qp.addr, align 4, !dbg !2515
  %rem = srem i32 %3, 6, !dbg !2516
  %idxprom1 = sext i32 %rem to i64, !dbg !2510
  %arrayidx2 = getelementptr inbounds [16 x i32], [16 x i32]* %2, i64 %idxprom1, !dbg !2510
  %arrayidx3 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx2, i64 0, i64 0, !dbg !2510
  %4 = load i32, i32* %arrayidx3, align 4, !dbg !2510
  %5 = load i32, i32* %i_qp.addr, align 4, !dbg !2517
  %div = sdiv i32 %5, 6, !dbg !2518
  %shl = shl i32 %4, %div, !dbg !2519
  %cmp = icmp sgt i32 %shl, 2048, !dbg !2520
  br i1 %cmp, label %if.then, label %if.end, !dbg !2521

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !2522
  br label %return, !dbg !2522

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2_orig, i64 0, i64 0, !dbg !2523
  %6 = load i16*, i16** %dct2x2.addr, align 8, !dbg !2524
  %7 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2525
  %dequant4_mf4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %7, i32 0, i32 29, !dbg !2526
  %8 = load i32, i32* %b_inter.addr, align 4, !dbg !2527
  %add5 = add nsw i32 2, %8, !dbg !2528
  %idxprom6 = sext i32 %add5 to i64, !dbg !2525
  %arrayidx7 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf4, i64 0, i64 %idxprom6, !dbg !2525
  %9 = load [16 x i32]*, [16 x i32]** %arrayidx7, align 8, !dbg !2525
  %10 = load i32, i32* %i_qp.addr, align 4, !dbg !2529
  call void @idct_dequant_2x2_dconly(i16* %arraydecay, i16* %6, [16 x i32]* %9, i32 %10), !dbg !2530
  %arrayidx8 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2_orig, i64 0, i64 0, !dbg !2531
  %11 = load i16, i16* %arrayidx8, align 2, !dbg !2532
  %conv = sext i16 %11 to i32, !dbg !2532
  %add9 = add nsw i32 %conv, 32, !dbg !2532
  %conv10 = trunc i32 %add9 to i16, !dbg !2532
  store i16 %conv10, i16* %arrayidx8, align 2, !dbg !2532
  %arrayidx11 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2_orig, i64 0, i64 1, !dbg !2533
  %12 = load i16, i16* %arrayidx11, align 2, !dbg !2534
  %conv12 = sext i16 %12 to i32, !dbg !2534
  %add13 = add nsw i32 %conv12, 32, !dbg !2534
  %conv14 = trunc i32 %add13 to i16, !dbg !2534
  store i16 %conv14, i16* %arrayidx11, align 2, !dbg !2534
  %arrayidx15 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2_orig, i64 0, i64 2, !dbg !2535
  %13 = load i16, i16* %arrayidx15, align 2, !dbg !2536
  %conv16 = sext i16 %13 to i32, !dbg !2536
  %add17 = add nsw i32 %conv16, 32, !dbg !2536
  %conv18 = trunc i32 %add17 to i16, !dbg !2536
  store i16 %conv18, i16* %arrayidx15, align 2, !dbg !2536
  %arrayidx19 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2_orig, i64 0, i64 3, !dbg !2537
  %14 = load i16, i16* %arrayidx19, align 2, !dbg !2538
  %conv20 = sext i16 %14 to i32, !dbg !2538
  %add21 = add nsw i32 %conv20, 32, !dbg !2538
  %conv22 = trunc i32 %add21 to i16, !dbg !2538
  store i16 %conv22, i16* %arrayidx19, align 2, !dbg !2538
  %arrayidx23 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2_orig, i64 0, i64 0, !dbg !2539
  %15 = load i16, i16* %arrayidx23, align 2, !dbg !2539
  %conv24 = sext i16 %15 to i32, !dbg !2539
  %arrayidx25 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2_orig, i64 0, i64 1, !dbg !2541
  %16 = load i16, i16* %arrayidx25, align 2, !dbg !2541
  %conv26 = sext i16 %16 to i32, !dbg !2541
  %or = or i32 %conv24, %conv26, !dbg !2542
  %arrayidx27 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2_orig, i64 0, i64 2, !dbg !2543
  %17 = load i16, i16* %arrayidx27, align 2, !dbg !2543
  %conv28 = sext i16 %17 to i32, !dbg !2543
  %or29 = or i32 %or, %conv28, !dbg !2544
  %arrayidx30 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2_orig, i64 0, i64 3, !dbg !2545
  %18 = load i16, i16* %arrayidx30, align 2, !dbg !2545
  %conv31 = sext i16 %18 to i32, !dbg !2545
  %or32 = or i32 %or29, %conv31, !dbg !2546
  %shr = ashr i32 %or32, 6, !dbg !2547
  %tobool = icmp ne i32 %shr, 0, !dbg !2547
  br i1 %tobool, label %if.end34, label %if.then33, !dbg !2548

if.then33:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2549
  br label %return, !dbg !2549

if.end34:                                         ; preds = %if.end
  store i32 0, i32* %nz, align 4, !dbg !2550
  %19 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2552
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %19, i32 0, i32 73, !dbg !2553
  %coeff_last = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 11, !dbg !2554
  %arrayidx35 = getelementptr inbounds [6 x i32 (i16*)*], [6 x i32 (i16*)*]* %coeff_last, i64 0, i64 3, !dbg !2552
  %20 = load i32 (i16*)*, i32 (i16*)** %arrayidx35, align 8, !dbg !2552
  %21 = load i16*, i16** %dct2x2.addr, align 8, !dbg !2555
  %call = call i32 %20(i16* %21), !dbg !2552
  store i32 %call, i32* %coeff, align 4, !dbg !2556
  br label %for.cond, !dbg !2557

for.cond:                                         ; preds = %for.inc, %if.end34
  %22 = load i32, i32* %coeff, align 4, !dbg !2558
  %cmp36 = icmp sge i32 %22, 0, !dbg !2560
  br i1 %cmp36, label %for.body, label %for.end, !dbg !2561

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %level, metadata !2562, metadata !DIExpression()), !dbg !2564
  %23 = load i16*, i16** %dct2x2.addr, align 8, !dbg !2565
  %24 = load i32, i32* %coeff, align 4, !dbg !2566
  %idxprom38 = sext i32 %24 to i64, !dbg !2565
  %arrayidx39 = getelementptr inbounds i16, i16* %23, i64 %idxprom38, !dbg !2565
  %25 = load i16, i16* %arrayidx39, align 2, !dbg !2565
  %conv40 = sext i16 %25 to i32, !dbg !2565
  store i32 %conv40, i32* %level, align 4, !dbg !2564
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !2567, metadata !DIExpression()), !dbg !2568
  %26 = load i32, i32* %level, align 4, !dbg !2569
  %shr41 = ashr i32 %26, 31, !dbg !2570
  %or42 = or i32 %shr41, 1, !dbg !2571
  store i32 %or42, i32* %sign, align 4, !dbg !2568
  br label %while.cond, !dbg !2572

while.cond:                                       ; preds = %if.end58, %for.body
  %27 = load i32, i32* %level, align 4, !dbg !2573
  %tobool43 = icmp ne i32 %27, 0, !dbg !2572
  br i1 %tobool43, label %while.body, label %while.end, !dbg !2572

while.body:                                       ; preds = %while.cond
  %28 = load i32, i32* %level, align 4, !dbg !2574
  %29 = load i32, i32* %sign, align 4, !dbg !2576
  %sub = sub nsw i32 %28, %29, !dbg !2577
  %conv44 = trunc i32 %sub to i16, !dbg !2574
  %30 = load i16*, i16** %dct2x2.addr, align 8, !dbg !2578
  %31 = load i32, i32* %coeff, align 4, !dbg !2579
  %idxprom45 = sext i32 %31 to i64, !dbg !2578
  %arrayidx46 = getelementptr inbounds i16, i16* %30, i64 %idxprom45, !dbg !2578
  store i16 %conv44, i16* %arrayidx46, align 2, !dbg !2580
  %arraydecay47 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2_orig, i64 0, i64 0, !dbg !2581
  %32 = load i16*, i16** %dct2x2.addr, align 8, !dbg !2583
  %33 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2584
  %dequant4_mf48 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %33, i32 0, i32 29, !dbg !2585
  %34 = load i32, i32* %b_inter.addr, align 4, !dbg !2586
  %add49 = add nsw i32 2, %34, !dbg !2587
  %idxprom50 = sext i32 %add49 to i64, !dbg !2584
  %arrayidx51 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf48, i64 0, i64 %idxprom50, !dbg !2584
  %35 = load [16 x i32]*, [16 x i32]** %arrayidx51, align 8, !dbg !2584
  %36 = load i32, i32* %i_qp.addr, align 4, !dbg !2588
  %call52 = call i32 @idct_dequant_round_2x2_dc(i16* %arraydecay47, i16* %32, [16 x i32]* %35, i32 %36), !dbg !2589
  %tobool53 = icmp ne i32 %call52, 0, !dbg !2589
  br i1 %tobool53, label %if.then54, label %if.end58, !dbg !2590

if.then54:                                        ; preds = %while.body
  store i32 1, i32* %nz, align 4, !dbg !2591
  %37 = load i32, i32* %level, align 4, !dbg !2593
  %conv55 = trunc i32 %37 to i16, !dbg !2593
  %38 = load i16*, i16** %dct2x2.addr, align 8, !dbg !2594
  %39 = load i32, i32* %coeff, align 4, !dbg !2595
  %idxprom56 = sext i32 %39 to i64, !dbg !2594
  %arrayidx57 = getelementptr inbounds i16, i16* %38, i64 %idxprom56, !dbg !2594
  store i16 %conv55, i16* %arrayidx57, align 2, !dbg !2596
  br label %while.end, !dbg !2597

if.end58:                                         ; preds = %while.body
  %40 = load i32, i32* %sign, align 4, !dbg !2598
  %41 = load i32, i32* %level, align 4, !dbg !2599
  %sub59 = sub nsw i32 %41, %40, !dbg !2599
  store i32 %sub59, i32* %level, align 4, !dbg !2599
  br label %while.cond, !dbg !2572, !llvm.loop !2600

while.end:                                        ; preds = %if.then54, %while.cond
  br label %for.inc, !dbg !2602

for.inc:                                          ; preds = %while.end
  %42 = load i32, i32* %coeff, align 4, !dbg !2603
  %dec = add nsw i32 %42, -1, !dbg !2603
  store i32 %dec, i32* %coeff, align 4, !dbg !2603
  br label %for.cond, !dbg !2604, !llvm.loop !2605

for.end:                                          ; preds = %for.cond
  %43 = load i32, i32* %nz, align 4, !dbg !2607
  store i32 %43, i32* %retval, align 4, !dbg !2608
  br label %return, !dbg !2608

return:                                           ; preds = %for.end, %if.then33, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !2609
  ret i32 %44, !dbg !2609
}

; Function Attrs: noinline nounwind uwtable
define internal void @zigzag_scan_2x2_dc(i16* %level, i16* %dct) #0 !dbg !2610 {
entry:
  %level.addr = alloca i16*, align 8
  %dct.addr = alloca i16*, align 8
  store i16* %level, i16** %level.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %level.addr, metadata !2611, metadata !DIExpression()), !dbg !2612
  store i16* %dct, i16** %dct.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dct.addr, metadata !2613, metadata !DIExpression()), !dbg !2614
  %0 = load i16*, i16** %dct.addr, align 8, !dbg !2615
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !2615
  %1 = load i16, i16* %arrayidx, align 2, !dbg !2615
  %2 = load i16*, i16** %level.addr, align 8, !dbg !2615
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !2615
  store i16 %1, i16* %arrayidx1, align 2, !dbg !2615
  %3 = load i16*, i16** %dct.addr, align 8, !dbg !2616
  %arrayidx2 = getelementptr inbounds i16, i16* %3, i64 2, !dbg !2616
  %4 = load i16, i16* %arrayidx2, align 2, !dbg !2616
  %5 = load i16*, i16** %level.addr, align 8, !dbg !2616
  %arrayidx3 = getelementptr inbounds i16, i16* %5, i64 1, !dbg !2616
  store i16 %4, i16* %arrayidx3, align 2, !dbg !2616
  %6 = load i16*, i16** %dct.addr, align 8, !dbg !2617
  %arrayidx4 = getelementptr inbounds i16, i16* %6, i64 1, !dbg !2617
  %7 = load i16, i16* %arrayidx4, align 2, !dbg !2617
  %8 = load i16*, i16** %level.addr, align 8, !dbg !2617
  %arrayidx5 = getelementptr inbounds i16, i16* %8, i64 2, !dbg !2617
  store i16 %7, i16* %arrayidx5, align 2, !dbg !2617
  %9 = load i16*, i16** %dct.addr, align 8, !dbg !2618
  %arrayidx6 = getelementptr inbounds i16, i16* %9, i64 3, !dbg !2618
  %10 = load i16, i16* %arrayidx6, align 2, !dbg !2618
  %11 = load i16*, i16** %level.addr, align 8, !dbg !2618
  %arrayidx7 = getelementptr inbounds i16, i16* %11, i64 3, !dbg !2618
  store i16 %10, i16* %arrayidx7, align 2, !dbg !2618
  ret void, !dbg !2619
}

; Function Attrs: noinline nounwind uwtable
define internal void @idct_dequant_2x2_dconly(i16* %out, i16* %dct, [16 x i32]* %dequant_mf, i32 %i_qp) #0 !dbg !2620 {
entry:
  %out.addr = alloca i16*, align 8
  %dct.addr = alloca i16*, align 8
  %dequant_mf.addr = alloca [16 x i32]*, align 8
  %i_qp.addr = alloca i32, align 4
  %d0 = alloca i32, align 4
  %d1 = alloca i32, align 4
  %d2 = alloca i32, align 4
  %d3 = alloca i32, align 4
  %dmf = alloca i32, align 4
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !2623, metadata !DIExpression()), !dbg !2624
  store i16* %dct, i16** %dct.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dct.addr, metadata !2625, metadata !DIExpression()), !dbg !2626
  store [16 x i32]* %dequant_mf, [16 x i32]** %dequant_mf.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i32]** %dequant_mf.addr, metadata !2627, metadata !DIExpression()), !dbg !2628
  store i32 %i_qp, i32* %i_qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_qp.addr, metadata !2629, metadata !DIExpression()), !dbg !2630
  call void @llvm.dbg.declare(metadata i32* %d0, metadata !2631, metadata !DIExpression()), !dbg !2632
  %0 = load i16*, i16** %dct.addr, align 8, !dbg !2632
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !2632
  %1 = load i16, i16* %arrayidx, align 2, !dbg !2632
  %conv = sext i16 %1 to i32, !dbg !2632
  %2 = load i16*, i16** %dct.addr, align 8, !dbg !2632
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 1, !dbg !2632
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !2632
  %conv2 = sext i16 %3 to i32, !dbg !2632
  %add = add nsw i32 %conv, %conv2, !dbg !2632
  store i32 %add, i32* %d0, align 4, !dbg !2632
  call void @llvm.dbg.declare(metadata i32* %d1, metadata !2633, metadata !DIExpression()), !dbg !2632
  %4 = load i16*, i16** %dct.addr, align 8, !dbg !2632
  %arrayidx3 = getelementptr inbounds i16, i16* %4, i64 2, !dbg !2632
  %5 = load i16, i16* %arrayidx3, align 2, !dbg !2632
  %conv4 = sext i16 %5 to i32, !dbg !2632
  %6 = load i16*, i16** %dct.addr, align 8, !dbg !2632
  %arrayidx5 = getelementptr inbounds i16, i16* %6, i64 3, !dbg !2632
  %7 = load i16, i16* %arrayidx5, align 2, !dbg !2632
  %conv6 = sext i16 %7 to i32, !dbg !2632
  %add7 = add nsw i32 %conv4, %conv6, !dbg !2632
  store i32 %add7, i32* %d1, align 4, !dbg !2632
  call void @llvm.dbg.declare(metadata i32* %d2, metadata !2634, metadata !DIExpression()), !dbg !2632
  %8 = load i16*, i16** %dct.addr, align 8, !dbg !2632
  %arrayidx8 = getelementptr inbounds i16, i16* %8, i64 0, !dbg !2632
  %9 = load i16, i16* %arrayidx8, align 2, !dbg !2632
  %conv9 = sext i16 %9 to i32, !dbg !2632
  %10 = load i16*, i16** %dct.addr, align 8, !dbg !2632
  %arrayidx10 = getelementptr inbounds i16, i16* %10, i64 1, !dbg !2632
  %11 = load i16, i16* %arrayidx10, align 2, !dbg !2632
  %conv11 = sext i16 %11 to i32, !dbg !2632
  %sub = sub nsw i32 %conv9, %conv11, !dbg !2632
  store i32 %sub, i32* %d2, align 4, !dbg !2632
  call void @llvm.dbg.declare(metadata i32* %d3, metadata !2635, metadata !DIExpression()), !dbg !2632
  %12 = load i16*, i16** %dct.addr, align 8, !dbg !2632
  %arrayidx12 = getelementptr inbounds i16, i16* %12, i64 2, !dbg !2632
  %13 = load i16, i16* %arrayidx12, align 2, !dbg !2632
  %conv13 = sext i16 %13 to i32, !dbg !2632
  %14 = load i16*, i16** %dct.addr, align 8, !dbg !2632
  %arrayidx14 = getelementptr inbounds i16, i16* %14, i64 3, !dbg !2632
  %15 = load i16, i16* %arrayidx14, align 2, !dbg !2632
  %conv15 = sext i16 %15 to i32, !dbg !2632
  %sub16 = sub nsw i32 %conv13, %conv15, !dbg !2632
  store i32 %sub16, i32* %d3, align 4, !dbg !2632
  call void @llvm.dbg.declare(metadata i32* %dmf, metadata !2636, metadata !DIExpression()), !dbg !2632
  %16 = load [16 x i32]*, [16 x i32]** %dequant_mf.addr, align 8, !dbg !2632
  %17 = load i32, i32* %i_qp.addr, align 4, !dbg !2632
  %rem = srem i32 %17, 6, !dbg !2632
  %idxprom = sext i32 %rem to i64, !dbg !2632
  %arrayidx17 = getelementptr inbounds [16 x i32], [16 x i32]* %16, i64 %idxprom, !dbg !2632
  %arrayidx18 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx17, i64 0, i64 0, !dbg !2632
  %18 = load i32, i32* %arrayidx18, align 4, !dbg !2632
  %19 = load i32, i32* %i_qp.addr, align 4, !dbg !2632
  %div = sdiv i32 %19, 6, !dbg !2632
  %shl = shl i32 %18, %div, !dbg !2632
  store i32 %shl, i32* %dmf, align 4, !dbg !2632
  %20 = load i32, i32* %d0, align 4, !dbg !2637
  %21 = load i32, i32* %d1, align 4, !dbg !2638
  %add19 = add nsw i32 %20, %21, !dbg !2639
  %22 = load i32, i32* %dmf, align 4, !dbg !2640
  %mul = mul nsw i32 %add19, %22, !dbg !2641
  %shr = ashr i32 %mul, 5, !dbg !2642
  %conv20 = trunc i32 %shr to i16, !dbg !2643
  %23 = load i16*, i16** %out.addr, align 8, !dbg !2644
  %arrayidx21 = getelementptr inbounds i16, i16* %23, i64 0, !dbg !2644
  store i16 %conv20, i16* %arrayidx21, align 2, !dbg !2645
  %24 = load i32, i32* %d0, align 4, !dbg !2646
  %25 = load i32, i32* %d1, align 4, !dbg !2647
  %sub22 = sub nsw i32 %24, %25, !dbg !2648
  %26 = load i32, i32* %dmf, align 4, !dbg !2649
  %mul23 = mul nsw i32 %sub22, %26, !dbg !2650
  %shr24 = ashr i32 %mul23, 5, !dbg !2651
  %conv25 = trunc i32 %shr24 to i16, !dbg !2652
  %27 = load i16*, i16** %out.addr, align 8, !dbg !2653
  %arrayidx26 = getelementptr inbounds i16, i16* %27, i64 1, !dbg !2653
  store i16 %conv25, i16* %arrayidx26, align 2, !dbg !2654
  %28 = load i32, i32* %d2, align 4, !dbg !2655
  %29 = load i32, i32* %d3, align 4, !dbg !2656
  %add27 = add nsw i32 %28, %29, !dbg !2657
  %30 = load i32, i32* %dmf, align 4, !dbg !2658
  %mul28 = mul nsw i32 %add27, %30, !dbg !2659
  %shr29 = ashr i32 %mul28, 5, !dbg !2660
  %conv30 = trunc i32 %shr29 to i16, !dbg !2661
  %31 = load i16*, i16** %out.addr, align 8, !dbg !2662
  %arrayidx31 = getelementptr inbounds i16, i16* %31, i64 2, !dbg !2662
  store i16 %conv30, i16* %arrayidx31, align 2, !dbg !2663
  %32 = load i32, i32* %d2, align 4, !dbg !2664
  %33 = load i32, i32* %d3, align 4, !dbg !2665
  %sub32 = sub nsw i32 %32, %33, !dbg !2666
  %34 = load i32, i32* %dmf, align 4, !dbg !2667
  %mul33 = mul nsw i32 %sub32, %34, !dbg !2668
  %shr34 = ashr i32 %mul33, 5, !dbg !2669
  %conv35 = trunc i32 %shr34 to i16, !dbg !2670
  %35 = load i16*, i16** %out.addr, align 8, !dbg !2671
  %arrayidx36 = getelementptr inbounds i16, i16* %35, i64 3, !dbg !2671
  store i16 %conv35, i16* %arrayidx36, align 2, !dbg !2672
  ret void, !dbg !2673
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @array_non_zero_int(i16* %v, i32 %i_count) #0 !dbg !2674 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca i16*, align 8
  %i_count.addr = alloca i32, align 4
  %i33 = alloca i32, align 4
  store i16* %v, i16** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %v.addr, metadata !2677, metadata !DIExpression()), !dbg !2678
  store i32 %i_count, i32* %i_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_count.addr, metadata !2679, metadata !DIExpression()), !dbg !2680
  %0 = load i32, i32* %i_count.addr, align 4, !dbg !2681
  %cmp = icmp eq i32 %0, 8, !dbg !2683
  br i1 %cmp, label %if.then, label %if.else, !dbg !2684

if.then:                                          ; preds = %entry
  %1 = load i16*, i16** %v.addr, align 8, !dbg !2685
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 0, !dbg !2685
  %2 = bitcast i16* %arrayidx to %union.x264_union64_t*, !dbg !2685
  %i = bitcast %union.x264_union64_t* %2 to i64*, !dbg !2685
  %3 = load i64, i64* %i, align 8, !dbg !2685
  %tobool = icmp ne i64 %3, 0, !dbg !2686
  %lnot = xor i1 %tobool, true, !dbg !2686
  %lnot1 = xor i1 %lnot, true, !dbg !2687
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2687
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !2688
  br label %return, !dbg !2688

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %i_count.addr, align 4, !dbg !2689
  %cmp2 = icmp eq i32 %4, 16, !dbg !2691
  br i1 %cmp2, label %if.then3, label %if.else13, !dbg !2692

if.then3:                                         ; preds = %if.else
  %5 = load i16*, i16** %v.addr, align 8, !dbg !2693
  %arrayidx4 = getelementptr inbounds i16, i16* %5, i64 0, !dbg !2693
  %6 = bitcast i16* %arrayidx4 to %union.x264_union64_t*, !dbg !2693
  %i5 = bitcast %union.x264_union64_t* %6 to i64*, !dbg !2693
  %7 = load i64, i64* %i5, align 8, !dbg !2693
  %8 = load i16*, i16** %v.addr, align 8, !dbg !2694
  %arrayidx6 = getelementptr inbounds i16, i16* %8, i64 4, !dbg !2694
  %9 = bitcast i16* %arrayidx6 to %union.x264_union64_t*, !dbg !2694
  %i7 = bitcast %union.x264_union64_t* %9 to i64*, !dbg !2694
  %10 = load i64, i64* %i7, align 8, !dbg !2694
  %or = or i64 %7, %10, !dbg !2695
  %tobool8 = icmp ne i64 %or, 0, !dbg !2696
  %lnot9 = xor i1 %tobool8, true, !dbg !2696
  %lnot11 = xor i1 %lnot9, true, !dbg !2697
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !2697
  store i32 %lnot.ext12, i32* %retval, align 4, !dbg !2698
  br label %return, !dbg !2698

if.else13:                                        ; preds = %if.else
  %11 = load i32, i32* %i_count.addr, align 4, !dbg !2699
  %cmp14 = icmp eq i32 %11, 32, !dbg !2701
  br i1 %cmp14, label %if.then15, label %if.else32, !dbg !2702

if.then15:                                        ; preds = %if.else13
  %12 = load i16*, i16** %v.addr, align 8, !dbg !2703
  %arrayidx16 = getelementptr inbounds i16, i16* %12, i64 0, !dbg !2703
  %13 = bitcast i16* %arrayidx16 to %union.x264_union64_t*, !dbg !2703
  %i17 = bitcast %union.x264_union64_t* %13 to i64*, !dbg !2703
  %14 = load i64, i64* %i17, align 8, !dbg !2703
  %15 = load i16*, i16** %v.addr, align 8, !dbg !2704
  %arrayidx18 = getelementptr inbounds i16, i16* %15, i64 4, !dbg !2704
  %16 = bitcast i16* %arrayidx18 to %union.x264_union64_t*, !dbg !2704
  %i19 = bitcast %union.x264_union64_t* %16 to i64*, !dbg !2704
  %17 = load i64, i64* %i19, align 8, !dbg !2704
  %or20 = or i64 %14, %17, !dbg !2705
  %18 = load i16*, i16** %v.addr, align 8, !dbg !2706
  %arrayidx21 = getelementptr inbounds i16, i16* %18, i64 8, !dbg !2706
  %19 = bitcast i16* %arrayidx21 to %union.x264_union64_t*, !dbg !2706
  %i22 = bitcast %union.x264_union64_t* %19 to i64*, !dbg !2706
  %20 = load i64, i64* %i22, align 8, !dbg !2706
  %or23 = or i64 %or20, %20, !dbg !2707
  %21 = load i16*, i16** %v.addr, align 8, !dbg !2708
  %arrayidx24 = getelementptr inbounds i16, i16* %21, i64 12, !dbg !2708
  %22 = bitcast i16* %arrayidx24 to %union.x264_union64_t*, !dbg !2708
  %i25 = bitcast %union.x264_union64_t* %22 to i64*, !dbg !2708
  %23 = load i64, i64* %i25, align 8, !dbg !2708
  %or26 = or i64 %or23, %23, !dbg !2709
  %tobool27 = icmp ne i64 %or26, 0, !dbg !2710
  %lnot28 = xor i1 %tobool27, true, !dbg !2710
  %lnot30 = xor i1 %lnot28, true, !dbg !2711
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !2711
  store i32 %lnot.ext31, i32* %retval, align 4, !dbg !2712
  br label %return, !dbg !2712

if.else32:                                        ; preds = %if.else13
  call void @llvm.dbg.declare(metadata i32* %i33, metadata !2713, metadata !DIExpression()), !dbg !2716
  store i32 0, i32* %i33, align 4, !dbg !2716
  br label %for.cond, !dbg !2717

for.cond:                                         ; preds = %for.inc, %if.else32
  %24 = load i32, i32* %i33, align 4, !dbg !2718
  %25 = load i32, i32* %i_count.addr, align 4, !dbg !2720
  %cmp34 = icmp slt i32 %24, %25, !dbg !2721
  br i1 %cmp34, label %for.body, label %for.end, !dbg !2722

for.body:                                         ; preds = %for.cond
  %26 = load i16*, i16** %v.addr, align 8, !dbg !2723
  %27 = load i32, i32* %i33, align 4, !dbg !2723
  %idxprom = sext i32 %27 to i64, !dbg !2723
  %arrayidx35 = getelementptr inbounds i16, i16* %26, i64 %idxprom, !dbg !2723
  %28 = bitcast i16* %arrayidx35 to %union.x264_union64_t*, !dbg !2723
  %i36 = bitcast %union.x264_union64_t* %28 to i64*, !dbg !2723
  %29 = load i64, i64* %i36, align 8, !dbg !2723
  %tobool37 = icmp ne i64 %29, 0, !dbg !2723
  br i1 %tobool37, label %if.then38, label %if.end, !dbg !2725

if.then38:                                        ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !2726
  br label %return, !dbg !2726

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2723

for.inc:                                          ; preds = %if.end
  %30 = load i32, i32* %i33, align 4, !dbg !2727
  %add = add nsw i32 %30, 4, !dbg !2727
  store i32 %add, i32* %i33, align 4, !dbg !2727
  br label %for.cond, !dbg !2728, !llvm.loop !2729

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2731
  br label %return, !dbg !2731

return:                                           ; preds = %for.end, %if.then38, %if.then15, %if.then3, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !2732
  ret i32 %31, !dbg !2732
}

; Function Attrs: noinline nounwind uwtable
define internal void @dct2x2dc(i16* %d, [16 x i16]* %dct4x4) #0 !dbg !2733 {
entry:
  %d.addr = alloca i16*, align 8
  %dct4x4.addr = alloca [16 x i16]*, align 8
  %d0 = alloca i32, align 4
  %d1 = alloca i32, align 4
  %d2 = alloca i32, align 4
  %d3 = alloca i32, align 4
  store i16* %d, i16** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %d.addr, metadata !2736, metadata !DIExpression()), !dbg !2737
  store [16 x i16]* %dct4x4, [16 x i16]** %dct4x4.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i16]** %dct4x4.addr, metadata !2738, metadata !DIExpression()), !dbg !2739
  call void @llvm.dbg.declare(metadata i32* %d0, metadata !2740, metadata !DIExpression()), !dbg !2741
  %0 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2742
  %arrayidx = getelementptr inbounds [16 x i16], [16 x i16]* %0, i64 0, !dbg !2742
  %arrayidx1 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx, i64 0, i64 0, !dbg !2742
  %1 = load i16, i16* %arrayidx1, align 2, !dbg !2742
  %conv = sext i16 %1 to i32, !dbg !2742
  %2 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2743
  %arrayidx2 = getelementptr inbounds [16 x i16], [16 x i16]* %2, i64 1, !dbg !2743
  %arrayidx3 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0, !dbg !2743
  %3 = load i16, i16* %arrayidx3, align 2, !dbg !2743
  %conv4 = sext i16 %3 to i32, !dbg !2743
  %add = add nsw i32 %conv, %conv4, !dbg !2744
  store i32 %add, i32* %d0, align 4, !dbg !2741
  call void @llvm.dbg.declare(metadata i32* %d1, metadata !2745, metadata !DIExpression()), !dbg !2746
  %4 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2747
  %arrayidx5 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 2, !dbg !2747
  %arrayidx6 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx5, i64 0, i64 0, !dbg !2747
  %5 = load i16, i16* %arrayidx6, align 2, !dbg !2747
  %conv7 = sext i16 %5 to i32, !dbg !2747
  %6 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2748
  %arrayidx8 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 3, !dbg !2748
  %arrayidx9 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx8, i64 0, i64 0, !dbg !2748
  %7 = load i16, i16* %arrayidx9, align 2, !dbg !2748
  %conv10 = sext i16 %7 to i32, !dbg !2748
  %add11 = add nsw i32 %conv7, %conv10, !dbg !2749
  store i32 %add11, i32* %d1, align 4, !dbg !2746
  call void @llvm.dbg.declare(metadata i32* %d2, metadata !2750, metadata !DIExpression()), !dbg !2751
  %8 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2752
  %arrayidx12 = getelementptr inbounds [16 x i16], [16 x i16]* %8, i64 0, !dbg !2752
  %arrayidx13 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx12, i64 0, i64 0, !dbg !2752
  %9 = load i16, i16* %arrayidx13, align 2, !dbg !2752
  %conv14 = sext i16 %9 to i32, !dbg !2752
  %10 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2753
  %arrayidx15 = getelementptr inbounds [16 x i16], [16 x i16]* %10, i64 1, !dbg !2753
  %arrayidx16 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx15, i64 0, i64 0, !dbg !2753
  %11 = load i16, i16* %arrayidx16, align 2, !dbg !2753
  %conv17 = sext i16 %11 to i32, !dbg !2753
  %sub = sub nsw i32 %conv14, %conv17, !dbg !2754
  store i32 %sub, i32* %d2, align 4, !dbg !2751
  call void @llvm.dbg.declare(metadata i32* %d3, metadata !2755, metadata !DIExpression()), !dbg !2756
  %12 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2757
  %arrayidx18 = getelementptr inbounds [16 x i16], [16 x i16]* %12, i64 2, !dbg !2757
  %arrayidx19 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx18, i64 0, i64 0, !dbg !2757
  %13 = load i16, i16* %arrayidx19, align 2, !dbg !2757
  %conv20 = sext i16 %13 to i32, !dbg !2757
  %14 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2758
  %arrayidx21 = getelementptr inbounds [16 x i16], [16 x i16]* %14, i64 3, !dbg !2758
  %arrayidx22 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx21, i64 0, i64 0, !dbg !2758
  %15 = load i16, i16* %arrayidx22, align 2, !dbg !2758
  %conv23 = sext i16 %15 to i32, !dbg !2758
  %sub24 = sub nsw i32 %conv20, %conv23, !dbg !2759
  store i32 %sub24, i32* %d3, align 4, !dbg !2756
  %16 = load i32, i32* %d0, align 4, !dbg !2760
  %17 = load i32, i32* %d1, align 4, !dbg !2761
  %add25 = add nsw i32 %16, %17, !dbg !2762
  %conv26 = trunc i32 %add25 to i16, !dbg !2760
  %18 = load i16*, i16** %d.addr, align 8, !dbg !2763
  %arrayidx27 = getelementptr inbounds i16, i16* %18, i64 0, !dbg !2763
  store i16 %conv26, i16* %arrayidx27, align 2, !dbg !2764
  %19 = load i32, i32* %d2, align 4, !dbg !2765
  %20 = load i32, i32* %d3, align 4, !dbg !2766
  %add28 = add nsw i32 %19, %20, !dbg !2767
  %conv29 = trunc i32 %add28 to i16, !dbg !2765
  %21 = load i16*, i16** %d.addr, align 8, !dbg !2768
  %arrayidx30 = getelementptr inbounds i16, i16* %21, i64 2, !dbg !2768
  store i16 %conv29, i16* %arrayidx30, align 2, !dbg !2769
  %22 = load i32, i32* %d0, align 4, !dbg !2770
  %23 = load i32, i32* %d1, align 4, !dbg !2771
  %sub31 = sub nsw i32 %22, %23, !dbg !2772
  %conv32 = trunc i32 %sub31 to i16, !dbg !2770
  %24 = load i16*, i16** %d.addr, align 8, !dbg !2773
  %arrayidx33 = getelementptr inbounds i16, i16* %24, i64 1, !dbg !2773
  store i16 %conv32, i16* %arrayidx33, align 2, !dbg !2774
  %25 = load i32, i32* %d2, align 4, !dbg !2775
  %26 = load i32, i32* %d3, align 4, !dbg !2776
  %sub34 = sub nsw i32 %25, %26, !dbg !2777
  %conv35 = trunc i32 %sub34 to i16, !dbg !2775
  %27 = load i16*, i16** %d.addr, align 8, !dbg !2778
  %arrayidx36 = getelementptr inbounds i16, i16* %27, i64 3, !dbg !2778
  store i16 %conv35, i16* %arrayidx36, align 2, !dbg !2779
  %28 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2780
  %arrayidx37 = getelementptr inbounds [16 x i16], [16 x i16]* %28, i64 0, !dbg !2780
  %arrayidx38 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx37, i64 0, i64 0, !dbg !2780
  store i16 0, i16* %arrayidx38, align 2, !dbg !2781
  %29 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2782
  %arrayidx39 = getelementptr inbounds [16 x i16], [16 x i16]* %29, i64 1, !dbg !2782
  %arrayidx40 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx39, i64 0, i64 0, !dbg !2782
  store i16 0, i16* %arrayidx40, align 2, !dbg !2783
  %30 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2784
  %arrayidx41 = getelementptr inbounds [16 x i16], [16 x i16]* %30, i64 2, !dbg !2784
  %arrayidx42 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx41, i64 0, i64 0, !dbg !2784
  store i16 0, i16* %arrayidx42, align 2, !dbg !2785
  %31 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2786
  %arrayidx43 = getelementptr inbounds [16 x i16], [16 x i16]* %31, i64 3, !dbg !2786
  %arrayidx44 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx43, i64 0, i64 0, !dbg !2786
  store i16 0, i16* %arrayidx44, align 2, !dbg !2787
  ret void, !dbg !2788
}

declare dso_local i32 @x264_quant_4x4_trellis(%struct.x264_t*, i16*, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @idct_dequant_2x2_dc(i16* %dct, [16 x i16]* %dct4x4, [16 x i32]* %dequant_mf, i32 %i_qp) #0 !dbg !2789 {
entry:
  %dct.addr = alloca i16*, align 8
  %dct4x4.addr = alloca [16 x i16]*, align 8
  %dequant_mf.addr = alloca [16 x i32]*, align 8
  %i_qp.addr = alloca i32, align 4
  %d0 = alloca i32, align 4
  %d1 = alloca i32, align 4
  %d2 = alloca i32, align 4
  %d3 = alloca i32, align 4
  %dmf = alloca i32, align 4
  store i16* %dct, i16** %dct.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dct.addr, metadata !2792, metadata !DIExpression()), !dbg !2793
  store [16 x i16]* %dct4x4, [16 x i16]** %dct4x4.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i16]** %dct4x4.addr, metadata !2794, metadata !DIExpression()), !dbg !2795
  store [16 x i32]* %dequant_mf, [16 x i32]** %dequant_mf.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i32]** %dequant_mf.addr, metadata !2796, metadata !DIExpression()), !dbg !2797
  store i32 %i_qp, i32* %i_qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_qp.addr, metadata !2798, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.declare(metadata i32* %d0, metadata !2800, metadata !DIExpression()), !dbg !2801
  %0 = load i16*, i16** %dct.addr, align 8, !dbg !2801
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !2801
  %1 = load i16, i16* %arrayidx, align 2, !dbg !2801
  %conv = sext i16 %1 to i32, !dbg !2801
  %2 = load i16*, i16** %dct.addr, align 8, !dbg !2801
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 1, !dbg !2801
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !2801
  %conv2 = sext i16 %3 to i32, !dbg !2801
  %add = add nsw i32 %conv, %conv2, !dbg !2801
  store i32 %add, i32* %d0, align 4, !dbg !2801
  call void @llvm.dbg.declare(metadata i32* %d1, metadata !2802, metadata !DIExpression()), !dbg !2801
  %4 = load i16*, i16** %dct.addr, align 8, !dbg !2801
  %arrayidx3 = getelementptr inbounds i16, i16* %4, i64 2, !dbg !2801
  %5 = load i16, i16* %arrayidx3, align 2, !dbg !2801
  %conv4 = sext i16 %5 to i32, !dbg !2801
  %6 = load i16*, i16** %dct.addr, align 8, !dbg !2801
  %arrayidx5 = getelementptr inbounds i16, i16* %6, i64 3, !dbg !2801
  %7 = load i16, i16* %arrayidx5, align 2, !dbg !2801
  %conv6 = sext i16 %7 to i32, !dbg !2801
  %add7 = add nsw i32 %conv4, %conv6, !dbg !2801
  store i32 %add7, i32* %d1, align 4, !dbg !2801
  call void @llvm.dbg.declare(metadata i32* %d2, metadata !2803, metadata !DIExpression()), !dbg !2801
  %8 = load i16*, i16** %dct.addr, align 8, !dbg !2801
  %arrayidx8 = getelementptr inbounds i16, i16* %8, i64 0, !dbg !2801
  %9 = load i16, i16* %arrayidx8, align 2, !dbg !2801
  %conv9 = sext i16 %9 to i32, !dbg !2801
  %10 = load i16*, i16** %dct.addr, align 8, !dbg !2801
  %arrayidx10 = getelementptr inbounds i16, i16* %10, i64 1, !dbg !2801
  %11 = load i16, i16* %arrayidx10, align 2, !dbg !2801
  %conv11 = sext i16 %11 to i32, !dbg !2801
  %sub = sub nsw i32 %conv9, %conv11, !dbg !2801
  store i32 %sub, i32* %d2, align 4, !dbg !2801
  call void @llvm.dbg.declare(metadata i32* %d3, metadata !2804, metadata !DIExpression()), !dbg !2801
  %12 = load i16*, i16** %dct.addr, align 8, !dbg !2801
  %arrayidx12 = getelementptr inbounds i16, i16* %12, i64 2, !dbg !2801
  %13 = load i16, i16* %arrayidx12, align 2, !dbg !2801
  %conv13 = sext i16 %13 to i32, !dbg !2801
  %14 = load i16*, i16** %dct.addr, align 8, !dbg !2801
  %arrayidx14 = getelementptr inbounds i16, i16* %14, i64 3, !dbg !2801
  %15 = load i16, i16* %arrayidx14, align 2, !dbg !2801
  %conv15 = sext i16 %15 to i32, !dbg !2801
  %sub16 = sub nsw i32 %conv13, %conv15, !dbg !2801
  store i32 %sub16, i32* %d3, align 4, !dbg !2801
  call void @llvm.dbg.declare(metadata i32* %dmf, metadata !2805, metadata !DIExpression()), !dbg !2801
  %16 = load [16 x i32]*, [16 x i32]** %dequant_mf.addr, align 8, !dbg !2801
  %17 = load i32, i32* %i_qp.addr, align 4, !dbg !2801
  %rem = srem i32 %17, 6, !dbg !2801
  %idxprom = sext i32 %rem to i64, !dbg !2801
  %arrayidx17 = getelementptr inbounds [16 x i32], [16 x i32]* %16, i64 %idxprom, !dbg !2801
  %arrayidx18 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx17, i64 0, i64 0, !dbg !2801
  %18 = load i32, i32* %arrayidx18, align 4, !dbg !2801
  %19 = load i32, i32* %i_qp.addr, align 4, !dbg !2801
  %div = sdiv i32 %19, 6, !dbg !2801
  %shl = shl i32 %18, %div, !dbg !2801
  store i32 %shl, i32* %dmf, align 4, !dbg !2801
  %20 = load i32, i32* %d0, align 4, !dbg !2806
  %21 = load i32, i32* %d1, align 4, !dbg !2807
  %add19 = add nsw i32 %20, %21, !dbg !2808
  %22 = load i32, i32* %dmf, align 4, !dbg !2809
  %mul = mul nsw i32 %add19, %22, !dbg !2810
  %shr = ashr i32 %mul, 5, !dbg !2811
  %conv20 = trunc i32 %shr to i16, !dbg !2812
  %23 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2813
  %arrayidx21 = getelementptr inbounds [16 x i16], [16 x i16]* %23, i64 0, !dbg !2813
  %arrayidx22 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx21, i64 0, i64 0, !dbg !2813
  store i16 %conv20, i16* %arrayidx22, align 2, !dbg !2814
  %24 = load i32, i32* %d0, align 4, !dbg !2815
  %25 = load i32, i32* %d1, align 4, !dbg !2816
  %sub23 = sub nsw i32 %24, %25, !dbg !2817
  %26 = load i32, i32* %dmf, align 4, !dbg !2818
  %mul24 = mul nsw i32 %sub23, %26, !dbg !2819
  %shr25 = ashr i32 %mul24, 5, !dbg !2820
  %conv26 = trunc i32 %shr25 to i16, !dbg !2821
  %27 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2822
  %arrayidx27 = getelementptr inbounds [16 x i16], [16 x i16]* %27, i64 1, !dbg !2822
  %arrayidx28 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx27, i64 0, i64 0, !dbg !2822
  store i16 %conv26, i16* %arrayidx28, align 2, !dbg !2823
  %28 = load i32, i32* %d2, align 4, !dbg !2824
  %29 = load i32, i32* %d3, align 4, !dbg !2825
  %add29 = add nsw i32 %28, %29, !dbg !2826
  %30 = load i32, i32* %dmf, align 4, !dbg !2827
  %mul30 = mul nsw i32 %add29, %30, !dbg !2828
  %shr31 = ashr i32 %mul30, 5, !dbg !2829
  %conv32 = trunc i32 %shr31 to i16, !dbg !2830
  %31 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2831
  %arrayidx33 = getelementptr inbounds [16 x i16], [16 x i16]* %31, i64 2, !dbg !2831
  %arrayidx34 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx33, i64 0, i64 0, !dbg !2831
  store i16 %conv32, i16* %arrayidx34, align 2, !dbg !2832
  %32 = load i32, i32* %d2, align 4, !dbg !2833
  %33 = load i32, i32* %d3, align 4, !dbg !2834
  %sub35 = sub nsw i32 %32, %33, !dbg !2835
  %34 = load i32, i32* %dmf, align 4, !dbg !2836
  %mul36 = mul nsw i32 %sub35, %34, !dbg !2837
  %shr37 = ashr i32 %mul36, 5, !dbg !2838
  %conv38 = trunc i32 %shr37 to i16, !dbg !2839
  %35 = load [16 x i16]*, [16 x i16]** %dct4x4.addr, align 8, !dbg !2840
  %arrayidx39 = getelementptr inbounds [16 x i16], [16 x i16]* %35, i64 3, !dbg !2840
  %arrayidx40 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx39, i64 0, i64 0, !dbg !2840
  store i16 %conv38, i16* %arrayidx40, align 2, !dbg !2841
  ret void, !dbg !2842
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_predict_lossless_8x8_chroma(%struct.x264_t* %h, i32 %i_mode) #0 !dbg !2843 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %i_mode.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !2846, metadata !DIExpression()), !dbg !2847
  store i32 %i_mode, i32* %i_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_mode.addr, metadata !2848, metadata !DIExpression()), !dbg !2849
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !2850, metadata !DIExpression()), !dbg !2851
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2852
  %fenc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 44, !dbg !2853
  %1 = load %struct.x264_frame*, %struct.x264_frame** %fenc, align 8, !dbg !2853
  %i_stride = getelementptr inbounds %struct.x264_frame, %struct.x264_frame* %1, i32 0, i32 24, !dbg !2854
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride, i64 0, i64 1, !dbg !2852
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2852
  %3 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2855
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %3, i32 0, i32 55, !dbg !2856
  %b_interlaced = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 17, !dbg !2857
  %4 = load i32, i32* %b_interlaced, align 4, !dbg !2857
  %shl = shl i32 %2, %4, !dbg !2858
  store i32 %shl, i32* %stride, align 4, !dbg !2851
  %5 = load i32, i32* %i_mode.addr, align 4, !dbg !2859
  %cmp = icmp eq i32 %5, 2, !dbg !2861
  br i1 %cmp, label %if.then, label %if.else, !dbg !2862

if.then:                                          ; preds = %entry
  %6 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2863
  %mc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %6, i32 0, i32 70, !dbg !2865
  %copy = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc, i32 0, i32 4, !dbg !2866
  %arrayidx1 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy, i64 0, i64 3, !dbg !2863
  %7 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx1, align 8, !dbg !2863
  %8 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2867
  %mb2 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %8, i32 0, i32 55, !dbg !2868
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb2, i32 0, i32 66, !dbg !2869
  %p_fdec = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 18, !dbg !2870
  %arrayidx3 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec, i64 0, i64 1, !dbg !2867
  %9 = load i8*, i8** %arrayidx3, align 8, !dbg !2867
  %10 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2871
  %mb4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %10, i32 0, i32 55, !dbg !2872
  %pic5 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb4, i32 0, i32 66, !dbg !2873
  %p_fenc_plane = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic5, i32 0, i32 17, !dbg !2874
  %arrayidx6 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc_plane, i64 0, i64 1, !dbg !2871
  %11 = load i8*, i8** %arrayidx6, align 8, !dbg !2871
  %12 = load i32, i32* %stride, align 4, !dbg !2875
  %idx.ext = sext i32 %12 to i64, !dbg !2876
  %idx.neg = sub i64 0, %idx.ext, !dbg !2876
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.neg, !dbg !2876
  %13 = load i32, i32* %stride, align 4, !dbg !2877
  call void %7(i8* %9, i32 32, i8* %add.ptr, i32 %13, i32 8), !dbg !2863
  %14 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2878
  %mc7 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %14, i32 0, i32 70, !dbg !2879
  %copy8 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc7, i32 0, i32 4, !dbg !2880
  %arrayidx9 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy8, i64 0, i64 3, !dbg !2878
  %15 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx9, align 8, !dbg !2878
  %16 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2881
  %mb10 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %16, i32 0, i32 55, !dbg !2882
  %pic11 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb10, i32 0, i32 66, !dbg !2883
  %p_fdec12 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic11, i32 0, i32 18, !dbg !2884
  %arrayidx13 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec12, i64 0, i64 2, !dbg !2881
  %17 = load i8*, i8** %arrayidx13, align 16, !dbg !2881
  %18 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2885
  %mb14 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %18, i32 0, i32 55, !dbg !2886
  %pic15 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb14, i32 0, i32 66, !dbg !2887
  %p_fenc_plane16 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic15, i32 0, i32 17, !dbg !2888
  %arrayidx17 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc_plane16, i64 0, i64 2, !dbg !2885
  %19 = load i8*, i8** %arrayidx17, align 8, !dbg !2885
  %20 = load i32, i32* %stride, align 4, !dbg !2889
  %idx.ext18 = sext i32 %20 to i64, !dbg !2890
  %idx.neg19 = sub i64 0, %idx.ext18, !dbg !2890
  %add.ptr20 = getelementptr inbounds i8, i8* %19, i64 %idx.neg19, !dbg !2890
  %21 = load i32, i32* %stride, align 4, !dbg !2891
  call void %15(i8* %17, i32 32, i8* %add.ptr20, i32 %21, i32 8), !dbg !2878
  br label %if.end60, !dbg !2892

if.else:                                          ; preds = %entry
  %22 = load i32, i32* %i_mode.addr, align 4, !dbg !2893
  %cmp21 = icmp eq i32 %22, 1, !dbg !2895
  br i1 %cmp21, label %if.then22, label %if.else47, !dbg !2896

if.then22:                                        ; preds = %if.else
  %23 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2897
  %mc23 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %23, i32 0, i32 70, !dbg !2899
  %copy24 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc23, i32 0, i32 4, !dbg !2900
  %arrayidx25 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy24, i64 0, i64 3, !dbg !2897
  %24 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx25, align 8, !dbg !2897
  %25 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2901
  %mb26 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %25, i32 0, i32 55, !dbg !2902
  %pic27 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb26, i32 0, i32 66, !dbg !2903
  %p_fdec28 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic27, i32 0, i32 18, !dbg !2904
  %arrayidx29 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec28, i64 0, i64 1, !dbg !2901
  %26 = load i8*, i8** %arrayidx29, align 8, !dbg !2901
  %27 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2905
  %mb30 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %27, i32 0, i32 55, !dbg !2906
  %pic31 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb30, i32 0, i32 66, !dbg !2907
  %p_fenc_plane32 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic31, i32 0, i32 17, !dbg !2908
  %arrayidx33 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc_plane32, i64 0, i64 1, !dbg !2905
  %28 = load i8*, i8** %arrayidx33, align 8, !dbg !2905
  %add.ptr34 = getelementptr inbounds i8, i8* %28, i64 -1, !dbg !2909
  %29 = load i32, i32* %stride, align 4, !dbg !2910
  call void %24(i8* %26, i32 32, i8* %add.ptr34, i32 %29, i32 8), !dbg !2897
  %30 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2911
  %mc35 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %30, i32 0, i32 70, !dbg !2912
  %copy36 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc35, i32 0, i32 4, !dbg !2913
  %arrayidx37 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy36, i64 0, i64 3, !dbg !2911
  %31 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx37, align 8, !dbg !2911
  %32 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2914
  %mb38 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %32, i32 0, i32 55, !dbg !2915
  %pic39 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb38, i32 0, i32 66, !dbg !2916
  %p_fdec40 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic39, i32 0, i32 18, !dbg !2917
  %arrayidx41 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec40, i64 0, i64 2, !dbg !2914
  %33 = load i8*, i8** %arrayidx41, align 16, !dbg !2914
  %34 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2918
  %mb42 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %34, i32 0, i32 55, !dbg !2919
  %pic43 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb42, i32 0, i32 66, !dbg !2920
  %p_fenc_plane44 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic43, i32 0, i32 17, !dbg !2921
  %arrayidx45 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc_plane44, i64 0, i64 2, !dbg !2918
  %35 = load i8*, i8** %arrayidx45, align 8, !dbg !2918
  %add.ptr46 = getelementptr inbounds i8, i8* %35, i64 -1, !dbg !2922
  %36 = load i32, i32* %stride, align 4, !dbg !2923
  call void %31(i8* %33, i32 32, i8* %add.ptr46, i32 %36, i32 8), !dbg !2911
  br label %if.end, !dbg !2924

if.else47:                                        ; preds = %if.else
  %37 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2925
  %predict_8x8c = getelementptr inbounds %struct.x264_t, %struct.x264_t* %37, i32 0, i32 65, !dbg !2927
  %38 = load i32, i32* %i_mode.addr, align 4, !dbg !2928
  %idxprom = sext i32 %38 to i64, !dbg !2925
  %arrayidx48 = getelementptr inbounds [7 x void (i8*)*], [7 x void (i8*)*]* %predict_8x8c, i64 0, i64 %idxprom, !dbg !2925
  %39 = load void (i8*)*, void (i8*)** %arrayidx48, align 8, !dbg !2925
  %40 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2929
  %mb49 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %40, i32 0, i32 55, !dbg !2930
  %pic50 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb49, i32 0, i32 66, !dbg !2931
  %p_fdec51 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic50, i32 0, i32 18, !dbg !2932
  %arrayidx52 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec51, i64 0, i64 1, !dbg !2929
  %41 = load i8*, i8** %arrayidx52, align 8, !dbg !2929
  call void %39(i8* %41), !dbg !2925
  %42 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2933
  %predict_8x8c53 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %42, i32 0, i32 65, !dbg !2934
  %43 = load i32, i32* %i_mode.addr, align 4, !dbg !2935
  %idxprom54 = sext i32 %43 to i64, !dbg !2933
  %arrayidx55 = getelementptr inbounds [7 x void (i8*)*], [7 x void (i8*)*]* %predict_8x8c53, i64 0, i64 %idxprom54, !dbg !2933
  %44 = load void (i8*)*, void (i8*)** %arrayidx55, align 8, !dbg !2933
  %45 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2936
  %mb56 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %45, i32 0, i32 55, !dbg !2937
  %pic57 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb56, i32 0, i32 66, !dbg !2938
  %p_fdec58 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic57, i32 0, i32 18, !dbg !2939
  %arrayidx59 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec58, i64 0, i64 2, !dbg !2936
  %46 = load i8*, i8** %arrayidx59, align 16, !dbg !2936
  call void %44(i8* %46), !dbg !2933
  br label %if.end

if.end:                                           ; preds = %if.else47, %if.then22
  br label %if.end60

if.end60:                                         ; preds = %if.end, %if.then
  ret void, !dbg !2940
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_predict_lossless_4x4(%struct.x264_t* %h, i8* %p_dst, i32 %idx, i32 %i_mode) #0 !dbg !2941 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %p_dst.addr = alloca i8*, align 8
  %idx.addr = alloca i32, align 4
  %i_mode.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  %p_src = alloca i8*, align 8
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !2944, metadata !DIExpression()), !dbg !2945
  store i8* %p_dst, i8** %p_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_dst.addr, metadata !2946, metadata !DIExpression()), !dbg !2947
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !2948, metadata !DIExpression()), !dbg !2949
  store i32 %i_mode, i32* %i_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_mode.addr, metadata !2950, metadata !DIExpression()), !dbg !2951
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !2952, metadata !DIExpression()), !dbg !2953
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2954
  %fenc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 44, !dbg !2955
  %1 = load %struct.x264_frame*, %struct.x264_frame** %fenc, align 8, !dbg !2955
  %i_stride = getelementptr inbounds %struct.x264_frame, %struct.x264_frame* %1, i32 0, i32 24, !dbg !2956
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride, i64 0, i64 0, !dbg !2954
  %2 = load i32, i32* %arrayidx, align 8, !dbg !2954
  %3 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2957
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %3, i32 0, i32 55, !dbg !2958
  %b_interlaced = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 17, !dbg !2959
  %4 = load i32, i32* %b_interlaced, align 4, !dbg !2959
  %shl = shl i32 %2, %4, !dbg !2960
  store i32 %shl, i32* %stride, align 4, !dbg !2953
  call void @llvm.dbg.declare(metadata i8** %p_src, metadata !2961, metadata !DIExpression()), !dbg !2962
  %5 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2963
  %mb1 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %5, i32 0, i32 55, !dbg !2964
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1, i32 0, i32 66, !dbg !2965
  %p_fenc_plane = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 17, !dbg !2966
  %arrayidx2 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc_plane, i64 0, i64 0, !dbg !2963
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !2963
  %7 = load i32, i32* %idx.addr, align 4, !dbg !2967
  %idxprom = sext i32 %7 to i64, !dbg !2968
  %arrayidx3 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_x, i64 0, i64 %idxprom, !dbg !2968
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !2968
  %conv = zext i8 %8 to i32, !dbg !2968
  %mul = mul nsw i32 %conv, 4, !dbg !2969
  %idx.ext = sext i32 %mul to i64, !dbg !2970
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !2970
  %9 = load i32, i32* %idx.addr, align 4, !dbg !2971
  %idxprom4 = sext i32 %9 to i64, !dbg !2972
  %arrayidx5 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_y, i64 0, i64 %idxprom4, !dbg !2972
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !2972
  %conv6 = zext i8 %10 to i32, !dbg !2972
  %mul7 = mul nsw i32 %conv6, 4, !dbg !2973
  %11 = load i32, i32* %stride, align 4, !dbg !2974
  %mul8 = mul nsw i32 %mul7, %11, !dbg !2975
  %idx.ext9 = sext i32 %mul8 to i64, !dbg !2976
  %add.ptr10 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext9, !dbg !2976
  store i8* %add.ptr10, i8** %p_src, align 8, !dbg !2962
  %12 = load i32, i32* %i_mode.addr, align 4, !dbg !2977
  %cmp = icmp eq i32 %12, 0, !dbg !2979
  br i1 %cmp, label %if.then, label %if.else, !dbg !2980

if.then:                                          ; preds = %entry
  %13 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2981
  %mc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %13, i32 0, i32 70, !dbg !2982
  %copy = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc, i32 0, i32 4, !dbg !2983
  %arrayidx12 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy, i64 0, i64 6, !dbg !2981
  %14 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx12, align 8, !dbg !2981
  %15 = load i8*, i8** %p_dst.addr, align 8, !dbg !2984
  %16 = load i8*, i8** %p_src, align 8, !dbg !2985
  %17 = load i32, i32* %stride, align 4, !dbg !2986
  %idx.ext13 = sext i32 %17 to i64, !dbg !2987
  %idx.neg = sub i64 0, %idx.ext13, !dbg !2987
  %add.ptr14 = getelementptr inbounds i8, i8* %16, i64 %idx.neg, !dbg !2987
  %18 = load i32, i32* %stride, align 4, !dbg !2988
  call void %14(i8* %15, i32 32, i8* %add.ptr14, i32 %18, i32 4), !dbg !2981
  br label %if.end25, !dbg !2981

if.else:                                          ; preds = %entry
  %19 = load i32, i32* %i_mode.addr, align 4, !dbg !2989
  %cmp15 = icmp eq i32 %19, 1, !dbg !2991
  br i1 %cmp15, label %if.then17, label %if.else22, !dbg !2992

if.then17:                                        ; preds = %if.else
  %20 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !2993
  %mc18 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %20, i32 0, i32 70, !dbg !2994
  %copy19 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc18, i32 0, i32 4, !dbg !2995
  %arrayidx20 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy19, i64 0, i64 6, !dbg !2993
  %21 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx20, align 8, !dbg !2993
  %22 = load i8*, i8** %p_dst.addr, align 8, !dbg !2996
  %23 = load i8*, i8** %p_src, align 8, !dbg !2997
  %add.ptr21 = getelementptr inbounds i8, i8* %23, i64 -1, !dbg !2998
  %24 = load i32, i32* %stride, align 4, !dbg !2999
  call void %21(i8* %22, i32 32, i8* %add.ptr21, i32 %24, i32 4), !dbg !2993
  br label %if.end, !dbg !2993

if.else22:                                        ; preds = %if.else
  %25 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3000
  %predict_4x4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %25, i32 0, i32 67, !dbg !3001
  %26 = load i32, i32* %i_mode.addr, align 4, !dbg !3002
  %idxprom23 = sext i32 %26 to i64, !dbg !3000
  %arrayidx24 = getelementptr inbounds [12 x void (i8*)*], [12 x void (i8*)*]* %predict_4x4, i64 0, i64 %idxprom23, !dbg !3000
  %27 = load void (i8*)*, void (i8*)** %arrayidx24, align 8, !dbg !3000
  %28 = load i8*, i8** %p_dst.addr, align 8, !dbg !3003
  call void %27(i8* %28), !dbg !3000
  br label %if.end

if.end:                                           ; preds = %if.else22, %if.then17
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then
  ret void, !dbg !3004
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_predict_lossless_8x8(%struct.x264_t* %h, i8* %p_dst, i32 %idx, i32 %i_mode, i8* %edge) #0 !dbg !3005 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %p_dst.addr = alloca i8*, align 8
  %idx.addr = alloca i32, align 4
  %i_mode.addr = alloca i32, align 4
  %edge.addr = alloca i8*, align 8
  %stride = alloca i32, align 4
  %p_src = alloca i8*, align 8
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !3008, metadata !DIExpression()), !dbg !3009
  store i8* %p_dst, i8** %p_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_dst.addr, metadata !3010, metadata !DIExpression()), !dbg !3011
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !3012, metadata !DIExpression()), !dbg !3013
  store i32 %i_mode, i32* %i_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_mode.addr, metadata !3014, metadata !DIExpression()), !dbg !3015
  store i8* %edge, i8** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %edge.addr, metadata !3016, metadata !DIExpression()), !dbg !3017
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !3018, metadata !DIExpression()), !dbg !3019
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3020
  %fenc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 44, !dbg !3021
  %1 = load %struct.x264_frame*, %struct.x264_frame** %fenc, align 8, !dbg !3021
  %i_stride = getelementptr inbounds %struct.x264_frame, %struct.x264_frame* %1, i32 0, i32 24, !dbg !3022
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride, i64 0, i64 0, !dbg !3020
  %2 = load i32, i32* %arrayidx, align 8, !dbg !3020
  %3 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3023
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %3, i32 0, i32 55, !dbg !3024
  %b_interlaced = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 17, !dbg !3025
  %4 = load i32, i32* %b_interlaced, align 4, !dbg !3025
  %shl = shl i32 %2, %4, !dbg !3026
  store i32 %shl, i32* %stride, align 4, !dbg !3019
  call void @llvm.dbg.declare(metadata i8** %p_src, metadata !3027, metadata !DIExpression()), !dbg !3028
  %5 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3029
  %mb1 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %5, i32 0, i32 55, !dbg !3030
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1, i32 0, i32 66, !dbg !3031
  %p_fenc_plane = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 17, !dbg !3032
  %arrayidx2 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc_plane, i64 0, i64 0, !dbg !3029
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !3029
  %7 = load i32, i32* %idx.addr, align 4, !dbg !3033
  %and = and i32 %7, 1, !dbg !3034
  %mul = mul nsw i32 %and, 8, !dbg !3035
  %idx.ext = sext i32 %mul to i64, !dbg !3036
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !3036
  %8 = load i32, i32* %idx.addr, align 4, !dbg !3037
  %shr = ashr i32 %8, 1, !dbg !3038
  %mul3 = mul nsw i32 %shr, 8, !dbg !3039
  %9 = load i32, i32* %stride, align 4, !dbg !3040
  %mul4 = mul nsw i32 %mul3, %9, !dbg !3041
  %idx.ext5 = sext i32 %mul4 to i64, !dbg !3042
  %add.ptr6 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext5, !dbg !3042
  store i8* %add.ptr6, i8** %p_src, align 8, !dbg !3028
  %10 = load i32, i32* %i_mode.addr, align 4, !dbg !3043
  %cmp = icmp eq i32 %10, 0, !dbg !3045
  br i1 %cmp, label %if.then, label %if.else, !dbg !3046

if.then:                                          ; preds = %entry
  %11 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3047
  %mc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %11, i32 0, i32 70, !dbg !3048
  %copy = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc, i32 0, i32 4, !dbg !3049
  %arrayidx7 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy, i64 0, i64 3, !dbg !3047
  %12 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx7, align 8, !dbg !3047
  %13 = load i8*, i8** %p_dst.addr, align 8, !dbg !3050
  %14 = load i8*, i8** %p_src, align 8, !dbg !3051
  %15 = load i32, i32* %stride, align 4, !dbg !3052
  %idx.ext8 = sext i32 %15 to i64, !dbg !3053
  %idx.neg = sub i64 0, %idx.ext8, !dbg !3053
  %add.ptr9 = getelementptr inbounds i8, i8* %14, i64 %idx.neg, !dbg !3053
  %16 = load i32, i32* %stride, align 4, !dbg !3054
  call void %12(i8* %13, i32 32, i8* %add.ptr9, i32 %16, i32 8), !dbg !3047
  br label %if.end18, !dbg !3047

if.else:                                          ; preds = %entry
  %17 = load i32, i32* %i_mode.addr, align 4, !dbg !3055
  %cmp10 = icmp eq i32 %17, 1, !dbg !3057
  br i1 %cmp10, label %if.then11, label %if.else16, !dbg !3058

if.then11:                                        ; preds = %if.else
  %18 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3059
  %mc12 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %18, i32 0, i32 70, !dbg !3060
  %copy13 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc12, i32 0, i32 4, !dbg !3061
  %arrayidx14 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy13, i64 0, i64 3, !dbg !3059
  %19 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx14, align 8, !dbg !3059
  %20 = load i8*, i8** %p_dst.addr, align 8, !dbg !3062
  %21 = load i8*, i8** %p_src, align 8, !dbg !3063
  %add.ptr15 = getelementptr inbounds i8, i8* %21, i64 -1, !dbg !3064
  %22 = load i32, i32* %stride, align 4, !dbg !3065
  call void %19(i8* %20, i32 32, i8* %add.ptr15, i32 %22, i32 8), !dbg !3059
  br label %if.end, !dbg !3059

if.else16:                                        ; preds = %if.else
  %23 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3066
  %predict_8x8 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %23, i32 0, i32 66, !dbg !3067
  %24 = load i32, i32* %i_mode.addr, align 4, !dbg !3068
  %idxprom = sext i32 %24 to i64, !dbg !3066
  %arrayidx17 = getelementptr inbounds [12 x void (i8*, i8*)*], [12 x void (i8*, i8*)*]* %predict_8x8, i64 0, i64 %idxprom, !dbg !3066
  %25 = load void (i8*, i8*)*, void (i8*, i8*)** %arrayidx17, align 8, !dbg !3066
  %26 = load i8*, i8** %p_dst.addr, align 8, !dbg !3069
  %27 = load i8*, i8** %edge.addr, align 8, !dbg !3070
  call void %25(i8* %26, i8* %27), !dbg !3066
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then11
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then
  ret void, !dbg !3071
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_predict_lossless_16x16(%struct.x264_t* %h, i32 %i_mode) #0 !dbg !3072 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %i_mode.addr = alloca i32, align 4
  %stride = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !3073, metadata !DIExpression()), !dbg !3074
  store i32 %i_mode, i32* %i_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_mode.addr, metadata !3075, metadata !DIExpression()), !dbg !3076
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !3077, metadata !DIExpression()), !dbg !3078
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3079
  %fenc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 44, !dbg !3080
  %1 = load %struct.x264_frame*, %struct.x264_frame** %fenc, align 8, !dbg !3080
  %i_stride = getelementptr inbounds %struct.x264_frame, %struct.x264_frame* %1, i32 0, i32 24, !dbg !3081
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride, i64 0, i64 0, !dbg !3079
  %2 = load i32, i32* %arrayidx, align 8, !dbg !3079
  %3 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3082
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %3, i32 0, i32 55, !dbg !3083
  %b_interlaced = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 17, !dbg !3084
  %4 = load i32, i32* %b_interlaced, align 4, !dbg !3084
  %shl = shl i32 %2, %4, !dbg !3085
  store i32 %shl, i32* %stride, align 4, !dbg !3078
  %5 = load i32, i32* %i_mode.addr, align 4, !dbg !3086
  %cmp = icmp eq i32 %5, 0, !dbg !3088
  br i1 %cmp, label %if.then, label %if.else, !dbg !3089

if.then:                                          ; preds = %entry
  %6 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3090
  %mc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %6, i32 0, i32 70, !dbg !3091
  %copy = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc, i32 0, i32 4, !dbg !3092
  %arrayidx1 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy, i64 0, i64 0, !dbg !3090
  %7 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx1, align 8, !dbg !3090
  %8 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3093
  %mb2 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %8, i32 0, i32 55, !dbg !3094
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb2, i32 0, i32 66, !dbg !3095
  %p_fdec = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 18, !dbg !3096
  %arrayidx3 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec, i64 0, i64 0, !dbg !3093
  %9 = load i8*, i8** %arrayidx3, align 16, !dbg !3093
  %10 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3097
  %mb4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %10, i32 0, i32 55, !dbg !3098
  %pic5 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb4, i32 0, i32 66, !dbg !3099
  %p_fenc_plane = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic5, i32 0, i32 17, !dbg !3100
  %arrayidx6 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc_plane, i64 0, i64 0, !dbg !3097
  %11 = load i8*, i8** %arrayidx6, align 8, !dbg !3097
  %12 = load i32, i32* %stride, align 4, !dbg !3101
  %idx.ext = sext i32 %12 to i64, !dbg !3102
  %idx.neg = sub i64 0, %idx.ext, !dbg !3102
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.neg, !dbg !3102
  %13 = load i32, i32* %stride, align 4, !dbg !3103
  call void %7(i8* %9, i32 32, i8* %add.ptr, i32 %13, i32 16), !dbg !3090
  br label %if.end25, !dbg !3090

if.else:                                          ; preds = %entry
  %14 = load i32, i32* %i_mode.addr, align 4, !dbg !3104
  %cmp7 = icmp eq i32 %14, 1, !dbg !3106
  br i1 %cmp7, label %if.then8, label %if.else19, !dbg !3107

if.then8:                                         ; preds = %if.else
  %15 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3108
  %mc9 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %15, i32 0, i32 70, !dbg !3109
  %copy_16x16_unaligned = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc9, i32 0, i32 5, !dbg !3110
  %16 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %copy_16x16_unaligned, align 8, !dbg !3110
  %17 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3111
  %mb10 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %17, i32 0, i32 55, !dbg !3112
  %pic11 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb10, i32 0, i32 66, !dbg !3113
  %p_fdec12 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic11, i32 0, i32 18, !dbg !3114
  %arrayidx13 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec12, i64 0, i64 0, !dbg !3111
  %18 = load i8*, i8** %arrayidx13, align 16, !dbg !3111
  %19 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3115
  %mb14 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %19, i32 0, i32 55, !dbg !3116
  %pic15 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb14, i32 0, i32 66, !dbg !3117
  %p_fenc_plane16 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic15, i32 0, i32 17, !dbg !3118
  %arrayidx17 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc_plane16, i64 0, i64 0, !dbg !3115
  %20 = load i8*, i8** %arrayidx17, align 8, !dbg !3115
  %add.ptr18 = getelementptr inbounds i8, i8* %20, i64 -1, !dbg !3119
  %21 = load i32, i32* %stride, align 4, !dbg !3120
  call void %16(i8* %18, i32 32, i8* %add.ptr18, i32 %21, i32 16), !dbg !3108
  br label %if.end, !dbg !3108

if.else19:                                        ; preds = %if.else
  %22 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3121
  %predict_16x16 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %22, i32 0, i32 64, !dbg !3122
  %23 = load i32, i32* %i_mode.addr, align 4, !dbg !3123
  %idxprom = sext i32 %23 to i64, !dbg !3121
  %arrayidx20 = getelementptr inbounds [7 x void (i8*)*], [7 x void (i8*)*]* %predict_16x16, i64 0, i64 %idxprom, !dbg !3121
  %24 = load void (i8*)*, void (i8*)** %arrayidx20, align 8, !dbg !3121
  %25 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3124
  %mb21 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %25, i32 0, i32 55, !dbg !3125
  %pic22 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb21, i32 0, i32 66, !dbg !3126
  %p_fdec23 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic22, i32 0, i32 18, !dbg !3127
  %arrayidx24 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec23, i64 0, i64 0, !dbg !3124
  %26 = load i8*, i8** %arrayidx24, align 16, !dbg !3124
  call void %24(i8* %26), !dbg !3121
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then8
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then
  ret void, !dbg !3128
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_macroblock_encode(%struct.x264_t* %h) #0 !dbg !3129 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %i_qp = alloca i32, align 4
  %b_decimate = alloca i32, align 4
  %b_force_no_skip = alloca i32, align 4
  %nz = alloca i32, align 4
  %i_mode = alloca i32, align 4
  %edge = alloca [33 x i8], align 16
  %i192 = alloca i32, align 4
  %p_dst = alloca i8*, align 8
  %i_mode207 = alloca i32, align 4
  %i313 = alloca i32, align 4
  %p_dst322 = alloca i8*, align 8
  %i_mode331 = alloca i32, align 4
  %i_decimate_mb = alloca i32, align 4
  %i8x8 = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %i4x4 = alloca i32, align 4
  %dct8x8 = alloca [4 x [64 x i16]], align 16
  %idx = alloca i32, align 4
  %i_decimate_8x8 = alloca i32, align 4
  %idx596 = alloca i32, align 4
  %dct4x4 = alloca [16 x [16 x i16]], align 16
  %i8x8691 = alloca i32, align 4
  %i_decimate_8x8696 = alloca i32, align 4
  %cbp = alloca i32, align 4
  %i4x4697 = alloca i32, align 4
  %idx702 = alloca i32, align 4
  %i8x8859 = alloca i32, align 4
  %i_mode918 = alloca i32, align 4
  %cbp961 = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !3132, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.declare(metadata i32* %i_qp, metadata !3134, metadata !DIExpression()), !dbg !3135
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3136
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 55, !dbg !3137
  %i_qp1 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 68, !dbg !3138
  %1 = load i32, i32* %i_qp1, align 16, !dbg !3138
  store i32 %1, i32* %i_qp, align 4, !dbg !3135
  call void @llvm.dbg.declare(metadata i32* %b_decimate, metadata !3139, metadata !DIExpression()), !dbg !3140
  %2 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3141
  %mb2 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %2, i32 0, i32 55, !dbg !3142
  %b_dct_decimate = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb2, i32 0, i32 14, !dbg !3143
  %3 = load i32, i32* %b_dct_decimate, align 8, !dbg !3143
  store i32 %3, i32* %b_decimate, align 4, !dbg !3140
  call void @llvm.dbg.declare(metadata i32* %b_force_no_skip, metadata !3144, metadata !DIExpression()), !dbg !3145
  store i32 0, i32* %b_force_no_skip, align 4, !dbg !3145
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !3146, metadata !DIExpression()), !dbg !3147
  %4 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3148
  %mb3 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %4, i32 0, i32 55, !dbg !3149
  %i_cbp_luma = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb3, i32 0, i32 57, !dbg !3150
  store i32 0, i32* %i_cbp_luma, align 8, !dbg !3151
  %5 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3152
  %mb4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %5, i32 0, i32 55, !dbg !3153
  %cache = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb4, i32 0, i32 67, !dbg !3154
  %non_zero_count = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache, i32 0, i32 2, !dbg !3155
  %6 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 24), align 16, !dbg !3156
  %idxprom = sext i32 %6 to i64, !dbg !3152
  %arrayidx = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count, i64 0, i64 %idxprom, !dbg !3152
  store i8 0, i8* %arrayidx, align 1, !dbg !3157
  %7 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3158
  %mb5 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %7, i32 0, i32 55, !dbg !3160
  %i_type = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb5, i32 0, i32 53, !dbg !3161
  %8 = load i32, i32* %i_type, align 8, !dbg !3161
  %cmp = icmp eq i32 %8, 3, !dbg !3162
  br i1 %cmp, label %if.then, label %if.end, !dbg !3163

if.then:                                          ; preds = %entry
  %9 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3164
  %mc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %9, i32 0, i32 70, !dbg !3166
  %copy = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc, i32 0, i32 4, !dbg !3167
  %arrayidx6 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy, i64 0, i64 0, !dbg !3164
  %10 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx6, align 8, !dbg !3164
  %11 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3168
  %mb7 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %11, i32 0, i32 55, !dbg !3169
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb7, i32 0, i32 66, !dbg !3170
  %p_fdec = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 18, !dbg !3171
  %arrayidx8 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec, i64 0, i64 0, !dbg !3168
  %12 = load i8*, i8** %arrayidx8, align 16, !dbg !3168
  %13 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3172
  %mb9 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %13, i32 0, i32 55, !dbg !3173
  %pic10 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb9, i32 0, i32 66, !dbg !3174
  %p_fenc = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic10, i32 0, i32 16, !dbg !3175
  %arrayidx11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc, i64 0, i64 0, !dbg !3172
  %14 = load i8*, i8** %arrayidx11, align 16, !dbg !3172
  call void %10(i8* %12, i32 32, i8* %14, i32 16, i32 16), !dbg !3164
  %15 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3176
  %mc12 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %15, i32 0, i32 70, !dbg !3177
  %copy13 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc12, i32 0, i32 4, !dbg !3178
  %arrayidx14 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy13, i64 0, i64 3, !dbg !3176
  %16 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx14, align 8, !dbg !3176
  %17 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3179
  %mb15 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %17, i32 0, i32 55, !dbg !3180
  %pic16 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb15, i32 0, i32 66, !dbg !3181
  %p_fdec17 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic16, i32 0, i32 18, !dbg !3182
  %arrayidx18 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec17, i64 0, i64 1, !dbg !3179
  %18 = load i8*, i8** %arrayidx18, align 8, !dbg !3179
  %19 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3183
  %mb19 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %19, i32 0, i32 55, !dbg !3184
  %pic20 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb19, i32 0, i32 66, !dbg !3185
  %p_fenc21 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic20, i32 0, i32 16, !dbg !3186
  %arrayidx22 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc21, i64 0, i64 1, !dbg !3183
  %20 = load i8*, i8** %arrayidx22, align 8, !dbg !3183
  call void %16(i8* %18, i32 32, i8* %20, i32 16, i32 8), !dbg !3176
  %21 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3187
  %mc23 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %21, i32 0, i32 70, !dbg !3188
  %copy24 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc23, i32 0, i32 4, !dbg !3189
  %arrayidx25 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy24, i64 0, i64 3, !dbg !3187
  %22 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx25, align 8, !dbg !3187
  %23 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3190
  %mb26 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %23, i32 0, i32 55, !dbg !3191
  %pic27 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb26, i32 0, i32 66, !dbg !3192
  %p_fdec28 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic27, i32 0, i32 18, !dbg !3193
  %arrayidx29 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec28, i64 0, i64 2, !dbg !3190
  %24 = load i8*, i8** %arrayidx29, align 16, !dbg !3190
  %25 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3194
  %mb30 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %25, i32 0, i32 55, !dbg !3195
  %pic31 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb30, i32 0, i32 66, !dbg !3196
  %p_fenc32 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic31, i32 0, i32 16, !dbg !3197
  %arrayidx33 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc32, i64 0, i64 2, !dbg !3194
  %26 = load i8*, i8** %arrayidx33, align 16, !dbg !3194
  call void %22(i8* %24, i32 32, i8* %26, i32 16, i32 8), !dbg !3187
  br label %if.end1060, !dbg !3198

if.end:                                           ; preds = %entry
  %27 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3199
  %sh = getelementptr inbounds %struct.x264_t, %struct.x264_t* %27, i32 0, i32 41, !dbg !3201
  %b_mbaff = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh, i32 0, i32 7, !dbg !3202
  %28 = load i32, i32* %b_mbaff, align 4, !dbg !3202
  %tobool = icmp ne i32 %28, 0, !dbg !3199
  br i1 %tobool, label %land.lhs.true, label %if.end83, !dbg !3203

land.lhs.true:                                    ; preds = %if.end
  %29 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3204
  %mb34 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %29, i32 0, i32 55, !dbg !3205
  %i_mb_xy = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb34, i32 0, i32 6, !dbg !3206
  %30 = load i32, i32* %i_mb_xy, align 8, !dbg !3206
  %31 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3207
  %sh35 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %31, i32 0, i32 41, !dbg !3208
  %i_first_mb = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh35, i32 0, i32 3, !dbg !3209
  %32 = load i32, i32* %i_first_mb, align 4, !dbg !3209
  %33 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3210
  %mb36 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %33, i32 0, i32 55, !dbg !3211
  %i_mb_stride = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb36, i32 0, i32 1, !dbg !3212
  %34 = load i32, i32* %i_mb_stride, align 4, !dbg !3212
  %add = add nsw i32 %32, %34, !dbg !3213
  %cmp37 = icmp eq i32 %30, %add, !dbg !3214
  br i1 %cmp37, label %land.lhs.true38, label %if.end83, !dbg !3215

land.lhs.true38:                                  ; preds = %land.lhs.true
  %35 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3216
  %mb39 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %35, i32 0, i32 55, !dbg !3216
  %type = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb39, i32 0, i32 38, !dbg !3216
  %36 = load i8*, i8** %type, align 8, !dbg !3216
  %37 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3216
  %sh40 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %37, i32 0, i32 41, !dbg !3216
  %i_first_mb41 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh40, i32 0, i32 3, !dbg !3216
  %38 = load i32, i32* %i_first_mb41, align 4, !dbg !3216
  %idxprom42 = sext i32 %38 to i64, !dbg !3216
  %arrayidx43 = getelementptr inbounds i8, i8* %36, i64 %idxprom42, !dbg !3216
  %39 = load i8, i8* %arrayidx43, align 1, !dbg !3216
  %conv = sext i8 %39 to i32, !dbg !3216
  %cmp44 = icmp eq i32 %conv, 6, !dbg !3216
  br i1 %cmp44, label %if.then55, label %lor.lhs.false, !dbg !3216

lor.lhs.false:                                    ; preds = %land.lhs.true38
  %40 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3216
  %mb46 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %40, i32 0, i32 55, !dbg !3216
  %type47 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb46, i32 0, i32 38, !dbg !3216
  %41 = load i8*, i8** %type47, align 8, !dbg !3216
  %42 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3216
  %sh48 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %42, i32 0, i32 41, !dbg !3216
  %i_first_mb49 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh48, i32 0, i32 3, !dbg !3216
  %43 = load i32, i32* %i_first_mb49, align 4, !dbg !3216
  %idxprom50 = sext i32 %43 to i64, !dbg !3216
  %arrayidx51 = getelementptr inbounds i8, i8* %41, i64 %idxprom50, !dbg !3216
  %44 = load i8, i8* %arrayidx51, align 1, !dbg !3216
  %conv52 = sext i8 %44 to i32, !dbg !3216
  %cmp53 = icmp eq i32 %conv52, 18, !dbg !3216
  br i1 %cmp53, label %if.then55, label %if.end83, !dbg !3217

if.then55:                                        ; preds = %lor.lhs.false, %land.lhs.true38
  store i32 1, i32* %b_force_no_skip, align 4, !dbg !3218
  %45 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3220
  %mb56 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %45, i32 0, i32 55, !dbg !3220
  %i_type57 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb56, i32 0, i32 53, !dbg !3220
  %46 = load i32, i32* %i_type57, align 8, !dbg !3220
  %cmp58 = icmp eq i32 %46, 6, !dbg !3220
  br i1 %cmp58, label %if.then65, label %lor.lhs.false60, !dbg !3220

lor.lhs.false60:                                  ; preds = %if.then55
  %47 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3220
  %mb61 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %47, i32 0, i32 55, !dbg !3220
  %i_type62 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb61, i32 0, i32 53, !dbg !3220
  %48 = load i32, i32* %i_type62, align 8, !dbg !3220
  %cmp63 = icmp eq i32 %48, 18, !dbg !3220
  br i1 %cmp63, label %if.then65, label %if.end82, !dbg !3222

if.then65:                                        ; preds = %lor.lhs.false60, %if.then55
  %49 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3223
  %mb66 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %49, i32 0, i32 55, !dbg !3226
  %i_type67 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb66, i32 0, i32 53, !dbg !3227
  %50 = load i32, i32* %i_type67, align 8, !dbg !3227
  %cmp68 = icmp eq i32 %50, 6, !dbg !3228
  br i1 %cmp68, label %if.then70, label %if.else, !dbg !3229

if.then70:                                        ; preds = %if.then65
  %51 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3230
  %mb71 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %51, i32 0, i32 55, !dbg !3231
  %i_type72 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb71, i32 0, i32 53, !dbg !3232
  store i32 4, i32* %i_type72, align 8, !dbg !3233
  br label %if.end81, !dbg !3230

if.else:                                          ; preds = %if.then65
  %52 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3234
  %mb73 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %52, i32 0, i32 55, !dbg !3236
  %i_type74 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb73, i32 0, i32 53, !dbg !3237
  %53 = load i32, i32* %i_type74, align 8, !dbg !3237
  %cmp75 = icmp eq i32 %53, 18, !dbg !3238
  br i1 %cmp75, label %if.then77, label %if.end80, !dbg !3239

if.then77:                                        ; preds = %if.else
  %54 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3240
  %mb78 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %54, i32 0, i32 55, !dbg !3241
  %i_type79 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb78, i32 0, i32 53, !dbg !3242
  store i32 7, i32* %i_type79, align 8, !dbg !3243
  br label %if.end80, !dbg !3240

if.end80:                                         ; preds = %if.then77, %if.else
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then70
  br label %if.end82, !dbg !3244

if.end82:                                         ; preds = %if.end81, %lor.lhs.false60
  br label %if.end83, !dbg !3245

if.end83:                                         ; preds = %if.end82, %lor.lhs.false, %land.lhs.true, %if.end
  %55 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3246
  %mb84 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %55, i32 0, i32 55, !dbg !3248
  %i_type85 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb84, i32 0, i32 53, !dbg !3249
  %56 = load i32, i32* %i_type85, align 8, !dbg !3249
  %cmp86 = icmp eq i32 %56, 6, !dbg !3250
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !3251

if.then88:                                        ; preds = %if.end83
  %57 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3252
  call void @x264_macroblock_encode_pskip(%struct.x264_t* %57), !dbg !3254
  br label %if.end1060, !dbg !3255

if.end89:                                         ; preds = %if.end83
  %58 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3256
  %mb90 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %58, i32 0, i32 55, !dbg !3258
  %i_type91 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb90, i32 0, i32 53, !dbg !3259
  %59 = load i32, i32* %i_type91, align 8, !dbg !3259
  %cmp92 = icmp eq i32 %59, 18, !dbg !3260
  br i1 %cmp92, label %if.then94, label %if.end99, !dbg !3261

if.then94:                                        ; preds = %if.end89
  %60 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3262
  %mb95 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %60, i32 0, i32 55, !dbg !3265
  %b_skip_mc = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb95, i32 0, i32 62, !dbg !3266
  %61 = load i32, i32* %b_skip_mc, align 4, !dbg !3266
  %tobool96 = icmp ne i32 %61, 0, !dbg !3262
  br i1 %tobool96, label %if.end98, label %if.then97, !dbg !3267

if.then97:                                        ; preds = %if.then94
  %62 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3268
  call void @x264_mb_mc(%struct.x264_t* %62), !dbg !3269
  br label %if.end98, !dbg !3269

if.end98:                                         ; preds = %if.then97, %if.then94
  %63 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3270
  call void @x264_macroblock_encode_skip(%struct.x264_t* %63), !dbg !3271
  br label %if.end1060, !dbg !3272

if.end99:                                         ; preds = %if.end89
  %64 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3273
  %mb100 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %64, i32 0, i32 55, !dbg !3275
  %i_type101 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb100, i32 0, i32 53, !dbg !3276
  %65 = load i32, i32* %i_type101, align 8, !dbg !3276
  %cmp102 = icmp eq i32 %65, 2, !dbg !3277
  br i1 %cmp102, label %if.then104, label %if.else118, !dbg !3278

if.then104:                                       ; preds = %if.end99
  call void @llvm.dbg.declare(metadata i32* %i_mode, metadata !3279, metadata !DIExpression()), !dbg !3281
  %66 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3282
  %mb105 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %66, i32 0, i32 55, !dbg !3283
  %i_intra16x16_pred_mode = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb105, i32 0, i32 59, !dbg !3284
  %67 = load i32, i32* %i_intra16x16_pred_mode, align 16, !dbg !3284
  store i32 %67, i32* %i_mode, align 4, !dbg !3281
  %68 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3285
  %mb106 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %68, i32 0, i32 55, !dbg !3286
  %b_transform_8x8 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb106, i32 0, i32 56, !dbg !3287
  store i32 0, i32* %b_transform_8x8, align 4, !dbg !3288
  %69 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3289
  %mb107 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %69, i32 0, i32 55, !dbg !3291
  %b_lossless = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb107, i32 0, i32 73, !dbg !3292
  %70 = load i32, i32* %b_lossless, align 4, !dbg !3292
  %tobool108 = icmp ne i32 %70, 0, !dbg !3289
  br i1 %tobool108, label %if.then109, label %if.else110, !dbg !3293

if.then109:                                       ; preds = %if.then104
  %71 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3294
  %72 = load i32, i32* %i_mode, align 4, !dbg !3295
  call void @x264_predict_lossless_16x16(%struct.x264_t* %71, i32 %72), !dbg !3296
  br label %if.end117, !dbg !3296

if.else110:                                       ; preds = %if.then104
  %73 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3297
  %predict_16x16 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %73, i32 0, i32 64, !dbg !3298
  %74 = load i32, i32* %i_mode, align 4, !dbg !3299
  %idxprom111 = sext i32 %74 to i64, !dbg !3297
  %arrayidx112 = getelementptr inbounds [7 x void (i8*)*], [7 x void (i8*)*]* %predict_16x16, i64 0, i64 %idxprom111, !dbg !3297
  %75 = load void (i8*)*, void (i8*)** %arrayidx112, align 8, !dbg !3297
  %76 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3300
  %mb113 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %76, i32 0, i32 55, !dbg !3301
  %pic114 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb113, i32 0, i32 66, !dbg !3302
  %p_fdec115 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic114, i32 0, i32 18, !dbg !3303
  %arrayidx116 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec115, i64 0, i64 0, !dbg !3300
  %77 = load i8*, i8** %arrayidx116, align 16, !dbg !3300
  call void %75(i8* %77), !dbg !3297
  br label %if.end117

if.end117:                                        ; preds = %if.else110, %if.then109
  %78 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3304
  %79 = load i32, i32* %i_qp, align 4, !dbg !3305
  call void @x264_mb_encode_i16x16(%struct.x264_t* %78, i32 %79), !dbg !3306
  br label %if.end897, !dbg !3307

if.else118:                                       ; preds = %if.end99
  %80 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3308
  %mb119 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %80, i32 0, i32 55, !dbg !3310
  %i_type120 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb119, i32 0, i32 53, !dbg !3311
  %81 = load i32, i32* %i_type120, align 8, !dbg !3311
  %cmp121 = icmp eq i32 %81, 1, !dbg !3312
  br i1 %cmp121, label %if.then123, label %if.else233, !dbg !3313

if.then123:                                       ; preds = %if.else118
  call void @llvm.dbg.declare(metadata [33 x i8]* %edge, metadata !3314, metadata !DIExpression()), !dbg !3319
  %82 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3320
  %mb124 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %82, i32 0, i32 55, !dbg !3321
  %b_transform_8x8125 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb124, i32 0, i32 56, !dbg !3322
  store i32 1, i32* %b_transform_8x8125, align 4, !dbg !3323
  %83 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3324
  %mb126 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %83, i32 0, i32 55, !dbg !3326
  %i_skip_intra = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb126, i32 0, i32 61, !dbg !3327
  %84 = load i32, i32* %i_skip_intra, align 8, !dbg !3327
  %tobool127 = icmp ne i32 %84, 0, !dbg !3324
  br i1 %tobool127, label %if.then128, label %if.end191, !dbg !3328

if.then128:                                       ; preds = %if.then123
  %85 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3329
  %mc129 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %85, i32 0, i32 70, !dbg !3331
  %copy130 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc129, i32 0, i32 4, !dbg !3332
  %arrayidx131 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy130, i64 0, i64 0, !dbg !3329
  %86 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx131, align 8, !dbg !3329
  %87 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3333
  %mb132 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %87, i32 0, i32 55, !dbg !3334
  %pic133 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb132, i32 0, i32 66, !dbg !3335
  %p_fdec134 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic133, i32 0, i32 18, !dbg !3336
  %arrayidx135 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec134, i64 0, i64 0, !dbg !3333
  %88 = load i8*, i8** %arrayidx135, align 16, !dbg !3333
  %89 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3337
  %mb136 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %89, i32 0, i32 55, !dbg !3338
  %pic137 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb136, i32 0, i32 66, !dbg !3339
  %i8x8_fdec_buf = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic137, i32 0, i32 3, !dbg !3340
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %i8x8_fdec_buf, i64 0, i64 0, !dbg !3337
  call void %86(i8* %88, i32 32, i8* %arraydecay, i32 16, i32 16), !dbg !3329
  %90 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3341
  %mb138 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %90, i32 0, i32 55, !dbg !3342
  %pic139 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb138, i32 0, i32 66, !dbg !3343
  %i8x8_nnz_buf = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic139, i32 0, i32 7, !dbg !3344
  %arrayidx140 = getelementptr inbounds [4 x i32], [4 x i32]* %i8x8_nnz_buf, i64 0, i64 0, !dbg !3341
  %91 = load i32, i32* %arrayidx140, align 16, !dbg !3341
  %92 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3345
  %mb141 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %92, i32 0, i32 55, !dbg !3345
  %cache142 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb141, i32 0, i32 67, !dbg !3345
  %non_zero_count143 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache142, i32 0, i32 2, !dbg !3345
  %93 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !3345
  %idxprom144 = sext i32 %93 to i64, !dbg !3345
  %arrayidx145 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count143, i64 0, i64 %idxprom144, !dbg !3345
  %94 = bitcast i8* %arrayidx145 to %union.x264_union32_t*, !dbg !3345
  %i = bitcast %union.x264_union32_t* %94 to i32*, !dbg !3345
  store i32 %91, i32* %i, align 1, !dbg !3346
  %95 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3347
  %mb146 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %95, i32 0, i32 55, !dbg !3348
  %pic147 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb146, i32 0, i32 66, !dbg !3349
  %i8x8_nnz_buf148 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic147, i32 0, i32 7, !dbg !3350
  %arrayidx149 = getelementptr inbounds [4 x i32], [4 x i32]* %i8x8_nnz_buf148, i64 0, i64 1, !dbg !3347
  %96 = load i32, i32* %arrayidx149, align 4, !dbg !3347
  %97 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3351
  %mb150 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %97, i32 0, i32 55, !dbg !3351
  %cache151 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb150, i32 0, i32 67, !dbg !3351
  %non_zero_count152 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache151, i32 0, i32 2, !dbg !3351
  %98 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 2), align 8, !dbg !3351
  %idxprom153 = sext i32 %98 to i64, !dbg !3351
  %arrayidx154 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count152, i64 0, i64 %idxprom153, !dbg !3351
  %99 = bitcast i8* %arrayidx154 to %union.x264_union32_t*, !dbg !3351
  %i155 = bitcast %union.x264_union32_t* %99 to i32*, !dbg !3351
  store i32 %96, i32* %i155, align 1, !dbg !3352
  %100 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3353
  %mb156 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %100, i32 0, i32 55, !dbg !3354
  %pic157 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb156, i32 0, i32 66, !dbg !3355
  %i8x8_nnz_buf158 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic157, i32 0, i32 7, !dbg !3356
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %i8x8_nnz_buf158, i64 0, i64 2, !dbg !3353
  %101 = load i32, i32* %arrayidx159, align 8, !dbg !3353
  %102 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3357
  %mb160 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %102, i32 0, i32 55, !dbg !3357
  %cache161 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb160, i32 0, i32 67, !dbg !3357
  %non_zero_count162 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache161, i32 0, i32 2, !dbg !3357
  %103 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 8), align 16, !dbg !3357
  %idxprom163 = sext i32 %103 to i64, !dbg !3357
  %arrayidx164 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count162, i64 0, i64 %idxprom163, !dbg !3357
  %104 = bitcast i8* %arrayidx164 to %union.x264_union32_t*, !dbg !3357
  %i165 = bitcast %union.x264_union32_t* %104 to i32*, !dbg !3357
  store i32 %101, i32* %i165, align 1, !dbg !3358
  %105 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3359
  %mb166 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %105, i32 0, i32 55, !dbg !3360
  %pic167 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb166, i32 0, i32 66, !dbg !3361
  %i8x8_nnz_buf168 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic167, i32 0, i32 7, !dbg !3362
  %arrayidx169 = getelementptr inbounds [4 x i32], [4 x i32]* %i8x8_nnz_buf168, i64 0, i64 3, !dbg !3359
  %106 = load i32, i32* %arrayidx169, align 4, !dbg !3359
  %107 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3363
  %mb170 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %107, i32 0, i32 55, !dbg !3363
  %cache171 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb170, i32 0, i32 67, !dbg !3363
  %non_zero_count172 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache171, i32 0, i32 2, !dbg !3363
  %108 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 10), align 8, !dbg !3363
  %idxprom173 = sext i32 %108 to i64, !dbg !3363
  %arrayidx174 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count172, i64 0, i64 %idxprom173, !dbg !3363
  %109 = bitcast i8* %arrayidx174 to %union.x264_union32_t*, !dbg !3363
  %i175 = bitcast %union.x264_union32_t* %109 to i32*, !dbg !3363
  store i32 %106, i32* %i175, align 1, !dbg !3364
  %110 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3365
  %mb176 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %110, i32 0, i32 55, !dbg !3366
  %pic177 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb176, i32 0, i32 66, !dbg !3367
  %i8x8_cbp = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic177, i32 0, i32 9, !dbg !3368
  %111 = load i32, i32* %i8x8_cbp, align 4, !dbg !3368
  %112 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3369
  %mb178 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %112, i32 0, i32 55, !dbg !3370
  %i_cbp_luma179 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb178, i32 0, i32 57, !dbg !3371
  store i32 %111, i32* %i_cbp_luma179, align 8, !dbg !3372
  %113 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3373
  %mb180 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %113, i32 0, i32 55, !dbg !3375
  %i_skip_intra181 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb180, i32 0, i32 61, !dbg !3376
  %114 = load i32, i32* %i_skip_intra181, align 8, !dbg !3376
  %cmp182 = icmp eq i32 %114, 2, !dbg !3377
  br i1 %cmp182, label %if.then184, label %if.end190, !dbg !3378

if.then184:                                       ; preds = %if.then128
  %115 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3379
  %mc185 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %115, i32 0, i32 70, !dbg !3380
  %memcpy_aligned = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc185, i32 0, i32 10, !dbg !3381
  %116 = load i8* (i8*, i8*, i64)*, i8* (i8*, i8*, i64)** %memcpy_aligned, align 8, !dbg !3381
  %117 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3382
  %dct = getelementptr inbounds %struct.x264_t, %struct.x264_t* %117, i32 0, i32 54, !dbg !3383
  %luma8x8 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct, i32 0, i32 2, !dbg !3384
  %arraydecay186 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %luma8x8, i64 0, i64 0, !dbg !3382
  %118 = bitcast [64 x i16]* %arraydecay186 to i8*, !dbg !3382
  %119 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3385
  %mb187 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %119, i32 0, i32 55, !dbg !3386
  %pic188 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb187, i32 0, i32 66, !dbg !3387
  %i8x8_dct_buf = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic188, i32 0, i32 4, !dbg !3388
  %arraydecay189 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %i8x8_dct_buf, i64 0, i64 0, !dbg !3385
  %120 = bitcast [64 x i16]* %arraydecay189 to i8*, !dbg !3385
  %call = call i8* %116(i8* %118, i8* %120, i64 384), !dbg !3379
  br label %if.end190, !dbg !3379

if.end190:                                        ; preds = %if.then184, %if.then128
  br label %if.end191, !dbg !3389

if.end191:                                        ; preds = %if.end190, %if.then123
  call void @llvm.dbg.declare(metadata i32* %i192, metadata !3390, metadata !DIExpression()), !dbg !3392
  %121 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3393
  %mb193 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %121, i32 0, i32 55, !dbg !3394
  %i_skip_intra194 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb193, i32 0, i32 61, !dbg !3395
  %122 = load i32, i32* %i_skip_intra194, align 8, !dbg !3395
  %tobool195 = icmp ne i32 %122, 0, !dbg !3393
  %123 = zext i1 %tobool195 to i64, !dbg !3393
  %cond = select i1 %tobool195, i32 3, i32 0, !dbg !3393
  store i32 %cond, i32* %i192, align 4, !dbg !3392
  br label %for.cond, !dbg !3396

for.cond:                                         ; preds = %for.inc, %if.end191
  %124 = load i32, i32* %i192, align 4, !dbg !3397
  %cmp196 = icmp slt i32 %124, 4, !dbg !3399
  br i1 %cmp196, label %for.body, label %for.end, !dbg !3400

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %p_dst, metadata !3401, metadata !DIExpression()), !dbg !3403
  %125 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3404
  %mb198 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %125, i32 0, i32 55, !dbg !3405
  %pic199 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb198, i32 0, i32 66, !dbg !3406
  %p_fdec200 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic199, i32 0, i32 18, !dbg !3407
  %arrayidx201 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec200, i64 0, i64 0, !dbg !3404
  %126 = load i8*, i8** %arrayidx201, align 16, !dbg !3404
  %127 = load i32, i32* %i192, align 4, !dbg !3408
  %and = and i32 %127, 1, !dbg !3409
  %mul = mul nsw i32 8, %and, !dbg !3410
  %128 = load i32, i32* %i192, align 4, !dbg !3411
  %shr = ashr i32 %128, 1, !dbg !3412
  %mul202 = mul nsw i32 8, %shr, !dbg !3413
  %mul203 = mul nsw i32 %mul202, 32, !dbg !3414
  %add204 = add nsw i32 %mul, %mul203, !dbg !3415
  %idxprom205 = sext i32 %add204 to i64, !dbg !3404
  %arrayidx206 = getelementptr inbounds i8, i8* %126, i64 %idxprom205, !dbg !3404
  store i8* %arrayidx206, i8** %p_dst, align 8, !dbg !3403
  call void @llvm.dbg.declare(metadata i32* %i_mode207, metadata !3416, metadata !DIExpression()), !dbg !3417
  %129 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3418
  %mb208 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %129, i32 0, i32 55, !dbg !3419
  %cache209 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb208, i32 0, i32 67, !dbg !3420
  %intra4x4_pred_mode = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache209, i32 0, i32 0, !dbg !3421
  %130 = load i32, i32* %i192, align 4, !dbg !3422
  %mul210 = mul nsw i32 4, %130, !dbg !3423
  %idxprom211 = sext i32 %mul210 to i64, !dbg !3424
  %arrayidx212 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom211, !dbg !3424
  %131 = load i32, i32* %arrayidx212, align 4, !dbg !3424
  %idxprom213 = sext i32 %131 to i64, !dbg !3418
  %arrayidx214 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode, i64 0, i64 %idxprom213, !dbg !3418
  %132 = load i8, i8* %arrayidx214, align 1, !dbg !3418
  %conv215 = sext i8 %132 to i32, !dbg !3418
  store i32 %conv215, i32* %i_mode207, align 4, !dbg !3417
  %133 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3425
  %predict_8x8_filter = getelementptr inbounds %struct.x264_t, %struct.x264_t* %133, i32 0, i32 68, !dbg !3426
  %134 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %predict_8x8_filter, align 16, !dbg !3426
  %135 = load i8*, i8** %p_dst, align 8, !dbg !3427
  %arraydecay216 = getelementptr inbounds [33 x i8], [33 x i8]* %edge, i64 0, i64 0, !dbg !3428
  %136 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3429
  %mb217 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %136, i32 0, i32 55, !dbg !3430
  %i_neighbour8 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb217, i32 0, i32 25, !dbg !3431
  %137 = load i32, i32* %i192, align 4, !dbg !3432
  %idxprom218 = sext i32 %137 to i64, !dbg !3429
  %arrayidx219 = getelementptr inbounds [4 x i32], [4 x i32]* %i_neighbour8, i64 0, i64 %idxprom218, !dbg !3429
  %138 = load i32, i32* %arrayidx219, align 4, !dbg !3429
  %139 = load i32, i32* %i_mode207, align 4, !dbg !3433
  %idxprom220 = sext i32 %139 to i64, !dbg !3434
  %arrayidx221 = getelementptr inbounds [12 x i8], [12 x i8]* @x264_pred_i4x4_neighbors, i64 0, i64 %idxprom220, !dbg !3434
  %140 = load i8, i8* %arrayidx221, align 1, !dbg !3434
  %conv222 = zext i8 %140 to i32, !dbg !3434
  call void %134(i8* %135, i8* %arraydecay216, i32 %138, i32 %conv222), !dbg !3425
  %141 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3435
  %mb223 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %141, i32 0, i32 55, !dbg !3437
  %b_lossless224 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb223, i32 0, i32 73, !dbg !3438
  %142 = load i32, i32* %b_lossless224, align 4, !dbg !3438
  %tobool225 = icmp ne i32 %142, 0, !dbg !3435
  br i1 %tobool225, label %if.then226, label %if.else228, !dbg !3439

if.then226:                                       ; preds = %for.body
  %143 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3440
  %144 = load i8*, i8** %p_dst, align 8, !dbg !3441
  %145 = load i32, i32* %i192, align 4, !dbg !3442
  %146 = load i32, i32* %i_mode207, align 4, !dbg !3443
  %arraydecay227 = getelementptr inbounds [33 x i8], [33 x i8]* %edge, i64 0, i64 0, !dbg !3444
  call void @x264_predict_lossless_8x8(%struct.x264_t* %143, i8* %144, i32 %145, i32 %146, i8* %arraydecay227), !dbg !3445
  br label %if.end232, !dbg !3445

if.else228:                                       ; preds = %for.body
  %147 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3446
  %predict_8x8 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %147, i32 0, i32 66, !dbg !3447
  %148 = load i32, i32* %i_mode207, align 4, !dbg !3448
  %idxprom229 = sext i32 %148 to i64, !dbg !3446
  %arrayidx230 = getelementptr inbounds [12 x void (i8*, i8*)*], [12 x void (i8*, i8*)*]* %predict_8x8, i64 0, i64 %idxprom229, !dbg !3446
  %149 = load void (i8*, i8*)*, void (i8*, i8*)** %arrayidx230, align 8, !dbg !3446
  %150 = load i8*, i8** %p_dst, align 8, !dbg !3449
  %arraydecay231 = getelementptr inbounds [33 x i8], [33 x i8]* %edge, i64 0, i64 0, !dbg !3450
  call void %149(i8* %150, i8* %arraydecay231), !dbg !3446
  br label %if.end232

if.end232:                                        ; preds = %if.else228, %if.then226
  %151 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3451
  %152 = load i32, i32* %i192, align 4, !dbg !3452
  %153 = load i32, i32* %i_qp, align 4, !dbg !3453
  call void @x264_mb_encode_i8x8(%struct.x264_t* %151, i32 %152, i32 %153), !dbg !3454
  br label %for.inc, !dbg !3455

for.inc:                                          ; preds = %if.end232
  %154 = load i32, i32* %i192, align 4, !dbg !3456
  %inc = add nsw i32 %154, 1, !dbg !3456
  store i32 %inc, i32* %i192, align 4, !dbg !3456
  br label %for.cond, !dbg !3457, !llvm.loop !3458

for.end:                                          ; preds = %for.cond
  br label %if.end896, !dbg !3460

if.else233:                                       ; preds = %if.else118
  %155 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3461
  %mb234 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %155, i32 0, i32 55, !dbg !3463
  %i_type235 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb234, i32 0, i32 53, !dbg !3464
  %156 = load i32, i32* %i_type235, align 8, !dbg !3464
  %cmp236 = icmp eq i32 %156, 0, !dbg !3465
  br i1 %cmp236, label %if.then238, label %if.else364, !dbg !3466

if.then238:                                       ; preds = %if.else233
  %157 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3467
  %mb239 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %157, i32 0, i32 55, !dbg !3469
  %b_transform_8x8240 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb239, i32 0, i32 56, !dbg !3470
  store i32 0, i32* %b_transform_8x8240, align 4, !dbg !3471
  %158 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3472
  %mb241 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %158, i32 0, i32 55, !dbg !3474
  %i_skip_intra242 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb241, i32 0, i32 61, !dbg !3475
  %159 = load i32, i32* %i_skip_intra242, align 8, !dbg !3475
  %tobool243 = icmp ne i32 %159, 0, !dbg !3472
  br i1 %tobool243, label %if.then244, label %if.end312, !dbg !3476

if.then244:                                       ; preds = %if.then238
  %160 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3477
  %mc245 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %160, i32 0, i32 70, !dbg !3479
  %copy246 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc245, i32 0, i32 4, !dbg !3480
  %arrayidx247 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy246, i64 0, i64 0, !dbg !3477
  %161 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx247, align 8, !dbg !3477
  %162 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3481
  %mb248 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %162, i32 0, i32 55, !dbg !3482
  %pic249 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb248, i32 0, i32 66, !dbg !3483
  %p_fdec250 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic249, i32 0, i32 18, !dbg !3484
  %arrayidx251 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec250, i64 0, i64 0, !dbg !3481
  %163 = load i8*, i8** %arrayidx251, align 16, !dbg !3481
  %164 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3485
  %mb252 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %164, i32 0, i32 55, !dbg !3486
  %pic253 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb252, i32 0, i32 66, !dbg !3487
  %i4x4_fdec_buf = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic253, i32 0, i32 2, !dbg !3488
  %arraydecay254 = getelementptr inbounds [256 x i8], [256 x i8]* %i4x4_fdec_buf, i64 0, i64 0, !dbg !3485
  call void %161(i8* %163, i32 32, i8* %arraydecay254, i32 16, i32 16), !dbg !3477
  %165 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3489
  %mb255 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %165, i32 0, i32 55, !dbg !3490
  %pic256 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb255, i32 0, i32 66, !dbg !3491
  %i4x4_nnz_buf = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic256, i32 0, i32 6, !dbg !3492
  %arrayidx257 = getelementptr inbounds [4 x i32], [4 x i32]* %i4x4_nnz_buf, i64 0, i64 0, !dbg !3489
  %166 = load i32, i32* %arrayidx257, align 16, !dbg !3489
  %167 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3493
  %mb258 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %167, i32 0, i32 55, !dbg !3493
  %cache259 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb258, i32 0, i32 67, !dbg !3493
  %non_zero_count260 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache259, i32 0, i32 2, !dbg !3493
  %168 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !3493
  %idxprom261 = sext i32 %168 to i64, !dbg !3493
  %arrayidx262 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count260, i64 0, i64 %idxprom261, !dbg !3493
  %169 = bitcast i8* %arrayidx262 to %union.x264_union32_t*, !dbg !3493
  %i263 = bitcast %union.x264_union32_t* %169 to i32*, !dbg !3493
  store i32 %166, i32* %i263, align 1, !dbg !3494
  %170 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3495
  %mb264 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %170, i32 0, i32 55, !dbg !3496
  %pic265 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb264, i32 0, i32 66, !dbg !3497
  %i4x4_nnz_buf266 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic265, i32 0, i32 6, !dbg !3498
  %arrayidx267 = getelementptr inbounds [4 x i32], [4 x i32]* %i4x4_nnz_buf266, i64 0, i64 1, !dbg !3495
  %171 = load i32, i32* %arrayidx267, align 4, !dbg !3495
  %172 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3499
  %mb268 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %172, i32 0, i32 55, !dbg !3499
  %cache269 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb268, i32 0, i32 67, !dbg !3499
  %non_zero_count270 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache269, i32 0, i32 2, !dbg !3499
  %173 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 2), align 8, !dbg !3499
  %idxprom271 = sext i32 %173 to i64, !dbg !3499
  %arrayidx272 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count270, i64 0, i64 %idxprom271, !dbg !3499
  %174 = bitcast i8* %arrayidx272 to %union.x264_union32_t*, !dbg !3499
  %i273 = bitcast %union.x264_union32_t* %174 to i32*, !dbg !3499
  store i32 %171, i32* %i273, align 1, !dbg !3500
  %175 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3501
  %mb274 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %175, i32 0, i32 55, !dbg !3502
  %pic275 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb274, i32 0, i32 66, !dbg !3503
  %i4x4_nnz_buf276 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic275, i32 0, i32 6, !dbg !3504
  %arrayidx277 = getelementptr inbounds [4 x i32], [4 x i32]* %i4x4_nnz_buf276, i64 0, i64 2, !dbg !3501
  %176 = load i32, i32* %arrayidx277, align 8, !dbg !3501
  %177 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3505
  %mb278 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %177, i32 0, i32 55, !dbg !3505
  %cache279 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb278, i32 0, i32 67, !dbg !3505
  %non_zero_count280 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache279, i32 0, i32 2, !dbg !3505
  %178 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 8), align 16, !dbg !3505
  %idxprom281 = sext i32 %178 to i64, !dbg !3505
  %arrayidx282 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count280, i64 0, i64 %idxprom281, !dbg !3505
  %179 = bitcast i8* %arrayidx282 to %union.x264_union32_t*, !dbg !3505
  %i283 = bitcast %union.x264_union32_t* %179 to i32*, !dbg !3505
  store i32 %176, i32* %i283, align 1, !dbg !3506
  %180 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3507
  %mb284 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %180, i32 0, i32 55, !dbg !3508
  %pic285 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb284, i32 0, i32 66, !dbg !3509
  %i4x4_nnz_buf286 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic285, i32 0, i32 6, !dbg !3510
  %arrayidx287 = getelementptr inbounds [4 x i32], [4 x i32]* %i4x4_nnz_buf286, i64 0, i64 3, !dbg !3507
  %181 = load i32, i32* %arrayidx287, align 4, !dbg !3507
  %182 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3511
  %mb288 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %182, i32 0, i32 55, !dbg !3511
  %cache289 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb288, i32 0, i32 67, !dbg !3511
  %non_zero_count290 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache289, i32 0, i32 2, !dbg !3511
  %183 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 10), align 8, !dbg !3511
  %idxprom291 = sext i32 %183 to i64, !dbg !3511
  %arrayidx292 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count290, i64 0, i64 %idxprom291, !dbg !3511
  %184 = bitcast i8* %arrayidx292 to %union.x264_union32_t*, !dbg !3511
  %i293 = bitcast %union.x264_union32_t* %184 to i32*, !dbg !3511
  store i32 %181, i32* %i293, align 1, !dbg !3512
  %185 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3513
  %mb294 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %185, i32 0, i32 55, !dbg !3514
  %pic295 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb294, i32 0, i32 66, !dbg !3515
  %i4x4_cbp = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic295, i32 0, i32 8, !dbg !3516
  %186 = load i32, i32* %i4x4_cbp, align 16, !dbg !3516
  %187 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3517
  %mb296 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %187, i32 0, i32 55, !dbg !3518
  %i_cbp_luma297 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb296, i32 0, i32 57, !dbg !3519
  store i32 %186, i32* %i_cbp_luma297, align 8, !dbg !3520
  %188 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3521
  %mb298 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %188, i32 0, i32 55, !dbg !3523
  %i_skip_intra299 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb298, i32 0, i32 61, !dbg !3524
  %189 = load i32, i32* %i_skip_intra299, align 8, !dbg !3524
  %cmp300 = icmp eq i32 %189, 2, !dbg !3525
  br i1 %cmp300, label %if.then302, label %if.end311, !dbg !3526

if.then302:                                       ; preds = %if.then244
  %190 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3527
  %mc303 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %190, i32 0, i32 70, !dbg !3528
  %memcpy_aligned304 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc303, i32 0, i32 10, !dbg !3529
  %191 = load i8* (i8*, i8*, i64)*, i8* (i8*, i8*, i64)** %memcpy_aligned304, align 8, !dbg !3529
  %192 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3530
  %dct305 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %192, i32 0, i32 54, !dbg !3531
  %luma4x4 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct305, i32 0, i32 3, !dbg !3532
  %arraydecay306 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4, i64 0, i64 0, !dbg !3530
  %193 = bitcast [16 x i16]* %arraydecay306 to i8*, !dbg !3530
  %194 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3533
  %mb307 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %194, i32 0, i32 55, !dbg !3534
  %pic308 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb307, i32 0, i32 66, !dbg !3535
  %i4x4_dct_buf = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic308, i32 0, i32 5, !dbg !3536
  %arraydecay309 = getelementptr inbounds [15 x [16 x i16]], [15 x [16 x i16]]* %i4x4_dct_buf, i64 0, i64 0, !dbg !3533
  %195 = bitcast [16 x i16]* %arraydecay309 to i8*, !dbg !3533
  %call310 = call i8* %191(i8* %193, i8* %195, i64 480), !dbg !3527
  br label %if.end311, !dbg !3527

if.end311:                                        ; preds = %if.then302, %if.then244
  br label %if.end312, !dbg !3537

if.end312:                                        ; preds = %if.end311, %if.then238
  call void @llvm.dbg.declare(metadata i32* %i313, metadata !3538, metadata !DIExpression()), !dbg !3540
  %196 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3541
  %mb314 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %196, i32 0, i32 55, !dbg !3542
  %i_skip_intra315 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb314, i32 0, i32 61, !dbg !3543
  %197 = load i32, i32* %i_skip_intra315, align 8, !dbg !3543
  %tobool316 = icmp ne i32 %197, 0, !dbg !3541
  %198 = zext i1 %tobool316 to i64, !dbg !3541
  %cond317 = select i1 %tobool316, i32 15, i32 0, !dbg !3541
  store i32 %cond317, i32* %i313, align 4, !dbg !3540
  br label %for.cond318, !dbg !3544

for.cond318:                                      ; preds = %for.inc361, %if.end312
  %199 = load i32, i32* %i313, align 4, !dbg !3545
  %cmp319 = icmp slt i32 %199, 16, !dbg !3547
  br i1 %cmp319, label %for.body321, label %for.end363, !dbg !3548

for.body321:                                      ; preds = %for.cond318
  call void @llvm.dbg.declare(metadata i8** %p_dst322, metadata !3549, metadata !DIExpression()), !dbg !3551
  %200 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3552
  %mb323 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %200, i32 0, i32 55, !dbg !3553
  %pic324 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb323, i32 0, i32 66, !dbg !3554
  %p_fdec325 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic324, i32 0, i32 18, !dbg !3555
  %arrayidx326 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec325, i64 0, i64 0, !dbg !3552
  %201 = load i8*, i8** %arrayidx326, align 16, !dbg !3552
  %202 = load i32, i32* %i313, align 4, !dbg !3556
  %idxprom327 = sext i32 %202 to i64, !dbg !3557
  %arrayidx328 = getelementptr inbounds [16 x i16], [16 x i16]* @block_idx_xy_fdec, i64 0, i64 %idxprom327, !dbg !3557
  %203 = load i16, i16* %arrayidx328, align 2, !dbg !3557
  %idxprom329 = zext i16 %203 to i64, !dbg !3552
  %arrayidx330 = getelementptr inbounds i8, i8* %201, i64 %idxprom329, !dbg !3552
  store i8* %arrayidx330, i8** %p_dst322, align 8, !dbg !3551
  call void @llvm.dbg.declare(metadata i32* %i_mode331, metadata !3558, metadata !DIExpression()), !dbg !3559
  %204 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3560
  %mb332 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %204, i32 0, i32 55, !dbg !3561
  %cache333 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb332, i32 0, i32 67, !dbg !3562
  %intra4x4_pred_mode334 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache333, i32 0, i32 0, !dbg !3563
  %205 = load i32, i32* %i313, align 4, !dbg !3564
  %idxprom335 = sext i32 %205 to i64, !dbg !3565
  %arrayidx336 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom335, !dbg !3565
  %206 = load i32, i32* %arrayidx336, align 4, !dbg !3565
  %idxprom337 = sext i32 %206 to i64, !dbg !3560
  %arrayidx338 = getelementptr inbounds [40 x i8], [40 x i8]* %intra4x4_pred_mode334, i64 0, i64 %idxprom337, !dbg !3560
  %207 = load i8, i8* %arrayidx338, align 1, !dbg !3560
  %conv339 = sext i8 %207 to i32, !dbg !3560
  store i32 %conv339, i32* %i_mode331, align 4, !dbg !3559
  %208 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3566
  %mb340 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %208, i32 0, i32 55, !dbg !3568
  %i_neighbour4 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb340, i32 0, i32 26, !dbg !3569
  %209 = load i32, i32* %i313, align 4, !dbg !3570
  %idxprom341 = sext i32 %209 to i64, !dbg !3566
  %arrayidx342 = getelementptr inbounds [16 x i32], [16 x i32]* %i_neighbour4, i64 0, i64 %idxprom341, !dbg !3566
  %210 = load i32, i32* %arrayidx342, align 4, !dbg !3566
  %and343 = and i32 %210, 6, !dbg !3571
  %cmp344 = icmp eq i32 %and343, 2, !dbg !3572
  br i1 %cmp344, label %if.then346, label %if.end352, !dbg !3573

if.then346:                                       ; preds = %for.body321
  %211 = load i8*, i8** %p_dst322, align 8, !dbg !3574
  %arrayidx347 = getelementptr inbounds i8, i8* %211, i64 -29, !dbg !3574
  %212 = load i8, i8* %arrayidx347, align 1, !dbg !3574
  %conv348 = zext i8 %212 to i32, !dbg !3574
  %mul349 = mul i32 %conv348, 16843009, !dbg !3575
  %213 = load i8*, i8** %p_dst322, align 8, !dbg !3576
  %arrayidx350 = getelementptr inbounds i8, i8* %213, i64 -28, !dbg !3576
  %214 = bitcast i8* %arrayidx350 to %union.x264_union32_t*, !dbg !3576
  %i351 = bitcast %union.x264_union32_t* %214 to i32*, !dbg !3576
  store i32 %mul349, i32* %i351, align 4, !dbg !3577
  br label %if.end352, !dbg !3576

if.end352:                                        ; preds = %if.then346, %for.body321
  %215 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3578
  %mb353 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %215, i32 0, i32 55, !dbg !3580
  %b_lossless354 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb353, i32 0, i32 73, !dbg !3581
  %216 = load i32, i32* %b_lossless354, align 4, !dbg !3581
  %tobool355 = icmp ne i32 %216, 0, !dbg !3578
  br i1 %tobool355, label %if.then356, label %if.else357, !dbg !3582

if.then356:                                       ; preds = %if.end352
  %217 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3583
  %218 = load i8*, i8** %p_dst322, align 8, !dbg !3584
  %219 = load i32, i32* %i313, align 4, !dbg !3585
  %220 = load i32, i32* %i_mode331, align 4, !dbg !3586
  call void @x264_predict_lossless_4x4(%struct.x264_t* %217, i8* %218, i32 %219, i32 %220), !dbg !3587
  br label %if.end360, !dbg !3587

if.else357:                                       ; preds = %if.end352
  %221 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3588
  %predict_4x4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %221, i32 0, i32 67, !dbg !3589
  %222 = load i32, i32* %i_mode331, align 4, !dbg !3590
  %idxprom358 = sext i32 %222 to i64, !dbg !3588
  %arrayidx359 = getelementptr inbounds [12 x void (i8*)*], [12 x void (i8*)*]* %predict_4x4, i64 0, i64 %idxprom358, !dbg !3588
  %223 = load void (i8*)*, void (i8*)** %arrayidx359, align 8, !dbg !3588
  %224 = load i8*, i8** %p_dst322, align 8, !dbg !3591
  call void %223(i8* %224), !dbg !3588
  br label %if.end360

if.end360:                                        ; preds = %if.else357, %if.then356
  %225 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3592
  %226 = load i32, i32* %i313, align 4, !dbg !3593
  %227 = load i32, i32* %i_qp, align 4, !dbg !3594
  call void @x264_mb_encode_i4x4(%struct.x264_t* %225, i32 %226, i32 %227), !dbg !3595
  br label %for.inc361, !dbg !3596

for.inc361:                                       ; preds = %if.end360
  %228 = load i32, i32* %i313, align 4, !dbg !3597
  %inc362 = add nsw i32 %228, 1, !dbg !3597
  store i32 %inc362, i32* %i313, align 4, !dbg !3597
  br label %for.cond318, !dbg !3598, !llvm.loop !3599

for.end363:                                       ; preds = %for.cond318
  br label %if.end895, !dbg !3601

if.else364:                                       ; preds = %if.else233
  call void @llvm.dbg.declare(metadata i32* %i_decimate_mb, metadata !3602, metadata !DIExpression()), !dbg !3604
  store i32 0, i32* %i_decimate_mb, align 4, !dbg !3604
  %229 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3605
  %mb365 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %229, i32 0, i32 55, !dbg !3607
  %b_skip_mc366 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb365, i32 0, i32 62, !dbg !3608
  %230 = load i32, i32* %b_skip_mc366, align 4, !dbg !3608
  %tobool367 = icmp ne i32 %230, 0, !dbg !3605
  br i1 %tobool367, label %if.end369, label %if.then368, !dbg !3609

if.then368:                                       ; preds = %if.else364
  %231 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3610
  call void @x264_mb_mc(%struct.x264_t* %231), !dbg !3611
  br label %if.end369, !dbg !3611

if.end369:                                        ; preds = %if.then368, %if.else364
  %232 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3612
  %mb370 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %232, i32 0, i32 55, !dbg !3614
  %b_lossless371 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb370, i32 0, i32 73, !dbg !3615
  %233 = load i32, i32* %b_lossless371, align 4, !dbg !3615
  %tobool372 = icmp ne i32 %233, 0, !dbg !3612
  br i1 %tobool372, label %if.then373, label %if.else484, !dbg !3616

if.then373:                                       ; preds = %if.end369
  %234 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3617
  %mb374 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %234, i32 0, i32 55, !dbg !3620
  %b_transform_8x8375 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb374, i32 0, i32 56, !dbg !3621
  %235 = load i32, i32* %b_transform_8x8375, align 4, !dbg !3621
  %tobool376 = icmp ne i32 %235, 0, !dbg !3617
  br i1 %tobool376, label %if.then377, label %if.else437, !dbg !3622

if.then377:                                       ; preds = %if.then373
  call void @llvm.dbg.declare(metadata i32* %i8x8, metadata !3623, metadata !DIExpression()), !dbg !3625
  store i32 0, i32* %i8x8, align 4, !dbg !3625
  br label %for.cond378, !dbg !3626

for.cond378:                                      ; preds = %for.inc434, %if.then377
  %236 = load i32, i32* %i8x8, align 4, !dbg !3627
  %cmp379 = icmp slt i32 %236, 4, !dbg !3629
  br i1 %cmp379, label %for.body381, label %for.end436, !dbg !3630

for.body381:                                      ; preds = %for.cond378
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3631, metadata !DIExpression()), !dbg !3633
  %237 = load i32, i32* %i8x8, align 4, !dbg !3634
  %and382 = and i32 %237, 1, !dbg !3635
  %mul383 = mul nsw i32 8, %and382, !dbg !3636
  store i32 %mul383, i32* %x, align 4, !dbg !3633
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3637, metadata !DIExpression()), !dbg !3638
  %238 = load i32, i32* %i8x8, align 4, !dbg !3639
  %shr384 = ashr i32 %238, 1, !dbg !3640
  %mul385 = mul nsw i32 8, %shr384, !dbg !3641
  store i32 %mul385, i32* %y, align 4, !dbg !3638
  %239 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3642
  %zigzagf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %239, i32 0, i32 72, !dbg !3643
  %sub_8x8 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf, i32 0, i32 2, !dbg !3644
  %240 = load i32 (i16*, i8*, i8*)*, i32 (i16*, i8*, i8*)** %sub_8x8, align 8, !dbg !3644
  %241 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3645
  %dct386 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %241, i32 0, i32 54, !dbg !3646
  %luma8x8387 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct386, i32 0, i32 2, !dbg !3647
  %242 = load i32, i32* %i8x8, align 4, !dbg !3648
  %idxprom388 = sext i32 %242 to i64, !dbg !3645
  %arrayidx389 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %luma8x8387, i64 0, i64 %idxprom388, !dbg !3645
  %arraydecay390 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx389, i64 0, i64 0, !dbg !3645
  %243 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3649
  %mb391 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %243, i32 0, i32 55, !dbg !3650
  %pic392 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb391, i32 0, i32 66, !dbg !3651
  %p_fenc393 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic392, i32 0, i32 16, !dbg !3652
  %arrayidx394 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc393, i64 0, i64 0, !dbg !3649
  %244 = load i8*, i8** %arrayidx394, align 16, !dbg !3649
  %245 = load i32, i32* %x, align 4, !dbg !3653
  %idx.ext = sext i32 %245 to i64, !dbg !3654
  %add.ptr = getelementptr inbounds i8, i8* %244, i64 %idx.ext, !dbg !3654
  %246 = load i32, i32* %y, align 4, !dbg !3655
  %mul395 = mul nsw i32 %246, 16, !dbg !3656
  %idx.ext396 = sext i32 %mul395 to i64, !dbg !3657
  %add.ptr397 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext396, !dbg !3657
  %247 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3658
  %mb398 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %247, i32 0, i32 55, !dbg !3659
  %pic399 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb398, i32 0, i32 66, !dbg !3660
  %p_fdec400 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic399, i32 0, i32 18, !dbg !3661
  %arrayidx401 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec400, i64 0, i64 0, !dbg !3658
  %248 = load i8*, i8** %arrayidx401, align 16, !dbg !3658
  %249 = load i32, i32* %x, align 4, !dbg !3662
  %idx.ext402 = sext i32 %249 to i64, !dbg !3663
  %add.ptr403 = getelementptr inbounds i8, i8* %248, i64 %idx.ext402, !dbg !3663
  %250 = load i32, i32* %y, align 4, !dbg !3664
  %mul404 = mul nsw i32 %250, 32, !dbg !3665
  %idx.ext405 = sext i32 %mul404 to i64, !dbg !3666
  %add.ptr406 = getelementptr inbounds i8, i8* %add.ptr403, i64 %idx.ext405, !dbg !3666
  %call407 = call i32 %240(i16* %arraydecay390, i8* %add.ptr397, i8* %add.ptr406), !dbg !3642
  store i32 %call407, i32* %nz, align 4, !dbg !3667
  %251 = load i32, i32* %nz, align 4, !dbg !3668
  %mul408 = mul nsw i32 %251, 257, !dbg !3668
  %conv409 = trunc i32 %mul408 to i16, !dbg !3668
  %252 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3668
  %mb410 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %252, i32 0, i32 55, !dbg !3668
  %cache411 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb410, i32 0, i32 67, !dbg !3668
  %non_zero_count412 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache411, i32 0, i32 2, !dbg !3668
  %253 = load i32, i32* %i8x8, align 4, !dbg !3668
  %mul413 = mul nsw i32 %253, 4, !dbg !3668
  %add414 = add nsw i32 %mul413, 0, !dbg !3668
  %idxprom415 = sext i32 %add414 to i64, !dbg !3668
  %arrayidx416 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom415, !dbg !3668
  %254 = load i32, i32* %arrayidx416, align 4, !dbg !3668
  %idxprom417 = sext i32 %254 to i64, !dbg !3668
  %arrayidx418 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count412, i64 0, i64 %idxprom417, !dbg !3668
  %255 = bitcast i8* %arrayidx418 to %union.x264_union16_t*, !dbg !3668
  %i419 = bitcast %union.x264_union16_t* %255 to i16*, !dbg !3668
  store i16 %conv409, i16* %i419, align 1, !dbg !3668
  %256 = load i32, i32* %nz, align 4, !dbg !3668
  %mul420 = mul nsw i32 %256, 257, !dbg !3668
  %conv421 = trunc i32 %mul420 to i16, !dbg !3668
  %257 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3668
  %mb422 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %257, i32 0, i32 55, !dbg !3668
  %cache423 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb422, i32 0, i32 67, !dbg !3668
  %non_zero_count424 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache423, i32 0, i32 2, !dbg !3668
  %258 = load i32, i32* %i8x8, align 4, !dbg !3668
  %mul425 = mul nsw i32 %258, 4, !dbg !3668
  %add426 = add nsw i32 %mul425, 2, !dbg !3668
  %idxprom427 = sext i32 %add426 to i64, !dbg !3668
  %arrayidx428 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom427, !dbg !3668
  %259 = load i32, i32* %arrayidx428, align 4, !dbg !3668
  %idxprom429 = sext i32 %259 to i64, !dbg !3668
  %arrayidx430 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count424, i64 0, i64 %idxprom429, !dbg !3668
  %260 = bitcast i8* %arrayidx430 to %union.x264_union16_t*, !dbg !3668
  %i431 = bitcast %union.x264_union16_t* %260 to i16*, !dbg !3668
  store i16 %conv421, i16* %i431, align 1, !dbg !3668
  %261 = load i32, i32* %nz, align 4, !dbg !3670
  %262 = load i32, i32* %i8x8, align 4, !dbg !3671
  %shl = shl i32 %261, %262, !dbg !3672
  %263 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3673
  %mb432 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %263, i32 0, i32 55, !dbg !3674
  %i_cbp_luma433 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb432, i32 0, i32 57, !dbg !3675
  %264 = load i32, i32* %i_cbp_luma433, align 8, !dbg !3676
  %or = or i32 %264, %shl, !dbg !3676
  store i32 %or, i32* %i_cbp_luma433, align 8, !dbg !3676
  br label %for.inc434, !dbg !3677

for.inc434:                                       ; preds = %for.body381
  %265 = load i32, i32* %i8x8, align 4, !dbg !3678
  %inc435 = add nsw i32 %265, 1, !dbg !3678
  store i32 %inc435, i32* %i8x8, align 4, !dbg !3678
  br label %for.cond378, !dbg !3679, !llvm.loop !3680

for.end436:                                       ; preds = %for.cond378
  br label %if.end483, !dbg !3681

if.else437:                                       ; preds = %if.then373
  call void @llvm.dbg.declare(metadata i32* %i4x4, metadata !3682, metadata !DIExpression()), !dbg !3684
  store i32 0, i32* %i4x4, align 4, !dbg !3684
  br label %for.cond438, !dbg !3685

for.cond438:                                      ; preds = %for.inc480, %if.else437
  %266 = load i32, i32* %i4x4, align 4, !dbg !3686
  %cmp439 = icmp slt i32 %266, 16, !dbg !3688
  br i1 %cmp439, label %for.body441, label %for.end482, !dbg !3689

for.body441:                                      ; preds = %for.cond438
  %267 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3690
  %zigzagf442 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %267, i32 0, i32 72, !dbg !3692
  %sub_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf442, i32 0, i32 3, !dbg !3693
  %268 = load i32 (i16*, i8*, i8*)*, i32 (i16*, i8*, i8*)** %sub_4x4, align 8, !dbg !3693
  %269 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3694
  %dct443 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %269, i32 0, i32 54, !dbg !3695
  %luma4x4444 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct443, i32 0, i32 3, !dbg !3696
  %270 = load i32, i32* %i4x4, align 4, !dbg !3697
  %idxprom445 = sext i32 %270 to i64, !dbg !3694
  %arrayidx446 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4444, i64 0, i64 %idxprom445, !dbg !3694
  %arraydecay447 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx446, i64 0, i64 0, !dbg !3694
  %271 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3698
  %mb448 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %271, i32 0, i32 55, !dbg !3699
  %pic449 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb448, i32 0, i32 66, !dbg !3700
  %p_fenc450 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic449, i32 0, i32 16, !dbg !3701
  %arrayidx451 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc450, i64 0, i64 0, !dbg !3698
  %272 = load i8*, i8** %arrayidx451, align 16, !dbg !3698
  %273 = load i32, i32* %i4x4, align 4, !dbg !3702
  %idxprom452 = sext i32 %273 to i64, !dbg !3703
  %arrayidx453 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_xy_fenc, i64 0, i64 %idxprom452, !dbg !3703
  %274 = load i8, i8* %arrayidx453, align 1, !dbg !3703
  %conv454 = zext i8 %274 to i32, !dbg !3703
  %idx.ext455 = sext i32 %conv454 to i64, !dbg !3704
  %add.ptr456 = getelementptr inbounds i8, i8* %272, i64 %idx.ext455, !dbg !3704
  %275 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3705
  %mb457 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %275, i32 0, i32 55, !dbg !3706
  %pic458 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb457, i32 0, i32 66, !dbg !3707
  %p_fdec459 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic458, i32 0, i32 18, !dbg !3708
  %arrayidx460 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec459, i64 0, i64 0, !dbg !3705
  %276 = load i8*, i8** %arrayidx460, align 16, !dbg !3705
  %277 = load i32, i32* %i4x4, align 4, !dbg !3709
  %idxprom461 = sext i32 %277 to i64, !dbg !3710
  %arrayidx462 = getelementptr inbounds [16 x i16], [16 x i16]* @block_idx_xy_fdec, i64 0, i64 %idxprom461, !dbg !3710
  %278 = load i16, i16* %arrayidx462, align 2, !dbg !3710
  %conv463 = zext i16 %278 to i32, !dbg !3710
  %idx.ext464 = sext i32 %conv463 to i64, !dbg !3711
  %add.ptr465 = getelementptr inbounds i8, i8* %276, i64 %idx.ext464, !dbg !3711
  %call466 = call i32 %268(i16* %arraydecay447, i8* %add.ptr456, i8* %add.ptr465), !dbg !3690
  store i32 %call466, i32* %nz, align 4, !dbg !3712
  %279 = load i32, i32* %nz, align 4, !dbg !3713
  %conv467 = trunc i32 %279 to i8, !dbg !3713
  %280 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3714
  %mb468 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %280, i32 0, i32 55, !dbg !3715
  %cache469 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb468, i32 0, i32 67, !dbg !3716
  %non_zero_count470 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache469, i32 0, i32 2, !dbg !3717
  %281 = load i32, i32* %i4x4, align 4, !dbg !3718
  %idxprom471 = sext i32 %281 to i64, !dbg !3719
  %arrayidx472 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom471, !dbg !3719
  %282 = load i32, i32* %arrayidx472, align 4, !dbg !3719
  %idxprom473 = sext i32 %282 to i64, !dbg !3714
  %arrayidx474 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count470, i64 0, i64 %idxprom473, !dbg !3714
  store i8 %conv467, i8* %arrayidx474, align 1, !dbg !3720
  %283 = load i32, i32* %nz, align 4, !dbg !3721
  %284 = load i32, i32* %i4x4, align 4, !dbg !3722
  %shr475 = ashr i32 %284, 2, !dbg !3723
  %shl476 = shl i32 %283, %shr475, !dbg !3724
  %285 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3725
  %mb477 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %285, i32 0, i32 55, !dbg !3726
  %i_cbp_luma478 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb477, i32 0, i32 57, !dbg !3727
  %286 = load i32, i32* %i_cbp_luma478, align 8, !dbg !3728
  %or479 = or i32 %286, %shl476, !dbg !3728
  store i32 %or479, i32* %i_cbp_luma478, align 8, !dbg !3728
  br label %for.inc480, !dbg !3729

for.inc480:                                       ; preds = %for.body441
  %287 = load i32, i32* %i4x4, align 4, !dbg !3730
  %inc481 = add nsw i32 %287, 1, !dbg !3730
  store i32 %inc481, i32* %i4x4, align 4, !dbg !3730
  br label %for.cond438, !dbg !3731, !llvm.loop !3732

for.end482:                                       ; preds = %for.cond438
  br label %if.end483

if.end483:                                        ; preds = %for.end482, %for.end436
  br label %if.end894, !dbg !3734

if.else484:                                       ; preds = %if.end369
  %288 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3735
  %mb485 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %288, i32 0, i32 55, !dbg !3737
  %b_transform_8x8486 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb485, i32 0, i32 56, !dbg !3738
  %289 = load i32, i32* %b_transform_8x8486, align 4, !dbg !3738
  %tobool487 = icmp ne i32 %289, 0, !dbg !3735
  br i1 %tobool487, label %if.then488, label %if.else674, !dbg !3739

if.then488:                                       ; preds = %if.else484
  call void @llvm.dbg.declare(metadata [4 x [64 x i16]]* %dct8x8, metadata !3740, metadata !DIExpression()), !dbg !3742
  %290 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3743
  %mb489 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %290, i32 0, i32 55, !dbg !3744
  %b_trellis = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb489, i32 0, i32 12, !dbg !3745
  %291 = load i32, i32* %b_trellis, align 16, !dbg !3745
  %tobool490 = icmp ne i32 %291, 0, !dbg !3746
  %lnot = xor i1 %tobool490, true, !dbg !3746
  %lnot.ext = zext i1 %lnot to i32, !dbg !3746
  %292 = load i32, i32* %b_decimate, align 4, !dbg !3747
  %and491 = and i32 %292, %lnot.ext, !dbg !3747
  store i32 %and491, i32* %b_decimate, align 4, !dbg !3747
  %293 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3748
  %dctf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %293, i32 0, i32 71, !dbg !3749
  %sub16x16_dct8 = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf, i32 0, i32 11, !dbg !3750
  %294 = load void ([64 x i16]*, i8*, i8*)*, void ([64 x i16]*, i8*, i8*)** %sub16x16_dct8, align 8, !dbg !3750
  %arraydecay492 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %dct8x8, i64 0, i64 0, !dbg !3751
  %295 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3752
  %mb493 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %295, i32 0, i32 55, !dbg !3753
  %pic494 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb493, i32 0, i32 66, !dbg !3754
  %p_fenc495 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic494, i32 0, i32 16, !dbg !3755
  %arrayidx496 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc495, i64 0, i64 0, !dbg !3752
  %296 = load i8*, i8** %arrayidx496, align 16, !dbg !3752
  %297 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3756
  %mb497 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %297, i32 0, i32 55, !dbg !3757
  %pic498 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb497, i32 0, i32 66, !dbg !3758
  %p_fdec499 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic498, i32 0, i32 18, !dbg !3759
  %arrayidx500 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec499, i64 0, i64 0, !dbg !3756
  %298 = load i8*, i8** %arrayidx500, align 16, !dbg !3756
  call void %294([64 x i16]* %arraydecay492, i8* %296, i8* %298), !dbg !3748
  %299 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3760
  %mb501 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %299, i32 0, i32 55, !dbg !3761
  %b_noise_reduction = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb501, i32 0, i32 13, !dbg !3762
  %300 = load i32, i32* %b_noise_reduction, align 4, !dbg !3762
  %mul502 = mul nsw i32 %300, 4, !dbg !3763
  %301 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3764
  %nr_count = getelementptr inbounds %struct.x264_t, %struct.x264_t* %301, i32 0, i32 60, !dbg !3765
  %arrayidx503 = getelementptr inbounds [2 x i32], [2 x i32]* %nr_count, i64 0, i64 1, !dbg !3764
  %302 = load i32, i32* %arrayidx503, align 4, !dbg !3766
  %add504 = add i32 %302, %mul502, !dbg !3766
  store i32 %add504, i32* %arrayidx503, align 4, !dbg !3766
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !3767, metadata !DIExpression()), !dbg !3769
  store i32 0, i32* %idx, align 4, !dbg !3769
  br label %for.cond505, !dbg !3770

for.cond505:                                      ; preds = %for.inc561, %if.then488
  %303 = load i32, i32* %idx, align 4, !dbg !3771
  %cmp506 = icmp slt i32 %303, 4, !dbg !3773
  br i1 %cmp506, label %for.body508, label %for.end563, !dbg !3774

for.body508:                                      ; preds = %for.cond505
  %304 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3775
  %mb509 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %304, i32 0, i32 55, !dbg !3778
  %b_noise_reduction510 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb509, i32 0, i32 13, !dbg !3779
  %305 = load i32, i32* %b_noise_reduction510, align 4, !dbg !3779
  %tobool511 = icmp ne i32 %305, 0, !dbg !3775
  br i1 %tobool511, label %if.then512, label %if.end520, !dbg !3780

if.then512:                                       ; preds = %for.body508
  %306 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3781
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %306, i32 0, i32 73, !dbg !3782
  %denoise_dct = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 7, !dbg !3783
  %307 = load void (i16*, i32*, i16*, i32)*, void (i16*, i32*, i16*, i32)** %denoise_dct, align 8, !dbg !3783
  %308 = load i32, i32* %idx, align 4, !dbg !3784
  %idxprom513 = sext i32 %308 to i64, !dbg !3785
  %arrayidx514 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %dct8x8, i64 0, i64 %idxprom513, !dbg !3785
  %arraydecay515 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx514, i64 0, i64 0, !dbg !3785
  %309 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3786
  %nr_residual_sum = getelementptr inbounds %struct.x264_t, %struct.x264_t* %309, i32 0, i32 58, !dbg !3787
  %arrayidx516 = getelementptr inbounds [2 x [64 x i32]], [2 x [64 x i32]]* %nr_residual_sum, i64 0, i64 1, !dbg !3786
  %arraydecay517 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx516, i64 0, i64 0, !dbg !3786
  %310 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3788
  %nr_offset = getelementptr inbounds %struct.x264_t, %struct.x264_t* %310, i32 0, i32 59, !dbg !3789
  %arrayidx518 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* %nr_offset, i64 0, i64 1, !dbg !3788
  %arraydecay519 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx518, i64 0, i64 0, !dbg !3788
  call void %307(i16* %arraydecay515, i32* %arraydecay517, i16* %arraydecay519, i32 64), !dbg !3781
  br label %if.end520, !dbg !3781

if.end520:                                        ; preds = %if.then512, %for.body508
  %311 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3790
  %312 = load i32, i32* %idx, align 4, !dbg !3791
  %idxprom521 = sext i32 %312 to i64, !dbg !3792
  %arrayidx522 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %dct8x8, i64 0, i64 %idxprom521, !dbg !3792
  %arraydecay523 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx522, i64 0, i64 0, !dbg !3792
  %313 = load i32, i32* %i_qp, align 4, !dbg !3793
  %314 = load i32, i32* %idx, align 4, !dbg !3794
  %call524 = call i32 @x264_quant_8x8(%struct.x264_t* %311, i16* %arraydecay523, i32 %313, i32 0, i32 %314), !dbg !3795
  store i32 %call524, i32* %nz, align 4, !dbg !3796
  %315 = load i32, i32* %nz, align 4, !dbg !3797
  %tobool525 = icmp ne i32 %315, 0, !dbg !3797
  br i1 %tobool525, label %if.then526, label %if.end560, !dbg !3799

if.then526:                                       ; preds = %if.end520
  %316 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3800
  %zigzagf527 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %316, i32 0, i32 72, !dbg !3802
  %scan_8x8 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf527, i32 0, i32 0, !dbg !3803
  %317 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_8x8, align 8, !dbg !3803
  %318 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3804
  %dct528 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %318, i32 0, i32 54, !dbg !3805
  %luma8x8529 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct528, i32 0, i32 2, !dbg !3806
  %319 = load i32, i32* %idx, align 4, !dbg !3807
  %idxprom530 = sext i32 %319 to i64, !dbg !3804
  %arrayidx531 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %luma8x8529, i64 0, i64 %idxprom530, !dbg !3804
  %arraydecay532 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx531, i64 0, i64 0, !dbg !3804
  %320 = load i32, i32* %idx, align 4, !dbg !3808
  %idxprom533 = sext i32 %320 to i64, !dbg !3809
  %arrayidx534 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %dct8x8, i64 0, i64 %idxprom533, !dbg !3809
  %arraydecay535 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx534, i64 0, i64 0, !dbg !3809
  call void %317(i16* %arraydecay532, i16* %arraydecay535), !dbg !3800
  %321 = load i32, i32* %b_decimate, align 4, !dbg !3810
  %tobool536 = icmp ne i32 %321, 0, !dbg !3810
  br i1 %tobool536, label %if.then537, label %if.else554, !dbg !3812

if.then537:                                       ; preds = %if.then526
  call void @llvm.dbg.declare(metadata i32* %i_decimate_8x8, metadata !3813, metadata !DIExpression()), !dbg !3815
  %322 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3816
  %quantf538 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %322, i32 0, i32 73, !dbg !3817
  %decimate_score64 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf538, i32 0, i32 10, !dbg !3818
  %323 = load i32 (i16*)*, i32 (i16*)** %decimate_score64, align 8, !dbg !3818
  %324 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3819
  %dct539 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %324, i32 0, i32 54, !dbg !3820
  %luma8x8540 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct539, i32 0, i32 2, !dbg !3821
  %325 = load i32, i32* %idx, align 4, !dbg !3822
  %idxprom541 = sext i32 %325 to i64, !dbg !3819
  %arrayidx542 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %luma8x8540, i64 0, i64 %idxprom541, !dbg !3819
  %arraydecay543 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx542, i64 0, i64 0, !dbg !3819
  %call544 = call i32 %323(i16* %arraydecay543), !dbg !3816
  store i32 %call544, i32* %i_decimate_8x8, align 4, !dbg !3815
  %326 = load i32, i32* %i_decimate_8x8, align 4, !dbg !3823
  %327 = load i32, i32* %i_decimate_mb, align 4, !dbg !3824
  %add545 = add nsw i32 %327, %326, !dbg !3824
  store i32 %add545, i32* %i_decimate_mb, align 4, !dbg !3824
  %328 = load i32, i32* %i_decimate_8x8, align 4, !dbg !3825
  %cmp546 = icmp sge i32 %328, 4, !dbg !3827
  br i1 %cmp546, label %if.then548, label %if.end553, !dbg !3828

if.then548:                                       ; preds = %if.then537
  %329 = load i32, i32* %idx, align 4, !dbg !3829
  %shl549 = shl i32 1, %329, !dbg !3830
  %330 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3831
  %mb550 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %330, i32 0, i32 55, !dbg !3832
  %i_cbp_luma551 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb550, i32 0, i32 57, !dbg !3833
  %331 = load i32, i32* %i_cbp_luma551, align 8, !dbg !3834
  %or552 = or i32 %331, %shl549, !dbg !3834
  store i32 %or552, i32* %i_cbp_luma551, align 8, !dbg !3834
  br label %if.end553, !dbg !3831

if.end553:                                        ; preds = %if.then548, %if.then537
  br label %if.end559, !dbg !3835

if.else554:                                       ; preds = %if.then526
  %332 = load i32, i32* %idx, align 4, !dbg !3836
  %shl555 = shl i32 1, %332, !dbg !3837
  %333 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3838
  %mb556 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %333, i32 0, i32 55, !dbg !3839
  %i_cbp_luma557 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb556, i32 0, i32 57, !dbg !3840
  %334 = load i32, i32* %i_cbp_luma557, align 8, !dbg !3841
  %or558 = or i32 %334, %shl555, !dbg !3841
  store i32 %or558, i32* %i_cbp_luma557, align 8, !dbg !3841
  br label %if.end559

if.end559:                                        ; preds = %if.else554, %if.end553
  br label %if.end560, !dbg !3842

if.end560:                                        ; preds = %if.end559, %if.end520
  br label %for.inc561, !dbg !3843

for.inc561:                                       ; preds = %if.end560
  %335 = load i32, i32* %idx, align 4, !dbg !3844
  %inc562 = add nsw i32 %335, 1, !dbg !3844
  store i32 %inc562, i32* %idx, align 4, !dbg !3844
  br label %for.cond505, !dbg !3845, !llvm.loop !3846

for.end563:                                       ; preds = %for.cond505
  %336 = load i32, i32* %i_decimate_mb, align 4, !dbg !3848
  %cmp564 = icmp slt i32 %336, 6, !dbg !3850
  br i1 %cmp564, label %land.lhs.true566, label %if.else595, !dbg !3851

land.lhs.true566:                                 ; preds = %for.end563
  %337 = load i32, i32* %b_decimate, align 4, !dbg !3852
  %tobool567 = icmp ne i32 %337, 0, !dbg !3852
  br i1 %tobool567, label %if.then568, label %if.else595, !dbg !3853

if.then568:                                       ; preds = %land.lhs.true566
  %338 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3854
  %mb569 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %338, i32 0, i32 55, !dbg !3856
  %i_cbp_luma570 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb569, i32 0, i32 57, !dbg !3857
  store i32 0, i32* %i_cbp_luma570, align 8, !dbg !3858
  %339 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3859
  %mb571 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %339, i32 0, i32 55, !dbg !3859
  %cache572 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb571, i32 0, i32 67, !dbg !3859
  %non_zero_count573 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache572, i32 0, i32 2, !dbg !3859
  %340 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !3859
  %idxprom574 = sext i32 %340 to i64, !dbg !3859
  %arrayidx575 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count573, i64 0, i64 %idxprom574, !dbg !3859
  %341 = bitcast i8* %arrayidx575 to %union.x264_union32_t*, !dbg !3859
  %i576 = bitcast %union.x264_union32_t* %341 to i32*, !dbg !3859
  store i32 0, i32* %i576, align 1, !dbg !3859
  %342 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3859
  %mb577 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %342, i32 0, i32 55, !dbg !3859
  %cache578 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb577, i32 0, i32 67, !dbg !3859
  %non_zero_count579 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache578, i32 0, i32 2, !dbg !3859
  %343 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 2), align 8, !dbg !3859
  %idxprom580 = sext i32 %343 to i64, !dbg !3859
  %arrayidx581 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count579, i64 0, i64 %idxprom580, !dbg !3859
  %344 = bitcast i8* %arrayidx581 to %union.x264_union32_t*, !dbg !3859
  %i582 = bitcast %union.x264_union32_t* %344 to i32*, !dbg !3859
  store i32 0, i32* %i582, align 1, !dbg !3859
  %345 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3859
  %mb583 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %345, i32 0, i32 55, !dbg !3859
  %cache584 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb583, i32 0, i32 67, !dbg !3859
  %non_zero_count585 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache584, i32 0, i32 2, !dbg !3859
  %346 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 8), align 16, !dbg !3859
  %idxprom586 = sext i32 %346 to i64, !dbg !3859
  %arrayidx587 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count585, i64 0, i64 %idxprom586, !dbg !3859
  %347 = bitcast i8* %arrayidx587 to %union.x264_union32_t*, !dbg !3859
  %i588 = bitcast %union.x264_union32_t* %347 to i32*, !dbg !3859
  store i32 0, i32* %i588, align 1, !dbg !3859
  %348 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3859
  %mb589 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %348, i32 0, i32 55, !dbg !3859
  %cache590 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb589, i32 0, i32 67, !dbg !3859
  %non_zero_count591 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache590, i32 0, i32 2, !dbg !3859
  %349 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 10), align 8, !dbg !3859
  %idxprom592 = sext i32 %349 to i64, !dbg !3859
  %arrayidx593 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count591, i64 0, i64 %idxprom592, !dbg !3859
  %350 = bitcast i8* %arrayidx593 to %union.x264_union32_t*, !dbg !3859
  %i594 = bitcast %union.x264_union32_t* %350 to i32*, !dbg !3859
  store i32 0, i32* %i594, align 1, !dbg !3859
  br label %if.end673, !dbg !3861

if.else595:                                       ; preds = %land.lhs.true566, %for.end563
  call void @llvm.dbg.declare(metadata i32* %idx596, metadata !3862, metadata !DIExpression()), !dbg !3865
  store i32 0, i32* %idx596, align 4, !dbg !3865
  br label %for.cond597, !dbg !3866

for.cond597:                                      ; preds = %for.inc670, %if.else595
  %351 = load i32, i32* %idx596, align 4, !dbg !3867
  %cmp598 = icmp slt i32 %351, 4, !dbg !3869
  br i1 %cmp598, label %for.body600, label %for.end672, !dbg !3870

for.body600:                                      ; preds = %for.cond597
  %352 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3871
  %mb601 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %352, i32 0, i32 55, !dbg !3874
  %i_cbp_luma602 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb601, i32 0, i32 57, !dbg !3875
  %353 = load i32, i32* %i_cbp_luma602, align 8, !dbg !3875
  %354 = load i32, i32* %idx596, align 4, !dbg !3876
  %shl603 = shl i32 1, %354, !dbg !3877
  %and604 = and i32 %353, %shl603, !dbg !3878
  %tobool605 = icmp ne i32 %and604, 0, !dbg !3878
  br i1 %tobool605, label %if.then606, label %if.else648, !dbg !3879

if.then606:                                       ; preds = %for.body600
  %355 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3880
  %quantf607 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %355, i32 0, i32 73, !dbg !3882
  %dequant_8x8 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf607, i32 0, i32 4, !dbg !3883
  %356 = load void (i16*, [64 x i32]*, i32)*, void (i16*, [64 x i32]*, i32)** %dequant_8x8, align 8, !dbg !3883
  %357 = load i32, i32* %idx596, align 4, !dbg !3884
  %idxprom608 = sext i32 %357 to i64, !dbg !3885
  %arrayidx609 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %dct8x8, i64 0, i64 %idxprom608, !dbg !3885
  %arraydecay610 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx609, i64 0, i64 0, !dbg !3885
  %358 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3886
  %dequant8_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %358, i32 0, i32 30, !dbg !3887
  %arrayidx611 = getelementptr inbounds [2 x [64 x i32]*], [2 x [64 x i32]*]* %dequant8_mf, i64 0, i64 1, !dbg !3886
  %359 = load [64 x i32]*, [64 x i32]** %arrayidx611, align 8, !dbg !3886
  %360 = load i32, i32* %i_qp, align 4, !dbg !3888
  call void %356(i16* %arraydecay610, [64 x i32]* %359, i32 %360), !dbg !3880
  %361 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3889
  %dctf612 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %361, i32 0, i32 71, !dbg !3890
  %add8x8_idct8 = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf612, i32 0, i32 10, !dbg !3891
  %362 = load void (i8*, i16*)*, void (i8*, i16*)** %add8x8_idct8, align 16, !dbg !3891
  %363 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3892
  %mb613 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %363, i32 0, i32 55, !dbg !3893
  %pic614 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb613, i32 0, i32 66, !dbg !3894
  %p_fdec615 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic614, i32 0, i32 18, !dbg !3895
  %arrayidx616 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec615, i64 0, i64 0, !dbg !3892
  %364 = load i8*, i8** %arrayidx616, align 16, !dbg !3892
  %365 = load i32, i32* %idx596, align 4, !dbg !3896
  %and617 = and i32 %365, 1, !dbg !3897
  %mul618 = mul nsw i32 %and617, 8, !dbg !3898
  %366 = load i32, i32* %idx596, align 4, !dbg !3899
  %shr619 = ashr i32 %366, 1, !dbg !3900
  %mul620 = mul nsw i32 %shr619, 8, !dbg !3901
  %mul621 = mul nsw i32 %mul620, 32, !dbg !3902
  %add622 = add nsw i32 %mul618, %mul621, !dbg !3903
  %idxprom623 = sext i32 %add622 to i64, !dbg !3892
  %arrayidx624 = getelementptr inbounds i8, i8* %364, i64 %idxprom623, !dbg !3892
  %367 = load i32, i32* %idx596, align 4, !dbg !3904
  %idxprom625 = sext i32 %367 to i64, !dbg !3905
  %arrayidx626 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %dct8x8, i64 0, i64 %idxprom625, !dbg !3905
  %arraydecay627 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx626, i64 0, i64 0, !dbg !3905
  call void %362(i8* %arrayidx624, i16* %arraydecay627), !dbg !3889
  %368 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3906
  %mb628 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %368, i32 0, i32 55, !dbg !3906
  %cache629 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb628, i32 0, i32 67, !dbg !3906
  %non_zero_count630 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache629, i32 0, i32 2, !dbg !3906
  %369 = load i32, i32* %idx596, align 4, !dbg !3906
  %mul631 = mul nsw i32 %369, 4, !dbg !3906
  %add632 = add nsw i32 %mul631, 0, !dbg !3906
  %idxprom633 = sext i32 %add632 to i64, !dbg !3906
  %arrayidx634 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom633, !dbg !3906
  %370 = load i32, i32* %arrayidx634, align 4, !dbg !3906
  %idxprom635 = sext i32 %370 to i64, !dbg !3906
  %arrayidx636 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count630, i64 0, i64 %idxprom635, !dbg !3906
  %371 = bitcast i8* %arrayidx636 to %union.x264_union16_t*, !dbg !3906
  %i637 = bitcast %union.x264_union16_t* %371 to i16*, !dbg !3906
  store i16 257, i16* %i637, align 1, !dbg !3906
  %372 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3906
  %mb638 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %372, i32 0, i32 55, !dbg !3906
  %cache639 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb638, i32 0, i32 67, !dbg !3906
  %non_zero_count640 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache639, i32 0, i32 2, !dbg !3906
  %373 = load i32, i32* %idx596, align 4, !dbg !3906
  %mul641 = mul nsw i32 %373, 4, !dbg !3906
  %add642 = add nsw i32 %mul641, 2, !dbg !3906
  %idxprom643 = sext i32 %add642 to i64, !dbg !3906
  %arrayidx644 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom643, !dbg !3906
  %374 = load i32, i32* %arrayidx644, align 4, !dbg !3906
  %idxprom645 = sext i32 %374 to i64, !dbg !3906
  %arrayidx646 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count640, i64 0, i64 %idxprom645, !dbg !3906
  %375 = bitcast i8* %arrayidx646 to %union.x264_union16_t*, !dbg !3906
  %i647 = bitcast %union.x264_union16_t* %375 to i16*, !dbg !3906
  store i16 257, i16* %i647, align 1, !dbg !3906
  br label %if.end669, !dbg !3908

if.else648:                                       ; preds = %for.body600
  %376 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3909
  %mb649 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %376, i32 0, i32 55, !dbg !3909
  %cache650 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb649, i32 0, i32 67, !dbg !3909
  %non_zero_count651 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache650, i32 0, i32 2, !dbg !3909
  %377 = load i32, i32* %idx596, align 4, !dbg !3909
  %mul652 = mul nsw i32 %377, 4, !dbg !3909
  %add653 = add nsw i32 %mul652, 0, !dbg !3909
  %idxprom654 = sext i32 %add653 to i64, !dbg !3909
  %arrayidx655 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom654, !dbg !3909
  %378 = load i32, i32* %arrayidx655, align 4, !dbg !3909
  %idxprom656 = sext i32 %378 to i64, !dbg !3909
  %arrayidx657 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count651, i64 0, i64 %idxprom656, !dbg !3909
  %379 = bitcast i8* %arrayidx657 to %union.x264_union16_t*, !dbg !3909
  %i658 = bitcast %union.x264_union16_t* %379 to i16*, !dbg !3909
  store i16 0, i16* %i658, align 1, !dbg !3909
  %380 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3909
  %mb659 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %380, i32 0, i32 55, !dbg !3909
  %cache660 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb659, i32 0, i32 67, !dbg !3909
  %non_zero_count661 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache660, i32 0, i32 2, !dbg !3909
  %381 = load i32, i32* %idx596, align 4, !dbg !3909
  %mul662 = mul nsw i32 %381, 4, !dbg !3909
  %add663 = add nsw i32 %mul662, 2, !dbg !3909
  %idxprom664 = sext i32 %add663 to i64, !dbg !3909
  %arrayidx665 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom664, !dbg !3909
  %382 = load i32, i32* %arrayidx665, align 4, !dbg !3909
  %idxprom666 = sext i32 %382 to i64, !dbg !3909
  %arrayidx667 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count661, i64 0, i64 %idxprom666, !dbg !3909
  %383 = bitcast i8* %arrayidx667 to %union.x264_union16_t*, !dbg !3909
  %i668 = bitcast %union.x264_union16_t* %383 to i16*, !dbg !3909
  store i16 0, i16* %i668, align 1, !dbg !3909
  br label %if.end669

if.end669:                                        ; preds = %if.else648, %if.then606
  br label %for.inc670, !dbg !3911

for.inc670:                                       ; preds = %if.end669
  %384 = load i32, i32* %idx596, align 4, !dbg !3912
  %inc671 = add nsw i32 %384, 1, !dbg !3912
  store i32 %inc671, i32* %idx596, align 4, !dbg !3912
  br label %for.cond597, !dbg !3913, !llvm.loop !3914

for.end672:                                       ; preds = %for.cond597
  br label %if.end673

if.end673:                                        ; preds = %for.end672, %if.then568
  br label %if.end893, !dbg !3916

if.else674:                                       ; preds = %if.else484
  call void @llvm.dbg.declare(metadata [16 x [16 x i16]]* %dct4x4, metadata !3917, metadata !DIExpression()), !dbg !3919
  %385 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3920
  %dctf675 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %385, i32 0, i32 71, !dbg !3921
  %sub16x16_dct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf675, i32 0, i32 6, !dbg !3922
  %386 = load void ([16 x i16]*, i8*, i8*)*, void ([16 x i16]*, i8*, i8*)** %sub16x16_dct, align 16, !dbg !3922
  %arraydecay676 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !3923
  %387 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3924
  %mb677 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %387, i32 0, i32 55, !dbg !3925
  %pic678 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb677, i32 0, i32 66, !dbg !3926
  %p_fenc679 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic678, i32 0, i32 16, !dbg !3927
  %arrayidx680 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc679, i64 0, i64 0, !dbg !3924
  %388 = load i8*, i8** %arrayidx680, align 16, !dbg !3924
  %389 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3928
  %mb681 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %389, i32 0, i32 55, !dbg !3929
  %pic682 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb681, i32 0, i32 66, !dbg !3930
  %p_fdec683 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic682, i32 0, i32 18, !dbg !3931
  %arrayidx684 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec683, i64 0, i64 0, !dbg !3928
  %390 = load i8*, i8** %arrayidx684, align 16, !dbg !3928
  call void %386([16 x i16]* %arraydecay676, i8* %388, i8* %390), !dbg !3920
  %391 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3932
  %mb685 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %391, i32 0, i32 55, !dbg !3933
  %b_noise_reduction686 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb685, i32 0, i32 13, !dbg !3934
  %392 = load i32, i32* %b_noise_reduction686, align 4, !dbg !3934
  %mul687 = mul nsw i32 %392, 16, !dbg !3935
  %393 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3936
  %nr_count688 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %393, i32 0, i32 60, !dbg !3937
  %arrayidx689 = getelementptr inbounds [2 x i32], [2 x i32]* %nr_count688, i64 0, i64 0, !dbg !3936
  %394 = load i32, i32* %arrayidx689, align 16, !dbg !3938
  %add690 = add i32 %394, %mul687, !dbg !3938
  store i32 %add690, i32* %arrayidx689, align 16, !dbg !3938
  call void @llvm.dbg.declare(metadata i32* %i8x8691, metadata !3939, metadata !DIExpression()), !dbg !3941
  store i32 0, i32* %i8x8691, align 4, !dbg !3941
  br label %for.cond692, !dbg !3942

for.cond692:                                      ; preds = %for.inc824, %if.else674
  %395 = load i32, i32* %i8x8691, align 4, !dbg !3943
  %cmp693 = icmp slt i32 %395, 4, !dbg !3945
  br i1 %cmp693, label %for.body695, label %for.end826, !dbg !3946

for.body695:                                      ; preds = %for.cond692
  call void @llvm.dbg.declare(metadata i32* %i_decimate_8x8696, metadata !3947, metadata !DIExpression()), !dbg !3949
  store i32 0, i32* %i_decimate_8x8696, align 4, !dbg !3949
  call void @llvm.dbg.declare(metadata i32* %cbp, metadata !3950, metadata !DIExpression()), !dbg !3951
  store i32 0, i32* %cbp, align 4, !dbg !3951
  call void @llvm.dbg.declare(metadata i32* %i4x4697, metadata !3952, metadata !DIExpression()), !dbg !3954
  store i32 0, i32* %i4x4697, align 4, !dbg !3954
  br label %for.cond698, !dbg !3955

for.cond698:                                      ; preds = %for.inc764, %for.body695
  %396 = load i32, i32* %i4x4697, align 4, !dbg !3956
  %cmp699 = icmp slt i32 %396, 4, !dbg !3958
  br i1 %cmp699, label %for.body701, label %for.end766, !dbg !3959

for.body701:                                      ; preds = %for.cond698
  call void @llvm.dbg.declare(metadata i32* %idx702, metadata !3960, metadata !DIExpression()), !dbg !3962
  %397 = load i32, i32* %i8x8691, align 4, !dbg !3963
  %mul703 = mul nsw i32 %397, 4, !dbg !3964
  %398 = load i32, i32* %i4x4697, align 4, !dbg !3965
  %add704 = add nsw i32 %mul703, %398, !dbg !3966
  store i32 %add704, i32* %idx702, align 4, !dbg !3962
  %399 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3967
  %mb705 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %399, i32 0, i32 55, !dbg !3969
  %b_noise_reduction706 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb705, i32 0, i32 13, !dbg !3970
  %400 = load i32, i32* %b_noise_reduction706, align 4, !dbg !3970
  %tobool707 = icmp ne i32 %400, 0, !dbg !3967
  br i1 %tobool707, label %if.then708, label %if.end720, !dbg !3971

if.then708:                                       ; preds = %for.body701
  %401 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3972
  %quantf709 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %401, i32 0, i32 73, !dbg !3973
  %denoise_dct710 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf709, i32 0, i32 7, !dbg !3974
  %402 = load void (i16*, i32*, i16*, i32)*, void (i16*, i32*, i16*, i32)** %denoise_dct710, align 8, !dbg !3974
  %403 = load i32, i32* %idx702, align 4, !dbg !3975
  %idxprom711 = sext i32 %403 to i64, !dbg !3976
  %arrayidx712 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom711, !dbg !3976
  %arraydecay713 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx712, i64 0, i64 0, !dbg !3976
  %404 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3977
  %nr_residual_sum714 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %404, i32 0, i32 58, !dbg !3978
  %arrayidx715 = getelementptr inbounds [2 x [64 x i32]], [2 x [64 x i32]]* %nr_residual_sum714, i64 0, i64 0, !dbg !3977
  %arraydecay716 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx715, i64 0, i64 0, !dbg !3977
  %405 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3979
  %nr_offset717 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %405, i32 0, i32 59, !dbg !3980
  %arrayidx718 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* %nr_offset717, i64 0, i64 0, !dbg !3979
  %arraydecay719 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx718, i64 0, i64 0, !dbg !3979
  call void %402(i16* %arraydecay713, i32* %arraydecay716, i16* %arraydecay719, i32 16), !dbg !3972
  br label %if.end720, !dbg !3972

if.end720:                                        ; preds = %if.then708, %for.body701
  %406 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3981
  %407 = load i32, i32* %idx702, align 4, !dbg !3982
  %idxprom721 = sext i32 %407 to i64, !dbg !3983
  %arrayidx722 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom721, !dbg !3983
  %arraydecay723 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx722, i64 0, i64 0, !dbg !3983
  %408 = load i32, i32* %i_qp, align 4, !dbg !3984
  %409 = load i32, i32* %idx702, align 4, !dbg !3985
  %call724 = call i32 @x264_quant_4x4(%struct.x264_t* %406, i16* %arraydecay723, i32 %408, i32 2, i32 0, i32 %409), !dbg !3986
  store i32 %call724, i32* %nz, align 4, !dbg !3987
  %410 = load i32, i32* %nz, align 4, !dbg !3988
  %conv725 = trunc i32 %410 to i8, !dbg !3988
  %411 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3989
  %mb726 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %411, i32 0, i32 55, !dbg !3990
  %cache727 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb726, i32 0, i32 67, !dbg !3991
  %non_zero_count728 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache727, i32 0, i32 2, !dbg !3992
  %412 = load i32, i32* %idx702, align 4, !dbg !3993
  %idxprom729 = sext i32 %412 to i64, !dbg !3994
  %arrayidx730 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom729, !dbg !3994
  %413 = load i32, i32* %arrayidx730, align 4, !dbg !3994
  %idxprom731 = sext i32 %413 to i64, !dbg !3989
  %arrayidx732 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count728, i64 0, i64 %idxprom731, !dbg !3989
  store i8 %conv725, i8* %arrayidx732, align 1, !dbg !3995
  %414 = load i32, i32* %nz, align 4, !dbg !3996
  %tobool733 = icmp ne i32 %414, 0, !dbg !3996
  br i1 %tobool733, label %if.then734, label %if.end763, !dbg !3998

if.then734:                                       ; preds = %if.end720
  %415 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !3999
  %zigzagf735 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %415, i32 0, i32 72, !dbg !4001
  %scan_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf735, i32 0, i32 1, !dbg !4002
  %416 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x4, align 8, !dbg !4002
  %417 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4003
  %dct736 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %417, i32 0, i32 54, !dbg !4004
  %luma4x4737 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct736, i32 0, i32 3, !dbg !4005
  %418 = load i32, i32* %idx702, align 4, !dbg !4006
  %idxprom738 = sext i32 %418 to i64, !dbg !4003
  %arrayidx739 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4737, i64 0, i64 %idxprom738, !dbg !4003
  %arraydecay740 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx739, i64 0, i64 0, !dbg !4003
  %419 = load i32, i32* %idx702, align 4, !dbg !4007
  %idxprom741 = sext i32 %419 to i64, !dbg !4008
  %arrayidx742 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom741, !dbg !4008
  %arraydecay743 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx742, i64 0, i64 0, !dbg !4008
  call void %416(i16* %arraydecay740, i16* %arraydecay743), !dbg !3999
  %420 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4009
  %quantf744 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %420, i32 0, i32 73, !dbg !4010
  %dequant_4x4 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf744, i32 0, i32 5, !dbg !4011
  %421 = load void (i16*, [16 x i32]*, i32)*, void (i16*, [16 x i32]*, i32)** %dequant_4x4, align 8, !dbg !4011
  %422 = load i32, i32* %idx702, align 4, !dbg !4012
  %idxprom745 = sext i32 %422 to i64, !dbg !4013
  %arrayidx746 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom745, !dbg !4013
  %arraydecay747 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx746, i64 0, i64 0, !dbg !4013
  %423 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4014
  %dequant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %423, i32 0, i32 29, !dbg !4015
  %arrayidx748 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf, i64 0, i64 1, !dbg !4014
  %424 = load [16 x i32]*, [16 x i32]** %arrayidx748, align 8, !dbg !4014
  %425 = load i32, i32* %i_qp, align 4, !dbg !4016
  call void %421(i16* %arraydecay747, [16 x i32]* %424, i32 %425), !dbg !4009
  %426 = load i32, i32* %b_decimate, align 4, !dbg !4017
  %tobool749 = icmp ne i32 %426, 0, !dbg !4017
  br i1 %tobool749, label %land.lhs.true750, label %if.end762, !dbg !4019

land.lhs.true750:                                 ; preds = %if.then734
  %427 = load i32, i32* %i_decimate_8x8696, align 4, !dbg !4020
  %cmp751 = icmp slt i32 %427, 6, !dbg !4021
  br i1 %cmp751, label %if.then753, label %if.end762, !dbg !4022

if.then753:                                       ; preds = %land.lhs.true750
  %428 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4023
  %quantf754 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %428, i32 0, i32 73, !dbg !4024
  %decimate_score16 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf754, i32 0, i32 9, !dbg !4025
  %429 = load i32 (i16*)*, i32 (i16*)** %decimate_score16, align 8, !dbg !4025
  %430 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4026
  %dct755 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %430, i32 0, i32 54, !dbg !4027
  %luma4x4756 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct755, i32 0, i32 3, !dbg !4028
  %431 = load i32, i32* %idx702, align 4, !dbg !4029
  %idxprom757 = sext i32 %431 to i64, !dbg !4026
  %arrayidx758 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4756, i64 0, i64 %idxprom757, !dbg !4026
  %arraydecay759 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx758, i64 0, i64 0, !dbg !4026
  %call760 = call i32 %429(i16* %arraydecay759), !dbg !4023
  %432 = load i32, i32* %i_decimate_8x8696, align 4, !dbg !4030
  %add761 = add nsw i32 %432, %call760, !dbg !4030
  store i32 %add761, i32* %i_decimate_8x8696, align 4, !dbg !4030
  br label %if.end762, !dbg !4031

if.end762:                                        ; preds = %if.then753, %land.lhs.true750, %if.then734
  store i32 1, i32* %cbp, align 4, !dbg !4032
  br label %if.end763, !dbg !4033

if.end763:                                        ; preds = %if.end762, %if.end720
  br label %for.inc764, !dbg !4034

for.inc764:                                       ; preds = %if.end763
  %433 = load i32, i32* %i4x4697, align 4, !dbg !4035
  %inc765 = add nsw i32 %433, 1, !dbg !4035
  store i32 %inc765, i32* %i4x4697, align 4, !dbg !4035
  br label %for.cond698, !dbg !4036, !llvm.loop !4037

for.end766:                                       ; preds = %for.cond698
  %434 = load i32, i32* %i_decimate_8x8696, align 4, !dbg !4039
  %435 = load i32, i32* %i_decimate_mb, align 4, !dbg !4040
  %add767 = add nsw i32 %435, %434, !dbg !4040
  store i32 %add767, i32* %i_decimate_mb, align 4, !dbg !4040
  %436 = load i32, i32* %b_decimate, align 4, !dbg !4041
  %tobool768 = icmp ne i32 %436, 0, !dbg !4041
  br i1 %tobool768, label %if.then769, label %if.else799, !dbg !4043

if.then769:                                       ; preds = %for.end766
  %437 = load i32, i32* %i_decimate_8x8696, align 4, !dbg !4044
  %cmp770 = icmp slt i32 %437, 4, !dbg !4047
  br i1 %cmp770, label %if.then772, label %if.else793, !dbg !4048

if.then772:                                       ; preds = %if.then769
  %438 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4049
  %mb773 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %438, i32 0, i32 55, !dbg !4049
  %cache774 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb773, i32 0, i32 67, !dbg !4049
  %non_zero_count775 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache774, i32 0, i32 2, !dbg !4049
  %439 = load i32, i32* %i8x8691, align 4, !dbg !4049
  %mul776 = mul nsw i32 %439, 4, !dbg !4049
  %add777 = add nsw i32 %mul776, 0, !dbg !4049
  %idxprom778 = sext i32 %add777 to i64, !dbg !4049
  %arrayidx779 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom778, !dbg !4049
  %440 = load i32, i32* %arrayidx779, align 4, !dbg !4049
  %idxprom780 = sext i32 %440 to i64, !dbg !4049
  %arrayidx781 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count775, i64 0, i64 %idxprom780, !dbg !4049
  %441 = bitcast i8* %arrayidx781 to %union.x264_union16_t*, !dbg !4049
  %i782 = bitcast %union.x264_union16_t* %441 to i16*, !dbg !4049
  store i16 0, i16* %i782, align 1, !dbg !4049
  %442 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4049
  %mb783 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %442, i32 0, i32 55, !dbg !4049
  %cache784 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb783, i32 0, i32 67, !dbg !4049
  %non_zero_count785 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache784, i32 0, i32 2, !dbg !4049
  %443 = load i32, i32* %i8x8691, align 4, !dbg !4049
  %mul786 = mul nsw i32 %443, 4, !dbg !4049
  %add787 = add nsw i32 %mul786, 2, !dbg !4049
  %idxprom788 = sext i32 %add787 to i64, !dbg !4049
  %arrayidx789 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom788, !dbg !4049
  %444 = load i32, i32* %arrayidx789, align 4, !dbg !4049
  %idxprom790 = sext i32 %444 to i64, !dbg !4049
  %arrayidx791 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count785, i64 0, i64 %idxprom790, !dbg !4049
  %445 = bitcast i8* %arrayidx791 to %union.x264_union16_t*, !dbg !4049
  %i792 = bitcast %union.x264_union16_t* %445 to i16*, !dbg !4049
  store i16 0, i16* %i792, align 1, !dbg !4049
  br label %if.end798, !dbg !4049

if.else793:                                       ; preds = %if.then769
  %446 = load i32, i32* %i8x8691, align 4, !dbg !4051
  %shl794 = shl i32 1, %446, !dbg !4052
  %447 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4053
  %mb795 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %447, i32 0, i32 55, !dbg !4054
  %i_cbp_luma796 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb795, i32 0, i32 57, !dbg !4055
  %448 = load i32, i32* %i_cbp_luma796, align 8, !dbg !4056
  %or797 = or i32 %448, %shl794, !dbg !4056
  store i32 %or797, i32* %i_cbp_luma796, align 8, !dbg !4056
  br label %if.end798

if.end798:                                        ; preds = %if.else793, %if.then772
  br label %if.end823, !dbg !4057

if.else799:                                       ; preds = %for.end766
  %449 = load i32, i32* %cbp, align 4, !dbg !4058
  %tobool800 = icmp ne i32 %449, 0, !dbg !4058
  br i1 %tobool800, label %if.then801, label %if.end822, !dbg !4060

if.then801:                                       ; preds = %if.else799
  %450 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4061
  %dctf802 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %450, i32 0, i32 71, !dbg !4063
  %add8x8_idct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf802, i32 0, i32 4, !dbg !4064
  %451 = load void (i8*, [16 x i16]*)*, void (i8*, [16 x i16]*)** %add8x8_idct, align 16, !dbg !4064
  %452 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4065
  %mb803 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %452, i32 0, i32 55, !dbg !4066
  %pic804 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb803, i32 0, i32 66, !dbg !4067
  %p_fdec805 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic804, i32 0, i32 18, !dbg !4068
  %arrayidx806 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec805, i64 0, i64 0, !dbg !4065
  %453 = load i8*, i8** %arrayidx806, align 16, !dbg !4065
  %454 = load i32, i32* %i8x8691, align 4, !dbg !4069
  %and807 = and i32 %454, 1, !dbg !4070
  %mul808 = mul nsw i32 %and807, 8, !dbg !4071
  %455 = load i32, i32* %i8x8691, align 4, !dbg !4072
  %shr809 = ashr i32 %455, 1, !dbg !4073
  %mul810 = mul nsw i32 %shr809, 8, !dbg !4074
  %mul811 = mul nsw i32 %mul810, 32, !dbg !4075
  %add812 = add nsw i32 %mul808, %mul811, !dbg !4076
  %idxprom813 = sext i32 %add812 to i64, !dbg !4065
  %arrayidx814 = getelementptr inbounds i8, i8* %453, i64 %idxprom813, !dbg !4065
  %456 = load i32, i32* %i8x8691, align 4, !dbg !4077
  %mul815 = mul nsw i32 %456, 4, !dbg !4078
  %idxprom816 = sext i32 %mul815 to i64, !dbg !4079
  %arrayidx817 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom816, !dbg !4079
  call void %451(i8* %arrayidx814, [16 x i16]* %arrayidx817), !dbg !4061
  %457 = load i32, i32* %i8x8691, align 4, !dbg !4080
  %shl818 = shl i32 1, %457, !dbg !4081
  %458 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4082
  %mb819 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %458, i32 0, i32 55, !dbg !4083
  %i_cbp_luma820 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb819, i32 0, i32 57, !dbg !4084
  %459 = load i32, i32* %i_cbp_luma820, align 8, !dbg !4085
  %or821 = or i32 %459, %shl818, !dbg !4085
  store i32 %or821, i32* %i_cbp_luma820, align 8, !dbg !4085
  br label %if.end822, !dbg !4086

if.end822:                                        ; preds = %if.then801, %if.else799
  br label %if.end823

if.end823:                                        ; preds = %if.end822, %if.end798
  br label %for.inc824, !dbg !4087

for.inc824:                                       ; preds = %if.end823
  %460 = load i32, i32* %i8x8691, align 4, !dbg !4088
  %inc825 = add nsw i32 %460, 1, !dbg !4088
  store i32 %inc825, i32* %i8x8691, align 4, !dbg !4088
  br label %for.cond692, !dbg !4089, !llvm.loop !4090

for.end826:                                       ; preds = %for.cond692
  %461 = load i32, i32* %b_decimate, align 4, !dbg !4092
  %tobool827 = icmp ne i32 %461, 0, !dbg !4092
  br i1 %tobool827, label %if.then828, label %if.end892, !dbg !4094

if.then828:                                       ; preds = %for.end826
  %462 = load i32, i32* %i_decimate_mb, align 4, !dbg !4095
  %cmp829 = icmp slt i32 %462, 6, !dbg !4098
  br i1 %cmp829, label %if.then831, label %if.else858, !dbg !4099

if.then831:                                       ; preds = %if.then828
  %463 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4100
  %mb832 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %463, i32 0, i32 55, !dbg !4102
  %i_cbp_luma833 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb832, i32 0, i32 57, !dbg !4103
  store i32 0, i32* %i_cbp_luma833, align 8, !dbg !4104
  %464 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4105
  %mb834 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %464, i32 0, i32 55, !dbg !4105
  %cache835 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb834, i32 0, i32 67, !dbg !4105
  %non_zero_count836 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache835, i32 0, i32 2, !dbg !4105
  %465 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !4105
  %idxprom837 = sext i32 %465 to i64, !dbg !4105
  %arrayidx838 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count836, i64 0, i64 %idxprom837, !dbg !4105
  %466 = bitcast i8* %arrayidx838 to %union.x264_union32_t*, !dbg !4105
  %i839 = bitcast %union.x264_union32_t* %466 to i32*, !dbg !4105
  store i32 0, i32* %i839, align 1, !dbg !4105
  %467 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4105
  %mb840 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %467, i32 0, i32 55, !dbg !4105
  %cache841 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb840, i32 0, i32 67, !dbg !4105
  %non_zero_count842 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache841, i32 0, i32 2, !dbg !4105
  %468 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 2), align 8, !dbg !4105
  %idxprom843 = sext i32 %468 to i64, !dbg !4105
  %arrayidx844 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count842, i64 0, i64 %idxprom843, !dbg !4105
  %469 = bitcast i8* %arrayidx844 to %union.x264_union32_t*, !dbg !4105
  %i845 = bitcast %union.x264_union32_t* %469 to i32*, !dbg !4105
  store i32 0, i32* %i845, align 1, !dbg !4105
  %470 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4105
  %mb846 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %470, i32 0, i32 55, !dbg !4105
  %cache847 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb846, i32 0, i32 67, !dbg !4105
  %non_zero_count848 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache847, i32 0, i32 2, !dbg !4105
  %471 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 8), align 16, !dbg !4105
  %idxprom849 = sext i32 %471 to i64, !dbg !4105
  %arrayidx850 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count848, i64 0, i64 %idxprom849, !dbg !4105
  %472 = bitcast i8* %arrayidx850 to %union.x264_union32_t*, !dbg !4105
  %i851 = bitcast %union.x264_union32_t* %472 to i32*, !dbg !4105
  store i32 0, i32* %i851, align 1, !dbg !4105
  %473 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4105
  %mb852 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %473, i32 0, i32 55, !dbg !4105
  %cache853 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb852, i32 0, i32 67, !dbg !4105
  %non_zero_count854 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache853, i32 0, i32 2, !dbg !4105
  %474 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 10), align 8, !dbg !4105
  %idxprom855 = sext i32 %474 to i64, !dbg !4105
  %arrayidx856 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count854, i64 0, i64 %idxprom855, !dbg !4105
  %475 = bitcast i8* %arrayidx856 to %union.x264_union32_t*, !dbg !4105
  %i857 = bitcast %union.x264_union32_t* %475 to i32*, !dbg !4105
  store i32 0, i32* %i857, align 1, !dbg !4105
  br label %if.end891, !dbg !4107

if.else858:                                       ; preds = %if.then828
  call void @llvm.dbg.declare(metadata i32* %i8x8859, metadata !4108, metadata !DIExpression()), !dbg !4111
  store i32 0, i32* %i8x8859, align 4, !dbg !4111
  br label %for.cond860, !dbg !4112

for.cond860:                                      ; preds = %for.inc888, %if.else858
  %476 = load i32, i32* %i8x8859, align 4, !dbg !4113
  %cmp861 = icmp slt i32 %476, 4, !dbg !4115
  br i1 %cmp861, label %for.body863, label %for.end890, !dbg !4116

for.body863:                                      ; preds = %for.cond860
  %477 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4117
  %mb864 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %477, i32 0, i32 55, !dbg !4119
  %i_cbp_luma865 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb864, i32 0, i32 57, !dbg !4120
  %478 = load i32, i32* %i_cbp_luma865, align 8, !dbg !4120
  %479 = load i32, i32* %i8x8859, align 4, !dbg !4121
  %shl866 = shl i32 1, %479, !dbg !4122
  %and867 = and i32 %478, %shl866, !dbg !4123
  %tobool868 = icmp ne i32 %and867, 0, !dbg !4123
  br i1 %tobool868, label %if.then869, label %if.end887, !dbg !4124

if.then869:                                       ; preds = %for.body863
  %480 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4125
  %dctf870 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %480, i32 0, i32 71, !dbg !4126
  %add8x8_idct871 = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf870, i32 0, i32 4, !dbg !4127
  %481 = load void (i8*, [16 x i16]*)*, void (i8*, [16 x i16]*)** %add8x8_idct871, align 16, !dbg !4127
  %482 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4128
  %mb872 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %482, i32 0, i32 55, !dbg !4129
  %pic873 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb872, i32 0, i32 66, !dbg !4130
  %p_fdec874 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic873, i32 0, i32 18, !dbg !4131
  %arrayidx875 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec874, i64 0, i64 0, !dbg !4128
  %483 = load i8*, i8** %arrayidx875, align 16, !dbg !4128
  %484 = load i32, i32* %i8x8859, align 4, !dbg !4132
  %and876 = and i32 %484, 1, !dbg !4133
  %mul877 = mul nsw i32 %and876, 8, !dbg !4134
  %485 = load i32, i32* %i8x8859, align 4, !dbg !4135
  %shr878 = ashr i32 %485, 1, !dbg !4136
  %mul879 = mul nsw i32 %shr878, 8, !dbg !4137
  %mul880 = mul nsw i32 %mul879, 32, !dbg !4138
  %add881 = add nsw i32 %mul877, %mul880, !dbg !4139
  %idxprom882 = sext i32 %add881 to i64, !dbg !4128
  %arrayidx883 = getelementptr inbounds i8, i8* %483, i64 %idxprom882, !dbg !4128
  %486 = load i32, i32* %i8x8859, align 4, !dbg !4140
  %mul884 = mul nsw i32 %486, 4, !dbg !4141
  %idxprom885 = sext i32 %mul884 to i64, !dbg !4142
  %arrayidx886 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom885, !dbg !4142
  call void %481(i8* %arrayidx883, [16 x i16]* %arrayidx886), !dbg !4125
  br label %if.end887, !dbg !4125

if.end887:                                        ; preds = %if.then869, %for.body863
  br label %for.inc888, !dbg !4143

for.inc888:                                       ; preds = %if.end887
  %487 = load i32, i32* %i8x8859, align 4, !dbg !4144
  %inc889 = add nsw i32 %487, 1, !dbg !4144
  store i32 %inc889, i32* %i8x8859, align 4, !dbg !4144
  br label %for.cond860, !dbg !4145, !llvm.loop !4146

for.end890:                                       ; preds = %for.cond860
  br label %if.end891

if.end891:                                        ; preds = %for.end890, %if.then831
  br label %if.end892, !dbg !4148

if.end892:                                        ; preds = %if.end891, %for.end826
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end673
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end483
  br label %if.end895

if.end895:                                        ; preds = %if.end894, %for.end363
  br label %if.end896

if.end896:                                        ; preds = %if.end895, %for.end
  br label %if.end897

if.end897:                                        ; preds = %if.end896, %if.end117
  %488 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4149
  %mb898 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %488, i32 0, i32 55, !dbg !4149
  %i_type899 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb898, i32 0, i32 53, !dbg !4149
  %489 = load i32, i32* %i_type899, align 8, !dbg !4149
  %cmp900 = icmp eq i32 %489, 0, !dbg !4149
  br i1 %cmp900, label %if.then917, label %lor.lhs.false902, !dbg !4149

lor.lhs.false902:                                 ; preds = %if.end897
  %490 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4149
  %mb903 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %490, i32 0, i32 55, !dbg !4149
  %i_type904 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb903, i32 0, i32 53, !dbg !4149
  %491 = load i32, i32* %i_type904, align 8, !dbg !4149
  %cmp905 = icmp eq i32 %491, 1, !dbg !4149
  br i1 %cmp905, label %if.then917, label %lor.lhs.false907, !dbg !4149

lor.lhs.false907:                                 ; preds = %lor.lhs.false902
  %492 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4149
  %mb908 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %492, i32 0, i32 55, !dbg !4149
  %i_type909 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb908, i32 0, i32 53, !dbg !4149
  %493 = load i32, i32* %i_type909, align 8, !dbg !4149
  %cmp910 = icmp eq i32 %493, 2, !dbg !4149
  br i1 %cmp910, label %if.then917, label %lor.lhs.false912, !dbg !4149

lor.lhs.false912:                                 ; preds = %lor.lhs.false907
  %494 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4149
  %mb913 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %494, i32 0, i32 55, !dbg !4149
  %i_type914 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb913, i32 0, i32 53, !dbg !4149
  %495 = load i32, i32* %i_type914, align 8, !dbg !4149
  %cmp915 = icmp eq i32 %495, 3, !dbg !4149
  br i1 %cmp915, label %if.then917, label %if.end939, !dbg !4151

if.then917:                                       ; preds = %lor.lhs.false912, %lor.lhs.false907, %lor.lhs.false902, %if.end897
  call void @llvm.dbg.declare(metadata i32* %i_mode918, metadata !4152, metadata !DIExpression()), !dbg !4154
  %496 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4155
  %mb919 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %496, i32 0, i32 55, !dbg !4156
  %i_chroma_pred_mode = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb919, i32 0, i32 60, !dbg !4157
  %497 = load i32, i32* %i_chroma_pred_mode, align 4, !dbg !4157
  store i32 %497, i32* %i_mode918, align 4, !dbg !4154
  %498 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4158
  %mb920 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %498, i32 0, i32 55, !dbg !4160
  %b_lossless921 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb920, i32 0, i32 73, !dbg !4161
  %499 = load i32, i32* %b_lossless921, align 4, !dbg !4161
  %tobool922 = icmp ne i32 %499, 0, !dbg !4158
  br i1 %tobool922, label %if.then923, label %if.else924, !dbg !4162

if.then923:                                       ; preds = %if.then917
  %500 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4163
  %501 = load i32, i32* %i_mode918, align 4, !dbg !4164
  call void @x264_predict_lossless_8x8_chroma(%struct.x264_t* %500, i32 %501), !dbg !4165
  br label %if.end938, !dbg !4165

if.else924:                                       ; preds = %if.then917
  %502 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4166
  %predict_8x8c = getelementptr inbounds %struct.x264_t, %struct.x264_t* %502, i32 0, i32 65, !dbg !4168
  %503 = load i32, i32* %i_mode918, align 4, !dbg !4169
  %idxprom925 = sext i32 %503 to i64, !dbg !4166
  %arrayidx926 = getelementptr inbounds [7 x void (i8*)*], [7 x void (i8*)*]* %predict_8x8c, i64 0, i64 %idxprom925, !dbg !4166
  %504 = load void (i8*)*, void (i8*)** %arrayidx926, align 8, !dbg !4166
  %505 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4170
  %mb927 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %505, i32 0, i32 55, !dbg !4171
  %pic928 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb927, i32 0, i32 66, !dbg !4172
  %p_fdec929 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic928, i32 0, i32 18, !dbg !4173
  %arrayidx930 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec929, i64 0, i64 1, !dbg !4170
  %506 = load i8*, i8** %arrayidx930, align 8, !dbg !4170
  call void %504(i8* %506), !dbg !4166
  %507 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4174
  %predict_8x8c931 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %507, i32 0, i32 65, !dbg !4175
  %508 = load i32, i32* %i_mode918, align 4, !dbg !4176
  %idxprom932 = sext i32 %508 to i64, !dbg !4174
  %arrayidx933 = getelementptr inbounds [7 x void (i8*)*], [7 x void (i8*)*]* %predict_8x8c931, i64 0, i64 %idxprom932, !dbg !4174
  %509 = load void (i8*)*, void (i8*)** %arrayidx933, align 8, !dbg !4174
  %510 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4177
  %mb934 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %510, i32 0, i32 55, !dbg !4178
  %pic935 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb934, i32 0, i32 66, !dbg !4179
  %p_fdec936 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic935, i32 0, i32 18, !dbg !4180
  %arrayidx937 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec936, i64 0, i64 2, !dbg !4177
  %511 = load i8*, i8** %arrayidx937, align 16, !dbg !4177
  call void %509(i8* %511), !dbg !4174
  br label %if.end938

if.end938:                                        ; preds = %if.else924, %if.then923
  br label %if.end939, !dbg !4181

if.end939:                                        ; preds = %if.end938, %lor.lhs.false912
  %512 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4182
  %513 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4183
  %mb940 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %513, i32 0, i32 55, !dbg !4183
  %i_type941 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb940, i32 0, i32 53, !dbg !4183
  %514 = load i32, i32* %i_type941, align 8, !dbg !4183
  %cmp942 = icmp eq i32 %514, 0, !dbg !4183
  br i1 %cmp942, label %lor.end, label %lor.lhs.false944, !dbg !4183

lor.lhs.false944:                                 ; preds = %if.end939
  %515 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4183
  %mb945 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %515, i32 0, i32 55, !dbg !4183
  %i_type946 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb945, i32 0, i32 53, !dbg !4183
  %516 = load i32, i32* %i_type946, align 8, !dbg !4183
  %cmp947 = icmp eq i32 %516, 1, !dbg !4183
  br i1 %cmp947, label %lor.end, label %lor.lhs.false949, !dbg !4183

lor.lhs.false949:                                 ; preds = %lor.lhs.false944
  %517 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4183
  %mb950 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %517, i32 0, i32 55, !dbg !4183
  %i_type951 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb950, i32 0, i32 53, !dbg !4183
  %518 = load i32, i32* %i_type951, align 8, !dbg !4183
  %cmp952 = icmp eq i32 %518, 2, !dbg !4183
  br i1 %cmp952, label %lor.end, label %lor.rhs, !dbg !4183

lor.rhs:                                          ; preds = %lor.lhs.false949
  %519 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4183
  %mb954 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %519, i32 0, i32 55, !dbg !4183
  %i_type955 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb954, i32 0, i32 53, !dbg !4183
  %520 = load i32, i32* %i_type955, align 8, !dbg !4183
  %cmp956 = icmp eq i32 %520, 3, !dbg !4183
  br label %lor.end, !dbg !4183

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false949, %lor.lhs.false944, %if.end939
  %521 = phi i1 [ true, %lor.lhs.false949 ], [ true, %lor.lhs.false944 ], [ true, %if.end939 ], [ %cmp956, %lor.rhs ]
  %lnot958 = xor i1 %521, true, !dbg !4184
  %lnot.ext959 = zext i1 %lnot958 to i32, !dbg !4184
  %522 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4185
  %mb960 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %522, i32 0, i32 55, !dbg !4186
  %i_chroma_qp = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb960, i32 0, i32 69, !dbg !4187
  %523 = load i32, i32* %i_chroma_qp, align 4, !dbg !4187
  call void @x264_mb_encode_8x8_chroma(%struct.x264_t* %512, i32 %lnot.ext959, i32 %523), !dbg !4188
  call void @llvm.dbg.declare(metadata i32* %cbp961, metadata !4189, metadata !DIExpression()), !dbg !4190
  %524 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4191
  %mb962 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %524, i32 0, i32 55, !dbg !4192
  %i_cbp_chroma = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb962, i32 0, i32 58, !dbg !4193
  %525 = load i32, i32* %i_cbp_chroma, align 4, !dbg !4193
  %shl963 = shl i32 %525, 4, !dbg !4194
  %526 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4195
  %mb964 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %526, i32 0, i32 55, !dbg !4196
  %i_cbp_luma965 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb964, i32 0, i32 57, !dbg !4197
  %527 = load i32, i32* %i_cbp_luma965, align 8, !dbg !4197
  %or966 = or i32 %shl963, %527, !dbg !4198
  store i32 %or966, i32* %cbp961, align 4, !dbg !4190
  %528 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4199
  %param = getelementptr inbounds %struct.x264_t, %struct.x264_t* %528, i32 0, i32 0, !dbg !4201
  %b_cabac = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %param, i32 0, i32 24, !dbg !4202
  %529 = load i32, i32* %b_cabac, align 16, !dbg !4202
  %tobool967 = icmp ne i32 %529, 0, !dbg !4199
  br i1 %tobool967, label %if.then968, label %if.end993, !dbg !4203

if.then968:                                       ; preds = %lor.end
  %530 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4204
  %mb969 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %530, i32 0, i32 55, !dbg !4205
  %cache970 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb969, i32 0, i32 67, !dbg !4206
  %non_zero_count971 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache970, i32 0, i32 2, !dbg !4207
  %531 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 24), align 16, !dbg !4208
  %idxprom972 = sext i32 %531 to i64, !dbg !4204
  %arrayidx973 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count971, i64 0, i64 %idxprom972, !dbg !4204
  %532 = load i8, i8* %arrayidx973, align 1, !dbg !4204
  %conv974 = zext i8 %532 to i32, !dbg !4204
  %shl975 = shl i32 %conv974, 8, !dbg !4209
  %533 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4210
  %mb976 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %533, i32 0, i32 55, !dbg !4211
  %cache977 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb976, i32 0, i32 67, !dbg !4212
  %non_zero_count978 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache977, i32 0, i32 2, !dbg !4213
  %534 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 25), align 4, !dbg !4214
  %idxprom979 = sext i32 %534 to i64, !dbg !4210
  %arrayidx980 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count978, i64 0, i64 %idxprom979, !dbg !4210
  %535 = load i8, i8* %arrayidx980, align 1, !dbg !4210
  %conv981 = zext i8 %535 to i32, !dbg !4210
  %shl982 = shl i32 %conv981, 9, !dbg !4215
  %or983 = or i32 %shl975, %shl982, !dbg !4216
  %536 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4217
  %mb984 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %536, i32 0, i32 55, !dbg !4218
  %cache985 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb984, i32 0, i32 67, !dbg !4219
  %non_zero_count986 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache985, i32 0, i32 2, !dbg !4220
  %537 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 26), align 8, !dbg !4221
  %idxprom987 = sext i32 %537 to i64, !dbg !4217
  %arrayidx988 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count986, i64 0, i64 %idxprom987, !dbg !4217
  %538 = load i8, i8* %arrayidx988, align 1, !dbg !4217
  %conv989 = zext i8 %538 to i32, !dbg !4217
  %shl990 = shl i32 %conv989, 10, !dbg !4222
  %or991 = or i32 %or983, %shl990, !dbg !4223
  %539 = load i32, i32* %cbp961, align 4, !dbg !4224
  %or992 = or i32 %539, %or991, !dbg !4224
  store i32 %or992, i32* %cbp961, align 4, !dbg !4224
  br label %if.end993, !dbg !4225

if.end993:                                        ; preds = %if.then968, %lor.end
  %540 = load i32, i32* %cbp961, align 4, !dbg !4226
  %conv994 = trunc i32 %540 to i16, !dbg !4226
  %541 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4227
  %mb995 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %541, i32 0, i32 55, !dbg !4228
  %cbp996 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb995, i32 0, i32 41, !dbg !4229
  %542 = load i16*, i16** %cbp996, align 16, !dbg !4229
  %543 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4230
  %mb997 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %543, i32 0, i32 55, !dbg !4231
  %i_mb_xy998 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb997, i32 0, i32 6, !dbg !4232
  %544 = load i32, i32* %i_mb_xy998, align 8, !dbg !4232
  %idxprom999 = sext i32 %544 to i64, !dbg !4227
  %arrayidx1000 = getelementptr inbounds i16, i16* %542, i64 %idxprom999, !dbg !4227
  store i16 %conv994, i16* %arrayidx1000, align 2, !dbg !4233
  %545 = load i32, i32* %b_force_no_skip, align 4, !dbg !4234
  %tobool1001 = icmp ne i32 %545, 0, !dbg !4234
  br i1 %tobool1001, label %if.end1060, label %if.then1002, !dbg !4236

if.then1002:                                      ; preds = %if.end993
  %546 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4237
  %mb1003 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %546, i32 0, i32 55, !dbg !4240
  %i_type1004 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1003, i32 0, i32 53, !dbg !4241
  %547 = load i32, i32* %i_type1004, align 8, !dbg !4241
  %cmp1005 = icmp eq i32 %547, 4, !dbg !4242
  br i1 %cmp1005, label %land.lhs.true1007, label %if.end1044, !dbg !4243

land.lhs.true1007:                                ; preds = %if.then1002
  %548 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4244
  %mb1008 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %548, i32 0, i32 55, !dbg !4245
  %i_partition = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1008, i32 0, i32 54, !dbg !4246
  %549 = load i32, i32* %i_partition, align 4, !dbg !4246
  %cmp1009 = icmp eq i32 %549, 16, !dbg !4247
  br i1 %cmp1009, label %land.lhs.true1011, label %if.end1044, !dbg !4248

land.lhs.true1011:                                ; preds = %land.lhs.true1007
  %550 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4249
  %mb1012 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %550, i32 0, i32 55, !dbg !4250
  %i_cbp_luma1013 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1012, i32 0, i32 57, !dbg !4251
  %551 = load i32, i32* %i_cbp_luma1013, align 8, !dbg !4251
  %552 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4252
  %mb1014 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %552, i32 0, i32 55, !dbg !4253
  %i_cbp_chroma1015 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1014, i32 0, i32 58, !dbg !4254
  %553 = load i32, i32* %i_cbp_chroma1015, align 4, !dbg !4254
  %or1016 = or i32 %551, %553, !dbg !4255
  %tobool1017 = icmp ne i32 %or1016, 0, !dbg !4255
  br i1 %tobool1017, label %if.end1044, label %land.lhs.true1018, !dbg !4256

land.lhs.true1018:                                ; preds = %land.lhs.true1011
  %554 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4257
  %mb1019 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %554, i32 0, i32 55, !dbg !4257
  %cache1020 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1019, i32 0, i32 67, !dbg !4257
  %mv = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache1020, i32 0, i32 4, !dbg !4257
  %arrayidx1021 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv, i64 0, i64 0, !dbg !4257
  %555 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !4257
  %idxprom1022 = sext i32 %555 to i64, !dbg !4257
  %arrayidx1023 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx1021, i64 0, i64 %idxprom1022, !dbg !4257
  %arraydecay1024 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx1023, i64 0, i64 0, !dbg !4257
  %556 = bitcast i16* %arraydecay1024 to %union.x264_union32_t*, !dbg !4257
  %i1025 = bitcast %union.x264_union32_t* %556 to i32*, !dbg !4257
  %557 = load i32, i32* %i1025, align 4, !dbg !4257
  %558 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4258
  %mb1026 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %558, i32 0, i32 55, !dbg !4258
  %cache1027 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1026, i32 0, i32 67, !dbg !4258
  %pskip_mv = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache1027, i32 0, i32 10, !dbg !4258
  %arraydecay1028 = getelementptr inbounds [2 x i16], [2 x i16]* %pskip_mv, i64 0, i64 0, !dbg !4258
  %559 = bitcast i16* %arraydecay1028 to %union.x264_union32_t*, !dbg !4258
  %i1029 = bitcast %union.x264_union32_t* %559 to i32*, !dbg !4258
  %560 = load i32, i32* %i1029, align 4, !dbg !4258
  %cmp1030 = icmp eq i32 %557, %560, !dbg !4259
  br i1 %cmp1030, label %land.lhs.true1032, label %if.end1044, !dbg !4260

land.lhs.true1032:                                ; preds = %land.lhs.true1018
  %561 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4261
  %mb1033 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %561, i32 0, i32 55, !dbg !4262
  %cache1034 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1033, i32 0, i32 67, !dbg !4263
  %ref = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache1034, i32 0, i32 3, !dbg !4264
  %arrayidx1035 = getelementptr inbounds [2 x [40 x i8]], [2 x [40 x i8]]* %ref, i64 0, i64 0, !dbg !4261
  %562 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !4265
  %idxprom1036 = sext i32 %562 to i64, !dbg !4261
  %arrayidx1037 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx1035, i64 0, i64 %idxprom1036, !dbg !4261
  %563 = load i8, i8* %arrayidx1037, align 1, !dbg !4261
  %conv1038 = sext i8 %563 to i32, !dbg !4261
  %cmp1039 = icmp eq i32 %conv1038, 0, !dbg !4266
  br i1 %cmp1039, label %if.then1041, label %if.end1044, !dbg !4267

if.then1041:                                      ; preds = %land.lhs.true1032
  %564 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4268
  %mb1042 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %564, i32 0, i32 55, !dbg !4270
  %i_type1043 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1042, i32 0, i32 53, !dbg !4271
  store i32 6, i32* %i_type1043, align 8, !dbg !4272
  br label %if.end1044, !dbg !4273

if.end1044:                                       ; preds = %if.then1041, %land.lhs.true1032, %land.lhs.true1018, %land.lhs.true1011, %land.lhs.true1007, %if.then1002
  %565 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4274
  %mb1045 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %565, i32 0, i32 55, !dbg !4276
  %i_type1046 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1045, i32 0, i32 53, !dbg !4277
  %566 = load i32, i32* %i_type1046, align 8, !dbg !4277
  %cmp1047 = icmp eq i32 %566, 7, !dbg !4278
  br i1 %cmp1047, label %land.lhs.true1049, label %if.end1059, !dbg !4279

land.lhs.true1049:                                ; preds = %if.end1044
  %567 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4280
  %mb1050 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %567, i32 0, i32 55, !dbg !4281
  %i_cbp_luma1051 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1050, i32 0, i32 57, !dbg !4282
  %568 = load i32, i32* %i_cbp_luma1051, align 8, !dbg !4282
  %569 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4283
  %mb1052 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %569, i32 0, i32 55, !dbg !4284
  %i_cbp_chroma1053 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1052, i32 0, i32 58, !dbg !4285
  %570 = load i32, i32* %i_cbp_chroma1053, align 4, !dbg !4285
  %or1054 = or i32 %568, %570, !dbg !4286
  %tobool1055 = icmp ne i32 %or1054, 0, !dbg !4286
  br i1 %tobool1055, label %if.end1059, label %if.then1056, !dbg !4287

if.then1056:                                      ; preds = %land.lhs.true1049
  %571 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4288
  %mb1057 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %571, i32 0, i32 55, !dbg !4290
  %i_type1058 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1057, i32 0, i32 53, !dbg !4291
  store i32 18, i32* %i_type1058, align 8, !dbg !4292
  br label %if.end1059, !dbg !4293

if.end1059:                                       ; preds = %if.then1056, %land.lhs.true1049, %if.end1044
  br label %if.end1060, !dbg !4294

if.end1060:                                       ; preds = %if.then, %if.then88, %if.end98, %if.end1059, %if.end993
  ret void, !dbg !4295
}

; Function Attrs: noinline nounwind uwtable
define internal void @x264_macroblock_encode_pskip(%struct.x264_t* %h) #0 !dbg !4296 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %mvx = alloca i32, align 4
  %mvy = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !4297, metadata !DIExpression()), !dbg !4298
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4299
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 55, !dbg !4301
  %b_skip_mc = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 62, !dbg !4302
  %1 = load i32, i32* %b_skip_mc, align 4, !dbg !4302
  %tobool = icmp ne i32 %1, 0, !dbg !4299
  br i1 %tobool, label %if.end151, label %if.then, !dbg !4303

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %mvx, metadata !4304, metadata !DIExpression()), !dbg !4306
  %2 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4307
  %mb1 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %2, i32 0, i32 55, !dbg !4308
  %cache = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1, i32 0, i32 67, !dbg !4309
  %mv = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache, i32 0, i32 4, !dbg !4310
  %arrayidx = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv, i64 0, i64 0, !dbg !4307
  %3 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !4311
  %idxprom = sext i32 %3 to i64, !dbg !4307
  %arrayidx2 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx, i64 0, i64 %idxprom, !dbg !4307
  %arrayidx3 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx2, i64 0, i64 0, !dbg !4307
  %4 = load i16, i16* %arrayidx3, align 4, !dbg !4307
  %conv = sext i16 %4 to i32, !dbg !4307
  %5 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4312
  %mb4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %5, i32 0, i32 55, !dbg !4313
  %mv_min = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb4, i32 0, i32 18, !dbg !4314
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %mv_min, i64 0, i64 0, !dbg !4312
  %6 = load i32, i32* %arrayidx5, align 8, !dbg !4312
  %7 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4315
  %mb6 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %7, i32 0, i32 55, !dbg !4316
  %mv_max = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb6, i32 0, i32 19, !dbg !4317
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %mv_max, i64 0, i64 0, !dbg !4315
  %8 = load i32, i32* %arrayidx7, align 16, !dbg !4315
  %call = call i32 @x264_clip3(i32 %conv, i32 %6, i32 %8), !dbg !4318
  store i32 %call, i32* %mvx, align 4, !dbg !4306
  call void @llvm.dbg.declare(metadata i32* %mvy, metadata !4319, metadata !DIExpression()), !dbg !4320
  %9 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4321
  %mb8 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %9, i32 0, i32 55, !dbg !4322
  %cache9 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb8, i32 0, i32 67, !dbg !4323
  %mv10 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache9, i32 0, i32 4, !dbg !4324
  %arrayidx11 = getelementptr inbounds [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i16]]]* %mv10, i64 0, i64 0, !dbg !4321
  %10 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !4325
  %idxprom12 = sext i32 %10 to i64, !dbg !4321
  %arrayidx13 = getelementptr inbounds [40 x [2 x i16]], [40 x [2 x i16]]* %arrayidx11, i64 0, i64 %idxprom12, !dbg !4321
  %arrayidx14 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx13, i64 0, i64 1, !dbg !4321
  %11 = load i16, i16* %arrayidx14, align 2, !dbg !4321
  %conv15 = sext i16 %11 to i32, !dbg !4321
  %12 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4326
  %mb16 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %12, i32 0, i32 55, !dbg !4327
  %mv_min17 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb16, i32 0, i32 18, !dbg !4328
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %mv_min17, i64 0, i64 1, !dbg !4326
  %13 = load i32, i32* %arrayidx18, align 4, !dbg !4326
  %14 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4329
  %mb19 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %14, i32 0, i32 55, !dbg !4330
  %mv_max20 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb19, i32 0, i32 19, !dbg !4331
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %mv_max20, i64 0, i64 1, !dbg !4329
  %15 = load i32, i32* %arrayidx21, align 4, !dbg !4329
  %call22 = call i32 @x264_clip3(i32 %conv15, i32 %13, i32 %15), !dbg !4332
  store i32 %call22, i32* %mvy, align 4, !dbg !4320
  %16 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4333
  %mc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %16, i32 0, i32 70, !dbg !4334
  %mc_luma = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc, i32 0, i32 0, !dbg !4335
  %17 = load void (i8*, i32, i8**, i32, i32, i32, i32, i32, %struct.x264_weight_t*)*, void (i8*, i32, i8**, i32, i32, i32, i32, i32, %struct.x264_weight_t*)** %mc_luma, align 8, !dbg !4335
  %18 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4336
  %mb23 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %18, i32 0, i32 55, !dbg !4337
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb23, i32 0, i32 66, !dbg !4338
  %p_fdec = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 18, !dbg !4339
  %arrayidx24 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec, i64 0, i64 0, !dbg !4336
  %19 = load i8*, i8** %arrayidx24, align 16, !dbg !4336
  %20 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4340
  %mb25 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %20, i32 0, i32 55, !dbg !4341
  %pic26 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb25, i32 0, i32 66, !dbg !4342
  %p_fref = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic26, i32 0, i32 20, !dbg !4343
  %arrayidx27 = getelementptr inbounds [2 x [32 x [6 x i8*]]], [2 x [32 x [6 x i8*]]]* %p_fref, i64 0, i64 0, !dbg !4340
  %arrayidx28 = getelementptr inbounds [32 x [6 x i8*]], [32 x [6 x i8*]]* %arrayidx27, i64 0, i64 0, !dbg !4340
  %arraydecay = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx28, i64 0, i64 0, !dbg !4340
  %21 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4344
  %mb29 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %21, i32 0, i32 55, !dbg !4345
  %pic30 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb29, i32 0, i32 66, !dbg !4346
  %i_stride = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic30, i32 0, i32 23, !dbg !4347
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride, i64 0, i64 0, !dbg !4344
  %22 = load i32, i32* %arrayidx31, align 16, !dbg !4344
  %23 = load i32, i32* %mvx, align 4, !dbg !4348
  %24 = load i32, i32* %mvy, align 4, !dbg !4349
  %25 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4350
  %sh = getelementptr inbounds %struct.x264_t, %struct.x264_t* %25, i32 0, i32 41, !dbg !4351
  %weight = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh, i32 0, i32 22, !dbg !4352
  %arrayidx32 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight, i64 0, i64 0, !dbg !4350
  %arrayidx33 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx32, i64 0, i64 0, !dbg !4350
  call void %17(i8* %19, i32 32, i8** %arraydecay, i32 %22, i32 %23, i32 %24, i32 16, i32 16, %struct.x264_weight_t* %arrayidx33), !dbg !4333
  %26 = load i32, i32* %mvx, align 4, !dbg !4353
  %27 = load i32, i32* %mvy, align 4, !dbg !4355
  %or = or i32 %26, %27, !dbg !4356
  %tobool34 = icmp ne i32 %or, 0, !dbg !4356
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !4357

if.then35:                                        ; preds = %if.then
  %28 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4358
  %mc36 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %28, i32 0, i32 70, !dbg !4360
  %mc_chroma = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc36, i32 0, i32 2, !dbg !4361
  %29 = load void (i8*, i32, i8*, i32, i32, i32, i32, i32)*, void (i8*, i32, i8*, i32, i32, i32, i32, i32)** %mc_chroma, align 8, !dbg !4361
  %30 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4362
  %mb37 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %30, i32 0, i32 55, !dbg !4363
  %pic38 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb37, i32 0, i32 66, !dbg !4364
  %p_fdec39 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic38, i32 0, i32 18, !dbg !4365
  %arrayidx40 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec39, i64 0, i64 1, !dbg !4362
  %31 = load i8*, i8** %arrayidx40, align 8, !dbg !4362
  %32 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4366
  %mb41 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %32, i32 0, i32 55, !dbg !4367
  %pic42 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb41, i32 0, i32 66, !dbg !4368
  %p_fref43 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic42, i32 0, i32 20, !dbg !4369
  %arrayidx44 = getelementptr inbounds [2 x [32 x [6 x i8*]]], [2 x [32 x [6 x i8*]]]* %p_fref43, i64 0, i64 0, !dbg !4366
  %arrayidx45 = getelementptr inbounds [32 x [6 x i8*]], [32 x [6 x i8*]]* %arrayidx44, i64 0, i64 0, !dbg !4366
  %arrayidx46 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx45, i64 0, i64 4, !dbg !4366
  %33 = load i8*, i8** %arrayidx46, align 16, !dbg !4366
  %34 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4370
  %mb47 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %34, i32 0, i32 55, !dbg !4371
  %pic48 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb47, i32 0, i32 66, !dbg !4372
  %i_stride49 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic48, i32 0, i32 23, !dbg !4373
  %arrayidx50 = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride49, i64 0, i64 1, !dbg !4370
  %35 = load i32, i32* %arrayidx50, align 4, !dbg !4370
  %36 = load i32, i32* %mvx, align 4, !dbg !4374
  %37 = load i32, i32* %mvy, align 4, !dbg !4375
  call void %29(i8* %31, i32 32, i8* %33, i32 %35, i32 %36, i32 %37, i32 8, i32 8), !dbg !4358
  %38 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4376
  %mc51 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %38, i32 0, i32 70, !dbg !4377
  %mc_chroma52 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc51, i32 0, i32 2, !dbg !4378
  %39 = load void (i8*, i32, i8*, i32, i32, i32, i32, i32)*, void (i8*, i32, i8*, i32, i32, i32, i32, i32)** %mc_chroma52, align 8, !dbg !4378
  %40 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4379
  %mb53 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %40, i32 0, i32 55, !dbg !4380
  %pic54 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb53, i32 0, i32 66, !dbg !4381
  %p_fdec55 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic54, i32 0, i32 18, !dbg !4382
  %arrayidx56 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec55, i64 0, i64 2, !dbg !4379
  %41 = load i8*, i8** %arrayidx56, align 16, !dbg !4379
  %42 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4383
  %mb57 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %42, i32 0, i32 55, !dbg !4384
  %pic58 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb57, i32 0, i32 66, !dbg !4385
  %p_fref59 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic58, i32 0, i32 20, !dbg !4386
  %arrayidx60 = getelementptr inbounds [2 x [32 x [6 x i8*]]], [2 x [32 x [6 x i8*]]]* %p_fref59, i64 0, i64 0, !dbg !4383
  %arrayidx61 = getelementptr inbounds [32 x [6 x i8*]], [32 x [6 x i8*]]* %arrayidx60, i64 0, i64 0, !dbg !4383
  %arrayidx62 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx61, i64 0, i64 5, !dbg !4383
  %43 = load i8*, i8** %arrayidx62, align 8, !dbg !4383
  %44 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4387
  %mb63 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %44, i32 0, i32 55, !dbg !4388
  %pic64 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb63, i32 0, i32 66, !dbg !4389
  %i_stride65 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic64, i32 0, i32 23, !dbg !4390
  %arrayidx66 = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride65, i64 0, i64 2, !dbg !4387
  %45 = load i32, i32* %arrayidx66, align 8, !dbg !4387
  %46 = load i32, i32* %mvx, align 4, !dbg !4391
  %47 = load i32, i32* %mvy, align 4, !dbg !4392
  call void %39(i8* %41, i32 32, i8* %43, i32 %45, i32 %46, i32 %47, i32 8, i32 8), !dbg !4376
  br label %if.end, !dbg !4393

if.else:                                          ; preds = %if.then
  %48 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4394
  %mc67 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %48, i32 0, i32 70, !dbg !4396
  %copy = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc67, i32 0, i32 4, !dbg !4397
  %arrayidx68 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy, i64 0, i64 3, !dbg !4394
  %49 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx68, align 8, !dbg !4394
  %50 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4398
  %mb69 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %50, i32 0, i32 55, !dbg !4399
  %pic70 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb69, i32 0, i32 66, !dbg !4400
  %p_fdec71 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic70, i32 0, i32 18, !dbg !4401
  %arrayidx72 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec71, i64 0, i64 1, !dbg !4398
  %51 = load i8*, i8** %arrayidx72, align 8, !dbg !4398
  %52 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4402
  %mb73 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %52, i32 0, i32 55, !dbg !4403
  %pic74 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb73, i32 0, i32 66, !dbg !4404
  %p_fref75 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic74, i32 0, i32 20, !dbg !4405
  %arrayidx76 = getelementptr inbounds [2 x [32 x [6 x i8*]]], [2 x [32 x [6 x i8*]]]* %p_fref75, i64 0, i64 0, !dbg !4402
  %arrayidx77 = getelementptr inbounds [32 x [6 x i8*]], [32 x [6 x i8*]]* %arrayidx76, i64 0, i64 0, !dbg !4402
  %arrayidx78 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx77, i64 0, i64 4, !dbg !4402
  %53 = load i8*, i8** %arrayidx78, align 16, !dbg !4402
  %54 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4406
  %mb79 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %54, i32 0, i32 55, !dbg !4407
  %pic80 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb79, i32 0, i32 66, !dbg !4408
  %i_stride81 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic80, i32 0, i32 23, !dbg !4409
  %arrayidx82 = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride81, i64 0, i64 1, !dbg !4406
  %55 = load i32, i32* %arrayidx82, align 4, !dbg !4406
  call void %49(i8* %51, i32 32, i8* %53, i32 %55, i32 8), !dbg !4394
  %56 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4410
  %mc83 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %56, i32 0, i32 70, !dbg !4411
  %copy84 = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc83, i32 0, i32 4, !dbg !4412
  %arrayidx85 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy84, i64 0, i64 3, !dbg !4410
  %57 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx85, align 8, !dbg !4410
  %58 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4413
  %mb86 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %58, i32 0, i32 55, !dbg !4414
  %pic87 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb86, i32 0, i32 66, !dbg !4415
  %p_fdec88 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic87, i32 0, i32 18, !dbg !4416
  %arrayidx89 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec88, i64 0, i64 2, !dbg !4413
  %59 = load i8*, i8** %arrayidx89, align 16, !dbg !4413
  %60 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4417
  %mb90 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %60, i32 0, i32 55, !dbg !4418
  %pic91 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb90, i32 0, i32 66, !dbg !4419
  %p_fref92 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic91, i32 0, i32 20, !dbg !4420
  %arrayidx93 = getelementptr inbounds [2 x [32 x [6 x i8*]]], [2 x [32 x [6 x i8*]]]* %p_fref92, i64 0, i64 0, !dbg !4417
  %arrayidx94 = getelementptr inbounds [32 x [6 x i8*]], [32 x [6 x i8*]]* %arrayidx93, i64 0, i64 0, !dbg !4417
  %arrayidx95 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx94, i64 0, i64 5, !dbg !4417
  %61 = load i8*, i8** %arrayidx95, align 8, !dbg !4417
  %62 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4421
  %mb96 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %62, i32 0, i32 55, !dbg !4422
  %pic97 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb96, i32 0, i32 66, !dbg !4423
  %i_stride98 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic97, i32 0, i32 23, !dbg !4424
  %arrayidx99 = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride98, i64 0, i64 2, !dbg !4421
  %63 = load i32, i32* %arrayidx99, align 8, !dbg !4421
  call void %57(i8* %59, i32 32, i8* %61, i32 %63, i32 8), !dbg !4410
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then35
  %64 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4425
  %sh100 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %64, i32 0, i32 41, !dbg !4427
  %weight101 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh100, i32 0, i32 22, !dbg !4428
  %arrayidx102 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight101, i64 0, i64 0, !dbg !4425
  %arrayidx103 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx102, i64 0, i64 1, !dbg !4425
  %weightfn = getelementptr inbounds %struct.x264_weight_t, %struct.x264_weight_t* %arrayidx103, i32 0, i32 5, !dbg !4429
  %65 = load void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)**, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*** %weightfn, align 16, !dbg !4429
  %tobool104 = icmp ne void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)** %65, null, !dbg !4425
  br i1 %tobool104, label %if.then105, label %if.end124, !dbg !4430

if.then105:                                       ; preds = %if.end
  %66 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4431
  %sh106 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %66, i32 0, i32 41, !dbg !4432
  %weight107 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh106, i32 0, i32 22, !dbg !4433
  %arrayidx108 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight107, i64 0, i64 0, !dbg !4431
  %arrayidx109 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx108, i64 0, i64 1, !dbg !4431
  %weightfn110 = getelementptr inbounds %struct.x264_weight_t, %struct.x264_weight_t* %arrayidx109, i32 0, i32 5, !dbg !4434
  %67 = load void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)**, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*** %weightfn110, align 16, !dbg !4434
  %arrayidx111 = getelementptr inbounds void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)** %67, i64 2, !dbg !4431
  %68 = load void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)** %arrayidx111, align 8, !dbg !4431
  %69 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4435
  %mb112 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %69, i32 0, i32 55, !dbg !4436
  %pic113 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb112, i32 0, i32 66, !dbg !4437
  %p_fdec114 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic113, i32 0, i32 18, !dbg !4438
  %arrayidx115 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec114, i64 0, i64 1, !dbg !4435
  %70 = load i8*, i8** %arrayidx115, align 8, !dbg !4435
  %71 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4439
  %mb116 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %71, i32 0, i32 55, !dbg !4440
  %pic117 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb116, i32 0, i32 66, !dbg !4441
  %p_fdec118 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic117, i32 0, i32 18, !dbg !4442
  %arrayidx119 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec118, i64 0, i64 1, !dbg !4439
  %72 = load i8*, i8** %arrayidx119, align 8, !dbg !4439
  %73 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4443
  %sh120 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %73, i32 0, i32 41, !dbg !4444
  %weight121 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh120, i32 0, i32 22, !dbg !4445
  %arrayidx122 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight121, i64 0, i64 0, !dbg !4443
  %arrayidx123 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx122, i64 0, i64 1, !dbg !4443
  call void %68(i8* %70, i32 32, i8* %72, i32 32, %struct.x264_weight_t* %arrayidx123, i32 8), !dbg !4431
  br label %if.end124, !dbg !4431

if.end124:                                        ; preds = %if.then105, %if.end
  %74 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4446
  %sh125 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %74, i32 0, i32 41, !dbg !4448
  %weight126 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh125, i32 0, i32 22, !dbg !4449
  %arrayidx127 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight126, i64 0, i64 0, !dbg !4446
  %arrayidx128 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx127, i64 0, i64 2, !dbg !4446
  %weightfn129 = getelementptr inbounds %struct.x264_weight_t, %struct.x264_weight_t* %arrayidx128, i32 0, i32 5, !dbg !4450
  %75 = load void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)**, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*** %weightfn129, align 16, !dbg !4450
  %tobool130 = icmp ne void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)** %75, null, !dbg !4446
  br i1 %tobool130, label %if.then131, label %if.end150, !dbg !4451

if.then131:                                       ; preds = %if.end124
  %76 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4452
  %sh132 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %76, i32 0, i32 41, !dbg !4453
  %weight133 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh132, i32 0, i32 22, !dbg !4454
  %arrayidx134 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight133, i64 0, i64 0, !dbg !4452
  %arrayidx135 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx134, i64 0, i64 2, !dbg !4452
  %weightfn136 = getelementptr inbounds %struct.x264_weight_t, %struct.x264_weight_t* %arrayidx135, i32 0, i32 5, !dbg !4455
  %77 = load void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)**, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*** %weightfn136, align 16, !dbg !4455
  %arrayidx137 = getelementptr inbounds void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)** %77, i64 2, !dbg !4452
  %78 = load void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)** %arrayidx137, align 8, !dbg !4452
  %79 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4456
  %mb138 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %79, i32 0, i32 55, !dbg !4457
  %pic139 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb138, i32 0, i32 66, !dbg !4458
  %p_fdec140 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic139, i32 0, i32 18, !dbg !4459
  %arrayidx141 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec140, i64 0, i64 2, !dbg !4456
  %80 = load i8*, i8** %arrayidx141, align 16, !dbg !4456
  %81 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4460
  %mb142 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %81, i32 0, i32 55, !dbg !4461
  %pic143 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb142, i32 0, i32 66, !dbg !4462
  %p_fdec144 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic143, i32 0, i32 18, !dbg !4463
  %arrayidx145 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec144, i64 0, i64 2, !dbg !4460
  %82 = load i8*, i8** %arrayidx145, align 16, !dbg !4460
  %83 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4464
  %sh146 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %83, i32 0, i32 41, !dbg !4465
  %weight147 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh146, i32 0, i32 22, !dbg !4466
  %arrayidx148 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight147, i64 0, i64 0, !dbg !4464
  %arrayidx149 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx148, i64 0, i64 2, !dbg !4464
  call void %78(i8* %80, i32 32, i8* %82, i32 32, %struct.x264_weight_t* %arrayidx149, i32 8), !dbg !4452
  br label %if.end150, !dbg !4452

if.end150:                                        ; preds = %if.then131, %if.end124
  br label %if.end151, !dbg !4467

if.end151:                                        ; preds = %if.end150, %entry
  %84 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4468
  call void @x264_macroblock_encode_skip(%struct.x264_t* %84), !dbg !4469
  ret void, !dbg !4470
}

declare dso_local void @x264_mb_mc(%struct.x264_t*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @x264_macroblock_encode_skip(%struct.x264_t* %h) #0 !dbg !4471 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %i22 = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !4472, metadata !DIExpression()), !dbg !4473
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4474
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 55, !dbg !4474
  %cache = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 67, !dbg !4474
  %non_zero_count = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache, i32 0, i32 2, !dbg !4474
  %1 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !4474
  %add = add nsw i32 %1, 0, !dbg !4474
  %idxprom = sext i32 %add to i64, !dbg !4474
  %arrayidx = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count, i64 0, i64 %idxprom, !dbg !4474
  %2 = bitcast i8* %arrayidx to %union.x264_union32_t*, !dbg !4474
  %i = bitcast %union.x264_union32_t* %2 to i32*, !dbg !4474
  store i32 0, i32* %i, align 1, !dbg !4475
  %3 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4476
  %mb1 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %3, i32 0, i32 55, !dbg !4476
  %cache2 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1, i32 0, i32 67, !dbg !4476
  %non_zero_count3 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache2, i32 0, i32 2, !dbg !4476
  %4 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !4476
  %add4 = add nsw i32 %4, 8, !dbg !4476
  %idxprom5 = sext i32 %add4 to i64, !dbg !4476
  %arrayidx6 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count3, i64 0, i64 %idxprom5, !dbg !4476
  %5 = bitcast i8* %arrayidx6 to %union.x264_union32_t*, !dbg !4476
  %i7 = bitcast %union.x264_union32_t* %5 to i32*, !dbg !4476
  store i32 0, i32* %i7, align 1, !dbg !4477
  %6 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4478
  %mb8 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %6, i32 0, i32 55, !dbg !4478
  %cache9 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb8, i32 0, i32 67, !dbg !4478
  %non_zero_count10 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache9, i32 0, i32 2, !dbg !4478
  %7 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !4478
  %add11 = add nsw i32 %7, 16, !dbg !4478
  %idxprom12 = sext i32 %add11 to i64, !dbg !4478
  %arrayidx13 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count10, i64 0, i64 %idxprom12, !dbg !4478
  %8 = bitcast i8* %arrayidx13 to %union.x264_union32_t*, !dbg !4478
  %i14 = bitcast %union.x264_union32_t* %8 to i32*, !dbg !4478
  store i32 0, i32* %i14, align 1, !dbg !4479
  %9 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4480
  %mb15 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %9, i32 0, i32 55, !dbg !4480
  %cache16 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb15, i32 0, i32 67, !dbg !4480
  %non_zero_count17 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache16, i32 0, i32 2, !dbg !4480
  %10 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !4480
  %add18 = add nsw i32 %10, 24, !dbg !4480
  %idxprom19 = sext i32 %add18 to i64, !dbg !4480
  %arrayidx20 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count17, i64 0, i64 %idxprom19, !dbg !4480
  %11 = bitcast i8* %arrayidx20 to %union.x264_union32_t*, !dbg !4480
  %i21 = bitcast %union.x264_union32_t* %11 to i32*, !dbg !4480
  store i32 0, i32* %i21, align 1, !dbg !4481
  call void @llvm.dbg.declare(metadata i32* %i22, metadata !4482, metadata !DIExpression()), !dbg !4484
  store i32 16, i32* %i22, align 4, !dbg !4484
  br label %for.cond, !dbg !4485

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i22, align 4, !dbg !4486
  %cmp = icmp slt i32 %12, 24, !dbg !4488
  br i1 %cmp, label %for.body, label %for.end, !dbg !4489

for.body:                                         ; preds = %for.cond
  %13 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4490
  %mb23 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %13, i32 0, i32 55, !dbg !4491
  %cache24 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb23, i32 0, i32 67, !dbg !4492
  %non_zero_count25 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache24, i32 0, i32 2, !dbg !4493
  %14 = load i32, i32* %i22, align 4, !dbg !4494
  %idxprom26 = sext i32 %14 to i64, !dbg !4495
  %arrayidx27 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom26, !dbg !4495
  %15 = load i32, i32* %arrayidx27, align 4, !dbg !4495
  %idxprom28 = sext i32 %15 to i64, !dbg !4490
  %arrayidx29 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count25, i64 0, i64 %idxprom28, !dbg !4490
  store i8 0, i8* %arrayidx29, align 1, !dbg !4496
  br label %for.inc, !dbg !4490

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i22, align 4, !dbg !4497
  %inc = add nsw i32 %16, 1, !dbg !4497
  store i32 %inc, i32* %i22, align 4, !dbg !4497
  br label %for.cond, !dbg !4498, !llvm.loop !4499

for.end:                                          ; preds = %for.cond
  %17 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4501
  %mb30 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %17, i32 0, i32 55, !dbg !4502
  %i_cbp_luma = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb30, i32 0, i32 57, !dbg !4503
  store i32 0, i32* %i_cbp_luma, align 8, !dbg !4504
  %18 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4505
  %mb31 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %18, i32 0, i32 55, !dbg !4506
  %i_cbp_chroma = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb31, i32 0, i32 58, !dbg !4507
  store i32 0, i32* %i_cbp_chroma, align 4, !dbg !4508
  %19 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4509
  %mb32 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %19, i32 0, i32 55, !dbg !4510
  %cbp = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb32, i32 0, i32 41, !dbg !4511
  %20 = load i16*, i16** %cbp, align 16, !dbg !4511
  %21 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4512
  %mb33 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %21, i32 0, i32 55, !dbg !4513
  %i_mb_xy = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb33, i32 0, i32 6, !dbg !4514
  %22 = load i32, i32* %i_mb_xy, align 8, !dbg !4514
  %idxprom34 = sext i32 %22 to i64, !dbg !4509
  %arrayidx35 = getelementptr inbounds i16, i16* %20, i64 %idxprom34, !dbg !4509
  store i16 0, i16* %arrayidx35, align 2, !dbg !4515
  ret void, !dbg !4516
}

; Function Attrs: noinline nounwind uwtable
define internal void @x264_mb_encode_i16x16(%struct.x264_t* %h, i32 %i_qp) #0 !dbg !4517 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %i_qp.addr = alloca i32, align 4
  %p_src = alloca i8*, align 8
  %p_dst = alloca i8*, align 8
  %dct4x4 = alloca [16 x [16 x i16]], align 16
  %dct_dc4x4 = alloca [16 x i16], align 16
  %nz = alloca i32, align 4
  %decimate_score = alloca i32, align 4
  %i = alloca i32, align 4
  %oe = alloca i32, align 4
  %od = alloca i32, align 4
  %i41 = alloca i32, align 4
  %i176 = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !4518, metadata !DIExpression()), !dbg !4519
  store i32 %i_qp, i32* %i_qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_qp.addr, metadata !4520, metadata !DIExpression()), !dbg !4521
  call void @llvm.dbg.declare(metadata i8** %p_src, metadata !4522, metadata !DIExpression()), !dbg !4523
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4524
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 55, !dbg !4525
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 66, !dbg !4526
  %p_fenc = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 16, !dbg !4527
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc, i64 0, i64 0, !dbg !4524
  %1 = load i8*, i8** %arrayidx, align 16, !dbg !4524
  store i8* %1, i8** %p_src, align 8, !dbg !4523
  call void @llvm.dbg.declare(metadata i8** %p_dst, metadata !4528, metadata !DIExpression()), !dbg !4529
  %2 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4530
  %mb1 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %2, i32 0, i32 55, !dbg !4531
  %pic2 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb1, i32 0, i32 66, !dbg !4532
  %p_fdec = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic2, i32 0, i32 18, !dbg !4533
  %arrayidx3 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec, i64 0, i64 0, !dbg !4530
  %3 = load i8*, i8** %arrayidx3, align 16, !dbg !4530
  store i8* %3, i8** %p_dst, align 8, !dbg !4529
  call void @llvm.dbg.declare(metadata [16 x [16 x i16]]* %dct4x4, metadata !4534, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.declare(metadata [16 x i16]* %dct_dc4x4, metadata !4536, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !4538, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.declare(metadata i32* %decimate_score, metadata !4540, metadata !DIExpression()), !dbg !4541
  %4 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4542
  %mb4 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %4, i32 0, i32 55, !dbg !4543
  %b_dct_decimate = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb4, i32 0, i32 14, !dbg !4544
  %5 = load i32, i32* %b_dct_decimate, align 8, !dbg !4544
  %tobool = icmp ne i32 %5, 0, !dbg !4542
  %6 = zext i1 %tobool to i64, !dbg !4542
  %cond = select i1 %tobool, i32 0, i32 9, !dbg !4542
  store i32 %cond, i32* %decimate_score, align 4, !dbg !4541
  %7 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4545
  %mb5 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %7, i32 0, i32 55, !dbg !4547
  %b_lossless = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb5, i32 0, i32 73, !dbg !4548
  %8 = load i32, i32* %b_lossless, align 4, !dbg !4548
  %tobool6 = icmp ne i32 %8, 0, !dbg !4545
  br i1 %tobool6, label %if.then, label %if.end, !dbg !4549

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4550, metadata !DIExpression()), !dbg !4553
  store i32 0, i32* %i, align 4, !dbg !4553
  br label %for.cond, !dbg !4554

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %i, align 4, !dbg !4555
  %cmp = icmp slt i32 %9, 16, !dbg !4557
  br i1 %cmp, label %for.body, label %for.end, !dbg !4558

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %oe, metadata !4559, metadata !DIExpression()), !dbg !4561
  %10 = load i32, i32* %i, align 4, !dbg !4562
  %idxprom = sext i32 %10 to i64, !dbg !4563
  %arrayidx7 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_xy_fenc, i64 0, i64 %idxprom, !dbg !4563
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !4563
  %conv = zext i8 %11 to i32, !dbg !4563
  store i32 %conv, i32* %oe, align 4, !dbg !4561
  call void @llvm.dbg.declare(metadata i32* %od, metadata !4564, metadata !DIExpression()), !dbg !4565
  %12 = load i32, i32* %i, align 4, !dbg !4566
  %idxprom8 = sext i32 %12 to i64, !dbg !4567
  %arrayidx9 = getelementptr inbounds [16 x i16], [16 x i16]* @block_idx_xy_fdec, i64 0, i64 %idxprom8, !dbg !4567
  %13 = load i16, i16* %arrayidx9, align 2, !dbg !4567
  %conv10 = zext i16 %13 to i32, !dbg !4567
  store i32 %conv10, i32* %od, align 4, !dbg !4565
  %14 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4568
  %zigzagf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %14, i32 0, i32 72, !dbg !4569
  %sub_4x4ac = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf, i32 0, i32 4, !dbg !4570
  %15 = load i32 (i16*, i8*, i8*, i16*)*, i32 (i16*, i8*, i8*, i16*)** %sub_4x4ac, align 8, !dbg !4570
  %16 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4571
  %dct = getelementptr inbounds %struct.x264_t, %struct.x264_t* %16, i32 0, i32 54, !dbg !4572
  %luma4x4 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct, i32 0, i32 3, !dbg !4573
  %17 = load i32, i32* %i, align 4, !dbg !4574
  %idxprom11 = sext i32 %17 to i64, !dbg !4571
  %arrayidx12 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4, i64 0, i64 %idxprom11, !dbg !4571
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx12, i64 0, i64 0, !dbg !4571
  %18 = load i8*, i8** %p_src, align 8, !dbg !4575
  %19 = load i32, i32* %oe, align 4, !dbg !4576
  %idx.ext = sext i32 %19 to i64, !dbg !4577
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !4577
  %20 = load i8*, i8** %p_dst, align 8, !dbg !4578
  %21 = load i32, i32* %od, align 4, !dbg !4579
  %idx.ext13 = sext i32 %21 to i64, !dbg !4580
  %add.ptr14 = getelementptr inbounds i8, i8* %20, i64 %idx.ext13, !dbg !4580
  %22 = load i32, i32* %i, align 4, !dbg !4581
  %idxprom15 = sext i32 %22 to i64, !dbg !4582
  %arrayidx16 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_yx_1d, i64 0, i64 %idxprom15, !dbg !4582
  %23 = load i8, i8* %arrayidx16, align 1, !dbg !4582
  %idxprom17 = zext i8 %23 to i64, !dbg !4583
  %arrayidx18 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 %idxprom17, !dbg !4583
  %call = call i32 %15(i16* %arraydecay, i8* %add.ptr, i8* %add.ptr14, i16* %arrayidx18), !dbg !4568
  store i32 %call, i32* %nz, align 4, !dbg !4584
  %24 = load i32, i32* %nz, align 4, !dbg !4585
  %conv19 = trunc i32 %24 to i8, !dbg !4585
  %25 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4586
  %mb20 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %25, i32 0, i32 55, !dbg !4587
  %cache = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb20, i32 0, i32 67, !dbg !4588
  %non_zero_count = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache, i32 0, i32 2, !dbg !4589
  %26 = load i32, i32* %i, align 4, !dbg !4590
  %idxprom21 = sext i32 %26 to i64, !dbg !4591
  %arrayidx22 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom21, !dbg !4591
  %27 = load i32, i32* %arrayidx22, align 4, !dbg !4591
  %idxprom23 = sext i32 %27 to i64, !dbg !4586
  %arrayidx24 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count, i64 0, i64 %idxprom23, !dbg !4586
  store i8 %conv19, i8* %arrayidx24, align 1, !dbg !4592
  %28 = load i32, i32* %nz, align 4, !dbg !4593
  %29 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4594
  %mb25 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %29, i32 0, i32 55, !dbg !4595
  %i_cbp_luma = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb25, i32 0, i32 57, !dbg !4596
  %30 = load i32, i32* %i_cbp_luma, align 8, !dbg !4597
  %or = or i32 %30, %28, !dbg !4597
  store i32 %or, i32* %i_cbp_luma, align 8, !dbg !4597
  br label %for.inc, !dbg !4598

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !4599
  %inc = add nsw i32 %31, 1, !dbg !4599
  store i32 %inc, i32* %i, align 4, !dbg !4599
  br label %for.cond, !dbg !4600, !llvm.loop !4601

for.end:                                          ; preds = %for.cond
  %32 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4603
  %mb26 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %32, i32 0, i32 55, !dbg !4604
  %i_cbp_luma27 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb26, i32 0, i32 57, !dbg !4605
  %33 = load i32, i32* %i_cbp_luma27, align 8, !dbg !4606
  %mul = mul nsw i32 %33, 15, !dbg !4606
  store i32 %mul, i32* %i_cbp_luma27, align 8, !dbg !4606
  %arraydecay28 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 0, !dbg !4607
  %call29 = call i32 @array_non_zero_int(i16* %arraydecay28, i32 32), !dbg !4607
  %conv30 = trunc i32 %call29 to i8, !dbg !4607
  %34 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4608
  %mb31 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %34, i32 0, i32 55, !dbg !4609
  %cache32 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb31, i32 0, i32 67, !dbg !4610
  %non_zero_count33 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache32, i32 0, i32 2, !dbg !4611
  %35 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 24), align 16, !dbg !4612
  %idxprom34 = sext i32 %35 to i64, !dbg !4608
  %arrayidx35 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count33, i64 0, i64 %idxprom34, !dbg !4608
  store i8 %conv30, i8* %arrayidx35, align 1, !dbg !4613
  %36 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4614
  %zigzagf36 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %36, i32 0, i32 72, !dbg !4615
  %scan_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf36, i32 0, i32 1, !dbg !4616
  %37 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x4, align 8, !dbg !4616
  %38 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4617
  %dct37 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %38, i32 0, i32 54, !dbg !4618
  %luma16x16_dc = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct37, i32 0, i32 0, !dbg !4619
  %arraydecay38 = getelementptr inbounds [16 x i16], [16 x i16]* %luma16x16_dc, i64 0, i64 0, !dbg !4617
  %arraydecay39 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 0, !dbg !4620
  call void %37(i16* %arraydecay38, i16* %arraydecay39), !dbg !4614
  br label %if.end205, !dbg !4621

if.end:                                           ; preds = %entry
  %39 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4622
  %dctf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %39, i32 0, i32 71, !dbg !4623
  %sub16x16_dct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf, i32 0, i32 6, !dbg !4624
  %40 = load void ([16 x i16]*, i8*, i8*)*, void ([16 x i16]*, i8*, i8*)** %sub16x16_dct, align 16, !dbg !4624
  %arraydecay40 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !4625
  %41 = load i8*, i8** %p_src, align 8, !dbg !4626
  %42 = load i8*, i8** %p_dst, align 8, !dbg !4627
  call void %40([16 x i16]* %arraydecay40, i8* %41, i8* %42), !dbg !4622
  call void @llvm.dbg.declare(metadata i32* %i41, metadata !4628, metadata !DIExpression()), !dbg !4630
  store i32 0, i32* %i41, align 4, !dbg !4630
  br label %for.cond42, !dbg !4631

for.cond42:                                       ; preds = %for.inc98, %if.end
  %43 = load i32, i32* %i41, align 4, !dbg !4632
  %cmp43 = icmp slt i32 %43, 16, !dbg !4634
  br i1 %cmp43, label %for.body45, label %for.end100, !dbg !4635

for.body45:                                       ; preds = %for.cond42
  %44 = load i32, i32* %i41, align 4, !dbg !4636
  %idxprom46 = sext i32 %44 to i64, !dbg !4638
  %arrayidx47 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom46, !dbg !4638
  %arrayidx48 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx47, i64 0, i64 0, !dbg !4638
  %45 = load i16, i16* %arrayidx48, align 16, !dbg !4638
  %46 = load i32, i32* %i41, align 4, !dbg !4639
  %idxprom49 = sext i32 %46 to i64, !dbg !4640
  %arrayidx50 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_xy_1d, i64 0, i64 %idxprom49, !dbg !4640
  %47 = load i8, i8* %arrayidx50, align 1, !dbg !4640
  %idxprom51 = zext i8 %47 to i64, !dbg !4641
  %arrayidx52 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 %idxprom51, !dbg !4641
  store i16 %45, i16* %arrayidx52, align 2, !dbg !4642
  %48 = load i32, i32* %i41, align 4, !dbg !4643
  %idxprom53 = sext i32 %48 to i64, !dbg !4644
  %arrayidx54 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom53, !dbg !4644
  %arrayidx55 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx54, i64 0, i64 0, !dbg !4644
  store i16 0, i16* %arrayidx55, align 16, !dbg !4645
  %49 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4646
  %50 = load i32, i32* %i41, align 4, !dbg !4647
  %idxprom56 = sext i32 %50 to i64, !dbg !4648
  %arrayidx57 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom56, !dbg !4648
  %arraydecay58 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx57, i64 0, i64 0, !dbg !4648
  %51 = load i32, i32* %i_qp.addr, align 4, !dbg !4649
  %52 = load i32, i32* %i41, align 4, !dbg !4650
  %call59 = call i32 @x264_quant_4x4(%struct.x264_t* %49, i16* %arraydecay58, i32 %51, i32 1, i32 1, i32 %52), !dbg !4651
  store i32 %call59, i32* %nz, align 4, !dbg !4652
  %53 = load i32, i32* %nz, align 4, !dbg !4653
  %conv60 = trunc i32 %53 to i8, !dbg !4653
  %54 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4654
  %mb61 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %54, i32 0, i32 55, !dbg !4655
  %cache62 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb61, i32 0, i32 67, !dbg !4656
  %non_zero_count63 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache62, i32 0, i32 2, !dbg !4657
  %55 = load i32, i32* %i41, align 4, !dbg !4658
  %idxprom64 = sext i32 %55 to i64, !dbg !4659
  %arrayidx65 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom64, !dbg !4659
  %56 = load i32, i32* %arrayidx65, align 4, !dbg !4659
  %idxprom66 = sext i32 %56 to i64, !dbg !4654
  %arrayidx67 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count63, i64 0, i64 %idxprom66, !dbg !4654
  store i8 %conv60, i8* %arrayidx67, align 1, !dbg !4660
  %57 = load i32, i32* %nz, align 4, !dbg !4661
  %tobool68 = icmp ne i32 %57, 0, !dbg !4661
  br i1 %tobool68, label %if.then69, label %if.end97, !dbg !4663

if.then69:                                        ; preds = %for.body45
  %58 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4664
  %zigzagf70 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %58, i32 0, i32 72, !dbg !4666
  %scan_4x471 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf70, i32 0, i32 1, !dbg !4667
  %59 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x471, align 8, !dbg !4667
  %60 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4668
  %dct72 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %60, i32 0, i32 54, !dbg !4669
  %luma4x473 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct72, i32 0, i32 3, !dbg !4670
  %61 = load i32, i32* %i41, align 4, !dbg !4671
  %idxprom74 = sext i32 %61 to i64, !dbg !4668
  %arrayidx75 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x473, i64 0, i64 %idxprom74, !dbg !4668
  %arraydecay76 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx75, i64 0, i64 0, !dbg !4668
  %62 = load i32, i32* %i41, align 4, !dbg !4672
  %idxprom77 = sext i32 %62 to i64, !dbg !4673
  %arrayidx78 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom77, !dbg !4673
  %arraydecay79 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx78, i64 0, i64 0, !dbg !4673
  call void %59(i16* %arraydecay76, i16* %arraydecay79), !dbg !4664
  %63 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4674
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %63, i32 0, i32 73, !dbg !4675
  %dequant_4x4 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 5, !dbg !4676
  %64 = load void (i16*, [16 x i32]*, i32)*, void (i16*, [16 x i32]*, i32)** %dequant_4x4, align 8, !dbg !4676
  %65 = load i32, i32* %i41, align 4, !dbg !4677
  %idxprom80 = sext i32 %65 to i64, !dbg !4678
  %arrayidx81 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom80, !dbg !4678
  %arraydecay82 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx81, i64 0, i64 0, !dbg !4678
  %66 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4679
  %dequant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %66, i32 0, i32 29, !dbg !4680
  %arrayidx83 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf, i64 0, i64 0, !dbg !4679
  %67 = load [16 x i32]*, [16 x i32]** %arrayidx83, align 16, !dbg !4679
  %68 = load i32, i32* %i_qp.addr, align 4, !dbg !4681
  call void %64(i16* %arraydecay82, [16 x i32]* %67, i32 %68), !dbg !4674
  %69 = load i32, i32* %decimate_score, align 4, !dbg !4682
  %cmp84 = icmp slt i32 %69, 6, !dbg !4684
  br i1 %cmp84, label %if.then86, label %if.end94, !dbg !4685

if.then86:                                        ; preds = %if.then69
  %70 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4686
  %quantf87 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %70, i32 0, i32 73, !dbg !4687
  %decimate_score15 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf87, i32 0, i32 8, !dbg !4688
  %71 = load i32 (i16*)*, i32 (i16*)** %decimate_score15, align 8, !dbg !4688
  %72 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4689
  %dct88 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %72, i32 0, i32 54, !dbg !4690
  %luma4x489 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct88, i32 0, i32 3, !dbg !4691
  %73 = load i32, i32* %i41, align 4, !dbg !4692
  %idxprom90 = sext i32 %73 to i64, !dbg !4689
  %arrayidx91 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x489, i64 0, i64 %idxprom90, !dbg !4689
  %arraydecay92 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx91, i64 0, i64 0, !dbg !4689
  %call93 = call i32 %71(i16* %arraydecay92), !dbg !4686
  %74 = load i32, i32* %decimate_score, align 4, !dbg !4693
  %add = add nsw i32 %74, %call93, !dbg !4693
  store i32 %add, i32* %decimate_score, align 4, !dbg !4693
  br label %if.end94, !dbg !4694

if.end94:                                         ; preds = %if.then86, %if.then69
  %75 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4695
  %mb95 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %75, i32 0, i32 55, !dbg !4696
  %i_cbp_luma96 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb95, i32 0, i32 57, !dbg !4697
  store i32 15, i32* %i_cbp_luma96, align 8, !dbg !4698
  br label %if.end97, !dbg !4699

if.end97:                                         ; preds = %if.end94, %for.body45
  br label %for.inc98, !dbg !4700

for.inc98:                                        ; preds = %if.end97
  %76 = load i32, i32* %i41, align 4, !dbg !4701
  %inc99 = add nsw i32 %76, 1, !dbg !4701
  store i32 %inc99, i32* %i41, align 4, !dbg !4701
  br label %for.cond42, !dbg !4702, !llvm.loop !4703

for.end100:                                       ; preds = %for.cond42
  %77 = load i32, i32* %decimate_score, align 4, !dbg !4705
  %cmp101 = icmp slt i32 %77, 6, !dbg !4707
  br i1 %cmp101, label %if.then103, label %if.end130, !dbg !4708

if.then103:                                       ; preds = %for.end100
  %78 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4709
  %mb104 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %78, i32 0, i32 55, !dbg !4711
  %i_cbp_luma105 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb104, i32 0, i32 57, !dbg !4712
  store i32 0, i32* %i_cbp_luma105, align 8, !dbg !4713
  %79 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4714
  %mb106 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %79, i32 0, i32 55, !dbg !4714
  %cache107 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb106, i32 0, i32 67, !dbg !4714
  %non_zero_count108 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache107, i32 0, i32 2, !dbg !4714
  %80 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 0), align 16, !dbg !4714
  %idxprom109 = sext i32 %80 to i64, !dbg !4714
  %arrayidx110 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count108, i64 0, i64 %idxprom109, !dbg !4714
  %81 = bitcast i8* %arrayidx110 to %union.x264_union32_t*, !dbg !4714
  %i111 = bitcast %union.x264_union32_t* %81 to i32*, !dbg !4714
  store i32 0, i32* %i111, align 1, !dbg !4714
  %82 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4714
  %mb112 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %82, i32 0, i32 55, !dbg !4714
  %cache113 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb112, i32 0, i32 67, !dbg !4714
  %non_zero_count114 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache113, i32 0, i32 2, !dbg !4714
  %83 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 2), align 8, !dbg !4714
  %idxprom115 = sext i32 %83 to i64, !dbg !4714
  %arrayidx116 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count114, i64 0, i64 %idxprom115, !dbg !4714
  %84 = bitcast i8* %arrayidx116 to %union.x264_union32_t*, !dbg !4714
  %i117 = bitcast %union.x264_union32_t* %84 to i32*, !dbg !4714
  store i32 0, i32* %i117, align 1, !dbg !4714
  %85 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4714
  %mb118 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %85, i32 0, i32 55, !dbg !4714
  %cache119 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb118, i32 0, i32 67, !dbg !4714
  %non_zero_count120 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache119, i32 0, i32 2, !dbg !4714
  %86 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 8), align 16, !dbg !4714
  %idxprom121 = sext i32 %86 to i64, !dbg !4714
  %arrayidx122 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count120, i64 0, i64 %idxprom121, !dbg !4714
  %87 = bitcast i8* %arrayidx122 to %union.x264_union32_t*, !dbg !4714
  %i123 = bitcast %union.x264_union32_t* %87 to i32*, !dbg !4714
  store i32 0, i32* %i123, align 1, !dbg !4714
  %88 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4714
  %mb124 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %88, i32 0, i32 55, !dbg !4714
  %cache125 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb124, i32 0, i32 67, !dbg !4714
  %non_zero_count126 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache125, i32 0, i32 2, !dbg !4714
  %89 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 10), align 8, !dbg !4714
  %idxprom127 = sext i32 %89 to i64, !dbg !4714
  %arrayidx128 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count126, i64 0, i64 %idxprom127, !dbg !4714
  %90 = bitcast i8* %arrayidx128 to %union.x264_union32_t*, !dbg !4714
  %i129 = bitcast %union.x264_union32_t* %90 to i32*, !dbg !4714
  store i32 0, i32* %i129, align 1, !dbg !4714
  br label %if.end130, !dbg !4716

if.end130:                                        ; preds = %if.then103, %for.end100
  %91 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4717
  %dctf131 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %91, i32 0, i32 71, !dbg !4718
  %dct4x4dc = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf131, i32 0, i32 13, !dbg !4719
  %92 = load void (i16*)*, void (i16*)** %dct4x4dc, align 8, !dbg !4719
  %arraydecay132 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 0, !dbg !4720
  call void %92(i16* %arraydecay132), !dbg !4717
  %93 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4721
  %mb133 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %93, i32 0, i32 55, !dbg !4723
  %b_trellis = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb133, i32 0, i32 12, !dbg !4724
  %94 = load i32, i32* %b_trellis, align 16, !dbg !4724
  %tobool134 = icmp ne i32 %94, 0, !dbg !4721
  br i1 %tobool134, label %if.then135, label %if.else, !dbg !4725

if.then135:                                       ; preds = %if.end130
  %95 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4726
  %arraydecay136 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 0, !dbg !4727
  %96 = load i32, i32* %i_qp.addr, align 4, !dbg !4728
  %call137 = call i32 @x264_quant_dc_trellis(%struct.x264_t* %95, i16* %arraydecay136, i32 0, i32 %96, i32 0, i32 1, i32 0), !dbg !4729
  store i32 %call137, i32* %nz, align 4, !dbg !4730
  br label %if.end151, !dbg !4731

if.else:                                          ; preds = %if.end130
  %97 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4732
  %quantf138 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %97, i32 0, i32 73, !dbg !4733
  %quant_4x4_dc = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf138, i32 0, i32 2, !dbg !4734
  %98 = load i32 (i16*, i32, i32)*, i32 (i16*, i32, i32)** %quant_4x4_dc, align 8, !dbg !4734
  %arraydecay139 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 0, !dbg !4735
  %99 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4736
  %quant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %99, i32 0, i32 33, !dbg !4737
  %arrayidx140 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_mf, i64 0, i64 0, !dbg !4736
  %100 = load [16 x i16]*, [16 x i16]** %arrayidx140, align 16, !dbg !4736
  %101 = load i32, i32* %i_qp.addr, align 4, !dbg !4738
  %idxprom141 = sext i32 %101 to i64, !dbg !4736
  %arrayidx142 = getelementptr inbounds [16 x i16], [16 x i16]* %100, i64 %idxprom141, !dbg !4736
  %arrayidx143 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx142, i64 0, i64 0, !dbg !4736
  %102 = load i16, i16* %arrayidx143, align 2, !dbg !4736
  %conv144 = zext i16 %102 to i32, !dbg !4736
  %shr = ashr i32 %conv144, 1, !dbg !4739
  %103 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4740
  %quant4_bias = getelementptr inbounds %struct.x264_t, %struct.x264_t* %103, i32 0, i32 35, !dbg !4741
  %arrayidx145 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_bias, i64 0, i64 0, !dbg !4740
  %104 = load [16 x i16]*, [16 x i16]** %arrayidx145, align 16, !dbg !4740
  %105 = load i32, i32* %i_qp.addr, align 4, !dbg !4742
  %idxprom146 = sext i32 %105 to i64, !dbg !4740
  %arrayidx147 = getelementptr inbounds [16 x i16], [16 x i16]* %104, i64 %idxprom146, !dbg !4740
  %arrayidx148 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx147, i64 0, i64 0, !dbg !4740
  %106 = load i16, i16* %arrayidx148, align 2, !dbg !4740
  %conv149 = zext i16 %106 to i32, !dbg !4740
  %shl = shl i32 %conv149, 1, !dbg !4743
  %call150 = call i32 %98(i16* %arraydecay139, i32 %shr, i32 %shl), !dbg !4732
  store i32 %call150, i32* %nz, align 4, !dbg !4744
  br label %if.end151

if.end151:                                        ; preds = %if.else, %if.then135
  %107 = load i32, i32* %nz, align 4, !dbg !4745
  %conv152 = trunc i32 %107 to i8, !dbg !4745
  %108 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4746
  %mb153 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %108, i32 0, i32 55, !dbg !4747
  %cache154 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb153, i32 0, i32 67, !dbg !4748
  %non_zero_count155 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache154, i32 0, i32 2, !dbg !4749
  %109 = load i32, i32* getelementptr inbounds ([27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 24), align 16, !dbg !4750
  %idxprom156 = sext i32 %109 to i64, !dbg !4746
  %arrayidx157 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count155, i64 0, i64 %idxprom156, !dbg !4746
  store i8 %conv152, i8* %arrayidx157, align 1, !dbg !4751
  %110 = load i32, i32* %nz, align 4, !dbg !4752
  %tobool158 = icmp ne i32 %110, 0, !dbg !4752
  br i1 %tobool158, label %if.then159, label %if.end192, !dbg !4754

if.then159:                                       ; preds = %if.end151
  %111 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4755
  %zigzagf160 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %111, i32 0, i32 72, !dbg !4757
  %scan_4x4161 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf160, i32 0, i32 1, !dbg !4758
  %112 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x4161, align 8, !dbg !4758
  %113 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4759
  %dct162 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %113, i32 0, i32 54, !dbg !4760
  %luma16x16_dc163 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct162, i32 0, i32 0, !dbg !4761
  %arraydecay164 = getelementptr inbounds [16 x i16], [16 x i16]* %luma16x16_dc163, i64 0, i64 0, !dbg !4759
  %arraydecay165 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 0, !dbg !4762
  call void %112(i16* %arraydecay164, i16* %arraydecay165), !dbg !4755
  %114 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4763
  %dctf166 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %114, i32 0, i32 71, !dbg !4764
  %idct4x4dc = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf166, i32 0, i32 14, !dbg !4765
  %115 = load void (i16*)*, void (i16*)** %idct4x4dc, align 16, !dbg !4765
  %arraydecay167 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 0, !dbg !4766
  call void %115(i16* %arraydecay167), !dbg !4763
  %116 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4767
  %quantf168 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %116, i32 0, i32 73, !dbg !4768
  %dequant_4x4_dc = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf168, i32 0, i32 6, !dbg !4769
  %117 = load void (i16*, [16 x i32]*, i32)*, void (i16*, [16 x i32]*, i32)** %dequant_4x4_dc, align 8, !dbg !4769
  %arraydecay169 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 0, !dbg !4770
  %118 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4771
  %dequant4_mf170 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %118, i32 0, i32 29, !dbg !4772
  %arrayidx171 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf170, i64 0, i64 0, !dbg !4771
  %119 = load [16 x i32]*, [16 x i32]** %arrayidx171, align 16, !dbg !4771
  %120 = load i32, i32* %i_qp.addr, align 4, !dbg !4773
  call void %117(i16* %arraydecay169, [16 x i32]* %119, i32 %120), !dbg !4767
  %121 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4774
  %mb172 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %121, i32 0, i32 55, !dbg !4776
  %i_cbp_luma173 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb172, i32 0, i32 57, !dbg !4777
  %122 = load i32, i32* %i_cbp_luma173, align 8, !dbg !4777
  %tobool174 = icmp ne i32 %122, 0, !dbg !4774
  br i1 %tobool174, label %if.then175, label %if.end191, !dbg !4778

if.then175:                                       ; preds = %if.then159
  call void @llvm.dbg.declare(metadata i32* %i176, metadata !4779, metadata !DIExpression()), !dbg !4781
  store i32 0, i32* %i176, align 4, !dbg !4781
  br label %for.cond177, !dbg !4782

for.cond177:                                      ; preds = %for.inc188, %if.then175
  %123 = load i32, i32* %i176, align 4, !dbg !4783
  %cmp178 = icmp slt i32 %123, 16, !dbg !4785
  br i1 %cmp178, label %for.body180, label %for.end190, !dbg !4786

for.body180:                                      ; preds = %for.cond177
  %124 = load i32, i32* %i176, align 4, !dbg !4787
  %idxprom181 = sext i32 %124 to i64, !dbg !4788
  %arrayidx182 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_xy_1d, i64 0, i64 %idxprom181, !dbg !4788
  %125 = load i8, i8* %arrayidx182, align 1, !dbg !4788
  %idxprom183 = zext i8 %125 to i64, !dbg !4789
  %arrayidx184 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 %idxprom183, !dbg !4789
  %126 = load i16, i16* %arrayidx184, align 2, !dbg !4789
  %127 = load i32, i32* %i176, align 4, !dbg !4790
  %idxprom185 = sext i32 %127 to i64, !dbg !4791
  %arrayidx186 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom185, !dbg !4791
  %arrayidx187 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx186, i64 0, i64 0, !dbg !4791
  store i16 %126, i16* %arrayidx187, align 16, !dbg !4792
  br label %for.inc188, !dbg !4791

for.inc188:                                       ; preds = %for.body180
  %128 = load i32, i32* %i176, align 4, !dbg !4793
  %inc189 = add nsw i32 %128, 1, !dbg !4793
  store i32 %inc189, i32* %i176, align 4, !dbg !4793
  br label %for.cond177, !dbg !4794, !llvm.loop !4795

for.end190:                                       ; preds = %for.cond177
  br label %if.end191, !dbg !4796

if.end191:                                        ; preds = %for.end190, %if.then159
  br label %if.end192, !dbg !4797

if.end192:                                        ; preds = %if.end191, %if.end151
  %129 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4798
  %mb193 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %129, i32 0, i32 55, !dbg !4800
  %i_cbp_luma194 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb193, i32 0, i32 57, !dbg !4801
  %130 = load i32, i32* %i_cbp_luma194, align 8, !dbg !4801
  %tobool195 = icmp ne i32 %130, 0, !dbg !4798
  br i1 %tobool195, label %if.then196, label %if.else199, !dbg !4802

if.then196:                                       ; preds = %if.end192
  %131 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4803
  %dctf197 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %131, i32 0, i32 71, !dbg !4804
  %add16x16_idct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf197, i32 0, i32 7, !dbg !4805
  %132 = load void (i8*, [16 x i16]*)*, void (i8*, [16 x i16]*)** %add16x16_idct, align 8, !dbg !4805
  %133 = load i8*, i8** %p_dst, align 8, !dbg !4806
  %arraydecay198 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !4807
  call void %132(i8* %133, [16 x i16]* %arraydecay198), !dbg !4803
  br label %if.end205, !dbg !4803

if.else199:                                       ; preds = %if.end192
  %134 = load i32, i32* %nz, align 4, !dbg !4808
  %tobool200 = icmp ne i32 %134, 0, !dbg !4808
  br i1 %tobool200, label %if.then201, label %if.end204, !dbg !4810

if.then201:                                       ; preds = %if.else199
  %135 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4811
  %dctf202 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %135, i32 0, i32 71, !dbg !4812
  %add16x16_idct_dc = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf202, i32 0, i32 8, !dbg !4813
  %136 = load void (i8*, i16*)*, void (i8*, i16*)** %add16x16_idct_dc, align 16, !dbg !4813
  %137 = load i8*, i8** %p_dst, align 8, !dbg !4814
  %arraydecay203 = getelementptr inbounds [16 x i16], [16 x i16]* %dct_dc4x4, i64 0, i64 0, !dbg !4815
  call void %136(i8* %137, i16* %arraydecay203), !dbg !4811
  br label %if.end204, !dbg !4811

if.end204:                                        ; preds = %if.then201, %if.else199
  br label %if.end205

if.end205:                                        ; preds = %for.end, %if.end204, %if.then196
  ret void, !dbg !4816
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @x264_macroblock_probe_skip(%struct.x264_t* %h, i32 %b_bidir) #0 !dbg !4817 {
entry:
  %retval = alloca i32, align 4
  %h.addr = alloca %struct.x264_t*, align 8
  %b_bidir.addr = alloca i32, align 4
  %dct4x4 = alloca [4 x [16 x i16]], align 16
  %dct2x2 = alloca [4 x i16], align 16
  %dctscan = alloca [16 x i16], align 16
  %mvp = alloca [2 x i16], align 4
  %i_qp = alloca i32, align 4
  %thresh = alloca i32, align 4
  %ssd = alloca i32, align 4
  %i8x8 = alloca i32, align 4
  %i_decimate_mb = alloca i32, align 4
  %fenc_offset = alloca i32, align 4
  %fdec_offset = alloca i32, align 4
  %i4x4 = alloca i32, align 4
  %ch = alloca i32, align 4
  %p_src = alloca i8*, align 8
  %p_dst = alloca i8*, align 8
  %i4x4236 = alloca i32, align 4
  %i_decimate_mb237 = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !4820, metadata !DIExpression()), !dbg !4821
  store i32 %b_bidir, i32* %b_bidir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b_bidir.addr, metadata !4822, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.declare(metadata [4 x [16 x i16]]* %dct4x4, metadata !4824, metadata !DIExpression()), !dbg !4825
  call void @llvm.dbg.declare(metadata [4 x i16]* %dct2x2, metadata !4826, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.declare(metadata [16 x i16]* %dctscan, metadata !4828, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.declare(metadata [2 x i16]* %mvp, metadata !4830, metadata !DIExpression()), !dbg !4831
  call void @llvm.dbg.declare(metadata i32* %i_qp, metadata !4832, metadata !DIExpression()), !dbg !4833
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4834
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 55, !dbg !4835
  %i_qp1 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 68, !dbg !4836
  %1 = load i32, i32* %i_qp1, align 16, !dbg !4836
  store i32 %1, i32* %i_qp, align 4, !dbg !4833
  call void @llvm.dbg.declare(metadata i32* %thresh, metadata !4837, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.declare(metadata i32* %ssd, metadata !4839, metadata !DIExpression()), !dbg !4840
  %2 = load i32, i32* %b_bidir.addr, align 4, !dbg !4841
  %tobool = icmp ne i32 %2, 0, !dbg !4841
  br i1 %tobool, label %if.end, label %if.then, !dbg !4843

if.then:                                          ; preds = %entry
  %3 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4844
  %mb2 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %3, i32 0, i32 55, !dbg !4846
  %cache = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb2, i32 0, i32 67, !dbg !4847
  %pskip_mv = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache, i32 0, i32 10, !dbg !4848
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %pskip_mv, i64 0, i64 0, !dbg !4844
  %4 = load i16, i16* %arrayidx, align 4, !dbg !4844
  %conv = sext i16 %4 to i32, !dbg !4844
  %5 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4849
  %mb3 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %5, i32 0, i32 55, !dbg !4850
  %mv_min = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb3, i32 0, i32 18, !dbg !4851
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %mv_min, i64 0, i64 0, !dbg !4849
  %6 = load i32, i32* %arrayidx4, align 8, !dbg !4849
  %7 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4852
  %mb5 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %7, i32 0, i32 55, !dbg !4853
  %mv_max = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb5, i32 0, i32 19, !dbg !4854
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %mv_max, i64 0, i64 0, !dbg !4852
  %8 = load i32, i32* %arrayidx6, align 16, !dbg !4852
  %call = call i32 @x264_clip3(i32 %conv, i32 %6, i32 %8), !dbg !4855
  %conv7 = trunc i32 %call to i16, !dbg !4855
  %arrayidx8 = getelementptr inbounds [2 x i16], [2 x i16]* %mvp, i64 0, i64 0, !dbg !4856
  store i16 %conv7, i16* %arrayidx8, align 4, !dbg !4857
  %9 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4858
  %mb9 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %9, i32 0, i32 55, !dbg !4859
  %cache10 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb9, i32 0, i32 67, !dbg !4860
  %pskip_mv11 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache10, i32 0, i32 10, !dbg !4861
  %arrayidx12 = getelementptr inbounds [2 x i16], [2 x i16]* %pskip_mv11, i64 0, i64 1, !dbg !4858
  %10 = load i16, i16* %arrayidx12, align 2, !dbg !4858
  %conv13 = sext i16 %10 to i32, !dbg !4858
  %11 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4862
  %mb14 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %11, i32 0, i32 55, !dbg !4863
  %mv_min15 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb14, i32 0, i32 18, !dbg !4864
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %mv_min15, i64 0, i64 1, !dbg !4862
  %12 = load i32, i32* %arrayidx16, align 4, !dbg !4862
  %13 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4865
  %mb17 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %13, i32 0, i32 55, !dbg !4866
  %mv_max18 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb17, i32 0, i32 19, !dbg !4867
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %mv_max18, i64 0, i64 1, !dbg !4865
  %14 = load i32, i32* %arrayidx19, align 4, !dbg !4865
  %call20 = call i32 @x264_clip3(i32 %conv13, i32 %12, i32 %14), !dbg !4868
  %conv21 = trunc i32 %call20 to i16, !dbg !4868
  %arrayidx22 = getelementptr inbounds [2 x i16], [2 x i16]* %mvp, i64 0, i64 1, !dbg !4869
  store i16 %conv21, i16* %arrayidx22, align 2, !dbg !4870
  %15 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4871
  %mc = getelementptr inbounds %struct.x264_t, %struct.x264_t* %15, i32 0, i32 70, !dbg !4872
  %mc_luma = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc, i32 0, i32 0, !dbg !4873
  %16 = load void (i8*, i32, i8**, i32, i32, i32, i32, i32, %struct.x264_weight_t*)*, void (i8*, i32, i8**, i32, i32, i32, i32, i32, %struct.x264_weight_t*)** %mc_luma, align 8, !dbg !4873
  %17 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4874
  %mb23 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %17, i32 0, i32 55, !dbg !4875
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb23, i32 0, i32 66, !dbg !4876
  %p_fdec = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 18, !dbg !4877
  %arrayidx24 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec, i64 0, i64 0, !dbg !4874
  %18 = load i8*, i8** %arrayidx24, align 16, !dbg !4874
  %19 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4878
  %mb25 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %19, i32 0, i32 55, !dbg !4879
  %pic26 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb25, i32 0, i32 66, !dbg !4880
  %p_fref = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic26, i32 0, i32 20, !dbg !4881
  %arrayidx27 = getelementptr inbounds [2 x [32 x [6 x i8*]]], [2 x [32 x [6 x i8*]]]* %p_fref, i64 0, i64 0, !dbg !4878
  %arrayidx28 = getelementptr inbounds [32 x [6 x i8*]], [32 x [6 x i8*]]* %arrayidx27, i64 0, i64 0, !dbg !4878
  %arraydecay = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx28, i64 0, i64 0, !dbg !4878
  %20 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4882
  %mb29 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %20, i32 0, i32 55, !dbg !4883
  %pic30 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb29, i32 0, i32 66, !dbg !4884
  %i_stride = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic30, i32 0, i32 23, !dbg !4885
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride, i64 0, i64 0, !dbg !4882
  %21 = load i32, i32* %arrayidx31, align 16, !dbg !4882
  %arrayidx32 = getelementptr inbounds [2 x i16], [2 x i16]* %mvp, i64 0, i64 0, !dbg !4886
  %22 = load i16, i16* %arrayidx32, align 4, !dbg !4886
  %conv33 = sext i16 %22 to i32, !dbg !4886
  %arrayidx34 = getelementptr inbounds [2 x i16], [2 x i16]* %mvp, i64 0, i64 1, !dbg !4887
  %23 = load i16, i16* %arrayidx34, align 2, !dbg !4887
  %conv35 = sext i16 %23 to i32, !dbg !4887
  %24 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4888
  %sh = getelementptr inbounds %struct.x264_t, %struct.x264_t* %24, i32 0, i32 41, !dbg !4889
  %weight = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh, i32 0, i32 22, !dbg !4890
  %arrayidx36 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight, i64 0, i64 0, !dbg !4888
  %arrayidx37 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx36, i64 0, i64 0, !dbg !4888
  call void %16(i8* %18, i32 32, i8** %arraydecay, i32 %21, i32 %conv33, i32 %conv35, i32 16, i32 16, %struct.x264_weight_t* %arrayidx37), !dbg !4871
  br label %if.end, !dbg !4891

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i32* %i8x8, metadata !4892, metadata !DIExpression()), !dbg !4894
  store i32 0, i32* %i8x8, align 4, !dbg !4894
  call void @llvm.dbg.declare(metadata i32* %i_decimate_mb, metadata !4895, metadata !DIExpression()), !dbg !4896
  store i32 0, i32* %i_decimate_mb, align 4, !dbg !4896
  br label %for.cond, !dbg !4897

for.cond:                                         ; preds = %for.inc87, %if.end
  %25 = load i32, i32* %i8x8, align 4, !dbg !4898
  %cmp = icmp slt i32 %25, 4, !dbg !4900
  br i1 %cmp, label %for.body, label %for.end89, !dbg !4901

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %fenc_offset, metadata !4902, metadata !DIExpression()), !dbg !4904
  %26 = load i32, i32* %i8x8, align 4, !dbg !4905
  %and = and i32 %26, 1, !dbg !4906
  %mul = mul nsw i32 %and, 8, !dbg !4907
  %27 = load i32, i32* %i8x8, align 4, !dbg !4908
  %shr = ashr i32 %27, 1, !dbg !4909
  %mul39 = mul nsw i32 %shr, 16, !dbg !4910
  %mul40 = mul nsw i32 %mul39, 8, !dbg !4911
  %add = add nsw i32 %mul, %mul40, !dbg !4912
  store i32 %add, i32* %fenc_offset, align 4, !dbg !4904
  call void @llvm.dbg.declare(metadata i32* %fdec_offset, metadata !4913, metadata !DIExpression()), !dbg !4914
  %28 = load i32, i32* %i8x8, align 4, !dbg !4915
  %and41 = and i32 %28, 1, !dbg !4916
  %mul42 = mul nsw i32 %and41, 8, !dbg !4917
  %29 = load i32, i32* %i8x8, align 4, !dbg !4918
  %shr43 = ashr i32 %29, 1, !dbg !4919
  %mul44 = mul nsw i32 %shr43, 32, !dbg !4920
  %mul45 = mul nsw i32 %mul44, 8, !dbg !4921
  %add46 = add nsw i32 %mul42, %mul45, !dbg !4922
  store i32 %add46, i32* %fdec_offset, align 4, !dbg !4914
  %30 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4923
  %dctf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %30, i32 0, i32 71, !dbg !4924
  %sub8x8_dct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf, i32 0, i32 2, !dbg !4925
  %31 = load void ([16 x i16]*, i8*, i8*)*, void ([16 x i16]*, i8*, i8*)** %sub8x8_dct, align 16, !dbg !4925
  %arraydecay47 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !4926
  %32 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4927
  %mb48 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %32, i32 0, i32 55, !dbg !4928
  %pic49 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb48, i32 0, i32 66, !dbg !4929
  %p_fenc = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic49, i32 0, i32 16, !dbg !4930
  %arrayidx50 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc, i64 0, i64 0, !dbg !4927
  %33 = load i8*, i8** %arrayidx50, align 16, !dbg !4927
  %34 = load i32, i32* %fenc_offset, align 4, !dbg !4931
  %idx.ext = sext i32 %34 to i64, !dbg !4932
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %idx.ext, !dbg !4932
  %35 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4933
  %mb51 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %35, i32 0, i32 55, !dbg !4934
  %pic52 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb51, i32 0, i32 66, !dbg !4935
  %p_fdec53 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic52, i32 0, i32 18, !dbg !4936
  %arrayidx54 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec53, i64 0, i64 0, !dbg !4933
  %36 = load i8*, i8** %arrayidx54, align 16, !dbg !4933
  %37 = load i32, i32* %fdec_offset, align 4, !dbg !4937
  %idx.ext55 = sext i32 %37 to i64, !dbg !4938
  %add.ptr56 = getelementptr inbounds i8, i8* %36, i64 %idx.ext55, !dbg !4938
  call void %31([16 x i16]* %arraydecay47, i8* %add.ptr, i8* %add.ptr56), !dbg !4923
  call void @llvm.dbg.declare(metadata i32* %i4x4, metadata !4939, metadata !DIExpression()), !dbg !4941
  store i32 0, i32* %i4x4, align 4, !dbg !4941
  br label %for.cond57, !dbg !4942

for.cond57:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %i4x4, align 4, !dbg !4943
  %cmp58 = icmp slt i32 %38, 4, !dbg !4945
  br i1 %cmp58, label %for.body60, label %for.end, !dbg !4946

for.body60:                                       ; preds = %for.cond57
  %39 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4947
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %39, i32 0, i32 73, !dbg !4950
  %quant_4x4 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 1, !dbg !4951
  %40 = load i32 (i16*, i16*, i16*)*, i32 (i16*, i16*, i16*)** %quant_4x4, align 8, !dbg !4951
  %41 = load i32, i32* %i4x4, align 4, !dbg !4952
  %idxprom = sext i32 %41 to i64, !dbg !4953
  %arrayidx61 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom, !dbg !4953
  %arraydecay62 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx61, i64 0, i64 0, !dbg !4953
  %42 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4954
  %quant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %42, i32 0, i32 33, !dbg !4955
  %arrayidx63 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_mf, i64 0, i64 1, !dbg !4954
  %43 = load [16 x i16]*, [16 x i16]** %arrayidx63, align 8, !dbg !4954
  %44 = load i32, i32* %i_qp, align 4, !dbg !4956
  %idxprom64 = sext i32 %44 to i64, !dbg !4954
  %arrayidx65 = getelementptr inbounds [16 x i16], [16 x i16]* %43, i64 %idxprom64, !dbg !4954
  %arraydecay66 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx65, i64 0, i64 0, !dbg !4954
  %45 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4957
  %quant4_bias = getelementptr inbounds %struct.x264_t, %struct.x264_t* %45, i32 0, i32 35, !dbg !4958
  %arrayidx67 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_bias, i64 0, i64 1, !dbg !4957
  %46 = load [16 x i16]*, [16 x i16]** %arrayidx67, align 8, !dbg !4957
  %47 = load i32, i32* %i_qp, align 4, !dbg !4959
  %idxprom68 = sext i32 %47 to i64, !dbg !4957
  %arrayidx69 = getelementptr inbounds [16 x i16], [16 x i16]* %46, i64 %idxprom68, !dbg !4957
  %arraydecay70 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx69, i64 0, i64 0, !dbg !4957
  %call71 = call i32 %40(i16* %arraydecay62, i16* %arraydecay66, i16* %arraydecay70), !dbg !4947
  %tobool72 = icmp ne i32 %call71, 0, !dbg !4947
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !4960

if.then73:                                        ; preds = %for.body60
  br label %for.inc, !dbg !4961

if.end74:                                         ; preds = %for.body60
  %48 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4962
  %zigzagf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %48, i32 0, i32 72, !dbg !4963
  %scan_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf, i32 0, i32 1, !dbg !4964
  %49 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x4, align 8, !dbg !4964
  %arraydecay75 = getelementptr inbounds [16 x i16], [16 x i16]* %dctscan, i64 0, i64 0, !dbg !4965
  %50 = load i32, i32* %i4x4, align 4, !dbg !4966
  %idxprom76 = sext i32 %50 to i64, !dbg !4967
  %arrayidx77 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom76, !dbg !4967
  %arraydecay78 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx77, i64 0, i64 0, !dbg !4967
  call void %49(i16* %arraydecay75, i16* %arraydecay78), !dbg !4962
  %51 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4968
  %quantf79 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %51, i32 0, i32 73, !dbg !4969
  %decimate_score16 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf79, i32 0, i32 9, !dbg !4970
  %52 = load i32 (i16*)*, i32 (i16*)** %decimate_score16, align 8, !dbg !4970
  %arraydecay80 = getelementptr inbounds [16 x i16], [16 x i16]* %dctscan, i64 0, i64 0, !dbg !4971
  %call81 = call i32 %52(i16* %arraydecay80), !dbg !4968
  %53 = load i32, i32* %i_decimate_mb, align 4, !dbg !4972
  %add82 = add nsw i32 %53, %call81, !dbg !4972
  store i32 %add82, i32* %i_decimate_mb, align 4, !dbg !4972
  %54 = load i32, i32* %i_decimate_mb, align 4, !dbg !4973
  %cmp83 = icmp sge i32 %54, 6, !dbg !4975
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !4976

if.then85:                                        ; preds = %if.end74
  store i32 0, i32* %retval, align 4, !dbg !4977
  br label %return, !dbg !4977

if.end86:                                         ; preds = %if.end74
  br label %for.inc, !dbg !4978

for.inc:                                          ; preds = %if.end86, %if.then73
  %55 = load i32, i32* %i4x4, align 4, !dbg !4979
  %inc = add nsw i32 %55, 1, !dbg !4979
  store i32 %inc, i32* %i4x4, align 4, !dbg !4979
  br label %for.cond57, !dbg !4980, !llvm.loop !4981

for.end:                                          ; preds = %for.cond57
  br label %for.inc87, !dbg !4983

for.inc87:                                        ; preds = %for.end
  %56 = load i32, i32* %i8x8, align 4, !dbg !4984
  %inc88 = add nsw i32 %56, 1, !dbg !4984
  store i32 %inc88, i32* %i8x8, align 4, !dbg !4984
  br label %for.cond, !dbg !4985, !llvm.loop !4986

for.end89:                                        ; preds = %for.cond
  %57 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !4988
  %mb90 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %57, i32 0, i32 55, !dbg !4989
  %i_chroma_qp = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb90, i32 0, i32 69, !dbg !4990
  %58 = load i32, i32* %i_chroma_qp, align 4, !dbg !4990
  store i32 %58, i32* %i_qp, align 4, !dbg !4991
  %59 = load i32, i32* %i_qp, align 4, !dbg !4992
  %idxprom91 = sext i32 %59 to i64, !dbg !4993
  %arrayidx92 = getelementptr inbounds [52 x i32], [52 x i32]* @x264_lambda2_tab, i64 0, i64 %idxprom91, !dbg !4993
  %60 = load i32, i32* %arrayidx92, align 4, !dbg !4993
  %add93 = add nsw i32 %60, 32, !dbg !4994
  %shr94 = ashr i32 %add93, 6, !dbg !4995
  store i32 %shr94, i32* %thresh, align 4, !dbg !4996
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4997, metadata !DIExpression()), !dbg !4999
  store i32 0, i32* %ch, align 4, !dbg !4999
  br label %for.cond95, !dbg !5000

for.cond95:                                       ; preds = %for.inc281, %for.end89
  %61 = load i32, i32* %ch, align 4, !dbg !5001
  %cmp96 = icmp slt i32 %61, 2, !dbg !5003
  br i1 %cmp96, label %for.body98, label %for.end283, !dbg !5004

for.body98:                                       ; preds = %for.cond95
  call void @llvm.dbg.declare(metadata i8** %p_src, metadata !5005, metadata !DIExpression()), !dbg !5007
  %62 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5008
  %mb99 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %62, i32 0, i32 55, !dbg !5009
  %pic100 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb99, i32 0, i32 66, !dbg !5010
  %p_fenc101 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic100, i32 0, i32 16, !dbg !5011
  %63 = load i32, i32* %ch, align 4, !dbg !5012
  %add102 = add nsw i32 1, %63, !dbg !5013
  %idxprom103 = sext i32 %add102 to i64, !dbg !5008
  %arrayidx104 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc101, i64 0, i64 %idxprom103, !dbg !5008
  %64 = load i8*, i8** %arrayidx104, align 8, !dbg !5008
  store i8* %64, i8** %p_src, align 8, !dbg !5007
  call void @llvm.dbg.declare(metadata i8** %p_dst, metadata !5014, metadata !DIExpression()), !dbg !5015
  %65 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5016
  %mb105 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %65, i32 0, i32 55, !dbg !5017
  %pic106 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb105, i32 0, i32 66, !dbg !5018
  %p_fdec107 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic106, i32 0, i32 18, !dbg !5019
  %66 = load i32, i32* %ch, align 4, !dbg !5020
  %add108 = add nsw i32 1, %66, !dbg !5021
  %idxprom109 = sext i32 %add108 to i64, !dbg !5016
  %arrayidx110 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec107, i64 0, i64 %idxprom109, !dbg !5016
  %67 = load i8*, i8** %arrayidx110, align 8, !dbg !5016
  store i8* %67, i8** %p_dst, align 8, !dbg !5015
  %68 = load i32, i32* %b_bidir.addr, align 4, !dbg !5022
  %tobool111 = icmp ne i32 %68, 0, !dbg !5022
  br i1 %tobool111, label %if.end199, label %if.then112, !dbg !5024

if.then112:                                       ; preds = %for.body98
  %arraydecay113 = getelementptr inbounds [2 x i16], [2 x i16]* %mvp, i64 0, i64 0, !dbg !5025
  %69 = bitcast i16* %arraydecay113 to %union.x264_union32_t*, !dbg !5025
  %i = bitcast %union.x264_union32_t* %69 to i32*, !dbg !5025
  %70 = load i32, i32* %i, align 4, !dbg !5025
  %tobool114 = icmp ne i32 %70, 0, !dbg !5025
  br i1 %tobool114, label %if.then115, label %if.else, !dbg !5028

if.then115:                                       ; preds = %if.then112
  %71 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5029
  %mc116 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %71, i32 0, i32 70, !dbg !5031
  %mc_chroma = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc116, i32 0, i32 2, !dbg !5032
  %72 = load void (i8*, i32, i8*, i32, i32, i32, i32, i32)*, void (i8*, i32, i8*, i32, i32, i32, i32, i32)** %mc_chroma, align 8, !dbg !5032
  %73 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5033
  %mb117 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %73, i32 0, i32 55, !dbg !5034
  %pic118 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb117, i32 0, i32 66, !dbg !5035
  %p_fdec119 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic118, i32 0, i32 18, !dbg !5036
  %74 = load i32, i32* %ch, align 4, !dbg !5037
  %add120 = add nsw i32 1, %74, !dbg !5038
  %idxprom121 = sext i32 %add120 to i64, !dbg !5033
  %arrayidx122 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec119, i64 0, i64 %idxprom121, !dbg !5033
  %75 = load i8*, i8** %arrayidx122, align 8, !dbg !5033
  %76 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5039
  %mb123 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %76, i32 0, i32 55, !dbg !5040
  %pic124 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb123, i32 0, i32 66, !dbg !5041
  %p_fref125 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic124, i32 0, i32 20, !dbg !5042
  %arrayidx126 = getelementptr inbounds [2 x [32 x [6 x i8*]]], [2 x [32 x [6 x i8*]]]* %p_fref125, i64 0, i64 0, !dbg !5039
  %arrayidx127 = getelementptr inbounds [32 x [6 x i8*]], [32 x [6 x i8*]]* %arrayidx126, i64 0, i64 0, !dbg !5039
  %77 = load i32, i32* %ch, align 4, !dbg !5043
  %add128 = add nsw i32 4, %77, !dbg !5044
  %idxprom129 = sext i32 %add128 to i64, !dbg !5039
  %arrayidx130 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx127, i64 0, i64 %idxprom129, !dbg !5039
  %78 = load i8*, i8** %arrayidx130, align 8, !dbg !5039
  %79 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5045
  %mb131 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %79, i32 0, i32 55, !dbg !5046
  %pic132 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb131, i32 0, i32 66, !dbg !5047
  %i_stride133 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic132, i32 0, i32 23, !dbg !5048
  %80 = load i32, i32* %ch, align 4, !dbg !5049
  %add134 = add nsw i32 1, %80, !dbg !5050
  %idxprom135 = sext i32 %add134 to i64, !dbg !5045
  %arrayidx136 = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride133, i64 0, i64 %idxprom135, !dbg !5045
  %81 = load i32, i32* %arrayidx136, align 4, !dbg !5045
  %arrayidx137 = getelementptr inbounds [2 x i16], [2 x i16]* %mvp, i64 0, i64 0, !dbg !5051
  %82 = load i16, i16* %arrayidx137, align 4, !dbg !5051
  %conv138 = sext i16 %82 to i32, !dbg !5051
  %arrayidx139 = getelementptr inbounds [2 x i16], [2 x i16]* %mvp, i64 0, i64 1, !dbg !5052
  %83 = load i16, i16* %arrayidx139, align 2, !dbg !5052
  %conv140 = sext i16 %83 to i32, !dbg !5052
  call void %72(i8* %75, i32 32, i8* %78, i32 %81, i32 %conv138, i32 %conv140, i32 8, i32 8), !dbg !5029
  br label %if.end163, !dbg !5053

if.else:                                          ; preds = %if.then112
  %84 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5054
  %mc141 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %84, i32 0, i32 70, !dbg !5055
  %copy = getelementptr inbounds %struct.x264_mc_functions_t, %struct.x264_mc_functions_t* %mc141, i32 0, i32 4, !dbg !5056
  %arrayidx142 = getelementptr inbounds [7 x void (i8*, i32, i8*, i32, i32)*], [7 x void (i8*, i32, i8*, i32, i32)*]* %copy, i64 0, i64 3, !dbg !5054
  %85 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %arrayidx142, align 8, !dbg !5054
  %86 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5057
  %mb143 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %86, i32 0, i32 55, !dbg !5058
  %pic144 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb143, i32 0, i32 66, !dbg !5059
  %p_fdec145 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic144, i32 0, i32 18, !dbg !5060
  %87 = load i32, i32* %ch, align 4, !dbg !5061
  %add146 = add nsw i32 1, %87, !dbg !5062
  %idxprom147 = sext i32 %add146 to i64, !dbg !5057
  %arrayidx148 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec145, i64 0, i64 %idxprom147, !dbg !5057
  %88 = load i8*, i8** %arrayidx148, align 8, !dbg !5057
  %89 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5063
  %mb149 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %89, i32 0, i32 55, !dbg !5064
  %pic150 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb149, i32 0, i32 66, !dbg !5065
  %p_fref151 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic150, i32 0, i32 20, !dbg !5066
  %arrayidx152 = getelementptr inbounds [2 x [32 x [6 x i8*]]], [2 x [32 x [6 x i8*]]]* %p_fref151, i64 0, i64 0, !dbg !5063
  %arrayidx153 = getelementptr inbounds [32 x [6 x i8*]], [32 x [6 x i8*]]* %arrayidx152, i64 0, i64 0, !dbg !5063
  %90 = load i32, i32* %ch, align 4, !dbg !5067
  %add154 = add nsw i32 4, %90, !dbg !5068
  %idxprom155 = sext i32 %add154 to i64, !dbg !5063
  %arrayidx156 = getelementptr inbounds [6 x i8*], [6 x i8*]* %arrayidx153, i64 0, i64 %idxprom155, !dbg !5063
  %91 = load i8*, i8** %arrayidx156, align 8, !dbg !5063
  %92 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5069
  %mb157 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %92, i32 0, i32 55, !dbg !5070
  %pic158 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb157, i32 0, i32 66, !dbg !5071
  %i_stride159 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic158, i32 0, i32 23, !dbg !5072
  %93 = load i32, i32* %ch, align 4, !dbg !5073
  %add160 = add nsw i32 1, %93, !dbg !5074
  %idxprom161 = sext i32 %add160 to i64, !dbg !5069
  %arrayidx162 = getelementptr inbounds [3 x i32], [3 x i32]* %i_stride159, i64 0, i64 %idxprom161, !dbg !5069
  %94 = load i32, i32* %arrayidx162, align 4, !dbg !5069
  call void %85(i8* %88, i32 32, i8* %91, i32 %94, i32 8), !dbg !5054
  br label %if.end163

if.end163:                                        ; preds = %if.else, %if.then115
  %95 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5075
  %sh164 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %95, i32 0, i32 41, !dbg !5077
  %weight165 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh164, i32 0, i32 22, !dbg !5078
  %arrayidx166 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight165, i64 0, i64 0, !dbg !5075
  %96 = load i32, i32* %ch, align 4, !dbg !5079
  %add167 = add nsw i32 1, %96, !dbg !5080
  %idxprom168 = sext i32 %add167 to i64, !dbg !5075
  %arrayidx169 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx166, i64 0, i64 %idxprom168, !dbg !5075
  %weightfn = getelementptr inbounds %struct.x264_weight_t, %struct.x264_weight_t* %arrayidx169, i32 0, i32 5, !dbg !5081
  %97 = load void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)**, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*** %weightfn, align 16, !dbg !5081
  %tobool170 = icmp ne void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)** %97, null, !dbg !5075
  br i1 %tobool170, label %if.then171, label %if.end198, !dbg !5082

if.then171:                                       ; preds = %if.end163
  %98 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5083
  %sh172 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %98, i32 0, i32 41, !dbg !5084
  %weight173 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh172, i32 0, i32 22, !dbg !5085
  %arrayidx174 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight173, i64 0, i64 0, !dbg !5083
  %99 = load i32, i32* %ch, align 4, !dbg !5086
  %add175 = add nsw i32 1, %99, !dbg !5087
  %idxprom176 = sext i32 %add175 to i64, !dbg !5083
  %arrayidx177 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx174, i64 0, i64 %idxprom176, !dbg !5083
  %weightfn178 = getelementptr inbounds %struct.x264_weight_t, %struct.x264_weight_t* %arrayidx177, i32 0, i32 5, !dbg !5088
  %100 = load void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)**, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*** %weightfn178, align 16, !dbg !5088
  %arrayidx179 = getelementptr inbounds void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)** %100, i64 2, !dbg !5083
  %101 = load void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)*, void (i8*, i32, i8*, i32, %struct.x264_weight_t*, i32)** %arrayidx179, align 8, !dbg !5083
  %102 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5089
  %mb180 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %102, i32 0, i32 55, !dbg !5090
  %pic181 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb180, i32 0, i32 66, !dbg !5091
  %p_fdec182 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic181, i32 0, i32 18, !dbg !5092
  %103 = load i32, i32* %ch, align 4, !dbg !5093
  %add183 = add nsw i32 1, %103, !dbg !5094
  %idxprom184 = sext i32 %add183 to i64, !dbg !5089
  %arrayidx185 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec182, i64 0, i64 %idxprom184, !dbg !5089
  %104 = load i8*, i8** %arrayidx185, align 8, !dbg !5089
  %105 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5095
  %mb186 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %105, i32 0, i32 55, !dbg !5096
  %pic187 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb186, i32 0, i32 66, !dbg !5097
  %p_fdec188 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic187, i32 0, i32 18, !dbg !5098
  %106 = load i32, i32* %ch, align 4, !dbg !5099
  %add189 = add nsw i32 1, %106, !dbg !5100
  %idxprom190 = sext i32 %add189 to i64, !dbg !5095
  %arrayidx191 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec188, i64 0, i64 %idxprom190, !dbg !5095
  %107 = load i8*, i8** %arrayidx191, align 8, !dbg !5095
  %108 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5101
  %sh192 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %108, i32 0, i32 41, !dbg !5102
  %weight193 = getelementptr inbounds %struct.x264_slice_header_t, %struct.x264_slice_header_t* %sh192, i32 0, i32 22, !dbg !5103
  %arrayidx194 = getelementptr inbounds [32 x [3 x %struct.x264_weight_t]], [32 x [3 x %struct.x264_weight_t]]* %weight193, i64 0, i64 0, !dbg !5101
  %109 = load i32, i32* %ch, align 4, !dbg !5104
  %add195 = add nsw i32 1, %109, !dbg !5105
  %idxprom196 = sext i32 %add195 to i64, !dbg !5101
  %arrayidx197 = getelementptr inbounds [3 x %struct.x264_weight_t], [3 x %struct.x264_weight_t]* %arrayidx194, i64 0, i64 %idxprom196, !dbg !5101
  call void %101(i8* %104, i32 32, i8* %107, i32 32, %struct.x264_weight_t* %arrayidx197, i32 8), !dbg !5083
  br label %if.end198, !dbg !5083

if.end198:                                        ; preds = %if.then171, %if.end163
  br label %if.end199, !dbg !5106

if.end199:                                        ; preds = %if.end198, %for.body98
  %110 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5107
  %pixf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %110, i32 0, i32 69, !dbg !5108
  %ssd200 = getelementptr inbounds %struct.x264_pixel_function_t, %struct.x264_pixel_function_t* %pixf, i32 0, i32 1, !dbg !5109
  %arrayidx201 = getelementptr inbounds [7 x i32 (i8*, i32, i8*, i32)*], [7 x i32 (i8*, i32, i8*, i32)*]* %ssd200, i64 0, i64 3, !dbg !5107
  %111 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %arrayidx201, align 8, !dbg !5107
  %112 = load i8*, i8** %p_dst, align 8, !dbg !5110
  %113 = load i8*, i8** %p_src, align 8, !dbg !5111
  %call202 = call i32 %111(i8* %112, i32 32, i8* %113, i32 16), !dbg !5107
  store i32 %call202, i32* %ssd, align 4, !dbg !5112
  %114 = load i32, i32* %ssd, align 4, !dbg !5113
  %115 = load i32, i32* %thresh, align 4, !dbg !5115
  %cmp203 = icmp slt i32 %114, %115, !dbg !5116
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !5117

if.then205:                                       ; preds = %if.end199
  br label %for.inc281, !dbg !5118

if.end206:                                        ; preds = %if.end199
  %116 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5119
  %dctf207 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %116, i32 0, i32 71, !dbg !5120
  %sub8x8_dct_dc = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf207, i32 0, i32 3, !dbg !5121
  %117 = load void (i16*, i8*, i8*)*, void (i16*, i8*, i8*)** %sub8x8_dct_dc, align 8, !dbg !5121
  %arraydecay208 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !5122
  %118 = load i8*, i8** %p_src, align 8, !dbg !5123
  %119 = load i8*, i8** %p_dst, align 8, !dbg !5124
  call void %117(i16* %arraydecay208, i8* %118, i8* %119), !dbg !5119
  %120 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5125
  %quantf209 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %120, i32 0, i32 73, !dbg !5127
  %quant_2x2_dc = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf209, i32 0, i32 3, !dbg !5128
  %121 = load i32 (i16*, i32, i32)*, i32 (i16*, i32, i32)** %quant_2x2_dc, align 8, !dbg !5128
  %arraydecay210 = getelementptr inbounds [4 x i16], [4 x i16]* %dct2x2, i64 0, i64 0, !dbg !5129
  %122 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5130
  %quant4_mf211 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %122, i32 0, i32 33, !dbg !5131
  %arrayidx212 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_mf211, i64 0, i64 3, !dbg !5130
  %123 = load [16 x i16]*, [16 x i16]** %arrayidx212, align 8, !dbg !5130
  %124 = load i32, i32* %i_qp, align 4, !dbg !5132
  %idxprom213 = sext i32 %124 to i64, !dbg !5130
  %arrayidx214 = getelementptr inbounds [16 x i16], [16 x i16]* %123, i64 %idxprom213, !dbg !5130
  %arrayidx215 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx214, i64 0, i64 0, !dbg !5130
  %125 = load i16, i16* %arrayidx215, align 2, !dbg !5130
  %conv216 = zext i16 %125 to i32, !dbg !5130
  %shr217 = ashr i32 %conv216, 1, !dbg !5133
  %126 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5134
  %quant4_bias218 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %126, i32 0, i32 35, !dbg !5135
  %arrayidx219 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_bias218, i64 0, i64 3, !dbg !5134
  %127 = load [16 x i16]*, [16 x i16]** %arrayidx219, align 8, !dbg !5134
  %128 = load i32, i32* %i_qp, align 4, !dbg !5136
  %idxprom220 = sext i32 %128 to i64, !dbg !5134
  %arrayidx221 = getelementptr inbounds [16 x i16], [16 x i16]* %127, i64 %idxprom220, !dbg !5134
  %arrayidx222 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx221, i64 0, i64 0, !dbg !5134
  %129 = load i16, i16* %arrayidx222, align 2, !dbg !5134
  %conv223 = zext i16 %129 to i32, !dbg !5134
  %shl = shl i32 %conv223, 1, !dbg !5137
  %call224 = call i32 %121(i16* %arraydecay210, i32 %shr217, i32 %shl), !dbg !5125
  %tobool225 = icmp ne i32 %call224, 0, !dbg !5125
  br i1 %tobool225, label %if.then226, label %if.end227, !dbg !5138

if.then226:                                       ; preds = %if.end206
  store i32 0, i32* %retval, align 4, !dbg !5139
  br label %return, !dbg !5139

if.end227:                                        ; preds = %if.end206
  %130 = load i32, i32* %ssd, align 4, !dbg !5140
  %131 = load i32, i32* %thresh, align 4, !dbg !5142
  %mul228 = mul nsw i32 %131, 4, !dbg !5143
  %cmp229 = icmp slt i32 %130, %mul228, !dbg !5144
  br i1 %cmp229, label %if.then231, label %if.end232, !dbg !5145

if.then231:                                       ; preds = %if.end227
  br label %for.inc281, !dbg !5146

if.end232:                                        ; preds = %if.end227
  %132 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5147
  %dctf233 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %132, i32 0, i32 71, !dbg !5148
  %sub8x8_dct234 = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf233, i32 0, i32 2, !dbg !5149
  %133 = load void ([16 x i16]*, i8*, i8*)*, void ([16 x i16]*, i8*, i8*)** %sub8x8_dct234, align 16, !dbg !5149
  %arraydecay235 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !5150
  %134 = load i8*, i8** %p_src, align 8, !dbg !5151
  %135 = load i8*, i8** %p_dst, align 8, !dbg !5152
  call void %133([16 x i16]* %arraydecay235, i8* %134, i8* %135), !dbg !5147
  call void @llvm.dbg.declare(metadata i32* %i4x4236, metadata !5153, metadata !DIExpression()), !dbg !5155
  store i32 0, i32* %i4x4236, align 4, !dbg !5155
  call void @llvm.dbg.declare(metadata i32* %i_decimate_mb237, metadata !5156, metadata !DIExpression()), !dbg !5157
  store i32 0, i32* %i_decimate_mb237, align 4, !dbg !5157
  br label %for.cond238, !dbg !5158

for.cond238:                                      ; preds = %for.inc278, %if.end232
  %136 = load i32, i32* %i4x4236, align 4, !dbg !5159
  %cmp239 = icmp slt i32 %136, 4, !dbg !5161
  br i1 %cmp239, label %for.body241, label %for.end280, !dbg !5162

for.body241:                                      ; preds = %for.cond238
  %137 = load i32, i32* %i4x4236, align 4, !dbg !5163
  %idxprom242 = sext i32 %137 to i64, !dbg !5165
  %arrayidx243 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom242, !dbg !5165
  %arrayidx244 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx243, i64 0, i64 0, !dbg !5165
  store i16 0, i16* %arrayidx244, align 16, !dbg !5166
  %138 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5167
  %quantf245 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %138, i32 0, i32 73, !dbg !5169
  %quant_4x4246 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf245, i32 0, i32 1, !dbg !5170
  %139 = load i32 (i16*, i16*, i16*)*, i32 (i16*, i16*, i16*)** %quant_4x4246, align 8, !dbg !5170
  %140 = load i32, i32* %i4x4236, align 4, !dbg !5171
  %idxprom247 = sext i32 %140 to i64, !dbg !5172
  %arrayidx248 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom247, !dbg !5172
  %arraydecay249 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx248, i64 0, i64 0, !dbg !5172
  %141 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5173
  %quant4_mf250 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %141, i32 0, i32 33, !dbg !5174
  %arrayidx251 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_mf250, i64 0, i64 3, !dbg !5173
  %142 = load [16 x i16]*, [16 x i16]** %arrayidx251, align 8, !dbg !5173
  %143 = load i32, i32* %i_qp, align 4, !dbg !5175
  %idxprom252 = sext i32 %143 to i64, !dbg !5173
  %arrayidx253 = getelementptr inbounds [16 x i16], [16 x i16]* %142, i64 %idxprom252, !dbg !5173
  %arraydecay254 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx253, i64 0, i64 0, !dbg !5173
  %144 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5176
  %quant4_bias255 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %144, i32 0, i32 35, !dbg !5177
  %arrayidx256 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_bias255, i64 0, i64 3, !dbg !5176
  %145 = load [16 x i16]*, [16 x i16]** %arrayidx256, align 8, !dbg !5176
  %146 = load i32, i32* %i_qp, align 4, !dbg !5178
  %idxprom257 = sext i32 %146 to i64, !dbg !5176
  %arrayidx258 = getelementptr inbounds [16 x i16], [16 x i16]* %145, i64 %idxprom257, !dbg !5176
  %arraydecay259 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx258, i64 0, i64 0, !dbg !5176
  %call260 = call i32 %139(i16* %arraydecay249, i16* %arraydecay254, i16* %arraydecay259), !dbg !5167
  %tobool261 = icmp ne i32 %call260, 0, !dbg !5167
  br i1 %tobool261, label %if.end263, label %if.then262, !dbg !5179

if.then262:                                       ; preds = %for.body241
  br label %for.inc278, !dbg !5180

if.end263:                                        ; preds = %for.body241
  %147 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5181
  %zigzagf264 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %147, i32 0, i32 72, !dbg !5182
  %scan_4x4265 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf264, i32 0, i32 1, !dbg !5183
  %148 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x4265, align 8, !dbg !5183
  %arraydecay266 = getelementptr inbounds [16 x i16], [16 x i16]* %dctscan, i64 0, i64 0, !dbg !5184
  %149 = load i32, i32* %i4x4236, align 4, !dbg !5185
  %idxprom267 = sext i32 %149 to i64, !dbg !5186
  %arrayidx268 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom267, !dbg !5186
  %arraydecay269 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx268, i64 0, i64 0, !dbg !5186
  call void %148(i16* %arraydecay266, i16* %arraydecay269), !dbg !5181
  %150 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5187
  %quantf270 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %150, i32 0, i32 73, !dbg !5188
  %decimate_score15 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf270, i32 0, i32 8, !dbg !5189
  %151 = load i32 (i16*)*, i32 (i16*)** %decimate_score15, align 8, !dbg !5189
  %arraydecay271 = getelementptr inbounds [16 x i16], [16 x i16]* %dctscan, i64 0, i64 0, !dbg !5190
  %call272 = call i32 %151(i16* %arraydecay271), !dbg !5187
  %152 = load i32, i32* %i_decimate_mb237, align 4, !dbg !5191
  %add273 = add nsw i32 %152, %call272, !dbg !5191
  store i32 %add273, i32* %i_decimate_mb237, align 4, !dbg !5191
  %153 = load i32, i32* %i_decimate_mb237, align 4, !dbg !5192
  %cmp274 = icmp sge i32 %153, 7, !dbg !5194
  br i1 %cmp274, label %if.then276, label %if.end277, !dbg !5195

if.then276:                                       ; preds = %if.end263
  store i32 0, i32* %retval, align 4, !dbg !5196
  br label %return, !dbg !5196

if.end277:                                        ; preds = %if.end263
  br label %for.inc278, !dbg !5197

for.inc278:                                       ; preds = %if.end277, %if.then262
  %154 = load i32, i32* %i4x4236, align 4, !dbg !5198
  %inc279 = add nsw i32 %154, 1, !dbg !5198
  store i32 %inc279, i32* %i4x4236, align 4, !dbg !5198
  br label %for.cond238, !dbg !5199, !llvm.loop !5200

for.end280:                                       ; preds = %for.cond238
  br label %for.inc281, !dbg !5202

for.inc281:                                       ; preds = %for.end280, %if.then231, %if.then205
  %155 = load i32, i32* %ch, align 4, !dbg !5203
  %inc282 = add nsw i32 %155, 1, !dbg !5203
  store i32 %inc282, i32* %ch, align 4, !dbg !5203
  br label %for.cond95, !dbg !5204, !llvm.loop !5205

for.end283:                                       ; preds = %for.cond95
  %156 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5207
  %mb284 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %156, i32 0, i32 55, !dbg !5208
  %b_skip_mc = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb284, i32 0, i32 62, !dbg !5209
  store i32 1, i32* %b_skip_mc, align 4, !dbg !5210
  store i32 1, i32* %retval, align 4, !dbg !5211
  br label %return, !dbg !5211

return:                                           ; preds = %for.end283, %if.then276, %if.then226, %if.then85
  %157 = load i32, i32* %retval, align 4, !dbg !5212
  ret i32 %157, !dbg !5212
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @x264_clip3(i32 %v, i32 %i_min, i32 %i_max) #0 !dbg !5213 {
entry:
  %v.addr = alloca i32, align 4
  %i_min.addr = alloca i32, align 4
  %i_max.addr = alloca i32, align 4
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !5216, metadata !DIExpression()), !dbg !5217
  store i32 %i_min, i32* %i_min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_min.addr, metadata !5218, metadata !DIExpression()), !dbg !5219
  store i32 %i_max, i32* %i_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_max.addr, metadata !5220, metadata !DIExpression()), !dbg !5221
  %0 = load i32, i32* %v.addr, align 4, !dbg !5222
  %1 = load i32, i32* %i_min.addr, align 4, !dbg !5223
  %cmp = icmp slt i32 %0, %1, !dbg !5224
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5225

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %i_min.addr, align 4, !dbg !5226
  br label %cond.end4, !dbg !5225

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %v.addr, align 4, !dbg !5227
  %4 = load i32, i32* %i_max.addr, align 4, !dbg !5228
  %cmp1 = icmp sgt i32 %3, %4, !dbg !5229
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !5230

cond.true2:                                       ; preds = %cond.false
  %5 = load i32, i32* %i_max.addr, align 4, !dbg !5231
  br label %cond.end, !dbg !5230

cond.false3:                                      ; preds = %cond.false
  %6 = load i32, i32* %v.addr, align 4, !dbg !5232
  br label %cond.end, !dbg !5230

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi i32 [ %5, %cond.true2 ], [ %6, %cond.false3 ], !dbg !5230
  br label %cond.end4, !dbg !5225

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi i32 [ %2, %cond.true ], [ %cond, %cond.end ], !dbg !5225
  ret i32 %cond5, !dbg !5233
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_noise_reduction_update(%struct.x264_t* %h) #0 !dbg !5234 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %cat = alloca i32, align 4
  %size = alloca i32, align 4
  %weight = alloca i16*, align 8
  %i = alloca i32, align 4
  %i17 = alloca i32, align 4
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !5235, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.declare(metadata i32* %cat, metadata !5237, metadata !DIExpression()), !dbg !5239
  store i32 0, i32* %cat, align 4, !dbg !5239
  br label %for.cond, !dbg !5240

for.cond:                                         ; preds = %for.inc52, %entry
  %0 = load i32, i32* %cat, align 4, !dbg !5241
  %cmp = icmp slt i32 %0, 2, !dbg !5243
  br i1 %cmp, label %for.body, label %for.end54, !dbg !5244

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %size, metadata !5245, metadata !DIExpression()), !dbg !5247
  %1 = load i32, i32* %cat, align 4, !dbg !5248
  %tobool = icmp ne i32 %1, 0, !dbg !5248
  %2 = zext i1 %tobool to i64, !dbg !5248
  %cond = select i1 %tobool, i32 64, i32 16, !dbg !5248
  store i32 %cond, i32* %size, align 4, !dbg !5247
  call void @llvm.dbg.declare(metadata i16** %weight, metadata !5249, metadata !DIExpression()), !dbg !5251
  %3 = load i32, i32* %cat, align 4, !dbg !5252
  %tobool1 = icmp ne i32 %3, 0, !dbg !5252
  %4 = zext i1 %tobool1 to i64, !dbg !5252
  %cond2 = select i1 %tobool1, i16* getelementptr inbounds ([64 x i16], [64 x i16]* @x264_dct8_weight2_tab, i64 0, i64 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @x264_dct4_weight2_tab, i64 0, i64 0), !dbg !5252
  store i16* %cond2, i16** %weight, align 8, !dbg !5251
  %5 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5253
  %nr_count = getelementptr inbounds %struct.x264_t, %struct.x264_t* %5, i32 0, i32 60, !dbg !5255
  %6 = load i32, i32* %cat, align 4, !dbg !5256
  %idxprom = sext i32 %6 to i64, !dbg !5253
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %nr_count, i64 0, i64 %idxprom, !dbg !5253
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5253
  %8 = load i32, i32* %cat, align 4, !dbg !5257
  %tobool3 = icmp ne i32 %8, 0, !dbg !5257
  %9 = zext i1 %tobool3 to i64, !dbg !5257
  %cond4 = select i1 %tobool3, i32 65536, i32 262144, !dbg !5257
  %cmp5 = icmp ugt i32 %7, %cond4, !dbg !5258
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5259

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5260, metadata !DIExpression()), !dbg !5263
  store i32 0, i32* %i, align 4, !dbg !5263
  br label %for.cond6, !dbg !5264

for.cond6:                                        ; preds = %for.inc, %if.then
  %10 = load i32, i32* %i, align 4, !dbg !5265
  %11 = load i32, i32* %size, align 4, !dbg !5267
  %cmp7 = icmp slt i32 %10, %11, !dbg !5268
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !5269

for.body8:                                        ; preds = %for.cond6
  %12 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5270
  %nr_residual_sum = getelementptr inbounds %struct.x264_t, %struct.x264_t* %12, i32 0, i32 58, !dbg !5271
  %13 = load i32, i32* %cat, align 4, !dbg !5272
  %idxprom9 = sext i32 %13 to i64, !dbg !5270
  %arrayidx10 = getelementptr inbounds [2 x [64 x i32]], [2 x [64 x i32]]* %nr_residual_sum, i64 0, i64 %idxprom9, !dbg !5270
  %14 = load i32, i32* %i, align 4, !dbg !5273
  %idxprom11 = sext i32 %14 to i64, !dbg !5270
  %arrayidx12 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx10, i64 0, i64 %idxprom11, !dbg !5270
  %15 = load i32, i32* %arrayidx12, align 4, !dbg !5274
  %shr = lshr i32 %15, 1, !dbg !5274
  store i32 %shr, i32* %arrayidx12, align 4, !dbg !5274
  br label %for.inc, !dbg !5270

for.inc:                                          ; preds = %for.body8
  %16 = load i32, i32* %i, align 4, !dbg !5275
  %inc = add nsw i32 %16, 1, !dbg !5275
  store i32 %inc, i32* %i, align 4, !dbg !5275
  br label %for.cond6, !dbg !5276, !llvm.loop !5277

for.end:                                          ; preds = %for.cond6
  %17 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5279
  %nr_count13 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %17, i32 0, i32 60, !dbg !5280
  %18 = load i32, i32* %cat, align 4, !dbg !5281
  %idxprom14 = sext i32 %18 to i64, !dbg !5279
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %nr_count13, i64 0, i64 %idxprom14, !dbg !5279
  %19 = load i32, i32* %arrayidx15, align 4, !dbg !5282
  %shr16 = lshr i32 %19, 1, !dbg !5282
  store i32 %shr16, i32* %arrayidx15, align 4, !dbg !5282
  br label %if.end, !dbg !5283

if.end:                                           ; preds = %for.end, %for.body
  call void @llvm.dbg.declare(metadata i32* %i17, metadata !5284, metadata !DIExpression()), !dbg !5286
  store i32 0, i32* %i17, align 4, !dbg !5286
  br label %for.cond18, !dbg !5287

for.cond18:                                       ; preds = %for.inc49, %if.end
  %20 = load i32, i32* %i17, align 4, !dbg !5288
  %21 = load i32, i32* %size, align 4, !dbg !5290
  %cmp19 = icmp slt i32 %20, %21, !dbg !5291
  br i1 %cmp19, label %for.body20, label %for.end51, !dbg !5292

for.body20:                                       ; preds = %for.cond18
  %22 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5293
  %param = getelementptr inbounds %struct.x264_t, %struct.x264_t* %22, i32 0, i32 0, !dbg !5294
  %analyse = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %param, i32 0, i32 41, !dbg !5295
  %i_noise_reduction = getelementptr inbounds %struct.anon.0, %struct.anon.0* %analyse, i32 0, i32 17, !dbg !5296
  %23 = load i32, i32* %i_noise_reduction, align 4, !dbg !5296
  %conv = sext i32 %23 to i64, !dbg !5297
  %24 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5298
  %nr_count21 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %24, i32 0, i32 60, !dbg !5299
  %25 = load i32, i32* %cat, align 4, !dbg !5300
  %idxprom22 = sext i32 %25 to i64, !dbg !5298
  %arrayidx23 = getelementptr inbounds [2 x i32], [2 x i32]* %nr_count21, i64 0, i64 %idxprom22, !dbg !5298
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !5298
  %conv24 = zext i32 %26 to i64, !dbg !5298
  %mul = mul i64 %conv, %conv24, !dbg !5301
  %27 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5302
  %nr_residual_sum25 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %27, i32 0, i32 58, !dbg !5303
  %28 = load i32, i32* %cat, align 4, !dbg !5304
  %idxprom26 = sext i32 %28 to i64, !dbg !5302
  %arrayidx27 = getelementptr inbounds [2 x [64 x i32]], [2 x [64 x i32]]* %nr_residual_sum25, i64 0, i64 %idxprom26, !dbg !5302
  %29 = load i32, i32* %i17, align 4, !dbg !5305
  %idxprom28 = sext i32 %29 to i64, !dbg !5302
  %arrayidx29 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx27, i64 0, i64 %idxprom28, !dbg !5302
  %30 = load i32, i32* %arrayidx29, align 4, !dbg !5302
  %div = udiv i32 %30, 2, !dbg !5306
  %conv30 = zext i32 %div to i64, !dbg !5302
  %add = add i64 %mul, %conv30, !dbg !5307
  %31 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5308
  %nr_residual_sum31 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %31, i32 0, i32 58, !dbg !5309
  %32 = load i32, i32* %cat, align 4, !dbg !5310
  %idxprom32 = sext i32 %32 to i64, !dbg !5308
  %arrayidx33 = getelementptr inbounds [2 x [64 x i32]], [2 x [64 x i32]]* %nr_residual_sum31, i64 0, i64 %idxprom32, !dbg !5308
  %33 = load i32, i32* %i17, align 4, !dbg !5311
  %idxprom34 = sext i32 %33 to i64, !dbg !5308
  %arrayidx35 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx33, i64 0, i64 %idxprom34, !dbg !5308
  %34 = load i32, i32* %arrayidx35, align 4, !dbg !5308
  %conv36 = zext i32 %34 to i64, !dbg !5312
  %35 = load i16*, i16** %weight, align 8, !dbg !5313
  %36 = load i32, i32* %i17, align 4, !dbg !5314
  %idxprom37 = sext i32 %36 to i64, !dbg !5313
  %arrayidx38 = getelementptr inbounds i16, i16* %35, i64 %idxprom37, !dbg !5313
  %37 = load i16, i16* %arrayidx38, align 2, !dbg !5313
  %conv39 = zext i16 %37 to i64, !dbg !5313
  %mul40 = mul i64 %conv36, %conv39, !dbg !5315
  %div41 = udiv i64 %mul40, 256, !dbg !5316
  %add42 = add i64 %div41, 1, !dbg !5317
  %div43 = udiv i64 %add, %add42, !dbg !5318
  %conv44 = trunc i64 %div43 to i16, !dbg !5319
  %38 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5320
  %nr_offset = getelementptr inbounds %struct.x264_t, %struct.x264_t* %38, i32 0, i32 59, !dbg !5321
  %39 = load i32, i32* %cat, align 4, !dbg !5322
  %idxprom45 = sext i32 %39 to i64, !dbg !5320
  %arrayidx46 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* %nr_offset, i64 0, i64 %idxprom45, !dbg !5320
  %40 = load i32, i32* %i17, align 4, !dbg !5323
  %idxprom47 = sext i32 %40 to i64, !dbg !5320
  %arrayidx48 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx46, i64 0, i64 %idxprom47, !dbg !5320
  store i16 %conv44, i16* %arrayidx48, align 2, !dbg !5324
  br label %for.inc49, !dbg !5320

for.inc49:                                        ; preds = %for.body20
  %41 = load i32, i32* %i17, align 4, !dbg !5325
  %inc50 = add nsw i32 %41, 1, !dbg !5325
  store i32 %inc50, i32* %i17, align 4, !dbg !5325
  br label %for.cond18, !dbg !5326, !llvm.loop !5327

for.end51:                                        ; preds = %for.cond18
  br label %for.inc52, !dbg !5329

for.inc52:                                        ; preds = %for.end51
  %42 = load i32, i32* %cat, align 4, !dbg !5330
  %inc53 = add nsw i32 %42, 1, !dbg !5330
  store i32 %inc53, i32* %cat, align 4, !dbg !5330
  br label %for.cond, !dbg !5331, !llvm.loop !5332

for.end54:                                        ; preds = %for.cond
  ret void, !dbg !5334
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_macroblock_encode_p8x8(%struct.x264_t* %h, i32 %i8) #0 !dbg !5335 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %i8.addr = alloca i32, align 4
  %i_qp = alloca i32, align 4
  %p_fenc = alloca i8*, align 8
  %p_fdec = alloca i8*, align 8
  %b_decimate = alloca i32, align 4
  %nnz8x8 = alloca i32, align 4
  %nz = alloca i32, align 4
  %i4 = alloca i32, align 4
  %ch = alloca i32, align 4
  %dc = alloca i16, align 2
  %dct8x8 = alloca [64 x i16], align 16
  %i_decimate_8x8 = alloca i32, align 4
  %dct4x4 = alloca [4 x [16 x i16]], align 16
  %i4248 = alloca i32, align 4
  %ch338 = alloca i32, align 4
  %dct4x4343 = alloca [16 x i16], align 16
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !5336, metadata !DIExpression()), !dbg !5337
  store i32 %i8, i32* %i8.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i8.addr, metadata !5338, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.declare(metadata i32* %i_qp, metadata !5340, metadata !DIExpression()), !dbg !5341
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5342
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 55, !dbg !5343
  %i_qp1 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 68, !dbg !5344
  %1 = load i32, i32* %i_qp1, align 16, !dbg !5344
  store i32 %1, i32* %i_qp, align 4, !dbg !5341
  call void @llvm.dbg.declare(metadata i8** %p_fenc, metadata !5345, metadata !DIExpression()), !dbg !5346
  %2 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5347
  %mb2 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %2, i32 0, i32 55, !dbg !5348
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb2, i32 0, i32 66, !dbg !5349
  %p_fenc3 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 16, !dbg !5350
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc3, i64 0, i64 0, !dbg !5347
  %3 = load i8*, i8** %arrayidx, align 16, !dbg !5347
  %4 = load i32, i32* %i8.addr, align 4, !dbg !5351
  %and = and i32 %4, 1, !dbg !5352
  %mul = mul nsw i32 %and, 8, !dbg !5353
  %idx.ext = sext i32 %mul to i64, !dbg !5354
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !5354
  %5 = load i32, i32* %i8.addr, align 4, !dbg !5355
  %shr = ashr i32 %5, 1, !dbg !5356
  %mul4 = mul nsw i32 %shr, 8, !dbg !5357
  %mul5 = mul nsw i32 %mul4, 16, !dbg !5358
  %idx.ext6 = sext i32 %mul5 to i64, !dbg !5359
  %add.ptr7 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext6, !dbg !5359
  store i8* %add.ptr7, i8** %p_fenc, align 8, !dbg !5346
  call void @llvm.dbg.declare(metadata i8** %p_fdec, metadata !5360, metadata !DIExpression()), !dbg !5361
  %6 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5362
  %mb8 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %6, i32 0, i32 55, !dbg !5363
  %pic9 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb8, i32 0, i32 66, !dbg !5364
  %p_fdec10 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic9, i32 0, i32 18, !dbg !5365
  %arrayidx11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec10, i64 0, i64 0, !dbg !5362
  %7 = load i8*, i8** %arrayidx11, align 16, !dbg !5362
  %8 = load i32, i32* %i8.addr, align 4, !dbg !5366
  %and12 = and i32 %8, 1, !dbg !5367
  %mul13 = mul nsw i32 %and12, 8, !dbg !5368
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !5369
  %add.ptr15 = getelementptr inbounds i8, i8* %7, i64 %idx.ext14, !dbg !5369
  %9 = load i32, i32* %i8.addr, align 4, !dbg !5370
  %shr16 = ashr i32 %9, 1, !dbg !5371
  %mul17 = mul nsw i32 %shr16, 8, !dbg !5372
  %mul18 = mul nsw i32 %mul17, 32, !dbg !5373
  %idx.ext19 = sext i32 %mul18 to i64, !dbg !5374
  %add.ptr20 = getelementptr inbounds i8, i8* %add.ptr15, i64 %idx.ext19, !dbg !5374
  store i8* %add.ptr20, i8** %p_fdec, align 8, !dbg !5361
  call void @llvm.dbg.declare(metadata i32* %b_decimate, metadata !5375, metadata !DIExpression()), !dbg !5376
  %10 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5377
  %mb21 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %10, i32 0, i32 55, !dbg !5378
  %b_dct_decimate = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb21, i32 0, i32 14, !dbg !5379
  %11 = load i32, i32* %b_dct_decimate, align 8, !dbg !5379
  store i32 %11, i32* %b_decimate, align 4, !dbg !5376
  call void @llvm.dbg.declare(metadata i32* %nnz8x8, metadata !5380, metadata !DIExpression()), !dbg !5381
  store i32 0, i32* %nnz8x8, align 4, !dbg !5381
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !5382, metadata !DIExpression()), !dbg !5383
  %12 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5384
  %mb22 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %12, i32 0, i32 55, !dbg !5386
  %b_skip_mc = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb22, i32 0, i32 62, !dbg !5387
  %13 = load i32, i32* %b_skip_mc, align 4, !dbg !5387
  %tobool = icmp ne i32 %13, 0, !dbg !5384
  br i1 %tobool, label %if.end, label %if.then, !dbg !5388

if.then:                                          ; preds = %entry
  %14 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5389
  %15 = load i32, i32* %i8.addr, align 4, !dbg !5390
  call void @x264_mb_mc_8x8(%struct.x264_t* %14, i32 %15), !dbg !5391
  br label %if.end, !dbg !5391

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5392
  %mb23 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %16, i32 0, i32 55, !dbg !5394
  %b_lossless = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb23, i32 0, i32 73, !dbg !5395
  %17 = load i32, i32* %b_lossless, align 4, !dbg !5395
  %tobool24 = icmp ne i32 %17, 0, !dbg !5392
  br i1 %tobool24, label %if.then25, label %if.else144, !dbg !5396

if.then25:                                        ; preds = %if.end
  %18 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5397
  %mb26 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %18, i32 0, i32 55, !dbg !5400
  %b_transform_8x8 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb26, i32 0, i32 56, !dbg !5401
  %19 = load i32, i32* %b_transform_8x8, align 4, !dbg !5401
  %tobool27 = icmp ne i32 %19, 0, !dbg !5397
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !5402

if.then28:                                        ; preds = %if.then25
  %20 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5403
  %zigzagf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %20, i32 0, i32 72, !dbg !5405
  %sub_8x8 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf, i32 0, i32 2, !dbg !5406
  %21 = load i32 (i16*, i8*, i8*)*, i32 (i16*, i8*, i8*)** %sub_8x8, align 8, !dbg !5406
  %22 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5407
  %dct = getelementptr inbounds %struct.x264_t, %struct.x264_t* %22, i32 0, i32 54, !dbg !5408
  %luma8x8 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct, i32 0, i32 2, !dbg !5409
  %23 = load i32, i32* %i8.addr, align 4, !dbg !5410
  %idxprom = sext i32 %23 to i64, !dbg !5407
  %arrayidx29 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %luma8x8, i64 0, i64 %idxprom, !dbg !5407
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx29, i64 0, i64 0, !dbg !5407
  %24 = load i8*, i8** %p_fenc, align 8, !dbg !5411
  %25 = load i8*, i8** %p_fdec, align 8, !dbg !5412
  %call = call i32 %21(i16* %arraydecay, i8* %24, i8* %25), !dbg !5403
  store i32 %call, i32* %nnz8x8, align 4, !dbg !5413
  %26 = load i32, i32* %nnz8x8, align 4, !dbg !5414
  %mul30 = mul nsw i32 %26, 257, !dbg !5414
  %conv = trunc i32 %mul30 to i16, !dbg !5414
  %27 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5414
  %mb31 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %27, i32 0, i32 55, !dbg !5414
  %cache = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb31, i32 0, i32 67, !dbg !5414
  %non_zero_count = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache, i32 0, i32 2, !dbg !5414
  %28 = load i32, i32* %i8.addr, align 4, !dbg !5414
  %mul32 = mul nsw i32 %28, 4, !dbg !5414
  %add = add nsw i32 %mul32, 0, !dbg !5414
  %idxprom33 = sext i32 %add to i64, !dbg !5414
  %arrayidx34 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom33, !dbg !5414
  %29 = load i32, i32* %arrayidx34, align 4, !dbg !5414
  %idxprom35 = sext i32 %29 to i64, !dbg !5414
  %arrayidx36 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count, i64 0, i64 %idxprom35, !dbg !5414
  %30 = bitcast i8* %arrayidx36 to %union.x264_union16_t*, !dbg !5414
  %i = bitcast %union.x264_union16_t* %30 to i16*, !dbg !5414
  store i16 %conv, i16* %i, align 1, !dbg !5414
  %31 = load i32, i32* %nnz8x8, align 4, !dbg !5414
  %mul37 = mul nsw i32 %31, 257, !dbg !5414
  %conv38 = trunc i32 %mul37 to i16, !dbg !5414
  %32 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5414
  %mb39 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %32, i32 0, i32 55, !dbg !5414
  %cache40 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb39, i32 0, i32 67, !dbg !5414
  %non_zero_count41 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache40, i32 0, i32 2, !dbg !5414
  %33 = load i32, i32* %i8.addr, align 4, !dbg !5414
  %mul42 = mul nsw i32 %33, 4, !dbg !5414
  %add43 = add nsw i32 %mul42, 2, !dbg !5414
  %idxprom44 = sext i32 %add43 to i64, !dbg !5414
  %arrayidx45 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom44, !dbg !5414
  %34 = load i32, i32* %arrayidx45, align 4, !dbg !5414
  %idxprom46 = sext i32 %34 to i64, !dbg !5414
  %arrayidx47 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count41, i64 0, i64 %idxprom46, !dbg !5414
  %35 = bitcast i8* %arrayidx47 to %union.x264_union16_t*, !dbg !5414
  %i48 = bitcast %union.x264_union16_t* %35 to i16*, !dbg !5414
  store i16 %conv38, i16* %i48, align 1, !dbg !5414
  br label %if.end85, !dbg !5416

if.else:                                          ; preds = %if.then25
  call void @llvm.dbg.declare(metadata i32* %i4, metadata !5417, metadata !DIExpression()), !dbg !5420
  %36 = load i32, i32* %i8.addr, align 4, !dbg !5421
  %mul49 = mul nsw i32 %36, 4, !dbg !5422
  store i32 %mul49, i32* %i4, align 4, !dbg !5420
  br label %for.cond, !dbg !5423

for.cond:                                         ; preds = %for.inc, %if.else
  %37 = load i32, i32* %i4, align 4, !dbg !5424
  %38 = load i32, i32* %i8.addr, align 4, !dbg !5426
  %mul50 = mul nsw i32 %38, 4, !dbg !5427
  %add51 = add nsw i32 %mul50, 4, !dbg !5428
  %cmp = icmp slt i32 %37, %add51, !dbg !5429
  br i1 %cmp, label %for.body, label %for.end, !dbg !5430

for.body:                                         ; preds = %for.cond
  %39 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5431
  %zigzagf53 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %39, i32 0, i32 72, !dbg !5433
  %sub_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf53, i32 0, i32 3, !dbg !5434
  %40 = load i32 (i16*, i8*, i8*)*, i32 (i16*, i8*, i8*)** %sub_4x4, align 8, !dbg !5434
  %41 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5435
  %dct54 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %41, i32 0, i32 54, !dbg !5436
  %luma4x4 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct54, i32 0, i32 3, !dbg !5437
  %42 = load i32, i32* %i4, align 4, !dbg !5438
  %idxprom55 = sext i32 %42 to i64, !dbg !5435
  %arrayidx56 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4, i64 0, i64 %idxprom55, !dbg !5435
  %arraydecay57 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx56, i64 0, i64 0, !dbg !5435
  %43 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5439
  %mb58 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %43, i32 0, i32 55, !dbg !5440
  %pic59 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb58, i32 0, i32 66, !dbg !5441
  %p_fenc60 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic59, i32 0, i32 16, !dbg !5442
  %arrayidx61 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc60, i64 0, i64 0, !dbg !5439
  %44 = load i8*, i8** %arrayidx61, align 16, !dbg !5439
  %45 = load i32, i32* %i4, align 4, !dbg !5443
  %idxprom62 = sext i32 %45 to i64, !dbg !5444
  %arrayidx63 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_xy_fenc, i64 0, i64 %idxprom62, !dbg !5444
  %46 = load i8, i8* %arrayidx63, align 1, !dbg !5444
  %conv64 = zext i8 %46 to i32, !dbg !5444
  %idx.ext65 = sext i32 %conv64 to i64, !dbg !5445
  %add.ptr66 = getelementptr inbounds i8, i8* %44, i64 %idx.ext65, !dbg !5445
  %47 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5446
  %mb67 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %47, i32 0, i32 55, !dbg !5447
  %pic68 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb67, i32 0, i32 66, !dbg !5448
  %p_fdec69 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic68, i32 0, i32 18, !dbg !5449
  %arrayidx70 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec69, i64 0, i64 0, !dbg !5446
  %48 = load i8*, i8** %arrayidx70, align 16, !dbg !5446
  %49 = load i32, i32* %i4, align 4, !dbg !5450
  %idxprom71 = sext i32 %49 to i64, !dbg !5451
  %arrayidx72 = getelementptr inbounds [16 x i16], [16 x i16]* @block_idx_xy_fdec, i64 0, i64 %idxprom71, !dbg !5451
  %50 = load i16, i16* %arrayidx72, align 2, !dbg !5451
  %conv73 = zext i16 %50 to i32, !dbg !5451
  %idx.ext74 = sext i32 %conv73 to i64, !dbg !5452
  %add.ptr75 = getelementptr inbounds i8, i8* %48, i64 %idx.ext74, !dbg !5452
  %call76 = call i32 %40(i16* %arraydecay57, i8* %add.ptr66, i8* %add.ptr75), !dbg !5431
  store i32 %call76, i32* %nz, align 4, !dbg !5453
  %51 = load i32, i32* %nz, align 4, !dbg !5454
  %conv77 = trunc i32 %51 to i8, !dbg !5454
  %52 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5455
  %mb78 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %52, i32 0, i32 55, !dbg !5456
  %cache79 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb78, i32 0, i32 67, !dbg !5457
  %non_zero_count80 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache79, i32 0, i32 2, !dbg !5458
  %53 = load i32, i32* %i4, align 4, !dbg !5459
  %idxprom81 = sext i32 %53 to i64, !dbg !5460
  %arrayidx82 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom81, !dbg !5460
  %54 = load i32, i32* %arrayidx82, align 4, !dbg !5460
  %idxprom83 = sext i32 %54 to i64, !dbg !5455
  %arrayidx84 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count80, i64 0, i64 %idxprom83, !dbg !5455
  store i8 %conv77, i8* %arrayidx84, align 1, !dbg !5461
  %55 = load i32, i32* %nz, align 4, !dbg !5462
  %56 = load i32, i32* %nnz8x8, align 4, !dbg !5463
  %or = or i32 %56, %55, !dbg !5463
  store i32 %or, i32* %nnz8x8, align 4, !dbg !5463
  br label %for.inc, !dbg !5464

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %i4, align 4, !dbg !5465
  %inc = add nsw i32 %57, 1, !dbg !5465
  store i32 %inc, i32* %i4, align 4, !dbg !5465
  br label %for.cond, !dbg !5466, !llvm.loop !5467

for.end:                                          ; preds = %for.cond
  br label %if.end85

if.end85:                                         ; preds = %for.end, %if.then28
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5469, metadata !DIExpression()), !dbg !5471
  store i32 0, i32* %ch, align 4, !dbg !5471
  br label %for.cond86, !dbg !5472

for.cond86:                                       ; preds = %for.inc141, %if.end85
  %58 = load i32, i32* %ch, align 4, !dbg !5473
  %cmp87 = icmp slt i32 %58, 2, !dbg !5475
  br i1 %cmp87, label %for.body89, label %for.end143, !dbg !5476

for.body89:                                       ; preds = %for.cond86
  call void @llvm.dbg.declare(metadata i16* %dc, metadata !5477, metadata !DIExpression()), !dbg !5479
  %59 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5480
  %mb90 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %59, i32 0, i32 55, !dbg !5481
  %pic91 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb90, i32 0, i32 66, !dbg !5482
  %p_fenc92 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic91, i32 0, i32 16, !dbg !5483
  %60 = load i32, i32* %ch, align 4, !dbg !5484
  %add93 = add nsw i32 1, %60, !dbg !5485
  %idxprom94 = sext i32 %add93 to i64, !dbg !5480
  %arrayidx95 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc92, i64 0, i64 %idxprom94, !dbg !5480
  %61 = load i8*, i8** %arrayidx95, align 8, !dbg !5480
  %62 = load i32, i32* %i8.addr, align 4, !dbg !5486
  %and96 = and i32 %62, 1, !dbg !5487
  %mul97 = mul nsw i32 %and96, 4, !dbg !5488
  %idx.ext98 = sext i32 %mul97 to i64, !dbg !5489
  %add.ptr99 = getelementptr inbounds i8, i8* %61, i64 %idx.ext98, !dbg !5489
  %63 = load i32, i32* %i8.addr, align 4, !dbg !5490
  %shr100 = ashr i32 %63, 1, !dbg !5491
  %mul101 = mul nsw i32 %shr100, 4, !dbg !5492
  %mul102 = mul nsw i32 %mul101, 16, !dbg !5493
  %idx.ext103 = sext i32 %mul102 to i64, !dbg !5494
  %add.ptr104 = getelementptr inbounds i8, i8* %add.ptr99, i64 %idx.ext103, !dbg !5494
  store i8* %add.ptr104, i8** %p_fenc, align 8, !dbg !5495
  %64 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5496
  %mb105 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %64, i32 0, i32 55, !dbg !5497
  %pic106 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb105, i32 0, i32 66, !dbg !5498
  %p_fdec107 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic106, i32 0, i32 18, !dbg !5499
  %65 = load i32, i32* %ch, align 4, !dbg !5500
  %add108 = add nsw i32 1, %65, !dbg !5501
  %idxprom109 = sext i32 %add108 to i64, !dbg !5496
  %arrayidx110 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec107, i64 0, i64 %idxprom109, !dbg !5496
  %66 = load i8*, i8** %arrayidx110, align 8, !dbg !5496
  %67 = load i32, i32* %i8.addr, align 4, !dbg !5502
  %and111 = and i32 %67, 1, !dbg !5503
  %mul112 = mul nsw i32 %and111, 4, !dbg !5504
  %idx.ext113 = sext i32 %mul112 to i64, !dbg !5505
  %add.ptr114 = getelementptr inbounds i8, i8* %66, i64 %idx.ext113, !dbg !5505
  %68 = load i32, i32* %i8.addr, align 4, !dbg !5506
  %shr115 = ashr i32 %68, 1, !dbg !5507
  %mul116 = mul nsw i32 %shr115, 4, !dbg !5508
  %mul117 = mul nsw i32 %mul116, 32, !dbg !5509
  %idx.ext118 = sext i32 %mul117 to i64, !dbg !5510
  %add.ptr119 = getelementptr inbounds i8, i8* %add.ptr114, i64 %idx.ext118, !dbg !5510
  store i8* %add.ptr119, i8** %p_fdec, align 8, !dbg !5511
  %69 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5512
  %zigzagf120 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %69, i32 0, i32 72, !dbg !5513
  %sub_4x4ac = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf120, i32 0, i32 4, !dbg !5514
  %70 = load i32 (i16*, i8*, i8*, i16*)*, i32 (i16*, i8*, i8*, i16*)** %sub_4x4ac, align 8, !dbg !5514
  %71 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5515
  %dct121 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %71, i32 0, i32 54, !dbg !5516
  %luma4x4122 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct121, i32 0, i32 3, !dbg !5517
  %72 = load i32, i32* %i8.addr, align 4, !dbg !5518
  %add123 = add nsw i32 16, %72, !dbg !5519
  %73 = load i32, i32* %ch, align 4, !dbg !5520
  %mul124 = mul nsw i32 %73, 4, !dbg !5521
  %add125 = add nsw i32 %add123, %mul124, !dbg !5522
  %idxprom126 = sext i32 %add125 to i64, !dbg !5515
  %arrayidx127 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4122, i64 0, i64 %idxprom126, !dbg !5515
  %arraydecay128 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx127, i64 0, i64 0, !dbg !5515
  %74 = load i8*, i8** %p_fenc, align 8, !dbg !5523
  %75 = load i8*, i8** %p_fdec, align 8, !dbg !5524
  %call129 = call i32 %70(i16* %arraydecay128, i8* %74, i8* %75, i16* %dc), !dbg !5512
  store i32 %call129, i32* %nz, align 4, !dbg !5525
  %76 = load i32, i32* %nz, align 4, !dbg !5526
  %conv130 = trunc i32 %76 to i8, !dbg !5526
  %77 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5527
  %mb131 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %77, i32 0, i32 55, !dbg !5528
  %cache132 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb131, i32 0, i32 67, !dbg !5529
  %non_zero_count133 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache132, i32 0, i32 2, !dbg !5530
  %78 = load i32, i32* %i8.addr, align 4, !dbg !5531
  %add134 = add nsw i32 16, %78, !dbg !5532
  %79 = load i32, i32* %ch, align 4, !dbg !5533
  %mul135 = mul nsw i32 %79, 4, !dbg !5534
  %add136 = add nsw i32 %add134, %mul135, !dbg !5535
  %idxprom137 = sext i32 %add136 to i64, !dbg !5536
  %arrayidx138 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom137, !dbg !5536
  %80 = load i32, i32* %arrayidx138, align 4, !dbg !5536
  %idxprom139 = sext i32 %80 to i64, !dbg !5527
  %arrayidx140 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count133, i64 0, i64 %idxprom139, !dbg !5527
  store i8 %conv130, i8* %arrayidx140, align 1, !dbg !5537
  br label %for.inc141, !dbg !5538

for.inc141:                                       ; preds = %for.body89
  %81 = load i32, i32* %ch, align 4, !dbg !5539
  %inc142 = add nsw i32 %81, 1, !dbg !5539
  store i32 %inc142, i32* %ch, align 4, !dbg !5539
  br label %for.cond86, !dbg !5540, !llvm.loop !5541

for.end143:                                       ; preds = %for.cond86
  br label %if.end431, !dbg !5543

if.else144:                                       ; preds = %if.end
  %82 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5544
  %mb145 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %82, i32 0, i32 55, !dbg !5547
  %b_transform_8x8146 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb145, i32 0, i32 56, !dbg !5548
  %83 = load i32, i32* %b_transform_8x8146, align 4, !dbg !5548
  %tobool147 = icmp ne i32 %83, 0, !dbg !5544
  br i1 %tobool147, label %if.then148, label %if.else245, !dbg !5549

if.then148:                                       ; preds = %if.else144
  call void @llvm.dbg.declare(metadata [64 x i16]* %dct8x8, metadata !5550, metadata !DIExpression()), !dbg !5552
  %84 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5553
  %dctf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %84, i32 0, i32 71, !dbg !5554
  %sub8x8_dct8 = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf, i32 0, i32 9, !dbg !5555
  %85 = load void (i16*, i8*, i8*)*, void (i16*, i8*, i8*)** %sub8x8_dct8, align 8, !dbg !5555
  %arraydecay149 = getelementptr inbounds [64 x i16], [64 x i16]* %dct8x8, i64 0, i64 0, !dbg !5556
  %86 = load i8*, i8** %p_fenc, align 8, !dbg !5557
  %87 = load i8*, i8** %p_fdec, align 8, !dbg !5558
  call void %85(i16* %arraydecay149, i8* %86, i8* %87), !dbg !5553
  %88 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5559
  %arraydecay150 = getelementptr inbounds [64 x i16], [64 x i16]* %dct8x8, i64 0, i64 0, !dbg !5560
  %89 = load i32, i32* %i_qp, align 4, !dbg !5561
  %90 = load i32, i32* %i8.addr, align 4, !dbg !5562
  %call151 = call i32 @x264_quant_8x8(%struct.x264_t* %88, i16* %arraydecay150, i32 %89, i32 0, i32 %90), !dbg !5563
  store i32 %call151, i32* %nnz8x8, align 4, !dbg !5564
  %91 = load i32, i32* %nnz8x8, align 4, !dbg !5565
  %tobool152 = icmp ne i32 %91, 0, !dbg !5565
  br i1 %tobool152, label %if.then153, label %if.else223, !dbg !5567

if.then153:                                       ; preds = %if.then148
  %92 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5568
  %zigzagf154 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %92, i32 0, i32 72, !dbg !5570
  %scan_8x8 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf154, i32 0, i32 0, !dbg !5571
  %93 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_8x8, align 8, !dbg !5571
  %94 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5572
  %dct155 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %94, i32 0, i32 54, !dbg !5573
  %luma8x8156 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct155, i32 0, i32 2, !dbg !5574
  %95 = load i32, i32* %i8.addr, align 4, !dbg !5575
  %idxprom157 = sext i32 %95 to i64, !dbg !5572
  %arrayidx158 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %luma8x8156, i64 0, i64 %idxprom157, !dbg !5572
  %arraydecay159 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx158, i64 0, i64 0, !dbg !5572
  %arraydecay160 = getelementptr inbounds [64 x i16], [64 x i16]* %dct8x8, i64 0, i64 0, !dbg !5576
  call void %93(i16* %arraydecay159, i16* %arraydecay160), !dbg !5568
  %96 = load i32, i32* %b_decimate, align 4, !dbg !5577
  %tobool161 = icmp ne i32 %96, 0, !dbg !5577
  br i1 %tobool161, label %land.lhs.true, label %if.end173, !dbg !5579

land.lhs.true:                                    ; preds = %if.then153
  %97 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5580
  %mb162 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %97, i32 0, i32 55, !dbg !5581
  %b_trellis = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb162, i32 0, i32 12, !dbg !5582
  %98 = load i32, i32* %b_trellis, align 16, !dbg !5582
  %tobool163 = icmp ne i32 %98, 0, !dbg !5580
  br i1 %tobool163, label %if.end173, label %if.then164, !dbg !5583

if.then164:                                       ; preds = %land.lhs.true
  %99 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5584
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %99, i32 0, i32 73, !dbg !5585
  %decimate_score64 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 10, !dbg !5586
  %100 = load i32 (i16*)*, i32 (i16*)** %decimate_score64, align 8, !dbg !5586
  %101 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5587
  %dct165 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %101, i32 0, i32 54, !dbg !5588
  %luma8x8166 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct165, i32 0, i32 2, !dbg !5589
  %102 = load i32, i32* %i8.addr, align 4, !dbg !5590
  %idxprom167 = sext i32 %102 to i64, !dbg !5587
  %arrayidx168 = getelementptr inbounds [4 x [64 x i16]], [4 x [64 x i16]]* %luma8x8166, i64 0, i64 %idxprom167, !dbg !5587
  %arraydecay169 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx168, i64 0, i64 0, !dbg !5587
  %call170 = call i32 %100(i16* %arraydecay169), !dbg !5584
  %cmp171 = icmp sle i32 4, %call170, !dbg !5591
  %conv172 = zext i1 %cmp171 to i32, !dbg !5591
  store i32 %conv172, i32* %nnz8x8, align 4, !dbg !5592
  br label %if.end173, !dbg !5593

if.end173:                                        ; preds = %if.then164, %land.lhs.true, %if.then153
  %103 = load i32, i32* %nnz8x8, align 4, !dbg !5594
  %tobool174 = icmp ne i32 %103, 0, !dbg !5594
  br i1 %tobool174, label %if.then175, label %if.else201, !dbg !5596

if.then175:                                       ; preds = %if.end173
  %104 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5597
  %quantf176 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %104, i32 0, i32 73, !dbg !5599
  %dequant_8x8 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf176, i32 0, i32 4, !dbg !5600
  %105 = load void (i16*, [64 x i32]*, i32)*, void (i16*, [64 x i32]*, i32)** %dequant_8x8, align 8, !dbg !5600
  %arraydecay177 = getelementptr inbounds [64 x i16], [64 x i16]* %dct8x8, i64 0, i64 0, !dbg !5601
  %106 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5602
  %dequant8_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %106, i32 0, i32 30, !dbg !5603
  %arrayidx178 = getelementptr inbounds [2 x [64 x i32]*], [2 x [64 x i32]*]* %dequant8_mf, i64 0, i64 1, !dbg !5602
  %107 = load [64 x i32]*, [64 x i32]** %arrayidx178, align 8, !dbg !5602
  %108 = load i32, i32* %i_qp, align 4, !dbg !5604
  call void %105(i16* %arraydecay177, [64 x i32]* %107, i32 %108), !dbg !5597
  %109 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5605
  %dctf179 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %109, i32 0, i32 71, !dbg !5606
  %add8x8_idct8 = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf179, i32 0, i32 10, !dbg !5607
  %110 = load void (i8*, i16*)*, void (i8*, i16*)** %add8x8_idct8, align 16, !dbg !5607
  %111 = load i8*, i8** %p_fdec, align 8, !dbg !5608
  %arraydecay180 = getelementptr inbounds [64 x i16], [64 x i16]* %dct8x8, i64 0, i64 0, !dbg !5609
  call void %110(i8* %111, i16* %arraydecay180), !dbg !5605
  %112 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5610
  %mb181 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %112, i32 0, i32 55, !dbg !5610
  %cache182 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb181, i32 0, i32 67, !dbg !5610
  %non_zero_count183 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache182, i32 0, i32 2, !dbg !5610
  %113 = load i32, i32* %i8.addr, align 4, !dbg !5610
  %mul184 = mul nsw i32 %113, 4, !dbg !5610
  %add185 = add nsw i32 %mul184, 0, !dbg !5610
  %idxprom186 = sext i32 %add185 to i64, !dbg !5610
  %arrayidx187 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom186, !dbg !5610
  %114 = load i32, i32* %arrayidx187, align 4, !dbg !5610
  %idxprom188 = sext i32 %114 to i64, !dbg !5610
  %arrayidx189 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count183, i64 0, i64 %idxprom188, !dbg !5610
  %115 = bitcast i8* %arrayidx189 to %union.x264_union16_t*, !dbg !5610
  %i190 = bitcast %union.x264_union16_t* %115 to i16*, !dbg !5610
  store i16 257, i16* %i190, align 1, !dbg !5610
  %116 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5610
  %mb191 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %116, i32 0, i32 55, !dbg !5610
  %cache192 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb191, i32 0, i32 67, !dbg !5610
  %non_zero_count193 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache192, i32 0, i32 2, !dbg !5610
  %117 = load i32, i32* %i8.addr, align 4, !dbg !5610
  %mul194 = mul nsw i32 %117, 4, !dbg !5610
  %add195 = add nsw i32 %mul194, 2, !dbg !5610
  %idxprom196 = sext i32 %add195 to i64, !dbg !5610
  %arrayidx197 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom196, !dbg !5610
  %118 = load i32, i32* %arrayidx197, align 4, !dbg !5610
  %idxprom198 = sext i32 %118 to i64, !dbg !5610
  %arrayidx199 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count193, i64 0, i64 %idxprom198, !dbg !5610
  %119 = bitcast i8* %arrayidx199 to %union.x264_union16_t*, !dbg !5610
  %i200 = bitcast %union.x264_union16_t* %119 to i16*, !dbg !5610
  store i16 257, i16* %i200, align 1, !dbg !5610
  br label %if.end222, !dbg !5612

if.else201:                                       ; preds = %if.end173
  %120 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5613
  %mb202 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %120, i32 0, i32 55, !dbg !5613
  %cache203 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb202, i32 0, i32 67, !dbg !5613
  %non_zero_count204 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache203, i32 0, i32 2, !dbg !5613
  %121 = load i32, i32* %i8.addr, align 4, !dbg !5613
  %mul205 = mul nsw i32 %121, 4, !dbg !5613
  %add206 = add nsw i32 %mul205, 0, !dbg !5613
  %idxprom207 = sext i32 %add206 to i64, !dbg !5613
  %arrayidx208 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom207, !dbg !5613
  %122 = load i32, i32* %arrayidx208, align 4, !dbg !5613
  %idxprom209 = sext i32 %122 to i64, !dbg !5613
  %arrayidx210 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count204, i64 0, i64 %idxprom209, !dbg !5613
  %123 = bitcast i8* %arrayidx210 to %union.x264_union16_t*, !dbg !5613
  %i211 = bitcast %union.x264_union16_t* %123 to i16*, !dbg !5613
  store i16 0, i16* %i211, align 1, !dbg !5613
  %124 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5613
  %mb212 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %124, i32 0, i32 55, !dbg !5613
  %cache213 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb212, i32 0, i32 67, !dbg !5613
  %non_zero_count214 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache213, i32 0, i32 2, !dbg !5613
  %125 = load i32, i32* %i8.addr, align 4, !dbg !5613
  %mul215 = mul nsw i32 %125, 4, !dbg !5613
  %add216 = add nsw i32 %mul215, 2, !dbg !5613
  %idxprom217 = sext i32 %add216 to i64, !dbg !5613
  %arrayidx218 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom217, !dbg !5613
  %126 = load i32, i32* %arrayidx218, align 4, !dbg !5613
  %idxprom219 = sext i32 %126 to i64, !dbg !5613
  %arrayidx220 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count214, i64 0, i64 %idxprom219, !dbg !5613
  %127 = bitcast i8* %arrayidx220 to %union.x264_union16_t*, !dbg !5613
  %i221 = bitcast %union.x264_union16_t* %127 to i16*, !dbg !5613
  store i16 0, i16* %i221, align 1, !dbg !5613
  br label %if.end222

if.end222:                                        ; preds = %if.else201, %if.then175
  br label %if.end244, !dbg !5615

if.else223:                                       ; preds = %if.then148
  %128 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5616
  %mb224 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %128, i32 0, i32 55, !dbg !5616
  %cache225 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb224, i32 0, i32 67, !dbg !5616
  %non_zero_count226 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache225, i32 0, i32 2, !dbg !5616
  %129 = load i32, i32* %i8.addr, align 4, !dbg !5616
  %mul227 = mul nsw i32 %129, 4, !dbg !5616
  %add228 = add nsw i32 %mul227, 0, !dbg !5616
  %idxprom229 = sext i32 %add228 to i64, !dbg !5616
  %arrayidx230 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom229, !dbg !5616
  %130 = load i32, i32* %arrayidx230, align 4, !dbg !5616
  %idxprom231 = sext i32 %130 to i64, !dbg !5616
  %arrayidx232 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count226, i64 0, i64 %idxprom231, !dbg !5616
  %131 = bitcast i8* %arrayidx232 to %union.x264_union16_t*, !dbg !5616
  %i233 = bitcast %union.x264_union16_t* %131 to i16*, !dbg !5616
  store i16 0, i16* %i233, align 1, !dbg !5616
  %132 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5616
  %mb234 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %132, i32 0, i32 55, !dbg !5616
  %cache235 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb234, i32 0, i32 67, !dbg !5616
  %non_zero_count236 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache235, i32 0, i32 2, !dbg !5616
  %133 = load i32, i32* %i8.addr, align 4, !dbg !5616
  %mul237 = mul nsw i32 %133, 4, !dbg !5616
  %add238 = add nsw i32 %mul237, 2, !dbg !5616
  %idxprom239 = sext i32 %add238 to i64, !dbg !5616
  %arrayidx240 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom239, !dbg !5616
  %134 = load i32, i32* %arrayidx240, align 4, !dbg !5616
  %idxprom241 = sext i32 %134 to i64, !dbg !5616
  %arrayidx242 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count236, i64 0, i64 %idxprom241, !dbg !5616
  %135 = bitcast i8* %arrayidx242 to %union.x264_union16_t*, !dbg !5616
  %i243 = bitcast %union.x264_union16_t* %135 to i16*, !dbg !5616
  store i16 0, i16* %i243, align 1, !dbg !5616
  br label %if.end244

if.end244:                                        ; preds = %if.else223, %if.end222
  br label %if.end336, !dbg !5618

if.else245:                                       ; preds = %if.else144
  call void @llvm.dbg.declare(metadata i32* %i_decimate_8x8, metadata !5619, metadata !DIExpression()), !dbg !5621
  store i32 0, i32* %i_decimate_8x8, align 4, !dbg !5621
  call void @llvm.dbg.declare(metadata [4 x [16 x i16]]* %dct4x4, metadata !5622, metadata !DIExpression()), !dbg !5623
  %136 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5624
  %dctf246 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %136, i32 0, i32 71, !dbg !5625
  %sub8x8_dct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf246, i32 0, i32 2, !dbg !5626
  %137 = load void ([16 x i16]*, i8*, i8*)*, void ([16 x i16]*, i8*, i8*)** %sub8x8_dct, align 16, !dbg !5626
  %arraydecay247 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !5627
  %138 = load i8*, i8** %p_fenc, align 8, !dbg !5628
  %139 = load i8*, i8** %p_fdec, align 8, !dbg !5629
  call void %137([16 x i16]* %arraydecay247, i8* %138, i8* %139), !dbg !5624
  call void @llvm.dbg.declare(metadata i32* %i4248, metadata !5630, metadata !DIExpression()), !dbg !5632
  store i32 0, i32* %i4248, align 4, !dbg !5632
  br label %for.cond249, !dbg !5633

for.cond249:                                      ; preds = %for.inc301, %if.else245
  %140 = load i32, i32* %i4248, align 4, !dbg !5634
  %cmp250 = icmp slt i32 %140, 4, !dbg !5636
  br i1 %cmp250, label %for.body252, label %for.end303, !dbg !5637

for.body252:                                      ; preds = %for.cond249
  %141 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5638
  %142 = load i32, i32* %i4248, align 4, !dbg !5640
  %idxprom253 = sext i32 %142 to i64, !dbg !5641
  %arrayidx254 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom253, !dbg !5641
  %arraydecay255 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx254, i64 0, i64 0, !dbg !5641
  %143 = load i32, i32* %i_qp, align 4, !dbg !5642
  %144 = load i32, i32* %i8.addr, align 4, !dbg !5643
  %mul256 = mul nsw i32 %144, 4, !dbg !5644
  %145 = load i32, i32* %i4248, align 4, !dbg !5645
  %add257 = add nsw i32 %mul256, %145, !dbg !5646
  %call258 = call i32 @x264_quant_4x4(%struct.x264_t* %141, i16* %arraydecay255, i32 %143, i32 2, i32 0, i32 %add257), !dbg !5647
  store i32 %call258, i32* %nz, align 4, !dbg !5648
  %146 = load i32, i32* %nz, align 4, !dbg !5649
  %conv259 = trunc i32 %146 to i8, !dbg !5649
  %147 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5650
  %mb260 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %147, i32 0, i32 55, !dbg !5651
  %cache261 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb260, i32 0, i32 67, !dbg !5652
  %non_zero_count262 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache261, i32 0, i32 2, !dbg !5653
  %148 = load i32, i32* %i8.addr, align 4, !dbg !5654
  %mul263 = mul nsw i32 %148, 4, !dbg !5655
  %149 = load i32, i32* %i4248, align 4, !dbg !5656
  %add264 = add nsw i32 %mul263, %149, !dbg !5657
  %idxprom265 = sext i32 %add264 to i64, !dbg !5658
  %arrayidx266 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom265, !dbg !5658
  %150 = load i32, i32* %arrayidx266, align 4, !dbg !5658
  %idxprom267 = sext i32 %150 to i64, !dbg !5650
  %arrayidx268 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count262, i64 0, i64 %idxprom267, !dbg !5650
  store i8 %conv259, i8* %arrayidx268, align 1, !dbg !5659
  %151 = load i32, i32* %nz, align 4, !dbg !5660
  %tobool269 = icmp ne i32 %151, 0, !dbg !5660
  br i1 %tobool269, label %if.then270, label %if.end300, !dbg !5662

if.then270:                                       ; preds = %for.body252
  %152 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5663
  %zigzagf271 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %152, i32 0, i32 72, !dbg !5665
  %scan_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf271, i32 0, i32 1, !dbg !5666
  %153 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x4, align 8, !dbg !5666
  %154 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5667
  %dct272 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %154, i32 0, i32 54, !dbg !5668
  %luma4x4273 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct272, i32 0, i32 3, !dbg !5669
  %155 = load i32, i32* %i8.addr, align 4, !dbg !5670
  %mul274 = mul nsw i32 %155, 4, !dbg !5671
  %156 = load i32, i32* %i4248, align 4, !dbg !5672
  %add275 = add nsw i32 %mul274, %156, !dbg !5673
  %idxprom276 = sext i32 %add275 to i64, !dbg !5667
  %arrayidx277 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4273, i64 0, i64 %idxprom276, !dbg !5667
  %arraydecay278 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx277, i64 0, i64 0, !dbg !5667
  %157 = load i32, i32* %i4248, align 4, !dbg !5674
  %idxprom279 = sext i32 %157 to i64, !dbg !5675
  %arrayidx280 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom279, !dbg !5675
  %arraydecay281 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx280, i64 0, i64 0, !dbg !5675
  call void %153(i16* %arraydecay278, i16* %arraydecay281), !dbg !5663
  %158 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5676
  %quantf282 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %158, i32 0, i32 73, !dbg !5677
  %dequant_4x4 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf282, i32 0, i32 5, !dbg !5678
  %159 = load void (i16*, [16 x i32]*, i32)*, void (i16*, [16 x i32]*, i32)** %dequant_4x4, align 8, !dbg !5678
  %160 = load i32, i32* %i4248, align 4, !dbg !5679
  %idxprom283 = sext i32 %160 to i64, !dbg !5680
  %arrayidx284 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 %idxprom283, !dbg !5680
  %arraydecay285 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx284, i64 0, i64 0, !dbg !5680
  %161 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5681
  %dequant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %161, i32 0, i32 29, !dbg !5682
  %arrayidx286 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf, i64 0, i64 1, !dbg !5681
  %162 = load [16 x i32]*, [16 x i32]** %arrayidx286, align 8, !dbg !5681
  %163 = load i32, i32* %i_qp, align 4, !dbg !5683
  call void %159(i16* %arraydecay285, [16 x i32]* %162, i32 %163), !dbg !5676
  %164 = load i32, i32* %b_decimate, align 4, !dbg !5684
  %tobool287 = icmp ne i32 %164, 0, !dbg !5684
  br i1 %tobool287, label %if.then288, label %if.end299, !dbg !5686

if.then288:                                       ; preds = %if.then270
  %165 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5687
  %quantf289 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %165, i32 0, i32 73, !dbg !5688
  %decimate_score16 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf289, i32 0, i32 9, !dbg !5689
  %166 = load i32 (i16*)*, i32 (i16*)** %decimate_score16, align 8, !dbg !5689
  %167 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5690
  %dct290 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %167, i32 0, i32 54, !dbg !5691
  %luma4x4291 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct290, i32 0, i32 3, !dbg !5692
  %168 = load i32, i32* %i8.addr, align 4, !dbg !5693
  %mul292 = mul nsw i32 %168, 4, !dbg !5694
  %169 = load i32, i32* %i4248, align 4, !dbg !5695
  %add293 = add nsw i32 %mul292, %169, !dbg !5696
  %idxprom294 = sext i32 %add293 to i64, !dbg !5690
  %arrayidx295 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4291, i64 0, i64 %idxprom294, !dbg !5690
  %arraydecay296 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx295, i64 0, i64 0, !dbg !5690
  %call297 = call i32 %166(i16* %arraydecay296), !dbg !5687
  %170 = load i32, i32* %i_decimate_8x8, align 4, !dbg !5697
  %add298 = add nsw i32 %170, %call297, !dbg !5697
  store i32 %add298, i32* %i_decimate_8x8, align 4, !dbg !5697
  br label %if.end299, !dbg !5698

if.end299:                                        ; preds = %if.then288, %if.then270
  store i32 1, i32* %nnz8x8, align 4, !dbg !5699
  br label %if.end300, !dbg !5700

if.end300:                                        ; preds = %if.end299, %for.body252
  br label %for.inc301, !dbg !5701

for.inc301:                                       ; preds = %if.end300
  %171 = load i32, i32* %i4248, align 4, !dbg !5702
  %inc302 = add nsw i32 %171, 1, !dbg !5702
  store i32 %inc302, i32* %i4248, align 4, !dbg !5702
  br label %for.cond249, !dbg !5703, !llvm.loop !5704

for.end303:                                       ; preds = %for.cond249
  %172 = load i32, i32* %b_decimate, align 4, !dbg !5706
  %tobool304 = icmp ne i32 %172, 0, !dbg !5706
  br i1 %tobool304, label %land.lhs.true305, label %if.end309, !dbg !5708

land.lhs.true305:                                 ; preds = %for.end303
  %173 = load i32, i32* %i_decimate_8x8, align 4, !dbg !5709
  %cmp306 = icmp slt i32 %173, 4, !dbg !5710
  br i1 %cmp306, label %if.then308, label %if.end309, !dbg !5711

if.then308:                                       ; preds = %land.lhs.true305
  store i32 0, i32* %nnz8x8, align 4, !dbg !5712
  br label %if.end309, !dbg !5713

if.end309:                                        ; preds = %if.then308, %land.lhs.true305, %for.end303
  %174 = load i32, i32* %nnz8x8, align 4, !dbg !5714
  %tobool310 = icmp ne i32 %174, 0, !dbg !5714
  br i1 %tobool310, label %if.then311, label %if.else314, !dbg !5716

if.then311:                                       ; preds = %if.end309
  %175 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5717
  %dctf312 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %175, i32 0, i32 71, !dbg !5718
  %add8x8_idct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf312, i32 0, i32 4, !dbg !5719
  %176 = load void (i8*, [16 x i16]*)*, void (i8*, [16 x i16]*)** %add8x8_idct, align 16, !dbg !5719
  %177 = load i8*, i8** %p_fdec, align 8, !dbg !5720
  %arraydecay313 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %dct4x4, i64 0, i64 0, !dbg !5721
  call void %176(i8* %177, [16 x i16]* %arraydecay313), !dbg !5717
  br label %if.end335, !dbg !5717

if.else314:                                       ; preds = %if.end309
  %178 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5722
  %mb315 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %178, i32 0, i32 55, !dbg !5722
  %cache316 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb315, i32 0, i32 67, !dbg !5722
  %non_zero_count317 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache316, i32 0, i32 2, !dbg !5722
  %179 = load i32, i32* %i8.addr, align 4, !dbg !5722
  %mul318 = mul nsw i32 %179, 4, !dbg !5722
  %add319 = add nsw i32 %mul318, 0, !dbg !5722
  %idxprom320 = sext i32 %add319 to i64, !dbg !5722
  %arrayidx321 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom320, !dbg !5722
  %180 = load i32, i32* %arrayidx321, align 4, !dbg !5722
  %idxprom322 = sext i32 %180 to i64, !dbg !5722
  %arrayidx323 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count317, i64 0, i64 %idxprom322, !dbg !5722
  %181 = bitcast i8* %arrayidx323 to %union.x264_union16_t*, !dbg !5722
  %i324 = bitcast %union.x264_union16_t* %181 to i16*, !dbg !5722
  store i16 0, i16* %i324, align 1, !dbg !5722
  %182 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5722
  %mb325 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %182, i32 0, i32 55, !dbg !5722
  %cache326 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb325, i32 0, i32 67, !dbg !5722
  %non_zero_count327 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache326, i32 0, i32 2, !dbg !5722
  %183 = load i32, i32* %i8.addr, align 4, !dbg !5722
  %mul328 = mul nsw i32 %183, 4, !dbg !5722
  %add329 = add nsw i32 %mul328, 2, !dbg !5722
  %idxprom330 = sext i32 %add329 to i64, !dbg !5722
  %arrayidx331 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom330, !dbg !5722
  %184 = load i32, i32* %arrayidx331, align 4, !dbg !5722
  %idxprom332 = sext i32 %184 to i64, !dbg !5722
  %arrayidx333 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count327, i64 0, i64 %idxprom332, !dbg !5722
  %185 = bitcast i8* %arrayidx333 to %union.x264_union16_t*, !dbg !5722
  %i334 = bitcast %union.x264_union16_t* %185 to i16*, !dbg !5722
  store i16 0, i16* %i334, align 1, !dbg !5722
  br label %if.end335

if.end335:                                        ; preds = %if.else314, %if.then311
  br label %if.end336

if.end336:                                        ; preds = %if.end335, %if.end244
  %186 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5724
  %mb337 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %186, i32 0, i32 55, !dbg !5725
  %i_chroma_qp = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb337, i32 0, i32 69, !dbg !5726
  %187 = load i32, i32* %i_chroma_qp, align 4, !dbg !5726
  store i32 %187, i32* %i_qp, align 4, !dbg !5727
  call void @llvm.dbg.declare(metadata i32* %ch338, metadata !5728, metadata !DIExpression()), !dbg !5730
  store i32 0, i32* %ch338, align 4, !dbg !5730
  br label %for.cond339, !dbg !5731

for.cond339:                                      ; preds = %for.inc428, %if.end336
  %188 = load i32, i32* %ch338, align 4, !dbg !5732
  %cmp340 = icmp slt i32 %188, 2, !dbg !5734
  br i1 %cmp340, label %for.body342, label %for.end430, !dbg !5735

for.body342:                                      ; preds = %for.cond339
  call void @llvm.dbg.declare(metadata [16 x i16]* %dct4x4343, metadata !5736, metadata !DIExpression()), !dbg !5738
  %189 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5739
  %mb344 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %189, i32 0, i32 55, !dbg !5740
  %pic345 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb344, i32 0, i32 66, !dbg !5741
  %p_fenc346 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic345, i32 0, i32 16, !dbg !5742
  %190 = load i32, i32* %ch338, align 4, !dbg !5743
  %add347 = add nsw i32 1, %190, !dbg !5744
  %idxprom348 = sext i32 %add347 to i64, !dbg !5739
  %arrayidx349 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc346, i64 0, i64 %idxprom348, !dbg !5739
  %191 = load i8*, i8** %arrayidx349, align 8, !dbg !5739
  %192 = load i32, i32* %i8.addr, align 4, !dbg !5745
  %and350 = and i32 %192, 1, !dbg !5746
  %mul351 = mul nsw i32 %and350, 4, !dbg !5747
  %idx.ext352 = sext i32 %mul351 to i64, !dbg !5748
  %add.ptr353 = getelementptr inbounds i8, i8* %191, i64 %idx.ext352, !dbg !5748
  %193 = load i32, i32* %i8.addr, align 4, !dbg !5749
  %shr354 = ashr i32 %193, 1, !dbg !5750
  %mul355 = mul nsw i32 %shr354, 4, !dbg !5751
  %mul356 = mul nsw i32 %mul355, 16, !dbg !5752
  %idx.ext357 = sext i32 %mul356 to i64, !dbg !5753
  %add.ptr358 = getelementptr inbounds i8, i8* %add.ptr353, i64 %idx.ext357, !dbg !5753
  store i8* %add.ptr358, i8** %p_fenc, align 8, !dbg !5754
  %194 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5755
  %mb359 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %194, i32 0, i32 55, !dbg !5756
  %pic360 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb359, i32 0, i32 66, !dbg !5757
  %p_fdec361 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic360, i32 0, i32 18, !dbg !5758
  %195 = load i32, i32* %ch338, align 4, !dbg !5759
  %add362 = add nsw i32 1, %195, !dbg !5760
  %idxprom363 = sext i32 %add362 to i64, !dbg !5755
  %arrayidx364 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec361, i64 0, i64 %idxprom363, !dbg !5755
  %196 = load i8*, i8** %arrayidx364, align 8, !dbg !5755
  %197 = load i32, i32* %i8.addr, align 4, !dbg !5761
  %and365 = and i32 %197, 1, !dbg !5762
  %mul366 = mul nsw i32 %and365, 4, !dbg !5763
  %idx.ext367 = sext i32 %mul366 to i64, !dbg !5764
  %add.ptr368 = getelementptr inbounds i8, i8* %196, i64 %idx.ext367, !dbg !5764
  %198 = load i32, i32* %i8.addr, align 4, !dbg !5765
  %shr369 = ashr i32 %198, 1, !dbg !5766
  %mul370 = mul nsw i32 %shr369, 4, !dbg !5767
  %mul371 = mul nsw i32 %mul370, 32, !dbg !5768
  %idx.ext372 = sext i32 %mul371 to i64, !dbg !5769
  %add.ptr373 = getelementptr inbounds i8, i8* %add.ptr368, i64 %idx.ext372, !dbg !5769
  store i8* %add.ptr373, i8** %p_fdec, align 8, !dbg !5770
  %199 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5771
  %dctf374 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %199, i32 0, i32 71, !dbg !5772
  %sub4x4_dct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf374, i32 0, i32 0, !dbg !5773
  %200 = load void (i16*, i8*, i8*)*, void (i16*, i8*, i8*)** %sub4x4_dct, align 16, !dbg !5773
  %arraydecay375 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4343, i64 0, i64 0, !dbg !5774
  %201 = load i8*, i8** %p_fenc, align 8, !dbg !5775
  %202 = load i8*, i8** %p_fdec, align 8, !dbg !5776
  call void %200(i16* %arraydecay375, i8* %201, i8* %202), !dbg !5771
  %arrayidx376 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4343, i64 0, i64 0, !dbg !5777
  store i16 0, i16* %arrayidx376, align 16, !dbg !5778
  %203 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5779
  %mb377 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %203, i32 0, i32 55, !dbg !5781
  %b_trellis378 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb377, i32 0, i32 12, !dbg !5782
  %204 = load i32, i32* %b_trellis378, align 16, !dbg !5782
  %tobool379 = icmp ne i32 %204, 0, !dbg !5779
  br i1 %tobool379, label %if.then380, label %if.else383, !dbg !5783

if.then380:                                       ; preds = %for.body342
  %205 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5784
  %arraydecay381 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4343, i64 0, i64 0, !dbg !5785
  %206 = load i32, i32* %i_qp, align 4, !dbg !5786
  %call382 = call i32 @x264_quant_4x4_trellis(%struct.x264_t* %205, i16* %arraydecay381, i32 3, i32 %206, i32 4, i32 0, i32 1, i32 0), !dbg !5787
  store i32 %call382, i32* %nz, align 4, !dbg !5788
  br label %if.end395, !dbg !5789

if.else383:                                       ; preds = %for.body342
  %207 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5790
  %quantf384 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %207, i32 0, i32 73, !dbg !5791
  %quant_4x4 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf384, i32 0, i32 1, !dbg !5792
  %208 = load i32 (i16*, i16*, i16*)*, i32 (i16*, i16*, i16*)** %quant_4x4, align 8, !dbg !5792
  %arraydecay385 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4343, i64 0, i64 0, !dbg !5793
  %209 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5794
  %quant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %209, i32 0, i32 33, !dbg !5795
  %arrayidx386 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_mf, i64 0, i64 3, !dbg !5794
  %210 = load [16 x i16]*, [16 x i16]** %arrayidx386, align 8, !dbg !5794
  %211 = load i32, i32* %i_qp, align 4, !dbg !5796
  %idxprom387 = sext i32 %211 to i64, !dbg !5794
  %arrayidx388 = getelementptr inbounds [16 x i16], [16 x i16]* %210, i64 %idxprom387, !dbg !5794
  %arraydecay389 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx388, i64 0, i64 0, !dbg !5794
  %212 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5797
  %quant4_bias = getelementptr inbounds %struct.x264_t, %struct.x264_t* %212, i32 0, i32 35, !dbg !5798
  %arrayidx390 = getelementptr inbounds [4 x [16 x i16]*], [4 x [16 x i16]*]* %quant4_bias, i64 0, i64 3, !dbg !5797
  %213 = load [16 x i16]*, [16 x i16]** %arrayidx390, align 8, !dbg !5797
  %214 = load i32, i32* %i_qp, align 4, !dbg !5799
  %idxprom391 = sext i32 %214 to i64, !dbg !5797
  %arrayidx392 = getelementptr inbounds [16 x i16], [16 x i16]* %213, i64 %idxprom391, !dbg !5797
  %arraydecay393 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx392, i64 0, i64 0, !dbg !5797
  %call394 = call i32 %208(i16* %arraydecay385, i16* %arraydecay389, i16* %arraydecay393), !dbg !5790
  store i32 %call394, i32* %nz, align 4, !dbg !5800
  br label %if.end395

if.end395:                                        ; preds = %if.else383, %if.then380
  %215 = load i32, i32* %nz, align 4, !dbg !5801
  %conv396 = trunc i32 %215 to i8, !dbg !5801
  %216 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5802
  %mb397 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %216, i32 0, i32 55, !dbg !5803
  %cache398 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb397, i32 0, i32 67, !dbg !5804
  %non_zero_count399 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache398, i32 0, i32 2, !dbg !5805
  %217 = load i32, i32* %i8.addr, align 4, !dbg !5806
  %add400 = add nsw i32 16, %217, !dbg !5807
  %218 = load i32, i32* %ch338, align 4, !dbg !5808
  %mul401 = mul nsw i32 %218, 4, !dbg !5809
  %add402 = add nsw i32 %add400, %mul401, !dbg !5810
  %idxprom403 = sext i32 %add402 to i64, !dbg !5811
  %arrayidx404 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom403, !dbg !5811
  %219 = load i32, i32* %arrayidx404, align 4, !dbg !5811
  %idxprom405 = sext i32 %219 to i64, !dbg !5802
  %arrayidx406 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count399, i64 0, i64 %idxprom405, !dbg !5802
  store i8 %conv396, i8* %arrayidx406, align 1, !dbg !5812
  %220 = load i32, i32* %nz, align 4, !dbg !5813
  %tobool407 = icmp ne i32 %220, 0, !dbg !5813
  br i1 %tobool407, label %if.then408, label %if.end427, !dbg !5815

if.then408:                                       ; preds = %if.end395
  %221 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5816
  %zigzagf409 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %221, i32 0, i32 72, !dbg !5818
  %scan_4x4410 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf409, i32 0, i32 1, !dbg !5819
  %222 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x4410, align 8, !dbg !5819
  %223 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5820
  %dct411 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %223, i32 0, i32 54, !dbg !5821
  %luma4x4412 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct411, i32 0, i32 3, !dbg !5822
  %224 = load i32, i32* %i8.addr, align 4, !dbg !5823
  %add413 = add nsw i32 16, %224, !dbg !5824
  %225 = load i32, i32* %ch338, align 4, !dbg !5825
  %mul414 = mul nsw i32 %225, 4, !dbg !5826
  %add415 = add nsw i32 %add413, %mul414, !dbg !5827
  %idxprom416 = sext i32 %add415 to i64, !dbg !5820
  %arrayidx417 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4412, i64 0, i64 %idxprom416, !dbg !5820
  %arraydecay418 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx417, i64 0, i64 0, !dbg !5820
  %arraydecay419 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4343, i64 0, i64 0, !dbg !5828
  call void %222(i16* %arraydecay418, i16* %arraydecay419), !dbg !5816
  %226 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5829
  %quantf420 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %226, i32 0, i32 73, !dbg !5830
  %dequant_4x4421 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf420, i32 0, i32 5, !dbg !5831
  %227 = load void (i16*, [16 x i32]*, i32)*, void (i16*, [16 x i32]*, i32)** %dequant_4x4421, align 8, !dbg !5831
  %arraydecay422 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4343, i64 0, i64 0, !dbg !5832
  %228 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5833
  %dequant4_mf423 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %228, i32 0, i32 29, !dbg !5834
  %arrayidx424 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf423, i64 0, i64 3, !dbg !5833
  %229 = load [16 x i32]*, [16 x i32]** %arrayidx424, align 8, !dbg !5833
  %230 = load i32, i32* %i_qp, align 4, !dbg !5835
  call void %227(i16* %arraydecay422, [16 x i32]* %229, i32 %230), !dbg !5829
  %231 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5836
  %dctf425 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %231, i32 0, i32 71, !dbg !5837
  %add4x4_idct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf425, i32 0, i32 1, !dbg !5838
  %232 = load void (i8*, i16*)*, void (i8*, i16*)** %add4x4_idct, align 8, !dbg !5838
  %233 = load i8*, i8** %p_fdec, align 8, !dbg !5839
  %arraydecay426 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4343, i64 0, i64 0, !dbg !5840
  call void %232(i8* %233, i16* %arraydecay426), !dbg !5836
  br label %if.end427, !dbg !5841

if.end427:                                        ; preds = %if.then408, %if.end395
  br label %for.inc428, !dbg !5842

for.inc428:                                       ; preds = %if.end427
  %234 = load i32, i32* %ch338, align 4, !dbg !5843
  %inc429 = add nsw i32 %234, 1, !dbg !5843
  store i32 %inc429, i32* %ch338, align 4, !dbg !5843
  br label %for.cond339, !dbg !5844, !llvm.loop !5845

for.end430:                                       ; preds = %for.cond339
  br label %if.end431

if.end431:                                        ; preds = %for.end430, %for.end143
  %235 = load i32, i32* %i8.addr, align 4, !dbg !5847
  %shl = shl i32 1, %235, !dbg !5848
  %neg = xor i32 %shl, -1, !dbg !5849
  %236 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5850
  %mb432 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %236, i32 0, i32 55, !dbg !5851
  %i_cbp_luma = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb432, i32 0, i32 57, !dbg !5852
  %237 = load i32, i32* %i_cbp_luma, align 8, !dbg !5853
  %and433 = and i32 %237, %neg, !dbg !5853
  store i32 %and433, i32* %i_cbp_luma, align 8, !dbg !5853
  %238 = load i32, i32* %nnz8x8, align 4, !dbg !5854
  %239 = load i32, i32* %i8.addr, align 4, !dbg !5855
  %shl434 = shl i32 %238, %239, !dbg !5856
  %240 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5857
  %mb435 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %240, i32 0, i32 55, !dbg !5858
  %i_cbp_luma436 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb435, i32 0, i32 57, !dbg !5859
  %241 = load i32, i32* %i_cbp_luma436, align 8, !dbg !5860
  %or437 = or i32 %241, %shl434, !dbg !5860
  store i32 %or437, i32* %i_cbp_luma436, align 8, !dbg !5860
  %242 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5861
  %mb438 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %242, i32 0, i32 55, !dbg !5862
  %i_cbp_chroma = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb438, i32 0, i32 58, !dbg !5863
  store i32 2, i32* %i_cbp_chroma, align 4, !dbg !5864
  ret void, !dbg !5865
}

declare dso_local void @x264_mb_mc_8x8(%struct.x264_t*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @x264_macroblock_encode_p4x4(%struct.x264_t* %h, i32 %i4) #0 !dbg !5866 {
entry:
  %h.addr = alloca %struct.x264_t*, align 8
  %i4.addr = alloca i32, align 4
  %i_qp = alloca i32, align 4
  %p_fenc = alloca i8*, align 8
  %p_fdec = alloca i8*, align 8
  %nz = alloca i32, align 4
  %dct4x4 = alloca [16 x i16], align 16
  store %struct.x264_t* %h, %struct.x264_t** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_t** %h.addr, metadata !5867, metadata !DIExpression()), !dbg !5868
  store i32 %i4, i32* %i4.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i4.addr, metadata !5869, metadata !DIExpression()), !dbg !5870
  call void @llvm.dbg.declare(metadata i32* %i_qp, metadata !5871, metadata !DIExpression()), !dbg !5872
  %0 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5873
  %mb = getelementptr inbounds %struct.x264_t, %struct.x264_t* %0, i32 0, i32 55, !dbg !5874
  %i_qp1 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb, i32 0, i32 68, !dbg !5875
  %1 = load i32, i32* %i_qp1, align 16, !dbg !5875
  store i32 %1, i32* %i_qp, align 4, !dbg !5872
  call void @llvm.dbg.declare(metadata i8** %p_fenc, metadata !5876, metadata !DIExpression()), !dbg !5877
  %2 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5878
  %mb2 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %2, i32 0, i32 55, !dbg !5879
  %pic = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb2, i32 0, i32 66, !dbg !5880
  %p_fenc3 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic, i32 0, i32 16, !dbg !5881
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fenc3, i64 0, i64 0, !dbg !5878
  %3 = load i8*, i8** %arrayidx, align 16, !dbg !5878
  %4 = load i32, i32* %i4.addr, align 4, !dbg !5882
  %idxprom = sext i32 %4 to i64, !dbg !5883
  %arrayidx4 = getelementptr inbounds [16 x i8], [16 x i8]* @block_idx_xy_fenc, i64 0, i64 %idxprom, !dbg !5883
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !5883
  %idxprom5 = zext i8 %5 to i64, !dbg !5878
  %arrayidx6 = getelementptr inbounds i8, i8* %3, i64 %idxprom5, !dbg !5878
  store i8* %arrayidx6, i8** %p_fenc, align 8, !dbg !5877
  call void @llvm.dbg.declare(metadata i8** %p_fdec, metadata !5884, metadata !DIExpression()), !dbg !5885
  %6 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5886
  %mb7 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %6, i32 0, i32 55, !dbg !5887
  %pic8 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb7, i32 0, i32 66, !dbg !5888
  %p_fdec9 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %pic8, i32 0, i32 18, !dbg !5889
  %arrayidx10 = getelementptr inbounds [3 x i8*], [3 x i8*]* %p_fdec9, i64 0, i64 0, !dbg !5886
  %7 = load i8*, i8** %arrayidx10, align 16, !dbg !5886
  %8 = load i32, i32* %i4.addr, align 4, !dbg !5890
  %idxprom11 = sext i32 %8 to i64, !dbg !5891
  %arrayidx12 = getelementptr inbounds [16 x i16], [16 x i16]* @block_idx_xy_fdec, i64 0, i64 %idxprom11, !dbg !5891
  %9 = load i16, i16* %arrayidx12, align 2, !dbg !5891
  %idxprom13 = zext i16 %9 to i64, !dbg !5886
  %arrayidx14 = getelementptr inbounds i8, i8* %7, i64 %idxprom13, !dbg !5886
  store i8* %arrayidx14, i8** %p_fdec, align 8, !dbg !5885
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !5892, metadata !DIExpression()), !dbg !5893
  %10 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5894
  %mb15 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %10, i32 0, i32 55, !dbg !5896
  %b_lossless = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb15, i32 0, i32 73, !dbg !5897
  %11 = load i32, i32* %b_lossless, align 4, !dbg !5897
  %tobool = icmp ne i32 %11, 0, !dbg !5894
  br i1 %tobool, label %if.then, label %if.else, !dbg !5898

if.then:                                          ; preds = %entry
  %12 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5899
  %zigzagf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %12, i32 0, i32 72, !dbg !5901
  %sub_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf, i32 0, i32 3, !dbg !5902
  %13 = load i32 (i16*, i8*, i8*)*, i32 (i16*, i8*, i8*)** %sub_4x4, align 8, !dbg !5902
  %14 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5903
  %dct = getelementptr inbounds %struct.x264_t, %struct.x264_t* %14, i32 0, i32 54, !dbg !5904
  %luma4x4 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct, i32 0, i32 3, !dbg !5905
  %15 = load i32, i32* %i4.addr, align 4, !dbg !5906
  %idxprom16 = sext i32 %15 to i64, !dbg !5903
  %arrayidx17 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x4, i64 0, i64 %idxprom16, !dbg !5903
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx17, i64 0, i64 0, !dbg !5903
  %16 = load i8*, i8** %p_fenc, align 8, !dbg !5907
  %17 = load i8*, i8** %p_fdec, align 8, !dbg !5908
  %call = call i32 %13(i16* %arraydecay, i8* %16, i8* %17), !dbg !5899
  store i32 %call, i32* %nz, align 4, !dbg !5909
  %18 = load i32, i32* %nz, align 4, !dbg !5910
  %conv = trunc i32 %18 to i8, !dbg !5910
  %19 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5911
  %mb18 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %19, i32 0, i32 55, !dbg !5912
  %cache = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb18, i32 0, i32 67, !dbg !5913
  %non_zero_count = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache, i32 0, i32 2, !dbg !5914
  %20 = load i32, i32* %i4.addr, align 4, !dbg !5915
  %idxprom19 = sext i32 %20 to i64, !dbg !5916
  %arrayidx20 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom19, !dbg !5916
  %21 = load i32, i32* %arrayidx20, align 4, !dbg !5916
  %idxprom21 = sext i32 %21 to i64, !dbg !5911
  %arrayidx22 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count, i64 0, i64 %idxprom21, !dbg !5911
  store i8 %conv, i8* %arrayidx22, align 1, !dbg !5917
  br label %if.end47, !dbg !5918

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [16 x i16]* %dct4x4, metadata !5919, metadata !DIExpression()), !dbg !5921
  %22 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5922
  %dctf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %22, i32 0, i32 71, !dbg !5923
  %sub4x4_dct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf, i32 0, i32 0, !dbg !5924
  %23 = load void (i16*, i8*, i8*)*, void (i16*, i8*, i8*)** %sub4x4_dct, align 16, !dbg !5924
  %arraydecay23 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4, i64 0, i64 0, !dbg !5925
  %24 = load i8*, i8** %p_fenc, align 8, !dbg !5926
  %25 = load i8*, i8** %p_fdec, align 8, !dbg !5927
  call void %23(i16* %arraydecay23, i8* %24, i8* %25), !dbg !5922
  %26 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5928
  %arraydecay24 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4, i64 0, i64 0, !dbg !5929
  %27 = load i32, i32* %i_qp, align 4, !dbg !5930
  %28 = load i32, i32* %i4.addr, align 4, !dbg !5931
  %call25 = call i32 @x264_quant_4x4(%struct.x264_t* %26, i16* %arraydecay24, i32 %27, i32 2, i32 0, i32 %28), !dbg !5932
  store i32 %call25, i32* %nz, align 4, !dbg !5933
  %29 = load i32, i32* %nz, align 4, !dbg !5934
  %conv26 = trunc i32 %29 to i8, !dbg !5934
  %30 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5935
  %mb27 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %30, i32 0, i32 55, !dbg !5936
  %cache28 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %mb27, i32 0, i32 67, !dbg !5937
  %non_zero_count29 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %cache28, i32 0, i32 2, !dbg !5938
  %31 = load i32, i32* %i4.addr, align 4, !dbg !5939
  %idxprom30 = sext i32 %31 to i64, !dbg !5940
  %arrayidx31 = getelementptr inbounds [27 x i32], [27 x i32]* @x264_scan8, i64 0, i64 %idxprom30, !dbg !5940
  %32 = load i32, i32* %arrayidx31, align 4, !dbg !5940
  %idxprom32 = sext i32 %32 to i64, !dbg !5935
  %arrayidx33 = getelementptr inbounds [48 x i8], [48 x i8]* %non_zero_count29, i64 0, i64 %idxprom32, !dbg !5935
  store i8 %conv26, i8* %arrayidx33, align 1, !dbg !5941
  %33 = load i32, i32* %nz, align 4, !dbg !5942
  %tobool34 = icmp ne i32 %33, 0, !dbg !5942
  br i1 %tobool34, label %if.then35, label %if.end, !dbg !5944

if.then35:                                        ; preds = %if.else
  %34 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5945
  %zigzagf36 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %34, i32 0, i32 72, !dbg !5947
  %scan_4x4 = getelementptr inbounds %struct.x264_zigzag_function_t, %struct.x264_zigzag_function_t* %zigzagf36, i32 0, i32 1, !dbg !5948
  %35 = load void (i16*, i16*)*, void (i16*, i16*)** %scan_4x4, align 8, !dbg !5948
  %36 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5949
  %dct37 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %36, i32 0, i32 54, !dbg !5950
  %luma4x438 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %dct37, i32 0, i32 3, !dbg !5951
  %37 = load i32, i32* %i4.addr, align 4, !dbg !5952
  %idxprom39 = sext i32 %37 to i64, !dbg !5949
  %arrayidx40 = getelementptr inbounds [24 x [16 x i16]], [24 x [16 x i16]]* %luma4x438, i64 0, i64 %idxprom39, !dbg !5949
  %arraydecay41 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx40, i64 0, i64 0, !dbg !5949
  %arraydecay42 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4, i64 0, i64 0, !dbg !5953
  call void %35(i16* %arraydecay41, i16* %arraydecay42), !dbg !5945
  %38 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5954
  %quantf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %38, i32 0, i32 73, !dbg !5955
  %dequant_4x4 = getelementptr inbounds %struct.x264_quant_function_t, %struct.x264_quant_function_t* %quantf, i32 0, i32 5, !dbg !5956
  %39 = load void (i16*, [16 x i32]*, i32)*, void (i16*, [16 x i32]*, i32)** %dequant_4x4, align 8, !dbg !5956
  %arraydecay43 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4, i64 0, i64 0, !dbg !5957
  %40 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5958
  %dequant4_mf = getelementptr inbounds %struct.x264_t, %struct.x264_t* %40, i32 0, i32 29, !dbg !5959
  %arrayidx44 = getelementptr inbounds [4 x [16 x i32]*], [4 x [16 x i32]*]* %dequant4_mf, i64 0, i64 1, !dbg !5958
  %41 = load [16 x i32]*, [16 x i32]** %arrayidx44, align 8, !dbg !5958
  %42 = load i32, i32* %i_qp, align 4, !dbg !5960
  call void %39(i16* %arraydecay43, [16 x i32]* %41, i32 %42), !dbg !5954
  %43 = load %struct.x264_t*, %struct.x264_t** %h.addr, align 8, !dbg !5961
  %dctf45 = getelementptr inbounds %struct.x264_t, %struct.x264_t* %43, i32 0, i32 71, !dbg !5962
  %add4x4_idct = getelementptr inbounds %struct.x264_dct_function_t, %struct.x264_dct_function_t* %dctf45, i32 0, i32 1, !dbg !5963
  %44 = load void (i8*, i16*)*, void (i8*, i16*)** %add4x4_idct, align 8, !dbg !5963
  %45 = load i8*, i8** %p_fdec, align 8, !dbg !5964
  %arraydecay46 = getelementptr inbounds [16 x i16], [16 x i16]* %dct4x4, i64 0, i64 0, !dbg !5965
  call void %44(i8* %45, i16* %arraydecay46), !dbg !5961
  br label %if.end, !dbg !5966

if.end:                                           ; preds = %if.then35, %if.else
  br label %if.end47

if.end47:                                         ; preds = %if.end, %if.then
  ret void, !dbg !5967
}

declare dso_local i32 @x264_quant_8x8_trellis(%struct.x264_t*, i16*, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @idct_dequant_round_2x2_dc(i16* %ref, i16* %dct, [16 x i32]* %dequant_mf, i32 %i_qp) #0 !dbg !5968 {
entry:
  %ref.addr = alloca i16*, align 8
  %dct.addr = alloca i16*, align 8
  %dequant_mf.addr = alloca [16 x i32]*, align 8
  %i_qp.addr = alloca i32, align 4
  %out = alloca [4 x i16], align 2
  store i16* %ref, i16** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %ref.addr, metadata !5971, metadata !DIExpression()), !dbg !5972
  store i16* %dct, i16** %dct.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dct.addr, metadata !5973, metadata !DIExpression()), !dbg !5974
  store [16 x i32]* %dequant_mf, [16 x i32]** %dequant_mf.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i32]** %dequant_mf.addr, metadata !5975, metadata !DIExpression()), !dbg !5976
  store i32 %i_qp, i32* %i_qp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_qp.addr, metadata !5977, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.declare(metadata [4 x i16]* %out, metadata !5979, metadata !DIExpression()), !dbg !5980
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %out, i64 0, i64 0, !dbg !5981
  %0 = load i16*, i16** %dct.addr, align 8, !dbg !5982
  %1 = load [16 x i32]*, [16 x i32]** %dequant_mf.addr, align 8, !dbg !5983
  %2 = load i32, i32* %i_qp.addr, align 4, !dbg !5984
  call void @idct_dequant_2x2_dconly(i16* %arraydecay, i16* %0, [16 x i32]* %1, i32 %2), !dbg !5985
  %3 = load i16*, i16** %ref.addr, align 8, !dbg !5986
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 0, !dbg !5986
  %4 = load i16, i16* %arrayidx, align 2, !dbg !5986
  %conv = sext i16 %4 to i32, !dbg !5986
  %arrayidx1 = getelementptr inbounds [4 x i16], [4 x i16]* %out, i64 0, i64 0, !dbg !5987
  %5 = load i16, i16* %arrayidx1, align 2, !dbg !5987
  %conv2 = sext i16 %5 to i32, !dbg !5987
  %add = add nsw i32 %conv2, 32, !dbg !5988
  %xor = xor i32 %conv, %add, !dbg !5989
  %6 = load i16*, i16** %ref.addr, align 8, !dbg !5990
  %arrayidx3 = getelementptr inbounds i16, i16* %6, i64 1, !dbg !5990
  %7 = load i16, i16* %arrayidx3, align 2, !dbg !5990
  %conv4 = sext i16 %7 to i32, !dbg !5990
  %arrayidx5 = getelementptr inbounds [4 x i16], [4 x i16]* %out, i64 0, i64 1, !dbg !5991
  %8 = load i16, i16* %arrayidx5, align 2, !dbg !5991
  %conv6 = sext i16 %8 to i32, !dbg !5991
  %add7 = add nsw i32 %conv6, 32, !dbg !5992
  %xor8 = xor i32 %conv4, %add7, !dbg !5993
  %or = or i32 %xor, %xor8, !dbg !5994
  %9 = load i16*, i16** %ref.addr, align 8, !dbg !5995
  %arrayidx9 = getelementptr inbounds i16, i16* %9, i64 2, !dbg !5995
  %10 = load i16, i16* %arrayidx9, align 2, !dbg !5995
  %conv10 = sext i16 %10 to i32, !dbg !5995
  %arrayidx11 = getelementptr inbounds [4 x i16], [4 x i16]* %out, i64 0, i64 2, !dbg !5996
  %11 = load i16, i16* %arrayidx11, align 2, !dbg !5996
  %conv12 = sext i16 %11 to i32, !dbg !5996
  %add13 = add nsw i32 %conv12, 32, !dbg !5997
  %xor14 = xor i32 %conv10, %add13, !dbg !5998
  %or15 = or i32 %or, %xor14, !dbg !5999
  %12 = load i16*, i16** %ref.addr, align 8, !dbg !6000
  %arrayidx16 = getelementptr inbounds i16, i16* %12, i64 3, !dbg !6000
  %13 = load i16, i16* %arrayidx16, align 2, !dbg !6000
  %conv17 = sext i16 %13 to i32, !dbg !6000
  %arrayidx18 = getelementptr inbounds [4 x i16], [4 x i16]* %out, i64 0, i64 3, !dbg !6001
  %14 = load i16, i16* %arrayidx18, align 2, !dbg !6001
  %conv19 = sext i16 %14 to i32, !dbg !6001
  %add20 = add nsw i32 %conv19, 32, !dbg !6002
  %xor21 = xor i32 %conv17, %add20, !dbg !6003
  %or22 = or i32 %or15, %xor21, !dbg !6004
  %shr = ashr i32 %or22, 6, !dbg !6005
  ret i32 %shr, !dbg !6006
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!221, !222, !223}
!llvm.ident = !{!224}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "block_idx_xy_fenc", scope: !2, file: !6, line: 223, type: !200, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !136, globals: !184, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "x264_src/encoder/macroblock.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !15, !22, !26, !36, !49, !63, !77, !86, !108, !116}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cabac_ctx_block_cat_e", file: !6, line: 258, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "x264_src/common/macroblock.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14}
!9 = !DIEnumerator(name: "DCT_LUMA_DC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DCT_LUMA_AC", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DCT_LUMA_4x4", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "DCT_CHROMA_DC", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "DCT_CHROMA_AC", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "DCT_LUMA_8x8", value: 5, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cqm4_e", file: !16, line: 39, baseType: !7, size: 32, elements: !17)
!16 = !DIFile(filename: "x264_src/common/set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!17 = !{!18, !19, !20, !21}
!18 = !DIEnumerator(name: "CQM_4IY", value: 0, isUnsigned: true)
!19 = !DIEnumerator(name: "CQM_4PY", value: 1, isUnsigned: true)
!20 = !DIEnumerator(name: "CQM_4IC", value: 2, isUnsigned: true)
!21 = !DIEnumerator(name: "CQM_4PC", value: 3, isUnsigned: true)
!22 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cqm8_e", file: !16, line: 46, baseType: !7, size: 32, elements: !23)
!23 = !{!24, !25}
!24 = !DIEnumerator(name: "CQM_8IY", value: 0, isUnsigned: true)
!25 = !DIEnumerator(name: "CQM_8PY", value: 1, isUnsigned: true)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "intra_chroma_pred_e", file: !27, line: 31, baseType: !7, size: 32, elements: !28)
!27 = !DIFile(filename: "x264_src/common/predict.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!28 = !{!29, !30, !31, !32, !33, !34, !35}
!29 = !DIEnumerator(name: "I_PRED_CHROMA_DC", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "I_PRED_CHROMA_H", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "I_PRED_CHROMA_V", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "I_PRED_CHROMA_P", value: 3, isUnsigned: true)
!33 = !DIEnumerator(name: "I_PRED_CHROMA_DC_LEFT", value: 4, isUnsigned: true)
!34 = !DIEnumerator(name: "I_PRED_CHROMA_DC_TOP", value: 5, isUnsigned: true)
!35 = !DIEnumerator(name: "I_PRED_CHROMA_DC_128", value: 6, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !37, line: 30, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "x264_src/common/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48}
!39 = !DIEnumerator(name: "PIXEL_16x16", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "PIXEL_16x8", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "PIXEL_8x16", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "PIXEL_8x8", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "PIXEL_8x4", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "PIXEL_4x8", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "PIXEL_4x4", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "PIXEL_4x2", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "PIXEL_2x4", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "PIXEL_2x2", value: 9, isUnsigned: true)
!49 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "intra4x4_pred_e", file: !27, line: 65, baseType: !7, size: 32, elements: !50)
!50 = !{!51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62}
!51 = !DIEnumerator(name: "I_PRED_4x4_V", value: 0, isUnsigned: true)
!52 = !DIEnumerator(name: "I_PRED_4x4_H", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "I_PRED_4x4_DC", value: 2, isUnsigned: true)
!54 = !DIEnumerator(name: "I_PRED_4x4_DDL", value: 3, isUnsigned: true)
!55 = !DIEnumerator(name: "I_PRED_4x4_DDR", value: 4, isUnsigned: true)
!56 = !DIEnumerator(name: "I_PRED_4x4_VR", value: 5, isUnsigned: true)
!57 = !DIEnumerator(name: "I_PRED_4x4_HD", value: 6, isUnsigned: true)
!58 = !DIEnumerator(name: "I_PRED_4x4_VL", value: 7, isUnsigned: true)
!59 = !DIEnumerator(name: "I_PRED_4x4_HU", value: 8, isUnsigned: true)
!60 = !DIEnumerator(name: "I_PRED_4x4_DC_LEFT", value: 9, isUnsigned: true)
!61 = !DIEnumerator(name: "I_PRED_4x4_DC_TOP", value: 10, isUnsigned: true)
!62 = !DIEnumerator(name: "I_PRED_4x4_DC_128", value: 11, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "intra8x8_pred_e", file: !27, line: 92, baseType: !7, size: 32, elements: !64)
!64 = !{!65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76}
!65 = !DIEnumerator(name: "I_PRED_8x8_V", value: 0, isUnsigned: true)
!66 = !DIEnumerator(name: "I_PRED_8x8_H", value: 1, isUnsigned: true)
!67 = !DIEnumerator(name: "I_PRED_8x8_DC", value: 2, isUnsigned: true)
!68 = !DIEnumerator(name: "I_PRED_8x8_DDL", value: 3, isUnsigned: true)
!69 = !DIEnumerator(name: "I_PRED_8x8_DDR", value: 4, isUnsigned: true)
!70 = !DIEnumerator(name: "I_PRED_8x8_VR", value: 5, isUnsigned: true)
!71 = !DIEnumerator(name: "I_PRED_8x8_HD", value: 6, isUnsigned: true)
!72 = !DIEnumerator(name: "I_PRED_8x8_VL", value: 7, isUnsigned: true)
!73 = !DIEnumerator(name: "I_PRED_8x8_HU", value: 8, isUnsigned: true)
!74 = !DIEnumerator(name: "I_PRED_8x8_DC_LEFT", value: 9, isUnsigned: true)
!75 = !DIEnumerator(name: "I_PRED_8x8_DC_TOP", value: 10, isUnsigned: true)
!76 = !DIEnumerator(name: "I_PRED_8x8_DC_128", value: 11, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "intra16x16_pred_e", file: !27, line: 48, baseType: !7, size: 32, elements: !78)
!78 = !{!79, !80, !81, !82, !83, !84, !85}
!79 = !DIEnumerator(name: "I_PRED_16x16_V", value: 0, isUnsigned: true)
!80 = !DIEnumerator(name: "I_PRED_16x16_H", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "I_PRED_16x16_DC", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "I_PRED_16x16_P", value: 3, isUnsigned: true)
!83 = !DIEnumerator(name: "I_PRED_16x16_DC_LEFT", value: 4, isUnsigned: true)
!84 = !DIEnumerator(name: "I_PRED_16x16_DC_TOP", value: 5, isUnsigned: true)
!85 = !DIEnumerator(name: "I_PRED_16x16_DC_128", value: 6, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mb_class_e", file: !6, line: 66, baseType: !7, size: 32, elements: !87)
!87 = !{!88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107}
!88 = !DIEnumerator(name: "I_4x4", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "I_8x8", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "I_16x16", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "I_PCM", value: 3, isUnsigned: true)
!92 = !DIEnumerator(name: "P_L0", value: 4, isUnsigned: true)
!93 = !DIEnumerator(name: "P_8x8", value: 5, isUnsigned: true)
!94 = !DIEnumerator(name: "P_SKIP", value: 6, isUnsigned: true)
!95 = !DIEnumerator(name: "B_DIRECT", value: 7, isUnsigned: true)
!96 = !DIEnumerator(name: "B_L0_L0", value: 8, isUnsigned: true)
!97 = !DIEnumerator(name: "B_L0_L1", value: 9, isUnsigned: true)
!98 = !DIEnumerator(name: "B_L0_BI", value: 10, isUnsigned: true)
!99 = !DIEnumerator(name: "B_L1_L0", value: 11, isUnsigned: true)
!100 = !DIEnumerator(name: "B_L1_L1", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "B_L1_BI", value: 13, isUnsigned: true)
!102 = !DIEnumerator(name: "B_BI_L0", value: 14, isUnsigned: true)
!103 = !DIEnumerator(name: "B_BI_L1", value: 15, isUnsigned: true)
!104 = !DIEnumerator(name: "B_BI_BI", value: 16, isUnsigned: true)
!105 = !DIEnumerator(name: "B_8x8", value: 17, isUnsigned: true)
!106 = !DIEnumerator(name: "B_SKIP", value: 18, isUnsigned: true)
!107 = !DIEnumerator(name: "X264_MBTYPE_MAX", value: 19, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "macroblock_position_e", file: !6, line: 33, baseType: !7, size: 32, elements: !109)
!109 = !{!110, !111, !112, !113, !114, !115}
!110 = !DIEnumerator(name: "MB_LEFT", value: 1, isUnsigned: true)
!111 = !DIEnumerator(name: "MB_TOP", value: 2, isUnsigned: true)
!112 = !DIEnumerator(name: "MB_TOPRIGHT", value: 4, isUnsigned: true)
!113 = !DIEnumerator(name: "MB_TOPLEFT", value: 8, isUnsigned: true)
!114 = !DIEnumerator(name: "MB_PRIVATE", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "ALL_NEIGHBORS", value: 15, isUnsigned: true)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mb_partition_e", file: !6, line: 117, baseType: !7, size: 32, elements: !117)
!117 = !{!118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!118 = !DIEnumerator(name: "D_L0_4x4", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "D_L0_8x4", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "D_L0_4x8", value: 2, isUnsigned: true)
!121 = !DIEnumerator(name: "D_L0_8x8", value: 3, isUnsigned: true)
!122 = !DIEnumerator(name: "D_L1_4x4", value: 4, isUnsigned: true)
!123 = !DIEnumerator(name: "D_L1_8x4", value: 5, isUnsigned: true)
!124 = !DIEnumerator(name: "D_L1_4x8", value: 6, isUnsigned: true)
!125 = !DIEnumerator(name: "D_L1_8x8", value: 7, isUnsigned: true)
!126 = !DIEnumerator(name: "D_BI_4x4", value: 8, isUnsigned: true)
!127 = !DIEnumerator(name: "D_BI_8x4", value: 9, isUnsigned: true)
!128 = !DIEnumerator(name: "D_BI_4x8", value: 10, isUnsigned: true)
!129 = !DIEnumerator(name: "D_BI_8x8", value: 11, isUnsigned: true)
!130 = !DIEnumerator(name: "D_DIRECT_8x8", value: 12, isUnsigned: true)
!131 = !DIEnumerator(name: "D_8x8", value: 13, isUnsigned: true)
!132 = !DIEnumerator(name: "D_16x8", value: 14, isUnsigned: true)
!133 = !DIEnumerator(name: "D_8x16", value: 15, isUnsigned: true)
!134 = !DIEnumerator(name: "D_16x16", value: 16, isUnsigned: true)
!135 = !DIEnumerator(name: "X264_PARTTYPE_MAX", value: 17, isUnsigned: true)
!136 = !{!137, !155, !168, !171}
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_union16_t", file: !139, line: 88, baseType: !140)
!139 = !DIFile(filename: "x264_src/common/common.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!140 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !139, line: 88, size: 16, elements: !141)
!141 = !{!142, !148}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !140, file: !139, line: 88, baseType: !143, size: 16)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !144, line: 25, baseType: !145)
!144 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !146, line: 40, baseType: !147)
!146 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!147 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !140, file: !139, line: 88, baseType: !149, size: 16)
!149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 16, elements: !153)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !144, line: 24, baseType: !151)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !146, line: 38, baseType: !152)
!152 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!153 = !{!154}
!154 = !DISubrange(count: 2)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_union32_t", file: !139, line: 89, baseType: !157)
!157 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !139, line: 89, size: 32, elements: !158)
!158 = !{!159, !162, !164}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !157, file: !139, line: 89, baseType: !160, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !144, line: 26, baseType: !161)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !146, line: 42, baseType: !7)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !157, file: !139, line: 89, baseType: !163, size: 32)
!163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 32, elements: !153)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !157, file: !139, line: 89, baseType: !165, size: 32)
!165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 32, elements: !166)
!166 = !{!167}
!167 = !DISubrange(count: 4)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !144, line: 27, baseType: !169)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !146, line: 45, baseType: !170)
!170 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_union64_t", file: !139, line: 90, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !139, line: 90, size: 64, elements: !174)
!174 = !{!175, !176, !178, !180}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !173, file: !139, line: 90, baseType: !168, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !173, file: !139, line: 90, baseType: !177, size: 64)
!177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 64, elements: !153)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !173, file: !139, line: 90, baseType: !179, size: 64)
!179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 64, elements: !166)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !173, file: !139, line: 90, baseType: !181, size: 64)
!181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !182)
!182 = !{!183}
!183 = !DISubrange(count: 8)
!184 = !{!0, !185, !191, !198, !202, !204, !206, !208, !213, !219}
!185 = !DIGlobalVariableExpression(var: !186, expr: !DIExpression())
!186 = distinct !DIGlobalVariable(name: "block_idx_xy_fdec", scope: !2, file: !6, line: 234, type: !187, isLocal: true, isDefinition: true)
!187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 256, elements: !189)
!188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!189 = !{!190}
!190 = !DISubrange(count: 16)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "x264_scan8", scope: !2, file: !139, line: 125, type: !193, isLocal: true, isDefinition: true)
!193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 864, elements: !196)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!196 = !{!197}
!197 = !DISubrange(count: 27)
!198 = !DIGlobalVariableExpression(var: !199, expr: !DIExpression())
!199 = distinct !DIGlobalVariable(name: "block_idx_x", scope: !2, file: !6, line: 200, type: !200, isLocal: true, isDefinition: true)
!200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 128, elements: !189)
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!202 = !DIGlobalVariableExpression(var: !203, expr: !DIExpression())
!203 = distinct !DIGlobalVariable(name: "block_idx_y", scope: !2, file: !6, line: 204, type: !200, isLocal: true, isDefinition: true)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "block_idx_yx_1d", scope: !2, file: !6, line: 219, type: !200, isLocal: true, isDefinition: true)
!206 = !DIGlobalVariableExpression(var: !207, expr: !DIExpression())
!207 = distinct !DIGlobalVariable(name: "block_idx_xy_1d", scope: !2, file: !6, line: 215, type: !200, isLocal: true, isDefinition: true)
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "x264_pred_i4x4_neighbors", scope: !2, file: !6, line: 45, type: !210, isLocal: true, isDefinition: true)
!210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 96, elements: !211)
!211 = !{!212}
!212 = !DISubrange(count: 12)
!213 = !DIGlobalVariableExpression(var: !214, expr: !DIExpression())
!214 = distinct !DIGlobalVariable(name: "x264_dct8_weight2_tab", scope: !2, file: !215, line: 73, type: !216, isLocal: true, isDefinition: true)
!215 = !DIFile(filename: "x264_src/common/dct.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 1024, elements: !217)
!217 = !{!218}
!218 = !DISubrange(count: 64)
!219 = !DIGlobalVariableExpression(var: !220, expr: !DIExpression())
!220 = distinct !DIGlobalVariable(name: "x264_dct4_weight2_tab", scope: !2, file: !215, line: 59, type: !187, isLocal: true, isDefinition: true)
!221 = !{i32 7, !"Dwarf Version", i32 4}
!222 = !{i32 2, !"Debug Info Version", i32 3}
!223 = !{i32 1, !"wchar_size", i32 4}
!224 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!225 = distinct !DISubprogram(name: "x264_mb_encode_i4x4", scope: !3, file: !3, line: 110, type: !226, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!226 = !DISubroutineType(types: !227)
!227 = !{null, !228, !195, !195}
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_t", file: !230, line: 46, baseType: !231)
!230 = !DIFile(filename: "x264_src/x264.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_t", file: !139, line: 381, size: 266752, elements: !232)
!232 = !{!233, !397, !401, !402, !403, !404, !405, !406, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !541, !543, !570, !572, !573, !574, !578, !582, !583, !584, !588, !592, !593, !594, !599, !602, !603, !680, !697, !858, !859, !860, !861, !865, !866, !867, !868, !869, !870, !871, !886, !1079, !1083, !1144, !1147, !1149, !1150, !1151, !1154, !1159, !1167, !1168, !1174, !1176, !1181, !1256, !1342, !1385, !1407, !1456, !1485}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !231, file: !139, line: 384, baseType: !234, size: 5632)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_param_t", file: !230, line: 376, baseType: !235)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_param_t", file: !230, line: 176, size: 5632, elements: !236)
!236 = !{!237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !280, !282, !283, !284, !285, !287, !288, !302, !303, !304, !305, !306, !335, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !235, file: !230, line: 179, baseType: !7, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "i_threads", scope: !235, file: !230, line: 180, baseType: !195, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "b_sliced_threads", scope: !235, file: !230, line: 181, baseType: !195, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "b_deterministic", scope: !235, file: !230, line: 182, baseType: !195, size: 32, offset: 96)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "i_sync_lookahead", scope: !235, file: !230, line: 183, baseType: !195, size: 32, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "i_width", scope: !235, file: !230, line: 186, baseType: !195, size: 32, offset: 160)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "i_height", scope: !235, file: !230, line: 187, baseType: !195, size: 32, offset: 192)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "i_csp", scope: !235, file: !230, line: 188, baseType: !195, size: 32, offset: 224)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "i_level_idc", scope: !235, file: !230, line: 189, baseType: !195, size: 32, offset: 256)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_total", scope: !235, file: !230, line: 190, baseType: !195, size: 32, offset: 288)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "i_nal_hrd", scope: !235, file: !230, line: 198, baseType: !195, size: 32, offset: 320)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "vui", scope: !235, file: !230, line: 215, baseType: !249, size: 288, offset: 352)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !235, file: !230, line: 200, size: 288, elements: !250)
!250 = !{!251, !252, !253, !254, !255, !256, !257, !258, !259}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "i_sar_height", scope: !249, file: !230, line: 203, baseType: !195, size: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "i_sar_width", scope: !249, file: !230, line: 204, baseType: !195, size: 32, offset: 32)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "i_overscan", scope: !249, file: !230, line: 206, baseType: !195, size: 32, offset: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "i_vidformat", scope: !249, file: !230, line: 209, baseType: !195, size: 32, offset: 96)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "b_fullrange", scope: !249, file: !230, line: 210, baseType: !195, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "i_colorprim", scope: !249, file: !230, line: 211, baseType: !195, size: 32, offset: 160)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "i_transfer", scope: !249, file: !230, line: 212, baseType: !195, size: 32, offset: 192)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "i_colmatrix", scope: !249, file: !230, line: 213, baseType: !195, size: 32, offset: 224)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_loc", scope: !249, file: !230, line: 214, baseType: !195, size: 32, offset: 256)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_reference", scope: !235, file: !230, line: 218, baseType: !195, size: 32, offset: 640)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "i_keyint_max", scope: !235, file: !230, line: 219, baseType: !195, size: 32, offset: 672)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "i_keyint_min", scope: !235, file: !230, line: 220, baseType: !195, size: 32, offset: 704)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "i_scenecut_threshold", scope: !235, file: !230, line: 221, baseType: !195, size: 32, offset: 736)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "b_intra_refresh", scope: !235, file: !230, line: 222, baseType: !195, size: 32, offset: 768)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe", scope: !235, file: !230, line: 224, baseType: !195, size: 32, offset: 800)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_adaptive", scope: !235, file: !230, line: 225, baseType: !195, size: 32, offset: 832)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_bias", scope: !235, file: !230, line: 226, baseType: !195, size: 32, offset: 864)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_pyramid", scope: !235, file: !230, line: 227, baseType: !195, size: 32, offset: 896)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "b_deblocking_filter", scope: !235, file: !230, line: 229, baseType: !195, size: 32, offset: 928)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "i_deblocking_filter_alphac0", scope: !235, file: !230, line: 230, baseType: !195, size: 32, offset: 960)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "i_deblocking_filter_beta", scope: !235, file: !230, line: 231, baseType: !195, size: 32, offset: 992)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "b_cabac", scope: !235, file: !230, line: 233, baseType: !195, size: 32, offset: 1024)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "i_cabac_init_idc", scope: !235, file: !230, line: 234, baseType: !195, size: 32, offset: 1056)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "b_interlaced", scope: !235, file: !230, line: 236, baseType: !195, size: 32, offset: 1088)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "b_constrained_intra", scope: !235, file: !230, line: 237, baseType: !195, size: 32, offset: 1120)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "i_cqm_preset", scope: !235, file: !230, line: 239, baseType: !195, size: 32, offset: 1152)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "psz_cqm_file", scope: !235, file: !230, line: 240, baseType: !278, size: 64, offset: 1216)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4iy", scope: !235, file: !230, line: 241, baseType: !281, size: 128, offset: 1280)
!281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !189)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4ic", scope: !235, file: !230, line: 242, baseType: !281, size: 128, offset: 1408)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4py", scope: !235, file: !230, line: 243, baseType: !281, size: 128, offset: 1536)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4pc", scope: !235, file: !230, line: 244, baseType: !281, size: 128, offset: 1664)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_8iy", scope: !235, file: !230, line: 245, baseType: !286, size: 512, offset: 1792)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 512, elements: !217)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_8py", scope: !235, file: !230, line: 246, baseType: !286, size: 512, offset: 2304)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "pf_log", scope: !235, file: !230, line: 249, baseType: !289, size: 64, offset: 2816)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DISubroutineType(types: !291)
!291 = !{null, !292, !195, !293, !295}
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !297)
!297 = !{!298, !299, !300, !301}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !296, file: !3, baseType: !7, size: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !296, file: !3, baseType: !7, size: 32, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !296, file: !3, baseType: !292, size: 64, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !296, file: !3, baseType: !292, size: 64, offset: 128)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "p_log_private", scope: !235, file: !230, line: 250, baseType: !292, size: 64, offset: 2880)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "i_log_level", scope: !235, file: !230, line: 251, baseType: !195, size: 32, offset: 2944)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "b_visualize", scope: !235, file: !230, line: 252, baseType: !195, size: 32, offset: 2976)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "psz_dump_yuv", scope: !235, file: !230, line: 253, baseType: !278, size: 64, offset: 3008)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "analyse", scope: !235, file: !230, line: 287, baseType: !307, size: 800, offset: 3072)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !235, file: !230, line: 256, size: 800, elements: !308)
!308 = !{!309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !329, !330, !331, !333, !334}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "intra", scope: !307, file: !230, line: 258, baseType: !7, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "inter", scope: !307, file: !230, line: 259, baseType: !7, size: 32, offset: 32)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "b_transform_8x8", scope: !307, file: !230, line: 261, baseType: !195, size: 32, offset: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "i_weighted_pred", scope: !307, file: !230, line: 262, baseType: !195, size: 32, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "b_weighted_bipred", scope: !307, file: !230, line: 263, baseType: !195, size: 32, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "i_direct_mv_pred", scope: !307, file: !230, line: 264, baseType: !195, size: 32, offset: 160)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_qp_offset", scope: !307, file: !230, line: 265, baseType: !195, size: 32, offset: 192)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "i_me_method", scope: !307, file: !230, line: 267, baseType: !195, size: 32, offset: 224)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "i_me_range", scope: !307, file: !230, line: 268, baseType: !195, size: 32, offset: 256)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "i_mv_range", scope: !307, file: !230, line: 269, baseType: !195, size: 32, offset: 288)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "i_mv_range_thread", scope: !307, file: !230, line: 270, baseType: !195, size: 32, offset: 320)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "i_subpel_refine", scope: !307, file: !230, line: 271, baseType: !195, size: 32, offset: 352)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "b_chroma_me", scope: !307, file: !230, line: 272, baseType: !195, size: 32, offset: 384)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "b_mixed_references", scope: !307, file: !230, line: 273, baseType: !195, size: 32, offset: 416)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "i_trellis", scope: !307, file: !230, line: 274, baseType: !195, size: 32, offset: 448)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "b_fast_pskip", scope: !307, file: !230, line: 275, baseType: !195, size: 32, offset: 480)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "b_dct_decimate", scope: !307, file: !230, line: 276, baseType: !195, size: 32, offset: 512)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "i_noise_reduction", scope: !307, file: !230, line: 277, baseType: !195, size: 32, offset: 544)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "f_psy_rd", scope: !307, file: !230, line: 278, baseType: !328, size: 32, offset: 576)
!328 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "f_psy_trellis", scope: !307, file: !230, line: 279, baseType: !328, size: 32, offset: 608)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "b_psy", scope: !307, file: !230, line: 280, baseType: !195, size: 32, offset: 640)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "i_luma_deadzone", scope: !307, file: !230, line: 283, baseType: !332, size: 64, offset: 672)
!332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 64, elements: !153)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "b_psnr", scope: !307, file: !230, line: 285, baseType: !195, size: 32, offset: 736)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "b_ssim", scope: !307, file: !230, line: 286, baseType: !195, size: 32, offset: 768)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !235, file: !230, line: 327, baseType: !336, size: 1152, offset: 3904)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !235, file: !230, line: 290, size: 1152, elements: !337)
!337 = !{!338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !375, !376}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "i_rc_method", scope: !336, file: !230, line: 292, baseType: !195, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_constant", scope: !336, file: !230, line: 294, baseType: !195, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_min", scope: !336, file: !230, line: 295, baseType: !195, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_max", scope: !336, file: !230, line: 296, baseType: !195, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_step", scope: !336, file: !230, line: 297, baseType: !195, size: 32, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "i_bitrate", scope: !336, file: !230, line: 299, baseType: !195, size: 32, offset: 160)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "f_rf_constant", scope: !336, file: !230, line: 300, baseType: !328, size: 32, offset: 192)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "f_rf_constant_max", scope: !336, file: !230, line: 301, baseType: !328, size: 32, offset: 224)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "f_rate_tolerance", scope: !336, file: !230, line: 302, baseType: !328, size: 32, offset: 256)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "i_vbv_max_bitrate", scope: !336, file: !230, line: 303, baseType: !195, size: 32, offset: 288)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "i_vbv_buffer_size", scope: !336, file: !230, line: 304, baseType: !195, size: 32, offset: 320)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "f_vbv_buffer_init", scope: !336, file: !230, line: 305, baseType: !328, size: 32, offset: 352)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "f_ip_factor", scope: !336, file: !230, line: 306, baseType: !328, size: 32, offset: 384)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "f_pb_factor", scope: !336, file: !230, line: 307, baseType: !328, size: 32, offset: 416)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "i_aq_mode", scope: !336, file: !230, line: 309, baseType: !195, size: 32, offset: 448)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "f_aq_strength", scope: !336, file: !230, line: 310, baseType: !328, size: 32, offset: 480)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "b_mb_tree", scope: !336, file: !230, line: 311, baseType: !195, size: 32, offset: 512)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "i_lookahead", scope: !336, file: !230, line: 312, baseType: !195, size: 32, offset: 544)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "b_stat_write", scope: !336, file: !230, line: 315, baseType: !195, size: 32, offset: 576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "psz_stat_out", scope: !336, file: !230, line: 316, baseType: !278, size: 64, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "b_stat_read", scope: !336, file: !230, line: 317, baseType: !195, size: 32, offset: 704)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "psz_stat_in", scope: !336, file: !230, line: 318, baseType: !278, size: 64, offset: 768)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "f_qcompress", scope: !336, file: !230, line: 321, baseType: !328, size: 32, offset: 832)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "f_qblur", scope: !336, file: !230, line: 322, baseType: !328, size: 32, offset: 864)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "f_complexity_blur", scope: !336, file: !230, line: 323, baseType: !328, size: 32, offset: 896)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "zones", scope: !336, file: !230, line: 324, baseType: !364, size: 64, offset: 960)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_zone_t", file: !230, line: 174, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !230, line: 167, size: 256, elements: !367)
!367 = !{!368, !369, !370, !371, !372, !373}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "i_start", scope: !366, file: !230, line: 169, baseType: !195, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "i_end", scope: !366, file: !230, line: 169, baseType: !195, size: 32, offset: 32)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "b_force_qp", scope: !366, file: !230, line: 170, baseType: !195, size: 32, offset: 64)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp", scope: !366, file: !230, line: 171, baseType: !195, size: 32, offset: 96)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "f_bitrate_factor", scope: !366, file: !230, line: 172, baseType: !328, size: 32, offset: 128)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !366, file: !230, line: 173, baseType: !374, size: 64, offset: 192)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "i_zones", scope: !336, file: !230, line: 325, baseType: !195, size: 32, offset: 1024)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "psz_zones", scope: !336, file: !230, line: 326, baseType: !278, size: 64, offset: 1088)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "b_aud", scope: !235, file: !230, line: 330, baseType: !195, size: 32, offset: 5056)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "b_repeat_headers", scope: !235, file: !230, line: 331, baseType: !195, size: 32, offset: 5088)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "b_annexb", scope: !235, file: !230, line: 332, baseType: !195, size: 32, offset: 5120)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "i_sps_id", scope: !235, file: !230, line: 334, baseType: !195, size: 32, offset: 5152)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "b_vfr_input", scope: !235, file: !230, line: 335, baseType: !195, size: 32, offset: 5184)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "i_fps_num", scope: !235, file: !230, line: 336, baseType: !160, size: 32, offset: 5216)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "i_fps_den", scope: !235, file: !230, line: 337, baseType: !160, size: 32, offset: 5248)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "i_timebase_num", scope: !235, file: !230, line: 338, baseType: !160, size: 32, offset: 5280)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "i_timebase_den", scope: !235, file: !230, line: 339, baseType: !160, size: 32, offset: 5312)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "b_dts_compress", scope: !235, file: !230, line: 340, baseType: !195, size: 32, offset: 5344)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "b_tff", scope: !235, file: !230, line: 344, baseType: !195, size: 32, offset: 5376)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "b_pic_struct", scope: !235, file: !230, line: 356, baseType: !195, size: 32, offset: 5408)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "b_fake_interlaced", scope: !235, file: !230, line: 364, baseType: !195, size: 32, offset: 5440)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "i_slice_max_size", scope: !235, file: !230, line: 367, baseType: !195, size: 32, offset: 5472)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "i_slice_max_mbs", scope: !235, file: !230, line: 368, baseType: !195, size: 32, offset: 5504)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "i_slice_count", scope: !235, file: !230, line: 369, baseType: !195, size: 32, offset: 5536)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "param_free", scope: !235, file: !230, line: 375, baseType: !394, size: 64, offset: 5568)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DISubroutineType(types: !396)
!396 = !{null, !292}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !231, file: !139, line: 386, baseType: !398, size: 8256, offset: 5632)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 8256, elements: !399)
!399 = !{!400}
!400 = !DISubrange(count: 129)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "thread_handle", scope: !231, file: !139, line: 387, baseType: !195, size: 32, offset: 13888)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "b_thread_active", scope: !231, file: !139, line: 388, baseType: !195, size: 32, offset: 13920)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "i_thread_phase", scope: !231, file: !139, line: 389, baseType: !195, size: 32, offset: 13952)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "i_threadslice_start", scope: !231, file: !139, line: 390, baseType: !195, size: 32, offset: 13984)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "i_threadslice_end", scope: !231, file: !139, line: 391, baseType: !195, size: 32, offset: 14016)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !231, file: !139, line: 402, baseType: !407, size: 576, offset: 14080)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !231, file: !139, line: 394, size: 576, elements: !408)
!408 = !{!409, !410, !411, !421, !422, !423}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "i_nal", scope: !407, file: !139, line: 396, baseType: !195, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "i_nals_allocated", scope: !407, file: !139, line: 397, baseType: !195, size: 32, offset: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "nal", scope: !407, file: !139, line: 398, baseType: !412, size: 64, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_nal_t", file: !230, line: 604, baseType: !414)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !230, line: 593, size: 192, elements: !415)
!415 = !{!416, !417, !418, !419}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "i_ref_idc", scope: !414, file: !230, line: 595, baseType: !195, size: 32)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "i_type", scope: !414, file: !230, line: 596, baseType: !195, size: 32, offset: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "i_payload", scope: !414, file: !230, line: 599, baseType: !195, size: 32, offset: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "p_payload", scope: !414, file: !230, line: 603, baseType: !420, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "i_bitstream", scope: !407, file: !139, line: 399, baseType: !195, size: 32, offset: 128)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "p_bitstream", scope: !407, file: !139, line: 400, baseType: !420, size: 64, offset: 192)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "bs", scope: !407, file: !139, line: 401, baseType: !424, size: 320, offset: 256)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "bs_t", file: !425, line: 56, baseType: !426)
!425 = !DIFile(filename: "x264_src/common/bs.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bs_s", file: !425, line: 47, size: 320, elements: !427)
!427 = !{!428, !429, !430, !431, !435, !436}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "p_start", scope: !426, file: !425, line: 49, baseType: !420, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !426, file: !425, line: 50, baseType: !420, size: 64, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "p_end", scope: !426, file: !425, line: 51, baseType: !420, size: 64, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bits", scope: !426, file: !425, line: 53, baseType: !432, size: 64, offset: 192)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !433, line: 87, baseType: !434)
!433 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!434 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "i_left", scope: !426, file: !425, line: 54, baseType: !195, size: 32, offset: 256)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "i_bits_encoded", scope: !426, file: !425, line: 55, baseType: !195, size: 32, offset: 288)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "nal_buffer", scope: !231, file: !139, line: 404, baseType: !420, size: 64, offset: 14656)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "nal_buffer_size", scope: !231, file: !139, line: 405, baseType: !195, size: 32, offset: 14720)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame", scope: !231, file: !139, line: 410, baseType: !195, size: 32, offset: 14752)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_num", scope: !231, file: !139, line: 411, baseType: !195, size: 32, offset: 14784)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "i_thread_frames", scope: !231, file: !139, line: 413, baseType: !195, size: 32, offset: 14816)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "i_nal_type", scope: !231, file: !139, line: 415, baseType: !195, size: 32, offset: 14848)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "i_nal_ref_idc", scope: !231, file: !139, line: 416, baseType: !195, size: 32, offset: 14880)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "i_disp_fields", scope: !231, file: !139, line: 418, baseType: !195, size: 32, offset: 14912)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "i_disp_fields_last_frame", scope: !231, file: !139, line: 419, baseType: !195, size: 32, offset: 14944)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "i_prev_duration", scope: !231, file: !139, line: 420, baseType: !195, size: 32, offset: 14976)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "i_coded_fields", scope: !231, file: !139, line: 421, baseType: !195, size: 32, offset: 15008)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_delay", scope: !231, file: !139, line: 422, baseType: !195, size: 32, offset: 15040)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "i_coded_fields_lookahead", scope: !231, file: !139, line: 424, baseType: !195, size: 32, offset: 15072)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_delay_lookahead", scope: !231, file: !139, line: 425, baseType: !195, size: 32, offset: 15104)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "b_queued_intra_refresh", scope: !231, file: !139, line: 427, baseType: !195, size: 32, offset: 15136)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "sps_array", scope: !231, file: !139, line: 430, baseType: !453, size: 10400, offset: 15168)
!453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 10400, elements: !539)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_sps_t", file: !16, line: 154, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 52, size: 10400, elements: !456)
!456 = !{!457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !474, !475, !476, !477, !478, !479, !480, !481, !482, !489, !490, !538}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "i_id", scope: !455, file: !16, line: 54, baseType: !195, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "i_profile_idc", scope: !455, file: !16, line: 56, baseType: !195, size: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "i_level_idc", scope: !455, file: !16, line: 57, baseType: !195, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "b_constraint_set0", scope: !455, file: !16, line: 59, baseType: !195, size: 32, offset: 96)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "b_constraint_set1", scope: !455, file: !16, line: 60, baseType: !195, size: 32, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "b_constraint_set2", scope: !455, file: !16, line: 61, baseType: !195, size: 32, offset: 160)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "i_log2_max_frame_num", scope: !455, file: !16, line: 63, baseType: !195, size: 32, offset: 192)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "i_poc_type", scope: !455, file: !16, line: 65, baseType: !195, size: 32, offset: 224)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "i_log2_max_poc_lsb", scope: !455, file: !16, line: 67, baseType: !195, size: 32, offset: 256)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "b_delta_pic_order_always_zero", scope: !455, file: !16, line: 69, baseType: !195, size: 32, offset: 288)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "i_offset_for_non_ref_pic", scope: !455, file: !16, line: 70, baseType: !195, size: 32, offset: 320)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "i_offset_for_top_to_bottom_field", scope: !455, file: !16, line: 71, baseType: !195, size: 32, offset: 352)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_frames_in_poc_cycle", scope: !455, file: !16, line: 72, baseType: !195, size: 32, offset: 384)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "i_offset_for_ref_frame", scope: !455, file: !16, line: 73, baseType: !471, size: 8192, offset: 416)
!471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 8192, elements: !472)
!472 = !{!473}
!473 = !DISubrange(count: 256)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_frames", scope: !455, file: !16, line: 75, baseType: !195, size: 32, offset: 8608)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "b_gaps_in_frame_num_value_allowed", scope: !455, file: !16, line: 76, baseType: !195, size: 32, offset: 8640)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_width", scope: !455, file: !16, line: 77, baseType: !195, size: 32, offset: 8672)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_height", scope: !455, file: !16, line: 78, baseType: !195, size: 32, offset: 8704)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_mbs_only", scope: !455, file: !16, line: 79, baseType: !195, size: 32, offset: 8736)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "b_mb_adaptive_frame_field", scope: !455, file: !16, line: 80, baseType: !195, size: 32, offset: 8768)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct8x8_inference", scope: !455, file: !16, line: 81, baseType: !195, size: 32, offset: 8800)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "b_crop", scope: !455, file: !16, line: 83, baseType: !195, size: 32, offset: 8832)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !455, file: !16, line: 90, baseType: !483, size: 128, offset: 8864)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !455, file: !16, line: 84, size: 128, elements: !484)
!484 = !{!485, !486, !487, !488}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "i_left", scope: !483, file: !16, line: 86, baseType: !195, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "i_right", scope: !483, file: !16, line: 87, baseType: !195, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "i_top", scope: !483, file: !16, line: 88, baseType: !195, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "i_bottom", scope: !483, file: !16, line: 89, baseType: !195, size: 32, offset: 96)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "b_vui", scope: !455, file: !16, line: 92, baseType: !195, size: 32, offset: 8992)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "vui", scope: !455, file: !16, line: 150, baseType: !491, size: 1344, offset: 9024)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !455, file: !16, line: 93, size: 1344, elements: !492)
!492 = !{!493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !529, !530, !531, !532, !533, !534, !535, !536, !537}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "b_aspect_ratio_info_present", scope: !491, file: !16, line: 95, baseType: !195, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "i_sar_width", scope: !491, file: !16, line: 96, baseType: !195, size: 32, offset: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "i_sar_height", scope: !491, file: !16, line: 97, baseType: !195, size: 32, offset: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "b_overscan_info_present", scope: !491, file: !16, line: 99, baseType: !195, size: 32, offset: 96)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "b_overscan_info", scope: !491, file: !16, line: 100, baseType: !195, size: 32, offset: 128)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "b_signal_type_present", scope: !491, file: !16, line: 102, baseType: !195, size: 32, offset: 160)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "i_vidformat", scope: !491, file: !16, line: 103, baseType: !195, size: 32, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "b_fullrange", scope: !491, file: !16, line: 104, baseType: !195, size: 32, offset: 224)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "b_color_description_present", scope: !491, file: !16, line: 105, baseType: !195, size: 32, offset: 256)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "i_colorprim", scope: !491, file: !16, line: 106, baseType: !195, size: 32, offset: 288)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "i_transfer", scope: !491, file: !16, line: 107, baseType: !195, size: 32, offset: 320)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "i_colmatrix", scope: !491, file: !16, line: 108, baseType: !195, size: 32, offset: 352)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "b_chroma_loc_info_present", scope: !491, file: !16, line: 110, baseType: !195, size: 32, offset: 384)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_loc_top", scope: !491, file: !16, line: 111, baseType: !195, size: 32, offset: 416)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_loc_bottom", scope: !491, file: !16, line: 112, baseType: !195, size: 32, offset: 448)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "b_timing_info_present", scope: !491, file: !16, line: 114, baseType: !195, size: 32, offset: 480)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_units_in_tick", scope: !491, file: !16, line: 115, baseType: !160, size: 32, offset: 512)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "i_time_scale", scope: !491, file: !16, line: 116, baseType: !160, size: 32, offset: 544)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "b_fixed_frame_rate", scope: !491, file: !16, line: 117, baseType: !195, size: 32, offset: 576)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "b_nal_hrd_parameters_present", scope: !491, file: !16, line: 119, baseType: !195, size: 32, offset: 608)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "b_vcl_hrd_parameters_present", scope: !491, file: !16, line: 120, baseType: !195, size: 32, offset: 640)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "hrd", scope: !491, file: !16, line: 137, baseType: !515, size: 384, offset: 672)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !491, file: !16, line: 122, size: 384, elements: !516)
!516 = !{!517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_cnt", scope: !515, file: !16, line: 124, baseType: !195, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "i_bit_rate_scale", scope: !515, file: !16, line: 125, baseType: !195, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_size_scale", scope: !515, file: !16, line: 126, baseType: !195, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "i_bit_rate_value", scope: !515, file: !16, line: 127, baseType: !195, size: 32, offset: 96)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_size_value", scope: !515, file: !16, line: 128, baseType: !195, size: 32, offset: 128)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "i_bit_rate_unscaled", scope: !515, file: !16, line: 129, baseType: !195, size: 32, offset: 160)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_size_unscaled", scope: !515, file: !16, line: 130, baseType: !195, size: 32, offset: 192)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "b_cbr_hrd", scope: !515, file: !16, line: 131, baseType: !195, size: 32, offset: 224)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "i_initial_cpb_removal_delay_length", scope: !515, file: !16, line: 133, baseType: !195, size: 32, offset: 256)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_removal_delay_length", scope: !515, file: !16, line: 134, baseType: !195, size: 32, offset: 288)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "i_dpb_output_delay_length", scope: !515, file: !16, line: 135, baseType: !195, size: 32, offset: 320)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "i_time_offset_length", scope: !515, file: !16, line: 136, baseType: !195, size: 32, offset: 352)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "b_pic_struct_present", scope: !491, file: !16, line: 139, baseType: !195, size: 32, offset: 1056)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "b_bitstream_restriction", scope: !491, file: !16, line: 140, baseType: !195, size: 32, offset: 1088)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "b_motion_vectors_over_pic_boundaries", scope: !491, file: !16, line: 141, baseType: !195, size: 32, offset: 1120)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_bytes_per_pic_denom", scope: !491, file: !16, line: 142, baseType: !195, size: 32, offset: 1152)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_bits_per_mb_denom", scope: !491, file: !16, line: 143, baseType: !195, size: 32, offset: 1184)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "i_log2_max_mv_length_horizontal", scope: !491, file: !16, line: 144, baseType: !195, size: 32, offset: 1216)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "i_log2_max_mv_length_vertical", scope: !491, file: !16, line: 145, baseType: !195, size: 32, offset: 1248)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_reorder_frames", scope: !491, file: !16, line: 146, baseType: !195, size: 32, offset: 1280)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_dec_frame_buffering", scope: !491, file: !16, line: 147, baseType: !195, size: 32, offset: 1312)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "b_qpprime_y_zero_transform_bypass", scope: !455, file: !16, line: 152, baseType: !195, size: 32, offset: 10368)
!539 = !{!540}
!540 = !DISubrange(count: 1)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "sps", scope: !231, file: !139, line: 431, baseType: !542, size: 64, offset: 25600)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "pps_array", scope: !231, file: !139, line: 432, baseType: !544, size: 960, offset: 25664)
!544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !545, size: 960, elements: !539)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pps_t", file: !16, line: 186, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 156, size: 960, elements: !547)
!547 = !{!548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "i_id", scope: !546, file: !16, line: 158, baseType: !195, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "i_sps_id", scope: !546, file: !16, line: 159, baseType: !195, size: 32, offset: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "b_cabac", scope: !546, file: !16, line: 161, baseType: !195, size: 32, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "b_pic_order", scope: !546, file: !16, line: 163, baseType: !195, size: 32, offset: 96)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_slice_groups", scope: !546, file: !16, line: 164, baseType: !195, size: 32, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_idx_l0_default_active", scope: !546, file: !16, line: 166, baseType: !195, size: 32, offset: 160)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_idx_l1_default_active", scope: !546, file: !16, line: 167, baseType: !195, size: 32, offset: 192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "b_weighted_pred", scope: !546, file: !16, line: 169, baseType: !195, size: 32, offset: 224)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "b_weighted_bipred", scope: !546, file: !16, line: 170, baseType: !195, size: 32, offset: 256)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "i_pic_init_qp", scope: !546, file: !16, line: 172, baseType: !195, size: 32, offset: 288)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "i_pic_init_qs", scope: !546, file: !16, line: 173, baseType: !195, size: 32, offset: 320)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_qp_index_offset", scope: !546, file: !16, line: 175, baseType: !195, size: 32, offset: 352)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "b_deblocking_filter_control", scope: !546, file: !16, line: 177, baseType: !195, size: 32, offset: 384)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "b_constrained_intra_pred", scope: !546, file: !16, line: 178, baseType: !195, size: 32, offset: 416)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "b_redundant_pic_cnt", scope: !546, file: !16, line: 179, baseType: !195, size: 32, offset: 448)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "b_transform_8x8_mode", scope: !546, file: !16, line: 181, baseType: !195, size: 32, offset: 480)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "i_cqm_preset", scope: !546, file: !16, line: 183, baseType: !195, size: 32, offset: 512)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_list", scope: !546, file: !16, line: 184, baseType: !566, size: 384, offset: 576)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 384, elements: !568)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!568 = !{!569}
!569 = !DISubrange(count: 6)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !231, file: !139, line: 433, baseType: !571, size: 64, offset: 26624)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "i_idr_pic_id", scope: !231, file: !139, line: 434, baseType: !195, size: 32, offset: 26688)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "i_dts_compress_multiplier", scope: !231, file: !139, line: 437, baseType: !195, size: 32, offset: 26720)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "dequant4_mf", scope: !231, file: !139, line: 440, baseType: !575, size: 256, offset: 26752)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 256, elements: !166)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 512, elements: !189)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "dequant8_mf", scope: !231, file: !139, line: 441, baseType: !579, size: 128, offset: 27008)
!579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 128, elements: !153)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 2048, elements: !217)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "unquant4_mf", scope: !231, file: !139, line: 443, baseType: !575, size: 256, offset: 27136)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "unquant8_mf", scope: !231, file: !139, line: 444, baseType: !579, size: 128, offset: 27392)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "quant4_mf", scope: !231, file: !139, line: 446, baseType: !585, size: 256, offset: 27520)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 256, elements: !166)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 256, elements: !189)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "quant8_mf", scope: !231, file: !139, line: 447, baseType: !589, size: 128, offset: 27776)
!589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, size: 128, elements: !153)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 1024, elements: !217)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "quant4_bias", scope: !231, file: !139, line: 448, baseType: !585, size: 256, offset: 27904)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "quant8_bias", scope: !231, file: !139, line: 449, baseType: !589, size: 128, offset: 28160)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "cost_mv", scope: !231, file: !139, line: 454, baseType: !595, size: 5888, offset: 28288)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 5888, elements: !597)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!597 = !{!598}
!598 = !DISubrange(count: 92)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "cost_mv_fpel", scope: !231, file: !139, line: 455, baseType: !600, size: 23552, offset: 34176)
!600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 23552, elements: !601)
!601 = !{!598, !167}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qp_table", scope: !231, file: !139, line: 457, baseType: !567, size: 64, offset: 57728)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "sh", scope: !231, file: !139, line: 460, baseType: !604, size: 53376, offset: 57856)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_slice_header_t", file: !139, line: 364, baseType: !605)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !139, line: 302, size: 53376, elements: !606)
!606 = !{!607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !635, !664, !665, !666, !672, !673, !674, !675, !676, !677, !678, !679}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "sps", scope: !605, file: !139, line: 304, baseType: !542, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !605, file: !139, line: 305, baseType: !571, size: 64, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "i_type", scope: !605, file: !139, line: 307, baseType: !195, size: 32, offset: 128)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "i_first_mb", scope: !605, file: !139, line: 308, baseType: !195, size: 32, offset: 160)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "i_last_mb", scope: !605, file: !139, line: 309, baseType: !195, size: 32, offset: 192)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "i_pps_id", scope: !605, file: !139, line: 311, baseType: !195, size: 32, offset: 224)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_num", scope: !605, file: !139, line: 313, baseType: !195, size: 32, offset: 256)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "b_mbaff", scope: !605, file: !139, line: 315, baseType: !195, size: 32, offset: 288)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_pic", scope: !605, file: !139, line: 316, baseType: !195, size: 32, offset: 320)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "b_bottom_field", scope: !605, file: !139, line: 317, baseType: !195, size: 32, offset: 352)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "i_idr_pic_id", scope: !605, file: !139, line: 319, baseType: !195, size: 32, offset: 384)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "i_poc", scope: !605, file: !139, line: 321, baseType: !195, size: 32, offset: 416)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "i_delta_poc_bottom", scope: !605, file: !139, line: 322, baseType: !195, size: 32, offset: 448)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "i_delta_poc", scope: !605, file: !139, line: 324, baseType: !332, size: 64, offset: 480)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "i_redundant_pic_cnt", scope: !605, file: !139, line: 325, baseType: !195, size: 32, offset: 544)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_spatial_mv_pred", scope: !605, file: !139, line: 327, baseType: !195, size: 32, offset: 576)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "b_num_ref_idx_override", scope: !605, file: !139, line: 329, baseType: !195, size: 32, offset: 608)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_idx_l0_active", scope: !605, file: !139, line: 330, baseType: !195, size: 32, offset: 640)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_idx_l1_active", scope: !605, file: !139, line: 331, baseType: !195, size: 32, offset: 672)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "b_ref_pic_list_reordering_l0", scope: !605, file: !139, line: 333, baseType: !195, size: 32, offset: 704)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "b_ref_pic_list_reordering_l1", scope: !605, file: !139, line: 334, baseType: !195, size: 32, offset: 736)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ref_pic_list_order", scope: !605, file: !139, line: 339, baseType: !629, size: 2048, offset: 768)
!629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 2048, elements: !634)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !605, file: !139, line: 335, size: 64, elements: !631)
!631 = !{!632, !633}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "idc", scope: !630, file: !139, line: 337, baseType: !195, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !630, file: !139, line: 338, baseType: !195, size: 32, offset: 32)
!634 = !{!154, !190}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !605, file: !139, line: 342, baseType: !636, size: 49152, offset: 2816)
!636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 49152, elements: !661)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_weight_t", file: !638, line: 36, baseType: !639, align: 128)
!638 = !DIFile(filename: "x264_src/common/mc.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_weight_t", file: !638, line: 26, size: 512, elements: !640)
!640 = !{!641, !647, !648, !651, !652, !653}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "cachea", scope: !639, file: !638, line: 30, baseType: !642, size: 128, align: 128)
!642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 128, elements: !182)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !644, line: 25, baseType: !645)
!644 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "")
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !146, line: 39, baseType: !646)
!646 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "cacheb", scope: !639, file: !638, line: 31, baseType: !642, size: 128, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "i_denom", scope: !639, file: !638, line: 32, baseType: !649, size: 32, offset: 256)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !644, line: 26, baseType: !650)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !146, line: 41, baseType: !195)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "i_scale", scope: !639, file: !638, line: 33, baseType: !649, size: 32, offset: 288)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "i_offset", scope: !639, file: !638, line: 34, baseType: !649, size: 32, offset: 320)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "weightfn", scope: !639, file: !638, line: 35, baseType: !654, size: 64, offset: 384)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "weight_fn_t", file: !638, line: 25, baseType: !656)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DISubroutineType(types: !658)
!658 = !{null, !420, !195, !420, !195, !659, !195}
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !639)
!661 = !{!662, !663}
!662 = !DISubrange(count: 32)
!663 = !DISubrange(count: 3)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmco_remove_from_end", scope: !605, file: !139, line: 344, baseType: !195, size: 32, offset: 51968)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmco_command_count", scope: !605, file: !139, line: 345, baseType: !195, size: 32, offset: 52000)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "mmco", scope: !605, file: !139, line: 350, baseType: !667, size: 1024, offset: 52032)
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !668, size: 1024, elements: !189)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !605, file: !139, line: 346, size: 64, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "i_difference_of_pic_nums", scope: !668, file: !139, line: 348, baseType: !195, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "i_poc", scope: !668, file: !139, line: 349, baseType: !195, size: 32, offset: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "i_cabac_init_idc", scope: !605, file: !139, line: 352, baseType: !195, size: 32, offset: 53056)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp", scope: !605, file: !139, line: 354, baseType: !195, size: 32, offset: 53088)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_delta", scope: !605, file: !139, line: 355, baseType: !195, size: 32, offset: 53120)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "b_sp_for_swidth", scope: !605, file: !139, line: 356, baseType: !195, size: 32, offset: 53152)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "i_qs_delta", scope: !605, file: !139, line: 357, baseType: !195, size: 32, offset: 53184)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "i_disable_deblocking_filter_idc", scope: !605, file: !139, line: 360, baseType: !195, size: 32, offset: 53216)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "i_alpha_c0_offset", scope: !605, file: !139, line: 361, baseType: !195, size: 32, offset: 53248)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "i_beta_offset", scope: !605, file: !139, line: 362, baseType: !195, size: 32, offset: 53280)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "cabac", scope: !231, file: !139, line: 463, baseType: !681, size: 4096, offset: 111232)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_cabac_t", file: !682, line: 46, baseType: !683)
!682 = !DIFile(filename: "x264_src/common/cabac.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 27, size: 4096, elements: !684)
!684 = !{!685, !686, !687, !688, !689, !690, !691, !692, !693}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "i_low", scope: !683, file: !682, line: 30, baseType: !195, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "i_range", scope: !683, file: !682, line: 31, baseType: !195, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "i_queue", scope: !683, file: !682, line: 34, baseType: !195, size: 32, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes_outstanding", scope: !683, file: !682, line: 35, baseType: !195, size: 32, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "p_start", scope: !683, file: !682, line: 37, baseType: !420, size: 64, offset: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !683, file: !682, line: 38, baseType: !420, size: 64, offset: 192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "p_end", scope: !683, file: !682, line: 39, baseType: !420, size: 64, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "f8_bits_encoded", scope: !683, file: !682, line: 42, baseType: !195, size: 32, align: 128, offset: 384)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !683, file: !682, line: 45, baseType: !694, size: 3680, offset: 416)
!694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 3680, elements: !695)
!695 = !{!696}
!696 = !DISubrange(count: 460)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !231, file: !139, line: 494, baseType: !698, size: 2112, offset: 115328)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !231, file: !139, line: 465, size: 2112, elements: !699)
!699 = !{!700, !838, !840, !841, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !854, !855, !856, !857}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !698, file: !139, line: 468, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_frame_t", file: !704, line: 146, baseType: !705)
!704 = !DIFile(filename: "x264_src/common/frame.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_frame", file: !704, line: 31, size: 125056, elements: !706)
!706 = !{!707, !708, !709, !710, !713, !714, !715, !716, !717, !718, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !737, !738, !739, !740, !741, !742, !744, !746, !747, !748, !749, !750, !753, !755, !756, !758, !763, !764, !768, !769, !773, !777, !780, !782, !783, !785, !786, !788, !789, !790, !793, !795, !796, !797, !799, !800, !801, !802, !803, !804, !805, !806, !808, !809, !810, !819, !823, !825, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "i_poc", scope: !705, file: !704, line: 34, baseType: !195, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "i_type", scope: !705, file: !704, line: 35, baseType: !195, size: 32, offset: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "i_qpplus1", scope: !705, file: !704, line: 36, baseType: !195, size: 32, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "i_pts", scope: !705, file: !704, line: 37, baseType: !711, size: 64, offset: 128)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !644, line: 27, baseType: !712)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !146, line: 44, baseType: !434)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "i_reordered_pts", scope: !705, file: !704, line: 38, baseType: !711, size: 64, offset: 192)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "i_duration", scope: !705, file: !704, line: 39, baseType: !195, size: 32, offset: 256)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_duration", scope: !705, file: !704, line: 40, baseType: !195, size: 32, offset: 288)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_delay", scope: !705, file: !704, line: 41, baseType: !195, size: 32, offset: 320)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "i_dpb_output_delay", scope: !705, file: !704, line: 42, baseType: !195, size: 32, offset: 352)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !705, file: !704, line: 43, baseType: !719, size: 64, offset: 384)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame", scope: !705, file: !704, line: 45, baseType: !195, size: 32, offset: 448)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "i_coded", scope: !705, file: !704, line: 46, baseType: !195, size: 32, offset: 480)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "i_field_cnt", scope: !705, file: !704, line: 47, baseType: !195, size: 32, offset: 512)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_num", scope: !705, file: !704, line: 48, baseType: !195, size: 32, offset: 544)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "b_kept_as_ref", scope: !705, file: !704, line: 49, baseType: !195, size: 32, offset: 576)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "i_pic_struct", scope: !705, file: !704, line: 50, baseType: !195, size: 32, offset: 608)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "b_keyframe", scope: !705, file: !704, line: 51, baseType: !195, size: 32, offset: 640)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "b_fdec", scope: !705, file: !704, line: 52, baseType: !150, size: 8, offset: 672)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_minigop_bframe", scope: !705, file: !704, line: 53, baseType: !150, size: 8, offset: 680)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframes", scope: !705, file: !704, line: 54, baseType: !150, size: 8, offset: 688)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "f_qp_avg_rc", scope: !705, file: !704, line: 55, baseType: !328, size: 32, offset: 704)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "f_qp_avg_aq", scope: !705, file: !704, line: 56, baseType: !328, size: 32, offset: 736)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "i_poc_l0ref0", scope: !705, file: !704, line: 57, baseType: !195, size: 32, offset: 768)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "i_plane", scope: !705, file: !704, line: 60, baseType: !195, size: 32, offset: 800)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "i_stride", scope: !705, file: !704, line: 61, baseType: !735, size: 96, offset: 832)
!735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 96, elements: !736)
!736 = !{!663}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "i_width", scope: !705, file: !704, line: 62, baseType: !735, size: 96, offset: 928)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "i_lines", scope: !705, file: !704, line: 63, baseType: !735, size: 96, offset: 1024)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "i_stride_lowres", scope: !705, file: !704, line: 64, baseType: !195, size: 32, offset: 1120)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "i_width_lowres", scope: !705, file: !704, line: 65, baseType: !195, size: 32, offset: 1152)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "i_lines_lowres", scope: !705, file: !704, line: 66, baseType: !195, size: 32, offset: 1184)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !705, file: !704, line: 67, baseType: !743, size: 192, offset: 1216)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 192, elements: !736)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "filtered", scope: !705, file: !704, line: 68, baseType: !745, size: 256, offset: 1408)
!745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 256, elements: !166)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !705, file: !704, line: 69, baseType: !745, size: 256, offset: 1664)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "integral", scope: !705, file: !704, line: 70, baseType: !596, size: 64, offset: 1920)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !705, file: !704, line: 74, baseType: !745, size: 256, offset: 1984)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_lowres", scope: !705, file: !704, line: 75, baseType: !745, size: 256, offset: 2240)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !705, file: !704, line: 77, baseType: !751, size: 24576, offset: 2560)
!751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 24576, elements: !752)
!752 = !{!190, !663}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "weighted", scope: !705, file: !704, line: 78, baseType: !754, size: 1024, offset: 27136)
!754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 1024, elements: !189)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "b_duplicate", scope: !705, file: !704, line: 79, baseType: !195, size: 32, offset: 28160)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !705, file: !704, line: 80, baseType: !757, size: 64, offset: 28224)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !705, file: !704, line: 83, baseType: !759, size: 64, offset: 28288)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !644, line: 24, baseType: !761)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !146, line: 37, baseType: !762)
!762 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "mb_partition", scope: !705, file: !704, line: 84, baseType: !420, size: 64, offset: 28352)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !705, file: !704, line: 85, baseType: !765, size: 128, offset: 28416)
!765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !766, size: 128, elements: !153)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 32, elements: !153)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "mv16x16", scope: !705, file: !704, line: 86, baseType: !766, size: 64, offset: 28544)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "lowres_mvs", scope: !705, file: !704, line: 87, baseType: !770, size: 2176, offset: 28608)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !766, size: 2176, elements: !771)
!771 = !{!154, !772}
!772 = !DISubrange(count: 17)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "lowres_costs", scope: !705, file: !704, line: 92, baseType: !774, size: 20736, offset: 30784)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 20736, elements: !775)
!775 = !{!776, !776}
!776 = !DISubrange(count: 18)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "lowres_mv_costs", scope: !705, file: !704, line: 96, baseType: !778, size: 2176, offset: 51520)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !779, size: 2176, elements: !771)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !705, file: !704, line: 97, baseType: !781, size: 128, offset: 53696)
!781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 128, elements: !153)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "i_ref", scope: !705, file: !704, line: 98, baseType: !332, size: 64, offset: 53824)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "ref_poc", scope: !705, file: !704, line: 99, baseType: !784, size: 1024, offset: 53888)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 1024, elements: !634)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "inv_ref_poc", scope: !705, file: !704, line: 100, baseType: !767, size: 32, offset: 54912)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "i_cost_est", scope: !705, file: !704, line: 105, baseType: !787, size: 10368, offset: 54944)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 10368, elements: !775)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "i_cost_est_aq", scope: !705, file: !704, line: 106, baseType: !787, size: 10368, offset: 65312)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "i_satd", scope: !705, file: !704, line: 107, baseType: !195, size: 32, offset: 75680)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "i_intra_mbs", scope: !705, file: !704, line: 108, baseType: !791, size: 576, offset: 75712)
!791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 576, elements: !792)
!792 = !{!776}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "i_row_satds", scope: !705, file: !704, line: 109, baseType: !794, size: 20736, offset: 76288)
!794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !779, size: 20736, elements: !775)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "i_row_satd", scope: !705, file: !704, line: 110, baseType: !779, size: 64, offset: 97024)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "i_row_bits", scope: !705, file: !704, line: 111, baseType: !779, size: 64, offset: 97088)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "f_row_qp", scope: !705, file: !704, line: 112, baseType: !798, size: 64, offset: 97152)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "f_qp_offset", scope: !705, file: !704, line: 113, baseType: !798, size: 64, offset: 97216)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "f_qp_offset_aq", scope: !705, file: !704, line: 114, baseType: !798, size: 64, offset: 97280)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "b_intra_calculated", scope: !705, file: !704, line: 115, baseType: !195, size: 32, offset: 97344)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "i_intra_cost", scope: !705, file: !704, line: 116, baseType: !596, size: 64, offset: 97408)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "i_propagate_cost", scope: !705, file: !704, line: 117, baseType: !596, size: 64, offset: 97472)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "i_inv_qscale_factor", scope: !705, file: !704, line: 118, baseType: !596, size: 64, offset: 97536)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "b_scenecut", scope: !705, file: !704, line: 119, baseType: !195, size: 32, offset: 97600)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "f_weighted_cost_delta", scope: !705, file: !704, line: 120, baseType: !807, size: 576, offset: 97632)
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 576, elements: !792)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "i_pixel_sum", scope: !705, file: !704, line: 121, baseType: !160, size: 32, offset: 98208)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "i_pixel_ssd", scope: !705, file: !704, line: 122, baseType: !168, size: 64, offset: 98240)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "hrd_timing", scope: !705, file: !704, line: 125, baseType: !811, size: 256, offset: 98304)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_hrd_t", file: !230, line: 503, baseType: !812)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !230, line: 496, size: 256, elements: !813)
!813 = !{!814, !816, !817, !818}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "cpb_initial_arrival_time", scope: !812, file: !230, line: 498, baseType: !815, size: 64)
!815 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "cpb_final_arrival_time", scope: !812, file: !230, line: 499, baseType: !815, size: 64, offset: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "cpb_removal_time", scope: !812, file: !230, line: 500, baseType: !815, size: 64, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "dpb_output_time", scope: !812, file: !230, line: 502, baseType: !815, size: 64, offset: 192)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "i_planned_type", scope: !705, file: !704, line: 128, baseType: !820, size: 2008, offset: 98560)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 2008, elements: !821)
!821 = !{!822}
!822 = !DISubrange(count: 251)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "i_planned_satd", scope: !705, file: !704, line: 129, baseType: !824, size: 8032, offset: 100576)
!824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 8032, elements: !821)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "f_planned_cpb_duration", scope: !705, file: !704, line: 130, baseType: !826, size: 16064, offset: 108608)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !815, size: 16064, elements: !821)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "i_coded_fields_lookahead", scope: !705, file: !704, line: 131, baseType: !195, size: 32, offset: 124672)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_delay_lookahead", scope: !705, file: !704, line: 132, baseType: !195, size: 32, offset: 124704)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "i_lines_completed", scope: !705, file: !704, line: 135, baseType: !195, size: 32, offset: 124736)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "i_lines_weighted", scope: !705, file: !704, line: 136, baseType: !195, size: 32, offset: 124768)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "i_reference_count", scope: !705, file: !704, line: 137, baseType: !195, size: 32, offset: 124800)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !705, file: !704, line: 138, baseType: !195, size: 32, offset: 124832)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "cv", scope: !705, file: !704, line: 139, baseType: !195, size: 32, offset: 124864)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "f_pir_position", scope: !705, file: !704, line: 142, baseType: !328, size: 32, offset: 124896)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "i_pir_start_col", scope: !705, file: !704, line: 143, baseType: !195, size: 32, offset: 124928)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "i_pir_end_col", scope: !705, file: !704, line: 144, baseType: !195, size: 32, offset: 124960)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "i_frames_since_pir", scope: !705, file: !704, line: 145, baseType: !195, size: 32, offset: 124992)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !698, file: !139, line: 470, baseType: !839, size: 128, offset: 64)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !701, size: 128, elements: !153)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "blank_unused", scope: !698, file: !139, line: 473, baseType: !701, size: 64, offset: 192)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !698, file: !139, line: 476, baseType: !842, size: 1152, offset: 256)
!842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !702, size: 1152, elements: !792)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "i_last_keyframe", scope: !698, file: !139, line: 478, baseType: !195, size: 32, offset: 1408)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "i_input", scope: !698, file: !139, line: 480, baseType: !195, size: 32, offset: 1440)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_dpb", scope: !698, file: !139, line: 482, baseType: !195, size: 32, offset: 1472)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_ref0", scope: !698, file: !139, line: 483, baseType: !195, size: 32, offset: 1504)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_ref1", scope: !698, file: !139, line: 484, baseType: !195, size: 32, offset: 1536)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "i_delay", scope: !698, file: !139, line: 485, baseType: !195, size: 32, offset: 1568)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_delay", scope: !698, file: !139, line: 486, baseType: !195, size: 32, offset: 1600)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_delay_time", scope: !698, file: !139, line: 487, baseType: !711, size: 64, offset: 1664)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "i_init_delta", scope: !698, file: !139, line: 488, baseType: !711, size: 64, offset: 1728)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "i_prev_reordered_pts", scope: !698, file: !139, line: 489, baseType: !853, size: 128, offset: 1792)
!853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 128, elements: !153)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "i_largest_pts", scope: !698, file: !139, line: 490, baseType: !711, size: 64, offset: 1920)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "i_second_largest_pts", scope: !698, file: !139, line: 491, baseType: !711, size: 64, offset: 1984)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "b_have_lowres", scope: !698, file: !139, line: 492, baseType: !195, size: 32, offset: 2048)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "b_have_sub8x8_esa", scope: !698, file: !139, line: 493, baseType: !195, size: 32, offset: 2080)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "fenc", scope: !231, file: !139, line: 497, baseType: !702, size: 64, offset: 117440)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "fdec", scope: !231, file: !139, line: 500, baseType: !702, size: 64, offset: 117504)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "i_ref0", scope: !231, file: !139, line: 503, baseType: !195, size: 32, offset: 117568)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "fref0", scope: !231, file: !139, line: 504, baseType: !862, size: 1216, offset: 117632)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !702, size: 1216, elements: !863)
!863 = !{!864}
!864 = !DISubrange(count: 19)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "i_ref1", scope: !231, file: !139, line: 505, baseType: !195, size: 32, offset: 118848)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "fref1", scope: !231, file: !139, line: 506, baseType: !862, size: 1216, offset: 118912)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "b_ref_reorder", scope: !231, file: !139, line: 507, baseType: !332, size: 64, offset: 120128)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "initial_cpb_removal_delay", scope: !231, file: !139, line: 510, baseType: !195, size: 32, offset: 120192)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "initial_cpb_removal_delay_offset", scope: !231, file: !139, line: 511, baseType: !195, size: 32, offset: 120224)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "i_reordered_pts_delay", scope: !231, file: !139, line: 512, baseType: !711, size: 64, offset: 120256)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "dct", scope: !231, file: !139, line: 522, baseType: !872, size: 10624, offset: 120320)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !231, file: !139, line: 515, size: 10624, elements: !873)
!873 = !{!874, !876, !879, !882}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "luma16x16_dc", scope: !872, file: !139, line: 517, baseType: !875, size: 256, align: 128)
!875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 256, elements: !189)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_dc", scope: !872, file: !139, line: 518, baseType: !877, size: 128, align: 128, offset: 256)
!877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 128, elements: !878)
!878 = !{!154, !167}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "luma8x8", scope: !872, file: !139, line: 520, baseType: !880, size: 4096, align: 128, offset: 384)
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 4096, elements: !881)
!881 = !{!167, !218}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "luma4x4", scope: !872, file: !139, line: 521, baseType: !883, size: 6144, align: 128, offset: 4480)
!883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 6144, elements: !884)
!884 = !{!885, !190}
!885 = !DISubrange(count: 24)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "mb", scope: !231, file: !139, line: 732, baseType: !887, size: 82688, offset: 130944)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !231, file: !139, line: 525, size: 82688, elements: !888)
!888 = !{!889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !916, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !934, !937, !941, !942, !943, !948, !949, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !1017, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1059, !1060, !1061, !1064, !1067, !1069, !1072, !1074, !1075}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count", scope: !887, file: !139, line: 527, baseType: !195, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_stride", scope: !887, file: !139, line: 530, baseType: !195, size: 32, offset: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "i_b8_stride", scope: !887, file: !139, line: 531, baseType: !195, size: 32, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "i_b4_stride", scope: !887, file: !139, line: 532, baseType: !195, size: 32, offset: 96)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_x", scope: !887, file: !139, line: 535, baseType: !195, size: 32, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_y", scope: !887, file: !139, line: 536, baseType: !195, size: 32, offset: 160)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_xy", scope: !887, file: !139, line: 537, baseType: !195, size: 32, offset: 192)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "i_b8_xy", scope: !887, file: !139, line: 538, baseType: !195, size: 32, offset: 224)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "i_b4_xy", scope: !887, file: !139, line: 539, baseType: !195, size: 32, offset: 256)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "i_me_method", scope: !887, file: !139, line: 542, baseType: !195, size: 32, offset: 288)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "i_subpel_refine", scope: !887, file: !139, line: 543, baseType: !195, size: 32, offset: 320)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "b_chroma_me", scope: !887, file: !139, line: 544, baseType: !195, size: 32, offset: 352)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "b_trellis", scope: !887, file: !139, line: 545, baseType: !195, size: 32, offset: 384)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "b_noise_reduction", scope: !887, file: !139, line: 546, baseType: !195, size: 32, offset: 416)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "b_dct_decimate", scope: !887, file: !139, line: 547, baseType: !195, size: 32, offset: 448)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "i_psy_rd", scope: !887, file: !139, line: 548, baseType: !195, size: 32, offset: 480)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "i_psy_trellis", scope: !887, file: !139, line: 549, baseType: !195, size: 32, offset: 512)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "b_interlaced", scope: !887, file: !139, line: 551, baseType: !195, size: 32, offset: 544)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "mv_min", scope: !887, file: !139, line: 554, baseType: !332, size: 64, offset: 576)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "mv_max", scope: !887, file: !139, line: 555, baseType: !332, size: 64, offset: 640)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "mv_min_spel", scope: !887, file: !139, line: 558, baseType: !332, size: 64, offset: 704)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "mv_max_spel", scope: !887, file: !139, line: 559, baseType: !332, size: 64, offset: 768)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "mv_min_fpel", scope: !887, file: !139, line: 561, baseType: !332, size: 64, offset: 832)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "mv_max_fpel", scope: !887, file: !139, line: 562, baseType: !332, size: 64, offset: 896)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour", scope: !887, file: !139, line: 565, baseType: !7, size: 32, offset: 960)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour8", scope: !887, file: !139, line: 566, baseType: !915, size: 128, offset: 992)
!915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !166)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour4", scope: !887, file: !139, line: 567, baseType: !917, size: 512, offset: 1120)
!917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 512, elements: !189)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour_intra", scope: !887, file: !139, line: 568, baseType: !7, size: 32, offset: 1632)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour_frame", scope: !887, file: !139, line: 569, baseType: !7, size: 32, offset: 1664)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_type_top", scope: !887, file: !139, line: 570, baseType: !195, size: 32, offset: 1696)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_type_left", scope: !887, file: !139, line: 571, baseType: !195, size: 32, offset: 1728)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_type_topleft", scope: !887, file: !139, line: 572, baseType: !195, size: 32, offset: 1760)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_type_topright", scope: !887, file: !139, line: 573, baseType: !195, size: 32, offset: 1792)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_prev_xy", scope: !887, file: !139, line: 574, baseType: !195, size: 32, offset: 1824)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_left_xy", scope: !887, file: !139, line: 575, baseType: !195, size: 32, offset: 1856)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_top_xy", scope: !887, file: !139, line: 576, baseType: !195, size: 32, offset: 1888)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_topleft_xy", scope: !887, file: !139, line: 577, baseType: !195, size: 32, offset: 1920)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_topright_xy", scope: !887, file: !139, line: 578, baseType: !195, size: 32, offset: 1952)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !887, file: !139, line: 585, baseType: !759, size: 64, offset: 1984)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "partition", scope: !887, file: !139, line: 586, baseType: !420, size: 64, offset: 2048)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !887, file: !139, line: 587, baseType: !759, size: 64, offset: 2112)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "cbp", scope: !887, file: !139, line: 588, baseType: !933, size: 64, offset: 2176)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "intra4x4_pred_mode", scope: !887, file: !139, line: 589, baseType: !935, size: 64, offset: 2240)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 64, elements: !182)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "non_zero_count", scope: !887, file: !139, line: 591, baseType: !938, size: 64, offset: 2304)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 192, elements: !940)
!940 = !{!885}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_pred_mode", scope: !887, file: !139, line: 592, baseType: !759, size: 64, offset: 2368)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !887, file: !139, line: 593, baseType: !765, size: 128, offset: 2432)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "mvd", scope: !887, file: !139, line: 594, baseType: !944, size: 128, offset: 2560)
!944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !945, size: 128, elements: !153)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !947)
!947 = !{!183, !154}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !887, file: !139, line: 595, baseType: !781, size: 128, offset: 2688)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "mvr", scope: !887, file: !139, line: 596, baseType: !950, size: 4096, offset: 2816)
!950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !766, size: 4096, elements: !951)
!951 = !{!154, !662}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "skipbp", scope: !887, file: !139, line: 597, baseType: !759, size: 64, offset: 6912)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "mb_transform_size", scope: !887, file: !139, line: 598, baseType: !759, size: 64, offset: 6976)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "slice_table", scope: !887, file: !139, line: 599, baseType: !596, size: 64, offset: 7040)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "p_weight_buf", scope: !887, file: !139, line: 603, baseType: !754, size: 1024, offset: 7104)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "i_type", scope: !887, file: !139, line: 606, baseType: !195, size: 32, offset: 8128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "i_partition", scope: !887, file: !139, line: 607, baseType: !195, size: 32, offset: 8160)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "i_sub_partition", scope: !887, file: !139, line: 608, baseType: !165, size: 32, align: 32, offset: 8192)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "b_transform_8x8", scope: !887, file: !139, line: 609, baseType: !195, size: 32, offset: 8224)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "i_cbp_luma", scope: !887, file: !139, line: 611, baseType: !195, size: 32, offset: 8256)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "i_cbp_chroma", scope: !887, file: !139, line: 612, baseType: !195, size: 32, offset: 8288)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "i_intra16x16_pred_mode", scope: !887, file: !139, line: 614, baseType: !195, size: 32, offset: 8320)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_pred_mode", scope: !887, file: !139, line: 615, baseType: !195, size: 32, offset: 8352)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "i_skip_intra", scope: !887, file: !139, line: 621, baseType: !195, size: 32, offset: 8384)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "b_skip_mc", scope: !887, file: !139, line: 624, baseType: !195, size: 32, offset: 8416)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "b_reencode_mb", scope: !887, file: !139, line: 626, baseType: !195, size: 32, offset: 8448)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ip_offset", scope: !887, file: !139, line: 627, baseType: !195, size: 32, offset: 8480)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !887, file: !139, line: 671, baseType: !969, size: 60672, offset: 8576)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !887, file: !139, line: 629, size: 60672, elements: !970)
!970 = !{!971, !975, !979, !981, !982, !985, !989, !991, !992, !993, !994, !995, !998, !1002, !1005, !1006, !1007, !1008, !1009, !1012, !1014, !1016}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "fenc_buf", scope: !969, file: !139, line: 634, baseType: !972, size: 3072, align: 128)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 3072, elements: !973)
!973 = !{!974}
!974 = !DISubrange(count: 384)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "fdec_buf", scope: !969, file: !139, line: 635, baseType: !976, size: 6912, align: 128, offset: 3072)
!976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 6912, elements: !977)
!977 = !{!978}
!978 = !DISubrange(count: 864)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "i4x4_fdec_buf", scope: !969, file: !139, line: 638, baseType: !980, size: 2048, align: 128, offset: 9984)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 2048, elements: !472)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "i8x8_fdec_buf", scope: !969, file: !139, line: 639, baseType: !980, size: 2048, align: 128, offset: 12032)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "i8x8_dct_buf", scope: !969, file: !139, line: 640, baseType: !983, size: 3072, align: 128, offset: 14080)
!983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 3072, elements: !984)
!984 = !{!663, !218}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "i4x4_dct_buf", scope: !969, file: !139, line: 641, baseType: !986, size: 3840, align: 128, offset: 17152)
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 3840, elements: !987)
!987 = !{!988, !190}
!988 = !DISubrange(count: 15)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "i4x4_nnz_buf", scope: !969, file: !139, line: 642, baseType: !990, size: 128, offset: 20992)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 128, elements: !166)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "i8x8_nnz_buf", scope: !969, file: !139, line: 643, baseType: !990, size: 128, offset: 21120)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "i4x4_cbp", scope: !969, file: !139, line: 644, baseType: !195, size: 32, offset: 21248)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "i8x8_cbp", scope: !969, file: !139, line: 645, baseType: !195, size: 32, offset: 21280)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "fenc_dct8", scope: !969, file: !139, line: 648, baseType: !880, size: 4096, align: 128, offset: 21376)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "fenc_dct4", scope: !969, file: !139, line: 649, baseType: !996, size: 4096, align: 128, offset: 25472)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 4096, elements: !997)
!997 = !{!190, !190}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "fenc_hadamard_cache", scope: !969, file: !139, line: 652, baseType: !999, size: 576, align: 128, offset: 29568)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 576, elements: !1000)
!1000 = !{!1001}
!1001 = !DISubrange(count: 9)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "fenc_satd_cache", scope: !969, file: !139, line: 653, baseType: !1003, size: 1024, align: 128, offset: 30208)
!1003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 1024, elements: !1004)
!1004 = !{!662}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "p_fenc", scope: !969, file: !139, line: 656, baseType: !743, size: 192, offset: 31232)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "p_fenc_plane", scope: !969, file: !139, line: 658, baseType: !743, size: 192, offset: 31424)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "p_fdec", scope: !969, file: !139, line: 661, baseType: !743, size: 192, offset: 31616)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "i_fref", scope: !969, file: !139, line: 664, baseType: !332, size: 64, offset: 31808)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "p_fref", scope: !969, file: !139, line: 665, baseType: !1010, size: 24576, offset: 31872)
!1010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 24576, elements: !1011)
!1011 = !{!154, !662, !569}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "p_fref_w", scope: !969, file: !139, line: 666, baseType: !1013, size: 2048, offset: 56448)
!1013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 2048, elements: !1004)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "p_integral", scope: !969, file: !139, line: 667, baseType: !1015, size: 2048, offset: 58496)
!1015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 2048, elements: !634)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "i_stride", scope: !969, file: !139, line: 670, baseType: !735, size: 96, offset: 60544)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !887, file: !139, line: 704, baseType: !1018, size: 6144, offset: 69248)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !887, file: !139, line: 674, size: 6144, elements: !1019)
!1019 = !{!1020, !1024, !1028, !1031, !1034, !1036, !1037, !1040, !1042, !1043, !1044, !1045, !1046, !1047}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "intra4x4_pred_mode", scope: !1018, file: !139, line: 677, baseType: !1021, size: 320, align: 64)
!1021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 320, elements: !1022)
!1022 = !{!1023}
!1023 = !DISubrange(count: 40)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "non_zero_count", scope: !1018, file: !139, line: 680, baseType: !1025, size: 384, align: 128, offset: 384)
!1025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 384, elements: !1026)
!1026 = !{!1027}
!1027 = !DISubrange(count: 48)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1018, file: !139, line: 683, baseType: !1029, size: 640, align: 32, offset: 768)
!1029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 640, elements: !1030)
!1030 = !{!154, !1023}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !1018, file: !139, line: 686, baseType: !1032, size: 2560, align: 128, offset: 1408)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 2560, elements: !1033)
!1033 = !{!154, !1023, !154}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "mvd", scope: !1018, file: !139, line: 687, baseType: !1035, size: 1280, align: 64, offset: 3968)
!1035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 1280, elements: !1033)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !1018, file: !139, line: 690, baseType: !1021, size: 320, align: 32, offset: 5248)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "direct_mv", scope: !1018, file: !139, line: 692, baseType: !1038, size: 256, align: 32, offset: 5568)
!1038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 256, elements: !1039)
!1039 = !{!154, !167, !154}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "direct_ref", scope: !1018, file: !139, line: 693, baseType: !1041, size: 64, align: 32, offset: 5824)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 64, elements: !878)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "direct_partition", scope: !1018, file: !139, line: 694, baseType: !195, size: 32, offset: 5888)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "pskip_mv", scope: !1018, file: !139, line: 695, baseType: !767, size: 32, align: 32, offset: 5920)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour_transform_size", scope: !1018, file: !139, line: 698, baseType: !195, size: 32, offset: 5952)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour_interlaced", scope: !1018, file: !139, line: 699, baseType: !195, size: 32, offset: 5984)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "i_cbp_top", scope: !1018, file: !139, line: 702, baseType: !195, size: 32, offset: 6016)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "i_cbp_left", scope: !1018, file: !139, line: 703, baseType: !195, size: 32, offset: 6048)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp", scope: !887, file: !139, line: 707, baseType: !195, size: 32, offset: 75392)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_qp", scope: !887, file: !139, line: 708, baseType: !195, size: 32, offset: 75424)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "i_last_qp", scope: !887, file: !139, line: 709, baseType: !195, size: 32, offset: 75456)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "i_last_dqp", scope: !887, file: !139, line: 710, baseType: !195, size: 32, offset: 75488)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "b_variable_qp", scope: !887, file: !139, line: 711, baseType: !195, size: 32, offset: 75520)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "b_lossless", scope: !887, file: !139, line: 712, baseType: !195, size: 32, offset: 75552)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_auto_read", scope: !887, file: !139, line: 713, baseType: !195, size: 32, offset: 75584)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_auto_write", scope: !887, file: !139, line: 714, baseType: !195, size: 32, offset: 75616)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "i_trellis_lambda2", scope: !887, file: !139, line: 717, baseType: !1057, size: 128, offset: 75648)
!1057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1058)
!1058 = !{!154, !154}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "i_psy_rd_lambda", scope: !887, file: !139, line: 718, baseType: !195, size: 32, offset: 75776)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_lambda2_offset", scope: !887, file: !139, line: 719, baseType: !195, size: 32, offset: 75808)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "dist_scale_factor_buf", scope: !887, file: !139, line: 722, baseType: !1062, size: 4096, offset: 75840)
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 4096, elements: !1063)
!1063 = !{!154, !662, !167}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "dist_scale_factor", scope: !887, file: !139, line: 723, baseType: !1065, size: 64, offset: 79936)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 64, elements: !166)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "bipred_weight_buf", scope: !887, file: !139, line: 724, baseType: !1068, size: 2048, offset: 80000)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 2048, elements: !1063)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "bipred_weight", scope: !887, file: !139, line: 725, baseType: !1070, size: 64, offset: 82048)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 32, elements: !166)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "map_col_to_list0", scope: !887, file: !139, line: 728, baseType: !1073, size: 144, offset: 82112)
!1073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 144, elements: !792)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "ref_blind_dupe", scope: !887, file: !139, line: 729, baseType: !195, size: 32, offset: 82272)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_ref_table", scope: !887, file: !139, line: 730, baseType: !1076, size: 272, offset: 82304)
!1076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 272, elements: !1077)
!1077 = !{!1078}
!1078 = !DISubrange(count: 34)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !231, file: !139, line: 735, baseType: !1080, size: 64, offset: 213632)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_ratecontrol_t", file: !139, line: 379, baseType: !1082)
!1082 = !DICompositeType(tag: DW_TAG_structure_type, name: "x264_ratecontrol_t", file: !139, line: 379, flags: DIFlagFwdDecl)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !231, file: !139, line: 793, baseType: !1084, size: 29504, offset: 213696)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !231, file: !139, line: 738, size: 29504, elements: !1085)
!1085 = !{!1086, !1113, !1117, !1119, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1131, !1133, !1134, !1137, !1139, !1141, !1142, !1143}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1084, file: !139, line: 764, baseType: !1087, size: 5632)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1084, file: !139, line: 741, size: 5632, elements: !1088)
!1088 = !{!1089, !1090, !1091, !1092, !1094, !1095, !1096, !1097, !1098, !1100, !1103, !1105, !1109, !1110, !1112}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "i_mv_bits", scope: !1087, file: !139, line: 744, baseType: !195, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1087, file: !139, line: 746, baseType: !195, size: 32, offset: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "i_misc_bits", scope: !1087, file: !139, line: 748, baseType: !195, size: 32, offset: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count", scope: !1087, file: !139, line: 750, baseType: !1093, size: 608, offset: 96)
!1093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 608, elements: !863)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_i", scope: !1087, file: !139, line: 751, baseType: !195, size: 32, offset: 704)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_p", scope: !1087, file: !139, line: 752, baseType: !195, size: 32, offset: 736)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_skip", scope: !1087, file: !139, line: 753, baseType: !195, size: 32, offset: 768)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_8x8dct", scope: !1087, file: !139, line: 754, baseType: !332, size: 64, offset: 800)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_ref", scope: !1087, file: !139, line: 755, baseType: !1099, size: 2048, offset: 864)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 2048, elements: !951)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_partition", scope: !1087, file: !139, line: 756, baseType: !1101, size: 544, offset: 2912)
!1101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 544, elements: !1102)
!1102 = !{!772}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_cbp", scope: !1087, file: !139, line: 757, baseType: !1104, size: 192, offset: 3456)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 192, elements: !568)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_pred_mode", scope: !1087, file: !139, line: 758, baseType: !1106, size: 1664, offset: 3648)
!1106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 1664, elements: !1107)
!1107 = !{!167, !1108}
!1108 = !DISubrange(count: 13)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "i_direct_score", scope: !1087, file: !139, line: 760, baseType: !332, size: 64, offset: 5312)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "i_ssd", scope: !1087, file: !139, line: 762, baseType: !1111, size: 192, offset: 5376)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 192, elements: !736)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "f_ssim", scope: !1087, file: !139, line: 763, baseType: !815, size: 64, offset: 5568)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_count", scope: !1084, file: !139, line: 769, baseType: !1114, size: 160, offset: 5632)
!1114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 160, elements: !1115)
!1115 = !{!1116}
!1116 = !DISubrange(count: 5)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_size", scope: !1084, file: !139, line: 770, baseType: !1118, size: 320, offset: 5824)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 320, elements: !1115)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "f_frame_qp", scope: !1084, file: !139, line: 771, baseType: !1120, size: 320, offset: 6144)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !815, size: 320, elements: !1115)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "i_consecutive_bframes", scope: !1084, file: !139, line: 772, baseType: !1101, size: 544, offset: 6464)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "i_ssd_global", scope: !1084, file: !139, line: 774, baseType: !1118, size: 320, offset: 7040)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "f_psnr_average", scope: !1084, file: !139, line: 775, baseType: !1120, size: 320, offset: 7360)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "f_psnr_mean_y", scope: !1084, file: !139, line: 776, baseType: !1120, size: 320, offset: 7680)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "f_psnr_mean_u", scope: !1084, file: !139, line: 777, baseType: !1120, size: 320, offset: 8000)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "f_psnr_mean_v", scope: !1084, file: !139, line: 778, baseType: !1120, size: 320, offset: 8320)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "f_ssim_mean_y", scope: !1084, file: !139, line: 779, baseType: !1120, size: 320, offset: 8640)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count", scope: !1084, file: !139, line: 781, baseType: !1129, size: 6080, offset: 8960)
!1129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 6080, elements: !1130)
!1130 = !{!1116, !864}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_partition", scope: !1084, file: !139, line: 782, baseType: !1132, size: 2176, offset: 15040)
!1132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 2176, elements: !771)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_8x8dct", scope: !1084, file: !139, line: 783, baseType: !853, size: 128, offset: 17216)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_ref", scope: !1084, file: !139, line: 784, baseType: !1135, size: 8192, offset: 17344)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 8192, elements: !1136)
!1136 = !{!154, !154, !662}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_cbp", scope: !1084, file: !139, line: 785, baseType: !1138, size: 384, offset: 25536)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 384, elements: !568)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_pred_mode", scope: !1084, file: !139, line: 786, baseType: !1140, size: 3328, offset: 25920)
!1140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 3328, elements: !1107)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "i_direct_score", scope: !1084, file: !139, line: 788, baseType: !332, size: 64, offset: 29248)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "i_direct_frames", scope: !1084, file: !139, line: 789, baseType: !332, size: 64, offset: 29312)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "i_wpred", scope: !1084, file: !139, line: 791, baseType: !735, size: 96, offset: 29376)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "nr_residual_sum", scope: !231, file: !139, line: 795, baseType: !1145, size: 4096, align: 128, offset: 243200)
!1145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 4096, elements: !1146)
!1146 = !{!154, !218}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "nr_offset", scope: !231, file: !139, line: 796, baseType: !1148, size: 2048, align: 128, offset: 247296)
!1148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 2048, elements: !1146)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "nr_count", scope: !231, file: !139, line: 797, baseType: !177, size: 64, offset: 249344)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "scratch_buffer", scope: !231, file: !139, line: 800, baseType: !292, size: 64, offset: 249408)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "intra_border_backup", scope: !231, file: !139, line: 801, baseType: !1152, size: 384, offset: 249472)
!1152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 384, elements: !1153)
!1153 = !{!154, !663}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_strength", scope: !231, file: !139, line: 802, baseType: !1155, size: 128, offset: 249856)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1156, size: 128, elements: !153)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !1158)
!1158 = !{!154, !167, !167}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "predict_16x16", scope: !231, file: !139, line: 805, baseType: !1160, size: 448, offset: 249984)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1161, size: 448, elements: !1165)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_predict_t", file: !27, line: 27, baseType: !1162)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{null, !420}
!1165 = !{!1166}
!1166 = !DISubrange(count: 7)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "predict_8x8c", scope: !231, file: !139, line: 806, baseType: !1160, size: 448, offset: 250432)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "predict_8x8", scope: !231, file: !139, line: 807, baseType: !1169, size: 768, offset: 250880)
!1169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1170, size: 768, elements: !211)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_predict8x8_t", file: !27, line: 28, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{null, !420, !420}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "predict_4x4", scope: !231, file: !139, line: 808, baseType: !1175, size: 768, offset: 251648)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1161, size: 768, elements: !211)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "predict_8x8_filter", scope: !231, file: !139, line: 809, baseType: !1177, size: 64, offset: 252416)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_predict_8x8_filter_t", file: !27, line: 29, baseType: !1178)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{null, !420, !420, !195, !195}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "pixf", scope: !231, file: !139, line: 811, baseType: !1182, size: 8448, offset: 252480)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_function_t", file: !37, line: 110, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !37, line: 63, size: 8448, elements: !1184)
!1184 = !{!1185, !1191, !1192, !1193, !1194, !1196, !1197, !1198, !1199, !1205, !1211, !1212, !1216, !1221, !1222, !1228, !1232, !1233, !1234, !1235, !1236, !1241, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "sad", scope: !1183, file: !37, line: 65, baseType: !1186, size: 448)
!1186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1187, size: 448, elements: !1165)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_cmp_t", file: !37, line: 26, baseType: !1188)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!195, !420, !195, !420, !195}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ssd", scope: !1183, file: !37, line: 66, baseType: !1186, size: 448, offset: 448)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "satd", scope: !1183, file: !37, line: 67, baseType: !1186, size: 448, offset: 896)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ssim", scope: !1183, file: !37, line: 68, baseType: !1186, size: 448, offset: 1344)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "sa8d", scope: !1183, file: !37, line: 69, baseType: !1195, size: 256, offset: 1792)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1187, size: 256, elements: !166)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "mbcmp", scope: !1183, file: !37, line: 70, baseType: !1186, size: 448, offset: 2048)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "mbcmp_unaligned", scope: !1183, file: !37, line: 71, baseType: !1186, size: 448, offset: 2496)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "fpelcmp", scope: !1183, file: !37, line: 72, baseType: !1186, size: 448, offset: 2944)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "fpelcmp_x3", scope: !1183, file: !37, line: 73, baseType: !1200, size: 448, offset: 3392)
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1201, size: 448, elements: !1165)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_cmp_x3_t", file: !37, line: 27, baseType: !1202)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{null, !420, !420, !420, !420, !195, !779}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "fpelcmp_x4", scope: !1183, file: !37, line: 74, baseType: !1206, size: 448, offset: 3840)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 448, elements: !1165)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_cmp_x4_t", file: !37, line: 28, baseType: !1208)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{null, !420, !420, !420, !420, !420, !195, !779}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "sad_aligned", scope: !1183, file: !37, line: 75, baseType: !1186, size: 448, offset: 4288)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "var2_8x8", scope: !1183, file: !37, line: 76, baseType: !1213, size: 64, offset: 4736)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!195, !420, !195, !420, !195, !779}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1183, file: !37, line: 78, baseType: !1217, size: 256, offset: 4800)
!1217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1218, size: 256, elements: !166)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!168, !420, !195}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "hadamard_ac", scope: !1183, file: !37, line: 79, baseType: !1217, size: 256, offset: 5056)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "ssim_4x4x2_core", scope: !1183, file: !37, line: 81, baseType: !1223, size: 64, offset: 5312)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{null, !567, !195, !567, !195, !1226}
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !166)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "ssim_end4", scope: !1183, file: !37, line: 83, baseType: !1229, size: 64, offset: 5376)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!328, !1226, !1226, !195}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sad_x3", scope: !1183, file: !37, line: 86, baseType: !1200, size: 448, offset: 5440)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "sad_x4", scope: !1183, file: !37, line: 87, baseType: !1206, size: 448, offset: 5888)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "satd_x3", scope: !1183, file: !37, line: 88, baseType: !1200, size: 448, offset: 6336)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "satd_x4", scope: !1183, file: !37, line: 89, baseType: !1206, size: 448, offset: 6784)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !1183, file: !37, line: 93, baseType: !1237, size: 448, offset: 7232)
!1237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1238, size: 448, elements: !1165)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!195, !779, !596, !195, !596, !933, !195, !195}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_16x16", scope: !1183, file: !37, line: 98, baseType: !1242, size: 64, offset: 7680)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{null, !420, !420, !779}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "intra_satd_x3_16x16", scope: !1183, file: !37, line: 99, baseType: !1242, size: 64, offset: 7744)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_16x16", scope: !1183, file: !37, line: 100, baseType: !1242, size: 64, offset: 7808)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_8x8c", scope: !1183, file: !37, line: 101, baseType: !1242, size: 64, offset: 7872)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "intra_satd_x3_8x8c", scope: !1183, file: !37, line: 102, baseType: !1242, size: 64, offset: 7936)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_8x8c", scope: !1183, file: !37, line: 103, baseType: !1242, size: 64, offset: 8000)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_4x4", scope: !1183, file: !37, line: 104, baseType: !1242, size: 64, offset: 8064)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "intra_satd_x3_4x4", scope: !1183, file: !37, line: 105, baseType: !1242, size: 64, offset: 8128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_4x4", scope: !1183, file: !37, line: 106, baseType: !1242, size: 64, offset: 8192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_8x8", scope: !1183, file: !37, line: 107, baseType: !1242, size: 64, offset: 8256)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sa8d_x3_8x8", scope: !1183, file: !37, line: 108, baseType: !1242, size: 64, offset: 8320)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_8x8", scope: !1183, file: !37, line: 109, baseType: !1242, size: 64, offset: 8384)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !231, file: !139, line: 812, baseType: !1257, size: 2368, offset: 260928)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_mc_functions_t", file: !638, line: 111, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !638, line: 58, size: 2368, elements: !1259)
!1259 = !{!1260, !1267, !1271, !1275, !1282, !1287, !1288, !1292, !1296, !1297, !1301, !1309, !1313, !1317, !1318, !1322, !1326, !1330, !1331, !1332, !1333, !1338}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "mc_luma", scope: !1258, file: !638, line: 60, baseType: !1261, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{null, !420, !195, !1264, !195, !195, !195, !195, !195, !1265}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !637)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "get_ref", scope: !1258, file: !638, line: 65, baseType: !1268, size: 64, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!420, !420, !779, !1264, !195, !195, !195, !195, !195, !1265}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "mc_chroma", scope: !1258, file: !638, line: 71, baseType: !1272, size: 64, offset: 128)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{null, !420, !195, !420, !195, !195, !195, !195, !195}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "avg", scope: !1258, file: !638, line: 75, baseType: !1276, size: 640, offset: 192)
!1276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1277, size: 640, elements: !1280)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{null, !420, !195, !420, !195, !420, !195, !195}
!1280 = !{!1281}
!1281 = !DISubrange(count: 10)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "copy", scope: !1258, file: !638, line: 78, baseType: !1283, size: 448, offset: 832)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 448, elements: !1165)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{null, !420, !195, !420, !195, !195}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "copy_16x16_unaligned", scope: !1258, file: !638, line: 79, baseType: !1284, size: 64, offset: 1280)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "plane_copy", scope: !1258, file: !638, line: 81, baseType: !1289, size: 64, offset: 1344)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{null, !420, !195, !420, !195, !195, !195}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_filter", scope: !1258, file: !638, line: 84, baseType: !1293, size: 64, offset: 1408)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{null, !420, !420, !420, !420, !195, !195, !195, !933}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch_fenc", scope: !1258, file: !638, line: 88, baseType: !1284, size: 64, offset: 1472)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch_ref", scope: !1258, file: !638, line: 91, baseType: !1298, size: 64, offset: 1536)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{null, !420, !195, !195}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "memcpy_aligned", scope: !1258, file: !638, line: 93, baseType: !1302, size: 64, offset: 1600)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!292, !292, !1305, !1307}
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1308, line: 46, baseType: !170)
!1308 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "memzero_aligned", scope: !1258, file: !638, line: 94, baseType: !1310, size: 64, offset: 1664)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{null, !292, !195}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "integral_init4h", scope: !1258, file: !638, line: 97, baseType: !1314, size: 64, offset: 1728)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{null, !596, !420, !195}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "integral_init8h", scope: !1258, file: !638, line: 98, baseType: !1314, size: 64, offset: 1792)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "integral_init4v", scope: !1258, file: !638, line: 99, baseType: !1319, size: 64, offset: 1856)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{null, !596, !596, !195}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "integral_init8v", scope: !1258, file: !638, line: 100, baseType: !1323, size: 64, offset: 1920)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{null, !596, !195}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "frame_init_lowres_core", scope: !1258, file: !638, line: 102, baseType: !1327, size: 64, offset: 1984)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{null, !420, !420, !420, !420, !420, !195, !195, !195, !195}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1258, file: !638, line: 104, baseType: !654, size: 64, offset: 2048)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "offsetadd", scope: !1258, file: !638, line: 105, baseType: !654, size: 64, offset: 2112)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "offsetsub", scope: !1258, file: !638, line: 106, baseType: !654, size: 64, offset: 2176)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "weight_cache", scope: !1258, file: !638, line: 107, baseType: !1334, size: 64, offset: 2240)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{null, !228, !1337}
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "mbtree_propagate_cost", scope: !1258, file: !638, line: 109, baseType: !1339, size: 64, offset: 2304)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DISubroutineType(types: !1341)
!1341 = !{null, !779, !596, !596, !596, !596, !195}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "dctf", scope: !231, file: !139, line: 813, baseType: !1343, size: 960, offset: 263296)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_dct_function_t", file: !215, line: 115, baseType: !1344)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !215, line: 89, size: 960, elements: !1345)
!1345 = !{!1346, !1350, !1354, !1359, !1360, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1376, !1380, !1384}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "sub4x4_dct", scope: !1344, file: !215, line: 94, baseType: !1347, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{null, !933, !420, !420}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "add4x4_idct", scope: !1344, file: !215, line: 95, baseType: !1351, size: 64, offset: 64)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{null, !420, !933}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "sub8x8_dct", scope: !1344, file: !215, line: 97, baseType: !1355, size: 64, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{null, !1358, !420, !420}
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "sub8x8_dct_dc", scope: !1344, file: !215, line: 98, baseType: !1347, size: 64, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "add8x8_idct", scope: !1344, file: !215, line: 99, baseType: !1361, size: 64, offset: 256)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{null, !420, !1358}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "add8x8_idct_dc", scope: !1344, file: !215, line: 100, baseType: !1351, size: 64, offset: 320)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "sub16x16_dct", scope: !1344, file: !215, line: 102, baseType: !1355, size: 64, offset: 384)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "add16x16_idct", scope: !1344, file: !215, line: 103, baseType: !1361, size: 64, offset: 448)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "add16x16_idct_dc", scope: !1344, file: !215, line: 104, baseType: !1351, size: 64, offset: 512)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "sub8x8_dct8", scope: !1344, file: !215, line: 106, baseType: !1347, size: 64, offset: 576)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "add8x8_idct8", scope: !1344, file: !215, line: 107, baseType: !1351, size: 64, offset: 640)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sub16x16_dct8", scope: !1344, file: !215, line: 109, baseType: !1371, size: 64, offset: 704)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{null, !1374, !420, !420}
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 1024, elements: !217)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "add16x16_idct8", scope: !1344, file: !215, line: 110, baseType: !1377, size: 64, offset: 768)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{null, !420, !1374}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "dct4x4dc", scope: !1344, file: !215, line: 112, baseType: !1381, size: 64, offset: 832)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{null, !933}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "idct4x4dc", scope: !1344, file: !215, line: 113, baseType: !1381, size: 64, offset: 896)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "zigzagf", scope: !231, file: !139, line: 814, baseType: !1386, size: 384, offset: 264256)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_zigzag_function_t", file: !215, line: 126, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !215, line: 117, size: 384, elements: !1388)
!1388 = !{!1389, !1393, !1394, !1398, !1399, !1403}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "scan_8x8", scope: !1387, file: !215, line: 119, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{null, !933, !933}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "scan_4x4", scope: !1387, file: !215, line: 120, baseType: !1390, size: 64, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "sub_8x8", scope: !1387, file: !215, line: 121, baseType: !1395, size: 64, offset: 128)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!195, !933, !567, !420}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "sub_4x4", scope: !1387, file: !215, line: 122, baseType: !1395, size: 64, offset: 192)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "sub_4x4ac", scope: !1387, file: !215, line: 123, baseType: !1400, size: 64, offset: 256)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!195, !933, !567, !420, !933}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "interleave_8x8_cavlc", scope: !1387, file: !215, line: 124, baseType: !1404, size: 64, offset: 320)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{null, !933, !933, !420}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "quantf", scope: !231, file: !139, line: 815, baseType: !1408, size: 1408, offset: 264640)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_quant_function_t", file: !1409, line: 44, baseType: !1410)
!1409 = !DIFile(filename: "x264_src/common/quant.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1409, line: 26, size: 1408, elements: !1411)
!1411 = !{!1412, !1416, !1417, !1421, !1422, !1426, !1430, !1431, !1436, !1440, !1441, !1442, !1444}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "quant_8x8", scope: !1410, file: !1409, line: 28, baseType: !1413, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!195, !933, !596, !596}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "quant_4x4", scope: !1410, file: !1409, line: 29, baseType: !1413, size: 64, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "quant_4x4_dc", scope: !1410, file: !1409, line: 30, baseType: !1418, size: 64, offset: 128)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!195, !933, !195, !195}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "quant_2x2_dc", scope: !1410, file: !1409, line: 31, baseType: !1418, size: 64, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "dequant_8x8", scope: !1410, file: !1409, line: 33, baseType: !1423, size: 64, offset: 256)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{null, !933, !580, !195}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "dequant_4x4", scope: !1410, file: !1409, line: 34, baseType: !1427, size: 64, offset: 320)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{null, !933, !576, !195}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "dequant_4x4_dc", scope: !1410, file: !1409, line: 35, baseType: !1427, size: 64, offset: 384)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "denoise_dct", scope: !1410, file: !1409, line: 37, baseType: !1432, size: 64, offset: 448)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{null, !933, !1435, !596, !195}
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "decimate_score15", scope: !1410, file: !1409, line: 39, baseType: !1437, size: 64, offset: 512)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!195, !933}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "decimate_score16", scope: !1410, file: !1409, line: 40, baseType: !1437, size: 64, offset: 576)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "decimate_score64", scope: !1410, file: !1409, line: 41, baseType: !1437, size: 64, offset: 640)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_last", scope: !1410, file: !1409, line: 42, baseType: !1443, size: 384, offset: 704)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1437, size: 384, elements: !568)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_level_run", scope: !1410, file: !1409, line: 43, baseType: !1445, size: 320, offset: 1088)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 320, elements: !1115)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!195, !933, !1449}
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_run_level_t", file: !425, line: 63, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !425, line: 58, size: 416, elements: !1452)
!1452 = !{!1453, !1454, !1455}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1451, file: !425, line: 60, baseType: !195, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1451, file: !425, line: 61, baseType: !875, size: 256, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !1451, file: !425, line: 62, baseType: !281, size: 128, offset: 288)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "loopf", scope: !231, file: !139, line: 816, baseType: !1457, size: 576, offset: 266048)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_deblock_function_t", file: !704, line: 170, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !704, line: 161, size: 576, elements: !1459)
!1459 = !{!1460, !1466, !1467, !1473, !1474}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_luma", scope: !1458, file: !704, line: 163, baseType: !1461, size: 128)
!1461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1462, size: 128, elements: !153)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_deblock_inter_t", file: !704, line: 159, baseType: !1463)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{null, !420, !195, !195, !195, !759}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_chroma", scope: !1458, file: !704, line: 164, baseType: !1461, size: 128, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_luma_intra", scope: !1458, file: !704, line: 165, baseType: !1468, size: 128, offset: 256)
!1468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1469, size: 128, elements: !153)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_deblock_intra_t", file: !704, line: 160, baseType: !1470)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{null, !420, !195, !195, !195}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_chroma_intra", scope: !1458, file: !704, line: 166, baseType: !1468, size: 128, offset: 384)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_strength", scope: !1458, file: !704, line: 167, baseType: !1475, size: 64, offset: 512)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{null, !420, !1478, !1479, !1482, !195, !195}
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 1280, elements: !1481)
!1481 = !{!1023, !154}
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !1484)
!1484 = !{!167, !167}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !231, file: !139, line: 821, baseType: !1486, size: 64, offset: 266624)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_lookahead_t", file: !139, line: 377, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_lookahead_t", file: !139, line: 366, size: 960, elements: !1489)
!1489 = !{!1490, !1492, !1493, !1494, !1495, !1496, !1497, !1507, !1508}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "b_exit_thread", scope: !1488, file: !139, line: 368, baseType: !1491, size: 8)
!1491 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !150)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "b_thread_active", scope: !1488, file: !139, line: 369, baseType: !150, size: 8, offset: 8)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "b_analyse_keyframe", scope: !1488, file: !139, line: 370, baseType: !150, size: 8, offset: 16)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "i_last_keyframe", scope: !1488, file: !139, line: 371, baseType: !195, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "i_slicetype_length", scope: !1488, file: !139, line: 372, baseType: !195, size: 32, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "last_nonb", scope: !1488, file: !139, line: 373, baseType: !702, size: 64, offset: 128)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "ifbuf", scope: !1488, file: !139, line: 374, baseType: !1498, size: 256, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_synch_frame_list_t", file: !704, line: 157, baseType: !1499)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !704, line: 149, size: 256, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504, !1505, !1506}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1499, file: !704, line: 151, baseType: !701, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_size", scope: !1499, file: !704, line: 152, baseType: !195, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1499, file: !704, line: 153, baseType: !195, size: 32, offset: 96)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1499, file: !704, line: 154, baseType: !195, size: 32, offset: 128)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "cv_fill", scope: !1499, file: !704, line: 155, baseType: !195, size: 32, offset: 160)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "cv_empty", scope: !1499, file: !704, line: 156, baseType: !195, size: 32, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1488, file: !139, line: 375, baseType: !1498, size: 256, offset: 448)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ofbuf", scope: !1488, file: !139, line: 376, baseType: !1498, size: 256, offset: 704)
!1509 = !{}
!1510 = !DILocalVariable(name: "h", arg: 1, scope: !225, file: !3, line: 110, type: !228)
!1511 = !DILocation(line: 110, column: 35, scope: !225)
!1512 = !DILocalVariable(name: "idx", arg: 2, scope: !225, file: !3, line: 110, type: !195)
!1513 = !DILocation(line: 110, column: 42, scope: !225)
!1514 = !DILocalVariable(name: "i_qp", arg: 3, scope: !225, file: !3, line: 110, type: !195)
!1515 = !DILocation(line: 110, column: 51, scope: !225)
!1516 = !DILocalVariable(name: "nz", scope: !225, file: !3, line: 112, type: !195)
!1517 = !DILocation(line: 112, column: 9, scope: !225)
!1518 = !DILocalVariable(name: "p_src", scope: !225, file: !3, line: 113, type: !420)
!1519 = !DILocation(line: 113, column: 14, scope: !225)
!1520 = !DILocation(line: 113, column: 23, scope: !225)
!1521 = !DILocation(line: 113, column: 26, scope: !225)
!1522 = !DILocation(line: 113, column: 29, scope: !225)
!1523 = !DILocation(line: 113, column: 33, scope: !225)
!1524 = !DILocation(line: 113, column: 61, scope: !225)
!1525 = !DILocation(line: 113, column: 43, scope: !225)
!1526 = !DILocalVariable(name: "p_dst", scope: !225, file: !3, line: 114, type: !420)
!1527 = !DILocation(line: 114, column: 14, scope: !225)
!1528 = !DILocation(line: 114, column: 23, scope: !225)
!1529 = !DILocation(line: 114, column: 26, scope: !225)
!1530 = !DILocation(line: 114, column: 29, scope: !225)
!1531 = !DILocation(line: 114, column: 33, scope: !225)
!1532 = !DILocation(line: 114, column: 61, scope: !225)
!1533 = !DILocation(line: 114, column: 43, scope: !225)
!1534 = !DILocalVariable(name: "dct4x4", scope: !225, file: !3, line: 115, type: !875, align: 128)
!1535 = !DILocation(line: 115, column: 5, scope: !225)
!1536 = !DILocation(line: 117, column: 9, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !225, file: !3, line: 117, column: 9)
!1538 = !DILocation(line: 117, column: 12, scope: !1537)
!1539 = !DILocation(line: 117, column: 15, scope: !1537)
!1540 = !DILocation(line: 117, column: 9, scope: !225)
!1541 = !DILocation(line: 119, column: 14, scope: !1542)
!1542 = distinct !DILexicalBlock(scope: !1537, file: !3, line: 118, column: 5)
!1543 = !DILocation(line: 119, column: 17, scope: !1542)
!1544 = !DILocation(line: 119, column: 25, scope: !1542)
!1545 = !DILocation(line: 119, column: 34, scope: !1542)
!1546 = !DILocation(line: 119, column: 37, scope: !1542)
!1547 = !DILocation(line: 119, column: 41, scope: !1542)
!1548 = !DILocation(line: 119, column: 49, scope: !1542)
!1549 = !DILocation(line: 119, column: 55, scope: !1542)
!1550 = !DILocation(line: 119, column: 62, scope: !1542)
!1551 = !DILocation(line: 119, column: 12, scope: !1542)
!1552 = !DILocation(line: 120, column: 55, scope: !1542)
!1553 = !DILocation(line: 120, column: 9, scope: !1542)
!1554 = !DILocation(line: 120, column: 12, scope: !1542)
!1555 = !DILocation(line: 120, column: 15, scope: !1542)
!1556 = !DILocation(line: 120, column: 21, scope: !1542)
!1557 = !DILocation(line: 120, column: 47, scope: !1542)
!1558 = !DILocation(line: 120, column: 36, scope: !1542)
!1559 = !DILocation(line: 120, column: 53, scope: !1542)
!1560 = !DILocation(line: 121, column: 29, scope: !1542)
!1561 = !DILocation(line: 121, column: 34, scope: !1542)
!1562 = !DILocation(line: 121, column: 37, scope: !1542)
!1563 = !DILocation(line: 121, column: 31, scope: !1542)
!1564 = !DILocation(line: 121, column: 9, scope: !1542)
!1565 = !DILocation(line: 121, column: 12, scope: !1542)
!1566 = !DILocation(line: 121, column: 15, scope: !1542)
!1567 = !DILocation(line: 121, column: 26, scope: !1542)
!1568 = !DILocation(line: 122, column: 9, scope: !1542)
!1569 = !DILocation(line: 125, column: 5, scope: !225)
!1570 = !DILocation(line: 125, column: 8, scope: !225)
!1571 = !DILocation(line: 125, column: 13, scope: !225)
!1572 = !DILocation(line: 125, column: 25, scope: !225)
!1573 = !DILocation(line: 125, column: 33, scope: !225)
!1574 = !DILocation(line: 125, column: 40, scope: !225)
!1575 = !DILocation(line: 127, column: 26, scope: !225)
!1576 = !DILocation(line: 127, column: 29, scope: !225)
!1577 = !DILocation(line: 127, column: 37, scope: !225)
!1578 = !DILocation(line: 127, column: 60, scope: !225)
!1579 = !DILocation(line: 127, column: 10, scope: !225)
!1580 = !DILocation(line: 127, column: 8, scope: !225)
!1581 = !DILocation(line: 128, column: 51, scope: !225)
!1582 = !DILocation(line: 128, column: 5, scope: !225)
!1583 = !DILocation(line: 128, column: 8, scope: !225)
!1584 = !DILocation(line: 128, column: 11, scope: !225)
!1585 = !DILocation(line: 128, column: 17, scope: !225)
!1586 = !DILocation(line: 128, column: 43, scope: !225)
!1587 = !DILocation(line: 128, column: 32, scope: !225)
!1588 = !DILocation(line: 128, column: 49, scope: !225)
!1589 = !DILocation(line: 129, column: 9, scope: !1590)
!1590 = distinct !DILexicalBlock(scope: !225, file: !3, line: 129, column: 9)
!1591 = !DILocation(line: 129, column: 9, scope: !225)
!1592 = !DILocation(line: 131, column: 33, scope: !1593)
!1593 = distinct !DILexicalBlock(scope: !1590, file: !3, line: 130, column: 5)
!1594 = !DILocation(line: 131, column: 36, scope: !1593)
!1595 = !DILocation(line: 131, column: 30, scope: !1593)
!1596 = !DILocation(line: 131, column: 9, scope: !1593)
!1597 = !DILocation(line: 131, column: 12, scope: !1593)
!1598 = !DILocation(line: 131, column: 15, scope: !1593)
!1599 = !DILocation(line: 131, column: 26, scope: !1593)
!1600 = !DILocation(line: 132, column: 9, scope: !1593)
!1601 = !DILocation(line: 132, column: 12, scope: !1593)
!1602 = !DILocation(line: 132, column: 20, scope: !1593)
!1603 = !DILocation(line: 132, column: 30, scope: !1593)
!1604 = !DILocation(line: 132, column: 33, scope: !1593)
!1605 = !DILocation(line: 132, column: 37, scope: !1593)
!1606 = !DILocation(line: 132, column: 45, scope: !1593)
!1607 = !DILocation(line: 132, column: 51, scope: !1593)
!1608 = !DILocation(line: 133, column: 9, scope: !1593)
!1609 = !DILocation(line: 133, column: 12, scope: !1593)
!1610 = !DILocation(line: 133, column: 19, scope: !1593)
!1611 = !DILocation(line: 133, column: 32, scope: !1593)
!1612 = !DILocation(line: 133, column: 40, scope: !1593)
!1613 = !DILocation(line: 133, column: 43, scope: !1593)
!1614 = !DILocation(line: 133, column: 65, scope: !1593)
!1615 = !DILocation(line: 134, column: 9, scope: !1593)
!1616 = !DILocation(line: 134, column: 12, scope: !1593)
!1617 = !DILocation(line: 134, column: 17, scope: !1593)
!1618 = !DILocation(line: 134, column: 30, scope: !1593)
!1619 = !DILocation(line: 134, column: 37, scope: !1593)
!1620 = !DILocation(line: 135, column: 5, scope: !1593)
!1621 = !DILocation(line: 136, column: 1, scope: !225)
!1622 = distinct !DISubprogram(name: "x264_quant_4x4", scope: !3, file: !3, line: 81, type: !1623, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!195, !228, !933, !195, !195, !195, !195}
!1625 = !DILocalVariable(name: "h", arg: 1, scope: !1622, file: !3, line: 81, type: !228)
!1626 = !DILocation(line: 81, column: 50, scope: !1622)
!1627 = !DILocalVariable(name: "dct", arg: 2, scope: !1622, file: !3, line: 81, type: !933)
!1628 = !DILocation(line: 81, column: 61, scope: !1622)
!1629 = !DILocalVariable(name: "i_qp", arg: 3, scope: !1622, file: !3, line: 81, type: !195)
!1630 = !DILocation(line: 81, column: 74, scope: !1622)
!1631 = !DILocalVariable(name: "i_ctxBlockCat", arg: 4, scope: !1622, file: !3, line: 81, type: !195)
!1632 = !DILocation(line: 81, column: 84, scope: !1622)
!1633 = !DILocalVariable(name: "b_intra", arg: 5, scope: !1622, file: !3, line: 81, type: !195)
!1634 = !DILocation(line: 81, column: 103, scope: !1622)
!1635 = !DILocalVariable(name: "idx", arg: 6, scope: !1622, file: !3, line: 81, type: !195)
!1636 = !DILocation(line: 81, column: 116, scope: !1622)
!1637 = !DILocalVariable(name: "i_quant_cat", scope: !1622, file: !3, line: 83, type: !195)
!1638 = !DILocation(line: 83, column: 9, scope: !1622)
!1639 = !DILocation(line: 83, column: 23, scope: !1622)
!1640 = !DILocation(line: 84, column: 9, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 84, column: 9)
!1642 = !DILocation(line: 84, column: 12, scope: !1641)
!1643 = !DILocation(line: 84, column: 15, scope: !1641)
!1644 = !DILocation(line: 84, column: 9, scope: !1622)
!1645 = !DILocation(line: 85, column: 40, scope: !1641)
!1646 = !DILocation(line: 85, column: 43, scope: !1641)
!1647 = !DILocation(line: 85, column: 48, scope: !1641)
!1648 = !DILocation(line: 85, column: 61, scope: !1641)
!1649 = !DILocation(line: 85, column: 67, scope: !1641)
!1650 = !DILocation(line: 85, column: 82, scope: !1641)
!1651 = !DILocation(line: 85, column: 94, scope: !1641)
!1652 = !DILocation(line: 85, column: 16, scope: !1641)
!1653 = !DILocation(line: 85, column: 9, scope: !1641)
!1654 = !DILocation(line: 87, column: 16, scope: !1641)
!1655 = !DILocation(line: 87, column: 19, scope: !1641)
!1656 = !DILocation(line: 87, column: 26, scope: !1641)
!1657 = !DILocation(line: 87, column: 37, scope: !1641)
!1658 = !DILocation(line: 87, column: 42, scope: !1641)
!1659 = !DILocation(line: 87, column: 45, scope: !1641)
!1660 = !DILocation(line: 87, column: 55, scope: !1641)
!1661 = !DILocation(line: 87, column: 68, scope: !1641)
!1662 = !DILocation(line: 87, column: 75, scope: !1641)
!1663 = !DILocation(line: 87, column: 78, scope: !1641)
!1664 = !DILocation(line: 87, column: 90, scope: !1641)
!1665 = !DILocation(line: 87, column: 103, scope: !1641)
!1666 = !DILocation(line: 87, column: 9, scope: !1641)
!1667 = !DILocation(line: 88, column: 1, scope: !1622)
!1668 = distinct !DISubprogram(name: "x264_mb_encode_i8x8", scope: !3, file: !3, line: 152, type: !226, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!1669 = !DILocalVariable(name: "h", arg: 1, scope: !1668, file: !3, line: 152, type: !228)
!1670 = !DILocation(line: 152, column: 35, scope: !1668)
!1671 = !DILocalVariable(name: "idx", arg: 2, scope: !1668, file: !3, line: 152, type: !195)
!1672 = !DILocation(line: 152, column: 42, scope: !1668)
!1673 = !DILocalVariable(name: "i_qp", arg: 3, scope: !1668, file: !3, line: 152, type: !195)
!1674 = !DILocation(line: 152, column: 51, scope: !1668)
!1675 = !DILocalVariable(name: "x", scope: !1668, file: !3, line: 154, type: !195)
!1676 = !DILocation(line: 154, column: 9, scope: !1668)
!1677 = !DILocation(line: 154, column: 18, scope: !1668)
!1678 = !DILocation(line: 154, column: 21, scope: !1668)
!1679 = !DILocation(line: 154, column: 15, scope: !1668)
!1680 = !DILocalVariable(name: "y", scope: !1668, file: !3, line: 155, type: !195)
!1681 = !DILocation(line: 155, column: 9, scope: !1668)
!1682 = !DILocation(line: 155, column: 18, scope: !1668)
!1683 = !DILocation(line: 155, column: 21, scope: !1668)
!1684 = !DILocation(line: 155, column: 15, scope: !1668)
!1685 = !DILocalVariable(name: "nz", scope: !1668, file: !3, line: 156, type: !195)
!1686 = !DILocation(line: 156, column: 9, scope: !1668)
!1687 = !DILocalVariable(name: "p_src", scope: !1668, file: !3, line: 157, type: !420)
!1688 = !DILocation(line: 157, column: 14, scope: !1668)
!1689 = !DILocation(line: 157, column: 23, scope: !1668)
!1690 = !DILocation(line: 157, column: 26, scope: !1668)
!1691 = !DILocation(line: 157, column: 29, scope: !1668)
!1692 = !DILocation(line: 157, column: 33, scope: !1668)
!1693 = !DILocation(line: 157, column: 43, scope: !1668)
!1694 = !DILocation(line: 157, column: 45, scope: !1668)
!1695 = !DILocation(line: 157, column: 46, scope: !1668)
!1696 = !DILocation(line: 157, column: 44, scope: !1668)
!1697 = !DILocalVariable(name: "p_dst", scope: !1668, file: !3, line: 158, type: !420)
!1698 = !DILocation(line: 158, column: 14, scope: !1668)
!1699 = !DILocation(line: 158, column: 23, scope: !1668)
!1700 = !DILocation(line: 158, column: 26, scope: !1668)
!1701 = !DILocation(line: 158, column: 29, scope: !1668)
!1702 = !DILocation(line: 158, column: 33, scope: !1668)
!1703 = !DILocation(line: 158, column: 43, scope: !1668)
!1704 = !DILocation(line: 158, column: 45, scope: !1668)
!1705 = !DILocation(line: 158, column: 46, scope: !1668)
!1706 = !DILocation(line: 158, column: 44, scope: !1668)
!1707 = !DILocalVariable(name: "dct8x8", scope: !1668, file: !3, line: 159, type: !1375, align: 128)
!1708 = !DILocation(line: 159, column: 5, scope: !1668)
!1709 = !DILocation(line: 161, column: 9, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1668, file: !3, line: 161, column: 9)
!1711 = !DILocation(line: 161, column: 12, scope: !1710)
!1712 = !DILocation(line: 161, column: 15, scope: !1710)
!1713 = !DILocation(line: 161, column: 9, scope: !1668)
!1714 = !DILocation(line: 163, column: 14, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1710, file: !3, line: 162, column: 5)
!1716 = !DILocation(line: 163, column: 17, scope: !1715)
!1717 = !DILocation(line: 163, column: 25, scope: !1715)
!1718 = !DILocation(line: 163, column: 34, scope: !1715)
!1719 = !DILocation(line: 163, column: 37, scope: !1715)
!1720 = !DILocation(line: 163, column: 41, scope: !1715)
!1721 = !DILocation(line: 163, column: 49, scope: !1715)
!1722 = !DILocation(line: 163, column: 55, scope: !1715)
!1723 = !DILocation(line: 163, column: 62, scope: !1715)
!1724 = !DILocation(line: 163, column: 12, scope: !1715)
!1725 = !DILocation(line: 164, column: 9, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1715, file: !3, line: 164, column: 9)
!1727 = !DILocation(line: 165, column: 29, scope: !1715)
!1728 = !DILocation(line: 165, column: 33, scope: !1715)
!1729 = !DILocation(line: 165, column: 31, scope: !1715)
!1730 = !DILocation(line: 165, column: 9, scope: !1715)
!1731 = !DILocation(line: 165, column: 12, scope: !1715)
!1732 = !DILocation(line: 165, column: 15, scope: !1715)
!1733 = !DILocation(line: 165, column: 26, scope: !1715)
!1734 = !DILocation(line: 166, column: 9, scope: !1715)
!1735 = !DILocation(line: 169, column: 5, scope: !1668)
!1736 = !DILocation(line: 169, column: 8, scope: !1668)
!1737 = !DILocation(line: 169, column: 13, scope: !1668)
!1738 = !DILocation(line: 169, column: 26, scope: !1668)
!1739 = !DILocation(line: 169, column: 34, scope: !1668)
!1740 = !DILocation(line: 169, column: 41, scope: !1668)
!1741 = !DILocation(line: 171, column: 26, scope: !1668)
!1742 = !DILocation(line: 171, column: 29, scope: !1668)
!1743 = !DILocation(line: 171, column: 37, scope: !1668)
!1744 = !DILocation(line: 171, column: 46, scope: !1668)
!1745 = !DILocation(line: 171, column: 10, scope: !1668)
!1746 = !DILocation(line: 171, column: 8, scope: !1668)
!1747 = !DILocation(line: 172, column: 9, scope: !1748)
!1748 = distinct !DILexicalBlock(scope: !1668, file: !3, line: 172, column: 9)
!1749 = !DILocation(line: 172, column: 9, scope: !1668)
!1750 = !DILocation(line: 174, column: 32, scope: !1751)
!1751 = distinct !DILexicalBlock(scope: !1748, file: !3, line: 173, column: 5)
!1752 = !DILocation(line: 174, column: 30, scope: !1751)
!1753 = !DILocation(line: 174, column: 9, scope: !1751)
!1754 = !DILocation(line: 174, column: 12, scope: !1751)
!1755 = !DILocation(line: 174, column: 15, scope: !1751)
!1756 = !DILocation(line: 174, column: 26, scope: !1751)
!1757 = !DILocation(line: 175, column: 9, scope: !1751)
!1758 = !DILocation(line: 175, column: 12, scope: !1751)
!1759 = !DILocation(line: 175, column: 20, scope: !1751)
!1760 = !DILocation(line: 175, column: 30, scope: !1751)
!1761 = !DILocation(line: 175, column: 33, scope: !1751)
!1762 = !DILocation(line: 175, column: 37, scope: !1751)
!1763 = !DILocation(line: 175, column: 45, scope: !1751)
!1764 = !DILocation(line: 175, column: 51, scope: !1751)
!1765 = !DILocation(line: 176, column: 9, scope: !1751)
!1766 = !DILocation(line: 176, column: 12, scope: !1751)
!1767 = !DILocation(line: 176, column: 19, scope: !1751)
!1768 = !DILocation(line: 176, column: 32, scope: !1751)
!1769 = !DILocation(line: 176, column: 40, scope: !1751)
!1770 = !DILocation(line: 176, column: 43, scope: !1751)
!1771 = !DILocation(line: 176, column: 65, scope: !1751)
!1772 = !DILocation(line: 177, column: 9, scope: !1751)
!1773 = !DILocation(line: 177, column: 12, scope: !1751)
!1774 = !DILocation(line: 177, column: 17, scope: !1751)
!1775 = !DILocation(line: 177, column: 31, scope: !1751)
!1776 = !DILocation(line: 177, column: 38, scope: !1751)
!1777 = !DILocation(line: 178, column: 9, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1751, file: !3, line: 178, column: 9)
!1779 = !DILocation(line: 179, column: 5, scope: !1751)
!1780 = !DILocation(line: 181, column: 9, scope: !1781)
!1781 = distinct !DILexicalBlock(scope: !1748, file: !3, line: 181, column: 9)
!1782 = !DILocation(line: 182, column: 1, scope: !1668)
!1783 = distinct !DISubprogram(name: "x264_quant_8x8", scope: !3, file: !3, line: 90, type: !1784, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!195, !228, !933, !195, !195, !195}
!1786 = !DILocalVariable(name: "h", arg: 1, scope: !1783, file: !3, line: 90, type: !228)
!1787 = !DILocation(line: 90, column: 50, scope: !1783)
!1788 = !DILocalVariable(name: "dct", arg: 2, scope: !1783, file: !3, line: 90, type: !933)
!1789 = !DILocation(line: 90, column: 61, scope: !1783)
!1790 = !DILocalVariable(name: "i_qp", arg: 3, scope: !1783, file: !3, line: 90, type: !195)
!1791 = !DILocation(line: 90, column: 74, scope: !1783)
!1792 = !DILocalVariable(name: "b_intra", arg: 4, scope: !1783, file: !3, line: 90, type: !195)
!1793 = !DILocation(line: 90, column: 84, scope: !1783)
!1794 = !DILocalVariable(name: "idx", arg: 5, scope: !1783, file: !3, line: 90, type: !195)
!1795 = !DILocation(line: 90, column: 97, scope: !1783)
!1796 = !DILocalVariable(name: "i_quant_cat", scope: !1783, file: !3, line: 92, type: !195)
!1797 = !DILocation(line: 92, column: 9, scope: !1783)
!1798 = !DILocation(line: 92, column: 23, scope: !1783)
!1799 = !DILocation(line: 93, column: 9, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1783, file: !3, line: 93, column: 9)
!1801 = !DILocation(line: 93, column: 12, scope: !1800)
!1802 = !DILocation(line: 93, column: 15, scope: !1800)
!1803 = !DILocation(line: 93, column: 9, scope: !1783)
!1804 = !DILocation(line: 94, column: 40, scope: !1800)
!1805 = !DILocation(line: 94, column: 43, scope: !1800)
!1806 = !DILocation(line: 94, column: 48, scope: !1800)
!1807 = !DILocation(line: 94, column: 61, scope: !1800)
!1808 = !DILocation(line: 94, column: 67, scope: !1800)
!1809 = !DILocation(line: 94, column: 76, scope: !1800)
!1810 = !DILocation(line: 94, column: 16, scope: !1800)
!1811 = !DILocation(line: 94, column: 9, scope: !1800)
!1812 = !DILocation(line: 96, column: 16, scope: !1800)
!1813 = !DILocation(line: 96, column: 19, scope: !1800)
!1814 = !DILocation(line: 96, column: 26, scope: !1800)
!1815 = !DILocation(line: 96, column: 37, scope: !1800)
!1816 = !DILocation(line: 96, column: 42, scope: !1800)
!1817 = !DILocation(line: 96, column: 45, scope: !1800)
!1818 = !DILocation(line: 96, column: 55, scope: !1800)
!1819 = !DILocation(line: 96, column: 68, scope: !1800)
!1820 = !DILocation(line: 96, column: 75, scope: !1800)
!1821 = !DILocation(line: 96, column: 78, scope: !1800)
!1822 = !DILocation(line: 96, column: 90, scope: !1800)
!1823 = !DILocation(line: 96, column: 103, scope: !1800)
!1824 = !DILocation(line: 96, column: 9, scope: !1800)
!1825 = !DILocation(line: 97, column: 1, scope: !1783)
!1826 = distinct !DISubprogram(name: "x264_mb_encode_8x8_chroma", scope: !3, file: !3, line: 320, type: !226, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!1827 = !DILocalVariable(name: "h", arg: 1, scope: !1826, file: !3, line: 320, type: !228)
!1828 = !DILocation(line: 320, column: 41, scope: !1826)
!1829 = !DILocalVariable(name: "b_inter", arg: 2, scope: !1826, file: !3, line: 320, type: !195)
!1830 = !DILocation(line: 320, column: 48, scope: !1826)
!1831 = !DILocalVariable(name: "i_qp", arg: 3, scope: !1826, file: !3, line: 320, type: !195)
!1832 = !DILocation(line: 320, column: 61, scope: !1826)
!1833 = !DILocalVariable(name: "nz", scope: !1826, file: !3, line: 322, type: !195)
!1834 = !DILocation(line: 322, column: 9, scope: !1826)
!1835 = !DILocalVariable(name: "nz_dc", scope: !1826, file: !3, line: 322, type: !195)
!1836 = !DILocation(line: 322, column: 13, scope: !1826)
!1837 = !DILocalVariable(name: "b_decimate", scope: !1826, file: !3, line: 323, type: !195)
!1838 = !DILocation(line: 323, column: 9, scope: !1826)
!1839 = !DILocation(line: 323, column: 22, scope: !1826)
!1840 = !DILocation(line: 323, column: 30, scope: !1826)
!1841 = !DILocation(line: 323, column: 33, scope: !1826)
!1842 = !DILocation(line: 323, column: 36, scope: !1826)
!1843 = !DILocation(line: 323, column: 39, scope: !1826)
!1844 = !DILocation(line: 0, scope: !1826)
!1845 = !DILocalVariable(name: "dct2x2", scope: !1826, file: !3, line: 324, type: !1066, align: 128)
!1846 = !DILocation(line: 324, column: 5, scope: !1826)
!1847 = !DILocation(line: 325, column: 5, scope: !1826)
!1848 = !DILocation(line: 325, column: 8, scope: !1826)
!1849 = !DILocation(line: 325, column: 11, scope: !1826)
!1850 = !DILocation(line: 325, column: 24, scope: !1826)
!1851 = !DILocation(line: 330, column: 9, scope: !1852)
!1852 = distinct !DILexicalBlock(scope: !1826, file: !3, line: 330, column: 9)
!1853 = !DILocation(line: 330, column: 20, scope: !1852)
!1854 = !DILocation(line: 330, column: 23, scope: !1852)
!1855 = !DILocation(line: 330, column: 32, scope: !1852)
!1856 = !DILocation(line: 330, column: 35, scope: !1852)
!1857 = !DILocation(line: 330, column: 38, scope: !1852)
!1858 = !DILocation(line: 330, column: 28, scope: !1852)
!1859 = !DILocation(line: 330, column: 9, scope: !1826)
!1860 = !DILocalVariable(name: "thresh", scope: !1861, file: !3, line: 332, type: !195)
!1861 = distinct !DILexicalBlock(scope: !1852, file: !3, line: 331, column: 5)
!1862 = !DILocation(line: 332, column: 13, scope: !1861)
!1863 = !DILocation(line: 332, column: 40, scope: !1861)
!1864 = !DILocation(line: 332, column: 23, scope: !1861)
!1865 = !DILocation(line: 332, column: 46, scope: !1861)
!1866 = !DILocation(line: 332, column: 52, scope: !1861)
!1867 = !DILocalVariable(name: "ssd", scope: !1861, file: !3, line: 333, type: !332)
!1868 = !DILocation(line: 333, column: 13, scope: !1861)
!1869 = !DILocalVariable(name: "score", scope: !1861, file: !3, line: 334, type: !195)
!1870 = !DILocation(line: 334, column: 13, scope: !1861)
!1871 = !DILocation(line: 334, column: 21, scope: !1861)
!1872 = !DILocation(line: 334, column: 24, scope: !1861)
!1873 = !DILocation(line: 334, column: 29, scope: !1861)
!1874 = !DILocation(line: 334, column: 39, scope: !1861)
!1875 = !DILocation(line: 334, column: 42, scope: !1861)
!1876 = !DILocation(line: 334, column: 45, scope: !1861)
!1877 = !DILocation(line: 334, column: 49, scope: !1861)
!1878 = !DILocation(line: 334, column: 73, scope: !1861)
!1879 = !DILocation(line: 334, column: 76, scope: !1861)
!1880 = !DILocation(line: 334, column: 79, scope: !1861)
!1881 = !DILocation(line: 334, column: 83, scope: !1861)
!1882 = !DILocation(line: 334, column: 108, scope: !1861)
!1883 = !DILocation(line: 335, column: 13, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1861, file: !3, line: 335, column: 13)
!1885 = !DILocation(line: 335, column: 21, scope: !1884)
!1886 = !DILocation(line: 335, column: 27, scope: !1884)
!1887 = !DILocation(line: 335, column: 19, scope: !1884)
!1888 = !DILocation(line: 335, column: 13, scope: !1861)
!1889 = !DILocation(line: 336, column: 22, scope: !1884)
!1890 = !DILocation(line: 336, column: 25, scope: !1884)
!1891 = !DILocation(line: 336, column: 30, scope: !1884)
!1892 = !DILocation(line: 336, column: 40, scope: !1884)
!1893 = !DILocation(line: 336, column: 43, scope: !1884)
!1894 = !DILocation(line: 336, column: 46, scope: !1884)
!1895 = !DILocation(line: 336, column: 50, scope: !1884)
!1896 = !DILocation(line: 336, column: 74, scope: !1884)
!1897 = !DILocation(line: 336, column: 77, scope: !1884)
!1898 = !DILocation(line: 336, column: 80, scope: !1884)
!1899 = !DILocation(line: 336, column: 84, scope: !1884)
!1900 = !DILocation(line: 336, column: 109, scope: !1884)
!1901 = !DILocation(line: 336, column: 19, scope: !1884)
!1902 = !DILocation(line: 336, column: 13, scope: !1884)
!1903 = !DILocation(line: 337, column: 13, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1861, file: !3, line: 337, column: 13)
!1905 = !DILocation(line: 337, column: 21, scope: !1904)
!1906 = !DILocation(line: 337, column: 27, scope: !1904)
!1907 = !DILocation(line: 337, column: 19, scope: !1904)
!1908 = !DILocation(line: 337, column: 13, scope: !1861)
!1909 = !DILocation(line: 339, column: 13, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1904, file: !3, line: 338, column: 9)
!1911 = !DILocation(line: 339, column: 16, scope: !1910)
!1912 = !DILocation(line: 339, column: 19, scope: !1910)
!1913 = !DILocation(line: 339, column: 25, scope: !1910)
!1914 = !DILocation(line: 339, column: 40, scope: !1910)
!1915 = !DILocation(line: 339, column: 56, scope: !1910)
!1916 = !DILocation(line: 340, column: 13, scope: !1910)
!1917 = !DILocation(line: 340, column: 16, scope: !1910)
!1918 = !DILocation(line: 340, column: 19, scope: !1910)
!1919 = !DILocation(line: 340, column: 25, scope: !1910)
!1920 = !DILocation(line: 340, column: 40, scope: !1910)
!1921 = !DILocation(line: 340, column: 56, scope: !1910)
!1922 = !DILocation(line: 341, column: 13, scope: !1910)
!1923 = !DILocation(line: 341, column: 16, scope: !1910)
!1924 = !DILocation(line: 341, column: 19, scope: !1910)
!1925 = !DILocation(line: 341, column: 25, scope: !1910)
!1926 = !DILocation(line: 341, column: 40, scope: !1910)
!1927 = !DILocation(line: 341, column: 56, scope: !1910)
!1928 = !DILocation(line: 342, column: 13, scope: !1910)
!1929 = !DILocation(line: 342, column: 16, scope: !1910)
!1930 = !DILocation(line: 342, column: 19, scope: !1910)
!1931 = !DILocation(line: 342, column: 25, scope: !1910)
!1932 = !DILocation(line: 342, column: 40, scope: !1910)
!1933 = !DILocation(line: 342, column: 56, scope: !1910)
!1934 = !DILocation(line: 343, column: 13, scope: !1910)
!1935 = !DILocation(line: 343, column: 16, scope: !1910)
!1936 = !DILocation(line: 343, column: 19, scope: !1910)
!1937 = !DILocation(line: 343, column: 25, scope: !1910)
!1938 = !DILocation(line: 343, column: 40, scope: !1910)
!1939 = !DILocation(line: 343, column: 56, scope: !1910)
!1940 = !DILocation(line: 344, column: 13, scope: !1910)
!1941 = !DILocation(line: 344, column: 16, scope: !1910)
!1942 = !DILocation(line: 344, column: 19, scope: !1910)
!1943 = !DILocation(line: 344, column: 25, scope: !1910)
!1944 = !DILocation(line: 344, column: 40, scope: !1910)
!1945 = !DILocation(line: 344, column: 56, scope: !1910)
!1946 = !DILocation(line: 345, column: 13, scope: !1910)
!1947 = !DILocation(line: 345, column: 16, scope: !1910)
!1948 = !DILocation(line: 345, column: 19, scope: !1910)
!1949 = !DILocation(line: 345, column: 25, scope: !1910)
!1950 = !DILocation(line: 345, column: 40, scope: !1910)
!1951 = !DILocation(line: 345, column: 56, scope: !1910)
!1952 = !DILocation(line: 346, column: 13, scope: !1910)
!1953 = !DILocation(line: 346, column: 16, scope: !1910)
!1954 = !DILocation(line: 346, column: 19, scope: !1910)
!1955 = !DILocation(line: 346, column: 25, scope: !1910)
!1956 = !DILocation(line: 346, column: 40, scope: !1910)
!1957 = !DILocation(line: 346, column: 56, scope: !1910)
!1958 = !DILocation(line: 347, column: 13, scope: !1910)
!1959 = !DILocation(line: 347, column: 64, scope: !1910)
!1960 = !DILocalVariable(name: "ch", scope: !1961, file: !3, line: 349, type: !195)
!1961 = distinct !DILexicalBlock(scope: !1910, file: !3, line: 349, column: 13)
!1962 = !DILocation(line: 349, column: 22, scope: !1961)
!1963 = !DILocation(line: 349, column: 18, scope: !1961)
!1964 = !DILocation(line: 349, column: 30, scope: !1965)
!1965 = distinct !DILexicalBlock(scope: !1961, file: !3, line: 349, column: 13)
!1966 = !DILocation(line: 349, column: 33, scope: !1965)
!1967 = !DILocation(line: 349, column: 13, scope: !1961)
!1968 = !DILocation(line: 351, column: 25, scope: !1969)
!1969 = distinct !DILexicalBlock(scope: !1970, file: !3, line: 351, column: 21)
!1970 = distinct !DILexicalBlock(scope: !1965, file: !3, line: 350, column: 13)
!1971 = !DILocation(line: 351, column: 21, scope: !1969)
!1972 = !DILocation(line: 351, column: 31, scope: !1969)
!1973 = !DILocation(line: 351, column: 29, scope: !1969)
!1974 = !DILocation(line: 351, column: 21, scope: !1970)
!1975 = !DILocation(line: 353, column: 21, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1969, file: !3, line: 352, column: 17)
!1977 = !DILocation(line: 353, column: 24, scope: !1976)
!1978 = !DILocation(line: 353, column: 29, scope: !1976)
!1979 = !DILocation(line: 353, column: 44, scope: !1976)
!1980 = !DILocation(line: 353, column: 52, scope: !1976)
!1981 = !DILocation(line: 353, column: 55, scope: !1976)
!1982 = !DILocation(line: 353, column: 58, scope: !1976)
!1983 = !DILocation(line: 353, column: 62, scope: !1976)
!1984 = !DILocation(line: 353, column: 71, scope: !1976)
!1985 = !DILocation(line: 353, column: 70, scope: !1976)
!1986 = !DILocation(line: 353, column: 76, scope: !1976)
!1987 = !DILocation(line: 353, column: 79, scope: !1976)
!1988 = !DILocation(line: 353, column: 82, scope: !1976)
!1989 = !DILocation(line: 353, column: 86, scope: !1976)
!1990 = !DILocation(line: 353, column: 95, scope: !1976)
!1991 = !DILocation(line: 353, column: 94, scope: !1976)
!1992 = !DILocation(line: 354, column: 25, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1976, file: !3, line: 354, column: 25)
!1994 = !DILocation(line: 354, column: 28, scope: !1993)
!1995 = !DILocation(line: 354, column: 31, scope: !1993)
!1996 = !DILocation(line: 354, column: 25, scope: !1976)
!1997 = !DILocation(line: 355, column: 56, scope: !1993)
!1998 = !DILocation(line: 355, column: 59, scope: !1993)
!1999 = !DILocation(line: 355, column: 75, scope: !1993)
!2000 = !DILocation(line: 355, column: 74, scope: !1993)
!2001 = !DILocation(line: 355, column: 84, scope: !1993)
!2002 = !DILocation(line: 355, column: 106, scope: !1993)
!2003 = !DILocation(line: 355, column: 105, scope: !1993)
!2004 = !DILocation(line: 355, column: 33, scope: !1993)
!2005 = !DILocation(line: 355, column: 31, scope: !1993)
!2006 = !DILocation(line: 355, column: 25, scope: !1993)
!2007 = !DILocation(line: 357, column: 33, scope: !1993)
!2008 = !DILocation(line: 357, column: 36, scope: !1993)
!2009 = !DILocation(line: 357, column: 43, scope: !1993)
!2010 = !DILocation(line: 357, column: 57, scope: !1993)
!2011 = !DILocation(line: 357, column: 65, scope: !1993)
!2012 = !DILocation(line: 357, column: 68, scope: !1993)
!2013 = !DILocation(line: 357, column: 86, scope: !1993)
!2014 = !DILocation(line: 357, column: 85, scope: !1993)
!2015 = !DILocation(line: 357, column: 95, scope: !1993)
!2016 = !DILocation(line: 357, column: 103, scope: !1993)
!2017 = !DILocation(line: 357, column: 108, scope: !1993)
!2018 = !DILocation(line: 357, column: 111, scope: !1993)
!2019 = !DILocation(line: 357, column: 131, scope: !1993)
!2020 = !DILocation(line: 357, column: 130, scope: !1993)
!2021 = !DILocation(line: 357, column: 140, scope: !1993)
!2022 = !DILocation(line: 357, column: 148, scope: !1993)
!2023 = !DILocation(line: 357, column: 31, scope: !1993)
!2024 = !DILocation(line: 359, column: 25, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !1976, file: !3, line: 359, column: 25)
!2026 = !DILocation(line: 359, column: 25, scope: !1976)
!2027 = !DILocation(line: 361, column: 58, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !2029, file: !3, line: 361, column: 29)
!2029 = distinct !DILexicalBlock(scope: !2025, file: !3, line: 360, column: 21)
!2030 = !DILocation(line: 361, column: 61, scope: !2028)
!2031 = !DILocation(line: 361, column: 70, scope: !2028)
!2032 = !DILocation(line: 361, column: 76, scope: !2028)
!2033 = !DILocation(line: 361, column: 30, scope: !2028)
!2034 = !DILocation(line: 361, column: 29, scope: !2029)
!2035 = !DILocation(line: 362, column: 29, scope: !2028)
!2036 = !DILocation(line: 363, column: 25, scope: !2029)
!2037 = !DILocation(line: 363, column: 28, scope: !2029)
!2038 = !DILocation(line: 363, column: 31, scope: !2029)
!2039 = !DILocation(line: 363, column: 37, scope: !2029)
!2040 = !DILocation(line: 363, column: 52, scope: !2029)
!2041 = !DILocation(line: 363, column: 67, scope: !2029)
!2042 = !DILocation(line: 363, column: 66, scope: !2029)
!2043 = !DILocation(line: 363, column: 71, scope: !2029)
!2044 = !DILocation(line: 364, column: 45, scope: !2029)
!2045 = !DILocation(line: 364, column: 48, scope: !2029)
!2046 = !DILocation(line: 364, column: 52, scope: !2029)
!2047 = !DILocation(line: 364, column: 62, scope: !2029)
!2048 = !DILocation(line: 364, column: 67, scope: !2029)
!2049 = !DILocation(line: 364, column: 25, scope: !2029)
!2050 = !DILocation(line: 365, column: 50, scope: !2029)
!2051 = !DILocation(line: 365, column: 58, scope: !2029)
!2052 = !DILocation(line: 365, column: 66, scope: !2029)
!2053 = !DILocation(line: 365, column: 69, scope: !2029)
!2054 = !DILocation(line: 365, column: 91, scope: !2029)
!2055 = !DILocation(line: 365, column: 89, scope: !2029)
!2056 = !DILocation(line: 365, column: 101, scope: !2029)
!2057 = !DILocation(line: 365, column: 25, scope: !2029)
!2058 = !DILocation(line: 366, column: 25, scope: !2029)
!2059 = !DILocation(line: 366, column: 28, scope: !2029)
!2060 = !DILocation(line: 366, column: 33, scope: !2029)
!2061 = !DILocation(line: 366, column: 49, scope: !2029)
!2062 = !DILocation(line: 366, column: 52, scope: !2029)
!2063 = !DILocation(line: 366, column: 55, scope: !2029)
!2064 = !DILocation(line: 366, column: 59, scope: !2029)
!2065 = !DILocation(line: 366, column: 68, scope: !2029)
!2066 = !DILocation(line: 366, column: 67, scope: !2029)
!2067 = !DILocation(line: 366, column: 73, scope: !2029)
!2068 = !DILocation(line: 367, column: 25, scope: !2029)
!2069 = !DILocation(line: 367, column: 28, scope: !2029)
!2070 = !DILocation(line: 367, column: 31, scope: !2029)
!2071 = !DILocation(line: 367, column: 44, scope: !2029)
!2072 = !DILocation(line: 368, column: 21, scope: !2029)
!2073 = !DILocation(line: 369, column: 17, scope: !1976)
!2074 = !DILocation(line: 370, column: 13, scope: !1970)
!2075 = !DILocation(line: 349, column: 40, scope: !1965)
!2076 = !DILocation(line: 349, column: 13, scope: !1965)
!2077 = distinct !{!2077, !1967, !2078}
!2078 = !DILocation(line: 370, column: 13, scope: !1961)
!2079 = !DILocation(line: 371, column: 13, scope: !1910)
!2080 = !DILocation(line: 373, column: 5, scope: !1861)
!2081 = !DILocalVariable(name: "ch", scope: !2082, file: !3, line: 375, type: !195)
!2082 = distinct !DILexicalBlock(scope: !1826, file: !3, line: 375, column: 5)
!2083 = !DILocation(line: 375, column: 14, scope: !2082)
!2084 = !DILocation(line: 375, column: 10, scope: !2082)
!2085 = !DILocation(line: 375, column: 22, scope: !2086)
!2086 = distinct !DILexicalBlock(scope: !2082, file: !3, line: 375, column: 5)
!2087 = !DILocation(line: 375, column: 25, scope: !2086)
!2088 = !DILocation(line: 375, column: 5, scope: !2082)
!2089 = !DILocalVariable(name: "p_src", scope: !2090, file: !3, line: 377, type: !420)
!2090 = distinct !DILexicalBlock(scope: !2086, file: !3, line: 376, column: 5)
!2091 = !DILocation(line: 377, column: 19, scope: !2090)
!2092 = !DILocation(line: 377, column: 27, scope: !2090)
!2093 = !DILocation(line: 377, column: 30, scope: !2090)
!2094 = !DILocation(line: 377, column: 33, scope: !2090)
!2095 = !DILocation(line: 377, column: 37, scope: !2090)
!2096 = !DILocation(line: 377, column: 46, scope: !2090)
!2097 = !DILocation(line: 377, column: 45, scope: !2090)
!2098 = !DILocalVariable(name: "p_dst", scope: !2090, file: !3, line: 378, type: !420)
!2099 = !DILocation(line: 378, column: 19, scope: !2090)
!2100 = !DILocation(line: 378, column: 27, scope: !2090)
!2101 = !DILocation(line: 378, column: 30, scope: !2090)
!2102 = !DILocation(line: 378, column: 33, scope: !2090)
!2103 = !DILocation(line: 378, column: 37, scope: !2090)
!2104 = !DILocation(line: 378, column: 46, scope: !2090)
!2105 = !DILocation(line: 378, column: 45, scope: !2090)
!2106 = !DILocalVariable(name: "i_decimate_score", scope: !2090, file: !3, line: 379, type: !195)
!2107 = !DILocation(line: 379, column: 13, scope: !2090)
!2108 = !DILocalVariable(name: "nz_ac", scope: !2090, file: !3, line: 380, type: !195)
!2109 = !DILocation(line: 380, column: 13, scope: !2090)
!2110 = !DILocalVariable(name: "dct4x4", scope: !2090, file: !3, line: 382, type: !2111, align: 128)
!2111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 1024, elements: !2112)
!2112 = !{!167, !190}
!2113 = !DILocation(line: 382, column: 9, scope: !2090)
!2114 = !DILocation(line: 384, column: 13, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2090, file: !3, line: 384, column: 13)
!2116 = !DILocation(line: 384, column: 16, scope: !2115)
!2117 = !DILocation(line: 384, column: 19, scope: !2115)
!2118 = !DILocation(line: 384, column: 13, scope: !2090)
!2119 = !DILocalVariable(name: "i", scope: !2120, file: !3, line: 386, type: !195)
!2120 = distinct !DILexicalBlock(scope: !2121, file: !3, line: 386, column: 13)
!2121 = distinct !DILexicalBlock(scope: !2115, file: !3, line: 385, column: 9)
!2122 = !DILocation(line: 386, column: 22, scope: !2120)
!2123 = !DILocation(line: 386, column: 18, scope: !2120)
!2124 = !DILocation(line: 386, column: 29, scope: !2125)
!2125 = distinct !DILexicalBlock(scope: !2120, file: !3, line: 386, column: 13)
!2126 = !DILocation(line: 386, column: 31, scope: !2125)
!2127 = !DILocation(line: 386, column: 13, scope: !2120)
!2128 = !DILocalVariable(name: "oe", scope: !2129, file: !3, line: 388, type: !195)
!2129 = distinct !DILexicalBlock(scope: !2125, file: !3, line: 387, column: 13)
!2130 = !DILocation(line: 388, column: 21, scope: !2129)
!2131 = !DILocation(line: 388, column: 38, scope: !2129)
!2132 = !DILocation(line: 388, column: 26, scope: !2129)
!2133 = !DILocation(line: 388, column: 40, scope: !2129)
!2134 = !DILocation(line: 388, column: 57, scope: !2129)
!2135 = !DILocation(line: 388, column: 45, scope: !2129)
!2136 = !DILocation(line: 388, column: 59, scope: !2129)
!2137 = !DILocation(line: 388, column: 61, scope: !2129)
!2138 = !DILocation(line: 388, column: 43, scope: !2129)
!2139 = !DILocalVariable(name: "od", scope: !2129, file: !3, line: 389, type: !195)
!2140 = !DILocation(line: 389, column: 21, scope: !2129)
!2141 = !DILocation(line: 389, column: 38, scope: !2129)
!2142 = !DILocation(line: 389, column: 26, scope: !2129)
!2143 = !DILocation(line: 389, column: 40, scope: !2129)
!2144 = !DILocation(line: 389, column: 57, scope: !2129)
!2145 = !DILocation(line: 389, column: 45, scope: !2129)
!2146 = !DILocation(line: 389, column: 59, scope: !2129)
!2147 = !DILocation(line: 389, column: 61, scope: !2129)
!2148 = !DILocation(line: 389, column: 43, scope: !2129)
!2149 = !DILocation(line: 390, column: 22, scope: !2129)
!2150 = !DILocation(line: 390, column: 25, scope: !2129)
!2151 = !DILocation(line: 390, column: 33, scope: !2129)
!2152 = !DILocation(line: 390, column: 44, scope: !2129)
!2153 = !DILocation(line: 390, column: 47, scope: !2129)
!2154 = !DILocation(line: 390, column: 51, scope: !2129)
!2155 = !DILocation(line: 390, column: 62, scope: !2129)
!2156 = !DILocation(line: 390, column: 61, scope: !2129)
!2157 = !DILocation(line: 390, column: 64, scope: !2129)
!2158 = !DILocation(line: 390, column: 66, scope: !2129)
!2159 = !DILocation(line: 390, column: 63, scope: !2129)
!2160 = !DILocation(line: 390, column: 71, scope: !2129)
!2161 = !DILocation(line: 390, column: 77, scope: !2129)
!2162 = !DILocation(line: 390, column: 76, scope: !2129)
!2163 = !DILocation(line: 390, column: 81, scope: !2129)
!2164 = !DILocation(line: 390, column: 87, scope: !2129)
!2165 = !DILocation(line: 390, column: 86, scope: !2129)
!2166 = !DILocation(line: 390, column: 92, scope: !2129)
!2167 = !DILocation(line: 390, column: 95, scope: !2129)
!2168 = !DILocation(line: 390, column: 99, scope: !2129)
!2169 = !DILocation(line: 390, column: 109, scope: !2129)
!2170 = !DILocation(line: 390, column: 113, scope: !2129)
!2171 = !DILocation(line: 390, column: 20, scope: !2129)
!2172 = !DILocation(line: 391, column: 69, scope: !2129)
!2173 = !DILocation(line: 391, column: 17, scope: !2129)
!2174 = !DILocation(line: 391, column: 20, scope: !2129)
!2175 = !DILocation(line: 391, column: 23, scope: !2129)
!2176 = !DILocation(line: 391, column: 29, scope: !2129)
!2177 = !DILocation(line: 391, column: 58, scope: !2129)
!2178 = !DILocation(line: 391, column: 57, scope: !2129)
!2179 = !DILocation(line: 391, column: 60, scope: !2129)
!2180 = !DILocation(line: 391, column: 62, scope: !2129)
!2181 = !DILocation(line: 391, column: 59, scope: !2129)
!2182 = !DILocation(line: 391, column: 44, scope: !2129)
!2183 = !DILocation(line: 391, column: 67, scope: !2129)
!2184 = !DILocation(line: 392, column: 39, scope: !2129)
!2185 = !DILocation(line: 392, column: 17, scope: !2129)
!2186 = !DILocation(line: 392, column: 20, scope: !2129)
!2187 = !DILocation(line: 392, column: 23, scope: !2129)
!2188 = !DILocation(line: 392, column: 36, scope: !2129)
!2189 = !DILocation(line: 393, column: 13, scope: !2129)
!2190 = !DILocation(line: 386, column: 37, scope: !2125)
!2191 = !DILocation(line: 386, column: 13, scope: !2125)
!2192 = distinct !{!2192, !2127, !2193}
!2193 = !DILocation(line: 393, column: 13, scope: !2120)
!2194 = !DILocation(line: 394, column: 61, scope: !2121)
!2195 = !DILocation(line: 394, column: 13, scope: !2121)
!2196 = !DILocation(line: 394, column: 16, scope: !2121)
!2197 = !DILocation(line: 394, column: 19, scope: !2121)
!2198 = !DILocation(line: 394, column: 25, scope: !2121)
!2199 = !DILocation(line: 394, column: 40, scope: !2121)
!2200 = !DILocation(line: 394, column: 55, scope: !2121)
!2201 = !DILocation(line: 394, column: 54, scope: !2121)
!2202 = !DILocation(line: 394, column: 59, scope: !2121)
!2203 = !DILocation(line: 395, column: 13, scope: !2121)
!2204 = !DILocation(line: 398, column: 9, scope: !2090)
!2205 = !DILocation(line: 398, column: 12, scope: !2090)
!2206 = !DILocation(line: 398, column: 17, scope: !2090)
!2207 = !DILocation(line: 398, column: 29, scope: !2090)
!2208 = !DILocation(line: 398, column: 37, scope: !2090)
!2209 = !DILocation(line: 398, column: 44, scope: !2090)
!2210 = !DILocation(line: 399, column: 19, scope: !2090)
!2211 = !DILocation(line: 399, column: 27, scope: !2090)
!2212 = !DILocation(line: 399, column: 9, scope: !2090)
!2213 = !DILocalVariable(name: "i", scope: !2214, file: !3, line: 401, type: !195)
!2214 = distinct !DILexicalBlock(scope: !2090, file: !3, line: 401, column: 9)
!2215 = !DILocation(line: 401, column: 18, scope: !2214)
!2216 = !DILocation(line: 401, column: 14, scope: !2214)
!2217 = !DILocation(line: 401, column: 25, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2214, file: !3, line: 401, column: 9)
!2219 = !DILocation(line: 401, column: 27, scope: !2218)
!2220 = !DILocation(line: 401, column: 9, scope: !2214)
!2221 = !DILocation(line: 403, column: 17, scope: !2222)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !3, line: 403, column: 17)
!2223 = distinct !DILexicalBlock(scope: !2218, file: !3, line: 402, column: 9)
!2224 = !DILocation(line: 403, column: 20, scope: !2222)
!2225 = !DILocation(line: 403, column: 23, scope: !2222)
!2226 = !DILocation(line: 403, column: 17, scope: !2223)
!2227 = !DILocation(line: 404, column: 46, scope: !2222)
!2228 = !DILocation(line: 404, column: 56, scope: !2222)
!2229 = !DILocation(line: 404, column: 49, scope: !2222)
!2230 = !DILocation(line: 404, column: 68, scope: !2222)
!2231 = !DILocation(line: 404, column: 67, scope: !2222)
!2232 = !DILocation(line: 404, column: 77, scope: !2222)
!2233 = !DILocation(line: 404, column: 99, scope: !2222)
!2234 = !DILocation(line: 404, column: 98, scope: !2222)
!2235 = !DILocation(line: 404, column: 22, scope: !2222)
!2236 = !DILocation(line: 404, column: 20, scope: !2222)
!2237 = !DILocation(line: 404, column: 17, scope: !2222)
!2238 = !DILocation(line: 406, column: 22, scope: !2222)
!2239 = !DILocation(line: 406, column: 25, scope: !2222)
!2240 = !DILocation(line: 406, column: 32, scope: !2222)
!2241 = !DILocation(line: 406, column: 50, scope: !2222)
!2242 = !DILocation(line: 406, column: 43, scope: !2222)
!2243 = !DILocation(line: 406, column: 54, scope: !2222)
!2244 = !DILocation(line: 406, column: 57, scope: !2222)
!2245 = !DILocation(line: 406, column: 75, scope: !2222)
!2246 = !DILocation(line: 406, column: 74, scope: !2222)
!2247 = !DILocation(line: 406, column: 84, scope: !2222)
!2248 = !DILocation(line: 406, column: 91, scope: !2222)
!2249 = !DILocation(line: 406, column: 94, scope: !2222)
!2250 = !DILocation(line: 406, column: 114, scope: !2222)
!2251 = !DILocation(line: 406, column: 113, scope: !2222)
!2252 = !DILocation(line: 406, column: 123, scope: !2222)
!2253 = !DILocation(line: 406, column: 20, scope: !2222)
!2254 = !DILocation(line: 407, column: 65, scope: !2223)
!2255 = !DILocation(line: 407, column: 13, scope: !2223)
!2256 = !DILocation(line: 407, column: 16, scope: !2223)
!2257 = !DILocation(line: 407, column: 19, scope: !2223)
!2258 = !DILocation(line: 407, column: 25, scope: !2223)
!2259 = !DILocation(line: 407, column: 54, scope: !2223)
!2260 = !DILocation(line: 407, column: 53, scope: !2223)
!2261 = !DILocation(line: 407, column: 56, scope: !2223)
!2262 = !DILocation(line: 407, column: 58, scope: !2223)
!2263 = !DILocation(line: 407, column: 55, scope: !2223)
!2264 = !DILocation(line: 407, column: 40, scope: !2223)
!2265 = !DILocation(line: 407, column: 63, scope: !2223)
!2266 = !DILocation(line: 408, column: 17, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2223, file: !3, line: 408, column: 17)
!2268 = !DILocation(line: 408, column: 17, scope: !2223)
!2269 = !DILocation(line: 410, column: 23, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2267, file: !3, line: 409, column: 13)
!2271 = !DILocation(line: 411, column: 17, scope: !2270)
!2272 = !DILocation(line: 411, column: 20, scope: !2270)
!2273 = !DILocation(line: 411, column: 28, scope: !2270)
!2274 = !DILocation(line: 411, column: 38, scope: !2270)
!2275 = !DILocation(line: 411, column: 41, scope: !2270)
!2276 = !DILocation(line: 411, column: 45, scope: !2270)
!2277 = !DILocation(line: 411, column: 56, scope: !2270)
!2278 = !DILocation(line: 411, column: 55, scope: !2270)
!2279 = !DILocation(line: 411, column: 58, scope: !2270)
!2280 = !DILocation(line: 411, column: 60, scope: !2270)
!2281 = !DILocation(line: 411, column: 57, scope: !2270)
!2282 = !DILocation(line: 411, column: 72, scope: !2270)
!2283 = !DILocation(line: 411, column: 65, scope: !2270)
!2284 = !DILocation(line: 412, column: 17, scope: !2270)
!2285 = !DILocation(line: 412, column: 20, scope: !2270)
!2286 = !DILocation(line: 412, column: 27, scope: !2270)
!2287 = !DILocation(line: 412, column: 47, scope: !2270)
!2288 = !DILocation(line: 412, column: 40, scope: !2270)
!2289 = !DILocation(line: 412, column: 51, scope: !2270)
!2290 = !DILocation(line: 412, column: 54, scope: !2270)
!2291 = !DILocation(line: 412, column: 76, scope: !2270)
!2292 = !DILocation(line: 412, column: 74, scope: !2270)
!2293 = !DILocation(line: 412, column: 86, scope: !2270)
!2294 = !DILocation(line: 413, column: 21, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2270, file: !3, line: 413, column: 21)
!2296 = !DILocation(line: 413, column: 21, scope: !2270)
!2297 = !DILocation(line: 414, column: 41, scope: !2295)
!2298 = !DILocation(line: 414, column: 44, scope: !2295)
!2299 = !DILocation(line: 414, column: 51, scope: !2295)
!2300 = !DILocation(line: 414, column: 69, scope: !2295)
!2301 = !DILocation(line: 414, column: 72, scope: !2295)
!2302 = !DILocation(line: 414, column: 76, scope: !2295)
!2303 = !DILocation(line: 414, column: 87, scope: !2295)
!2304 = !DILocation(line: 414, column: 86, scope: !2295)
!2305 = !DILocation(line: 414, column: 89, scope: !2295)
!2306 = !DILocation(line: 414, column: 91, scope: !2295)
!2307 = !DILocation(line: 414, column: 88, scope: !2295)
!2308 = !DILocation(line: 414, column: 38, scope: !2295)
!2309 = !DILocation(line: 414, column: 21, scope: !2295)
!2310 = !DILocation(line: 415, column: 13, scope: !2270)
!2311 = !DILocation(line: 416, column: 9, scope: !2223)
!2312 = !DILocation(line: 401, column: 33, scope: !2218)
!2313 = !DILocation(line: 401, column: 9, scope: !2218)
!2314 = distinct !{!2314, !2220, !2315}
!2315 = !DILocation(line: 416, column: 9, scope: !2214)
!2316 = !DILocation(line: 418, column: 13, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2090, file: !3, line: 418, column: 13)
!2318 = !DILocation(line: 418, column: 16, scope: !2317)
!2319 = !DILocation(line: 418, column: 19, scope: !2317)
!2320 = !DILocation(line: 418, column: 13, scope: !2090)
!2321 = !DILocation(line: 419, column: 44, scope: !2317)
!2322 = !DILocation(line: 419, column: 47, scope: !2317)
!2323 = !DILocation(line: 419, column: 63, scope: !2317)
!2324 = !DILocation(line: 419, column: 62, scope: !2317)
!2325 = !DILocation(line: 419, column: 72, scope: !2317)
!2326 = !DILocation(line: 419, column: 94, scope: !2317)
!2327 = !DILocation(line: 419, column: 93, scope: !2317)
!2328 = !DILocation(line: 419, column: 21, scope: !2317)
!2329 = !DILocation(line: 419, column: 19, scope: !2317)
!2330 = !DILocation(line: 419, column: 13, scope: !2317)
!2331 = !DILocation(line: 421, column: 21, scope: !2317)
!2332 = !DILocation(line: 421, column: 24, scope: !2317)
!2333 = !DILocation(line: 421, column: 31, scope: !2317)
!2334 = !DILocation(line: 421, column: 45, scope: !2317)
!2335 = !DILocation(line: 421, column: 53, scope: !2317)
!2336 = !DILocation(line: 421, column: 56, scope: !2317)
!2337 = !DILocation(line: 421, column: 74, scope: !2317)
!2338 = !DILocation(line: 421, column: 73, scope: !2317)
!2339 = !DILocation(line: 421, column: 83, scope: !2317)
!2340 = !DILocation(line: 421, column: 91, scope: !2317)
!2341 = !DILocation(line: 421, column: 96, scope: !2317)
!2342 = !DILocation(line: 421, column: 99, scope: !2317)
!2343 = !DILocation(line: 421, column: 119, scope: !2317)
!2344 = !DILocation(line: 421, column: 118, scope: !2317)
!2345 = !DILocation(line: 421, column: 128, scope: !2317)
!2346 = !DILocation(line: 421, column: 136, scope: !2317)
!2347 = !DILocation(line: 421, column: 19, scope: !2317)
!2348 = !DILocation(line: 423, column: 57, scope: !2090)
!2349 = !DILocation(line: 423, column: 9, scope: !2090)
!2350 = !DILocation(line: 423, column: 12, scope: !2090)
!2351 = !DILocation(line: 423, column: 15, scope: !2090)
!2352 = !DILocation(line: 423, column: 21, scope: !2090)
!2353 = !DILocation(line: 423, column: 36, scope: !2090)
!2354 = !DILocation(line: 423, column: 51, scope: !2090)
!2355 = !DILocation(line: 423, column: 50, scope: !2090)
!2356 = !DILocation(line: 423, column: 55, scope: !2090)
!2357 = !DILocation(line: 425, column: 14, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !2090, file: !3, line: 425, column: 13)
!2359 = !DILocation(line: 425, column: 25, scope: !2358)
!2360 = !DILocation(line: 425, column: 28, scope: !2358)
!2361 = !DILocation(line: 425, column: 45, scope: !2358)
!2362 = !DILocation(line: 425, column: 50, scope: !2358)
!2363 = !DILocation(line: 425, column: 54, scope: !2358)
!2364 = !DILocation(line: 425, column: 13, scope: !2090)
!2365 = !DILocation(line: 428, column: 13, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2358, file: !3, line: 426, column: 9)
!2367 = !DILocation(line: 428, column: 16, scope: !2366)
!2368 = !DILocation(line: 428, column: 19, scope: !2366)
!2369 = !DILocation(line: 428, column: 25, scope: !2366)
!2370 = !DILocation(line: 428, column: 40, scope: !2366)
!2371 = !DILocation(line: 428, column: 60, scope: !2366)
!2372 = !DILocation(line: 428, column: 59, scope: !2366)
!2373 = !DILocation(line: 428, column: 56, scope: !2366)
!2374 = !DILocation(line: 428, column: 64, scope: !2366)
!2375 = !DILocation(line: 429, column: 13, scope: !2366)
!2376 = !DILocation(line: 429, column: 16, scope: !2366)
!2377 = !DILocation(line: 429, column: 19, scope: !2366)
!2378 = !DILocation(line: 429, column: 25, scope: !2366)
!2379 = !DILocation(line: 429, column: 40, scope: !2366)
!2380 = !DILocation(line: 429, column: 60, scope: !2366)
!2381 = !DILocation(line: 429, column: 59, scope: !2366)
!2382 = !DILocation(line: 429, column: 56, scope: !2366)
!2383 = !DILocation(line: 429, column: 64, scope: !2366)
!2384 = !DILocation(line: 430, column: 13, scope: !2366)
!2385 = !DILocation(line: 430, column: 16, scope: !2366)
!2386 = !DILocation(line: 430, column: 19, scope: !2366)
!2387 = !DILocation(line: 430, column: 25, scope: !2366)
!2388 = !DILocation(line: 430, column: 40, scope: !2366)
!2389 = !DILocation(line: 430, column: 60, scope: !2366)
!2390 = !DILocation(line: 430, column: 59, scope: !2366)
!2391 = !DILocation(line: 430, column: 56, scope: !2366)
!2392 = !DILocation(line: 430, column: 64, scope: !2366)
!2393 = !DILocation(line: 431, column: 13, scope: !2366)
!2394 = !DILocation(line: 431, column: 16, scope: !2366)
!2395 = !DILocation(line: 431, column: 19, scope: !2366)
!2396 = !DILocation(line: 431, column: 25, scope: !2366)
!2397 = !DILocation(line: 431, column: 40, scope: !2366)
!2398 = !DILocation(line: 431, column: 60, scope: !2366)
!2399 = !DILocation(line: 431, column: 59, scope: !2366)
!2400 = !DILocation(line: 431, column: 56, scope: !2366)
!2401 = !DILocation(line: 431, column: 64, scope: !2366)
!2402 = !DILocation(line: 432, column: 18, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 432, column: 17)
!2404 = !DILocation(line: 432, column: 17, scope: !2366)
!2405 = !DILocation(line: 433, column: 17, scope: !2403)
!2406 = !DILocation(line: 434, column: 46, scope: !2407)
!2407 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 434, column: 17)
!2408 = !DILocation(line: 434, column: 49, scope: !2407)
!2409 = !DILocation(line: 434, column: 58, scope: !2407)
!2410 = !DILocation(line: 434, column: 64, scope: !2407)
!2411 = !DILocation(line: 434, column: 18, scope: !2407)
!2412 = !DILocation(line: 434, column: 17, scope: !2366)
!2413 = !DILocation(line: 436, column: 17, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2407, file: !3, line: 435, column: 13)
!2415 = !DILocation(line: 436, column: 20, scope: !2414)
!2416 = !DILocation(line: 436, column: 23, scope: !2414)
!2417 = !DILocation(line: 436, column: 29, scope: !2414)
!2418 = !DILocation(line: 436, column: 44, scope: !2414)
!2419 = !DILocation(line: 436, column: 59, scope: !2414)
!2420 = !DILocation(line: 436, column: 58, scope: !2414)
!2421 = !DILocation(line: 436, column: 63, scope: !2414)
!2422 = !DILocation(line: 437, column: 17, scope: !2414)
!2423 = !DILocation(line: 440, column: 33, scope: !2366)
!2424 = !DILocation(line: 440, column: 36, scope: !2366)
!2425 = !DILocation(line: 440, column: 40, scope: !2366)
!2426 = !DILocation(line: 440, column: 50, scope: !2366)
!2427 = !DILocation(line: 440, column: 55, scope: !2366)
!2428 = !DILocation(line: 440, column: 13, scope: !2366)
!2429 = !DILocation(line: 441, column: 38, scope: !2366)
!2430 = !DILocation(line: 441, column: 46, scope: !2366)
!2431 = !DILocation(line: 441, column: 54, scope: !2366)
!2432 = !DILocation(line: 441, column: 57, scope: !2366)
!2433 = !DILocation(line: 441, column: 79, scope: !2366)
!2434 = !DILocation(line: 441, column: 77, scope: !2366)
!2435 = !DILocation(line: 441, column: 89, scope: !2366)
!2436 = !DILocation(line: 441, column: 13, scope: !2366)
!2437 = !DILocation(line: 442, column: 13, scope: !2366)
!2438 = !DILocation(line: 442, column: 16, scope: !2366)
!2439 = !DILocation(line: 442, column: 21, scope: !2366)
!2440 = !DILocation(line: 442, column: 37, scope: !2366)
!2441 = !DILocation(line: 442, column: 44, scope: !2366)
!2442 = !DILocation(line: 443, column: 9, scope: !2366)
!2443 = !DILocation(line: 446, column: 13, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2358, file: !3, line: 445, column: 9)
!2445 = !DILocation(line: 446, column: 16, scope: !2444)
!2446 = !DILocation(line: 446, column: 19, scope: !2444)
!2447 = !DILocation(line: 446, column: 32, scope: !2444)
!2448 = !DILocation(line: 447, column: 17, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2444, file: !3, line: 447, column: 17)
!2450 = !DILocation(line: 447, column: 17, scope: !2444)
!2451 = !DILocation(line: 449, column: 37, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2449, file: !3, line: 448, column: 13)
!2453 = !DILocation(line: 449, column: 40, scope: !2452)
!2454 = !DILocation(line: 449, column: 44, scope: !2452)
!2455 = !DILocation(line: 449, column: 54, scope: !2452)
!2456 = !DILocation(line: 449, column: 59, scope: !2452)
!2457 = !DILocation(line: 449, column: 17, scope: !2452)
!2458 = !DILocation(line: 450, column: 38, scope: !2452)
!2459 = !DILocation(line: 450, column: 46, scope: !2452)
!2460 = !DILocation(line: 450, column: 54, scope: !2452)
!2461 = !DILocation(line: 450, column: 57, scope: !2452)
!2462 = !DILocation(line: 450, column: 79, scope: !2452)
!2463 = !DILocation(line: 450, column: 77, scope: !2452)
!2464 = !DILocation(line: 450, column: 89, scope: !2452)
!2465 = !DILocation(line: 450, column: 17, scope: !2452)
!2466 = !DILocation(line: 451, column: 13, scope: !2452)
!2467 = !DILocation(line: 452, column: 13, scope: !2444)
!2468 = !DILocation(line: 452, column: 16, scope: !2444)
!2469 = !DILocation(line: 452, column: 21, scope: !2444)
!2470 = !DILocation(line: 452, column: 34, scope: !2444)
!2471 = !DILocation(line: 452, column: 41, scope: !2444)
!2472 = !DILocation(line: 454, column: 5, scope: !2090)
!2473 = !DILocation(line: 375, column: 32, scope: !2086)
!2474 = !DILocation(line: 375, column: 5, scope: !2086)
!2475 = distinct !{!2475, !2088, !2476}
!2476 = !DILocation(line: 454, column: 5, scope: !2082)
!2477 = !DILocation(line: 457, column: 30, scope: !1826)
!2478 = !DILocation(line: 457, column: 29, scope: !1826)
!2479 = !DILocation(line: 457, column: 28, scope: !1826)
!2480 = !DILocation(line: 457, column: 84, scope: !1826)
!2481 = !DILocation(line: 457, column: 87, scope: !1826)
!2482 = !DILocation(line: 457, column: 90, scope: !1826)
!2483 = !DILocation(line: 457, column: 82, scope: !1826)
!2484 = !DILocation(line: 457, column: 106, scope: !1826)
!2485 = !DILocation(line: 457, column: 109, scope: !1826)
!2486 = !DILocation(line: 457, column: 112, scope: !1826)
!2487 = !DILocation(line: 457, column: 104, scope: !1826)
!2488 = !DILocation(line: 457, column: 5, scope: !1826)
!2489 = !DILocation(line: 457, column: 8, scope: !1826)
!2490 = !DILocation(line: 457, column: 11, scope: !1826)
!2491 = !DILocation(line: 457, column: 24, scope: !1826)
!2492 = !DILocation(line: 458, column: 1, scope: !1826)
!2493 = distinct !DISubprogram(name: "x264_mb_optimize_chroma_dc", scope: !3, file: !3, line: 279, type: !2494, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!195, !228, !195, !195, !933}
!2496 = !DILocalVariable(name: "h", arg: 1, scope: !2493, file: !3, line: 279, type: !228)
!2497 = !DILocation(line: 279, column: 55, scope: !2493)
!2498 = !DILocalVariable(name: "b_inter", arg: 2, scope: !2493, file: !3, line: 279, type: !195)
!2499 = !DILocation(line: 279, column: 62, scope: !2493)
!2500 = !DILocalVariable(name: "i_qp", arg: 3, scope: !2493, file: !3, line: 279, type: !195)
!2501 = !DILocation(line: 279, column: 75, scope: !2493)
!2502 = !DILocalVariable(name: "dct2x2", arg: 4, scope: !2493, file: !3, line: 279, type: !933)
!2503 = !DILocation(line: 279, column: 89, scope: !2493)
!2504 = !DILocalVariable(name: "dct2x2_orig", scope: !2493, file: !3, line: 281, type: !1066)
!2505 = !DILocation(line: 281, column: 13, scope: !2493)
!2506 = !DILocalVariable(name: "coeff", scope: !2493, file: !3, line: 282, type: !195)
!2507 = !DILocation(line: 282, column: 9, scope: !2493)
!2508 = !DILocalVariable(name: "nz", scope: !2493, file: !3, line: 282, type: !195)
!2509 = !DILocation(line: 282, column: 16, scope: !2493)
!2510 = !DILocation(line: 285, column: 9, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2493, file: !3, line: 285, column: 9)
!2512 = !DILocation(line: 285, column: 12, scope: !2511)
!2513 = !DILocation(line: 285, column: 34, scope: !2511)
!2514 = !DILocation(line: 285, column: 32, scope: !2511)
!2515 = !DILocation(line: 285, column: 43, scope: !2511)
!2516 = !DILocation(line: 285, column: 47, scope: !2511)
!2517 = !DILocation(line: 285, column: 58, scope: !2511)
!2518 = !DILocation(line: 285, column: 62, scope: !2511)
!2519 = !DILocation(line: 285, column: 54, scope: !2511)
!2520 = !DILocation(line: 285, column: 66, scope: !2511)
!2521 = !DILocation(line: 285, column: 9, scope: !2493)
!2522 = !DILocation(line: 286, column: 9, scope: !2511)
!2523 = !DILocation(line: 288, column: 30, scope: !2493)
!2524 = !DILocation(line: 288, column: 43, scope: !2493)
!2525 = !DILocation(line: 288, column: 51, scope: !2493)
!2526 = !DILocation(line: 288, column: 54, scope: !2493)
!2527 = !DILocation(line: 288, column: 76, scope: !2493)
!2528 = !DILocation(line: 288, column: 74, scope: !2493)
!2529 = !DILocation(line: 288, column: 86, scope: !2493)
!2530 = !DILocation(line: 288, column: 5, scope: !2493)
!2531 = !DILocation(line: 289, column: 5, scope: !2493)
!2532 = !DILocation(line: 289, column: 20, scope: !2493)
!2533 = !DILocation(line: 290, column: 5, scope: !2493)
!2534 = !DILocation(line: 290, column: 20, scope: !2493)
!2535 = !DILocation(line: 291, column: 5, scope: !2493)
!2536 = !DILocation(line: 291, column: 20, scope: !2493)
!2537 = !DILocation(line: 292, column: 5, scope: !2493)
!2538 = !DILocation(line: 292, column: 20, scope: !2493)
!2539 = !DILocation(line: 295, column: 12, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2493, file: !3, line: 295, column: 9)
!2541 = !DILocation(line: 295, column: 27, scope: !2540)
!2542 = !DILocation(line: 295, column: 26, scope: !2540)
!2543 = !DILocation(line: 295, column: 42, scope: !2540)
!2544 = !DILocation(line: 295, column: 41, scope: !2540)
!2545 = !DILocation(line: 295, column: 57, scope: !2540)
!2546 = !DILocation(line: 295, column: 56, scope: !2540)
!2547 = !DILocation(line: 295, column: 72, scope: !2540)
!2548 = !DILocation(line: 295, column: 9, scope: !2493)
!2549 = !DILocation(line: 296, column: 9, scope: !2540)
!2550 = !DILocation(line: 299, column: 13, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2493, file: !3, line: 299, column: 5)
!2552 = !DILocation(line: 299, column: 26, scope: !2551)
!2553 = !DILocation(line: 299, column: 29, scope: !2551)
!2554 = !DILocation(line: 299, column: 36, scope: !2551)
!2555 = !DILocation(line: 299, column: 63, scope: !2551)
!2556 = !DILocation(line: 299, column: 24, scope: !2551)
!2557 = !DILocation(line: 299, column: 10, scope: !2551)
!2558 = !DILocation(line: 299, column: 73, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2551, file: !3, line: 299, column: 5)
!2560 = !DILocation(line: 299, column: 79, scope: !2559)
!2561 = !DILocation(line: 299, column: 5, scope: !2551)
!2562 = !DILocalVariable(name: "level", scope: !2563, file: !3, line: 301, type: !195)
!2563 = distinct !DILexicalBlock(scope: !2559, file: !3, line: 300, column: 5)
!2564 = !DILocation(line: 301, column: 13, scope: !2563)
!2565 = !DILocation(line: 301, column: 21, scope: !2563)
!2566 = !DILocation(line: 301, column: 28, scope: !2563)
!2567 = !DILocalVariable(name: "sign", scope: !2563, file: !3, line: 302, type: !195)
!2568 = !DILocation(line: 302, column: 13, scope: !2563)
!2569 = !DILocation(line: 302, column: 20, scope: !2563)
!2570 = !DILocation(line: 302, column: 25, scope: !2563)
!2571 = !DILocation(line: 302, column: 30, scope: !2563)
!2572 = !DILocation(line: 304, column: 9, scope: !2563)
!2573 = !DILocation(line: 304, column: 16, scope: !2563)
!2574 = !DILocation(line: 306, column: 29, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2563, file: !3, line: 305, column: 9)
!2576 = !DILocation(line: 306, column: 37, scope: !2575)
!2577 = !DILocation(line: 306, column: 35, scope: !2575)
!2578 = !DILocation(line: 306, column: 13, scope: !2575)
!2579 = !DILocation(line: 306, column: 20, scope: !2575)
!2580 = !DILocation(line: 306, column: 27, scope: !2575)
!2581 = !DILocation(line: 307, column: 44, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 307, column: 17)
!2583 = !DILocation(line: 307, column: 57, scope: !2582)
!2584 = !DILocation(line: 307, column: 65, scope: !2582)
!2585 = !DILocation(line: 307, column: 68, scope: !2582)
!2586 = !DILocation(line: 307, column: 90, scope: !2582)
!2587 = !DILocation(line: 307, column: 88, scope: !2582)
!2588 = !DILocation(line: 307, column: 100, scope: !2582)
!2589 = !DILocation(line: 307, column: 17, scope: !2582)
!2590 = !DILocation(line: 307, column: 17, scope: !2575)
!2591 = !DILocation(line: 309, column: 20, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2582, file: !3, line: 308, column: 13)
!2593 = !DILocation(line: 310, column: 33, scope: !2592)
!2594 = !DILocation(line: 310, column: 17, scope: !2592)
!2595 = !DILocation(line: 310, column: 24, scope: !2592)
!2596 = !DILocation(line: 310, column: 31, scope: !2592)
!2597 = !DILocation(line: 311, column: 17, scope: !2592)
!2598 = !DILocation(line: 313, column: 22, scope: !2575)
!2599 = !DILocation(line: 313, column: 19, scope: !2575)
!2600 = distinct !{!2600, !2572, !2601}
!2601 = !DILocation(line: 314, column: 9, scope: !2563)
!2602 = !DILocation(line: 315, column: 5, scope: !2563)
!2603 = !DILocation(line: 299, column: 90, scope: !2559)
!2604 = !DILocation(line: 299, column: 5, scope: !2559)
!2605 = distinct !{!2605, !2561, !2606}
!2606 = !DILocation(line: 315, column: 5, scope: !2551)
!2607 = !DILocation(line: 317, column: 12, scope: !2493)
!2608 = !DILocation(line: 317, column: 5, scope: !2493)
!2609 = !DILocation(line: 318, column: 1, scope: !2493)
!2610 = distinct !DISubprogram(name: "zigzag_scan_2x2_dc", scope: !3, file: !3, line: 31, type: !1391, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!2611 = !DILocalVariable(name: "level", arg: 1, scope: !2610, file: !3, line: 31, type: !933)
!2612 = !DILocation(line: 31, column: 48, scope: !2610)
!2613 = !DILocalVariable(name: "dct", arg: 2, scope: !2610, file: !3, line: 31, type: !933)
!2614 = !DILocation(line: 31, column: 66, scope: !2610)
!2615 = !DILocation(line: 33, column: 5, scope: !2610)
!2616 = !DILocation(line: 34, column: 5, scope: !2610)
!2617 = !DILocation(line: 35, column: 5, scope: !2610)
!2618 = !DILocation(line: 36, column: 5, scope: !2610)
!2619 = !DILocation(line: 37, column: 1, scope: !2610)
!2620 = distinct !DISubprogram(name: "idct_dequant_2x2_dconly", scope: !3, file: !3, line: 56, type: !2621, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{null, !933, !933, !576, !195}
!2623 = !DILocalVariable(name: "out", arg: 1, scope: !2620, file: !3, line: 56, type: !933)
!2624 = !DILocation(line: 56, column: 53, scope: !2620)
!2625 = !DILocalVariable(name: "dct", arg: 2, scope: !2620, file: !3, line: 56, type: !933)
!2626 = !DILocation(line: 56, column: 69, scope: !2620)
!2627 = !DILocalVariable(name: "dequant_mf", arg: 3, scope: !2620, file: !3, line: 56, type: !576)
!2628 = !DILocation(line: 56, column: 81, scope: !2620)
!2629 = !DILocalVariable(name: "i_qp", arg: 4, scope: !2620, file: !3, line: 56, type: !195)
!2630 = !DILocation(line: 56, column: 104, scope: !2620)
!2631 = !DILocalVariable(name: "d0", scope: !2620, file: !3, line: 58, type: !195)
!2632 = !DILocation(line: 58, column: 5, scope: !2620)
!2633 = !DILocalVariable(name: "d1", scope: !2620, file: !3, line: 58, type: !195)
!2634 = !DILocalVariable(name: "d2", scope: !2620, file: !3, line: 58, type: !195)
!2635 = !DILocalVariable(name: "d3", scope: !2620, file: !3, line: 58, type: !195)
!2636 = !DILocalVariable(name: "dmf", scope: !2620, file: !3, line: 58, type: !195)
!2637 = !DILocation(line: 59, column: 15, scope: !2620)
!2638 = !DILocation(line: 59, column: 20, scope: !2620)
!2639 = !DILocation(line: 59, column: 18, scope: !2620)
!2640 = !DILocation(line: 59, column: 26, scope: !2620)
!2641 = !DILocation(line: 59, column: 24, scope: !2620)
!2642 = !DILocation(line: 59, column: 30, scope: !2620)
!2643 = !DILocation(line: 59, column: 14, scope: !2620)
!2644 = !DILocation(line: 59, column: 5, scope: !2620)
!2645 = !DILocation(line: 59, column: 12, scope: !2620)
!2646 = !DILocation(line: 60, column: 15, scope: !2620)
!2647 = !DILocation(line: 60, column: 20, scope: !2620)
!2648 = !DILocation(line: 60, column: 18, scope: !2620)
!2649 = !DILocation(line: 60, column: 26, scope: !2620)
!2650 = !DILocation(line: 60, column: 24, scope: !2620)
!2651 = !DILocation(line: 60, column: 30, scope: !2620)
!2652 = !DILocation(line: 60, column: 14, scope: !2620)
!2653 = !DILocation(line: 60, column: 5, scope: !2620)
!2654 = !DILocation(line: 60, column: 12, scope: !2620)
!2655 = !DILocation(line: 61, column: 15, scope: !2620)
!2656 = !DILocation(line: 61, column: 20, scope: !2620)
!2657 = !DILocation(line: 61, column: 18, scope: !2620)
!2658 = !DILocation(line: 61, column: 26, scope: !2620)
!2659 = !DILocation(line: 61, column: 24, scope: !2620)
!2660 = !DILocation(line: 61, column: 30, scope: !2620)
!2661 = !DILocation(line: 61, column: 14, scope: !2620)
!2662 = !DILocation(line: 61, column: 5, scope: !2620)
!2663 = !DILocation(line: 61, column: 12, scope: !2620)
!2664 = !DILocation(line: 62, column: 15, scope: !2620)
!2665 = !DILocation(line: 62, column: 20, scope: !2620)
!2666 = !DILocation(line: 62, column: 18, scope: !2620)
!2667 = !DILocation(line: 62, column: 26, scope: !2620)
!2668 = !DILocation(line: 62, column: 24, scope: !2620)
!2669 = !DILocation(line: 62, column: 30, scope: !2620)
!2670 = !DILocation(line: 62, column: 14, scope: !2620)
!2671 = !DILocation(line: 62, column: 5, scope: !2620)
!2672 = !DILocation(line: 62, column: 12, scope: !2620)
!2673 = !DILocation(line: 63, column: 1, scope: !2620)
!2674 = distinct !DISubprogram(name: "array_non_zero_int", scope: !6, file: !6, line: 351, type: !2675, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{!195, !933, !195}
!2677 = !DILocalVariable(name: "v", arg: 1, scope: !2674, file: !6, line: 351, type: !933)
!2678 = !DILocation(line: 351, column: 55, scope: !2674)
!2679 = !DILocalVariable(name: "i_count", arg: 2, scope: !2674, file: !6, line: 351, type: !195)
!2680 = !DILocation(line: 351, column: 62, scope: !2674)
!2681 = !DILocation(line: 353, column: 8, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2674, file: !6, line: 353, column: 8)
!2683 = !DILocation(line: 353, column: 16, scope: !2682)
!2684 = !DILocation(line: 353, column: 8, scope: !2674)
!2685 = !DILocation(line: 354, column: 18, scope: !2682)
!2686 = !DILocation(line: 354, column: 17, scope: !2682)
!2687 = !DILocation(line: 354, column: 16, scope: !2682)
!2688 = !DILocation(line: 354, column: 9, scope: !2682)
!2689 = !DILocation(line: 355, column: 13, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2682, file: !6, line: 355, column: 13)
!2691 = !DILocation(line: 355, column: 21, scope: !2690)
!2692 = !DILocation(line: 355, column: 13, scope: !2682)
!2693 = !DILocation(line: 356, column: 19, scope: !2690)
!2694 = !DILocation(line: 356, column: 34, scope: !2690)
!2695 = !DILocation(line: 356, column: 32, scope: !2690)
!2696 = !DILocation(line: 356, column: 17, scope: !2690)
!2697 = !DILocation(line: 356, column: 16, scope: !2690)
!2698 = !DILocation(line: 356, column: 9, scope: !2690)
!2699 = !DILocation(line: 357, column: 13, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2690, file: !6, line: 357, column: 13)
!2701 = !DILocation(line: 357, column: 21, scope: !2700)
!2702 = !DILocation(line: 357, column: 13, scope: !2690)
!2703 = !DILocation(line: 358, column: 19, scope: !2700)
!2704 = !DILocation(line: 358, column: 34, scope: !2700)
!2705 = !DILocation(line: 358, column: 32, scope: !2700)
!2706 = !DILocation(line: 358, column: 49, scope: !2700)
!2707 = !DILocation(line: 358, column: 47, scope: !2700)
!2708 = !DILocation(line: 358, column: 64, scope: !2700)
!2709 = !DILocation(line: 358, column: 62, scope: !2700)
!2710 = !DILocation(line: 358, column: 17, scope: !2700)
!2711 = !DILocation(line: 358, column: 16, scope: !2700)
!2712 = !DILocation(line: 358, column: 9, scope: !2700)
!2713 = !DILocalVariable(name: "i", scope: !2714, file: !6, line: 361, type: !195)
!2714 = distinct !DILexicalBlock(scope: !2715, file: !6, line: 361, column: 9)
!2715 = distinct !DILexicalBlock(scope: !2700, file: !6, line: 360, column: 5)
!2716 = !DILocation(line: 361, column: 18, scope: !2714)
!2717 = !DILocation(line: 361, column: 14, scope: !2714)
!2718 = !DILocation(line: 361, column: 25, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2714, file: !6, line: 361, column: 9)
!2720 = !DILocation(line: 361, column: 29, scope: !2719)
!2721 = !DILocation(line: 361, column: 27, scope: !2719)
!2722 = !DILocation(line: 361, column: 9, scope: !2714)
!2723 = !DILocation(line: 362, column: 17, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2719, file: !6, line: 362, column: 17)
!2725 = !DILocation(line: 362, column: 17, scope: !2719)
!2726 = !DILocation(line: 362, column: 32, scope: !2724)
!2727 = !DILocation(line: 361, column: 39, scope: !2719)
!2728 = !DILocation(line: 361, column: 9, scope: !2719)
!2729 = distinct !{!2729, !2722, !2730}
!2730 = !DILocation(line: 362, column: 39, scope: !2714)
!2731 = !DILocation(line: 363, column: 9, scope: !2715)
!2732 = !DILocation(line: 365, column: 1, scope: !2674)
!2733 = distinct !DISubprogram(name: "dct2x2dc", scope: !3, file: !3, line: 65, type: !2734, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!2734 = !DISubroutineType(types: !2735)
!2735 = !{null, !933, !1358}
!2736 = !DILocalVariable(name: "d", arg: 1, scope: !2733, file: !3, line: 65, type: !933)
!2737 = !DILocation(line: 65, column: 38, scope: !2733)
!2738 = !DILocalVariable(name: "dct4x4", arg: 2, scope: !2733, file: !3, line: 65, type: !1358)
!2739 = !DILocation(line: 65, column: 52, scope: !2733)
!2740 = !DILocalVariable(name: "d0", scope: !2733, file: !3, line: 67, type: !195)
!2741 = !DILocation(line: 67, column: 9, scope: !2733)
!2742 = !DILocation(line: 67, column: 14, scope: !2733)
!2743 = !DILocation(line: 67, column: 29, scope: !2733)
!2744 = !DILocation(line: 67, column: 27, scope: !2733)
!2745 = !DILocalVariable(name: "d1", scope: !2733, file: !3, line: 68, type: !195)
!2746 = !DILocation(line: 68, column: 9, scope: !2733)
!2747 = !DILocation(line: 68, column: 14, scope: !2733)
!2748 = !DILocation(line: 68, column: 29, scope: !2733)
!2749 = !DILocation(line: 68, column: 27, scope: !2733)
!2750 = !DILocalVariable(name: "d2", scope: !2733, file: !3, line: 69, type: !195)
!2751 = !DILocation(line: 69, column: 9, scope: !2733)
!2752 = !DILocation(line: 69, column: 14, scope: !2733)
!2753 = !DILocation(line: 69, column: 29, scope: !2733)
!2754 = !DILocation(line: 69, column: 27, scope: !2733)
!2755 = !DILocalVariable(name: "d3", scope: !2733, file: !3, line: 70, type: !195)
!2756 = !DILocation(line: 70, column: 9, scope: !2733)
!2757 = !DILocation(line: 70, column: 14, scope: !2733)
!2758 = !DILocation(line: 70, column: 29, scope: !2733)
!2759 = !DILocation(line: 70, column: 27, scope: !2733)
!2760 = !DILocation(line: 71, column: 12, scope: !2733)
!2761 = !DILocation(line: 71, column: 17, scope: !2733)
!2762 = !DILocation(line: 71, column: 15, scope: !2733)
!2763 = !DILocation(line: 71, column: 5, scope: !2733)
!2764 = !DILocation(line: 71, column: 10, scope: !2733)
!2765 = !DILocation(line: 72, column: 12, scope: !2733)
!2766 = !DILocation(line: 72, column: 17, scope: !2733)
!2767 = !DILocation(line: 72, column: 15, scope: !2733)
!2768 = !DILocation(line: 72, column: 5, scope: !2733)
!2769 = !DILocation(line: 72, column: 10, scope: !2733)
!2770 = !DILocation(line: 73, column: 12, scope: !2733)
!2771 = !DILocation(line: 73, column: 17, scope: !2733)
!2772 = !DILocation(line: 73, column: 15, scope: !2733)
!2773 = !DILocation(line: 73, column: 5, scope: !2733)
!2774 = !DILocation(line: 73, column: 10, scope: !2733)
!2775 = !DILocation(line: 74, column: 12, scope: !2733)
!2776 = !DILocation(line: 74, column: 17, scope: !2733)
!2777 = !DILocation(line: 74, column: 15, scope: !2733)
!2778 = !DILocation(line: 74, column: 5, scope: !2733)
!2779 = !DILocation(line: 74, column: 10, scope: !2733)
!2780 = !DILocation(line: 75, column: 5, scope: !2733)
!2781 = !DILocation(line: 75, column: 18, scope: !2733)
!2782 = !DILocation(line: 76, column: 5, scope: !2733)
!2783 = !DILocation(line: 76, column: 18, scope: !2733)
!2784 = !DILocation(line: 77, column: 5, scope: !2733)
!2785 = !DILocation(line: 77, column: 18, scope: !2733)
!2786 = !DILocation(line: 78, column: 5, scope: !2733)
!2787 = !DILocation(line: 78, column: 18, scope: !2733)
!2788 = !DILocation(line: 79, column: 1, scope: !2733)
!2789 = distinct !DISubprogram(name: "idct_dequant_2x2_dc", scope: !3, file: !3, line: 47, type: !2790, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{null, !933, !1358, !576, !195}
!2792 = !DILocalVariable(name: "dct", arg: 1, scope: !2789, file: !3, line: 47, type: !933)
!2793 = !DILocation(line: 47, column: 49, scope: !2789)
!2794 = !DILocalVariable(name: "dct4x4", arg: 2, scope: !2789, file: !3, line: 47, type: !1358)
!2795 = !DILocation(line: 47, column: 65, scope: !2789)
!2796 = !DILocalVariable(name: "dequant_mf", arg: 3, scope: !2789, file: !3, line: 47, type: !576)
!2797 = !DILocation(line: 47, column: 84, scope: !2789)
!2798 = !DILocalVariable(name: "i_qp", arg: 4, scope: !2789, file: !3, line: 47, type: !195)
!2799 = !DILocation(line: 47, column: 107, scope: !2789)
!2800 = !DILocalVariable(name: "d0", scope: !2789, file: !3, line: 49, type: !195)
!2801 = !DILocation(line: 49, column: 5, scope: !2789)
!2802 = !DILocalVariable(name: "d1", scope: !2789, file: !3, line: 49, type: !195)
!2803 = !DILocalVariable(name: "d2", scope: !2789, file: !3, line: 49, type: !195)
!2804 = !DILocalVariable(name: "d3", scope: !2789, file: !3, line: 49, type: !195)
!2805 = !DILocalVariable(name: "dmf", scope: !2789, file: !3, line: 49, type: !195)
!2806 = !DILocation(line: 50, column: 21, scope: !2789)
!2807 = !DILocation(line: 50, column: 26, scope: !2789)
!2808 = !DILocation(line: 50, column: 24, scope: !2789)
!2809 = !DILocation(line: 50, column: 32, scope: !2789)
!2810 = !DILocation(line: 50, column: 30, scope: !2789)
!2811 = !DILocation(line: 50, column: 36, scope: !2789)
!2812 = !DILocation(line: 50, column: 20, scope: !2789)
!2813 = !DILocation(line: 50, column: 5, scope: !2789)
!2814 = !DILocation(line: 50, column: 18, scope: !2789)
!2815 = !DILocation(line: 51, column: 21, scope: !2789)
!2816 = !DILocation(line: 51, column: 26, scope: !2789)
!2817 = !DILocation(line: 51, column: 24, scope: !2789)
!2818 = !DILocation(line: 51, column: 32, scope: !2789)
!2819 = !DILocation(line: 51, column: 30, scope: !2789)
!2820 = !DILocation(line: 51, column: 36, scope: !2789)
!2821 = !DILocation(line: 51, column: 20, scope: !2789)
!2822 = !DILocation(line: 51, column: 5, scope: !2789)
!2823 = !DILocation(line: 51, column: 18, scope: !2789)
!2824 = !DILocation(line: 52, column: 21, scope: !2789)
!2825 = !DILocation(line: 52, column: 26, scope: !2789)
!2826 = !DILocation(line: 52, column: 24, scope: !2789)
!2827 = !DILocation(line: 52, column: 32, scope: !2789)
!2828 = !DILocation(line: 52, column: 30, scope: !2789)
!2829 = !DILocation(line: 52, column: 36, scope: !2789)
!2830 = !DILocation(line: 52, column: 20, scope: !2789)
!2831 = !DILocation(line: 52, column: 5, scope: !2789)
!2832 = !DILocation(line: 52, column: 18, scope: !2789)
!2833 = !DILocation(line: 53, column: 21, scope: !2789)
!2834 = !DILocation(line: 53, column: 26, scope: !2789)
!2835 = !DILocation(line: 53, column: 24, scope: !2789)
!2836 = !DILocation(line: 53, column: 32, scope: !2789)
!2837 = !DILocation(line: 53, column: 30, scope: !2789)
!2838 = !DILocation(line: 53, column: 36, scope: !2789)
!2839 = !DILocation(line: 53, column: 20, scope: !2789)
!2840 = !DILocation(line: 53, column: 5, scope: !2789)
!2841 = !DILocation(line: 53, column: 18, scope: !2789)
!2842 = !DILocation(line: 54, column: 1, scope: !2789)
!2843 = distinct !DISubprogram(name: "x264_predict_lossless_8x8_chroma", scope: !3, file: !3, line: 532, type: !2844, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{null, !228, !195}
!2846 = !DILocalVariable(name: "h", arg: 1, scope: !2843, file: !3, line: 532, type: !228)
!2847 = !DILocation(line: 532, column: 48, scope: !2843)
!2848 = !DILocalVariable(name: "i_mode", arg: 2, scope: !2843, file: !3, line: 532, type: !195)
!2849 = !DILocation(line: 532, column: 55, scope: !2843)
!2850 = !DILocalVariable(name: "stride", scope: !2843, file: !3, line: 534, type: !195)
!2851 = !DILocation(line: 534, column: 9, scope: !2843)
!2852 = !DILocation(line: 534, column: 18, scope: !2843)
!2853 = !DILocation(line: 534, column: 21, scope: !2843)
!2854 = !DILocation(line: 534, column: 27, scope: !2843)
!2855 = !DILocation(line: 534, column: 42, scope: !2843)
!2856 = !DILocation(line: 534, column: 45, scope: !2843)
!2857 = !DILocation(line: 534, column: 48, scope: !2843)
!2858 = !DILocation(line: 534, column: 39, scope: !2843)
!2859 = !DILocation(line: 535, column: 9, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2843, file: !3, line: 535, column: 9)
!2861 = !DILocation(line: 535, column: 16, scope: !2860)
!2862 = !DILocation(line: 535, column: 9, scope: !2843)
!2863 = !DILocation(line: 537, column: 9, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 536, column: 5)
!2865 = !DILocation(line: 537, column: 12, scope: !2864)
!2866 = !DILocation(line: 537, column: 15, scope: !2864)
!2867 = !DILocation(line: 537, column: 32, scope: !2864)
!2868 = !DILocation(line: 537, column: 35, scope: !2864)
!2869 = !DILocation(line: 537, column: 38, scope: !2864)
!2870 = !DILocation(line: 537, column: 42, scope: !2864)
!2871 = !DILocation(line: 537, column: 66, scope: !2864)
!2872 = !DILocation(line: 537, column: 69, scope: !2864)
!2873 = !DILocation(line: 537, column: 72, scope: !2864)
!2874 = !DILocation(line: 537, column: 76, scope: !2864)
!2875 = !DILocation(line: 537, column: 92, scope: !2864)
!2876 = !DILocation(line: 537, column: 91, scope: !2864)
!2877 = !DILocation(line: 537, column: 100, scope: !2864)
!2878 = !DILocation(line: 538, column: 9, scope: !2864)
!2879 = !DILocation(line: 538, column: 12, scope: !2864)
!2880 = !DILocation(line: 538, column: 15, scope: !2864)
!2881 = !DILocation(line: 538, column: 32, scope: !2864)
!2882 = !DILocation(line: 538, column: 35, scope: !2864)
!2883 = !DILocation(line: 538, column: 38, scope: !2864)
!2884 = !DILocation(line: 538, column: 42, scope: !2864)
!2885 = !DILocation(line: 538, column: 66, scope: !2864)
!2886 = !DILocation(line: 538, column: 69, scope: !2864)
!2887 = !DILocation(line: 538, column: 72, scope: !2864)
!2888 = !DILocation(line: 538, column: 76, scope: !2864)
!2889 = !DILocation(line: 538, column: 92, scope: !2864)
!2890 = !DILocation(line: 538, column: 91, scope: !2864)
!2891 = !DILocation(line: 538, column: 100, scope: !2864)
!2892 = !DILocation(line: 539, column: 5, scope: !2864)
!2893 = !DILocation(line: 540, column: 14, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 540, column: 14)
!2895 = !DILocation(line: 540, column: 21, scope: !2894)
!2896 = !DILocation(line: 540, column: 14, scope: !2860)
!2897 = !DILocation(line: 542, column: 9, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 541, column: 5)
!2899 = !DILocation(line: 542, column: 12, scope: !2898)
!2900 = !DILocation(line: 542, column: 15, scope: !2898)
!2901 = !DILocation(line: 542, column: 32, scope: !2898)
!2902 = !DILocation(line: 542, column: 35, scope: !2898)
!2903 = !DILocation(line: 542, column: 38, scope: !2898)
!2904 = !DILocation(line: 542, column: 42, scope: !2898)
!2905 = !DILocation(line: 542, column: 66, scope: !2898)
!2906 = !DILocation(line: 542, column: 69, scope: !2898)
!2907 = !DILocation(line: 542, column: 72, scope: !2898)
!2908 = !DILocation(line: 542, column: 76, scope: !2898)
!2909 = !DILocation(line: 542, column: 91, scope: !2898)
!2910 = !DILocation(line: 542, column: 95, scope: !2898)
!2911 = !DILocation(line: 543, column: 9, scope: !2898)
!2912 = !DILocation(line: 543, column: 12, scope: !2898)
!2913 = !DILocation(line: 543, column: 15, scope: !2898)
!2914 = !DILocation(line: 543, column: 32, scope: !2898)
!2915 = !DILocation(line: 543, column: 35, scope: !2898)
!2916 = !DILocation(line: 543, column: 38, scope: !2898)
!2917 = !DILocation(line: 543, column: 42, scope: !2898)
!2918 = !DILocation(line: 543, column: 66, scope: !2898)
!2919 = !DILocation(line: 543, column: 69, scope: !2898)
!2920 = !DILocation(line: 543, column: 72, scope: !2898)
!2921 = !DILocation(line: 543, column: 76, scope: !2898)
!2922 = !DILocation(line: 543, column: 91, scope: !2898)
!2923 = !DILocation(line: 543, column: 95, scope: !2898)
!2924 = !DILocation(line: 544, column: 5, scope: !2898)
!2925 = !DILocation(line: 547, column: 9, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 546, column: 5)
!2927 = !DILocation(line: 547, column: 12, scope: !2926)
!2928 = !DILocation(line: 547, column: 25, scope: !2926)
!2929 = !DILocation(line: 547, column: 34, scope: !2926)
!2930 = !DILocation(line: 547, column: 37, scope: !2926)
!2931 = !DILocation(line: 547, column: 40, scope: !2926)
!2932 = !DILocation(line: 547, column: 44, scope: !2926)
!2933 = !DILocation(line: 548, column: 9, scope: !2926)
!2934 = !DILocation(line: 548, column: 12, scope: !2926)
!2935 = !DILocation(line: 548, column: 25, scope: !2926)
!2936 = !DILocation(line: 548, column: 34, scope: !2926)
!2937 = !DILocation(line: 548, column: 37, scope: !2926)
!2938 = !DILocation(line: 548, column: 40, scope: !2926)
!2939 = !DILocation(line: 548, column: 44, scope: !2926)
!2940 = !DILocation(line: 550, column: 1, scope: !2843)
!2941 = distinct !DISubprogram(name: "x264_predict_lossless_4x4", scope: !3, file: !3, line: 552, type: !2942, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!2942 = !DISubroutineType(types: !2943)
!2943 = !{null, !228, !420, !195, !195}
!2944 = !DILocalVariable(name: "h", arg: 1, scope: !2941, file: !3, line: 552, type: !228)
!2945 = !DILocation(line: 552, column: 41, scope: !2941)
!2946 = !DILocalVariable(name: "p_dst", arg: 2, scope: !2941, file: !3, line: 552, type: !420)
!2947 = !DILocation(line: 552, column: 53, scope: !2941)
!2948 = !DILocalVariable(name: "idx", arg: 3, scope: !2941, file: !3, line: 552, type: !195)
!2949 = !DILocation(line: 552, column: 64, scope: !2941)
!2950 = !DILocalVariable(name: "i_mode", arg: 4, scope: !2941, file: !3, line: 552, type: !195)
!2951 = !DILocation(line: 552, column: 73, scope: !2941)
!2952 = !DILocalVariable(name: "stride", scope: !2941, file: !3, line: 554, type: !195)
!2953 = !DILocation(line: 554, column: 9, scope: !2941)
!2954 = !DILocation(line: 554, column: 18, scope: !2941)
!2955 = !DILocation(line: 554, column: 21, scope: !2941)
!2956 = !DILocation(line: 554, column: 27, scope: !2941)
!2957 = !DILocation(line: 554, column: 42, scope: !2941)
!2958 = !DILocation(line: 554, column: 45, scope: !2941)
!2959 = !DILocation(line: 554, column: 48, scope: !2941)
!2960 = !DILocation(line: 554, column: 39, scope: !2941)
!2961 = !DILocalVariable(name: "p_src", scope: !2941, file: !3, line: 555, type: !420)
!2962 = !DILocation(line: 555, column: 14, scope: !2941)
!2963 = !DILocation(line: 555, column: 22, scope: !2941)
!2964 = !DILocation(line: 555, column: 25, scope: !2941)
!2965 = !DILocation(line: 555, column: 28, scope: !2941)
!2966 = !DILocation(line: 555, column: 32, scope: !2941)
!2967 = !DILocation(line: 555, column: 62, scope: !2941)
!2968 = !DILocation(line: 555, column: 50, scope: !2941)
!2969 = !DILocation(line: 555, column: 66, scope: !2941)
!2970 = !DILocation(line: 555, column: 48, scope: !2941)
!2971 = !DILocation(line: 555, column: 83, scope: !2941)
!2972 = !DILocation(line: 555, column: 71, scope: !2941)
!2973 = !DILocation(line: 555, column: 87, scope: !2941)
!2974 = !DILocation(line: 555, column: 92, scope: !2941)
!2975 = !DILocation(line: 555, column: 90, scope: !2941)
!2976 = !DILocation(line: 555, column: 69, scope: !2941)
!2977 = !DILocation(line: 557, column: 9, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2941, file: !3, line: 557, column: 9)
!2979 = !DILocation(line: 557, column: 16, scope: !2978)
!2980 = !DILocation(line: 557, column: 9, scope: !2941)
!2981 = !DILocation(line: 558, column: 9, scope: !2978)
!2982 = !DILocation(line: 558, column: 12, scope: !2978)
!2983 = !DILocation(line: 558, column: 15, scope: !2978)
!2984 = !DILocation(line: 558, column: 32, scope: !2978)
!2985 = !DILocation(line: 558, column: 52, scope: !2978)
!2986 = !DILocation(line: 558, column: 58, scope: !2978)
!2987 = !DILocation(line: 558, column: 57, scope: !2978)
!2988 = !DILocation(line: 558, column: 66, scope: !2978)
!2989 = !DILocation(line: 559, column: 14, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 559, column: 14)
!2991 = !DILocation(line: 559, column: 21, scope: !2990)
!2992 = !DILocation(line: 559, column: 14, scope: !2978)
!2993 = !DILocation(line: 560, column: 9, scope: !2990)
!2994 = !DILocation(line: 560, column: 12, scope: !2990)
!2995 = !DILocation(line: 560, column: 15, scope: !2990)
!2996 = !DILocation(line: 560, column: 32, scope: !2990)
!2997 = !DILocation(line: 560, column: 52, scope: !2990)
!2998 = !DILocation(line: 560, column: 57, scope: !2990)
!2999 = !DILocation(line: 560, column: 61, scope: !2990)
!3000 = !DILocation(line: 562, column: 9, scope: !2990)
!3001 = !DILocation(line: 562, column: 12, scope: !2990)
!3002 = !DILocation(line: 562, column: 24, scope: !2990)
!3003 = !DILocation(line: 562, column: 33, scope: !2990)
!3004 = !DILocation(line: 563, column: 1, scope: !2941)
!3005 = distinct !DISubprogram(name: "x264_predict_lossless_8x8", scope: !3, file: !3, line: 565, type: !3006, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{null, !228, !420, !195, !195, !420}
!3008 = !DILocalVariable(name: "h", arg: 1, scope: !3005, file: !3, line: 565, type: !228)
!3009 = !DILocation(line: 565, column: 41, scope: !3005)
!3010 = !DILocalVariable(name: "p_dst", arg: 2, scope: !3005, file: !3, line: 565, type: !420)
!3011 = !DILocation(line: 565, column: 53, scope: !3005)
!3012 = !DILocalVariable(name: "idx", arg: 3, scope: !3005, file: !3, line: 565, type: !195)
!3013 = !DILocation(line: 565, column: 64, scope: !3005)
!3014 = !DILocalVariable(name: "i_mode", arg: 4, scope: !3005, file: !3, line: 565, type: !195)
!3015 = !DILocation(line: 565, column: 73, scope: !3005)
!3016 = !DILocalVariable(name: "edge", arg: 5, scope: !3005, file: !3, line: 565, type: !420)
!3017 = !DILocation(line: 565, column: 89, scope: !3005)
!3018 = !DILocalVariable(name: "stride", scope: !3005, file: !3, line: 567, type: !195)
!3019 = !DILocation(line: 567, column: 9, scope: !3005)
!3020 = !DILocation(line: 567, column: 18, scope: !3005)
!3021 = !DILocation(line: 567, column: 21, scope: !3005)
!3022 = !DILocation(line: 567, column: 27, scope: !3005)
!3023 = !DILocation(line: 567, column: 42, scope: !3005)
!3024 = !DILocation(line: 567, column: 45, scope: !3005)
!3025 = !DILocation(line: 567, column: 48, scope: !3005)
!3026 = !DILocation(line: 567, column: 39, scope: !3005)
!3027 = !DILocalVariable(name: "p_src", scope: !3005, file: !3, line: 568, type: !420)
!3028 = !DILocation(line: 568, column: 14, scope: !3005)
!3029 = !DILocation(line: 568, column: 22, scope: !3005)
!3030 = !DILocation(line: 568, column: 25, scope: !3005)
!3031 = !DILocation(line: 568, column: 28, scope: !3005)
!3032 = !DILocation(line: 568, column: 32, scope: !3005)
!3033 = !DILocation(line: 568, column: 51, scope: !3005)
!3034 = !DILocation(line: 568, column: 54, scope: !3005)
!3035 = !DILocation(line: 568, column: 57, scope: !3005)
!3036 = !DILocation(line: 568, column: 48, scope: !3005)
!3037 = !DILocation(line: 568, column: 63, scope: !3005)
!3038 = !DILocation(line: 568, column: 66, scope: !3005)
!3039 = !DILocation(line: 568, column: 70, scope: !3005)
!3040 = !DILocation(line: 568, column: 73, scope: !3005)
!3041 = !DILocation(line: 568, column: 72, scope: !3005)
!3042 = !DILocation(line: 568, column: 60, scope: !3005)
!3043 = !DILocation(line: 570, column: 9, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 570, column: 9)
!3045 = !DILocation(line: 570, column: 16, scope: !3044)
!3046 = !DILocation(line: 570, column: 9, scope: !3005)
!3047 = !DILocation(line: 571, column: 9, scope: !3044)
!3048 = !DILocation(line: 571, column: 12, scope: !3044)
!3049 = !DILocation(line: 571, column: 15, scope: !3044)
!3050 = !DILocation(line: 571, column: 32, scope: !3044)
!3051 = !DILocation(line: 571, column: 52, scope: !3044)
!3052 = !DILocation(line: 571, column: 58, scope: !3044)
!3053 = !DILocation(line: 571, column: 57, scope: !3044)
!3054 = !DILocation(line: 571, column: 66, scope: !3044)
!3055 = !DILocation(line: 572, column: 14, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 572, column: 14)
!3057 = !DILocation(line: 572, column: 21, scope: !3056)
!3058 = !DILocation(line: 572, column: 14, scope: !3044)
!3059 = !DILocation(line: 573, column: 9, scope: !3056)
!3060 = !DILocation(line: 573, column: 12, scope: !3056)
!3061 = !DILocation(line: 573, column: 15, scope: !3056)
!3062 = !DILocation(line: 573, column: 32, scope: !3056)
!3063 = !DILocation(line: 573, column: 52, scope: !3056)
!3064 = !DILocation(line: 573, column: 57, scope: !3056)
!3065 = !DILocation(line: 573, column: 61, scope: !3056)
!3066 = !DILocation(line: 575, column: 9, scope: !3056)
!3067 = !DILocation(line: 575, column: 12, scope: !3056)
!3068 = !DILocation(line: 575, column: 24, scope: !3056)
!3069 = !DILocation(line: 575, column: 33, scope: !3056)
!3070 = !DILocation(line: 575, column: 40, scope: !3056)
!3071 = !DILocation(line: 576, column: 1, scope: !3005)
!3072 = distinct !DISubprogram(name: "x264_predict_lossless_16x16", scope: !3, file: !3, line: 578, type: !2844, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!3073 = !DILocalVariable(name: "h", arg: 1, scope: !3072, file: !3, line: 578, type: !228)
!3074 = !DILocation(line: 578, column: 43, scope: !3072)
!3075 = !DILocalVariable(name: "i_mode", arg: 2, scope: !3072, file: !3, line: 578, type: !195)
!3076 = !DILocation(line: 578, column: 50, scope: !3072)
!3077 = !DILocalVariable(name: "stride", scope: !3072, file: !3, line: 580, type: !195)
!3078 = !DILocation(line: 580, column: 9, scope: !3072)
!3079 = !DILocation(line: 580, column: 18, scope: !3072)
!3080 = !DILocation(line: 580, column: 21, scope: !3072)
!3081 = !DILocation(line: 580, column: 27, scope: !3072)
!3082 = !DILocation(line: 580, column: 42, scope: !3072)
!3083 = !DILocation(line: 580, column: 45, scope: !3072)
!3084 = !DILocation(line: 580, column: 48, scope: !3072)
!3085 = !DILocation(line: 580, column: 39, scope: !3072)
!3086 = !DILocation(line: 581, column: 9, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 581, column: 9)
!3088 = !DILocation(line: 581, column: 16, scope: !3087)
!3089 = !DILocation(line: 581, column: 9, scope: !3072)
!3090 = !DILocation(line: 582, column: 9, scope: !3087)
!3091 = !DILocation(line: 582, column: 12, scope: !3087)
!3092 = !DILocation(line: 582, column: 15, scope: !3087)
!3093 = !DILocation(line: 582, column: 34, scope: !3087)
!3094 = !DILocation(line: 582, column: 37, scope: !3087)
!3095 = !DILocation(line: 582, column: 40, scope: !3087)
!3096 = !DILocation(line: 582, column: 44, scope: !3087)
!3097 = !DILocation(line: 582, column: 68, scope: !3087)
!3098 = !DILocation(line: 582, column: 71, scope: !3087)
!3099 = !DILocation(line: 582, column: 74, scope: !3087)
!3100 = !DILocation(line: 582, column: 78, scope: !3087)
!3101 = !DILocation(line: 582, column: 94, scope: !3087)
!3102 = !DILocation(line: 582, column: 93, scope: !3087)
!3103 = !DILocation(line: 582, column: 102, scope: !3087)
!3104 = !DILocation(line: 583, column: 14, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 583, column: 14)
!3106 = !DILocation(line: 583, column: 21, scope: !3105)
!3107 = !DILocation(line: 583, column: 14, scope: !3087)
!3108 = !DILocation(line: 584, column: 9, scope: !3105)
!3109 = !DILocation(line: 584, column: 12, scope: !3105)
!3110 = !DILocation(line: 584, column: 15, scope: !3105)
!3111 = !DILocation(line: 584, column: 37, scope: !3105)
!3112 = !DILocation(line: 584, column: 40, scope: !3105)
!3113 = !DILocation(line: 584, column: 43, scope: !3105)
!3114 = !DILocation(line: 584, column: 47, scope: !3105)
!3115 = !DILocation(line: 584, column: 71, scope: !3105)
!3116 = !DILocation(line: 584, column: 74, scope: !3105)
!3117 = !DILocation(line: 584, column: 77, scope: !3105)
!3118 = !DILocation(line: 584, column: 81, scope: !3105)
!3119 = !DILocation(line: 584, column: 96, scope: !3105)
!3120 = !DILocation(line: 584, column: 100, scope: !3105)
!3121 = !DILocation(line: 586, column: 9, scope: !3105)
!3122 = !DILocation(line: 586, column: 12, scope: !3105)
!3123 = !DILocation(line: 586, column: 26, scope: !3105)
!3124 = !DILocation(line: 586, column: 35, scope: !3105)
!3125 = !DILocation(line: 586, column: 38, scope: !3105)
!3126 = !DILocation(line: 586, column: 41, scope: !3105)
!3127 = !DILocation(line: 586, column: 45, scope: !3105)
!3128 = !DILocation(line: 587, column: 1, scope: !3072)
!3129 = distinct !DISubprogram(name: "x264_macroblock_encode", scope: !3, file: !3, line: 592, type: !3130, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{null, !228}
!3132 = !DILocalVariable(name: "h", arg: 1, scope: !3129, file: !3, line: 592, type: !228)
!3133 = !DILocation(line: 592, column: 38, scope: !3129)
!3134 = !DILocalVariable(name: "i_qp", scope: !3129, file: !3, line: 594, type: !195)
!3135 = !DILocation(line: 594, column: 9, scope: !3129)
!3136 = !DILocation(line: 594, column: 16, scope: !3129)
!3137 = !DILocation(line: 594, column: 19, scope: !3129)
!3138 = !DILocation(line: 594, column: 22, scope: !3129)
!3139 = !DILocalVariable(name: "b_decimate", scope: !3129, file: !3, line: 595, type: !195)
!3140 = !DILocation(line: 595, column: 9, scope: !3129)
!3141 = !DILocation(line: 595, column: 22, scope: !3129)
!3142 = !DILocation(line: 595, column: 25, scope: !3129)
!3143 = !DILocation(line: 595, column: 28, scope: !3129)
!3144 = !DILocalVariable(name: "b_force_no_skip", scope: !3129, file: !3, line: 596, type: !195)
!3145 = !DILocation(line: 596, column: 9, scope: !3129)
!3146 = !DILocalVariable(name: "nz", scope: !3129, file: !3, line: 597, type: !195)
!3147 = !DILocation(line: 597, column: 9, scope: !3129)
!3148 = !DILocation(line: 598, column: 5, scope: !3129)
!3149 = !DILocation(line: 598, column: 8, scope: !3129)
!3150 = !DILocation(line: 598, column: 11, scope: !3129)
!3151 = !DILocation(line: 598, column: 22, scope: !3129)
!3152 = !DILocation(line: 599, column: 5, scope: !3129)
!3153 = !DILocation(line: 599, column: 8, scope: !3129)
!3154 = !DILocation(line: 599, column: 11, scope: !3129)
!3155 = !DILocation(line: 599, column: 17, scope: !3129)
!3156 = !DILocation(line: 599, column: 32, scope: !3129)
!3157 = !DILocation(line: 599, column: 48, scope: !3129)
!3158 = !DILocation(line: 601, column: 9, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 601, column: 9)
!3160 = !DILocation(line: 601, column: 12, scope: !3159)
!3161 = !DILocation(line: 601, column: 15, scope: !3159)
!3162 = !DILocation(line: 601, column: 22, scope: !3159)
!3163 = !DILocation(line: 601, column: 9, scope: !3129)
!3164 = !DILocation(line: 604, column: 9, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3159, file: !3, line: 602, column: 5)
!3166 = !DILocation(line: 604, column: 12, scope: !3165)
!3167 = !DILocation(line: 604, column: 15, scope: !3165)
!3168 = !DILocation(line: 604, column: 34, scope: !3165)
!3169 = !DILocation(line: 604, column: 37, scope: !3165)
!3170 = !DILocation(line: 604, column: 40, scope: !3165)
!3171 = !DILocation(line: 604, column: 44, scope: !3165)
!3172 = !DILocation(line: 604, column: 68, scope: !3165)
!3173 = !DILocation(line: 604, column: 71, scope: !3165)
!3174 = !DILocation(line: 604, column: 74, scope: !3165)
!3175 = !DILocation(line: 604, column: 78, scope: !3165)
!3176 = !DILocation(line: 605, column: 9, scope: !3165)
!3177 = !DILocation(line: 605, column: 12, scope: !3165)
!3178 = !DILocation(line: 605, column: 15, scope: !3165)
!3179 = !DILocation(line: 605, column: 34, scope: !3165)
!3180 = !DILocation(line: 605, column: 37, scope: !3165)
!3181 = !DILocation(line: 605, column: 40, scope: !3165)
!3182 = !DILocation(line: 605, column: 44, scope: !3165)
!3183 = !DILocation(line: 605, column: 68, scope: !3165)
!3184 = !DILocation(line: 605, column: 71, scope: !3165)
!3185 = !DILocation(line: 605, column: 74, scope: !3165)
!3186 = !DILocation(line: 605, column: 78, scope: !3165)
!3187 = !DILocation(line: 606, column: 9, scope: !3165)
!3188 = !DILocation(line: 606, column: 12, scope: !3165)
!3189 = !DILocation(line: 606, column: 15, scope: !3165)
!3190 = !DILocation(line: 606, column: 34, scope: !3165)
!3191 = !DILocation(line: 606, column: 37, scope: !3165)
!3192 = !DILocation(line: 606, column: 40, scope: !3165)
!3193 = !DILocation(line: 606, column: 44, scope: !3165)
!3194 = !DILocation(line: 606, column: 68, scope: !3165)
!3195 = !DILocation(line: 606, column: 71, scope: !3165)
!3196 = !DILocation(line: 606, column: 74, scope: !3165)
!3197 = !DILocation(line: 606, column: 78, scope: !3165)
!3198 = !DILocation(line: 607, column: 9, scope: !3165)
!3199 = !DILocation(line: 610, column: 9, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 610, column: 9)
!3201 = !DILocation(line: 610, column: 12, scope: !3200)
!3202 = !DILocation(line: 610, column: 15, scope: !3200)
!3203 = !DILocation(line: 611, column: 9, scope: !3200)
!3204 = !DILocation(line: 611, column: 12, scope: !3200)
!3205 = !DILocation(line: 611, column: 15, scope: !3200)
!3206 = !DILocation(line: 611, column: 18, scope: !3200)
!3207 = !DILocation(line: 611, column: 29, scope: !3200)
!3208 = !DILocation(line: 611, column: 32, scope: !3200)
!3209 = !DILocation(line: 611, column: 35, scope: !3200)
!3210 = !DILocation(line: 611, column: 48, scope: !3200)
!3211 = !DILocation(line: 611, column: 51, scope: !3200)
!3212 = !DILocation(line: 611, column: 54, scope: !3200)
!3213 = !DILocation(line: 611, column: 46, scope: !3200)
!3214 = !DILocation(line: 611, column: 26, scope: !3200)
!3215 = !DILocation(line: 612, column: 9, scope: !3200)
!3216 = !DILocation(line: 612, column: 12, scope: !3200)
!3217 = !DILocation(line: 610, column: 9, scope: !3129)
!3218 = !DILocation(line: 617, column: 25, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3200, file: !3, line: 613, column: 5)
!3220 = !DILocation(line: 618, column: 13, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 618, column: 13)
!3222 = !DILocation(line: 618, column: 13, scope: !3219)
!3223 = !DILocation(line: 620, column: 17, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 620, column: 17)
!3225 = distinct !DILexicalBlock(scope: !3221, file: !3, line: 619, column: 9)
!3226 = !DILocation(line: 620, column: 20, scope: !3224)
!3227 = !DILocation(line: 620, column: 23, scope: !3224)
!3228 = !DILocation(line: 620, column: 30, scope: !3224)
!3229 = !DILocation(line: 620, column: 17, scope: !3225)
!3230 = !DILocation(line: 621, column: 17, scope: !3224)
!3231 = !DILocation(line: 621, column: 20, scope: !3224)
!3232 = !DILocation(line: 621, column: 23, scope: !3224)
!3233 = !DILocation(line: 621, column: 30, scope: !3224)
!3234 = !DILocation(line: 622, column: 22, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 622, column: 22)
!3236 = !DILocation(line: 622, column: 25, scope: !3235)
!3237 = !DILocation(line: 622, column: 28, scope: !3235)
!3238 = !DILocation(line: 622, column: 35, scope: !3235)
!3239 = !DILocation(line: 622, column: 22, scope: !3224)
!3240 = !DILocation(line: 623, column: 17, scope: !3235)
!3241 = !DILocation(line: 623, column: 20, scope: !3235)
!3242 = !DILocation(line: 623, column: 23, scope: !3235)
!3243 = !DILocation(line: 623, column: 30, scope: !3235)
!3244 = !DILocation(line: 624, column: 9, scope: !3225)
!3245 = !DILocation(line: 625, column: 5, scope: !3219)
!3246 = !DILocation(line: 627, column: 9, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 627, column: 9)
!3248 = !DILocation(line: 627, column: 12, scope: !3247)
!3249 = !DILocation(line: 627, column: 15, scope: !3247)
!3250 = !DILocation(line: 627, column: 22, scope: !3247)
!3251 = !DILocation(line: 627, column: 9, scope: !3129)
!3252 = !DILocation(line: 630, column: 39, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 628, column: 5)
!3254 = !DILocation(line: 630, column: 9, scope: !3253)
!3255 = !DILocation(line: 631, column: 9, scope: !3253)
!3256 = !DILocation(line: 633, column: 9, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 633, column: 9)
!3258 = !DILocation(line: 633, column: 12, scope: !3257)
!3259 = !DILocation(line: 633, column: 15, scope: !3257)
!3260 = !DILocation(line: 633, column: 22, scope: !3257)
!3261 = !DILocation(line: 633, column: 9, scope: !3129)
!3262 = !DILocation(line: 636, column: 14, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 636, column: 13)
!3264 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 634, column: 5)
!3265 = !DILocation(line: 636, column: 17, scope: !3263)
!3266 = !DILocation(line: 636, column: 20, scope: !3263)
!3267 = !DILocation(line: 636, column: 13, scope: !3264)
!3268 = !DILocation(line: 637, column: 25, scope: !3263)
!3269 = !DILocation(line: 637, column: 13, scope: !3263)
!3270 = !DILocation(line: 638, column: 38, scope: !3264)
!3271 = !DILocation(line: 638, column: 9, scope: !3264)
!3272 = !DILocation(line: 639, column: 9, scope: !3264)
!3273 = !DILocation(line: 642, column: 9, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 642, column: 9)
!3275 = !DILocation(line: 642, column: 12, scope: !3274)
!3276 = !DILocation(line: 642, column: 15, scope: !3274)
!3277 = !DILocation(line: 642, column: 22, scope: !3274)
!3278 = !DILocation(line: 642, column: 9, scope: !3129)
!3279 = !DILocalVariable(name: "i_mode", scope: !3280, file: !3, line: 644, type: !194)
!3280 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 643, column: 5)
!3281 = !DILocation(line: 644, column: 19, scope: !3280)
!3282 = !DILocation(line: 644, column: 28, scope: !3280)
!3283 = !DILocation(line: 644, column: 31, scope: !3280)
!3284 = !DILocation(line: 644, column: 34, scope: !3280)
!3285 = !DILocation(line: 645, column: 9, scope: !3280)
!3286 = !DILocation(line: 645, column: 12, scope: !3280)
!3287 = !DILocation(line: 645, column: 15, scope: !3280)
!3288 = !DILocation(line: 645, column: 31, scope: !3280)
!3289 = !DILocation(line: 647, column: 13, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 647, column: 13)
!3291 = !DILocation(line: 647, column: 16, scope: !3290)
!3292 = !DILocation(line: 647, column: 19, scope: !3290)
!3293 = !DILocation(line: 647, column: 13, scope: !3280)
!3294 = !DILocation(line: 648, column: 42, scope: !3290)
!3295 = !DILocation(line: 648, column: 45, scope: !3290)
!3296 = !DILocation(line: 648, column: 13, scope: !3290)
!3297 = !DILocation(line: 650, column: 13, scope: !3290)
!3298 = !DILocation(line: 650, column: 16, scope: !3290)
!3299 = !DILocation(line: 650, column: 30, scope: !3290)
!3300 = !DILocation(line: 650, column: 39, scope: !3290)
!3301 = !DILocation(line: 650, column: 42, scope: !3290)
!3302 = !DILocation(line: 650, column: 45, scope: !3290)
!3303 = !DILocation(line: 650, column: 49, scope: !3290)
!3304 = !DILocation(line: 653, column: 32, scope: !3280)
!3305 = !DILocation(line: 653, column: 35, scope: !3280)
!3306 = !DILocation(line: 653, column: 9, scope: !3280)
!3307 = !DILocation(line: 654, column: 5, scope: !3280)
!3308 = !DILocation(line: 655, column: 14, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 655, column: 14)
!3310 = !DILocation(line: 655, column: 17, scope: !3309)
!3311 = !DILocation(line: 655, column: 20, scope: !3309)
!3312 = !DILocation(line: 655, column: 27, scope: !3309)
!3313 = !DILocation(line: 655, column: 14, scope: !3274)
!3314 = !DILocalVariable(name: "edge", scope: !3315, file: !3, line: 657, type: !3316, align: 128)
!3315 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 656, column: 5)
!3316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 264, elements: !3317)
!3317 = !{!3318}
!3318 = !DISubrange(count: 33)
!3319 = !DILocation(line: 657, column: 9, scope: !3315)
!3320 = !DILocation(line: 658, column: 9, scope: !3315)
!3321 = !DILocation(line: 658, column: 12, scope: !3315)
!3322 = !DILocation(line: 658, column: 15, scope: !3315)
!3323 = !DILocation(line: 658, column: 31, scope: !3315)
!3324 = !DILocation(line: 660, column: 13, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 660, column: 13)
!3326 = !DILocation(line: 660, column: 16, scope: !3325)
!3327 = !DILocation(line: 660, column: 19, scope: !3325)
!3328 = !DILocation(line: 660, column: 13, scope: !3315)
!3329 = !DILocation(line: 662, column: 13, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 661, column: 9)
!3331 = !DILocation(line: 662, column: 16, scope: !3330)
!3332 = !DILocation(line: 662, column: 19, scope: !3330)
!3333 = !DILocation(line: 662, column: 38, scope: !3330)
!3334 = !DILocation(line: 662, column: 41, scope: !3330)
!3335 = !DILocation(line: 662, column: 44, scope: !3330)
!3336 = !DILocation(line: 662, column: 48, scope: !3330)
!3337 = !DILocation(line: 662, column: 72, scope: !3330)
!3338 = !DILocation(line: 662, column: 75, scope: !3330)
!3339 = !DILocation(line: 662, column: 78, scope: !3330)
!3340 = !DILocation(line: 662, column: 82, scope: !3330)
!3341 = !DILocation(line: 663, column: 66, scope: !3330)
!3342 = !DILocation(line: 663, column: 69, scope: !3330)
!3343 = !DILocation(line: 663, column: 72, scope: !3330)
!3344 = !DILocation(line: 663, column: 76, scope: !3330)
!3345 = !DILocation(line: 663, column: 13, scope: !3330)
!3346 = !DILocation(line: 663, column: 64, scope: !3330)
!3347 = !DILocation(line: 664, column: 66, scope: !3330)
!3348 = !DILocation(line: 664, column: 69, scope: !3330)
!3349 = !DILocation(line: 664, column: 72, scope: !3330)
!3350 = !DILocation(line: 664, column: 76, scope: !3330)
!3351 = !DILocation(line: 664, column: 13, scope: !3330)
!3352 = !DILocation(line: 664, column: 64, scope: !3330)
!3353 = !DILocation(line: 665, column: 66, scope: !3330)
!3354 = !DILocation(line: 665, column: 69, scope: !3330)
!3355 = !DILocation(line: 665, column: 72, scope: !3330)
!3356 = !DILocation(line: 665, column: 76, scope: !3330)
!3357 = !DILocation(line: 665, column: 13, scope: !3330)
!3358 = !DILocation(line: 665, column: 64, scope: !3330)
!3359 = !DILocation(line: 666, column: 66, scope: !3330)
!3360 = !DILocation(line: 666, column: 69, scope: !3330)
!3361 = !DILocation(line: 666, column: 72, scope: !3330)
!3362 = !DILocation(line: 666, column: 76, scope: !3330)
!3363 = !DILocation(line: 666, column: 13, scope: !3330)
!3364 = !DILocation(line: 666, column: 64, scope: !3330)
!3365 = !DILocation(line: 667, column: 32, scope: !3330)
!3366 = !DILocation(line: 667, column: 35, scope: !3330)
!3367 = !DILocation(line: 667, column: 38, scope: !3330)
!3368 = !DILocation(line: 667, column: 42, scope: !3330)
!3369 = !DILocation(line: 667, column: 13, scope: !3330)
!3370 = !DILocation(line: 667, column: 16, scope: !3330)
!3371 = !DILocation(line: 667, column: 19, scope: !3330)
!3372 = !DILocation(line: 667, column: 30, scope: !3330)
!3373 = !DILocation(line: 669, column: 17, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 669, column: 17)
!3375 = !DILocation(line: 669, column: 20, scope: !3374)
!3376 = !DILocation(line: 669, column: 23, scope: !3374)
!3377 = !DILocation(line: 669, column: 36, scope: !3374)
!3378 = !DILocation(line: 669, column: 17, scope: !3330)
!3379 = !DILocation(line: 670, column: 17, scope: !3374)
!3380 = !DILocation(line: 670, column: 20, scope: !3374)
!3381 = !DILocation(line: 670, column: 23, scope: !3374)
!3382 = !DILocation(line: 670, column: 39, scope: !3374)
!3383 = !DILocation(line: 670, column: 42, scope: !3374)
!3384 = !DILocation(line: 670, column: 46, scope: !3374)
!3385 = !DILocation(line: 670, column: 55, scope: !3374)
!3386 = !DILocation(line: 670, column: 58, scope: !3374)
!3387 = !DILocation(line: 670, column: 61, scope: !3374)
!3388 = !DILocation(line: 670, column: 65, scope: !3374)
!3389 = !DILocation(line: 671, column: 9, scope: !3330)
!3390 = !DILocalVariable(name: "i", scope: !3391, file: !3, line: 672, type: !195)
!3391 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 672, column: 9)
!3392 = !DILocation(line: 672, column: 18, scope: !3391)
!3393 = !DILocation(line: 672, column: 22, scope: !3391)
!3394 = !DILocation(line: 672, column: 25, scope: !3391)
!3395 = !DILocation(line: 672, column: 28, scope: !3391)
!3396 = !DILocation(line: 672, column: 14, scope: !3391)
!3397 = !DILocation(line: 672, column: 51, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 672, column: 9)
!3399 = !DILocation(line: 672, column: 53, scope: !3398)
!3400 = !DILocation(line: 672, column: 9, scope: !3391)
!3401 = !DILocalVariable(name: "p_dst", scope: !3402, file: !3, line: 674, type: !420)
!3402 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 673, column: 9)
!3403 = !DILocation(line: 674, column: 23, scope: !3402)
!3404 = !DILocation(line: 674, column: 32, scope: !3402)
!3405 = !DILocation(line: 674, column: 35, scope: !3402)
!3406 = !DILocation(line: 674, column: 38, scope: !3402)
!3407 = !DILocation(line: 674, column: 42, scope: !3402)
!3408 = !DILocation(line: 674, column: 57, scope: !3402)
!3409 = !DILocation(line: 674, column: 58, scope: !3402)
!3410 = !DILocation(line: 674, column: 54, scope: !3402)
!3411 = !DILocation(line: 674, column: 69, scope: !3402)
!3412 = !DILocation(line: 674, column: 70, scope: !3402)
!3413 = !DILocation(line: 674, column: 66, scope: !3402)
!3414 = !DILocation(line: 674, column: 75, scope: !3402)
!3415 = !DILocation(line: 674, column: 62, scope: !3402)
!3416 = !DILocalVariable(name: "i_mode", scope: !3402, file: !3, line: 675, type: !195)
!3417 = !DILocation(line: 675, column: 22, scope: !3402)
!3418 = !DILocation(line: 675, column: 31, scope: !3402)
!3419 = !DILocation(line: 675, column: 34, scope: !3402)
!3420 = !DILocation(line: 675, column: 37, scope: !3402)
!3421 = !DILocation(line: 675, column: 43, scope: !3402)
!3422 = !DILocation(line: 675, column: 75, scope: !3402)
!3423 = !DILocation(line: 675, column: 74, scope: !3402)
!3424 = !DILocation(line: 675, column: 62, scope: !3402)
!3425 = !DILocation(line: 676, column: 13, scope: !3402)
!3426 = !DILocation(line: 676, column: 16, scope: !3402)
!3427 = !DILocation(line: 676, column: 36, scope: !3402)
!3428 = !DILocation(line: 676, column: 43, scope: !3402)
!3429 = !DILocation(line: 676, column: 49, scope: !3402)
!3430 = !DILocation(line: 676, column: 52, scope: !3402)
!3431 = !DILocation(line: 676, column: 55, scope: !3402)
!3432 = !DILocation(line: 676, column: 68, scope: !3402)
!3433 = !DILocation(line: 676, column: 97, scope: !3402)
!3434 = !DILocation(line: 676, column: 72, scope: !3402)
!3435 = !DILocation(line: 678, column: 17, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3402, file: !3, line: 678, column: 17)
!3437 = !DILocation(line: 678, column: 20, scope: !3436)
!3438 = !DILocation(line: 678, column: 23, scope: !3436)
!3439 = !DILocation(line: 678, column: 17, scope: !3402)
!3440 = !DILocation(line: 679, column: 44, scope: !3436)
!3441 = !DILocation(line: 679, column: 47, scope: !3436)
!3442 = !DILocation(line: 679, column: 54, scope: !3436)
!3443 = !DILocation(line: 679, column: 57, scope: !3436)
!3444 = !DILocation(line: 679, column: 65, scope: !3436)
!3445 = !DILocation(line: 679, column: 17, scope: !3436)
!3446 = !DILocation(line: 681, column: 17, scope: !3436)
!3447 = !DILocation(line: 681, column: 20, scope: !3436)
!3448 = !DILocation(line: 681, column: 32, scope: !3436)
!3449 = !DILocation(line: 681, column: 41, scope: !3436)
!3450 = !DILocation(line: 681, column: 48, scope: !3436)
!3451 = !DILocation(line: 683, column: 34, scope: !3402)
!3452 = !DILocation(line: 683, column: 37, scope: !3402)
!3453 = !DILocation(line: 683, column: 40, scope: !3402)
!3454 = !DILocation(line: 683, column: 13, scope: !3402)
!3455 = !DILocation(line: 684, column: 9, scope: !3402)
!3456 = !DILocation(line: 672, column: 59, scope: !3398)
!3457 = !DILocation(line: 672, column: 9, scope: !3398)
!3458 = distinct !{!3458, !3400, !3459}
!3459 = !DILocation(line: 684, column: 9, scope: !3391)
!3460 = !DILocation(line: 685, column: 5, scope: !3315)
!3461 = !DILocation(line: 686, column: 14, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 686, column: 14)
!3463 = !DILocation(line: 686, column: 17, scope: !3462)
!3464 = !DILocation(line: 686, column: 20, scope: !3462)
!3465 = !DILocation(line: 686, column: 27, scope: !3462)
!3466 = !DILocation(line: 686, column: 14, scope: !3309)
!3467 = !DILocation(line: 688, column: 9, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3462, file: !3, line: 687, column: 5)
!3469 = !DILocation(line: 688, column: 12, scope: !3468)
!3470 = !DILocation(line: 688, column: 15, scope: !3468)
!3471 = !DILocation(line: 688, column: 31, scope: !3468)
!3472 = !DILocation(line: 690, column: 13, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 690, column: 13)
!3474 = !DILocation(line: 690, column: 16, scope: !3473)
!3475 = !DILocation(line: 690, column: 19, scope: !3473)
!3476 = !DILocation(line: 690, column: 13, scope: !3468)
!3477 = !DILocation(line: 692, column: 13, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 691, column: 9)
!3479 = !DILocation(line: 692, column: 16, scope: !3478)
!3480 = !DILocation(line: 692, column: 19, scope: !3478)
!3481 = !DILocation(line: 692, column: 38, scope: !3478)
!3482 = !DILocation(line: 692, column: 41, scope: !3478)
!3483 = !DILocation(line: 692, column: 44, scope: !3478)
!3484 = !DILocation(line: 692, column: 48, scope: !3478)
!3485 = !DILocation(line: 692, column: 72, scope: !3478)
!3486 = !DILocation(line: 692, column: 75, scope: !3478)
!3487 = !DILocation(line: 692, column: 78, scope: !3478)
!3488 = !DILocation(line: 692, column: 82, scope: !3478)
!3489 = !DILocation(line: 693, column: 66, scope: !3478)
!3490 = !DILocation(line: 693, column: 69, scope: !3478)
!3491 = !DILocation(line: 693, column: 72, scope: !3478)
!3492 = !DILocation(line: 693, column: 76, scope: !3478)
!3493 = !DILocation(line: 693, column: 13, scope: !3478)
!3494 = !DILocation(line: 693, column: 64, scope: !3478)
!3495 = !DILocation(line: 694, column: 66, scope: !3478)
!3496 = !DILocation(line: 694, column: 69, scope: !3478)
!3497 = !DILocation(line: 694, column: 72, scope: !3478)
!3498 = !DILocation(line: 694, column: 76, scope: !3478)
!3499 = !DILocation(line: 694, column: 13, scope: !3478)
!3500 = !DILocation(line: 694, column: 64, scope: !3478)
!3501 = !DILocation(line: 695, column: 66, scope: !3478)
!3502 = !DILocation(line: 695, column: 69, scope: !3478)
!3503 = !DILocation(line: 695, column: 72, scope: !3478)
!3504 = !DILocation(line: 695, column: 76, scope: !3478)
!3505 = !DILocation(line: 695, column: 13, scope: !3478)
!3506 = !DILocation(line: 695, column: 64, scope: !3478)
!3507 = !DILocation(line: 696, column: 66, scope: !3478)
!3508 = !DILocation(line: 696, column: 69, scope: !3478)
!3509 = !DILocation(line: 696, column: 72, scope: !3478)
!3510 = !DILocation(line: 696, column: 76, scope: !3478)
!3511 = !DILocation(line: 696, column: 13, scope: !3478)
!3512 = !DILocation(line: 696, column: 64, scope: !3478)
!3513 = !DILocation(line: 697, column: 32, scope: !3478)
!3514 = !DILocation(line: 697, column: 35, scope: !3478)
!3515 = !DILocation(line: 697, column: 38, scope: !3478)
!3516 = !DILocation(line: 697, column: 42, scope: !3478)
!3517 = !DILocation(line: 697, column: 13, scope: !3478)
!3518 = !DILocation(line: 697, column: 16, scope: !3478)
!3519 = !DILocation(line: 697, column: 19, scope: !3478)
!3520 = !DILocation(line: 697, column: 30, scope: !3478)
!3521 = !DILocation(line: 699, column: 17, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 699, column: 17)
!3523 = !DILocation(line: 699, column: 20, scope: !3522)
!3524 = !DILocation(line: 699, column: 23, scope: !3522)
!3525 = !DILocation(line: 699, column: 36, scope: !3522)
!3526 = !DILocation(line: 699, column: 17, scope: !3478)
!3527 = !DILocation(line: 700, column: 17, scope: !3522)
!3528 = !DILocation(line: 700, column: 20, scope: !3522)
!3529 = !DILocation(line: 700, column: 23, scope: !3522)
!3530 = !DILocation(line: 700, column: 39, scope: !3522)
!3531 = !DILocation(line: 700, column: 42, scope: !3522)
!3532 = !DILocation(line: 700, column: 46, scope: !3522)
!3533 = !DILocation(line: 700, column: 55, scope: !3522)
!3534 = !DILocation(line: 700, column: 58, scope: !3522)
!3535 = !DILocation(line: 700, column: 61, scope: !3522)
!3536 = !DILocation(line: 700, column: 65, scope: !3522)
!3537 = !DILocation(line: 701, column: 9, scope: !3478)
!3538 = !DILocalVariable(name: "i", scope: !3539, file: !3, line: 702, type: !195)
!3539 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 702, column: 9)
!3540 = !DILocation(line: 702, column: 18, scope: !3539)
!3541 = !DILocation(line: 702, column: 22, scope: !3539)
!3542 = !DILocation(line: 702, column: 25, scope: !3539)
!3543 = !DILocation(line: 702, column: 28, scope: !3539)
!3544 = !DILocation(line: 702, column: 14, scope: !3539)
!3545 = !DILocation(line: 702, column: 52, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 702, column: 9)
!3547 = !DILocation(line: 702, column: 54, scope: !3546)
!3548 = !DILocation(line: 702, column: 9, scope: !3539)
!3549 = !DILocalVariable(name: "p_dst", scope: !3550, file: !3, line: 704, type: !420)
!3550 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 703, column: 9)
!3551 = !DILocation(line: 704, column: 23, scope: !3550)
!3552 = !DILocation(line: 704, column: 32, scope: !3550)
!3553 = !DILocation(line: 704, column: 35, scope: !3550)
!3554 = !DILocation(line: 704, column: 38, scope: !3550)
!3555 = !DILocation(line: 704, column: 42, scope: !3550)
!3556 = !DILocation(line: 704, column: 70, scope: !3550)
!3557 = !DILocation(line: 704, column: 52, scope: !3550)
!3558 = !DILocalVariable(name: "i_mode", scope: !3550, file: !3, line: 705, type: !195)
!3559 = !DILocation(line: 705, column: 22, scope: !3550)
!3560 = !DILocation(line: 705, column: 31, scope: !3550)
!3561 = !DILocation(line: 705, column: 34, scope: !3550)
!3562 = !DILocation(line: 705, column: 37, scope: !3550)
!3563 = !DILocation(line: 705, column: 43, scope: !3550)
!3564 = !DILocation(line: 705, column: 73, scope: !3550)
!3565 = !DILocation(line: 705, column: 62, scope: !3550)
!3566 = !DILocation(line: 707, column: 18, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3550, file: !3, line: 707, column: 17)
!3568 = !DILocation(line: 707, column: 21, scope: !3567)
!3569 = !DILocation(line: 707, column: 24, scope: !3567)
!3570 = !DILocation(line: 707, column: 37, scope: !3567)
!3571 = !DILocation(line: 707, column: 40, scope: !3567)
!3572 = !DILocation(line: 707, column: 64, scope: !3567)
!3573 = !DILocation(line: 707, column: 17, scope: !3550)
!3574 = !DILocation(line: 709, column: 48, scope: !3567)
!3575 = !DILocation(line: 709, column: 69, scope: !3567)
!3576 = !DILocation(line: 709, column: 17, scope: !3567)
!3577 = !DILocation(line: 709, column: 46, scope: !3567)
!3578 = !DILocation(line: 711, column: 17, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3550, file: !3, line: 711, column: 17)
!3580 = !DILocation(line: 711, column: 20, scope: !3579)
!3581 = !DILocation(line: 711, column: 23, scope: !3579)
!3582 = !DILocation(line: 711, column: 17, scope: !3550)
!3583 = !DILocation(line: 712, column: 44, scope: !3579)
!3584 = !DILocation(line: 712, column: 47, scope: !3579)
!3585 = !DILocation(line: 712, column: 54, scope: !3579)
!3586 = !DILocation(line: 712, column: 57, scope: !3579)
!3587 = !DILocation(line: 712, column: 17, scope: !3579)
!3588 = !DILocation(line: 714, column: 17, scope: !3579)
!3589 = !DILocation(line: 714, column: 20, scope: !3579)
!3590 = !DILocation(line: 714, column: 32, scope: !3579)
!3591 = !DILocation(line: 714, column: 41, scope: !3579)
!3592 = !DILocation(line: 715, column: 34, scope: !3550)
!3593 = !DILocation(line: 715, column: 37, scope: !3550)
!3594 = !DILocation(line: 715, column: 40, scope: !3550)
!3595 = !DILocation(line: 715, column: 13, scope: !3550)
!3596 = !DILocation(line: 716, column: 9, scope: !3550)
!3597 = !DILocation(line: 702, column: 61, scope: !3546)
!3598 = !DILocation(line: 702, column: 9, scope: !3546)
!3599 = distinct !{!3599, !3548, !3600}
!3600 = !DILocation(line: 716, column: 9, scope: !3539)
!3601 = !DILocation(line: 717, column: 5, scope: !3468)
!3602 = !DILocalVariable(name: "i_decimate_mb", scope: !3603, file: !3, line: 720, type: !195)
!3603 = distinct !DILexicalBlock(scope: !3462, file: !3, line: 719, column: 5)
!3604 = !DILocation(line: 720, column: 13, scope: !3603)
!3605 = !DILocation(line: 723, column: 14, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 723, column: 13)
!3607 = !DILocation(line: 723, column: 17, scope: !3606)
!3608 = !DILocation(line: 723, column: 20, scope: !3606)
!3609 = !DILocation(line: 723, column: 13, scope: !3603)
!3610 = !DILocation(line: 724, column: 25, scope: !3606)
!3611 = !DILocation(line: 724, column: 13, scope: !3606)
!3612 = !DILocation(line: 726, column: 13, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 726, column: 13)
!3614 = !DILocation(line: 726, column: 16, scope: !3613)
!3615 = !DILocation(line: 726, column: 19, scope: !3613)
!3616 = !DILocation(line: 726, column: 13, scope: !3603)
!3617 = !DILocation(line: 728, column: 17, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 728, column: 17)
!3619 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 727, column: 9)
!3620 = !DILocation(line: 728, column: 20, scope: !3618)
!3621 = !DILocation(line: 728, column: 23, scope: !3618)
!3622 = !DILocation(line: 728, column: 17, scope: !3619)
!3623 = !DILocalVariable(name: "i8x8", scope: !3624, file: !3, line: 729, type: !195)
!3624 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 729, column: 17)
!3625 = !DILocation(line: 729, column: 26, scope: !3624)
!3626 = !DILocation(line: 729, column: 22, scope: !3624)
!3627 = !DILocation(line: 729, column: 36, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 729, column: 17)
!3629 = !DILocation(line: 729, column: 41, scope: !3628)
!3630 = !DILocation(line: 729, column: 17, scope: !3624)
!3631 = !DILocalVariable(name: "x", scope: !3632, file: !3, line: 731, type: !195)
!3632 = distinct !DILexicalBlock(scope: !3628, file: !3, line: 730, column: 17)
!3633 = !DILocation(line: 731, column: 25, scope: !3632)
!3634 = !DILocation(line: 731, column: 32, scope: !3632)
!3635 = !DILocation(line: 731, column: 36, scope: !3632)
!3636 = !DILocation(line: 731, column: 30, scope: !3632)
!3637 = !DILocalVariable(name: "y", scope: !3632, file: !3, line: 732, type: !195)
!3638 = !DILocation(line: 732, column: 25, scope: !3632)
!3639 = !DILocation(line: 732, column: 32, scope: !3632)
!3640 = !DILocation(line: 732, column: 36, scope: !3632)
!3641 = !DILocation(line: 732, column: 30, scope: !3632)
!3642 = !DILocation(line: 733, column: 26, scope: !3632)
!3643 = !DILocation(line: 733, column: 29, scope: !3632)
!3644 = !DILocation(line: 733, column: 37, scope: !3632)
!3645 = !DILocation(line: 733, column: 46, scope: !3632)
!3646 = !DILocation(line: 733, column: 49, scope: !3632)
!3647 = !DILocation(line: 733, column: 53, scope: !3632)
!3648 = !DILocation(line: 733, column: 61, scope: !3632)
!3649 = !DILocation(line: 734, column: 41, scope: !3632)
!3650 = !DILocation(line: 734, column: 44, scope: !3632)
!3651 = !DILocation(line: 734, column: 47, scope: !3632)
!3652 = !DILocation(line: 734, column: 51, scope: !3632)
!3653 = !DILocation(line: 734, column: 61, scope: !3632)
!3654 = !DILocation(line: 734, column: 60, scope: !3632)
!3655 = !DILocation(line: 734, column: 63, scope: !3632)
!3656 = !DILocation(line: 734, column: 64, scope: !3632)
!3657 = !DILocation(line: 734, column: 62, scope: !3632)
!3658 = !DILocation(line: 735, column: 41, scope: !3632)
!3659 = !DILocation(line: 735, column: 44, scope: !3632)
!3660 = !DILocation(line: 735, column: 47, scope: !3632)
!3661 = !DILocation(line: 735, column: 51, scope: !3632)
!3662 = !DILocation(line: 735, column: 61, scope: !3632)
!3663 = !DILocation(line: 735, column: 60, scope: !3632)
!3664 = !DILocation(line: 735, column: 63, scope: !3632)
!3665 = !DILocation(line: 735, column: 64, scope: !3632)
!3666 = !DILocation(line: 735, column: 62, scope: !3632)
!3667 = !DILocation(line: 733, column: 24, scope: !3632)
!3668 = !DILocation(line: 736, column: 21, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 736, column: 21)
!3670 = !DILocation(line: 737, column: 41, scope: !3632)
!3671 = !DILocation(line: 737, column: 47, scope: !3632)
!3672 = !DILocation(line: 737, column: 44, scope: !3632)
!3673 = !DILocation(line: 737, column: 21, scope: !3632)
!3674 = !DILocation(line: 737, column: 24, scope: !3632)
!3675 = !DILocation(line: 737, column: 27, scope: !3632)
!3676 = !DILocation(line: 737, column: 38, scope: !3632)
!3677 = !DILocation(line: 738, column: 17, scope: !3632)
!3678 = !DILocation(line: 729, column: 50, scope: !3628)
!3679 = !DILocation(line: 729, column: 17, scope: !3628)
!3680 = distinct !{!3680, !3630, !3681}
!3681 = !DILocation(line: 738, column: 17, scope: !3624)
!3682 = !DILocalVariable(name: "i4x4", scope: !3683, file: !3, line: 740, type: !195)
!3683 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 740, column: 17)
!3684 = !DILocation(line: 740, column: 26, scope: !3683)
!3685 = !DILocation(line: 740, column: 22, scope: !3683)
!3686 = !DILocation(line: 740, column: 36, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 740, column: 17)
!3688 = !DILocation(line: 740, column: 41, scope: !3687)
!3689 = !DILocation(line: 740, column: 17, scope: !3683)
!3690 = !DILocation(line: 742, column: 26, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3687, file: !3, line: 741, column: 17)
!3692 = !DILocation(line: 742, column: 29, scope: !3691)
!3693 = !DILocation(line: 742, column: 37, scope: !3691)
!3694 = !DILocation(line: 742, column: 46, scope: !3691)
!3695 = !DILocation(line: 742, column: 49, scope: !3691)
!3696 = !DILocation(line: 742, column: 53, scope: !3691)
!3697 = !DILocation(line: 742, column: 61, scope: !3691)
!3698 = !DILocation(line: 743, column: 41, scope: !3691)
!3699 = !DILocation(line: 743, column: 44, scope: !3691)
!3700 = !DILocation(line: 743, column: 47, scope: !3691)
!3701 = !DILocation(line: 743, column: 51, scope: !3691)
!3702 = !DILocation(line: 743, column: 79, scope: !3691)
!3703 = !DILocation(line: 743, column: 61, scope: !3691)
!3704 = !DILocation(line: 743, column: 60, scope: !3691)
!3705 = !DILocation(line: 744, column: 41, scope: !3691)
!3706 = !DILocation(line: 744, column: 44, scope: !3691)
!3707 = !DILocation(line: 744, column: 47, scope: !3691)
!3708 = !DILocation(line: 744, column: 51, scope: !3691)
!3709 = !DILocation(line: 744, column: 79, scope: !3691)
!3710 = !DILocation(line: 744, column: 61, scope: !3691)
!3711 = !DILocation(line: 744, column: 60, scope: !3691)
!3712 = !DILocation(line: 742, column: 24, scope: !3691)
!3713 = !DILocation(line: 745, column: 68, scope: !3691)
!3714 = !DILocation(line: 745, column: 21, scope: !3691)
!3715 = !DILocation(line: 745, column: 24, scope: !3691)
!3716 = !DILocation(line: 745, column: 27, scope: !3691)
!3717 = !DILocation(line: 745, column: 33, scope: !3691)
!3718 = !DILocation(line: 745, column: 59, scope: !3691)
!3719 = !DILocation(line: 745, column: 48, scope: !3691)
!3720 = !DILocation(line: 745, column: 66, scope: !3691)
!3721 = !DILocation(line: 746, column: 41, scope: !3691)
!3722 = !DILocation(line: 746, column: 48, scope: !3691)
!3723 = !DILocation(line: 746, column: 52, scope: !3691)
!3724 = !DILocation(line: 746, column: 44, scope: !3691)
!3725 = !DILocation(line: 746, column: 21, scope: !3691)
!3726 = !DILocation(line: 746, column: 24, scope: !3691)
!3727 = !DILocation(line: 746, column: 27, scope: !3691)
!3728 = !DILocation(line: 746, column: 38, scope: !3691)
!3729 = !DILocation(line: 747, column: 17, scope: !3691)
!3730 = !DILocation(line: 740, column: 51, scope: !3687)
!3731 = !DILocation(line: 740, column: 17, scope: !3687)
!3732 = distinct !{!3732, !3689, !3733}
!3733 = !DILocation(line: 747, column: 17, scope: !3683)
!3734 = !DILocation(line: 748, column: 9, scope: !3619)
!3735 = !DILocation(line: 749, column: 18, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 749, column: 18)
!3737 = !DILocation(line: 749, column: 21, scope: !3736)
!3738 = !DILocation(line: 749, column: 24, scope: !3736)
!3739 = !DILocation(line: 749, column: 18, scope: !3613)
!3740 = !DILocalVariable(name: "dct8x8", scope: !3741, file: !3, line: 751, type: !880, align: 128)
!3741 = distinct !DILexicalBlock(scope: !3736, file: !3, line: 750, column: 9)
!3742 = !DILocation(line: 751, column: 13, scope: !3741)
!3743 = !DILocation(line: 752, column: 28, scope: !3741)
!3744 = !DILocation(line: 752, column: 31, scope: !3741)
!3745 = !DILocation(line: 752, column: 34, scope: !3741)
!3746 = !DILocation(line: 752, column: 27, scope: !3741)
!3747 = !DILocation(line: 752, column: 24, scope: !3741)
!3748 = !DILocation(line: 753, column: 13, scope: !3741)
!3749 = !DILocation(line: 753, column: 16, scope: !3741)
!3750 = !DILocation(line: 753, column: 21, scope: !3741)
!3751 = !DILocation(line: 753, column: 36, scope: !3741)
!3752 = !DILocation(line: 753, column: 44, scope: !3741)
!3753 = !DILocation(line: 753, column: 47, scope: !3741)
!3754 = !DILocation(line: 753, column: 50, scope: !3741)
!3755 = !DILocation(line: 753, column: 54, scope: !3741)
!3756 = !DILocation(line: 753, column: 65, scope: !3741)
!3757 = !DILocation(line: 753, column: 68, scope: !3741)
!3758 = !DILocation(line: 753, column: 71, scope: !3741)
!3759 = !DILocation(line: 753, column: 75, scope: !3741)
!3760 = !DILocation(line: 754, column: 31, scope: !3741)
!3761 = !DILocation(line: 754, column: 34, scope: !3741)
!3762 = !DILocation(line: 754, column: 37, scope: !3741)
!3763 = !DILocation(line: 754, column: 55, scope: !3741)
!3764 = !DILocation(line: 754, column: 13, scope: !3741)
!3765 = !DILocation(line: 754, column: 16, scope: !3741)
!3766 = !DILocation(line: 754, column: 28, scope: !3741)
!3767 = !DILocalVariable(name: "idx", scope: !3768, file: !3, line: 756, type: !195)
!3768 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 756, column: 13)
!3769 = !DILocation(line: 756, column: 22, scope: !3768)
!3770 = !DILocation(line: 756, column: 18, scope: !3768)
!3771 = !DILocation(line: 756, column: 31, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 756, column: 13)
!3773 = !DILocation(line: 756, column: 35, scope: !3772)
!3774 = !DILocation(line: 756, column: 13, scope: !3768)
!3775 = !DILocation(line: 758, column: 21, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 758, column: 21)
!3777 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 757, column: 13)
!3778 = !DILocation(line: 758, column: 24, scope: !3776)
!3779 = !DILocation(line: 758, column: 27, scope: !3776)
!3780 = !DILocation(line: 758, column: 21, scope: !3777)
!3781 = !DILocation(line: 759, column: 21, scope: !3776)
!3782 = !DILocation(line: 759, column: 24, scope: !3776)
!3783 = !DILocation(line: 759, column: 31, scope: !3776)
!3784 = !DILocation(line: 759, column: 51, scope: !3776)
!3785 = !DILocation(line: 759, column: 44, scope: !3776)
!3786 = !DILocation(line: 759, column: 57, scope: !3776)
!3787 = !DILocation(line: 759, column: 60, scope: !3776)
!3788 = !DILocation(line: 759, column: 80, scope: !3776)
!3789 = !DILocation(line: 759, column: 83, scope: !3776)
!3790 = !DILocation(line: 760, column: 38, scope: !3777)
!3791 = !DILocation(line: 760, column: 48, scope: !3777)
!3792 = !DILocation(line: 760, column: 41, scope: !3777)
!3793 = !DILocation(line: 760, column: 54, scope: !3777)
!3794 = !DILocation(line: 760, column: 63, scope: !3777)
!3795 = !DILocation(line: 760, column: 22, scope: !3777)
!3796 = !DILocation(line: 760, column: 20, scope: !3777)
!3797 = !DILocation(line: 762, column: 21, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 762, column: 21)
!3799 = !DILocation(line: 762, column: 21, scope: !3777)
!3800 = !DILocation(line: 764, column: 21, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 763, column: 17)
!3802 = !DILocation(line: 764, column: 24, scope: !3801)
!3803 = !DILocation(line: 764, column: 32, scope: !3801)
!3804 = !DILocation(line: 764, column: 42, scope: !3801)
!3805 = !DILocation(line: 764, column: 45, scope: !3801)
!3806 = !DILocation(line: 764, column: 49, scope: !3801)
!3807 = !DILocation(line: 764, column: 57, scope: !3801)
!3808 = !DILocation(line: 764, column: 70, scope: !3801)
!3809 = !DILocation(line: 764, column: 63, scope: !3801)
!3810 = !DILocation(line: 765, column: 25, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 765, column: 25)
!3812 = !DILocation(line: 765, column: 25, scope: !3801)
!3813 = !DILocalVariable(name: "i_decimate_8x8", scope: !3814, file: !3, line: 767, type: !195)
!3814 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 766, column: 21)
!3815 = !DILocation(line: 767, column: 29, scope: !3814)
!3816 = !DILocation(line: 767, column: 46, scope: !3814)
!3817 = !DILocation(line: 767, column: 49, scope: !3814)
!3818 = !DILocation(line: 767, column: 56, scope: !3814)
!3819 = !DILocation(line: 767, column: 74, scope: !3814)
!3820 = !DILocation(line: 767, column: 77, scope: !3814)
!3821 = !DILocation(line: 767, column: 81, scope: !3814)
!3822 = !DILocation(line: 767, column: 89, scope: !3814)
!3823 = !DILocation(line: 768, column: 42, scope: !3814)
!3824 = !DILocation(line: 768, column: 39, scope: !3814)
!3825 = !DILocation(line: 769, column: 29, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 769, column: 29)
!3827 = !DILocation(line: 769, column: 44, scope: !3826)
!3828 = !DILocation(line: 769, column: 29, scope: !3814)
!3829 = !DILocation(line: 770, column: 52, scope: !3826)
!3830 = !DILocation(line: 770, column: 50, scope: !3826)
!3831 = !DILocation(line: 770, column: 29, scope: !3826)
!3832 = !DILocation(line: 770, column: 32, scope: !3826)
!3833 = !DILocation(line: 770, column: 35, scope: !3826)
!3834 = !DILocation(line: 770, column: 46, scope: !3826)
!3835 = !DILocation(line: 771, column: 21, scope: !3814)
!3836 = !DILocation(line: 773, column: 48, scope: !3811)
!3837 = !DILocation(line: 773, column: 46, scope: !3811)
!3838 = !DILocation(line: 773, column: 25, scope: !3811)
!3839 = !DILocation(line: 773, column: 28, scope: !3811)
!3840 = !DILocation(line: 773, column: 31, scope: !3811)
!3841 = !DILocation(line: 773, column: 42, scope: !3811)
!3842 = !DILocation(line: 774, column: 17, scope: !3801)
!3843 = !DILocation(line: 775, column: 13, scope: !3777)
!3844 = !DILocation(line: 756, column: 43, scope: !3772)
!3845 = !DILocation(line: 756, column: 13, scope: !3772)
!3846 = distinct !{!3846, !3774, !3847}
!3847 = !DILocation(line: 775, column: 13, scope: !3768)
!3848 = !DILocation(line: 777, column: 17, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 777, column: 17)
!3850 = !DILocation(line: 777, column: 31, scope: !3849)
!3851 = !DILocation(line: 777, column: 35, scope: !3849)
!3852 = !DILocation(line: 777, column: 38, scope: !3849)
!3853 = !DILocation(line: 777, column: 17, scope: !3741)
!3854 = !DILocation(line: 779, column: 17, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 778, column: 13)
!3856 = !DILocation(line: 779, column: 20, scope: !3855)
!3857 = !DILocation(line: 779, column: 23, scope: !3855)
!3858 = !DILocation(line: 779, column: 34, scope: !3855)
!3859 = !DILocation(line: 780, column: 17, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 780, column: 17)
!3861 = !DILocation(line: 781, column: 13, scope: !3855)
!3862 = !DILocalVariable(name: "idx", scope: !3863, file: !3, line: 784, type: !195)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 784, column: 17)
!3864 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 783, column: 13)
!3865 = !DILocation(line: 784, column: 26, scope: !3863)
!3866 = !DILocation(line: 784, column: 22, scope: !3863)
!3867 = !DILocation(line: 784, column: 35, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 784, column: 17)
!3869 = !DILocation(line: 784, column: 39, scope: !3868)
!3870 = !DILocation(line: 784, column: 17, scope: !3863)
!3871 = !DILocation(line: 786, column: 25, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 786, column: 25)
!3873 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 785, column: 17)
!3874 = !DILocation(line: 786, column: 28, scope: !3872)
!3875 = !DILocation(line: 786, column: 31, scope: !3872)
!3876 = !DILocation(line: 786, column: 46, scope: !3872)
!3877 = !DILocation(line: 786, column: 44, scope: !3872)
!3878 = !DILocation(line: 786, column: 41, scope: !3872)
!3879 = !DILocation(line: 786, column: 25, scope: !3873)
!3880 = !DILocation(line: 788, column: 25, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 787, column: 21)
!3882 = !DILocation(line: 788, column: 28, scope: !3881)
!3883 = !DILocation(line: 788, column: 35, scope: !3881)
!3884 = !DILocation(line: 788, column: 55, scope: !3881)
!3885 = !DILocation(line: 788, column: 48, scope: !3881)
!3886 = !DILocation(line: 788, column: 61, scope: !3881)
!3887 = !DILocation(line: 788, column: 64, scope: !3881)
!3888 = !DILocation(line: 788, column: 86, scope: !3881)
!3889 = !DILocation(line: 789, column: 25, scope: !3881)
!3890 = !DILocation(line: 789, column: 28, scope: !3881)
!3891 = !DILocation(line: 789, column: 33, scope: !3881)
!3892 = !DILocation(line: 789, column: 48, scope: !3881)
!3893 = !DILocation(line: 789, column: 51, scope: !3881)
!3894 = !DILocation(line: 789, column: 54, scope: !3881)
!3895 = !DILocation(line: 789, column: 58, scope: !3881)
!3896 = !DILocation(line: 789, column: 69, scope: !3881)
!3897 = !DILocation(line: 789, column: 72, scope: !3881)
!3898 = !DILocation(line: 789, column: 75, scope: !3881)
!3899 = !DILocation(line: 789, column: 81, scope: !3881)
!3900 = !DILocation(line: 789, column: 84, scope: !3881)
!3901 = !DILocation(line: 789, column: 88, scope: !3881)
!3902 = !DILocation(line: 789, column: 90, scope: !3881)
!3903 = !DILocation(line: 789, column: 78, scope: !3881)
!3904 = !DILocation(line: 789, column: 112, scope: !3881)
!3905 = !DILocation(line: 789, column: 105, scope: !3881)
!3906 = !DILocation(line: 790, column: 25, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 790, column: 25)
!3908 = !DILocation(line: 791, column: 21, scope: !3881)
!3909 = !DILocation(line: 793, column: 25, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 793, column: 25)
!3911 = !DILocation(line: 794, column: 17, scope: !3873)
!3912 = !DILocation(line: 784, column: 47, scope: !3868)
!3913 = !DILocation(line: 784, column: 17, scope: !3868)
!3914 = distinct !{!3914, !3870, !3915}
!3915 = !DILocation(line: 794, column: 17, scope: !3863)
!3916 = !DILocation(line: 796, column: 9, scope: !3741)
!3917 = !DILocalVariable(name: "dct4x4", scope: !3918, file: !3, line: 799, type: !996, align: 128)
!3918 = distinct !DILexicalBlock(scope: !3736, file: !3, line: 798, column: 9)
!3919 = !DILocation(line: 799, column: 13, scope: !3918)
!3920 = !DILocation(line: 800, column: 13, scope: !3918)
!3921 = !DILocation(line: 800, column: 16, scope: !3918)
!3922 = !DILocation(line: 800, column: 21, scope: !3918)
!3923 = !DILocation(line: 800, column: 35, scope: !3918)
!3924 = !DILocation(line: 800, column: 43, scope: !3918)
!3925 = !DILocation(line: 800, column: 46, scope: !3918)
!3926 = !DILocation(line: 800, column: 49, scope: !3918)
!3927 = !DILocation(line: 800, column: 53, scope: !3918)
!3928 = !DILocation(line: 800, column: 64, scope: !3918)
!3929 = !DILocation(line: 800, column: 67, scope: !3918)
!3930 = !DILocation(line: 800, column: 70, scope: !3918)
!3931 = !DILocation(line: 800, column: 74, scope: !3918)
!3932 = !DILocation(line: 801, column: 31, scope: !3918)
!3933 = !DILocation(line: 801, column: 34, scope: !3918)
!3934 = !DILocation(line: 801, column: 37, scope: !3918)
!3935 = !DILocation(line: 801, column: 55, scope: !3918)
!3936 = !DILocation(line: 801, column: 13, scope: !3918)
!3937 = !DILocation(line: 801, column: 16, scope: !3918)
!3938 = !DILocation(line: 801, column: 28, scope: !3918)
!3939 = !DILocalVariable(name: "i8x8", scope: !3940, file: !3, line: 803, type: !195)
!3940 = distinct !DILexicalBlock(scope: !3918, file: !3, line: 803, column: 13)
!3941 = !DILocation(line: 803, column: 22, scope: !3940)
!3942 = !DILocation(line: 803, column: 18, scope: !3940)
!3943 = !DILocation(line: 803, column: 32, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 803, column: 13)
!3945 = !DILocation(line: 803, column: 37, scope: !3944)
!3946 = !DILocation(line: 803, column: 13, scope: !3940)
!3947 = !DILocalVariable(name: "i_decimate_8x8", scope: !3948, file: !3, line: 805, type: !195)
!3948 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 804, column: 13)
!3949 = !DILocation(line: 805, column: 21, scope: !3948)
!3950 = !DILocalVariable(name: "cbp", scope: !3948, file: !3, line: 806, type: !195)
!3951 = !DILocation(line: 806, column: 21, scope: !3948)
!3952 = !DILocalVariable(name: "i4x4", scope: !3953, file: !3, line: 809, type: !195)
!3953 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 809, column: 17)
!3954 = !DILocation(line: 809, column: 26, scope: !3953)
!3955 = !DILocation(line: 809, column: 22, scope: !3953)
!3956 = !DILocation(line: 809, column: 36, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 809, column: 17)
!3958 = !DILocation(line: 809, column: 41, scope: !3957)
!3959 = !DILocation(line: 809, column: 17, scope: !3953)
!3960 = !DILocalVariable(name: "idx", scope: !3961, file: !3, line: 811, type: !195)
!3961 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 810, column: 17)
!3962 = !DILocation(line: 811, column: 25, scope: !3961)
!3963 = !DILocation(line: 811, column: 31, scope: !3961)
!3964 = !DILocation(line: 811, column: 36, scope: !3961)
!3965 = !DILocation(line: 811, column: 42, scope: !3961)
!3966 = !DILocation(line: 811, column: 40, scope: !3961)
!3967 = !DILocation(line: 813, column: 25, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 813, column: 25)
!3969 = !DILocation(line: 813, column: 28, scope: !3968)
!3970 = !DILocation(line: 813, column: 31, scope: !3968)
!3971 = !DILocation(line: 813, column: 25, scope: !3961)
!3972 = !DILocation(line: 814, column: 25, scope: !3968)
!3973 = !DILocation(line: 814, column: 28, scope: !3968)
!3974 = !DILocation(line: 814, column: 35, scope: !3968)
!3975 = !DILocation(line: 814, column: 55, scope: !3968)
!3976 = !DILocation(line: 814, column: 48, scope: !3968)
!3977 = !DILocation(line: 814, column: 61, scope: !3968)
!3978 = !DILocation(line: 814, column: 64, scope: !3968)
!3979 = !DILocation(line: 814, column: 84, scope: !3968)
!3980 = !DILocation(line: 814, column: 87, scope: !3968)
!3981 = !DILocation(line: 815, column: 42, scope: !3961)
!3982 = !DILocation(line: 815, column: 52, scope: !3961)
!3983 = !DILocation(line: 815, column: 45, scope: !3961)
!3984 = !DILocation(line: 815, column: 58, scope: !3961)
!3985 = !DILocation(line: 815, column: 81, scope: !3961)
!3986 = !DILocation(line: 815, column: 26, scope: !3961)
!3987 = !DILocation(line: 815, column: 24, scope: !3961)
!3988 = !DILocation(line: 816, column: 67, scope: !3961)
!3989 = !DILocation(line: 816, column: 21, scope: !3961)
!3990 = !DILocation(line: 816, column: 24, scope: !3961)
!3991 = !DILocation(line: 816, column: 27, scope: !3961)
!3992 = !DILocation(line: 816, column: 33, scope: !3961)
!3993 = !DILocation(line: 816, column: 59, scope: !3961)
!3994 = !DILocation(line: 816, column: 48, scope: !3961)
!3995 = !DILocation(line: 816, column: 65, scope: !3961)
!3996 = !DILocation(line: 818, column: 25, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 818, column: 25)
!3998 = !DILocation(line: 818, column: 25, scope: !3961)
!3999 = !DILocation(line: 820, column: 25, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 819, column: 21)
!4001 = !DILocation(line: 820, column: 28, scope: !4000)
!4002 = !DILocation(line: 820, column: 36, scope: !4000)
!4003 = !DILocation(line: 820, column: 46, scope: !4000)
!4004 = !DILocation(line: 820, column: 49, scope: !4000)
!4005 = !DILocation(line: 820, column: 53, scope: !4000)
!4006 = !DILocation(line: 820, column: 61, scope: !4000)
!4007 = !DILocation(line: 820, column: 74, scope: !4000)
!4008 = !DILocation(line: 820, column: 67, scope: !4000)
!4009 = !DILocation(line: 821, column: 25, scope: !4000)
!4010 = !DILocation(line: 821, column: 28, scope: !4000)
!4011 = !DILocation(line: 821, column: 35, scope: !4000)
!4012 = !DILocation(line: 821, column: 55, scope: !4000)
!4013 = !DILocation(line: 821, column: 48, scope: !4000)
!4014 = !DILocation(line: 821, column: 61, scope: !4000)
!4015 = !DILocation(line: 821, column: 64, scope: !4000)
!4016 = !DILocation(line: 821, column: 86, scope: !4000)
!4017 = !DILocation(line: 822, column: 29, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 822, column: 29)
!4019 = !DILocation(line: 822, column: 40, scope: !4018)
!4020 = !DILocation(line: 822, column: 43, scope: !4018)
!4021 = !DILocation(line: 822, column: 58, scope: !4018)
!4022 = !DILocation(line: 822, column: 29, scope: !4000)
!4023 = !DILocation(line: 823, column: 47, scope: !4018)
!4024 = !DILocation(line: 823, column: 50, scope: !4018)
!4025 = !DILocation(line: 823, column: 57, scope: !4018)
!4026 = !DILocation(line: 823, column: 75, scope: !4018)
!4027 = !DILocation(line: 823, column: 78, scope: !4018)
!4028 = !DILocation(line: 823, column: 82, scope: !4018)
!4029 = !DILocation(line: 823, column: 90, scope: !4018)
!4030 = !DILocation(line: 823, column: 44, scope: !4018)
!4031 = !DILocation(line: 823, column: 29, scope: !4018)
!4032 = !DILocation(line: 824, column: 29, scope: !4000)
!4033 = !DILocation(line: 825, column: 21, scope: !4000)
!4034 = !DILocation(line: 826, column: 17, scope: !3961)
!4035 = !DILocation(line: 809, column: 50, scope: !3957)
!4036 = !DILocation(line: 809, column: 17, scope: !3957)
!4037 = distinct !{!4037, !3959, !4038}
!4038 = !DILocation(line: 826, column: 17, scope: !3953)
!4039 = !DILocation(line: 829, column: 34, scope: !3948)
!4040 = !DILocation(line: 829, column: 31, scope: !3948)
!4041 = !DILocation(line: 830, column: 21, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 830, column: 21)
!4043 = !DILocation(line: 830, column: 21, scope: !3948)
!4044 = !DILocation(line: 832, column: 25, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 832, column: 25)
!4046 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 831, column: 17)
!4047 = !DILocation(line: 832, column: 40, scope: !4045)
!4048 = !DILocation(line: 832, column: 25, scope: !4046)
!4049 = !DILocation(line: 833, column: 25, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4045, file: !3, line: 833, column: 25)
!4051 = !DILocation(line: 835, column: 48, scope: !4045)
!4052 = !DILocation(line: 835, column: 46, scope: !4045)
!4053 = !DILocation(line: 835, column: 25, scope: !4045)
!4054 = !DILocation(line: 835, column: 28, scope: !4045)
!4055 = !DILocation(line: 835, column: 31, scope: !4045)
!4056 = !DILocation(line: 835, column: 42, scope: !4045)
!4057 = !DILocation(line: 836, column: 17, scope: !4046)
!4058 = !DILocation(line: 837, column: 26, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 837, column: 26)
!4060 = !DILocation(line: 837, column: 26, scope: !4042)
!4061 = !DILocation(line: 839, column: 21, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 838, column: 17)
!4063 = !DILocation(line: 839, column: 24, scope: !4062)
!4064 = !DILocation(line: 839, column: 29, scope: !4062)
!4065 = !DILocation(line: 839, column: 43, scope: !4062)
!4066 = !DILocation(line: 839, column: 46, scope: !4062)
!4067 = !DILocation(line: 839, column: 49, scope: !4062)
!4068 = !DILocation(line: 839, column: 53, scope: !4062)
!4069 = !DILocation(line: 839, column: 64, scope: !4062)
!4070 = !DILocation(line: 839, column: 68, scope: !4062)
!4071 = !DILocation(line: 839, column: 71, scope: !4062)
!4072 = !DILocation(line: 839, column: 77, scope: !4062)
!4073 = !DILocation(line: 839, column: 81, scope: !4062)
!4074 = !DILocation(line: 839, column: 85, scope: !4062)
!4075 = !DILocation(line: 839, column: 87, scope: !4062)
!4076 = !DILocation(line: 839, column: 74, scope: !4062)
!4077 = !DILocation(line: 839, column: 110, scope: !4062)
!4078 = !DILocation(line: 839, column: 114, scope: !4062)
!4079 = !DILocation(line: 839, column: 103, scope: !4062)
!4080 = !DILocation(line: 840, column: 44, scope: !4062)
!4081 = !DILocation(line: 840, column: 42, scope: !4062)
!4082 = !DILocation(line: 840, column: 21, scope: !4062)
!4083 = !DILocation(line: 840, column: 24, scope: !4062)
!4084 = !DILocation(line: 840, column: 27, scope: !4062)
!4085 = !DILocation(line: 840, column: 38, scope: !4062)
!4086 = !DILocation(line: 841, column: 17, scope: !4062)
!4087 = !DILocation(line: 842, column: 13, scope: !3948)
!4088 = !DILocation(line: 803, column: 46, scope: !3944)
!4089 = !DILocation(line: 803, column: 13, scope: !3944)
!4090 = distinct !{!4090, !3946, !4091}
!4091 = !DILocation(line: 842, column: 13, scope: !3940)
!4092 = !DILocation(line: 844, column: 17, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !3918, file: !3, line: 844, column: 17)
!4094 = !DILocation(line: 844, column: 17, scope: !3918)
!4095 = !DILocation(line: 846, column: 21, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 846, column: 21)
!4097 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 845, column: 13)
!4098 = !DILocation(line: 846, column: 35, scope: !4096)
!4099 = !DILocation(line: 846, column: 21, scope: !4097)
!4100 = !DILocation(line: 848, column: 21, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 847, column: 17)
!4102 = !DILocation(line: 848, column: 24, scope: !4101)
!4103 = !DILocation(line: 848, column: 27, scope: !4101)
!4104 = !DILocation(line: 848, column: 38, scope: !4101)
!4105 = !DILocation(line: 849, column: 21, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 849, column: 21)
!4107 = !DILocation(line: 850, column: 17, scope: !4101)
!4108 = !DILocalVariable(name: "i8x8", scope: !4109, file: !3, line: 853, type: !195)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 853, column: 21)
!4110 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 852, column: 17)
!4111 = !DILocation(line: 853, column: 30, scope: !4109)
!4112 = !DILocation(line: 853, column: 26, scope: !4109)
!4113 = !DILocation(line: 853, column: 40, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 853, column: 21)
!4115 = !DILocation(line: 853, column: 45, scope: !4114)
!4116 = !DILocation(line: 853, column: 21, scope: !4109)
!4117 = !DILocation(line: 854, column: 29, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 854, column: 29)
!4119 = !DILocation(line: 854, column: 32, scope: !4118)
!4120 = !DILocation(line: 854, column: 35, scope: !4118)
!4121 = !DILocation(line: 854, column: 50, scope: !4118)
!4122 = !DILocation(line: 854, column: 48, scope: !4118)
!4123 = !DILocation(line: 854, column: 45, scope: !4118)
!4124 = !DILocation(line: 854, column: 29, scope: !4114)
!4125 = !DILocation(line: 855, column: 29, scope: !4118)
!4126 = !DILocation(line: 855, column: 32, scope: !4118)
!4127 = !DILocation(line: 855, column: 37, scope: !4118)
!4128 = !DILocation(line: 855, column: 51, scope: !4118)
!4129 = !DILocation(line: 855, column: 54, scope: !4118)
!4130 = !DILocation(line: 855, column: 57, scope: !4118)
!4131 = !DILocation(line: 855, column: 61, scope: !4118)
!4132 = !DILocation(line: 855, column: 72, scope: !4118)
!4133 = !DILocation(line: 855, column: 76, scope: !4118)
!4134 = !DILocation(line: 855, column: 79, scope: !4118)
!4135 = !DILocation(line: 855, column: 85, scope: !4118)
!4136 = !DILocation(line: 855, column: 89, scope: !4118)
!4137 = !DILocation(line: 855, column: 93, scope: !4118)
!4138 = !DILocation(line: 855, column: 95, scope: !4118)
!4139 = !DILocation(line: 855, column: 82, scope: !4118)
!4140 = !DILocation(line: 855, column: 118, scope: !4118)
!4141 = !DILocation(line: 855, column: 122, scope: !4118)
!4142 = !DILocation(line: 855, column: 111, scope: !4118)
!4143 = !DILocation(line: 854, column: 54, scope: !4118)
!4144 = !DILocation(line: 853, column: 54, scope: !4114)
!4145 = !DILocation(line: 853, column: 21, scope: !4114)
!4146 = distinct !{!4146, !4116, !4147}
!4147 = !DILocation(line: 855, column: 126, scope: !4109)
!4148 = !DILocation(line: 857, column: 13, scope: !4097)
!4149 = !DILocation(line: 862, column: 9, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 862, column: 9)
!4151 = !DILocation(line: 862, column: 9, scope: !3129)
!4152 = !DILocalVariable(name: "i_mode", scope: !4153, file: !3, line: 864, type: !194)
!4153 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 863, column: 5)
!4154 = !DILocation(line: 864, column: 19, scope: !4153)
!4155 = !DILocation(line: 864, column: 28, scope: !4153)
!4156 = !DILocation(line: 864, column: 31, scope: !4153)
!4157 = !DILocation(line: 864, column: 34, scope: !4153)
!4158 = !DILocation(line: 865, column: 13, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 865, column: 13)
!4160 = !DILocation(line: 865, column: 16, scope: !4159)
!4161 = !DILocation(line: 865, column: 19, scope: !4159)
!4162 = !DILocation(line: 865, column: 13, scope: !4153)
!4163 = !DILocation(line: 866, column: 47, scope: !4159)
!4164 = !DILocation(line: 866, column: 50, scope: !4159)
!4165 = !DILocation(line: 866, column: 13, scope: !4159)
!4166 = !DILocation(line: 869, column: 13, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 868, column: 9)
!4168 = !DILocation(line: 869, column: 16, scope: !4167)
!4169 = !DILocation(line: 869, column: 29, scope: !4167)
!4170 = !DILocation(line: 869, column: 38, scope: !4167)
!4171 = !DILocation(line: 869, column: 41, scope: !4167)
!4172 = !DILocation(line: 869, column: 44, scope: !4167)
!4173 = !DILocation(line: 869, column: 48, scope: !4167)
!4174 = !DILocation(line: 870, column: 13, scope: !4167)
!4175 = !DILocation(line: 870, column: 16, scope: !4167)
!4176 = !DILocation(line: 870, column: 29, scope: !4167)
!4177 = !DILocation(line: 870, column: 38, scope: !4167)
!4178 = !DILocation(line: 870, column: 41, scope: !4167)
!4179 = !DILocation(line: 870, column: 44, scope: !4167)
!4180 = !DILocation(line: 870, column: 48, scope: !4167)
!4181 = !DILocation(line: 872, column: 5, scope: !4153)
!4182 = !DILocation(line: 875, column: 32, scope: !3129)
!4183 = !DILocation(line: 875, column: 36, scope: !3129)
!4184 = !DILocation(line: 875, column: 35, scope: !3129)
!4185 = !DILocation(line: 875, column: 62, scope: !3129)
!4186 = !DILocation(line: 875, column: 65, scope: !3129)
!4187 = !DILocation(line: 875, column: 68, scope: !3129)
!4188 = !DILocation(line: 875, column: 5, scope: !3129)
!4189 = !DILocalVariable(name: "cbp", scope: !3129, file: !3, line: 878, type: !195)
!4190 = !DILocation(line: 878, column: 9, scope: !3129)
!4191 = !DILocation(line: 878, column: 15, scope: !3129)
!4192 = !DILocation(line: 878, column: 18, scope: !3129)
!4193 = !DILocation(line: 878, column: 21, scope: !3129)
!4194 = !DILocation(line: 878, column: 34, scope: !3129)
!4195 = !DILocation(line: 878, column: 41, scope: !3129)
!4196 = !DILocation(line: 878, column: 44, scope: !3129)
!4197 = !DILocation(line: 878, column: 47, scope: !3129)
!4198 = !DILocation(line: 878, column: 39, scope: !3129)
!4199 = !DILocation(line: 879, column: 9, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 879, column: 9)
!4201 = !DILocation(line: 879, column: 12, scope: !4200)
!4202 = !DILocation(line: 879, column: 18, scope: !4200)
!4203 = !DILocation(line: 879, column: 9, scope: !3129)
!4204 = !DILocation(line: 880, column: 16, scope: !4200)
!4205 = !DILocation(line: 880, column: 19, scope: !4200)
!4206 = !DILocation(line: 880, column: 22, scope: !4200)
!4207 = !DILocation(line: 880, column: 28, scope: !4200)
!4208 = !DILocation(line: 880, column: 43, scope: !4200)
!4209 = !DILocation(line: 880, column: 59, scope: !4200)
!4210 = !DILocation(line: 881, column: 16, scope: !4200)
!4211 = !DILocation(line: 881, column: 19, scope: !4200)
!4212 = !DILocation(line: 881, column: 22, scope: !4200)
!4213 = !DILocation(line: 881, column: 28, scope: !4200)
!4214 = !DILocation(line: 881, column: 43, scope: !4200)
!4215 = !DILocation(line: 881, column: 59, scope: !4200)
!4216 = !DILocation(line: 881, column: 13, scope: !4200)
!4217 = !DILocation(line: 882, column: 16, scope: !4200)
!4218 = !DILocation(line: 882, column: 19, scope: !4200)
!4219 = !DILocation(line: 882, column: 22, scope: !4200)
!4220 = !DILocation(line: 882, column: 28, scope: !4200)
!4221 = !DILocation(line: 882, column: 43, scope: !4200)
!4222 = !DILocation(line: 882, column: 59, scope: !4200)
!4223 = !DILocation(line: 882, column: 13, scope: !4200)
!4224 = !DILocation(line: 880, column: 13, scope: !4200)
!4225 = !DILocation(line: 880, column: 9, scope: !4200)
!4226 = !DILocation(line: 883, column: 32, scope: !3129)
!4227 = !DILocation(line: 883, column: 5, scope: !3129)
!4228 = !DILocation(line: 883, column: 8, scope: !3129)
!4229 = !DILocation(line: 883, column: 11, scope: !3129)
!4230 = !DILocation(line: 883, column: 15, scope: !3129)
!4231 = !DILocation(line: 883, column: 18, scope: !3129)
!4232 = !DILocation(line: 883, column: 21, scope: !3129)
!4233 = !DILocation(line: 883, column: 30, scope: !3129)
!4234 = !DILocation(line: 888, column: 10, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 888, column: 9)
!4236 = !DILocation(line: 888, column: 9, scope: !3129)
!4237 = !DILocation(line: 890, column: 13, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 890, column: 13)
!4239 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 889, column: 5)
!4240 = !DILocation(line: 890, column: 16, scope: !4238)
!4241 = !DILocation(line: 890, column: 19, scope: !4238)
!4242 = !DILocation(line: 890, column: 26, scope: !4238)
!4243 = !DILocation(line: 890, column: 34, scope: !4238)
!4244 = !DILocation(line: 890, column: 37, scope: !4238)
!4245 = !DILocation(line: 890, column: 40, scope: !4238)
!4246 = !DILocation(line: 890, column: 43, scope: !4238)
!4247 = !DILocation(line: 890, column: 55, scope: !4238)
!4248 = !DILocation(line: 890, column: 66, scope: !4238)
!4249 = !DILocation(line: 891, column: 15, scope: !4238)
!4250 = !DILocation(line: 891, column: 18, scope: !4238)
!4251 = !DILocation(line: 891, column: 21, scope: !4238)
!4252 = !DILocation(line: 891, column: 34, scope: !4238)
!4253 = !DILocation(line: 891, column: 37, scope: !4238)
!4254 = !DILocation(line: 891, column: 40, scope: !4238)
!4255 = !DILocation(line: 891, column: 32, scope: !4238)
!4256 = !DILocation(line: 891, column: 54, scope: !4238)
!4257 = !DILocation(line: 892, column: 13, scope: !4238)
!4258 = !DILocation(line: 892, column: 56, scope: !4238)
!4259 = !DILocation(line: 892, column: 53, scope: !4238)
!4260 = !DILocation(line: 893, column: 13, scope: !4238)
!4261 = !DILocation(line: 893, column: 16, scope: !4238)
!4262 = !DILocation(line: 893, column: 19, scope: !4238)
!4263 = !DILocation(line: 893, column: 22, scope: !4238)
!4264 = !DILocation(line: 893, column: 28, scope: !4238)
!4265 = !DILocation(line: 893, column: 35, scope: !4238)
!4266 = !DILocation(line: 893, column: 50, scope: !4238)
!4267 = !DILocation(line: 890, column: 13, scope: !4239)
!4268 = !DILocation(line: 895, column: 13, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 894, column: 9)
!4270 = !DILocation(line: 895, column: 16, scope: !4269)
!4271 = !DILocation(line: 895, column: 19, scope: !4269)
!4272 = !DILocation(line: 895, column: 26, scope: !4269)
!4273 = !DILocation(line: 896, column: 9, scope: !4269)
!4274 = !DILocation(line: 899, column: 13, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 899, column: 13)
!4276 = !DILocation(line: 899, column: 16, scope: !4275)
!4277 = !DILocation(line: 899, column: 19, scope: !4275)
!4278 = !DILocation(line: 899, column: 26, scope: !4275)
!4279 = !DILocation(line: 899, column: 38, scope: !4275)
!4280 = !DILocation(line: 899, column: 43, scope: !4275)
!4281 = !DILocation(line: 899, column: 46, scope: !4275)
!4282 = !DILocation(line: 899, column: 49, scope: !4275)
!4283 = !DILocation(line: 899, column: 62, scope: !4275)
!4284 = !DILocation(line: 899, column: 65, scope: !4275)
!4285 = !DILocation(line: 899, column: 68, scope: !4275)
!4286 = !DILocation(line: 899, column: 60, scope: !4275)
!4287 = !DILocation(line: 899, column: 13, scope: !4239)
!4288 = !DILocation(line: 901, column: 13, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 900, column: 9)
!4290 = !DILocation(line: 901, column: 16, scope: !4289)
!4291 = !DILocation(line: 901, column: 19, scope: !4289)
!4292 = !DILocation(line: 901, column: 26, scope: !4289)
!4293 = !DILocation(line: 902, column: 9, scope: !4289)
!4294 = !DILocation(line: 903, column: 5, scope: !4239)
!4295 = !DILocation(line: 904, column: 1, scope: !3129)
!4296 = distinct !DISubprogram(name: "x264_macroblock_encode_pskip", scope: !3, file: !3, line: 477, type: !3130, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!4297 = !DILocalVariable(name: "h", arg: 1, scope: !4296, file: !3, line: 477, type: !228)
!4298 = !DILocation(line: 477, column: 51, scope: !4296)
!4299 = !DILocation(line: 480, column: 10, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 480, column: 9)
!4301 = !DILocation(line: 480, column: 13, scope: !4300)
!4302 = !DILocation(line: 480, column: 16, scope: !4300)
!4303 = !DILocation(line: 480, column: 9, scope: !4296)
!4304 = !DILocalVariable(name: "mvx", scope: !4305, file: !3, line: 482, type: !195)
!4305 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 481, column: 5)
!4306 = !DILocation(line: 482, column: 13, scope: !4305)
!4307 = !DILocation(line: 482, column: 31, scope: !4305)
!4308 = !DILocation(line: 482, column: 34, scope: !4305)
!4309 = !DILocation(line: 482, column: 37, scope: !4305)
!4310 = !DILocation(line: 482, column: 43, scope: !4305)
!4311 = !DILocation(line: 482, column: 49, scope: !4305)
!4312 = !DILocation(line: 483, column: 31, scope: !4305)
!4313 = !DILocation(line: 483, column: 34, scope: !4305)
!4314 = !DILocation(line: 483, column: 37, scope: !4305)
!4315 = !DILocation(line: 483, column: 48, scope: !4305)
!4316 = !DILocation(line: 483, column: 51, scope: !4305)
!4317 = !DILocation(line: 483, column: 54, scope: !4305)
!4318 = !DILocation(line: 482, column: 19, scope: !4305)
!4319 = !DILocalVariable(name: "mvy", scope: !4305, file: !3, line: 484, type: !195)
!4320 = !DILocation(line: 484, column: 13, scope: !4305)
!4321 = !DILocation(line: 484, column: 31, scope: !4305)
!4322 = !DILocation(line: 484, column: 34, scope: !4305)
!4323 = !DILocation(line: 484, column: 37, scope: !4305)
!4324 = !DILocation(line: 484, column: 43, scope: !4305)
!4325 = !DILocation(line: 484, column: 49, scope: !4305)
!4326 = !DILocation(line: 485, column: 31, scope: !4305)
!4327 = !DILocation(line: 485, column: 34, scope: !4305)
!4328 = !DILocation(line: 485, column: 37, scope: !4305)
!4329 = !DILocation(line: 485, column: 48, scope: !4305)
!4330 = !DILocation(line: 485, column: 51, scope: !4305)
!4331 = !DILocation(line: 485, column: 54, scope: !4305)
!4332 = !DILocation(line: 484, column: 19, scope: !4305)
!4333 = !DILocation(line: 487, column: 9, scope: !4305)
!4334 = !DILocation(line: 487, column: 12, scope: !4305)
!4335 = !DILocation(line: 487, column: 15, scope: !4305)
!4336 = !DILocation(line: 487, column: 24, scope: !4305)
!4337 = !DILocation(line: 487, column: 27, scope: !4305)
!4338 = !DILocation(line: 487, column: 30, scope: !4305)
!4339 = !DILocation(line: 487, column: 34, scope: !4305)
!4340 = !DILocation(line: 488, column: 24, scope: !4305)
!4341 = !DILocation(line: 488, column: 27, scope: !4305)
!4342 = !DILocation(line: 488, column: 30, scope: !4305)
!4343 = !DILocation(line: 488, column: 34, scope: !4305)
!4344 = !DILocation(line: 488, column: 48, scope: !4305)
!4345 = !DILocation(line: 488, column: 51, scope: !4305)
!4346 = !DILocation(line: 488, column: 54, scope: !4305)
!4347 = !DILocation(line: 488, column: 58, scope: !4305)
!4348 = !DILocation(line: 489, column: 24, scope: !4305)
!4349 = !DILocation(line: 489, column: 29, scope: !4305)
!4350 = !DILocation(line: 489, column: 43, scope: !4305)
!4351 = !DILocation(line: 489, column: 46, scope: !4305)
!4352 = !DILocation(line: 489, column: 49, scope: !4305)
!4353 = !DILocation(line: 492, column: 13, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 492, column: 13)
!4355 = !DILocation(line: 492, column: 19, scope: !4354)
!4356 = !DILocation(line: 492, column: 17, scope: !4354)
!4357 = !DILocation(line: 492, column: 13, scope: !4305)
!4358 = !DILocation(line: 494, column: 13, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 493, column: 9)
!4360 = !DILocation(line: 494, column: 16, scope: !4359)
!4361 = !DILocation(line: 494, column: 19, scope: !4359)
!4362 = !DILocation(line: 494, column: 30, scope: !4359)
!4363 = !DILocation(line: 494, column: 33, scope: !4359)
!4364 = !DILocation(line: 494, column: 36, scope: !4359)
!4365 = !DILocation(line: 494, column: 40, scope: !4359)
!4366 = !DILocation(line: 495, column: 30, scope: !4359)
!4367 = !DILocation(line: 495, column: 33, scope: !4359)
!4368 = !DILocation(line: 495, column: 36, scope: !4359)
!4369 = !DILocation(line: 495, column: 40, scope: !4359)
!4370 = !DILocation(line: 495, column: 57, scope: !4359)
!4371 = !DILocation(line: 495, column: 60, scope: !4359)
!4372 = !DILocation(line: 495, column: 63, scope: !4359)
!4373 = !DILocation(line: 495, column: 67, scope: !4359)
!4374 = !DILocation(line: 496, column: 30, scope: !4359)
!4375 = !DILocation(line: 496, column: 35, scope: !4359)
!4376 = !DILocation(line: 497, column: 13, scope: !4359)
!4377 = !DILocation(line: 497, column: 16, scope: !4359)
!4378 = !DILocation(line: 497, column: 19, scope: !4359)
!4379 = !DILocation(line: 497, column: 30, scope: !4359)
!4380 = !DILocation(line: 497, column: 33, scope: !4359)
!4381 = !DILocation(line: 497, column: 36, scope: !4359)
!4382 = !DILocation(line: 497, column: 40, scope: !4359)
!4383 = !DILocation(line: 498, column: 30, scope: !4359)
!4384 = !DILocation(line: 498, column: 33, scope: !4359)
!4385 = !DILocation(line: 498, column: 36, scope: !4359)
!4386 = !DILocation(line: 498, column: 40, scope: !4359)
!4387 = !DILocation(line: 498, column: 57, scope: !4359)
!4388 = !DILocation(line: 498, column: 60, scope: !4359)
!4389 = !DILocation(line: 498, column: 63, scope: !4359)
!4390 = !DILocation(line: 498, column: 67, scope: !4359)
!4391 = !DILocation(line: 499, column: 30, scope: !4359)
!4392 = !DILocation(line: 499, column: 35, scope: !4359)
!4393 = !DILocation(line: 500, column: 9, scope: !4359)
!4394 = !DILocation(line: 503, column: 13, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 502, column: 9)
!4396 = !DILocation(line: 503, column: 16, scope: !4395)
!4397 = !DILocation(line: 503, column: 19, scope: !4395)
!4398 = !DILocation(line: 503, column: 36, scope: !4395)
!4399 = !DILocation(line: 503, column: 39, scope: !4395)
!4400 = !DILocation(line: 503, column: 42, scope: !4395)
!4401 = !DILocation(line: 503, column: 46, scope: !4395)
!4402 = !DILocation(line: 503, column: 70, scope: !4395)
!4403 = !DILocation(line: 503, column: 73, scope: !4395)
!4404 = !DILocation(line: 503, column: 76, scope: !4395)
!4405 = !DILocation(line: 503, column: 80, scope: !4395)
!4406 = !DILocation(line: 503, column: 97, scope: !4395)
!4407 = !DILocation(line: 503, column: 100, scope: !4395)
!4408 = !DILocation(line: 503, column: 103, scope: !4395)
!4409 = !DILocation(line: 503, column: 107, scope: !4395)
!4410 = !DILocation(line: 504, column: 13, scope: !4395)
!4411 = !DILocation(line: 504, column: 16, scope: !4395)
!4412 = !DILocation(line: 504, column: 19, scope: !4395)
!4413 = !DILocation(line: 504, column: 36, scope: !4395)
!4414 = !DILocation(line: 504, column: 39, scope: !4395)
!4415 = !DILocation(line: 504, column: 42, scope: !4395)
!4416 = !DILocation(line: 504, column: 46, scope: !4395)
!4417 = !DILocation(line: 504, column: 70, scope: !4395)
!4418 = !DILocation(line: 504, column: 73, scope: !4395)
!4419 = !DILocation(line: 504, column: 76, scope: !4395)
!4420 = !DILocation(line: 504, column: 80, scope: !4395)
!4421 = !DILocation(line: 504, column: 97, scope: !4395)
!4422 = !DILocation(line: 504, column: 100, scope: !4395)
!4423 = !DILocation(line: 504, column: 103, scope: !4395)
!4424 = !DILocation(line: 504, column: 107, scope: !4395)
!4425 = !DILocation(line: 507, column: 13, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 507, column: 13)
!4427 = !DILocation(line: 507, column: 16, scope: !4426)
!4428 = !DILocation(line: 507, column: 19, scope: !4426)
!4429 = !DILocation(line: 507, column: 32, scope: !4426)
!4430 = !DILocation(line: 507, column: 13, scope: !4305)
!4431 = !DILocation(line: 508, column: 13, scope: !4426)
!4432 = !DILocation(line: 508, column: 16, scope: !4426)
!4433 = !DILocation(line: 508, column: 19, scope: !4426)
!4434 = !DILocation(line: 508, column: 32, scope: !4426)
!4435 = !DILocation(line: 508, column: 48, scope: !4426)
!4436 = !DILocation(line: 508, column: 51, scope: !4426)
!4437 = !DILocation(line: 508, column: 54, scope: !4426)
!4438 = !DILocation(line: 508, column: 58, scope: !4426)
!4439 = !DILocation(line: 509, column: 48, scope: !4426)
!4440 = !DILocation(line: 509, column: 51, scope: !4426)
!4441 = !DILocation(line: 509, column: 54, scope: !4426)
!4442 = !DILocation(line: 509, column: 58, scope: !4426)
!4443 = !DILocation(line: 510, column: 49, scope: !4426)
!4444 = !DILocation(line: 510, column: 52, scope: !4426)
!4445 = !DILocation(line: 510, column: 55, scope: !4426)
!4446 = !DILocation(line: 512, column: 13, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 512, column: 13)
!4448 = !DILocation(line: 512, column: 16, scope: !4447)
!4449 = !DILocation(line: 512, column: 19, scope: !4447)
!4450 = !DILocation(line: 512, column: 32, scope: !4447)
!4451 = !DILocation(line: 512, column: 13, scope: !4305)
!4452 = !DILocation(line: 513, column: 13, scope: !4447)
!4453 = !DILocation(line: 513, column: 16, scope: !4447)
!4454 = !DILocation(line: 513, column: 19, scope: !4447)
!4455 = !DILocation(line: 513, column: 32, scope: !4447)
!4456 = !DILocation(line: 513, column: 48, scope: !4447)
!4457 = !DILocation(line: 513, column: 51, scope: !4447)
!4458 = !DILocation(line: 513, column: 54, scope: !4447)
!4459 = !DILocation(line: 513, column: 58, scope: !4447)
!4460 = !DILocation(line: 514, column: 48, scope: !4447)
!4461 = !DILocation(line: 514, column: 51, scope: !4447)
!4462 = !DILocation(line: 514, column: 54, scope: !4447)
!4463 = !DILocation(line: 514, column: 58, scope: !4447)
!4464 = !DILocation(line: 515, column: 49, scope: !4447)
!4465 = !DILocation(line: 515, column: 52, scope: !4447)
!4466 = !DILocation(line: 515, column: 55, scope: !4447)
!4467 = !DILocation(line: 516, column: 5, scope: !4305)
!4468 = !DILocation(line: 518, column: 34, scope: !4296)
!4469 = !DILocation(line: 518, column: 5, scope: !4296)
!4470 = !DILocation(line: 519, column: 1, scope: !4296)
!4471 = distinct !DISubprogram(name: "x264_macroblock_encode_skip", scope: !3, file: !3, line: 460, type: !3130, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!4472 = !DILocalVariable(name: "h", arg: 1, scope: !4471, file: !3, line: 460, type: !228)
!4473 = !DILocation(line: 460, column: 50, scope: !4471)
!4474 = !DILocation(line: 462, column: 5, scope: !4471)
!4475 = !DILocation(line: 462, column: 59, scope: !4471)
!4476 = !DILocation(line: 463, column: 5, scope: !4471)
!4477 = !DILocation(line: 463, column: 59, scope: !4471)
!4478 = !DILocation(line: 464, column: 5, scope: !4471)
!4479 = !DILocation(line: 464, column: 59, scope: !4471)
!4480 = !DILocation(line: 465, column: 5, scope: !4471)
!4481 = !DILocation(line: 465, column: 59, scope: !4471)
!4482 = !DILocalVariable(name: "i", scope: !4483, file: !3, line: 466, type: !195)
!4483 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 466, column: 5)
!4484 = !DILocation(line: 466, column: 14, scope: !4483)
!4485 = !DILocation(line: 466, column: 10, scope: !4483)
!4486 = !DILocation(line: 466, column: 22, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 466, column: 5)
!4488 = !DILocation(line: 466, column: 24, scope: !4487)
!4489 = !DILocation(line: 466, column: 5, scope: !4483)
!4490 = !DILocation(line: 467, column: 9, scope: !4487)
!4491 = !DILocation(line: 467, column: 12, scope: !4487)
!4492 = !DILocation(line: 467, column: 15, scope: !4487)
!4493 = !DILocation(line: 467, column: 21, scope: !4487)
!4494 = !DILocation(line: 467, column: 47, scope: !4487)
!4495 = !DILocation(line: 467, column: 36, scope: !4487)
!4496 = !DILocation(line: 467, column: 51, scope: !4487)
!4497 = !DILocation(line: 466, column: 31, scope: !4487)
!4498 = !DILocation(line: 466, column: 5, scope: !4487)
!4499 = distinct !{!4499, !4489, !4500}
!4500 = !DILocation(line: 467, column: 53, scope: !4483)
!4501 = !DILocation(line: 468, column: 5, scope: !4471)
!4502 = !DILocation(line: 468, column: 8, scope: !4471)
!4503 = !DILocation(line: 468, column: 11, scope: !4471)
!4504 = !DILocation(line: 468, column: 22, scope: !4471)
!4505 = !DILocation(line: 469, column: 5, scope: !4471)
!4506 = !DILocation(line: 469, column: 8, scope: !4471)
!4507 = !DILocation(line: 469, column: 11, scope: !4471)
!4508 = !DILocation(line: 469, column: 24, scope: !4471)
!4509 = !DILocation(line: 470, column: 5, scope: !4471)
!4510 = !DILocation(line: 470, column: 8, scope: !4471)
!4511 = !DILocation(line: 470, column: 11, scope: !4471)
!4512 = !DILocation(line: 470, column: 15, scope: !4471)
!4513 = !DILocation(line: 470, column: 18, scope: !4471)
!4514 = !DILocation(line: 470, column: 21, scope: !4471)
!4515 = !DILocation(line: 470, column: 30, scope: !4471)
!4516 = !DILocation(line: 471, column: 1, scope: !4471)
!4517 = distinct !DISubprogram(name: "x264_mb_encode_i16x16", scope: !3, file: !3, line: 184, type: !2844, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!4518 = !DILocalVariable(name: "h", arg: 1, scope: !4517, file: !3, line: 184, type: !228)
!4519 = !DILocation(line: 184, column: 44, scope: !4517)
!4520 = !DILocalVariable(name: "i_qp", arg: 2, scope: !4517, file: !3, line: 184, type: !195)
!4521 = !DILocation(line: 184, column: 51, scope: !4517)
!4522 = !DILocalVariable(name: "p_src", scope: !4517, file: !3, line: 186, type: !420)
!4523 = !DILocation(line: 186, column: 15, scope: !4517)
!4524 = !DILocation(line: 186, column: 23, scope: !4517)
!4525 = !DILocation(line: 186, column: 26, scope: !4517)
!4526 = !DILocation(line: 186, column: 29, scope: !4517)
!4527 = !DILocation(line: 186, column: 33, scope: !4517)
!4528 = !DILocalVariable(name: "p_dst", scope: !4517, file: !3, line: 187, type: !420)
!4529 = !DILocation(line: 187, column: 15, scope: !4517)
!4530 = !DILocation(line: 187, column: 23, scope: !4517)
!4531 = !DILocation(line: 187, column: 26, scope: !4517)
!4532 = !DILocation(line: 187, column: 29, scope: !4517)
!4533 = !DILocation(line: 187, column: 33, scope: !4517)
!4534 = !DILocalVariable(name: "dct4x4", scope: !4517, file: !3, line: 189, type: !996, align: 128)
!4535 = !DILocation(line: 189, column: 5, scope: !4517)
!4536 = !DILocalVariable(name: "dct_dc4x4", scope: !4517, file: !3, line: 190, type: !875, align: 128)
!4537 = !DILocation(line: 190, column: 5, scope: !4517)
!4538 = !DILocalVariable(name: "nz", scope: !4517, file: !3, line: 192, type: !195)
!4539 = !DILocation(line: 192, column: 9, scope: !4517)
!4540 = !DILocalVariable(name: "decimate_score", scope: !4517, file: !3, line: 193, type: !195)
!4541 = !DILocation(line: 193, column: 9, scope: !4517)
!4542 = !DILocation(line: 193, column: 26, scope: !4517)
!4543 = !DILocation(line: 193, column: 29, scope: !4517)
!4544 = !DILocation(line: 193, column: 32, scope: !4517)
!4545 = !DILocation(line: 195, column: 9, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 195, column: 9)
!4547 = !DILocation(line: 195, column: 12, scope: !4546)
!4548 = !DILocation(line: 195, column: 15, scope: !4546)
!4549 = !DILocation(line: 195, column: 9, scope: !4517)
!4550 = !DILocalVariable(name: "i", scope: !4551, file: !3, line: 197, type: !195)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 197, column: 9)
!4552 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 196, column: 5)
!4553 = !DILocation(line: 197, column: 18, scope: !4551)
!4554 = !DILocation(line: 197, column: 14, scope: !4551)
!4555 = !DILocation(line: 197, column: 25, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 197, column: 9)
!4557 = !DILocation(line: 197, column: 27, scope: !4556)
!4558 = !DILocation(line: 197, column: 9, scope: !4551)
!4559 = !DILocalVariable(name: "oe", scope: !4560, file: !3, line: 199, type: !195)
!4560 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 198, column: 9)
!4561 = !DILocation(line: 199, column: 17, scope: !4560)
!4562 = !DILocation(line: 199, column: 40, scope: !4560)
!4563 = !DILocation(line: 199, column: 22, scope: !4560)
!4564 = !DILocalVariable(name: "od", scope: !4560, file: !3, line: 200, type: !195)
!4565 = !DILocation(line: 200, column: 17, scope: !4560)
!4566 = !DILocation(line: 200, column: 40, scope: !4560)
!4567 = !DILocation(line: 200, column: 22, scope: !4560)
!4568 = !DILocation(line: 201, column: 18, scope: !4560)
!4569 = !DILocation(line: 201, column: 21, scope: !4560)
!4570 = !DILocation(line: 201, column: 29, scope: !4560)
!4571 = !DILocation(line: 201, column: 40, scope: !4560)
!4572 = !DILocation(line: 201, column: 43, scope: !4560)
!4573 = !DILocation(line: 201, column: 47, scope: !4560)
!4574 = !DILocation(line: 201, column: 55, scope: !4560)
!4575 = !DILocation(line: 201, column: 59, scope: !4560)
!4576 = !DILocation(line: 201, column: 65, scope: !4560)
!4577 = !DILocation(line: 201, column: 64, scope: !4560)
!4578 = !DILocation(line: 201, column: 69, scope: !4560)
!4579 = !DILocation(line: 201, column: 75, scope: !4560)
!4580 = !DILocation(line: 201, column: 74, scope: !4560)
!4581 = !DILocation(line: 201, column: 106, scope: !4560)
!4582 = !DILocation(line: 201, column: 90, scope: !4560)
!4583 = !DILocation(line: 201, column: 80, scope: !4560)
!4584 = !DILocation(line: 201, column: 16, scope: !4560)
!4585 = !DILocation(line: 202, column: 57, scope: !4560)
!4586 = !DILocation(line: 202, column: 13, scope: !4560)
!4587 = !DILocation(line: 202, column: 16, scope: !4560)
!4588 = !DILocation(line: 202, column: 19, scope: !4560)
!4589 = !DILocation(line: 202, column: 25, scope: !4560)
!4590 = !DILocation(line: 202, column: 51, scope: !4560)
!4591 = !DILocation(line: 202, column: 40, scope: !4560)
!4592 = !DILocation(line: 202, column: 55, scope: !4560)
!4593 = !DILocation(line: 203, column: 33, scope: !4560)
!4594 = !DILocation(line: 203, column: 13, scope: !4560)
!4595 = !DILocation(line: 203, column: 16, scope: !4560)
!4596 = !DILocation(line: 203, column: 19, scope: !4560)
!4597 = !DILocation(line: 203, column: 30, scope: !4560)
!4598 = !DILocation(line: 204, column: 9, scope: !4560)
!4599 = !DILocation(line: 197, column: 34, scope: !4556)
!4600 = !DILocation(line: 197, column: 9, scope: !4556)
!4601 = distinct !{!4601, !4558, !4602}
!4602 = !DILocation(line: 204, column: 9, scope: !4551)
!4603 = !DILocation(line: 205, column: 9, scope: !4552)
!4604 = !DILocation(line: 205, column: 12, scope: !4552)
!4605 = !DILocation(line: 205, column: 15, scope: !4552)
!4606 = !DILocation(line: 205, column: 26, scope: !4552)
!4607 = !DILocation(line: 206, column: 54, scope: !4552)
!4608 = !DILocation(line: 206, column: 9, scope: !4552)
!4609 = !DILocation(line: 206, column: 12, scope: !4552)
!4610 = !DILocation(line: 206, column: 15, scope: !4552)
!4611 = !DILocation(line: 206, column: 21, scope: !4552)
!4612 = !DILocation(line: 206, column: 36, scope: !4552)
!4613 = !DILocation(line: 206, column: 52, scope: !4552)
!4614 = !DILocation(line: 207, column: 9, scope: !4552)
!4615 = !DILocation(line: 207, column: 12, scope: !4552)
!4616 = !DILocation(line: 207, column: 20, scope: !4552)
!4617 = !DILocation(line: 207, column: 30, scope: !4552)
!4618 = !DILocation(line: 207, column: 33, scope: !4552)
!4619 = !DILocation(line: 207, column: 37, scope: !4552)
!4620 = !DILocation(line: 207, column: 51, scope: !4552)
!4621 = !DILocation(line: 208, column: 9, scope: !4552)
!4622 = !DILocation(line: 211, column: 5, scope: !4517)
!4623 = !DILocation(line: 211, column: 8, scope: !4517)
!4624 = !DILocation(line: 211, column: 13, scope: !4517)
!4625 = !DILocation(line: 211, column: 27, scope: !4517)
!4626 = !DILocation(line: 211, column: 35, scope: !4517)
!4627 = !DILocation(line: 211, column: 42, scope: !4517)
!4628 = !DILocalVariable(name: "i", scope: !4629, file: !3, line: 213, type: !195)
!4629 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 213, column: 5)
!4630 = !DILocation(line: 213, column: 14, scope: !4629)
!4631 = !DILocation(line: 213, column: 10, scope: !4629)
!4632 = !DILocation(line: 213, column: 21, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4629, file: !3, line: 213, column: 5)
!4634 = !DILocation(line: 213, column: 23, scope: !4633)
!4635 = !DILocation(line: 213, column: 5, scope: !4629)
!4636 = !DILocation(line: 216, column: 48, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 214, column: 5)
!4638 = !DILocation(line: 216, column: 41, scope: !4637)
!4639 = !DILocation(line: 216, column: 35, scope: !4637)
!4640 = !DILocation(line: 216, column: 19, scope: !4637)
!4641 = !DILocation(line: 216, column: 9, scope: !4637)
!4642 = !DILocation(line: 216, column: 39, scope: !4637)
!4643 = !DILocation(line: 217, column: 16, scope: !4637)
!4644 = !DILocation(line: 217, column: 9, scope: !4637)
!4645 = !DILocation(line: 217, column: 22, scope: !4637)
!4646 = !DILocation(line: 220, column: 30, scope: !4637)
!4647 = !DILocation(line: 220, column: 40, scope: !4637)
!4648 = !DILocation(line: 220, column: 33, scope: !4637)
!4649 = !DILocation(line: 220, column: 44, scope: !4637)
!4650 = !DILocation(line: 220, column: 66, scope: !4637)
!4651 = !DILocation(line: 220, column: 14, scope: !4637)
!4652 = !DILocation(line: 220, column: 12, scope: !4637)
!4653 = !DILocation(line: 221, column: 53, scope: !4637)
!4654 = !DILocation(line: 221, column: 9, scope: !4637)
!4655 = !DILocation(line: 221, column: 12, scope: !4637)
!4656 = !DILocation(line: 221, column: 15, scope: !4637)
!4657 = !DILocation(line: 221, column: 21, scope: !4637)
!4658 = !DILocation(line: 221, column: 47, scope: !4637)
!4659 = !DILocation(line: 221, column: 36, scope: !4637)
!4660 = !DILocation(line: 221, column: 51, scope: !4637)
!4661 = !DILocation(line: 222, column: 13, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 222, column: 13)
!4663 = !DILocation(line: 222, column: 13, scope: !4637)
!4664 = !DILocation(line: 224, column: 13, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 223, column: 9)
!4666 = !DILocation(line: 224, column: 16, scope: !4665)
!4667 = !DILocation(line: 224, column: 24, scope: !4665)
!4668 = !DILocation(line: 224, column: 34, scope: !4665)
!4669 = !DILocation(line: 224, column: 37, scope: !4665)
!4670 = !DILocation(line: 224, column: 41, scope: !4665)
!4671 = !DILocation(line: 224, column: 49, scope: !4665)
!4672 = !DILocation(line: 224, column: 60, scope: !4665)
!4673 = !DILocation(line: 224, column: 53, scope: !4665)
!4674 = !DILocation(line: 225, column: 13, scope: !4665)
!4675 = !DILocation(line: 225, column: 16, scope: !4665)
!4676 = !DILocation(line: 225, column: 23, scope: !4665)
!4677 = !DILocation(line: 225, column: 43, scope: !4665)
!4678 = !DILocation(line: 225, column: 36, scope: !4665)
!4679 = !DILocation(line: 225, column: 47, scope: !4665)
!4680 = !DILocation(line: 225, column: 50, scope: !4665)
!4681 = !DILocation(line: 225, column: 72, scope: !4665)
!4682 = !DILocation(line: 226, column: 17, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 226, column: 17)
!4684 = !DILocation(line: 226, column: 32, scope: !4683)
!4685 = !DILocation(line: 226, column: 17, scope: !4665)
!4686 = !DILocation(line: 226, column: 56, scope: !4683)
!4687 = !DILocation(line: 226, column: 59, scope: !4683)
!4688 = !DILocation(line: 226, column: 66, scope: !4683)
!4689 = !DILocation(line: 226, column: 84, scope: !4683)
!4690 = !DILocation(line: 226, column: 87, scope: !4683)
!4691 = !DILocation(line: 226, column: 91, scope: !4683)
!4692 = !DILocation(line: 226, column: 99, scope: !4683)
!4693 = !DILocation(line: 226, column: 53, scope: !4683)
!4694 = !DILocation(line: 226, column: 38, scope: !4683)
!4695 = !DILocation(line: 227, column: 13, scope: !4665)
!4696 = !DILocation(line: 227, column: 16, scope: !4665)
!4697 = !DILocation(line: 227, column: 19, scope: !4665)
!4698 = !DILocation(line: 227, column: 30, scope: !4665)
!4699 = !DILocation(line: 228, column: 9, scope: !4665)
!4700 = !DILocation(line: 229, column: 5, scope: !4637)
!4701 = !DILocation(line: 213, column: 30, scope: !4633)
!4702 = !DILocation(line: 213, column: 5, scope: !4633)
!4703 = distinct !{!4703, !4635, !4704}
!4704 = !DILocation(line: 229, column: 5, scope: !4629)
!4705 = !DILocation(line: 233, column: 9, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 233, column: 9)
!4707 = !DILocation(line: 233, column: 24, scope: !4706)
!4708 = !DILocation(line: 233, column: 9, scope: !4517)
!4709 = !DILocation(line: 235, column: 9, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 234, column: 5)
!4711 = !DILocation(line: 235, column: 12, scope: !4710)
!4712 = !DILocation(line: 235, column: 15, scope: !4710)
!4713 = !DILocation(line: 235, column: 26, scope: !4710)
!4714 = !DILocation(line: 236, column: 9, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 236, column: 9)
!4716 = !DILocation(line: 237, column: 5, scope: !4710)
!4717 = !DILocation(line: 239, column: 5, scope: !4517)
!4718 = !DILocation(line: 239, column: 8, scope: !4517)
!4719 = !DILocation(line: 239, column: 13, scope: !4517)
!4720 = !DILocation(line: 239, column: 23, scope: !4517)
!4721 = !DILocation(line: 240, column: 9, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 240, column: 9)
!4723 = !DILocation(line: 240, column: 12, scope: !4722)
!4724 = !DILocation(line: 240, column: 15, scope: !4722)
!4725 = !DILocation(line: 240, column: 9, scope: !4517)
!4726 = !DILocation(line: 241, column: 37, scope: !4722)
!4727 = !DILocation(line: 241, column: 40, scope: !4722)
!4728 = !DILocation(line: 241, column: 60, scope: !4722)
!4729 = !DILocation(line: 241, column: 14, scope: !4722)
!4730 = !DILocation(line: 241, column: 12, scope: !4722)
!4731 = !DILocation(line: 241, column: 9, scope: !4722)
!4732 = !DILocation(line: 243, column: 14, scope: !4722)
!4733 = !DILocation(line: 243, column: 17, scope: !4722)
!4734 = !DILocation(line: 243, column: 24, scope: !4722)
!4735 = !DILocation(line: 243, column: 38, scope: !4722)
!4736 = !DILocation(line: 243, column: 49, scope: !4722)
!4737 = !DILocation(line: 243, column: 52, scope: !4722)
!4738 = !DILocation(line: 243, column: 71, scope: !4722)
!4739 = !DILocation(line: 243, column: 79, scope: !4722)
!4740 = !DILocation(line: 243, column: 84, scope: !4722)
!4741 = !DILocation(line: 243, column: 87, scope: !4722)
!4742 = !DILocation(line: 243, column: 108, scope: !4722)
!4743 = !DILocation(line: 243, column: 116, scope: !4722)
!4744 = !DILocation(line: 243, column: 12, scope: !4722)
!4745 = !DILocation(line: 245, column: 50, scope: !4517)
!4746 = !DILocation(line: 245, column: 5, scope: !4517)
!4747 = !DILocation(line: 245, column: 8, scope: !4517)
!4748 = !DILocation(line: 245, column: 11, scope: !4517)
!4749 = !DILocation(line: 245, column: 17, scope: !4517)
!4750 = !DILocation(line: 245, column: 32, scope: !4517)
!4751 = !DILocation(line: 245, column: 48, scope: !4517)
!4752 = !DILocation(line: 246, column: 9, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 246, column: 9)
!4754 = !DILocation(line: 246, column: 9, scope: !4517)
!4755 = !DILocation(line: 248, column: 9, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 247, column: 5)
!4757 = !DILocation(line: 248, column: 12, scope: !4756)
!4758 = !DILocation(line: 248, column: 20, scope: !4756)
!4759 = !DILocation(line: 248, column: 30, scope: !4756)
!4760 = !DILocation(line: 248, column: 33, scope: !4756)
!4761 = !DILocation(line: 248, column: 37, scope: !4756)
!4762 = !DILocation(line: 248, column: 51, scope: !4756)
!4763 = !DILocation(line: 251, column: 9, scope: !4756)
!4764 = !DILocation(line: 251, column: 12, scope: !4756)
!4765 = !DILocation(line: 251, column: 17, scope: !4756)
!4766 = !DILocation(line: 251, column: 28, scope: !4756)
!4767 = !DILocation(line: 252, column: 9, scope: !4756)
!4768 = !DILocation(line: 252, column: 12, scope: !4756)
!4769 = !DILocation(line: 252, column: 19, scope: !4756)
!4770 = !DILocation(line: 252, column: 35, scope: !4756)
!4771 = !DILocation(line: 252, column: 46, scope: !4756)
!4772 = !DILocation(line: 252, column: 49, scope: !4756)
!4773 = !DILocation(line: 252, column: 71, scope: !4756)
!4774 = !DILocation(line: 253, column: 13, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 253, column: 13)
!4776 = !DILocation(line: 253, column: 16, scope: !4775)
!4777 = !DILocation(line: 253, column: 19, scope: !4775)
!4778 = !DILocation(line: 253, column: 13, scope: !4756)
!4779 = !DILocalVariable(name: "i", scope: !4780, file: !3, line: 254, type: !195)
!4780 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 254, column: 13)
!4781 = !DILocation(line: 254, column: 22, scope: !4780)
!4782 = !DILocation(line: 254, column: 18, scope: !4780)
!4783 = !DILocation(line: 254, column: 29, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 254, column: 13)
!4785 = !DILocation(line: 254, column: 31, scope: !4784)
!4786 = !DILocation(line: 254, column: 13, scope: !4780)
!4787 = !DILocation(line: 255, column: 58, scope: !4784)
!4788 = !DILocation(line: 255, column: 42, scope: !4784)
!4789 = !DILocation(line: 255, column: 32, scope: !4784)
!4790 = !DILocation(line: 255, column: 24, scope: !4784)
!4791 = !DILocation(line: 255, column: 17, scope: !4784)
!4792 = !DILocation(line: 255, column: 30, scope: !4784)
!4793 = !DILocation(line: 254, column: 38, scope: !4784)
!4794 = !DILocation(line: 254, column: 13, scope: !4784)
!4795 = distinct !{!4795, !4786, !4796}
!4796 = !DILocation(line: 255, column: 60, scope: !4780)
!4797 = !DILocation(line: 256, column: 5, scope: !4756)
!4798 = !DILocation(line: 259, column: 9, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 259, column: 9)
!4800 = !DILocation(line: 259, column: 12, scope: !4799)
!4801 = !DILocation(line: 259, column: 15, scope: !4799)
!4802 = !DILocation(line: 259, column: 9, scope: !4517)
!4803 = !DILocation(line: 260, column: 9, scope: !4799)
!4804 = !DILocation(line: 260, column: 12, scope: !4799)
!4805 = !DILocation(line: 260, column: 17, scope: !4799)
!4806 = !DILocation(line: 260, column: 32, scope: !4799)
!4807 = !DILocation(line: 260, column: 39, scope: !4799)
!4808 = !DILocation(line: 261, column: 14, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 261, column: 14)
!4810 = !DILocation(line: 261, column: 14, scope: !4799)
!4811 = !DILocation(line: 262, column: 9, scope: !4809)
!4812 = !DILocation(line: 262, column: 12, scope: !4809)
!4813 = !DILocation(line: 262, column: 17, scope: !4809)
!4814 = !DILocation(line: 262, column: 35, scope: !4809)
!4815 = !DILocation(line: 262, column: 42, scope: !4809)
!4816 = !DILocation(line: 263, column: 1, scope: !4517)
!4817 = distinct !DISubprogram(name: "x264_macroblock_probe_skip", scope: !3, file: !3, line: 910, type: !4818, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{!195, !228, !195}
!4820 = !DILocalVariable(name: "h", arg: 1, scope: !4817, file: !3, line: 910, type: !228)
!4821 = !DILocation(line: 910, column: 41, scope: !4817)
!4822 = !DILocalVariable(name: "b_bidir", arg: 2, scope: !4817, file: !3, line: 910, type: !195)
!4823 = !DILocation(line: 910, column: 48, scope: !4817)
!4824 = !DILocalVariable(name: "dct4x4", scope: !4817, file: !3, line: 912, type: !2111, align: 128)
!4825 = !DILocation(line: 912, column: 5, scope: !4817)
!4826 = !DILocalVariable(name: "dct2x2", scope: !4817, file: !3, line: 913, type: !1066, align: 128)
!4827 = !DILocation(line: 913, column: 5, scope: !4817)
!4828 = !DILocalVariable(name: "dctscan", scope: !4817, file: !3, line: 914, type: !875, align: 128)
!4829 = !DILocation(line: 914, column: 5, scope: !4817)
!4830 = !DILocalVariable(name: "mvp", scope: !4817, file: !3, line: 915, type: !767, align: 32)
!4831 = !DILocation(line: 915, column: 5, scope: !4817)
!4832 = !DILocalVariable(name: "i_qp", scope: !4817, file: !3, line: 917, type: !195)
!4833 = !DILocation(line: 917, column: 9, scope: !4817)
!4834 = !DILocation(line: 917, column: 16, scope: !4817)
!4835 = !DILocation(line: 917, column: 19, scope: !4817)
!4836 = !DILocation(line: 917, column: 22, scope: !4817)
!4837 = !DILocalVariable(name: "thresh", scope: !4817, file: !3, line: 918, type: !195)
!4838 = !DILocation(line: 918, column: 9, scope: !4817)
!4839 = !DILocalVariable(name: "ssd", scope: !4817, file: !3, line: 918, type: !195)
!4840 = !DILocation(line: 918, column: 17, scope: !4817)
!4841 = !DILocation(line: 920, column: 10, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 920, column: 9)
!4843 = !DILocation(line: 920, column: 9, scope: !4817)
!4844 = !DILocation(line: 923, column: 30, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 921, column: 5)
!4846 = !DILocation(line: 923, column: 33, scope: !4845)
!4847 = !DILocation(line: 923, column: 36, scope: !4845)
!4848 = !DILocation(line: 923, column: 42, scope: !4845)
!4849 = !DILocation(line: 923, column: 55, scope: !4845)
!4850 = !DILocation(line: 923, column: 58, scope: !4845)
!4851 = !DILocation(line: 923, column: 61, scope: !4845)
!4852 = !DILocation(line: 923, column: 72, scope: !4845)
!4853 = !DILocation(line: 923, column: 75, scope: !4845)
!4854 = !DILocation(line: 923, column: 78, scope: !4845)
!4855 = !DILocation(line: 923, column: 18, scope: !4845)
!4856 = !DILocation(line: 923, column: 9, scope: !4845)
!4857 = !DILocation(line: 923, column: 16, scope: !4845)
!4858 = !DILocation(line: 924, column: 30, scope: !4845)
!4859 = !DILocation(line: 924, column: 33, scope: !4845)
!4860 = !DILocation(line: 924, column: 36, scope: !4845)
!4861 = !DILocation(line: 924, column: 42, scope: !4845)
!4862 = !DILocation(line: 924, column: 55, scope: !4845)
!4863 = !DILocation(line: 924, column: 58, scope: !4845)
!4864 = !DILocation(line: 924, column: 61, scope: !4845)
!4865 = !DILocation(line: 924, column: 72, scope: !4845)
!4866 = !DILocation(line: 924, column: 75, scope: !4845)
!4867 = !DILocation(line: 924, column: 78, scope: !4845)
!4868 = !DILocation(line: 924, column: 18, scope: !4845)
!4869 = !DILocation(line: 924, column: 9, scope: !4845)
!4870 = !DILocation(line: 924, column: 16, scope: !4845)
!4871 = !DILocation(line: 927, column: 9, scope: !4845)
!4872 = !DILocation(line: 927, column: 12, scope: !4845)
!4873 = !DILocation(line: 927, column: 15, scope: !4845)
!4874 = !DILocation(line: 927, column: 24, scope: !4845)
!4875 = !DILocation(line: 927, column: 27, scope: !4845)
!4876 = !DILocation(line: 927, column: 30, scope: !4845)
!4877 = !DILocation(line: 927, column: 34, scope: !4845)
!4878 = !DILocation(line: 928, column: 24, scope: !4845)
!4879 = !DILocation(line: 928, column: 27, scope: !4845)
!4880 = !DILocation(line: 928, column: 30, scope: !4845)
!4881 = !DILocation(line: 928, column: 34, scope: !4845)
!4882 = !DILocation(line: 928, column: 48, scope: !4845)
!4883 = !DILocation(line: 928, column: 51, scope: !4845)
!4884 = !DILocation(line: 928, column: 54, scope: !4845)
!4885 = !DILocation(line: 928, column: 58, scope: !4845)
!4886 = !DILocation(line: 929, column: 24, scope: !4845)
!4887 = !DILocation(line: 929, column: 32, scope: !4845)
!4888 = !DILocation(line: 929, column: 49, scope: !4845)
!4889 = !DILocation(line: 929, column: 52, scope: !4845)
!4890 = !DILocation(line: 929, column: 55, scope: !4845)
!4891 = !DILocation(line: 930, column: 5, scope: !4845)
!4892 = !DILocalVariable(name: "i8x8", scope: !4893, file: !3, line: 932, type: !195)
!4893 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 932, column: 5)
!4894 = !DILocation(line: 932, column: 14, scope: !4893)
!4895 = !DILocalVariable(name: "i_decimate_mb", scope: !4893, file: !3, line: 932, type: !195)
!4896 = !DILocation(line: 932, column: 24, scope: !4893)
!4897 = !DILocation(line: 932, column: 10, scope: !4893)
!4898 = !DILocation(line: 932, column: 43, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 932, column: 5)
!4900 = !DILocation(line: 932, column: 48, scope: !4899)
!4901 = !DILocation(line: 932, column: 5, scope: !4893)
!4902 = !DILocalVariable(name: "fenc_offset", scope: !4903, file: !3, line: 934, type: !195)
!4903 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 933, column: 5)
!4904 = !DILocation(line: 934, column: 13, scope: !4903)
!4905 = !DILocation(line: 934, column: 28, scope: !4903)
!4906 = !DILocation(line: 934, column: 32, scope: !4903)
!4907 = !DILocation(line: 934, column: 36, scope: !4903)
!4908 = !DILocation(line: 934, column: 43, scope: !4903)
!4909 = !DILocation(line: 934, column: 47, scope: !4903)
!4910 = !DILocation(line: 934, column: 52, scope: !4903)
!4911 = !DILocation(line: 934, column: 66, scope: !4903)
!4912 = !DILocation(line: 934, column: 40, scope: !4903)
!4913 = !DILocalVariable(name: "fdec_offset", scope: !4903, file: !3, line: 935, type: !195)
!4914 = !DILocation(line: 935, column: 13, scope: !4903)
!4915 = !DILocation(line: 935, column: 28, scope: !4903)
!4916 = !DILocation(line: 935, column: 32, scope: !4903)
!4917 = !DILocation(line: 935, column: 36, scope: !4903)
!4918 = !DILocation(line: 935, column: 43, scope: !4903)
!4919 = !DILocation(line: 935, column: 47, scope: !4903)
!4920 = !DILocation(line: 935, column: 52, scope: !4903)
!4921 = !DILocation(line: 935, column: 66, scope: !4903)
!4922 = !DILocation(line: 935, column: 40, scope: !4903)
!4923 = !DILocation(line: 937, column: 9, scope: !4903)
!4924 = !DILocation(line: 937, column: 12, scope: !4903)
!4925 = !DILocation(line: 937, column: 17, scope: !4903)
!4926 = !DILocation(line: 937, column: 29, scope: !4903)
!4927 = !DILocation(line: 937, column: 37, scope: !4903)
!4928 = !DILocation(line: 937, column: 40, scope: !4903)
!4929 = !DILocation(line: 937, column: 43, scope: !4903)
!4930 = !DILocation(line: 937, column: 47, scope: !4903)
!4931 = !DILocation(line: 937, column: 59, scope: !4903)
!4932 = !DILocation(line: 937, column: 57, scope: !4903)
!4933 = !DILocation(line: 938, column: 37, scope: !4903)
!4934 = !DILocation(line: 938, column: 40, scope: !4903)
!4935 = !DILocation(line: 938, column: 43, scope: !4903)
!4936 = !DILocation(line: 938, column: 47, scope: !4903)
!4937 = !DILocation(line: 938, column: 59, scope: !4903)
!4938 = !DILocation(line: 938, column: 57, scope: !4903)
!4939 = !DILocalVariable(name: "i4x4", scope: !4940, file: !3, line: 940, type: !195)
!4940 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 940, column: 9)
!4941 = !DILocation(line: 940, column: 18, scope: !4940)
!4942 = !DILocation(line: 940, column: 14, scope: !4940)
!4943 = !DILocation(line: 940, column: 28, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 940, column: 9)
!4945 = !DILocation(line: 940, column: 33, scope: !4944)
!4946 = !DILocation(line: 940, column: 9, scope: !4940)
!4947 = !DILocation(line: 942, column: 18, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 942, column: 17)
!4949 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 941, column: 9)
!4950 = !DILocation(line: 942, column: 21, scope: !4948)
!4951 = !DILocation(line: 942, column: 28, scope: !4948)
!4952 = !DILocation(line: 942, column: 46, scope: !4948)
!4953 = !DILocation(line: 942, column: 39, scope: !4948)
!4954 = !DILocation(line: 942, column: 53, scope: !4948)
!4955 = !DILocation(line: 942, column: 56, scope: !4948)
!4956 = !DILocation(line: 942, column: 75, scope: !4948)
!4957 = !DILocation(line: 942, column: 82, scope: !4948)
!4958 = !DILocation(line: 942, column: 85, scope: !4948)
!4959 = !DILocation(line: 942, column: 106, scope: !4948)
!4960 = !DILocation(line: 942, column: 17, scope: !4949)
!4961 = !DILocation(line: 943, column: 17, scope: !4948)
!4962 = !DILocation(line: 944, column: 13, scope: !4949)
!4963 = !DILocation(line: 944, column: 16, scope: !4949)
!4964 = !DILocation(line: 944, column: 24, scope: !4949)
!4965 = !DILocation(line: 944, column: 34, scope: !4949)
!4966 = !DILocation(line: 944, column: 50, scope: !4949)
!4967 = !DILocation(line: 944, column: 43, scope: !4949)
!4968 = !DILocation(line: 945, column: 30, scope: !4949)
!4969 = !DILocation(line: 945, column: 33, scope: !4949)
!4970 = !DILocation(line: 945, column: 40, scope: !4949)
!4971 = !DILocation(line: 945, column: 58, scope: !4949)
!4972 = !DILocation(line: 945, column: 27, scope: !4949)
!4973 = !DILocation(line: 946, column: 17, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 946, column: 17)
!4975 = !DILocation(line: 946, column: 31, scope: !4974)
!4976 = !DILocation(line: 946, column: 17, scope: !4949)
!4977 = !DILocation(line: 947, column: 17, scope: !4974)
!4978 = !DILocation(line: 948, column: 9, scope: !4949)
!4979 = !DILocation(line: 940, column: 42, scope: !4944)
!4980 = !DILocation(line: 940, column: 9, scope: !4944)
!4981 = distinct !{!4981, !4946, !4982}
!4982 = !DILocation(line: 948, column: 9, scope: !4940)
!4983 = !DILocation(line: 949, column: 5, scope: !4903)
!4984 = !DILocation(line: 932, column: 57, scope: !4899)
!4985 = !DILocation(line: 932, column: 5, scope: !4899)
!4986 = distinct !{!4986, !4901, !4987}
!4987 = !DILocation(line: 949, column: 5, scope: !4893)
!4988 = !DILocation(line: 952, column: 12, scope: !4817)
!4989 = !DILocation(line: 952, column: 15, scope: !4817)
!4990 = !DILocation(line: 952, column: 18, scope: !4817)
!4991 = !DILocation(line: 952, column: 10, scope: !4817)
!4992 = !DILocation(line: 953, column: 32, scope: !4817)
!4993 = !DILocation(line: 953, column: 15, scope: !4817)
!4994 = !DILocation(line: 953, column: 38, scope: !4817)
!4995 = !DILocation(line: 953, column: 44, scope: !4817)
!4996 = !DILocation(line: 953, column: 12, scope: !4817)
!4997 = !DILocalVariable(name: "ch", scope: !4998, file: !3, line: 955, type: !195)
!4998 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 955, column: 5)
!4999 = !DILocation(line: 955, column: 14, scope: !4998)
!5000 = !DILocation(line: 955, column: 10, scope: !4998)
!5001 = !DILocation(line: 955, column: 22, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 955, column: 5)
!5003 = !DILocation(line: 955, column: 25, scope: !5002)
!5004 = !DILocation(line: 955, column: 5, scope: !4998)
!5005 = !DILocalVariable(name: "p_src", scope: !5006, file: !3, line: 957, type: !420)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 956, column: 5)
!5007 = !DILocation(line: 957, column: 19, scope: !5006)
!5008 = !DILocation(line: 957, column: 27, scope: !5006)
!5009 = !DILocation(line: 957, column: 30, scope: !5006)
!5010 = !DILocation(line: 957, column: 33, scope: !5006)
!5011 = !DILocation(line: 957, column: 37, scope: !5006)
!5012 = !DILocation(line: 957, column: 46, scope: !5006)
!5013 = !DILocation(line: 957, column: 45, scope: !5006)
!5014 = !DILocalVariable(name: "p_dst", scope: !5006, file: !3, line: 958, type: !420)
!5015 = !DILocation(line: 958, column: 19, scope: !5006)
!5016 = !DILocation(line: 958, column: 27, scope: !5006)
!5017 = !DILocation(line: 958, column: 30, scope: !5006)
!5018 = !DILocation(line: 958, column: 33, scope: !5006)
!5019 = !DILocation(line: 958, column: 37, scope: !5006)
!5020 = !DILocation(line: 958, column: 46, scope: !5006)
!5021 = !DILocation(line: 958, column: 45, scope: !5006)
!5022 = !DILocation(line: 960, column: 14, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 960, column: 13)
!5024 = !DILocation(line: 960, column: 13, scope: !5006)
!5025 = !DILocation(line: 963, column: 17, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 963, column: 17)
!5027 = distinct !DILexicalBlock(scope: !5023, file: !3, line: 961, column: 9)
!5028 = !DILocation(line: 963, column: 17, scope: !5027)
!5029 = !DILocation(line: 965, column: 17, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 964, column: 13)
!5031 = !DILocation(line: 965, column: 20, scope: !5030)
!5032 = !DILocation(line: 965, column: 23, scope: !5030)
!5033 = !DILocation(line: 965, column: 34, scope: !5030)
!5034 = !DILocation(line: 965, column: 37, scope: !5030)
!5035 = !DILocation(line: 965, column: 40, scope: !5030)
!5036 = !DILocation(line: 965, column: 44, scope: !5030)
!5037 = !DILocation(line: 965, column: 53, scope: !5030)
!5038 = !DILocation(line: 965, column: 52, scope: !5030)
!5039 = !DILocation(line: 966, column: 34, scope: !5030)
!5040 = !DILocation(line: 966, column: 37, scope: !5030)
!5041 = !DILocation(line: 966, column: 40, scope: !5030)
!5042 = !DILocation(line: 966, column: 44, scope: !5030)
!5043 = !DILocation(line: 966, column: 59, scope: !5030)
!5044 = !DILocation(line: 966, column: 58, scope: !5030)
!5045 = !DILocation(line: 966, column: 64, scope: !5030)
!5046 = !DILocation(line: 966, column: 67, scope: !5030)
!5047 = !DILocation(line: 966, column: 70, scope: !5030)
!5048 = !DILocation(line: 966, column: 74, scope: !5030)
!5049 = !DILocation(line: 966, column: 85, scope: !5030)
!5050 = !DILocation(line: 966, column: 84, scope: !5030)
!5051 = !DILocation(line: 967, column: 34, scope: !5030)
!5052 = !DILocation(line: 967, column: 42, scope: !5030)
!5053 = !DILocation(line: 968, column: 13, scope: !5030)
!5054 = !DILocation(line: 970, column: 17, scope: !5026)
!5055 = !DILocation(line: 970, column: 20, scope: !5026)
!5056 = !DILocation(line: 970, column: 23, scope: !5026)
!5057 = !DILocation(line: 970, column: 40, scope: !5026)
!5058 = !DILocation(line: 970, column: 43, scope: !5026)
!5059 = !DILocation(line: 970, column: 46, scope: !5026)
!5060 = !DILocation(line: 970, column: 50, scope: !5026)
!5061 = !DILocation(line: 970, column: 59, scope: !5026)
!5062 = !DILocation(line: 970, column: 58, scope: !5026)
!5063 = !DILocation(line: 970, column: 77, scope: !5026)
!5064 = !DILocation(line: 970, column: 80, scope: !5026)
!5065 = !DILocation(line: 970, column: 83, scope: !5026)
!5066 = !DILocation(line: 970, column: 87, scope: !5026)
!5067 = !DILocation(line: 970, column: 102, scope: !5026)
!5068 = !DILocation(line: 970, column: 101, scope: !5026)
!5069 = !DILocation(line: 970, column: 107, scope: !5026)
!5070 = !DILocation(line: 970, column: 110, scope: !5026)
!5071 = !DILocation(line: 970, column: 113, scope: !5026)
!5072 = !DILocation(line: 970, column: 117, scope: !5026)
!5073 = !DILocation(line: 970, column: 128, scope: !5026)
!5074 = !DILocation(line: 970, column: 127, scope: !5026)
!5075 = !DILocation(line: 972, column: 17, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 972, column: 17)
!5077 = !DILocation(line: 972, column: 20, scope: !5076)
!5078 = !DILocation(line: 972, column: 23, scope: !5076)
!5079 = !DILocation(line: 972, column: 35, scope: !5076)
!5080 = !DILocation(line: 972, column: 34, scope: !5076)
!5081 = !DILocation(line: 972, column: 39, scope: !5076)
!5082 = !DILocation(line: 972, column: 17, scope: !5027)
!5083 = !DILocation(line: 973, column: 17, scope: !5076)
!5084 = !DILocation(line: 973, column: 20, scope: !5076)
!5085 = !DILocation(line: 973, column: 23, scope: !5076)
!5086 = !DILocation(line: 973, column: 35, scope: !5076)
!5087 = !DILocation(line: 973, column: 34, scope: !5076)
!5088 = !DILocation(line: 973, column: 39, scope: !5076)
!5089 = !DILocation(line: 973, column: 55, scope: !5076)
!5090 = !DILocation(line: 973, column: 58, scope: !5076)
!5091 = !DILocation(line: 973, column: 61, scope: !5076)
!5092 = !DILocation(line: 973, column: 65, scope: !5076)
!5093 = !DILocation(line: 973, column: 74, scope: !5076)
!5094 = !DILocation(line: 973, column: 73, scope: !5076)
!5095 = !DILocation(line: 974, column: 55, scope: !5076)
!5096 = !DILocation(line: 974, column: 58, scope: !5076)
!5097 = !DILocation(line: 974, column: 61, scope: !5076)
!5098 = !DILocation(line: 974, column: 65, scope: !5076)
!5099 = !DILocation(line: 974, column: 74, scope: !5076)
!5100 = !DILocation(line: 974, column: 73, scope: !5076)
!5101 = !DILocation(line: 975, column: 56, scope: !5076)
!5102 = !DILocation(line: 975, column: 59, scope: !5076)
!5103 = !DILocation(line: 975, column: 62, scope: !5076)
!5104 = !DILocation(line: 975, column: 74, scope: !5076)
!5105 = !DILocation(line: 975, column: 73, scope: !5076)
!5106 = !DILocation(line: 976, column: 9, scope: !5027)
!5107 = !DILocation(line: 980, column: 15, scope: !5006)
!5108 = !DILocation(line: 980, column: 18, scope: !5006)
!5109 = !DILocation(line: 980, column: 23, scope: !5006)
!5110 = !DILocation(line: 980, column: 39, scope: !5006)
!5111 = !DILocation(line: 980, column: 59, scope: !5006)
!5112 = !DILocation(line: 980, column: 13, scope: !5006)
!5113 = !DILocation(line: 981, column: 13, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 981, column: 13)
!5115 = !DILocation(line: 981, column: 19, scope: !5114)
!5116 = !DILocation(line: 981, column: 17, scope: !5114)
!5117 = !DILocation(line: 981, column: 13, scope: !5006)
!5118 = !DILocation(line: 982, column: 13, scope: !5114)
!5119 = !DILocation(line: 986, column: 9, scope: !5006)
!5120 = !DILocation(line: 986, column: 12, scope: !5006)
!5121 = !DILocation(line: 986, column: 17, scope: !5006)
!5122 = !DILocation(line: 986, column: 32, scope: !5006)
!5123 = !DILocation(line: 986, column: 40, scope: !5006)
!5124 = !DILocation(line: 986, column: 47, scope: !5006)
!5125 = !DILocation(line: 988, column: 13, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 988, column: 13)
!5127 = !DILocation(line: 988, column: 16, scope: !5126)
!5128 = !DILocation(line: 988, column: 23, scope: !5126)
!5129 = !DILocation(line: 988, column: 37, scope: !5126)
!5130 = !DILocation(line: 988, column: 45, scope: !5126)
!5131 = !DILocation(line: 988, column: 48, scope: !5126)
!5132 = !DILocation(line: 988, column: 67, scope: !5126)
!5133 = !DILocation(line: 988, column: 75, scope: !5126)
!5134 = !DILocation(line: 988, column: 80, scope: !5126)
!5135 = !DILocation(line: 988, column: 83, scope: !5126)
!5136 = !DILocation(line: 988, column: 104, scope: !5126)
!5137 = !DILocation(line: 988, column: 112, scope: !5126)
!5138 = !DILocation(line: 988, column: 13, scope: !5006)
!5139 = !DILocation(line: 989, column: 13, scope: !5126)
!5140 = !DILocation(line: 992, column: 13, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 992, column: 13)
!5142 = !DILocation(line: 992, column: 19, scope: !5141)
!5143 = !DILocation(line: 992, column: 25, scope: !5141)
!5144 = !DILocation(line: 992, column: 17, scope: !5141)
!5145 = !DILocation(line: 992, column: 13, scope: !5006)
!5146 = !DILocation(line: 993, column: 13, scope: !5141)
!5147 = !DILocation(line: 995, column: 9, scope: !5006)
!5148 = !DILocation(line: 995, column: 12, scope: !5006)
!5149 = !DILocation(line: 995, column: 17, scope: !5006)
!5150 = !DILocation(line: 995, column: 29, scope: !5006)
!5151 = !DILocation(line: 995, column: 37, scope: !5006)
!5152 = !DILocation(line: 995, column: 44, scope: !5006)
!5153 = !DILocalVariable(name: "i4x4", scope: !5154, file: !3, line: 998, type: !195)
!5154 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 998, column: 9)
!5155 = !DILocation(line: 998, column: 18, scope: !5154)
!5156 = !DILocalVariable(name: "i_decimate_mb", scope: !5154, file: !3, line: 998, type: !195)
!5157 = !DILocation(line: 998, column: 28, scope: !5154)
!5158 = !DILocation(line: 998, column: 14, scope: !5154)
!5159 = !DILocation(line: 998, column: 47, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 998, column: 9)
!5161 = !DILocation(line: 998, column: 52, scope: !5160)
!5162 = !DILocation(line: 998, column: 9, scope: !5154)
!5163 = !DILocation(line: 1000, column: 20, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 999, column: 9)
!5165 = !DILocation(line: 1000, column: 13, scope: !5164)
!5166 = !DILocation(line: 1000, column: 29, scope: !5164)
!5167 = !DILocation(line: 1001, column: 18, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 1001, column: 17)
!5169 = !DILocation(line: 1001, column: 21, scope: !5168)
!5170 = !DILocation(line: 1001, column: 28, scope: !5168)
!5171 = !DILocation(line: 1001, column: 46, scope: !5168)
!5172 = !DILocation(line: 1001, column: 39, scope: !5168)
!5173 = !DILocation(line: 1001, column: 53, scope: !5168)
!5174 = !DILocation(line: 1001, column: 56, scope: !5168)
!5175 = !DILocation(line: 1001, column: 75, scope: !5168)
!5176 = !DILocation(line: 1001, column: 82, scope: !5168)
!5177 = !DILocation(line: 1001, column: 85, scope: !5168)
!5178 = !DILocation(line: 1001, column: 106, scope: !5168)
!5179 = !DILocation(line: 1001, column: 17, scope: !5164)
!5180 = !DILocation(line: 1002, column: 17, scope: !5168)
!5181 = !DILocation(line: 1003, column: 13, scope: !5164)
!5182 = !DILocation(line: 1003, column: 16, scope: !5164)
!5183 = !DILocation(line: 1003, column: 24, scope: !5164)
!5184 = !DILocation(line: 1003, column: 34, scope: !5164)
!5185 = !DILocation(line: 1003, column: 50, scope: !5164)
!5186 = !DILocation(line: 1003, column: 43, scope: !5164)
!5187 = !DILocation(line: 1004, column: 30, scope: !5164)
!5188 = !DILocation(line: 1004, column: 33, scope: !5164)
!5189 = !DILocation(line: 1004, column: 40, scope: !5164)
!5190 = !DILocation(line: 1004, column: 58, scope: !5164)
!5191 = !DILocation(line: 1004, column: 27, scope: !5164)
!5192 = !DILocation(line: 1005, column: 17, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 1005, column: 17)
!5194 = !DILocation(line: 1005, column: 31, scope: !5193)
!5195 = !DILocation(line: 1005, column: 17, scope: !5164)
!5196 = !DILocation(line: 1006, column: 17, scope: !5193)
!5197 = !DILocation(line: 1007, column: 9, scope: !5164)
!5198 = !DILocation(line: 998, column: 61, scope: !5160)
!5199 = !DILocation(line: 998, column: 9, scope: !5160)
!5200 = distinct !{!5200, !5162, !5201}
!5201 = !DILocation(line: 1007, column: 9, scope: !5154)
!5202 = !DILocation(line: 1008, column: 5, scope: !5006)
!5203 = !DILocation(line: 955, column: 32, scope: !5002)
!5204 = !DILocation(line: 955, column: 5, scope: !5002)
!5205 = distinct !{!5205, !5004, !5206}
!5206 = !DILocation(line: 1008, column: 5, scope: !4998)
!5207 = !DILocation(line: 1010, column: 5, scope: !4817)
!5208 = !DILocation(line: 1010, column: 8, scope: !4817)
!5209 = !DILocation(line: 1010, column: 11, scope: !4817)
!5210 = !DILocation(line: 1010, column: 21, scope: !4817)
!5211 = !DILocation(line: 1011, column: 5, scope: !4817)
!5212 = !DILocation(line: 1012, column: 1, scope: !4817)
!5213 = distinct !DISubprogram(name: "x264_clip3", scope: !139, file: !139, line: 200, type: !5214, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!5214 = !DISubroutineType(types: !5215)
!5215 = !{!195, !195, !195, !195}
!5216 = !DILocalVariable(name: "v", arg: 1, scope: !5213, file: !139, line: 200, type: !195)
!5217 = !DILocation(line: 200, column: 42, scope: !5213)
!5218 = !DILocalVariable(name: "i_min", arg: 2, scope: !5213, file: !139, line: 200, type: !195)
!5219 = !DILocation(line: 200, column: 49, scope: !5213)
!5220 = !DILocalVariable(name: "i_max", arg: 3, scope: !5213, file: !139, line: 200, type: !195)
!5221 = !DILocation(line: 200, column: 60, scope: !5213)
!5222 = !DILocation(line: 202, column: 15, scope: !5213)
!5223 = !DILocation(line: 202, column: 19, scope: !5213)
!5224 = !DILocation(line: 202, column: 17, scope: !5213)
!5225 = !DILocation(line: 202, column: 14, scope: !5213)
!5226 = !DILocation(line: 202, column: 28, scope: !5213)
!5227 = !DILocation(line: 202, column: 37, scope: !5213)
!5228 = !DILocation(line: 202, column: 41, scope: !5213)
!5229 = !DILocation(line: 202, column: 39, scope: !5213)
!5230 = !DILocation(line: 202, column: 36, scope: !5213)
!5231 = !DILocation(line: 202, column: 50, scope: !5213)
!5232 = !DILocation(line: 202, column: 58, scope: !5213)
!5233 = !DILocation(line: 202, column: 5, scope: !5213)
!5234 = distinct !DISubprogram(name: "x264_noise_reduction_update", scope: !3, file: !3, line: 1019, type: !3130, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!5235 = !DILocalVariable(name: "h", arg: 1, scope: !5234, file: !3, line: 1019, type: !228)
!5236 = !DILocation(line: 1019, column: 43, scope: !5234)
!5237 = !DILocalVariable(name: "cat", scope: !5238, file: !3, line: 1021, type: !195)
!5238 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 1021, column: 5)
!5239 = !DILocation(line: 1021, column: 14, scope: !5238)
!5240 = !DILocation(line: 1021, column: 10, scope: !5238)
!5241 = !DILocation(line: 1021, column: 23, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 1021, column: 5)
!5243 = !DILocation(line: 1021, column: 27, scope: !5242)
!5244 = !DILocation(line: 1021, column: 5, scope: !5238)
!5245 = !DILocalVariable(name: "size", scope: !5246, file: !3, line: 1023, type: !195)
!5246 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 1022, column: 5)
!5247 = !DILocation(line: 1023, column: 13, scope: !5246)
!5248 = !DILocation(line: 1023, column: 20, scope: !5246)
!5249 = !DILocalVariable(name: "weight", scope: !5246, file: !3, line: 1024, type: !5250)
!5250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!5251 = !DILocation(line: 1024, column: 25, scope: !5246)
!5252 = !DILocation(line: 1024, column: 34, scope: !5246)
!5253 = !DILocation(line: 1026, column: 13, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 1026, column: 13)
!5255 = !DILocation(line: 1026, column: 16, scope: !5254)
!5256 = !DILocation(line: 1026, column: 25, scope: !5254)
!5257 = !DILocation(line: 1026, column: 33, scope: !5254)
!5258 = !DILocation(line: 1026, column: 30, scope: !5254)
!5259 = !DILocation(line: 1026, column: 13, scope: !5246)
!5260 = !DILocalVariable(name: "i", scope: !5261, file: !3, line: 1028, type: !195)
!5261 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 1028, column: 13)
!5262 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 1027, column: 9)
!5263 = !DILocation(line: 1028, column: 22, scope: !5261)
!5264 = !DILocation(line: 1028, column: 18, scope: !5261)
!5265 = !DILocation(line: 1028, column: 29, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 1028, column: 13)
!5267 = !DILocation(line: 1028, column: 33, scope: !5266)
!5268 = !DILocation(line: 1028, column: 31, scope: !5266)
!5269 = !DILocation(line: 1028, column: 13, scope: !5261)
!5270 = !DILocation(line: 1029, column: 17, scope: !5266)
!5271 = !DILocation(line: 1029, column: 20, scope: !5266)
!5272 = !DILocation(line: 1029, column: 36, scope: !5266)
!5273 = !DILocation(line: 1029, column: 41, scope: !5266)
!5274 = !DILocation(line: 1029, column: 44, scope: !5266)
!5275 = !DILocation(line: 1028, column: 40, scope: !5266)
!5276 = !DILocation(line: 1028, column: 13, scope: !5266)
!5277 = distinct !{!5277, !5269, !5278}
!5278 = !DILocation(line: 1029, column: 48, scope: !5261)
!5279 = !DILocation(line: 1030, column: 13, scope: !5262)
!5280 = !DILocation(line: 1030, column: 16, scope: !5262)
!5281 = !DILocation(line: 1030, column: 25, scope: !5262)
!5282 = !DILocation(line: 1030, column: 30, scope: !5262)
!5283 = !DILocation(line: 1031, column: 9, scope: !5262)
!5284 = !DILocalVariable(name: "i", scope: !5285, file: !3, line: 1033, type: !195)
!5285 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 1033, column: 9)
!5286 = !DILocation(line: 1033, column: 18, scope: !5285)
!5287 = !DILocation(line: 1033, column: 14, scope: !5285)
!5288 = !DILocation(line: 1033, column: 25, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 1033, column: 9)
!5290 = !DILocation(line: 1033, column: 29, scope: !5289)
!5291 = !DILocation(line: 1033, column: 27, scope: !5289)
!5292 = !DILocation(line: 1033, column: 9, scope: !5285)
!5293 = !DILocation(line: 1035, column: 28, scope: !5289)
!5294 = !DILocation(line: 1035, column: 31, scope: !5289)
!5295 = !DILocation(line: 1035, column: 37, scope: !5289)
!5296 = !DILocation(line: 1035, column: 45, scope: !5289)
!5297 = !DILocation(line: 1035, column: 18, scope: !5289)
!5298 = !DILocation(line: 1035, column: 65, scope: !5289)
!5299 = !DILocation(line: 1035, column: 68, scope: !5289)
!5300 = !DILocation(line: 1035, column: 77, scope: !5289)
!5301 = !DILocation(line: 1035, column: 63, scope: !5289)
!5302 = !DILocation(line: 1036, column: 20, scope: !5289)
!5303 = !DILocation(line: 1036, column: 23, scope: !5289)
!5304 = !DILocation(line: 1036, column: 39, scope: !5289)
!5305 = !DILocation(line: 1036, column: 44, scope: !5289)
!5306 = !DILocation(line: 1036, column: 46, scope: !5289)
!5307 = !DILocation(line: 1036, column: 18, scope: !5289)
!5308 = !DILocation(line: 1037, column: 28, scope: !5289)
!5309 = !DILocation(line: 1037, column: 31, scope: !5289)
!5310 = !DILocation(line: 1037, column: 47, scope: !5289)
!5311 = !DILocation(line: 1037, column: 52, scope: !5289)
!5312 = !DILocation(line: 1037, column: 18, scope: !5289)
!5313 = !DILocation(line: 1037, column: 57, scope: !5289)
!5314 = !DILocation(line: 1037, column: 64, scope: !5289)
!5315 = !DILocation(line: 1037, column: 55, scope: !5289)
!5316 = !DILocation(line: 1037, column: 66, scope: !5289)
!5317 = !DILocation(line: 1037, column: 71, scope: !5289)
!5318 = !DILocation(line: 1037, column: 15, scope: !5289)
!5319 = !DILocation(line: 1035, column: 17, scope: !5289)
!5320 = !DILocation(line: 1034, column: 13, scope: !5289)
!5321 = !DILocation(line: 1034, column: 16, scope: !5289)
!5322 = !DILocation(line: 1034, column: 26, scope: !5289)
!5323 = !DILocation(line: 1034, column: 31, scope: !5289)
!5324 = !DILocation(line: 1034, column: 34, scope: !5289)
!5325 = !DILocation(line: 1033, column: 36, scope: !5289)
!5326 = !DILocation(line: 1033, column: 9, scope: !5289)
!5327 = distinct !{!5327, !5292, !5328}
!5328 = !DILocation(line: 1037, column: 74, scope: !5285)
!5329 = !DILocation(line: 1038, column: 5, scope: !5246)
!5330 = !DILocation(line: 1021, column: 35, scope: !5242)
!5331 = !DILocation(line: 1021, column: 5, scope: !5242)
!5332 = distinct !{!5332, !5244, !5333}
!5333 = !DILocation(line: 1038, column: 5, scope: !5238)
!5334 = !DILocation(line: 1039, column: 1, scope: !5234)
!5335 = distinct !DISubprogram(name: "x264_macroblock_encode_p8x8", scope: !3, file: !3, line: 1045, type: !2844, scopeLine: 1046, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!5336 = !DILocalVariable(name: "h", arg: 1, scope: !5335, file: !3, line: 1045, type: !228)
!5337 = !DILocation(line: 1045, column: 43, scope: !5335)
!5338 = !DILocalVariable(name: "i8", arg: 2, scope: !5335, file: !3, line: 1045, type: !195)
!5339 = !DILocation(line: 1045, column: 50, scope: !5335)
!5340 = !DILocalVariable(name: "i_qp", scope: !5335, file: !3, line: 1047, type: !195)
!5341 = !DILocation(line: 1047, column: 9, scope: !5335)
!5342 = !DILocation(line: 1047, column: 16, scope: !5335)
!5343 = !DILocation(line: 1047, column: 19, scope: !5335)
!5344 = !DILocation(line: 1047, column: 22, scope: !5335)
!5345 = !DILocalVariable(name: "p_fenc", scope: !5335, file: !3, line: 1048, type: !420)
!5346 = !DILocation(line: 1048, column: 14, scope: !5335)
!5347 = !DILocation(line: 1048, column: 23, scope: !5335)
!5348 = !DILocation(line: 1048, column: 26, scope: !5335)
!5349 = !DILocation(line: 1048, column: 29, scope: !5335)
!5350 = !DILocation(line: 1048, column: 33, scope: !5335)
!5351 = !DILocation(line: 1048, column: 46, scope: !5335)
!5352 = !DILocation(line: 1048, column: 48, scope: !5335)
!5353 = !DILocation(line: 1048, column: 51, scope: !5335)
!5354 = !DILocation(line: 1048, column: 43, scope: !5335)
!5355 = !DILocation(line: 1048, column: 57, scope: !5335)
!5356 = !DILocation(line: 1048, column: 59, scope: !5335)
!5357 = !DILocation(line: 1048, column: 63, scope: !5335)
!5358 = !DILocation(line: 1048, column: 65, scope: !5335)
!5359 = !DILocation(line: 1048, column: 54, scope: !5335)
!5360 = !DILocalVariable(name: "p_fdec", scope: !5335, file: !3, line: 1049, type: !420)
!5361 = !DILocation(line: 1049, column: 14, scope: !5335)
!5362 = !DILocation(line: 1049, column: 23, scope: !5335)
!5363 = !DILocation(line: 1049, column: 26, scope: !5335)
!5364 = !DILocation(line: 1049, column: 29, scope: !5335)
!5365 = !DILocation(line: 1049, column: 33, scope: !5335)
!5366 = !DILocation(line: 1049, column: 46, scope: !5335)
!5367 = !DILocation(line: 1049, column: 48, scope: !5335)
!5368 = !DILocation(line: 1049, column: 51, scope: !5335)
!5369 = !DILocation(line: 1049, column: 43, scope: !5335)
!5370 = !DILocation(line: 1049, column: 57, scope: !5335)
!5371 = !DILocation(line: 1049, column: 59, scope: !5335)
!5372 = !DILocation(line: 1049, column: 63, scope: !5335)
!5373 = !DILocation(line: 1049, column: 65, scope: !5335)
!5374 = !DILocation(line: 1049, column: 54, scope: !5335)
!5375 = !DILocalVariable(name: "b_decimate", scope: !5335, file: !3, line: 1050, type: !195)
!5376 = !DILocation(line: 1050, column: 9, scope: !5335)
!5377 = !DILocation(line: 1050, column: 22, scope: !5335)
!5378 = !DILocation(line: 1050, column: 25, scope: !5335)
!5379 = !DILocation(line: 1050, column: 28, scope: !5335)
!5380 = !DILocalVariable(name: "nnz8x8", scope: !5335, file: !3, line: 1051, type: !195)
!5381 = !DILocation(line: 1051, column: 9, scope: !5335)
!5382 = !DILocalVariable(name: "nz", scope: !5335, file: !3, line: 1052, type: !195)
!5383 = !DILocation(line: 1052, column: 9, scope: !5335)
!5384 = !DILocation(line: 1054, column: 10, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 1054, column: 9)
!5386 = !DILocation(line: 1054, column: 13, scope: !5385)
!5387 = !DILocation(line: 1054, column: 16, scope: !5385)
!5388 = !DILocation(line: 1054, column: 9, scope: !5335)
!5389 = !DILocation(line: 1055, column: 25, scope: !5385)
!5390 = !DILocation(line: 1055, column: 28, scope: !5385)
!5391 = !DILocation(line: 1055, column: 9, scope: !5385)
!5392 = !DILocation(line: 1057, column: 9, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 1057, column: 9)
!5394 = !DILocation(line: 1057, column: 12, scope: !5393)
!5395 = !DILocation(line: 1057, column: 15, scope: !5393)
!5396 = !DILocation(line: 1057, column: 9, scope: !5335)
!5397 = !DILocation(line: 1059, column: 13, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 1059, column: 13)
!5399 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 1058, column: 5)
!5400 = !DILocation(line: 1059, column: 16, scope: !5398)
!5401 = !DILocation(line: 1059, column: 19, scope: !5398)
!5402 = !DILocation(line: 1059, column: 13, scope: !5399)
!5403 = !DILocation(line: 1061, column: 22, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 1060, column: 9)
!5405 = !DILocation(line: 1061, column: 25, scope: !5404)
!5406 = !DILocation(line: 1061, column: 33, scope: !5404)
!5407 = !DILocation(line: 1061, column: 42, scope: !5404)
!5408 = !DILocation(line: 1061, column: 45, scope: !5404)
!5409 = !DILocation(line: 1061, column: 49, scope: !5404)
!5410 = !DILocation(line: 1061, column: 57, scope: !5404)
!5411 = !DILocation(line: 1061, column: 62, scope: !5404)
!5412 = !DILocation(line: 1061, column: 70, scope: !5404)
!5413 = !DILocation(line: 1061, column: 20, scope: !5404)
!5414 = !DILocation(line: 1062, column: 13, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 1062, column: 13)
!5416 = !DILocation(line: 1063, column: 9, scope: !5404)
!5417 = !DILocalVariable(name: "i4", scope: !5418, file: !3, line: 1066, type: !195)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 1066, column: 13)
!5419 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 1065, column: 9)
!5420 = !DILocation(line: 1066, column: 22, scope: !5418)
!5421 = !DILocation(line: 1066, column: 27, scope: !5418)
!5422 = !DILocation(line: 1066, column: 29, scope: !5418)
!5423 = !DILocation(line: 1066, column: 18, scope: !5418)
!5424 = !DILocation(line: 1066, column: 33, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 1066, column: 13)
!5426 = !DILocation(line: 1066, column: 38, scope: !5425)
!5427 = !DILocation(line: 1066, column: 40, scope: !5425)
!5428 = !DILocation(line: 1066, column: 42, scope: !5425)
!5429 = !DILocation(line: 1066, column: 36, scope: !5425)
!5430 = !DILocation(line: 1066, column: 13, scope: !5418)
!5431 = !DILocation(line: 1068, column: 22, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 1067, column: 13)
!5433 = !DILocation(line: 1068, column: 25, scope: !5432)
!5434 = !DILocation(line: 1068, column: 33, scope: !5432)
!5435 = !DILocation(line: 1068, column: 42, scope: !5432)
!5436 = !DILocation(line: 1068, column: 45, scope: !5432)
!5437 = !DILocation(line: 1068, column: 49, scope: !5432)
!5438 = !DILocation(line: 1068, column: 57, scope: !5432)
!5439 = !DILocation(line: 1069, column: 37, scope: !5432)
!5440 = !DILocation(line: 1069, column: 40, scope: !5432)
!5441 = !DILocation(line: 1069, column: 43, scope: !5432)
!5442 = !DILocation(line: 1069, column: 47, scope: !5432)
!5443 = !DILocation(line: 1069, column: 75, scope: !5432)
!5444 = !DILocation(line: 1069, column: 57, scope: !5432)
!5445 = !DILocation(line: 1069, column: 56, scope: !5432)
!5446 = !DILocation(line: 1070, column: 37, scope: !5432)
!5447 = !DILocation(line: 1070, column: 40, scope: !5432)
!5448 = !DILocation(line: 1070, column: 43, scope: !5432)
!5449 = !DILocation(line: 1070, column: 47, scope: !5432)
!5450 = !DILocation(line: 1070, column: 75, scope: !5432)
!5451 = !DILocation(line: 1070, column: 57, scope: !5432)
!5452 = !DILocation(line: 1070, column: 56, scope: !5432)
!5453 = !DILocation(line: 1068, column: 20, scope: !5432)
!5454 = !DILocation(line: 1071, column: 62, scope: !5432)
!5455 = !DILocation(line: 1071, column: 17, scope: !5432)
!5456 = !DILocation(line: 1071, column: 20, scope: !5432)
!5457 = !DILocation(line: 1071, column: 23, scope: !5432)
!5458 = !DILocation(line: 1071, column: 29, scope: !5432)
!5459 = !DILocation(line: 1071, column: 55, scope: !5432)
!5460 = !DILocation(line: 1071, column: 44, scope: !5432)
!5461 = !DILocation(line: 1071, column: 60, scope: !5432)
!5462 = !DILocation(line: 1072, column: 27, scope: !5432)
!5463 = !DILocation(line: 1072, column: 24, scope: !5432)
!5464 = !DILocation(line: 1073, column: 13, scope: !5432)
!5465 = !DILocation(line: 1066, column: 48, scope: !5425)
!5466 = !DILocation(line: 1066, column: 13, scope: !5425)
!5467 = distinct !{!5467, !5430, !5468}
!5468 = !DILocation(line: 1073, column: 13, scope: !5418)
!5469 = !DILocalVariable(name: "ch", scope: !5470, file: !3, line: 1075, type: !195)
!5470 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 1075, column: 9)
!5471 = !DILocation(line: 1075, column: 18, scope: !5470)
!5472 = !DILocation(line: 1075, column: 14, scope: !5470)
!5473 = !DILocation(line: 1075, column: 26, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1075, column: 9)
!5475 = !DILocation(line: 1075, column: 29, scope: !5474)
!5476 = !DILocation(line: 1075, column: 9, scope: !5470)
!5477 = !DILocalVariable(name: "dc", scope: !5478, file: !3, line: 1077, type: !643)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 1076, column: 9)
!5479 = !DILocation(line: 1077, column: 21, scope: !5478)
!5480 = !DILocation(line: 1078, column: 22, scope: !5478)
!5481 = !DILocation(line: 1078, column: 25, scope: !5478)
!5482 = !DILocation(line: 1078, column: 28, scope: !5478)
!5483 = !DILocation(line: 1078, column: 32, scope: !5478)
!5484 = !DILocation(line: 1078, column: 41, scope: !5478)
!5485 = !DILocation(line: 1078, column: 40, scope: !5478)
!5486 = !DILocation(line: 1078, column: 48, scope: !5478)
!5487 = !DILocation(line: 1078, column: 50, scope: !5478)
!5488 = !DILocation(line: 1078, column: 53, scope: !5478)
!5489 = !DILocation(line: 1078, column: 45, scope: !5478)
!5490 = !DILocation(line: 1078, column: 59, scope: !5478)
!5491 = !DILocation(line: 1078, column: 61, scope: !5478)
!5492 = !DILocation(line: 1078, column: 65, scope: !5478)
!5493 = !DILocation(line: 1078, column: 67, scope: !5478)
!5494 = !DILocation(line: 1078, column: 56, scope: !5478)
!5495 = !DILocation(line: 1078, column: 20, scope: !5478)
!5496 = !DILocation(line: 1079, column: 22, scope: !5478)
!5497 = !DILocation(line: 1079, column: 25, scope: !5478)
!5498 = !DILocation(line: 1079, column: 28, scope: !5478)
!5499 = !DILocation(line: 1079, column: 32, scope: !5478)
!5500 = !DILocation(line: 1079, column: 41, scope: !5478)
!5501 = !DILocation(line: 1079, column: 40, scope: !5478)
!5502 = !DILocation(line: 1079, column: 48, scope: !5478)
!5503 = !DILocation(line: 1079, column: 50, scope: !5478)
!5504 = !DILocation(line: 1079, column: 53, scope: !5478)
!5505 = !DILocation(line: 1079, column: 45, scope: !5478)
!5506 = !DILocation(line: 1079, column: 59, scope: !5478)
!5507 = !DILocation(line: 1079, column: 61, scope: !5478)
!5508 = !DILocation(line: 1079, column: 65, scope: !5478)
!5509 = !DILocation(line: 1079, column: 67, scope: !5478)
!5510 = !DILocation(line: 1079, column: 56, scope: !5478)
!5511 = !DILocation(line: 1079, column: 20, scope: !5478)
!5512 = !DILocation(line: 1080, column: 18, scope: !5478)
!5513 = !DILocation(line: 1080, column: 21, scope: !5478)
!5514 = !DILocation(line: 1080, column: 29, scope: !5478)
!5515 = !DILocation(line: 1080, column: 40, scope: !5478)
!5516 = !DILocation(line: 1080, column: 43, scope: !5478)
!5517 = !DILocation(line: 1080, column: 47, scope: !5478)
!5518 = !DILocation(line: 1080, column: 58, scope: !5478)
!5519 = !DILocation(line: 1080, column: 57, scope: !5478)
!5520 = !DILocation(line: 1080, column: 61, scope: !5478)
!5521 = !DILocation(line: 1080, column: 63, scope: !5478)
!5522 = !DILocation(line: 1080, column: 60, scope: !5478)
!5523 = !DILocation(line: 1080, column: 68, scope: !5478)
!5524 = !DILocation(line: 1080, column: 76, scope: !5478)
!5525 = !DILocation(line: 1080, column: 16, scope: !5478)
!5526 = !DILocation(line: 1081, column: 66, scope: !5478)
!5527 = !DILocation(line: 1081, column: 13, scope: !5478)
!5528 = !DILocation(line: 1081, column: 16, scope: !5478)
!5529 = !DILocation(line: 1081, column: 19, scope: !5478)
!5530 = !DILocation(line: 1081, column: 25, scope: !5478)
!5531 = !DILocation(line: 1081, column: 54, scope: !5478)
!5532 = !DILocation(line: 1081, column: 53, scope: !5478)
!5533 = !DILocation(line: 1081, column: 57, scope: !5478)
!5534 = !DILocation(line: 1081, column: 59, scope: !5478)
!5535 = !DILocation(line: 1081, column: 56, scope: !5478)
!5536 = !DILocation(line: 1081, column: 40, scope: !5478)
!5537 = !DILocation(line: 1081, column: 64, scope: !5478)
!5538 = !DILocation(line: 1082, column: 9, scope: !5478)
!5539 = !DILocation(line: 1075, column: 36, scope: !5474)
!5540 = !DILocation(line: 1075, column: 9, scope: !5474)
!5541 = distinct !{!5541, !5476, !5542}
!5542 = !DILocation(line: 1082, column: 9, scope: !5470)
!5543 = !DILocation(line: 1083, column: 5, scope: !5399)
!5544 = !DILocation(line: 1086, column: 13, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 1086, column: 13)
!5546 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 1085, column: 5)
!5547 = !DILocation(line: 1086, column: 16, scope: !5545)
!5548 = !DILocation(line: 1086, column: 19, scope: !5545)
!5549 = !DILocation(line: 1086, column: 13, scope: !5546)
!5550 = !DILocalVariable(name: "dct8x8", scope: !5551, file: !3, line: 1088, type: !1375, align: 128)
!5551 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 1087, column: 9)
!5552 = !DILocation(line: 1088, column: 13, scope: !5551)
!5553 = !DILocation(line: 1089, column: 13, scope: !5551)
!5554 = !DILocation(line: 1089, column: 16, scope: !5551)
!5555 = !DILocation(line: 1089, column: 21, scope: !5551)
!5556 = !DILocation(line: 1089, column: 34, scope: !5551)
!5557 = !DILocation(line: 1089, column: 42, scope: !5551)
!5558 = !DILocation(line: 1089, column: 50, scope: !5551)
!5559 = !DILocation(line: 1090, column: 38, scope: !5551)
!5560 = !DILocation(line: 1090, column: 41, scope: !5551)
!5561 = !DILocation(line: 1090, column: 49, scope: !5551)
!5562 = !DILocation(line: 1090, column: 58, scope: !5551)
!5563 = !DILocation(line: 1090, column: 22, scope: !5551)
!5564 = !DILocation(line: 1090, column: 20, scope: !5551)
!5565 = !DILocation(line: 1091, column: 17, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 1091, column: 17)
!5567 = !DILocation(line: 1091, column: 17, scope: !5551)
!5568 = !DILocation(line: 1093, column: 17, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 1092, column: 13)
!5570 = !DILocation(line: 1093, column: 20, scope: !5569)
!5571 = !DILocation(line: 1093, column: 28, scope: !5569)
!5572 = !DILocation(line: 1093, column: 38, scope: !5569)
!5573 = !DILocation(line: 1093, column: 41, scope: !5569)
!5574 = !DILocation(line: 1093, column: 45, scope: !5569)
!5575 = !DILocation(line: 1093, column: 53, scope: !5569)
!5576 = !DILocation(line: 1093, column: 58, scope: !5569)
!5577 = !DILocation(line: 1095, column: 21, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1095, column: 21)
!5579 = !DILocation(line: 1095, column: 32, scope: !5578)
!5580 = !DILocation(line: 1095, column: 36, scope: !5578)
!5581 = !DILocation(line: 1095, column: 39, scope: !5578)
!5582 = !DILocation(line: 1095, column: 42, scope: !5578)
!5583 = !DILocation(line: 1095, column: 21, scope: !5569)
!5584 = !DILocation(line: 1096, column: 35, scope: !5578)
!5585 = !DILocation(line: 1096, column: 38, scope: !5578)
!5586 = !DILocation(line: 1096, column: 45, scope: !5578)
!5587 = !DILocation(line: 1096, column: 63, scope: !5578)
!5588 = !DILocation(line: 1096, column: 66, scope: !5578)
!5589 = !DILocation(line: 1096, column: 70, scope: !5578)
!5590 = !DILocation(line: 1096, column: 78, scope: !5578)
!5591 = !DILocation(line: 1096, column: 32, scope: !5578)
!5592 = !DILocation(line: 1096, column: 28, scope: !5578)
!5593 = !DILocation(line: 1096, column: 21, scope: !5578)
!5594 = !DILocation(line: 1098, column: 21, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1098, column: 21)
!5596 = !DILocation(line: 1098, column: 21, scope: !5569)
!5597 = !DILocation(line: 1100, column: 21, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 1099, column: 17)
!5599 = !DILocation(line: 1100, column: 24, scope: !5598)
!5600 = !DILocation(line: 1100, column: 31, scope: !5598)
!5601 = !DILocation(line: 1100, column: 44, scope: !5598)
!5602 = !DILocation(line: 1100, column: 52, scope: !5598)
!5603 = !DILocation(line: 1100, column: 55, scope: !5598)
!5604 = !DILocation(line: 1100, column: 77, scope: !5598)
!5605 = !DILocation(line: 1101, column: 21, scope: !5598)
!5606 = !DILocation(line: 1101, column: 24, scope: !5598)
!5607 = !DILocation(line: 1101, column: 29, scope: !5598)
!5608 = !DILocation(line: 1101, column: 43, scope: !5598)
!5609 = !DILocation(line: 1101, column: 51, scope: !5598)
!5610 = !DILocation(line: 1102, column: 21, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5598, file: !3, line: 1102, column: 21)
!5612 = !DILocation(line: 1103, column: 17, scope: !5598)
!5613 = !DILocation(line: 1105, column: 21, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 1105, column: 21)
!5615 = !DILocation(line: 1106, column: 13, scope: !5569)
!5616 = !DILocation(line: 1108, column: 17, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 1108, column: 17)
!5618 = !DILocation(line: 1109, column: 9, scope: !5551)
!5619 = !DILocalVariable(name: "i_decimate_8x8", scope: !5620, file: !3, line: 1112, type: !195)
!5620 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 1111, column: 9)
!5621 = !DILocation(line: 1112, column: 17, scope: !5620)
!5622 = !DILocalVariable(name: "dct4x4", scope: !5620, file: !3, line: 1113, type: !2111, align: 128)
!5623 = !DILocation(line: 1113, column: 13, scope: !5620)
!5624 = !DILocation(line: 1114, column: 13, scope: !5620)
!5625 = !DILocation(line: 1114, column: 16, scope: !5620)
!5626 = !DILocation(line: 1114, column: 21, scope: !5620)
!5627 = !DILocation(line: 1114, column: 33, scope: !5620)
!5628 = !DILocation(line: 1114, column: 41, scope: !5620)
!5629 = !DILocation(line: 1114, column: 49, scope: !5620)
!5630 = !DILocalVariable(name: "i4", scope: !5631, file: !3, line: 1115, type: !195)
!5631 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1115, column: 13)
!5632 = !DILocation(line: 1115, column: 22, scope: !5631)
!5633 = !DILocation(line: 1115, column: 18, scope: !5631)
!5634 = !DILocation(line: 1115, column: 30, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 1115, column: 13)
!5636 = !DILocation(line: 1115, column: 33, scope: !5635)
!5637 = !DILocation(line: 1115, column: 13, scope: !5631)
!5638 = !DILocation(line: 1117, column: 38, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1116, column: 13)
!5640 = !DILocation(line: 1117, column: 48, scope: !5639)
!5641 = !DILocation(line: 1117, column: 41, scope: !5639)
!5642 = !DILocation(line: 1117, column: 53, scope: !5639)
!5643 = !DILocation(line: 1117, column: 76, scope: !5639)
!5644 = !DILocation(line: 1117, column: 78, scope: !5639)
!5645 = !DILocation(line: 1117, column: 81, scope: !5639)
!5646 = !DILocation(line: 1117, column: 80, scope: !5639)
!5647 = !DILocation(line: 1117, column: 22, scope: !5639)
!5648 = !DILocation(line: 1117, column: 20, scope: !5639)
!5649 = !DILocation(line: 1118, column: 67, scope: !5639)
!5650 = !DILocation(line: 1118, column: 17, scope: !5639)
!5651 = !DILocation(line: 1118, column: 20, scope: !5639)
!5652 = !DILocation(line: 1118, column: 23, scope: !5639)
!5653 = !DILocation(line: 1118, column: 29, scope: !5639)
!5654 = !DILocation(line: 1118, column: 55, scope: !5639)
!5655 = !DILocation(line: 1118, column: 57, scope: !5639)
!5656 = !DILocation(line: 1118, column: 60, scope: !5639)
!5657 = !DILocation(line: 1118, column: 59, scope: !5639)
!5658 = !DILocation(line: 1118, column: 44, scope: !5639)
!5659 = !DILocation(line: 1118, column: 65, scope: !5639)
!5660 = !DILocation(line: 1119, column: 21, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 1119, column: 21)
!5662 = !DILocation(line: 1119, column: 21, scope: !5639)
!5663 = !DILocation(line: 1121, column: 21, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 1120, column: 17)
!5665 = !DILocation(line: 1121, column: 24, scope: !5664)
!5666 = !DILocation(line: 1121, column: 32, scope: !5664)
!5667 = !DILocation(line: 1121, column: 42, scope: !5664)
!5668 = !DILocation(line: 1121, column: 45, scope: !5664)
!5669 = !DILocation(line: 1121, column: 49, scope: !5664)
!5670 = !DILocation(line: 1121, column: 57, scope: !5664)
!5671 = !DILocation(line: 1121, column: 59, scope: !5664)
!5672 = !DILocation(line: 1121, column: 62, scope: !5664)
!5673 = !DILocation(line: 1121, column: 61, scope: !5664)
!5674 = !DILocation(line: 1121, column: 74, scope: !5664)
!5675 = !DILocation(line: 1121, column: 67, scope: !5664)
!5676 = !DILocation(line: 1122, column: 21, scope: !5664)
!5677 = !DILocation(line: 1122, column: 24, scope: !5664)
!5678 = !DILocation(line: 1122, column: 31, scope: !5664)
!5679 = !DILocation(line: 1122, column: 51, scope: !5664)
!5680 = !DILocation(line: 1122, column: 44, scope: !5664)
!5681 = !DILocation(line: 1122, column: 56, scope: !5664)
!5682 = !DILocation(line: 1122, column: 59, scope: !5664)
!5683 = !DILocation(line: 1122, column: 81, scope: !5664)
!5684 = !DILocation(line: 1123, column: 25, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1123, column: 25)
!5686 = !DILocation(line: 1123, column: 25, scope: !5664)
!5687 = !DILocation(line: 1124, column: 43, scope: !5685)
!5688 = !DILocation(line: 1124, column: 46, scope: !5685)
!5689 = !DILocation(line: 1124, column: 53, scope: !5685)
!5690 = !DILocation(line: 1124, column: 71, scope: !5685)
!5691 = !DILocation(line: 1124, column: 74, scope: !5685)
!5692 = !DILocation(line: 1124, column: 78, scope: !5685)
!5693 = !DILocation(line: 1124, column: 86, scope: !5685)
!5694 = !DILocation(line: 1124, column: 88, scope: !5685)
!5695 = !DILocation(line: 1124, column: 91, scope: !5685)
!5696 = !DILocation(line: 1124, column: 90, scope: !5685)
!5697 = !DILocation(line: 1124, column: 40, scope: !5685)
!5698 = !DILocation(line: 1124, column: 25, scope: !5685)
!5699 = !DILocation(line: 1125, column: 28, scope: !5664)
!5700 = !DILocation(line: 1126, column: 17, scope: !5664)
!5701 = !DILocation(line: 1127, column: 13, scope: !5639)
!5702 = !DILocation(line: 1115, column: 40, scope: !5635)
!5703 = !DILocation(line: 1115, column: 13, scope: !5635)
!5704 = distinct !{!5704, !5637, !5705}
!5705 = !DILocation(line: 1127, column: 13, scope: !5631)
!5706 = !DILocation(line: 1129, column: 17, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1129, column: 17)
!5708 = !DILocation(line: 1129, column: 28, scope: !5707)
!5709 = !DILocation(line: 1129, column: 31, scope: !5707)
!5710 = !DILocation(line: 1129, column: 46, scope: !5707)
!5711 = !DILocation(line: 1129, column: 17, scope: !5620)
!5712 = !DILocation(line: 1130, column: 24, scope: !5707)
!5713 = !DILocation(line: 1130, column: 17, scope: !5707)
!5714 = !DILocation(line: 1132, column: 17, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1132, column: 17)
!5716 = !DILocation(line: 1132, column: 17, scope: !5620)
!5717 = !DILocation(line: 1133, column: 17, scope: !5715)
!5718 = !DILocation(line: 1133, column: 20, scope: !5715)
!5719 = !DILocation(line: 1133, column: 25, scope: !5715)
!5720 = !DILocation(line: 1133, column: 38, scope: !5715)
!5721 = !DILocation(line: 1133, column: 46, scope: !5715)
!5722 = !DILocation(line: 1135, column: 17, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1135, column: 17)
!5724 = !DILocation(line: 1138, column: 16, scope: !5546)
!5725 = !DILocation(line: 1138, column: 19, scope: !5546)
!5726 = !DILocation(line: 1138, column: 22, scope: !5546)
!5727 = !DILocation(line: 1138, column: 14, scope: !5546)
!5728 = !DILocalVariable(name: "ch", scope: !5729, file: !3, line: 1140, type: !195)
!5729 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 1140, column: 9)
!5730 = !DILocation(line: 1140, column: 18, scope: !5729)
!5731 = !DILocation(line: 1140, column: 14, scope: !5729)
!5732 = !DILocation(line: 1140, column: 26, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1140, column: 9)
!5734 = !DILocation(line: 1140, column: 29, scope: !5733)
!5735 = !DILocation(line: 1140, column: 9, scope: !5729)
!5736 = !DILocalVariable(name: "dct4x4", scope: !5737, file: !3, line: 1142, type: !875, align: 128)
!5737 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1141, column: 9)
!5738 = !DILocation(line: 1142, column: 13, scope: !5737)
!5739 = !DILocation(line: 1143, column: 22, scope: !5737)
!5740 = !DILocation(line: 1143, column: 25, scope: !5737)
!5741 = !DILocation(line: 1143, column: 28, scope: !5737)
!5742 = !DILocation(line: 1143, column: 32, scope: !5737)
!5743 = !DILocation(line: 1143, column: 41, scope: !5737)
!5744 = !DILocation(line: 1143, column: 40, scope: !5737)
!5745 = !DILocation(line: 1143, column: 48, scope: !5737)
!5746 = !DILocation(line: 1143, column: 50, scope: !5737)
!5747 = !DILocation(line: 1143, column: 53, scope: !5737)
!5748 = !DILocation(line: 1143, column: 45, scope: !5737)
!5749 = !DILocation(line: 1143, column: 59, scope: !5737)
!5750 = !DILocation(line: 1143, column: 61, scope: !5737)
!5751 = !DILocation(line: 1143, column: 65, scope: !5737)
!5752 = !DILocation(line: 1143, column: 67, scope: !5737)
!5753 = !DILocation(line: 1143, column: 56, scope: !5737)
!5754 = !DILocation(line: 1143, column: 20, scope: !5737)
!5755 = !DILocation(line: 1144, column: 22, scope: !5737)
!5756 = !DILocation(line: 1144, column: 25, scope: !5737)
!5757 = !DILocation(line: 1144, column: 28, scope: !5737)
!5758 = !DILocation(line: 1144, column: 32, scope: !5737)
!5759 = !DILocation(line: 1144, column: 41, scope: !5737)
!5760 = !DILocation(line: 1144, column: 40, scope: !5737)
!5761 = !DILocation(line: 1144, column: 48, scope: !5737)
!5762 = !DILocation(line: 1144, column: 50, scope: !5737)
!5763 = !DILocation(line: 1144, column: 53, scope: !5737)
!5764 = !DILocation(line: 1144, column: 45, scope: !5737)
!5765 = !DILocation(line: 1144, column: 59, scope: !5737)
!5766 = !DILocation(line: 1144, column: 61, scope: !5737)
!5767 = !DILocation(line: 1144, column: 65, scope: !5737)
!5768 = !DILocation(line: 1144, column: 67, scope: !5737)
!5769 = !DILocation(line: 1144, column: 56, scope: !5737)
!5770 = !DILocation(line: 1144, column: 20, scope: !5737)
!5771 = !DILocation(line: 1146, column: 13, scope: !5737)
!5772 = !DILocation(line: 1146, column: 16, scope: !5737)
!5773 = !DILocation(line: 1146, column: 21, scope: !5737)
!5774 = !DILocation(line: 1146, column: 33, scope: !5737)
!5775 = !DILocation(line: 1146, column: 41, scope: !5737)
!5776 = !DILocation(line: 1146, column: 49, scope: !5737)
!5777 = !DILocation(line: 1147, column: 13, scope: !5737)
!5778 = !DILocation(line: 1147, column: 23, scope: !5737)
!5779 = !DILocation(line: 1149, column: 17, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 1149, column: 17)
!5781 = !DILocation(line: 1149, column: 20, scope: !5780)
!5782 = !DILocation(line: 1149, column: 23, scope: !5780)
!5783 = !DILocation(line: 1149, column: 17, scope: !5737)
!5784 = !DILocation(line: 1150, column: 46, scope: !5780)
!5785 = !DILocation(line: 1150, column: 49, scope: !5780)
!5786 = !DILocation(line: 1150, column: 66, scope: !5780)
!5787 = !DILocation(line: 1150, column: 22, scope: !5780)
!5788 = !DILocation(line: 1150, column: 20, scope: !5780)
!5789 = !DILocation(line: 1150, column: 17, scope: !5780)
!5790 = !DILocation(line: 1152, column: 22, scope: !5780)
!5791 = !DILocation(line: 1152, column: 25, scope: !5780)
!5792 = !DILocation(line: 1152, column: 32, scope: !5780)
!5793 = !DILocation(line: 1152, column: 43, scope: !5780)
!5794 = !DILocation(line: 1152, column: 51, scope: !5780)
!5795 = !DILocation(line: 1152, column: 54, scope: !5780)
!5796 = !DILocation(line: 1152, column: 73, scope: !5780)
!5797 = !DILocation(line: 1152, column: 80, scope: !5780)
!5798 = !DILocation(line: 1152, column: 83, scope: !5780)
!5799 = !DILocation(line: 1152, column: 104, scope: !5780)
!5800 = !DILocation(line: 1152, column: 20, scope: !5780)
!5801 = !DILocation(line: 1154, column: 66, scope: !5737)
!5802 = !DILocation(line: 1154, column: 13, scope: !5737)
!5803 = !DILocation(line: 1154, column: 16, scope: !5737)
!5804 = !DILocation(line: 1154, column: 19, scope: !5737)
!5805 = !DILocation(line: 1154, column: 25, scope: !5737)
!5806 = !DILocation(line: 1154, column: 54, scope: !5737)
!5807 = !DILocation(line: 1154, column: 53, scope: !5737)
!5808 = !DILocation(line: 1154, column: 57, scope: !5737)
!5809 = !DILocation(line: 1154, column: 59, scope: !5737)
!5810 = !DILocation(line: 1154, column: 56, scope: !5737)
!5811 = !DILocation(line: 1154, column: 40, scope: !5737)
!5812 = !DILocation(line: 1154, column: 64, scope: !5737)
!5813 = !DILocation(line: 1155, column: 17, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 1155, column: 17)
!5815 = !DILocation(line: 1155, column: 17, scope: !5737)
!5816 = !DILocation(line: 1157, column: 17, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 1156, column: 13)
!5818 = !DILocation(line: 1157, column: 20, scope: !5817)
!5819 = !DILocation(line: 1157, column: 28, scope: !5817)
!5820 = !DILocation(line: 1157, column: 38, scope: !5817)
!5821 = !DILocation(line: 1157, column: 41, scope: !5817)
!5822 = !DILocation(line: 1157, column: 45, scope: !5817)
!5823 = !DILocation(line: 1157, column: 56, scope: !5817)
!5824 = !DILocation(line: 1157, column: 55, scope: !5817)
!5825 = !DILocation(line: 1157, column: 59, scope: !5817)
!5826 = !DILocation(line: 1157, column: 61, scope: !5817)
!5827 = !DILocation(line: 1157, column: 58, scope: !5817)
!5828 = !DILocation(line: 1157, column: 66, scope: !5817)
!5829 = !DILocation(line: 1158, column: 17, scope: !5817)
!5830 = !DILocation(line: 1158, column: 20, scope: !5817)
!5831 = !DILocation(line: 1158, column: 27, scope: !5817)
!5832 = !DILocation(line: 1158, column: 40, scope: !5817)
!5833 = !DILocation(line: 1158, column: 48, scope: !5817)
!5834 = !DILocation(line: 1158, column: 51, scope: !5817)
!5835 = !DILocation(line: 1158, column: 73, scope: !5817)
!5836 = !DILocation(line: 1159, column: 17, scope: !5817)
!5837 = !DILocation(line: 1159, column: 20, scope: !5817)
!5838 = !DILocation(line: 1159, column: 25, scope: !5817)
!5839 = !DILocation(line: 1159, column: 38, scope: !5817)
!5840 = !DILocation(line: 1159, column: 46, scope: !5817)
!5841 = !DILocation(line: 1160, column: 13, scope: !5817)
!5842 = !DILocation(line: 1161, column: 9, scope: !5737)
!5843 = !DILocation(line: 1140, column: 36, scope: !5733)
!5844 = !DILocation(line: 1140, column: 9, scope: !5733)
!5845 = distinct !{!5845, !5735, !5846}
!5846 = !DILocation(line: 1161, column: 9, scope: !5729)
!5847 = !DILocation(line: 1163, column: 32, scope: !5335)
!5848 = !DILocation(line: 1163, column: 29, scope: !5335)
!5849 = !DILocation(line: 1163, column: 25, scope: !5335)
!5850 = !DILocation(line: 1163, column: 5, scope: !5335)
!5851 = !DILocation(line: 1163, column: 8, scope: !5335)
!5852 = !DILocation(line: 1163, column: 11, scope: !5335)
!5853 = !DILocation(line: 1163, column: 22, scope: !5335)
!5854 = !DILocation(line: 1164, column: 25, scope: !5335)
!5855 = !DILocation(line: 1164, column: 35, scope: !5335)
!5856 = !DILocation(line: 1164, column: 32, scope: !5335)
!5857 = !DILocation(line: 1164, column: 5, scope: !5335)
!5858 = !DILocation(line: 1164, column: 8, scope: !5335)
!5859 = !DILocation(line: 1164, column: 11, scope: !5335)
!5860 = !DILocation(line: 1164, column: 22, scope: !5335)
!5861 = !DILocation(line: 1165, column: 5, scope: !5335)
!5862 = !DILocation(line: 1165, column: 8, scope: !5335)
!5863 = !DILocation(line: 1165, column: 11, scope: !5335)
!5864 = !DILocation(line: 1165, column: 24, scope: !5335)
!5865 = !DILocation(line: 1166, column: 1, scope: !5335)
!5866 = distinct !DISubprogram(name: "x264_macroblock_encode_p4x4", scope: !3, file: !3, line: 1171, type: !2844, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!5867 = !DILocalVariable(name: "h", arg: 1, scope: !5866, file: !3, line: 1171, type: !228)
!5868 = !DILocation(line: 1171, column: 43, scope: !5866)
!5869 = !DILocalVariable(name: "i4", arg: 2, scope: !5866, file: !3, line: 1171, type: !195)
!5870 = !DILocation(line: 1171, column: 50, scope: !5866)
!5871 = !DILocalVariable(name: "i_qp", scope: !5866, file: !3, line: 1173, type: !195)
!5872 = !DILocation(line: 1173, column: 9, scope: !5866)
!5873 = !DILocation(line: 1173, column: 16, scope: !5866)
!5874 = !DILocation(line: 1173, column: 19, scope: !5866)
!5875 = !DILocation(line: 1173, column: 22, scope: !5866)
!5876 = !DILocalVariable(name: "p_fenc", scope: !5866, file: !3, line: 1174, type: !420)
!5877 = !DILocation(line: 1174, column: 14, scope: !5866)
!5878 = !DILocation(line: 1174, column: 24, scope: !5866)
!5879 = !DILocation(line: 1174, column: 27, scope: !5866)
!5880 = !DILocation(line: 1174, column: 30, scope: !5866)
!5881 = !DILocation(line: 1174, column: 34, scope: !5866)
!5882 = !DILocation(line: 1174, column: 62, scope: !5866)
!5883 = !DILocation(line: 1174, column: 44, scope: !5866)
!5884 = !DILocalVariable(name: "p_fdec", scope: !5866, file: !3, line: 1175, type: !420)
!5885 = !DILocation(line: 1175, column: 14, scope: !5866)
!5886 = !DILocation(line: 1175, column: 24, scope: !5866)
!5887 = !DILocation(line: 1175, column: 27, scope: !5866)
!5888 = !DILocation(line: 1175, column: 30, scope: !5866)
!5889 = !DILocation(line: 1175, column: 34, scope: !5866)
!5890 = !DILocation(line: 1175, column: 62, scope: !5866)
!5891 = !DILocation(line: 1175, column: 44, scope: !5866)
!5892 = !DILocalVariable(name: "nz", scope: !5866, file: !3, line: 1176, type: !195)
!5893 = !DILocation(line: 1176, column: 9, scope: !5866)
!5894 = !DILocation(line: 1180, column: 9, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 1180, column: 9)
!5896 = !DILocation(line: 1180, column: 12, scope: !5895)
!5897 = !DILocation(line: 1180, column: 15, scope: !5895)
!5898 = !DILocation(line: 1180, column: 9, scope: !5866)
!5899 = !DILocation(line: 1182, column: 14, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1181, column: 5)
!5901 = !DILocation(line: 1182, column: 17, scope: !5900)
!5902 = !DILocation(line: 1182, column: 25, scope: !5900)
!5903 = !DILocation(line: 1182, column: 34, scope: !5900)
!5904 = !DILocation(line: 1182, column: 37, scope: !5900)
!5905 = !DILocation(line: 1182, column: 41, scope: !5900)
!5906 = !DILocation(line: 1182, column: 49, scope: !5900)
!5907 = !DILocation(line: 1182, column: 54, scope: !5900)
!5908 = !DILocation(line: 1182, column: 62, scope: !5900)
!5909 = !DILocation(line: 1182, column: 12, scope: !5900)
!5910 = !DILocation(line: 1183, column: 54, scope: !5900)
!5911 = !DILocation(line: 1183, column: 9, scope: !5900)
!5912 = !DILocation(line: 1183, column: 12, scope: !5900)
!5913 = !DILocation(line: 1183, column: 15, scope: !5900)
!5914 = !DILocation(line: 1183, column: 21, scope: !5900)
!5915 = !DILocation(line: 1183, column: 47, scope: !5900)
!5916 = !DILocation(line: 1183, column: 36, scope: !5900)
!5917 = !DILocation(line: 1183, column: 52, scope: !5900)
!5918 = !DILocation(line: 1184, column: 5, scope: !5900)
!5919 = !DILocalVariable(name: "dct4x4", scope: !5920, file: !3, line: 1187, type: !875, align: 128)
!5920 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1186, column: 5)
!5921 = !DILocation(line: 1187, column: 9, scope: !5920)
!5922 = !DILocation(line: 1188, column: 9, scope: !5920)
!5923 = !DILocation(line: 1188, column: 12, scope: !5920)
!5924 = !DILocation(line: 1188, column: 17, scope: !5920)
!5925 = !DILocation(line: 1188, column: 29, scope: !5920)
!5926 = !DILocation(line: 1188, column: 37, scope: !5920)
!5927 = !DILocation(line: 1188, column: 45, scope: !5920)
!5928 = !DILocation(line: 1189, column: 30, scope: !5920)
!5929 = !DILocation(line: 1189, column: 33, scope: !5920)
!5930 = !DILocation(line: 1189, column: 41, scope: !5920)
!5931 = !DILocation(line: 1189, column: 64, scope: !5920)
!5932 = !DILocation(line: 1189, column: 14, scope: !5920)
!5933 = !DILocation(line: 1189, column: 12, scope: !5920)
!5934 = !DILocation(line: 1190, column: 54, scope: !5920)
!5935 = !DILocation(line: 1190, column: 9, scope: !5920)
!5936 = !DILocation(line: 1190, column: 12, scope: !5920)
!5937 = !DILocation(line: 1190, column: 15, scope: !5920)
!5938 = !DILocation(line: 1190, column: 21, scope: !5920)
!5939 = !DILocation(line: 1190, column: 47, scope: !5920)
!5940 = !DILocation(line: 1190, column: 36, scope: !5920)
!5941 = !DILocation(line: 1190, column: 52, scope: !5920)
!5942 = !DILocation(line: 1191, column: 13, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1191, column: 13)
!5944 = !DILocation(line: 1191, column: 13, scope: !5920)
!5945 = !DILocation(line: 1193, column: 13, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 1192, column: 9)
!5947 = !DILocation(line: 1193, column: 16, scope: !5946)
!5948 = !DILocation(line: 1193, column: 24, scope: !5946)
!5949 = !DILocation(line: 1193, column: 34, scope: !5946)
!5950 = !DILocation(line: 1193, column: 37, scope: !5946)
!5951 = !DILocation(line: 1193, column: 41, scope: !5946)
!5952 = !DILocation(line: 1193, column: 49, scope: !5946)
!5953 = !DILocation(line: 1193, column: 54, scope: !5946)
!5954 = !DILocation(line: 1194, column: 13, scope: !5946)
!5955 = !DILocation(line: 1194, column: 16, scope: !5946)
!5956 = !DILocation(line: 1194, column: 23, scope: !5946)
!5957 = !DILocation(line: 1194, column: 36, scope: !5946)
!5958 = !DILocation(line: 1194, column: 44, scope: !5946)
!5959 = !DILocation(line: 1194, column: 47, scope: !5946)
!5960 = !DILocation(line: 1194, column: 69, scope: !5946)
!5961 = !DILocation(line: 1195, column: 13, scope: !5946)
!5962 = !DILocation(line: 1195, column: 16, scope: !5946)
!5963 = !DILocation(line: 1195, column: 21, scope: !5946)
!5964 = !DILocation(line: 1195, column: 34, scope: !5946)
!5965 = !DILocation(line: 1195, column: 42, scope: !5946)
!5966 = !DILocation(line: 1196, column: 9, scope: !5946)
!5967 = !DILocation(line: 1198, column: 1, scope: !5866)
!5968 = distinct !DISubprogram(name: "idct_dequant_round_2x2_dc", scope: !3, file: !3, line: 265, type: !5969, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1509)
!5969 = !DISubroutineType(types: !5970)
!5970 = !{!195, !933, !933, !576, !195}
!5971 = !DILocalVariable(name: "ref", arg: 1, scope: !5968, file: !3, line: 265, type: !933)
!5972 = !DILocation(line: 265, column: 54, scope: !5968)
!5973 = !DILocalVariable(name: "dct", arg: 2, scope: !5968, file: !3, line: 265, type: !933)
!5974 = !DILocation(line: 265, column: 70, scope: !5968)
!5975 = !DILocalVariable(name: "dequant_mf", arg: 3, scope: !5968, file: !3, line: 265, type: !576)
!5976 = !DILocation(line: 265, column: 82, scope: !5968)
!5977 = !DILocalVariable(name: "i_qp", arg: 4, scope: !5968, file: !3, line: 265, type: !195)
!5978 = !DILocation(line: 265, column: 105, scope: !5968)
!5979 = !DILocalVariable(name: "out", scope: !5968, file: !3, line: 267, type: !1066)
!5980 = !DILocation(line: 267, column: 13, scope: !5968)
!5981 = !DILocation(line: 268, column: 30, scope: !5968)
!5982 = !DILocation(line: 268, column: 35, scope: !5968)
!5983 = !DILocation(line: 268, column: 40, scope: !5968)
!5984 = !DILocation(line: 268, column: 52, scope: !5968)
!5985 = !DILocation(line: 268, column: 5, scope: !5968)
!5986 = !DILocation(line: 269, column: 14, scope: !5968)
!5987 = !DILocation(line: 269, column: 24, scope: !5968)
!5988 = !DILocation(line: 269, column: 30, scope: !5968)
!5989 = !DILocation(line: 269, column: 21, scope: !5968)
!5990 = !DILocation(line: 270, column: 14, scope: !5968)
!5991 = !DILocation(line: 270, column: 24, scope: !5968)
!5992 = !DILocation(line: 270, column: 30, scope: !5968)
!5993 = !DILocation(line: 270, column: 21, scope: !5968)
!5994 = !DILocation(line: 270, column: 11, scope: !5968)
!5995 = !DILocation(line: 271, column: 14, scope: !5968)
!5996 = !DILocation(line: 271, column: 24, scope: !5968)
!5997 = !DILocation(line: 271, column: 30, scope: !5968)
!5998 = !DILocation(line: 271, column: 21, scope: !5968)
!5999 = !DILocation(line: 271, column: 11, scope: !5968)
!6000 = !DILocation(line: 272, column: 14, scope: !5968)
!6001 = !DILocation(line: 272, column: 24, scope: !5968)
!6002 = !DILocation(line: 272, column: 30, scope: !5968)
!6003 = !DILocation(line: 272, column: 21, scope: !5968)
!6004 = !DILocation(line: 272, column: 11, scope: !5968)
!6005 = !DILocation(line: 272, column: 37, scope: !5968)
!6006 = !DILocation(line: 269, column: 5, scope: !5968)
